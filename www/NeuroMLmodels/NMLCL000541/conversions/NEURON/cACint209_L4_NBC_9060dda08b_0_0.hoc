// Cell: cACint209_L4_NBC_9060dda08b_0_0
/*
{
  "id" : "cACint209_L4_NBC_9060dda08b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.014127, 6.44634, 0.837743, 3.02315", "-0.0365024, 5.75805, 0.734631, 5.53989", "-0.0871319, 5.06975, 0.63152, 7.90085", "-0.137761, 4.38145, 0.528408, 9.81426", "-0.188391, 3.69316, 0.425297, 11.1517", "-0.23902, 3.00486, 0.322185, 12.173", "-0.28965, 2.31656, 0.219074, 12.615", "-0.340279, 1.62826, 0.115962, 12.9535", "-0.390908, 0.939968, 0.0128508, 12.9803", "-0.441538, 0.251671, -0.0902607, 13.0342", "-0.492167, -0.436626, -0.193372, 13.0362", "-0.542797, -1.12492, -0.296484, 12.9524", "-0.593426, -1.81322, -0.399595, 12.7739", "-0.644056, -2.50152, -0.502707, 12.3636", "-0.694685, -3.18981, -0.605818, 11.652", "-0.745315, -3.87811, -0.70893, 10.8548", "-0.795944, -4.56641, -0.812041, 9.95893", "-0.846573, -5.2547, -0.915153, 8.94982", "-0.897203, -5.943, -1.01826, 7.49826", "-0.947832, -6.6313, -1.12138, 5.61766", "-0.998462, -7.3196, -1.22449, 3.06786" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.690881, 5.60035, 2.74524, 0.59", "0.657121, 5.95325, 2.85491, 0.59", "0.57419, 6.38004, 2.94796, 0.59", "0.407719, 7.22114, 3.05309, 0.59", "0.254592, 8.11236, 3.10748, 0.74", "0.187787, 8.64739, 3.11965, 0.81", "0.143053, 9.19552, 3.1192, 0.74", "0.109593, 9.96864, 3.08769, 0.59", "0.113756, 10.9164, 2.99748, 0.59", "0.187522, 11.6091, 2.89518, 1.33", "0.330152, 12.2767, 2.77458, 1.47", "0.45956, 12.6986, 2.70275, 1.77", "0.596439, 13.0783, 2.64628, 1.77", "0.814717, 13.66, 2.60067, 1.47", "1.17754, 14.7035, 2.60076, 0.74", "1.41408, 15.4969, 2.65918, 0.74", "1.62805, 16.3823, 2.78373, 0.66", "1.75649, 17.1012, 2.93485, 0.66", "1.88575, 18.2688, 3.25198, 1.47", "1.92296, 18.9809, 3.47972, 2.14", "1.91868, 19.5766, 3.68836, 2.36", "1.89333, 20.1475, 3.89298, 2.5", "1.86403, 20.7778, 4.10927, 1.92", "1.8389, 22.0359, 4.46687, 0.66", "1.84572, 22.524, 4.56668, 0.88", "1.86565, 23.0784, 4.64294, 0.88", "1.89516, 23.6255, 4.68441, 0.59", "1.97278, 24.9736, 4.68454, 0.66", "2.0238, 25.9312, 4.61414, 0.88", "2.04563, 26.6708, 4.51851, 0.88", "2.04533, 27.3776, 4.41821, 0.66", "2.0209, 27.927, 4.29858, 0.66", "1.91812, 29.033, 4.06109, 1.18", "1.80228, 29.8075, 3.90865, 1.47", "1.71381, 30.2665, 3.84609, 1.69", "1.56207, 31.008, 3.80709, 1.03", "1.27924, 32.5507, 3.86151, 0.66", "1.05922, 34.0038, 3.98157, 1.03", "0.990804, 34.5808, 4.07569, 1.25", "0.945089, 35.1257, 4.18829, 1.25", "0.894059, 35.9701, 4.37864, 0.37", "0.877472, 36.4552, 4.49691, 0.37", "0.877456, 37.3639, 4.78436, 1.77", "0.906887, 38.2502, 4.92814, 2.06", "0.928804, 38.6134, 4.97426, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.78088, -5.1519, -12.2548, 1.03", "2.7049, -5.10222, -12.3798, 0.81", "3.09787, -5.06928, -12.4929, 0.81", "3.95858, -4.99864, -12.8995, 0.59", "5.04543, -4.89664, -13.5023, 1.25", "5.40061, -4.85647, -13.7144, 1.47", "5.72764, -4.80898, -13.9266, 1.47", "6.95321, -4.58044, -14.9028, 0.59", "7.93491, -4.31631, -16.0205, 1.62", "8.26649, -4.18655, -16.5456, 2.06", "8.54652, -4.04512, -17.1335, 2.36", "8.82073, -3.85631, -17.8134, 2.5", "9.39263, -3.366, -19.3288, 2.06", "10.2856, -2.51472, -21.7646, 1.62", "11.2127, -1.63296, -24.2148, 1.77", "12.199, -0.779923, -26.6416, 0.81", "12.9318, -0.261988, -28.2757, 0.74", "14.1106, 0.40288, -30.6261, 1.92", "14.3868, 0.531477, -31.1288, 1.55", "14.8455, 0.705851, -31.8743, 1.18", "15.6635, 0.930495, -33.071, 1.92", "17.0114, 1.1549, -34.8773, 1.47", "18.6465, 1.22851, -37.1111, 0.96", "20.2465, 1.21499, -39.5381, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.26912, -5.85915, 6.05524, 1.25", "-1.499, -7.10777, 6.28526, 0.74", "-1.69392, -8.20396, 6.40432, 0.96", "-1.86742, -9.16455, 6.4742, 1.62", "-2.08289, -10.3493, 6.65667, 1.62", "-2.23625, -11.1983, 6.87761, 1.18", "-2.41033, -12.2025, 7.32542, 0.59", "-2.56115, -13.1324, 8.09476, 0.52", "-2.58927, -13.4501, 8.47816, 0.74", "-2.5822, -14.511, 10.3957, 0.74", "-2.47237, -15.1705, 12.3001, 1.4", "-2.21382, -15.742, 15.3233, 2.5", "-1.89784, -15.8654, 18.6932, 0.96", "-1.75094, -15.7173, 20.0801, 0.59", "-1.53947, -15.3063, 21.5239, 0.96", "-1.32846, -14.691, 22.7571, 1.47", "-1.17984, -14.0496, 23.7755, 1.33", "-1.07496, -13.0846, 25.156, 0.88", "-1.11643, -12.4952, 26.0594, 0.59", "-1.40967, -11.5278, 27.8317, 1.62", "-2.04533, -10.3152, 30.5821, 1.11", "-2.5221, -9.7344, 32.4113, 0.52", "-2.87894, -9.5083, 33.7203, 0.52", "-3.21994, -9.50592, 34.9381, 0.44", "-3.54244, -9.75354, 36.094, 0.29", "-3.72075, -10.2692, 37.1043, 0.52", "-3.56255, -10.783, 37.9593, 0.96", "-3.34052, -11.0682, 38.5854, 0.59", "-3.01948, -11.3749, 39.4903, 0.37", "-2.58213, -11.845, 40.9822, 0.37", "-2.20954, -12.4231, 42.8636, 1.4", "-1.9342, -13.4183, 46.0286, 0.66", "-1.90508, -13.7404, 47.0055, 0.52", "-1.9318, -14.1381, 48.272, 0.52", "-2.06388, -14.6647, 50.2599, 0.81", "-2.2055, -14.9414, 51.6567, 1.18", "-2.46517, -15.145, 53.3591, 0.74", "-2.69414, -15.1865, 54.5333, 0.59", "-2.98248, -15.1072, 55.948, 0.37", "-3.3007, -14.8628, 57.8769, 0.81", "-3.53568, -14.542, 59.5266, 0.66", "-3.68797, -14.2834, 60.8823, 0.52", "-3.787, -14.0619, 62.18, 0.74", "-3.86365, -13.809, 64.0973, 1.18", "-3.86407, -13.7525, 65.4674, 0.52", "-3.83528, -13.8358, 66.5263, 0.52", "-3.72933, -14.1518, 68.1973, 0.52", "-3.6079, -14.4125, 69.1228, 0.37", "-3.08351, -15.0758, 71.5918, 0.22", "-2.84582, -15.2453, 72.4991, 0.37", "-2.73192, -15.3011, 73.4096, 0.52", "-2.76357, -15.2688, 74.0285, 0.22", "-3.11345, -15.0881, 74.8918, 0.22", "-1.97482, -17.5417, 85.2535, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.580881, -5.6029, -10.5048, 1.11", "0.463481, -6.57011, -10.5954, 1.11", "0.257095, -8.27041, -10.7549, 0.88", "0.162524, -9.04952, -10.8279, 1.55", "0.0591341, -9.90131, -10.9078, 1.99", "-0.0662457, -10.9342, -11.0047, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "1.06088, 3.16085, -13.4448, 0.53", "1.31443, 3.68501, -13.7802, 0.53", "1.57595, 4.31942, -14.1459, 0.29", "2.20419, 6.11549, -15.0156, 1.11", "2.67378, 7.62714, -15.7056, 1.77", "3.13313, 9.22666, -16.4186, 1.03", "3.39393, 10.2184, -16.8387, 0.22", "3.69731, 11.5745, -17.3559, 0.22", "3.98122, 13.3095, -17.9303, 1.4", "4.06848, 14.2031, -18.1568, 1.77", "4.11218, 14.9933, -18.3201, 2.06", "4.13425, 16.1461, -18.5526, 0.96", "4.10001, 17.9551, -18.9573, 0.22", "4.02949, 19.3139, -19.2773, 0.22", "3.91846, 20.6796, -19.6194, 1.77", "3.84749, 21.3775, -19.8023, 2.06", "3.54505, 23.6362, -20.4491, 0.22", "3.37508, 24.7102, -20.7978, 0.22", "3.19824, 25.7564, -21.1565, 1.33", "3.1375, 26.0898, -21.2688, 1.47", "2.93498, 27.1115, -21.6234, 0.88", "2.56894, 28.8358, -22.1763, 0.15", "2.23829, 30.3156, -22.593, 0.15", "1.89833, 31.7513, -22.9501, 1.99", "1.65651, 32.6427, -23.1684, 2.28", "1.43796, 33.3724, -23.3351, 1.55", "0.921565, 34.9803, -23.6708, 0.22", "0.545395, 36.1289, -23.9934, 0.15", "0.130696, 37.4336, -24.462, 0.15", "-0.259163, 38.8185, -25.0835, 0.15", "-0.68474, 40.5987, -26.0337, 1.69", "-0.741144, 40.8692, -26.2108, 1.99", "-1.14236, 43.1168, -28.0628, 0.22", "-1.29581, 44.1187, -29.0372, 0.22", "-1.38641, 45.1054, -30.1237, 1.25", "-1.41783, 45.7566, -30.893, 1.55", "-1.48021, 47.0602, -32.6518, 0.59", "-1.56666, 47.8641, -33.8578, 0.81", "-1.727, 48.6774, -35.1794, 0.22", "-1.87951, 49.1882, -36.0752, 0.22", "-2.10485, 49.6955, -36.9974, 1.18", "-2.58576, 50.5266, -38.4922, 1.55", "-3.52201, 51.7756, -40.6793, 0.22", "-3.75085, 52.028, -41.1118, 0.81", "-4.17336, 52.4221, -41.7768, 0.81", "-5.16805, 53.238, -43.1511, 0.15", "-5.77311, 53.7071, -43.9732, 0.15", "-6.12923, 53.9776, -44.4399, 0.74", "-6.43849, 54.194, -44.8266, 0.74", "-7.51878, 54.9753, -46.315, 0.15", "-7.95533, 55.3081, -46.9635, 1.33", "-8.54917, 55.8915, -48.109, 1.33", "-9.33025, 56.8455, -49.9129, 0.22", "-9.65208, 57.34, -50.7855, 0.88", "-10.4409, 58.7772, -53.1689, 0.15", "-10.6949, 59.3461, -54.055, 0.74", "-11.7529, 62.0067, -58.0399, 0.15", "-11.9925, 62.6996, -59.0382, 0.44", "-12.3833, 64.1708, -61.1282, 0.15", "-12.4596, 64.5379, -61.652, 0.59", "-12.6061, 65.4047, -62.8553, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.01088, 3.8476, -7.13476, 0.66", "3.01088, 3.8476, -7.13476, 0.66", "3.5747, 4.73793, -7.13476, 0.66", "4.20345, 5.87307, -7.123, 0.59", "5.01267, 7.60196, -7.09824, 0.59", "5.57271, 8.97513, -7.07717, 1.99", "5.95193, 10.0621, -7.0716, 2.28", "6.19287, 10.9455, -7.08716, 2.43", "6.47081, 12.4271, -7.15198, 2.14", "6.72761, 14.6646, -7.32046, 1.18", "6.82058, 15.8637, -7.43812, 1.03", "6.95239, 17.3108, -7.61846, 0.74", "7.12978, 18.7872, -7.85815, 0.74", "7.42987, 20.5227, -8.20082, 1.25", "7.73386, 21.6453, -8.49405, 1.25", "8.26381, 23.0645, -8.97336, 1.25", "8.80712, 24.2627, -9.33311, 0.81", "9.39857, 25.4262, -9.63488, 0.81", "10.2373, 26.9965, -9.98258, 1.99", "11.1872, 28.7259, -10.3446, 2.8", "11.7907, 29.8483, -10.5678, 3.02", "13.3167, 32.9436, -11.3553, 0.37", "13.748, 33.9456, -11.6405, 0.88", "14.0559, 34.8082, -11.9148, 1.11", "14.3577, 35.8427, -12.2872, 0.96", "14.6943, 37.3409, -12.8899, 0.52", "15.1729, 39.6001, -13.9562, 0.66", "15.2986, 40.2505, -14.3731, 0.66", "15.5586, 41.7002, -15.3543, 1.62", "15.6878, 42.5591, -15.9485, 2.58", "15.7714, 43.4588, -16.5434, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.55088, 1.3056, 7.74524, 1.03", "4.92139, 2.16401, 7.91295, 1.03", "5.9386, 2.85838, 8.32621, 0.88", "7.01308, 3.5899, 9.15736, 1.18", "8.05495, 4.29923, 9.9633, 1.18", "8.72004, 4.75204, 10.4778, 1.25", "9.22547, 5.09615, 10.8688, 1.55", "11.2424, 6.63677, 12.9607, 1.77", "12.775, 7.83727, 15.0492, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.60088, 3.79635, 2.18524, 0.52", "4.60088, 3.79635, 2.18524, 0.52", "5.20009, 4.18323, 2.18416, 0.52", "5.95753, 4.64925, 2.18256, 0.37", "6.56904, 5.01667, 2.15553, 0.29", "7.12937, 5.33177, 2.12107, 0.29", "7.52724, 5.54185, 2.05384, 0.52", "8.07164, 5.79935, 1.909, 0.37", "9.06727, 6.26514, 1.57976, 1.25", "9.82709, 6.63754, 1.29149, 1.77", "10.4729, 6.99175, 1.019, 1.99", "11.9294, 7.93376, 0.361685, 0.44", "12.9284, 8.64574, -0.139, 0.29", "13.5144, 9.08081, -0.440624, 0.96", "13.8994, 9.37114, -0.638246, 1.25", "14.2717, 9.64924, -0.813059, 1.25", "15.1936, 10.3844, -1.22302, 0.29", "15.9721, 11.0538, -1.52717, 0.29", "16.8439, 11.7861, -1.82463, 0.96", "17.5869, 12.3401, -2.02625, 1.18", "18.4837, 12.9589, -2.19082, 0.29", "19.0166, 13.2889, -2.24869, 0.29", "19.8651, 13.7666, -2.27527, 0.29", "21.1195, 14.4514, -2.17686, 0.96", "21.8559, 14.8448, -2.06974, 1.47", "22.4331, 15.1356, -1.95338, 1.69", "23.3813, 15.6011, -1.73347, 0.74", "23.871, 15.8501, -1.61701, 0.29", "25.1349, 16.5479, -1.3727, 1.03", "25.7094, 16.9123, -1.32853, 1.11", "26.4089, 17.3948, -1.35103, 0.59", "27.1826, 17.9514, -1.46548, 0.29", "27.9067, 18.4925, -1.64148, 0.29", "28.7759, 19.1293, -1.97156, 0.29", "29.5283, 19.6522, -2.37514, 0.29", "30.3583, 20.16, -2.85514, 1.55", "30.9574, 20.4942, -3.21593, 2.14", "31.227, 20.6325, -3.37248, 2.43", "31.7365, 20.8938, -3.63828, 2.06", "32.6696, 21.4334, -4.03623, 1.03", "33.4013, 21.9368, -4.33915, 0.44", "34.1814, 22.5711, -4.66066, 0.44", "34.6093, 22.965, -4.82325, 0.88", "35.0774, 23.4055, -5.01017, 0.88", "35.5154, 23.8267, -5.18649, 0.88", "36.3565, 24.6498, -5.53448, 0.37", "36.8789, 25.176, -5.7545, 0.37", "37.4692, 25.8025, -6.01155, 0.22", "38.0564, 26.4882, -6.27654, 0.22", "38.9369, 27.5769, -6.66143, 1.25", "39.2639, 28.0107, -6.79036, 1.69", "39.7134, 28.6179, -6.93697, 1.25", "40.6779, 29.8777, -7.22306, 0.29", "41.3722, 30.7361, -7.36444, 0.96", "41.8027, 31.2384, -7.41391, 0.74", "42.5047, 31.9296, -7.45404, 0.22", "42.9959, 32.3208, -7.45771, 0.22", "43.6592, 32.757, -7.44698, 0.22", "44.8456, 33.4758, -7.32951, 1.69", "45.3779, 33.8061, -7.261, 1.99", "45.8283, 34.1253, -7.19408, 2.21", "47.2754, 35.2459, -6.96998, 0.22", "47.9296, 35.8105, -6.86995, 0.22", "49.052, 36.8524, -6.7047, 1.03", "49.5729, 37.3625, -6.64086, 1.03", "50.6244, 38.4256, -6.52951, 0.22", "50.9083, 38.7258, -6.50036, 0.22", "51.6041, 39.4672, -6.42623, 1.03", "51.9242, 39.7937, -6.39629, 1.18", "52.4459, 40.2841, -6.37486, 0.59", "53.1628, 40.9245, -6.33093, 0.22", "53.5846, 41.2926, -6.29748, 0.22", "54.198, 41.831, -6.24434, 0.22", "55.0407, 42.5653, -6.17168, 1.47", "55.4094, 42.8888, -6.15803, 1.84", "56.1654, 43.5696, -6.15615, 1.4", "57.642, 44.9125, -6.20359, 0.22", "58.212, 45.4459, -6.25903, 0.66", "58.5242, 45.7469, -6.30554, 0.66", "59.364, 46.5918, -6.46066, 0.22", "59.6795, 46.9321, -6.52328, 0.22", "60.0096, 47.3084, -6.59371, 0.22", "60.918, 48.4313, -6.79033, 1.77", "61.31, 48.9733, -6.86123, 2.21", "61.5034, 49.2639, -6.86848, 2.21", "62.5394, 50.9287, -6.76336, 0.22", "62.6772, 51.1706, -6.74063, 0.22", "63.064, 51.947, -6.646, 0.22", "63.5285, 53.0327, -6.48808, 0.22", "64.043, 54.4054, -6.28381, 1.62", "64.4133, 55.418, -6.13256, 2.06", "64.7089, 56.2431, -6.01075, 1.4", "65.1382, 57.3828, -5.86028, 0.22", "65.4316, 58.1053, -5.78141, 0.37", "65.6518, 58.6108, -5.74669, 0.44", "66.0972, 59.64, -5.73069, 0.22", "66.4577, 60.4809, -5.71954, 0.88", "66.6328, 60.8719, -5.71565, 1.11", "66.969, 61.611, -5.7111, 0.88", "67.5472, 62.8927, -5.70318, 0.29", "67.7973, 63.5484, -5.67668, 0.37", "68.027, 64.3147, -5.62778, 0.37", "68.3437, 65.5244, -5.54244, 1.99", "68.4877, 66.1029, -5.49959, 2.73", "68.6331, 66.7082, -5.45428, 2.36", "69.1775, 68.868, -5.30267, 0.22", "69.3382, 69.4746, -5.26663, 0.52", "69.6303, 70.5095, -5.19277, 0.22", "69.8484, 71.2592, -5.13404, 1.18", "70.0476, 71.8648, -5.08649, 1.18", "70.4804, 72.9156, -5.00579, 0.22", "70.826, 73.618, -4.94184, 0.22", "71.2838, 74.544, -4.81282, 1.33", "71.4874, 74.9694, -4.73689, 1.69", "71.7962, 75.6264, -4.6065, 0.96", "72.4501, 77.0238, -4.31218, 0.22", "72.7269, 77.6222, -4.18525, 0.22", "73.5026, 79.2431, -3.82281, 2.28", "73.762, 79.763, -3.67948, 2.58", "74.9005, 81.888, -2.96882, 0.37", "75.1053, 82.2466, -2.83008, 0.81", "75.4343, 82.7597, -2.60436, 0.81", "76.2232, 83.7841, -2.11059, 0.22", "77.2672, 84.8151, -1.46865, 0.22", "77.6929, 85.1185, -1.22574, 0.96", "78.095, 85.3096, -1.00684, 0.96", "78.8553, 85.6123, -0.608784, 0.22", "79.3944, 85.8074, -0.320651, 0.22", "80.0623, 86.0736, 0.0740908, 0.66", "80.9916, 86.4951, 0.709847, 0.22", "81.4237, 86.7113, 1.07504, 0.22", "82.7857, 87.4864, 2.40775, 1.99", "83.4336, 87.9008, 3.09822, 2.36", "84.7963, 88.9413, 4.73132, 0.22", "85.5447, 89.5979, 5.69023, 0.88", "86.5508, 90.5335, 7.027, 0.22", "87.4601, 91.3916, 8.23302, 1.4", "87.8022, 91.7286, 8.68802, 1.99", "89.0823, 93.0272, 10.2472, 0.15", "89.3865, 93.3564, 10.5745, 0.15", "89.8371, 93.8719, 10.9969, 0.15", "90.6602, 94.8553, 11.6677, 1.47", "90.9195, 95.1653, 11.8515, 1.47", "91.8335, 96.2548, 12.4116, 0.22", "92.4155, 96.9396, 12.6836, 0.29", "93.1236, 97.8413, 13.0337, 1.33", "93.4216, 98.2609, 13.2126, 1.47", "94.0062, 99.0133, 13.6552, 0.22", "94.5112, 99.4468, 14.3938, 0.22", "94.9547, 99.7035, 15.1663, 0.59", "95.7288, 100.003, 16.5654, 0.22", "96.6362, 100.201, 18.254, 1.55", "97.7334, 100.261, 20.4258, 2.14", "100.888, 99.8951, 27.1303, 0.81", "101.186, 99.8105, 27.8221, 0.81", "101.512, 99.6438, 28.6412, 0.44", "101.865, 99.3733, 29.5582, 0.29", "102.594, 98.6379, 31.4308, 0.66", "102.821, 98.3644, 31.9975, 0.29", "103.091, 97.9802, 32.5784, 0.29", "103.689, 97.3385, 33.8968, 0.81", "104.051, 97.1053, 34.6753, 0.81", "104.378, 96.9955, 35.3146, 0.44", "105.1, 96.8496, 36.5872, 0.44", "106.024, 96.7431, 38.1503, 0.96", "106.717, 96.7114, 39.2812, 0.96", "107.674, 96.7938, 40.9149, 1.4", "108.365, 96.904, 42.2617, 1.62", "117.005, 102.363, 45.0063, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999969881875084,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.998462, -7.3196, -1.22449, 0.502656", "-2.09885, -22.2792, -1.22449, 0.502656", "-3.19924, -37.2388, -1.22449, 0.502656" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "0.928804, 38.6134, 4.97426, 0.52", "1.41357, 41.2817, 3.02978, 0.52", "1.57459, 42.1679, 2.3839, 0.66", "1.74058, 43.0816, 1.71807, 0.81", "1.88859, 43.8962, 1.12442, 1.33", "1.99191, 44.4649, 0.709954, 1.62", "2.05498, 44.8121, 0.456999, 1.62" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.928804, 38.6134, 4.97426, 0.37", "-0.995574, 39.5443, 5.81639, 0.37", "-2.07036, 40.1731, 6.29135, 0.29", "-3.01676, 40.8204, 6.70382, 0.29", "-3.59863, 41.2721, 6.95875, 0.29", "-4.0961, 41.7059, 7.17872, 0.29", "-4.81728, 42.4198, 7.4819, 0.81", "-5.49063, 43.2135, 7.70399, 1.03", "-5.91944, 43.8562, 7.83067, 1.33", "-6.26101, 44.4424, 7.92559, 1.33", "-6.84917, 45.4841, 8.08856, 0.96", "-7.45069, 46.5122, 8.23966, 0.52", "-7.90452, 47.2896, 8.34797, 0.29", "-8.42212, 48.2489, 8.50043, 0.88", "-8.73708, 48.9012, 8.60958, 1.11", "-9.08851, 49.796, 8.73636, 0.59", "-9.39752, 50.8182, 8.84609, 0.37", "-9.56317, 51.5894, 8.90903, 0.37", "-9.69513, 52.7797, 9.01001, 0.81", "-9.7366, 53.8321, 9.08813, 0.81", "-9.74649, 55.1313, 9.16763, 1.47", "-9.74768, 55.8471, 9.19553, 1.55", "-9.7667, 56.6617, 9.24834, 0.88", "-9.87772, 58.33, 9.43984, 0.44", "-9.97055, 59.2008, 9.60582, 0.37", "-10.0575, 59.8649, 9.81949, 0.37", "-10.1735, 60.7889, 10.2809, 0.29", "-10.2278, 61.7099, 10.9174, 0.44", "-10.2119, 62.3039, 11.4392, 0.59", "-10.1408, 62.8864, 12.051, 0.44", "-9.96397, 63.7719, 12.9844, 0.88", "-9.63821, 64.9022, 14.1409, 1.25", "-9.15915, 66.1722, 15.3776, 1.84", "-8.70939, 67.2308, 16.3446, 2.36", "-8.45759, 67.8095, 16.8294, 2.36", "-7.74474, 69.4535, 18.0871, 0.29", "-7.38778, 70.2636, 18.6496, 0.29", "-6.72498, 71.828, 19.5962, 0.88", "-6.13415, 73.282, 20.4025, 1.4", "-5.8326, 74.0303, 20.7982, 1.92", "-5.6057, 74.5905, 21.1016, 2.14", "-5.49208, 74.8612, 21.2758, 2.36", "-5.26352, 75.5146, 21.7094, 2.36", "-4.76444, 77.2395, 22.812, 1.18" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.0662457, -10.9342, -11.0047, 0.96", "-0.142519, -11.8917, -10.9482, 0.96", "-0.21239, -12.8099, -10.9128, 0.29", "-0.269473, -13.56, -10.8839, 0.81", "-0.296028, -13.9089, -10.8704, 1.62", "-0.343679, -14.5351, -10.8462, 1.92", "-0.379079, -15.0003, -10.8283, 2.06", "-0.449641, -15.6093, -10.8626, 1.69" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.0662457, -10.9342, -11.0047, 0.29", "0.900329, -11.9506, -11.4413, 0.29", "1.46593, -12.6774, -11.7139, 0.96", "1.62273, -12.9102, -11.7943, 0.96", "2.13914, -13.8336, -12.1371, 0.22", "2.62903, -14.8677, -12.5708, 1.11", "2.94731, -15.5968, -12.891, 1.11", "3.15723, -16.2131, -13.1517, 1.11", "3.28393, -16.623, -13.3321, 0.88", "3.6109, -17.6519, -13.7879, 0.37", "3.91153, -18.4423, -14.1548, 0.29", "4.08604, -18.7649, -14.3236, 0.44", "4.46094, -19.2964, -14.6345, 0.44", "4.76798, -19.6217, -14.8937, 0.29", "5.36534, -20.1488, -15.4018, 0.29", "6.12782, -20.7497, -16.1048, 1.69", "6.72216, -21.2105, -16.7107, 2.36", "7.11851, -21.5223, -17.1698, 2.28", "8.43698, -22.6503, -18.8661, 0.59", "8.86619, -23.0507, -19.4736, 0.88", "9.61601, -23.8208, -20.6054, 0.29", "10.013, -24.2814, -21.2378, 1.25", "10.2579, -24.6153, -21.6244, 1.62", "10.8248, -25.5261, -22.4585, 0.22", "11.2252, -26.3109, -23.0025, 1.62", "11.4894, -26.8612, -23.3162, 2.21", "11.6817, -27.287, -23.5141, 2.14", "12.2436, -28.6027, -24.0724, 0.29", "12.591, -29.4803, -24.4245, 0.29", "12.8169, -30.0873, -24.6667, 1.11", "13.0321, -30.7039, -24.906, 1.33", "13.4529, -31.9075, -25.3443, 0.22", "13.5927, -32.2859, -25.4626, 0.22", "13.9076, -33.0304, -25.6399, 1.77", "14.134, -33.5141, -25.7292, 2.21", "14.3579, -33.9452, -25.7826, 2.28", "15.4581, -35.7768, -25.8803, 0.15", "16.2689, -36.9332, -25.8672, 0.15", "17.0448, -37.9392, -25.8209, 1.92", "17.2484, -38.1821, -25.8039, 2.43", "17.6603, -38.6306, -25.7744, 1.99", "19.1419, -40.0512, -25.6934, 0.22", "20.1774, -40.9079, -25.6618, 0.22", "20.79, -41.3608, -25.6565, 1.25", "21.1863, -41.6278, -25.6666, 1.25", "22.4116, -42.3684, -25.7184, 0.22", "23.3759, -42.8837, -25.7932, 1.4", "23.688, -43.0255, -25.8295, 1.84", "24.1461, -43.2191, -25.9124, 0.96", "24.6013, -43.4127, -26.0424, 0.66", "25.4028, -43.7912, -26.3337, 0.22", "26.1532, -44.18, -26.6711, 0.81", "26.4517, -44.3541, -26.8381, 0.96", "27.5418, -45.0118, -27.5352, 0.22", "28.4475, -45.5642, -28.1661, 1.33", "28.9214, -45.8578, -28.5647, 1.55", "29.2787, -46.0849, -28.8962, 1.11", "30.2247, -46.6923, -29.8238, 0.22", "30.9819, -47.2016, -30.5839, 1.47", "31.346, -47.4553, -30.956, 1.47", "32.8335, -48.5175, -32.4777, 0.22", "33.2288, -48.8023, -32.8789, 0.88", "33.4969, -49.0041, -33.1392, 0.88", "34.6155, -49.8485, -34.1243, 0.22", "35.3194, -50.3793, -34.6782, 0.22", "35.7467, -50.6929, -34.97, 1.69", "36.1211, -50.9513, -35.1486, 1.92", "36.9052, -51.4615, -35.4678, 0.96", "38.192, -52.2593, -35.8841, 0.22", "38.6434, -52.5116, -35.9845, 1.03", "39.1004, -52.7449, -36.0566, 1.33", "41.1695, -53.7348, -36.3195, 0.22", "41.9381, -54.0819, -36.3887, 1.47", "42.5451, -54.3366, -36.4069, 1.92", "44.6807, -55.1877, -36.3534, 0.22", "45.8167, -55.6137, -36.2969, 0.52", "46.1827, -55.7396, -36.27, 0.52", "47.3209, -56.0906, -36.1552, 0.15", "48.3213, -56.4122, -36.0375, 1.47", "48.9668, -56.631, -35.9678, 1.47", "50.0667, -57.0354, -35.8527, 0.22", "50.6023, -57.2609, -35.8155, 0.66", "50.8648, -57.3831, -35.8087, 0.66", "52.8979, -58.4084, -35.877, 0.22", "53.7278, -58.8553, -35.947, 1.55", "54.0258, -59.0301, -35.9837, 1.69", "55.5338, -59.9978, -36.2146, 0.22", "56.3628, -60.5658, -36.3561, 0.22", "57.1229, -61.1319, -36.4872, 1.55", "57.5627, -61.4903, -36.5487, 1.77", "58.5545, -62.3388, -36.6329, 0.22", "59.0604, -62.7927, -36.6386, 0.81", "59.3209, -63.0359, -36.6264, 0.81", "60.9634, -64.6051, -36.4806, 0.22", "61.8566, -65.4797, -36.3814, 1.62", "62.2466, -65.869, -36.3341, 1.99", "63.5025, -67.1498, -36.166, 0.22", "64.0062, -67.7078, -36.0886, 0.52", "64.2445, -67.9969, -36.0321, 0.52", "64.731, -68.6698, -35.86, 0.15", "64.9654, -69.0301, -35.7552, 1.03", "65.3417, -69.6462, -35.5639, 1.03", "66.1907, -71.1256, -35.0571, 0.15", "66.809, -72.2193, -34.5951, 0.74", "67.0294, -72.611, -34.4204, 0.74", "67.9572, -74.2367, -33.7018, 0.22", "68.3052, -74.8474, -33.457, 1.18", "68.5921, -75.3569, -33.2696, 1.18", "69.7053, -77.3488, -32.5702, 0.22", "70.151, -78.1726, -32.284, 0.96", "70.4789, -78.7827, -32.0147, 1.55", "70.777, -79.3502, -31.6956, 1.55", "71.319, -80.4483, -30.9716, 0.15", "71.7224, -81.3142, -30.3444, 1.11", "71.9935, -81.9672, -29.8371, 1.55", "72.3779, -83.1006, -28.9692, 0.29", "72.5629, -83.7995, -28.4783, 0.15", "72.7534, -84.69, -27.9618, 0.15", "72.8392, -85.1576, -27.7713, 0.96", "72.9655, -85.8282, -27.599, 1.11", "73.3161, -87.5186, -27.3503, 0.22", "73.605, -89.0068, -27.2576, 0.22", "73.8199, -90.0854, -27.2426, 0.66", "74.0528, -91.121, -27.2771, 0.22", "74.2308, -91.8392, -27.3201, 1.18", "74.4151, -92.4001, -27.3668, 1.4" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.7714, 43.4588, -16.5434, 0.29", "16.4593, 45.5934, -18.4241, 0.29", "16.6968, 46.3195, -18.9997, 0.29", "16.871, 46.7713, -19.3082, 0.88", "17.142, 47.3792, -19.6401, 0.88", "17.77, 48.5376, -20.0962, 0.15", "18.3349, 49.4827, -20.3952, 0.15", "18.9601, 50.3314, -20.4898, 1.47", "19.709, 51.2945, -20.5381, 2.14", "20.4662, 52.2066, -20.5832, 1.84", "21.4701, 53.3994, -20.7471, 0.22", "21.8783, 53.8677, -20.8658, 0.22", "22.2826, 54.351, -21.0926, 1.03", "22.6409, 54.7841, -21.4208, 1.03", "23.2283, 55.5252, -22.2406, 0.29", "24.0188, 56.5227, -23.9061, 1.62", "24.1585, 56.6965, -24.3107, 2.5", "24.6576, 57.2695, -26.0656, 0.22", "24.98, 57.625, -27.349, 1.03", "25.4129, 58.0389, -28.9796, 1.11", "26.2193, 58.6917, -31.7845, 1.11", "26.7827, 59.1062, -33.6341, 2.36", "27.5445, 59.7666, -35.9688, 0.52", "28.1007, 60.3576, -37.5475, 1.25", "28.7876, 61.2468, -39.1857, 0.29", "29.3745, 62.1096, -40.2904, 1.33", "29.6282, 62.5502, -40.7019, 2.14", "30.7975, 64.8553, -42.5056, 0.22", "31.3686, 66.1168, -43.3747, 1.47", "32.0853, 67.8246, -44.5019, 0.15", "32.4433, 68.7484, -45.1223, 1.92", "33.6813, 72.0505, -47.2911, 0.15", "33.8894, 72.5948, -47.6625, 0.37", "34.1356, 73.2052, -48.1253, 0.15", "34.5824, 74.2629, -49.0665, 1.4", "34.8134, 74.8037, -49.6527, 1.4" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.7714, 43.4588, -16.5434, 0.29", "17.3389, 45.7196, -14.3115, 0.29", "18.9325, 47.9799, -12.1386, 1.47", "19.5511, 48.8816, -11.3121, 1.99", "20.74, 50.6392, -9.70195, 0.44", "21.0832, 51.1146, -9.226, 0.59", "21.5697, 51.7572, -8.55336, 0.22", "22.1311, 52.4135, -7.81095, 0.22", "22.8031, 53.136, -6.9378, 1.25", "23.4031, 53.7637, -6.14726, 1.55", "25.1575, 55.5273, -3.85513, 0.44", "25.9156, 56.2401, -2.92015, 1.55", "26.6155, 56.8611, -2.11345, 1.84", "28.1894, 58.2314, -0.491368, 0.52", "28.9429, 58.8799, 0.199212, 0.29", "29.7956, 59.6343, 0.868342, 0.52", "30.5007, 60.2835, 1.35273, 1.25", "31.8356, 61.5084, 2.21011, 0.29", "32.6972, 62.3058, 2.70525, 0.29", "33.8305, 63.3382, 3.21398, 1.92", "34.5867, 64.0481, 3.55266, 2.5" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "12.775, 7.83727, 15.0492, 0.44", "13.02, 8.49136, 13.8062, 0.44", "13.513, 9.41259, 11.4664, 0.96", "14.136, 10.1315, 8.83762, 0.59", "14.3778, 10.3471, 7.94402, 0.52", "14.6846, 10.5899, 6.98632, 0.37", "15.0619, 10.8848, 5.9595, 0.81", "16.2496, 11.7317, 3.17352, 0.44", "17.0751, 12.3336, 1.63059, 0.44", "17.6089, 12.7491, 0.867905, 0.59", "18.4177, 13.4194, -0.116833, 0.88", "19.0728, 14.0446, -0.783024, 0.88", "19.6777, 14.7649, -1.3186, 0.66", "20.4691, 15.9271, -1.94197, 0.22", "21.0413, 16.8342, -2.37445, 0.81", "21.2776, 17.1944, -2.56939, 0.81", "22.3341, 18.7723, -3.53605, 0.37", "22.9331, 19.6369, -4.11238, 0.37", "23.652, 20.6445, -4.80447, 1.25", "24.3809, 21.6505, -5.49416, 1.84", "25.4765, 23.1991, -6.56578, 0.37", "26.3299, 24.4282, -7.41147, 0.59", "27.1689, 25.6299, -8.21109, 0.29", "27.8472, 26.5694, -8.80896, 1.33", "28.3809, 27.3099, -9.23346, 1.84", "28.9626, 28.1307, -9.61839, 1.55", "29.3938, 28.7933, -9.79251, 0.81", "30.0195, 29.8305, -9.89958, 0.22", "30.4804, 30.6983, -9.86654, 0.74", "30.7735, 31.4479, -9.77794, 0.74", "31.1603, 32.7215, -9.58053, 0.22", "31.4423, 33.8847, -9.41411, 1.11", "31.6151, 34.8101, -9.26463, 1.62", "31.7276, 35.5264, -9.15267, 1.62", "32.0928, 37.9421, -8.78934, 0.22", "32.202, 38.6199, -8.70175, 0.22", "32.4362, 39.9832, -8.53475, 1.33", "32.7414, 41.4637, -8.41751, 1.55", "33.1884, 43.3211, -8.32125, 0.22", "33.3942, 44.0357, -8.31598, 0.22", "33.8997, 45.5503, -8.37951, 1.11", "34.0883, 46.0838, -8.42731, 1.77", "34.8722, 47.9983, -8.80467, 0.15", "35.1591, 48.6099, -9.0048, 0.59", "35.7561, 49.7659, -9.49366, 0.22", "36.3249, 50.7743, -10.0265, 1.03", "36.6219, 51.2424, -10.3199, 1.03", "37.6268, 52.7375, -11.3613, 0.22", "38.1028, 53.4131, -11.8711, 0.22", "38.837, 54.4722, -12.6835, 2.06", "39.4306, 55.3422, -13.329, 2.28", "40.4118, 56.8173, -14.3681, 0.07", "40.6683, 57.2423, -14.6256, 0.07", "41.024, 57.9126, -14.9508, 1.03", "41.7575, 59.4102, -15.5619, 0.22", "42.2169, 60.4565, -15.853, 1.18", "42.4778, 61.1438, -15.9615, 1.47", "43.0443, 62.8936, -15.9922, 0.15", "43.3496, 63.9605, -15.9152, 0.29", "43.6025, 64.9738, -15.7808, 0.15", "43.9527, 66.5701, -15.5029, 0.74", "44.0708, 67.1522, -15.3764, 0.74", "44.5585, 69.7734, -14.6506, 0.22", "45.16, 72.8782, -13.7229, 0.22", "45.4401, 74.1985, -13.3103, 0.37", "45.692, 75.3296, -12.9457, 0.37", "46.0193, 76.7355, -12.5114, 1.33", "46.415, 78.3485, -11.9979, 1.92", "46.9366, 80.3056, -11.3658, 0.22", "47.2675, 81.387, -11.0056, 0.22", "47.6091, 82.3947, -10.7124, 0.74", "47.9545, 83.3343, -10.4991, 0.22", "48.3953, 84.4275, -10.3642, 0.52", "49.0974, 86.03, -10.2806, 1.33", "49.4279, 86.7732, -10.2627, 1.77", "49.7782, 87.5079, -10.2828, 1.55", "50.2762, 88.4758, -10.3299, 0.88", "51.1552, 90.1055, -10.4057, 0.22", "51.5795, 90.8703, -10.4387, 0.22", "52.0376, 91.6857, -10.4728, 0.66", "52.6677, 92.8159, -10.5403, 0.22", "53.4446, 94.2832, -10.6578, 1.25", "53.7991, 95.0027, -10.7513, 1.47", "54.1025, 95.6888, -10.8705, 1.62", "54.5116, 96.6969, -11.1085, 0.81", "55.0104, 98.0035, -11.6064, 0.22", "55.2481, 98.6973, -11.9667, 0.22", "55.5271, 99.6087, -12.5682, 0.81", "55.7395, 100.334, -13.1133, 1.18", "55.9423, 101.072, -13.6966, 1.4", "56.4753, 103.106, -15.3549, 0.22", "56.7263, 104.085, -16.0988, 0.22", "56.9307, 104.892, -16.6431, 0.22", "57.1009, 105.61, -17.0651, 0.22", "57.3783, 106.943, -17.7288, 1.18", "57.5576, 107.939, -18.1301, 1.4", "58.0847, 111.171, -19.1588, 0.22", "58.3856, 113.047, -19.678, 0.22", "58.5822, 114.392, -20.002, 1.11", "58.7818, 115.96, -20.3721, 0.15", "58.8782, 116.871, -20.583, 0.81", "59.0098, 118.594, -20.9689, 0.22", "59.0486, 119.611, -21.1971, 1.25", "59.0549, 120.194, -21.3387, 1.55", "59.0341, 121.92, -21.771, 0.29", "58.9373, 123.85, -22.2498, 0.22", "58.8363, 124.915, -22.5001, 0.22", "58.7005, 125.823, -22.6932, 1.03", "58.5975, 126.405, -22.8031, 1.55", "58.4296, 127.226, -22.9338, 0.88", "58.067, 128.757, -23.106, 0.22", "57.8893, 129.452, -23.1762, 0.37", "57.7015, 130.338, -23.2557, 0.22", "57.5507, 131.248, -23.334, 0.74", "57.4843, 131.916, -23.4009, 0.81", "57.4264, 133.038, -23.4655, 0.15", "57.4283, 133.502, -23.4773, 0.44", "57.4772, 135.302, -23.4948, 0.22", "57.5103, 136.146, -23.497, 0.52", "57.575, 138.151, -23.46, 0.22", "57.63, 139.737, -23.4198, 0.29", "57.6661, 141.143, -23.3726, 0.15", "57.7045, 143.6, -23.2725, 0.15", "57.6893, 144.828, -23.2029, 0.15", "57.6632, 145.922, -23.1293, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.775, 7.83727, 15.0492, 0.66", "13.0628, 6.59362, 15.9308, 0.66", "13.2881, 5.62068, 16.6206, 0.74", "13.4346, 4.98743, 17.0695, 0.59", "13.6017, 4.26583, 17.581, 1.55", "13.7106, 3.79516, 17.9147, 1.92", "13.7804, 3.4936, 18.1285, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.19924, -37.2388, -1.22449, 0.15", "-4.29963, -52.1983, -1.22449, 0.15", "-5.40002, -67.1579, -1.22449, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "2.05498, 44.8121, 0.456999, 0.44", "1.88376, 46.0557, 0.991563, 0.44", "1.75402, 47.1871, 1.41343, 0.44", "1.67296, 48.0051, 1.68408, 1.03", "1.61299, 48.7966, 1.90317, 1.25", "1.53924, 49.7499, 2.135, 0.37", "1.48917, 50.3966, 2.27154, 0.37", "1.42954, 51.4506, 2.43675, 1.33", "1.40515, 52.0398, 2.48756, 1.33", "1.36409, 53.3878, 2.54873, 0.59", "1.36026, 54.0541, 2.56822, 0.44", "1.36853, 55.179, 2.5911, 0.81", "1.38206, 55.889, 2.60006, 0.81", "1.3993, 56.9326, 2.60392, 0.22", "1.4026, 57.7524, 2.60804, 0.37", "1.39891, 58.3288, 2.60162, 0.22", "1.38172, 59.0737, 2.60732, 0.96", "1.35328, 59.5174, 2.61923, 1.11", "1.1605, 61.1032, 2.69034, 0.22", "0.953337, 62.2975, 2.76298, 1.4", "0.805659, 62.9208, 2.81004, 1.62", "0.511562, 63.9106, 2.89677, 0.74", "0.191887, 64.7925, 2.99277, 0.22", "-0.0256832, 65.3326, 3.05946, 0.22", "-0.261929, 65.8393, 3.13566, 0.22", "-0.658904, 66.5965, 3.26736, 1.03", "-0.981484, 67.17, 3.37486, 1.62", "-1.36806, 67.8248, 3.44173, 1.62" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "2.05498, 44.8121, 0.456999, 0.44", "1.18094, 46.3273, -0.481056, 0.44", "0.635398, 47.5127, -1.08155, 0.37", "0.355722, 48.3363, -1.45142, 0.37", "0.116234, 49.4429, -1.88812, 0.88", "0.0370946, 50.0703, -2.11463, 0.96", "-0.0160295, 50.9178, -2.39631, 0.59", "0.0582102, 51.8328, -2.61752, 0.37", "0.229, 52.915, -2.81759, 0.37", "0.42865, 54.0636, -3.00166, 1.03", "0.512389, 54.6583, -3.0925, 1.03", "0.62947, 55.8552, -3.29242, 0.22", "0.658642, 56.358, -3.37818, 0.22", "0.676854, 57.6968, -3.62079, 1.4", "0.640686, 58.3668, -3.73785, 1.84", "0.375182, 60.4852, -4.10435, 0.22", "0.296767, 60.9568, -4.18129, 0.22", "0.125089, 61.8749, -4.32118, 0.59", "-0.0978308, 63.1004, -4.51399, 0.29", "-0.228835, 63.9344, -4.644, 0.22", "-0.35502, 65.1335, -4.81368, 0.22", "-0.395345, 65.9795, -4.90395, 0.88", "-0.393127, 66.4881, -4.9553, 1.18", "-0.336074, 67.8596, -5.08581, 0.22", "-0.263651, 68.7663, -5.15914, 0.52", "-0.187751, 69.4201, -5.2115, 0.52", "-0.0259956, 70.6859, -5.24493, 0.29", "0.0767583, 71.7068, -5.216, 1.11", "0.120013, 72.561, -5.08715, 1.33", "0.105683, 73.4554, -4.84, 0.66", "0.0233765, 74.8083, -4.32452, 1.33", "-0.0797037, 76.0525, -3.71326, 2.06", "-0.140488, 76.5873, -3.40067, 2.28", "-0.395076, 78.4263, -2.23685, 0.29", "-0.497284, 79.0717, -1.80812, 0.29", "-0.717516, 80.2812, -1.01376, 0.81", "-0.890351, 81.1602, -0.448004, 0.74", "-1.16713, 82.547, 0.322182, 0.22", "-1.31638, 83.2633, 0.655966, 0.88", "-1.4014, 83.6126, 0.776791, 1.18", "-1.69409, 84.6402, 1.06059, 0.52", "-2.04691, 85.621, 1.27978, 0.22", "-2.46874, 86.6327, 1.47142, 0.22", "-2.91536, 87.6593, 1.68269, 1.11", "-3.16169, 88.2143, 1.78498, 1.55", "-3.45122, 88.8788, 1.88832, 1.18", "-3.95161, 90.0646, 1.9382, 0.22", "-4.29736, 90.9825, 1.87342, 0.29", "-4.53979, 91.7838, 1.76787, 0.29", "-4.80617, 93.0599, 1.54862, 1.03", "-4.92442, 93.885, 1.37786, 0.96", "-5.08557, 95.732, 0.923095, 0.59", "-5.1277, 96.742, 0.632659, 0.37", "-5.13776, 97.5684, 0.387939, 0.29", "-5.12619, 98.624, 0.0735805, 0.29", "-5.08261, 99.3805, -0.122447, 0.88", "-5.01587, 100.108, -0.309157, 1.33", "-4.8979, 101.075, -0.557678, 0.37", "-4.78349, 101.742, -0.779723, 0.29", "-4.63379, 102.485, -1.07072, 0.29", "-4.38048, 103.646, -1.5937, 1.18", "-4.21665, 104.347, -1.92635, 1.33", "-3.98726, 105.224, -2.37743, 1.33", "-3.62783, 106.586, -3.07501, 0.22", "-3.3306, 107.675, -3.62774, 0.22", "-3.09455, 108.549, -4.06717, 0.88", "-2.92294, 109.185, -4.37718, 0.81", "-2.51276, 110.68, -5.07744, 0.29", "-2.22225, 111.788, -5.64674, 0.29", "-2.0032, 112.65, -6.1156, 0.29", "-1.70649, 113.819, -6.7992, 0.52", "-1.46967, 114.918, -7.53206, 1.4", "-1.32057, 115.888, -8.2246, 2.06", "-1.14258, 117.882, -9.69194, 0.29", "-1.10988, 118.788, -10.4117, 0.29", "-1.1425, 119.821, -11.3261, 1.33", "-1.26308, 121.455, -12.9076, 1.03", "-1.35955, 122.391, -13.8601, 0.44", "-1.42244, 122.894, -14.3824, 0.44", "-1.60428, 124.062, -15.5994, 1.47", "-1.98901, 126.119, -17.7722, 0.22", "-2.09986, 126.665, -18.3226, 0.22", "-2.30813, 127.624, -19.2522, 1.47", "-2.43196, 128.117, -19.7414, 1.84", "-2.88965, 129.643, -21.1656, 0.22", "-3.0701, 130.105, -21.5668, 0.22", "-3.28505, 130.556, -21.9084, 0.81", "-3.4561, 130.897, -22.1864, 0.81", "-3.80809, 131.61, -22.8049, 0.29", "-4.04924, 132.192, -23.372, 0.88", "-4.50867, 133.569, -24.7908, 0.37", "-4.70837, 134.376, -25.6918, 1.55", "-5.01176, 136.123, -27.7214, 0.29", "-5.07459, 136.861, -28.6158, 1.55", "-5.0786, 138.679, -30.9342, 0.22", "-5.05312, 138.971, -31.3295, 0.74", "-4.86718, 140.025, -32.792, 0.22", "-4.80625, 140.284, -33.1627, 0.44", "-4.50482, 141.35, -34.6337, 0.15", "-4.2893, 142.147, -35.7071, 1.25", "-4.14664, 142.764, -36.4694, 1.62", "-3.95531, 143.853, -37.7153, 0.29", "-3.8968, 144.299, -38.2048, 0.66", "-3.81459, 144.875, -38.8358, 0.29", "-3.60518, 145.986, -39.9824, 0.96", "-3.40969, 146.827, -40.8146, 0.29", "-3.10909, 147.939, -41.8945, 1.69", "-2.6158, 149.539, -43.4702, 0.81", "-2.10624, 150.97, -45.0049, 0.22", "-1.69748, 152.004, -46.1377, 0.22", "-1.3544, 152.805, -47.0113, 1.25", "-1.16784, 153.232, -47.4839, 1.25", "-0.591712, 154.679, -49.0158, 1.18", "0.174777, 157.099, -51.3439, 0.22", "0.301646, 157.652, -51.8308, 0.52", "0.364023, 158.046, -52.1552, 0.44", "0.498837, 159.251, -53.0252, 1.18", "0.618364, 161.094, -54.1292, 0.22", "0.659912, 162.372, -54.716, 0.96", "0.64982, 163.74, -55.2232, 0.22", "0.641776, 164.641, -55.5371, 0.66", "0.628241, 166.379, -56.1175, 0.15", "0.620109, 167.528, -56.4636, 0.15", "0.556449, 168.749, -56.7948, 1.03", "0.45974, 169.793, -57.0651, 1.33", "0.020415, 172.959, -57.8631, 0.15", "-0.113811, 173.785, -58.051, 1.03", "-0.268904, 174.616, -58.2321, 1.69", "-1.02566, 178.848, -59.1478, 0.15", "-1.24651, 180.106, -59.4038, 0.15", "-1.49413, 181.607, -59.6868, 1.47", "-1.79746, 183.495, -60.062, 0.15", "-1.92042, 184.391, -60.2431, 0.44", "-2.31308, 187.942, -60.9954, 0.22", "-2.41451, 189.397, -61.3071, 1.11", "-2.43724, 189.805, -61.3957, 1.11", "-2.52476, 192.945, -61.8938, 0.15", "-2.54196, 194.129, -61.9427, 0.66", "-2.54272, 194.465, -61.9175, 1.03", "-2.54627, 195.717, -61.6641, 0.22", "-2.53594, 196.577, -61.4426, 1.03", "-2.46197, 199.78, -60.4135, 0.15", "-2.32606, 202.871, -59.0615, 0.15", "-2.29147, 203.648, -58.6906, 1.03", "-2.26072, 204.372, -58.3218, 1.33" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-4.76444, 77.2395, 22.812, 0.29", "-4.77114, 78.4963, 23.5529, 0.29", "-4.79945, 79.5989, 24.2772, 0.29", "-4.84437, 80.2361, 24.7052, 0.59", "-4.89021, 80.7379, 25.0357, 0.59", "-4.99491, 81.9838, 25.8018, 0.22", "-5.02682, 82.42, 26.0685, 0.74", "-5.05736, 83.0232, 26.4496, 0.74", "-5.04776, 83.9228, 26.9116, 0.22", "-5.02902, 84.2894, 27.091, 0.22", "-4.96978, 85.063, 27.4276, 0.96", "-4.89608, 85.8136, 27.6739, 0.96", "-4.68023, 87.228, 28.1037, 0.29", "-4.46608, 88.2251, 28.3413, 0.29" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-4.76444, 77.2395, 22.812, 0.59", "-5.20481, 78.7258, 23.2699, 0.59", "-5.38538, 79.5063, 23.537, 0.59", "-5.62878, 80.7603, 23.9566, 0.44", "-5.79621, 81.7649, 24.2695, 0.96", "-5.91845, 82.6612, 24.5304, 1.25", "-6.11016, 84.5244, 25.0696, 0.29", "-6.15711, 85.6546, 25.458, 0.74", "-6.13838, 86.4639, 25.7114, 0.37", "-6.03462, 87.4448, 25.9817, 0.37", "-5.94875, 87.9498, 26.1422, 1.33", "-5.81257, 88.6569, 26.4022, 1.62", "-5.71433, 89.1536, 26.604, 1.62", "-5.49292, 90.2152, 27.1301, 0.66", "-5.36641, 91.0764, 27.66, 0.37", "-5.24979, 92.9011, 28.891, 0.74", "-5.25991, 93.63, 29.3987, 0.74", "-5.29776, 94.2922, 29.8417, 1.18", "-5.38573, 95.2923, 30.4746, 1.4", "-5.62714, 97.3823, 31.6858, 0.29", "-5.7689, 98.3801, 32.1345, 0.96", "-5.82728, 98.783, 32.2496, 1.33", "-5.97414, 100.135, 32.4761, 0.37", "-6.04576, 101.063, 32.5161, 0.81", "-6.11767, 102.504, 32.4113, 0.37", "-6.14098, 103.996, 32.1399, 0.22", "-6.1189, 104.766, 32.0841, 1.03", "-6.08804, 105.709, 32.0822, 1.03", "-6.05305, 107.115, 32.1732, 0.66", "-6.02763, 108.157, 32.3039, 1.18", "-6.00906, 108.981, 32.4564, 1.77", "-5.92645, 113.062, 33.4125, 0.37", "-5.91842, 114.216, 33.7007, 1.03", "-5.91724, 114.79, 33.8506, 1.18", "-5.91177, 116.043, 34.1561, 0.66", "-5.91549, 116.877, 34.3139, 0.96", "-5.95261, 117.895, 34.4264, 0.52", "-6.01838, 118.743, 34.4115, 0.29", "-6.06868, 119.551, 34.4198, 0.74", "-6.17477, 121.248, 34.4372, 0.29", "-6.22536, 122.035, 34.4591, 0.52", "-6.27527, 122.765, 34.5002, 0.52", "-6.33983, 123.529, 34.5633, 0.22", "-6.41858, 124.242, 34.64, 0.22", "-6.57885, 125.412, 34.7891, 1.25", "-6.67443, 126.163, 34.8882, 1.4", "-6.77829, 127.125, 35.0089, 0.96", "-6.90366, 128.593, 35.1764, 0.22", "-6.97891, 129.594, 35.2767, 0.81", "-7.0194, 130.206, 35.327, 0.81", "-7.10179, 131.687, 35.3464, 0.22", "-7.1254, 132.204, 35.3199, 0.22", "-7.1514, 132.99, 35.2563, 0.59", "-7.15792, 134.092, 35.1358, 0.22", "-7.15059, 134.853, 35.0315, 0.22", "-7.14635, 136.596, 34.752, 0.22", "-7.19192, 137.76, 34.5257, 0.22" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.449641, -15.6093, -10.8626, 0.66", "-1.68845, -19.1877, -8.00057, 0.66", "-2.70653, -21.4112, -5.98168, 0.52", "-3.40651, -22.7359, -4.62622, 0.44", "-3.69177, -23.2816, -4.06985, 1.11", "-4.04069, -23.959, -3.29398, 1.33", "-4.59615, -24.8692, -1.98337, 0.96", "-5.61506, -26.1406, 0.308336, 0.66", "-6.33281, -26.8993, 1.8433, 1.33", "-7.02115, -27.6055, 3.3683, 1.84", "-8.58474, -29.295, 6.91274, 0.66", "-9.96161, -30.9323, 10.1259, 0.37", "-10.4902, -31.6209, 11.3091, 0.66", "-10.9025, -32.2206, 12.1303, 1.03", "-11.3516, -32.9753, 12.9081, 0.96", "-11.7755, -33.8074, 13.4879, 0.74", "-12.4822, -35.6715, 14.2917, 1.92", "-12.8162, -36.8364, 14.7642, 1.92", "-13.0989, -37.9724, 15.3128, 1.62", "-13.5572, -39.7186, 16.2629, 0.52", "-13.9155, -40.9116, 16.9284, 0.29", "-14.6727, -43.2469, 18.2071, 0.81", "-15.4379, -45.4608, 19.4717, 1.33", "-15.9327, -46.9179, 20.3966, 1.33", "-16.3657, -48.2977, 21.3847, 1.33", "-16.9809, -50.3688, 22.9353, 0.88", "-17.3962, -51.8367, 24.0309, 0.66", "-18.0756, -54.1324, 25.6591, 0.96", "-18.7218, -56.1692, 27.0754, 1.55", "-19.5994, -58.8346, 28.8506, 0.52", "-20.0575, -60.2633, 29.7318, 0.59", "-20.4314, -61.3936, 30.3194, 0.88", "-20.8274, -62.4643, 30.6714, 1.18", "-21.361, -63.7214, 30.7662, 0.96", "-22.2043, -65.4473, 30.5209, 0.52", "-23.0562, -66.997, 30.084, 0.52", "-23.9689, -68.5482, 29.5422, 1.47", "-24.7646, -69.838, 29.0376, 1.92", "-25.5115, -71.0238, 28.5802, 1.84", "-26.7597, -72.9202, 27.8766, 0.88", "-27.3644, -73.749, 27.5722, 0.52", "-28.0776, -74.5948, 27.248, 0.29", "-28.5959, -75.1329, 27.0422, 0.29", "-29.4943, -75.9847, 26.7659, 0.66", "-29.9462, -76.4065, 26.6901, 0.88" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.449641, -15.6093, -10.8626, 0.29", "-0.179485, -17.2357, -10.8019, 0.29", "-0.0560293, -18.4644, -10.8118, 0.29", "-0.0271414, -19.4333, -10.8479, 1.4", "-0.0439604, -20.5484, -10.9339, 1.69", "-0.0889197, -21.2201, -10.9804, 1.62", "-0.255387, -22.5423, -11.0654, 0.59", "-0.499714, -23.5658, -11.1295, 0.52", "-0.866632, -24.7411, -11.179, 0.88", "-1.10281, -25.4064, -11.1693, 1.03", "-1.49038, -26.4735, -11.1143, 0.96", "-1.87338, -27.5776, -11.0143, 0.37", "-2.19997, -28.6212, -10.8756, 0.22", "-2.40643, -29.4238, -10.7618, 0.66", "-2.59553, -30.4181, -10.6024, 0.96", "-2.74287, -31.474, -10.4063, 1.47", "-2.83592, -32.3585, -10.2502, 1.92", "-2.9155, -33.1248, -10.114, 1.92", "-3.02505, -33.9492, -9.9832, 1.55", "-3.29662, -35.3014, -9.7613, 0.29", "-3.45787, -35.9074, -9.68153, 0.29", "-3.82804, -37.033, -9.56867, 1.11", "-4.16935, -37.9913, -9.52831, 1.47", "-4.44111, -38.7022, -9.55311, 1.84", "-4.80544, -39.6032, -9.66022, 1.84", "-5.2708, -40.7483, -9.90067, 0.52", "-5.62711, -41.6245, -10.1444, 0.29", "-5.93651, -42.3798, -10.3859, 0.22", "-6.32633, -43.2842, -10.6746, 1.77", "-6.66284, -44.01, -10.9026, 2.06", "-7.07499, -44.8223, -11.1528, 1.77", "-7.7202, -45.8532, -11.4494, 0.29", "-8.2879, -46.5553, -11.6607, 0.29", "-8.88856, -47.182, -11.8455, 1.11", "-9.21387, -47.484, -11.9336, 1.47", "-9.65955, -47.8587, -12.0485, 1.18", "-10.4169, -48.4305, -12.235, 0.44", "-11.4247, -49.1512, -12.5139, 0.22", "-11.9101, -49.4864, -12.6464, 0.74", "-12.3364, -49.7819, -12.7639, 0.81", "-12.9796, -50.2511, -12.9267, 0.22", "-13.1478, -50.3905, -12.9685, 0.52", "-13.9615, -51.1771, -13.1655, 0.22", "-14.698, -51.9893, -13.3439, 1.25", "-15.1703, -52.5514, -13.4596, 1.62", "-15.3868, -52.8417, -13.5128, 1.4", "-16.0944, -53.8952, -13.7242, 0.29", "-16.4418, -54.4525, -13.8666, 0.29", "-16.7594, -55.0061, -14.0359, 1.25", "-16.9342, -55.3254, -14.1602, 1.55", "-17.2521, -55.9031, -14.4169, 1.18", "-17.963, -57.1552, -15.0415, 0.22", "-18.2897, -57.7365, -15.3667, 0.88", "-18.5749, -58.2914, -15.7052, 1.18", "-18.9506, -59.1236, -16.2186, 0.29", "-19.218, -59.8014, -16.6159, 0.22", "-19.5212, -60.6754, -17.0936, 1.33", "-19.7055, -61.2588, -17.3852, 1.69", "-19.9123, -61.868, -17.6677, 1.47", "-20.181, -62.5849, -17.9852, 0.66", "-20.5489, -63.5117, -18.3803, 0.22", "-20.8049, -64.1287, -18.6247, 1.11", "-21.0864, -64.7413, -18.8598, 1.69", "-21.3412, -65.2294, -19.0578, 1.84", "-21.6264, -65.7511, -19.2966, 1.47", "-22.2061, -66.8538, -19.8702, 0.22", "-22.3937, -67.215, -20.0721, 0.66", "-22.61, -67.6169, -20.3291, 0.66", "-23.183, -68.6429, -21.0563, 0.29", "-23.7412, -69.5323, -21.766, 0.29", "-24.2919, -70.3541, -22.5728, 1.33", "-24.5564, -70.7362, -22.9992, 1.69", "-25.2692, -71.8479, -24.3898, 0.22", "-25.4968, -72.2436, -24.9241, 0.88", "-25.7427, -72.7293, -25.6601, 1.18", "-26.1348, -73.9848, -27.6243, 0.29", "-26.1665, -74.3256, -28.1322, 0.29", "-26.148, -74.8849, -28.9267, 0.29", "-26.0847, -75.4406, -29.648, 1.99", "-26.0182, -76.0405, -30.3719, 2.28", "-25.884, -77.6814, -32.2138, 0.29", "-25.9103, -78.5491, -33.0964, 0.22", "-25.9953, -79.0569, -33.5767, 0.22", "-26.2124, -79.8209, -34.2386, 1.33", "-26.3913, -80.2921, -34.6174, 1.62", "-26.5798, -80.6651, -34.8895, 1.25", "-26.9851, -81.3001, -35.3292, 0.66", "-27.7451, -82.5306, -36.1267, 0.22", "-28.0109, -83.008, -36.417, 1.03", "-28.2338, -83.4236, -36.6617, 1.11", "-28.873, -84.7015, -37.3772, 0.22", "-29.0747, -85.1127, -37.6025, 0.22", "-29.3771, -85.7181, -37.9231, 1.25", "-29.5766, -86.1088, -38.1131, 1.69", "-29.8477, -86.6424, -38.3428, 1.84", "-30.179, -87.351, -38.653, 1.47", "-30.7552, -88.6387, -39.2179, 0.22", "-30.9239, -89.0365, -39.4026, 0.66", "-31.0935, -89.4755, -39.621, 0.66", "-31.2142, -89.9507, -39.8718, 0.29", "-31.3904, -91.1274, -40.5285, 0.22", "-31.4485, -91.8491, -40.9498, 0.22", "-31.4653, -92.5254, -41.3494, 1.77", "-31.4671, -92.9495, -41.6053, 2.14", "-31.4638, -95.2792, -43.0367, 0.22", "-31.4838, -96.1357, -43.5327, 0.22", "-31.5545, -97.3063, -44.1789, 1.62", "-31.6141, -98.0103, -44.5567, 2.06", "-31.7131, -98.8882, -45.0133, 1.84", "-31.9222, -100.25, -45.6974, 0.37", "-32.3162, -102.112, -46.5862, 0.22", "-32.567, -103.171, -47.0617, 1.77", "-32.701, -103.71, -47.2903, 1.99", "-32.8508, -104.292, -47.5221, 1.69", "-33.3227, -106.07, -48.1833, 0.22", "-33.5217, -106.776, -48.4331, 0.22", "-33.7596, -107.583, -48.7152, 1.33", "-33.873, -107.932, -48.828, 1.33", "-34.3065, -109.111, -49.1976, 0.22", "-34.5446, -109.68, -49.3772, 0.88", "-35.0878, -110.805, -49.7349, 0.22", "-35.4773, -111.521, -49.9904, 1.33", "-35.742, -111.942, -50.1666, 1.33", "-36.0958, -112.421, -50.3977, 1.18", "-36.9081, -113.371, -50.918, 0.15", "-37.1782, -113.668, -51.0884, 1.4", "-37.8152, -114.335, -51.4841, 1.69", "-38.2838, -114.798, -51.7362, 1.47", "-39.4763, -115.96, -52.3013, 0.15", "-40.5405, -117.0, -52.7465, 0.15", "-40.9899, -117.452, -52.9055, 1.47", "-41.5157, -117.998, -53.0765, 1.69", "-42.9154, -119.47, -53.4841, 0.22", "-43.419, -119.99, -53.6125, 1.33", "-43.9801, -120.544, -53.7413, 1.33", "-45.0741, -121.576, -53.9918, 0.22", "-45.2951, -121.778, -54.0415, 0.44", "-45.5845, -122.041, -54.0955, 0.44", "-46.4741, -122.866, -54.2558, 0.15", "-46.8902, -123.255, -54.3087, 0.44", "-47.2569, -123.596, -54.3421, 0.44", "-48.14, -124.421, -54.4164, 0.15", "-48.9124, -125.166, -54.4827, 1.55", "-49.4319, -125.669, -54.5387, 1.77", "-49.9904, -126.18, -54.6207, 0.96", "-51.0292, -127.067, -54.8202, 0.15", "-51.8507, -127.704, -55.0204, 0.22", "-52.2439, -127.978, -55.1435, 0.52", "-53.2875, -128.661, -55.5365, 0.22", "-54.4054, -129.379, -55.9834, 0.22", "-54.7409, -129.6, -56.1244, 1.18", "-55.3135, -129.982, -56.3836, 1.62", "-55.9454, -130.402, -56.6858, 1.33", "-56.8021, -130.956, -57.1182, 0.22", "-57.3389, -131.3, -57.409, 0.44", "-57.6972, -131.52, -57.6142, 0.44", "-58.3414, -131.834, -57.9216, 0.22", "-58.7416, -131.977, -58.0773, 0.88", "-59.0868, -132.066, -58.1781, 1.25", "-59.5052, -132.17, -58.2586, 1.18", "-60.1359, -132.358, -58.3268, 0.81", "-61.5354, -132.892, -58.3659, 0.22", "-61.9367, -133.091, -58.3526, 0.52", "-62.4079, -133.368, -58.3292, 0.52", "-63.2792, -133.989, -58.2912, 0.22", "-63.9459, -134.561, -58.2733, 1.33", "-64.3452, -134.955, -58.2795, 1.33", "-64.9612, -135.599, -58.3152, 0.66", "-65.4368, -136.1, -58.3404, 0.37", "-66.4355, -137.136, -58.3902, 0.22", "-67.1422, -137.858, -58.4126, 0.88", "-67.5281, -138.288, -58.4081, 0.88", "-68.108, -139.002, -58.3577, 0.22", "-68.5106, -139.568, -58.2747, 0.59", "-68.7097, -139.898, -58.2149, 0.59", "-69.2169, -140.813, -58.0559, 0.22", "-69.5461, -141.449, -57.9667, 1.03", "-69.7427, -141.855, -57.9196, 1.03", "-70.0389, -142.488, -57.859, 0.81", "-70.5962, -143.571, -57.7672, 0.22", "-71.1671, -144.579, -57.6968, 0.22", "-71.4974, -145.104, -57.6691, 0.66", "-71.7604, -145.462, -57.651, 0.66", "-72.5976, -146.471, -57.5957, 0.22", "-73.0276, -146.94, -57.5687, 1.11", "-73.518, -147.44, -57.5632, 1.25", "-73.8868, -147.8, -57.5893, 0.88", "-74.6303, -148.459, -57.7138, 0.15", "-75.075, -148.834, -57.8741, 0.81", "-75.4892, -149.136, -58.1002, 1.03", "-76.415, -149.767, -58.7115, 0.15", "-77.0121, -150.133, -59.1515, 0.15", "-77.3697, -150.365, -59.4374, 0.15", "-78.2877, -151.015, -60.2137, 0.88", "-79.1428, -151.691, -60.927, 0.22", "-79.4787, -151.981, -61.1919, 1.03", "-79.7661, -152.269, -61.4108, 1.25", "-80.7118, -153.385, -62.1177, 0.22", "-81.2031, -154.022, -62.4557, 1.33", "-81.5573, -154.494, -62.6741, 1.11", "-81.7774, -154.79, -62.841, 0.44", "-82.4805, -155.657, -63.4288, 0.15", "-82.8383, -156.037, -63.7421, 0.74", "-83.1861, -156.338, -64.1061, 1.18", "-83.7281, -156.752, -64.7371, 1.18", "-84.734, -157.435, -66.0029, 0.22", "-84.8155, -157.486, -66.1049, 0.66", "-85.2356, -157.73, -66.6186, 0.66", "-86.2104, -158.252, -67.8136, 0.15", "-86.4695, -158.382, -68.1328, 0.88", "-86.8647, -158.574, -68.6284, 0.88", "-87.7149, -158.953, -69.6698, 0.15", "-87.9482, -159.042, -69.9547, 0.37", "-88.1939, -159.105, -70.2332, 0.37", "-88.8705, -159.206, -70.8518, 0.15", "-89.4502, -159.254, -71.3446, 1.03", "-89.882, -159.285, -71.6554, 1.25", "-90.5642, -159.321, -72.0742, 1.25", "-92.0335, -159.426, -72.9049, 0.22", "-92.8197, -159.485, -73.3224, 0.81", "-93.3139, -159.505, -73.6425, 0.96", "-94.4648, -159.578, -74.6648, 0.22", "-94.8534, -159.619, -75.133, 0.22", "-95.3454, -159.728, -75.9941, 1.25", "-95.63, -159.819, -76.6398, 1.92", "-96.654, -160.216, -79.2709, 0.37", "-97.2528, -160.523, -81.0004, 1.25", "-97.4471, -160.645, -81.5974, 1.33", "-98.2332, -161.216, -83.9012, 0.15", "-98.4621, -161.403, -84.5253, 1.18", "-98.6852, -161.594, -85.0496, 1.69", "-99.9549, -162.697, -87.4199, 0.22", "-100.397, -163.053, -88.1197, 0.22", "-100.677, -163.292, -88.5124, 0.88", "-101.049, -163.631, -88.9681, 0.88", "-101.754, -164.355, -89.7893, 0.22", "-102.179, -164.852, -90.27, 1.11", "-102.486, -165.254, -90.5726, 1.33", "-103.252, -166.354, -91.3368, 0.22", "-103.526, -166.775, -91.5999, 1.03", "-103.82, -167.24, -91.8596, 1.18", "-104.683, -168.616, -92.5779, 0.22", "-105.004, -169.09, -92.8174, 0.66", "-105.554, -169.805, -93.1555, 0.22", "-105.994, -170.284, -93.3591, 1.33", "-106.474, -170.732, -93.5438, 1.55", "-107.34, -171.434, -93.9193, 0.15", "-107.857, -171.799, -94.1478, 0.74", "-108.652, -172.322, -94.5689, 0.22", "-109.101, -172.606, -94.8363, 0.96", "-109.484, -172.846, -95.0807, 0.96", "-111.346, -174.046, -96.3277, 0.22", "-111.984, -174.48, -96.7874, 0.59", "-113.135, -175.319, -97.652, 0.22", "-113.465, -175.568, -97.912, 0.52", "-114.096, -176.056, -98.4109, 0.22", "-114.39, -176.288, -98.629, 0.81", "-115.851, -177.44, -99.5633, 0.22", "-116.331, -177.847, -99.8899, 0.88" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "74.4151, -92.4001, -27.3668, 0.22", "75.5852, -93.0603, -28.2248, 0.22", "76.7253, -93.6735, -29.1639, 0.96", "77.3128, -93.9911, -29.6676, 1.25", "78.7429, -94.7874, -30.9135, 0.22", "79.6066, -95.3088, -31.6795, 1.03", "79.9943, -95.5614, -32.0289, 1.03", "81.9601, -96.9342, -33.8863, 0.22", "82.4706, -97.3627, -34.4089, 1.03", "82.8969, -97.8121, -34.8795, 1.03", "83.7126, -98.8816, -35.8731, 0.22", "84.0432, -99.4392, -36.3477, 0.96", "84.3199, -99.993, -36.8052, 1.18", "85.235, -102.242, -38.5346, 0.22", "85.6802, -103.448, -39.4533, 1.84", "85.8846, -104.016, -39.8975, 1.84", "86.9449, -106.944, -42.2138, 0.15", "87.262, -107.789, -42.887, 0.15", "87.6111, -108.631, -43.5607, 1.03", "87.8683, -109.192, -43.9916, 1.03", "88.8619, -111.099, -45.4171, 0.15", "89.3101, -111.887, -45.9677, 1.03", "89.527, -112.222, -46.1878, 1.03", "90.6444, -113.82, -47.226, 0.22", "91.1733, -114.504, -47.6985, 0.88", "92.1557, -115.681, -48.5515, 0.22", "92.7559, -116.358, -49.0493, 1.25", "93.4029, -117.039, -49.5759, 0.81", "94.7008, -118.38, -50.6358, 0.22", "95.4959, -119.197, -51.3231, 0.74", "96.0112, -119.734, -51.7814, 0.74", "96.7984, -120.599, -52.4872, 0.15", "97.5123, -121.535, -53.1096, 0.81", "97.9107, -122.143, -53.4653, 0.81", "99.1887, -124.356, -54.6276, 0.15", "99.7904, -125.483, -55.1005, 0.74", "100.12, -126.122, -55.323, 0.74", "101.467, -128.788, -56.1098, 0.15", "102.076, -129.924, -56.3597, 1.25", "102.431, -130.538, -56.4541, 1.62", "104.134, -133.218, -56.6569, 0.15", "104.734, -134.055, -56.7026, 0.81", "105.159, -134.603, -56.7236, 0.81", "107.528, -137.571, -56.7113, 0.22", "107.854, -138.004, -56.6835, 0.81", "108.863, -139.447, -56.5358, 1.03", "111.14, -142.957, -56.1001, 0.15", "111.799, -144.078, -55.9326, 0.81", "112.405, -145.193, -55.7556, 0.66", "113.681, -147.756, -55.3122, 0.15", "114.244, -148.937, -55.1031, 0.81", "114.492, -149.459, -55.0001, 0.96", "115.882, -152.183, -54.4074, 0.15", "117.137, -154.305, -53.9597, 0.15", "117.599, -154.962, -53.8091, 0.96", "118.027, -155.493, -53.6618, 0.96", "120.495, -158.268, -52.6916, 0.15", "121.139, -158.915, -52.3936, 0.74", "121.881, -159.567, -52.0024, 0.74", "123.701, -161.001, -50.9804, 0.22", "124.475, -161.56, -50.5529, 0.88", "124.986, -161.906, -50.2699, 1.11", "126.773, -163.05, -49.2595, 0.15", "127.577, -163.636, -48.7284, 0.74", "128.893, -164.718, -47.6935, 0.15", "129.411, -165.201, -47.2369, 0.66", "130.32, -166.235, -46.2446, 0.22", "130.754, -166.918, -45.5863, 0.74", "131.648, -169.323, -43.1748, 0.22", "131.896, -170.583, -41.8591, 0.37", "131.927, -171.409, -40.9576, 0.15", "131.834, -172.85, -39.3754, 0.74", "131.621, -174.201, -37.9192, 1.25", "131.182, -176.329, -35.6729, 0.22", "130.857, -177.678, -34.295, 0.59", "130.411, -179.574, -32.3289, 0.22", "130.002, -181.225, -30.5646, 0.74", "129.763, -182.308, -29.3967, 0.22", "129.688, -182.69, -28.9751, 0.22", "129.607, -183.187, -28.4578, 0.59", "129.456, -184.547, -27.1124, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "74.4151, -92.4001, -27.3668, 0.74", "74.0431, -93.2872, -27.1867, 0.74", "73.7929, -93.8839, -27.0655, 0.66", "73.5338, -94.5019, -26.94, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "34.5867, 64.0481, 3.55266, 0.59", "36.3977, 64.4767, 4.30472, 0.59", "36.9533, 64.6318, 4.52303, 0.81", "37.3464, 64.7565, 4.67445, 0.81", "38.3409, 65.1279, 5.06556, 0.66", "39.6705, 65.7011, 5.65792, 0.66", "40.3704, 66.0225, 6.01929, 0.22", "40.7883, 66.2358, 6.26531, 0.81", "41.0925, 66.3785, 6.47006, 0.81", "41.8899, 66.7525, 7.04138, 0.29", "42.778, 67.1864, 7.66152, 1.11", "43.5036, 67.5156, 8.14013, 1.4", "44.1244, 67.7163, 8.59699, 1.25", "45.1397, 67.9118, 9.36125, 0.29", "45.8455, 67.9796, 9.86689, 0.29", "46.5805, 67.9675, 10.3655, 0.29", "47.0984, 67.9116, 10.7185, 0.66", "48.9725, 67.5823, 12.037, 1.25", "49.8365, 67.3827, 12.6706, 0.29", "50.3729, 67.2282, 13.0655, 0.37", "51.1363, 66.9704, 13.6333, 0.37", "51.9613, 66.6828, 14.2629, 0.88", "52.285, 66.5815, 14.5005, 0.74", "52.794, 66.4542, 14.8567, 0.52", "53.4627, 66.2976, 15.4094, 1.25", "53.8684, 66.2096, 15.7761, 1.33", "54.9934, 66.0009, 16.7184, 0.29", "55.5248, 65.8804, 17.136, 0.29", "56.5319, 65.5908, 17.9464, 1.47", "57.8294, 65.1484, 19.0128, 1.25", "59.3186, 64.5368, 20.1072, 1.4", "60.3013, 64.0633, 20.7432, 0.37", "61.2648, 63.5392, 21.2653, 0.22", "62.4082, 62.8364, 21.7655, 1.18", "62.7335, 62.6099, 21.8655, 1.33", "64.519, 61.2276, 22.2383, 0.22", "65.1755, 60.669, 22.3429, 0.52", "65.7038, 60.2105, 22.4309, 0.22", "66.3319, 59.678, 22.5029, 1.11", "66.9359, 59.1451, 22.5472, 0.22", "67.4674, 58.6511, 22.6022, 1.11", "67.7144, 58.3678, 22.6423, 0.44", "68.4271, 57.4432, 22.7594, 0.15", "68.8415, 56.8516, 22.8635, 0.15", "69.1425, 56.402, 22.9693, 0.81", "69.3329, 56.0995, 23.0485, 0.96", "70.8638, 53.6276, 23.6937, 0.22", "71.0616, 53.2993, 23.7765, 0.52", "71.9369, 51.8282, 24.1603, 0.22", "72.4136, 51.0615, 24.3735, 0.81", "72.6859, 50.658, 24.49, 0.44", "73.1494, 50.0685, 24.6861, 0.22", "73.7954, 49.4153, 24.9613, 0.22", "74.2115, 49.0352, 25.1108, 0.81", "74.5079, 48.7967, 25.1988, 0.74", "75.378, 48.0853, 25.5228, 0.22", "75.8078, 47.7236, 25.7368, 0.22", "76.1803, 47.3778, 25.9608, 0.74", "76.5792, 46.9724, 26.2605, 0.22", "77.1289, 46.3576, 26.6952, 1.18", "78.1284, 45.2473, 27.5838, 0.22", "78.5155, 44.8328, 27.9534, 0.29", "78.9166, 44.4441, 28.3488, 0.15", "79.8084, 43.7011, 29.228, 0.15", "80.3178, 43.3242, 29.7353, 1.77", "81.5719, 42.4868, 30.9513, 0.66", "81.9306, 42.2791, 31.2899, 0.22", "82.6347, 41.8978, 31.9605, 0.44", "83.3808, 41.4921, 32.6836, 0.44", "83.5826, 41.3671, 32.8875, 0.66", "84.0531, 40.9898, 33.4562, 0.29", "84.4216, 40.5539, 33.9718, 1.11", "84.8728, 39.8897, 34.6904, 0.81", "85.1376, 39.4815, 35.1361, 0.22", "85.7694, 38.4375, 36.267, 0.22", "86.1432, 37.8064, 36.9566, 0.22", "86.5168, 37.1573, 37.6822, 0.66", "86.8741, 36.4809, 38.4267, 0.37", "87.2555, 35.634, 39.3427, 1.4", "93.0534, 33.7386, 44.9992, 1.4" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "34.5867, 64.0481, 3.55266, 0.22", "34.8052, 66.0159, 4.77685, 0.22", "34.9326, 66.8196, 5.30281, 0.96", "35.0472, 67.4439, 5.72658, 1.18", "35.1799, 68.1289, 6.21304, 0.74", "35.3141, 68.9035, 6.75511, 0.29", "35.5037, 70.0066, 7.51574, 0.22", "35.6511, 70.8626, 8.10378, 0.96", "35.7677, 71.4911, 8.52892, 1.4", "35.8492, 71.937, 8.82998, 1.4", "36.111, 73.5808, 9.95589, 0.22", "36.2217, 74.4782, 10.5581, 1.11", "36.2583, 75.0547, 10.9312, 1.4", "36.2983, 76.2208, 11.6695, 0.22", "36.3247, 77.0631, 12.2009, 0.74", "36.3272, 77.5171, 12.4919, 0.96", "36.3038, 78.6911, 13.2601, 0.15", "36.3002, 79.5171, 13.7914, 0.15", "36.3401, 80.4481, 14.3673, 1.55", "36.398, 81.0111, 14.6969, 1.69", "36.6669, 82.4186, 15.4752, 0.22", "36.8719, 83.1274, 15.8701, 0.66", "37.356, 84.3913, 16.5571, 0.22", "37.7737, 85.2708, 17.0048, 0.88", "38.0257, 85.7246, 17.2197, 0.88", "38.6208, 86.6692, 17.6355, 0.22", "39.1697, 87.4254, 17.9569, 0.81", "39.5656, 87.9508, 18.1815, 1.11", "40.1025, 88.6678, 18.4667, 0.22", "40.9391, 89.7637, 18.8859, 1.62", "41.4506, 90.406, 19.1326, 2.14", "42.7887, 92.0429, 19.7431, 0.15", "42.8447, 92.1103, 19.7671, 0.29", "43.4956, 92.8836, 20.0384, 0.15", "43.7192, 93.1509, 20.128, 0.44", "44.6139, 94.2253, 20.4551, 0.15", "45.167, 94.9088, 20.6589, 1.03", "45.5314, 95.376, 20.7948, 1.55", "46.8576, 97.164, 21.3116, 0.22", "47.3891, 97.906, 21.5254, 1.11", "47.8805, 98.6194, 21.7185, 1.69", "49.0288, 100.38, 22.1309, 0.22", "49.4278, 101.014, 22.2595, 0.22", "49.9201, 101.825, 22.3752, 0.59", "50.1386, 102.206, 22.399, 0.59", "50.7467, 103.27, 22.3759, 0.22", "51.1863, 104.015, 22.2834, 0.96", "51.5706, 104.615, 22.1841, 0.96", "52.212, 105.533, 22.0617, 0.29", "53.1347, 106.754, 21.9598, 1.62", "53.6359, 107.4, 21.9448, 1.25", "54.772, 108.797, 22.0403, 0.22", "55.7911, 109.973, 22.253, 0.88", "56.3275, 110.576, 22.4166, 0.74", "57.3204, 111.744, 22.8193, 0.22", "57.9272, 112.521, 23.103, 0.22", "58.5685, 113.418, 23.424, 0.29", "59.3859, 114.63, 23.8215, 1.62", "59.5586, 114.902, 23.893, 1.77", "60.3205, 116.171, 24.1572, 0.29", "61.1545, 117.625, 24.3802, 0.22", "61.7441, 118.672, 24.49, 0.22", "62.2328, 119.562, 24.5417, 1.18", "62.5309, 120.113, 24.5573, 1.18", "63.6273, 122.097, 24.5871, 0.15", "64.4478, 123.518, 24.5671, 0.15", "64.8001, 124.134, 24.5487, 0.52", "65.2719, 124.982, 24.5169, 0.15", "65.8361, 126.005, 24.4654, 1.11", "66.0926, 126.462, 24.4296, 1.62", "66.9916, 127.999, 24.2544, 0.22", "67.3818, 128.656, 24.1666, 0.37", "71.2495, 138.903, 27.3762, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "13.7804, 3.4936, 18.1285, 0.44", "12.1606, 4.49983, 19.7544, 0.44", "11.3668, 4.82846, 20.3623, 0.44", "9.99045, 5.46098, 21.5084, 0.44", "9.10638, 5.92948, 22.3932, 0.74", "8.50905, 6.31404, 23.1463, 0.74", "7.29634, 7.3511, 25.0932, 0.81", "6.70909, 7.99655, 26.1947, 0.96", "5.91915, 8.97587, 27.9136, 0.59", "5.43677, 9.68198, 29.2373, 0.74", "5.01659, 10.5227, 30.7259, 1.25", "4.64077, 11.387, 32.116, 1.4", "4.29128, 12.1853, 33.2809, 0.74", "3.86078, 12.8512, 34.2149, 0.74", "3.34825, 13.2685, 34.8101, 0.96", "2.46676, 13.7473, 35.4871, 1.18", "0.944787, 14.3719, 36.3531, 0.52", "0.00886417, 14.6934, 36.8054, 0.52", "-1.19276, 15.1111, 37.3429, 0.52", "-2.47133, 15.5859, 37.9151, 0.52", "-2.97993, 15.8139, 38.1454, 0.52", "-3.58781, 16.202, 38.4067, 1.11", "-4.101, 16.7131, 38.6041, 1.4", "-4.56927, 17.3177, 38.7286, 1.4", "-4.80504, 17.6553, 38.7499, 1.33", "-5.52834, 18.6271, 38.6859, 0.37", "-6.4308, 19.6561, 38.5315, 0.37", "-6.94448, 20.154, 38.4062, 0.37", "-7.96967, 21.0527, 38.1049, 0.44", "-8.63424, 21.612, 37.8756, 0.81", "-9.18668, 22.083, 37.7157, 0.81", "-9.61415, 22.4662, 37.5989, 0.44", "-10.2023, 23.0586, 37.4516, 0.37", "-10.7957, 23.7109, 37.3266, 0.37", "-11.4198, 24.4205, 37.2101, 0.66", "-12.5165, 25.6443, 37.1156, 0.96", "-13.168, 26.3535, 37.1188, 0.81", "-13.7589, 26.989, 37.1712, 0.81", "-14.3458, 27.599, 37.2907, 0.44", "-14.721, 27.9793, 37.3884, 0.37", "-15.5365, 28.7996, 37.6085, 0.37", "-16.2772, 29.5834, 37.7656, 0.66", "-16.638, 30.0012, 37.8601, 0.66", "-17.1395, 30.6723, 37.9701, 0.81", "-17.5714, 31.3669, 38.023, 0.44", "-17.9452, 31.9859, 38.0357, 0.81", "-18.1971, 32.3664, 38.0166, 0.81", "-18.6721, 32.9729, 37.9804, 0.52", "-19.2835, 33.6083, 37.926, 0.37", "-19.9979, 34.2016, 37.8649, 0.29", "-20.9891, 34.824, 37.8181, 0.52", "-21.6467, 35.1164, 37.8036, 0.74", "-22.427, 35.3765, 37.7965, 0.37", "-23.0231, 35.538, 37.7957, 0.66", "-23.6274, 35.6916, 37.7929, 0.88", "-24.2953, 35.8826, 37.7762, 0.44", "-25.0891, 36.1854, 37.7137, 0.37", "-25.4861, 36.377, 37.6751, 0.37", "-26.0303, 36.678, 37.6127, 0.37", "-26.7395, 37.0558, 37.5048, 0.37", "-27.2874, 37.272, 37.3779, 0.37", "-28.0305, 37.4488, 37.1752, 0.37", "-28.6256, 37.5053, 37.0045, 0.88", "-28.9234, 37.5069, 36.9109, 1.25", "-29.8035, 37.4711, 36.6096, 1.25", "-31.1082, 37.3849, 36.1151, 0.29", "-31.6034, 37.3491, 35.9188, 0.29", "-32.4027, 37.2965, 35.6017, 0.74", "-33.4061, 37.241, 35.1949, 0.37", "-34.321, 37.2084, 34.825, 0.29", "-35.1956, 37.2087, 34.4827, 0.29", "-36.0401, 37.257, 34.1684, 0.29", "-36.8818, 37.2912, 33.841, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.7804, 3.4936, 18.1285, 1.84", "13.9997, 3.37972, 18.307, 1.84", "14.4135, 3.2737, 18.6857, 0.74", "14.8675, 3.32665, 19.276, 0.44", "15.1545, 3.40187, 19.7047, 0.44", "15.252, 3.42137, 19.8593, 1.03", "15.5458, 3.46475, 20.3552, 0.81", "15.9348, 3.55385, 21.0437, 0.81", "16.5439, 3.80031, 22.1603, 1.03", "16.8432, 3.96709, 22.6901, 1.33", "17.2275, 4.19956, 23.3363, 0.66", "17.7895, 4.51779, 24.1884, 0.66", "18.0805, 4.66408, 24.5741, 0.52", "18.5719, 4.88736, 25.2661, 0.52", "18.9622, 5.10731, 25.9248, 0.37", "19.0978, 5.23559, 26.2707, 0.37", "19.2774, 5.60941, 27.1384, 1.18", "19.3039, 5.79549, 27.5845, 1.55", "19.2671, 6.54598, 29.629, 1.18", "19.1829, 6.94216, 30.901, 0.52", "19.0467, 7.31116, 32.3072, 1.11", "18.8647, 7.66719, 33.9069, 0.59", "18.7243, 7.85874, 35.041, 0.59", "18.6648, 7.91003, 35.6185, 0.81", "18.6483, 7.87873, 36.205, 0.88", "18.769, 7.58244, 37.3511, 0.74", "18.9867, 7.18825, 38.2163, 0.29", "19.2075, 6.8198, 38.845, 0.29", "19.3732, 6.57546, 39.2421, 0.29", "19.5251, 6.36724, 39.6164, 0.22", "19.7929, 6.00734, 40.2814, 0.59", "19.9531, 5.78904, 40.5946, 0.59", "21.5991, 6.7565, 46.2014, 0.59", "22.9971, 8.61576, 51.6539, 0.59", "23.9399, 11.0472, 56.9836, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-1.36806, 67.8248, 3.44173, 0.22", "-1.71719, 68.0387, 4.21446, 0.22", "-1.84921, 68.119, 4.50613, 0.59", "-2.10018, 68.2821, 5.05173, 0.59", "-2.32916, 68.4352, 5.52114, 0.81", "-2.72101, 68.6976, 6.3277, 0.74", "-3.13327, 68.969, 7.17252, 1.33", "-3.66228, 69.3743, 8.30608, 0.22", "-3.9082, 69.5703, 8.80006, 0.22", "-4.15693, 69.7789, 9.27411, 0.22", "-4.54051, 70.108, 9.9692, 0.96", "-4.65208, 70.2028, 10.1627, 1.4", "-5.28931, 70.7633, 11.2667, 0.15", "-5.50794, 70.953, 11.6381, 0.15", "-5.63667, 71.0509, 11.8569, 0.52", "-5.76221, 71.1376, 12.0674, 0.66", "-6.2057, 71.4112, 12.7453, 0.15", "-6.48467, 71.5696, 13.1631, 1.11", "-6.80545, 71.7323, 13.6367, 1.11", "-7.34838, 72.025, 14.4235, 0.22", "-7.51232, 72.1161, 14.6548, 0.22", "-7.77005, 72.2654, 15.0121, 0.15", "-8.17343, 72.4892, 15.518, 0.15", "-8.47099, 72.6412, 15.8657, 0.15", "-8.89188, 72.8417, 16.3135, 1.11", "-9.10709, 72.9326, 16.5165, 1.4", "-9.40098, 73.0307, 16.7629, 1.4", "-9.99065, 73.1844, 17.2289, 0.22", "-10.1054, 73.202, 17.3053, 0.22", "-10.4658, 73.2283, 17.5097, 0.59", "-10.5916, 73.2301, 17.5686, 0.59", "-11.0782, 73.2501, 17.7511, 0.22", "-17.2667, 72.7828, 18.9186, 0.22", "-23.3698, 71.3954, 19.8047, 0.22", "-29.6782, 71.4829, 20.0595, 0.22", "-35.9684, 71.8726, 19.663, 0.22", "-42.2225, 72.2592, 20.4462, 0.22", "-48.3918, 73.3049, 21.3233, 0.22" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-1.36806, 67.8248, 3.44173, 0.22", "-2.31399, 68.9516, 3.09313, 0.22", "-2.67602, 69.3814, 2.97187, 0.22", "-3.03859, 69.835, 2.85646, 0.74", "-3.48375, 70.4037, 2.71163, 0.81", "-4.35604, 71.532, 2.43687, 0.29", "-5.05634, 72.4653, 2.17669, 0.29", "-5.49253, 73.0634, 1.99031, 0.29", "-6.11785, 73.9639, 1.68545, 1.18", "-6.46621, 74.4791, 1.50523, 1.47", "-6.71227, 74.8619, 1.36897, 1.77", "-7.24941, 75.7875, 1.07038, 0.29", "-7.69135, 76.6145, 0.798662, 0.22", "-7.93885, 77.0563, 0.646636, 0.37", "-8.18251, 77.4911, 0.505068, 0.37", "-8.66192, 78.361, 0.25043, 0.15", "-9.10851, 79.2031, 0.0173484, 1.33", "-9.3019, 79.5852, -0.0732202, 1.77", "-9.97268, 81.0458, -0.430997, 0.22", "-10.2232, 81.6822, -0.581735, 0.22", "-10.3822, 82.1442, -0.684145, 0.81", "-10.5746, 82.7696, -0.833691, 0.81", "-10.7874, 83.5689, -1.04855, 0.15", "-11.045, 84.7686, -1.39999, 0.22", "-11.2489, 86.0218, -1.77149, 1.84", "-11.3076, 86.4648, -1.91297, 2.5", "-11.4063, 87.3626, -2.22524, 2.5", "-11.5466, 89.003, -2.90004, 0.29", "-11.5732, 89.6472, -3.20656, 0.29", "-11.578, 90.4629, -3.7153, 0.22", "-11.5841, 91.2884, -4.33881, 1.03", "-11.5957, 91.8796, -4.82395, 1.03", "-11.6341, 92.9207, -5.77797, 0.22", "-11.671, 93.3929, -6.26045, 0.81", "-11.8713, 95.2181, -8.18932, 0.22", "-11.9654, 95.93, -8.97223, 0.22", "-12.072, 96.6782, -9.80047, 1.18", "-12.2008, 97.6083, -10.8052, 1.47", "-12.2943, 98.2947, -11.5192, 0.29", "-12.3884, 99.0451, -12.2681, 0.96", "-12.4393, 99.5697, -12.7426, 0.96", "-12.5092, 100.498, -13.5257, 0.29", "-12.5845, 101.608, -14.4199, 1.69", "-12.6332, 102.376, -14.9931, 2.43", "-12.7117, 103.902, -16.0486, 0.29", "-12.756, 104.658, -16.5055, 0.29", "-12.815, 105.536, -16.9474, 0.96", "-12.8598, 106.117, -17.1609, 0.96", "-12.9401, 107.198, -17.4244, 0.22", "-13.0252, 108.518, -17.6527, 1.47", "-13.0666, 109.29, -17.7513, 1.69", "-13.1559, 111.139, -17.9442, 0.29", "-13.2214, 112.513, -18.0521, 0.37", "-13.2657, 113.339, -18.0871, 0.59", "-13.3509, 114.583, -18.1054, 1.47", "-13.4108, 115.255, -18.1265, 1.69" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-29.9462, -76.4065, 26.6901, 0.88", "-31.5801, -77.0455, 25.6836, 0.88", "-32.6383, -77.5126, 25.1419, 0.88", "-33.5126, -77.9214, 24.6695, 0.29", "-34.4974, -78.3899, 24.0951, 0.22", "-35.1659, -78.6849, 23.7098, 0.29", "-35.913, -78.9932, 23.2948, 0.74", "-36.4354, -79.1931, 23.0648, 1.03", "-37.4737, -79.5711, 22.6098, 0.81", "-38.4897, -79.9115, 22.131, 0.22", "-39.6067, -80.3092, 21.5911, 0.22", "-40.0974, -80.4739, 21.3622, 0.96", "-40.6122, -80.6304, 21.1034, 0.96", "-41.1499, -80.7875, 20.8288, 0.96", "-42.4304, -81.1606, 20.203, 0.29", "-43.2249, -81.392, 19.8057, 1.69", "-43.8084, -81.5467, 19.4678, 1.99", "-45.8038, -81.9899, 18.241, 0.22", "-46.631, -82.1384, 17.72, 0.22", "-47.6083, -82.2514, 17.0673, 1.18", "-47.897, -82.2635, 16.862, 1.4", "-49.6186, -82.2184, 15.6687, 0.22", "-50.1187, -82.185, 15.3489, 0.88", "-50.4265, -82.1549, 15.1752, 0.88", "-51.9742, -81.9884, 14.3298, 0.22", "-52.6187, -81.9255, 13.9652, 0.22", "-54.0478, -81.8265, 13.1694, 0.22", "-54.7465, -81.8069, 12.7902, 0.22", "-55.2619, -81.8103, 12.4876, 1.03", "-55.7035, -81.8256, 12.2216, 1.03", "-57.0084, -81.9286, 11.4488, 0.15", "-57.3238, -81.9753, 11.2374, 0.88", "-57.8741, -82.1134, 10.8353, 0.88", "-58.8974, -82.4849, 9.95537, 0.22", "-59.1452, -82.5955, 9.72637, 0.74", "-59.4263, -82.7482, 9.44226, 0.88", "-60.4654, -83.4035, 8.35573, 0.22", "-60.9541, -83.7311, 7.82099, 0.88", "-62.4035, -84.7949, 6.16218, 0.22", "-62.5126, -84.8856, 6.02494, 0.81", "-63.576, -85.8054, 4.60143, 0.22", "-63.9857, -86.1682, 4.01777, 1.18" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-29.9462, -76.4065, 26.6901, 0.29", "-30.4379, -77.0988, 27.2463, 0.29", "-30.8483, -77.6146, 27.6879, 0.59", "-31.2461, -78.0991, 28.098, 0.59", "-31.9436, -78.9801, 28.789, 0.22", "-32.3061, -79.4861, 29.1608, 1.03", "-33.038, -80.5302, 29.9104, 2.14", "-33.4689, -81.0964, 30.3266, 2.14", "-34.1996, -82.0598, 30.9991, 0.52", "-34.7046, -82.7644, 31.423, 0.22", "-35.0909, -83.3232, 31.7168, 0.22", "-35.5324, -83.9938, 32.0489, 0.22", "-36.2813, -85.1071, 32.585, 0.96", "-36.7512, -85.7221, 32.9025, 1.33", "-37.3184, -86.3354, 33.2587, 0.88", "-37.9806, -86.9095, 33.6445, 0.59", "-38.8521, -87.5006, 34.0901, 0.29", "-39.3756, -87.7835, 34.3147, 0.29", "-40.0504, -88.0473, 34.5434, 0.29", "-40.5671, -88.2028, 34.6962, 0.81", "-40.9384, -88.2933, 34.8006, 0.96", "-41.6024, -88.4692, 34.9677, 0.81", "-42.5667, -88.8276, 35.2015, 0.29", "-43.1459, -89.1555, 35.3674, 0.74", "-43.5915, -89.5045, 35.5231, 1.03", "-44.0868, -89.9991, 35.7325, 1.03", "-44.7495, -90.8123, 36.0585, 0.29", "-45.278, -91.5445, 36.3511, 0.44", "-45.7788, -92.2442, 36.6301, 0.59", "-46.1835, -92.7203, 36.8045, 0.59", "-46.4795, -92.9847, 36.8836, 0.22", "-46.9497, -93.2744, 36.9423, 0.22", "-47.8674, -93.6233, 37.0074, 0.74", "-48.6384, -93.8022, 37.0453, 0.96", "-49.9118, -93.9861, 37.1044, 0.66", "-50.8697, -94.0842, 37.1483, 0.44", "-51.5777, -94.1468, 37.1809, 0.88", "-52.3646, -94.2281, 37.2439, 1.03", "-53.2271, -94.3534, 37.3505, 0.81", "-54.5892, -94.6358, 37.6106, 0.29", "-55.4686, -94.916, 37.8625, 0.52", "-56.0878, -95.2027, 38.1198, 0.29", "-57.074, -95.8243, 38.6427, 0.29", "-57.5428, -96.225, 38.9401, 1.03", "-58.0146, -96.7522, 39.287, 1.33", "-58.7796, -97.802, 39.9046, 0.81", "-59.5481, -98.9381, 40.5088, 0.44", "-59.9427, -99.4957, 40.7399, 0.81", "-60.5875, -100.331, 40.9603, 0.44", "-61.2409, -101.098, 41.0471, 0.44", "-61.782, -101.681, 41.0046, 0.88", "-62.6741, -102.516, 40.7702, 1.03", "-63.9144, -103.555, 40.2629, 0.52", "-64.7879, -104.177, 39.8482, 0.96", "-65.6013, -104.661, 39.4237, 1.55", "-66.4383, -105.079, 38.9689, 1.84", "-67.5476, -105.542, 38.3434, 0.66", "-68.5882, -105.894, 37.7429, 0.29", "-69.6701, -106.225, 37.1096, 0.37", "-70.4292, -106.461, 36.6433, 0.96", "-71.0712, -106.695, 36.2345, 1.25", "-72.0598, -107.193, 35.6004, 0.96", "-72.9052, -107.815, 34.9944, 0.52", "-73.8184, -108.749, 34.2839, 0.37", "-74.2994, -109.455, 33.858, 1.03", "-74.7629, -110.384, 33.3902, 0.88", "-75.2731, -111.775, 32.7832, 0.81", "-75.5146, -112.82, 32.4154, 1.03", "-75.61, -113.607, 32.1851, 0.88", "-75.679, -114.778, 31.9053, 0.74", "-75.6899, -115.802, 31.6759, 0.66", "-75.6437, -116.889, 31.4451, 0.52", "-75.5404, -118.178, 31.1333, 0.29", "-75.5068, -118.82, 30.9739, 0.29", "-75.5293, -119.483, 30.7882, 0.29", "-75.6324, -120.365, 30.5198, 0.96", "-75.7502, -120.902, 30.3769, 1.55", "-75.9932, -121.66, 30.2161, 1.55", "-76.4015, -122.611, 30.0441, 0.52", "-76.7484, -123.394, 29.9457, 0.22", "-77.0396, -124.168, 29.8903, 0.22", "-77.4455, -125.454, 29.8594, 0.81", "-77.5779, -126.015, 29.8636, 1.11", "-77.7534, -126.968, 29.8963, 1.11", "-78.0041, -128.512, 29.9555, 0.22", "-78.2712, -130.012, 30.0125, 1.47", "-78.4269, -130.721, 30.0398, 1.77", "-78.842, -132.356, 30.0672, 0.37", "-79.1488, -133.398, 30.06, 0.37", "-79.433, -134.14, 30.0382, 1.18", "-79.9969, -135.046, 29.9498, 0.88", "-80.5126, -135.599, 29.8307, 0.59", "-81.3231, -136.265, 29.6151, 0.37", "-82.0158, -136.714, 29.4194, 1.33", "-82.8795, -137.183, 29.1402, 1.55", "-84.4589, -137.938, 28.6134, 0.29", "-85.4495, -138.391, 28.2846, 0.29", "-86.0705, -138.665, 28.0927, 0.74", "-86.8257, -139.014, 27.8864, 0.74", "-88.43, -139.824, 27.4656, 0.29", "-89.5922, -140.516, 27.182, 0.88", "-90.3613, -141.049, 27.0424, 1.11", "-91.2797, -141.737, 26.9521, 0.81", "-92.0143, -142.366, 26.8978, 0.44", "-92.5639, -142.938, 26.877, 0.37", "-93.1143, -143.674, 26.8528, 1.03", "-93.6802, -144.554, 26.505, 1.62", "-94.1423, -145.364, 25.8429, 1.62", "-94.7399, -146.546, 24.6406, 0.44", "-95.0691, -147.182, 23.907, 0.37", "-95.5116, -148.008, 22.8697, 1.47", "-97.1121, -150.961, 18.9145, 1.33", "-98.0119, -152.591, 16.6609, 0.22", "-98.3076, -153.078, 15.9694, 0.22", "-98.6531, -153.541, 15.2973, 0.29", "-98.9371, -153.892, 14.8498, 0.29", "-99.4538, -154.526, 14.2861, 0.81", "-100.052, -155.353, 13.9736, 0.81", "-100.716, -156.358, 13.7236, 1.77", "-101.153, -157.108, 13.5567, 2.06", "-102.196, -159.226, 13.1132, 0.22", "-102.648, -160.194, 12.925, 0.22", "-103.084, -161.095, 12.7953, 1.33", "-103.502, -161.906, 12.7227, 1.55", "-103.967, -162.707, 12.6707, 1.33", "-104.931, -163.953, 12.6115, 0.22", "-105.711, -164.674, 12.5866, 0.22", "-106.754, -165.522, 12.5315, 1.25", "-107.18, -165.831, 12.5025, 1.77", "-108.26, -166.584, 12.4181, 2.06", "-110.022, -167.833, 12.3188, 0.22", "-110.577, -168.238, 12.2986, 1.11", "-111.174, -168.742, 12.2526, 1.11", "-112.169, -169.711, 12.2103, 0.15", "-112.779, -170.366, 12.2292, 0.15", "-113.835, -171.612, 12.4221, 2.14", "-114.243, -172.156, 12.4871, 2.28", "-115.362, -173.744, 12.5534, 0.22", "-116.273, -175.13, 12.4881, 1.03", "-116.54, -175.569, 12.4257, 1.25", "-117.65, -177.38, 11.9098, 0.22", "-118.81, -179.174, 11.1215, 0.22", "-119.521, -180.159, 10.5847, 1.55", "-119.959, -180.666, 10.245, 1.92", "-120.564, -181.255, 9.79309, 1.55", "-121.722, -182.164, 9.0465, 0.59", "-122.574, -182.674, 8.63509, 0.29", "-123.494, -183.138, 8.39541, 0.29", "-124.294, -183.529, 8.25869, 0.22", "-125.323, -184.051, 8.10375, 1.03", "-125.984, -184.405, 8.01528, 1.25", "-127.362, -185.158, 7.89521, 0.22", "-128.346, -185.748, 7.79278, 0.22", "-129.159, -186.308, 7.65986, 1.47", "-129.928, -186.925, 7.4672, 1.69", "-130.145, -187.132, 7.38581, 1.69" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-36.8818, 37.2912, 33.841, 0.81", "-38.0023, 38.7099, 34.3833, 0.81", "-39.4528, 40.3008, 34.9024, 1.03", "-40.1513, 40.9747, 35.1215, 0.29", "-40.6217, 41.3787, 35.2493, 0.29", "-41.7002, 42.2285, 35.5179, 0.88", "-42.3636, 42.7077, 35.6668, 0.74", "-43.0669, 43.1236, 35.799, 0.74", "-43.7901, 43.4902, 35.8332, 1.11", "-44.3901, 43.734, 35.8602, 1.11", "-44.6094, 43.8117, 35.8719, 0.96", "-45.1507, 43.947, 35.9152, 0.59", "-45.9606, 44.1138, 35.9653, 0.37", "-54.706, 50.4607, 38.1423, 0.37", "-63.3012, 56.7799, 40.9094, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-36.8818, 37.2912, 33.841, 0.22", "-38.0207, 36.1741, 33.5292, 0.22", "-38.7138, 35.4655, 33.299, 0.81", "-39.0049, 35.1591, 33.1947, 0.81", "-39.9456, 34.1075, 32.8437, 0.22", "-40.282, 33.7314, 32.7182, 0.22", "-41.1758, 32.7321, 32.3847, 0.22", "-41.6571, 32.2219, 32.1699, 0.22", "-42.0519, 31.7592, 31.9741, 0.88", "-42.494, 31.1904, 31.7331, 0.88", "-51.1212, 23.732, 30.4324, 0.88" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-48.3918, 73.3049, 21.3233, 0.22", "-60.5424, 74.742, 26.2665, 0.22", "-72.4973, 78.3498, 30.5943, 0.22", "-85.2494, 81.314, 32.3343, 0.22" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-48.3918, 73.3049, 21.3233, 0.22", "-56.3049, 74.2055, 23.5381, 0.22", "-63.6261, 75.9872, 26.9552, 0.22", "-71.1594, 78.3182, 29.48, 0.22" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-13.4108, 115.255, -18.1265, 0.74", "-13.5647, 117.103, -16.6191, 0.74", "-13.6399, 117.841, -16.0946, 0.22", "-13.8594, 119.6, -14.8094, 0.22", "-13.9829, 120.542, -14.1184, 0.66", "-14.052, 121.205, -13.6628, 0.74", "-14.1687, 122.771, -12.6632, 0.22", "-14.242, 124.243, -11.8698, 0.15", "-14.278, 126.474, -10.7815, 1.47", "-14.2655, 126.97, -10.5646, 1.77", "-14.0726, 129.809, -9.43229, 0.15", "-13.8444, 131.772, -8.74864, 0.15", "-13.6555, 132.842, -8.43344, 0.74", "-13.5541, 133.319, -8.30179, 0.74", "-13.2825, 134.403, -8.026, 0.15", "-13.1822, 134.874, -7.82993, 0.52", "-13.148, 135.215, -7.60588, 0.44", "-13.1812, 136.006, -6.93441, 0.15", "-13.4452, 137.275, -5.69934, 0.96", "-13.7961, 138.23, -4.70177, 0.37", "-14.7419, 140.04, -2.73716, 0.15", "-15.2607, 140.841, -1.92113, 0.15", "-15.5438, 141.241, -1.56824, 0.59", "-16.3954, 142.378, -0.716351, 0.15", "-16.9605, 143.164, -0.275437, 0.88", "-17.3389, 143.729, -0.0412105, 1.11", "-18.3, 145.318, 0.406636, 0.15", "-19.1394, 146.91, 0.792714, 0.15", "-19.4116, 147.507, 0.919056, 0.15", "-19.7422, 148.434, 1.05847, 0.81", "-19.8961, 148.99, 1.12992, 1.11" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-13.4108, 115.255, -18.1265, 0.29", "-13.5849, 116.563, -17.9772, 0.29", "-13.8847, 118.572, -17.7314, 0.15", "-14.0028, 119.348, -17.637, 0.66", "-14.0942, 119.998, -17.5625, 0.66", "-14.2724, 121.325, -17.4157, 0.15", "-14.3629, 122.076, -17.34, 0.15", "-14.4659, 123.104, -17.2459, 1.18", "-14.4958, 123.947, -17.1596, 1.47", "-14.4893, 125.383, -17.0125, 0.22", "-14.4758, 125.637, -16.9889, 0.37", "-14.3103, 127.084, -16.9323, 0.15", "-14.2363, 127.568, -16.9197, 0.44", "-13.8454, 129.66, -16.9395, 0.22", "-13.755, 130.109, -16.9602, 0.74", "-13.5855, 130.963, -17.0216, 0.22", "-13.3266, 132.422, -17.1261, 1.33", "-13.2511, 133.014, -17.1603, 1.55", "-13.1113, 134.852, -17.2443, 0.15", "-13.0841, 135.638, -17.2671, 0.15", "-13.0723, 136.744, -17.2737, 1.47", "-13.094, 137.784, -17.2571, 1.62", "-13.2523, 140.66, -17.1349, 0.22", "-13.3425, 141.762, -17.0681, 0.44", "-13.4914, 143.12, -16.9547, 0.15", "-13.624, 144.143, -16.8611, 0.74", "-13.7099, 144.734, -16.8084, 0.74", "-14.0764, 146.767, -16.6365, 0.22", "-14.2874, 147.68, -16.5438, 0.66", "-14.379, 148.019, -16.505, 0.66", "-14.9582, 149.907, -16.2786, 0.22", "-15.148, 150.463, -16.2119, 0.29", "-16.0486, 152.799, -15.9509, 0.15", "-16.803, 154.529, -15.7667, 1.33", "-17.1013, 155.161, -15.7078, 1.47", "-17.9386, 156.815, -15.5592, 0.15", "-18.3454, 157.561, -15.4975, 0.15", "-18.821, 158.408, -15.432, 0.15", "-19.277, 159.207, -15.3803, 1.18", "-19.4493, 159.544, -15.3655, 1.18", "-19.8995, 160.603, -15.3271, 0.15", "-20.1403, 161.336, -15.3001, 0.15", "-20.2836, 162.016, -15.2746, 0.81", "-20.3366, 162.45, -15.2593, 0.88", "-20.4584, 164.414, -15.1682, 0.15", "-20.4737, 165.017, -15.1336, 0.15", "-20.4447, 166.041, -15.0632, 0.96", "-20.3295, 167.828, -14.9172, 0.22", "-20.227, 168.873, -14.8205, 0.22", "-20.0912, 169.871, -14.7162, 0.88", "-20.0093, 170.293, -14.696, 1.03", "-19.6887, 171.821, -14.7257, 0.15", "-19.4469, 172.893, -14.8402, 0.15", "-19.1837, 174.042, -15.1114, 1.11", "-19.073, 174.549, -15.2733, 1.11", "-18.6035, 176.713, -16.0567, 0.15", "-18.3979, 177.633, -16.3967, 0.96", "-18.2366, 178.337, -16.6633, 1.25", "-17.846, 179.998, -17.2646, 0.22", "-17.5368, 181.355, -17.7039, 0.22", "-17.2994, 182.427, -18.0063, 0.88", "-17.1155, 183.256, -18.1789, 0.22", "-16.9186, 184.079, -18.3543, 0.88", "-16.7984, 184.64, -18.4935, 0.88", "-16.4261, 186.386, -18.9406, 0.15", "-16.258, 187.23, -19.2116, 0.15", "-16.1421, 187.93, -19.4829, 1.4", "-16.0147, 188.881, -19.909, 1.4", "-15.8737, 190.191, -20.5728, 0.81" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-130.145, -187.132, 7.38581, 0.22", "-130.326, -188.143, 6.09295, 0.22", "-130.395, -188.511, 5.64828, 0.44", "-130.64, -189.771, 4.21896, 0.22", "-130.766, -190.426, 3.52046, 0.74", "-130.845, -190.872, 3.06059, 0.74", "-131.114, -192.832, 1.11763, 1.47", "-131.268, -194.128, -0.0898361, 0.22", "-131.339, -194.881, -0.742273, 0.22", "-131.397, -195.818, -1.43373, 1.03", "-131.407, -196.1, -1.62214, 1.03", "-131.423, -196.973, -2.16413, 0.22", "-131.401, -198.046, -2.7573, 0.22", "-131.388, -198.882, -3.23574, 1.33", "-131.389, -199.415, -3.57582, 1.62", "-131.415, -200.212, -4.14848, 0.29", "-131.514, -201.168, -4.93163, 0.15", "-131.56, -201.439, -5.18913, 0.96", "-131.62, -201.757, -5.50743, 0.96", "-131.767, -202.523, -6.26581, 0.22", "-131.831, -202.882, -6.60176, 0.44", "-131.956, -203.754, -7.30827, 0.22", "-132.083, -204.864, -8.05606, 0.22", "-132.137, -205.601, -8.4671, 1.4", "-132.15, -206.02, -8.66382, 1.4", "-132.152, -207.463, -9.25417, 0.15", "-132.147, -208.341, -9.60927, 0.15", "-132.153, -209.054, -9.90617, 0.15", "-132.204, -210.047, -10.3787, 1.4", "-132.349, -211.362, -11.1719, 0.15", "-132.572, -212.389, -11.9787, 0.15", "-132.881, -213.02, -12.7455, 0.96", "-133.181, -213.253, -13.556, 0.44", "-133.467, -213.287, -14.3663, 0.15", "-133.82, -213.238, -15.4611, 0.15", "-134.118, -213.12, -16.3994, 1.77", "-134.382, -212.961, -17.2852, 2.14", "-135.304, -212.252, -20.8238, 0.37", "-135.511, -212.065, -21.7807, 0.59", "-135.895, -211.728, -23.8538, 0.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-130.145, -187.132, 7.38581, 0.22", "-130.289, -188.65, 7.68164, 0.22", "-130.428, -189.969, 7.88783, 0.81", "-130.482, -190.497, 7.95674, 0.66", "-130.581, -191.517, 8.07379, 0.22", "-130.662, -192.328, 8.15356, 0.22", "-130.738, -193.083, 8.23223, 0.88", "-130.793, -193.992, 8.31588, 0.22", "-130.839, -194.603, 8.35345, 0.74", "-130.873, -194.935, 8.37978, 0.74", "-131.032, -195.908, 8.52067, 0.22", "-131.11, -196.3, 8.60038, 1.03", "-131.238, -196.901, 8.77157, 1.03", "-131.549, -198.22, 9.2677, 0.22", "-131.668, -198.677, 9.46915, 0.81", "-131.986, -199.912, 10.0823, 0.22", "-132.097, -200.329, 10.304, 0.81", "-132.4, -201.426, 10.9791, 0.22", "-132.629, -202.274, 11.5858, 1.03", "-132.708, -202.563, 11.8163, 1.11", "-132.984, -203.55, 12.6356, 0.22", "-133.157, -204.085, 13.1032, 0.22", "-133.648, -205.547, 14.4156, 0.22", "-133.901, -206.261, 15.0785, 0.22", "-134.048, -206.649, 15.4483, 0.59", "-134.286, -207.2, 16.0087, 0.22", "-134.616, -207.819, 16.7197, 0.81", "-135.096, -215.896, 21.1924, 0.81" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_26", "dend_25", "dend_14", "dend_13", "dend_8", "dend_1", "dend_0", "apic_4", "apic_1", "dend_18", "dend_15", "dend_12", "dend_9", "dend_7", "dend_2", "apic_6", "apic_5", "apic_3", "apic_2", "dend_20", "dend_19", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_3", "apic_10", "apic_7", "dend_24", "dend_21", "dend_6", "dend_5", "apic_12", "apic_11", "apic_9", "apic_8", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_26", "dend_25", "dend_14", "dend_13", "dend_8", "dend_1", "dend_0", "apic_4", "apic_1", "dend_18", "dend_15", "dend_12", "dend_9", "dend_7", "dend_2", "apic_6", "apic_5", "apic_3", "apic_2", "dend_20", "dend_19", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_3", "apic_10", "apic_7", "dend_24", "dend_21", "dend_6", "dend_5", "apic_12", "apic_11", "apic_9", "apic_8", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_26", "dend_25", "dend_14", "dend_13", "dend_8", "dend_1", "dend_0", "axon_0", "apic_4", "apic_1", "dend_18", "dend_15", "dend_12", "dend_9", "dend_7", "dend_2", "axon_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_20", "dend_19", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_3", "apic_10", "apic_7", "dend_24", "dend_21", "dend_6", "dend_5", "apic_12", "apic_11", "apic_9", "apic_8", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_NBC_9060dda08b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_26, dend_25, dend_14, dend_13, dend_8, dend_1, dend_0, apic_4, apic_1, dend_18, dend_15, dend_12, dend_9, dend_7, dend_2, apic_6, apic_5, apic_3, apic_2, dend_20, dend_19, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_10, apic_7, dend_24, dend_21, dend_6, dend_5, apic_12, apic_11, apic_9, apic_8, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_26, dend_25, dend_14, dend_13, dend_8, dend_1, dend_0, apic_4, apic_1, dend_18, dend_15, dend_12, dend_9, dend_7, dend_2, apic_6, apic_5, apic_3, apic_2, dend_20, dend_19, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_10, apic_7, dend_24, dend_21, dend_6, dend_5, apic_12, apic_11, apic_9, apic_8, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_26, dend_25, dend_14, dend_13, dend_8, dend_1, dend_0, axon_0, apic_4, apic_1, dend_18, dend_15, dend_12, dend_9, dend_7, dend_2, axon_1, apic_6, apic_5, apic_3, apic_2, dend_20, dend_19, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_10, apic_7, dend_24, dend_21, dend_6, dend_5, apic_12, apic_11, apic_9, apic_8, dend_23, dend_22]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999969881875084)
    connect dend_26(0), soma_0(0.49999969881875084)
    connect dend_25(0), soma_0(0.49999969881875084)
    connect dend_14(0), soma_0(0.49999969881875084)
    connect dend_13(0), soma_0(0.49999969881875084)
    connect dend_8(0), soma_0(0.49999969881875084)
    connect dend_1(0), soma_0(0.49999969881875084)
    connect dend_0(0), soma_0(0.49999969881875084)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.014127, 6.44634, 0.837743, 3.02315 ) }
    soma_0 { pt3dadd( -0.0365024, 5.75805, 0.734631, 5.53989 ) }
    soma_0 { pt3dadd( -0.0871319, 5.06975, 0.63152, 7.90085 ) }
    soma_0 { pt3dadd( -0.137761, 4.38145, 0.528408, 9.81426 ) }
    soma_0 { pt3dadd( -0.188391, 3.69316, 0.425297, 11.1517 ) }
    soma_0 { pt3dadd( -0.23902, 3.00486, 0.322185, 12.173 ) }
    soma_0 { pt3dadd( -0.28965, 2.31656, 0.219074, 12.615 ) }
    soma_0 { pt3dadd( -0.340279, 1.62826, 0.115962, 12.9535 ) }
    soma_0 { pt3dadd( -0.390908, 0.939968, 0.0128508, 12.9803 ) }
    soma_0 { pt3dadd( -0.441538, 0.251671, -0.0902607, 13.0342 ) }
    soma_0 { pt3dadd( -0.492167, -0.436626, -0.193372, 13.0362 ) }
    soma_0 { pt3dadd( -0.542797, -1.12492, -0.296484, 12.9524 ) }
    soma_0 { pt3dadd( -0.593426, -1.81322, -0.399595, 12.7739 ) }
    soma_0 { pt3dadd( -0.644056, -2.50152, -0.502707, 12.3636 ) }
    soma_0 { pt3dadd( -0.694685, -3.18981, -0.605818, 11.652 ) }
    soma_0 { pt3dadd( -0.745315, -3.87811, -0.70893, 10.8548 ) }
    soma_0 { pt3dadd( -0.795944, -4.56641, -0.812041, 9.95893 ) }
    soma_0 { pt3dadd( -0.846573, -5.2547, -0.915153, 8.94982 ) }
    soma_0 { pt3dadd( -0.897203, -5.943, -1.01826, 7.49826 ) }
    soma_0 { pt3dadd( -0.947832, -6.6313, -1.12138, 5.61766 ) }
    soma_0 { pt3dadd( -0.998462, -7.3196, -1.22449, 3.06786 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.690881, 5.60035, 2.74524, 0.59 ) }
    apic_0 { pt3dadd( 0.657121, 5.95325, 2.85491, 0.59 ) }
    apic_0 { pt3dadd( 0.57419, 6.38004, 2.94796, 0.59 ) }
    apic_0 { pt3dadd( 0.407719, 7.22114, 3.05309, 0.59 ) }
    apic_0 { pt3dadd( 0.254592, 8.11236, 3.10748, 0.74 ) }
    apic_0 { pt3dadd( 0.187787, 8.64739, 3.11965, 0.81 ) }
    apic_0 { pt3dadd( 0.143053, 9.19552, 3.1192, 0.74 ) }
    apic_0 { pt3dadd( 0.109593, 9.96864, 3.08769, 0.59 ) }
    apic_0 { pt3dadd( 0.113756, 10.9164, 2.99748, 0.59 ) }
    apic_0 { pt3dadd( 0.187522, 11.6091, 2.89518, 1.33 ) }
    apic_0 { pt3dadd( 0.330152, 12.2767, 2.77458, 1.47 ) }
    apic_0 { pt3dadd( 0.45956, 12.6986, 2.70275, 1.77 ) }
    apic_0 { pt3dadd( 0.596439, 13.0783, 2.64628, 1.77 ) }
    apic_0 { pt3dadd( 0.814717, 13.66, 2.60067, 1.47 ) }
    apic_0 { pt3dadd( 1.17754, 14.7035, 2.60076, 0.74 ) }
    apic_0 { pt3dadd( 1.41408, 15.4969, 2.65918, 0.74 ) }
    apic_0 { pt3dadd( 1.62805, 16.3823, 2.78373, 0.66 ) }
    apic_0 { pt3dadd( 1.75649, 17.1012, 2.93485, 0.66 ) }
    apic_0 { pt3dadd( 1.88575, 18.2688, 3.25198, 1.47 ) }
    apic_0 { pt3dadd( 1.92296, 18.9809, 3.47972, 2.14 ) }
    apic_0 { pt3dadd( 1.91868, 19.5766, 3.68836, 2.36 ) }
    apic_0 { pt3dadd( 1.89333, 20.1475, 3.89298, 2.5 ) }
    apic_0 { pt3dadd( 1.86403, 20.7778, 4.10927, 1.92 ) }
    apic_0 { pt3dadd( 1.8389, 22.0359, 4.46687, 0.66 ) }
    apic_0 { pt3dadd( 1.84572, 22.524, 4.56668, 0.88 ) }
    apic_0 { pt3dadd( 1.86565, 23.0784, 4.64294, 0.88 ) }
    apic_0 { pt3dadd( 1.89516, 23.6255, 4.68441, 0.59 ) }
    apic_0 { pt3dadd( 1.97278, 24.9736, 4.68454, 0.66 ) }
    apic_0 { pt3dadd( 2.0238, 25.9312, 4.61414, 0.88 ) }
    apic_0 { pt3dadd( 2.04563, 26.6708, 4.51851, 0.88 ) }
    apic_0 { pt3dadd( 2.04533, 27.3776, 4.41821, 0.66 ) }
    apic_0 { pt3dadd( 2.0209, 27.927, 4.29858, 0.66 ) }
    apic_0 { pt3dadd( 1.91812, 29.033, 4.06109, 1.18 ) }
    apic_0 { pt3dadd( 1.80228, 29.8075, 3.90865, 1.47 ) }
    apic_0 { pt3dadd( 1.71381, 30.2665, 3.84609, 1.69 ) }
    apic_0 { pt3dadd( 1.56207, 31.008, 3.80709, 1.03 ) }
    apic_0 { pt3dadd( 1.27924, 32.5507, 3.86151, 0.66 ) }
    apic_0 { pt3dadd( 1.05922, 34.0038, 3.98157, 1.03 ) }
    apic_0 { pt3dadd( 0.990804, 34.5808, 4.07569, 1.25 ) }
    apic_0 { pt3dadd( 0.945089, 35.1257, 4.18829, 1.25 ) }
    apic_0 { pt3dadd( 0.894059, 35.9701, 4.37864, 0.37 ) }
    apic_0 { pt3dadd( 0.877472, 36.4552, 4.49691, 0.37 ) }
    apic_0 { pt3dadd( 0.877456, 37.3639, 4.78436, 1.77 ) }
    apic_0 { pt3dadd( 0.906887, 38.2502, 4.92814, 2.06 ) }
    apic_0 { pt3dadd( 0.928804, 38.6134, 4.97426, 2.28 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 66/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.78088, -5.1519, -12.2548, 1.03 ) }
    dend_26 { pt3dadd( 2.7049, -5.10222, -12.3798, 0.81 ) }
    dend_26 { pt3dadd( 3.09787, -5.06928, -12.4929, 0.81 ) }
    dend_26 { pt3dadd( 3.95858, -4.99864, -12.8995, 0.59 ) }
    dend_26 { pt3dadd( 5.04543, -4.89664, -13.5023, 1.25 ) }
    dend_26 { pt3dadd( 5.40061, -4.85647, -13.7144, 1.47 ) }
    dend_26 { pt3dadd( 5.72764, -4.80898, -13.9266, 1.47 ) }
    dend_26 { pt3dadd( 6.95321, -4.58044, -14.9028, 0.59 ) }
    dend_26 { pt3dadd( 7.93491, -4.31631, -16.0205, 1.62 ) }
    dend_26 { pt3dadd( 8.26649, -4.18655, -16.5456, 2.06 ) }
    dend_26 { pt3dadd( 8.54652, -4.04512, -17.1335, 2.36 ) }
    dend_26 { pt3dadd( 8.82073, -3.85631, -17.8134, 2.5 ) }
    dend_26 { pt3dadd( 9.39263, -3.366, -19.3288, 2.06 ) }
    dend_26 { pt3dadd( 10.2856, -2.51472, -21.7646, 1.62 ) }
    dend_26 { pt3dadd( 11.2127, -1.63296, -24.2148, 1.77 ) }
    dend_26 { pt3dadd( 12.199, -0.779923, -26.6416, 0.81 ) }
    dend_26 { pt3dadd( 12.9318, -0.261988, -28.2757, 0.74 ) }
    dend_26 { pt3dadd( 14.1106, 0.40288, -30.6261, 1.92 ) }
    dend_26 { pt3dadd( 14.3868, 0.531477, -31.1288, 1.55 ) }
    dend_26 { pt3dadd( 14.8455, 0.705851, -31.8743, 1.18 ) }
    dend_26 { pt3dadd( 15.6635, 0.930495, -33.071, 1.92 ) }
    dend_26 { pt3dadd( 17.0114, 1.1549, -34.8773, 1.47 ) }
    dend_26 { pt3dadd( 18.6465, 1.22851, -37.1111, 0.96 ) }
    dend_26 { pt3dadd( 20.2465, 1.21499, -39.5381, 1.03 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 90/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.26912, -5.85915, 6.05524, 1.25 ) }
    dend_25 { pt3dadd( -1.499, -7.10777, 6.28526, 0.74 ) }
    dend_25 { pt3dadd( -1.69392, -8.20396, 6.40432, 0.96 ) }
    dend_25 { pt3dadd( -1.86742, -9.16455, 6.4742, 1.62 ) }
    dend_25 { pt3dadd( -2.08289, -10.3493, 6.65667, 1.62 ) }
    dend_25 { pt3dadd( -2.23625, -11.1983, 6.87761, 1.18 ) }
    dend_25 { pt3dadd( -2.41033, -12.2025, 7.32542, 0.59 ) }
    dend_25 { pt3dadd( -2.56115, -13.1324, 8.09476, 0.52 ) }
    dend_25 { pt3dadd( -2.58927, -13.4501, 8.47816, 0.74 ) }
    dend_25 { pt3dadd( -2.5822, -14.511, 10.3957, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -2.47237, -15.1705, 12.3001, 1.4 ) }
    dend_25 { pt3dadd( -2.21382, -15.742, 15.3233, 2.5 ) }
    dend_25 { pt3dadd( -1.89784, -15.8654, 18.6932, 0.96 ) }
    dend_25 { pt3dadd( -1.75094, -15.7173, 20.0801, 0.59 ) }
    dend_25 { pt3dadd( -1.53947, -15.3063, 21.5239, 0.96 ) }
    dend_25 { pt3dadd( -1.32846, -14.691, 22.7571, 1.47 ) }
    dend_25 { pt3dadd( -1.17984, -14.0496, 23.7755, 1.33 ) }
    dend_25 { pt3dadd( -1.07496, -13.0846, 25.156, 0.88 ) }
    dend_25 { pt3dadd( -1.11643, -12.4952, 26.0594, 0.59 ) }
    dend_25 { pt3dadd( -1.40967, -11.5278, 27.8317, 1.62 ) }
    dend_25 { pt3dadd( -2.04533, -10.3152, 30.5821, 1.11 ) }
    dend_25 { pt3dadd( -2.5221, -9.7344, 32.4113, 0.52 ) }
    dend_25 { pt3dadd( -2.87894, -9.5083, 33.7203, 0.52 ) }
    dend_25 { pt3dadd( -3.21994, -9.50592, 34.9381, 0.44 ) }
    dend_25 { pt3dadd( -3.54244, -9.75354, 36.094, 0.29 ) }
    dend_25 { pt3dadd( -3.72075, -10.2692, 37.1043, 0.52 ) }
    dend_25 { pt3dadd( -3.56255, -10.783, 37.9593, 0.96 ) }
    dend_25 { pt3dadd( -3.34052, -11.0682, 38.5854, 0.59 ) }
    dend_25 { pt3dadd( -3.01948, -11.3749, 39.4903, 0.37 ) }
    dend_25 { pt3dadd( -2.58213, -11.845, 40.9822, 0.37 ) }
    dend_25 { pt3dadd( -2.20954, -12.4231, 42.8636, 1.4 ) }
    dend_25 { pt3dadd( -1.9342, -13.4183, 46.0286, 0.66 ) }
    dend_25 { pt3dadd( -1.90508, -13.7404, 47.0055, 0.52 ) }
    dend_25 { pt3dadd( -1.9318, -14.1381, 48.272, 0.52 ) }
    dend_25 { pt3dadd( -2.06388, -14.6647, 50.2599, 0.81 ) }
    dend_25 { pt3dadd( -2.2055, -14.9414, 51.6567, 1.18 ) }
    dend_25 { pt3dadd( -2.46517, -15.145, 53.3591, 0.74 ) }
    dend_25 { pt3dadd( -2.69414, -15.1865, 54.5333, 0.59 ) }
    dend_25 { pt3dadd( -2.98248, -15.1072, 55.948, 0.37 ) }
    dend_25 { pt3dadd( -3.3007, -14.8628, 57.8769, 0.81 ) }
    dend_25 { pt3dadd( -3.53568, -14.542, 59.5266, 0.66 ) }
    dend_25 { pt3dadd( -3.68797, -14.2834, 60.8823, 0.52 ) }
    dend_25 { pt3dadd( -3.787, -14.0619, 62.18, 0.74 ) }
    dend_25 { pt3dadd( -3.86365, -13.809, 64.0973, 1.18 ) }
    dend_25 { pt3dadd( -3.86407, -13.7525, 65.4674, 0.52 ) }
    dend_25 { pt3dadd( -3.83528, -13.8358, 66.5263, 0.52 ) }
    dend_25 { pt3dadd( -3.72933, -14.1518, 68.1973, 0.52 ) }
    dend_25 { pt3dadd( -3.6079, -14.4125, 69.1228, 0.37 ) }
    dend_25 { pt3dadd( -3.08351, -15.0758, 71.5918, 0.22 ) }
    dend_25 { pt3dadd( -2.84582, -15.2453, 72.4991, 0.37 ) }
    dend_25 { pt3dadd( -2.73192, -15.3011, 73.4096, 0.52 ) }
    dend_25 { pt3dadd( -2.76357, -15.2688, 74.0285, 0.22 ) }
    dend_25 { pt3dadd( -3.11345, -15.0881, 74.8918, 0.22 ) }
    dend_25 { pt3dadd( -1.97482, -17.5417, 85.2535, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 44/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.580881, -5.6029, -10.5048, 1.11 ) }
    dend_14 { pt3dadd( 0.463481, -6.57011, -10.5954, 1.11 ) }
    dend_14 { pt3dadd( 0.257095, -8.27041, -10.7549, 0.88 ) }
    dend_14 { pt3dadd( 0.162524, -9.04952, -10.8279, 1.55 ) }
    dend_14 { pt3dadd( 0.0591341, -9.90131, -10.9078, 1.99 ) }
    dend_14 { pt3dadd( -0.0662457, -10.9342, -11.0047, 2.14 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 50/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 1.06088, 3.16085, -13.4448, 0.53 ) }
    dend_13 { pt3dadd( 1.31443, 3.68501, -13.7802, 0.53 ) }
    dend_13 { pt3dadd( 1.57595, 4.31942, -14.1459, 0.29 ) }
    dend_13 { pt3dadd( 2.20419, 6.11549, -15.0156, 1.11 ) }
    dend_13 { pt3dadd( 2.67378, 7.62714, -15.7056, 1.77 ) }
    dend_13 { pt3dadd( 3.13313, 9.22666, -16.4186, 1.03 ) }
    dend_13 { pt3dadd( 3.39393, 10.2184, -16.8387, 0.22 ) }
    dend_13 { pt3dadd( 3.69731, 11.5745, -17.3559, 0.22 ) }
    dend_13 { pt3dadd( 3.98122, 13.3095, -17.9303, 1.4 ) }
    dend_13 { pt3dadd( 4.06848, 14.2031, -18.1568, 1.77 ) }
    dend_13 { pt3dadd( 4.11218, 14.9933, -18.3201, 2.06 ) }
    dend_13 { pt3dadd( 4.13425, 16.1461, -18.5526, 0.96 ) }
    dend_13 { pt3dadd( 4.10001, 17.9551, -18.9573, 0.22 ) }
    dend_13 { pt3dadd( 4.02949, 19.3139, -19.2773, 0.22 ) }
    dend_13 { pt3dadd( 3.91846, 20.6796, -19.6194, 1.77 ) }
    dend_13 { pt3dadd( 3.84749, 21.3775, -19.8023, 2.06 ) }
    dend_13 { pt3dadd( 3.54505, 23.6362, -20.4491, 0.22 ) }
    dend_13 { pt3dadd( 3.37508, 24.7102, -20.7978, 0.22 ) }
    dend_13 { pt3dadd( 3.19824, 25.7564, -21.1565, 1.33 ) }
    dend_13 { pt3dadd( 3.1375, 26.0898, -21.2688, 1.47 ) }
    dend_13 { pt3dadd( 2.93498, 27.1115, -21.6234, 0.88 ) }
    dend_13 { pt3dadd( 2.56894, 28.8358, -22.1763, 0.15 ) }
    dend_13 { pt3dadd( 2.23829, 30.3156, -22.593, 0.15 ) }
    dend_13 { pt3dadd( 1.89833, 31.7513, -22.9501, 1.99 ) }
    dend_13 { pt3dadd( 1.65651, 32.6427, -23.1684, 2.28 ) }
    dend_13 { pt3dadd( 1.43796, 33.3724, -23.3351, 1.55 ) }
    dend_13 { pt3dadd( 0.921565, 34.9803, -23.6708, 0.22 ) }
    dend_13 { pt3dadd( 0.545395, 36.1289, -23.9934, 0.15 ) }
    dend_13 { pt3dadd( 0.130696, 37.4336, -24.462, 0.15 ) }
    dend_13 { pt3dadd( -0.259163, 38.8185, -25.0835, 0.15 ) }
    dend_13 { pt3dadd( -0.68474, 40.5987, -26.0337, 1.69 ) }
    dend_13 { pt3dadd( -0.741144, 40.8692, -26.2108, 1.99 ) }
    dend_13 { pt3dadd( -1.14236, 43.1168, -28.0628, 0.22 ) }
    dend_13 { pt3dadd( -1.29581, 44.1187, -29.0372, 0.22 ) }
    dend_13 { pt3dadd( -1.38641, 45.1054, -30.1237, 1.25 ) }
    dend_13 { pt3dadd( -1.41783, 45.7566, -30.893, 1.55 ) }
    dend_13 { pt3dadd( -1.48021, 47.0602, -32.6518, 0.59 ) }
    dend_13 { pt3dadd( -1.56666, 47.8641, -33.8578, 0.81 ) }
    dend_13 { pt3dadd( -1.727, 48.6774, -35.1794, 0.22 ) }
    dend_13 { pt3dadd( -1.87951, 49.1882, -36.0752, 0.22 ) }
    dend_13 { pt3dadd( -2.10485, 49.6955, -36.9974, 1.18 ) }
    dend_13 { pt3dadd( -2.58576, 50.5266, -38.4922, 1.55 ) }
    dend_13 { pt3dadd( -3.52201, 51.7756, -40.6793, 0.22 ) }
    dend_13 { pt3dadd( -3.75085, 52.028, -41.1118, 0.81 ) }
    dend_13 { pt3dadd( -4.17336, 52.4221, -41.7768, 0.81 ) }
    dend_13 { pt3dadd( -5.16805, 53.238, -43.1511, 0.15 ) }
    dend_13 { pt3dadd( -5.77311, 53.7071, -43.9732, 0.15 ) }
    dend_13 { pt3dadd( -6.12923, 53.9776, -44.4399, 0.74 ) }
    dend_13 { pt3dadd( -6.43849, 54.194, -44.8266, 0.74 ) }
    dend_13 { pt3dadd( -7.51878, 54.9753, -46.315, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_13 { pt3dadd( -7.95533, 55.3081, -46.9635, 1.33 ) }
    dend_13 { pt3dadd( -8.54917, 55.8915, -48.109, 1.33 ) }
    dend_13 { pt3dadd( -9.33025, 56.8455, -49.9129, 0.22 ) }
    dend_13 { pt3dadd( -9.65208, 57.34, -50.7855, 0.88 ) }
    dend_13 { pt3dadd( -10.4409, 58.7772, -53.1689, 0.15 ) }
    dend_13 { pt3dadd( -10.6949, 59.3461, -54.055, 0.74 ) }
    dend_13 { pt3dadd( -11.7529, 62.0067, -58.0399, 0.15 ) }
    dend_13 { pt3dadd( -11.9925, 62.6996, -59.0382, 0.44 ) }
    dend_13 { pt3dadd( -12.3833, 64.1708, -61.1282, 0.15 ) }
    dend_13 { pt3dadd( -12.4596, 64.5379, -61.652, 0.59 ) }
    dend_13 { pt3dadd( -12.6061, 65.4047, -62.8553, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 11/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.01088, 3.8476, -7.13476, 0.66 ) }
    dend_8 { pt3dadd( 3.01088, 3.8476, -7.13476, 0.66 ) }
    dend_8 { pt3dadd( 3.5747, 4.73793, -7.13476, 0.66 ) }
    dend_8 { pt3dadd( 4.20345, 5.87307, -7.123, 0.59 ) }
    dend_8 { pt3dadd( 5.01267, 7.60196, -7.09824, 0.59 ) }
    dend_8 { pt3dadd( 5.57271, 8.97513, -7.07717, 1.99 ) }
    dend_8 { pt3dadd( 5.95193, 10.0621, -7.0716, 2.28 ) }
    dend_8 { pt3dadd( 6.19287, 10.9455, -7.08716, 2.43 ) }
    dend_8 { pt3dadd( 6.47081, 12.4271, -7.15198, 2.14 ) }
    dend_8 { pt3dadd( 6.72761, 14.6646, -7.32046, 1.18 ) }
    dend_8 { pt3dadd( 6.82058, 15.8637, -7.43812, 1.03 ) }
    dend_8 { pt3dadd( 6.95239, 17.3108, -7.61846, 0.74 ) }
    dend_8 { pt3dadd( 7.12978, 18.7872, -7.85815, 0.74 ) }
    dend_8 { pt3dadd( 7.42987, 20.5227, -8.20082, 1.25 ) }
    dend_8 { pt3dadd( 7.73386, 21.6453, -8.49405, 1.25 ) }
    dend_8 { pt3dadd( 8.26381, 23.0645, -8.97336, 1.25 ) }
    dend_8 { pt3dadd( 8.80712, 24.2627, -9.33311, 0.81 ) }
    dend_8 { pt3dadd( 9.39857, 25.4262, -9.63488, 0.81 ) }
    dend_8 { pt3dadd( 10.2373, 26.9965, -9.98258, 1.99 ) }
    dend_8 { pt3dadd( 11.1872, 28.7259, -10.3446, 2.8 ) }
    dend_8 { pt3dadd( 11.7907, 29.8483, -10.5678, 3.02 ) }
    dend_8 { pt3dadd( 13.3167, 32.9436, -11.3553, 0.37 ) }
    dend_8 { pt3dadd( 13.748, 33.9456, -11.6405, 0.88 ) }
    dend_8 { pt3dadd( 14.0559, 34.8082, -11.9148, 1.11 ) }
    dend_8 { pt3dadd( 14.3577, 35.8427, -12.2872, 0.96 ) }
    dend_8 { pt3dadd( 14.6943, 37.3409, -12.8899, 0.52 ) }
    dend_8 { pt3dadd( 15.1729, 39.6001, -13.9562, 0.66 ) }
    dend_8 { pt3dadd( 15.2986, 40.2505, -14.3731, 0.66 ) }
    dend_8 { pt3dadd( 15.5586, 41.7002, -15.3543, 1.62 ) }
    dend_8 { pt3dadd( 15.6878, 42.5591, -15.9485, 2.58 ) }
    dend_8 { pt3dadd( 15.7714, 43.4588, -16.5434, 2.87 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.55088, 1.3056, 7.74524, 1.03 ) }
    dend_1 { pt3dadd( 4.92139, 2.16401, 7.91295, 1.03 ) }
    dend_1 { pt3dadd( 5.9386, 2.85838, 8.32621, 0.88 ) }
    dend_1 { pt3dadd( 7.01308, 3.5899, 9.15736, 1.18 ) }
    dend_1 { pt3dadd( 8.05495, 4.29923, 9.9633, 1.18 ) }
    dend_1 { pt3dadd( 8.72004, 4.75204, 10.4778, 1.25 ) }
    dend_1 { pt3dadd( 9.22547, 5.09615, 10.8688, 1.55 ) }
    dend_1 { pt3dadd( 11.2424, 6.63677, 12.9607, 1.77 ) }
    dend_1 { pt3dadd( 12.775, 7.83727, 15.0492, 1.77 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.60088, 3.79635, 2.18524, 0.52 ) }
    dend_0 { pt3dadd( 4.60088, 3.79635, 2.18524, 0.52 ) }
    dend_0 { pt3dadd( 5.20009, 4.18323, 2.18416, 0.52 ) }
    dend_0 { pt3dadd( 5.95753, 4.64925, 2.18256, 0.37 ) }
    dend_0 { pt3dadd( 6.56904, 5.01667, 2.15553, 0.29 ) }
    dend_0 { pt3dadd( 7.12937, 5.33177, 2.12107, 0.29 ) }
    dend_0 { pt3dadd( 7.52724, 5.54185, 2.05384, 0.52 ) }
    dend_0 { pt3dadd( 8.07164, 5.79935, 1.909, 0.37 ) }
    dend_0 { pt3dadd( 9.06727, 6.26514, 1.57976, 1.25 ) }
    dend_0 { pt3dadd( 9.82709, 6.63754, 1.29149, 1.77 ) }
    dend_0 { pt3dadd( 10.4729, 6.99175, 1.019, 1.99 ) }
    dend_0 { pt3dadd( 11.9294, 7.93376, 0.361685, 0.44 ) }
    dend_0 { pt3dadd( 12.9284, 8.64574, -0.139, 0.29 ) }
    dend_0 { pt3dadd( 13.5144, 9.08081, -0.440624, 0.96 ) }
    dend_0 { pt3dadd( 13.8994, 9.37114, -0.638246, 1.25 ) }
    dend_0 { pt3dadd( 14.2717, 9.64924, -0.813059, 1.25 ) }
    dend_0 { pt3dadd( 15.1936, 10.3844, -1.22302, 0.29 ) }
    dend_0 { pt3dadd( 15.9721, 11.0538, -1.52717, 0.29 ) }
    dend_0 { pt3dadd( 16.8439, 11.7861, -1.82463, 0.96 ) }
    dend_0 { pt3dadd( 17.5869, 12.3401, -2.02625, 1.18 ) }
    dend_0 { pt3dadd( 18.4837, 12.9589, -2.19082, 0.29 ) }
    dend_0 { pt3dadd( 19.0166, 13.2889, -2.24869, 0.29 ) }
    dend_0 { pt3dadd( 19.8651, 13.7666, -2.27527, 0.29 ) }
    dend_0 { pt3dadd( 21.1195, 14.4514, -2.17686, 0.96 ) }
    dend_0 { pt3dadd( 21.8559, 14.8448, -2.06974, 1.47 ) }
    dend_0 { pt3dadd( 22.4331, 15.1356, -1.95338, 1.69 ) }
    dend_0 { pt3dadd( 23.3813, 15.6011, -1.73347, 0.74 ) }
    dend_0 { pt3dadd( 23.871, 15.8501, -1.61701, 0.29 ) }
    dend_0 { pt3dadd( 25.1349, 16.5479, -1.3727, 1.03 ) }
    dend_0 { pt3dadd( 25.7094, 16.9123, -1.32853, 1.11 ) }
    dend_0 { pt3dadd( 26.4089, 17.3948, -1.35103, 0.59 ) }
    dend_0 { pt3dadd( 27.1826, 17.9514, -1.46548, 0.29 ) }
    dend_0 { pt3dadd( 27.9067, 18.4925, -1.64148, 0.29 ) }
    dend_0 { pt3dadd( 28.7759, 19.1293, -1.97156, 0.29 ) }
    dend_0 { pt3dadd( 29.5283, 19.6522, -2.37514, 0.29 ) }
    dend_0 { pt3dadd( 30.3583, 20.16, -2.85514, 1.55 ) }
    dend_0 { pt3dadd( 30.9574, 20.4942, -3.21593, 2.14 ) }
    dend_0 { pt3dadd( 31.227, 20.6325, -3.37248, 2.43 ) }
    dend_0 { pt3dadd( 31.7365, 20.8938, -3.63828, 2.06 ) }
    dend_0 { pt3dadd( 32.6696, 21.4334, -4.03623, 1.03 ) }
    dend_0 { pt3dadd( 33.4013, 21.9368, -4.33915, 0.44 ) }
    dend_0 { pt3dadd( 34.1814, 22.5711, -4.66066, 0.44 ) }
    dend_0 { pt3dadd( 34.6093, 22.965, -4.82325, 0.88 ) }
    dend_0 { pt3dadd( 35.0774, 23.4055, -5.01017, 0.88 ) }
    dend_0 { pt3dadd( 35.5154, 23.8267, -5.18649, 0.88 ) }
    dend_0 { pt3dadd( 36.3565, 24.6498, -5.53448, 0.37 ) }
    dend_0 { pt3dadd( 36.8789, 25.176, -5.7545, 0.37 ) }
    dend_0 { pt3dadd( 37.4692, 25.8025, -6.01155, 0.22 ) }
    dend_0 { pt3dadd( 38.0564, 26.4882, -6.27654, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( 38.9369, 27.5769, -6.66143, 1.25 ) }
    dend_0 { pt3dadd( 39.2639, 28.0107, -6.79036, 1.69 ) }
    dend_0 { pt3dadd( 39.7134, 28.6179, -6.93697, 1.25 ) }
    dend_0 { pt3dadd( 40.6779, 29.8777, -7.22306, 0.29 ) }
    dend_0 { pt3dadd( 41.3722, 30.7361, -7.36444, 0.96 ) }
    dend_0 { pt3dadd( 41.8027, 31.2384, -7.41391, 0.74 ) }
    dend_0 { pt3dadd( 42.5047, 31.9296, -7.45404, 0.22 ) }
    dend_0 { pt3dadd( 42.9959, 32.3208, -7.45771, 0.22 ) }
    dend_0 { pt3dadd( 43.6592, 32.757, -7.44698, 0.22 ) }
    dend_0 { pt3dadd( 44.8456, 33.4758, -7.32951, 1.69 ) }
    dend_0 { pt3dadd( 45.3779, 33.8061, -7.261, 1.99 ) }
    dend_0 { pt3dadd( 45.8283, 34.1253, -7.19408, 2.21 ) }
    dend_0 { pt3dadd( 47.2754, 35.2459, -6.96998, 0.22 ) }
    dend_0 { pt3dadd( 47.9296, 35.8105, -6.86995, 0.22 ) }
    dend_0 { pt3dadd( 49.052, 36.8524, -6.7047, 1.03 ) }
    dend_0 { pt3dadd( 49.5729, 37.3625, -6.64086, 1.03 ) }
    dend_0 { pt3dadd( 50.6244, 38.4256, -6.52951, 0.22 ) }
    dend_0 { pt3dadd( 50.9083, 38.7258, -6.50036, 0.22 ) }
    dend_0 { pt3dadd( 51.6041, 39.4672, -6.42623, 1.03 ) }
    dend_0 { pt3dadd( 51.9242, 39.7937, -6.39629, 1.18 ) }
    dend_0 { pt3dadd( 52.4459, 40.2841, -6.37486, 0.59 ) }
    dend_0 { pt3dadd( 53.1628, 40.9245, -6.33093, 0.22 ) }
    dend_0 { pt3dadd( 53.5846, 41.2926, -6.29748, 0.22 ) }
    dend_0 { pt3dadd( 54.198, 41.831, -6.24434, 0.22 ) }
    dend_0 { pt3dadd( 55.0407, 42.5653, -6.17168, 1.47 ) }
    dend_0 { pt3dadd( 55.4094, 42.8888, -6.15803, 1.84 ) }
    dend_0 { pt3dadd( 56.1654, 43.5696, -6.15615, 1.4 ) }
    dend_0 { pt3dadd( 57.642, 44.9125, -6.20359, 0.22 ) }
    dend_0 { pt3dadd( 58.212, 45.4459, -6.25903, 0.66 ) }
    dend_0 { pt3dadd( 58.5242, 45.7469, -6.30554, 0.66 ) }
    dend_0 { pt3dadd( 59.364, 46.5918, -6.46066, 0.22 ) }
    dend_0 { pt3dadd( 59.6795, 46.9321, -6.52328, 0.22 ) }
    dend_0 { pt3dadd( 60.0096, 47.3084, -6.59371, 0.22 ) }
    dend_0 { pt3dadd( 60.918, 48.4313, -6.79033, 1.77 ) }
    dend_0 { pt3dadd( 61.31, 48.9733, -6.86123, 2.21 ) }
    dend_0 { pt3dadd( 61.5034, 49.2639, -6.86848, 2.21 ) }
    dend_0 { pt3dadd( 62.5394, 50.9287, -6.76336, 0.22 ) }
    dend_0 { pt3dadd( 62.6772, 51.1706, -6.74063, 0.22 ) }
    dend_0 { pt3dadd( 63.064, 51.947, -6.646, 0.22 ) }
    dend_0 { pt3dadd( 63.5285, 53.0327, -6.48808, 0.22 ) }
    dend_0 { pt3dadd( 64.043, 54.4054, -6.28381, 1.62 ) }
    dend_0 { pt3dadd( 64.4133, 55.418, -6.13256, 2.06 ) }
    dend_0 { pt3dadd( 64.7089, 56.2431, -6.01075, 1.4 ) }
    dend_0 { pt3dadd( 65.1382, 57.3828, -5.86028, 0.22 ) }
    dend_0 { pt3dadd( 65.4316, 58.1053, -5.78141, 0.37 ) }
    dend_0 { pt3dadd( 65.6518, 58.6108, -5.74669, 0.44 ) }
    dend_0 { pt3dadd( 66.0972, 59.64, -5.73069, 0.22 ) }
    dend_0 { pt3dadd( 66.4577, 60.4809, -5.71954, 0.88 ) }
    dend_0 { pt3dadd( 66.6328, 60.8719, -5.71565, 1.11 ) }
    dend_0 { pt3dadd( 66.969, 61.611, -5.7111, 0.88 ) }
    dend_0 { pt3dadd( 67.5472, 62.8927, -5.70318, 0.29 ) }
    dend_0 { pt3dadd( 67.7973, 63.5484, -5.67668, 0.37 ) }
    dend_0 { pt3dadd( 68.027, 64.3147, -5.62778, 0.37 ) }
    dend_0 { pt3dadd( 68.3437, 65.5244, -5.54244, 1.99 ) }
    dend_0 { pt3dadd( 68.4877, 66.1029, -5.49959, 2.73 ) }
    dend_0 { pt3dadd( 68.6331, 66.7082, -5.45428, 2.36 ) }
    dend_0 { pt3dadd( 69.1775, 68.868, -5.30267, 0.22 ) }
    dend_0 { pt3dadd( 69.3382, 69.4746, -5.26663, 0.52 ) }
    dend_0 { pt3dadd( 69.6303, 70.5095, -5.19277, 0.22 ) }
    dend_0 { pt3dadd( 69.8484, 71.2592, -5.13404, 1.18 ) }
    dend_0 { pt3dadd( 70.0476, 71.8648, -5.08649, 1.18 ) }
    dend_0 { pt3dadd( 70.4804, 72.9156, -5.00579, 0.22 ) }
    dend_0 { pt3dadd( 70.826, 73.618, -4.94184, 0.22 ) }
    dend_0 { pt3dadd( 71.2838, 74.544, -4.81282, 1.33 ) }
    dend_0 { pt3dadd( 71.4874, 74.9694, -4.73689, 1.69 ) }
    dend_0 { pt3dadd( 71.7962, 75.6264, -4.6065, 0.96 ) }
    dend_0 { pt3dadd( 72.4501, 77.0238, -4.31218, 0.22 ) }
    dend_0 { pt3dadd( 72.7269, 77.6222, -4.18525, 0.22 ) }
    dend_0 { pt3dadd( 73.5026, 79.2431, -3.82281, 2.28 ) }
    dend_0 { pt3dadd( 73.762, 79.763, -3.67948, 2.58 ) }
    dend_0 { pt3dadd( 74.9005, 81.888, -2.96882, 0.37 ) }
    dend_0 { pt3dadd( 75.1053, 82.2466, -2.83008, 0.81 ) }
    dend_0 { pt3dadd( 75.4343, 82.7597, -2.60436, 0.81 ) }
    dend_0 { pt3dadd( 76.2232, 83.7841, -2.11059, 0.22 ) }
    dend_0 { pt3dadd( 77.2672, 84.8151, -1.46865, 0.22 ) }
    dend_0 { pt3dadd( 77.6929, 85.1185, -1.22574, 0.96 ) }
    dend_0 { pt3dadd( 78.095, 85.3096, -1.00684, 0.96 ) }
    dend_0 { pt3dadd( 78.8553, 85.6123, -0.608784, 0.22 ) }
    dend_0 { pt3dadd( 79.3944, 85.8074, -0.320651, 0.22 ) }
    dend_0 { pt3dadd( 80.0623, 86.0736, 0.0740908, 0.66 ) }
    dend_0 { pt3dadd( 80.9916, 86.4951, 0.709847, 0.22 ) }
    dend_0 { pt3dadd( 81.4237, 86.7113, 1.07504, 0.22 ) }
    dend_0 { pt3dadd( 82.7857, 87.4864, 2.40775, 1.99 ) }
    dend_0 { pt3dadd( 83.4336, 87.9008, 3.09822, 2.36 ) }
    dend_0 { pt3dadd( 84.7963, 88.9413, 4.73132, 0.22 ) }
    dend_0 { pt3dadd( 85.5447, 89.5979, 5.69023, 0.88 ) }
    dend_0 { pt3dadd( 86.5508, 90.5335, 7.027, 0.22 ) }
    dend_0 { pt3dadd( 87.4601, 91.3916, 8.23302, 1.4 ) }
    dend_0 { pt3dadd( 87.8022, 91.7286, 8.68802, 1.99 ) }
    dend_0 { pt3dadd( 89.0823, 93.0272, 10.2472, 0.15 ) }
    dend_0 { pt3dadd( 89.3865, 93.3564, 10.5745, 0.15 ) }
    dend_0 { pt3dadd( 89.8371, 93.8719, 10.9969, 0.15 ) }
    dend_0 { pt3dadd( 90.6602, 94.8553, 11.6677, 1.47 ) }
    dend_0 { pt3dadd( 90.9195, 95.1653, 11.8515, 1.47 ) }
    dend_0 { pt3dadd( 91.8335, 96.2548, 12.4116, 0.22 ) }
    dend_0 { pt3dadd( 92.4155, 96.9396, 12.6836, 0.29 ) }
    dend_0 { pt3dadd( 93.1236, 97.8413, 13.0337, 1.33 ) }
    dend_0 { pt3dadd( 93.4216, 98.2609, 13.2126, 1.47 ) }
    dend_0 { pt3dadd( 94.0062, 99.0133, 13.6552, 0.22 ) }
    dend_0 { pt3dadd( 94.5112, 99.4468, 14.3938, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_0 { pt3dadd( 94.9547, 99.7035, 15.1663, 0.59 ) }
    dend_0 { pt3dadd( 95.7288, 100.003, 16.5654, 0.22 ) }
    dend_0 { pt3dadd( 96.6362, 100.201, 18.254, 1.55 ) }
    dend_0 { pt3dadd( 97.7334, 100.261, 20.4258, 2.14 ) }
    dend_0 { pt3dadd( 100.888, 99.8951, 27.1303, 0.81 ) }
    dend_0 { pt3dadd( 101.186, 99.8105, 27.8221, 0.81 ) }
    dend_0 { pt3dadd( 101.512, 99.6438, 28.6412, 0.44 ) }
    dend_0 { pt3dadd( 101.865, 99.3733, 29.5582, 0.29 ) }
    dend_0 { pt3dadd( 102.594, 98.6379, 31.4308, 0.66 ) }
    dend_0 { pt3dadd( 102.821, 98.3644, 31.9975, 0.29 ) }
    dend_0 { pt3dadd( 103.091, 97.9802, 32.5784, 0.29 ) }
    dend_0 { pt3dadd( 103.689, 97.3385, 33.8968, 0.81 ) }
    dend_0 { pt3dadd( 104.051, 97.1053, 34.6753, 0.81 ) }
    dend_0 { pt3dadd( 104.378, 96.9955, 35.3146, 0.44 ) }
    dend_0 { pt3dadd( 105.1, 96.8496, 36.5872, 0.44 ) }
    dend_0 { pt3dadd( 106.024, 96.7431, 38.1503, 0.96 ) }
    dend_0 { pt3dadd( 106.717, 96.7114, 39.2812, 0.96 ) }
    dend_0 { pt3dadd( 107.674, 96.7938, 40.9149, 1.4 ) }
    dend_0 { pt3dadd( 108.365, 96.904, 42.2617, 1.62 ) }
    dend_0 { pt3dadd( 117.005, 102.363, 45.0063, 1.62 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 20/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.998462, -7.3196, -1.22449, 0.502656 ) }
    axon_0 { pt3dadd( -2.09885, -22.2792, -1.22449, 0.502656 ) }
    axon_0 { pt3dadd( -3.19924, -37.2388, -1.22449, 0.502656 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 23/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 0.928804, 38.6134, 4.97426, 0.52 ) }
    apic_4 { pt3dadd( 1.41357, 41.2817, 3.02978, 0.52 ) }
    apic_4 { pt3dadd( 1.57459, 42.1679, 2.3839, 0.66 ) }
    apic_4 { pt3dadd( 1.74058, 43.0816, 1.71807, 0.81 ) }
    apic_4 { pt3dadd( 1.88859, 43.8962, 1.12442, 1.33 ) }
    apic_4 { pt3dadd( 1.99191, 44.4649, 0.709954, 1.62 ) }
    apic_4 { pt3dadd( 2.05498, 44.8121, 0.456999, 1.62 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 30/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.928804, 38.6134, 4.97426, 0.37 ) }
    apic_1 { pt3dadd( -0.995574, 39.5443, 5.81639, 0.37 ) }
    apic_1 { pt3dadd( -2.07036, 40.1731, 6.29135, 0.29 ) }
    apic_1 { pt3dadd( -3.01676, 40.8204, 6.70382, 0.29 ) }
    apic_1 { pt3dadd( -3.59863, 41.2721, 6.95875, 0.29 ) }
    apic_1 { pt3dadd( -4.0961, 41.7059, 7.17872, 0.29 ) }
    apic_1 { pt3dadd( -4.81728, 42.4198, 7.4819, 0.81 ) }
    apic_1 { pt3dadd( -5.49063, 43.2135, 7.70399, 1.03 ) }
    apic_1 { pt3dadd( -5.91944, 43.8562, 7.83067, 1.33 ) }
    apic_1 { pt3dadd( -6.26101, 44.4424, 7.92559, 1.33 ) }
    apic_1 { pt3dadd( -6.84917, 45.4841, 8.08856, 0.96 ) }
    apic_1 { pt3dadd( -7.45069, 46.5122, 8.23966, 0.52 ) }
    apic_1 { pt3dadd( -7.90452, 47.2896, 8.34797, 0.29 ) }
    apic_1 { pt3dadd( -8.42212, 48.2489, 8.50043, 0.88 ) }
    apic_1 { pt3dadd( -8.73708, 48.9012, 8.60958, 1.11 ) }
    apic_1 { pt3dadd( -9.08851, 49.796, 8.73636, 0.59 ) }
    apic_1 { pt3dadd( -9.39752, 50.8182, 8.84609, 0.37 ) }
    apic_1 { pt3dadd( -9.56317, 51.5894, 8.90903, 0.37 ) }
    apic_1 { pt3dadd( -9.69513, 52.7797, 9.01001, 0.81 ) }
    apic_1 { pt3dadd( -9.7366, 53.8321, 9.08813, 0.81 ) }
    apic_1 { pt3dadd( -9.74649, 55.1313, 9.16763, 1.47 ) }
    apic_1 { pt3dadd( -9.74768, 55.8471, 9.19553, 1.55 ) }
    apic_1 { pt3dadd( -9.7667, 56.6617, 9.24834, 0.88 ) }
    apic_1 { pt3dadd( -9.87772, 58.33, 9.43984, 0.44 ) }
    apic_1 { pt3dadd( -9.97055, 59.2008, 9.60582, 0.37 ) }
    apic_1 { pt3dadd( -10.0575, 59.8649, 9.81949, 0.37 ) }
    apic_1 { pt3dadd( -10.1735, 60.7889, 10.2809, 0.29 ) }
    apic_1 { pt3dadd( -10.2278, 61.7099, 10.9174, 0.44 ) }
    apic_1 { pt3dadd( -10.2119, 62.3039, 11.4392, 0.59 ) }
    apic_1 { pt3dadd( -10.1408, 62.8864, 12.051, 0.44 ) }
    apic_1 { pt3dadd( -9.96397, 63.7719, 12.9844, 0.88 ) }
    apic_1 { pt3dadd( -9.63821, 64.9022, 14.1409, 1.25 ) }
    apic_1 { pt3dadd( -9.15915, 66.1722, 15.3776, 1.84 ) }
    apic_1 { pt3dadd( -8.70939, 67.2308, 16.3446, 2.36 ) }
    apic_1 { pt3dadd( -8.45759, 67.8095, 16.8294, 2.36 ) }
    apic_1 { pt3dadd( -7.74474, 69.4535, 18.0871, 0.29 ) }
    apic_1 { pt3dadd( -7.38778, 70.2636, 18.6496, 0.29 ) }
    apic_1 { pt3dadd( -6.72498, 71.828, 19.5962, 0.88 ) }
    apic_1 { pt3dadd( -6.13415, 73.282, 20.4025, 1.4 ) }
    apic_1 { pt3dadd( -5.8326, 74.0303, 20.7982, 1.92 ) }
    apic_1 { pt3dadd( -5.6057, 74.5905, 21.1016, 2.14 ) }
    apic_1 { pt3dadd( -5.49208, 74.8612, 21.2758, 2.36 ) }
    apic_1 { pt3dadd( -5.26352, 75.5146, 21.7094, 2.36 ) }
    apic_1 { pt3dadd( -4.76444, 77.2395, 22.812, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 74/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.0662457, -10.9342, -11.0047, 0.96 ) }
    dend_18 { pt3dadd( -0.142519, -11.8917, -10.9482, 0.96 ) }
    dend_18 { pt3dadd( -0.21239, -12.8099, -10.9128, 0.29 ) }
    dend_18 { pt3dadd( -0.269473, -13.56, -10.8839, 0.81 ) }
    dend_18 { pt3dadd( -0.296028, -13.9089, -10.8704, 1.62 ) }
    dend_18 { pt3dadd( -0.343679, -14.5351, -10.8462, 1.92 ) }
    dend_18 { pt3dadd( -0.379079, -15.0003, -10.8283, 2.06 ) }
    dend_18 { pt3dadd( -0.449641, -15.6093, -10.8626, 1.69 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.0662457, -10.9342, -11.0047, 0.29 ) }
    dend_15 { pt3dadd( 0.900329, -11.9506, -11.4413, 0.29 ) }
    dend_15 { pt3dadd( 1.46593, -12.6774, -11.7139, 0.96 ) }
    dend_15 { pt3dadd( 1.62273, -12.9102, -11.7943, 0.96 ) }
    dend_15 { pt3dadd( 2.13914, -13.8336, -12.1371, 0.22 ) }
    dend_15 { pt3dadd( 2.62903, -14.8677, -12.5708, 1.11 ) }
    dend_15 { pt3dadd( 2.94731, -15.5968, -12.891, 1.11 ) }
    dend_15 { pt3dadd( 3.15723, -16.2131, -13.1517, 1.11 ) }
    dend_15 { pt3dadd( 3.28393, -16.623, -13.3321, 0.88 ) }
    dend_15 { pt3dadd( 3.6109, -17.6519, -13.7879, 0.37 ) }
    dend_15 { pt3dadd( 3.91153, -18.4423, -14.1548, 0.29 ) }
    dend_15 { pt3dadd( 4.08604, -18.7649, -14.3236, 0.44 ) }
    dend_15 { pt3dadd( 4.46094, -19.2964, -14.6345, 0.44 ) }
    dend_15 { pt3dadd( 4.76798, -19.6217, -14.8937, 0.29 ) }
    dend_15 { pt3dadd( 5.36534, -20.1488, -15.4018, 0.29 ) }
    dend_15 { pt3dadd( 6.12782, -20.7497, -16.1048, 1.69 ) }
    dend_15 { pt3dadd( 6.72216, -21.2105, -16.7107, 2.36 ) }
    dend_15 { pt3dadd( 7.11851, -21.5223, -17.1698, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( 8.43698, -22.6503, -18.8661, 0.59 ) }
    dend_15 { pt3dadd( 8.86619, -23.0507, -19.4736, 0.88 ) }
    dend_15 { pt3dadd( 9.61601, -23.8208, -20.6054, 0.29 ) }
    dend_15 { pt3dadd( 10.013, -24.2814, -21.2378, 1.25 ) }
    dend_15 { pt3dadd( 10.2579, -24.6153, -21.6244, 1.62 ) }
    dend_15 { pt3dadd( 10.8248, -25.5261, -22.4585, 0.22 ) }
    dend_15 { pt3dadd( 11.2252, -26.3109, -23.0025, 1.62 ) }
    dend_15 { pt3dadd( 11.4894, -26.8612, -23.3162, 2.21 ) }
    dend_15 { pt3dadd( 11.6817, -27.287, -23.5141, 2.14 ) }
    dend_15 { pt3dadd( 12.2436, -28.6027, -24.0724, 0.29 ) }
    dend_15 { pt3dadd( 12.591, -29.4803, -24.4245, 0.29 ) }
    dend_15 { pt3dadd( 12.8169, -30.0873, -24.6667, 1.11 ) }
    dend_15 { pt3dadd( 13.0321, -30.7039, -24.906, 1.33 ) }
    dend_15 { pt3dadd( 13.4529, -31.9075, -25.3443, 0.22 ) }
    dend_15 { pt3dadd( 13.5927, -32.2859, -25.4626, 0.22 ) }
    dend_15 { pt3dadd( 13.9076, -33.0304, -25.6399, 1.77 ) }
    dend_15 { pt3dadd( 14.134, -33.5141, -25.7292, 2.21 ) }
    dend_15 { pt3dadd( 14.3579, -33.9452, -25.7826, 2.28 ) }
    dend_15 { pt3dadd( 15.4581, -35.7768, -25.8803, 0.15 ) }
    dend_15 { pt3dadd( 16.2689, -36.9332, -25.8672, 0.15 ) }
    dend_15 { pt3dadd( 17.0448, -37.9392, -25.8209, 1.92 ) }
    dend_15 { pt3dadd( 17.2484, -38.1821, -25.8039, 2.43 ) }
    dend_15 { pt3dadd( 17.6603, -38.6306, -25.7744, 1.99 ) }
    dend_15 { pt3dadd( 19.1419, -40.0512, -25.6934, 0.22 ) }
    dend_15 { pt3dadd( 20.1774, -40.9079, -25.6618, 0.22 ) }
    dend_15 { pt3dadd( 20.79, -41.3608, -25.6565, 1.25 ) }
    dend_15 { pt3dadd( 21.1863, -41.6278, -25.6666, 1.25 ) }
    dend_15 { pt3dadd( 22.4116, -42.3684, -25.7184, 0.22 ) }
    dend_15 { pt3dadd( 23.3759, -42.8837, -25.7932, 1.4 ) }
    dend_15 { pt3dadd( 23.688, -43.0255, -25.8295, 1.84 ) }
    dend_15 { pt3dadd( 24.1461, -43.2191, -25.9124, 0.96 ) }
    dend_15 { pt3dadd( 24.6013, -43.4127, -26.0424, 0.66 ) }
    dend_15 { pt3dadd( 25.4028, -43.7912, -26.3337, 0.22 ) }
    dend_15 { pt3dadd( 26.1532, -44.18, -26.6711, 0.81 ) }
    dend_15 { pt3dadd( 26.4517, -44.3541, -26.8381, 0.96 ) }
    dend_15 { pt3dadd( 27.5418, -45.0118, -27.5352, 0.22 ) }
    dend_15 { pt3dadd( 28.4475, -45.5642, -28.1661, 1.33 ) }
    dend_15 { pt3dadd( 28.9214, -45.8578, -28.5647, 1.55 ) }
    dend_15 { pt3dadd( 29.2787, -46.0849, -28.8962, 1.11 ) }
    dend_15 { pt3dadd( 30.2247, -46.6923, -29.8238, 0.22 ) }
    dend_15 { pt3dadd( 30.9819, -47.2016, -30.5839, 1.47 ) }
    dend_15 { pt3dadd( 31.346, -47.4553, -30.956, 1.47 ) }
    dend_15 { pt3dadd( 32.8335, -48.5175, -32.4777, 0.22 ) }
    dend_15 { pt3dadd( 33.2288, -48.8023, -32.8789, 0.88 ) }
    dend_15 { pt3dadd( 33.4969, -49.0041, -33.1392, 0.88 ) }
    dend_15 { pt3dadd( 34.6155, -49.8485, -34.1243, 0.22 ) }
    dend_15 { pt3dadd( 35.3194, -50.3793, -34.6782, 0.22 ) }
    dend_15 { pt3dadd( 35.7467, -50.6929, -34.97, 1.69 ) }
    dend_15 { pt3dadd( 36.1211, -50.9513, -35.1486, 1.92 ) }
    dend_15 { pt3dadd( 36.9052, -51.4615, -35.4678, 0.96 ) }
    dend_15 { pt3dadd( 38.192, -52.2593, -35.8841, 0.22 ) }
    dend_15 { pt3dadd( 38.6434, -52.5116, -35.9845, 1.03 ) }
    dend_15 { pt3dadd( 39.1004, -52.7449, -36.0566, 1.33 ) }
    dend_15 { pt3dadd( 41.1695, -53.7348, -36.3195, 0.22 ) }
    dend_15 { pt3dadd( 41.9381, -54.0819, -36.3887, 1.47 ) }
    dend_15 { pt3dadd( 42.5451, -54.3366, -36.4069, 1.92 ) }
    dend_15 { pt3dadd( 44.6807, -55.1877, -36.3534, 0.22 ) }
    dend_15 { pt3dadd( 45.8167, -55.6137, -36.2969, 0.52 ) }
    dend_15 { pt3dadd( 46.1827, -55.7396, -36.27, 0.52 ) }
    dend_15 { pt3dadd( 47.3209, -56.0906, -36.1552, 0.15 ) }
    dend_15 { pt3dadd( 48.3213, -56.4122, -36.0375, 1.47 ) }
    dend_15 { pt3dadd( 48.9668, -56.631, -35.9678, 1.47 ) }
    dend_15 { pt3dadd( 50.0667, -57.0354, -35.8527, 0.22 ) }
    dend_15 { pt3dadd( 50.6023, -57.2609, -35.8155, 0.66 ) }
    dend_15 { pt3dadd( 50.8648, -57.3831, -35.8087, 0.66 ) }
    dend_15 { pt3dadd( 52.8979, -58.4084, -35.877, 0.22 ) }
    dend_15 { pt3dadd( 53.7278, -58.8553, -35.947, 1.55 ) }
    dend_15 { pt3dadd( 54.0258, -59.0301, -35.9837, 1.69 ) }
    dend_15 { pt3dadd( 55.5338, -59.9978, -36.2146, 0.22 ) }
    dend_15 { pt3dadd( 56.3628, -60.5658, -36.3561, 0.22 ) }
    dend_15 { pt3dadd( 57.1229, -61.1319, -36.4872, 1.55 ) }
    dend_15 { pt3dadd( 57.5627, -61.4903, -36.5487, 1.77 ) }
    dend_15 { pt3dadd( 58.5545, -62.3388, -36.6329, 0.22 ) }
    dend_15 { pt3dadd( 59.0604, -62.7927, -36.6386, 0.81 ) }
    dend_15 { pt3dadd( 59.3209, -63.0359, -36.6264, 0.81 ) }
    dend_15 { pt3dadd( 60.9634, -64.6051, -36.4806, 0.22 ) }
    dend_15 { pt3dadd( 61.8566, -65.4797, -36.3814, 1.62 ) }
    dend_15 { pt3dadd( 62.2466, -65.869, -36.3341, 1.99 ) }
    dend_15 { pt3dadd( 63.5025, -67.1498, -36.166, 0.22 ) }
    dend_15 { pt3dadd( 64.0062, -67.7078, -36.0886, 0.52 ) }
    dend_15 { pt3dadd( 64.2445, -67.9969, -36.0321, 0.52 ) }
    dend_15 { pt3dadd( 64.731, -68.6698, -35.86, 0.15 ) }
    dend_15 { pt3dadd( 64.9654, -69.0301, -35.7552, 1.03 ) }
    dend_15 { pt3dadd( 65.3417, -69.6462, -35.5639, 1.03 ) }
    dend_15 { pt3dadd( 66.1907, -71.1256, -35.0571, 0.15 ) }
    dend_15 { pt3dadd( 66.809, -72.2193, -34.5951, 0.74 ) }
    dend_15 { pt3dadd( 67.0294, -72.611, -34.4204, 0.74 ) }
    dend_15 { pt3dadd( 67.9572, -74.2367, -33.7018, 0.22 ) }
    dend_15 { pt3dadd( 68.3052, -74.8474, -33.457, 1.18 ) }
    dend_15 { pt3dadd( 68.5921, -75.3569, -33.2696, 1.18 ) }
    dend_15 { pt3dadd( 69.7053, -77.3488, -32.5702, 0.22 ) }
    dend_15 { pt3dadd( 70.151, -78.1726, -32.284, 0.96 ) }
    dend_15 { pt3dadd( 70.4789, -78.7827, -32.0147, 1.55 ) }
    dend_15 { pt3dadd( 70.777, -79.3502, -31.6956, 1.55 ) }
    dend_15 { pt3dadd( 71.319, -80.4483, -30.9716, 0.15 ) }
    dend_15 { pt3dadd( 71.7224, -81.3142, -30.3444, 1.11 ) }
    dend_15 { pt3dadd( 71.9935, -81.9672, -29.8371, 1.55 ) }
    dend_15 { pt3dadd( 72.3779, -83.1006, -28.9692, 0.29 ) }
    dend_15 { pt3dadd( 72.5629, -83.7995, -28.4783, 0.15 ) }
    dend_15 { pt3dadd( 72.7534, -84.69, -27.9618, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 72.8392, -85.1576, -27.7713, 0.96 ) }
    dend_15 { pt3dadd( 72.9655, -85.8282, -27.599, 1.11 ) }
    dend_15 { pt3dadd( 73.3161, -87.5186, -27.3503, 0.22 ) }
    dend_15 { pt3dadd( 73.605, -89.0068, -27.2576, 0.22 ) }
    dend_15 { pt3dadd( 73.8199, -90.0854, -27.2426, 0.66 ) }
    dend_15 { pt3dadd( 74.0528, -91.121, -27.2771, 0.22 ) }
    dend_15 { pt3dadd( 74.2308, -91.8392, -27.3201, 1.18 ) }
    dend_15 { pt3dadd( 74.4151, -92.4001, -27.3668, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 8/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.7714, 43.4588, -16.5434, 0.29 ) }
    dend_12 { pt3dadd( 16.4593, 45.5934, -18.4241, 0.29 ) }
    dend_12 { pt3dadd( 16.6968, 46.3195, -18.9997, 0.29 ) }
    dend_12 { pt3dadd( 16.871, 46.7713, -19.3082, 0.88 ) }
    dend_12 { pt3dadd( 17.142, 47.3792, -19.6401, 0.88 ) }
    dend_12 { pt3dadd( 17.77, 48.5376, -20.0962, 0.15 ) }
    dend_12 { pt3dadd( 18.3349, 49.4827, -20.3952, 0.15 ) }
    dend_12 { pt3dadd( 18.9601, 50.3314, -20.4898, 1.47 ) }
    dend_12 { pt3dadd( 19.709, 51.2945, -20.5381, 2.14 ) }
    dend_12 { pt3dadd( 20.4662, 52.2066, -20.5832, 1.84 ) }
    dend_12 { pt3dadd( 21.4701, 53.3994, -20.7471, 0.22 ) }
    dend_12 { pt3dadd( 21.8783, 53.8677, -20.8658, 0.22 ) }
    dend_12 { pt3dadd( 22.2826, 54.351, -21.0926, 1.03 ) }
    dend_12 { pt3dadd( 22.6409, 54.7841, -21.4208, 1.03 ) }
    dend_12 { pt3dadd( 23.2283, 55.5252, -22.2406, 0.29 ) }
    dend_12 { pt3dadd( 24.0188, 56.5227, -23.9061, 1.62 ) }
    dend_12 { pt3dadd( 24.1585, 56.6965, -24.3107, 2.5 ) }
    dend_12 { pt3dadd( 24.6576, 57.2695, -26.0656, 0.22 ) }
    dend_12 { pt3dadd( 24.98, 57.625, -27.349, 1.03 ) }
    dend_12 { pt3dadd( 25.4129, 58.0389, -28.9796, 1.11 ) }
    dend_12 { pt3dadd( 26.2193, 58.6917, -31.7845, 1.11 ) }
    dend_12 { pt3dadd( 26.7827, 59.1062, -33.6341, 2.36 ) }
    dend_12 { pt3dadd( 27.5445, 59.7666, -35.9688, 0.52 ) }
    dend_12 { pt3dadd( 28.1007, 60.3576, -37.5475, 1.25 ) }
    dend_12 { pt3dadd( 28.7876, 61.2468, -39.1857, 0.29 ) }
    dend_12 { pt3dadd( 29.3745, 62.1096, -40.2904, 1.33 ) }
    dend_12 { pt3dadd( 29.6282, 62.5502, -40.7019, 2.14 ) }
    dend_12 { pt3dadd( 30.7975, 64.8553, -42.5056, 0.22 ) }
    dend_12 { pt3dadd( 31.3686, 66.1168, -43.3747, 1.47 ) }
    dend_12 { pt3dadd( 32.0853, 67.8246, -44.5019, 0.15 ) }
    dend_12 { pt3dadd( 32.4433, 68.7484, -45.1223, 1.92 ) }
    dend_12 { pt3dadd( 33.6813, 72.0505, -47.2911, 0.15 ) }
    dend_12 { pt3dadd( 33.8894, 72.5948, -47.6625, 0.37 ) }
    dend_12 { pt3dadd( 34.1356, 73.2052, -48.1253, 0.15 ) }
    dend_12 { pt3dadd( 34.5824, 74.2629, -49.0665, 1.4 ) }
    dend_12 { pt3dadd( 34.8134, 74.8037, -49.6527, 1.4 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 44/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.7714, 43.4588, -16.5434, 0.29 ) }
    dend_9 { pt3dadd( 17.3389, 45.7196, -14.3115, 0.29 ) }
    dend_9 { pt3dadd( 18.9325, 47.9799, -12.1386, 1.47 ) }
    dend_9 { pt3dadd( 19.5511, 48.8816, -11.3121, 1.99 ) }
    dend_9 { pt3dadd( 20.74, 50.6392, -9.70195, 0.44 ) }
    dend_9 { pt3dadd( 21.0832, 51.1146, -9.226, 0.59 ) }
    dend_9 { pt3dadd( 21.5697, 51.7572, -8.55336, 0.22 ) }
    dend_9 { pt3dadd( 22.1311, 52.4135, -7.81095, 0.22 ) }
    dend_9 { pt3dadd( 22.8031, 53.136, -6.9378, 1.25 ) }
    dend_9 { pt3dadd( 23.4031, 53.7637, -6.14726, 1.55 ) }
    dend_9 { pt3dadd( 25.1575, 55.5273, -3.85513, 0.44 ) }
    dend_9 { pt3dadd( 25.9156, 56.2401, -2.92015, 1.55 ) }
    dend_9 { pt3dadd( 26.6155, 56.8611, -2.11345, 1.84 ) }
    dend_9 { pt3dadd( 28.1894, 58.2314, -0.491368, 0.52 ) }
    dend_9 { pt3dadd( 28.9429, 58.8799, 0.199212, 0.29 ) }
    dend_9 { pt3dadd( 29.7956, 59.6343, 0.868342, 0.52 ) }
    dend_9 { pt3dadd( 30.5007, 60.2835, 1.35273, 1.25 ) }
    dend_9 { pt3dadd( 31.8356, 61.5084, 2.21011, 0.29 ) }
    dend_9 { pt3dadd( 32.6972, 62.3058, 2.70525, 0.29 ) }
    dend_9 { pt3dadd( 33.8305, 63.3382, 3.21398, 1.92 ) }
    dend_9 { pt3dadd( 34.5867, 64.0481, 3.55266, 2.5 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 65/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 12.775, 7.83727, 15.0492, 0.44 ) }
    dend_7 { pt3dadd( 13.02, 8.49136, 13.8062, 0.44 ) }
    dend_7 { pt3dadd( 13.513, 9.41259, 11.4664, 0.96 ) }
    dend_7 { pt3dadd( 14.136, 10.1315, 8.83762, 0.59 ) }
    dend_7 { pt3dadd( 14.3778, 10.3471, 7.94402, 0.52 ) }
    dend_7 { pt3dadd( 14.6846, 10.5899, 6.98632, 0.37 ) }
    dend_7 { pt3dadd( 15.0619, 10.8848, 5.9595, 0.81 ) }
    dend_7 { pt3dadd( 16.2496, 11.7317, 3.17352, 0.44 ) }
    dend_7 { pt3dadd( 17.0751, 12.3336, 1.63059, 0.44 ) }
    dend_7 { pt3dadd( 17.6089, 12.7491, 0.867905, 0.59 ) }
    dend_7 { pt3dadd( 18.4177, 13.4194, -0.116833, 0.88 ) }
    dend_7 { pt3dadd( 19.0728, 14.0446, -0.783024, 0.88 ) }
    dend_7 { pt3dadd( 19.6777, 14.7649, -1.3186, 0.66 ) }
    dend_7 { pt3dadd( 20.4691, 15.9271, -1.94197, 0.22 ) }
    dend_7 { pt3dadd( 21.0413, 16.8342, -2.37445, 0.81 ) }
    dend_7 { pt3dadd( 21.2776, 17.1944, -2.56939, 0.81 ) }
    dend_7 { pt3dadd( 22.3341, 18.7723, -3.53605, 0.37 ) }
    dend_7 { pt3dadd( 22.9331, 19.6369, -4.11238, 0.37 ) }
    dend_7 { pt3dadd( 23.652, 20.6445, -4.80447, 1.25 ) }
    dend_7 { pt3dadd( 24.3809, 21.6505, -5.49416, 1.84 ) }
    dend_7 { pt3dadd( 25.4765, 23.1991, -6.56578, 0.37 ) }
    dend_7 { pt3dadd( 26.3299, 24.4282, -7.41147, 0.59 ) }
    dend_7 { pt3dadd( 27.1689, 25.6299, -8.21109, 0.29 ) }
    dend_7 { pt3dadd( 27.8472, 26.5694, -8.80896, 1.33 ) }
    dend_7 { pt3dadd( 28.3809, 27.3099, -9.23346, 1.84 ) }
    dend_7 { pt3dadd( 28.9626, 28.1307, -9.61839, 1.55 ) }
    dend_7 { pt3dadd( 29.3938, 28.7933, -9.79251, 0.81 ) }
    dend_7 { pt3dadd( 30.0195, 29.8305, -9.89958, 0.22 ) }
    dend_7 { pt3dadd( 30.4804, 30.6983, -9.86654, 0.74 ) }
    dend_7 { pt3dadd( 30.7735, 31.4479, -9.77794, 0.74 ) }
    dend_7 { pt3dadd( 31.1603, 32.7215, -9.58053, 0.22 ) }
    dend_7 { pt3dadd( 31.4423, 33.8847, -9.41411, 1.11 ) }
    dend_7 { pt3dadd( 31.6151, 34.8101, -9.26463, 1.62 ) }
    dend_7 { pt3dadd( 31.7276, 35.5264, -9.15267, 1.62 ) }
    dend_7 { pt3dadd( 32.0928, 37.9421, -8.78934, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( 32.202, 38.6199, -8.70175, 0.22 ) }
    dend_7 { pt3dadd( 32.4362, 39.9832, -8.53475, 1.33 ) }
    dend_7 { pt3dadd( 32.7414, 41.4637, -8.41751, 1.55 ) }
    dend_7 { pt3dadd( 33.1884, 43.3211, -8.32125, 0.22 ) }
    dend_7 { pt3dadd( 33.3942, 44.0357, -8.31598, 0.22 ) }
    dend_7 { pt3dadd( 33.8997, 45.5503, -8.37951, 1.11 ) }
    dend_7 { pt3dadd( 34.0883, 46.0838, -8.42731, 1.77 ) }
    dend_7 { pt3dadd( 34.8722, 47.9983, -8.80467, 0.15 ) }
    dend_7 { pt3dadd( 35.1591, 48.6099, -9.0048, 0.59 ) }
    dend_7 { pt3dadd( 35.7561, 49.7659, -9.49366, 0.22 ) }
    dend_7 { pt3dadd( 36.3249, 50.7743, -10.0265, 1.03 ) }
    dend_7 { pt3dadd( 36.6219, 51.2424, -10.3199, 1.03 ) }
    dend_7 { pt3dadd( 37.6268, 52.7375, -11.3613, 0.22 ) }
    dend_7 { pt3dadd( 38.1028, 53.4131, -11.8711, 0.22 ) }
    dend_7 { pt3dadd( 38.837, 54.4722, -12.6835, 2.06 ) }
    dend_7 { pt3dadd( 39.4306, 55.3422, -13.329, 2.28 ) }
    dend_7 { pt3dadd( 40.4118, 56.8173, -14.3681, 0.07 ) }
    dend_7 { pt3dadd( 40.6683, 57.2423, -14.6256, 0.07 ) }
    dend_7 { pt3dadd( 41.024, 57.9126, -14.9508, 1.03 ) }
    dend_7 { pt3dadd( 41.7575, 59.4102, -15.5619, 0.22 ) }
    dend_7 { pt3dadd( 42.2169, 60.4565, -15.853, 1.18 ) }
    dend_7 { pt3dadd( 42.4778, 61.1438, -15.9615, 1.47 ) }
    dend_7 { pt3dadd( 43.0443, 62.8936, -15.9922, 0.15 ) }
    dend_7 { pt3dadd( 43.3496, 63.9605, -15.9152, 0.29 ) }
    dend_7 { pt3dadd( 43.6025, 64.9738, -15.7808, 0.15 ) }
    dend_7 { pt3dadd( 43.9527, 66.5701, -15.5029, 0.74 ) }
    dend_7 { pt3dadd( 44.0708, 67.1522, -15.3764, 0.74 ) }
    dend_7 { pt3dadd( 44.5585, 69.7734, -14.6506, 0.22 ) }
    dend_7 { pt3dadd( 45.16, 72.8782, -13.7229, 0.22 ) }
    dend_7 { pt3dadd( 45.4401, 74.1985, -13.3103, 0.37 ) }
    dend_7 { pt3dadd( 45.692, 75.3296, -12.9457, 0.37 ) }
    dend_7 { pt3dadd( 46.0193, 76.7355, -12.5114, 1.33 ) }
    dend_7 { pt3dadd( 46.415, 78.3485, -11.9979, 1.92 ) }
    dend_7 { pt3dadd( 46.9366, 80.3056, -11.3658, 0.22 ) }
    dend_7 { pt3dadd( 47.2675, 81.387, -11.0056, 0.22 ) }
    dend_7 { pt3dadd( 47.6091, 82.3947, -10.7124, 0.74 ) }
    dend_7 { pt3dadd( 47.9545, 83.3343, -10.4991, 0.22 ) }
    dend_7 { pt3dadd( 48.3953, 84.4275, -10.3642, 0.52 ) }
    dend_7 { pt3dadd( 49.0974, 86.03, -10.2806, 1.33 ) }
    dend_7 { pt3dadd( 49.4279, 86.7732, -10.2627, 1.77 ) }
    dend_7 { pt3dadd( 49.7782, 87.5079, -10.2828, 1.55 ) }
    dend_7 { pt3dadd( 50.2762, 88.4758, -10.3299, 0.88 ) }
    dend_7 { pt3dadd( 51.1552, 90.1055, -10.4057, 0.22 ) }
    dend_7 { pt3dadd( 51.5795, 90.8703, -10.4387, 0.22 ) }
    dend_7 { pt3dadd( 52.0376, 91.6857, -10.4728, 0.66 ) }
    dend_7 { pt3dadd( 52.6677, 92.8159, -10.5403, 0.22 ) }
    dend_7 { pt3dadd( 53.4446, 94.2832, -10.6578, 1.25 ) }
    dend_7 { pt3dadd( 53.7991, 95.0027, -10.7513, 1.47 ) }
    dend_7 { pt3dadd( 54.1025, 95.6888, -10.8705, 1.62 ) }
    dend_7 { pt3dadd( 54.5116, 96.6969, -11.1085, 0.81 ) }
    dend_7 { pt3dadd( 55.0104, 98.0035, -11.6064, 0.22 ) }
    dend_7 { pt3dadd( 55.2481, 98.6973, -11.9667, 0.22 ) }
    dend_7 { pt3dadd( 55.5271, 99.6087, -12.5682, 0.81 ) }
    dend_7 { pt3dadd( 55.7395, 100.334, -13.1133, 1.18 ) }
    dend_7 { pt3dadd( 55.9423, 101.072, -13.6966, 1.4 ) }
    dend_7 { pt3dadd( 56.4753, 103.106, -15.3549, 0.22 ) }
    dend_7 { pt3dadd( 56.7263, 104.085, -16.0988, 0.22 ) }
    dend_7 { pt3dadd( 56.9307, 104.892, -16.6431, 0.22 ) }
    dend_7 { pt3dadd( 57.1009, 105.61, -17.0651, 0.22 ) }
    dend_7 { pt3dadd( 57.3783, 106.943, -17.7288, 1.18 ) }
    dend_7 { pt3dadd( 57.5576, 107.939, -18.1301, 1.4 ) }
    dend_7 { pt3dadd( 58.0847, 111.171, -19.1588, 0.22 ) }
    dend_7 { pt3dadd( 58.3856, 113.047, -19.678, 0.22 ) }
    dend_7 { pt3dadd( 58.5822, 114.392, -20.002, 1.11 ) }
    dend_7 { pt3dadd( 58.7818, 115.96, -20.3721, 0.15 ) }
    dend_7 { pt3dadd( 58.8782, 116.871, -20.583, 0.81 ) }
    dend_7 { pt3dadd( 59.0098, 118.594, -20.9689, 0.22 ) }
    dend_7 { pt3dadd( 59.0486, 119.611, -21.1971, 1.25 ) }
    dend_7 { pt3dadd( 59.0549, 120.194, -21.3387, 1.55 ) }
    dend_7 { pt3dadd( 59.0341, 121.92, -21.771, 0.29 ) }
    dend_7 { pt3dadd( 58.9373, 123.85, -22.2498, 0.22 ) }
    dend_7 { pt3dadd( 58.8363, 124.915, -22.5001, 0.22 ) }
    dend_7 { pt3dadd( 58.7005, 125.823, -22.6932, 1.03 ) }
    dend_7 { pt3dadd( 58.5975, 126.405, -22.8031, 1.55 ) }
    dend_7 { pt3dadd( 58.4296, 127.226, -22.9338, 0.88 ) }
    dend_7 { pt3dadd( 58.067, 128.757, -23.106, 0.22 ) }
    dend_7 { pt3dadd( 57.8893, 129.452, -23.1762, 0.37 ) }
    dend_7 { pt3dadd( 57.7015, 130.338, -23.2557, 0.22 ) }
    dend_7 { pt3dadd( 57.5507, 131.248, -23.334, 0.74 ) }
    dend_7 { pt3dadd( 57.4843, 131.916, -23.4009, 0.81 ) }
    dend_7 { pt3dadd( 57.4264, 133.038, -23.4655, 0.15 ) }
    dend_7 { pt3dadd( 57.4283, 133.502, -23.4773, 0.44 ) }
    dend_7 { pt3dadd( 57.4772, 135.302, -23.4948, 0.22 ) }
    dend_7 { pt3dadd( 57.5103, 136.146, -23.497, 0.52 ) }
    dend_7 { pt3dadd( 57.575, 138.151, -23.46, 0.22 ) }
    dend_7 { pt3dadd( 57.63, 139.737, -23.4198, 0.29 ) }
    dend_7 { pt3dadd( 57.6661, 141.143, -23.3726, 0.15 ) }
    dend_7 { pt3dadd( 57.7045, 143.6, -23.2725, 0.15 ) }
    dend_7 { pt3dadd( 57.6893, 144.828, -23.2029, 0.15 ) }
    dend_7 { pt3dadd( 57.6632, 145.922, -23.1293, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.775, 7.83727, 15.0492, 0.66 ) }
    dend_2 { pt3dadd( 13.0628, 6.59362, 15.9308, 0.66 ) }
    dend_2 { pt3dadd( 13.2881, 5.62068, 16.6206, 0.74 ) }
    dend_2 { pt3dadd( 13.4346, 4.98743, 17.0695, 0.59 ) }
    dend_2 { pt3dadd( 13.6017, 4.26583, 17.581, 1.55 ) }
    dend_2 { pt3dadd( 13.7106, 3.79516, 17.9147, 1.92 ) }
    dend_2 { pt3dadd( 13.7804, 3.4936, 18.1285, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 97/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.19924, -37.2388, -1.22449, 0.15 ) }
    axon_1 { pt3dadd( -4.29963, -52.1983, -1.22449, 0.15 ) }
    axon_1 { pt3dadd( -5.40002, -67.1579, -1.22449, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 0/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 2.05498, 44.8121, 0.456999, 0.44 ) }
    apic_6 { pt3dadd( 1.88376, 46.0557, 0.991563, 0.44 ) }
    apic_6 { pt3dadd( 1.75402, 47.1871, 1.41343, 0.44 ) }
    apic_6 { pt3dadd( 1.67296, 48.0051, 1.68408, 1.03 ) }
    apic_6 { pt3dadd( 1.61299, 48.7966, 1.90317, 1.25 ) }
    apic_6 { pt3dadd( 1.53924, 49.7499, 2.135, 0.37 ) }
    apic_6 { pt3dadd( 1.48917, 50.3966, 2.27154, 0.37 ) }
    apic_6 { pt3dadd( 1.42954, 51.4506, 2.43675, 1.33 ) }
    apic_6 { pt3dadd( 1.40515, 52.0398, 2.48756, 1.33 ) }
    apic_6 { pt3dadd( 1.36409, 53.3878, 2.54873, 0.59 ) }
    apic_6 { pt3dadd( 1.36026, 54.0541, 2.56822, 0.44 ) }
    apic_6 { pt3dadd( 1.36853, 55.179, 2.5911, 0.81 ) }
    apic_6 { pt3dadd( 1.38206, 55.889, 2.60006, 0.81 ) }
    apic_6 { pt3dadd( 1.3993, 56.9326, 2.60392, 0.22 ) }
    apic_6 { pt3dadd( 1.4026, 57.7524, 2.60804, 0.37 ) }
    apic_6 { pt3dadd( 1.39891, 58.3288, 2.60162, 0.22 ) }
    apic_6 { pt3dadd( 1.38172, 59.0737, 2.60732, 0.96 ) }
    apic_6 { pt3dadd( 1.35328, 59.5174, 2.61923, 1.11 ) }
    apic_6 { pt3dadd( 1.1605, 61.1032, 2.69034, 0.22 ) }
    apic_6 { pt3dadd( 0.953337, 62.2975, 2.76298, 1.4 ) }
    apic_6 { pt3dadd( 0.805659, 62.9208, 2.81004, 1.62 ) }
    apic_6 { pt3dadd( 0.511562, 63.9106, 2.89677, 0.74 ) }
    apic_6 { pt3dadd( 0.191887, 64.7925, 2.99277, 0.22 ) }
    apic_6 { pt3dadd( -0.0256832, 65.3326, 3.05946, 0.22 ) }
    apic_6 { pt3dadd( -0.261929, 65.8393, 3.13566, 0.22 ) }
    apic_6 { pt3dadd( -0.658904, 66.5965, 3.26736, 1.03 ) }
    apic_6 { pt3dadd( -0.981484, 67.17, 3.37486, 1.62 ) }
    apic_6 { pt3dadd( -1.36806, 67.8248, 3.44173, 1.62 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 28/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 2.05498, 44.8121, 0.456999, 0.44 ) }
    apic_5 { pt3dadd( 1.18094, 46.3273, -0.481056, 0.44 ) }
    apic_5 { pt3dadd( 0.635398, 47.5127, -1.08155, 0.37 ) }
    apic_5 { pt3dadd( 0.355722, 48.3363, -1.45142, 0.37 ) }
    apic_5 { pt3dadd( 0.116234, 49.4429, -1.88812, 0.88 ) }
    apic_5 { pt3dadd( 0.0370946, 50.0703, -2.11463, 0.96 ) }
    apic_5 { pt3dadd( -0.0160295, 50.9178, -2.39631, 0.59 ) }
    apic_5 { pt3dadd( 0.0582102, 51.8328, -2.61752, 0.37 ) }
    apic_5 { pt3dadd( 0.229, 52.915, -2.81759, 0.37 ) }
    apic_5 { pt3dadd( 0.42865, 54.0636, -3.00166, 1.03 ) }
    apic_5 { pt3dadd( 0.512389, 54.6583, -3.0925, 1.03 ) }
    apic_5 { pt3dadd( 0.62947, 55.8552, -3.29242, 0.22 ) }
    apic_5 { pt3dadd( 0.658642, 56.358, -3.37818, 0.22 ) }
    apic_5 { pt3dadd( 0.676854, 57.6968, -3.62079, 1.4 ) }
    apic_5 { pt3dadd( 0.640686, 58.3668, -3.73785, 1.84 ) }
    apic_5 { pt3dadd( 0.375182, 60.4852, -4.10435, 0.22 ) }
    apic_5 { pt3dadd( 0.296767, 60.9568, -4.18129, 0.22 ) }
    apic_5 { pt3dadd( 0.125089, 61.8749, -4.32118, 0.59 ) }
    apic_5 { pt3dadd( -0.0978308, 63.1004, -4.51399, 0.29 ) }
    apic_5 { pt3dadd( -0.228835, 63.9344, -4.644, 0.22 ) }
    apic_5 { pt3dadd( -0.35502, 65.1335, -4.81368, 0.22 ) }
    apic_5 { pt3dadd( -0.395345, 65.9795, -4.90395, 0.88 ) }
    apic_5 { pt3dadd( -0.393127, 66.4881, -4.9553, 1.18 ) }
    apic_5 { pt3dadd( -0.336074, 67.8596, -5.08581, 0.22 ) }
    apic_5 { pt3dadd( -0.263651, 68.7663, -5.15914, 0.52 ) }
    apic_5 { pt3dadd( -0.187751, 69.4201, -5.2115, 0.52 ) }
    apic_5 { pt3dadd( -0.0259956, 70.6859, -5.24493, 0.29 ) }
    apic_5 { pt3dadd( 0.0767583, 71.7068, -5.216, 1.11 ) }
    apic_5 { pt3dadd( 0.120013, 72.561, -5.08715, 1.33 ) }
    apic_5 { pt3dadd( 0.105683, 73.4554, -4.84, 0.66 ) }
    apic_5 { pt3dadd( 0.0233765, 74.8083, -4.32452, 1.33 ) }
    apic_5 { pt3dadd( -0.0797037, 76.0525, -3.71326, 2.06 ) }
    apic_5 { pt3dadd( -0.140488, 76.5873, -3.40067, 2.28 ) }
    apic_5 { pt3dadd( -0.395076, 78.4263, -2.23685, 0.29 ) }
    apic_5 { pt3dadd( -0.497284, 79.0717, -1.80812, 0.29 ) }
    apic_5 { pt3dadd( -0.717516, 80.2812, -1.01376, 0.81 ) }
    apic_5 { pt3dadd( -0.890351, 81.1602, -0.448004, 0.74 ) }
    apic_5 { pt3dadd( -1.16713, 82.547, 0.322182, 0.22 ) }
    apic_5 { pt3dadd( -1.31638, 83.2633, 0.655966, 0.88 ) }
    apic_5 { pt3dadd( -1.4014, 83.6126, 0.776791, 1.18 ) }
    apic_5 { pt3dadd( -1.69409, 84.6402, 1.06059, 0.52 ) }
    apic_5 { pt3dadd( -2.04691, 85.621, 1.27978, 0.22 ) }
    apic_5 { pt3dadd( -2.46874, 86.6327, 1.47142, 0.22 ) }
    apic_5 { pt3dadd( -2.91536, 87.6593, 1.68269, 1.11 ) }
    apic_5 { pt3dadd( -3.16169, 88.2143, 1.78498, 1.55 ) }
    apic_5 { pt3dadd( -3.45122, 88.8788, 1.88832, 1.18 ) }
    apic_5 { pt3dadd( -3.95161, 90.0646, 1.9382, 0.22 ) }
    apic_5 { pt3dadd( -4.29736, 90.9825, 1.87342, 0.29 ) }
    apic_5 { pt3dadd( -4.53979, 91.7838, 1.76787, 0.29 ) }
    apic_5 { pt3dadd( -4.80617, 93.0599, 1.54862, 1.03 ) }
    apic_5 { pt3dadd( -4.92442, 93.885, 1.37786, 0.96 ) }
    apic_5 { pt3dadd( -5.08557, 95.732, 0.923095, 0.59 ) }
    apic_5 { pt3dadd( -5.1277, 96.742, 0.632659, 0.37 ) }
    apic_5 { pt3dadd( -5.13776, 97.5684, 0.387939, 0.29 ) }
    apic_5 { pt3dadd( -5.12619, 98.624, 0.0735805, 0.29 ) }
    apic_5 { pt3dadd( -5.08261, 99.3805, -0.122447, 0.88 ) }
    apic_5 { pt3dadd( -5.01587, 100.108, -0.309157, 1.33 ) }
    apic_5 { pt3dadd( -4.8979, 101.075, -0.557678, 0.37 ) }
    apic_5 { pt3dadd( -4.78349, 101.742, -0.779723, 0.29 ) }
    apic_5 { pt3dadd( -4.63379, 102.485, -1.07072, 0.29 ) }
    apic_5 { pt3dadd( -4.38048, 103.646, -1.5937, 1.18 ) }
    apic_5 { pt3dadd( -4.21665, 104.347, -1.92635, 1.33 ) }
    apic_5 { pt3dadd( -3.98726, 105.224, -2.37743, 1.33 ) }
    apic_5 { pt3dadd( -3.62783, 106.586, -3.07501, 0.22 ) }
    apic_5 { pt3dadd( -3.3306, 107.675, -3.62774, 0.22 ) }
    apic_5 { pt3dadd( -3.09455, 108.549, -4.06717, 0.88 ) }
    apic_5 { pt3dadd( -2.92294, 109.185, -4.37718, 0.81 ) }
    apic_5 { pt3dadd( -2.51276, 110.68, -5.07744, 0.29 ) }
    apic_5 { pt3dadd( -2.22225, 111.788, -5.64674, 0.29 ) }
    apic_5 { pt3dadd( -2.0032, 112.65, -6.1156, 0.29 ) }
    apic_5 { pt3dadd( -1.70649, 113.819, -6.7992, 0.52 ) }
    apic_5 { pt3dadd( -1.46967, 114.918, -7.53206, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_5 { pt3dadd( -1.32057, 115.888, -8.2246, 2.06 ) }
    apic_5 { pt3dadd( -1.14258, 117.882, -9.69194, 0.29 ) }
    apic_5 { pt3dadd( -1.10988, 118.788, -10.4117, 0.29 ) }
    apic_5 { pt3dadd( -1.1425, 119.821, -11.3261, 1.33 ) }
    apic_5 { pt3dadd( -1.26308, 121.455, -12.9076, 1.03 ) }
    apic_5 { pt3dadd( -1.35955, 122.391, -13.8601, 0.44 ) }
    apic_5 { pt3dadd( -1.42244, 122.894, -14.3824, 0.44 ) }
    apic_5 { pt3dadd( -1.60428, 124.062, -15.5994, 1.47 ) }
    apic_5 { pt3dadd( -1.98901, 126.119, -17.7722, 0.22 ) }
    apic_5 { pt3dadd( -2.09986, 126.665, -18.3226, 0.22 ) }
    apic_5 { pt3dadd( -2.30813, 127.624, -19.2522, 1.47 ) }
    apic_5 { pt3dadd( -2.43196, 128.117, -19.7414, 1.84 ) }
    apic_5 { pt3dadd( -2.88965, 129.643, -21.1656, 0.22 ) }
    apic_5 { pt3dadd( -3.0701, 130.105, -21.5668, 0.22 ) }
    apic_5 { pt3dadd( -3.28505, 130.556, -21.9084, 0.81 ) }
    apic_5 { pt3dadd( -3.4561, 130.897, -22.1864, 0.81 ) }
    apic_5 { pt3dadd( -3.80809, 131.61, -22.8049, 0.29 ) }
    apic_5 { pt3dadd( -4.04924, 132.192, -23.372, 0.88 ) }
    apic_5 { pt3dadd( -4.50867, 133.569, -24.7908, 0.37 ) }
    apic_5 { pt3dadd( -4.70837, 134.376, -25.6918, 1.55 ) }
    apic_5 { pt3dadd( -5.01176, 136.123, -27.7214, 0.29 ) }
    apic_5 { pt3dadd( -5.07459, 136.861, -28.6158, 1.55 ) }
    apic_5 { pt3dadd( -5.0786, 138.679, -30.9342, 0.22 ) }
    apic_5 { pt3dadd( -5.05312, 138.971, -31.3295, 0.74 ) }
    apic_5 { pt3dadd( -4.86718, 140.025, -32.792, 0.22 ) }
    apic_5 { pt3dadd( -4.80625, 140.284, -33.1627, 0.44 ) }
    apic_5 { pt3dadd( -4.50482, 141.35, -34.6337, 0.15 ) }
    apic_5 { pt3dadd( -4.2893, 142.147, -35.7071, 1.25 ) }
    apic_5 { pt3dadd( -4.14664, 142.764, -36.4694, 1.62 ) }
    apic_5 { pt3dadd( -3.95531, 143.853, -37.7153, 0.29 ) }
    apic_5 { pt3dadd( -3.8968, 144.299, -38.2048, 0.66 ) }
    apic_5 { pt3dadd( -3.81459, 144.875, -38.8358, 0.29 ) }
    apic_5 { pt3dadd( -3.60518, 145.986, -39.9824, 0.96 ) }
    apic_5 { pt3dadd( -3.40969, 146.827, -40.8146, 0.29 ) }
    apic_5 { pt3dadd( -3.10909, 147.939, -41.8945, 1.69 ) }
    apic_5 { pt3dadd( -2.6158, 149.539, -43.4702, 0.81 ) }
    apic_5 { pt3dadd( -2.10624, 150.97, -45.0049, 0.22 ) }
    apic_5 { pt3dadd( -1.69748, 152.004, -46.1377, 0.22 ) }
    apic_5 { pt3dadd( -1.3544, 152.805, -47.0113, 1.25 ) }
    apic_5 { pt3dadd( -1.16784, 153.232, -47.4839, 1.25 ) }
    apic_5 { pt3dadd( -0.591712, 154.679, -49.0158, 1.18 ) }
    apic_5 { pt3dadd( 0.174777, 157.099, -51.3439, 0.22 ) }
    apic_5 { pt3dadd( 0.301646, 157.652, -51.8308, 0.52 ) }
    apic_5 { pt3dadd( 0.364023, 158.046, -52.1552, 0.44 ) }
    apic_5 { pt3dadd( 0.498837, 159.251, -53.0252, 1.18 ) }
    apic_5 { pt3dadd( 0.618364, 161.094, -54.1292, 0.22 ) }
    apic_5 { pt3dadd( 0.659912, 162.372, -54.716, 0.96 ) }
    apic_5 { pt3dadd( 0.64982, 163.74, -55.2232, 0.22 ) }
    apic_5 { pt3dadd( 0.641776, 164.641, -55.5371, 0.66 ) }
    apic_5 { pt3dadd( 0.628241, 166.379, -56.1175, 0.15 ) }
    apic_5 { pt3dadd( 0.620109, 167.528, -56.4636, 0.15 ) }
    apic_5 { pt3dadd( 0.556449, 168.749, -56.7948, 1.03 ) }
    apic_5 { pt3dadd( 0.45974, 169.793, -57.0651, 1.33 ) }
    apic_5 { pt3dadd( 0.020415, 172.959, -57.8631, 0.15 ) }
    apic_5 { pt3dadd( -0.113811, 173.785, -58.051, 1.03 ) }
    apic_5 { pt3dadd( -0.268904, 174.616, -58.2321, 1.69 ) }
    apic_5 { pt3dadd( -1.02566, 178.848, -59.1478, 0.15 ) }
    apic_5 { pt3dadd( -1.24651, 180.106, -59.4038, 0.15 ) }
    apic_5 { pt3dadd( -1.49413, 181.607, -59.6868, 1.47 ) }
    apic_5 { pt3dadd( -1.79746, 183.495, -60.062, 0.15 ) }
    apic_5 { pt3dadd( -1.92042, 184.391, -60.2431, 0.44 ) }
    apic_5 { pt3dadd( -2.31308, 187.942, -60.9954, 0.22 ) }
    apic_5 { pt3dadd( -2.41451, 189.397, -61.3071, 1.11 ) }
    apic_5 { pt3dadd( -2.43724, 189.805, -61.3957, 1.11 ) }
    apic_5 { pt3dadd( -2.52476, 192.945, -61.8938, 0.15 ) }
    apic_5 { pt3dadd( -2.54196, 194.129, -61.9427, 0.66 ) }
    apic_5 { pt3dadd( -2.54272, 194.465, -61.9175, 1.03 ) }
    apic_5 { pt3dadd( -2.54627, 195.717, -61.6641, 0.22 ) }
    apic_5 { pt3dadd( -2.53594, 196.577, -61.4426, 1.03 ) }
    apic_5 { pt3dadd( -2.46197, 199.78, -60.4135, 0.15 ) }
    apic_5 { pt3dadd( -2.32606, 202.871, -59.0615, 0.15 ) }
    apic_5 { pt3dadd( -2.29147, 203.648, -58.6906, 1.03 ) }
    apic_5 { pt3dadd( -2.26072, 204.372, -58.3218, 1.33 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 73/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -4.76444, 77.2395, 22.812, 0.29 ) }
    apic_3 { pt3dadd( -4.77114, 78.4963, 23.5529, 0.29 ) }
    apic_3 { pt3dadd( -4.79945, 79.5989, 24.2772, 0.29 ) }
    apic_3 { pt3dadd( -4.84437, 80.2361, 24.7052, 0.59 ) }
    apic_3 { pt3dadd( -4.89021, 80.7379, 25.0357, 0.59 ) }
    apic_3 { pt3dadd( -4.99491, 81.9838, 25.8018, 0.22 ) }
    apic_3 { pt3dadd( -5.02682, 82.42, 26.0685, 0.74 ) }
    apic_3 { pt3dadd( -5.05736, 83.0232, 26.4496, 0.74 ) }
    apic_3 { pt3dadd( -5.04776, 83.9228, 26.9116, 0.22 ) }
    apic_3 { pt3dadd( -5.02902, 84.2894, 27.091, 0.22 ) }
    apic_3 { pt3dadd( -4.96978, 85.063, 27.4276, 0.96 ) }
    apic_3 { pt3dadd( -4.89608, 85.8136, 27.6739, 0.96 ) }
    apic_3 { pt3dadd( -4.68023, 87.228, 28.1037, 0.29 ) }
    apic_3 { pt3dadd( -4.46608, 88.2251, 28.3413, 0.29 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 87/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -4.76444, 77.2395, 22.812, 0.59 ) }
    apic_2 { pt3dadd( -5.20481, 78.7258, 23.2699, 0.59 ) }
    apic_2 { pt3dadd( -5.38538, 79.5063, 23.537, 0.59 ) }
    apic_2 { pt3dadd( -5.62878, 80.7603, 23.9566, 0.44 ) }
    apic_2 { pt3dadd( -5.79621, 81.7649, 24.2695, 0.96 ) }
    apic_2 { pt3dadd( -5.91845, 82.6612, 24.5304, 1.25 ) }
    apic_2 { pt3dadd( -6.11016, 84.5244, 25.0696, 0.29 ) }
    apic_2 { pt3dadd( -6.15711, 85.6546, 25.458, 0.74 ) }
    apic_2 { pt3dadd( -6.13838, 86.4639, 25.7114, 0.37 ) }
    apic_2 { pt3dadd( -6.03462, 87.4448, 25.9817, 0.37 ) }
    apic_2 { pt3dadd( -5.94875, 87.9498, 26.1422, 1.33 ) }
    apic_2 { pt3dadd( -5.81257, 88.6569, 26.4022, 1.62 ) }
    apic_2 { pt3dadd( -5.71433, 89.1536, 26.604, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_2 { pt3dadd( -5.49292, 90.2152, 27.1301, 0.66 ) }
    apic_2 { pt3dadd( -5.36641, 91.0764, 27.66, 0.37 ) }
    apic_2 { pt3dadd( -5.24979, 92.9011, 28.891, 0.74 ) }
    apic_2 { pt3dadd( -5.25991, 93.63, 29.3987, 0.74 ) }
    apic_2 { pt3dadd( -5.29776, 94.2922, 29.8417, 1.18 ) }
    apic_2 { pt3dadd( -5.38573, 95.2923, 30.4746, 1.4 ) }
    apic_2 { pt3dadd( -5.62714, 97.3823, 31.6858, 0.29 ) }
    apic_2 { pt3dadd( -5.7689, 98.3801, 32.1345, 0.96 ) }
    apic_2 { pt3dadd( -5.82728, 98.783, 32.2496, 1.33 ) }
    apic_2 { pt3dadd( -5.97414, 100.135, 32.4761, 0.37 ) }
    apic_2 { pt3dadd( -6.04576, 101.063, 32.5161, 0.81 ) }
    apic_2 { pt3dadd( -6.11767, 102.504, 32.4113, 0.37 ) }
    apic_2 { pt3dadd( -6.14098, 103.996, 32.1399, 0.22 ) }
    apic_2 { pt3dadd( -6.1189, 104.766, 32.0841, 1.03 ) }
    apic_2 { pt3dadd( -6.08804, 105.709, 32.0822, 1.03 ) }
    apic_2 { pt3dadd( -6.05305, 107.115, 32.1732, 0.66 ) }
    apic_2 { pt3dadd( -6.02763, 108.157, 32.3039, 1.18 ) }
    apic_2 { pt3dadd( -6.00906, 108.981, 32.4564, 1.77 ) }
    apic_2 { pt3dadd( -5.92645, 113.062, 33.4125, 0.37 ) }
    apic_2 { pt3dadd( -5.91842, 114.216, 33.7007, 1.03 ) }
    apic_2 { pt3dadd( -5.91724, 114.79, 33.8506, 1.18 ) }
    apic_2 { pt3dadd( -5.91177, 116.043, 34.1561, 0.66 ) }
    apic_2 { pt3dadd( -5.91549, 116.877, 34.3139, 0.96 ) }
    apic_2 { pt3dadd( -5.95261, 117.895, 34.4264, 0.52 ) }
    apic_2 { pt3dadd( -6.01838, 118.743, 34.4115, 0.29 ) }
    apic_2 { pt3dadd( -6.06868, 119.551, 34.4198, 0.74 ) }
    apic_2 { pt3dadd( -6.17477, 121.248, 34.4372, 0.29 ) }
    apic_2 { pt3dadd( -6.22536, 122.035, 34.4591, 0.52 ) }
    apic_2 { pt3dadd( -6.27527, 122.765, 34.5002, 0.52 ) }
    apic_2 { pt3dadd( -6.33983, 123.529, 34.5633, 0.22 ) }
    apic_2 { pt3dadd( -6.41858, 124.242, 34.64, 0.22 ) }
    apic_2 { pt3dadd( -6.57885, 125.412, 34.7891, 1.25 ) }
    apic_2 { pt3dadd( -6.67443, 126.163, 34.8882, 1.4 ) }
    apic_2 { pt3dadd( -6.77829, 127.125, 35.0089, 0.96 ) }
    apic_2 { pt3dadd( -6.90366, 128.593, 35.1764, 0.22 ) }
    apic_2 { pt3dadd( -6.97891, 129.594, 35.2767, 0.81 ) }
    apic_2 { pt3dadd( -7.0194, 130.206, 35.327, 0.81 ) }
    apic_2 { pt3dadd( -7.10179, 131.687, 35.3464, 0.22 ) }
    apic_2 { pt3dadd( -7.1254, 132.204, 35.3199, 0.22 ) }
    apic_2 { pt3dadd( -7.1514, 132.99, 35.2563, 0.59 ) }
    apic_2 { pt3dadd( -7.15792, 134.092, 35.1358, 0.22 ) }
    apic_2 { pt3dadd( -7.15059, 134.853, 35.0315, 0.22 ) }
    apic_2 { pt3dadd( -7.14635, 136.596, 34.752, 0.22 ) }
    apic_2 { pt3dadd( -7.19192, 137.76, 34.5257, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.449641, -15.6093, -10.8626, 0.66 ) }
    dend_20 { pt3dadd( -1.68845, -19.1877, -8.00057, 0.66 ) }
    dend_20 { pt3dadd( -2.70653, -21.4112, -5.98168, 0.52 ) }
    dend_20 { pt3dadd( -3.40651, -22.7359, -4.62622, 0.44 ) }
    dend_20 { pt3dadd( -3.69177, -23.2816, -4.06985, 1.11 ) }
    dend_20 { pt3dadd( -4.04069, -23.959, -3.29398, 1.33 ) }
    dend_20 { pt3dadd( -4.59615, -24.8692, -1.98337, 0.96 ) }
    dend_20 { pt3dadd( -5.61506, -26.1406, 0.308336, 0.66 ) }
    dend_20 { pt3dadd( -6.33281, -26.8993, 1.8433, 1.33 ) }
    dend_20 { pt3dadd( -7.02115, -27.6055, 3.3683, 1.84 ) }
    dend_20 { pt3dadd( -8.58474, -29.295, 6.91274, 0.66 ) }
    dend_20 { pt3dadd( -9.96161, -30.9323, 10.1259, 0.37 ) }
    dend_20 { pt3dadd( -10.4902, -31.6209, 11.3091, 0.66 ) }
    dend_20 { pt3dadd( -10.9025, -32.2206, 12.1303, 1.03 ) }
    dend_20 { pt3dadd( -11.3516, -32.9753, 12.9081, 0.96 ) }
    dend_20 { pt3dadd( -11.7755, -33.8074, 13.4879, 0.74 ) }
    dend_20 { pt3dadd( -12.4822, -35.6715, 14.2917, 1.92 ) }
    dend_20 { pt3dadd( -12.8162, -36.8364, 14.7642, 1.92 ) }
    dend_20 { pt3dadd( -13.0989, -37.9724, 15.3128, 1.62 ) }
    dend_20 { pt3dadd( -13.5572, -39.7186, 16.2629, 0.52 ) }
    dend_20 { pt3dadd( -13.9155, -40.9116, 16.9284, 0.29 ) }
    dend_20 { pt3dadd( -14.6727, -43.2469, 18.2071, 0.81 ) }
    dend_20 { pt3dadd( -15.4379, -45.4608, 19.4717, 1.33 ) }
    dend_20 { pt3dadd( -15.9327, -46.9179, 20.3966, 1.33 ) }
    dend_20 { pt3dadd( -16.3657, -48.2977, 21.3847, 1.33 ) }
    dend_20 { pt3dadd( -16.9809, -50.3688, 22.9353, 0.88 ) }
    dend_20 { pt3dadd( -17.3962, -51.8367, 24.0309, 0.66 ) }
    dend_20 { pt3dadd( -18.0756, -54.1324, 25.6591, 0.96 ) }
    dend_20 { pt3dadd( -18.7218, -56.1692, 27.0754, 1.55 ) }
    dend_20 { pt3dadd( -19.5994, -58.8346, 28.8506, 0.52 ) }
    dend_20 { pt3dadd( -20.0575, -60.2633, 29.7318, 0.59 ) }
    dend_20 { pt3dadd( -20.4314, -61.3936, 30.3194, 0.88 ) }
    dend_20 { pt3dadd( -20.8274, -62.4643, 30.6714, 1.18 ) }
    dend_20 { pt3dadd( -21.361, -63.7214, 30.7662, 0.96 ) }
    dend_20 { pt3dadd( -22.2043, -65.4473, 30.5209, 0.52 ) }
    dend_20 { pt3dadd( -23.0562, -66.997, 30.084, 0.52 ) }
    dend_20 { pt3dadd( -23.9689, -68.5482, 29.5422, 1.47 ) }
    dend_20 { pt3dadd( -24.7646, -69.838, 29.0376, 1.92 ) }
    dend_20 { pt3dadd( -25.5115, -71.0238, 28.5802, 1.84 ) }
    dend_20 { pt3dadd( -26.7597, -72.9202, 27.8766, 0.88 ) }
    dend_20 { pt3dadd( -27.3644, -73.749, 27.5722, 0.52 ) }
    dend_20 { pt3dadd( -28.0776, -74.5948, 27.248, 0.29 ) }
    dend_20 { pt3dadd( -28.5959, -75.1329, 27.0422, 0.29 ) }
    dend_20 { pt3dadd( -29.4943, -75.9847, 26.7659, 0.66 ) }
    dend_20 { pt3dadd( -29.9462, -76.4065, 26.6901, 0.88 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.449641, -15.6093, -10.8626, 0.29 ) }
    dend_19 { pt3dadd( -0.179485, -17.2357, -10.8019, 0.29 ) }
    dend_19 { pt3dadd( -0.0560293, -18.4644, -10.8118, 0.29 ) }
    dend_19 { pt3dadd( -0.0271414, -19.4333, -10.8479, 1.4 ) }
    dend_19 { pt3dadd( -0.0439604, -20.5484, -10.9339, 1.69 ) }
    dend_19 { pt3dadd( -0.0889197, -21.2201, -10.9804, 1.62 ) }
    dend_19 { pt3dadd( -0.255387, -22.5423, -11.0654, 0.59 ) }
    dend_19 { pt3dadd( -0.499714, -23.5658, -11.1295, 0.52 ) }
    dend_19 { pt3dadd( -0.866632, -24.7411, -11.179, 0.88 ) }
    dend_19 { pt3dadd( -1.10281, -25.4064, -11.1693, 1.03 ) }
    dend_19 { pt3dadd( -1.49038, -26.4735, -11.1143, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( -1.87338, -27.5776, -11.0143, 0.37 ) }
    dend_19 { pt3dadd( -2.19997, -28.6212, -10.8756, 0.22 ) }
    dend_19 { pt3dadd( -2.40643, -29.4238, -10.7618, 0.66 ) }
    dend_19 { pt3dadd( -2.59553, -30.4181, -10.6024, 0.96 ) }
    dend_19 { pt3dadd( -2.74287, -31.474, -10.4063, 1.47 ) }
    dend_19 { pt3dadd( -2.83592, -32.3585, -10.2502, 1.92 ) }
    dend_19 { pt3dadd( -2.9155, -33.1248, -10.114, 1.92 ) }
    dend_19 { pt3dadd( -3.02505, -33.9492, -9.9832, 1.55 ) }
    dend_19 { pt3dadd( -3.29662, -35.3014, -9.7613, 0.29 ) }
    dend_19 { pt3dadd( -3.45787, -35.9074, -9.68153, 0.29 ) }
    dend_19 { pt3dadd( -3.82804, -37.033, -9.56867, 1.11 ) }
    dend_19 { pt3dadd( -4.16935, -37.9913, -9.52831, 1.47 ) }
    dend_19 { pt3dadd( -4.44111, -38.7022, -9.55311, 1.84 ) }
    dend_19 { pt3dadd( -4.80544, -39.6032, -9.66022, 1.84 ) }
    dend_19 { pt3dadd( -5.2708, -40.7483, -9.90067, 0.52 ) }
    dend_19 { pt3dadd( -5.62711, -41.6245, -10.1444, 0.29 ) }
    dend_19 { pt3dadd( -5.93651, -42.3798, -10.3859, 0.22 ) }
    dend_19 { pt3dadd( -6.32633, -43.2842, -10.6746, 1.77 ) }
    dend_19 { pt3dadd( -6.66284, -44.01, -10.9026, 2.06 ) }
    dend_19 { pt3dadd( -7.07499, -44.8223, -11.1528, 1.77 ) }
    dend_19 { pt3dadd( -7.7202, -45.8532, -11.4494, 0.29 ) }
    dend_19 { pt3dadd( -8.2879, -46.5553, -11.6607, 0.29 ) }
    dend_19 { pt3dadd( -8.88856, -47.182, -11.8455, 1.11 ) }
    dend_19 { pt3dadd( -9.21387, -47.484, -11.9336, 1.47 ) }
    dend_19 { pt3dadd( -9.65955, -47.8587, -12.0485, 1.18 ) }
    dend_19 { pt3dadd( -10.4169, -48.4305, -12.235, 0.44 ) }
    dend_19 { pt3dadd( -11.4247, -49.1512, -12.5139, 0.22 ) }
    dend_19 { pt3dadd( -11.9101, -49.4864, -12.6464, 0.74 ) }
    dend_19 { pt3dadd( -12.3364, -49.7819, -12.7639, 0.81 ) }
    dend_19 { pt3dadd( -12.9796, -50.2511, -12.9267, 0.22 ) }
    dend_19 { pt3dadd( -13.1478, -50.3905, -12.9685, 0.52 ) }
    dend_19 { pt3dadd( -13.9615, -51.1771, -13.1655, 0.22 ) }
    dend_19 { pt3dadd( -14.698, -51.9893, -13.3439, 1.25 ) }
    dend_19 { pt3dadd( -15.1703, -52.5514, -13.4596, 1.62 ) }
    dend_19 { pt3dadd( -15.3868, -52.8417, -13.5128, 1.4 ) }
    dend_19 { pt3dadd( -16.0944, -53.8952, -13.7242, 0.29 ) }
    dend_19 { pt3dadd( -16.4418, -54.4525, -13.8666, 0.29 ) }
    dend_19 { pt3dadd( -16.7594, -55.0061, -14.0359, 1.25 ) }
    dend_19 { pt3dadd( -16.9342, -55.3254, -14.1602, 1.55 ) }
    dend_19 { pt3dadd( -17.2521, -55.9031, -14.4169, 1.18 ) }
    dend_19 { pt3dadd( -17.963, -57.1552, -15.0415, 0.22 ) }
    dend_19 { pt3dadd( -18.2897, -57.7365, -15.3667, 0.88 ) }
    dend_19 { pt3dadd( -18.5749, -58.2914, -15.7052, 1.18 ) }
    dend_19 { pt3dadd( -18.9506, -59.1236, -16.2186, 0.29 ) }
    dend_19 { pt3dadd( -19.218, -59.8014, -16.6159, 0.22 ) }
    dend_19 { pt3dadd( -19.5212, -60.6754, -17.0936, 1.33 ) }
    dend_19 { pt3dadd( -19.7055, -61.2588, -17.3852, 1.69 ) }
    dend_19 { pt3dadd( -19.9123, -61.868, -17.6677, 1.47 ) }
    dend_19 { pt3dadd( -20.181, -62.5849, -17.9852, 0.66 ) }
    dend_19 { pt3dadd( -20.5489, -63.5117, -18.3803, 0.22 ) }
    dend_19 { pt3dadd( -20.8049, -64.1287, -18.6247, 1.11 ) }
    dend_19 { pt3dadd( -21.0864, -64.7413, -18.8598, 1.69 ) }
    dend_19 { pt3dadd( -21.3412, -65.2294, -19.0578, 1.84 ) }
    dend_19 { pt3dadd( -21.6264, -65.7511, -19.2966, 1.47 ) }
    dend_19 { pt3dadd( -22.2061, -66.8538, -19.8702, 0.22 ) }
    dend_19 { pt3dadd( -22.3937, -67.215, -20.0721, 0.66 ) }
    dend_19 { pt3dadd( -22.61, -67.6169, -20.3291, 0.66 ) }
    dend_19 { pt3dadd( -23.183, -68.6429, -21.0563, 0.29 ) }
    dend_19 { pt3dadd( -23.7412, -69.5323, -21.766, 0.29 ) }
    dend_19 { pt3dadd( -24.2919, -70.3541, -22.5728, 1.33 ) }
    dend_19 { pt3dadd( -24.5564, -70.7362, -22.9992, 1.69 ) }
    dend_19 { pt3dadd( -25.2692, -71.8479, -24.3898, 0.22 ) }
    dend_19 { pt3dadd( -25.4968, -72.2436, -24.9241, 0.88 ) }
    dend_19 { pt3dadd( -25.7427, -72.7293, -25.6601, 1.18 ) }
    dend_19 { pt3dadd( -26.1348, -73.9848, -27.6243, 0.29 ) }
    dend_19 { pt3dadd( -26.1665, -74.3256, -28.1322, 0.29 ) }
    dend_19 { pt3dadd( -26.148, -74.8849, -28.9267, 0.29 ) }
    dend_19 { pt3dadd( -26.0847, -75.4406, -29.648, 1.99 ) }
    dend_19 { pt3dadd( -26.0182, -76.0405, -30.3719, 2.28 ) }
    dend_19 { pt3dadd( -25.884, -77.6814, -32.2138, 0.29 ) }
    dend_19 { pt3dadd( -25.9103, -78.5491, -33.0964, 0.22 ) }
    dend_19 { pt3dadd( -25.9953, -79.0569, -33.5767, 0.22 ) }
    dend_19 { pt3dadd( -26.2124, -79.8209, -34.2386, 1.33 ) }
    dend_19 { pt3dadd( -26.3913, -80.2921, -34.6174, 1.62 ) }
    dend_19 { pt3dadd( -26.5798, -80.6651, -34.8895, 1.25 ) }
    dend_19 { pt3dadd( -26.9851, -81.3001, -35.3292, 0.66 ) }
    dend_19 { pt3dadd( -27.7451, -82.5306, -36.1267, 0.22 ) }
    dend_19 { pt3dadd( -28.0109, -83.008, -36.417, 1.03 ) }
    dend_19 { pt3dadd( -28.2338, -83.4236, -36.6617, 1.11 ) }
    dend_19 { pt3dadd( -28.873, -84.7015, -37.3772, 0.22 ) }
    dend_19 { pt3dadd( -29.0747, -85.1127, -37.6025, 0.22 ) }
    dend_19 { pt3dadd( -29.3771, -85.7181, -37.9231, 1.25 ) }
    dend_19 { pt3dadd( -29.5766, -86.1088, -38.1131, 1.69 ) }
    dend_19 { pt3dadd( -29.8477, -86.6424, -38.3428, 1.84 ) }
    dend_19 { pt3dadd( -30.179, -87.351, -38.653, 1.47 ) }
    dend_19 { pt3dadd( -30.7552, -88.6387, -39.2179, 0.22 ) }
    dend_19 { pt3dadd( -30.9239, -89.0365, -39.4026, 0.66 ) }
    dend_19 { pt3dadd( -31.0935, -89.4755, -39.621, 0.66 ) }
    dend_19 { pt3dadd( -31.2142, -89.9507, -39.8718, 0.29 ) }
    dend_19 { pt3dadd( -31.3904, -91.1274, -40.5285, 0.22 ) }
    dend_19 { pt3dadd( -31.4485, -91.8491, -40.9498, 0.22 ) }
    dend_19 { pt3dadd( -31.4653, -92.5254, -41.3494, 1.77 ) }
    dend_19 { pt3dadd( -31.4671, -92.9495, -41.6053, 2.14 ) }
    dend_19 { pt3dadd( -31.4638, -95.2792, -43.0367, 0.22 ) }
    dend_19 { pt3dadd( -31.4838, -96.1357, -43.5327, 0.22 ) }
    dend_19 { pt3dadd( -31.5545, -97.3063, -44.1789, 1.62 ) }
    dend_19 { pt3dadd( -31.6141, -98.0103, -44.5567, 2.06 ) }
    dend_19 { pt3dadd( -31.7131, -98.8882, -45.0133, 1.84 ) }
    dend_19 { pt3dadd( -31.9222, -100.25, -45.6974, 0.37 ) }
    dend_19 { pt3dadd( -32.3162, -102.112, -46.5862, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( -32.567, -103.171, -47.0617, 1.77 ) }
    dend_19 { pt3dadd( -32.701, -103.71, -47.2903, 1.99 ) }
    dend_19 { pt3dadd( -32.8508, -104.292, -47.5221, 1.69 ) }
    dend_19 { pt3dadd( -33.3227, -106.07, -48.1833, 0.22 ) }
    dend_19 { pt3dadd( -33.5217, -106.776, -48.4331, 0.22 ) }
    dend_19 { pt3dadd( -33.7596, -107.583, -48.7152, 1.33 ) }
    dend_19 { pt3dadd( -33.873, -107.932, -48.828, 1.33 ) }
    dend_19 { pt3dadd( -34.3065, -109.111, -49.1976, 0.22 ) }
    dend_19 { pt3dadd( -34.5446, -109.68, -49.3772, 0.88 ) }
    dend_19 { pt3dadd( -35.0878, -110.805, -49.7349, 0.22 ) }
    dend_19 { pt3dadd( -35.4773, -111.521, -49.9904, 1.33 ) }
    dend_19 { pt3dadd( -35.742, -111.942, -50.1666, 1.33 ) }
    dend_19 { pt3dadd( -36.0958, -112.421, -50.3977, 1.18 ) }
    dend_19 { pt3dadd( -36.9081, -113.371, -50.918, 0.15 ) }
    dend_19 { pt3dadd( -37.1782, -113.668, -51.0884, 1.4 ) }
    dend_19 { pt3dadd( -37.8152, -114.335, -51.4841, 1.69 ) }
    dend_19 { pt3dadd( -38.2838, -114.798, -51.7362, 1.47 ) }
    dend_19 { pt3dadd( -39.4763, -115.96, -52.3013, 0.15 ) }
    dend_19 { pt3dadd( -40.5405, -117.0, -52.7465, 0.15 ) }
    dend_19 { pt3dadd( -40.9899, -117.452, -52.9055, 1.47 ) }
    dend_19 { pt3dadd( -41.5157, -117.998, -53.0765, 1.69 ) }
    dend_19 { pt3dadd( -42.9154, -119.47, -53.4841, 0.22 ) }
    dend_19 { pt3dadd( -43.419, -119.99, -53.6125, 1.33 ) }
    dend_19 { pt3dadd( -43.9801, -120.544, -53.7413, 1.33 ) }
    dend_19 { pt3dadd( -45.0741, -121.576, -53.9918, 0.22 ) }
    dend_19 { pt3dadd( -45.2951, -121.778, -54.0415, 0.44 ) }
    dend_19 { pt3dadd( -45.5845, -122.041, -54.0955, 0.44 ) }
    dend_19 { pt3dadd( -46.4741, -122.866, -54.2558, 0.15 ) }
    dend_19 { pt3dadd( -46.8902, -123.255, -54.3087, 0.44 ) }
    dend_19 { pt3dadd( -47.2569, -123.596, -54.3421, 0.44 ) }
    dend_19 { pt3dadd( -48.14, -124.421, -54.4164, 0.15 ) }
    dend_19 { pt3dadd( -48.9124, -125.166, -54.4827, 1.55 ) }
    dend_19 { pt3dadd( -49.4319, -125.669, -54.5387, 1.77 ) }
    dend_19 { pt3dadd( -49.9904, -126.18, -54.6207, 0.96 ) }
    dend_19 { pt3dadd( -51.0292, -127.067, -54.8202, 0.15 ) }
    dend_19 { pt3dadd( -51.8507, -127.704, -55.0204, 0.22 ) }
    dend_19 { pt3dadd( -52.2439, -127.978, -55.1435, 0.52 ) }
    dend_19 { pt3dadd( -53.2875, -128.661, -55.5365, 0.22 ) }
    dend_19 { pt3dadd( -54.4054, -129.379, -55.9834, 0.22 ) }
    dend_19 { pt3dadd( -54.7409, -129.6, -56.1244, 1.18 ) }
    dend_19 { pt3dadd( -55.3135, -129.982, -56.3836, 1.62 ) }
    dend_19 { pt3dadd( -55.9454, -130.402, -56.6858, 1.33 ) }
    dend_19 { pt3dadd( -56.8021, -130.956, -57.1182, 0.22 ) }
    dend_19 { pt3dadd( -57.3389, -131.3, -57.409, 0.44 ) }
    dend_19 { pt3dadd( -57.6972, -131.52, -57.6142, 0.44 ) }
    dend_19 { pt3dadd( -58.3414, -131.834, -57.9216, 0.22 ) }
    dend_19 { pt3dadd( -58.7416, -131.977, -58.0773, 0.88 ) }
    dend_19 { pt3dadd( -59.0868, -132.066, -58.1781, 1.25 ) }
    dend_19 { pt3dadd( -59.5052, -132.17, -58.2586, 1.18 ) }
    dend_19 { pt3dadd( -60.1359, -132.358, -58.3268, 0.81 ) }
    dend_19 { pt3dadd( -61.5354, -132.892, -58.3659, 0.22 ) }
    dend_19 { pt3dadd( -61.9367, -133.091, -58.3526, 0.52 ) }
    dend_19 { pt3dadd( -62.4079, -133.368, -58.3292, 0.52 ) }
    dend_19 { pt3dadd( -63.2792, -133.989, -58.2912, 0.22 ) }
    dend_19 { pt3dadd( -63.9459, -134.561, -58.2733, 1.33 ) }
    dend_19 { pt3dadd( -64.3452, -134.955, -58.2795, 1.33 ) }
    dend_19 { pt3dadd( -64.9612, -135.599, -58.3152, 0.66 ) }
    dend_19 { pt3dadd( -65.4368, -136.1, -58.3404, 0.37 ) }
    dend_19 { pt3dadd( -66.4355, -137.136, -58.3902, 0.22 ) }
    dend_19 { pt3dadd( -67.1422, -137.858, -58.4126, 0.88 ) }
    dend_19 { pt3dadd( -67.5281, -138.288, -58.4081, 0.88 ) }
    dend_19 { pt3dadd( -68.108, -139.002, -58.3577, 0.22 ) }
    dend_19 { pt3dadd( -68.5106, -139.568, -58.2747, 0.59 ) }
    dend_19 { pt3dadd( -68.7097, -139.898, -58.2149, 0.59 ) }
    dend_19 { pt3dadd( -69.2169, -140.813, -58.0559, 0.22 ) }
    dend_19 { pt3dadd( -69.5461, -141.449, -57.9667, 1.03 ) }
    dend_19 { pt3dadd( -69.7427, -141.855, -57.9196, 1.03 ) }
    dend_19 { pt3dadd( -70.0389, -142.488, -57.859, 0.81 ) }
    dend_19 { pt3dadd( -70.5962, -143.571, -57.7672, 0.22 ) }
    dend_19 { pt3dadd( -71.1671, -144.579, -57.6968, 0.22 ) }
    dend_19 { pt3dadd( -71.4974, -145.104, -57.6691, 0.66 ) }
    dend_19 { pt3dadd( -71.7604, -145.462, -57.651, 0.66 ) }
    dend_19 { pt3dadd( -72.5976, -146.471, -57.5957, 0.22 ) }
    dend_19 { pt3dadd( -73.0276, -146.94, -57.5687, 1.11 ) }
    dend_19 { pt3dadd( -73.518, -147.44, -57.5632, 1.25 ) }
    dend_19 { pt3dadd( -73.8868, -147.8, -57.5893, 0.88 ) }
    dend_19 { pt3dadd( -74.6303, -148.459, -57.7138, 0.15 ) }
    dend_19 { pt3dadd( -75.075, -148.834, -57.8741, 0.81 ) }
    dend_19 { pt3dadd( -75.4892, -149.136, -58.1002, 1.03 ) }
    dend_19 { pt3dadd( -76.415, -149.767, -58.7115, 0.15 ) }
    dend_19 { pt3dadd( -77.0121, -150.133, -59.1515, 0.15 ) }
    dend_19 { pt3dadd( -77.3697, -150.365, -59.4374, 0.15 ) }
    dend_19 { pt3dadd( -78.2877, -151.015, -60.2137, 0.88 ) }
    dend_19 { pt3dadd( -79.1428, -151.691, -60.927, 0.22 ) }
    dend_19 { pt3dadd( -79.4787, -151.981, -61.1919, 1.03 ) }
    dend_19 { pt3dadd( -79.7661, -152.269, -61.4108, 1.25 ) }
    dend_19 { pt3dadd( -80.7118, -153.385, -62.1177, 0.22 ) }
    dend_19 { pt3dadd( -81.2031, -154.022, -62.4557, 1.33 ) }
    dend_19 { pt3dadd( -81.5573, -154.494, -62.6741, 1.11 ) }
    dend_19 { pt3dadd( -81.7774, -154.79, -62.841, 0.44 ) }
    dend_19 { pt3dadd( -82.4805, -155.657, -63.4288, 0.15 ) }
    dend_19 { pt3dadd( -82.8383, -156.037, -63.7421, 0.74 ) }
    dend_19 { pt3dadd( -83.1861, -156.338, -64.1061, 1.18 ) }
    dend_19 { pt3dadd( -83.7281, -156.752, -64.7371, 1.18 ) }
    dend_19 { pt3dadd( -84.734, -157.435, -66.0029, 0.22 ) }
    dend_19 { pt3dadd( -84.8155, -157.486, -66.1049, 0.66 ) }
    dend_19 { pt3dadd( -85.2356, -157.73, -66.6186, 0.66 ) }
    dend_19 { pt3dadd( -86.2104, -158.252, -67.8136, 0.15 ) }
    dend_19 { pt3dadd( -86.4695, -158.382, -68.1328, 0.88 ) }
    dend_19 { pt3dadd( -86.8647, -158.574, -68.6284, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_19 { pt3dadd( -87.7149, -158.953, -69.6698, 0.15 ) }
    dend_19 { pt3dadd( -87.9482, -159.042, -69.9547, 0.37 ) }
    dend_19 { pt3dadd( -88.1939, -159.105, -70.2332, 0.37 ) }
    dend_19 { pt3dadd( -88.8705, -159.206, -70.8518, 0.15 ) }
    dend_19 { pt3dadd( -89.4502, -159.254, -71.3446, 1.03 ) }
    dend_19 { pt3dadd( -89.882, -159.285, -71.6554, 1.25 ) }
    dend_19 { pt3dadd( -90.5642, -159.321, -72.0742, 1.25 ) }
    dend_19 { pt3dadd( -92.0335, -159.426, -72.9049, 0.22 ) }
    dend_19 { pt3dadd( -92.8197, -159.485, -73.3224, 0.81 ) }
    dend_19 { pt3dadd( -93.3139, -159.505, -73.6425, 0.96 ) }
    dend_19 { pt3dadd( -94.4648, -159.578, -74.6648, 0.22 ) }
    dend_19 { pt3dadd( -94.8534, -159.619, -75.133, 0.22 ) }
    dend_19 { pt3dadd( -95.3454, -159.728, -75.9941, 1.25 ) }
    dend_19 { pt3dadd( -95.63, -159.819, -76.6398, 1.92 ) }
    dend_19 { pt3dadd( -96.654, -160.216, -79.2709, 0.37 ) }
    dend_19 { pt3dadd( -97.2528, -160.523, -81.0004, 1.25 ) }
    dend_19 { pt3dadd( -97.4471, -160.645, -81.5974, 1.33 ) }
    dend_19 { pt3dadd( -98.2332, -161.216, -83.9012, 0.15 ) }
    dend_19 { pt3dadd( -98.4621, -161.403, -84.5253, 1.18 ) }
    dend_19 { pt3dadd( -98.6852, -161.594, -85.0496, 1.69 ) }
    dend_19 { pt3dadd( -99.9549, -162.697, -87.4199, 0.22 ) }
    dend_19 { pt3dadd( -100.397, -163.053, -88.1197, 0.22 ) }
    dend_19 { pt3dadd( -100.677, -163.292, -88.5124, 0.88 ) }
    dend_19 { pt3dadd( -101.049, -163.631, -88.9681, 0.88 ) }
    dend_19 { pt3dadd( -101.754, -164.355, -89.7893, 0.22 ) }
    dend_19 { pt3dadd( -102.179, -164.852, -90.27, 1.11 ) }
    dend_19 { pt3dadd( -102.486, -165.254, -90.5726, 1.33 ) }
    dend_19 { pt3dadd( -103.252, -166.354, -91.3368, 0.22 ) }
    dend_19 { pt3dadd( -103.526, -166.775, -91.5999, 1.03 ) }
    dend_19 { pt3dadd( -103.82, -167.24, -91.8596, 1.18 ) }
    dend_19 { pt3dadd( -104.683, -168.616, -92.5779, 0.22 ) }
    dend_19 { pt3dadd( -105.004, -169.09, -92.8174, 0.66 ) }
    dend_19 { pt3dadd( -105.554, -169.805, -93.1555, 0.22 ) }
    dend_19 { pt3dadd( -105.994, -170.284, -93.3591, 1.33 ) }
    dend_19 { pt3dadd( -106.474, -170.732, -93.5438, 1.55 ) }
    dend_19 { pt3dadd( -107.34, -171.434, -93.9193, 0.15 ) }
    dend_19 { pt3dadd( -107.857, -171.799, -94.1478, 0.74 ) }
    dend_19 { pt3dadd( -108.652, -172.322, -94.5689, 0.22 ) }
    dend_19 { pt3dadd( -109.101, -172.606, -94.8363, 0.96 ) }
    dend_19 { pt3dadd( -109.484, -172.846, -95.0807, 0.96 ) }
    dend_19 { pt3dadd( -111.346, -174.046, -96.3277, 0.22 ) }
    dend_19 { pt3dadd( -111.984, -174.48, -96.7874, 0.59 ) }
    dend_19 { pt3dadd( -113.135, -175.319, -97.652, 0.22 ) }
    dend_19 { pt3dadd( -113.465, -175.568, -97.912, 0.52 ) }
    dend_19 { pt3dadd( -114.096, -176.056, -98.4109, 0.22 ) }
    dend_19 { pt3dadd( -114.39, -176.288, -98.629, 0.81 ) }
    dend_19 { pt3dadd( -115.851, -177.44, -99.5633, 0.22 ) }
    dend_19 { pt3dadd( -116.331, -177.847, -99.8899, 0.88 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 74.4151, -92.4001, -27.3668, 0.22 ) }
    dend_17 { pt3dadd( 75.5852, -93.0603, -28.2248, 0.22 ) }
    dend_17 { pt3dadd( 76.7253, -93.6735, -29.1639, 0.96 ) }
    dend_17 { pt3dadd( 77.3128, -93.9911, -29.6676, 1.25 ) }
    dend_17 { pt3dadd( 78.7429, -94.7874, -30.9135, 0.22 ) }
    dend_17 { pt3dadd( 79.6066, -95.3088, -31.6795, 1.03 ) }
    dend_17 { pt3dadd( 79.9943, -95.5614, -32.0289, 1.03 ) }
    dend_17 { pt3dadd( 81.9601, -96.9342, -33.8863, 0.22 ) }
    dend_17 { pt3dadd( 82.4706, -97.3627, -34.4089, 1.03 ) }
    dend_17 { pt3dadd( 82.8969, -97.8121, -34.8795, 1.03 ) }
    dend_17 { pt3dadd( 83.7126, -98.8816, -35.8731, 0.22 ) }
    dend_17 { pt3dadd( 84.0432, -99.4392, -36.3477, 0.96 ) }
    dend_17 { pt3dadd( 84.3199, -99.993, -36.8052, 1.18 ) }
    dend_17 { pt3dadd( 85.235, -102.242, -38.5346, 0.22 ) }
    dend_17 { pt3dadd( 85.6802, -103.448, -39.4533, 1.84 ) }
    dend_17 { pt3dadd( 85.8846, -104.016, -39.8975, 1.84 ) }
    dend_17 { pt3dadd( 86.9449, -106.944, -42.2138, 0.15 ) }
    dend_17 { pt3dadd( 87.262, -107.789, -42.887, 0.15 ) }
    dend_17 { pt3dadd( 87.6111, -108.631, -43.5607, 1.03 ) }
    dend_17 { pt3dadd( 87.8683, -109.192, -43.9916, 1.03 ) }
    dend_17 { pt3dadd( 88.8619, -111.099, -45.4171, 0.15 ) }
    dend_17 { pt3dadd( 89.3101, -111.887, -45.9677, 1.03 ) }
    dend_17 { pt3dadd( 89.527, -112.222, -46.1878, 1.03 ) }
    dend_17 { pt3dadd( 90.6444, -113.82, -47.226, 0.22 ) }
    dend_17 { pt3dadd( 91.1733, -114.504, -47.6985, 0.88 ) }
    dend_17 { pt3dadd( 92.1557, -115.681, -48.5515, 0.22 ) }
    dend_17 { pt3dadd( 92.7559, -116.358, -49.0493, 1.25 ) }
    dend_17 { pt3dadd( 93.4029, -117.039, -49.5759, 0.81 ) }
    dend_17 { pt3dadd( 94.7008, -118.38, -50.6358, 0.22 ) }
    dend_17 { pt3dadd( 95.4959, -119.197, -51.3231, 0.74 ) }
    dend_17 { pt3dadd( 96.0112, -119.734, -51.7814, 0.74 ) }
    dend_17 { pt3dadd( 96.7984, -120.599, -52.4872, 0.15 ) }
    dend_17 { pt3dadd( 97.5123, -121.535, -53.1096, 0.81 ) }
    dend_17 { pt3dadd( 97.9107, -122.143, -53.4653, 0.81 ) }
    dend_17 { pt3dadd( 99.1887, -124.356, -54.6276, 0.15 ) }
    dend_17 { pt3dadd( 99.7904, -125.483, -55.1005, 0.74 ) }
    dend_17 { pt3dadd( 100.12, -126.122, -55.323, 0.74 ) }
    dend_17 { pt3dadd( 101.467, -128.788, -56.1098, 0.15 ) }
    dend_17 { pt3dadd( 102.076, -129.924, -56.3597, 1.25 ) }
    dend_17 { pt3dadd( 102.431, -130.538, -56.4541, 1.62 ) }
    dend_17 { pt3dadd( 104.134, -133.218, -56.6569, 0.15 ) }
    dend_17 { pt3dadd( 104.734, -134.055, -56.7026, 0.81 ) }
    dend_17 { pt3dadd( 105.159, -134.603, -56.7236, 0.81 ) }
    dend_17 { pt3dadd( 107.528, -137.571, -56.7113, 0.22 ) }
    dend_17 { pt3dadd( 107.854, -138.004, -56.6835, 0.81 ) }
    dend_17 { pt3dadd( 108.863, -139.447, -56.5358, 1.03 ) }
    dend_17 { pt3dadd( 111.14, -142.957, -56.1001, 0.15 ) }
    dend_17 { pt3dadd( 111.799, -144.078, -55.9326, 0.81 ) }
    dend_17 { pt3dadd( 112.405, -145.193, -55.7556, 0.66 ) }
    dend_17 { pt3dadd( 113.681, -147.756, -55.3122, 0.15 ) }
    dend_17 { pt3dadd( 114.244, -148.937, -55.1031, 0.81 ) }
    dend_17 { pt3dadd( 114.492, -149.459, -55.0001, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( 115.882, -152.183, -54.4074, 0.15 ) }
    dend_17 { pt3dadd( 117.137, -154.305, -53.9597, 0.15 ) }
    dend_17 { pt3dadd( 117.599, -154.962, -53.8091, 0.96 ) }
    dend_17 { pt3dadd( 118.027, -155.493, -53.6618, 0.96 ) }
    dend_17 { pt3dadd( 120.495, -158.268, -52.6916, 0.15 ) }
    dend_17 { pt3dadd( 121.139, -158.915, -52.3936, 0.74 ) }
    dend_17 { pt3dadd( 121.881, -159.567, -52.0024, 0.74 ) }
    dend_17 { pt3dadd( 123.701, -161.001, -50.9804, 0.22 ) }
    dend_17 { pt3dadd( 124.475, -161.56, -50.5529, 0.88 ) }
    dend_17 { pt3dadd( 124.986, -161.906, -50.2699, 1.11 ) }
    dend_17 { pt3dadd( 126.773, -163.05, -49.2595, 0.15 ) }
    dend_17 { pt3dadd( 127.577, -163.636, -48.7284, 0.74 ) }
    dend_17 { pt3dadd( 128.893, -164.718, -47.6935, 0.15 ) }
    dend_17 { pt3dadd( 129.411, -165.201, -47.2369, 0.66 ) }
    dend_17 { pt3dadd( 130.32, -166.235, -46.2446, 0.22 ) }
    dend_17 { pt3dadd( 130.754, -166.918, -45.5863, 0.74 ) }
    dend_17 { pt3dadd( 131.648, -169.323, -43.1748, 0.22 ) }
    dend_17 { pt3dadd( 131.896, -170.583, -41.8591, 0.37 ) }
    dend_17 { pt3dadd( 131.927, -171.409, -40.9576, 0.15 ) }
    dend_17 { pt3dadd( 131.834, -172.85, -39.3754, 0.74 ) }
    dend_17 { pt3dadd( 131.621, -174.201, -37.9192, 1.25 ) }
    dend_17 { pt3dadd( 131.182, -176.329, -35.6729, 0.22 ) }
    dend_17 { pt3dadd( 130.857, -177.678, -34.295, 0.59 ) }
    dend_17 { pt3dadd( 130.411, -179.574, -32.3289, 0.22 ) }
    dend_17 { pt3dadd( 130.002, -181.225, -30.5646, 0.74 ) }
    dend_17 { pt3dadd( 129.763, -182.308, -29.3967, 0.22 ) }
    dend_17 { pt3dadd( 129.688, -182.69, -28.9751, 0.22 ) }
    dend_17 { pt3dadd( 129.607, -183.187, -28.4578, 0.59 ) }
    dend_17 { pt3dadd( 129.456, -184.547, -27.1124, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 74.4151, -92.4001, -27.3668, 0.74 ) }
    dend_16 { pt3dadd( 74.0431, -93.2872, -27.1867, 0.74 ) }
    dend_16 { pt3dadd( 73.7929, -93.8839, -27.0655, 0.66 ) }
    dend_16 { pt3dadd( 73.5338, -94.5019, -26.94, 0.81 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 34.5867, 64.0481, 3.55266, 0.59 ) }
    dend_11 { pt3dadd( 36.3977, 64.4767, 4.30472, 0.59 ) }
    dend_11 { pt3dadd( 36.9533, 64.6318, 4.52303, 0.81 ) }
    dend_11 { pt3dadd( 37.3464, 64.7565, 4.67445, 0.81 ) }
    dend_11 { pt3dadd( 38.3409, 65.1279, 5.06556, 0.66 ) }
    dend_11 { pt3dadd( 39.6705, 65.7011, 5.65792, 0.66 ) }
    dend_11 { pt3dadd( 40.3704, 66.0225, 6.01929, 0.22 ) }
    dend_11 { pt3dadd( 40.7883, 66.2358, 6.26531, 0.81 ) }
    dend_11 { pt3dadd( 41.0925, 66.3785, 6.47006, 0.81 ) }
    dend_11 { pt3dadd( 41.8899, 66.7525, 7.04138, 0.29 ) }
    dend_11 { pt3dadd( 42.778, 67.1864, 7.66152, 1.11 ) }
    dend_11 { pt3dadd( 43.5036, 67.5156, 8.14013, 1.4 ) }
    dend_11 { pt3dadd( 44.1244, 67.7163, 8.59699, 1.25 ) }
    dend_11 { pt3dadd( 45.1397, 67.9118, 9.36125, 0.29 ) }
    dend_11 { pt3dadd( 45.8455, 67.9796, 9.86689, 0.29 ) }
    dend_11 { pt3dadd( 46.5805, 67.9675, 10.3655, 0.29 ) }
    dend_11 { pt3dadd( 47.0984, 67.9116, 10.7185, 0.66 ) }
    dend_11 { pt3dadd( 48.9725, 67.5823, 12.037, 1.25 ) }
    dend_11 { pt3dadd( 49.8365, 67.3827, 12.6706, 0.29 ) }
    dend_11 { pt3dadd( 50.3729, 67.2282, 13.0655, 0.37 ) }
    dend_11 { pt3dadd( 51.1363, 66.9704, 13.6333, 0.37 ) }
    dend_11 { pt3dadd( 51.9613, 66.6828, 14.2629, 0.88 ) }
    dend_11 { pt3dadd( 52.285, 66.5815, 14.5005, 0.74 ) }
    dend_11 { pt3dadd( 52.794, 66.4542, 14.8567, 0.52 ) }
    dend_11 { pt3dadd( 53.4627, 66.2976, 15.4094, 1.25 ) }
    dend_11 { pt3dadd( 53.8684, 66.2096, 15.7761, 1.33 ) }
    dend_11 { pt3dadd( 54.9934, 66.0009, 16.7184, 0.29 ) }
    dend_11 { pt3dadd( 55.5248, 65.8804, 17.136, 0.29 ) }
    dend_11 { pt3dadd( 56.5319, 65.5908, 17.9464, 1.47 ) }
    dend_11 { pt3dadd( 57.8294, 65.1484, 19.0128, 1.25 ) }
    dend_11 { pt3dadd( 59.3186, 64.5368, 20.1072, 1.4 ) }
    dend_11 { pt3dadd( 60.3013, 64.0633, 20.7432, 0.37 ) }
    dend_11 { pt3dadd( 61.2648, 63.5392, 21.2653, 0.22 ) }
    dend_11 { pt3dadd( 62.4082, 62.8364, 21.7655, 1.18 ) }
    dend_11 { pt3dadd( 62.7335, 62.6099, 21.8655, 1.33 ) }
    dend_11 { pt3dadd( 64.519, 61.2276, 22.2383, 0.22 ) }
    dend_11 { pt3dadd( 65.1755, 60.669, 22.3429, 0.52 ) }
    dend_11 { pt3dadd( 65.7038, 60.2105, 22.4309, 0.22 ) }
    dend_11 { pt3dadd( 66.3319, 59.678, 22.5029, 1.11 ) }
    dend_11 { pt3dadd( 66.9359, 59.1451, 22.5472, 0.22 ) }
    dend_11 { pt3dadd( 67.4674, 58.6511, 22.6022, 1.11 ) }
    dend_11 { pt3dadd( 67.7144, 58.3678, 22.6423, 0.44 ) }
    dend_11 { pt3dadd( 68.4271, 57.4432, 22.7594, 0.15 ) }
    dend_11 { pt3dadd( 68.8415, 56.8516, 22.8635, 0.15 ) }
    dend_11 { pt3dadd( 69.1425, 56.402, 22.9693, 0.81 ) }
    dend_11 { pt3dadd( 69.3329, 56.0995, 23.0485, 0.96 ) }
    dend_11 { pt3dadd( 70.8638, 53.6276, 23.6937, 0.22 ) }
    dend_11 { pt3dadd( 71.0616, 53.2993, 23.7765, 0.52 ) }
    dend_11 { pt3dadd( 71.9369, 51.8282, 24.1603, 0.22 ) }
    dend_11 { pt3dadd( 72.4136, 51.0615, 24.3735, 0.81 ) }
    dend_11 { pt3dadd( 72.6859, 50.658, 24.49, 0.44 ) }
    dend_11 { pt3dadd( 73.1494, 50.0685, 24.6861, 0.22 ) }
    dend_11 { pt3dadd( 73.7954, 49.4153, 24.9613, 0.22 ) }
    dend_11 { pt3dadd( 74.2115, 49.0352, 25.1108, 0.81 ) }
    dend_11 { pt3dadd( 74.5079, 48.7967, 25.1988, 0.74 ) }
    dend_11 { pt3dadd( 75.378, 48.0853, 25.5228, 0.22 ) }
    dend_11 { pt3dadd( 75.8078, 47.7236, 25.7368, 0.22 ) }
    dend_11 { pt3dadd( 76.1803, 47.3778, 25.9608, 0.74 ) }
    dend_11 { pt3dadd( 76.5792, 46.9724, 26.2605, 0.22 ) }
    dend_11 { pt3dadd( 77.1289, 46.3576, 26.6952, 1.18 ) }
    dend_11 { pt3dadd( 78.1284, 45.2473, 27.5838, 0.22 ) }
    dend_11 { pt3dadd( 78.5155, 44.8328, 27.9534, 0.29 ) }
    dend_11 { pt3dadd( 78.9166, 44.4441, 28.3488, 0.15 ) }
    dend_11 { pt3dadd( 79.8084, 43.7011, 29.228, 0.15 ) }
    dend_11 { pt3dadd( 80.3178, 43.3242, 29.7353, 1.77 ) }
    dend_11 { pt3dadd( 81.5719, 42.4868, 30.9513, 0.66 ) }
    dend_11 { pt3dadd( 81.9306, 42.2791, 31.2899, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_11 { pt3dadd( 82.6347, 41.8978, 31.9605, 0.44 ) }
    dend_11 { pt3dadd( 83.3808, 41.4921, 32.6836, 0.44 ) }
    dend_11 { pt3dadd( 83.5826, 41.3671, 32.8875, 0.66 ) }
    dend_11 { pt3dadd( 84.0531, 40.9898, 33.4562, 0.29 ) }
    dend_11 { pt3dadd( 84.4216, 40.5539, 33.9718, 1.11 ) }
    dend_11 { pt3dadd( 84.8728, 39.8897, 34.6904, 0.81 ) }
    dend_11 { pt3dadd( 85.1376, 39.4815, 35.1361, 0.22 ) }
    dend_11 { pt3dadd( 85.7694, 38.4375, 36.267, 0.22 ) }
    dend_11 { pt3dadd( 86.1432, 37.8064, 36.9566, 0.22 ) }
    dend_11 { pt3dadd( 86.5168, 37.1573, 37.6822, 0.66 ) }
    dend_11 { pt3dadd( 86.8741, 36.4809, 38.4267, 0.37 ) }
    dend_11 { pt3dadd( 87.2555, 35.634, 39.3427, 1.4 ) }
    dend_11 { pt3dadd( 93.0534, 33.7386, 44.9992, 1.4 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 13/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 34.5867, 64.0481, 3.55266, 0.22 ) }
    dend_10 { pt3dadd( 34.8052, 66.0159, 4.77685, 0.22 ) }
    dend_10 { pt3dadd( 34.9326, 66.8196, 5.30281, 0.96 ) }
    dend_10 { pt3dadd( 35.0472, 67.4439, 5.72658, 1.18 ) }
    dend_10 { pt3dadd( 35.1799, 68.1289, 6.21304, 0.74 ) }
    dend_10 { pt3dadd( 35.3141, 68.9035, 6.75511, 0.29 ) }
    dend_10 { pt3dadd( 35.5037, 70.0066, 7.51574, 0.22 ) }
    dend_10 { pt3dadd( 35.6511, 70.8626, 8.10378, 0.96 ) }
    dend_10 { pt3dadd( 35.7677, 71.4911, 8.52892, 1.4 ) }
    dend_10 { pt3dadd( 35.8492, 71.937, 8.82998, 1.4 ) }
    dend_10 { pt3dadd( 36.111, 73.5808, 9.95589, 0.22 ) }
    dend_10 { pt3dadd( 36.2217, 74.4782, 10.5581, 1.11 ) }
    dend_10 { pt3dadd( 36.2583, 75.0547, 10.9312, 1.4 ) }
    dend_10 { pt3dadd( 36.2983, 76.2208, 11.6695, 0.22 ) }
    dend_10 { pt3dadd( 36.3247, 77.0631, 12.2009, 0.74 ) }
    dend_10 { pt3dadd( 36.3272, 77.5171, 12.4919, 0.96 ) }
    dend_10 { pt3dadd( 36.3038, 78.6911, 13.2601, 0.15 ) }
    dend_10 { pt3dadd( 36.3002, 79.5171, 13.7914, 0.15 ) }
    dend_10 { pt3dadd( 36.3401, 80.4481, 14.3673, 1.55 ) }
    dend_10 { pt3dadd( 36.398, 81.0111, 14.6969, 1.69 ) }
    dend_10 { pt3dadd( 36.6669, 82.4186, 15.4752, 0.22 ) }
    dend_10 { pt3dadd( 36.8719, 83.1274, 15.8701, 0.66 ) }
    dend_10 { pt3dadd( 37.356, 84.3913, 16.5571, 0.22 ) }
    dend_10 { pt3dadd( 37.7737, 85.2708, 17.0048, 0.88 ) }
    dend_10 { pt3dadd( 38.0257, 85.7246, 17.2197, 0.88 ) }
    dend_10 { pt3dadd( 38.6208, 86.6692, 17.6355, 0.22 ) }
    dend_10 { pt3dadd( 39.1697, 87.4254, 17.9569, 0.81 ) }
    dend_10 { pt3dadd( 39.5656, 87.9508, 18.1815, 1.11 ) }
    dend_10 { pt3dadd( 40.1025, 88.6678, 18.4667, 0.22 ) }
    dend_10 { pt3dadd( 40.9391, 89.7637, 18.8859, 1.62 ) }
    dend_10 { pt3dadd( 41.4506, 90.406, 19.1326, 2.14 ) }
    dend_10 { pt3dadd( 42.7887, 92.0429, 19.7431, 0.15 ) }
    dend_10 { pt3dadd( 42.8447, 92.1103, 19.7671, 0.29 ) }
    dend_10 { pt3dadd( 43.4956, 92.8836, 20.0384, 0.15 ) }
    dend_10 { pt3dadd( 43.7192, 93.1509, 20.128, 0.44 ) }
    dend_10 { pt3dadd( 44.6139, 94.2253, 20.4551, 0.15 ) }
    dend_10 { pt3dadd( 45.167, 94.9088, 20.6589, 1.03 ) }
    dend_10 { pt3dadd( 45.5314, 95.376, 20.7948, 1.55 ) }
    dend_10 { pt3dadd( 46.8576, 97.164, 21.3116, 0.22 ) }
    dend_10 { pt3dadd( 47.3891, 97.906, 21.5254, 1.11 ) }
    dend_10 { pt3dadd( 47.8805, 98.6194, 21.7185, 1.69 ) }
    dend_10 { pt3dadd( 49.0288, 100.38, 22.1309, 0.22 ) }
    dend_10 { pt3dadd( 49.4278, 101.014, 22.2595, 0.22 ) }
    dend_10 { pt3dadd( 49.9201, 101.825, 22.3752, 0.59 ) }
    dend_10 { pt3dadd( 50.1386, 102.206, 22.399, 0.59 ) }
    dend_10 { pt3dadd( 50.7467, 103.27, 22.3759, 0.22 ) }
    dend_10 { pt3dadd( 51.1863, 104.015, 22.2834, 0.96 ) }
    dend_10 { pt3dadd( 51.5706, 104.615, 22.1841, 0.96 ) }
    dend_10 { pt3dadd( 52.212, 105.533, 22.0617, 0.29 ) }
    dend_10 { pt3dadd( 53.1347, 106.754, 21.9598, 1.62 ) }
    dend_10 { pt3dadd( 53.6359, 107.4, 21.9448, 1.25 ) }
    dend_10 { pt3dadd( 54.772, 108.797, 22.0403, 0.22 ) }
    dend_10 { pt3dadd( 55.7911, 109.973, 22.253, 0.88 ) }
    dend_10 { pt3dadd( 56.3275, 110.576, 22.4166, 0.74 ) }
    dend_10 { pt3dadd( 57.3204, 111.744, 22.8193, 0.22 ) }
    dend_10 { pt3dadd( 57.9272, 112.521, 23.103, 0.22 ) }
    dend_10 { pt3dadd( 58.5685, 113.418, 23.424, 0.29 ) }
    dend_10 { pt3dadd( 59.3859, 114.63, 23.8215, 1.62 ) }
    dend_10 { pt3dadd( 59.5586, 114.902, 23.893, 1.77 ) }
    dend_10 { pt3dadd( 60.3205, 116.171, 24.1572, 0.29 ) }
    dend_10 { pt3dadd( 61.1545, 117.625, 24.3802, 0.22 ) }
    dend_10 { pt3dadd( 61.7441, 118.672, 24.49, 0.22 ) }
    dend_10 { pt3dadd( 62.2328, 119.562, 24.5417, 1.18 ) }
    dend_10 { pt3dadd( 62.5309, 120.113, 24.5573, 1.18 ) }
    dend_10 { pt3dadd( 63.6273, 122.097, 24.5871, 0.15 ) }
    dend_10 { pt3dadd( 64.4478, 123.518, 24.5671, 0.15 ) }
    dend_10 { pt3dadd( 64.8001, 124.134, 24.5487, 0.52 ) }
    dend_10 { pt3dadd( 65.2719, 124.982, 24.5169, 0.15 ) }
    dend_10 { pt3dadd( 65.8361, 126.005, 24.4654, 1.11 ) }
    dend_10 { pt3dadd( 66.0926, 126.462, 24.4296, 1.62 ) }
    dend_10 { pt3dadd( 66.9916, 127.999, 24.2544, 0.22 ) }
    dend_10 { pt3dadd( 67.3818, 128.656, 24.1666, 0.37 ) }
    dend_10 { pt3dadd( 71.2495, 138.903, 27.3762, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 86/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 13.7804, 3.4936, 18.1285, 0.44 ) }
    dend_4 { pt3dadd( 12.1606, 4.49983, 19.7544, 0.44 ) }
    dend_4 { pt3dadd( 11.3668, 4.82846, 20.3623, 0.44 ) }
    dend_4 { pt3dadd( 9.99045, 5.46098, 21.5084, 0.44 ) }
    dend_4 { pt3dadd( 9.10638, 5.92948, 22.3932, 0.74 ) }
    dend_4 { pt3dadd( 8.50905, 6.31404, 23.1463, 0.74 ) }
    dend_4 { pt3dadd( 7.29634, 7.3511, 25.0932, 0.81 ) }
    dend_4 { pt3dadd( 6.70909, 7.99655, 26.1947, 0.96 ) }
    dend_4 { pt3dadd( 5.91915, 8.97587, 27.9136, 0.59 ) }
    dend_4 { pt3dadd( 5.43677, 9.68198, 29.2373, 0.74 ) }
    dend_4 { pt3dadd( 5.01659, 10.5227, 30.7259, 1.25 ) }
    dend_4 { pt3dadd( 4.64077, 11.387, 32.116, 1.4 ) }
    dend_4 { pt3dadd( 4.29128, 12.1853, 33.2809, 0.74 ) }
    dend_4 { pt3dadd( 3.86078, 12.8512, 34.2149, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_4 { pt3dadd( 3.34825, 13.2685, 34.8101, 0.96 ) }
    dend_4 { pt3dadd( 2.46676, 13.7473, 35.4871, 1.18 ) }
    dend_4 { pt3dadd( 0.944787, 14.3719, 36.3531, 0.52 ) }
    dend_4 { pt3dadd( 0.00886417, 14.6934, 36.8054, 0.52 ) }
    dend_4 { pt3dadd( -1.19276, 15.1111, 37.3429, 0.52 ) }
    dend_4 { pt3dadd( -2.47133, 15.5859, 37.9151, 0.52 ) }
    dend_4 { pt3dadd( -2.97993, 15.8139, 38.1454, 0.52 ) }
    dend_4 { pt3dadd( -3.58781, 16.202, 38.4067, 1.11 ) }
    dend_4 { pt3dadd( -4.101, 16.7131, 38.6041, 1.4 ) }
    dend_4 { pt3dadd( -4.56927, 17.3177, 38.7286, 1.4 ) }
    dend_4 { pt3dadd( -4.80504, 17.6553, 38.7499, 1.33 ) }
    dend_4 { pt3dadd( -5.52834, 18.6271, 38.6859, 0.37 ) }
    dend_4 { pt3dadd( -6.4308, 19.6561, 38.5315, 0.37 ) }
    dend_4 { pt3dadd( -6.94448, 20.154, 38.4062, 0.37 ) }
    dend_4 { pt3dadd( -7.96967, 21.0527, 38.1049, 0.44 ) }
    dend_4 { pt3dadd( -8.63424, 21.612, 37.8756, 0.81 ) }
    dend_4 { pt3dadd( -9.18668, 22.083, 37.7157, 0.81 ) }
    dend_4 { pt3dadd( -9.61415, 22.4662, 37.5989, 0.44 ) }
    dend_4 { pt3dadd( -10.2023, 23.0586, 37.4516, 0.37 ) }
    dend_4 { pt3dadd( -10.7957, 23.7109, 37.3266, 0.37 ) }
    dend_4 { pt3dadd( -11.4198, 24.4205, 37.2101, 0.66 ) }
    dend_4 { pt3dadd( -12.5165, 25.6443, 37.1156, 0.96 ) }
    dend_4 { pt3dadd( -13.168, 26.3535, 37.1188, 0.81 ) }
    dend_4 { pt3dadd( -13.7589, 26.989, 37.1712, 0.81 ) }
    dend_4 { pt3dadd( -14.3458, 27.599, 37.2907, 0.44 ) }
    dend_4 { pt3dadd( -14.721, 27.9793, 37.3884, 0.37 ) }
    dend_4 { pt3dadd( -15.5365, 28.7996, 37.6085, 0.37 ) }
    dend_4 { pt3dadd( -16.2772, 29.5834, 37.7656, 0.66 ) }
    dend_4 { pt3dadd( -16.638, 30.0012, 37.8601, 0.66 ) }
    dend_4 { pt3dadd( -17.1395, 30.6723, 37.9701, 0.81 ) }
    dend_4 { pt3dadd( -17.5714, 31.3669, 38.023, 0.44 ) }
    dend_4 { pt3dadd( -17.9452, 31.9859, 38.0357, 0.81 ) }
    dend_4 { pt3dadd( -18.1971, 32.3664, 38.0166, 0.81 ) }
    dend_4 { pt3dadd( -18.6721, 32.9729, 37.9804, 0.52 ) }
    dend_4 { pt3dadd( -19.2835, 33.6083, 37.926, 0.37 ) }
    dend_4 { pt3dadd( -19.9979, 34.2016, 37.8649, 0.29 ) }
    dend_4 { pt3dadd( -20.9891, 34.824, 37.8181, 0.52 ) }
    dend_4 { pt3dadd( -21.6467, 35.1164, 37.8036, 0.74 ) }
    dend_4 { pt3dadd( -22.427, 35.3765, 37.7965, 0.37 ) }
    dend_4 { pt3dadd( -23.0231, 35.538, 37.7957, 0.66 ) }
    dend_4 { pt3dadd( -23.6274, 35.6916, 37.7929, 0.88 ) }
    dend_4 { pt3dadd( -24.2953, 35.8826, 37.7762, 0.44 ) }
    dend_4 { pt3dadd( -25.0891, 36.1854, 37.7137, 0.37 ) }
    dend_4 { pt3dadd( -25.4861, 36.377, 37.6751, 0.37 ) }
    dend_4 { pt3dadd( -26.0303, 36.678, 37.6127, 0.37 ) }
    dend_4 { pt3dadd( -26.7395, 37.0558, 37.5048, 0.37 ) }
    dend_4 { pt3dadd( -27.2874, 37.272, 37.3779, 0.37 ) }
    dend_4 { pt3dadd( -28.0305, 37.4488, 37.1752, 0.37 ) }
    dend_4 { pt3dadd( -28.6256, 37.5053, 37.0045, 0.88 ) }
    dend_4 { pt3dadd( -28.9234, 37.5069, 36.9109, 1.25 ) }
    dend_4 { pt3dadd( -29.8035, 37.4711, 36.6096, 1.25 ) }
    dend_4 { pt3dadd( -31.1082, 37.3849, 36.1151, 0.29 ) }
    dend_4 { pt3dadd( -31.6034, 37.3491, 35.9188, 0.29 ) }
    dend_4 { pt3dadd( -32.4027, 37.2965, 35.6017, 0.74 ) }
    dend_4 { pt3dadd( -33.4061, 37.241, 35.1949, 0.37 ) }
    dend_4 { pt3dadd( -34.321, 37.2084, 34.825, 0.29 ) }
    dend_4 { pt3dadd( -35.1956, 37.2087, 34.4827, 0.29 ) }
    dend_4 { pt3dadd( -36.0401, 37.257, 34.1684, 0.29 ) }
    dend_4 { pt3dadd( -36.8818, 37.2912, 33.841, 1.77 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.7804, 3.4936, 18.1285, 1.84 ) }
    dend_3 { pt3dadd( 13.9997, 3.37972, 18.307, 1.84 ) }
    dend_3 { pt3dadd( 14.4135, 3.2737, 18.6857, 0.74 ) }
    dend_3 { pt3dadd( 14.8675, 3.32665, 19.276, 0.44 ) }
    dend_3 { pt3dadd( 15.1545, 3.40187, 19.7047, 0.44 ) }
    dend_3 { pt3dadd( 15.252, 3.42137, 19.8593, 1.03 ) }
    dend_3 { pt3dadd( 15.5458, 3.46475, 20.3552, 0.81 ) }
    dend_3 { pt3dadd( 15.9348, 3.55385, 21.0437, 0.81 ) }
    dend_3 { pt3dadd( 16.5439, 3.80031, 22.1603, 1.03 ) }
    dend_3 { pt3dadd( 16.8432, 3.96709, 22.6901, 1.33 ) }
    dend_3 { pt3dadd( 17.2275, 4.19956, 23.3363, 0.66 ) }
    dend_3 { pt3dadd( 17.7895, 4.51779, 24.1884, 0.66 ) }
    dend_3 { pt3dadd( 18.0805, 4.66408, 24.5741, 0.52 ) }
    dend_3 { pt3dadd( 18.5719, 4.88736, 25.2661, 0.52 ) }
    dend_3 { pt3dadd( 18.9622, 5.10731, 25.9248, 0.37 ) }
    dend_3 { pt3dadd( 19.0978, 5.23559, 26.2707, 0.37 ) }
    dend_3 { pt3dadd( 19.2774, 5.60941, 27.1384, 1.18 ) }
    dend_3 { pt3dadd( 19.3039, 5.79549, 27.5845, 1.55 ) }
    dend_3 { pt3dadd( 19.2671, 6.54598, 29.629, 1.18 ) }
    dend_3 { pt3dadd( 19.1829, 6.94216, 30.901, 0.52 ) }
    dend_3 { pt3dadd( 19.0467, 7.31116, 32.3072, 1.11 ) }
    dend_3 { pt3dadd( 18.8647, 7.66719, 33.9069, 0.59 ) }
    dend_3 { pt3dadd( 18.7243, 7.85874, 35.041, 0.59 ) }
    dend_3 { pt3dadd( 18.6648, 7.91003, 35.6185, 0.81 ) }
    dend_3 { pt3dadd( 18.6483, 7.87873, 36.205, 0.88 ) }
    dend_3 { pt3dadd( 18.769, 7.58244, 37.3511, 0.74 ) }
    dend_3 { pt3dadd( 18.9867, 7.18825, 38.2163, 0.29 ) }
    dend_3 { pt3dadd( 19.2075, 6.8198, 38.845, 0.29 ) }
    dend_3 { pt3dadd( 19.3732, 6.57546, 39.2421, 0.29 ) }
    dend_3 { pt3dadd( 19.5251, 6.36724, 39.6164, 0.22 ) }
    dend_3 { pt3dadd( 19.7929, 6.00734, 40.2814, 0.59 ) }
    dend_3 { pt3dadd( 19.9531, 5.78904, 40.5946, 0.59 ) }
    dend_3 { pt3dadd( 21.5991, 6.7565, 46.2014, 0.59 ) }
    dend_3 { pt3dadd( 22.9971, 8.61576, 51.6539, 0.59 ) }
    dend_3 { pt3dadd( 23.9399, 11.0472, 56.9836, 0.59 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 94/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -1.36806, 67.8248, 3.44173, 0.22 ) }
    apic_10 { pt3dadd( -1.71719, 68.0387, 4.21446, 0.22 ) }
    apic_10 { pt3dadd( -1.84921, 68.119, 4.50613, 0.59 ) }
    apic_10 { pt3dadd( -2.10018, 68.2821, 5.05173, 0.59 ) }
    apic_10 { pt3dadd( -2.32916, 68.4352, 5.52114, 0.81 ) }
    apic_10 { pt3dadd( -2.72101, 68.6976, 6.3277, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_10 { pt3dadd( -3.13327, 68.969, 7.17252, 1.33 ) }
    apic_10 { pt3dadd( -3.66228, 69.3743, 8.30608, 0.22 ) }
    apic_10 { pt3dadd( -3.9082, 69.5703, 8.80006, 0.22 ) }
    apic_10 { pt3dadd( -4.15693, 69.7789, 9.27411, 0.22 ) }
    apic_10 { pt3dadd( -4.54051, 70.108, 9.9692, 0.96 ) }
    apic_10 { pt3dadd( -4.65208, 70.2028, 10.1627, 1.4 ) }
    apic_10 { pt3dadd( -5.28931, 70.7633, 11.2667, 0.15 ) }
    apic_10 { pt3dadd( -5.50794, 70.953, 11.6381, 0.15 ) }
    apic_10 { pt3dadd( -5.63667, 71.0509, 11.8569, 0.52 ) }
    apic_10 { pt3dadd( -5.76221, 71.1376, 12.0674, 0.66 ) }
    apic_10 { pt3dadd( -6.2057, 71.4112, 12.7453, 0.15 ) }
    apic_10 { pt3dadd( -6.48467, 71.5696, 13.1631, 1.11 ) }
    apic_10 { pt3dadd( -6.80545, 71.7323, 13.6367, 1.11 ) }
    apic_10 { pt3dadd( -7.34838, 72.025, 14.4235, 0.22 ) }
    apic_10 { pt3dadd( -7.51232, 72.1161, 14.6548, 0.22 ) }
    apic_10 { pt3dadd( -7.77005, 72.2654, 15.0121, 0.15 ) }
    apic_10 { pt3dadd( -8.17343, 72.4892, 15.518, 0.15 ) }
    apic_10 { pt3dadd( -8.47099, 72.6412, 15.8657, 0.15 ) }
    apic_10 { pt3dadd( -8.89188, 72.8417, 16.3135, 1.11 ) }
    apic_10 { pt3dadd( -9.10709, 72.9326, 16.5165, 1.4 ) }
    apic_10 { pt3dadd( -9.40098, 73.0307, 16.7629, 1.4 ) }
    apic_10 { pt3dadd( -9.99065, 73.1844, 17.2289, 0.22 ) }
    apic_10 { pt3dadd( -10.1054, 73.202, 17.3053, 0.22 ) }
    apic_10 { pt3dadd( -10.4658, 73.2283, 17.5097, 0.59 ) }
    apic_10 { pt3dadd( -10.5916, 73.2301, 17.5686, 0.59 ) }
    apic_10 { pt3dadd( -11.0782, 73.2501, 17.7511, 0.22 ) }
    apic_10 { pt3dadd( -17.2667, 72.7828, 18.9186, 0.22 ) }
    apic_10 { pt3dadd( -23.3698, 71.3954, 19.8047, 0.22 ) }
    apic_10 { pt3dadd( -29.6782, 71.4829, 20.0595, 0.22 ) }
    apic_10 { pt3dadd( -35.9684, 71.8726, 19.663, 0.22 ) }
    apic_10 { pt3dadd( -42.2225, 72.2592, 20.4462, 0.22 ) }
    apic_10 { pt3dadd( -48.3918, 73.3049, 21.3233, 0.22 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 32/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -1.36806, 67.8248, 3.44173, 0.22 ) }
    apic_7 { pt3dadd( -2.31399, 68.9516, 3.09313, 0.22 ) }
    apic_7 { pt3dadd( -2.67602, 69.3814, 2.97187, 0.22 ) }
    apic_7 { pt3dadd( -3.03859, 69.835, 2.85646, 0.74 ) }
    apic_7 { pt3dadd( -3.48375, 70.4037, 2.71163, 0.81 ) }
    apic_7 { pt3dadd( -4.35604, 71.532, 2.43687, 0.29 ) }
    apic_7 { pt3dadd( -5.05634, 72.4653, 2.17669, 0.29 ) }
    apic_7 { pt3dadd( -5.49253, 73.0634, 1.99031, 0.29 ) }
    apic_7 { pt3dadd( -6.11785, 73.9639, 1.68545, 1.18 ) }
    apic_7 { pt3dadd( -6.46621, 74.4791, 1.50523, 1.47 ) }
    apic_7 { pt3dadd( -6.71227, 74.8619, 1.36897, 1.77 ) }
    apic_7 { pt3dadd( -7.24941, 75.7875, 1.07038, 0.29 ) }
    apic_7 { pt3dadd( -7.69135, 76.6145, 0.798662, 0.22 ) }
    apic_7 { pt3dadd( -7.93885, 77.0563, 0.646636, 0.37 ) }
    apic_7 { pt3dadd( -8.18251, 77.4911, 0.505068, 0.37 ) }
    apic_7 { pt3dadd( -8.66192, 78.361, 0.25043, 0.15 ) }
    apic_7 { pt3dadd( -9.10851, 79.2031, 0.0173484, 1.33 ) }
    apic_7 { pt3dadd( -9.3019, 79.5852, -0.0732202, 1.77 ) }
    apic_7 { pt3dadd( -9.97268, 81.0458, -0.430997, 0.22 ) }
    apic_7 { pt3dadd( -10.2232, 81.6822, -0.581735, 0.22 ) }
    apic_7 { pt3dadd( -10.3822, 82.1442, -0.684145, 0.81 ) }
    apic_7 { pt3dadd( -10.5746, 82.7696, -0.833691, 0.81 ) }
    apic_7 { pt3dadd( -10.7874, 83.5689, -1.04855, 0.15 ) }
    apic_7 { pt3dadd( -11.045, 84.7686, -1.39999, 0.22 ) }
    apic_7 { pt3dadd( -11.2489, 86.0218, -1.77149, 1.84 ) }
    apic_7 { pt3dadd( -11.3076, 86.4648, -1.91297, 2.5 ) }
    apic_7 { pt3dadd( -11.4063, 87.3626, -2.22524, 2.5 ) }
    apic_7 { pt3dadd( -11.5466, 89.003, -2.90004, 0.29 ) }
    apic_7 { pt3dadd( -11.5732, 89.6472, -3.20656, 0.29 ) }
    apic_7 { pt3dadd( -11.578, 90.4629, -3.7153, 0.22 ) }
    apic_7 { pt3dadd( -11.5841, 91.2884, -4.33881, 1.03 ) }
    apic_7 { pt3dadd( -11.5957, 91.8796, -4.82395, 1.03 ) }
    apic_7 { pt3dadd( -11.6341, 92.9207, -5.77797, 0.22 ) }
    apic_7 { pt3dadd( -11.671, 93.3929, -6.26045, 0.81 ) }
    apic_7 { pt3dadd( -11.8713, 95.2181, -8.18932, 0.22 ) }
    apic_7 { pt3dadd( -11.9654, 95.93, -8.97223, 0.22 ) }
    apic_7 { pt3dadd( -12.072, 96.6782, -9.80047, 1.18 ) }
    apic_7 { pt3dadd( -12.2008, 97.6083, -10.8052, 1.47 ) }
    apic_7 { pt3dadd( -12.2943, 98.2947, -11.5192, 0.29 ) }
    apic_7 { pt3dadd( -12.3884, 99.0451, -12.2681, 0.96 ) }
    apic_7 { pt3dadd( -12.4393, 99.5697, -12.7426, 0.96 ) }
    apic_7 { pt3dadd( -12.5092, 100.498, -13.5257, 0.29 ) }
    apic_7 { pt3dadd( -12.5845, 101.608, -14.4199, 1.69 ) }
    apic_7 { pt3dadd( -12.6332, 102.376, -14.9931, 2.43 ) }
    apic_7 { pt3dadd( -12.7117, 103.902, -16.0486, 0.29 ) }
    apic_7 { pt3dadd( -12.756, 104.658, -16.5055, 0.29 ) }
    apic_7 { pt3dadd( -12.815, 105.536, -16.9474, 0.96 ) }
    apic_7 { pt3dadd( -12.8598, 106.117, -17.1609, 0.96 ) }
    apic_7 { pt3dadd( -12.9401, 107.198, -17.4244, 0.22 ) }
    apic_7 { pt3dadd( -13.0252, 108.518, -17.6527, 1.47 ) }
    apic_7 { pt3dadd( -13.0666, 109.29, -17.7513, 1.69 ) }
    apic_7 { pt3dadd( -13.1559, 111.139, -17.9442, 0.29 ) }
    apic_7 { pt3dadd( -13.2214, 112.513, -18.0521, 0.37 ) }
    apic_7 { pt3dadd( -13.2657, 113.339, -18.0871, 0.59 ) }
    apic_7 { pt3dadd( -13.3509, 114.583, -18.1054, 1.47 ) }
    apic_7 { pt3dadd( -13.4108, 115.255, -18.1265, 1.69 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 88/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -29.9462, -76.4065, 26.6901, 0.88 ) }
    dend_24 { pt3dadd( -31.5801, -77.0455, 25.6836, 0.88 ) }
    dend_24 { pt3dadd( -32.6383, -77.5126, 25.1419, 0.88 ) }
    dend_24 { pt3dadd( -33.5126, -77.9214, 24.6695, 0.29 ) }
    dend_24 { pt3dadd( -34.4974, -78.3899, 24.0951, 0.22 ) }
    dend_24 { pt3dadd( -35.1659, -78.6849, 23.7098, 0.29 ) }
    dend_24 { pt3dadd( -35.913, -78.9932, 23.2948, 0.74 ) }
    dend_24 { pt3dadd( -36.4354, -79.1931, 23.0648, 1.03 ) }
    dend_24 { pt3dadd( -37.4737, -79.5711, 22.6098, 0.81 ) }
    dend_24 { pt3dadd( -38.4897, -79.9115, 22.131, 0.22 ) }
    dend_24 { pt3dadd( -39.6067, -80.3092, 21.5911, 0.22 ) }
    dend_24 { pt3dadd( -40.0974, -80.4739, 21.3622, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_24 { pt3dadd( -40.6122, -80.6304, 21.1034, 0.96 ) }
    dend_24 { pt3dadd( -41.1499, -80.7875, 20.8288, 0.96 ) }
    dend_24 { pt3dadd( -42.4304, -81.1606, 20.203, 0.29 ) }
    dend_24 { pt3dadd( -43.2249, -81.392, 19.8057, 1.69 ) }
    dend_24 { pt3dadd( -43.8084, -81.5467, 19.4678, 1.99 ) }
    dend_24 { pt3dadd( -45.8038, -81.9899, 18.241, 0.22 ) }
    dend_24 { pt3dadd( -46.631, -82.1384, 17.72, 0.22 ) }
    dend_24 { pt3dadd( -47.6083, -82.2514, 17.0673, 1.18 ) }
    dend_24 { pt3dadd( -47.897, -82.2635, 16.862, 1.4 ) }
    dend_24 { pt3dadd( -49.6186, -82.2184, 15.6687, 0.22 ) }
    dend_24 { pt3dadd( -50.1187, -82.185, 15.3489, 0.88 ) }
    dend_24 { pt3dadd( -50.4265, -82.1549, 15.1752, 0.88 ) }
    dend_24 { pt3dadd( -51.9742, -81.9884, 14.3298, 0.22 ) }
    dend_24 { pt3dadd( -52.6187, -81.9255, 13.9652, 0.22 ) }
    dend_24 { pt3dadd( -54.0478, -81.8265, 13.1694, 0.22 ) }
    dend_24 { pt3dadd( -54.7465, -81.8069, 12.7902, 0.22 ) }
    dend_24 { pt3dadd( -55.2619, -81.8103, 12.4876, 1.03 ) }
    dend_24 { pt3dadd( -55.7035, -81.8256, 12.2216, 1.03 ) }
    dend_24 { pt3dadd( -57.0084, -81.9286, 11.4488, 0.15 ) }
    dend_24 { pt3dadd( -57.3238, -81.9753, 11.2374, 0.88 ) }
    dend_24 { pt3dadd( -57.8741, -82.1134, 10.8353, 0.88 ) }
    dend_24 { pt3dadd( -58.8974, -82.4849, 9.95537, 0.22 ) }
    dend_24 { pt3dadd( -59.1452, -82.5955, 9.72637, 0.74 ) }
    dend_24 { pt3dadd( -59.4263, -82.7482, 9.44226, 0.88 ) }
    dend_24 { pt3dadd( -60.4654, -83.4035, 8.35573, 0.22 ) }
    dend_24 { pt3dadd( -60.9541, -83.7311, 7.82099, 0.88 ) }
    dend_24 { pt3dadd( -62.4035, -84.7949, 6.16218, 0.22 ) }
    dend_24 { pt3dadd( -62.5126, -84.8856, 6.02494, 0.81 ) }
    dend_24 { pt3dadd( -63.576, -85.8054, 4.60143, 0.22 ) }
    dend_24 { pt3dadd( -63.9857, -86.1682, 4.01777, 1.18 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 30/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -29.9462, -76.4065, 26.6901, 0.29 ) }
    dend_21 { pt3dadd( -30.4379, -77.0988, 27.2463, 0.29 ) }
    dend_21 { pt3dadd( -30.8483, -77.6146, 27.6879, 0.59 ) }
    dend_21 { pt3dadd( -31.2461, -78.0991, 28.098, 0.59 ) }
    dend_21 { pt3dadd( -31.9436, -78.9801, 28.789, 0.22 ) }
    dend_21 { pt3dadd( -32.3061, -79.4861, 29.1608, 1.03 ) }
    dend_21 { pt3dadd( -33.038, -80.5302, 29.9104, 2.14 ) }
    dend_21 { pt3dadd( -33.4689, -81.0964, 30.3266, 2.14 ) }
    dend_21 { pt3dadd( -34.1996, -82.0598, 30.9991, 0.52 ) }
    dend_21 { pt3dadd( -34.7046, -82.7644, 31.423, 0.22 ) }
    dend_21 { pt3dadd( -35.0909, -83.3232, 31.7168, 0.22 ) }
    dend_21 { pt3dadd( -35.5324, -83.9938, 32.0489, 0.22 ) }
    dend_21 { pt3dadd( -36.2813, -85.1071, 32.585, 0.96 ) }
    dend_21 { pt3dadd( -36.7512, -85.7221, 32.9025, 1.33 ) }
    dend_21 { pt3dadd( -37.3184, -86.3354, 33.2587, 0.88 ) }
    dend_21 { pt3dadd( -37.9806, -86.9095, 33.6445, 0.59 ) }
    dend_21 { pt3dadd( -38.8521, -87.5006, 34.0901, 0.29 ) }
    dend_21 { pt3dadd( -39.3756, -87.7835, 34.3147, 0.29 ) }
    dend_21 { pt3dadd( -40.0504, -88.0473, 34.5434, 0.29 ) }
    dend_21 { pt3dadd( -40.5671, -88.2028, 34.6962, 0.81 ) }
    dend_21 { pt3dadd( -40.9384, -88.2933, 34.8006, 0.96 ) }
    dend_21 { pt3dadd( -41.6024, -88.4692, 34.9677, 0.81 ) }
    dend_21 { pt3dadd( -42.5667, -88.8276, 35.2015, 0.29 ) }
    dend_21 { pt3dadd( -43.1459, -89.1555, 35.3674, 0.74 ) }
    dend_21 { pt3dadd( -43.5915, -89.5045, 35.5231, 1.03 ) }
    dend_21 { pt3dadd( -44.0868, -89.9991, 35.7325, 1.03 ) }
    dend_21 { pt3dadd( -44.7495, -90.8123, 36.0585, 0.29 ) }
    dend_21 { pt3dadd( -45.278, -91.5445, 36.3511, 0.44 ) }
    dend_21 { pt3dadd( -45.7788, -92.2442, 36.6301, 0.59 ) }
    dend_21 { pt3dadd( -46.1835, -92.7203, 36.8045, 0.59 ) }
    dend_21 { pt3dadd( -46.4795, -92.9847, 36.8836, 0.22 ) }
    dend_21 { pt3dadd( -46.9497, -93.2744, 36.9423, 0.22 ) }
    dend_21 { pt3dadd( -47.8674, -93.6233, 37.0074, 0.74 ) }
    dend_21 { pt3dadd( -48.6384, -93.8022, 37.0453, 0.96 ) }
    dend_21 { pt3dadd( -49.9118, -93.9861, 37.1044, 0.66 ) }
    dend_21 { pt3dadd( -50.8697, -94.0842, 37.1483, 0.44 ) }
    dend_21 { pt3dadd( -51.5777, -94.1468, 37.1809, 0.88 ) }
    dend_21 { pt3dadd( -52.3646, -94.2281, 37.2439, 1.03 ) }
    dend_21 { pt3dadd( -53.2271, -94.3534, 37.3505, 0.81 ) }
    dend_21 { pt3dadd( -54.5892, -94.6358, 37.6106, 0.29 ) }
    dend_21 { pt3dadd( -55.4686, -94.916, 37.8625, 0.52 ) }
    dend_21 { pt3dadd( -56.0878, -95.2027, 38.1198, 0.29 ) }
    dend_21 { pt3dadd( -57.074, -95.8243, 38.6427, 0.29 ) }
    dend_21 { pt3dadd( -57.5428, -96.225, 38.9401, 1.03 ) }
    dend_21 { pt3dadd( -58.0146, -96.7522, 39.287, 1.33 ) }
    dend_21 { pt3dadd( -58.7796, -97.802, 39.9046, 0.81 ) }
    dend_21 { pt3dadd( -59.5481, -98.9381, 40.5088, 0.44 ) }
    dend_21 { pt3dadd( -59.9427, -99.4957, 40.7399, 0.81 ) }
    dend_21 { pt3dadd( -60.5875, -100.331, 40.9603, 0.44 ) }
    dend_21 { pt3dadd( -61.2409, -101.098, 41.0471, 0.44 ) }
    dend_21 { pt3dadd( -61.782, -101.681, 41.0046, 0.88 ) }
    dend_21 { pt3dadd( -62.6741, -102.516, 40.7702, 1.03 ) }
    dend_21 { pt3dadd( -63.9144, -103.555, 40.2629, 0.52 ) }
    dend_21 { pt3dadd( -64.7879, -104.177, 39.8482, 0.96 ) }
    dend_21 { pt3dadd( -65.6013, -104.661, 39.4237, 1.55 ) }
    dend_21 { pt3dadd( -66.4383, -105.079, 38.9689, 1.84 ) }
    dend_21 { pt3dadd( -67.5476, -105.542, 38.3434, 0.66 ) }
    dend_21 { pt3dadd( -68.5882, -105.894, 37.7429, 0.29 ) }
    dend_21 { pt3dadd( -69.6701, -106.225, 37.1096, 0.37 ) }
    dend_21 { pt3dadd( -70.4292, -106.461, 36.6433, 0.96 ) }
    dend_21 { pt3dadd( -71.0712, -106.695, 36.2345, 1.25 ) }
    dend_21 { pt3dadd( -72.0598, -107.193, 35.6004, 0.96 ) }
    dend_21 { pt3dadd( -72.9052, -107.815, 34.9944, 0.52 ) }
    dend_21 { pt3dadd( -73.8184, -108.749, 34.2839, 0.37 ) }
    dend_21 { pt3dadd( -74.2994, -109.455, 33.858, 1.03 ) }
    dend_21 { pt3dadd( -74.7629, -110.384, 33.3902, 0.88 ) }
    dend_21 { pt3dadd( -75.2731, -111.775, 32.7832, 0.81 ) }
    dend_21 { pt3dadd( -75.5146, -112.82, 32.4154, 1.03 ) }
    dend_21 { pt3dadd( -75.61, -113.607, 32.1851, 0.88 ) }
    dend_21 { pt3dadd( -75.679, -114.778, 31.9053, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_21 { pt3dadd( -75.6899, -115.802, 31.6759, 0.66 ) }
    dend_21 { pt3dadd( -75.6437, -116.889, 31.4451, 0.52 ) }
    dend_21 { pt3dadd( -75.5404, -118.178, 31.1333, 0.29 ) }
    dend_21 { pt3dadd( -75.5068, -118.82, 30.9739, 0.29 ) }
    dend_21 { pt3dadd( -75.5293, -119.483, 30.7882, 0.29 ) }
    dend_21 { pt3dadd( -75.6324, -120.365, 30.5198, 0.96 ) }
    dend_21 { pt3dadd( -75.7502, -120.902, 30.3769, 1.55 ) }
    dend_21 { pt3dadd( -75.9932, -121.66, 30.2161, 1.55 ) }
    dend_21 { pt3dadd( -76.4015, -122.611, 30.0441, 0.52 ) }
    dend_21 { pt3dadd( -76.7484, -123.394, 29.9457, 0.22 ) }
    dend_21 { pt3dadd( -77.0396, -124.168, 29.8903, 0.22 ) }
    dend_21 { pt3dadd( -77.4455, -125.454, 29.8594, 0.81 ) }
    dend_21 { pt3dadd( -77.5779, -126.015, 29.8636, 1.11 ) }
    dend_21 { pt3dadd( -77.7534, -126.968, 29.8963, 1.11 ) }
    dend_21 { pt3dadd( -78.0041, -128.512, 29.9555, 0.22 ) }
    dend_21 { pt3dadd( -78.2712, -130.012, 30.0125, 1.47 ) }
    dend_21 { pt3dadd( -78.4269, -130.721, 30.0398, 1.77 ) }
    dend_21 { pt3dadd( -78.842, -132.356, 30.0672, 0.37 ) }
    dend_21 { pt3dadd( -79.1488, -133.398, 30.06, 0.37 ) }
    dend_21 { pt3dadd( -79.433, -134.14, 30.0382, 1.18 ) }
    dend_21 { pt3dadd( -79.9969, -135.046, 29.9498, 0.88 ) }
    dend_21 { pt3dadd( -80.5126, -135.599, 29.8307, 0.59 ) }
    dend_21 { pt3dadd( -81.3231, -136.265, 29.6151, 0.37 ) }
    dend_21 { pt3dadd( -82.0158, -136.714, 29.4194, 1.33 ) }
    dend_21 { pt3dadd( -82.8795, -137.183, 29.1402, 1.55 ) }
    dend_21 { pt3dadd( -84.4589, -137.938, 28.6134, 0.29 ) }
    dend_21 { pt3dadd( -85.4495, -138.391, 28.2846, 0.29 ) }
    dend_21 { pt3dadd( -86.0705, -138.665, 28.0927, 0.74 ) }
    dend_21 { pt3dadd( -86.8257, -139.014, 27.8864, 0.74 ) }
    dend_21 { pt3dadd( -88.43, -139.824, 27.4656, 0.29 ) }
    dend_21 { pt3dadd( -89.5922, -140.516, 27.182, 0.88 ) }
    dend_21 { pt3dadd( -90.3613, -141.049, 27.0424, 1.11 ) }
    dend_21 { pt3dadd( -91.2797, -141.737, 26.9521, 0.81 ) }
    dend_21 { pt3dadd( -92.0143, -142.366, 26.8978, 0.44 ) }
    dend_21 { pt3dadd( -92.5639, -142.938, 26.877, 0.37 ) }
    dend_21 { pt3dadd( -93.1143, -143.674, 26.8528, 1.03 ) }
    dend_21 { pt3dadd( -93.6802, -144.554, 26.505, 1.62 ) }
    dend_21 { pt3dadd( -94.1423, -145.364, 25.8429, 1.62 ) }
    dend_21 { pt3dadd( -94.7399, -146.546, 24.6406, 0.44 ) }
    dend_21 { pt3dadd( -95.0691, -147.182, 23.907, 0.37 ) }
    dend_21 { pt3dadd( -95.5116, -148.008, 22.8697, 1.47 ) }
    dend_21 { pt3dadd( -97.1121, -150.961, 18.9145, 1.33 ) }
    dend_21 { pt3dadd( -98.0119, -152.591, 16.6609, 0.22 ) }
    dend_21 { pt3dadd( -98.3076, -153.078, 15.9694, 0.22 ) }
    dend_21 { pt3dadd( -98.6531, -153.541, 15.2973, 0.29 ) }
    dend_21 { pt3dadd( -98.9371, -153.892, 14.8498, 0.29 ) }
    dend_21 { pt3dadd( -99.4538, -154.526, 14.2861, 0.81 ) }
    dend_21 { pt3dadd( -100.052, -155.353, 13.9736, 0.81 ) }
    dend_21 { pt3dadd( -100.716, -156.358, 13.7236, 1.77 ) }
    dend_21 { pt3dadd( -101.153, -157.108, 13.5567, 2.06 ) }
    dend_21 { pt3dadd( -102.196, -159.226, 13.1132, 0.22 ) }
    dend_21 { pt3dadd( -102.648, -160.194, 12.925, 0.22 ) }
    dend_21 { pt3dadd( -103.084, -161.095, 12.7953, 1.33 ) }
    dend_21 { pt3dadd( -103.502, -161.906, 12.7227, 1.55 ) }
    dend_21 { pt3dadd( -103.967, -162.707, 12.6707, 1.33 ) }
    dend_21 { pt3dadd( -104.931, -163.953, 12.6115, 0.22 ) }
    dend_21 { pt3dadd( -105.711, -164.674, 12.5866, 0.22 ) }
    dend_21 { pt3dadd( -106.754, -165.522, 12.5315, 1.25 ) }
    dend_21 { pt3dadd( -107.18, -165.831, 12.5025, 1.77 ) }
    dend_21 { pt3dadd( -108.26, -166.584, 12.4181, 2.06 ) }
    dend_21 { pt3dadd( -110.022, -167.833, 12.3188, 0.22 ) }
    dend_21 { pt3dadd( -110.577, -168.238, 12.2986, 1.11 ) }
    dend_21 { pt3dadd( -111.174, -168.742, 12.2526, 1.11 ) }
    dend_21 { pt3dadd( -112.169, -169.711, 12.2103, 0.15 ) }
    dend_21 { pt3dadd( -112.779, -170.366, 12.2292, 0.15 ) }
    dend_21 { pt3dadd( -113.835, -171.612, 12.4221, 2.14 ) }
    dend_21 { pt3dadd( -114.243, -172.156, 12.4871, 2.28 ) }
    dend_21 { pt3dadd( -115.362, -173.744, 12.5534, 0.22 ) }
    dend_21 { pt3dadd( -116.273, -175.13, 12.4881, 1.03 ) }
    dend_21 { pt3dadd( -116.54, -175.569, 12.4257, 1.25 ) }
    dend_21 { pt3dadd( -117.65, -177.38, 11.9098, 0.22 ) }
    dend_21 { pt3dadd( -118.81, -179.174, 11.1215, 0.22 ) }
    dend_21 { pt3dadd( -119.521, -180.159, 10.5847, 1.55 ) }
    dend_21 { pt3dadd( -119.959, -180.666, 10.245, 1.92 ) }
    dend_21 { pt3dadd( -120.564, -181.255, 9.79309, 1.55 ) }
    dend_21 { pt3dadd( -121.722, -182.164, 9.0465, 0.59 ) }
    dend_21 { pt3dadd( -122.574, -182.674, 8.63509, 0.29 ) }
    dend_21 { pt3dadd( -123.494, -183.138, 8.39541, 0.29 ) }
    dend_21 { pt3dadd( -124.294, -183.529, 8.25869, 0.22 ) }
    dend_21 { pt3dadd( -125.323, -184.051, 8.10375, 1.03 ) }
    dend_21 { pt3dadd( -125.984, -184.405, 8.01528, 1.25 ) }
    dend_21 { pt3dadd( -127.362, -185.158, 7.89521, 0.22 ) }
    dend_21 { pt3dadd( -128.346, -185.748, 7.79278, 0.22 ) }
    dend_21 { pt3dadd( -129.159, -186.308, 7.65986, 1.47 ) }
    dend_21 { pt3dadd( -129.928, -186.925, 7.4672, 1.69 ) }
    dend_21 { pt3dadd( -130.145, -187.132, 7.38581, 1.69 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 86/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -36.8818, 37.2912, 33.841, 0.81 ) }
    dend_6 { pt3dadd( -38.0023, 38.7099, 34.3833, 0.81 ) }
    dend_6 { pt3dadd( -39.4528, 40.3008, 34.9024, 1.03 ) }
    dend_6 { pt3dadd( -40.1513, 40.9747, 35.1215, 0.29 ) }
    dend_6 { pt3dadd( -40.6217, 41.3787, 35.2493, 0.29 ) }
    dend_6 { pt3dadd( -41.7002, 42.2285, 35.5179, 0.88 ) }
    dend_6 { pt3dadd( -42.3636, 42.7077, 35.6668, 0.74 ) }
    dend_6 { pt3dadd( -43.0669, 43.1236, 35.799, 0.74 ) }
    dend_6 { pt3dadd( -43.7901, 43.4902, 35.8332, 1.11 ) }
    dend_6 { pt3dadd( -44.3901, 43.734, 35.8602, 1.11 ) }
    dend_6 { pt3dadd( -44.6094, 43.8117, 35.8719, 0.96 ) }
    dend_6 { pt3dadd( -45.1507, 43.947, 35.9152, 0.59 ) }
    dend_6 { pt3dadd( -45.9606, 44.1138, 35.9653, 0.37 ) }
    dend_6 { pt3dadd( -54.706, 50.4607, 38.1423, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -63.3012, 56.7799, 40.9094, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 1/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -36.8818, 37.2912, 33.841, 0.22 ) }
    dend_5 { pt3dadd( -38.0207, 36.1741, 33.5292, 0.22 ) }
    dend_5 { pt3dadd( -38.7138, 35.4655, 33.299, 0.81 ) }
    dend_5 { pt3dadd( -39.0049, 35.1591, 33.1947, 0.81 ) }
    dend_5 { pt3dadd( -39.9456, 34.1075, 32.8437, 0.22 ) }
    dend_5 { pt3dadd( -40.282, 33.7314, 32.7182, 0.22 ) }
    dend_5 { pt3dadd( -41.1758, 32.7321, 32.3847, 0.22 ) }
    dend_5 { pt3dadd( -41.6571, 32.2219, 32.1699, 0.22 ) }
    dend_5 { pt3dadd( -42.0519, 31.7592, 31.9741, 0.88 ) }
    dend_5 { pt3dadd( -42.494, 31.1904, 31.7331, 0.88 ) }
    dend_5 { pt3dadd( -51.1212, 23.732, 30.4324, 0.88 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 12/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -48.3918, 73.3049, 21.3233, 0.22 ) }
    apic_12 { pt3dadd( -60.5424, 74.742, 26.2665, 0.22 ) }
    apic_12 { pt3dadd( -72.4973, 78.3498, 30.5943, 0.22 ) }
    apic_12 { pt3dadd( -85.2494, 81.314, 32.3343, 0.22 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 16/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -48.3918, 73.3049, 21.3233, 0.22 ) }
    apic_11 { pt3dadd( -56.3049, 74.2055, 23.5381, 0.22 ) }
    apic_11 { pt3dadd( -63.6261, 75.9872, 26.9552, 0.22 ) }
    apic_11 { pt3dadd( -71.1594, 78.3182, 29.48, 0.22 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 20/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -13.4108, 115.255, -18.1265, 0.74 ) }
    apic_9 { pt3dadd( -13.5647, 117.103, -16.6191, 0.74 ) }
    apic_9 { pt3dadd( -13.6399, 117.841, -16.0946, 0.22 ) }
    apic_9 { pt3dadd( -13.8594, 119.6, -14.8094, 0.22 ) }
    apic_9 { pt3dadd( -13.9829, 120.542, -14.1184, 0.66 ) }
    apic_9 { pt3dadd( -14.052, 121.205, -13.6628, 0.74 ) }
    apic_9 { pt3dadd( -14.1687, 122.771, -12.6632, 0.22 ) }
    apic_9 { pt3dadd( -14.242, 124.243, -11.8698, 0.15 ) }
    apic_9 { pt3dadd( -14.278, 126.474, -10.7815, 1.47 ) }
    apic_9 { pt3dadd( -14.2655, 126.97, -10.5646, 1.77 ) }
    apic_9 { pt3dadd( -14.0726, 129.809, -9.43229, 0.15 ) }
    apic_9 { pt3dadd( -13.8444, 131.772, -8.74864, 0.15 ) }
    apic_9 { pt3dadd( -13.6555, 132.842, -8.43344, 0.74 ) }
    apic_9 { pt3dadd( -13.5541, 133.319, -8.30179, 0.74 ) }
    apic_9 { pt3dadd( -13.2825, 134.403, -8.026, 0.15 ) }
    apic_9 { pt3dadd( -13.1822, 134.874, -7.82993, 0.52 ) }
    apic_9 { pt3dadd( -13.148, 135.215, -7.60588, 0.44 ) }
    apic_9 { pt3dadd( -13.1812, 136.006, -6.93441, 0.15 ) }
    apic_9 { pt3dadd( -13.4452, 137.275, -5.69934, 0.96 ) }
    apic_9 { pt3dadd( -13.7961, 138.23, -4.70177, 0.37 ) }
    apic_9 { pt3dadd( -14.7419, 140.04, -2.73716, 0.15 ) }
    apic_9 { pt3dadd( -15.2607, 140.841, -1.92113, 0.15 ) }
    apic_9 { pt3dadd( -15.5438, 141.241, -1.56824, 0.59 ) }
    apic_9 { pt3dadd( -16.3954, 142.378, -0.716351, 0.15 ) }
    apic_9 { pt3dadd( -16.9605, 143.164, -0.275437, 0.88 ) }
    apic_9 { pt3dadd( -17.3389, 143.729, -0.0412105, 1.11 ) }
    apic_9 { pt3dadd( -18.3, 145.318, 0.406636, 0.15 ) }
    apic_9 { pt3dadd( -19.1394, 146.91, 0.792714, 0.15 ) }
    apic_9 { pt3dadd( -19.4116, 147.507, 0.919056, 0.15 ) }
    apic_9 { pt3dadd( -19.7422, 148.434, 1.05847, 0.81 ) }
    apic_9 { pt3dadd( -19.8961, 148.99, 1.12992, 1.11 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 51/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -13.4108, 115.255, -18.1265, 0.29 ) }
    apic_8 { pt3dadd( -13.5849, 116.563, -17.9772, 0.29 ) }
    apic_8 { pt3dadd( -13.8847, 118.572, -17.7314, 0.15 ) }
    apic_8 { pt3dadd( -14.0028, 119.348, -17.637, 0.66 ) }
    apic_8 { pt3dadd( -14.0942, 119.998, -17.5625, 0.66 ) }
    apic_8 { pt3dadd( -14.2724, 121.325, -17.4157, 0.15 ) }
    apic_8 { pt3dadd( -14.3629, 122.076, -17.34, 0.15 ) }
    apic_8 { pt3dadd( -14.4659, 123.104, -17.2459, 1.18 ) }
    apic_8 { pt3dadd( -14.4958, 123.947, -17.1596, 1.47 ) }
    apic_8 { pt3dadd( -14.4893, 125.383, -17.0125, 0.22 ) }
    apic_8 { pt3dadd( -14.4758, 125.637, -16.9889, 0.37 ) }
    apic_8 { pt3dadd( -14.3103, 127.084, -16.9323, 0.15 ) }
    apic_8 { pt3dadd( -14.2363, 127.568, -16.9197, 0.44 ) }
    apic_8 { pt3dadd( -13.8454, 129.66, -16.9395, 0.22 ) }
    apic_8 { pt3dadd( -13.755, 130.109, -16.9602, 0.74 ) }
    apic_8 { pt3dadd( -13.5855, 130.963, -17.0216, 0.22 ) }
    apic_8 { pt3dadd( -13.3266, 132.422, -17.1261, 1.33 ) }
    apic_8 { pt3dadd( -13.2511, 133.014, -17.1603, 1.55 ) }
    apic_8 { pt3dadd( -13.1113, 134.852, -17.2443, 0.15 ) }
    apic_8 { pt3dadd( -13.0841, 135.638, -17.2671, 0.15 ) }
    apic_8 { pt3dadd( -13.0723, 136.744, -17.2737, 1.47 ) }
    apic_8 { pt3dadd( -13.094, 137.784, -17.2571, 1.62 ) }
    apic_8 { pt3dadd( -13.2523, 140.66, -17.1349, 0.22 ) }
    apic_8 { pt3dadd( -13.3425, 141.762, -17.0681, 0.44 ) }
    apic_8 { pt3dadd( -13.4914, 143.12, -16.9547, 0.15 ) }
    apic_8 { pt3dadd( -13.624, 144.143, -16.8611, 0.74 ) }
    apic_8 { pt3dadd( -13.7099, 144.734, -16.8084, 0.74 ) }
    apic_8 { pt3dadd( -14.0764, 146.767, -16.6365, 0.22 ) }
    apic_8 { pt3dadd( -14.2874, 147.68, -16.5438, 0.66 ) }
    apic_8 { pt3dadd( -14.379, 148.019, -16.505, 0.66 ) }
    apic_8 { pt3dadd( -14.9582, 149.907, -16.2786, 0.22 ) }
    apic_8 { pt3dadd( -15.148, 150.463, -16.2119, 0.29 ) }
    apic_8 { pt3dadd( -16.0486, 152.799, -15.9509, 0.15 ) }
    apic_8 { pt3dadd( -16.803, 154.529, -15.7667, 1.33 ) }
    apic_8 { pt3dadd( -17.1013, 155.161, -15.7078, 1.47 ) }
    apic_8 { pt3dadd( -17.9386, 156.815, -15.5592, 0.15 ) }
    apic_8 { pt3dadd( -18.3454, 157.561, -15.4975, 0.15 ) }
    apic_8 { pt3dadd( -18.821, 158.408, -15.432, 0.15 ) }
    apic_8 { pt3dadd( -19.277, 159.207, -15.3803, 1.18 ) }
    apic_8 { pt3dadd( -19.4493, 159.544, -15.3655, 1.18 ) }
    apic_8 { pt3dadd( -19.8995, 160.603, -15.3271, 0.15 ) }
    apic_8 { pt3dadd( -20.1403, 161.336, -15.3001, 0.15 ) }
    apic_8 { pt3dadd( -20.2836, 162.016, -15.2746, 0.81 ) }
    apic_8 { pt3dadd( -20.3366, 162.45, -15.2593, 0.88 ) }
    apic_8 { pt3dadd( -20.4584, 164.414, -15.1682, 0.15 ) }
    apic_8 { pt3dadd( -20.4737, 165.017, -15.1336, 0.15 ) }
    apic_8 { pt3dadd( -20.4447, 166.041, -15.0632, 0.96 ) }
    apic_8 { pt3dadd( -20.3295, 167.828, -14.9172, 0.22 ) }
    apic_8 { pt3dadd( -20.227, 168.873, -14.8205, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_8 { pt3dadd( -20.0912, 169.871, -14.7162, 0.88 ) }
    apic_8 { pt3dadd( -20.0093, 170.293, -14.696, 1.03 ) }
    apic_8 { pt3dadd( -19.6887, 171.821, -14.7257, 0.15 ) }
    apic_8 { pt3dadd( -19.4469, 172.893, -14.8402, 0.15 ) }
    apic_8 { pt3dadd( -19.1837, 174.042, -15.1114, 1.11 ) }
    apic_8 { pt3dadd( -19.073, 174.549, -15.2733, 1.11 ) }
    apic_8 { pt3dadd( -18.6035, 176.713, -16.0567, 0.15 ) }
    apic_8 { pt3dadd( -18.3979, 177.633, -16.3967, 0.96 ) }
    apic_8 { pt3dadd( -18.2366, 178.337, -16.6633, 1.25 ) }
    apic_8 { pt3dadd( -17.846, 179.998, -17.2646, 0.22 ) }
    apic_8 { pt3dadd( -17.5368, 181.355, -17.7039, 0.22 ) }
    apic_8 { pt3dadd( -17.2994, 182.427, -18.0063, 0.88 ) }
    apic_8 { pt3dadd( -17.1155, 183.256, -18.1789, 0.22 ) }
    apic_8 { pt3dadd( -16.9186, 184.079, -18.3543, 0.88 ) }
    apic_8 { pt3dadd( -16.7984, 184.64, -18.4935, 0.88 ) }
    apic_8 { pt3dadd( -16.4261, 186.386, -18.9406, 0.15 ) }
    apic_8 { pt3dadd( -16.258, 187.23, -19.2116, 0.15 ) }
    apic_8 { pt3dadd( -16.1421, 187.93, -19.4829, 1.4 ) }
    apic_8 { pt3dadd( -16.0147, 188.881, -19.909, 1.4 ) }
    apic_8 { pt3dadd( -15.8737, 190.191, -20.5728, 0.81 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -130.145, -187.132, 7.38581, 0.22 ) }
    dend_23 { pt3dadd( -130.326, -188.143, 6.09295, 0.22 ) }
    dend_23 { pt3dadd( -130.395, -188.511, 5.64828, 0.44 ) }
    dend_23 { pt3dadd( -130.64, -189.771, 4.21896, 0.22 ) }
    dend_23 { pt3dadd( -130.766, -190.426, 3.52046, 0.74 ) }
    dend_23 { pt3dadd( -130.845, -190.872, 3.06059, 0.74 ) }
    dend_23 { pt3dadd( -131.114, -192.832, 1.11763, 1.47 ) }
    dend_23 { pt3dadd( -131.268, -194.128, -0.0898361, 0.22 ) }
    dend_23 { pt3dadd( -131.339, -194.881, -0.742273, 0.22 ) }
    dend_23 { pt3dadd( -131.397, -195.818, -1.43373, 1.03 ) }
    dend_23 { pt3dadd( -131.407, -196.1, -1.62214, 1.03 ) }
    dend_23 { pt3dadd( -131.423, -196.973, -2.16413, 0.22 ) }
    dend_23 { pt3dadd( -131.401, -198.046, -2.7573, 0.22 ) }
    dend_23 { pt3dadd( -131.388, -198.882, -3.23574, 1.33 ) }
    dend_23 { pt3dadd( -131.389, -199.415, -3.57582, 1.62 ) }
    dend_23 { pt3dadd( -131.415, -200.212, -4.14848, 0.29 ) }
    dend_23 { pt3dadd( -131.514, -201.168, -4.93163, 0.15 ) }
    dend_23 { pt3dadd( -131.56, -201.439, -5.18913, 0.96 ) }
    dend_23 { pt3dadd( -131.62, -201.757, -5.50743, 0.96 ) }
    dend_23 { pt3dadd( -131.767, -202.523, -6.26581, 0.22 ) }
    dend_23 { pt3dadd( -131.831, -202.882, -6.60176, 0.44 ) }
    dend_23 { pt3dadd( -131.956, -203.754, -7.30827, 0.22 ) }
    dend_23 { pt3dadd( -132.083, -204.864, -8.05606, 0.22 ) }
    dend_23 { pt3dadd( -132.137, -205.601, -8.4671, 1.4 ) }
    dend_23 { pt3dadd( -132.15, -206.02, -8.66382, 1.4 ) }
    dend_23 { pt3dadd( -132.152, -207.463, -9.25417, 0.15 ) }
    dend_23 { pt3dadd( -132.147, -208.341, -9.60927, 0.15 ) }
    dend_23 { pt3dadd( -132.153, -209.054, -9.90617, 0.15 ) }
    dend_23 { pt3dadd( -132.204, -210.047, -10.3787, 1.4 ) }
    dend_23 { pt3dadd( -132.349, -211.362, -11.1719, 0.15 ) }
    dend_23 { pt3dadd( -132.572, -212.389, -11.9787, 0.15 ) }
    dend_23 { pt3dadd( -132.881, -213.02, -12.7455, 0.96 ) }
    dend_23 { pt3dadd( -133.181, -213.253, -13.556, 0.44 ) }
    dend_23 { pt3dadd( -133.467, -213.287, -14.3663, 0.15 ) }
    dend_23 { pt3dadd( -133.82, -213.238, -15.4611, 0.15 ) }
    dend_23 { pt3dadd( -134.118, -213.12, -16.3994, 1.77 ) }
    dend_23 { pt3dadd( -134.382, -212.961, -17.2852, 2.14 ) }
    dend_23 { pt3dadd( -135.304, -212.252, -20.8238, 0.37 ) }
    dend_23 { pt3dadd( -135.511, -212.065, -21.7807, 0.59 ) }
    dend_23 { pt3dadd( -135.895, -211.728, -23.8538, 0.59 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 60/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -130.145, -187.132, 7.38581, 0.22 ) }
    dend_22 { pt3dadd( -130.289, -188.65, 7.68164, 0.22 ) }
    dend_22 { pt3dadd( -130.428, -189.969, 7.88783, 0.81 ) }
    dend_22 { pt3dadd( -130.482, -190.497, 7.95674, 0.66 ) }
    dend_22 { pt3dadd( -130.581, -191.517, 8.07379, 0.22 ) }
    dend_22 { pt3dadd( -130.662, -192.328, 8.15356, 0.22 ) }
    dend_22 { pt3dadd( -130.738, -193.083, 8.23223, 0.88 ) }
    dend_22 { pt3dadd( -130.793, -193.992, 8.31588, 0.22 ) }
    dend_22 { pt3dadd( -130.839, -194.603, 8.35345, 0.74 ) }
    dend_22 { pt3dadd( -130.873, -194.935, 8.37978, 0.74 ) }
    dend_22 { pt3dadd( -131.032, -195.908, 8.52067, 0.22 ) }
    dend_22 { pt3dadd( -131.11, -196.3, 8.60038, 1.03 ) }
    dend_22 { pt3dadd( -131.238, -196.901, 8.77157, 1.03 ) }
    dend_22 { pt3dadd( -131.549, -198.22, 9.2677, 0.22 ) }
    dend_22 { pt3dadd( -131.668, -198.677, 9.46915, 0.81 ) }
    dend_22 { pt3dadd( -131.986, -199.912, 10.0823, 0.22 ) }
    dend_22 { pt3dadd( -132.097, -200.329, 10.304, 0.81 ) }
    dend_22 { pt3dadd( -132.4, -201.426, 10.9791, 0.22 ) }
    dend_22 { pt3dadd( -132.629, -202.274, 11.5858, 1.03 ) }
    dend_22 { pt3dadd( -132.708, -202.563, 11.8163, 1.11 ) }
    dend_22 { pt3dadd( -132.984, -203.55, 12.6356, 0.22 ) }
    dend_22 { pt3dadd( -133.157, -204.085, 13.1032, 0.22 ) }
    dend_22 { pt3dadd( -133.648, -205.547, 14.4156, 0.22 ) }
    dend_22 { pt3dadd( -133.901, -206.261, 15.0785, 0.22 ) }
    dend_22 { pt3dadd( -134.048, -206.649, 15.4483, 0.59 ) }
    dend_22 { pt3dadd( -134.286, -207.2, 16.0087, 0.22 ) }
    dend_22 { pt3dadd( -134.616, -207.819, 16.7197, 0.81 ) }
    dend_22 { pt3dadd( -135.096, -215.896, 21.1924, 0.81 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_26, dend_25, dend_14, dend_13, dend_8, dend_1, dend_0, apic_4, apic_1, dend_18, dend_15, dend_12, dend_9, dend_7, dend_2, apic_6, apic_5, apic_3, apic_2, dend_20, dend_19, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_10, apic_7, dend_24, dend_21, dend_6, dend_5, apic_12, apic_11, apic_9, apic_8, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_26, dend_25, dend_14, dend_13, dend_8, dend_1, dend_0, apic_4, apic_1, dend_18, dend_15, dend_12, dend_9, dend_7, dend_2, apic_6, apic_5, apic_3, apic_2, dend_20, dend_19, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_10, apic_7, dend_24, dend_21, dend_6, dend_5, apic_12, apic_11, apic_9, apic_8, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_26, dend_25, dend_14, dend_13, dend_8, dend_1, dend_0, axon_0, apic_4, apic_1, dend_18, dend_15, dend_12, dend_9, dend_7, dend_2, axon_1, apic_6, apic_5, apic_3, apic_2, dend_20, dend_19, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_10, apic_7, dend_24, dend_21, dend_6, dend_5, apic_12, apic_11, apic_9, apic_8, dend_23, dend_22]}
    ModelViewParmSubset_5 = new SectionList()
    apic_0 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    apic_4 ModelViewParmSubset_5.append()
    apic_1 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    apic_6 ModelViewParmSubset_5.append()
    apic_5 ModelViewParmSubset_5.append()
    apic_3 ModelViewParmSubset_5.append()
    apic_2 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    apic_10 ModelViewParmSubset_5.append()
    apic_7 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    apic_12 ModelViewParmSubset_5.append()
    apic_11 ModelViewParmSubset_5.append()
    apic_9 ModelViewParmSubset_5.append()
    apic_8 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_25 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_8 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    apic_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_24 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    apic_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_41 = new SectionList()
    apic_8 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_23 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_18 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_26 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_4 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_6 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_16 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_22 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_13 nseg = 5
    dend_8 nseg = 3
    dend_0 nseg = 9
    apic_1 nseg = 3
    dend_15 nseg = 7
    dend_12 nseg = 3
    dend_7 nseg = 9
    apic_5 nseg = 9
    apic_2 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 13
    dend_17 nseg = 7
    dend_11 nseg = 5
    dend_10 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
    apic_10 nseg = 3
    apic_7 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 9
    apic_9 nseg = 3
    apic_8 nseg = 3
    dend_23 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_NBC_9060dda08b_0_0


