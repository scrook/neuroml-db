// Cell: cNAC187_L23_LBC_d031f0be22_0_0
/*
{
  "id" : "cNAC187_L23_LBC_d031f0be22_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.701302, 11.9739, -1.24376, 2.36127", "-0.606294, 10.7546, -1.0834, 3.83931", "-0.511286, 9.53541, -0.92305, 4.78417", "-0.416278, 8.31617, -0.762698, 6.14661", "-0.32127, 7.09693, -0.602345, 7.73722", "-0.226261, 5.8777, -0.441992, 8.31396", "-0.131253, 4.65846, -0.281639, 8.14547", "-0.0362448, 3.43922, -0.121287, 7.98262", "0.0587634, 2.21999, 0.0390659, 7.82998", "0.153772, 1.00075, 0.199419, 7.57671", "0.24878, -0.218488, 0.359771, 7.56649", "0.343788, -1.43772, 0.520124, 7.52579", "0.438796, -2.65696, 0.680477, 7.17937", "0.533805, -3.8762, 0.840829, 6.69186", "0.628813, -5.09544, 1.00118, 6.36625", "0.723821, -6.31467, 1.16153, 6.05036", "0.818829, -7.53391, 1.32189, 5.80715", "0.913837, -8.75315, 1.48224, 5.61319", "1.00885, -9.97238, 1.64259, 5.41924", "1.10385, -11.1916, 1.80295, 4.79633", "1.19886, -12.4109, 1.9633, 2.79741" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "3.06534, -11.0708, -6.34462, 0.83", "4.82205, -13.0014, -6.22605, 0.83", "5.76463, -13.9956, -6.10713, 0.83", "8.1651, -16.7455, -5.75598, 0.55", "9.88777, -18.8359, -5.50657, 0.55", "11.5564, -20.8383, -5.27266, 0.83", "16.6151, -26.9606, -4.69509, 0.55", "19.2299, -30.2247, -4.56407, 0.55", "21.0644, -32.615, -4.62222, 0.55", "27.7068, -41.6806, -5.27831, 0.55", "29.0263, -43.4196, -5.46891, 0.55", "31.7481, -46.9222, -6.07838, 0.55", "36.5802, -52.8602, -7.70974, 0.55", "39.5019, -56.3976, -8.99866, 0.55", "42.1589, -59.4588, -10.3201, 0.55", "45.3456, -63.1397, -12.1465, 0.55", "49.4469, -67.8982, -14.4838, 0.55", "52.6772, -71.5587, -16.2444, 0.55", "56.2723, -75.535, -18.3617, 0.55", "57.8057, -77.1814, -19.3012, 0.55", "59.5572, -79.1384, -20.5579, 0.28", "61.1867, -80.9857, -21.7967, 0.55", "64.0724, -83.8857, -23.6675, 0.28", "68.2296, -87.8438, -26.1525, 0.28", "69.6283, -88.978, -26.9183, 0.55", "74.4061, -92.3553, -29.3164, 0.28", "76.7712, -93.9809, -30.2745, 0.28", "81.5923, -97.4236, -31.4903, 0.55", "84.6163, -99.6296, -31.8742, 0.28", "86.8123, -101.227, -32.0564, 0.28", "88.9153, -102.772, -32.1836, 0.55", "95.6073, -107.757, -32.3158, 0.28", "104.919, -115.143, -32.4548, 0.28", "107.883, -117.63, -32.4621, 0.55", "112.08, -121.301, -32.3691, 0.83", "122.714, -131.66, -37.1683, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.93534, -13.362, -8.45462, 1.11", "1.80348, -14.1224, -9.00285, 1.11", "1.4846, -16.4314, -10.7357, 0.83", "1.03657, -19.6755, -13.1703, 0.83", "0.0432095, -26.8682, -18.5681, 0.83", "-0.469724, -30.5822, -21.3553, 0.83", "-0.817103, -33.0975, -23.243, 0.83", "-1.34984, -36.4795, -25.9554, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.02466, 6.25501, -9.39462, 0.83", "-5.74305, 8.5195, -8.86381, 0.83", "-7.5304, 11.1903, -7.86897, 0.55", "-9.70762, 14.6043, -6.33514, 0.55", "-11.3647, 17.3342, -5.01981, 0.55", "-11.811, 18.1411, -4.66574, 0.28", "-13.3244, 21.2499, -3.49429, 0.28", "-15.1093, 25.7617, -2.23418, 0.55", "-16.8162, 30.6142, -1.18283, 0.55", "-18.1671, 34.4544, -0.477201, 0.55", "-20.0041, 39.9333, 0.44247, 0.55", "-21.8359, 45.3105, 1.35781, 0.55", "-25.6622, 56.116, 3.09558, 0.55", "-26.8078, 59.3138, 3.61646, 0.55", "-28.9579, 65.4202, 4.77201, 0.55", "-30.4572, 69.73, 5.81924, 0.55", "-32.0978, 74.5529, 7.3359, 0.55", "-33.0165, 77.1671, 8.32418, 0.55", "-34.3533, 81.148, 10.092, 0.55", "-34.8971, 82.9743, 10.8316, 0.55", "-35.9626, 88.1378, 12.4838, 0.55", "-36.4381, 90.9489, 12.9783, 0.55", "-36.8222, 93.9837, 13.2429, 0.28", "-37.0517, 96.0941, 13.2867, 0.55", "-37.5186, 99.972, 12.9013, 0.55", "-37.8531, 103.107, 12.3837, 0.55", "-38.1468, 105.716, 11.5741, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-1.15466, 12.2025, -0.304621, 2.77", "-0.824056, 13.3913, -0.304621, 2.77", "-0.182252, 15.6992, -0.304621, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.62534, 1.29226, -0.954618, 0.83", "8.2995, 2.10893, -1.08329, 0.83", "10.9291, 2.78418, -1.52546, 0.55", "14.0065, 3.5751, -2.14091, 0.55", "16.2886, 4.0529, -2.58215, 0.55", "17.3176, 4.21989, -2.77694, 0.83", "21.2885, 4.7424, -3.48697, 0.55", "25.3325, 5.24003, -4.23947, 0.55", "29.6349, 5.7161, -5.05758, 0.55", "35.152, 6.25599, -6.10742, 0.55", "37.1128, 6.41096, -6.41719, 0.55", "40.6723, 6.66421, -6.87247, 0.55", "42.1689, 6.75011, -7.00167, 0.55", "43.1008, 6.85886, -7.03805, 0.28", "44.0421, 7.0752, -7.0954, 0.28", "45.6004, 7.75743, -7.2496, 0.55", "46.9993, 8.60653, -7.44914, 0.55", "48.1077, 9.42114, -7.64672, 0.55", "49.6092, 10.521, -7.91314, 0.28", "50.131, 10.9215, -7.99845, 0.28", "50.9415, 11.5718, -8.10852, 0.55", "52.7728, 13.0486, -8.30876, 0.28", "54.6991, 14.5727, -8.45076, 0.28", "55.9458, 15.5218, -8.4067, 0.28", "57.3113, 16.5031, -8.2368, 0.28", "59.3886, 17.8431, -7.72655, 0.55", "59.9908, 18.2114, -7.50274, 0.55", "61.3351, 19.0244, -6.88467, 0.28", "64.0043, 20.6837, -5.50617, 0.28", "66.0541, 21.9798, -4.44512, 0.55", "69.0029, 23.8733, -2.96872, 0.55", "70.5482, 24.8864, -2.1551, 0.55", "72.2352, 26.0082, -1.2648, 0.55", "73.2766, 26.7028, -0.733203, 0.55", "75.7241, 28.4505, 0.312065, 0.28", "77.2358, 29.6592, 0.815405, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.85466, -13.3523, 5.15538, 2.77", "-0.944156, -14.499, 5.36774, 2.77", "-1.12342, -16.7958, 5.79312, 1.94", "-1.38274, -20.1184, 6.40847, 1.94", "-1.54242, -22.1642, 6.78736, 1.66", "-1.66784, -23.7711, 7.08498, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.19886, -12.4109, 1.9633, 0.83", "2.36419, -27.3656, 1.9633, 0.83", "3.52951, -42.3202, 1.9633, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.34984, -36.4795, -25.9554, 0.55", "-2.30429, -37.8159, -29.0153, 0.55", "-2.61591, -38.2522, -30.0144, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.34984, -36.4795, -25.9554, 0.55", "-1.09579, -37.6069, -29.8784, 0.55", "-0.888142, -38.2308, -31.7322, 0.55", "-0.676155, -38.8678, -33.6249, 0.55", "-0.469242, -39.4895, -35.4723, 0.55", "-0.327373, -39.9158, -36.7389, 0.28", "-0.251591, -40.1435, -37.4155, 0.55", "0.243876, -41.0936, -39.9018, 0.28", "0.732209, -43.127, -44.5509, 0.28", "0.798075, -45.4917, -49.0598, 0.28", "0.294408, -48.8772, -52.794, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.182252, 15.6992, -0.304621, 1.66", "1.12802, 17.5554, -0.624296, 1.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.182252, 15.6992, -0.304621, 0.55", "1.98671, 19.2982, -2.87058, 0.55", "3.80999, 21.7841, -4.23172, 0.55", "7.69553, 26.3133, -6.41642, 0.55", "8.78674, 27.4833, -6.96619, 0.55", "10.3141, 28.9946, -7.67066, 0.55", "12.0997, 30.6391, -8.48996, 0.55", "15.8441, 33.911, -10.1184, 0.55", "19.6645, 36.8345, -11.4114, 0.55", "22.7116, 38.9415, -12.1676, 0.55", "24.051, 39.7729, -12.5429, 0.55", "28.0369, 42.1323, -13.7452, 0.55", "30.7415, 43.5867, -14.6912, 0.55", "33.4283, 45.008, -15.7692, 0.55", "36.2855, 46.3801, -16.8741, 0.55", "39.7825, 47.9638, -18.2588, 0.55", "42.3922, 49.2377, -19.4089, 0.55", "46.7892, 51.5504, -21.4931, 0.55", "48.8445, 52.7778, -22.5405, 0.28", "51.3637, 54.7254, -23.9014, 0.28", "52.8234, 56.191, -24.6548, 0.55", "55.4033, 59.7997, -25.6687, 0.28", "56.2927, 61.5399, -25.8814, 0.28", "57.325, 64.5294, -26.0825, 0.55", "57.9962, 67.2191, -26.2768, 0.55", "58.6153, 70.2496, -26.5203, 0.55", "59.0988, 72.5626, -26.6898, 0.55", "59.8807, 75.5615, -26.9348, 0.28", "61.4138, 80.7325, -27.601, 0.28", "62.145, 82.9408, -28.05, 0.55", "62.814, 84.9566, -28.5688, 0.55", "63.3689, 86.4636, -29.071, 0.55", "64.4099, 89.2297, -30.0583, 0.55", "72.7537, 96.5874, -32.2552, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.66784, -23.7711, 7.08498, 1.66", "-2.18878, -23.9979, 6.97801, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.66784, -23.7711, 7.08498, 0.55", "-2.88885, -25.3307, 7.93502, 0.55", "-4.69591, -27.7979, 9.00525, 0.55", "-6.59556, -30.4527, 9.96136, 0.55", "-7.86065, -32.206, 10.669, 0.55", "-8.89218, -33.5574, 11.3755, 0.55", "-9.99452, -34.9815, 12.1702, 0.55", "-11.0567, -36.4908, 12.9921, 0.55", "-12.0102, -37.8456, 13.7523, 0.55", "-13.6951, -40.1486, 15.0419, 0.55", "-16.5501, -43.854, 17.263, 0.55", "-17.7188, -45.3699, 18.2828, 0.55", "-19.2917, -47.4645, 19.8428, 0.55", "-20.0456, -48.4249, 20.6046, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.52951, -42.3202, 1.9633, 0.28", "4.69484, -57.2749, 1.9633, 0.28", "5.86017, -72.2296, 1.9633, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.61591, -38.2522, -30.0144, 0.55", "-3.2213, -41.6622, -34.7798, 0.55", "-3.37425, -43.0106, -36.5416, 0.55", "-3.38655, -46.6354, -41.2704, 0.55", "-3.22065, -48.7426, -43.8986, 0.55", "-3.05931, -50.7918, -46.4543, 0.28", "-2.90869, -52.7049, -48.8404, 0.28", "-2.77328, -53.4992, -49.8422, 0.55", "-1.5427, -58.3054, -55.9665, 0.28", "-1.01848, -59.7437, -57.5262, 0.55", "0.47591, -67.7068, -64.845, 0.55", "3.66501, -73.8148, -73.3978, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.61591, -38.2522, -30.0144, 0.55", "-2.97219, -36.9431, -35.1665, 0.55", "-3.42693, -35.2723, -41.7426, 0.55", "-3.87088, -33.6411, -48.1624, 0.28", "-4.08994, -32.8362, -51.3302, 0.55", "-5.66008, -31.0116, -60.8733, 0.55", "-8.76247, -28.8261, -69.9521, 0.55", "-12.458, -26.1312, -78.6591, 0.55", "-14.9844, -23.9178, -87.9072, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.12802, 17.5554, -0.624296, 1.66", "0.960911, 21.1822, -0.750696, 1.66", "0.824204, 24.1491, -0.854098, 1.66", "0.713752, 26.5462, -0.937643, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.12802, 17.5554, -0.624296, 1.11", "0.703615, 18.5142, 3.54552, 1.11", "0.600857, 18.7464, 4.55512, 1.11", "-0.0149804, 20.1377, 10.6057, 0.83", "-0.351705, 20.8984, 13.9141, 0.83", "-1.52826, 23.5565, 25.4737, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-2.18878, -23.9979, 6.97801, 1.66", "-2.22297, -24.5852, 6.97671, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.18878, -23.9979, 6.97801, 0.55", "-3.2536, -27.5989, 9.40375, 0.55", "-4.06506, -30.6788, 11.6929, 0.55", "-4.33728, -31.7102, 12.4923, 0.55", "-5.19814, -34.7977, 14.943, 0.55", "-5.82541, -37.4146, 17.1204, 0.55", "-6.46399, -40.4353, 19.6149, 0.55", "-6.8744, -42.0825, 21.1404, 0.55", "-7.52995, -44.3068, 23.2063, 0.55", "-8.31592, -46.6469, 25.3249, 0.55", "-9.18214, -49.1905, 27.6135, 0.55", "-9.69994, -50.5296, 28.8302, 0.55", "-10.9222, -53.3462, 31.5593, 0.55", "-11.8488, -55.6206, 33.7795, 0.55", "-12.2952, -56.7785, 34.9719, 0.55", "-12.8949, -58.2128, 36.556, 0.55", "-13.9318, -60.3199, 38.937, 0.55", "-15.2645, -62.8056, 41.923, 0.55", "-16.9216, -65.8543, 45.6272, 0.55", "-18.5198, -68.525, 49.0444, 0.55", "-19.5899, -70.2149, 51.2579, 0.55", "-21.3559, -72.7899, 54.634, 0.55", "-23.1003, -75.0757, 57.6423, 0.55", "-25.0808, -77.2862, 60.6086, 0.55", "-27.2902, -79.3433, 63.61, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-20.0456, -48.4249, 20.6046, 0.55", "-25.1011, -48.8639, 23.2614, 0.55", "-27.3245, -49.0075, 24.3101, 0.55", "-30.4652, -49.2719, 25.6614, 0.55", "-34.0675, -49.6539, 27.1148, 0.55", "-37.1235, -49.9718, 28.2645, 0.55", "-42.1654, -50.578, 30.0744, 0.55", "-47.0988, -51.2192, 31.7463, 0.55", "-50.8039, -51.7645, 33.158, 0.55", "-53.7219, -52.2049, 34.2764, 0.55", "-58.2734, -52.9631, 35.9879, 0.55", "-60.8685, -53.412, 37.0242, 0.28", "-64.5961, -54.3153, 38.5813, 0.55", "-68.9032, -55.3348, 40.6759, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-20.0456, -48.4249, 20.6046, 0.55", "-20.5785, -50.1861, 24.5928, 0.55", "-21.5413, -54.3633, 33.3871, 0.55", "-22.2163, -56.6329, 38.0763, 0.55", "-23.0591, -59.196, 43.354, 0.55", "-23.8664, -61.6581, 48.5607, 0.55", "-24.9491, -64.9603, 55.5439, 0.55", "-26.2955, -68.5647, 63.0584, 0.55", "-27.6235, -72.4357, 70.4744, 0.55", "-28.511, -75.235, 75.8946, 0.55", "-29.7765, -78.3008, 82.2508, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.713752, 26.5462, -0.937643, 1.11", "-1.19889, 29.6251, -0.952023, 1.11", "-2.57431, 31.8392, -0.962368, 1.11", "-4.0595, 34.23, -0.973528, 0.83", "-4.99028, 35.7283, -0.980528, 0.83", "-6.76544, 38.5858, -0.993878, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.713752, 26.5462, -0.937643, 0.55", "1.48915, 28.881, -4.09372, 0.55", "1.93966, 29.9658, -5.36057, 0.55", "4.04128, 34.1813, -9.8266, 0.55", "5.27634, 36.5417, -12.0437, 0.55", "6.55933, 38.8186, -14.0161, 0.55", "7.36513, 40.1588, -15.1203, 0.55", "8.87282, 42.1954, -16.52, 0.55", "10.2881, 43.8124, -17.5065, 0.55", "11.8583, 45.4331, -18.4757, 0.55", "13.347, 46.9913, -19.4979, 0.55", "14.2604, 47.988, -20.1757, 0.55", "17.8021, 51.9242, -23.1116, 0.55", "19.7754, 54.0896, -24.871, 0.55", "22.3612, 56.872, -27.2702, 0.55", "23.758, 58.2759, -28.5921, 0.55", "24.9355, 59.3695, -29.6397, 0.55", "26.9197, 61.1711, -31.5971, 0.83", "29.1579, 63.2772, -34.1249, 0.55", "30.6629, 64.7813, -35.8526, 0.55", "31.5625, 65.6247, -36.7878, 0.55", "33.5771, 67.4027, -38.8982, 0.55", "37.3674, 70.5313, -42.7985, 0.55", "39.7452, 72.6396, -45.2156, 0.55", "40.9508, 73.8462, -46.4863, 0.83", "42.2433, 75.2285, -47.8376, 0.55", "43.3561, 76.3643, -48.7814, 0.55", "44.4333, 77.2714, -49.37, 0.55", "46.6706, 78.7203, -49.995, 0.55", "48.3148, 79.6799, -50.3418, 0.55", "49.0893, 80.1561, -50.486, 0.55", "54.2397, 83.9305, -51.062, 0.55", "57.3468, 86.5735, -51.2278, 0.55", "58.5608, 87.6603, -51.2646, 0.55", "59.6516, 88.719, -51.2142, 0.55", "60.9756, 90.2585, -51.1367, 0.55", "63.8469, 94.3979, -51.0267, 0.55", "64.5182, 95.5537, -50.9806, 0.55", "65.7746, 97.7958, -50.9721, 0.55", "67.719, 101.204, -50.9157, 0.55", "69.4128, 103.958, -50.9072, 0.55", "70.8742, 105.978, -50.936, 0.55", "73.5207, 109.133, -51.179, 0.55", "74.838, 110.565, -51.3549, 0.55", "76.2223, 112.025, -51.5793, 0.28", "77.1907, 112.969, -51.7223, 0.83", "80.3526, 115.977, -52.0124, 0.55", "83.3739, 119.031, -52.4059, 0.55", "84.8421, 120.567, -52.6775, 0.28", "85.7934, 121.532, -52.8448, 0.55", "88.3638, 124.01, -53.3004, 0.28", "89.9046, 125.58, -53.549, 0.28", "91.3869, 127.497, -53.7534, 0.28", "98.1295, 135.928, -55.4944, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.52826, 23.5565, 25.4737, 0.83", "-2.45143, 25.7477, 24.8763, 0.83", "-2.97701, 27.6305, 24.7988, 0.83", "-3.9943, 31.6541, 25.262, 0.55", "-4.50627, 34.0515, 26.134, 0.55", "-4.71029, 35.2507, 26.8224, 0.55", "-5.32087, 38.6806, 29.4723, 0.55", "-5.78522, 41.2574, 32.2857, 0.55", "-6.20523, 43.6886, 35.4267, 0.55", "-6.85833, 47.6856, 41.2679, 0.55", "-7.31033, 50.6748, 45.9707, 0.55", "-7.75893, 53.2449, 50.3557, 0.55", "-8.27576, 55.4854, 54.6363, 0.55", "-8.51394, 56.3353, 56.4791, 0.55", "-8.83513, 57.6112, 59.6541, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.52826, 23.5565, 25.4737, 0.55", "-1.3414, 24.462, 27.1894, 0.55", "-0.634711, 26.6852, 31.1377, 0.55", "0.243598, 29.5503, 35.8225, 0.55", "1.01768, 32.2168, 40.0068, 0.55", "1.56968, 33.9747, 42.6254, 0.55", "1.99175, 35.1712, 44.4097, 0.55", "3.10317, 37.8619, 48.3486, 0.55", "4.05982, 39.7967, 51.0781, 0.55", "5.57927, 42.5018, 54.9725, 0.55", "6.35921, 43.7701, 56.9268, 0.55", "7.61462, 45.7103, 60.0098, 0.55", "9.11143, 47.9526, 63.7505, 0.55", "11.0282, 50.7017, 68.6714, 0.55", "12.9166, 53.0262, 73.153, 0.55", "14.6858, 55.123, 77.3762, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.22297, -24.5852, 6.97671, 1.11", "-2.5987, -28.6774, 4.12603, 1.11", "-2.95542, -32.5625, 1.41961, 1.11", "-3.16789, -34.8765, -0.192399, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.22297, -24.5852, 6.97671, 0.55", "0.274737, -26.268, 6.83596, 0.55", "1.83231, -27.2727, 6.57636, 0.55", "3.24818, -28.2943, 6.32296, 0.55", "3.82224, -28.6897, 6.25507, 0.55", "5.94922, -30.1768, 6.02005, 0.55", "7.54474, -31.3406, 5.9476, 0.55", "9.97712, -33.2345, 6.0748, 0.55", "11.9636, -34.8869, 6.24215, 0.55", "14.2723, -36.846, 6.62336, 0.55", "15.9277, -38.2248, 7.02904, 0.55", "20.0964, -41.7972, 8.77254, 0.55", "21.2782, -42.8753, 9.44955, 0.55", "21.8712, -43.4375, 9.88675, 0.55", "23.7872, -45.2708, 11.4835, 0.55", "24.5839, -46.1171, 12.298, 0.55", "27.0456, -48.6152, 15.1971, 0.55", "27.7596, -49.3382, 16.0933, 0.55", "28.5616, -50.0778, 16.9925, 0.55", "29.4816, -50.8925, 17.9658, 0.55", "31.8233, -52.9133, 20.3438, 0.55", "34.0518, -54.7979, 22.4946, 0.55", "35.3101, -55.7548, 23.4987, 0.55", "37.4709, -57.3314, 25.0809, 0.55", "37.9729, -57.6936, 25.41, 0.55", "40.2046, -59.2804, 26.6382, 0.55", "41.5257, -60.2098, 27.0899, 0.83", "43.3972, -61.682, 27.6479, 0.28", "44.4509, -62.5256, 27.9759, 0.55", "45.6806, -63.4818, 28.0831, 0.28", "47.4009, -64.7557, 28.0245, 0.83", "49.4908, -66.3068, 27.8024, 0.28", "52.1011, -68.2268, 27.5026, 0.28", "53.0408, -68.9412, 27.4029, 0.55", "58.7513, -73.1513, 26.4096, 0.28", "59.44, -73.5893, 26.2376, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-29.7765, -78.3008, 82.2508, 0.55", "-30.9599, -79.9894, 83.8089, 0.55", "-32.3221, -81.7703, 85.3753, 0.55", "-34.2641, -84.3092, 87.6085, 0.55", "-35.9914, -86.5676, 89.595, 0.55", "-37.7389, -88.8521, 91.6045, 0.55", "-38.9642, -90.454, 93.0135, 0.28", "-39.7015, -91.3115, 93.7983, 0.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-29.7765, -78.3008, 82.2508, 0.55", "-30.1359, -78.8325, 83.8156, 0.55", "-30.7348, -79.7184, 86.4231, 0.55", "-31.1721, -80.3652, 88.3266, 0.55", "-31.5773, -80.9647, 90.0909, 0.55", "-32.1946, -81.8777, 92.7782, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-6.76544, 38.5858, -0.993878, 0.55", "-8.04554, 39.2841, -0.250187, 0.55", "-13.5557, 42.4639, 2.54321, 0.55", "-15.7229, 43.7253, 3.57583, 0.55", "-18.3094, 45.1977, 4.51378, 0.55", "-21.1332, 46.6799, 5.41454, 0.55", "-23.7016, 47.9626, 6.22303, 0.55", "-24.8587, 48.517, 6.536, 0.55", "-26.9185, 49.5252, 6.97482, 0.55", "-30.9632, 51.5321, 7.86799, 0.55", "-34.5757, 53.4082, 8.93861, 0.55", "-38.079, 55.2679, 10.0695, 0.55", "-39.7548, 56.3079, 10.7256, 0.55", "-40.8579, 57.1978, 11.1884, 0.55", "-42.4769, 59.0212, 11.9315, 0.55", "-44.153, 61.6082, 12.8413, 0.55", "-46.2459, 65.993, 13.8471, 0.55", "-47.6887, 69.74, 14.4667, 0.55", "-49.1877, 74.6311, 15.3104, 0.55", "-49.9877, 77.7797, 15.9178, 0.28", "-50.1519, 78.6503, 16.0945, 0.28", "-50.3822, 80.0553, 16.387, 0.55", "-50.5009, 81.929, 16.9942, 0.55", "-50.5895, 84.8714, 18.0028, 0.55", "-50.511, 86.3243, 18.7237, 0.28", "-50.4926, 87.9582, 19.5758, 0.55", "-50.6071, 90.2582, 20.7471, 0.28", "-50.9636, 93.0117, 22.0844, 0.55", "-51.3338, 95.3624, 23.1689, 0.55", "-51.9014, 97.8556, 24.1854, 0.28", "-52.65, 100.977, 25.4787, 0.28", "-52.9066, 101.812, 25.8374, 0.28", "-53.6337, 103.698, 26.4733, 0.55", "-57.4429, 110.523, 29.2695, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-6.76544, 38.5858, -0.993878, 0.55", "-7.11349, 40.1612, -1.9959, 0.55", "-7.31209, 40.9847, -2.46633, 0.55", "-7.83672, 42.8086, -3.40169, 0.55", "-8.62262, 45.4156, -4.58125, 0.55", "-9.36912, 48.2826, -5.77957, 0.55", "-9.78188, 49.8421, -6.37633, 0.55", "-10.2999, 51.5146, -6.93625, 0.55", "-10.7123, 52.7141, -7.27262, 0.55", "-11.1913, 54.1187, -7.64795, 0.55", "-11.8286, 56.1231, -8.10355, 0.55", "-12.5068, 58.1489, -8.52779, 0.55", "-12.9825, 59.5063, -8.80766, 0.55", "-13.5707, 61.2674, -9.17514, 0.55", "-14.8108, 65.8133, -9.95837, 0.55", "-15.2021, 67.7267, -10.2367, 0.55", "-15.466, 69.3656, -10.4408, 0.55", "-15.704, 71.5742, -10.6672, 0.55", "-15.7549, 72.3475, -10.7297, 0.55", "-15.7465, 77.7785, -10.8728, 0.55", "-15.6507, 80.8605, -10.8423, 0.55", "-15.4985, 83.5875, -10.8579, 0.55", "-15.3544, 85.4325, -10.922, 0.55", "-15.0931, 87.5837, -10.9743, 0.55", "-14.6608, 90.4776, -11.0082, 0.28", "-14.3126, 92.5292, -10.9963, 0.28", "-13.9514, 94.5387, -10.9249, 0.55", "-12.8184, 99.819, -10.5913, 0.55", "-12.1854, 102.66, -10.4006, 0.28", "-11.8635, 104.193, -10.2904, 0.55", "-11.542, 105.839, -10.1908, 0.55", "-11.2668, 107.336, -10.0932, 0.55", "-10.9708, 109.287, -10.0269, 0.55", "-10.5633, 111.636, -10.0109, 0.55", "-10.3003, 113.346, -10.1188, 0.28", "-9.85887, 115.901, -10.2647, 0.55", "-9.43282, 118.227, -10.3955, 0.28", "-9.04016, 120.312, -10.5282, 0.55", "-8.36707, 123.854, -10.7863, 0.55", "-7.89907, 126.293, -10.9345, 0.55", "-6.65534, 132.66, -11.211, 0.28", "-6.21545, 134.811, -11.2449, 0.55", "-5.07118, 142.379, -12.64, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.83513, 57.6112, 59.6541, 0.55", "-10.1506, 58.0591, 63.8815, 0.55", "-10.6052, 58.2139, 65.3422, 0.55", "-11.7738, 58.6119, 69.0975, 0.55", "-12.8563, 58.9804, 72.5758, 0.55", "-13.5014, 59.2001, 74.6491, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.83513, 57.6112, 59.6541, 0.55", "-9.03111, 58.626, 59.717, 0.55", "-9.26503, 59.9423, 59.8344, 0.55", "-9.94743, 64.0605, 60.334, 0.55", "-10.79, 68.849, 61.1318, 0.55", "-11.3323, 71.8173, 61.6798, 0.55", "-12.3287, 76.9552, 62.662, 0.55", "-13.2004, 81.0874, 63.5922, 0.55", "-13.8719, 83.7286, 64.3238, 0.55", "-14.9596, 87.2638, 65.5514, 0.55", "-15.5411, 88.7412, 66.1407, 0.55", "-16.2293, 90.1202, 66.8104, 0.55", "-18.0664, 92.9605, 68.3711, 0.55", "-19.7296, 95.0082, 69.4989, 0.55", "-21.657, 96.9362, 70.6646, 0.55", "-23.905, 99.0135, 71.9645, 0.55", "-26.2931, 101.084, 73.327, 0.55", "-30.093, 104.179, 75.4112, 0.28", "-32.9452, 106.311, 76.7965, 0.28", "-35.5423, 108.206, 77.983, 0.28" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.16789, -34.8765, -0.192399, 1.11", "-2.57217, -37.3808, -0.506647, 1.11", "-1.88243, -40.2804, -0.87049, 1.11", "-1.0753, -43.6735, -1.29626, 1.11", "-0.415177, -46.4486, -1.64448, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.16789, -34.8765, -0.192399, 0.55", "-5.94538, -37.0369, -0.879944, 0.55", "-8.73386, -39.5285, -1.56029, 0.55", "-11.1284, -41.9492, -2.62572, 0.55", "-13.4002, -44.3969, -3.73399, 0.55", "-15.9603, -47.0912, -4.8224, 0.55", "-18.593, -49.8757, -5.88446, 0.55", "-22.0959, -53.9613, -7.27964, 0.55", "-25.8789, -58.8693, -8.88913, 0.55", "-27.5249, -60.9498, -9.58083, 0.55", "-30.9879, -65.1776, -11.0915, 0.55", "-32.3158, -66.6772, -11.6675, 0.55", "-33.7483, -68.1322, -12.2301, 0.55", "-37.2492, -71.4957, -13.5387, 0.55", "-43.0335, -76.8085, -15.694, 0.55", "-45.4902, -78.994, -16.8412, 0.55", "-47.8434, -81.0748, -18.0884, 0.55", "-49.4901, -82.4236, -18.9363, 0.55", "-51.1187, -83.6279, -19.7636, 0.28", "-53.2294, -85.0007, -20.7845, 0.83", "-54.1411, -85.5424, -21.4622, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.415177, -46.4486, -1.64448, 1.11", "-0.281985, -48.4995, -2.02565, 1.11", "-0.00569623, -52.7535, -2.81634, 0.83", "0.194763, -55.84, -3.39001, 0.83", "0.364271, -58.4501, -3.87511, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.415177, -46.4486, -1.64448, 0.55", "-2.83826, -50.4362, -1.35038, 0.55", "-4.12427, -52.9548, -1.19229, 0.55", "-5.95326, -57.2462, -0.969438, 0.55", "-7.79388, -62.0121, -0.809206, 0.55", "-9.45524, -66.1664, -0.537448, 0.55", "-10.4382, -68.6245, -0.37665, 0.55", "-11.2768, -71.0853, -0.335852, 0.55", "-12.162, -74.062, -0.211149, 0.55", "-12.4672, -75.3136, -0.131509, 0.55", "-13.0853, -80.7659, 0.189328, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-54.1411, -85.5424, -21.4622, 0.55", "-54.6751, -86.1505, -23.6635, 0.55", "-54.9517, -86.5094, -24.7485, 0.55", "-56.0213, -88.0093, -30.021, 0.55", "-56.5148, -88.6276, -32.3811, 0.28", "-56.7649, -88.9411, -33.5775, 0.28", "-57.113, -89.3773, -35.2426, 0.55", "-57.409, -89.8939, -37.1573, 0.55", "-58.2021, -91.3966, -42.7448, 0.28", "-58.4293, -91.6857, -43.8971, 0.83", "-58.4893, -94.7745, -51.7852, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-54.1411, -85.5424, -21.4622, 0.28", "-54.5254, -86.3221, -23.9216, 0.28", "-54.6848, -86.6197, -24.9673, 0.55", "-56.3204, -89.6743, -35.6978, 0.28", "-56.4207, -89.8615, -36.3554, 0.55", "-56.8741, -90.7084, -39.3305, 0.28", "-57.0554, -91.047, -40.52, 0.55", "-57.957, -93.2302, -49.1887, 0.28", "-57.9762, -96.9715, -59.4919, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.364271, -58.4501, -3.87511, 0.83", "0.147423, -59.8829, -4.08334, 0.83", "-0.084954, -61.4183, -4.30648, 0.83", "-0.485966, -64.0678, -4.69156, 0.83", "-0.718663, -65.6053, -4.91501, 0.83", "-1.03994, -67.7281, -5.22352, 0.83", "-1.26686, -69.2274, -5.44143, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.364271, -58.4501, -3.87511, 0.55", "0.924726, -59.3895, -3.64136, 0.55", "1.52165, -60.4444, -3.47063, 0.55", "2.42811, -62.4088, -3.02587, 0.55", "3.55928, -64.685, -2.46203, 0.55", "4.00985, -65.6214, -2.23139, 0.55", "4.58784, -66.7878, -1.94231, 0.55", "5.6016, -68.7538, -1.45753, 0.55", "7.19898, -71.6824, -0.798795, 0.55", "9.11386, -74.8871, -0.239713, 0.55", "9.63745, -75.716, -0.153662, 0.55", "10.2908, -76.6649, -0.0775251, 0.55", "12.0951, -79.1953, 0.0488036, 0.55", "14.2185, -82.0206, 0.0932422, 0.55", "15.7207, -83.8369, -0.00227262, 0.28", "16.2946, -84.5544, -0.0473325, 0.28", "17.0378, -85.4594, -0.0827551, 0.28", "17.7539, -86.2943, -0.0818151, 0.28", "19.0035, -87.7128, 0.0310104, 0.55", "20.1265, -88.8898, 0.249157, 0.55", "21.2569, -90.0739, 0.540965, 0.55", "22.8795, -91.7897, 0.973008, 0.55", "24.819, -93.938, 1.60969, 0.55", "25.9197, -95.1387, 1.98638, 0.28", "27.1509, -96.5378, 2.44413, 0.28", "27.619, -97.0802, 2.63335, 0.28", "28.5672, -98.1329, 3.0475, 0.55", "29.951, -100.02, 3.82973, 0.28", "32.6457, -106.032, 3.65779, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.0853, -80.7659, 0.189328, 0.55", "-14.1567, -82.6678, 0.523917, 0.55", "-15.8686, -85.7066, 1.05853, 0.55", "-17.31, -88.2652, 1.50867, 0.28", "-19.1234, -91.4842, 2.07499, 0.55", "-19.7248, -92.5518, 2.2628, 0.28" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.0853, -80.7659, 0.189328, 0.55", "-14.7614, -83.3801, 0.679752, 0.55", "-15.6773, -84.4741, 0.997398, 0.55", "-17.6648, -86.5094, 1.75231, 0.55", "-19.0692, -87.775, 2.3718, 0.55", "-20.4407, -88.9642, 2.99638, 0.55", "-23.1546, -91.3949, 4.31712, 0.55", "-25.3588, -93.3168, 5.31436, 0.55", "-26.9135, -94.5482, 6.1354, 0.55", "-29.1339, -96.17, 7.44822, 0.28", "-30.1076, -96.8424, 8.00332, 0.55", "-31.4174, -97.6995, 8.69479, 0.28", "-33.0473, -98.8488, 9.52852, 0.55", "-36.3949, -101.276, 11.1141, 0.28", "-37.1746, -101.828, 11.4301, 0.55", "-38.853, -102.874, 11.9206, 0.28", "-40.2303, -103.497, 12.2975, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.26686, -69.2274, -5.44143, 0.83", "-1.69117, -72.8697, -5.95856, 0.83", "-2.14959, -76.8047, -6.51726, 0.83", "-2.56532, -80.3733, -7.02392, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.26686, -69.2274, -5.44143, 0.55", "-2.1685, -70.1334, -6.81646, 0.55", "-3.15014, -71.0255, -8.50805, 0.55", "-4.64682, -72.381, -11.0089, 0.55", "-5.92772, -73.5228, -13.0413, 1.38", "-6.36265, -73.8882, -13.6955, 1.38", "-8.08433, -75.3272, -16.3314, 0.55", "-8.95878, -76.1616, -18.0243, 0.55", "-9.70161, -77.0754, -19.9785, 0.55", "-9.95941, -77.4369, -20.718, 0.55", "-10.2265, -77.8142, -21.4624, 0.55", "-11.3209, -79.4811, -24.3799, 0.55", "-12.4741, -81.5372, -27.3911, 0.55", "-13.577, -83.792, -30.3849, 0.55", "-14.5089, -85.6267, -32.6894, 0.55", "-15.294, -87.3061, -34.5076, 0.28", "-15.8811, -88.7157, -36.0035, 0.55", "-16.6533, -90.5637, -37.8574, 0.55", "-18.0142, -93.7138, -40.8621, 0.55", "-19.1254, -96.4331, -43.378, 0.55", "-20.1293, -99.2454, -46.0618, 0.55", "-21.7468, -104.328, -51.1424, 0.55", "-22.097, -105.436, -52.3813, 0.55", "-24.2924, -109.559, -59.6925, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.56532, -80.3733, -7.02392, 0.83", "-2.38636, -84.1808, -4.71545, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.56532, -80.3733, -7.02392, 0.55", "-3.9754, -83.4128, -9.77624, 0.55", "-4.34955, -84.1519, -10.3502, 0.28", "-6.60616, -88.7727, -14.2926, 0.28", "-7.38614, -90.5595, -15.9517, 0.28", "-7.71012, -91.3831, -16.7136, 0.28", "-8.32272, -93.3858, -18.6319, 0.28", "-8.85802, -95.5802, -20.6255, 0.55", "-9.62984, -100.017, -24.5194, 0.55", "-9.9303, -102.742, -26.939, 0.28", "-9.99932, -104.008, -28.1189, 0.55", "-9.99372, -108.063, -32.0171, 0.28", "-9.90984, -109.305, -33.3005, 0.55", "-9.5667, -111.303, -35.2917, 0.55", "-12.5958, -119.263, -40.8864, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.38636, -84.1808, -4.71545, 0.83", "-1.64876, -89.8977, -7.28864, 0.83", "-1.45927, -92.233, -8.17823, 0.83", "-1.47194, -97.4629, -10.0177, 0.55", "-1.7533, -101.023, -11.0575, 0.55", "-1.97316, -102.972, -11.5314, 0.55", "-2.45467, -107.004, -12.3496, 0.55", "-3.04656, -110.388, -12.6115, 0.55", "-3.91549, -114.257, -12.6997, 0.55", "-4.70418, -117.518, -12.6594, 0.55", "-5.10231, -119.392, -12.536, 0.55", "-5.35412, -121.021, -12.4331, 0.55", "-5.50399, -122.929, -12.3103, 0.55", "-5.58608, -125.579, -12.2031, 0.55", "-5.34636, -128.897, -12.2596, 0.55", "-5.10935, -131.872, -12.568, 0.55", "-5.06162, -134.162, -12.7756, 0.55", "-5.0434, -135.637, -12.8473, 0.55", "-5.07242, -137.972, -12.8828, 0.55", "-5.13535, -141.437, -12.7887, 0.55", "-5.07536, -145.718, -12.684, 0.55", "-4.92396, -149.58, -12.67, 0.55", "-4.60623, -153.538, -12.6466, 0.55", "-4.19252, -157.49, -12.8187, 0.55", "-3.82236, -160.113, -13.0376, 0.55", "-3.08755, -164.621, -13.5079, 0.55", "-2.24986, -168.833, -14.232, 0.55", "-1.36323, -172.597, -15.2061, 0.55", "0.108762, -178.746, -17.0417, 0.55", "0.775212, -181.748, -17.8944, 0.55", "1.34422, -184.911, -18.7253, 0.55", "1.80648, -188.154, -19.4327, 0.55", "2.47076, -192.858, -20.5184, 0.55", "2.6674, -195.798, -21.0443, 0.55", "2.88024, -201.154, -21.7183, 0.55", "2.95207, -203.547, -21.9486, 0.55", "3.02804, -206.342, -22.1488, 0.55", "3.34427, -212.163, -22.524, 0.55", "4.11767, -221.181, -23.2767, 0.55", "4.74761, -225.764, -23.8469, 0.55", "5.19228, -228.271, -24.2657, 0.55", "5.57453, -230.517, -24.6791, 0.55", "6.49822, -235.568, -25.5836, 0.55", "7.0457, -238.281, -25.9783, 0.55", "7.56288, -240.528, -26.3664, 0.55", "8.24415, -243.875, -26.8764, 0.55", "8.87386, -247.761, -27.3582, 0.55", "9.31092, -250.739, -27.747, 0.55", "9.7918, -255.031, -28.2702, 0.55", "9.88065, -255.759, -28.361, 0.55", "10.8573, -262.189, -29.2265, 0.55", "12.1097, -269.316, -30.2076, 0.55", "12.894, -274.02, -30.7049, 0.55", "13.3174, -276.64, -30.9791, 0.28", "13.5436, -277.935, -31.0888, 0.28", "13.8463, -279.579, -31.2166, 0.55", "14.4839, -283.204, -31.5289, 0.28", "15.4397, -287.865, -32.0663, 0.28", "16.1497, -291.919, -32.5251, 0.28", "16.32, -292.881, -32.6442, 0.55", "16.9595, -296.799, -33.3492, 0.28", "17.5894, -301.518, -34.363, 0.28", "17.899, -304.82, -35.0023, 0.28", "18.2798, -311.014, -36.0236, 0.28", "18.2249, -314.571, -36.3778, 0.55", "17.8135, -321.48, -36.8044, 0.28", "17.2641, -326.576, -36.9134, 0.28", "16.6196, -331.539, -36.879, 0.55", "16.2172, -334.23, -36.8396, 0.28", "14.7842, -342.995, -36.5927, 0.28", "14.2806, -346.268, -36.5873, 0.55", "13.4791, -351.836, -36.4783, 0.28", "13.228, -354.158, -36.4839, 0.83", "12.7872, -359.741, -36.6798, 0.28", "12.7145, -361.425, -36.7284, 0.55", "12.8283, -368.842, -36.8072, 0.28", "12.946, -373.088, -36.8525, 0.55", "13.1334, -376.858, -36.8767, 0.28", "13.2184, -378.213, -36.8787, 0.55", "13.7058, -383.555, -36.7905, 0.28", "13.8539, -384.951, -36.7196, 0.83", "13.5855, -396.713, -38.6291, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.38636, -84.1808, -4.71545, 0.55", "-2.00093, -86.8587, -4.53071, 0.55", "-1.62926, -89.6529, -4.07182, 0.55", "-1.4367, -92.361, -3.57488, 0.55", "-1.25193, -95.9156, -2.89682, 0.55", "-1.03897, -99.1518, -2.04118, 0.55", "-0.616716, -104.633, -0.368997, 0.55", "-0.44503, -106.97, 0.667895, 0.55", "-0.131345, -109.52, 2.05806, 0.55", "-8.21827E-4, -110.398, 2.62487, 0.55", "0.594406, -114.261, 5.49249, 0.55", "1.03516, -116.573, 7.35597, 0.55", "1.65914, -120.106, 10.284, 0.55", "2.03735, -122.328, 12.168, 0.55", "2.59788, -126.03, 15.4142, 0.55", "2.83694, -129.145, 18.2037, 0.55", "2.83772, -130.944, 19.9047, 0.55", "2.66327, -133.655, 22.6491, 0.55", "2.36989, -136.525, 25.5268, 0.55", "2.03877, -139.16, 28.1692, 0.55", "1.65144, -141.954, 30.8833, 0.55", "1.16975, -145.903, 34.5195, 0.55", "1.00818, -147.536, 35.9409, 0.28", "0.938339, -149.41, 37.3213, 0.55", "1.01512, -151.657, 38.3032, 0.28", "1.14418, -152.669, 38.5117, 0.55", "1.33758, -153.561, 38.4849, 0.28", "1.63991, -154.725, 38.2131, 0.83", "3.05173, -159.509, 36.9022, 0.28", "3.31016, -160.506, 36.6629, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_LBC_d031f0be22_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999995275182907)
    connect dend_42(0), soma_0(0.4999995275182907)
    connect dend_41(0), soma_0(0.4999995275182907)
    connect dend_28(0), soma_0(0.4999995275182907)
    connect dend_27(0), soma_0(0.4999995275182907)
    connect dend_0(0), soma_0(0.4999995275182907)
    connect axon_0(0), soma_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.701302, 11.9739, -1.24376, 2.36127 ) }
    soma_0 { pt3dadd( -0.606294, 10.7546, -1.0834, 3.83931 ) }
    soma_0 { pt3dadd( -0.511286, 9.53541, -0.92305, 4.78417 ) }
    soma_0 { pt3dadd( -0.416278, 8.31617, -0.762698, 6.14661 ) }
    soma_0 { pt3dadd( -0.32127, 7.09693, -0.602345, 7.73722 ) }
    soma_0 { pt3dadd( -0.226261, 5.8777, -0.441992, 8.31396 ) }
    soma_0 { pt3dadd( -0.131253, 4.65846, -0.281639, 8.14547 ) }
    soma_0 { pt3dadd( -0.0362448, 3.43922, -0.121287, 7.98262 ) }
    soma_0 { pt3dadd( 0.0587634, 2.21999, 0.0390659, 7.82998 ) }
    soma_0 { pt3dadd( 0.153772, 1.00075, 0.199419, 7.57671 ) }
    soma_0 { pt3dadd( 0.24878, -0.218488, 0.359771, 7.56649 ) }
    soma_0 { pt3dadd( 0.343788, -1.43772, 0.520124, 7.52579 ) }
    soma_0 { pt3dadd( 0.438796, -2.65696, 0.680477, 7.17937 ) }
    soma_0 { pt3dadd( 0.533805, -3.8762, 0.840829, 6.69186 ) }
    soma_0 { pt3dadd( 0.628813, -5.09544, 1.00118, 6.36625 ) }
    soma_0 { pt3dadd( 0.723821, -6.31467, 1.16153, 6.05036 ) }
    soma_0 { pt3dadd( 0.818829, -7.53391, 1.32189, 5.80715 ) }
    soma_0 { pt3dadd( 0.913837, -8.75315, 1.48224, 5.61319 ) }
    soma_0 { pt3dadd( 1.00885, -9.97238, 1.64259, 5.41924 ) }
    soma_0 { pt3dadd( 1.10385, -11.1916, 1.80295, 4.79633 ) }
    soma_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 2.79741 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 3.06534, -11.0708, -6.34462, 0.83 ) }
    dend_47 { pt3dadd( 4.82205, -13.0014, -6.22605, 0.83 ) }
    dend_47 { pt3dadd( 5.76463, -13.9956, -6.10713, 0.83 ) }
    dend_47 { pt3dadd( 8.1651, -16.7455, -5.75598, 0.55 ) }
    dend_47 { pt3dadd( 9.88777, -18.8359, -5.50657, 0.55 ) }
    dend_47 { pt3dadd( 11.5564, -20.8383, -5.27266, 0.83 ) }
    dend_47 { pt3dadd( 16.6151, -26.9606, -4.69509, 0.55 ) }
    dend_47 { pt3dadd( 19.2299, -30.2247, -4.56407, 0.55 ) }
    dend_47 { pt3dadd( 21.0644, -32.615, -4.62222, 0.55 ) }
    dend_47 { pt3dadd( 27.7068, -41.6806, -5.27831, 0.55 ) }
    dend_47 { pt3dadd( 29.0263, -43.4196, -5.46891, 0.55 ) }
    dend_47 { pt3dadd( 31.7481, -46.9222, -6.07838, 0.55 ) }
    dend_47 { pt3dadd( 36.5802, -52.8602, -7.70974, 0.55 ) }
    dend_47 { pt3dadd( 39.5019, -56.3976, -8.99866, 0.55 ) }
    dend_47 { pt3dadd( 42.1589, -59.4588, -10.3201, 0.55 ) }
    dend_47 { pt3dadd( 45.3456, -63.1397, -12.1465, 0.55 ) }
    dend_47 { pt3dadd( 49.4469, -67.8982, -14.4838, 0.55 ) }
    dend_47 { pt3dadd( 52.6772, -71.5587, -16.2444, 0.55 ) }
    dend_47 { pt3dadd( 56.2723, -75.535, -18.3617, 0.55 ) }
    dend_47 { pt3dadd( 57.8057, -77.1814, -19.3012, 0.55 ) }
    dend_47 { pt3dadd( 59.5572, -79.1384, -20.5579, 0.28 ) }
    dend_47 { pt3dadd( 61.1867, -80.9857, -21.7967, 0.55 ) }
    dend_47 { pt3dadd( 64.0724, -83.8857, -23.6675, 0.28 ) }
    dend_47 { pt3dadd( 68.2296, -87.8438, -26.1525, 0.28 ) }
    dend_47 { pt3dadd( 69.6283, -88.978, -26.9183, 0.55 ) }
    dend_47 { pt3dadd( 74.4061, -92.3553, -29.3164, 0.28 ) }
    dend_47 { pt3dadd( 76.7712, -93.9809, -30.2745, 0.28 ) }
    dend_47 { pt3dadd( 81.5923, -97.4236, -31.4903, 0.55 ) }
    dend_47 { pt3dadd( 84.6163, -99.6296, -31.8742, 0.28 ) }
    dend_47 { pt3dadd( 86.8123, -101.227, -32.0564, 0.28 ) }
    dend_47 { pt3dadd( 88.9153, -102.772, -32.1836, 0.55 ) }
    dend_47 { pt3dadd( 95.6073, -107.757, -32.3158, 0.28 ) }
    dend_47 { pt3dadd( 104.919, -115.143, -32.4548, 0.28 ) }
    dend_47 { pt3dadd( 107.883, -117.63, -32.4621, 0.55 ) }
    dend_47 { pt3dadd( 112.08, -121.301, -32.3691, 0.83 ) }
    dend_47 { pt3dadd( 122.714, -131.66, -37.1683, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 57/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.93534, -13.362, -8.45462, 1.11 ) }
    dend_42 { pt3dadd( 1.80348, -14.1224, -9.00285, 1.11 ) }
    dend_42 { pt3dadd( 1.4846, -16.4314, -10.7357, 0.83 ) }
    dend_42 { pt3dadd( 1.03657, -19.6755, -13.1703, 0.83 ) }
    dend_42 { pt3dadd( 0.0432095, -26.8682, -18.5681, 0.83 ) }
    dend_42 { pt3dadd( -0.469724, -30.5822, -21.3553, 0.83 ) }
    dend_42 { pt3dadd( -0.817103, -33.0975, -23.243, 0.83 ) }
    dend_42 { pt3dadd( -1.34984, -36.4795, -25.9554, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.02466, 6.25501, -9.39462, 0.83 ) }
    dend_41 { pt3dadd( -5.74305, 8.5195, -8.86381, 0.83 ) }
    dend_41 { pt3dadd( -7.5304, 11.1903, -7.86897, 0.55 ) }
    dend_41 { pt3dadd( -9.70762, 14.6043, -6.33514, 0.55 ) }
    dend_41 { pt3dadd( -11.3647, 17.3342, -5.01981, 0.55 ) }
    dend_41 { pt3dadd( -11.811, 18.1411, -4.66574, 0.28 ) }
    dend_41 { pt3dadd( -13.3244, 21.2499, -3.49429, 0.28 ) }
    dend_41 { pt3dadd( -15.1093, 25.7617, -2.23418, 0.55 ) }
    dend_41 { pt3dadd( -16.8162, 30.6142, -1.18283, 0.55 ) }
    dend_41 { pt3dadd( -18.1671, 34.4544, -0.477201, 0.55 ) }
    dend_41 { pt3dadd( -20.0041, 39.9333, 0.44247, 0.55 ) }
    dend_41 { pt3dadd( -21.8359, 45.3105, 1.35781, 0.55 ) }
    dend_41 { pt3dadd( -25.6622, 56.116, 3.09558, 0.55 ) }
    dend_41 { pt3dadd( -26.8078, 59.3138, 3.61646, 0.55 ) }
    dend_41 { pt3dadd( -28.9579, 65.4202, 4.77201, 0.55 ) }
    dend_41 { pt3dadd( -30.4572, 69.73, 5.81924, 0.55 ) }
    dend_41 { pt3dadd( -32.0978, 74.5529, 7.3359, 0.55 ) }
    dend_41 { pt3dadd( -33.0165, 77.1671, 8.32418, 0.55 ) }
    dend_41 { pt3dadd( -34.3533, 81.148, 10.092, 0.55 ) }
    dend_41 { pt3dadd( -34.8971, 82.9743, 10.8316, 0.55 ) }
    dend_41 { pt3dadd( -35.9626, 88.1378, 12.4838, 0.55 ) }
    dend_41 { pt3dadd( -36.4381, 90.9489, 12.9783, 0.55 ) }
    dend_41 { pt3dadd( -36.8222, 93.9837, 13.2429, 0.28 ) }
    dend_41 { pt3dadd( -37.0517, 96.0941, 13.2867, 0.55 ) }
    dend_41 { pt3dadd( -37.5186, 99.972, 12.9013, 0.55 ) }
    dend_41 { pt3dadd( -37.8531, 103.107, 12.3837, 0.55 ) }
    dend_41 { pt3dadd( -38.1468, 105.716, 11.5741, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 92/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -1.15466, 12.2025, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( -0.824056, 13.3913, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( -0.182252, 15.6992, -0.304621, 1.94 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 95/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.62534, 1.29226, -0.954618, 0.83 ) }
    dend_27 { pt3dadd( 8.2995, 2.10893, -1.08329, 0.83 ) }
    dend_27 { pt3dadd( 10.9291, 2.78418, -1.52546, 0.55 ) }
    dend_27 { pt3dadd( 14.0065, 3.5751, -2.14091, 0.55 ) }
    dend_27 { pt3dadd( 16.2886, 4.0529, -2.58215, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 17.3176, 4.21989, -2.77694, 0.83 ) }
    dend_27 { pt3dadd( 21.2885, 4.7424, -3.48697, 0.55 ) }
    dend_27 { pt3dadd( 25.3325, 5.24003, -4.23947, 0.55 ) }
    dend_27 { pt3dadd( 29.6349, 5.7161, -5.05758, 0.55 ) }
    dend_27 { pt3dadd( 35.152, 6.25599, -6.10742, 0.55 ) }
    dend_27 { pt3dadd( 37.1128, 6.41096, -6.41719, 0.55 ) }
    dend_27 { pt3dadd( 40.6723, 6.66421, -6.87247, 0.55 ) }
    dend_27 { pt3dadd( 42.1689, 6.75011, -7.00167, 0.55 ) }
    dend_27 { pt3dadd( 43.1008, 6.85886, -7.03805, 0.28 ) }
    dend_27 { pt3dadd( 44.0421, 7.0752, -7.0954, 0.28 ) }
    dend_27 { pt3dadd( 45.6004, 7.75743, -7.2496, 0.55 ) }
    dend_27 { pt3dadd( 46.9993, 8.60653, -7.44914, 0.55 ) }
    dend_27 { pt3dadd( 48.1077, 9.42114, -7.64672, 0.55 ) }
    dend_27 { pt3dadd( 49.6092, 10.521, -7.91314, 0.28 ) }
    dend_27 { pt3dadd( 50.131, 10.9215, -7.99845, 0.28 ) }
    dend_27 { pt3dadd( 50.9415, 11.5718, -8.10852, 0.55 ) }
    dend_27 { pt3dadd( 52.7728, 13.0486, -8.30876, 0.28 ) }
    dend_27 { pt3dadd( 54.6991, 14.5727, -8.45076, 0.28 ) }
    dend_27 { pt3dadd( 55.9458, 15.5218, -8.4067, 0.28 ) }
    dend_27 { pt3dadd( 57.3113, 16.5031, -8.2368, 0.28 ) }
    dend_27 { pt3dadd( 59.3886, 17.8431, -7.72655, 0.55 ) }
    dend_27 { pt3dadd( 59.9908, 18.2114, -7.50274, 0.55 ) }
    dend_27 { pt3dadd( 61.3351, 19.0244, -6.88467, 0.28 ) }
    dend_27 { pt3dadd( 64.0043, 20.6837, -5.50617, 0.28 ) }
    dend_27 { pt3dadd( 66.0541, 21.9798, -4.44512, 0.55 ) }
    dend_27 { pt3dadd( 69.0029, 23.8733, -2.96872, 0.55 ) }
    dend_27 { pt3dadd( 70.5482, 24.8864, -2.1551, 0.55 ) }
    dend_27 { pt3dadd( 72.2352, 26.0082, -1.2648, 0.55 ) }
    dend_27 { pt3dadd( 73.2766, 26.7028, -0.733203, 0.55 ) }
    dend_27 { pt3dadd( 75.7241, 28.4505, 0.312065, 0.28 ) }
    dend_27 { pt3dadd( 77.2358, 29.6592, 0.815405, 0.28 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.85466, -13.3523, 5.15538, 2.77 ) }
    dend_0 { pt3dadd( -0.944156, -14.499, 5.36774, 2.77 ) }
    dend_0 { pt3dadd( -1.12342, -16.7958, 5.79312, 1.94 ) }
    dend_0 { pt3dadd( -1.38274, -20.1184, 6.40847, 1.94 ) }
    dend_0 { pt3dadd( -1.54242, -22.1642, 6.78736, 1.66 ) }
    dend_0 { pt3dadd( -1.66784, -23.7711, 7.08498, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 37/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 2.36419, -27.3656, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 40/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.34984, -36.4795, -25.9554, 0.55 ) }
    dend_44 { pt3dadd( -2.30429, -37.8159, -29.0153, 0.55 ) }
    dend_44 { pt3dadd( -2.61591, -38.2522, -30.0144, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.34984, -36.4795, -25.9554, 0.55 ) }
    dend_43 { pt3dadd( -1.09579, -37.6069, -29.8784, 0.55 ) }
    dend_43 { pt3dadd( -0.888142, -38.2308, -31.7322, 0.55 ) }
    dend_43 { pt3dadd( -0.676155, -38.8678, -33.6249, 0.55 ) }
    dend_43 { pt3dadd( -0.469242, -39.4895, -35.4723, 0.55 ) }
    dend_43 { pt3dadd( -0.327373, -39.9158, -36.7389, 0.28 ) }
    dend_43 { pt3dadd( -0.251591, -40.1435, -37.4155, 0.55 ) }
    dend_43 { pt3dadd( 0.243876, -41.0936, -39.9018, 0.28 ) }
    dend_43 { pt3dadd( 0.732209, -43.127, -44.5509, 0.28 ) }
    dend_43 { pt3dadd( 0.798075, -45.4917, -49.0598, 0.28 ) }
    dend_43 { pt3dadd( 0.294408, -48.8772, -52.794, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 54/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.182252, 15.6992, -0.304621, 1.66 ) }
    dend_30 { pt3dadd( 1.12802, 17.5554, -0.624296, 1.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.182252, 15.6992, -0.304621, 0.55 ) }
    dend_29 { pt3dadd( 1.98671, 19.2982, -2.87058, 0.55 ) }
    dend_29 { pt3dadd( 3.80999, 21.7841, -4.23172, 0.55 ) }
    dend_29 { pt3dadd( 7.69553, 26.3133, -6.41642, 0.55 ) }
    dend_29 { pt3dadd( 8.78674, 27.4833, -6.96619, 0.55 ) }
    dend_29 { pt3dadd( 10.3141, 28.9946, -7.67066, 0.55 ) }
    dend_29 { pt3dadd( 12.0997, 30.6391, -8.48996, 0.55 ) }
    dend_29 { pt3dadd( 15.8441, 33.911, -10.1184, 0.55 ) }
    dend_29 { pt3dadd( 19.6645, 36.8345, -11.4114, 0.55 ) }
    dend_29 { pt3dadd( 22.7116, 38.9415, -12.1676, 0.55 ) }
    dend_29 { pt3dadd( 24.051, 39.7729, -12.5429, 0.55 ) }
    dend_29 { pt3dadd( 28.0369, 42.1323, -13.7452, 0.55 ) }
    dend_29 { pt3dadd( 30.7415, 43.5867, -14.6912, 0.55 ) }
    dend_29 { pt3dadd( 33.4283, 45.008, -15.7692, 0.55 ) }
    dend_29 { pt3dadd( 36.2855, 46.3801, -16.8741, 0.55 ) }
    dend_29 { pt3dadd( 39.7825, 47.9638, -18.2588, 0.55 ) }
    dend_29 { pt3dadd( 42.3922, 49.2377, -19.4089, 0.55 ) }
    dend_29 { pt3dadd( 46.7892, 51.5504, -21.4931, 0.55 ) }
    dend_29 { pt3dadd( 48.8445, 52.7778, -22.5405, 0.28 ) }
    dend_29 { pt3dadd( 51.3637, 54.7254, -23.9014, 0.28 ) }
    dend_29 { pt3dadd( 52.8234, 56.191, -24.6548, 0.55 ) }
    dend_29 { pt3dadd( 55.4033, 59.7997, -25.6687, 0.28 ) }
    dend_29 { pt3dadd( 56.2927, 61.5399, -25.8814, 0.28 ) }
    dend_29 { pt3dadd( 57.325, 64.5294, -26.0825, 0.55 ) }
    dend_29 { pt3dadd( 57.9962, 67.2191, -26.2768, 0.55 ) }
    dend_29 { pt3dadd( 58.6153, 70.2496, -26.5203, 0.55 ) }
    dend_29 { pt3dadd( 59.0988, 72.5626, -26.6898, 0.55 ) }
    dend_29 { pt3dadd( 59.8807, 75.5615, -26.9348, 0.28 ) }
    dend_29 { pt3dadd( 61.4138, 80.7325, -27.601, 0.28 ) }
    dend_29 { pt3dadd( 62.145, 82.9408, -28.05, 0.55 ) }
    dend_29 { pt3dadd( 62.814, 84.9566, -28.5688, 0.55 ) }
    dend_29 { pt3dadd( 63.3689, 86.4636, -29.071, 0.55 ) }
    dend_29 { pt3dadd( 64.4099, 89.2297, -30.0583, 0.55 ) }
    dend_29 { pt3dadd( 72.7537, 96.5874, -32.2552, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 90/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.66784, -23.7711, 7.08498, 1.66 ) }
    dend_6 { pt3dadd( -2.18878, -23.9979, 6.97801, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.66784, -23.7711, 7.08498, 0.55 ) }
    dend_1 { pt3dadd( -2.88885, -25.3307, 7.93502, 0.55 ) }
    dend_1 { pt3dadd( -4.69591, -27.7979, 9.00525, 0.55 ) }
    dend_1 { pt3dadd( -6.59556, -30.4527, 9.96136, 0.55 ) }
    dend_1 { pt3dadd( -7.86065, -32.206, 10.669, 0.55 ) }
    dend_1 { pt3dadd( -8.89218, -33.5574, 11.3755, 0.55 ) }
    dend_1 { pt3dadd( -9.99452, -34.9815, 12.1702, 0.55 ) }
    dend_1 { pt3dadd( -11.0567, -36.4908, 12.9921, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( -12.0102, -37.8456, 13.7523, 0.55 ) }
    dend_1 { pt3dadd( -13.6951, -40.1486, 15.0419, 0.55 ) }
    dend_1 { pt3dadd( -16.5501, -43.854, 17.263, 0.55 ) }
    dend_1 { pt3dadd( -17.7188, -45.3699, 18.2828, 0.55 ) }
    dend_1 { pt3dadd( -19.2917, -47.4645, 19.8428, 0.55 ) }
    dend_1 { pt3dadd( -20.0456, -48.4249, 20.6046, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 4.69484, -57.2749, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 5.86017, -72.2296, 1.9633, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 9/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.61591, -38.2522, -30.0144, 0.55 ) }
    dend_46 { pt3dadd( -3.2213, -41.6622, -34.7798, 0.55 ) }
    dend_46 { pt3dadd( -3.37425, -43.0106, -36.5416, 0.55 ) }
    dend_46 { pt3dadd( -3.38655, -46.6354, -41.2704, 0.55 ) }
    dend_46 { pt3dadd( -3.22065, -48.7426, -43.8986, 0.55 ) }
    dend_46 { pt3dadd( -3.05931, -50.7918, -46.4543, 0.28 ) }
    dend_46 { pt3dadd( -2.90869, -52.7049, -48.8404, 0.28 ) }
    dend_46 { pt3dadd( -2.77328, -53.4992, -49.8422, 0.55 ) }
    dend_46 { pt3dadd( -1.5427, -58.3054, -55.9665, 0.28 ) }
    dend_46 { pt3dadd( -1.01848, -59.7437, -57.5262, 0.55 ) }
    dend_46 { pt3dadd( 0.47591, -67.7068, -64.845, 0.55 ) }
    dend_46 { pt3dadd( 3.66501, -73.8148, -73.3978, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.61591, -38.2522, -30.0144, 0.55 ) }
    dend_45 { pt3dadd( -2.97219, -36.9431, -35.1665, 0.55 ) }
    dend_45 { pt3dadd( -3.42693, -35.2723, -41.7426, 0.55 ) }
    dend_45 { pt3dadd( -3.87088, -33.6411, -48.1624, 0.28 ) }
    dend_45 { pt3dadd( -4.08994, -32.8362, -51.3302, 0.55 ) }
    dend_45 { pt3dadd( -5.66008, -31.0116, -60.8733, 0.55 ) }
    dend_45 { pt3dadd( -8.76247, -28.8261, -69.9521, 0.55 ) }
    dend_45 { pt3dadd( -12.458, -26.1312, -78.6591, 0.55 ) }
    dend_45 { pt3dadd( -14.9844, -23.9178, -87.9072, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 30/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.12802, 17.5554, -0.624296, 1.66 ) }
    dend_36 { pt3dadd( 0.960911, 21.1822, -0.750696, 1.66 ) }
    dend_36 { pt3dadd( 0.824204, 24.1491, -0.854098, 1.66 ) }
    dend_36 { pt3dadd( 0.713752, 26.5462, -0.937643, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 34/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.12802, 17.5554, -0.624296, 1.11 ) }
    dend_31 { pt3dadd( 0.703615, 18.5142, 3.54552, 1.11 ) }
    dend_31 { pt3dadd( 0.600857, 18.7464, 4.55512, 1.11 ) }
    dend_31 { pt3dadd( -0.0149804, 20.1377, 10.6057, 0.83 ) }
    dend_31 { pt3dadd( -0.351705, 20.8984, 13.9141, 0.83 ) }
    dend_31 { pt3dadd( -1.52826, 23.5565, 25.4737, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -2.18878, -23.9979, 6.97801, 1.66 ) }
    dend_8 { pt3dadd( -2.22297, -24.5852, 6.97671, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.18878, -23.9979, 6.97801, 0.55 ) }
    dend_7 { pt3dadd( -3.2536, -27.5989, 9.40375, 0.55 ) }
    dend_7 { pt3dadd( -4.06506, -30.6788, 11.6929, 0.55 ) }
    dend_7 { pt3dadd( -4.33728, -31.7102, 12.4923, 0.55 ) }
    dend_7 { pt3dadd( -5.19814, -34.7977, 14.943, 0.55 ) }
    dend_7 { pt3dadd( -5.82541, -37.4146, 17.1204, 0.55 ) }
    dend_7 { pt3dadd( -6.46399, -40.4353, 19.6149, 0.55 ) }
    dend_7 { pt3dadd( -6.8744, -42.0825, 21.1404, 0.55 ) }
    dend_7 { pt3dadd( -7.52995, -44.3068, 23.2063, 0.55 ) }
    dend_7 { pt3dadd( -8.31592, -46.6469, 25.3249, 0.55 ) }
    dend_7 { pt3dadd( -9.18214, -49.1905, 27.6135, 0.55 ) }
    dend_7 { pt3dadd( -9.69994, -50.5296, 28.8302, 0.55 ) }
    dend_7 { pt3dadd( -10.9222, -53.3462, 31.5593, 0.55 ) }
    dend_7 { pt3dadd( -11.8488, -55.6206, 33.7795, 0.55 ) }
    dend_7 { pt3dadd( -12.2952, -56.7785, 34.9719, 0.55 ) }
    dend_7 { pt3dadd( -12.8949, -58.2128, 36.556, 0.55 ) }
    dend_7 { pt3dadd( -13.9318, -60.3199, 38.937, 0.55 ) }
    dend_7 { pt3dadd( -15.2645, -62.8056, 41.923, 0.55 ) }
    dend_7 { pt3dadd( -16.9216, -65.8543, 45.6272, 0.55 ) }
    dend_7 { pt3dadd( -18.5198, -68.525, 49.0444, 0.55 ) }
    dend_7 { pt3dadd( -19.5899, -70.2149, 51.2579, 0.55 ) }
    dend_7 { pt3dadd( -21.3559, -72.7899, 54.634, 0.55 ) }
    dend_7 { pt3dadd( -23.1003, -75.0757, 57.6423, 0.55 ) }
    dend_7 { pt3dadd( -25.0808, -77.2862, 60.6086, 0.55 ) }
    dend_7 { pt3dadd( -27.2902, -79.3433, 63.61, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -20.0456, -48.4249, 20.6046, 0.55 ) }
    dend_5 { pt3dadd( -25.1011, -48.8639, 23.2614, 0.55 ) }
    dend_5 { pt3dadd( -27.3245, -49.0075, 24.3101, 0.55 ) }
    dend_5 { pt3dadd( -30.4652, -49.2719, 25.6614, 0.55 ) }
    dend_5 { pt3dadd( -34.0675, -49.6539, 27.1148, 0.55 ) }
    dend_5 { pt3dadd( -37.1235, -49.9718, 28.2645, 0.55 ) }
    dend_5 { pt3dadd( -42.1654, -50.578, 30.0744, 0.55 ) }
    dend_5 { pt3dadd( -47.0988, -51.2192, 31.7463, 0.55 ) }
    dend_5 { pt3dadd( -50.8039, -51.7645, 33.158, 0.55 ) }
    dend_5 { pt3dadd( -53.7219, -52.2049, 34.2764, 0.55 ) }
    dend_5 { pt3dadd( -58.2734, -52.9631, 35.9879, 0.55 ) }
    dend_5 { pt3dadd( -60.8685, -53.412, 37.0242, 0.28 ) }
    dend_5 { pt3dadd( -64.5961, -54.3153, 38.5813, 0.55 ) }
    dend_5 { pt3dadd( -68.9032, -55.3348, 40.6759, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 81/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -20.0456, -48.4249, 20.6046, 0.55 ) }
    dend_2 { pt3dadd( -20.5785, -50.1861, 24.5928, 0.55 ) }
    dend_2 { pt3dadd( -21.5413, -54.3633, 33.3871, 0.55 ) }
    dend_2 { pt3dadd( -22.2163, -56.6329, 38.0763, 0.55 ) }
    dend_2 { pt3dadd( -23.0591, -59.196, 43.354, 0.55 ) }
    dend_2 { pt3dadd( -23.8664, -61.6581, 48.5607, 0.55 ) }
    dend_2 { pt3dadd( -24.9491, -64.9603, 55.5439, 0.55 ) }
    dend_2 { pt3dadd( -26.2955, -68.5647, 63.0584, 0.55 ) }
    dend_2 { pt3dadd( -27.6235, -72.4357, 70.4744, 0.55 ) }
    dend_2 { pt3dadd( -28.511, -75.235, 75.8946, 0.55 ) }
    dend_2 { pt3dadd( -29.7765, -78.3008, 82.2508, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 92/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.713752, 26.5462, -0.937643, 1.11 ) }
    dend_38 { pt3dadd( -1.19889, 29.6251, -0.952023, 1.11 ) }
    dend_38 { pt3dadd( -2.57431, 31.8392, -0.962368, 1.11 ) }
    dend_38 { pt3dadd( -4.0595, 34.23, -0.973528, 0.83 ) }
    dend_38 { pt3dadd( -4.99028, 35.7283, -0.980528, 0.83 ) }
    dend_38 { pt3dadd( -6.76544, 38.5858, -0.993878, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 98/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.713752, 26.5462, -0.937643, 0.55 ) }
    dend_37 { pt3dadd( 1.48915, 28.881, -4.09372, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( 1.93966, 29.9658, -5.36057, 0.55 ) }
    dend_37 { pt3dadd( 4.04128, 34.1813, -9.8266, 0.55 ) }
    dend_37 { pt3dadd( 5.27634, 36.5417, -12.0437, 0.55 ) }
    dend_37 { pt3dadd( 6.55933, 38.8186, -14.0161, 0.55 ) }
    dend_37 { pt3dadd( 7.36513, 40.1588, -15.1203, 0.55 ) }
    dend_37 { pt3dadd( 8.87282, 42.1954, -16.52, 0.55 ) }
    dend_37 { pt3dadd( 10.2881, 43.8124, -17.5065, 0.55 ) }
    dend_37 { pt3dadd( 11.8583, 45.4331, -18.4757, 0.55 ) }
    dend_37 { pt3dadd( 13.347, 46.9913, -19.4979, 0.55 ) }
    dend_37 { pt3dadd( 14.2604, 47.988, -20.1757, 0.55 ) }
    dend_37 { pt3dadd( 17.8021, 51.9242, -23.1116, 0.55 ) }
    dend_37 { pt3dadd( 19.7754, 54.0896, -24.871, 0.55 ) }
    dend_37 { pt3dadd( 22.3612, 56.872, -27.2702, 0.55 ) }
    dend_37 { pt3dadd( 23.758, 58.2759, -28.5921, 0.55 ) }
    dend_37 { pt3dadd( 24.9355, 59.3695, -29.6397, 0.55 ) }
    dend_37 { pt3dadd( 26.9197, 61.1711, -31.5971, 0.83 ) }
    dend_37 { pt3dadd( 29.1579, 63.2772, -34.1249, 0.55 ) }
    dend_37 { pt3dadd( 30.6629, 64.7813, -35.8526, 0.55 ) }
    dend_37 { pt3dadd( 31.5625, 65.6247, -36.7878, 0.55 ) }
    dend_37 { pt3dadd( 33.5771, 67.4027, -38.8982, 0.55 ) }
    dend_37 { pt3dadd( 37.3674, 70.5313, -42.7985, 0.55 ) }
    dend_37 { pt3dadd( 39.7452, 72.6396, -45.2156, 0.55 ) }
    dend_37 { pt3dadd( 40.9508, 73.8462, -46.4863, 0.83 ) }
    dend_37 { pt3dadd( 42.2433, 75.2285, -47.8376, 0.55 ) }
    dend_37 { pt3dadd( 43.3561, 76.3643, -48.7814, 0.55 ) }
    dend_37 { pt3dadd( 44.4333, 77.2714, -49.37, 0.55 ) }
    dend_37 { pt3dadd( 46.6706, 78.7203, -49.995, 0.55 ) }
    dend_37 { pt3dadd( 48.3148, 79.6799, -50.3418, 0.55 ) }
    dend_37 { pt3dadd( 49.0893, 80.1561, -50.486, 0.55 ) }
    dend_37 { pt3dadd( 54.2397, 83.9305, -51.062, 0.55 ) }
    dend_37 { pt3dadd( 57.3468, 86.5735, -51.2278, 0.55 ) }
    dend_37 { pt3dadd( 58.5608, 87.6603, -51.2646, 0.55 ) }
    dend_37 { pt3dadd( 59.6516, 88.719, -51.2142, 0.55 ) }
    dend_37 { pt3dadd( 60.9756, 90.2585, -51.1367, 0.55 ) }
    dend_37 { pt3dadd( 63.8469, 94.3979, -51.0267, 0.55 ) }
    dend_37 { pt3dadd( 64.5182, 95.5537, -50.9806, 0.55 ) }
    dend_37 { pt3dadd( 65.7746, 97.7958, -50.9721, 0.55 ) }
    dend_37 { pt3dadd( 67.719, 101.204, -50.9157, 0.55 ) }
    dend_37 { pt3dadd( 69.4128, 103.958, -50.9072, 0.55 ) }
    dend_37 { pt3dadd( 70.8742, 105.978, -50.936, 0.55 ) }
    dend_37 { pt3dadd( 73.5207, 109.133, -51.179, 0.55 ) }
    dend_37 { pt3dadd( 74.838, 110.565, -51.3549, 0.55 ) }
    dend_37 { pt3dadd( 76.2223, 112.025, -51.5793, 0.28 ) }
    dend_37 { pt3dadd( 77.1907, 112.969, -51.7223, 0.83 ) }
    dend_37 { pt3dadd( 80.3526, 115.977, -52.0124, 0.55 ) }
    dend_37 { pt3dadd( 83.3739, 119.031, -52.4059, 0.55 ) }
    dend_37 { pt3dadd( 84.8421, 120.567, -52.6775, 0.28 ) }
    dend_37 { pt3dadd( 85.7934, 121.532, -52.8448, 0.55 ) }
    dend_37 { pt3dadd( 88.3638, 124.01, -53.3004, 0.28 ) }
    dend_37 { pt3dadd( 89.9046, 125.58, -53.549, 0.28 ) }
    dend_37 { pt3dadd( 91.3869, 127.497, -53.7534, 0.28 ) }
    dend_37 { pt3dadd( 98.1295, 135.928, -55.4944, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.52826, 23.5565, 25.4737, 0.83 ) }
    dend_33 { pt3dadd( -2.45143, 25.7477, 24.8763, 0.83 ) }
    dend_33 { pt3dadd( -2.97701, 27.6305, 24.7988, 0.83 ) }
    dend_33 { pt3dadd( -3.9943, 31.6541, 25.262, 0.55 ) }
    dend_33 { pt3dadd( -4.50627, 34.0515, 26.134, 0.55 ) }
    dend_33 { pt3dadd( -4.71029, 35.2507, 26.8224, 0.55 ) }
    dend_33 { pt3dadd( -5.32087, 38.6806, 29.4723, 0.55 ) }
    dend_33 { pt3dadd( -5.78522, 41.2574, 32.2857, 0.55 ) }
    dend_33 { pt3dadd( -6.20523, 43.6886, 35.4267, 0.55 ) }
    dend_33 { pt3dadd( -6.85833, 47.6856, 41.2679, 0.55 ) }
    dend_33 { pt3dadd( -7.31033, 50.6748, 45.9707, 0.55 ) }
    dend_33 { pt3dadd( -7.75893, 53.2449, 50.3557, 0.55 ) }
    dend_33 { pt3dadd( -8.27576, 55.4854, 54.6363, 0.55 ) }
    dend_33 { pt3dadd( -8.51394, 56.3353, 56.4791, 0.55 ) }
    dend_33 { pt3dadd( -8.83513, 57.6112, 59.6541, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.52826, 23.5565, 25.4737, 0.55 ) }
    dend_32 { pt3dadd( -1.3414, 24.462, 27.1894, 0.55 ) }
    dend_32 { pt3dadd( -0.634711, 26.6852, 31.1377, 0.55 ) }
    dend_32 { pt3dadd( 0.243598, 29.5503, 35.8225, 0.55 ) }
    dend_32 { pt3dadd( 1.01768, 32.2168, 40.0068, 0.55 ) }
    dend_32 { pt3dadd( 1.56968, 33.9747, 42.6254, 0.55 ) }
    dend_32 { pt3dadd( 1.99175, 35.1712, 44.4097, 0.55 ) }
    dend_32 { pt3dadd( 3.10317, 37.8619, 48.3486, 0.55 ) }
    dend_32 { pt3dadd( 4.05982, 39.7967, 51.0781, 0.55 ) }
    dend_32 { pt3dadd( 5.57927, 42.5018, 54.9725, 0.55 ) }
    dend_32 { pt3dadd( 6.35921, 43.7701, 56.9268, 0.55 ) }
    dend_32 { pt3dadd( 7.61462, 45.7103, 60.0098, 0.55 ) }
    dend_32 { pt3dadd( 9.11143, 47.9526, 63.7505, 0.55 ) }
    dend_32 { pt3dadd( 11.0282, 50.7017, 68.6714, 0.55 ) }
    dend_32 { pt3dadd( 12.9166, 53.0262, 73.153, 0.55 ) }
    dend_32 { pt3dadd( 14.6858, 55.123, 77.3762, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.22297, -24.5852, 6.97671, 1.11 ) }
    dend_10 { pt3dadd( -2.5987, -28.6774, 4.12603, 1.11 ) }
    dend_10 { pt3dadd( -2.95542, -32.5625, 1.41961, 1.11 ) }
    dend_10 { pt3dadd( -3.16789, -34.8765, -0.192399, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.22297, -24.5852, 6.97671, 0.55 ) }
    dend_9 { pt3dadd( 0.274737, -26.268, 6.83596, 0.55 ) }
    dend_9 { pt3dadd( 1.83231, -27.2727, 6.57636, 0.55 ) }
    dend_9 { pt3dadd( 3.24818, -28.2943, 6.32296, 0.55 ) }
    dend_9 { pt3dadd( 3.82224, -28.6897, 6.25507, 0.55 ) }
    dend_9 { pt3dadd( 5.94922, -30.1768, 6.02005, 0.55 ) }
    dend_9 { pt3dadd( 7.54474, -31.3406, 5.9476, 0.55 ) }
    dend_9 { pt3dadd( 9.97712, -33.2345, 6.0748, 0.55 ) }
    dend_9 { pt3dadd( 11.9636, -34.8869, 6.24215, 0.55 ) }
    dend_9 { pt3dadd( 14.2723, -36.846, 6.62336, 0.55 ) }
    dend_9 { pt3dadd( 15.9277, -38.2248, 7.02904, 0.55 ) }
    dend_9 { pt3dadd( 20.0964, -41.7972, 8.77254, 0.55 ) }
    dend_9 { pt3dadd( 21.2782, -42.8753, 9.44955, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_9 { pt3dadd( 21.8712, -43.4375, 9.88675, 0.55 ) }
    dend_9 { pt3dadd( 23.7872, -45.2708, 11.4835, 0.55 ) }
    dend_9 { pt3dadd( 24.5839, -46.1171, 12.298, 0.55 ) }
    dend_9 { pt3dadd( 27.0456, -48.6152, 15.1971, 0.55 ) }
    dend_9 { pt3dadd( 27.7596, -49.3382, 16.0933, 0.55 ) }
    dend_9 { pt3dadd( 28.5616, -50.0778, 16.9925, 0.55 ) }
    dend_9 { pt3dadd( 29.4816, -50.8925, 17.9658, 0.55 ) }
    dend_9 { pt3dadd( 31.8233, -52.9133, 20.3438, 0.55 ) }
    dend_9 { pt3dadd( 34.0518, -54.7979, 22.4946, 0.55 ) }
    dend_9 { pt3dadd( 35.3101, -55.7548, 23.4987, 0.55 ) }
    dend_9 { pt3dadd( 37.4709, -57.3314, 25.0809, 0.55 ) }
    dend_9 { pt3dadd( 37.9729, -57.6936, 25.41, 0.55 ) }
    dend_9 { pt3dadd( 40.2046, -59.2804, 26.6382, 0.55 ) }
    dend_9 { pt3dadd( 41.5257, -60.2098, 27.0899, 0.83 ) }
    dend_9 { pt3dadd( 43.3972, -61.682, 27.6479, 0.28 ) }
    dend_9 { pt3dadd( 44.4509, -62.5256, 27.9759, 0.55 ) }
    dend_9 { pt3dadd( 45.6806, -63.4818, 28.0831, 0.28 ) }
    dend_9 { pt3dadd( 47.4009, -64.7557, 28.0245, 0.83 ) }
    dend_9 { pt3dadd( 49.4908, -66.3068, 27.8024, 0.28 ) }
    dend_9 { pt3dadd( 52.1011, -68.2268, 27.5026, 0.28 ) }
    dend_9 { pt3dadd( 53.0408, -68.9412, 27.4029, 0.55 ) }
    dend_9 { pt3dadd( 58.7513, -73.1513, 26.4096, 0.28 ) }
    dend_9 { pt3dadd( 59.44, -73.5893, 26.2376, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 23/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -29.7765, -78.3008, 82.2508, 0.55 ) }
    dend_4 { pt3dadd( -30.9599, -79.9894, 83.8089, 0.55 ) }
    dend_4 { pt3dadd( -32.3221, -81.7703, 85.3753, 0.55 ) }
    dend_4 { pt3dadd( -34.2641, -84.3092, 87.6085, 0.55 ) }
    dend_4 { pt3dadd( -35.9914, -86.5676, 89.595, 0.55 ) }
    dend_4 { pt3dadd( -37.7389, -88.8521, 91.6045, 0.55 ) }
    dend_4 { pt3dadd( -38.9642, -90.454, 93.0135, 0.28 ) }
    dend_4 { pt3dadd( -39.7015, -91.3115, 93.7983, 0.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -29.7765, -78.3008, 82.2508, 0.55 ) }
    dend_3 { pt3dadd( -30.1359, -78.8325, 83.8156, 0.55 ) }
    dend_3 { pt3dadd( -30.7348, -79.7184, 86.4231, 0.55 ) }
    dend_3 { pt3dadd( -31.1721, -80.3652, 88.3266, 0.55 ) }
    dend_3 { pt3dadd( -31.5773, -80.9647, 90.0909, 0.55 ) }
    dend_3 { pt3dadd( -32.1946, -81.8777, 92.7782, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -6.76544, 38.5858, -0.993878, 0.55 ) }
    dend_40 { pt3dadd( -8.04554, 39.2841, -0.250187, 0.55 ) }
    dend_40 { pt3dadd( -13.5557, 42.4639, 2.54321, 0.55 ) }
    dend_40 { pt3dadd( -15.7229, 43.7253, 3.57583, 0.55 ) }
    dend_40 { pt3dadd( -18.3094, 45.1977, 4.51378, 0.55 ) }
    dend_40 { pt3dadd( -21.1332, 46.6799, 5.41454, 0.55 ) }
    dend_40 { pt3dadd( -23.7016, 47.9626, 6.22303, 0.55 ) }
    dend_40 { pt3dadd( -24.8587, 48.517, 6.536, 0.55 ) }
    dend_40 { pt3dadd( -26.9185, 49.5252, 6.97482, 0.55 ) }
    dend_40 { pt3dadd( -30.9632, 51.5321, 7.86799, 0.55 ) }
    dend_40 { pt3dadd( -34.5757, 53.4082, 8.93861, 0.55 ) }
    dend_40 { pt3dadd( -38.079, 55.2679, 10.0695, 0.55 ) }
    dend_40 { pt3dadd( -39.7548, 56.3079, 10.7256, 0.55 ) }
    dend_40 { pt3dadd( -40.8579, 57.1978, 11.1884, 0.55 ) }
    dend_40 { pt3dadd( -42.4769, 59.0212, 11.9315, 0.55 ) }
    dend_40 { pt3dadd( -44.153, 61.6082, 12.8413, 0.55 ) }
    dend_40 { pt3dadd( -46.2459, 65.993, 13.8471, 0.55 ) }
    dend_40 { pt3dadd( -47.6887, 69.74, 14.4667, 0.55 ) }
    dend_40 { pt3dadd( -49.1877, 74.6311, 15.3104, 0.55 ) }
    dend_40 { pt3dadd( -49.9877, 77.7797, 15.9178, 0.28 ) }
    dend_40 { pt3dadd( -50.1519, 78.6503, 16.0945, 0.28 ) }
    dend_40 { pt3dadd( -50.3822, 80.0553, 16.387, 0.55 ) }
    dend_40 { pt3dadd( -50.5009, 81.929, 16.9942, 0.55 ) }
    dend_40 { pt3dadd( -50.5895, 84.8714, 18.0028, 0.55 ) }
    dend_40 { pt3dadd( -50.511, 86.3243, 18.7237, 0.28 ) }
    dend_40 { pt3dadd( -50.4926, 87.9582, 19.5758, 0.55 ) }
    dend_40 { pt3dadd( -50.6071, 90.2582, 20.7471, 0.28 ) }
    dend_40 { pt3dadd( -50.9636, 93.0117, 22.0844, 0.55 ) }
    dend_40 { pt3dadd( -51.3338, 95.3624, 23.1689, 0.55 ) }
    dend_40 { pt3dadd( -51.9014, 97.8556, 24.1854, 0.28 ) }
    dend_40 { pt3dadd( -52.65, 100.977, 25.4787, 0.28 ) }
    dend_40 { pt3dadd( -52.9066, 101.812, 25.8374, 0.28 ) }
    dend_40 { pt3dadd( -53.6337, 103.698, 26.4733, 0.55 ) }
    dend_40 { pt3dadd( -57.4429, 110.523, 29.2695, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -6.76544, 38.5858, -0.993878, 0.55 ) }
    dend_39 { pt3dadd( -7.11349, 40.1612, -1.9959, 0.55 ) }
    dend_39 { pt3dadd( -7.31209, 40.9847, -2.46633, 0.55 ) }
    dend_39 { pt3dadd( -7.83672, 42.8086, -3.40169, 0.55 ) }
    dend_39 { pt3dadd( -8.62262, 45.4156, -4.58125, 0.55 ) }
    dend_39 { pt3dadd( -9.36912, 48.2826, -5.77957, 0.55 ) }
    dend_39 { pt3dadd( -9.78188, 49.8421, -6.37633, 0.55 ) }
    dend_39 { pt3dadd( -10.2999, 51.5146, -6.93625, 0.55 ) }
    dend_39 { pt3dadd( -10.7123, 52.7141, -7.27262, 0.55 ) }
    dend_39 { pt3dadd( -11.1913, 54.1187, -7.64795, 0.55 ) }
    dend_39 { pt3dadd( -11.8286, 56.1231, -8.10355, 0.55 ) }
    dend_39 { pt3dadd( -12.5068, 58.1489, -8.52779, 0.55 ) }
    dend_39 { pt3dadd( -12.9825, 59.5063, -8.80766, 0.55 ) }
    dend_39 { pt3dadd( -13.5707, 61.2674, -9.17514, 0.55 ) }
    dend_39 { pt3dadd( -14.8108, 65.8133, -9.95837, 0.55 ) }
    dend_39 { pt3dadd( -15.2021, 67.7267, -10.2367, 0.55 ) }
    dend_39 { pt3dadd( -15.466, 69.3656, -10.4408, 0.55 ) }
    dend_39 { pt3dadd( -15.704, 71.5742, -10.6672, 0.55 ) }
    dend_39 { pt3dadd( -15.7549, 72.3475, -10.7297, 0.55 ) }
    dend_39 { pt3dadd( -15.7465, 77.7785, -10.8728, 0.55 ) }
    dend_39 { pt3dadd( -15.6507, 80.8605, -10.8423, 0.55 ) }
    dend_39 { pt3dadd( -15.4985, 83.5875, -10.8579, 0.55 ) }
    dend_39 { pt3dadd( -15.3544, 85.4325, -10.922, 0.55 ) }
    dend_39 { pt3dadd( -15.0931, 87.5837, -10.9743, 0.55 ) }
    dend_39 { pt3dadd( -14.6608, 90.4776, -11.0082, 0.28 ) }
    dend_39 { pt3dadd( -14.3126, 92.5292, -10.9963, 0.28 ) }
    dend_39 { pt3dadd( -13.9514, 94.5387, -10.9249, 0.55 ) }
    dend_39 { pt3dadd( -12.8184, 99.819, -10.5913, 0.55 ) }
    dend_39 { pt3dadd( -12.1854, 102.66, -10.4006, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -11.8635, 104.193, -10.2904, 0.55 ) }
    dend_39 { pt3dadd( -11.542, 105.839, -10.1908, 0.55 ) }
    dend_39 { pt3dadd( -11.2668, 107.336, -10.0932, 0.55 ) }
    dend_39 { pt3dadd( -10.9708, 109.287, -10.0269, 0.55 ) }
    dend_39 { pt3dadd( -10.5633, 111.636, -10.0109, 0.55 ) }
    dend_39 { pt3dadd( -10.3003, 113.346, -10.1188, 0.28 ) }
    dend_39 { pt3dadd( -9.85887, 115.901, -10.2647, 0.55 ) }
    dend_39 { pt3dadd( -9.43282, 118.227, -10.3955, 0.28 ) }
    dend_39 { pt3dadd( -9.04016, 120.312, -10.5282, 0.55 ) }
    dend_39 { pt3dadd( -8.36707, 123.854, -10.7863, 0.55 ) }
    dend_39 { pt3dadd( -7.89907, 126.293, -10.9345, 0.55 ) }
    dend_39 { pt3dadd( -6.65534, 132.66, -11.211, 0.28 ) }
    dend_39 { pt3dadd( -6.21545, 134.811, -11.2449, 0.55 ) }
    dend_39 { pt3dadd( -5.07118, 142.379, -12.64, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.83513, 57.6112, 59.6541, 0.55 ) }
    dend_35 { pt3dadd( -10.1506, 58.0591, 63.8815, 0.55 ) }
    dend_35 { pt3dadd( -10.6052, 58.2139, 65.3422, 0.55 ) }
    dend_35 { pt3dadd( -11.7738, 58.6119, 69.0975, 0.55 ) }
    dend_35 { pt3dadd( -12.8563, 58.9804, 72.5758, 0.55 ) }
    dend_35 { pt3dadd( -13.5014, 59.2001, 74.6491, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.83513, 57.6112, 59.6541, 0.55 ) }
    dend_34 { pt3dadd( -9.03111, 58.626, 59.717, 0.55 ) }
    dend_34 { pt3dadd( -9.26503, 59.9423, 59.8344, 0.55 ) }
    dend_34 { pt3dadd( -9.94743, 64.0605, 60.334, 0.55 ) }
    dend_34 { pt3dadd( -10.79, 68.849, 61.1318, 0.55 ) }
    dend_34 { pt3dadd( -11.3323, 71.8173, 61.6798, 0.55 ) }
    dend_34 { pt3dadd( -12.3287, 76.9552, 62.662, 0.55 ) }
    dend_34 { pt3dadd( -13.2004, 81.0874, 63.5922, 0.55 ) }
    dend_34 { pt3dadd( -13.8719, 83.7286, 64.3238, 0.55 ) }
    dend_34 { pt3dadd( -14.9596, 87.2638, 65.5514, 0.55 ) }
    dend_34 { pt3dadd( -15.5411, 88.7412, 66.1407, 0.55 ) }
    dend_34 { pt3dadd( -16.2293, 90.1202, 66.8104, 0.55 ) }
    dend_34 { pt3dadd( -18.0664, 92.9605, 68.3711, 0.55 ) }
    dend_34 { pt3dadd( -19.7296, 95.0082, 69.4989, 0.55 ) }
    dend_34 { pt3dadd( -21.657, 96.9362, 70.6646, 0.55 ) }
    dend_34 { pt3dadd( -23.905, 99.0135, 71.9645, 0.55 ) }
    dend_34 { pt3dadd( -26.2931, 101.084, 73.327, 0.55 ) }
    dend_34 { pt3dadd( -30.093, 104.179, 75.4112, 0.28 ) }
    dend_34 { pt3dadd( -32.9452, 106.311, 76.7965, 0.28 ) }
    dend_34 { pt3dadd( -35.5423, 108.206, 77.983, 0.28 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.16789, -34.8765, -0.192399, 1.11 ) }
    dend_14 { pt3dadd( -2.57217, -37.3808, -0.506647, 1.11 ) }
    dend_14 { pt3dadd( -1.88243, -40.2804, -0.87049, 1.11 ) }
    dend_14 { pt3dadd( -1.0753, -43.6735, -1.29626, 1.11 ) }
    dend_14 { pt3dadd( -0.415177, -46.4486, -1.64448, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.16789, -34.8765, -0.192399, 0.55 ) }
    dend_11 { pt3dadd( -5.94538, -37.0369, -0.879944, 0.55 ) }
    dend_11 { pt3dadd( -8.73386, -39.5285, -1.56029, 0.55 ) }
    dend_11 { pt3dadd( -11.1284, -41.9492, -2.62572, 0.55 ) }
    dend_11 { pt3dadd( -13.4002, -44.3969, -3.73399, 0.55 ) }
    dend_11 { pt3dadd( -15.9603, -47.0912, -4.8224, 0.55 ) }
    dend_11 { pt3dadd( -18.593, -49.8757, -5.88446, 0.55 ) }
    dend_11 { pt3dadd( -22.0959, -53.9613, -7.27964, 0.55 ) }
    dend_11 { pt3dadd( -25.8789, -58.8693, -8.88913, 0.55 ) }
    dend_11 { pt3dadd( -27.5249, -60.9498, -9.58083, 0.55 ) }
    dend_11 { pt3dadd( -30.9879, -65.1776, -11.0915, 0.55 ) }
    dend_11 { pt3dadd( -32.3158, -66.6772, -11.6675, 0.55 ) }
    dend_11 { pt3dadd( -33.7483, -68.1322, -12.2301, 0.55 ) }
    dend_11 { pt3dadd( -37.2492, -71.4957, -13.5387, 0.55 ) }
    dend_11 { pt3dadd( -43.0335, -76.8085, -15.694, 0.55 ) }
    dend_11 { pt3dadd( -45.4902, -78.994, -16.8412, 0.55 ) }
    dend_11 { pt3dadd( -47.8434, -81.0748, -18.0884, 0.55 ) }
    dend_11 { pt3dadd( -49.4901, -82.4236, -18.9363, 0.55 ) }
    dend_11 { pt3dadd( -51.1187, -83.6279, -19.7636, 0.28 ) }
    dend_11 { pt3dadd( -53.2294, -85.0007, -20.7845, 0.83 ) }
    dend_11 { pt3dadd( -54.1411, -85.5424, -21.4622, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.415177, -46.4486, -1.64448, 1.11 ) }
    dend_18 { pt3dadd( -0.281985, -48.4995, -2.02565, 1.11 ) }
    dend_18 { pt3dadd( -0.00569623, -52.7535, -2.81634, 0.83 ) }
    dend_18 { pt3dadd( 0.194763, -55.84, -3.39001, 0.83 ) }
    dend_18 { pt3dadd( 0.364271, -58.4501, -3.87511, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.415177, -46.4486, -1.64448, 0.55 ) }
    dend_15 { pt3dadd( -2.83826, -50.4362, -1.35038, 0.55 ) }
    dend_15 { pt3dadd( -4.12427, -52.9548, -1.19229, 0.55 ) }
    dend_15 { pt3dadd( -5.95326, -57.2462, -0.969438, 0.55 ) }
    dend_15 { pt3dadd( -7.79388, -62.0121, -0.809206, 0.55 ) }
    dend_15 { pt3dadd( -9.45524, -66.1664, -0.537448, 0.55 ) }
    dend_15 { pt3dadd( -10.4382, -68.6245, -0.37665, 0.55 ) }
    dend_15 { pt3dadd( -11.2768, -71.0853, -0.335852, 0.55 ) }
    dend_15 { pt3dadd( -12.162, -74.062, -0.211149, 0.55 ) }
    dend_15 { pt3dadd( -12.4672, -75.3136, -0.131509, 0.55 ) }
    dend_15 { pt3dadd( -13.0853, -80.7659, 0.189328, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -54.1411, -85.5424, -21.4622, 0.55 ) }
    dend_13 { pt3dadd( -54.6751, -86.1505, -23.6635, 0.55 ) }
    dend_13 { pt3dadd( -54.9517, -86.5094, -24.7485, 0.55 ) }
    dend_13 { pt3dadd( -56.0213, -88.0093, -30.021, 0.55 ) }
    dend_13 { pt3dadd( -56.5148, -88.6276, -32.3811, 0.28 ) }
    dend_13 { pt3dadd( -56.7649, -88.9411, -33.5775, 0.28 ) }
    dend_13 { pt3dadd( -57.113, -89.3773, -35.2426, 0.55 ) }
    dend_13 { pt3dadd( -57.409, -89.8939, -37.1573, 0.55 ) }
    dend_13 { pt3dadd( -58.2021, -91.3966, -42.7448, 0.28 ) }
    dend_13 { pt3dadd( -58.4293, -91.6857, -43.8971, 0.83 ) }
    dend_13 { pt3dadd( -58.4893, -94.7745, -51.7852, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 93/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -54.1411, -85.5424, -21.4622, 0.28 ) }
    dend_12 { pt3dadd( -54.5254, -86.3221, -23.9216, 0.28 ) }
    dend_12 { pt3dadd( -54.6848, -86.6197, -24.9673, 0.55 ) }
    dend_12 { pt3dadd( -56.3204, -89.6743, -35.6978, 0.28 ) }
    dend_12 { pt3dadd( -56.4207, -89.8615, -36.3554, 0.55 ) }
    dend_12 { pt3dadd( -56.8741, -90.7084, -39.3305, 0.28 ) }
    dend_12 { pt3dadd( -57.0554, -91.047, -40.52, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( -57.957, -93.2302, -49.1887, 0.28 ) }
    dend_12 { pt3dadd( -57.9762, -96.9715, -59.4919, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.364271, -58.4501, -3.87511, 0.83 ) }
    dend_20 { pt3dadd( 0.147423, -59.8829, -4.08334, 0.83 ) }
    dend_20 { pt3dadd( -0.084954, -61.4183, -4.30648, 0.83 ) }
    dend_20 { pt3dadd( -0.485966, -64.0678, -4.69156, 0.83 ) }
    dend_20 { pt3dadd( -0.718663, -65.6053, -4.91501, 0.83 ) }
    dend_20 { pt3dadd( -1.03994, -67.7281, -5.22352, 0.83 ) }
    dend_20 { pt3dadd( -1.26686, -69.2274, -5.44143, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.364271, -58.4501, -3.87511, 0.55 ) }
    dend_19 { pt3dadd( 0.924726, -59.3895, -3.64136, 0.55 ) }
    dend_19 { pt3dadd( 1.52165, -60.4444, -3.47063, 0.55 ) }
    dend_19 { pt3dadd( 2.42811, -62.4088, -3.02587, 0.55 ) }
    dend_19 { pt3dadd( 3.55928, -64.685, -2.46203, 0.55 ) }
    dend_19 { pt3dadd( 4.00985, -65.6214, -2.23139, 0.55 ) }
    dend_19 { pt3dadd( 4.58784, -66.7878, -1.94231, 0.55 ) }
    dend_19 { pt3dadd( 5.6016, -68.7538, -1.45753, 0.55 ) }
    dend_19 { pt3dadd( 7.19898, -71.6824, -0.798795, 0.55 ) }
    dend_19 { pt3dadd( 9.11386, -74.8871, -0.239713, 0.55 ) }
    dend_19 { pt3dadd( 9.63745, -75.716, -0.153662, 0.55 ) }
    dend_19 { pt3dadd( 10.2908, -76.6649, -0.0775251, 0.55 ) }
    dend_19 { pt3dadd( 12.0951, -79.1953, 0.0488036, 0.55 ) }
    dend_19 { pt3dadd( 14.2185, -82.0206, 0.0932422, 0.55 ) }
    dend_19 { pt3dadd( 15.7207, -83.8369, -0.00227262, 0.28 ) }
    dend_19 { pt3dadd( 16.2946, -84.5544, -0.0473325, 0.28 ) }
    dend_19 { pt3dadd( 17.0378, -85.4594, -0.0827551, 0.28 ) }
    dend_19 { pt3dadd( 17.7539, -86.2943, -0.0818151, 0.28 ) }
    dend_19 { pt3dadd( 19.0035, -87.7128, 0.0310104, 0.55 ) }
    dend_19 { pt3dadd( 20.1265, -88.8898, 0.249157, 0.55 ) }
    dend_19 { pt3dadd( 21.2569, -90.0739, 0.540965, 0.55 ) }
    dend_19 { pt3dadd( 22.8795, -91.7897, 0.973008, 0.55 ) }
    dend_19 { pt3dadd( 24.819, -93.938, 1.60969, 0.55 ) }
    dend_19 { pt3dadd( 25.9197, -95.1387, 1.98638, 0.28 ) }
    dend_19 { pt3dadd( 27.1509, -96.5378, 2.44413, 0.28 ) }
    dend_19 { pt3dadd( 27.619, -97.0802, 2.63335, 0.28 ) }
    dend_19 { pt3dadd( 28.5672, -98.1329, 3.0475, 0.55 ) }
    dend_19 { pt3dadd( 29.951, -100.02, 3.82973, 0.28 ) }
    dend_19 { pt3dadd( 32.6457, -106.032, 3.65779, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.0853, -80.7659, 0.189328, 0.55 ) }
    dend_17 { pt3dadd( -14.1567, -82.6678, 0.523917, 0.55 ) }
    dend_17 { pt3dadd( -15.8686, -85.7066, 1.05853, 0.55 ) }
    dend_17 { pt3dadd( -17.31, -88.2652, 1.50867, 0.28 ) }
    dend_17 { pt3dadd( -19.1234, -91.4842, 2.07499, 0.55 ) }
    dend_17 { pt3dadd( -19.7248, -92.5518, 2.2628, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.0853, -80.7659, 0.189328, 0.55 ) }
    dend_16 { pt3dadd( -14.7614, -83.3801, 0.679752, 0.55 ) }
    dend_16 { pt3dadd( -15.6773, -84.4741, 0.997398, 0.55 ) }
    dend_16 { pt3dadd( -17.6648, -86.5094, 1.75231, 0.55 ) }
    dend_16 { pt3dadd( -19.0692, -87.775, 2.3718, 0.55 ) }
    dend_16 { pt3dadd( -20.4407, -88.9642, 2.99638, 0.55 ) }
    dend_16 { pt3dadd( -23.1546, -91.3949, 4.31712, 0.55 ) }
    dend_16 { pt3dadd( -25.3588, -93.3168, 5.31436, 0.55 ) }
    dend_16 { pt3dadd( -26.9135, -94.5482, 6.1354, 0.55 ) }
    dend_16 { pt3dadd( -29.1339, -96.17, 7.44822, 0.28 ) }
    dend_16 { pt3dadd( -30.1076, -96.8424, 8.00332, 0.55 ) }
    dend_16 { pt3dadd( -31.4174, -97.6995, 8.69479, 0.28 ) }
    dend_16 { pt3dadd( -33.0473, -98.8488, 9.52852, 0.55 ) }
    dend_16 { pt3dadd( -36.3949, -101.276, 11.1141, 0.28 ) }
    dend_16 { pt3dadd( -37.1746, -101.828, 11.4301, 0.55 ) }
    dend_16 { pt3dadd( -38.853, -102.874, 11.9206, 0.28 ) }
    dend_16 { pt3dadd( -40.2303, -103.497, 12.2975, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 61/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.26686, -69.2274, -5.44143, 0.83 ) }
    dend_22 { pt3dadd( -1.69117, -72.8697, -5.95856, 0.83 ) }
    dend_22 { pt3dadd( -2.14959, -76.8047, -6.51726, 0.83 ) }
    dend_22 { pt3dadd( -2.56532, -80.3733, -7.02392, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.26686, -69.2274, -5.44143, 0.55 ) }
    dend_21 { pt3dadd( -2.1685, -70.1334, -6.81646, 0.55 ) }
    dend_21 { pt3dadd( -3.15014, -71.0255, -8.50805, 0.55 ) }
    dend_21 { pt3dadd( -4.64682, -72.381, -11.0089, 0.55 ) }
    dend_21 { pt3dadd( -5.92772, -73.5228, -13.0413, 1.38 ) }
    dend_21 { pt3dadd( -6.36265, -73.8882, -13.6955, 1.38 ) }
    dend_21 { pt3dadd( -8.08433, -75.3272, -16.3314, 0.55 ) }
    dend_21 { pt3dadd( -8.95878, -76.1616, -18.0243, 0.55 ) }
    dend_21 { pt3dadd( -9.70161, -77.0754, -19.9785, 0.55 ) }
    dend_21 { pt3dadd( -9.95941, -77.4369, -20.718, 0.55 ) }
    dend_21 { pt3dadd( -10.2265, -77.8142, -21.4624, 0.55 ) }
    dend_21 { pt3dadd( -11.3209, -79.4811, -24.3799, 0.55 ) }
    dend_21 { pt3dadd( -12.4741, -81.5372, -27.3911, 0.55 ) }
    dend_21 { pt3dadd( -13.577, -83.792, -30.3849, 0.55 ) }
    dend_21 { pt3dadd( -14.5089, -85.6267, -32.6894, 0.55 ) }
    dend_21 { pt3dadd( -15.294, -87.3061, -34.5076, 0.28 ) }
    dend_21 { pt3dadd( -15.8811, -88.7157, -36.0035, 0.55 ) }
    dend_21 { pt3dadd( -16.6533, -90.5637, -37.8574, 0.55 ) }
    dend_21 { pt3dadd( -18.0142, -93.7138, -40.8621, 0.55 ) }
    dend_21 { pt3dadd( -19.1254, -96.4331, -43.378, 0.55 ) }
    dend_21 { pt3dadd( -20.1293, -99.2454, -46.0618, 0.55 ) }
    dend_21 { pt3dadd( -21.7468, -104.328, -51.1424, 0.55 ) }
    dend_21 { pt3dadd( -22.097, -105.436, -52.3813, 0.55 ) }
    dend_21 { pt3dadd( -24.2924, -109.559, -59.6925, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.56532, -80.3733, -7.02392, 0.83 ) }
    dend_24 { pt3dadd( -2.38636, -84.1808, -4.71545, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 91/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.56532, -80.3733, -7.02392, 0.55 ) }
    dend_23 { pt3dadd( -3.9754, -83.4128, -9.77624, 0.55 ) }
    dend_23 { pt3dadd( -4.34955, -84.1519, -10.3502, 0.28 ) }
    dend_23 { pt3dadd( -6.60616, -88.7727, -14.2926, 0.28 ) }
    dend_23 { pt3dadd( -7.38614, -90.5595, -15.9517, 0.28 ) }
    dend_23 { pt3dadd( -7.71012, -91.3831, -16.7136, 0.28 ) }
    dend_23 { pt3dadd( -8.32272, -93.3858, -18.6319, 0.28 ) }
    dend_23 { pt3dadd( -8.85802, -95.5802, -20.6255, 0.55 ) }
    dend_23 { pt3dadd( -9.62984, -100.017, -24.5194, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -9.9303, -102.742, -26.939, 0.28 ) }
    dend_23 { pt3dadd( -9.99932, -104.008, -28.1189, 0.55 ) }
    dend_23 { pt3dadd( -9.99372, -108.063, -32.0171, 0.28 ) }
    dend_23 { pt3dadd( -9.90984, -109.305, -33.3005, 0.55 ) }
    dend_23 { pt3dadd( -9.5667, -111.303, -35.2917, 0.55 ) }
    dend_23 { pt3dadd( -12.5958, -119.263, -40.8864, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.38636, -84.1808, -4.71545, 0.83 ) }
    dend_26 { pt3dadd( -1.64876, -89.8977, -7.28864, 0.83 ) }
    dend_26 { pt3dadd( -1.45927, -92.233, -8.17823, 0.83 ) }
    dend_26 { pt3dadd( -1.47194, -97.4629, -10.0177, 0.55 ) }
    dend_26 { pt3dadd( -1.7533, -101.023, -11.0575, 0.55 ) }
    dend_26 { pt3dadd( -1.97316, -102.972, -11.5314, 0.55 ) }
    dend_26 { pt3dadd( -2.45467, -107.004, -12.3496, 0.55 ) }
    dend_26 { pt3dadd( -3.04656, -110.388, -12.6115, 0.55 ) }
    dend_26 { pt3dadd( -3.91549, -114.257, -12.6997, 0.55 ) }
    dend_26 { pt3dadd( -4.70418, -117.518, -12.6594, 0.55 ) }
    dend_26 { pt3dadd( -5.10231, -119.392, -12.536, 0.55 ) }
    dend_26 { pt3dadd( -5.35412, -121.021, -12.4331, 0.55 ) }
    dend_26 { pt3dadd( -5.50399, -122.929, -12.3103, 0.55 ) }
    dend_26 { pt3dadd( -5.58608, -125.579, -12.2031, 0.55 ) }
    dend_26 { pt3dadd( -5.34636, -128.897, -12.2596, 0.55 ) }
    dend_26 { pt3dadd( -5.10935, -131.872, -12.568, 0.55 ) }
    dend_26 { pt3dadd( -5.06162, -134.162, -12.7756, 0.55 ) }
    dend_26 { pt3dadd( -5.0434, -135.637, -12.8473, 0.55 ) }
    dend_26 { pt3dadd( -5.07242, -137.972, -12.8828, 0.55 ) }
    dend_26 { pt3dadd( -5.13535, -141.437, -12.7887, 0.55 ) }
    dend_26 { pt3dadd( -5.07536, -145.718, -12.684, 0.55 ) }
    dend_26 { pt3dadd( -4.92396, -149.58, -12.67, 0.55 ) }
    dend_26 { pt3dadd( -4.60623, -153.538, -12.6466, 0.55 ) }
    dend_26 { pt3dadd( -4.19252, -157.49, -12.8187, 0.55 ) }
    dend_26 { pt3dadd( -3.82236, -160.113, -13.0376, 0.55 ) }
    dend_26 { pt3dadd( -3.08755, -164.621, -13.5079, 0.55 ) }
    dend_26 { pt3dadd( -2.24986, -168.833, -14.232, 0.55 ) }
    dend_26 { pt3dadd( -1.36323, -172.597, -15.2061, 0.55 ) }
    dend_26 { pt3dadd( 0.108762, -178.746, -17.0417, 0.55 ) }
    dend_26 { pt3dadd( 0.775212, -181.748, -17.8944, 0.55 ) }
    dend_26 { pt3dadd( 1.34422, -184.911, -18.7253, 0.55 ) }
    dend_26 { pt3dadd( 1.80648, -188.154, -19.4327, 0.55 ) }
    dend_26 { pt3dadd( 2.47076, -192.858, -20.5184, 0.55 ) }
    dend_26 { pt3dadd( 2.6674, -195.798, -21.0443, 0.55 ) }
    dend_26 { pt3dadd( 2.88024, -201.154, -21.7183, 0.55 ) }
    dend_26 { pt3dadd( 2.95207, -203.547, -21.9486, 0.55 ) }
    dend_26 { pt3dadd( 3.02804, -206.342, -22.1488, 0.55 ) }
    dend_26 { pt3dadd( 3.34427, -212.163, -22.524, 0.55 ) }
    dend_26 { pt3dadd( 4.11767, -221.181, -23.2767, 0.55 ) }
    dend_26 { pt3dadd( 4.74761, -225.764, -23.8469, 0.55 ) }
    dend_26 { pt3dadd( 5.19228, -228.271, -24.2657, 0.55 ) }
    dend_26 { pt3dadd( 5.57453, -230.517, -24.6791, 0.55 ) }
    dend_26 { pt3dadd( 6.49822, -235.568, -25.5836, 0.55 ) }
    dend_26 { pt3dadd( 7.0457, -238.281, -25.9783, 0.55 ) }
    dend_26 { pt3dadd( 7.56288, -240.528, -26.3664, 0.55 ) }
    dend_26 { pt3dadd( 8.24415, -243.875, -26.8764, 0.55 ) }
    dend_26 { pt3dadd( 8.87386, -247.761, -27.3582, 0.55 ) }
    dend_26 { pt3dadd( 9.31092, -250.739, -27.747, 0.55 ) }
    dend_26 { pt3dadd( 9.7918, -255.031, -28.2702, 0.55 ) }
    dend_26 { pt3dadd( 9.88065, -255.759, -28.361, 0.55 ) }
    dend_26 { pt3dadd( 10.8573, -262.189, -29.2265, 0.55 ) }
    dend_26 { pt3dadd( 12.1097, -269.316, -30.2076, 0.55 ) }
    dend_26 { pt3dadd( 12.894, -274.02, -30.7049, 0.55 ) }
    dend_26 { pt3dadd( 13.3174, -276.64, -30.9791, 0.28 ) }
    dend_26 { pt3dadd( 13.5436, -277.935, -31.0888, 0.28 ) }
    dend_26 { pt3dadd( 13.8463, -279.579, -31.2166, 0.55 ) }
    dend_26 { pt3dadd( 14.4839, -283.204, -31.5289, 0.28 ) }
    dend_26 { pt3dadd( 15.4397, -287.865, -32.0663, 0.28 ) }
    dend_26 { pt3dadd( 16.1497, -291.919, -32.5251, 0.28 ) }
    dend_26 { pt3dadd( 16.32, -292.881, -32.6442, 0.55 ) }
    dend_26 { pt3dadd( 16.9595, -296.799, -33.3492, 0.28 ) }
    dend_26 { pt3dadd( 17.5894, -301.518, -34.363, 0.28 ) }
    dend_26 { pt3dadd( 17.899, -304.82, -35.0023, 0.28 ) }
    dend_26 { pt3dadd( 18.2798, -311.014, -36.0236, 0.28 ) }
    dend_26 { pt3dadd( 18.2249, -314.571, -36.3778, 0.55 ) }
    dend_26 { pt3dadd( 17.8135, -321.48, -36.8044, 0.28 ) }
    dend_26 { pt3dadd( 17.2641, -326.576, -36.9134, 0.28 ) }
    dend_26 { pt3dadd( 16.6196, -331.539, -36.879, 0.55 ) }
    dend_26 { pt3dadd( 16.2172, -334.23, -36.8396, 0.28 ) }
    dend_26 { pt3dadd( 14.7842, -342.995, -36.5927, 0.28 ) }
    dend_26 { pt3dadd( 14.2806, -346.268, -36.5873, 0.55 ) }
    dend_26 { pt3dadd( 13.4791, -351.836, -36.4783, 0.28 ) }
    dend_26 { pt3dadd( 13.228, -354.158, -36.4839, 0.83 ) }
    dend_26 { pt3dadd( 12.7872, -359.741, -36.6798, 0.28 ) }
    dend_26 { pt3dadd( 12.7145, -361.425, -36.7284, 0.55 ) }
    dend_26 { pt3dadd( 12.8283, -368.842, -36.8072, 0.28 ) }
    dend_26 { pt3dadd( 12.946, -373.088, -36.8525, 0.55 ) }
    dend_26 { pt3dadd( 13.1334, -376.858, -36.8767, 0.28 ) }
    dend_26 { pt3dadd( 13.2184, -378.213, -36.8787, 0.55 ) }
    dend_26 { pt3dadd( 13.7058, -383.555, -36.7905, 0.28 ) }
    dend_26 { pt3dadd( 13.8539, -384.951, -36.7196, 0.83 ) }
    dend_26 { pt3dadd( 13.5855, -396.713, -38.6291, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 88/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.38636, -84.1808, -4.71545, 0.55 ) }
    dend_25 { pt3dadd( -2.00093, -86.8587, -4.53071, 0.55 ) }
    dend_25 { pt3dadd( -1.62926, -89.6529, -4.07182, 0.55 ) }
    dend_25 { pt3dadd( -1.4367, -92.361, -3.57488, 0.55 ) }
    dend_25 { pt3dadd( -1.25193, -95.9156, -2.89682, 0.55 ) }
    dend_25 { pt3dadd( -1.03897, -99.1518, -2.04118, 0.55 ) }
    dend_25 { pt3dadd( -0.616716, -104.633, -0.368997, 0.55 ) }
    dend_25 { pt3dadd( -0.44503, -106.97, 0.667895, 0.55 ) }
    dend_25 { pt3dadd( -0.131345, -109.52, 2.05806, 0.55 ) }
    dend_25 { pt3dadd( -8.21827E-4, -110.398, 2.62487, 0.55 ) }
    dend_25 { pt3dadd( 0.594406, -114.261, 5.49249, 0.55 ) }
    dend_25 { pt3dadd( 1.03516, -116.573, 7.35597, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( 1.65914, -120.106, 10.284, 0.55 ) }
    dend_25 { pt3dadd( 2.03735, -122.328, 12.168, 0.55 ) }
    dend_25 { pt3dadd( 2.59788, -126.03, 15.4142, 0.55 ) }
    dend_25 { pt3dadd( 2.83694, -129.145, 18.2037, 0.55 ) }
    dend_25 { pt3dadd( 2.83772, -130.944, 19.9047, 0.55 ) }
    dend_25 { pt3dadd( 2.66327, -133.655, 22.6491, 0.55 ) }
    dend_25 { pt3dadd( 2.36989, -136.525, 25.5268, 0.55 ) }
    dend_25 { pt3dadd( 2.03877, -139.16, 28.1692, 0.55 ) }
    dend_25 { pt3dadd( 1.65144, -141.954, 30.8833, 0.55 ) }
    dend_25 { pt3dadd( 1.16975, -145.903, 34.5195, 0.55 ) }
    dend_25 { pt3dadd( 1.00818, -147.536, 35.9409, 0.28 ) }
    dend_25 { pt3dadd( 0.938339, -149.41, 37.3213, 0.55 ) }
    dend_25 { pt3dadd( 1.01512, -151.657, 38.3032, 0.28 ) }
    dend_25 { pt3dadd( 1.14418, -152.669, 38.5117, 0.55 ) }
    dend_25 { pt3dadd( 1.33758, -153.561, 38.4849, 0.28 ) }
    dend_25 { pt3dadd( 1.63991, -154.725, 38.2131, 0.83 ) }
    dend_25 { pt3dadd( 3.05173, -159.509, 36.9022, 0.28 ) }
    dend_25 { pt3dadd( 3.31016, -160.506, 36.6629, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_41 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_27 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_7 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_37 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_26 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_28 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_8 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_38 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_44 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_24 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 9
    dend_41 nseg = 5
    dend_27 nseg = 5
    dend_29 nseg = 5
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_7 nseg = 5
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_37 nseg = 9
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_9 nseg = 5
    dend_40 nseg = 5
    dend_39 nseg = 5
    dend_34 nseg = 3
    dend_11 nseg = 3
    dend_19 nseg = 3
    dend_21 nseg = 3
    dend_23 nseg = 3
    dend_26 nseg = 15
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_LBC_d031f0be22_0_0


