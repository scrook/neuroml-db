// Cell: cACint209_L5_LBC_3285d77dba_0_0
/*
{
  "id" : "cACint209_L5_LBC_3285d77dba_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.24986, 8.66179, -0.266886, 1.81928", "-1.99773, 7.71094, -0.243919, 3.13771", "-1.74561, 6.7601, -0.220952, 4.2898", "-1.49349, 5.80925, -0.197985, 6.24218", "-1.24137, 4.8584, -0.175018, 7.75134", "-0.989246, 3.90756, -0.152051, 8.81916", "-0.737124, 2.95671, -0.129084, 9.30643", "-0.485002, 2.00586, -0.106117, 9.79367", "-0.23288, 1.05502, -0.0831497, 10.3575", "0.0192416, 0.104171, -0.0601827, 10.6175", "0.271364, -0.846675, -0.0372157, 10.6286", "0.523485, -1.79752, -0.0142487, 10.564", "0.775607, -2.74837, 0.00871831, 10.4925", "1.02773, -3.69921, 0.0316853, 10.2088", "1.27985, -4.65006, 0.0546523, 9.65193", "1.53197, -5.60091, 0.0776193, 9.00896", "1.7841, -6.55175, 0.100586, 8.08521", "2.03622, -7.5026, 0.123553, 6.83318", "2.28834, -8.45345, 0.14652, 5.15146", "2.54046, -9.40429, 0.169487, 3.38897", "2.79258, -10.3551, 0.192454, 2.13858" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.45367, 0.250194, 4.43561, 0.96", "-5.21732, -0.523519, 5.67183, 0.96", "-5.82693, -1.00686, 6.54742, 0.88", "-7.83516, -2.35118, 9.08048, 0.81", "-8.70553, -2.9035, 10.0639, 0.74", "-10.0761, -3.81075, 11.5147, 0.66", "-10.9067, -4.384, 12.5189, 0.59", "-11.5754, -4.91259, 13.4888, 0.81", "-12.0906, -5.29836, 14.2471, 0.81", "-13.1851, -5.96608, 15.8068, 0.59", "-14.125, -6.46105, 17.2007, 1.33", "-16.3828, -7.49591, 20.7308, 1.55", "-18.0341, -8.18853, 23.5618, 0.74", "-18.62, -8.38068, 24.5941, 0.59", "-19.4343, -8.57879, 26.025, 1.03", "-19.7636, -8.61681, 26.588, 1.47", "-20.6865, -8.60944, 28.1004, 1.47", "-22.5074, -8.45971, 31.0997, 0.81", "-23.1618, -8.41632, 32.4155, 0.59", "-23.7662, -8.4783, 33.9534, 0.59", "-24.1437, -8.61364, 35.0623, 0.96", "-24.487, -8.85085, 36.2527, 0.96", "-25.3945, -9.74363, 40.0063, 0.59", "-25.7696, -10.3401, 42.2889, 0.59", "-25.9461, -10.8223, 44.058, 0.44", "-26.0107, -11.1514, 45.1686, 1.18", "-26.0434, -11.532, 46.1466, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.51366, 7.9902, 1.68561, 3.24", "-1.51897, 8.54006, 1.79031, 3.24", "-1.53698, 10.4076, 2.14591, 2.58", "-1.55108, 11.869, 2.4242, 2.36", "-1.56256, 13.0596, 2.6509, 2.36", "-1.57585, 14.4368, 2.91313, 2.36", "-1.58226, 15.1021, 3.03983, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.55634, -6.3398, 3.06561, 1.18", "5.82881, -6.43499, 3.31234, 1.18", "7.49342, -7.15761, 4.52015, 0.88", "8.4083, -7.55867, 5.04002, 1.11", "10.9542, -8.6087, 6.18588, 1.33", "12.2225, -9.09221, 6.63382, 1.33", "13.6622, -9.62606, 7.14293, 1.25", "15.401, -10.2542, 7.66781, 0.96", "16.8144, -10.7855, 7.98603, 0.96", "17.9925, -11.2535, 8.17695, 1.25", "19.4401, -11.7879, 8.37323, 1.25", "21.4805, -12.4158, 8.77067, 1.47", "22.842, -12.7542, 9.13817, 0.74", "23.8912, -12.936, 9.56041, 0.74", "25.4363, -13.1399, 10.304, 0.59", "27.436, -13.3768, 11.3042, 0.59", "28.2345, -13.4634, 11.6872, 0.81", "29.1527, -13.5611, 12.0447, 0.81", "31.3012, -13.717, 12.9516, 0.52", "32.1212, -13.7306, 13.3102, 0.52", "33.4518, -13.695, 13.8791, 0.52", "34.4886, -13.8119, 14.1929, 0.59", "36.0986, -14.2653, 14.4954, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.77634, -9.79978, 1.87561, 2.43", "1.77634, -9.79978, 1.87561, 2.43", "1.83088, -10.6743, 1.66142, 2.06", "1.91234, -11.9805, 1.3415, 1.33", "1.99233, -13.263, 1.02736, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.79258, -10.3551, 0.192454, 0.59", "6.63706, -24.8541, 0.192454, 0.59", "10.4816, -39.353, 0.192454, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.58226, 15.1021, 3.03983, 2.06", "-0.925263, 16.0371, 4.27603, 2.06", "0.38304, 17.9948, 6.54544, 1.92", "1.61646, 19.9515, 8.61713, 1.47", "2.15831, 20.8849, 9.51359, 1.47", "2.99277, 22.4493, 10.869, 1.25", "3.60931, 23.6051, 11.8704, 1.77", "4.23252, 24.8599, 12.8986, 1.55", "4.93287, 26.4185, 13.8934, 1.62", "5.37054, 27.5236, 14.4646, 2.21", "5.8119, 28.7629, 15.0395, 2.65" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.58226, 15.1021, 3.03983, 0.59", "-3.29516, 15.4247, 2.21399, 0.59", "-4.24371, 15.5281, 1.78923, 0.59", "-5.05989, 15.5527, 1.37317, 0.59", "-6.6841, 15.5321, 0.376012, 0.52", "-7.74551, 15.5143, -0.348093, 0.81", "-8.55374, 15.5098, -0.924029, 1.18", "-9.16601, 15.4755, -1.35844, 1.18", "-10.6465, 15.3645, -2.44924, 0.66", "-11.9537, 15.2951, -3.39951, 0.66", "-12.8248, 15.2822, -3.99571, 1.25", "-13.3253, 15.2935, -4.31057, 1.47", "-14.4665, 15.3617, -4.99396, 0.52", "-15.3161, 15.4376, -5.43917, 0.52", "-16.7543, 15.591, -5.97091, 0.52", "-17.6917, 15.6672, -6.2119, 1.03", "-18.3707, 15.6924, -6.36051, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "36.0986, -14.2653, 14.4954, 0.52", "36.0662, -16.6859, 13.9873, 0.52", "35.8764, -17.6754, 13.7873, 0.37", "35.2033, -19.9246, 13.2564, 0.37", "34.582, -21.5157, 12.6924, 0.59", "34.207, -22.3775, 12.3155, 0.22", "33.3193, -24.273, 11.4616, 0.22", "32.6448, -25.5136, 10.8118, 0.22", "31.4259, -27.5125, 9.69892, 0.74", "29.547, -30.2304, 8.13933, 0.29", "28.3052, -32.0106, 7.08212, 0.07", "27.7313, -32.908, 6.50016, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "36.0986, -14.2653, 14.4954, 1.03", "37.8657, -14.2233, 15.6804, 1.03", "38.6467, -14.2896, 15.875, 0.52", "39.8843, -14.3049, 16.0184, 0.52", "42.3813, -14.241, 16.2046, 0.37", "43.8067, -14.2124, 16.2144, 0.37", "47.2531, -14.1635, 16.0964, 0.37", "56.1393, -14.2144, 15.16, 0.37", "61.3331, -14.2928, 14.3665, 0.66", "62.6906, -14.3145, 14.0913, 0.66", "65.9692, -14.3562, 13.1659, 0.74", "67.4098, -14.3554, 12.6515, 0.74", "69.246, -14.3407, 11.771, 0.37", "70.3723, -14.3417, 11.1022, 0.37", "71.4657, -14.4122, 10.5288, 0.37", "72.5273, -14.4075, 10.1513, 0.81", "73.9029, -14.2453, 9.93901, 0.81", "74.9782, -14.0823, 9.85893, 0.81", "76.6882, -13.8983, 9.8825, 0.37", "77.9498, -13.9137, 9.95073, 0.29", "79.3412, -14.1071, 10.0899, 0.29", "81.0434, -14.4882, 10.3761, 0.44", "82.3179, -14.8369, 10.7149, 0.44", "84.2896, -15.4268, 11.3472, 0.44", "86.0256, -15.9659, 11.9285, 0.88", "86.767, -16.1628, 12.2087, 0.88", "88.5697, -16.4279, 13.0494, 0.52", "90.221, -16.3466, 13.9956, 0.74", "91.5859, -16.0157, 14.8127, 0.81", "92.4304, -15.6816, 15.2845, 0.81", "93.5045, -15.1788, 15.8257, 0.52", "94.894, -14.5221, 16.4266, 0.52", "95.6085, -14.2215, 16.673, 0.74", "96.7394, -13.8628, 16.9769, 0.74", "97.9635, -13.6314, 17.2645, 0.59", "99.1489, -13.5732, 17.4886, 0.59", "100.667, -13.6872, 17.6993, 0.66", "101.791, -13.9167, 17.7751, 0.88", "102.54, -14.157, 17.7847, 0.88", "103.41, -14.5923, 17.7448, 0.52", "104.46, -15.3464, 17.6385, 0.52", "105.155, -16.062, 17.5083, 0.52", "106.148, -17.509, 17.2442, 0.44", "106.754, -18.5603, 16.9833, 0.44", "107.515, -20.0181, 16.5229, 0.59", "107.827, -20.637, 16.2779, 0.74", "108.341, -21.5191, 15.8096, 0.52", "108.851, -21.84, 15.4075, 0.37", "110.779, -21.6642, 14.2057, 0.52", "111.547, -21.5479, 13.7762, 0.52", "112.47, -21.4243, 13.3191, 0.52", "114.033, -21.2823, 12.6417, 0.52", "115.526, -21.1403, 12.0676, 0.52", "117.0, -21.0061, 11.554, 0.66", "118.221, -20.9387, 11.1985, 0.66", "119.459, -20.8743, 10.8399, 0.37", "120.618, -20.8403, 10.5183, 0.37", "121.901, -20.8516, 10.1978, 0.37", "122.772, -20.8826, 9.96087, 0.66", "123.217, -20.9155, 9.8128, 0.66", "123.756, -20.9954, 9.54894, 0.66", "124.285, -21.1339, 9.20819, 0.66", "125.09, -21.4368, 8.60533, 0.37", "126.183, -21.9529, 7.7622, 0.37", "127.33, -22.4663, 6.96515, 0.37", "128.315, -22.834, 6.35688, 0.22", "129.269, -23.1237, 5.86967, 0.37", "130.058, -23.2553, 5.57907, 0.44", "130.848, -23.2397, 5.41231, 0.44", "132.552, -22.9319, 5.30406, 0.52", "133.107, -22.7806, 5.30636, 0.37", "133.981, -22.4994, 5.33776, 0.37", "134.832, -22.2296, 5.33838, 0.52", "135.434, -22.0334, 5.2504, 0.66", "135.92, -21.8776, 5.08277, 0.88", "136.259, -21.755, 4.90072, 0.88", "136.698, -21.5678, 4.64262, 1.03", "137.256, -21.2898, 4.28694, 1.03", "138.113, -20.865, 3.72279, 0.52", "139.134, -20.4128, 3.03714, 0.29", "140.004, -20.1379, 2.50685, 0.66", "140.677, -19.9817, 2.11427, 0.81", "141.335, -19.8797, 1.74715, 0.81", "141.932, -19.8126, 1.42275, 0.81", "142.903, -19.7452, 0.938424, 0.37", "144.764, -19.7589, 0.0523591, 0.37", "145.691, -19.8122, -0.347502, 0.44", "146.487, -19.8452, -0.672875, 0.59", "147.223, -19.8311, -0.960291, 0.59", "148.306, -19.7229, -1.36184, 0.59", "149.303, -19.5247, -1.70753, 0.52", "150.43, -19.2144, -2.08783, 0.74", "151.209, -19.019, -2.30605, 0.74", "152.325, -18.8179, -2.64656, 0.37", "153.172, -18.7224, -2.93281, 0.44", "154.099, -18.6681, -3.277, 0.66", "154.788, -18.669, -3.5427, 0.74", "155.545, -18.7449, -3.82366, 0.74", "157.12, -18.9923, -4.41438, 0.59", "157.567, -19.0766, -4.59173, 0.59", "158.218, -19.1893, -4.87751, 0.59", "158.863, -19.305, -5.203, 0.37", "159.859, -19.4507, -5.74351, 0.59", "160.728, -19.5429, -6.25609, 0.81", "161.388, -19.5794, -6.61263, 0.81", "162.4, -19.6392, -7.09951, 0.52", "163.528, -19.671, -7.5762, 0.37", "164.305, -19.6609, -7.85375, 0.29", "164.895, -19.6255, -8.01463, 0.29", "166.23, -19.4265, -8.26078, 0.52", "167.564, -19.1255, -8.43144, 0.52", "168.459, -18.9182, -8.49827, 0.88", "169.189, -18.7894, -8.56134, 0.88", "169.744, -18.7448, -8.66692, 0.88", "170.95, -18.7377, -9.03942, 0.37", "171.773, -18.778, -9.44032, 0.37", "172.918, -18.8806, -10.1371, 0.37", "174.28, -19.0772, -10.9745, 0.29", "175.309, -19.2816, -11.7029, 0.29", "175.939, -19.3958, -12.1919, 0.52", "176.26, -19.4442, -12.4671, 0.74", "176.806, -19.4922, -12.9934, 0.44", "177.9, -19.5154, -14.0626, 0.37", "179.698, -19.4707, -15.7261, 0.44", "180.712, -19.4696, -16.6623, 0.44", "181.716, -19.5086, -17.6465, 1.03", "182.712, -19.5801, -18.6834, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.99233, -13.263, 1.02736, 1.18", "1.62912, -15.1521, 2.97308, 1.18", "1.36837, -16.0088, 3.82816, 1.18", "0.707003, -18.1816, 5.99703, 1.18", "0.23536, -19.7311, 7.54373, 0.88", "-0.0581597, -20.6955, 8.50629, 0.74", "-0.314228, -21.5367, 9.34603, 1.03", "-1.02896, -23.0931, 10.6618, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.99233, -13.263, 1.02736, 0.96", "3.07885, -14.5943, -2.02936, 0.96", "3.93433, -15.8294, -4.32619, 0.96", "4.03473, -16.0092, -4.62579, 1.4", "5.31964, -18.3463, -8.25641, 0.88", "5.60758, -18.8466, -8.97733, 0.88", "6.15, -19.7303, -10.1846, 0.52", "6.91984, -20.9075, -11.6169, 0.52", "8.20941, -22.8721, -13.8388, 0.88", "9.83883, -25.3469, -16.4269, 0.52", "11.1344, -27.2426, -18.2462, 0.52", "11.9659, -28.3597, -19.3083, 0.52", "12.8951, -29.5801, -20.4174, 0.52", "13.6549, -30.5988, -21.2767, 0.52", "14.607, -31.953, -22.2416, 0.88", "15.1984, -32.9892, -22.8578, 1.11", "16.2268, -35.2161, -24.0219, 0.44", "16.8165, -36.6637, -24.7465, 0.74", "17.2191, -37.6989, -25.2218, 0.96", "17.6331, -38.7291, -25.6464, 0.96", "18.3021, -40.3394, -26.3413, 0.66", "18.6268, -41.1116, -26.708, 0.66", "19.4753, -42.9962, -27.6709, 0.44", "20.0452, -43.9652, -28.4176, 0.59", "20.7429, -44.894, -29.3378, 0.44", "22.283, -46.3517, -31.6429, 0.37", "23.3656, -47.0917, -33.4637, 0.96", "23.787, -47.3316, -34.2255, 1.33", "26.4513, -48.7122, -39.579, 0.81", "27.0915, -49.0369, -40.9782, 1.11", "30.003, -50.5763, -47.8431, 0.66", "32.0754, -51.8195, -53.1576, 1.55", "33.8455, -53.1182, -58.0227, 0.96", "35.3376, -54.5216, -62.5646, 0.81", "35.8063, -55.1596, -64.2321, 0.96", "36.1514, -55.9662, -65.8302, 0.37", "36.3637, -57.4149, -67.6739, 0.29", "36.3396, -59.1487, -69.0952, 0.29", "36.2294, -60.224, -69.6649, 0.52", "36.1677, -60.8484, -69.8718, 0.52", "36.0035, -63.5501, -70.7291, 0.29", "35.9877, -64.2953, -70.9802, 0.59", "35.9974, -64.9693, -71.2081, 0.59", "36.017, -65.8263, -71.5264, 0.29", "36.0828, -67.5686, -72.2594, 0.29", "36.1881, -69.2664, -73.0916, 0.59", "36.2211, -69.8435, -73.4257, 0.81", "36.3243, -72.4715, -75.1119, 0.22", "36.383, -73.7885, -76.0632, 0.22", "36.4852, -75.6133, -77.5059, 0.22", "36.6174, -77.753, -79.2879, 0.81", "36.7513, -79.6692, -81.0207, 0.44", "36.8434, -80.7672, -82.0786, 0.44", "37.0283, -82.6076, -83.9529, 0.88", "37.1997, -83.882, -85.1798, 0.74", "37.2797, -84.4128, -85.6548, 0.74", "37.5897, -87.0498, -87.7938, 0.44", "37.6948, -88.2158, -88.629, 0.44", "37.7141, -89.1874, -89.2983, 0.29", "37.6137, -90.6595, -90.2245, 0.29", "37.2273, -93.1219, -91.712, 0.29", "36.9089, -94.5458, -92.533, 0.74", "36.5704, -95.733, -93.1318, 0.74", "35.8364, -97.995, -94.2856, 0.44", "35.4742, -99.0353, -94.7926, 0.44", "35.0743, -100.172, -95.2848, 0.29", "34.9042, -100.664, -95.445, 0.66", "34.45, -101.97, -95.8315, 0.37", "34.0627, -103.034, -96.1062, 0.88", "33.6573, -104.0, -96.366, 0.88", "33.0526, -105.293, -96.8044, 0.59", "32.4116, -106.534, -97.2913, 0.29", "31.7427, -107.755, -97.9581, 0.66", "31.4422, -108.3, -98.3568, 0.66", "30.6624, -110.048, -99.9825, 0.22", "30.4641, -110.693, -100.671, 0.22", "30.35, -111.196, -101.26, 0.74", "30.2002, -112.965, -103.469, 0.44", "30.2699, -114.03, -104.864, 0.44", "30.559, -115.472, -106.845, 0.29", "30.742, -115.897, -107.464, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4816, -39.353, 0.192454, 0.15", "14.326, -53.852, 0.192454, 0.15", "18.1705, -68.351, 0.192454, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "5.8119, 28.7629, 15.0395, 0.81", "7.37618, 29.9344, 14.9725, 0.81", "8.03943, 30.4246, 14.8777, 0.81", "9.24013, 31.221, 14.6382, 0.81", "10.8542, 32.1903, 14.2818, 0.96", "11.7058, 32.6702, 14.0854, 1.25", "12.4521, 33.0707, 13.9131, 1.25", "13.8347, 33.8012, 13.5564, 0.96", "14.9779, 34.4163, 13.239, 0.81", "16.0159, 34.9698, 12.9312, 1.33", "16.6936, 35.3184, 12.6957, 1.62", "17.7161, 35.8024, 12.3409, 0.74", "18.6548, 36.209, 12.0321, 0.59", "19.6017, 36.6303, 11.7138, 0.52", "20.6917, 37.1884, 11.227, 0.44", "21.3668, 37.5347, 10.8117, 0.44", "22.5867, 38.0664, 9.83719, 0.74", "23.3159, 38.3036, 9.14215, 0.74", "24.5046, 38.5232, 7.9186, 0.52", "25.5276, 38.5927, 6.88866, 0.88", "26.5893, 38.6235, 5.78941, 0.88", "27.4987, 38.7318, 4.74679, 0.59", "27.9437, 38.8146, 4.20432, 0.59", "28.4804, 38.9152, 3.58495, 0.44", "29.3223, 39.0901, 2.86793, 0.44", "30.0263, 39.317, 2.43302, 0.44", "31.5023, 40.0166, 1.802, 0.44", "32.7217, 40.7679, 1.38125, 0.74", "33.7443, 41.5774, 1.07566, 0.96", "35.649, 43.4592, 0.621191, 0.44", "36.0802, 43.959, 0.538346, 0.96", "36.8355, 44.9289, 0.423725, 0.37", "37.5535, 45.9853, 0.342814, 0.37", "38.2468, 47.2104, 0.070915, 0.37", "38.7228, 48.221, -0.306825, 0.74", "39.0358, 48.947, -0.698901, 0.44", "39.4155, 49.8744, -1.2384, 0.52", "39.6797, 50.5933, -1.68, 1.11", "40.4163, 52.7347, -3.01287, 0.44", "40.7782, 53.8859, -3.70931, 0.29", "41.0597, 54.9595, -4.34385, 0.29", "41.2412, 55.7611, -4.78391, 0.81", "41.3898, 56.4551, -5.13604, 0.81", "41.6279, 57.5104, -5.61355, 0.52", "41.9426, 58.9241, -6.16146, 0.52", "42.2867, 60.5641, -6.86306, 0.44", "42.3644, 61.0099, -7.06917, 0.88", "42.4988, 61.7464, -7.43821, 0.88", "42.7416, 62.7717, -7.96772, 0.37", "43.0082, 63.5359, -8.43368, 0.22", "43.3232, 64.2646, -8.90944, 0.22", "43.6907, 64.9867, -9.40318, 0.22", "44.224, 65.883, -10.0562, 0.22", "44.9932, 67.0579, -10.8607, 0.22", "46.2099, 68.7172, -11.9036, 0.81", "46.6134, 69.2041, -12.1652, 0.81", "47.4418, 70.102, -12.5886, 0.81", "48.1869, 70.8681, -12.8903, 0.44", "49.1799, 71.8845, -13.2195, 0.44", "49.5442, 72.2687, -13.305, 0.96", "50.1923, 72.9689, -13.39, 0.52", "51.0116, 73.8146, -13.493, 0.37", "51.7345, 74.5634, -13.5774, 0.66", "52.3193, 75.1754, -13.6827, 0.66", "52.9139, 75.8155, -13.8293, 0.29", "53.7885, 76.7546, -14.043, 0.29", "54.6432, 77.6596, -14.2395, 0.59", "55.2339, 78.2561, -14.361, 0.37", "55.9603, 78.9366, -14.5148, 0.66", "56.5659, 79.4808, -14.6438, 0.66", "57.6324, 80.4324, -14.8669, 0.29", "58.4228, 81.1639, -15.0211, 0.29", "58.9276, 81.6326, -15.1218, 0.29", "59.3965, 82.0219, -15.2241, 0.66", "59.7432, 82.2908, -15.3035, 0.66", "60.1899, 82.6465, -15.46, 0.66", "60.9257, 83.2627, -15.7989, 0.37", "61.7558, 83.9638, -16.2818, 0.37", "62.7425, 84.7683, -16.9758, 0.96", "63.2909, 85.1719, -17.3882, 0.96", "64.707, 86.1103, -18.4849, 0.29", "65.6378, 86.6823, -19.2357, 0.29", "66.4988, 87.2006, -19.9035, 0.29", "67.7467, 87.9087, -20.7441, 0.29", "68.4294, 88.2645, -21.1297, 0.74", "69.0466, 88.5719, -21.4306, 0.74", "70.6934, 89.4037, -22.0205, 0.29", "72.6945, 90.5046, -22.5762, 0.29", "74.7826, 91.7454, -22.9643, 0.29", "75.7661, 92.3893, -23.0768, 0.29", "76.6444, 93.0105, -23.1456, 0.29", "78.0754, 94.0821, -23.1561, 0.66", "78.7782, 94.5853, -23.152, 0.66", "79.6529, 95.1238, -23.1904, 0.37", "80.5623, 95.6191, -23.3356, 1.03", "81.4099, 96.004, -23.5323, 1.03", "82.7354, 96.4965, -23.9497, 0.66", "85.3688, 97.3284, -25.0199, 0.22", "87.5829, 97.9746, -26.0243, 0.52", "89.5172, 98.5337, -26.985, 0.29", "90.8003, 98.9117, -27.684, 0.29", "91.9838, 99.3222, -28.3945, 0.66", "92.4945, 99.5585, -28.7191, 0.66", "93.5392, 100.225, -29.2151, 0.22", "94.165, 100.709, -29.4601, 0.52", "94.6882, 101.158, -29.617, 0.52", "96.9754, 103.266, -30.0986, 0.22", "98.6885, 104.878, -30.3497, 0.22", "101.235, 107.291, -30.6191, 0.22", "102.558, 108.562, -30.7141, 0.52", "103.294, 109.271, -30.7316, 0.22", "104.257, 110.211, -30.657, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.8119, 28.7629, 15.0395, 0.66", "5.48617, 30.5592, 15.1816, 0.66", "5.46618, 31.1191, 15.2465, 0.74", "5.49872, 31.8596, 15.3773, 0.74", "5.55687, 32.5752, 15.4062, 1.03", "5.62475, 33.2552, 15.402, 1.03", "5.70491, 34.0542, 15.3754, 0.74", "5.87949, 34.9903, 15.4033, 1.11", "6.07505, 35.8199, 15.3868, 1.47", "6.52726, 37.5099, 15.1917, 1.62", "6.66251, 38.0293, 15.0753, 1.62", "6.73087, 38.3529, 14.9725, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-18.3707, 15.6924, -6.36051, 0.29", "-19.5668, 15.7119, -5.65653, 0.29", "-20.4784, 15.7575, -5.21427, 0.88", "-21.4289, 15.7981, -4.80065, 1.11", "-24.6374, 15.9297, -3.51903, 1.03", "-25.631, 15.9535, -3.14954, 0.59", "-26.4341, 15.9532, -2.84033, 0.29", "-27.5245, 15.9223, -2.36113, 0.29", "-28.1396, 15.9105, -2.08068, 0.52", "-28.5188, 15.9147, -1.91372, 0.74", "-29.3159, 15.9746, -1.66781, 0.74", "-30.9286, 16.117, -1.12999, 0.37", "-31.5856, 16.188, -0.88922, 0.59", "-32.0219, 16.261, -0.73773, 0.59", "-32.8773, 16.4556, -0.488698, 0.29", "-34.0187, 16.7503, -0.20456, 0.59", "-34.5198, 16.8962, -0.133646, 0.37", "-35.6399, 17.2246, -0.119967, 0.29", "-36.6245, 17.4974, -0.176317, 1.25", "-37.0196, 17.6006, -0.226893, 1.62", "-37.4394, 17.7269, -0.317862, 1.62", "-38.6604, 18.1478, -0.653627, 0.29", "-39.4362, 18.4185, -0.889931, 0.29", "-40.2975, 18.7278, -1.17581, 0.52", "-40.7551, 18.8964, -1.33058, 0.59", "-42.1332, 19.4198, -1.80678, 0.22", "-42.8023, 19.6888, -2.04471, 0.74", "-43.4213, 19.9523, -2.25198, 0.74", "-44.0782, 20.2406, -2.46991, 0.22", "-44.4991, 20.425, -2.6096, 0.37", "-44.906, 20.6147, -2.74198, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-18.3707, 15.6924, -6.36051, 0.44", "-19.4715, 15.3248, -7.3246, 0.44", "-20.2308, 15.048, -7.97889, 0.44", "-20.9536, 14.7791, -8.58709, 0.96", "-21.6294, 14.5084, -9.17855, 1.25", "-22.5585, 14.1053, -9.99272, 0.74", "-23.1977, 13.8147, -10.5335, 0.59", "-23.8079, 13.5252, -11.0669, 0.59", "-24.3746, 13.2572, -11.6011, 0.59", "-25.2386, 12.8747, -12.4703, 0.44", "-26.3746, 12.4168, -13.6699, 0.81", "-27.7478, 11.93, -15.2871, 0.81", "-28.3523, 11.7267, -16.1672, 0.81", "-28.8881, 11.5496, -17.162, 0.44", "-29.2674, 11.445, -17.9694, 0.44", "-29.7456, 11.3461, -18.9935, 0.44", "-30.5074, 11.2472, -20.6202, 0.44", "-31.4567, 11.1974, -22.5106, 0.88", "-32.2271, 11.1751, -23.7994, 0.88", "-33.0523, 11.1619, -24.9578, 0.52", "-34.4737, 11.1779, -26.6178, 0.52", "-35.0242, 11.1963, -27.1562, 0.52", "-36.0575, 11.2181, -27.9033, 0.88", "-36.8855, 11.2184, -28.3661, 0.88", "-37.7935, 11.178, -28.8113, 1.18", "-38.6544, 11.0827, -29.2189, 1.18", "-39.9742, 10.8039, -29.7799, 0.74", "-41.3876, 10.3735, -30.2523, 0.52", "-42.8109, 9.85377, -30.6314, 0.52", "-43.935, 9.44447, -30.8858, 0.88", "-45.4758, 8.93513, -31.1968, 0.88", "-47.1591, 8.43066, -31.5133, 0.88", "-49.1536, 7.89475, -31.879, 1.03", "-50.2135, 7.60918, -32.1057, 0.96", "-51.6028, 7.23298, -32.4226, 0.74", "-53.4764, 6.76206, -32.9059, 0.52", "-54.2265, 6.57981, -33.1516, 0.81", "-55.0411, 6.37287, -33.511, 0.81", "-56.2668, 5.98766, -34.1753, 0.52", "-56.663, 5.82774, -34.4024, 0.88", "-57.141, 5.58223, -34.6928, 1.18", "-58.2385, 4.9983, -35.3539, 1.18", "-59.6096, 4.33971, -36.1394, 0.59", "-60.2395, 4.07171, -36.4832, 0.74", "-60.9874, 3.7987, -36.8724, 0.74", "-62.0612, 3.42261, -37.3599, 0.44", "-62.8373, 3.14488, -37.6784, 0.44", "-63.6074, 2.84612, -37.9748, 0.74", "-64.4566, 2.49829, -38.343, 0.74", "-65.2833, 2.15257, -38.633, 0.74", "-67.1153, 1.38205, -39.1561, 0.29", "-68.2929, 0.850313, -39.4324, 0.37", "-69.5361, 0.234073, -39.6914, 0.37", "-71.081, -0.565561, -39.9861, 0.37", "-73.7701, -1.99481, -40.5696, 0.74", "-74.5943, -2.45432, -40.8034, 1.03", "-76.2987, -3.47184, -41.3632, 0.59", "-77.7379, -4.37086, -41.8217, 0.44", "-78.6515, -4.949, -42.1133, 0.88", "-79.915, -5.7465, -42.542, 0.74", "-81.0847, -6.4657, -43.1013, 0.37", "-82.4716, -7.18646, -43.7565, 0.37", "-83.1926, -7.4459, -44.0913, 0.81", "-83.8029, -7.56502, -44.3463, 1.03", "-84.3994, -7.60539, -44.5511, 1.03", "-85.1996, -7.5822, -44.7698, 0.66", "-86.3924, -7.46097, -45.1038, 0.37", "-87.4574, -7.29958, -45.4752, 0.59", "-88.403, -7.1301, -45.8263, 0.59", "-89.3193, -6.96453, -46.1475, 0.37", "-90.3584, -6.81093, -46.4639, 0.66", "-91.1607, -6.7058, -46.7572, 0.88", "-91.5124, -6.65467, -46.9252, 0.88", "-93.1188, -6.34023, -47.8659, 0.29", "-94.056, -6.11945, -48.5411, 0.29", "-95.2176, -5.79205, -49.573, 0.29", "-96.8968, -5.27369, -51.3437, 0.44", "-98.0595, -4.9465, -52.754, 0.44", "-98.497, -4.85436, -53.3888, 0.44", "-98.7241, -4.83201, -53.8036, 0.59", "-99.1332, -4.81839, -54.625, 0.59", "-99.4332, -4.82668, -55.1861, 0.59", "-100.084, -4.9136, -56.1226, 0.37", "-100.62, -5.01997, -56.9185, 0.37", "-101.088, -5.1162, -57.6559, 0.66", "-101.503, -5.20241, -58.4289, 0.66", "-101.876, -5.30019, -59.2137, 0.66", "-102.519, -5.50415, -60.7371, 0.44", "-103.051, -5.69329, -62.0856, 0.66", "-103.326, -5.81207, -62.9255, 0.66", "-103.965, -6.10453, -65.1209, 0.29", "-104.336, -6.26838, -66.403, 0.29", "-104.677, -6.41662, -67.5407, 0.66", "-104.954, -6.51881, -68.33, 0.88", "-106.041, -6.82956, -71.0074, 0.44", "-106.432, -6.90477, -71.9239, 0.29", "-107.105, -6.98191, -73.1903, 0.29", "-107.663, -7.039, -74.1279, 0.66", "-108.199, -7.12129, -74.9945, 0.66", "-108.627, -7.23422, -75.5952, 0.66", "-109.512, -7.56455, -76.9353, 0.37", "-110.328, -7.89974, -78.4609, 0.29", "-110.623, -8.00504, -79.1041, 0.29", "-111.326, -8.17023, -80.8946, 0.29", "-111.946, -8.22219, -82.6471, 1.25", "-113.245, -8.04703, -86.4521, 0.29", "-113.627, -7.91179, -87.6454, 0.29", "-113.838, -7.78747, -88.3403, 0.59", "-114.296, -7.47486, -89.7095, 0.44", "-114.586, -7.2768, -90.4327, 0.22", "-114.957, -7.03986, -91.198, 0.81", "-116.205, -6.50953, -92.8231, 0.44", "-116.947, -6.28136, -93.6125, 0.59", "-117.403, -6.17832, -94.0301, 0.59", "-118.648, -5.99558, -94.8891, 0.29", "-119.801, -5.87209, -95.5069, 0.59", "-120.545, -5.82413, -95.7569, 0.59", "-122.02, -5.76477, -96.0301, 0.29", "-123.213, -5.73338, -96.1555, 0.29", "-125.342, -5.67898, -96.2016, 0.74", "-126.357, -5.65082, -96.1434, 0.74", "-128.125, -5.56591, -95.9607, 0.37", "-129.433, -5.43433, -95.7754, 0.37", "-130.546, -5.23268, -95.5663, 0.44", "-131.769, -4.87806, -95.3248, 0.74", "-132.506, -4.56285, -95.2036, 0.74", "-133.326, -4.11352, -95.088, 0.37", "-134.069, -3.58177, -95.0024, 0.59", "-134.909, -2.86282, -94.8842, 0.37", "-135.547, -2.24954, -94.8071, 0.29", "-135.99, -1.79388, -94.7626, 0.52", "-136.573, -1.20646, -94.7191, 0.74", "-137.469, -0.377555, -94.6848, 0.29", "-137.948, 0.0223113, -94.687, 0.74", "-138.626, 0.538399, -94.7235, 0.74", "-139.555, 1.21357, -94.8287, 0.29", "-140.499, 1.87148, -94.993, 0.29", "-141.432, 2.48037, -95.235, 0.29", "-142.453, 3.10873, -95.5744, 0.29", "-143.441, 3.71714, -95.986, 0.29", "-144.458, 4.34137, -96.5006, 0.96", "-144.939, 4.62235, -96.7842, 0.96", "-146.35, 5.41258, -97.6986, 0.29", "-146.748, 5.6222, -97.976, 0.66", "-147.568, 6.01123, -98.5613, 0.66", "-148.494, 6.39475, -99.1995, 0.29", "-149.216, 6.62756, -99.644, 0.29", "-149.673, 6.7589, -99.9166, 0.66", "-150.182, 6.89264, -100.205, 0.88", "-151.005, 7.10018, -100.655, 0.66", "-151.614, 7.28101, -100.978, 0.15", "-152.475, 7.59828, -101.43, 0.15", "-153.285, 7.95885, -101.872, 0.15", "-153.939, 8.29623, -102.235, 0.81", "-154.467, 8.62119, -102.57, 1.03", "-155.83, 9.51519, -103.524, 0.29", "-156.533, 9.98781, -104.038, 0.81", "-157.058, 10.3684, -104.452, 0.81", "-158.043, 11.0687, -105.246, 0.29", "-159.014, 11.7497, -106.146, 0.29", "-159.707, 12.1909, -106.847, 0.29", "-160.525, 12.6439, -107.773, 0.29", "-161.034, 12.9185, -108.552, 1.18", "-161.42, 13.1074, -109.383, 1.18", "-161.853, 13.2845, -110.881, 0.52", "-162.042, 13.3336, -111.822, 0.88", "-162.15, 13.3511, -112.792, 0.88", "-162.271, 13.3298, -115.653, 0.44", "-162.31, 13.3174, -116.999, 0.44", "-162.322, 13.3438, -118.13, 0.74", "-162.337, 13.3967, -118.826, 0.74", "-162.418, 13.6149, -120.57, 0.44", "-162.558, 13.8057, -121.73, 0.44", "-162.78, 13.9936, -122.6, 0.88", "-163.055, 14.1932, -123.407, 0.88", "-163.378, 14.4023, -124.22, 0.88", "-164.01, 14.7725, -125.86, 0.52", "-164.553, 15.0204, -127.28, 0.52", "-164.885, 15.1098, -128.15, 0.59", "-165.228, 15.1312, -129.08, 0.44", "-165.605, 15.0988, -130.054, 0.44", "-166.111, 15.0542, -131.238, 0.44", "-166.646, 15.0415, -132.36, 0.88", "-166.995, 15.0444, -133.088, 0.88", "-167.447, 15.0585, -134.048, 0.37", "-167.917, 15.1218, -135.05, 0.37", "-168.617, 15.2647, -136.44, 0.59", "-169.549, 15.516, -138.102, 0.37", "-169.884, 15.6114, -138.672, 0.74", "-170.481, 15.8111, -139.652, 0.74", "-171.509, 16.1978, -141.194, 0.37", "-171.921, 16.3418, -141.748, 0.59", "-172.942, 16.6745, -142.952, 0.29", "-173.749, 16.9195, -143.754, 0.29", "-174.512, 17.0954, -144.449, 0.29", "-175.625, 17.2844, -145.413, 0.59", "-176.004, 17.3248, -145.721, 1.11", "-176.303, 17.3507, -145.965, 1.4", "-177.229, 17.3602, -146.713, 0.81", "-178.187, 17.3214, -147.515, 0.37", "-179.051, 17.1992, -148.281, 0.22", "-179.69, 17.0505, -148.865, 0.22", "-180.713, 16.7317, -149.887, 0.22", "-181.808, 16.2854, -151.083, 0.22", "-182.017, 16.1768, -151.336, 0.44", "-182.375, 15.9462, -151.811, 0.44", "-182.712, 15.6592, -152.365, 0.22", "-183.203, 15.1328, -153.424, 0.44", "-183.385, 14.9126, -153.97, 0.44", "-183.696, 14.5798, -154.98, 0.22", "-184.037, 14.3067, -155.931, 0.22", "-184.567, 14.0054, -157.184, 0.59", "-184.732, 13.9413, -157.529, 0.59", "-185.767, 13.7799, -159.743, 0.29", "-186.137, 13.7442, -160.523, 0.29", "-186.703, 13.7263, -161.683, 0.29", "-187.108, 13.7271, -162.447, 0.81", "-187.494, 13.7362, -163.091, 0.81", "-189.011, 13.9227, -165.649, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "182.712, -19.5801, -18.6834, 0.29", "183.687, -20.6086, -18.4931, 0.29", "184.303, -21.2253, -18.5283, 0.29", "185.189, -22.1486, -18.8733, 0.52", "185.423, -22.3912, -18.9074, 0.52", "185.707, -22.6855, -18.91, 0.37", "186.238, -23.2364, -18.915, 0.52", "187.432, -24.3658, -18.9978, 0.37", "188.587, -25.4529, -19.1091, 0.88", "190.855, -27.719, -19.2981, 0.29", "191.149, -28.031, -19.2796, 0.74" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "182.712, -19.5801, -18.6834, 0.29", "183.898, -19.1173, -19.632, 0.29", "184.409, -18.9811, -19.9886, 0.44", "185.151, -18.7985, -20.4674, 0.44", "185.939, -18.5893, -20.9376, 0.74", "187.017, -18.2802, -21.5477, 0.74", "188.084, -17.9495, -22.1307, 0.44", "189.274, -17.5986, -22.7205, 0.66", "189.894, -17.392, -23.0161, 0.66", "190.918, -16.935, -23.5518, 0.74", "191.379, -16.6628, -23.8138, 0.29", "191.89, -16.277, -24.1288, 0.37", "192.51, -15.7595, -24.4605, 0.81", "192.856, -15.4619, -24.6118, 1.03", "194.623, -14.0091, -25.2154, 0.29", "195.623, -13.2048, -25.4817, 0.29", "197.093, -12.0276, -25.7859, 0.29", "198.375, -11.0029, -26.0377, 0.29", "199.44, -10.1419, -26.2627, 1.03", "200.04, -9.64251, -26.4184, 1.03", "200.659, -9.12796, -26.6025, 1.03", "201.156, -8.71779, -26.8528, 0.66", "202.13, -7.8861, -27.5793, 0.52", "202.7, -7.27124, -28.1727, 0.52", "203.215, -6.58307, -28.8148, 0.37", "203.707, -5.86496, -29.4311, 0.37", "204.102, -5.33383, -29.8748, 0.29", "204.798, -4.49001, -30.5882, 0.29", "205.755, -3.41145, -31.4463, 0.29", "206.126, -2.97552, -31.7987, 0.29", "206.575, -2.36396, -32.2937, 0.29", "207.12, -1.5468, -32.9828, 0.81", "207.7, -0.731247, -33.7178, 1.03", "208.119, -0.297312, -34.1634, 1.03", "209.063, 0.415734, -34.9605, 0.29", "209.843, 0.959375, -35.485, 0.74", "210.292, 1.2785, -35.7233, 1.11", "210.835, 1.65495, -35.9349, 1.11", "212.24, 2.51871, -36.3218, 0.29", "213.293, 3.05397, -36.5471, 0.29", "214.478, 3.47702, -36.7726, 0.29", "215.405, 3.71852, -36.9658, 0.29", "216.188, 3.87715, -37.1617, 0.74", "217.085, 4.02789, -37.4578, 0.74", "218.271, 4.17564, -37.9417, 0.37", "219.766, 4.29077, -38.6448, 0.96", "220.361, 4.3225, -38.9853, 0.96", "221.404, 4.36541, -39.6593, 0.29", "222.486, 4.44565, -40.4944, 0.29", "222.893, 4.4907, -40.8378, 0.59", "223.512, 4.60187, -41.4119, 0.59", "224.635, 4.92501, -42.5108, 0.29", "225.312, 5.13949, -43.1995, 0.29", "226.527, 5.52625, -44.5156, 1.18" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.02896, -23.0931, 10.6618, 1.03", "0.324602, -26.1463, 11.6702, 1.03", "1.32922, -28.0556, 12.2965, 1.03", "1.9951, -29.1791, 12.6625, 0.74", "2.93163, -30.6014, 13.1099, 0.74", "3.63173, -31.6237, 13.4121, 1.03", "4.22411, -32.5019, 13.6494, 1.25", "4.71727, -33.2127, 13.8795, 1.33", "4.96896, -33.6286, 13.9552, 1.62", "5.44129, -34.5662, 14.0727, 1.62", "5.83776, -35.5509, 14.1454, 1.62", "6.29392, -37.0149, 14.219, 1.47", "6.63267, -38.4552, 14.3162, 0.59", "6.8741, -39.8602, 14.4076, 0.59", "7.03662, -41.147, 14.4855, 0.88", "7.138, -42.0894, 14.5379, 1.25", "7.24854, -42.9222, 14.5752, 1.55", "7.46146, -44.2793, 14.6197, 1.55", "7.70465, -45.6664, 14.6501, 0.96", "7.93773, -46.9687, 14.6726, 0.74", "8.05277, -47.6891, 14.6815, 0.74", "8.26556, -49.0223, 14.6893, 0.74", "8.50008, -50.4864, 14.6822, 1.33", "8.83392, -52.4083, 14.6391, 1.18", "9.12727, -54.0301, 14.6417, 1.18", "9.27367, -54.9728, 14.6497, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.02896, -23.0931, 10.6618, 1.03", "-0.780973, -24.5806, 13.8038, 1.03", "-0.631744, -25.6343, 15.7808, 1.03", "-0.462927, -27.5176, 19.0992, 0.81", "-0.360132, -29.3253, 22.2139, 0.66", "-0.335796, -29.9533, 23.2545, 0.66", "-0.317675, -30.5769, 24.2314, 0.66", "-0.244007, -31.4868, 25.4391, 0.52", "-0.120523, -32.5525, 26.6104, 0.52", "0.0357252, -33.9557, 27.8031, 0.81", "0.147554, -34.9758, 28.4739, 0.66", "0.226615, -35.866, 29.0017, 0.96", "0.390023, -37.8583, 30.1181, 0.52", "0.550139, -39.0738, 30.7378, 1.11", "0.728877, -40.1727, 31.1731, 1.03", "0.85185, -41.012, 31.4159, 0.88", "0.928189, -41.7111, 31.5966, 0.88", "0.935606, -42.85, 31.8796, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "6.73087, 38.3529, 14.9725, 0.74", "7.47606, 40.255, 16.9329, 0.74", "7.848, 41.3745, 17.9633, 0.59", "8.05, 42.1338, 18.6072, 0.59", "8.31493, 43.4347, 19.5917, 0.59", "8.46356, 44.3898, 20.2258, 0.59", "8.58597, 45.3726, 20.7872, 0.59", "8.77059, 47.2096, 21.4865, 0.66", "8.83928, 48.0359, 21.7232, 0.66", "8.85572, 49.2681, 21.9914, 1.03", "8.81558, 50.4324, 22.162, 1.03", "8.72302, 51.8404, 22.2859, 0.44", "8.6645, 52.4813, 22.2598, 0.59", "8.53961, 53.4795, 22.0124, 0.59", "8.42154, 54.3083, 21.6966, 1.11", "8.37049, 54.6834, 21.5081, 1.33", "8.3115, 55.2495, 21.1914, 1.33", "8.23945, 56.4518, 20.4774, 0.81", "8.30381, 57.4246, 19.9415, 0.44", "8.55343, 58.2071, 19.5253, 0.44", "9.00342, 58.9812, 19.0384, 0.74", "9.54167, 59.7158, 18.5564, 0.66", "9.83475, 60.0716, 18.321, 0.66", "10.4415, 60.8954, 17.8448, 0.52", "11.047, 61.9046, 17.2776, 0.37", "11.6396, 63.2258, 16.5347, 0.37", "11.8373, 63.8132, 16.264, 0.37", "12.1099, 64.8104, 15.9092, 0.37", "12.5427, 66.4419, 15.4897, 0.37", "12.8257, 67.4462, 15.4231, 0.88", "13.0531, 68.0954, 15.5457, 0.88", "13.5993, 69.4135, 16.0696, 0.74", "13.9846, 70.2541, 16.5263, 0.59", "14.456, 71.212, 17.2309, 0.59", "15.2719, 72.755, 18.6239, 0.81", "15.8599, 73.8941, 19.7709, 0.59", "16.1029, 74.4405, 20.3445, 0.59", "16.2779, 74.9646, 20.8919, 1.11", "16.4514, 75.8496, 21.7795, 0.88", "16.4911, 76.635, 22.4789, 0.88", "16.4679, 77.5499, 23.0637, 0.74", "16.4402, 78.4918, 23.5217, 0.59", "16.4547, 79.2221, 23.812, 0.44", "16.5083, 79.9628, 24.0265, 0.81", "16.5956, 80.6881, 24.1514, 1.03", "16.7549, 81.9562, 24.2895, 0.52", "16.8382, 82.6526, 24.3322, 0.52", "16.9169, 83.3498, 24.3659, 0.96", "16.9884, 84.1505, 24.4094, 0.96", "17.0253, 84.9757, 24.4566, 0.66", "17.0216, 86.1495, 24.5233, 0.37", "16.9891, 86.8877, 24.5621, 0.37", "16.9751, 87.3854, 24.5837, 0.37", "16.9629, 88.2546, 24.6201, 0.37", "16.9734, 88.9527, 24.6485, 0.66", "17.0328, 89.6954, 24.6755, 0.66", "17.1659, 90.4002, 24.7048, 0.81", "17.3496, 91.1564, 24.7618, 0.52", "17.5241, 91.9118, 24.8376, 0.37", "17.6239, 92.5463, 24.9111, 0.37", "17.6645, 93.0717, 24.974, 0.66", "17.6772, 93.8526, 25.0628, 0.66", "17.6988, 94.7604, 25.1536, 0.37", "17.7438, 95.3241, 25.1988, 0.37", "17.9437, 96.4121, 25.2621, 0.96", "18.0782, 96.9549, 25.29, 1.33", "18.271, 97.6812, 25.3118, 1.33", "18.5588, 98.7215, 25.3593, 1.03", "18.8497, 99.6686, 25.4157, 0.74", "19.1487, 100.561, 25.4958, 0.44", "19.3753, 101.231, 25.5787, 0.44", "19.5851, 101.877, 25.6543, 0.44", "19.9325, 103.055, 25.7756, 0.66", "20.0752, 103.615, 25.8434, 0.96", "20.1339, 103.915, 25.8791, 0.96", "20.3261, 105.034, 25.954, 0.52", "20.4863, 105.973, 25.9719, 0.52", "20.6824, 107.045, 25.9506, 0.52", "20.8721, 107.923, 25.8856, 0.52", "21.2055, 109.399, 25.831, 0.74", "21.4018, 110.344, 25.8563, 0.52", "21.5328, 111.029, 25.9191, 0.52", "21.6731, 111.791, 26.0339, 0.52", "21.8653, 112.724, 26.1459, 0.81", "22.1751, 114.048, 26.2333, 0.81", "22.3957, 114.902, 26.2736, 0.59", "22.5683, 115.609, 26.268, 0.37", "22.777, 116.48, 26.2465, 0.37", "23.0822, 117.832, 26.1889, 0.37", "23.2328, 118.509, 26.144, 0.52", "23.4515, 119.284, 26.0699, 0.52", "23.8686, 120.567, 25.9754, 0.52", "24.3151, 121.929, 25.9514, 0.74", "24.6019, 122.802, 25.9908, 0.96", "24.9022, 123.724, 26.092, 0.37", "25.2356, 124.751, 26.2237, 0.29", "25.4574, 125.395, 26.3139, 0.29", "25.7844, 126.331, 26.4429, 0.81", "25.9201, 126.738, 26.4546, 0.81", "26.0458, 127.188, 26.4634, 0.96", "26.1074, 127.554, 26.4712, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.73087, 38.3529, 14.9725, 0.66", "6.37487, 39.9561, 12.619, 0.66", "6.12262, 40.882, 11.1556, 0.66", "6.03072, 41.3333, 10.42, 0.66", "5.93261, 42.0263, 9.26799, 0.52", "5.79368, 43.066, 7.54396, 0.81", "5.75156, 43.5682, 6.75047, 0.81", "5.77513, 44.3146, 5.62557, 0.59", "5.89285, 45.1042, 4.34755, 0.59", "6.04116, 45.7513, 3.2779, 0.44", "6.14803, 46.181, 2.62802, 0.44", "6.38156, 47.0109, 1.51363, 0.96", "6.54231, 47.4824, 0.861817, 1.18", "6.98937, 48.6442, -0.810626, 0.88", "7.37329, 49.5609, -2.17644, 0.37", "7.68134, 50.1516, -3.09588, 1.03", "8.06526, 50.7334, -4.04516, 1.03", "8.80856, 51.6928, -5.78654, 0.52", "9.1281, 52.0736, -6.47526, 0.52", "9.38216, 52.3635, -6.98984, 0.81", "9.68704, 52.7285, -7.64811, 0.81", "9.96388, 53.1268, -8.39526, 0.74", "10.3826, 54.1152, -10.1093, 1.03", "10.4501, 54.7177, -11.0791, 1.03", "10.2927, 55.5336, -12.4378, 0.59", "10.0879, 56.0592, -13.3255, 0.81", "9.76445, 56.5912, -14.3278, 0.81", "9.617, 56.7772, -14.6991, 0.66", "9.33196, 57.0895, -15.3321, 0.66", "8.6019, 57.8154, -16.942, 0.52", "8.12527, 58.2771, -18.0094, 0.37", "7.35366, 59.1195, -20.0314, 0.29", "7.19024, 59.3058, -20.4971, 0.29", "6.92461, 59.5989, -21.253, 0.29", "6.63662, 59.9236, -22.052, 0.29", "6.13715, 60.4704, -23.2061, 0.81", "5.6933, 60.9593, -24.1079, 0.81", "5.00111, 61.8495, -25.4039, 0.59", "4.85177, 62.0584, -25.6773, 0.59", "4.45246, 62.6577, -26.3306, 0.29", "4.10918, 63.2536, -27.2241, 0.52", "4.05792, 63.3507, -27.4168, 0.81", "3.90021, 63.637, -28.1125, 0.81", "3.71977, 63.9453, -29.0217, 0.74", "3.62631, 64.065, -29.4728, 0.88", "2.35902, 65.2094, -35.1905, 0.88", "1.97361, 65.4421, -36.7688, 0.66", "1.6946, 65.5658, -37.7637, 0.88", "1.24158, 65.7176, -39.2096, 0.96", "0.859637, 65.8405, -40.2526, 0.52", "0.537635, 65.9509, -40.9576, 0.74", "-0.346643, 66.2945, -42.0463, 0.44", "-0.866277, 66.5542, -42.5878, 0.29", "-1.36586, 66.8464, -43.0433, 0.29", "-2.25067, 67.3642, -43.7483, 1.18", "-2.64179, 67.5753, -44.0613, 1.92", "-3.37791, 67.8591, -44.727, 1.47", "-4.46077, 68.1266, -45.7725, 0.37", "-4.94255, 68.1764, -46.2486, 0.29", "-5.88196, 68.1247, -47.1271, 0.29", "-6.9792, 67.8874, -48.1412, 0.29", "-8.59481, 67.2463, -49.7315, 0.29", "-9.40329, 66.7843, -50.5496, 0.29", "-10.0256, 66.3821, -51.1933, 0.29", "-10.8067, 65.9061, -52.0417, 0.29", "-11.3362, 65.6443, -52.6146, 0.29", "-12.551, 65.1929, -53.9096, 0.29", "-13.11, 65.0093, -54.5247, 0.29", "-13.9601, 64.8316, -55.5616, 0.29", "-14.4167, 64.8469, -56.1392, 0.52", "-14.8967, 65.0039, -56.72, 0.52", "-15.6383, 65.3942, -57.5378, 0.52", "-16.4755, 65.961, -58.3734, 0.66", "-16.9078, 66.2821, -58.7925, 0.96", "-17.3158, 66.5907, -59.1592, 1.18", "-18.5024, 67.5815, -60.1906, 0.52", "-19.2723, 68.3347, -60.9203, 0.29", "-19.6587, 68.8038, -61.3503, 0.52", "-19.8026, 69.0372, -61.5449, 0.74", "-20.0756, 69.5495, -61.9782, 0.74", "-20.5242, 70.4173, -62.7466, 0.44", "-20.985, 71.3193, -63.6018, 0.44", "-21.4721, 72.2372, -64.5326, 0.37", "-21.8843, 72.9287, -65.2656, 0.37", "-22.4251, 73.6798, -66.1515, 0.37", "-23.1633, 74.6283, -67.4378, 0.37", "-23.6622, 75.2128, -68.2794, 0.88", "-23.803, 75.3688, -68.4945, 0.88", "-24.3221, 75.8848, -69.1773, 0.66", "-25.2795, 76.7285, -70.2736, 0.96", "-26.5585, 77.6738, -71.3667, 0.81", "-27.4647, 78.1906, -71.888, 1.11", "-28.5429, 78.6556, -72.2574, 0.59", "-29.9167, 79.1859, -72.5889, 0.59", "-30.8242, 79.5352, -72.713, 0.74", "-32.0305, 80.0001, -72.7611, 0.52", "-32.6984, 80.2371, -72.7712, 0.52", "-33.634, 80.5849, -72.8415, 0.52", "-34.6029, 80.9855, -72.963, 0.52", "-35.4063, 81.4212, -73.1577, 0.52", "-36.5862, 82.2263, -73.5414, 1.33", "-37.0931, 82.6585, -73.7327, 2.28", "-37.6879, 83.2069, -73.9742, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.27367, -54.9728, 14.6497, 0.59", "10.1474, -55.523, 15.6082, 0.59", "10.5962, -55.8535, 16.0588, 0.59", "12.0501, -57.1941, 17.4812, 0.44", "12.3065, -57.5067, 17.7585, 0.44", "12.6743, -58.0372, 18.1747, 0.44", "13.148, -58.8061, 18.7558, 0.44", "13.3978, -59.3346, 19.0987, 0.44", "13.7274, -60.1234, 19.5874, 0.44", "14.1487, -61.1783, 20.2097, 0.44", "14.3536, -61.7693, 20.6255, 0.81", "14.6701, -62.835, 21.5062, 0.59", "14.751, -63.1363, 21.7868, 0.59", "14.9402, -63.9753, 22.7578, 0.29", "14.99, -64.3511, 23.239, 0.29", "15.0347, -65.387, 24.5306, 0.29", "14.9953, -66.0374, 25.2514, 0.29", "14.8658, -66.7726, 25.9559, 1.03", "14.2889, -68.9613, 27.663, 1.11", "13.9727, -69.8805, 28.3033, 1.33", "13.5682, -70.9323, 28.9099, 0.66", "12.7583, -72.8514, 29.3982, 0.15", "12.4847, -73.4235, 29.1478, 0.15", "12.2239, -73.9458, 28.5654, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.27367, -54.9728, 14.6497, 1.33", "9.04828, -55.9653, 14.4572, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-37.6879, 83.2069, -73.9742, 0.37", "-39.9222, 83.8366, -75.2278, 0.37", "-40.9386, 84.0469, -75.797, 0.37", "-42.3441, 84.1827, -76.5684, 0.37", "-43.9252, 84.1245, -77.5676, 0.88", "-44.6, 84.0692, -78.0264, 0.88", "-45.7502, 83.9977, -78.8324, 0.52", "-46.6153, 83.9547, -79.5106, 0.29", "-47.6813, 83.9539, -80.4737, 0.29", "-49.1532, 84.1306, -82.016, 0.37", "-49.6261, 84.327, -82.5521, 0.37", "-50.3251, 84.8078, -83.3941, 0.37", "-51.0285, 85.3991, -84.1585, 0.37", "-52.2689, 86.403, -85.4265, 0.66", "-53.0667, 86.9662, -86.1638, 0.66", "-54.3187, 87.653, -87.1175, 0.37", "-55.184, 88.0022, -87.6945, 0.29", "-56.8063, 88.4879, -88.635, 0.29", "-58.4821, 88.9157, -89.3674, 0.29", "-60.0419, 89.279, -89.8156, 0.29", "-61.7288, 89.6755, -90.266, 0.29", "-62.9124, 89.984, -90.588, 0.88", "-63.5286, 90.1733, -90.7755, 1.03", "-65.284, 90.903, -91.4733, 0.29", "-66.6558, 91.6047, -92.1033, 0.29", "-68.4956, 92.5135, -93.1033, 0.96", "-69.3508, 92.8931, -93.6582, 1.25", "-69.6769, 93.0128, -93.9232, 1.47", "-71.1529, 93.4304, -95.187, 0.96", "-72.3917, 93.6902, -96.6228, 0.52", "-73.8251, 94.0254, -98.5586, 0.44", "-74.915, 94.3051, -100.128, 0.44", "-76.684, 94.8059, -102.84, 1.11", "-77.3475, 95.0371, -103.902, 1.11", "-80.8259, 96.53, -109.72, 0.29", "-81.643, 96.9338, -111.218, 0.29", "-82.1877, 97.213, -112.301, 0.96", "-82.7254, 97.4699, -113.34, 1.18", "-83.6574, 97.9311, -114.928, 0.88", "-84.7538, 98.4403, -116.555, 0.52", "-85.529, 98.6833, -117.44, 0.52", "-86.4578, 98.8214, -118.513, 0.52", "-88.3745, 98.9374, -120.884, 0.37", "-89.4237, 98.9738, -122.195, 0.37", "-90.5359, 99.017, -123.586, 0.37", "-92.077, 99.1184, -125.522, 0.37", "-93.2073, 99.2551, -126.916, 0.37", "-94.4608, 99.414, -128.42, 0.37", "-95.3655, 99.3714, -129.542, 1.11", "-95.6505, 99.3166, -129.94, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-37.6879, 83.2069, -73.9742, 0.29", "-38.4381, 86.6237, -76.445, 0.29", "-38.7352, 87.7409, -77.0773, 0.29", "-38.9233, 88.4376, -77.4097, 0.29", "-39.4194, 90.0201, -78.1443, 0.29", "-39.5968, 90.5255, -78.3627, 0.52", "-39.9283, 91.4084, -78.704, 0.37", "-40.3022, 92.161, -78.8322, 0.66", "-40.5462, 92.5953, -78.8813, 0.81", "-41.3793, 94.0337, -78.9486, 0.29", "-42.0338, 95.1062, -78.9482, 0.52", "-42.4654, 95.7603, -78.9228, 0.74", "-43.5078, 97.1733, -78.7916, 0.29", "-44.4566, 98.353, -78.5984, 0.29", "-45.0237, 98.9825, -78.4252, 1.25", "-45.374, 99.3575, -78.2732, 1.84", "-45.8152, 99.8044, -78.0553, 1.84", "-47.419, 101.242, -77.2513, 0.29", "-47.9632, 101.666, -76.9614, 0.29", "-49.7172, 102.79, -75.9278, 0.29", "-50.4809, 103.232, -75.4007, 0.52", "-50.9231, 103.479, -75.0558, 0.29", "-51.9868, 104.09, -74.1005, 0.29", "-52.5071, 104.412, -73.5628, 0.29", "-53.8698, 105.325, -72.1376, 0.88", "-55.125, 106.128, -70.8675, 0.29", "-55.6563, 106.451, -70.3794, 0.29", "-56.6646, 107.101, -69.5079, 0.81", "-57.1694, 107.483, -69.071, 0.81", "-57.9319, 108.14, -68.3976, 0.37", "-58.8679, 109.056, -67.5764, 0.29", "-59.4434, 109.636, -67.0592, 0.29", "-60.0629, 110.297, -66.475, 0.29", "-60.5399, 110.851, -65.9892, 0.29", "-61.5846, 112.224, -64.7821, 0.88", "-61.8247, 112.58, -64.4568, 1.25", "-62.2402, 113.21, -63.8935, 1.25", "-62.8307, 114.077, -63.2325, 0.29", "-63.3711, 114.798, -62.7971, 0.22", "-64.0504, 115.605, -62.5196, 0.88", "-64.9871, 116.686, -62.5124, 0.88", "-65.7264, 117.523, -62.5504, 0.59", "-67.9878, 120.009, -62.7639, 0.59", "-68.3762, 120.434, -62.8192, 0.59", "-69.2548, 121.375, -62.9634, 0.29", "-70.0453, 122.217, -63.068, 0.37", "-71.2967, 123.512, -63.1257, 0.37", "-72.0535, 124.273, -63.0359, 0.37", "-72.3854, 124.605, -62.9532, 0.44", "-72.6796, 124.883, -62.8968, 0.44", "-73.6402, 125.729, -62.7849, 0.22", "-74.3607, 126.342, -62.7666, 0.37", "-75.1855, 126.996, -62.8236, 0.29", "-76.1343, 127.7, -62.9022, 0.29", "-77.2253, 128.457, -62.9904, 0.29", "-78.3385, 129.213, -63.0798, 0.29", "-79.0517, 129.731, -63.1388, 0.29", "-79.8798, 130.425, -63.2063, 0.29", "-80.6684, 131.225, -63.2807, 0.52", "-80.9742, 131.643, -63.317, 0.74", "-81.4125, 132.509, -63.316, 0.52", "-81.941, 133.805, -63.2176, 0.29", "-82.2286, 134.543, -63.1324, 0.29", "-82.4757, 135.15, -63.0628, 0.37", "-82.737, 135.685, -63.0006, 0.37", "-83.6522, 137.153, -62.8304, 0.59", "-84.4003, 138.119, -62.7249, 0.29", "-85.8599, 139.729, -62.5758, 0.29", "-87.5726, 141.44, -62.4691, 0.29", "-88.3611, 142.203, -62.4317, 0.29", "-89.2774, 143.069, -62.4253, 0.29", "-90.0392, 143.768, -62.4813, 0.59", "-90.7596, 144.366, -62.5331, 0.59", "-92.1042, 145.232, -62.6153, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.04828, -55.9653, 14.4572, 0.74", "9.58486, -57.6792, 14.4399, 0.74", "9.91336, -58.626, 14.4717, 0.74", "10.283, -59.7321, 14.5651, 0.96", "10.6251, -60.757, 14.7627, 0.74", "11.0261, -61.947, 15.0532, 0.59", "11.3303, -62.8498, 15.2736, 0.59", "11.7895, -64.1264, 15.6803, 0.59", "12.358, -65.6599, 16.2493, 0.52", "13.116, -67.641, 17.0848, 0.52", "13.3071, -68.1811, 17.3377, 1.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "9.04828, -55.9653, 14.4572, 0.59", "7.94151, -57.0741, 14.9877, 0.59", "7.21527, -57.7476, 15.5251, 0.88", "6.41196, -58.4819, 16.2677, 0.88", "5.4904, -59.3183, 17.1738, 0.59", "4.22518, -60.3748, 18.3986, 0.59", "3.68446, -60.8472, 18.9693, 1.4", "2.76995, -61.6861, 20.1052, 1.4", "1.98113, -62.4199, 21.1282, 1.03", "1.43695, -62.9049, 21.8153, 1.55", "0.782695, -63.4715, 22.581, 1.55", "-0.339289, -64.4527, 23.6816, 1.03", "-0.996037, -65.0539, 24.2685, 0.81", "-1.88587, -65.8942, 25.0193, 0.81", "-2.64971, -66.6118, 25.587, 0.37", "-3.24461, -67.1423, 25.9455, 0.37", "-3.3958, -67.2695, 26.0207, 0.96", "-3.83623, -67.6189, 26.2015, 1.4", "-5.74463, -69.251, 26.9575, 0.59", "-7.28118, -70.6121, 27.558, 0.52", "-8.47908, -71.6557, 28.0202, 0.52", "-9.87595, -72.7745, 28.548, 0.37", "-11.0531, -73.6196, 28.9365, 0.29", "-12.4821, -74.5258, 29.2813, 1.25", "-12.8703, -74.7461, 29.3383, 1.4", "-14.1822, -75.4699, 29.5371, 0.52", "-15.1762, -75.9845, 29.6668, 0.81", "-16.4747, -76.5467, 29.7702, 1.03", "-18.2622, -77.1095, 29.9089, 0.52", "-19.3657, -77.3897, 30.0165, 0.52", "-20.2272, -77.6466, 30.1468, 0.37", "-21.4187, -78.182, 30.5053, 0.29", "-21.769, -78.4024, 30.682, 0.74", "-22.4009, -78.8603, 31.147, 1.03", "-22.7769, -79.1235, 31.4754, 0.81", "-23.6174, -79.6611, 32.1898, 0.59", "-24.9058, -80.4561, 33.2489, 0.37", "-25.5309, -80.8297, 33.6707, 0.29", "-26.0824, -81.0822, 33.9733, 0.29", "-26.6209, -81.2668, 34.1986, 0.96", "-27.2354, -81.4171, 34.3468, 0.96", "-28.0408, -81.5699, 34.4477, 0.81", "-29.5604, -81.9069, 34.5955, 0.44", "-30.3913, -82.211, 34.7108, 0.29", "-31.4201, -82.78, 34.916, 0.29", "-32.4968, -83.5757, 35.2116, 1.4", "-33.1015, -84.1151, 35.4226, 1.4", "-34.1256, -85.1669, 35.9066, 0.44", "-34.659, -85.7777, 36.2325, 0.29", "-34.9902, -86.1795, 36.469, 0.88", "-35.631, -86.9487, 36.9531, 0.96", "-36.1478, -87.5439, 37.3509, 0.59", "-37.0731, -88.5845, 38.0274, 0.44", "-37.9858, -89.6122, 38.685, 0.37", "-38.9013, -90.6039, 39.3354, 0.22", "-39.7223, -91.4377, 39.895, 0.59", "-40.518, -92.1849, 40.406, 0.29", "-40.7672, -92.397, 40.5517, 0.74", "-41.2862, -92.7717, 40.8097, 0.96", "-41.8753, -93.1094, 41.072, 0.59", "-42.8941, -93.5702, 41.4849, 0.44", "-43.5902, -93.8623, 41.7748, 0.74", "-44.1882, -94.1272, 42.0225, 0.96", "-45.4414, -94.7473, 42.5457, 0.37", "-46.3723, -95.3067, 42.9405, 0.29", "-46.9802, -95.7628, 43.1648, 0.29", "-47.6788, -96.3842, 43.3765, 0.52", "-48.1139, -96.8021, 43.4807, 0.52", "-48.4958, -97.1613, 43.5963, 0.52", "-49.3868, -97.881, 43.9282, 0.52", "-50.452, -98.5842, 44.3883, 0.52", "-50.9058, -98.8023, 44.6013, 0.88", "-51.8388, -99.1214, 45.0635, 0.88", "-53.6204, -99.5491, 45.8797, 0.37", "-54.9068, -99.8072, 46.3811, 0.29", "-55.5701, -99.9472, 46.6077, 0.96", "-56.6841, -100.265, 46.9357, 1.03", "-57.9943, -100.781, 47.2169, 0.52", "-59.1887, -101.408, 47.2997, 0.52", "-60.4236, -102.219, 47.218, 0.52", "-61.6279, -103.183, 47.0356, 0.52", "-62.5818, -104.054, 46.842, 0.52", "-63.8442, -105.351, 46.5387, 0.44", "-65.1215, -106.795, 46.154, 0.74", "-65.8784, -107.744, 45.8878, 0.81", "-66.6846, -108.804, 45.5516, 0.52", "-67.1427, -109.402, 45.3322, 0.88", "-67.4784, -109.836, 45.1715, 0.88", "-68.6198, -111.314, 44.6582, 0.44", "-69.6429, -112.507, 44.271, 0.37", "-70.1131, -113.026, 44.093, 0.37", "-70.9859, -113.962, 43.7655, 0.37", "-71.6938, -114.707, 43.5263, 0.59", "-72.3389, -115.365, 43.3592, 0.59", "-74.0715, -116.982, 43.1549, 0.29", "-74.8182, -117.633, 43.1297, 0.29", "-75.4811, -118.211, 43.1171, 0.59", "-76.4591, -119.112, 43.0788, 0.59", "-77.1113, -119.735, 43.0514, 0.37", "-78.0521, -120.652, 43.0599, 0.37", "-78.6481, -121.219, 43.1341, 0.81", "-79.1257, -121.636, 43.196, 0.81", "-79.7865, -122.159, 43.2603, 0.81", "-80.7413, -122.935, 43.2204, 0.37", "-81.4593, -123.568, 43.1186, 0.37", "-82.3592, -124.38, 42.9536, 0.66", "-82.8549, -124.8, 42.8694, 0.96", "-83.8325, -125.543, 42.7284, 0.96", "-85.409, -126.564, 42.4893, 0.29", "-86.1769, -126.979, 42.3034, 0.29", "-87.2154, -127.532, 41.977, 0.44", "-87.6543, -127.788, 41.8327, 0.81", "-88.3403, -128.236, 41.5664, 0.81", "-89.0059, -128.7, 41.2719, 0.81", "-90.7868, -129.905, 40.498, 0.52", "-91.6623, -130.509, 40.0957, 0.59", "-92.7205, -131.302, 39.573, 0.59", "-94.431, -132.652, 38.788, 0.29", "-95.5202, -133.55, 38.3279, 0.96", "-96.1621, -134.083, 38.0977, 1.25", "-96.5617, -134.393, 37.9914, 1.25", "-98.0319, -135.368, 37.7344, 0.37", "-99.0447, -135.969, 37.6428, 0.37", "-99.8866, -136.437, 37.6764, 1.03", "-100.667, -136.849, 37.7585, 1.25", "-101.473, -137.239, 37.8718, 1.25", "-102.989, -137.87, 38.2345, 0.29", "-103.757, -138.123, 38.5117, 0.44", "-104.539, -138.341, 38.8431, 0.59", "-105.541, -138.585, 39.2583, 0.59", "-106.77, -138.854, 39.7327, 0.29", "-108.343, -139.174, 40.2405, 0.29", "-109.905, -139.508, 40.6208, 0.29", "-110.927, -139.748, 40.8221, 0.29", "-112.599, -140.209, 41.0657, 0.81", "-113.15, -140.38, 41.1254, 0.81", "-114.883, -140.987, 41.2654, 0.52", "-116.522, -141.661, 41.4332, 0.52", "-117.892, -142.321, 41.6778, 0.44", "-118.797, -142.827, 41.9747, 0.81", "-119.833, -143.5, 42.5581, 0.81", "-120.44, -143.982, 43.1277, 0.81", "-121.42, -144.908, 44.4818, 0.37", "-121.783, -145.315, 45.168, 0.37", "-122.234, -145.879, 46.1731, 0.81", "-122.725, -146.501, 47.3302, 0.81", "-123.68, -147.637, 49.5742, 0.44", "-124.147, -148.064, 50.5841, 0.37", "-124.681, -148.463, 51.6112, 0.29", "-125.113, -148.76, 52.3588, 0.29", "-125.561, -149.083, 53.0624, 0.74", "-126.315, -149.737, 54.2727, 0.29", "-127.333, -150.74, 55.8558, 0.29", "-127.885, -151.329, 56.719, 0.66", "-128.442, -151.929, 57.521, 0.81", "-129.005, -152.613, 58.3217, 0.81", "-130.104, -154.046, 59.7765, 0.44", "-130.614, -154.735, 60.3616, 0.29", "-131.391, -155.796, 61.1686, 0.29", "-131.968, -156.506, 61.7351, 0.29", "-132.616, -157.245, 62.3409, 0.29", "-133.13, -157.756, 62.7459, 0.96", "-133.756, -158.298, 63.0532, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-95.6505, 99.3166, -129.94, 0.37", "-97.1828, 98.9801, -129.493, 0.37", "-98.424, 98.8214, -129.076, 0.37", "-100.374, 98.7995, -128.382, 0.37", "-101.394, 98.8939, -128.015, 0.22", "-102.323, 99.0558, -127.685, 0.22", "-103.773, 99.3815, -127.182, 0.37", "-104.521, 99.6764, -126.924, 0.37", "-105.535, 100.192, -126.588, 0.22", "-106.421, 100.7, -126.375, 0.22", "-107.192, 101.112, -126.267, 0.81", "-107.633, 101.308, -126.24, 0.88", "-108.318, 101.53, -126.244, 0.66", "-109.632, 101.896, -126.27, 0.29", "-111.381, 102.364, -126.311, 0.29", "-112.573, 102.706, -126.349, 0.29", "-114.187, 103.198, -126.418, 0.29", "-116.248, 103.846, -126.508, 0.29", "-117.216, 104.154, -126.552, 0.66", "-117.976, 104.395, -126.582, 0.88", "-118.354, 104.505, -126.597, 0.88", "-119.429, 104.819, -126.665, 0.29", "-120.424, 105.077, -126.741, 0.29", "-121.648, 105.356, -126.846, 1.33", "-122.11, 105.441, -126.89, 1.77", "-124.034, 105.805, -127.105, 0.29", "-125.364, 106.066, -127.27, 0.29", "-127.048, 106.411, -127.481, 0.29", "-127.86, 106.604, -127.578, 0.29", "-128.672, 106.856, -127.62, 0.74", "-129.94, 107.334, -127.559, 0.29", "-131.247, 107.948, -127.27, 0.29", "-132.357, 108.55, -126.875, 0.81", "-132.932, 108.884, -126.611, 0.81", "-134.678, 109.964, -125.614, 0.22", "-135.809, 110.67, -124.889, 0.22", "-137.04, 111.382, -124.077, 0.88", "-137.74, 111.759, -123.649, 1.18", "-139.35, 112.501, -122.84, 0.29", "-140.395, 112.862, -122.439, 0.29", "-142.048, 113.255, -121.968, 0.29", "-143.483, 113.544, -121.652, 0.29", "-144.867, 113.815, -121.42, 0.81", "-146.646, 114.236, -121.173, 0.22", "-148.08, 114.666, -121.024, 0.22", "-148.972, 114.994, -120.972, 0.29", "-150.228, 115.635, -120.95, 0.29", "-151.22, 116.314, -120.884, 0.29", "-152.256, 117.19, -120.727, 0.52", "-152.907, 117.842, -120.58, 0.59", "-153.738, 118.802, -120.336, 0.29", "-154.167, 119.342, -120.191, 0.29", "-155.349, 120.856, -119.675, 0.29", "-156.048, 121.685, -119.336, 0.29", "-156.871, 122.555, -118.897, 0.59", "-157.667, 123.32, -118.519, 0.74", "-158.806, 124.359, -118.143, 0.44", "-159.732, 125.165, -117.981, 1.55", "-160.37, 125.656, -117.993, 1.99", "-162.197, 126.797, -118.174, 0.29", "-163.501, 127.394, -118.359, 0.29", "-165.381, 128.027, -118.714, 0.29", "-166.096, 128.205, -118.871, 0.29", "-167.608, 128.484, -119.252, 0.44", "-168.577, 128.616, -119.501, 0.44", "-169.733, 128.71, -119.778, 0.29", "-171.273, 128.806, -120.014, 0.29", "-172.287, 128.88, -120.128, 0.29", "-173.304, 128.988, -120.269, 0.37", "-174.194, 129.136, -120.409, 0.59", "-175.208, 129.349, -120.576, 0.59", "-176.415, 129.638, -120.749, 0.44", "-177.397, 129.977, -120.805, 0.29", "-177.763, 130.162, -120.81, 0.88", "-178.543, 130.632, -120.794, 0.88", "-179.015, 130.918, -120.767, 0.88", "-180.091, 131.506, -120.672, 0.29", "-181.4, 132.153, -120.541, 0.29", "-182.404, 132.677, -120.447, 0.29", "-183.286, 133.223, -120.394, 0.29", "-184.043, 133.773, -120.375, 0.52", "-184.981, 134.547, -120.387, 0.52", "-186.23, 135.634, -120.457, 0.29", "-187.155, 136.451, -120.556, 0.29", "-188.067, 137.313, -120.672, 0.74", "-188.616, 137.879, -120.792, 1.03", "-189.284, 138.643, -121.024, 0.37", "-189.937, 139.395, -121.319, 0.37", "-190.518, 139.98, -121.597, 0.96", "-190.987, 140.374, -121.802, 1.18", "-192.216, 141.376, -122.32, 0.29", "-192.928, 142.012, -122.623, 0.29", "-193.672, 142.702, -122.944, 0.29", "-194.419, 143.375, -123.226, 0.37", "-195.312, 144.132, -123.504, 0.37", "-196.385, 145.049, -123.784, 0.37", "-197.263, 145.761, -123.96, 0.37", "-198.197, 146.504, -124.15, 0.37", "-199.404, 147.56, -124.432, 0.37", "-200.34, 148.431, -124.682, 0.37", "-201.157, 149.216, -124.909, 0.37", "-202.167, 150.157, -125.122, 0.37", "-203.197, 151.092, -125.263, 0.37", "-204.436, 152.167, -125.328, 1.4", "-204.676, 152.365, -125.327, 2.06", "-205.278, 152.82, -125.294, 2.28", "-206.782, 153.83, -125.161, 0.29", "-207.827, 154.452, -125.002, 0.29", "-209.497, 155.267, -124.636, 0.29", "-210.628, 155.739, -124.33, 0.29", "-211.92, 156.217, -123.941, 0.29", "-213.258, 156.645, -123.514, 0.29", "-214.57, 157.017, -123.086, 0.29", "-215.485, 157.278, -122.765, 0.29", "-216.387, 157.546, -122.432, 0.44", "-217.701, 157.941, -122.005, 0.44", "-218.746, 158.341, -121.738, 0.29", "-219.431, 158.723, -121.635, 0.29", "-220.065, 159.192, -121.61, 0.74", "-220.677, 159.691, -121.62, 0.74", "-221.998, 160.872, -121.704, 0.29", "-223.095, 162.004, -121.818, 0.29", "-224.233, 163.285, -121.97, 0.29", "-225.082, 164.269, -122.093, 1.18" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-95.6505, 99.3166, -129.94, 0.44", "-97.1457, 99.8367, -130.539, 0.44", "-98.0319, 100.132, -130.832, 0.44", "-99.2133, 100.579, -131.183, 0.44", "-100.006, 100.937, -131.404, 0.44", "-100.899, 101.43, -131.639, 0.44", "-101.639, 101.896, -131.815, 0.44", "-102.185, 102.313, -131.888, 0.44", "-102.716, 102.848, -131.953, 0.66", "-103.151, 103.403, -132.016, 0.66", "-103.708, 104.234, -132.128, 0.29", "-104.27, 105.208, -132.281, 0.29", "-104.787, 106.234, -132.454, 1.11", "-104.932, 106.55, -132.51, 1.11", "-105.369, 107.429, -132.671, 0.29", "-105.627, 107.979, -132.771, 0.29", "-105.778, 108.375, -132.84, 1.03", "-105.877, 108.729, -132.894, 1.03", "-106.02, 109.261, -132.968, 1.03", "-106.415, 110.816, -133.155, 0.29", "-106.636, 111.734, -133.239, 0.29", "-106.847, 112.56, -133.304, 0.29", "-107.065, 113.226, -133.346, 0.29", "-107.503, 114.376, -133.404, 1.33", "-107.665, 114.763, -133.425, 1.69", "-108.357, 116.16, -133.513, 0.37", "-108.798, 116.882, -133.572, 0.37", "-109.628, 118.031, -133.686, 0.37", "-110.325, 118.924, -133.786, 0.37", "-111.028, 119.817, -133.897, 0.37", "-111.56, 120.54, -134.004, 0.37", "-111.801, 120.911, -134.075, 0.81", "-112.113, 121.535, -134.242, 0.81", "-112.365, 122.303, -134.539, 0.52", "-112.551, 122.96, -134.832, 0.52", "-112.845, 123.859, -135.267, 1.03", "-112.991, 124.29, -135.489, 1.03", "-113.291, 125.045, -135.897, 0.88", "-113.786, 126.077, -136.472, 0.37", "-114.415, 127.175, -137.087, 0.37", "-115.129, 128.331, -137.64, 0.37", "-115.497, 128.928, -137.877, 0.37", "-116.12, 129.953, -138.207, 0.37", "-116.542, 130.662, -138.378, 1.18", "-116.86, 131.206, -138.477, 1.69", "-117.972, 133.348, -138.803, 0.44", "-118.512, 134.626, -138.977, 0.44", "-118.96, 135.872, -139.144, 0.44", "-119.116, 136.393, -139.219, 0.96", "-119.263, 136.933, -139.305, 1.33", "-119.621, 138.251, -139.536, 0.37", "-119.918, 139.468, -139.776, 0.37", "-120.089, 140.274, -139.936, 0.37", "-120.247, 141.256, -140.127, 0.37", "-120.442, 142.47, -140.377, 0.37", "-120.649, 143.538, -140.635, 0.37", "-120.841, 144.321, -140.819, 0.59", "-121.053, 145.095, -140.978, 0.59", "-121.313, 146.118, -141.248, 0.29", "-121.418, 146.58, -141.391, 0.29", "-121.83, 148.153, -141.944, 1.33", "-122.017, 148.749, -142.162, 2.14", "-122.198, 149.225, -142.347, 2.28", "-122.88, 150.674, -142.977, 1.11", "-123.435, 151.616, -143.454, 0.29", "-124.122, 152.713, -144.031, 0.29", "-124.591, 153.436, -144.421, 0.29", "-125.013, 154.122, -144.803, 0.44", "-125.413, 154.851, -145.218, 0.44", "-125.864, 155.802, -145.723, 0.44", "-126.224, 156.77, -146.238, 0.66", "-126.364, 157.319, -146.507, 0.66", "-126.514, 158.158, -146.868, 0.29", "-126.628, 159.166, -147.161, 0.29", "-126.689, 160.004, -147.302, 0.29", "-126.728, 160.81, -147.401, 0.29", "-126.829, 161.974, -147.521, 0.44", "-126.934, 162.777, -147.575, 0.44", "-127.159, 164.071, -147.565, 1.03", "-127.274, 164.74, -147.468, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "13.3071, -68.1811, 17.3377, 0.59", "14.0657, -70.3277, 17.0545, 0.59", "14.4568, -71.8151, 16.7827, 0.59", "14.8599, -73.6571, 16.4286, 0.59", "15.1497, -75.0133, 16.1798, 0.59", "15.5353, -77.0676, 15.8684, 0.88", "15.8135, -78.9967, 15.6022, 0.88", "15.8955, -80.4389, 15.4086, 0.66", "15.7778, -82.1214, 15.219, 0.81", "15.4653, -83.9079, 15.077, 0.74", "15.1364, -85.3447, 15.0431, 0.96", "14.8056, -86.772, 15.1245, 0.74", "14.4631, -88.3264, 15.2909, 0.59", "14.1258, -90.0392, 15.5066, 0.52", "14.0299, -90.6155, 15.5843, 1.03", "13.9122, -92.1783, 15.7624, 0.52", "14.0531, -93.9365, 15.8947, 0.81", "14.2959, -94.9871, 15.947, 1.03", "14.6129, -95.9804, 15.9444, 1.03", "15.0582, -97.286, 15.8699, 0.88", "15.5107, -98.7123, 15.7375, 0.74", "15.7777, -99.6438, 15.6257, 0.74", "16.077, -100.783, 15.4739, 0.44", "16.6064, -102.651, 15.1932, 0.44", "16.9316, -103.801, 15.013, 0.66", "17.1705, -104.653, 14.8953, 0.66", "17.4873, -105.784, 14.7403, 0.52", "17.8619, -107.175, 14.5228, 0.81", "18.207, -108.411, 14.2749, 1.03", "18.455, -109.244, 14.0707, 1.03", "18.768, -110.399, 13.7517, 0.66", "19.0708, -111.761, 13.2997, 0.52", "19.2706, -112.872, 12.8884, 0.52", "19.3855, -113.82, 12.5395, 0.52", "19.4911, -114.975, 12.15, 0.74", "19.5559, -115.866, 11.8683, 0.74", "19.6521, -118.053, 11.2558, 0.59", "19.6971, -119.384, 10.9929, 0.59", "19.7848, -120.651, 10.8193, 0.96", "19.8485, -121.333, 10.7724, 0.96", "19.9674, -122.696, 10.776, 0.59", "20.0868, -124.435, 10.8179, 0.44", "20.1548, -126.015, 10.9082, 0.44", "20.2064, -127.367, 10.9771, 0.44", "20.294, -128.796, 11.0226, 0.44", "20.4456, -130.245, 11.0483, 0.44", "20.7868, -132.222, 11.0625, 0.59", "20.9565, -132.993, 11.0846, 0.81", "21.2852, -134.231, 11.1267, 0.44", "21.7262, -135.884, 11.2226, 0.44", "22.0062, -136.89, 11.3145, 0.81", "22.2996, -137.887, 11.46, 0.81", "22.7677, -139.335, 11.6831, 0.81", "23.1505, -140.384, 11.7969, 0.52", "23.6629, -141.671, 11.8691, 0.52", "24.055, -142.691, 11.8371, 0.81", "24.426, -143.921, 11.6791, 1.03", "24.7956, -145.713, 11.306, 0.52", "24.9842, -147.014, 10.9592, 0.52", "25.0771, -148.245, 10.6229, 0.88", "25.1242, -149.765, 10.2214, 0.88", "25.0841, -151.571, 9.7797, 0.44", "24.9561, -153.43, 9.3662, 0.74", "24.8665, -154.308, 9.2679, 0.74", "24.6964, -155.915, 9.12805, 0.37", "24.5897, -157.097, 9.06027, 0.66", "24.5478, -158.225, 9.0465, 0.96", "24.6043, -159.551, 9.05949, 0.96", "24.9066, -162.459, 9.08492, 0.37", "25.1522, -164.241, 9.18103, 0.37", "25.2793, -165.015, 9.27261, 0.88", "25.3974, -165.691, 9.36313, 0.88", "25.6092, -166.928, 9.47039, 0.88", "25.8043, -168.208, 9.49041, 0.52", "25.9701, -170.014, 9.53399, 0.52", "26.0658, -171.903, 9.71669, 0.44", "26.1177, -173.466, 9.91569, 0.52", "26.151, -175.673, 10.2311, 0.74", "26.1426, -177.402, 10.4926, 0.74", "26.0413, -180.263, 10.8697, 0.59", "25.9646, -181.664, 11.0048, 0.59", "25.8372, -183.098, 11.1522, 0.44", "25.7103, -184.377, 11.2887, 0.44", "25.6469, -185.064, 11.3506, 0.81", "25.5822, -186.357, 11.3541, 0.81", "25.5799, -187.396, 11.2317, 0.74", "25.5436, -188.457, 11.1212, 0.59", "25.451, -190.031, 11.0007, 0.29", "25.3853, -190.816, 10.9721, 0.52", "25.2406, -192.777, 10.9379, 0.52", "25.1722, -193.996, 10.9538, 0.52", "25.0547, -195.938, 11.0485, 0.74", "24.9701, -196.944, 11.1558, 1.11", "24.831, -197.733, 11.3068, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.3071, -68.1811, 17.3377, 0.52", "14.4163, -67.0912, 18.3803, 0.52", "15.0191, -66.499, 18.9469, 0.52", "15.5231, -66.0039, 19.4206, 0.52", "15.9595, -65.575, 19.8308, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-127.274, 164.74, -147.468, 0.22", "-127.532, 167.349, -149.526, 0.22", "-127.726, 168.112, -150.296, 0.22", "-127.965, 168.613, -150.908, 0.22", "-128.232, 169.185, -151.581, 0.22", "-128.73, 170.62, -153.123, 0.22", "-128.998, 171.886, -154.408, 1.25", "-129.108, 172.39, -154.943, 1.55", "-129.413, 174.298, -156.811, 0.37", "-129.486, 175.061, -157.454, 0.37", "-129.539, 176.488, -158.484, 0.37", "-129.469, 177.89, -159.3, 0.37", "-129.324, 179.029, -159.914, 0.66", "-129.174, 179.874, -160.362, 1.33", "-128.807, 181.637, -161.231, 0.52", "-128.532, 183.18, -162.015, 0.52", "-128.372, 184.302, -162.589, 0.37", "-128.174, 185.457, -163.145, 0.37", "-127.942, 186.417, -163.59, 0.37", "-127.41, 188.253, -164.394, 2.65", "-127.3, 188.593, -164.533, 3.32", "-127.168, 189.073, -164.768, 3.32", "-126.689, 191.879, -166.272, 0.44", "-126.516, 193.555, -167.216, 0.44", "-126.45, 194.351, -167.695, 0.59", "-126.395, 195.038, -168.141, 0.59", "-126.171, 198.407, -170.473, 0.29", "-126.117, 199.762, -171.487, 0.29", "-126.124, 200.969, -172.474, 0.29", "-126.165, 202.27, -173.525, 0.29", "-126.151, 202.792, -173.922, 0.29", "-126.0, 204.3, -174.94, 1.11", "-125.834, 205.269, -175.47, 1.11", "-125.716, 206.029, -175.888, 0.88", "-125.625, 207.747, -176.769, 0.52", "-125.734, 209.579, -177.581, 0.29", "-125.88, 210.684, -178.019, 0.29", "-125.989, 211.349, -178.236, 0.66", "-126.277, 212.867, -178.668, 0.66", "-126.557, 214.065, -178.97, 0.29", "-126.875, 214.988, -179.158, 0.29", "-127.732, 216.506, -179.425, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-127.274, 164.74, -147.468, 0.37", "-126.689, 165.817, -147.016, 0.37", "-126.041, 167.078, -146.466, 0.37", "-125.626, 167.95, -146.077, 0.37", "-124.86, 169.696, -145.285, 0.37", "-124.339, 170.976, -144.722, 0.52", "-123.847, 172.274, -144.193, 1.18", "-123.55, 173.136, -143.846, 1.18", "-123.366, 173.732, -143.661, 1.18", "-123.241, 174.106, -143.574, 1.03", "-122.938, 174.891, -143.472, 0.44", "-122.442, 175.911, -143.329, 0.88", "-121.618, 177.436, -143.125, 0.37", "-120.845, 178.833, -142.926, 0.29", "-120.334, 179.779, -142.764, 0.29", "-119.957, 180.501, -142.603, 0.66", "-119.036, 182.384, -142.104, 0.37", "-118.54, 183.492, -141.781, 0.37", "-118.066, 184.693, -141.443, 0.29", "-117.695, 185.857, -141.14, 0.29", "-117.481, 186.915, -140.916, 0.29", "-117.313, 188.286, -140.714, 0.88", "-117.239, 188.978, -140.668, 0.88", "-117.039, 190.455, -140.654, 0.37", "-116.825, 191.944, -140.742, 0.37", "-116.491, 193.918, -140.99, 0.37", "-116.181, 195.497, -141.226, 0.37", "-115.869, 196.989, -141.44, 0.37", "-115.625, 198.087, -141.591, 0.37", "-115.216, 199.89, -141.824, 0.37", "-114.681, 201.941, -142.079, 0.37", "-114.2, 203.625, -142.282, 1.47", "-114.04, 204.297, -142.354, 1.69", "-113.888, 205.007, -142.397, 1.69", "-113.501, 206.811, -142.44, 0.44", "-113.191, 208.238, -142.438, 0.44", "-112.947, 209.587, -142.424, 0.44", "-112.657, 211.486, -142.415, 0.44", "-112.406, 213.3, -142.396, 0.37", "-112.213, 214.658, -142.364, 0.37", "-112.122, 215.337, -142.333, 0.37", "-112.027, 216.43, -142.252, 0.96", "-111.975, 217.519, -142.142, 1.25", "-111.983, 217.864, -142.105, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "24.831, -197.733, 11.3068, 0.44", "24.17, -198.068, 11.4713, 0.44", "23.6386, -198.244, 11.5747, 0.29", "22.9145, -198.432, 11.7023, 0.22", "22.4012, -198.538, 11.7883, 0.59", "22.1, -198.59, 11.8374, 0.59", "21.2355, -198.738, 11.9783, 0.29", "20.3725, -198.795, 12.1103, 0.29", "20.1817, -198.793, 12.1341, 0.52", "19.8615, -198.777, 12.1559, 0.52", "19.5995, -198.754, 12.1723, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "24.831, -197.733, 11.3068, 0.37", "25.0511, -199.753, 10.9846, 0.37", "25.1355, -200.894, 10.8178, 0.81", "25.1514, -201.555, 10.7336, 0.88", "25.141, -202.25, 10.6578, 0.66", "25.0742, -203.539, 10.5364, 0.37", "25.0406, -204.025, 10.4964, 0.37", "24.962, -204.867, 10.4769, 0.37", "24.9214, -205.884, 10.4549, 0.37", "24.928, -206.803, 10.4305, 0.74", "24.9596, -207.691, 10.382, 1.11", "24.9887, -208.464, 10.3255, 0.81", "25.0868, -209.923, 10.2019, 0.37", "25.227, -211.607, 10.0312, 0.37", "25.2664, -212.688, 9.90135, 0.37", "25.2418, -213.802, 9.74978, 0.37", "25.1927, -214.452, 9.64979, 0.96", "25.111, -214.97, 9.56286, 0.96", "24.8515, -216.021, 9.38314, 0.44", "24.4715, -217.36, 9.15751, 0.37", "24.3272, -218.1, 9.02062, 0.37", "24.2862, -218.664, 8.91748, 1.11", "24.29, -219.495, 8.75919, 0.88", "24.3406, -220.663, 8.54066, 0.66", "24.4594, -222.166, 8.27414, 0.52", "24.5862, -223.491, 8.051, 0.52", "24.6675, -224.679, 7.86432, 0.52", "24.7076, -226.113, 7.64362, 0.81", "24.6907, -226.824, 7.53465, 0.96", "24.6229, -227.658, 7.41362, 0.96", "24.5035, -228.555, 7.29234, 0.81", "24.3317, -229.649, 7.12781, 0.44", "24.1631, -230.862, 6.89766, 0.29", "24.1013, -231.575, 6.72988, 0.29", "24.0374, -232.316, 6.53528, 0.29", "23.9197, -233.252, 6.26933, 0.29", "23.7488, -234.336, 5.90623, 1.03", "23.6941, -234.631, 5.79183, 1.47", "23.431, -236.162, 5.15226, 0.44", "23.2609, -237.244, 4.67316, 0.37", "23.0792, -238.344, 4.18091, 0.37", "22.8636, -239.628, 3.59998, 0.29", "22.6613, -240.865, 3.03445, 0.29", "22.5568, -241.598, 2.69148, 0.29", "22.413, -242.806, 2.10624, 0.29", "22.3135, -244.3, 1.36913, 0.66", "22.2914, -245.202, 0.940378, 1.18", "22.2783, -245.998, 0.606324, 1.18", "22.2684, -246.545, 0.390922, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.9595, -65.575, 19.8308, 0.44", "16.1128, -65.7256, 20.779, 0.44", "16.3592, -66.0611, 22.6998, 1.11", "16.8188, -66.6551, 25.7452, 0.44", "17.8259, -67.7838, 31.257, 0.88", "18.2068, -68.1714, 33.0408, 1.25", "18.4693, -68.4387, 34.2703, 0.88", "18.7294, -68.6977, 35.5215, 0.74", "19.6982, -69.565, 39.6532, 0.37", "19.9867, -69.8099, 40.6175, 0.66", "20.2653, -70.0837, 41.3449, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.9595, -65.575, 19.8308, 0.44", "16.1871, -65.6442, 20.5535, 0.44", "18.1576, -66.2433, 26.8131, 0.44", "18.415, -66.3216, 27.6311, 0.37", "18.5765, -66.3707, 28.1439, 0.37", "18.6964, -66.4072, 28.525, 0.74", "18.7934, -66.4367, 28.833, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-127.732, 216.506, -179.425, 0.59", "-128.051, 217.624, -179.677, 0.59", "-128.627, 218.739, -179.943, 0.37", "-129.255, 219.658, -180.17, 0.37", "-129.95, 220.612, -180.4, 0.37", "-130.921, 221.942, -180.707, 0.37", "-131.692, 223.01, -180.943, 0.37", "-132.612, 224.227, -181.155, 0.37", "-133.342, 225.138, -181.312, 0.37", "-134.152, 226.142, -181.471, 0.37", "-134.661, 226.841, -181.608, 0.37", "-134.937, 227.397, -181.738, 1.03", "-135.057, 227.77, -181.827, 1.33", "-135.273, 228.667, -182.036, 1.11", "-135.555, 229.923, -182.329, 0.37", "-135.862, 231.302, -182.654, 0.37", "-136.234, 233.067, -183.08, 0.29", "-136.509, 234.451, -183.421, 0.29", "-136.728, 235.617, -183.709, 0.52", "-136.928, 236.78, -183.994, 1.55", "-137.002, 237.28, -184.108, 1.92" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-127.732, 216.506, -179.425, 0.52", "-127.631, 217.098, -180.329, 0.52", "-127.457, 217.618, -181.258, 0.52", "-127.248, 218.089, -182.093, 0.52", "-127.035, 218.518, -182.807, 1.25", "-126.37, 219.834, -184.86, 2.28", "-126.225, 220.14, -185.318, 2.28", "-125.72, 221.195, -186.986, 0.29", "-125.497, 221.641, -187.729, 0.44", "-125.295, 222.029, -188.351, 0.44", "-125.089, 222.437, -188.931, 0.44", "-124.897, 222.833, -189.362, 0.44", "-124.578, 223.675, -190.262, 0.29", "-124.485, 224.144, -190.719, 1.03", "-124.434, 224.586, -191.127, 1.55", "-124.352, 225.277, -191.749, 0.88", "-124.212, 226.076, -192.438, 0.52", "-124.051, 226.786, -193.005, 0.52", "-123.938, 227.385, -193.411, 0.52", "-123.783, 228.301, -193.979, 0.52", "-123.656, 228.919, -194.321, 0.52", "-123.521, 229.525, -194.628, 0.52", "-123.361, 230.109, -194.908, 0.52", "-122.998, 231.141, -195.371, 0.52", "-122.582, 232.186, -195.84, 0.52", "-122.206, 233.179, -196.259, 2.21" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-111.983, 217.864, -142.105, 0.29", "-113.135, 220.343, -142.073, 0.29", "-113.696, 221.548, -142.057, 0.29", "-114.105, 222.43, -142.045, 0.29", "-114.413, 223.093, -142.037, 0.74", "-114.666, 223.637, -142.03, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-111.983, 217.864, -142.105, 0.29", "-111.935, 218.896, -141.968, 0.29", "-111.904, 219.456, -141.908, 0.29", "-111.677, 220.875, -141.811, 0.29", "-111.553, 221.387, -141.794, 0.74", "-111.436, 221.927, -141.789, 0.74", "-111.214, 223.16, -141.799, 0.37", "-111.062, 224.023, -141.84, 0.29", "-110.777, 225.364, -141.953, 0.37", "-110.554, 226.276, -142.066, 0.37", "-110.176, 227.914, -142.242, 0.29", "-109.954, 229.015, -142.331, 0.29", "-109.77, 230.296, -142.39, 0.29", "-109.72, 231.595, -142.399, 0.29", "-109.764, 232.514, -142.375, 0.29", "-109.846, 233.728, -142.283, 0.29", "-109.891, 234.655, -142.159, 0.29", "-109.926, 235.628, -141.988, 0.29", "-109.944, 236.374, -141.81, 0.29", "-109.931, 237.379, -141.55, 1.03", "-109.848, 238.196, -141.348, 1.33", "-109.687, 238.951, -141.19, 1.33", "-109.303, 240.344, -140.907, 0.29", "-108.947, 241.633, -140.627, 0.29", "-108.678, 242.842, -140.326, 0.29", "-108.54, 243.726, -140.067, 0.29", "-108.449, 244.857, -139.696, 0.29", "-108.43, 245.442, -139.476, 0.29", "-108.43, 246.698, -138.953, 0.29", "-108.457, 247.908, -138.437, 0.74", "-108.487, 248.74, -138.038, 0.88", "-108.522, 249.948, -137.45, 0.44", "-108.522, 250.639, -137.12, 0.44", "-108.452, 251.676, -136.676, 0.96", "-108.361, 252.513, -136.389, 1.25", "-108.177, 254.328, -135.932, 0.29", "-108.111, 255.302, -135.781, 0.37", "-108.08, 255.933, -135.697, 0.37", "-108.031, 257.044, -135.467, 0.37", "-107.985, 258.345, -135.21, 0.37", "-107.948, 259.122, -135.066, 0.37", "-107.921, 260.002, -134.921, 0.37", "-107.937, 262.237, -134.387, 1.33", "-107.936, 264.033, -133.76, 2.06" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "22.2684, -246.545, 0.390922, 0.29", "21.3032, -247.777, 1.20463, 0.29", "20.7878, -248.684, 1.79391, 0.29", "20.5595, -249.285, 2.11023, 0.74", "20.293, -250.083, 2.5017, 0.29", "20.0777, -250.732, 2.76836, 0.29", "19.5529, -252.312, 3.41814, 0.59", "19.4512, -252.786, 3.58808, 0.74", "19.1594, -254.563, 4.22596, 0.37", "18.9868, -255.492, 4.57668, 0.96", "18.7556, -256.425, 4.93773, 0.81" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "22.2684, -246.545, 0.390922, 0.37", "23.6407, -246.736, 0.485209, 0.37", "24.5939, -246.976, 0.574362, 0.37", "25.5908, -247.308, 0.873438, 0.37", "26.3243, -247.565, 1.35757, 0.29", "27.2067, -247.821, 2.16927, 0.29", "28.0378, -248.062, 2.93373, 0.52", "28.4692, -248.198, 3.47699, 0.52", "29.6728, -248.677, 5.47988, 1.11", "30.656, -249.163, 7.66447, 0.59", "30.9226, -249.284, 8.51633, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-137.002, 237.28, -184.108, 0.37", "-137.285, 238.501, -183.974, 0.37", "-137.544, 239.615, -183.852, 0.37", "-137.735, 240.438, -183.761, 0.37", "-138.062, 241.842, -183.607, 1.18", "-138.217, 242.512, -183.533, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-137.002, 237.28, -184.108, 0.29", "-137.84, 237.495, -185.497, 0.29", "-138.501, 237.689, -186.555, 0.52", "-139.569, 237.984, -188.09, 1.03", "-140.161, 238.152, -188.872, 1.03", "-140.715, 238.327, -189.576, 0.88", "-141.498, 238.639, -190.555, 0.81", "-141.957, 238.884, -191.178, 0.29", "-142.485, 239.218, -191.852, 0.29", "-143.024, 239.555, -192.448, 0.29", "-143.301, 239.669, -192.819, 0.52", "-143.907, 239.878, -193.748, 0.52", "-144.636, 240.094, -194.924, 1.18", "-144.902, 240.161, -195.345, 1.47", "-145.29, 240.264, -195.938, 1.47", "-147.152, 240.76, -198.54, 0.52", "-147.795, 240.907, -199.312, 0.29", "-148.613, 241.094, -200.17, 0.29", "-149.883, 241.479, -201.308, 0.29", "-150.982, 241.861, -202.164, 0.29", "-151.795, 242.141, -202.701, 0.29", "-153.115, 242.564, -203.392, 0.29", "-153.68, 242.727, -203.683, 0.29", "-154.625, 243.021, -204.157, 0.88", "-155.126, 243.192, -204.401, 1.25", "-156.664, 243.705, -205.189, 0.37", "-157.363, 243.908, -205.682, 0.29", "-157.941, 244.058, -206.211, 0.74", "-158.361, 244.155, -206.615, 0.74", "-159.176, 244.34, -207.421, 0.37", "-159.931, 244.506, -208.205, 0.37", "-161.566, 244.857, -210.018, 0.37", "-162.093, 244.947, -210.582, 0.37", "-163.176, 245.092, -211.646, 0.29", "-163.719, 245.144, -212.117, 0.29", "-165.034, 245.195, -213.022, 0.66", "-166.24, 245.206, -213.705, 0.74", "-167.488, 245.22, -214.283, 0.52", "-168.381, 245.215, -214.683, 0.96", "-169.204, 245.2, -215.062, 0.96", "-170.689, 245.197, -215.693, 0.29", "-171.806, 245.241, -216.095, 0.96", "-172.459, 245.291, -216.322, 1.11", "-173.504, 245.495, -216.745, 0.44", "-174.247, 245.775, -217.078, 0.44", "-175.098, 246.304, -217.51, 0.44", "-175.797, 246.876, -217.883, 0.44", "-176.325, 247.328, -218.148, 0.44", "-177.215, 248.0, -218.589, 0.44", "-177.865, 248.4, -218.931, 0.44", "-179.037, 249.021, -219.539, 0.44", "-179.729, 249.363, -219.909, 0.81", "-180.59, 249.75, -220.372, 0.81", "-181.785, 250.233, -221.009, 0.52", "-183.016, 250.72, -221.669, 0.37", "-183.602, 250.97, -222.015, 0.37", "-184.228, 251.263, -222.43, 1.03", "-185.097, 251.717, -223.117, 1.47", "-185.578, 252.015, -223.565, 1.47", "-186.109, 252.435, -224.159, 0.44", "-187.144, 253.216, -225.468, 0.29", "-188.017, 253.725, -226.663, 0.29", "-189.06, 254.148, -228.237, 0.29", "-189.779, 254.368, -229.396, 0.52", "-190.665, 254.629, -230.817, 0.74", "-191.742, 255.016, -232.558, 0.59", "-192.359, 255.327, -233.633, 0.59", "-193.313, 255.899, -235.332, 0.37", "-194.015, 256.299, -236.433, 0.37", "-194.821, 256.697, -237.493, 0.37", "-195.782, 257.084, -238.52, 0.37", "-197.056, 257.57, -239.623, 0.59", "-197.925, 257.765, -240.205, 0.59", "-199.346, 257.762, -240.837, 2.06", "-199.927, 257.635, -241.022, 2.87", "-201.192, 257.136, -241.307, 2.5", "-202.253, 256.601, -241.441, 1.55", "-203.388, 255.947, -241.489, 0.37", "-203.992, 255.548, -241.497, 0.37", "-205.016, 254.801, -241.488, 0.37", "-206.101, 254.025, -241.484, 0.37", "-207.455, 253.01, -241.482, 0.37", "-207.799, 252.74, -241.491, 0.66", "-208.456, 252.225, -241.526, 0.44", "-209.182, 251.658, -241.581, 0.37", "-210.204, 250.929, -241.62, 0.37", "-211.088, 250.381, -241.642, 0.37", "-212.185, 249.756, -241.647, 0.37", "-213.006, 249.343, -241.634, 0.59", "-213.799, 248.997, -241.619, 0.59", "-215.129, 248.48, -241.579, 0.37", "-216.221, 248.101, -241.524, 0.66", "-217.049, 247.898, -241.464, 0.66", "-217.725, 247.788, -241.376, 0.66", "-218.404, 247.728, -241.265, 0.37", "-219.059, 247.723, -241.152, 0.74", "-219.627, 247.764, -241.056, 0.74", "-220.818, 247.929, -240.806, 0.52", "-222.468, 248.233, -240.47, 0.29", "-223.536, 248.393, -240.262, 0.29", "-224.422, 248.459, -240.102, 1.47", "-225.071, 248.443, -240.006, 1.99", "-225.785, 248.33, -239.924, 1.99", "-227.61, 247.85, -239.789, 0.29", "-229.133, 247.366, -239.759, 0.29", "-230.52, 246.849, -239.755, 0.29", "-231.702, 246.39, -239.769, 0.29", "-233.363, 245.776, -239.834, 0.29", "-234.303, 245.43, -239.916, 0.44", "-235.649, 244.924, -240.135, 0.44", "-236.871, 244.537, -240.41, 0.44", "-238.249, 244.185, -240.768, 0.44", "-239.537, 243.917, -241.118, 0.44", "-240.925, 243.645, -241.499, 0.44", "-242.631, 243.278, -241.938, 0.44", "-243.922, 242.987, -242.25, 0.44", "-245.619, 242.583, -242.711, 0.44", "-246.739, 242.246, -243.046, 1.62", "-247.364, 242.046, -243.233, 2.5", "-247.816, 241.913, -243.363, 2.5", "-250.25, 241.158, -244.065, 0.37", "-251.426, 240.704, -244.429, 0.37", "-252.628, 240.17, -244.84, 0.37", "-253.641, 239.701, -245.145, 0.81", "-254.595, 239.309, -245.368, 0.37", "-255.355, 239.075, -245.48, 0.52", "-255.924, 238.993, -245.478, 0.81", "-256.676, 238.968, -245.412, 0.81", "-258.224, 239.005, -245.29, 0.37", "-259.545, 238.99, -245.209, 0.37", "-260.911, 238.901, -245.148, 0.37", "-261.95, 238.802, -245.075, 0.37", "-263.196, 238.651, -244.97, 0.37", "-265.436, 238.272, -244.762, 0.29", "-266.703, 237.917, -244.653, 0.29", "-267.88, 237.384, -244.521, 0.29", "-269.051, 236.61, -244.313, 0.88", "-269.662, 236.09, -244.142, 0.88", "-270.441, 235.293, -243.831, 0.29", "-271.485, 234.079, -243.3, 0.29", "-272.611, 232.743, -242.707, 0.37", "-274.032, 231.035, -241.968, 0.66", "-274.95, 229.951, -241.546, 0.66", "-275.561, 229.257, -241.273, 0.22", "-276.004, 228.766, -241.075, 0.59", "-276.518, 228.243, -240.863, 0.81", "-276.845, 227.937, -240.747, 0.81", "-278.261, 226.691, -240.259, 0.29", "-278.624, 226.337, -240.118, 0.29", "-279.37, 225.477, -239.758, 0.52", "-279.773, 224.942, -239.483, 0.52", "-280.317, 224.193, -239.053, 0.52", "-281.485, 222.679, -238.104, 0.66", "-282.295, 221.745, -237.466, 0.52", "-282.905, 221.164, -236.989, 0.96", "-284.178, 220.195, -236.048, 0.66", "-285.096, 219.616, -235.4, 0.29", "-286.465, 218.944, -234.543, 0.29", "-287.497, 218.554, -233.999, 0.29", "-289.52, 217.904, -233.009, 0.29", "-290.243, 217.684, -232.683, 1.47", "-290.741, 217.531, -232.479, 1.77", "-292.489, 217.023, -231.741, 0.37", "-294.244, 216.533, -231.035, 0.37", "-295.199, 216.256, -230.657, 0.66", "-296.183, 215.961, -230.243, 0.66", "-296.965, 215.726, -229.851, 0.59", "-298.704, 215.284, -228.86, 0.37", "-299.888, 215.056, -228.101, 0.37", "-301.144, 214.856, -227.237, 0.37", "-302.546, 214.642, -226.182, 0.96", "-303.598, 214.457, -225.298, 0.22", "-304.706, 214.212, -224.299, 0.22", "-305.258, 214.052, -223.782, 0.22", "-306.086, 213.796, -223.03, 0.52", "-307.449, 213.317, -221.942, 0.74", "-308.392, 212.989, -221.325, 0.66", "-309.784, 212.514, -220.508, 0.29", "-310.803, 212.16, -219.972, 0.96", "-311.251, 212.028, -219.768, 1.33", "-313.124, 211.662, -219.041, 0.37", "-314.815, 211.367, -218.422, 0.37", "-315.684, 211.21, -218.09, 0.37", "-317.446, 210.919, -217.334, 0.37", "-318.628, 210.727, -216.767, 0.37", "-320.873, 210.295, -215.559, 0.37", "-322.342, 209.935, -214.678, 0.37", "-323.462, 209.573, -213.869, 0.37", "-324.734, 209.128, -212.758, 1.11", "-325.276, 208.946, -212.221, 1.11", "-326.16, 208.581, -211.27, 0.44", "-326.815, 208.313, -210.556, 0.29", "-328.209, 207.856, -209.161, 0.29", "-329.482, 207.408, -207.838, 0.81", "-330.912, 206.792, -206.312, 0.52", "-332.1, 206.218, -205.084, 0.52", "-333.049, 205.697, -204.051, 0.52", "-333.554, 205.398, -203.428, 0.81", "-334.745, 204.625, -201.89, 0.44", "-335.406, 204.188, -200.978, 0.37", "-336.181, 203.759, -199.827, 0.37", "-337.58, 203.11, -197.818, 0.37", "-339.147, 202.331, -195.605, 1.55", "-339.768, 202.016, -194.746, 2.36", "-340.097, 201.851, -194.301, 2.58", "-341.75, 200.858, -191.931, 0.52", "-342.208, 200.438, -191.146, 0.74", "-342.745, 199.662, -190.123, 0.74", "-343.199, 198.773, -189.065, 0.44", "-343.618, 197.904, -187.896, 0.37", "-343.94, 197.272, -186.984, 0.44", "-344.364, 196.391, -185.719, 0.44", "-344.736, 195.763, -184.62, 0.44", "-345.409, 194.819, -182.718, 0.81", "-345.878, 194.244, -181.527, 1.11", "-346.417, 193.639, -180.445, 0.37", "-346.945, 192.978, -179.496, 0.37", "-348.213, 190.989, -177.258, 1.4", "-348.582, 190.321, -176.589, 1.99", "-348.948, 189.616, -175.968, 1.99", "-349.983, 187.497, -174.259, 0.52", "-350.668, 185.999, -173.122, 0.52", "-351.211, 184.796, -172.305, 0.52", "-352.086, 182.823, -171.241, 0.52", "-352.55, 181.689, -170.648, 0.74", "-352.981, 180.474, -169.956, 0.74", "-353.257, 179.682, -169.458, 0.52", "-353.624, 178.759, -168.882, 0.52", "-354.25, 177.406, -168.048, 0.44", "-355.066, 175.838, -167.113, 0.44", "-355.718, 174.719, -166.373, 0.52", "-356.592, 173.427, -165.421, 0.44", "-357.333, 172.421, -164.608, 0.44", "-357.903, 171.662, -163.94, 2.36", "-358.507, 170.878, -163.216, 3.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-122.206, 233.179, -196.259, 0.37", "-122.734, 236.131, -197.0, 0.37", "-123.036, 237.777, -197.398, 0.37", "-123.24, 238.996, -197.683, 0.59", "-123.421, 240.434, -198.018, 0.44", "-123.51, 241.338, -198.231, 0.37", "-123.579, 242.279, -198.462, 0.37", "-123.602, 243.98, -198.923, 0.29", "-123.591, 245.15, -199.243, 0.29", "-123.536, 246.323, -199.557, 0.29", "-123.422, 247.852, -199.933, 0.88", "-123.348, 248.648, -200.143, 1.11", "-123.259, 249.284, -200.328, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-122.206, 233.179, -196.259, 0.29", "-120.999, 234.657, -197.688, 0.29", "-120.385, 235.466, -198.406, 0.29", "-119.896, 236.121, -199.112, 0.44", "-119.643, 236.474, -199.511, 0.44", "-119.16, 237.182, -200.279, 0.37", "-118.686, 237.921, -201.031, 0.37", "-118.139, 238.804, -201.879, 0.37", "-117.254, 240.307, -203.353, 0.81", "-116.93, 240.915, -203.935, 0.59", "-116.4, 242.01, -204.938, 1.33", "-116.056, 242.826, -205.66, 1.92", "-115.905, 243.175, -205.973, 1.92" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-107.936, 264.033, -133.76, 0.52", "-107.017, 267.004, -134.014, 0.52", "-106.55, 268.706, -134.114, 0.52", "-106.06, 270.723, -134.168, 0.52", "-105.747, 272.049, -134.197, 0.52", "-105.348, 273.703, -134.249, 0.52", "-105.084, 274.717, -134.298, 0.66", "-104.821, 275.732, -134.326, 0.29", "-104.652, 276.421, -134.365, 0.29", "-104.231, 278.2, -134.588, 0.29", "-103.929, 279.433, -134.734, 0.29", "-103.6, 280.695, -134.948, 0.29", "-103.234, 281.988, -135.192, 1.25", "-103.016, 282.731, -135.334, 1.55", "-102.615, 284.124, -135.618, 0.22", "-102.246, 285.851, -135.869, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-107.936, 264.033, -133.76, 0.29", "-107.918, 265.619, -133.27, 0.29", "-107.87, 266.527, -132.951, 0.29", "-107.804, 267.466, -132.613, 0.29", "-107.726, 268.607, -132.24, 0.37", "-107.671, 269.337, -132.043, 0.37", "-107.617, 269.938, -131.914, 0.29", "-107.46, 271.068, -131.754, 0.29", "-107.341, 271.863, -131.676, 0.29", "-107.17, 272.998, -131.631, 0.29", "-106.955, 274.23, -131.588, 0.29", "-106.781, 275.154, -131.563, 0.52", "-106.67, 275.755, -131.551, 0.29", "-106.432, 277.0, -131.533, 0.29", "-106.217, 277.956, -131.505, 0.29", "-105.909, 279.166, -131.452, 0.59", "-105.677, 280.071, -131.405, 0.74", "-105.447, 280.964, -131.371, 0.22", "-105.294, 281.552, -131.37, 0.22", "-105.055, 282.486, -131.43, 0.22", "-104.863, 283.227, -131.494, 0.22", "-104.718, 283.843, -131.56, 0.74", "-104.637, 284.193, -131.587, 0.74", "-104.554, 284.659, -131.59, 0.29", "-104.442, 285.479, -131.559, 0.59", "-104.346, 286.415, -131.452, 0.29", "-104.257, 287.397, -131.301, 0.29", "-104.22, 288.266, -131.118, 0.29", "-104.228, 289.111, -130.897, 0.29", "-104.269, 289.976, -130.598, 0.29", "-104.331, 290.936, -130.207, 0.29", "-104.371, 291.652, -129.879, 0.29", "-104.404, 292.925, -129.246, 0.29", "-104.401, 293.681, -128.862, 0.29", "-104.372, 294.835, -128.262, 1.4", "-104.349, 295.529, -127.881, 1.77", "-104.239, 296.82, -127.181, 0.37", "-104.141, 297.486, -126.806, 0.66", "-104.049, 297.795, -126.654, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-138.217, 242.512, -183.533, 0.29", "-137.861, 243.724, -182.18, 0.29", "-137.777, 244.422, -181.401, 0.22", "-137.805, 245.201, -180.533, 0.22", "-138.029, 246.231, -179.329, 0.44", "-138.228, 246.842, -178.614, 0.44", "-138.528, 247.75, -177.629, 0.44", "-138.858, 248.407, -176.954, 0.74", "-139.128, 248.943, -176.391, 0.74", "-139.557, 249.778, -175.572, 0.44", "-139.859, 250.462, -174.923, 0.29", "-140.142, 251.362, -174.084, 0.29", "-140.279, 252.304, -173.246, 0.29", "-140.229, 254.318, -171.45, 0.29", "-140.07, 255.372, -170.492, 0.29", "-139.871, 256.107, -169.749, 0.29", "-139.654, 256.809, -169.031, 0.29", "-139.38, 257.671, -168.22, 0.81", "-139.035, 258.79, -167.261, 1.47", "-138.787, 259.608, -166.652, 1.84", "-137.871, 262.553, -164.648, 0.29", "-137.512, 263.84, -163.858, 0.29", "-137.091, 265.394, -162.873, 0.29", "-136.487, 267.489, -161.521, 1.84", "-135.994, 269.095, -160.506, 0.37", "-135.673, 270.167, -159.832, 0.37", "-135.443, 270.969, -159.325, 0.37", "-134.759, 273.505, -157.472, 0.66", "-134.53, 274.533, -156.527, 0.37", "-134.48, 275.063, -155.951, 0.37", "-134.508, 275.856, -155.008, 0.59", "-134.536, 276.242, -154.583, 0.59", "-134.61, 276.906, -153.939, 0.44", "-134.996, 279.766, -151.679, 0.44", "-135.172, 281.175, -150.654, 0.29", "-135.299, 282.49, -149.765, 0.29", "-135.438, 284.33, -148.674, 0.29", "-135.49, 285.183, -148.199, 0.29", "-135.54, 286.348, -147.621, 0.29", "-135.581, 287.618, -147.08, 1.18", "-135.591, 288.088, -146.862, 1.55", "-135.692, 289.512, -145.982, 0.66", "-135.791, 291.189, -144.533, 1.03", "-135.792, 291.744, -143.931, 1.03", "-135.729, 292.946, -142.401, 0.29", "-135.685, 293.471, -141.692, 0.29", "-135.549, 294.611, -140.168, 0.66", "-135.332, 296.027, -138.118, 0.37", "-135.193, 296.917, -136.82, 0.37", "-135.108, 297.394, -136.081, 0.37", "-134.944, 298.025, -135.069, 1.47", "-134.689, 298.719, -134.074, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-138.217, 242.512, -183.533, 0.29", "-137.252, 245.357, -184.035, 0.29", "-136.621, 247.068, -184.222, 0.29", "-136.015, 248.719, -184.31, 1.69", "-135.108, 251.224, -184.329, 0.29", "-134.777, 252.168, -184.294, 0.29", "-134.37, 253.475, -184.19, 0.29", "-133.982, 254.653, -183.952, 0.29", "-133.73, 255.53, -183.745, 0.29", "-133.444, 256.751, -183.463, 0.59", "-133.256, 258.087, -183.201, 0.29", "-133.158, 259.557, -182.934, 0.29", "-133.168, 260.29, -182.823, 0.59", "-133.26, 261.216, -182.726, 0.59", "-133.47, 262.254, -182.595, 0.29", "-133.724, 263.117, -182.472, 0.29", "-134.036, 264.111, -182.328, 0.88", "-134.221, 264.718, -182.237, 1.03", "-134.651, 266.019, -182.024, 0.29", "-135.12, 267.379, -181.793, 0.29", "-135.531, 268.548, -181.659, 0.29", "-135.836, 269.471, -181.629, 0.29", "-136.177, 270.525, -181.701, 0.29", "-136.54, 271.586, -181.899, 0.66", "-136.751, 272.145, -182.09, 0.88", "-137.146, 273.148, -182.596, 0.29", "-137.497, 273.864, -183.058, 0.29", "-138.021, 274.761, -183.828, 0.29", "-138.551, 275.587, -184.815, 0.29", "-138.995, 276.209, -185.727, 0.29", "-139.52, 276.861, -186.823, 0.59", "-140.145, 277.528, -188.073, 0.44", "-140.906, 278.253, -189.505, 0.81", "-141.804, 279.002, -191.057, 0.37", "-142.469, 279.53, -192.049, 0.29", "-142.94, 279.897, -192.638, 0.29", "-143.457, 280.304, -193.18, 0.29", "-144.234, 281.027, -193.909, 0.59", "-145.233, 281.989, -194.673, 0.29", "-146.082, 282.835, -195.217, 0.22", "-146.543, 283.331, -195.524, 0.22", "-147.239, 284.154, -196.008, 1.25", "-147.604, 284.638, -196.281, 1.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-115.905, 243.175, -205.973, 0.44", "-116.47, 245.023, -206.786, 0.44", "-116.975, 246.845, -207.651, 0.37", "-117.264, 248.04, -208.221, 0.37", "-117.538, 249.225, -208.771, 0.37", "-117.767, 250.201, -209.239, 0.37", "-118.14, 251.742, -209.97, 0.29", "-118.458, 253.479, -210.818, 1.25", "-118.581, 254.357, -211.281, 1.62", "-118.683, 255.143, -211.765, 1.62", "-118.938, 257.275, -213.171, 0.29", "-119.027, 258.288, -213.85, 0.29", "-119.067, 259.575, -214.769, 0.29", "-119.025, 260.744, -215.698, 0.59", "-118.852, 262.833, -217.435, 0.29", "-118.782, 263.524, -218.015, 0.29", "-118.693, 264.507, -218.843, 0.29", "-118.674, 265.105, -219.328, 0.29", "-118.679, 265.943, -219.929, 0.59", "-118.67, 266.961, -220.551, 0.59", "-118.634, 269.0, -221.692, 0.29", "-118.619, 270.232, -222.416, 0.29", "-118.588, 271.624, -223.233, 0.29", "-118.514, 273.449, -224.315, 0.37", "-118.459, 274.401, -224.878, 0.37", "-118.295, 276.084, -225.849, 0.37", "-118.103, 277.48, -226.623, 0.37", "-117.786, 279.404, -227.612, 0.44", "-117.523, 280.692, -228.232, 0.66", "-117.304, 281.664, -228.665, 0.66", "-116.774, 283.699, -229.389, 0.29", "-116.496, 284.624, -229.631, 0.74", "-115.92, 286.469, -229.984, 0.29", "-115.285, 288.574, -230.278, 0.37", "-114.908, 289.808, -230.42, 0.37", "-114.288, 291.933, -230.661, 0.37", "-113.931, 293.278, -230.82, 0.37", "-113.585, 294.823, -231.03, 0.37", "-113.283, 296.543, -231.306, 0.29", "-113.059, 298.219, -231.614, 0.29", "-112.723, 300.544, -232.191, 0.29", "-112.559, 301.57, -232.523, 0.29", "-112.322, 302.946, -233.011, 1.03", "-112.13, 303.981, -233.396, 1.33", "-111.746, 306.133, -234.195, 0.52", "-111.427, 307.968, -234.861, 0.52", "-111.09, 309.73, -235.504, 0.52", "-110.809, 311.176, -236.019, 0.81", "-110.662, 311.965, -236.288, 0.81", "-110.33, 314.171, -236.965, 0.37", "-110.091, 316.025, -237.459, 0.37", "-109.911, 317.585, -237.814, 0.96", "-109.83, 318.281, -237.969, 1.33", "-109.743, 319.177, -238.164, 1.4", "-109.605, 321.247, -238.605, 0.52", "-109.552, 322.752, -238.919, 0.44", "-109.581, 324.721, -239.313, 0.37", "-109.628, 326.473, -239.664, 0.37", "-109.656, 327.929, -239.961, 0.37", "-109.672, 328.912, -240.162, 0.37", "-109.763, 330.595, -240.492, 0.74", "-109.819, 330.981, -240.558, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-115.905, 243.175, -205.973, 0.37", "-115.938, 244.58, -207.896, 0.37", "-115.844, 245.584, -209.166, 0.74", "-115.525, 247.124, -211.188, 0.29", "-115.297, 247.898, -212.324, 0.29", "-115.009, 248.68, -213.526, 1.25", "-114.885, 248.984, -214.006, 1.25", "-114.475, 249.748, -215.213, 0.29", "-113.988, 250.472, -216.397, 0.29", "-113.427, 251.23, -217.703, 0.29", "-113.146, 251.66, -218.536, 0.29", "-112.977, 252.031, -219.335, 0.29", "-112.837, 252.474, -220.338, 0.29", "-112.793, 253.013, -221.485, 1.03", "-112.818, 254.147, -223.645, 0.37", "-112.839, 254.785, -224.784, 0.37", "-112.845, 255.301, -225.811, 0.37", "-112.86, 255.74, -226.715, 1.03", "-112.908, 256.485, -228.299, 0.52", "-112.911, 257.002, -229.42, 0.52", "-112.814, 257.561, -230.481, 0.44", "-112.429, 258.765, -232.746, 1.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "axon_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "axon_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_LBC_3285d77dba_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_26
create dend_50
public dend_50
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_27
create dend_49
public dend_49
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, axon_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, axon_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_51
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.4500009556479821)
    connect dend_22(0), soma_0(0.4500009556479821)
    connect dend_17(0), soma_0(0.4500009556479821)
    connect dend_0(0), soma_0(0.4500009556479821)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.24986, 8.66179, -0.266886, 1.81928 ) }
    soma_0 { pt3dadd( -1.99773, 7.71094, -0.243919, 3.13771 ) }
    soma_0 { pt3dadd( -1.74561, 6.7601, -0.220952, 4.2898 ) }
    soma_0 { pt3dadd( -1.49349, 5.80925, -0.197985, 6.24218 ) }
    soma_0 { pt3dadd( -1.24137, 4.8584, -0.175018, 7.75134 ) }
    soma_0 { pt3dadd( -0.989246, 3.90756, -0.152051, 8.81916 ) }
    soma_0 { pt3dadd( -0.737124, 2.95671, -0.129084, 9.30643 ) }
    soma_0 { pt3dadd( -0.485002, 2.00586, -0.106117, 9.79367 ) }
    soma_0 { pt3dadd( -0.23288, 1.05502, -0.0831497, 10.3575 ) }
    soma_0 { pt3dadd( 0.0192416, 0.104171, -0.0601827, 10.6175 ) }
    soma_0 { pt3dadd( 0.271364, -0.846675, -0.0372157, 10.6286 ) }
    soma_0 { pt3dadd( 0.523485, -1.79752, -0.0142487, 10.564 ) }
    soma_0 { pt3dadd( 0.775607, -2.74837, 0.00871831, 10.4925 ) }
    soma_0 { pt3dadd( 1.02773, -3.69921, 0.0316853, 10.2088 ) }
    soma_0 { pt3dadd( 1.27985, -4.65006, 0.0546523, 9.65193 ) }
    soma_0 { pt3dadd( 1.53197, -5.60091, 0.0776193, 9.00896 ) }
    soma_0 { pt3dadd( 1.7841, -6.55175, 0.100586, 8.08521 ) }
    soma_0 { pt3dadd( 2.03622, -7.5026, 0.123553, 6.83318 ) }
    soma_0 { pt3dadd( 2.28834, -8.45345, 0.14652, 5.15146 ) }
    soma_0 { pt3dadd( 2.54046, -9.40429, 0.169487, 3.38897 ) }
    soma_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 2.13858 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.45367, 0.250194, 4.43561, 0.96 ) }
    dend_51 { pt3dadd( -5.21732, -0.523519, 5.67183, 0.96 ) }
    dend_51 { pt3dadd( -5.82693, -1.00686, 6.54742, 0.88 ) }
    dend_51 { pt3dadd( -7.83516, -2.35118, 9.08048, 0.81 ) }
    dend_51 { pt3dadd( -8.70553, -2.9035, 10.0639, 0.74 ) }
    dend_51 { pt3dadd( -10.0761, -3.81075, 11.5147, 0.66 ) }
    dend_51 { pt3dadd( -10.9067, -4.384, 12.5189, 0.59 ) }
    dend_51 { pt3dadd( -11.5754, -4.91259, 13.4888, 0.81 ) }
    dend_51 { pt3dadd( -12.0906, -5.29836, 14.2471, 0.81 ) }
    dend_51 { pt3dadd( -13.1851, -5.96608, 15.8068, 0.59 ) }
    dend_51 { pt3dadd( -14.125, -6.46105, 17.2007, 1.33 ) }
    dend_51 { pt3dadd( -16.3828, -7.49591, 20.7308, 1.55 ) }
    dend_51 { pt3dadd( -18.0341, -8.18853, 23.5618, 0.74 ) }
    dend_51 { pt3dadd( -18.62, -8.38068, 24.5941, 0.59 ) }
    dend_51 { pt3dadd( -19.4343, -8.57879, 26.025, 1.03 ) }
    dend_51 { pt3dadd( -19.7636, -8.61681, 26.588, 1.47 ) }
    dend_51 { pt3dadd( -20.6865, -8.60944, 28.1004, 1.47 ) }
    dend_51 { pt3dadd( -22.5074, -8.45971, 31.0997, 0.81 ) }
    dend_51 { pt3dadd( -23.1618, -8.41632, 32.4155, 0.59 ) }
    dend_51 { pt3dadd( -23.7662, -8.4783, 33.9534, 0.59 ) }
    dend_51 { pt3dadd( -24.1437, -8.61364, 35.0623, 0.96 ) }
    dend_51 { pt3dadd( -24.487, -8.85085, 36.2527, 0.96 ) }
    dend_51 { pt3dadd( -25.3945, -9.74363, 40.0063, 0.59 ) }
    dend_51 { pt3dadd( -25.7696, -10.3401, 42.2889, 0.59 ) }
    dend_51 { pt3dadd( -25.9461, -10.8223, 44.058, 0.44 ) }
    dend_51 { pt3dadd( -26.0107, -11.1514, 45.1686, 1.18 ) }
    dend_51 { pt3dadd( -26.0434, -11.532, 46.1466, 1.47 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.51366, 7.9902, 1.68561, 3.24 ) }
    dend_22 { pt3dadd( -1.51897, 8.54006, 1.79031, 3.24 ) }
    dend_22 { pt3dadd( -1.53698, 10.4076, 2.14591, 2.58 ) }
    dend_22 { pt3dadd( -1.55108, 11.869, 2.4242, 2.36 ) }
    dend_22 { pt3dadd( -1.56256, 13.0596, 2.6509, 2.36 ) }
    dend_22 { pt3dadd( -1.57585, 14.4368, 2.91313, 2.36 ) }
    dend_22 { pt3dadd( -1.58226, 15.1021, 3.03983, 2.5 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.55634, -6.3398, 3.06561, 1.18 ) }
    dend_17 { pt3dadd( 5.82881, -6.43499, 3.31234, 1.18 ) }
    dend_17 { pt3dadd( 7.49342, -7.15761, 4.52015, 0.88 ) }
    dend_17 { pt3dadd( 8.4083, -7.55867, 5.04002, 1.11 ) }
    dend_17 { pt3dadd( 10.9542, -8.6087, 6.18588, 1.33 ) }
    dend_17 { pt3dadd( 12.2225, -9.09221, 6.63382, 1.33 ) }
    dend_17 { pt3dadd( 13.6622, -9.62606, 7.14293, 1.25 ) }
    dend_17 { pt3dadd( 15.401, -10.2542, 7.66781, 0.96 ) }
    dend_17 { pt3dadd( 16.8144, -10.7855, 7.98603, 0.96 ) }
    dend_17 { pt3dadd( 17.9925, -11.2535, 8.17695, 1.25 ) }
    dend_17 { pt3dadd( 19.4401, -11.7879, 8.37323, 1.25 ) }
    dend_17 { pt3dadd( 21.4805, -12.4158, 8.77067, 1.47 ) }
    dend_17 { pt3dadd( 22.842, -12.7542, 9.13817, 0.74 ) }
    dend_17 { pt3dadd( 23.8912, -12.936, 9.56041, 0.74 ) }
    dend_17 { pt3dadd( 25.4363, -13.1399, 10.304, 0.59 ) }
    dend_17 { pt3dadd( 27.436, -13.3768, 11.3042, 0.59 ) }
    dend_17 { pt3dadd( 28.2345, -13.4634, 11.6872, 0.81 ) }
    dend_17 { pt3dadd( 29.1527, -13.5611, 12.0447, 0.81 ) }
    dend_17 { pt3dadd( 31.3012, -13.717, 12.9516, 0.52 ) }
    dend_17 { pt3dadd( 32.1212, -13.7306, 13.3102, 0.52 ) }
    dend_17 { pt3dadd( 33.4518, -13.695, 13.8791, 0.52 ) }
    dend_17 { pt3dadd( 34.4886, -13.8119, 14.1929, 0.59 ) }
    dend_17 { pt3dadd( 36.0986, -14.2653, 14.4954, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 78/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.77634, -9.79978, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.77634, -9.79978, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.83088, -10.6743, 1.66142, 2.06 ) }
    dend_0 { pt3dadd( 1.91234, -11.9805, 1.3415, 1.33 ) }
    dend_0 { pt3dadd( 1.99233, -13.263, 1.02736, 0.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 6.63706, -24.8541, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 10.4816, -39.353, 0.192454, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.58226, 15.1021, 3.03983, 2.06 ) }
    dend_26 { pt3dadd( -0.925263, 16.0371, 4.27603, 2.06 ) }
    dend_26 { pt3dadd( 0.38304, 17.9948, 6.54544, 1.92 ) }
    dend_26 { pt3dadd( 1.61646, 19.9515, 8.61713, 1.47 ) }
    dend_26 { pt3dadd( 2.15831, 20.8849, 9.51359, 1.47 ) }
    dend_26 { pt3dadd( 2.99277, 22.4493, 10.869, 1.25 ) }
    dend_26 { pt3dadd( 3.60931, 23.6051, 11.8704, 1.77 ) }
    dend_26 { pt3dadd( 4.23252, 24.8599, 12.8986, 1.55 ) }
    dend_26 { pt3dadd( 4.93287, 26.4185, 13.8934, 1.62 ) }
    dend_26 { pt3dadd( 5.37054, 27.5236, 14.4646, 2.21 ) }
    dend_26 { pt3dadd( 5.8119, 28.7629, 15.0395, 2.65 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.58226, 15.1021, 3.03983, 0.59 ) }
    dend_23 { pt3dadd( -3.29516, 15.4247, 2.21399, 0.59 ) }
    dend_23 { pt3dadd( -4.24371, 15.5281, 1.78923, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -5.05989, 15.5527, 1.37317, 0.59 ) }
    dend_23 { pt3dadd( -6.6841, 15.5321, 0.376012, 0.52 ) }
    dend_23 { pt3dadd( -7.74551, 15.5143, -0.348093, 0.81 ) }
    dend_23 { pt3dadd( -8.55374, 15.5098, -0.924029, 1.18 ) }
    dend_23 { pt3dadd( -9.16601, 15.4755, -1.35844, 1.18 ) }
    dend_23 { pt3dadd( -10.6465, 15.3645, -2.44924, 0.66 ) }
    dend_23 { pt3dadd( -11.9537, 15.2951, -3.39951, 0.66 ) }
    dend_23 { pt3dadd( -12.8248, 15.2822, -3.99571, 1.25 ) }
    dend_23 { pt3dadd( -13.3253, 15.2935, -4.31057, 1.47 ) }
    dend_23 { pt3dadd( -14.4665, 15.3617, -4.99396, 0.52 ) }
    dend_23 { pt3dadd( -15.3161, 15.4376, -5.43917, 0.52 ) }
    dend_23 { pt3dadd( -16.7543, 15.591, -5.97091, 0.52 ) }
    dend_23 { pt3dadd( -17.6917, 15.6672, -6.2119, 1.03 ) }
    dend_23 { pt3dadd( -18.3707, 15.6924, -6.36051, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 36.0986, -14.2653, 14.4954, 0.52 ) }
    dend_21 { pt3dadd( 36.0662, -16.6859, 13.9873, 0.52 ) }
    dend_21 { pt3dadd( 35.8764, -17.6754, 13.7873, 0.37 ) }
    dend_21 { pt3dadd( 35.2033, -19.9246, 13.2564, 0.37 ) }
    dend_21 { pt3dadd( 34.582, -21.5157, 12.6924, 0.59 ) }
    dend_21 { pt3dadd( 34.207, -22.3775, 12.3155, 0.22 ) }
    dend_21 { pt3dadd( 33.3193, -24.273, 11.4616, 0.22 ) }
    dend_21 { pt3dadd( 32.6448, -25.5136, 10.8118, 0.22 ) }
    dend_21 { pt3dadd( 31.4259, -27.5125, 9.69892, 0.74 ) }
    dend_21 { pt3dadd( 29.547, -30.2304, 8.13933, 0.29 ) }
    dend_21 { pt3dadd( 28.3052, -32.0106, 7.08212, 0.07 ) }
    dend_21 { pt3dadd( 27.7313, -32.908, 6.50016, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 36.0986, -14.2653, 14.4954, 1.03 ) }
    dend_18 { pt3dadd( 37.8657, -14.2233, 15.6804, 1.03 ) }
    dend_18 { pt3dadd( 38.6467, -14.2896, 15.875, 0.52 ) }
    dend_18 { pt3dadd( 39.8843, -14.3049, 16.0184, 0.52 ) }
    dend_18 { pt3dadd( 42.3813, -14.241, 16.2046, 0.37 ) }
    dend_18 { pt3dadd( 43.8067, -14.2124, 16.2144, 0.37 ) }
    dend_18 { pt3dadd( 47.2531, -14.1635, 16.0964, 0.37 ) }
    dend_18 { pt3dadd( 56.1393, -14.2144, 15.16, 0.37 ) }
    dend_18 { pt3dadd( 61.3331, -14.2928, 14.3665, 0.66 ) }
    dend_18 { pt3dadd( 62.6906, -14.3145, 14.0913, 0.66 ) }
    dend_18 { pt3dadd( 65.9692, -14.3562, 13.1659, 0.74 ) }
    dend_18 { pt3dadd( 67.4098, -14.3554, 12.6515, 0.74 ) }
    dend_18 { pt3dadd( 69.246, -14.3407, 11.771, 0.37 ) }
    dend_18 { pt3dadd( 70.3723, -14.3417, 11.1022, 0.37 ) }
    dend_18 { pt3dadd( 71.4657, -14.4122, 10.5288, 0.37 ) }
    dend_18 { pt3dadd( 72.5273, -14.4075, 10.1513, 0.81 ) }
    dend_18 { pt3dadd( 73.9029, -14.2453, 9.93901, 0.81 ) }
    dend_18 { pt3dadd( 74.9782, -14.0823, 9.85893, 0.81 ) }
    dend_18 { pt3dadd( 76.6882, -13.8983, 9.8825, 0.37 ) }
    dend_18 { pt3dadd( 77.9498, -13.9137, 9.95073, 0.29 ) }
    dend_18 { pt3dadd( 79.3412, -14.1071, 10.0899, 0.29 ) }
    dend_18 { pt3dadd( 81.0434, -14.4882, 10.3761, 0.44 ) }
    dend_18 { pt3dadd( 82.3179, -14.8369, 10.7149, 0.44 ) }
    dend_18 { pt3dadd( 84.2896, -15.4268, 11.3472, 0.44 ) }
    dend_18 { pt3dadd( 86.0256, -15.9659, 11.9285, 0.88 ) }
    dend_18 { pt3dadd( 86.767, -16.1628, 12.2087, 0.88 ) }
    dend_18 { pt3dadd( 88.5697, -16.4279, 13.0494, 0.52 ) }
    dend_18 { pt3dadd( 90.221, -16.3466, 13.9956, 0.74 ) }
    dend_18 { pt3dadd( 91.5859, -16.0157, 14.8127, 0.81 ) }
    dend_18 { pt3dadd( 92.4304, -15.6816, 15.2845, 0.81 ) }
    dend_18 { pt3dadd( 93.5045, -15.1788, 15.8257, 0.52 ) }
    dend_18 { pt3dadd( 94.894, -14.5221, 16.4266, 0.52 ) }
    dend_18 { pt3dadd( 95.6085, -14.2215, 16.673, 0.74 ) }
    dend_18 { pt3dadd( 96.7394, -13.8628, 16.9769, 0.74 ) }
    dend_18 { pt3dadd( 97.9635, -13.6314, 17.2645, 0.59 ) }
    dend_18 { pt3dadd( 99.1489, -13.5732, 17.4886, 0.59 ) }
    dend_18 { pt3dadd( 100.667, -13.6872, 17.6993, 0.66 ) }
    dend_18 { pt3dadd( 101.791, -13.9167, 17.7751, 0.88 ) }
    dend_18 { pt3dadd( 102.54, -14.157, 17.7847, 0.88 ) }
    dend_18 { pt3dadd( 103.41, -14.5923, 17.7448, 0.52 ) }
    dend_18 { pt3dadd( 104.46, -15.3464, 17.6385, 0.52 ) }
    dend_18 { pt3dadd( 105.155, -16.062, 17.5083, 0.52 ) }
    dend_18 { pt3dadd( 106.148, -17.509, 17.2442, 0.44 ) }
    dend_18 { pt3dadd( 106.754, -18.5603, 16.9833, 0.44 ) }
    dend_18 { pt3dadd( 107.515, -20.0181, 16.5229, 0.59 ) }
    dend_18 { pt3dadd( 107.827, -20.637, 16.2779, 0.74 ) }
    dend_18 { pt3dadd( 108.341, -21.5191, 15.8096, 0.52 ) }
    dend_18 { pt3dadd( 108.851, -21.84, 15.4075, 0.37 ) }
    dend_18 { pt3dadd( 110.779, -21.6642, 14.2057, 0.52 ) }
    dend_18 { pt3dadd( 111.547, -21.5479, 13.7762, 0.52 ) }
    dend_18 { pt3dadd( 112.47, -21.4243, 13.3191, 0.52 ) }
    dend_18 { pt3dadd( 114.033, -21.2823, 12.6417, 0.52 ) }
    dend_18 { pt3dadd( 115.526, -21.1403, 12.0676, 0.52 ) }
    dend_18 { pt3dadd( 117.0, -21.0061, 11.554, 0.66 ) }
    dend_18 { pt3dadd( 118.221, -20.9387, 11.1985, 0.66 ) }
    dend_18 { pt3dadd( 119.459, -20.8743, 10.8399, 0.37 ) }
    dend_18 { pt3dadd( 120.618, -20.8403, 10.5183, 0.37 ) }
    dend_18 { pt3dadd( 121.901, -20.8516, 10.1978, 0.37 ) }
    dend_18 { pt3dadd( 122.772, -20.8826, 9.96087, 0.66 ) }
    dend_18 { pt3dadd( 123.217, -20.9155, 9.8128, 0.66 ) }
    dend_18 { pt3dadd( 123.756, -20.9954, 9.54894, 0.66 ) }
    dend_18 { pt3dadd( 124.285, -21.1339, 9.20819, 0.66 ) }
    dend_18 { pt3dadd( 125.09, -21.4368, 8.60533, 0.37 ) }
    dend_18 { pt3dadd( 126.183, -21.9529, 7.7622, 0.37 ) }
    dend_18 { pt3dadd( 127.33, -22.4663, 6.96515, 0.37 ) }
    dend_18 { pt3dadd( 128.315, -22.834, 6.35688, 0.22 ) }
    dend_18 { pt3dadd( 129.269, -23.1237, 5.86967, 0.37 ) }
    dend_18 { pt3dadd( 130.058, -23.2553, 5.57907, 0.44 ) }
    dend_18 { pt3dadd( 130.848, -23.2397, 5.41231, 0.44 ) }
    dend_18 { pt3dadd( 132.552, -22.9319, 5.30406, 0.52 ) }
    dend_18 { pt3dadd( 133.107, -22.7806, 5.30636, 0.37 ) }
    dend_18 { pt3dadd( 133.981, -22.4994, 5.33776, 0.37 ) }
    dend_18 { pt3dadd( 134.832, -22.2296, 5.33838, 0.52 ) }
    dend_18 { pt3dadd( 135.434, -22.0334, 5.2504, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_18 { pt3dadd( 135.92, -21.8776, 5.08277, 0.88 ) }
    dend_18 { pt3dadd( 136.259, -21.755, 4.90072, 0.88 ) }
    dend_18 { pt3dadd( 136.698, -21.5678, 4.64262, 1.03 ) }
    dend_18 { pt3dadd( 137.256, -21.2898, 4.28694, 1.03 ) }
    dend_18 { pt3dadd( 138.113, -20.865, 3.72279, 0.52 ) }
    dend_18 { pt3dadd( 139.134, -20.4128, 3.03714, 0.29 ) }
    dend_18 { pt3dadd( 140.004, -20.1379, 2.50685, 0.66 ) }
    dend_18 { pt3dadd( 140.677, -19.9817, 2.11427, 0.81 ) }
    dend_18 { pt3dadd( 141.335, -19.8797, 1.74715, 0.81 ) }
    dend_18 { pt3dadd( 141.932, -19.8126, 1.42275, 0.81 ) }
    dend_18 { pt3dadd( 142.903, -19.7452, 0.938424, 0.37 ) }
    dend_18 { pt3dadd( 144.764, -19.7589, 0.0523591, 0.37 ) }
    dend_18 { pt3dadd( 145.691, -19.8122, -0.347502, 0.44 ) }
    dend_18 { pt3dadd( 146.487, -19.8452, -0.672875, 0.59 ) }
    dend_18 { pt3dadd( 147.223, -19.8311, -0.960291, 0.59 ) }
    dend_18 { pt3dadd( 148.306, -19.7229, -1.36184, 0.59 ) }
    dend_18 { pt3dadd( 149.303, -19.5247, -1.70753, 0.52 ) }
    dend_18 { pt3dadd( 150.43, -19.2144, -2.08783, 0.74 ) }
    dend_18 { pt3dadd( 151.209, -19.019, -2.30605, 0.74 ) }
    dend_18 { pt3dadd( 152.325, -18.8179, -2.64656, 0.37 ) }
    dend_18 { pt3dadd( 153.172, -18.7224, -2.93281, 0.44 ) }
    dend_18 { pt3dadd( 154.099, -18.6681, -3.277, 0.66 ) }
    dend_18 { pt3dadd( 154.788, -18.669, -3.5427, 0.74 ) }
    dend_18 { pt3dadd( 155.545, -18.7449, -3.82366, 0.74 ) }
    dend_18 { pt3dadd( 157.12, -18.9923, -4.41438, 0.59 ) }
    dend_18 { pt3dadd( 157.567, -19.0766, -4.59173, 0.59 ) }
    dend_18 { pt3dadd( 158.218, -19.1893, -4.87751, 0.59 ) }
    dend_18 { pt3dadd( 158.863, -19.305, -5.203, 0.37 ) }
    dend_18 { pt3dadd( 159.859, -19.4507, -5.74351, 0.59 ) }
    dend_18 { pt3dadd( 160.728, -19.5429, -6.25609, 0.81 ) }
    dend_18 { pt3dadd( 161.388, -19.5794, -6.61263, 0.81 ) }
    dend_18 { pt3dadd( 162.4, -19.6392, -7.09951, 0.52 ) }
    dend_18 { pt3dadd( 163.528, -19.671, -7.5762, 0.37 ) }
    dend_18 { pt3dadd( 164.305, -19.6609, -7.85375, 0.29 ) }
    dend_18 { pt3dadd( 164.895, -19.6255, -8.01463, 0.29 ) }
    dend_18 { pt3dadd( 166.23, -19.4265, -8.26078, 0.52 ) }
    dend_18 { pt3dadd( 167.564, -19.1255, -8.43144, 0.52 ) }
    dend_18 { pt3dadd( 168.459, -18.9182, -8.49827, 0.88 ) }
    dend_18 { pt3dadd( 169.189, -18.7894, -8.56134, 0.88 ) }
    dend_18 { pt3dadd( 169.744, -18.7448, -8.66692, 0.88 ) }
    dend_18 { pt3dadd( 170.95, -18.7377, -9.03942, 0.37 ) }
    dend_18 { pt3dadd( 171.773, -18.778, -9.44032, 0.37 ) }
    dend_18 { pt3dadd( 172.918, -18.8806, -10.1371, 0.37 ) }
    dend_18 { pt3dadd( 174.28, -19.0772, -10.9745, 0.29 ) }
    dend_18 { pt3dadd( 175.309, -19.2816, -11.7029, 0.29 ) }
    dend_18 { pt3dadd( 175.939, -19.3958, -12.1919, 0.52 ) }
    dend_18 { pt3dadd( 176.26, -19.4442, -12.4671, 0.74 ) }
    dend_18 { pt3dadd( 176.806, -19.4922, -12.9934, 0.44 ) }
    dend_18 { pt3dadd( 177.9, -19.5154, -14.0626, 0.37 ) }
    dend_18 { pt3dadd( 179.698, -19.4707, -15.7261, 0.44 ) }
    dend_18 { pt3dadd( 180.712, -19.4696, -16.6623, 0.44 ) }
    dend_18 { pt3dadd( 181.716, -19.5086, -17.6465, 1.03 ) }
    dend_18 { pt3dadd( 182.712, -19.5801, -18.6834, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.99233, -13.263, 1.02736, 1.18 ) }
    dend_2 { pt3dadd( 1.62912, -15.1521, 2.97308, 1.18 ) }
    dend_2 { pt3dadd( 1.36837, -16.0088, 3.82816, 1.18 ) }
    dend_2 { pt3dadd( 0.707003, -18.1816, 5.99703, 1.18 ) }
    dend_2 { pt3dadd( 0.23536, -19.7311, 7.54373, 0.88 ) }
    dend_2 { pt3dadd( -0.0581597, -20.6955, 8.50629, 0.74 ) }
    dend_2 { pt3dadd( -0.314228, -21.5367, 9.34603, 1.03 ) }
    dend_2 { pt3dadd( -1.02896, -23.0931, 10.6618, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.99233, -13.263, 1.02736, 0.96 ) }
    dend_1 { pt3dadd( 3.07885, -14.5943, -2.02936, 0.96 ) }
    dend_1 { pt3dadd( 3.93433, -15.8294, -4.32619, 0.96 ) }
    dend_1 { pt3dadd( 4.03473, -16.0092, -4.62579, 1.4 ) }
    dend_1 { pt3dadd( 5.31964, -18.3463, -8.25641, 0.88 ) }
    dend_1 { pt3dadd( 5.60758, -18.8466, -8.97733, 0.88 ) }
    dend_1 { pt3dadd( 6.15, -19.7303, -10.1846, 0.52 ) }
    dend_1 { pt3dadd( 6.91984, -20.9075, -11.6169, 0.52 ) }
    dend_1 { pt3dadd( 8.20941, -22.8721, -13.8388, 0.88 ) }
    dend_1 { pt3dadd( 9.83883, -25.3469, -16.4269, 0.52 ) }
    dend_1 { pt3dadd( 11.1344, -27.2426, -18.2462, 0.52 ) }
    dend_1 { pt3dadd( 11.9659, -28.3597, -19.3083, 0.52 ) }
    dend_1 { pt3dadd( 12.8951, -29.5801, -20.4174, 0.52 ) }
    dend_1 { pt3dadd( 13.6549, -30.5988, -21.2767, 0.52 ) }
    dend_1 { pt3dadd( 14.607, -31.953, -22.2416, 0.88 ) }
    dend_1 { pt3dadd( 15.1984, -32.9892, -22.8578, 1.11 ) }
    dend_1 { pt3dadd( 16.2268, -35.2161, -24.0219, 0.44 ) }
    dend_1 { pt3dadd( 16.8165, -36.6637, -24.7465, 0.74 ) }
    dend_1 { pt3dadd( 17.2191, -37.6989, -25.2218, 0.96 ) }
    dend_1 { pt3dadd( 17.6331, -38.7291, -25.6464, 0.96 ) }
    dend_1 { pt3dadd( 18.3021, -40.3394, -26.3413, 0.66 ) }
    dend_1 { pt3dadd( 18.6268, -41.1116, -26.708, 0.66 ) }
    dend_1 { pt3dadd( 19.4753, -42.9962, -27.6709, 0.44 ) }
    dend_1 { pt3dadd( 20.0452, -43.9652, -28.4176, 0.59 ) }
    dend_1 { pt3dadd( 20.7429, -44.894, -29.3378, 0.44 ) }
    dend_1 { pt3dadd( 22.283, -46.3517, -31.6429, 0.37 ) }
    dend_1 { pt3dadd( 23.3656, -47.0917, -33.4637, 0.96 ) }
    dend_1 { pt3dadd( 23.787, -47.3316, -34.2255, 1.33 ) }
    dend_1 { pt3dadd( 26.4513, -48.7122, -39.579, 0.81 ) }
    dend_1 { pt3dadd( 27.0915, -49.0369, -40.9782, 1.11 ) }
    dend_1 { pt3dadd( 30.003, -50.5763, -47.8431, 0.66 ) }
    dend_1 { pt3dadd( 32.0754, -51.8195, -53.1576, 1.55 ) }
    dend_1 { pt3dadd( 33.8455, -53.1182, -58.0227, 0.96 ) }
    dend_1 { pt3dadd( 35.3376, -54.5216, -62.5646, 0.81 ) }
    dend_1 { pt3dadd( 35.8063, -55.1596, -64.2321, 0.96 ) }
    dend_1 { pt3dadd( 36.1514, -55.9662, -65.8302, 0.37 ) }
    dend_1 { pt3dadd( 36.3637, -57.4149, -67.6739, 0.29 ) }
    dend_1 { pt3dadd( 36.3396, -59.1487, -69.0952, 0.29 ) }
    dend_1 { pt3dadd( 36.2294, -60.224, -69.6649, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 36.1677, -60.8484, -69.8718, 0.52 ) }
    dend_1 { pt3dadd( 36.0035, -63.5501, -70.7291, 0.29 ) }
    dend_1 { pt3dadd( 35.9877, -64.2953, -70.9802, 0.59 ) }
    dend_1 { pt3dadd( 35.9974, -64.9693, -71.2081, 0.59 ) }
    dend_1 { pt3dadd( 36.017, -65.8263, -71.5264, 0.29 ) }
    dend_1 { pt3dadd( 36.0828, -67.5686, -72.2594, 0.29 ) }
    dend_1 { pt3dadd( 36.1881, -69.2664, -73.0916, 0.59 ) }
    dend_1 { pt3dadd( 36.2211, -69.8435, -73.4257, 0.81 ) }
    dend_1 { pt3dadd( 36.3243, -72.4715, -75.1119, 0.22 ) }
    dend_1 { pt3dadd( 36.383, -73.7885, -76.0632, 0.22 ) }
    dend_1 { pt3dadd( 36.4852, -75.6133, -77.5059, 0.22 ) }
    dend_1 { pt3dadd( 36.6174, -77.753, -79.2879, 0.81 ) }
    dend_1 { pt3dadd( 36.7513, -79.6692, -81.0207, 0.44 ) }
    dend_1 { pt3dadd( 36.8434, -80.7672, -82.0786, 0.44 ) }
    dend_1 { pt3dadd( 37.0283, -82.6076, -83.9529, 0.88 ) }
    dend_1 { pt3dadd( 37.1997, -83.882, -85.1798, 0.74 ) }
    dend_1 { pt3dadd( 37.2797, -84.4128, -85.6548, 0.74 ) }
    dend_1 { pt3dadd( 37.5897, -87.0498, -87.7938, 0.44 ) }
    dend_1 { pt3dadd( 37.6948, -88.2158, -88.629, 0.44 ) }
    dend_1 { pt3dadd( 37.7141, -89.1874, -89.2983, 0.29 ) }
    dend_1 { pt3dadd( 37.6137, -90.6595, -90.2245, 0.29 ) }
    dend_1 { pt3dadd( 37.2273, -93.1219, -91.712, 0.29 ) }
    dend_1 { pt3dadd( 36.9089, -94.5458, -92.533, 0.74 ) }
    dend_1 { pt3dadd( 36.5704, -95.733, -93.1318, 0.74 ) }
    dend_1 { pt3dadd( 35.8364, -97.995, -94.2856, 0.44 ) }
    dend_1 { pt3dadd( 35.4742, -99.0353, -94.7926, 0.44 ) }
    dend_1 { pt3dadd( 35.0743, -100.172, -95.2848, 0.29 ) }
    dend_1 { pt3dadd( 34.9042, -100.664, -95.445, 0.66 ) }
    dend_1 { pt3dadd( 34.45, -101.97, -95.8315, 0.37 ) }
    dend_1 { pt3dadd( 34.0627, -103.034, -96.1062, 0.88 ) }
    dend_1 { pt3dadd( 33.6573, -104.0, -96.366, 0.88 ) }
    dend_1 { pt3dadd( 33.0526, -105.293, -96.8044, 0.59 ) }
    dend_1 { pt3dadd( 32.4116, -106.534, -97.2913, 0.29 ) }
    dend_1 { pt3dadd( 31.7427, -107.755, -97.9581, 0.66 ) }
    dend_1 { pt3dadd( 31.4422, -108.3, -98.3568, 0.66 ) }
    dend_1 { pt3dadd( 30.6624, -110.048, -99.9825, 0.22 ) }
    dend_1 { pt3dadd( 30.4641, -110.693, -100.671, 0.22 ) }
    dend_1 { pt3dadd( 30.35, -111.196, -101.26, 0.74 ) }
    dend_1 { pt3dadd( 30.2002, -112.965, -103.469, 0.44 ) }
    dend_1 { pt3dadd( 30.2699, -114.03, -104.864, 0.44 ) }
    dend_1 { pt3dadd( 30.559, -115.472, -106.845, 0.29 ) }
    dend_1 { pt3dadd( 30.742, -115.897, -107.464, 0.44 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4816, -39.353, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 14.326, -53.852, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 18.1705, -68.351, 0.192454, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_26 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 5.8119, 28.7629, 15.0395, 0.81 ) }
    dend_50 { pt3dadd( 7.37618, 29.9344, 14.9725, 0.81 ) }
    dend_50 { pt3dadd( 8.03943, 30.4246, 14.8777, 0.81 ) }
    dend_50 { pt3dadd( 9.24013, 31.221, 14.6382, 0.81 ) }
    dend_50 { pt3dadd( 10.8542, 32.1903, 14.2818, 0.96 ) }
    dend_50 { pt3dadd( 11.7058, 32.6702, 14.0854, 1.25 ) }
    dend_50 { pt3dadd( 12.4521, 33.0707, 13.9131, 1.25 ) }
    dend_50 { pt3dadd( 13.8347, 33.8012, 13.5564, 0.96 ) }
    dend_50 { pt3dadd( 14.9779, 34.4163, 13.239, 0.81 ) }
    dend_50 { pt3dadd( 16.0159, 34.9698, 12.9312, 1.33 ) }
    dend_50 { pt3dadd( 16.6936, 35.3184, 12.6957, 1.62 ) }
    dend_50 { pt3dadd( 17.7161, 35.8024, 12.3409, 0.74 ) }
    dend_50 { pt3dadd( 18.6548, 36.209, 12.0321, 0.59 ) }
    dend_50 { pt3dadd( 19.6017, 36.6303, 11.7138, 0.52 ) }
    dend_50 { pt3dadd( 20.6917, 37.1884, 11.227, 0.44 ) }
    dend_50 { pt3dadd( 21.3668, 37.5347, 10.8117, 0.44 ) }
    dend_50 { pt3dadd( 22.5867, 38.0664, 9.83719, 0.74 ) }
    dend_50 { pt3dadd( 23.3159, 38.3036, 9.14215, 0.74 ) }
    dend_50 { pt3dadd( 24.5046, 38.5232, 7.9186, 0.52 ) }
    dend_50 { pt3dadd( 25.5276, 38.5927, 6.88866, 0.88 ) }
    dend_50 { pt3dadd( 26.5893, 38.6235, 5.78941, 0.88 ) }
    dend_50 { pt3dadd( 27.4987, 38.7318, 4.74679, 0.59 ) }
    dend_50 { pt3dadd( 27.9437, 38.8146, 4.20432, 0.59 ) }
    dend_50 { pt3dadd( 28.4804, 38.9152, 3.58495, 0.44 ) }
    dend_50 { pt3dadd( 29.3223, 39.0901, 2.86793, 0.44 ) }
    dend_50 { pt3dadd( 30.0263, 39.317, 2.43302, 0.44 ) }
    dend_50 { pt3dadd( 31.5023, 40.0166, 1.802, 0.44 ) }
    dend_50 { pt3dadd( 32.7217, 40.7679, 1.38125, 0.74 ) }
    dend_50 { pt3dadd( 33.7443, 41.5774, 1.07566, 0.96 ) }
    dend_50 { pt3dadd( 35.649, 43.4592, 0.621191, 0.44 ) }
    dend_50 { pt3dadd( 36.0802, 43.959, 0.538346, 0.96 ) }
    dend_50 { pt3dadd( 36.8355, 44.9289, 0.423725, 0.37 ) }
    dend_50 { pt3dadd( 37.5535, 45.9853, 0.342814, 0.37 ) }
    dend_50 { pt3dadd( 38.2468, 47.2104, 0.070915, 0.37 ) }
    dend_50 { pt3dadd( 38.7228, 48.221, -0.306825, 0.74 ) }
    dend_50 { pt3dadd( 39.0358, 48.947, -0.698901, 0.44 ) }
    dend_50 { pt3dadd( 39.4155, 49.8744, -1.2384, 0.52 ) }
    dend_50 { pt3dadd( 39.6797, 50.5933, -1.68, 1.11 ) }
    dend_50 { pt3dadd( 40.4163, 52.7347, -3.01287, 0.44 ) }
    dend_50 { pt3dadd( 40.7782, 53.8859, -3.70931, 0.29 ) }
    dend_50 { pt3dadd( 41.0597, 54.9595, -4.34385, 0.29 ) }
    dend_50 { pt3dadd( 41.2412, 55.7611, -4.78391, 0.81 ) }
    dend_50 { pt3dadd( 41.3898, 56.4551, -5.13604, 0.81 ) }
    dend_50 { pt3dadd( 41.6279, 57.5104, -5.61355, 0.52 ) }
    dend_50 { pt3dadd( 41.9426, 58.9241, -6.16146, 0.52 ) }
    dend_50 { pt3dadd( 42.2867, 60.5641, -6.86306, 0.44 ) }
    dend_50 { pt3dadd( 42.3644, 61.0099, -7.06917, 0.88 ) }
    dend_50 { pt3dadd( 42.4988, 61.7464, -7.43821, 0.88 ) }
    dend_50 { pt3dadd( 42.7416, 62.7717, -7.96772, 0.37 ) }
    dend_50 { pt3dadd( 43.0082, 63.5359, -8.43368, 0.22 ) }
    dend_50 { pt3dadd( 43.3232, 64.2646, -8.90944, 0.22 ) }
    dend_50 { pt3dadd( 43.6907, 64.9867, -9.40318, 0.22 ) }
    dend_50 { pt3dadd( 44.224, 65.883, -10.0562, 0.22 ) }
    dend_50 { pt3dadd( 44.9932, 67.0579, -10.8607, 0.22 ) }
    dend_50 { pt3dadd( 46.2099, 68.7172, -11.9036, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 46.6134, 69.2041, -12.1652, 0.81 ) }
    dend_50 { pt3dadd( 47.4418, 70.102, -12.5886, 0.81 ) }
    dend_50 { pt3dadd( 48.1869, 70.8681, -12.8903, 0.44 ) }
    dend_50 { pt3dadd( 49.1799, 71.8845, -13.2195, 0.44 ) }
    dend_50 { pt3dadd( 49.5442, 72.2687, -13.305, 0.96 ) }
    dend_50 { pt3dadd( 50.1923, 72.9689, -13.39, 0.52 ) }
    dend_50 { pt3dadd( 51.0116, 73.8146, -13.493, 0.37 ) }
    dend_50 { pt3dadd( 51.7345, 74.5634, -13.5774, 0.66 ) }
    dend_50 { pt3dadd( 52.3193, 75.1754, -13.6827, 0.66 ) }
    dend_50 { pt3dadd( 52.9139, 75.8155, -13.8293, 0.29 ) }
    dend_50 { pt3dadd( 53.7885, 76.7546, -14.043, 0.29 ) }
    dend_50 { pt3dadd( 54.6432, 77.6596, -14.2395, 0.59 ) }
    dend_50 { pt3dadd( 55.2339, 78.2561, -14.361, 0.37 ) }
    dend_50 { pt3dadd( 55.9603, 78.9366, -14.5148, 0.66 ) }
    dend_50 { pt3dadd( 56.5659, 79.4808, -14.6438, 0.66 ) }
    dend_50 { pt3dadd( 57.6324, 80.4324, -14.8669, 0.29 ) }
    dend_50 { pt3dadd( 58.4228, 81.1639, -15.0211, 0.29 ) }
    dend_50 { pt3dadd( 58.9276, 81.6326, -15.1218, 0.29 ) }
    dend_50 { pt3dadd( 59.3965, 82.0219, -15.2241, 0.66 ) }
    dend_50 { pt3dadd( 59.7432, 82.2908, -15.3035, 0.66 ) }
    dend_50 { pt3dadd( 60.1899, 82.6465, -15.46, 0.66 ) }
    dend_50 { pt3dadd( 60.9257, 83.2627, -15.7989, 0.37 ) }
    dend_50 { pt3dadd( 61.7558, 83.9638, -16.2818, 0.37 ) }
    dend_50 { pt3dadd( 62.7425, 84.7683, -16.9758, 0.96 ) }
    dend_50 { pt3dadd( 63.2909, 85.1719, -17.3882, 0.96 ) }
    dend_50 { pt3dadd( 64.707, 86.1103, -18.4849, 0.29 ) }
    dend_50 { pt3dadd( 65.6378, 86.6823, -19.2357, 0.29 ) }
    dend_50 { pt3dadd( 66.4988, 87.2006, -19.9035, 0.29 ) }
    dend_50 { pt3dadd( 67.7467, 87.9087, -20.7441, 0.29 ) }
    dend_50 { pt3dadd( 68.4294, 88.2645, -21.1297, 0.74 ) }
    dend_50 { pt3dadd( 69.0466, 88.5719, -21.4306, 0.74 ) }
    dend_50 { pt3dadd( 70.6934, 89.4037, -22.0205, 0.29 ) }
    dend_50 { pt3dadd( 72.6945, 90.5046, -22.5762, 0.29 ) }
    dend_50 { pt3dadd( 74.7826, 91.7454, -22.9643, 0.29 ) }
    dend_50 { pt3dadd( 75.7661, 92.3893, -23.0768, 0.29 ) }
    dend_50 { pt3dadd( 76.6444, 93.0105, -23.1456, 0.29 ) }
    dend_50 { pt3dadd( 78.0754, 94.0821, -23.1561, 0.66 ) }
    dend_50 { pt3dadd( 78.7782, 94.5853, -23.152, 0.66 ) }
    dend_50 { pt3dadd( 79.6529, 95.1238, -23.1904, 0.37 ) }
    dend_50 { pt3dadd( 80.5623, 95.6191, -23.3356, 1.03 ) }
    dend_50 { pt3dadd( 81.4099, 96.004, -23.5323, 1.03 ) }
    dend_50 { pt3dadd( 82.7354, 96.4965, -23.9497, 0.66 ) }
    dend_50 { pt3dadd( 85.3688, 97.3284, -25.0199, 0.22 ) }
    dend_50 { pt3dadd( 87.5829, 97.9746, -26.0243, 0.52 ) }
    dend_50 { pt3dadd( 89.5172, 98.5337, -26.985, 0.29 ) }
    dend_50 { pt3dadd( 90.8003, 98.9117, -27.684, 0.29 ) }
    dend_50 { pt3dadd( 91.9838, 99.3222, -28.3945, 0.66 ) }
    dend_50 { pt3dadd( 92.4945, 99.5585, -28.7191, 0.66 ) }
    dend_50 { pt3dadd( 93.5392, 100.225, -29.2151, 0.22 ) }
    dend_50 { pt3dadd( 94.165, 100.709, -29.4601, 0.52 ) }
    dend_50 { pt3dadd( 94.6882, 101.158, -29.617, 0.52 ) }
    dend_50 { pt3dadd( 96.9754, 103.266, -30.0986, 0.22 ) }
    dend_50 { pt3dadd( 98.6885, 104.878, -30.3497, 0.22 ) }
    dend_50 { pt3dadd( 101.235, 107.291, -30.6191, 0.22 ) }
    dend_50 { pt3dadd( 102.558, 108.562, -30.7141, 0.52 ) }
    dend_50 { pt3dadd( 103.294, 109.271, -30.7316, 0.22 ) }
    dend_50 { pt3dadd( 104.257, 110.211, -30.657, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.8119, 28.7629, 15.0395, 0.66 ) }
    dend_27 { pt3dadd( 5.48617, 30.5592, 15.1816, 0.66 ) }
    dend_27 { pt3dadd( 5.46618, 31.1191, 15.2465, 0.74 ) }
    dend_27 { pt3dadd( 5.49872, 31.8596, 15.3773, 0.74 ) }
    dend_27 { pt3dadd( 5.55687, 32.5752, 15.4062, 1.03 ) }
    dend_27 { pt3dadd( 5.62475, 33.2552, 15.402, 1.03 ) }
    dend_27 { pt3dadd( 5.70491, 34.0542, 15.3754, 0.74 ) }
    dend_27 { pt3dadd( 5.87949, 34.9903, 15.4033, 1.11 ) }
    dend_27 { pt3dadd( 6.07505, 35.8199, 15.3868, 1.47 ) }
    dend_27 { pt3dadd( 6.52726, 37.5099, 15.1917, 1.62 ) }
    dend_27 { pt3dadd( 6.66251, 38.0293, 15.0753, 1.62 ) }
    dend_27 { pt3dadd( 6.73087, 38.3529, 14.9725, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -18.3707, 15.6924, -6.36051, 0.29 ) }
    dend_25 { pt3dadd( -19.5668, 15.7119, -5.65653, 0.29 ) }
    dend_25 { pt3dadd( -20.4784, 15.7575, -5.21427, 0.88 ) }
    dend_25 { pt3dadd( -21.4289, 15.7981, -4.80065, 1.11 ) }
    dend_25 { pt3dadd( -24.6374, 15.9297, -3.51903, 1.03 ) }
    dend_25 { pt3dadd( -25.631, 15.9535, -3.14954, 0.59 ) }
    dend_25 { pt3dadd( -26.4341, 15.9532, -2.84033, 0.29 ) }
    dend_25 { pt3dadd( -27.5245, 15.9223, -2.36113, 0.29 ) }
    dend_25 { pt3dadd( -28.1396, 15.9105, -2.08068, 0.52 ) }
    dend_25 { pt3dadd( -28.5188, 15.9147, -1.91372, 0.74 ) }
    dend_25 { pt3dadd( -29.3159, 15.9746, -1.66781, 0.74 ) }
    dend_25 { pt3dadd( -30.9286, 16.117, -1.12999, 0.37 ) }
    dend_25 { pt3dadd( -31.5856, 16.188, -0.88922, 0.59 ) }
    dend_25 { pt3dadd( -32.0219, 16.261, -0.73773, 0.59 ) }
    dend_25 { pt3dadd( -32.8773, 16.4556, -0.488698, 0.29 ) }
    dend_25 { pt3dadd( -34.0187, 16.7503, -0.20456, 0.59 ) }
    dend_25 { pt3dadd( -34.5198, 16.8962, -0.133646, 0.37 ) }
    dend_25 { pt3dadd( -35.6399, 17.2246, -0.119967, 0.29 ) }
    dend_25 { pt3dadd( -36.6245, 17.4974, -0.176317, 1.25 ) }
    dend_25 { pt3dadd( -37.0196, 17.6006, -0.226893, 1.62 ) }
    dend_25 { pt3dadd( -37.4394, 17.7269, -0.317862, 1.62 ) }
    dend_25 { pt3dadd( -38.6604, 18.1478, -0.653627, 0.29 ) }
    dend_25 { pt3dadd( -39.4362, 18.4185, -0.889931, 0.29 ) }
    dend_25 { pt3dadd( -40.2975, 18.7278, -1.17581, 0.52 ) }
    dend_25 { pt3dadd( -40.7551, 18.8964, -1.33058, 0.59 ) }
    dend_25 { pt3dadd( -42.1332, 19.4198, -1.80678, 0.22 ) }
    dend_25 { pt3dadd( -42.8023, 19.6888, -2.04471, 0.74 ) }
    dend_25 { pt3dadd( -43.4213, 19.9523, -2.25198, 0.74 ) }
    dend_25 { pt3dadd( -44.0782, 20.2406, -2.46991, 0.22 ) }
    dend_25 { pt3dadd( -44.4991, 20.425, -2.6096, 0.37 ) }
    dend_25 { pt3dadd( -44.906, 20.6147, -2.74198, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -18.3707, 15.6924, -6.36051, 0.44 ) }
    dend_24 { pt3dadd( -19.4715, 15.3248, -7.3246, 0.44 ) }
    dend_24 { pt3dadd( -20.2308, 15.048, -7.97889, 0.44 ) }
    dend_24 { pt3dadd( -20.9536, 14.7791, -8.58709, 0.96 ) }
    dend_24 { pt3dadd( -21.6294, 14.5084, -9.17855, 1.25 ) }
    dend_24 { pt3dadd( -22.5585, 14.1053, -9.99272, 0.74 ) }
    dend_24 { pt3dadd( -23.1977, 13.8147, -10.5335, 0.59 ) }
    dend_24 { pt3dadd( -23.8079, 13.5252, -11.0669, 0.59 ) }
    dend_24 { pt3dadd( -24.3746, 13.2572, -11.6011, 0.59 ) }
    dend_24 { pt3dadd( -25.2386, 12.8747, -12.4703, 0.44 ) }
    dend_24 { pt3dadd( -26.3746, 12.4168, -13.6699, 0.81 ) }
    dend_24 { pt3dadd( -27.7478, 11.93, -15.2871, 0.81 ) }
    dend_24 { pt3dadd( -28.3523, 11.7267, -16.1672, 0.81 ) }
    dend_24 { pt3dadd( -28.8881, 11.5496, -17.162, 0.44 ) }
    dend_24 { pt3dadd( -29.2674, 11.445, -17.9694, 0.44 ) }
    dend_24 { pt3dadd( -29.7456, 11.3461, -18.9935, 0.44 ) }
    dend_24 { pt3dadd( -30.5074, 11.2472, -20.6202, 0.44 ) }
    dend_24 { pt3dadd( -31.4567, 11.1974, -22.5106, 0.88 ) }
    dend_24 { pt3dadd( -32.2271, 11.1751, -23.7994, 0.88 ) }
    dend_24 { pt3dadd( -33.0523, 11.1619, -24.9578, 0.52 ) }
    dend_24 { pt3dadd( -34.4737, 11.1779, -26.6178, 0.52 ) }
    dend_24 { pt3dadd( -35.0242, 11.1963, -27.1562, 0.52 ) }
    dend_24 { pt3dadd( -36.0575, 11.2181, -27.9033, 0.88 ) }
    dend_24 { pt3dadd( -36.8855, 11.2184, -28.3661, 0.88 ) }
    dend_24 { pt3dadd( -37.7935, 11.178, -28.8113, 1.18 ) }
    dend_24 { pt3dadd( -38.6544, 11.0827, -29.2189, 1.18 ) }
    dend_24 { pt3dadd( -39.9742, 10.8039, -29.7799, 0.74 ) }
    dend_24 { pt3dadd( -41.3876, 10.3735, -30.2523, 0.52 ) }
    dend_24 { pt3dadd( -42.8109, 9.85377, -30.6314, 0.52 ) }
    dend_24 { pt3dadd( -43.935, 9.44447, -30.8858, 0.88 ) }
    dend_24 { pt3dadd( -45.4758, 8.93513, -31.1968, 0.88 ) }
    dend_24 { pt3dadd( -47.1591, 8.43066, -31.5133, 0.88 ) }
    dend_24 { pt3dadd( -49.1536, 7.89475, -31.879, 1.03 ) }
    dend_24 { pt3dadd( -50.2135, 7.60918, -32.1057, 0.96 ) }
    dend_24 { pt3dadd( -51.6028, 7.23298, -32.4226, 0.74 ) }
    dend_24 { pt3dadd( -53.4764, 6.76206, -32.9059, 0.52 ) }
    dend_24 { pt3dadd( -54.2265, 6.57981, -33.1516, 0.81 ) }
    dend_24 { pt3dadd( -55.0411, 6.37287, -33.511, 0.81 ) }
    dend_24 { pt3dadd( -56.2668, 5.98766, -34.1753, 0.52 ) }
    dend_24 { pt3dadd( -56.663, 5.82774, -34.4024, 0.88 ) }
    dend_24 { pt3dadd( -57.141, 5.58223, -34.6928, 1.18 ) }
    dend_24 { pt3dadd( -58.2385, 4.9983, -35.3539, 1.18 ) }
    dend_24 { pt3dadd( -59.6096, 4.33971, -36.1394, 0.59 ) }
    dend_24 { pt3dadd( -60.2395, 4.07171, -36.4832, 0.74 ) }
    dend_24 { pt3dadd( -60.9874, 3.7987, -36.8724, 0.74 ) }
    dend_24 { pt3dadd( -62.0612, 3.42261, -37.3599, 0.44 ) }
    dend_24 { pt3dadd( -62.8373, 3.14488, -37.6784, 0.44 ) }
    dend_24 { pt3dadd( -63.6074, 2.84612, -37.9748, 0.74 ) }
    dend_24 { pt3dadd( -64.4566, 2.49829, -38.343, 0.74 ) }
    dend_24 { pt3dadd( -65.2833, 2.15257, -38.633, 0.74 ) }
    dend_24 { pt3dadd( -67.1153, 1.38205, -39.1561, 0.29 ) }
    dend_24 { pt3dadd( -68.2929, 0.850313, -39.4324, 0.37 ) }
    dend_24 { pt3dadd( -69.5361, 0.234073, -39.6914, 0.37 ) }
    dend_24 { pt3dadd( -71.081, -0.565561, -39.9861, 0.37 ) }
    dend_24 { pt3dadd( -73.7701, -1.99481, -40.5696, 0.74 ) }
    dend_24 { pt3dadd( -74.5943, -2.45432, -40.8034, 1.03 ) }
    dend_24 { pt3dadd( -76.2987, -3.47184, -41.3632, 0.59 ) }
    dend_24 { pt3dadd( -77.7379, -4.37086, -41.8217, 0.44 ) }
    dend_24 { pt3dadd( -78.6515, -4.949, -42.1133, 0.88 ) }
    dend_24 { pt3dadd( -79.915, -5.7465, -42.542, 0.74 ) }
    dend_24 { pt3dadd( -81.0847, -6.4657, -43.1013, 0.37 ) }
    dend_24 { pt3dadd( -82.4716, -7.18646, -43.7565, 0.37 ) }
    dend_24 { pt3dadd( -83.1926, -7.4459, -44.0913, 0.81 ) }
    dend_24 { pt3dadd( -83.8029, -7.56502, -44.3463, 1.03 ) }
    dend_24 { pt3dadd( -84.3994, -7.60539, -44.5511, 1.03 ) }
    dend_24 { pt3dadd( -85.1996, -7.5822, -44.7698, 0.66 ) }
    dend_24 { pt3dadd( -86.3924, -7.46097, -45.1038, 0.37 ) }
    dend_24 { pt3dadd( -87.4574, -7.29958, -45.4752, 0.59 ) }
    dend_24 { pt3dadd( -88.403, -7.1301, -45.8263, 0.59 ) }
    dend_24 { pt3dadd( -89.3193, -6.96453, -46.1475, 0.37 ) }
    dend_24 { pt3dadd( -90.3584, -6.81093, -46.4639, 0.66 ) }
    dend_24 { pt3dadd( -91.1607, -6.7058, -46.7572, 0.88 ) }
    dend_24 { pt3dadd( -91.5124, -6.65467, -46.9252, 0.88 ) }
    dend_24 { pt3dadd( -93.1188, -6.34023, -47.8659, 0.29 ) }
    dend_24 { pt3dadd( -94.056, -6.11945, -48.5411, 0.29 ) }
    dend_24 { pt3dadd( -95.2176, -5.79205, -49.573, 0.29 ) }
    dend_24 { pt3dadd( -96.8968, -5.27369, -51.3437, 0.44 ) }
    dend_24 { pt3dadd( -98.0595, -4.9465, -52.754, 0.44 ) }
    dend_24 { pt3dadd( -98.497, -4.85436, -53.3888, 0.44 ) }
    dend_24 { pt3dadd( -98.7241, -4.83201, -53.8036, 0.59 ) }
    dend_24 { pt3dadd( -99.1332, -4.81839, -54.625, 0.59 ) }
    dend_24 { pt3dadd( -99.4332, -4.82668, -55.1861, 0.59 ) }
    dend_24 { pt3dadd( -100.084, -4.9136, -56.1226, 0.37 ) }
    dend_24 { pt3dadd( -100.62, -5.01997, -56.9185, 0.37 ) }
    dend_24 { pt3dadd( -101.088, -5.1162, -57.6559, 0.66 ) }
    dend_24 { pt3dadd( -101.503, -5.20241, -58.4289, 0.66 ) }
    dend_24 { pt3dadd( -101.876, -5.30019, -59.2137, 0.66 ) }
    dend_24 { pt3dadd( -102.519, -5.50415, -60.7371, 0.44 ) }
    dend_24 { pt3dadd( -103.051, -5.69329, -62.0856, 0.66 ) }
    dend_24 { pt3dadd( -103.326, -5.81207, -62.9255, 0.66 ) }
    dend_24 { pt3dadd( -103.965, -6.10453, -65.1209, 0.29 ) }
    dend_24 { pt3dadd( -104.336, -6.26838, -66.403, 0.29 ) }
    dend_24 { pt3dadd( -104.677, -6.41662, -67.5407, 0.66 ) }
    dend_24 { pt3dadd( -104.954, -6.51881, -68.33, 0.88 ) }
    dend_24 { pt3dadd( -106.041, -6.82956, -71.0074, 0.44 ) }
    dend_24 { pt3dadd( -106.432, -6.90477, -71.9239, 0.29 ) }
    dend_24 { pt3dadd( -107.105, -6.98191, -73.1903, 0.29 ) }
    dend_24 { pt3dadd( -107.663, -7.039, -74.1279, 0.66 ) }
    dend_24 { pt3dadd( -108.199, -7.12129, -74.9945, 0.66 ) }
    dend_24 { pt3dadd( -108.627, -7.23422, -75.5952, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -109.512, -7.56455, -76.9353, 0.37 ) }
    dend_24 { pt3dadd( -110.328, -7.89974, -78.4609, 0.29 ) }
    dend_24 { pt3dadd( -110.623, -8.00504, -79.1041, 0.29 ) }
    dend_24 { pt3dadd( -111.326, -8.17023, -80.8946, 0.29 ) }
    dend_24 { pt3dadd( -111.946, -8.22219, -82.6471, 1.25 ) }
    dend_24 { pt3dadd( -113.245, -8.04703, -86.4521, 0.29 ) }
    dend_24 { pt3dadd( -113.627, -7.91179, -87.6454, 0.29 ) }
    dend_24 { pt3dadd( -113.838, -7.78747, -88.3403, 0.59 ) }
    dend_24 { pt3dadd( -114.296, -7.47486, -89.7095, 0.44 ) }
    dend_24 { pt3dadd( -114.586, -7.2768, -90.4327, 0.22 ) }
    dend_24 { pt3dadd( -114.957, -7.03986, -91.198, 0.81 ) }
    dend_24 { pt3dadd( -116.205, -6.50953, -92.8231, 0.44 ) }
    dend_24 { pt3dadd( -116.947, -6.28136, -93.6125, 0.59 ) }
    dend_24 { pt3dadd( -117.403, -6.17832, -94.0301, 0.59 ) }
    dend_24 { pt3dadd( -118.648, -5.99558, -94.8891, 0.29 ) }
    dend_24 { pt3dadd( -119.801, -5.87209, -95.5069, 0.59 ) }
    dend_24 { pt3dadd( -120.545, -5.82413, -95.7569, 0.59 ) }
    dend_24 { pt3dadd( -122.02, -5.76477, -96.0301, 0.29 ) }
    dend_24 { pt3dadd( -123.213, -5.73338, -96.1555, 0.29 ) }
    dend_24 { pt3dadd( -125.342, -5.67898, -96.2016, 0.74 ) }
    dend_24 { pt3dadd( -126.357, -5.65082, -96.1434, 0.74 ) }
    dend_24 { pt3dadd( -128.125, -5.56591, -95.9607, 0.37 ) }
    dend_24 { pt3dadd( -129.433, -5.43433, -95.7754, 0.37 ) }
    dend_24 { pt3dadd( -130.546, -5.23268, -95.5663, 0.44 ) }
    dend_24 { pt3dadd( -131.769, -4.87806, -95.3248, 0.74 ) }
    dend_24 { pt3dadd( -132.506, -4.56285, -95.2036, 0.74 ) }
    dend_24 { pt3dadd( -133.326, -4.11352, -95.088, 0.37 ) }
    dend_24 { pt3dadd( -134.069, -3.58177, -95.0024, 0.59 ) }
    dend_24 { pt3dadd( -134.909, -2.86282, -94.8842, 0.37 ) }
    dend_24 { pt3dadd( -135.547, -2.24954, -94.8071, 0.29 ) }
    dend_24 { pt3dadd( -135.99, -1.79388, -94.7626, 0.52 ) }
    dend_24 { pt3dadd( -136.573, -1.20646, -94.7191, 0.74 ) }
    dend_24 { pt3dadd( -137.469, -0.377555, -94.6848, 0.29 ) }
    dend_24 { pt3dadd( -137.948, 0.0223113, -94.687, 0.74 ) }
    dend_24 { pt3dadd( -138.626, 0.538399, -94.7235, 0.74 ) }
    dend_24 { pt3dadd( -139.555, 1.21357, -94.8287, 0.29 ) }
    dend_24 { pt3dadd( -140.499, 1.87148, -94.993, 0.29 ) }
    dend_24 { pt3dadd( -141.432, 2.48037, -95.235, 0.29 ) }
    dend_24 { pt3dadd( -142.453, 3.10873, -95.5744, 0.29 ) }
    dend_24 { pt3dadd( -143.441, 3.71714, -95.986, 0.29 ) }
    dend_24 { pt3dadd( -144.458, 4.34137, -96.5006, 0.96 ) }
    dend_24 { pt3dadd( -144.939, 4.62235, -96.7842, 0.96 ) }
    dend_24 { pt3dadd( -146.35, 5.41258, -97.6986, 0.29 ) }
    dend_24 { pt3dadd( -146.748, 5.6222, -97.976, 0.66 ) }
    dend_24 { pt3dadd( -147.568, 6.01123, -98.5613, 0.66 ) }
    dend_24 { pt3dadd( -148.494, 6.39475, -99.1995, 0.29 ) }
    dend_24 { pt3dadd( -149.216, 6.62756, -99.644, 0.29 ) }
    dend_24 { pt3dadd( -149.673, 6.7589, -99.9166, 0.66 ) }
    dend_24 { pt3dadd( -150.182, 6.89264, -100.205, 0.88 ) }
    dend_24 { pt3dadd( -151.005, 7.10018, -100.655, 0.66 ) }
    dend_24 { pt3dadd( -151.614, 7.28101, -100.978, 0.15 ) }
    dend_24 { pt3dadd( -152.475, 7.59828, -101.43, 0.15 ) }
    dend_24 { pt3dadd( -153.285, 7.95885, -101.872, 0.15 ) }
    dend_24 { pt3dadd( -153.939, 8.29623, -102.235, 0.81 ) }
    dend_24 { pt3dadd( -154.467, 8.62119, -102.57, 1.03 ) }
    dend_24 { pt3dadd( -155.83, 9.51519, -103.524, 0.29 ) }
    dend_24 { pt3dadd( -156.533, 9.98781, -104.038, 0.81 ) }
    dend_24 { pt3dadd( -157.058, 10.3684, -104.452, 0.81 ) }
    dend_24 { pt3dadd( -158.043, 11.0687, -105.246, 0.29 ) }
    dend_24 { pt3dadd( -159.014, 11.7497, -106.146, 0.29 ) }
    dend_24 { pt3dadd( -159.707, 12.1909, -106.847, 0.29 ) }
    dend_24 { pt3dadd( -160.525, 12.6439, -107.773, 0.29 ) }
    dend_24 { pt3dadd( -161.034, 12.9185, -108.552, 1.18 ) }
    dend_24 { pt3dadd( -161.42, 13.1074, -109.383, 1.18 ) }
    dend_24 { pt3dadd( -161.853, 13.2845, -110.881, 0.52 ) }
    dend_24 { pt3dadd( -162.042, 13.3336, -111.822, 0.88 ) }
    dend_24 { pt3dadd( -162.15, 13.3511, -112.792, 0.88 ) }
    dend_24 { pt3dadd( -162.271, 13.3298, -115.653, 0.44 ) }
    dend_24 { pt3dadd( -162.31, 13.3174, -116.999, 0.44 ) }
    dend_24 { pt3dadd( -162.322, 13.3438, -118.13, 0.74 ) }
    dend_24 { pt3dadd( -162.337, 13.3967, -118.826, 0.74 ) }
    dend_24 { pt3dadd( -162.418, 13.6149, -120.57, 0.44 ) }
    dend_24 { pt3dadd( -162.558, 13.8057, -121.73, 0.44 ) }
    dend_24 { pt3dadd( -162.78, 13.9936, -122.6, 0.88 ) }
    dend_24 { pt3dadd( -163.055, 14.1932, -123.407, 0.88 ) }
    dend_24 { pt3dadd( -163.378, 14.4023, -124.22, 0.88 ) }
    dend_24 { pt3dadd( -164.01, 14.7725, -125.86, 0.52 ) }
    dend_24 { pt3dadd( -164.553, 15.0204, -127.28, 0.52 ) }
    dend_24 { pt3dadd( -164.885, 15.1098, -128.15, 0.59 ) }
    dend_24 { pt3dadd( -165.228, 15.1312, -129.08, 0.44 ) }
    dend_24 { pt3dadd( -165.605, 15.0988, -130.054, 0.44 ) }
    dend_24 { pt3dadd( -166.111, 15.0542, -131.238, 0.44 ) }
    dend_24 { pt3dadd( -166.646, 15.0415, -132.36, 0.88 ) }
    dend_24 { pt3dadd( -166.995, 15.0444, -133.088, 0.88 ) }
    dend_24 { pt3dadd( -167.447, 15.0585, -134.048, 0.37 ) }
    dend_24 { pt3dadd( -167.917, 15.1218, -135.05, 0.37 ) }
    dend_24 { pt3dadd( -168.617, 15.2647, -136.44, 0.59 ) }
    dend_24 { pt3dadd( -169.549, 15.516, -138.102, 0.37 ) }
    dend_24 { pt3dadd( -169.884, 15.6114, -138.672, 0.74 ) }
    dend_24 { pt3dadd( -170.481, 15.8111, -139.652, 0.74 ) }
    dend_24 { pt3dadd( -171.509, 16.1978, -141.194, 0.37 ) }
    dend_24 { pt3dadd( -171.921, 16.3418, -141.748, 0.59 ) }
    dend_24 { pt3dadd( -172.942, 16.6745, -142.952, 0.29 ) }
    dend_24 { pt3dadd( -173.749, 16.9195, -143.754, 0.29 ) }
    dend_24 { pt3dadd( -174.512, 17.0954, -144.449, 0.29 ) }
    dend_24 { pt3dadd( -175.625, 17.2844, -145.413, 0.59 ) }
    dend_24 { pt3dadd( -176.004, 17.3248, -145.721, 1.11 ) }
    dend_24 { pt3dadd( -176.303, 17.3507, -145.965, 1.4 ) }
    dend_24 { pt3dadd( -177.229, 17.3602, -146.713, 0.81 ) }
    dend_24 { pt3dadd( -178.187, 17.3214, -147.515, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -179.051, 17.1992, -148.281, 0.22 ) }
    dend_24 { pt3dadd( -179.69, 17.0505, -148.865, 0.22 ) }
    dend_24 { pt3dadd( -180.713, 16.7317, -149.887, 0.22 ) }
    dend_24 { pt3dadd( -181.808, 16.2854, -151.083, 0.22 ) }
    dend_24 { pt3dadd( -182.017, 16.1768, -151.336, 0.44 ) }
    dend_24 { pt3dadd( -182.375, 15.9462, -151.811, 0.44 ) }
    dend_24 { pt3dadd( -182.712, 15.6592, -152.365, 0.22 ) }
    dend_24 { pt3dadd( -183.203, 15.1328, -153.424, 0.44 ) }
    dend_24 { pt3dadd( -183.385, 14.9126, -153.97, 0.44 ) }
    dend_24 { pt3dadd( -183.696, 14.5798, -154.98, 0.22 ) }
    dend_24 { pt3dadd( -184.037, 14.3067, -155.931, 0.22 ) }
    dend_24 { pt3dadd( -184.567, 14.0054, -157.184, 0.59 ) }
    dend_24 { pt3dadd( -184.732, 13.9413, -157.529, 0.59 ) }
    dend_24 { pt3dadd( -185.767, 13.7799, -159.743, 0.29 ) }
    dend_24 { pt3dadd( -186.137, 13.7442, -160.523, 0.29 ) }
    dend_24 { pt3dadd( -186.703, 13.7263, -161.683, 0.29 ) }
    dend_24 { pt3dadd( -187.108, 13.7271, -162.447, 0.81 ) }
    dend_24 { pt3dadd( -187.494, 13.7362, -163.091, 0.81 ) }
    dend_24 { pt3dadd( -189.011, 13.9227, -165.649, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 182.712, -19.5801, -18.6834, 0.29 ) }
    dend_20 { pt3dadd( 183.687, -20.6086, -18.4931, 0.29 ) }
    dend_20 { pt3dadd( 184.303, -21.2253, -18.5283, 0.29 ) }
    dend_20 { pt3dadd( 185.189, -22.1486, -18.8733, 0.52 ) }
    dend_20 { pt3dadd( 185.423, -22.3912, -18.9074, 0.52 ) }
    dend_20 { pt3dadd( 185.707, -22.6855, -18.91, 0.37 ) }
    dend_20 { pt3dadd( 186.238, -23.2364, -18.915, 0.52 ) }
    dend_20 { pt3dadd( 187.432, -24.3658, -18.9978, 0.37 ) }
    dend_20 { pt3dadd( 188.587, -25.4529, -19.1091, 0.88 ) }
    dend_20 { pt3dadd( 190.855, -27.719, -19.2981, 0.29 ) }
    dend_20 { pt3dadd( 191.149, -28.031, -19.2796, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 182.712, -19.5801, -18.6834, 0.29 ) }
    dend_19 { pt3dadd( 183.898, -19.1173, -19.632, 0.29 ) }
    dend_19 { pt3dadd( 184.409, -18.9811, -19.9886, 0.44 ) }
    dend_19 { pt3dadd( 185.151, -18.7985, -20.4674, 0.44 ) }
    dend_19 { pt3dadd( 185.939, -18.5893, -20.9376, 0.74 ) }
    dend_19 { pt3dadd( 187.017, -18.2802, -21.5477, 0.74 ) }
    dend_19 { pt3dadd( 188.084, -17.9495, -22.1307, 0.44 ) }
    dend_19 { pt3dadd( 189.274, -17.5986, -22.7205, 0.66 ) }
    dend_19 { pt3dadd( 189.894, -17.392, -23.0161, 0.66 ) }
    dend_19 { pt3dadd( 190.918, -16.935, -23.5518, 0.74 ) }
    dend_19 { pt3dadd( 191.379, -16.6628, -23.8138, 0.29 ) }
    dend_19 { pt3dadd( 191.89, -16.277, -24.1288, 0.37 ) }
    dend_19 { pt3dadd( 192.51, -15.7595, -24.4605, 0.81 ) }
    dend_19 { pt3dadd( 192.856, -15.4619, -24.6118, 1.03 ) }
    dend_19 { pt3dadd( 194.623, -14.0091, -25.2154, 0.29 ) }
    dend_19 { pt3dadd( 195.623, -13.2048, -25.4817, 0.29 ) }
    dend_19 { pt3dadd( 197.093, -12.0276, -25.7859, 0.29 ) }
    dend_19 { pt3dadd( 198.375, -11.0029, -26.0377, 0.29 ) }
    dend_19 { pt3dadd( 199.44, -10.1419, -26.2627, 1.03 ) }
    dend_19 { pt3dadd( 200.04, -9.64251, -26.4184, 1.03 ) }
    dend_19 { pt3dadd( 200.659, -9.12796, -26.6025, 1.03 ) }
    dend_19 { pt3dadd( 201.156, -8.71779, -26.8528, 0.66 ) }
    dend_19 { pt3dadd( 202.13, -7.8861, -27.5793, 0.52 ) }
    dend_19 { pt3dadd( 202.7, -7.27124, -28.1727, 0.52 ) }
    dend_19 { pt3dadd( 203.215, -6.58307, -28.8148, 0.37 ) }
    dend_19 { pt3dadd( 203.707, -5.86496, -29.4311, 0.37 ) }
    dend_19 { pt3dadd( 204.102, -5.33383, -29.8748, 0.29 ) }
    dend_19 { pt3dadd( 204.798, -4.49001, -30.5882, 0.29 ) }
    dend_19 { pt3dadd( 205.755, -3.41145, -31.4463, 0.29 ) }
    dend_19 { pt3dadd( 206.126, -2.97552, -31.7987, 0.29 ) }
    dend_19 { pt3dadd( 206.575, -2.36396, -32.2937, 0.29 ) }
    dend_19 { pt3dadd( 207.12, -1.5468, -32.9828, 0.81 ) }
    dend_19 { pt3dadd( 207.7, -0.731247, -33.7178, 1.03 ) }
    dend_19 { pt3dadd( 208.119, -0.297312, -34.1634, 1.03 ) }
    dend_19 { pt3dadd( 209.063, 0.415734, -34.9605, 0.29 ) }
    dend_19 { pt3dadd( 209.843, 0.959375, -35.485, 0.74 ) }
    dend_19 { pt3dadd( 210.292, 1.2785, -35.7233, 1.11 ) }
    dend_19 { pt3dadd( 210.835, 1.65495, -35.9349, 1.11 ) }
    dend_19 { pt3dadd( 212.24, 2.51871, -36.3218, 0.29 ) }
    dend_19 { pt3dadd( 213.293, 3.05397, -36.5471, 0.29 ) }
    dend_19 { pt3dadd( 214.478, 3.47702, -36.7726, 0.29 ) }
    dend_19 { pt3dadd( 215.405, 3.71852, -36.9658, 0.29 ) }
    dend_19 { pt3dadd( 216.188, 3.87715, -37.1617, 0.74 ) }
    dend_19 { pt3dadd( 217.085, 4.02789, -37.4578, 0.74 ) }
    dend_19 { pt3dadd( 218.271, 4.17564, -37.9417, 0.37 ) }
    dend_19 { pt3dadd( 219.766, 4.29077, -38.6448, 0.96 ) }
    dend_19 { pt3dadd( 220.361, 4.3225, -38.9853, 0.96 ) }
    dend_19 { pt3dadd( 221.404, 4.36541, -39.6593, 0.29 ) }
    dend_19 { pt3dadd( 222.486, 4.44565, -40.4944, 0.29 ) }
    dend_19 { pt3dadd( 222.893, 4.4907, -40.8378, 0.59 ) }
    dend_19 { pt3dadd( 223.512, 4.60187, -41.4119, 0.59 ) }
    dend_19 { pt3dadd( 224.635, 4.92501, -42.5108, 0.29 ) }
    dend_19 { pt3dadd( 225.312, 5.13949, -43.1995, 0.29 ) }
    dend_19 { pt3dadd( 226.527, 5.52625, -44.5156, 1.18 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.02896, -23.0931, 10.6618, 1.03 ) }
    dend_4 { pt3dadd( 0.324602, -26.1463, 11.6702, 1.03 ) }
    dend_4 { pt3dadd( 1.32922, -28.0556, 12.2965, 1.03 ) }
    dend_4 { pt3dadd( 1.9951, -29.1791, 12.6625, 0.74 ) }
    dend_4 { pt3dadd( 2.93163, -30.6014, 13.1099, 0.74 ) }
    dend_4 { pt3dadd( 3.63173, -31.6237, 13.4121, 1.03 ) }
    dend_4 { pt3dadd( 4.22411, -32.5019, 13.6494, 1.25 ) }
    dend_4 { pt3dadd( 4.71727, -33.2127, 13.8795, 1.33 ) }
    dend_4 { pt3dadd( 4.96896, -33.6286, 13.9552, 1.62 ) }
    dend_4 { pt3dadd( 5.44129, -34.5662, 14.0727, 1.62 ) }
    dend_4 { pt3dadd( 5.83776, -35.5509, 14.1454, 1.62 ) }
    dend_4 { pt3dadd( 6.29392, -37.0149, 14.219, 1.47 ) }
    dend_4 { pt3dadd( 6.63267, -38.4552, 14.3162, 0.59 ) }
    dend_4 { pt3dadd( 6.8741, -39.8602, 14.4076, 0.59 ) }
    dend_4 { pt3dadd( 7.03662, -41.147, 14.4855, 0.88 ) }
    dend_4 { pt3dadd( 7.138, -42.0894, 14.5379, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 7.24854, -42.9222, 14.5752, 1.55 ) }
    dend_4 { pt3dadd( 7.46146, -44.2793, 14.6197, 1.55 ) }
    dend_4 { pt3dadd( 7.70465, -45.6664, 14.6501, 0.96 ) }
    dend_4 { pt3dadd( 7.93773, -46.9687, 14.6726, 0.74 ) }
    dend_4 { pt3dadd( 8.05277, -47.6891, 14.6815, 0.74 ) }
    dend_4 { pt3dadd( 8.26556, -49.0223, 14.6893, 0.74 ) }
    dend_4 { pt3dadd( 8.50008, -50.4864, 14.6822, 1.33 ) }
    dend_4 { pt3dadd( 8.83392, -52.4083, 14.6391, 1.18 ) }
    dend_4 { pt3dadd( 9.12727, -54.0301, 14.6417, 1.18 ) }
    dend_4 { pt3dadd( 9.27367, -54.9728, 14.6497, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.02896, -23.0931, 10.6618, 1.03 ) }
    dend_3 { pt3dadd( -0.780973, -24.5806, 13.8038, 1.03 ) }
    dend_3 { pt3dadd( -0.631744, -25.6343, 15.7808, 1.03 ) }
    dend_3 { pt3dadd( -0.462927, -27.5176, 19.0992, 0.81 ) }
    dend_3 { pt3dadd( -0.360132, -29.3253, 22.2139, 0.66 ) }
    dend_3 { pt3dadd( -0.335796, -29.9533, 23.2545, 0.66 ) }
    dend_3 { pt3dadd( -0.317675, -30.5769, 24.2314, 0.66 ) }
    dend_3 { pt3dadd( -0.244007, -31.4868, 25.4391, 0.52 ) }
    dend_3 { pt3dadd( -0.120523, -32.5525, 26.6104, 0.52 ) }
    dend_3 { pt3dadd( 0.0357252, -33.9557, 27.8031, 0.81 ) }
    dend_3 { pt3dadd( 0.147554, -34.9758, 28.4739, 0.66 ) }
    dend_3 { pt3dadd( 0.226615, -35.866, 29.0017, 0.96 ) }
    dend_3 { pt3dadd( 0.390023, -37.8583, 30.1181, 0.52 ) }
    dend_3 { pt3dadd( 0.550139, -39.0738, 30.7378, 1.11 ) }
    dend_3 { pt3dadd( 0.728877, -40.1727, 31.1731, 1.03 ) }
    dend_3 { pt3dadd( 0.85185, -41.012, 31.4159, 0.88 ) }
    dend_3 { pt3dadd( 0.928189, -41.7111, 31.5966, 0.88 ) }
    dend_3 { pt3dadd( 0.935606, -42.85, 31.8796, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_27 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 6.73087, 38.3529, 14.9725, 0.74 ) }
    dend_49 { pt3dadd( 7.47606, 40.255, 16.9329, 0.74 ) }
    dend_49 { pt3dadd( 7.848, 41.3745, 17.9633, 0.59 ) }
    dend_49 { pt3dadd( 8.05, 42.1338, 18.6072, 0.59 ) }
    dend_49 { pt3dadd( 8.31493, 43.4347, 19.5917, 0.59 ) }
    dend_49 { pt3dadd( 8.46356, 44.3898, 20.2258, 0.59 ) }
    dend_49 { pt3dadd( 8.58597, 45.3726, 20.7872, 0.59 ) }
    dend_49 { pt3dadd( 8.77059, 47.2096, 21.4865, 0.66 ) }
    dend_49 { pt3dadd( 8.83928, 48.0359, 21.7232, 0.66 ) }
    dend_49 { pt3dadd( 8.85572, 49.2681, 21.9914, 1.03 ) }
    dend_49 { pt3dadd( 8.81558, 50.4324, 22.162, 1.03 ) }
    dend_49 { pt3dadd( 8.72302, 51.8404, 22.2859, 0.44 ) }
    dend_49 { pt3dadd( 8.6645, 52.4813, 22.2598, 0.59 ) }
    dend_49 { pt3dadd( 8.53961, 53.4795, 22.0124, 0.59 ) }
    dend_49 { pt3dadd( 8.42154, 54.3083, 21.6966, 1.11 ) }
    dend_49 { pt3dadd( 8.37049, 54.6834, 21.5081, 1.33 ) }
    dend_49 { pt3dadd( 8.3115, 55.2495, 21.1914, 1.33 ) }
    dend_49 { pt3dadd( 8.23945, 56.4518, 20.4774, 0.81 ) }
    dend_49 { pt3dadd( 8.30381, 57.4246, 19.9415, 0.44 ) }
    dend_49 { pt3dadd( 8.55343, 58.2071, 19.5253, 0.44 ) }
    dend_49 { pt3dadd( 9.00342, 58.9812, 19.0384, 0.74 ) }
    dend_49 { pt3dadd( 9.54167, 59.7158, 18.5564, 0.66 ) }
    dend_49 { pt3dadd( 9.83475, 60.0716, 18.321, 0.66 ) }
    dend_49 { pt3dadd( 10.4415, 60.8954, 17.8448, 0.52 ) }
    dend_49 { pt3dadd( 11.047, 61.9046, 17.2776, 0.37 ) }
    dend_49 { pt3dadd( 11.6396, 63.2258, 16.5347, 0.37 ) }
    dend_49 { pt3dadd( 11.8373, 63.8132, 16.264, 0.37 ) }
    dend_49 { pt3dadd( 12.1099, 64.8104, 15.9092, 0.37 ) }
    dend_49 { pt3dadd( 12.5427, 66.4419, 15.4897, 0.37 ) }
    dend_49 { pt3dadd( 12.8257, 67.4462, 15.4231, 0.88 ) }
    dend_49 { pt3dadd( 13.0531, 68.0954, 15.5457, 0.88 ) }
    dend_49 { pt3dadd( 13.5993, 69.4135, 16.0696, 0.74 ) }
    dend_49 { pt3dadd( 13.9846, 70.2541, 16.5263, 0.59 ) }
    dend_49 { pt3dadd( 14.456, 71.212, 17.2309, 0.59 ) }
    dend_49 { pt3dadd( 15.2719, 72.755, 18.6239, 0.81 ) }
    dend_49 { pt3dadd( 15.8599, 73.8941, 19.7709, 0.59 ) }
    dend_49 { pt3dadd( 16.1029, 74.4405, 20.3445, 0.59 ) }
    dend_49 { pt3dadd( 16.2779, 74.9646, 20.8919, 1.11 ) }
    dend_49 { pt3dadd( 16.4514, 75.8496, 21.7795, 0.88 ) }
    dend_49 { pt3dadd( 16.4911, 76.635, 22.4789, 0.88 ) }
    dend_49 { pt3dadd( 16.4679, 77.5499, 23.0637, 0.74 ) }
    dend_49 { pt3dadd( 16.4402, 78.4918, 23.5217, 0.59 ) }
    dend_49 { pt3dadd( 16.4547, 79.2221, 23.812, 0.44 ) }
    dend_49 { pt3dadd( 16.5083, 79.9628, 24.0265, 0.81 ) }
    dend_49 { pt3dadd( 16.5956, 80.6881, 24.1514, 1.03 ) }
    dend_49 { pt3dadd( 16.7549, 81.9562, 24.2895, 0.52 ) }
    dend_49 { pt3dadd( 16.8382, 82.6526, 24.3322, 0.52 ) }
    dend_49 { pt3dadd( 16.9169, 83.3498, 24.3659, 0.96 ) }
    dend_49 { pt3dadd( 16.9884, 84.1505, 24.4094, 0.96 ) }
    dend_49 { pt3dadd( 17.0253, 84.9757, 24.4566, 0.66 ) }
    dend_49 { pt3dadd( 17.0216, 86.1495, 24.5233, 0.37 ) }
    dend_49 { pt3dadd( 16.9891, 86.8877, 24.5621, 0.37 ) }
    dend_49 { pt3dadd( 16.9751, 87.3854, 24.5837, 0.37 ) }
    dend_49 { pt3dadd( 16.9629, 88.2546, 24.6201, 0.37 ) }
    dend_49 { pt3dadd( 16.9734, 88.9527, 24.6485, 0.66 ) }
    dend_49 { pt3dadd( 17.0328, 89.6954, 24.6755, 0.66 ) }
    dend_49 { pt3dadd( 17.1659, 90.4002, 24.7048, 0.81 ) }
    dend_49 { pt3dadd( 17.3496, 91.1564, 24.7618, 0.52 ) }
    dend_49 { pt3dadd( 17.5241, 91.9118, 24.8376, 0.37 ) }
    dend_49 { pt3dadd( 17.6239, 92.5463, 24.9111, 0.37 ) }
    dend_49 { pt3dadd( 17.6645, 93.0717, 24.974, 0.66 ) }
    dend_49 { pt3dadd( 17.6772, 93.8526, 25.0628, 0.66 ) }
    dend_49 { pt3dadd( 17.6988, 94.7604, 25.1536, 0.37 ) }
    dend_49 { pt3dadd( 17.7438, 95.3241, 25.1988, 0.37 ) }
    dend_49 { pt3dadd( 17.9437, 96.4121, 25.2621, 0.96 ) }
    dend_49 { pt3dadd( 18.0782, 96.9549, 25.29, 1.33 ) }
    dend_49 { pt3dadd( 18.271, 97.6812, 25.3118, 1.33 ) }
    dend_49 { pt3dadd( 18.5588, 98.7215, 25.3593, 1.03 ) }
    dend_49 { pt3dadd( 18.8497, 99.6686, 25.4157, 0.74 ) }
    dend_49 { pt3dadd( 19.1487, 100.561, 25.4958, 0.44 ) }
    dend_49 { pt3dadd( 19.3753, 101.231, 25.5787, 0.44 ) }
    dend_49 { pt3dadd( 19.5851, 101.877, 25.6543, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 19.9325, 103.055, 25.7756, 0.66 ) }
    dend_49 { pt3dadd( 20.0752, 103.615, 25.8434, 0.96 ) }
    dend_49 { pt3dadd( 20.1339, 103.915, 25.8791, 0.96 ) }
    dend_49 { pt3dadd( 20.3261, 105.034, 25.954, 0.52 ) }
    dend_49 { pt3dadd( 20.4863, 105.973, 25.9719, 0.52 ) }
    dend_49 { pt3dadd( 20.6824, 107.045, 25.9506, 0.52 ) }
    dend_49 { pt3dadd( 20.8721, 107.923, 25.8856, 0.52 ) }
    dend_49 { pt3dadd( 21.2055, 109.399, 25.831, 0.74 ) }
    dend_49 { pt3dadd( 21.4018, 110.344, 25.8563, 0.52 ) }
    dend_49 { pt3dadd( 21.5328, 111.029, 25.9191, 0.52 ) }
    dend_49 { pt3dadd( 21.6731, 111.791, 26.0339, 0.52 ) }
    dend_49 { pt3dadd( 21.8653, 112.724, 26.1459, 0.81 ) }
    dend_49 { pt3dadd( 22.1751, 114.048, 26.2333, 0.81 ) }
    dend_49 { pt3dadd( 22.3957, 114.902, 26.2736, 0.59 ) }
    dend_49 { pt3dadd( 22.5683, 115.609, 26.268, 0.37 ) }
    dend_49 { pt3dadd( 22.777, 116.48, 26.2465, 0.37 ) }
    dend_49 { pt3dadd( 23.0822, 117.832, 26.1889, 0.37 ) }
    dend_49 { pt3dadd( 23.2328, 118.509, 26.144, 0.52 ) }
    dend_49 { pt3dadd( 23.4515, 119.284, 26.0699, 0.52 ) }
    dend_49 { pt3dadd( 23.8686, 120.567, 25.9754, 0.52 ) }
    dend_49 { pt3dadd( 24.3151, 121.929, 25.9514, 0.74 ) }
    dend_49 { pt3dadd( 24.6019, 122.802, 25.9908, 0.96 ) }
    dend_49 { pt3dadd( 24.9022, 123.724, 26.092, 0.37 ) }
    dend_49 { pt3dadd( 25.2356, 124.751, 26.2237, 0.29 ) }
    dend_49 { pt3dadd( 25.4574, 125.395, 26.3139, 0.29 ) }
    dend_49 { pt3dadd( 25.7844, 126.331, 26.4429, 0.81 ) }
    dend_49 { pt3dadd( 25.9201, 126.738, 26.4546, 0.81 ) }
    dend_49 { pt3dadd( 26.0458, 127.188, 26.4634, 0.96 ) }
    dend_49 { pt3dadd( 26.1074, 127.554, 26.4712, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.73087, 38.3529, 14.9725, 0.66 ) }
    dend_28 { pt3dadd( 6.37487, 39.9561, 12.619, 0.66 ) }
    dend_28 { pt3dadd( 6.12262, 40.882, 11.1556, 0.66 ) }
    dend_28 { pt3dadd( 6.03072, 41.3333, 10.42, 0.66 ) }
    dend_28 { pt3dadd( 5.93261, 42.0263, 9.26799, 0.52 ) }
    dend_28 { pt3dadd( 5.79368, 43.066, 7.54396, 0.81 ) }
    dend_28 { pt3dadd( 5.75156, 43.5682, 6.75047, 0.81 ) }
    dend_28 { pt3dadd( 5.77513, 44.3146, 5.62557, 0.59 ) }
    dend_28 { pt3dadd( 5.89285, 45.1042, 4.34755, 0.59 ) }
    dend_28 { pt3dadd( 6.04116, 45.7513, 3.2779, 0.44 ) }
    dend_28 { pt3dadd( 6.14803, 46.181, 2.62802, 0.44 ) }
    dend_28 { pt3dadd( 6.38156, 47.0109, 1.51363, 0.96 ) }
    dend_28 { pt3dadd( 6.54231, 47.4824, 0.861817, 1.18 ) }
    dend_28 { pt3dadd( 6.98937, 48.6442, -0.810626, 0.88 ) }
    dend_28 { pt3dadd( 7.37329, 49.5609, -2.17644, 0.37 ) }
    dend_28 { pt3dadd( 7.68134, 50.1516, -3.09588, 1.03 ) }
    dend_28 { pt3dadd( 8.06526, 50.7334, -4.04516, 1.03 ) }
    dend_28 { pt3dadd( 8.80856, 51.6928, -5.78654, 0.52 ) }
    dend_28 { pt3dadd( 9.1281, 52.0736, -6.47526, 0.52 ) }
    dend_28 { pt3dadd( 9.38216, 52.3635, -6.98984, 0.81 ) }
    dend_28 { pt3dadd( 9.68704, 52.7285, -7.64811, 0.81 ) }
    dend_28 { pt3dadd( 9.96388, 53.1268, -8.39526, 0.74 ) }
    dend_28 { pt3dadd( 10.3826, 54.1152, -10.1093, 1.03 ) }
    dend_28 { pt3dadd( 10.4501, 54.7177, -11.0791, 1.03 ) }
    dend_28 { pt3dadd( 10.2927, 55.5336, -12.4378, 0.59 ) }
    dend_28 { pt3dadd( 10.0879, 56.0592, -13.3255, 0.81 ) }
    dend_28 { pt3dadd( 9.76445, 56.5912, -14.3278, 0.81 ) }
    dend_28 { pt3dadd( 9.617, 56.7772, -14.6991, 0.66 ) }
    dend_28 { pt3dadd( 9.33196, 57.0895, -15.3321, 0.66 ) }
    dend_28 { pt3dadd( 8.6019, 57.8154, -16.942, 0.52 ) }
    dend_28 { pt3dadd( 8.12527, 58.2771, -18.0094, 0.37 ) }
    dend_28 { pt3dadd( 7.35366, 59.1195, -20.0314, 0.29 ) }
    dend_28 { pt3dadd( 7.19024, 59.3058, -20.4971, 0.29 ) }
    dend_28 { pt3dadd( 6.92461, 59.5989, -21.253, 0.29 ) }
    dend_28 { pt3dadd( 6.63662, 59.9236, -22.052, 0.29 ) }
    dend_28 { pt3dadd( 6.13715, 60.4704, -23.2061, 0.81 ) }
    dend_28 { pt3dadd( 5.6933, 60.9593, -24.1079, 0.81 ) }
    dend_28 { pt3dadd( 5.00111, 61.8495, -25.4039, 0.59 ) }
    dend_28 { pt3dadd( 4.85177, 62.0584, -25.6773, 0.59 ) }
    dend_28 { pt3dadd( 4.45246, 62.6577, -26.3306, 0.29 ) }
    dend_28 { pt3dadd( 4.10918, 63.2536, -27.2241, 0.52 ) }
    dend_28 { pt3dadd( 4.05792, 63.3507, -27.4168, 0.81 ) }
    dend_28 { pt3dadd( 3.90021, 63.637, -28.1125, 0.81 ) }
    dend_28 { pt3dadd( 3.71977, 63.9453, -29.0217, 0.74 ) }
    dend_28 { pt3dadd( 3.62631, 64.065, -29.4728, 0.88 ) }
    dend_28 { pt3dadd( 2.35902, 65.2094, -35.1905, 0.88 ) }
    dend_28 { pt3dadd( 1.97361, 65.4421, -36.7688, 0.66 ) }
    dend_28 { pt3dadd( 1.6946, 65.5658, -37.7637, 0.88 ) }
    dend_28 { pt3dadd( 1.24158, 65.7176, -39.2096, 0.96 ) }
    dend_28 { pt3dadd( 0.859637, 65.8405, -40.2526, 0.52 ) }
    dend_28 { pt3dadd( 0.537635, 65.9509, -40.9576, 0.74 ) }
    dend_28 { pt3dadd( -0.346643, 66.2945, -42.0463, 0.44 ) }
    dend_28 { pt3dadd( -0.866277, 66.5542, -42.5878, 0.29 ) }
    dend_28 { pt3dadd( -1.36586, 66.8464, -43.0433, 0.29 ) }
    dend_28 { pt3dadd( -2.25067, 67.3642, -43.7483, 1.18 ) }
    dend_28 { pt3dadd( -2.64179, 67.5753, -44.0613, 1.92 ) }
    dend_28 { pt3dadd( -3.37791, 67.8591, -44.727, 1.47 ) }
    dend_28 { pt3dadd( -4.46077, 68.1266, -45.7725, 0.37 ) }
    dend_28 { pt3dadd( -4.94255, 68.1764, -46.2486, 0.29 ) }
    dend_28 { pt3dadd( -5.88196, 68.1247, -47.1271, 0.29 ) }
    dend_28 { pt3dadd( -6.9792, 67.8874, -48.1412, 0.29 ) }
    dend_28 { pt3dadd( -8.59481, 67.2463, -49.7315, 0.29 ) }
    dend_28 { pt3dadd( -9.40329, 66.7843, -50.5496, 0.29 ) }
    dend_28 { pt3dadd( -10.0256, 66.3821, -51.1933, 0.29 ) }
    dend_28 { pt3dadd( -10.8067, 65.9061, -52.0417, 0.29 ) }
    dend_28 { pt3dadd( -11.3362, 65.6443, -52.6146, 0.29 ) }
    dend_28 { pt3dadd( -12.551, 65.1929, -53.9096, 0.29 ) }
    dend_28 { pt3dadd( -13.11, 65.0093, -54.5247, 0.29 ) }
    dend_28 { pt3dadd( -13.9601, 64.8316, -55.5616, 0.29 ) }
    dend_28 { pt3dadd( -14.4167, 64.8469, -56.1392, 0.52 ) }
    dend_28 { pt3dadd( -14.8967, 65.0039, -56.72, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -15.6383, 65.3942, -57.5378, 0.52 ) }
    dend_28 { pt3dadd( -16.4755, 65.961, -58.3734, 0.66 ) }
    dend_28 { pt3dadd( -16.9078, 66.2821, -58.7925, 0.96 ) }
    dend_28 { pt3dadd( -17.3158, 66.5907, -59.1592, 1.18 ) }
    dend_28 { pt3dadd( -18.5024, 67.5815, -60.1906, 0.52 ) }
    dend_28 { pt3dadd( -19.2723, 68.3347, -60.9203, 0.29 ) }
    dend_28 { pt3dadd( -19.6587, 68.8038, -61.3503, 0.52 ) }
    dend_28 { pt3dadd( -19.8026, 69.0372, -61.5449, 0.74 ) }
    dend_28 { pt3dadd( -20.0756, 69.5495, -61.9782, 0.74 ) }
    dend_28 { pt3dadd( -20.5242, 70.4173, -62.7466, 0.44 ) }
    dend_28 { pt3dadd( -20.985, 71.3193, -63.6018, 0.44 ) }
    dend_28 { pt3dadd( -21.4721, 72.2372, -64.5326, 0.37 ) }
    dend_28 { pt3dadd( -21.8843, 72.9287, -65.2656, 0.37 ) }
    dend_28 { pt3dadd( -22.4251, 73.6798, -66.1515, 0.37 ) }
    dend_28 { pt3dadd( -23.1633, 74.6283, -67.4378, 0.37 ) }
    dend_28 { pt3dadd( -23.6622, 75.2128, -68.2794, 0.88 ) }
    dend_28 { pt3dadd( -23.803, 75.3688, -68.4945, 0.88 ) }
    dend_28 { pt3dadd( -24.3221, 75.8848, -69.1773, 0.66 ) }
    dend_28 { pt3dadd( -25.2795, 76.7285, -70.2736, 0.96 ) }
    dend_28 { pt3dadd( -26.5585, 77.6738, -71.3667, 0.81 ) }
    dend_28 { pt3dadd( -27.4647, 78.1906, -71.888, 1.11 ) }
    dend_28 { pt3dadd( -28.5429, 78.6556, -72.2574, 0.59 ) }
    dend_28 { pt3dadd( -29.9167, 79.1859, -72.5889, 0.59 ) }
    dend_28 { pt3dadd( -30.8242, 79.5352, -72.713, 0.74 ) }
    dend_28 { pt3dadd( -32.0305, 80.0001, -72.7611, 0.52 ) }
    dend_28 { pt3dadd( -32.6984, 80.2371, -72.7712, 0.52 ) }
    dend_28 { pt3dadd( -33.634, 80.5849, -72.8415, 0.52 ) }
    dend_28 { pt3dadd( -34.6029, 80.9855, -72.963, 0.52 ) }
    dend_28 { pt3dadd( -35.4063, 81.4212, -73.1577, 0.52 ) }
    dend_28 { pt3dadd( -36.5862, 82.2263, -73.5414, 1.33 ) }
    dend_28 { pt3dadd( -37.0931, 82.6585, -73.7327, 2.28 ) }
    dend_28 { pt3dadd( -37.6879, 83.2069, -73.9742, 2.5 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 32/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.27367, -54.9728, 14.6497, 0.59 ) }
    dend_16 { pt3dadd( 10.1474, -55.523, 15.6082, 0.59 ) }
    dend_16 { pt3dadd( 10.5962, -55.8535, 16.0588, 0.59 ) }
    dend_16 { pt3dadd( 12.0501, -57.1941, 17.4812, 0.44 ) }
    dend_16 { pt3dadd( 12.3065, -57.5067, 17.7585, 0.44 ) }
    dend_16 { pt3dadd( 12.6743, -58.0372, 18.1747, 0.44 ) }
    dend_16 { pt3dadd( 13.148, -58.8061, 18.7558, 0.44 ) }
    dend_16 { pt3dadd( 13.3978, -59.3346, 19.0987, 0.44 ) }
    dend_16 { pt3dadd( 13.7274, -60.1234, 19.5874, 0.44 ) }
    dend_16 { pt3dadd( 14.1487, -61.1783, 20.2097, 0.44 ) }
    dend_16 { pt3dadd( 14.3536, -61.7693, 20.6255, 0.81 ) }
    dend_16 { pt3dadd( 14.6701, -62.835, 21.5062, 0.59 ) }
    dend_16 { pt3dadd( 14.751, -63.1363, 21.7868, 0.59 ) }
    dend_16 { pt3dadd( 14.9402, -63.9753, 22.7578, 0.29 ) }
    dend_16 { pt3dadd( 14.99, -64.3511, 23.239, 0.29 ) }
    dend_16 { pt3dadd( 15.0347, -65.387, 24.5306, 0.29 ) }
    dend_16 { pt3dadd( 14.9953, -66.0374, 25.2514, 0.29 ) }
    dend_16 { pt3dadd( 14.8658, -66.7726, 25.9559, 1.03 ) }
    dend_16 { pt3dadd( 14.2889, -68.9613, 27.663, 1.11 ) }
    dend_16 { pt3dadd( 13.9727, -69.8805, 28.3033, 1.33 ) }
    dend_16 { pt3dadd( 13.5682, -70.9323, 28.9099, 0.66 ) }
    dend_16 { pt3dadd( 12.7583, -72.8514, 29.3982, 0.15 ) }
    dend_16 { pt3dadd( 12.4847, -73.4235, 29.1478, 0.15 ) }
    dend_16 { pt3dadd( 12.2239, -73.9458, 28.5654, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.27367, -54.9728, 14.6497, 1.33 ) }
    dend_5 { pt3dadd( 9.04828, -55.9653, 14.4572, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -37.6879, 83.2069, -73.9742, 0.37 ) }
    dend_30 { pt3dadd( -39.9222, 83.8366, -75.2278, 0.37 ) }
    dend_30 { pt3dadd( -40.9386, 84.0469, -75.797, 0.37 ) }
    dend_30 { pt3dadd( -42.3441, 84.1827, -76.5684, 0.37 ) }
    dend_30 { pt3dadd( -43.9252, 84.1245, -77.5676, 0.88 ) }
    dend_30 { pt3dadd( -44.6, 84.0692, -78.0264, 0.88 ) }
    dend_30 { pt3dadd( -45.7502, 83.9977, -78.8324, 0.52 ) }
    dend_30 { pt3dadd( -46.6153, 83.9547, -79.5106, 0.29 ) }
    dend_30 { pt3dadd( -47.6813, 83.9539, -80.4737, 0.29 ) }
    dend_30 { pt3dadd( -49.1532, 84.1306, -82.016, 0.37 ) }
    dend_30 { pt3dadd( -49.6261, 84.327, -82.5521, 0.37 ) }
    dend_30 { pt3dadd( -50.3251, 84.8078, -83.3941, 0.37 ) }
    dend_30 { pt3dadd( -51.0285, 85.3991, -84.1585, 0.37 ) }
    dend_30 { pt3dadd( -52.2689, 86.403, -85.4265, 0.66 ) }
    dend_30 { pt3dadd( -53.0667, 86.9662, -86.1638, 0.66 ) }
    dend_30 { pt3dadd( -54.3187, 87.653, -87.1175, 0.37 ) }
    dend_30 { pt3dadd( -55.184, 88.0022, -87.6945, 0.29 ) }
    dend_30 { pt3dadd( -56.8063, 88.4879, -88.635, 0.29 ) }
    dend_30 { pt3dadd( -58.4821, 88.9157, -89.3674, 0.29 ) }
    dend_30 { pt3dadd( -60.0419, 89.279, -89.8156, 0.29 ) }
    dend_30 { pt3dadd( -61.7288, 89.6755, -90.266, 0.29 ) }
    dend_30 { pt3dadd( -62.9124, 89.984, -90.588, 0.88 ) }
    dend_30 { pt3dadd( -63.5286, 90.1733, -90.7755, 1.03 ) }
    dend_30 { pt3dadd( -65.284, 90.903, -91.4733, 0.29 ) }
    dend_30 { pt3dadd( -66.6558, 91.6047, -92.1033, 0.29 ) }
    dend_30 { pt3dadd( -68.4956, 92.5135, -93.1033, 0.96 ) }
    dend_30 { pt3dadd( -69.3508, 92.8931, -93.6582, 1.25 ) }
    dend_30 { pt3dadd( -69.6769, 93.0128, -93.9232, 1.47 ) }
    dend_30 { pt3dadd( -71.1529, 93.4304, -95.187, 0.96 ) }
    dend_30 { pt3dadd( -72.3917, 93.6902, -96.6228, 0.52 ) }
    dend_30 { pt3dadd( -73.8251, 94.0254, -98.5586, 0.44 ) }
    dend_30 { pt3dadd( -74.915, 94.3051, -100.128, 0.44 ) }
    dend_30 { pt3dadd( -76.684, 94.8059, -102.84, 1.11 ) }
    dend_30 { pt3dadd( -77.3475, 95.0371, -103.902, 1.11 ) }
    dend_30 { pt3dadd( -80.8259, 96.53, -109.72, 0.29 ) }
    dend_30 { pt3dadd( -81.643, 96.9338, -111.218, 0.29 ) }
    dend_30 { pt3dadd( -82.1877, 97.213, -112.301, 0.96 ) }
    dend_30 { pt3dadd( -82.7254, 97.4699, -113.34, 1.18 ) }
    dend_30 { pt3dadd( -83.6574, 97.9311, -114.928, 0.88 ) }
    dend_30 { pt3dadd( -84.7538, 98.4403, -116.555, 0.52 ) }
    dend_30 { pt3dadd( -85.529, 98.6833, -117.44, 0.52 ) }
    dend_30 { pt3dadd( -86.4578, 98.8214, -118.513, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -88.3745, 98.9374, -120.884, 0.37 ) }
    dend_30 { pt3dadd( -89.4237, 98.9738, -122.195, 0.37 ) }
    dend_30 { pt3dadd( -90.5359, 99.017, -123.586, 0.37 ) }
    dend_30 { pt3dadd( -92.077, 99.1184, -125.522, 0.37 ) }
    dend_30 { pt3dadd( -93.2073, 99.2551, -126.916, 0.37 ) }
    dend_30 { pt3dadd( -94.4608, 99.414, -128.42, 0.37 ) }
    dend_30 { pt3dadd( -95.3655, 99.3714, -129.542, 1.11 ) }
    dend_30 { pt3dadd( -95.6505, 99.3166, -129.94, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -37.6879, 83.2069, -73.9742, 0.29 ) }
    dend_29 { pt3dadd( -38.4381, 86.6237, -76.445, 0.29 ) }
    dend_29 { pt3dadd( -38.7352, 87.7409, -77.0773, 0.29 ) }
    dend_29 { pt3dadd( -38.9233, 88.4376, -77.4097, 0.29 ) }
    dend_29 { pt3dadd( -39.4194, 90.0201, -78.1443, 0.29 ) }
    dend_29 { pt3dadd( -39.5968, 90.5255, -78.3627, 0.52 ) }
    dend_29 { pt3dadd( -39.9283, 91.4084, -78.704, 0.37 ) }
    dend_29 { pt3dadd( -40.3022, 92.161, -78.8322, 0.66 ) }
    dend_29 { pt3dadd( -40.5462, 92.5953, -78.8813, 0.81 ) }
    dend_29 { pt3dadd( -41.3793, 94.0337, -78.9486, 0.29 ) }
    dend_29 { pt3dadd( -42.0338, 95.1062, -78.9482, 0.52 ) }
    dend_29 { pt3dadd( -42.4654, 95.7603, -78.9228, 0.74 ) }
    dend_29 { pt3dadd( -43.5078, 97.1733, -78.7916, 0.29 ) }
    dend_29 { pt3dadd( -44.4566, 98.353, -78.5984, 0.29 ) }
    dend_29 { pt3dadd( -45.0237, 98.9825, -78.4252, 1.25 ) }
    dend_29 { pt3dadd( -45.374, 99.3575, -78.2732, 1.84 ) }
    dend_29 { pt3dadd( -45.8152, 99.8044, -78.0553, 1.84 ) }
    dend_29 { pt3dadd( -47.419, 101.242, -77.2513, 0.29 ) }
    dend_29 { pt3dadd( -47.9632, 101.666, -76.9614, 0.29 ) }
    dend_29 { pt3dadd( -49.7172, 102.79, -75.9278, 0.29 ) }
    dend_29 { pt3dadd( -50.4809, 103.232, -75.4007, 0.52 ) }
    dend_29 { pt3dadd( -50.9231, 103.479, -75.0558, 0.29 ) }
    dend_29 { pt3dadd( -51.9868, 104.09, -74.1005, 0.29 ) }
    dend_29 { pt3dadd( -52.5071, 104.412, -73.5628, 0.29 ) }
    dend_29 { pt3dadd( -53.8698, 105.325, -72.1376, 0.88 ) }
    dend_29 { pt3dadd( -55.125, 106.128, -70.8675, 0.29 ) }
    dend_29 { pt3dadd( -55.6563, 106.451, -70.3794, 0.29 ) }
    dend_29 { pt3dadd( -56.6646, 107.101, -69.5079, 0.81 ) }
    dend_29 { pt3dadd( -57.1694, 107.483, -69.071, 0.81 ) }
    dend_29 { pt3dadd( -57.9319, 108.14, -68.3976, 0.37 ) }
    dend_29 { pt3dadd( -58.8679, 109.056, -67.5764, 0.29 ) }
    dend_29 { pt3dadd( -59.4434, 109.636, -67.0592, 0.29 ) }
    dend_29 { pt3dadd( -60.0629, 110.297, -66.475, 0.29 ) }
    dend_29 { pt3dadd( -60.5399, 110.851, -65.9892, 0.29 ) }
    dend_29 { pt3dadd( -61.5846, 112.224, -64.7821, 0.88 ) }
    dend_29 { pt3dadd( -61.8247, 112.58, -64.4568, 1.25 ) }
    dend_29 { pt3dadd( -62.2402, 113.21, -63.8935, 1.25 ) }
    dend_29 { pt3dadd( -62.8307, 114.077, -63.2325, 0.29 ) }
    dend_29 { pt3dadd( -63.3711, 114.798, -62.7971, 0.22 ) }
    dend_29 { pt3dadd( -64.0504, 115.605, -62.5196, 0.88 ) }
    dend_29 { pt3dadd( -64.9871, 116.686, -62.5124, 0.88 ) }
    dend_29 { pt3dadd( -65.7264, 117.523, -62.5504, 0.59 ) }
    dend_29 { pt3dadd( -67.9878, 120.009, -62.7639, 0.59 ) }
    dend_29 { pt3dadd( -68.3762, 120.434, -62.8192, 0.59 ) }
    dend_29 { pt3dadd( -69.2548, 121.375, -62.9634, 0.29 ) }
    dend_29 { pt3dadd( -70.0453, 122.217, -63.068, 0.37 ) }
    dend_29 { pt3dadd( -71.2967, 123.512, -63.1257, 0.37 ) }
    dend_29 { pt3dadd( -72.0535, 124.273, -63.0359, 0.37 ) }
    dend_29 { pt3dadd( -72.3854, 124.605, -62.9532, 0.44 ) }
    dend_29 { pt3dadd( -72.6796, 124.883, -62.8968, 0.44 ) }
    dend_29 { pt3dadd( -73.6402, 125.729, -62.7849, 0.22 ) }
    dend_29 { pt3dadd( -74.3607, 126.342, -62.7666, 0.37 ) }
    dend_29 { pt3dadd( -75.1855, 126.996, -62.8236, 0.29 ) }
    dend_29 { pt3dadd( -76.1343, 127.7, -62.9022, 0.29 ) }
    dend_29 { pt3dadd( -77.2253, 128.457, -62.9904, 0.29 ) }
    dend_29 { pt3dadd( -78.3385, 129.213, -63.0798, 0.29 ) }
    dend_29 { pt3dadd( -79.0517, 129.731, -63.1388, 0.29 ) }
    dend_29 { pt3dadd( -79.8798, 130.425, -63.2063, 0.29 ) }
    dend_29 { pt3dadd( -80.6684, 131.225, -63.2807, 0.52 ) }
    dend_29 { pt3dadd( -80.9742, 131.643, -63.317, 0.74 ) }
    dend_29 { pt3dadd( -81.4125, 132.509, -63.316, 0.52 ) }
    dend_29 { pt3dadd( -81.941, 133.805, -63.2176, 0.29 ) }
    dend_29 { pt3dadd( -82.2286, 134.543, -63.1324, 0.29 ) }
    dend_29 { pt3dadd( -82.4757, 135.15, -63.0628, 0.37 ) }
    dend_29 { pt3dadd( -82.737, 135.685, -63.0006, 0.37 ) }
    dend_29 { pt3dadd( -83.6522, 137.153, -62.8304, 0.59 ) }
    dend_29 { pt3dadd( -84.4003, 138.119, -62.7249, 0.29 ) }
    dend_29 { pt3dadd( -85.8599, 139.729, -62.5758, 0.29 ) }
    dend_29 { pt3dadd( -87.5726, 141.44, -62.4691, 0.29 ) }
    dend_29 { pt3dadd( -88.3611, 142.203, -62.4317, 0.29 ) }
    dend_29 { pt3dadd( -89.2774, 143.069, -62.4253, 0.29 ) }
    dend_29 { pt3dadd( -90.0392, 143.768, -62.4813, 0.59 ) }
    dend_29 { pt3dadd( -90.7596, 144.366, -62.5331, 0.59 ) }
    dend_29 { pt3dadd( -92.1042, 145.232, -62.6153, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.04828, -55.9653, 14.4572, 0.74 ) }
    dend_7 { pt3dadd( 9.58486, -57.6792, 14.4399, 0.74 ) }
    dend_7 { pt3dadd( 9.91336, -58.626, 14.4717, 0.74 ) }
    dend_7 { pt3dadd( 10.283, -59.7321, 14.5651, 0.96 ) }
    dend_7 { pt3dadd( 10.6251, -60.757, 14.7627, 0.74 ) }
    dend_7 { pt3dadd( 11.0261, -61.947, 15.0532, 0.59 ) }
    dend_7 { pt3dadd( 11.3303, -62.8498, 15.2736, 0.59 ) }
    dend_7 { pt3dadd( 11.7895, -64.1264, 15.6803, 0.59 ) }
    dend_7 { pt3dadd( 12.358, -65.6599, 16.2493, 0.52 ) }
    dend_7 { pt3dadd( 13.116, -67.641, 17.0848, 0.52 ) }
    dend_7 { pt3dadd( 13.3071, -68.1811, 17.3377, 1.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 93/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 9.04828, -55.9653, 14.4572, 0.59 ) }
    dend_6 { pt3dadd( 7.94151, -57.0741, 14.9877, 0.59 ) }
    dend_6 { pt3dadd( 7.21527, -57.7476, 15.5251, 0.88 ) }
    dend_6 { pt3dadd( 6.41196, -58.4819, 16.2677, 0.88 ) }
    dend_6 { pt3dadd( 5.4904, -59.3183, 17.1738, 0.59 ) }
    dend_6 { pt3dadd( 4.22518, -60.3748, 18.3986, 0.59 ) }
    dend_6 { pt3dadd( 3.68446, -60.8472, 18.9693, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( 2.76995, -61.6861, 20.1052, 1.4 ) }
    dend_6 { pt3dadd( 1.98113, -62.4199, 21.1282, 1.03 ) }
    dend_6 { pt3dadd( 1.43695, -62.9049, 21.8153, 1.55 ) }
    dend_6 { pt3dadd( 0.782695, -63.4715, 22.581, 1.55 ) }
    dend_6 { pt3dadd( -0.339289, -64.4527, 23.6816, 1.03 ) }
    dend_6 { pt3dadd( -0.996037, -65.0539, 24.2685, 0.81 ) }
    dend_6 { pt3dadd( -1.88587, -65.8942, 25.0193, 0.81 ) }
    dend_6 { pt3dadd( -2.64971, -66.6118, 25.587, 0.37 ) }
    dend_6 { pt3dadd( -3.24461, -67.1423, 25.9455, 0.37 ) }
    dend_6 { pt3dadd( -3.3958, -67.2695, 26.0207, 0.96 ) }
    dend_6 { pt3dadd( -3.83623, -67.6189, 26.2015, 1.4 ) }
    dend_6 { pt3dadd( -5.74463, -69.251, 26.9575, 0.59 ) }
    dend_6 { pt3dadd( -7.28118, -70.6121, 27.558, 0.52 ) }
    dend_6 { pt3dadd( -8.47908, -71.6557, 28.0202, 0.52 ) }
    dend_6 { pt3dadd( -9.87595, -72.7745, 28.548, 0.37 ) }
    dend_6 { pt3dadd( -11.0531, -73.6196, 28.9365, 0.29 ) }
    dend_6 { pt3dadd( -12.4821, -74.5258, 29.2813, 1.25 ) }
    dend_6 { pt3dadd( -12.8703, -74.7461, 29.3383, 1.4 ) }
    dend_6 { pt3dadd( -14.1822, -75.4699, 29.5371, 0.52 ) }
    dend_6 { pt3dadd( -15.1762, -75.9845, 29.6668, 0.81 ) }
    dend_6 { pt3dadd( -16.4747, -76.5467, 29.7702, 1.03 ) }
    dend_6 { pt3dadd( -18.2622, -77.1095, 29.9089, 0.52 ) }
    dend_6 { pt3dadd( -19.3657, -77.3897, 30.0165, 0.52 ) }
    dend_6 { pt3dadd( -20.2272, -77.6466, 30.1468, 0.37 ) }
    dend_6 { pt3dadd( -21.4187, -78.182, 30.5053, 0.29 ) }
    dend_6 { pt3dadd( -21.769, -78.4024, 30.682, 0.74 ) }
    dend_6 { pt3dadd( -22.4009, -78.8603, 31.147, 1.03 ) }
    dend_6 { pt3dadd( -22.7769, -79.1235, 31.4754, 0.81 ) }
    dend_6 { pt3dadd( -23.6174, -79.6611, 32.1898, 0.59 ) }
    dend_6 { pt3dadd( -24.9058, -80.4561, 33.2489, 0.37 ) }
    dend_6 { pt3dadd( -25.5309, -80.8297, 33.6707, 0.29 ) }
    dend_6 { pt3dadd( -26.0824, -81.0822, 33.9733, 0.29 ) }
    dend_6 { pt3dadd( -26.6209, -81.2668, 34.1986, 0.96 ) }
    dend_6 { pt3dadd( -27.2354, -81.4171, 34.3468, 0.96 ) }
    dend_6 { pt3dadd( -28.0408, -81.5699, 34.4477, 0.81 ) }
    dend_6 { pt3dadd( -29.5604, -81.9069, 34.5955, 0.44 ) }
    dend_6 { pt3dadd( -30.3913, -82.211, 34.7108, 0.29 ) }
    dend_6 { pt3dadd( -31.4201, -82.78, 34.916, 0.29 ) }
    dend_6 { pt3dadd( -32.4968, -83.5757, 35.2116, 1.4 ) }
    dend_6 { pt3dadd( -33.1015, -84.1151, 35.4226, 1.4 ) }
    dend_6 { pt3dadd( -34.1256, -85.1669, 35.9066, 0.44 ) }
    dend_6 { pt3dadd( -34.659, -85.7777, 36.2325, 0.29 ) }
    dend_6 { pt3dadd( -34.9902, -86.1795, 36.469, 0.88 ) }
    dend_6 { pt3dadd( -35.631, -86.9487, 36.9531, 0.96 ) }
    dend_6 { pt3dadd( -36.1478, -87.5439, 37.3509, 0.59 ) }
    dend_6 { pt3dadd( -37.0731, -88.5845, 38.0274, 0.44 ) }
    dend_6 { pt3dadd( -37.9858, -89.6122, 38.685, 0.37 ) }
    dend_6 { pt3dadd( -38.9013, -90.6039, 39.3354, 0.22 ) }
    dend_6 { pt3dadd( -39.7223, -91.4377, 39.895, 0.59 ) }
    dend_6 { pt3dadd( -40.518, -92.1849, 40.406, 0.29 ) }
    dend_6 { pt3dadd( -40.7672, -92.397, 40.5517, 0.74 ) }
    dend_6 { pt3dadd( -41.2862, -92.7717, 40.8097, 0.96 ) }
    dend_6 { pt3dadd( -41.8753, -93.1094, 41.072, 0.59 ) }
    dend_6 { pt3dadd( -42.8941, -93.5702, 41.4849, 0.44 ) }
    dend_6 { pt3dadd( -43.5902, -93.8623, 41.7748, 0.74 ) }
    dend_6 { pt3dadd( -44.1882, -94.1272, 42.0225, 0.96 ) }
    dend_6 { pt3dadd( -45.4414, -94.7473, 42.5457, 0.37 ) }
    dend_6 { pt3dadd( -46.3723, -95.3067, 42.9405, 0.29 ) }
    dend_6 { pt3dadd( -46.9802, -95.7628, 43.1648, 0.29 ) }
    dend_6 { pt3dadd( -47.6788, -96.3842, 43.3765, 0.52 ) }
    dend_6 { pt3dadd( -48.1139, -96.8021, 43.4807, 0.52 ) }
    dend_6 { pt3dadd( -48.4958, -97.1613, 43.5963, 0.52 ) }
    dend_6 { pt3dadd( -49.3868, -97.881, 43.9282, 0.52 ) }
    dend_6 { pt3dadd( -50.452, -98.5842, 44.3883, 0.52 ) }
    dend_6 { pt3dadd( -50.9058, -98.8023, 44.6013, 0.88 ) }
    dend_6 { pt3dadd( -51.8388, -99.1214, 45.0635, 0.88 ) }
    dend_6 { pt3dadd( -53.6204, -99.5491, 45.8797, 0.37 ) }
    dend_6 { pt3dadd( -54.9068, -99.8072, 46.3811, 0.29 ) }
    dend_6 { pt3dadd( -55.5701, -99.9472, 46.6077, 0.96 ) }
    dend_6 { pt3dadd( -56.6841, -100.265, 46.9357, 1.03 ) }
    dend_6 { pt3dadd( -57.9943, -100.781, 47.2169, 0.52 ) }
    dend_6 { pt3dadd( -59.1887, -101.408, 47.2997, 0.52 ) }
    dend_6 { pt3dadd( -60.4236, -102.219, 47.218, 0.52 ) }
    dend_6 { pt3dadd( -61.6279, -103.183, 47.0356, 0.52 ) }
    dend_6 { pt3dadd( -62.5818, -104.054, 46.842, 0.52 ) }
    dend_6 { pt3dadd( -63.8442, -105.351, 46.5387, 0.44 ) }
    dend_6 { pt3dadd( -65.1215, -106.795, 46.154, 0.74 ) }
    dend_6 { pt3dadd( -65.8784, -107.744, 45.8878, 0.81 ) }
    dend_6 { pt3dadd( -66.6846, -108.804, 45.5516, 0.52 ) }
    dend_6 { pt3dadd( -67.1427, -109.402, 45.3322, 0.88 ) }
    dend_6 { pt3dadd( -67.4784, -109.836, 45.1715, 0.88 ) }
    dend_6 { pt3dadd( -68.6198, -111.314, 44.6582, 0.44 ) }
    dend_6 { pt3dadd( -69.6429, -112.507, 44.271, 0.37 ) }
    dend_6 { pt3dadd( -70.1131, -113.026, 44.093, 0.37 ) }
    dend_6 { pt3dadd( -70.9859, -113.962, 43.7655, 0.37 ) }
    dend_6 { pt3dadd( -71.6938, -114.707, 43.5263, 0.59 ) }
    dend_6 { pt3dadd( -72.3389, -115.365, 43.3592, 0.59 ) }
    dend_6 { pt3dadd( -74.0715, -116.982, 43.1549, 0.29 ) }
    dend_6 { pt3dadd( -74.8182, -117.633, 43.1297, 0.29 ) }
    dend_6 { pt3dadd( -75.4811, -118.211, 43.1171, 0.59 ) }
    dend_6 { pt3dadd( -76.4591, -119.112, 43.0788, 0.59 ) }
    dend_6 { pt3dadd( -77.1113, -119.735, 43.0514, 0.37 ) }
    dend_6 { pt3dadd( -78.0521, -120.652, 43.0599, 0.37 ) }
    dend_6 { pt3dadd( -78.6481, -121.219, 43.1341, 0.81 ) }
    dend_6 { pt3dadd( -79.1257, -121.636, 43.196, 0.81 ) }
    dend_6 { pt3dadd( -79.7865, -122.159, 43.2603, 0.81 ) }
    dend_6 { pt3dadd( -80.7413, -122.935, 43.2204, 0.37 ) }
    dend_6 { pt3dadd( -81.4593, -123.568, 43.1186, 0.37 ) }
    dend_6 { pt3dadd( -82.3592, -124.38, 42.9536, 0.66 ) }
    dend_6 { pt3dadd( -82.8549, -124.8, 42.8694, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( -83.8325, -125.543, 42.7284, 0.96 ) }
    dend_6 { pt3dadd( -85.409, -126.564, 42.4893, 0.29 ) }
    dend_6 { pt3dadd( -86.1769, -126.979, 42.3034, 0.29 ) }
    dend_6 { pt3dadd( -87.2154, -127.532, 41.977, 0.44 ) }
    dend_6 { pt3dadd( -87.6543, -127.788, 41.8327, 0.81 ) }
    dend_6 { pt3dadd( -88.3403, -128.236, 41.5664, 0.81 ) }
    dend_6 { pt3dadd( -89.0059, -128.7, 41.2719, 0.81 ) }
    dend_6 { pt3dadd( -90.7868, -129.905, 40.498, 0.52 ) }
    dend_6 { pt3dadd( -91.6623, -130.509, 40.0957, 0.59 ) }
    dend_6 { pt3dadd( -92.7205, -131.302, 39.573, 0.59 ) }
    dend_6 { pt3dadd( -94.431, -132.652, 38.788, 0.29 ) }
    dend_6 { pt3dadd( -95.5202, -133.55, 38.3279, 0.96 ) }
    dend_6 { pt3dadd( -96.1621, -134.083, 38.0977, 1.25 ) }
    dend_6 { pt3dadd( -96.5617, -134.393, 37.9914, 1.25 ) }
    dend_6 { pt3dadd( -98.0319, -135.368, 37.7344, 0.37 ) }
    dend_6 { pt3dadd( -99.0447, -135.969, 37.6428, 0.37 ) }
    dend_6 { pt3dadd( -99.8866, -136.437, 37.6764, 1.03 ) }
    dend_6 { pt3dadd( -100.667, -136.849, 37.7585, 1.25 ) }
    dend_6 { pt3dadd( -101.473, -137.239, 37.8718, 1.25 ) }
    dend_6 { pt3dadd( -102.989, -137.87, 38.2345, 0.29 ) }
    dend_6 { pt3dadd( -103.757, -138.123, 38.5117, 0.44 ) }
    dend_6 { pt3dadd( -104.539, -138.341, 38.8431, 0.59 ) }
    dend_6 { pt3dadd( -105.541, -138.585, 39.2583, 0.59 ) }
    dend_6 { pt3dadd( -106.77, -138.854, 39.7327, 0.29 ) }
    dend_6 { pt3dadd( -108.343, -139.174, 40.2405, 0.29 ) }
    dend_6 { pt3dadd( -109.905, -139.508, 40.6208, 0.29 ) }
    dend_6 { pt3dadd( -110.927, -139.748, 40.8221, 0.29 ) }
    dend_6 { pt3dadd( -112.599, -140.209, 41.0657, 0.81 ) }
    dend_6 { pt3dadd( -113.15, -140.38, 41.1254, 0.81 ) }
    dend_6 { pt3dadd( -114.883, -140.987, 41.2654, 0.52 ) }
    dend_6 { pt3dadd( -116.522, -141.661, 41.4332, 0.52 ) }
    dend_6 { pt3dadd( -117.892, -142.321, 41.6778, 0.44 ) }
    dend_6 { pt3dadd( -118.797, -142.827, 41.9747, 0.81 ) }
    dend_6 { pt3dadd( -119.833, -143.5, 42.5581, 0.81 ) }
    dend_6 { pt3dadd( -120.44, -143.982, 43.1277, 0.81 ) }
    dend_6 { pt3dadd( -121.42, -144.908, 44.4818, 0.37 ) }
    dend_6 { pt3dadd( -121.783, -145.315, 45.168, 0.37 ) }
    dend_6 { pt3dadd( -122.234, -145.879, 46.1731, 0.81 ) }
    dend_6 { pt3dadd( -122.725, -146.501, 47.3302, 0.81 ) }
    dend_6 { pt3dadd( -123.68, -147.637, 49.5742, 0.44 ) }
    dend_6 { pt3dadd( -124.147, -148.064, 50.5841, 0.37 ) }
    dend_6 { pt3dadd( -124.681, -148.463, 51.6112, 0.29 ) }
    dend_6 { pt3dadd( -125.113, -148.76, 52.3588, 0.29 ) }
    dend_6 { pt3dadd( -125.561, -149.083, 53.0624, 0.74 ) }
    dend_6 { pt3dadd( -126.315, -149.737, 54.2727, 0.29 ) }
    dend_6 { pt3dadd( -127.333, -150.74, 55.8558, 0.29 ) }
    dend_6 { pt3dadd( -127.885, -151.329, 56.719, 0.66 ) }
    dend_6 { pt3dadd( -128.442, -151.929, 57.521, 0.81 ) }
    dend_6 { pt3dadd( -129.005, -152.613, 58.3217, 0.81 ) }
    dend_6 { pt3dadd( -130.104, -154.046, 59.7765, 0.44 ) }
    dend_6 { pt3dadd( -130.614, -154.735, 60.3616, 0.29 ) }
    dend_6 { pt3dadd( -131.391, -155.796, 61.1686, 0.29 ) }
    dend_6 { pt3dadd( -131.968, -156.506, 61.7351, 0.29 ) }
    dend_6 { pt3dadd( -132.616, -157.245, 62.3409, 0.29 ) }
    dend_6 { pt3dadd( -133.13, -157.756, 62.7459, 0.96 ) }
    dend_6 { pt3dadd( -133.756, -158.298, 63.0532, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -95.6505, 99.3166, -129.94, 0.37 ) }
    dend_48 { pt3dadd( -97.1828, 98.9801, -129.493, 0.37 ) }
    dend_48 { pt3dadd( -98.424, 98.8214, -129.076, 0.37 ) }
    dend_48 { pt3dadd( -100.374, 98.7995, -128.382, 0.37 ) }
    dend_48 { pt3dadd( -101.394, 98.8939, -128.015, 0.22 ) }
    dend_48 { pt3dadd( -102.323, 99.0558, -127.685, 0.22 ) }
    dend_48 { pt3dadd( -103.773, 99.3815, -127.182, 0.37 ) }
    dend_48 { pt3dadd( -104.521, 99.6764, -126.924, 0.37 ) }
    dend_48 { pt3dadd( -105.535, 100.192, -126.588, 0.22 ) }
    dend_48 { pt3dadd( -106.421, 100.7, -126.375, 0.22 ) }
    dend_48 { pt3dadd( -107.192, 101.112, -126.267, 0.81 ) }
    dend_48 { pt3dadd( -107.633, 101.308, -126.24, 0.88 ) }
    dend_48 { pt3dadd( -108.318, 101.53, -126.244, 0.66 ) }
    dend_48 { pt3dadd( -109.632, 101.896, -126.27, 0.29 ) }
    dend_48 { pt3dadd( -111.381, 102.364, -126.311, 0.29 ) }
    dend_48 { pt3dadd( -112.573, 102.706, -126.349, 0.29 ) }
    dend_48 { pt3dadd( -114.187, 103.198, -126.418, 0.29 ) }
    dend_48 { pt3dadd( -116.248, 103.846, -126.508, 0.29 ) }
    dend_48 { pt3dadd( -117.216, 104.154, -126.552, 0.66 ) }
    dend_48 { pt3dadd( -117.976, 104.395, -126.582, 0.88 ) }
    dend_48 { pt3dadd( -118.354, 104.505, -126.597, 0.88 ) }
    dend_48 { pt3dadd( -119.429, 104.819, -126.665, 0.29 ) }
    dend_48 { pt3dadd( -120.424, 105.077, -126.741, 0.29 ) }
    dend_48 { pt3dadd( -121.648, 105.356, -126.846, 1.33 ) }
    dend_48 { pt3dadd( -122.11, 105.441, -126.89, 1.77 ) }
    dend_48 { pt3dadd( -124.034, 105.805, -127.105, 0.29 ) }
    dend_48 { pt3dadd( -125.364, 106.066, -127.27, 0.29 ) }
    dend_48 { pt3dadd( -127.048, 106.411, -127.481, 0.29 ) }
    dend_48 { pt3dadd( -127.86, 106.604, -127.578, 0.29 ) }
    dend_48 { pt3dadd( -128.672, 106.856, -127.62, 0.74 ) }
    dend_48 { pt3dadd( -129.94, 107.334, -127.559, 0.29 ) }
    dend_48 { pt3dadd( -131.247, 107.948, -127.27, 0.29 ) }
    dend_48 { pt3dadd( -132.357, 108.55, -126.875, 0.81 ) }
    dend_48 { pt3dadd( -132.932, 108.884, -126.611, 0.81 ) }
    dend_48 { pt3dadd( -134.678, 109.964, -125.614, 0.22 ) }
    dend_48 { pt3dadd( -135.809, 110.67, -124.889, 0.22 ) }
    dend_48 { pt3dadd( -137.04, 111.382, -124.077, 0.88 ) }
    dend_48 { pt3dadd( -137.74, 111.759, -123.649, 1.18 ) }
    dend_48 { pt3dadd( -139.35, 112.501, -122.84, 0.29 ) }
    dend_48 { pt3dadd( -140.395, 112.862, -122.439, 0.29 ) }
    dend_48 { pt3dadd( -142.048, 113.255, -121.968, 0.29 ) }
    dend_48 { pt3dadd( -143.483, 113.544, -121.652, 0.29 ) }
    dend_48 { pt3dadd( -144.867, 113.815, -121.42, 0.81 ) }
    dend_48 { pt3dadd( -146.646, 114.236, -121.173, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_48 { pt3dadd( -148.08, 114.666, -121.024, 0.22 ) }
    dend_48 { pt3dadd( -148.972, 114.994, -120.972, 0.29 ) }
    dend_48 { pt3dadd( -150.228, 115.635, -120.95, 0.29 ) }
    dend_48 { pt3dadd( -151.22, 116.314, -120.884, 0.29 ) }
    dend_48 { pt3dadd( -152.256, 117.19, -120.727, 0.52 ) }
    dend_48 { pt3dadd( -152.907, 117.842, -120.58, 0.59 ) }
    dend_48 { pt3dadd( -153.738, 118.802, -120.336, 0.29 ) }
    dend_48 { pt3dadd( -154.167, 119.342, -120.191, 0.29 ) }
    dend_48 { pt3dadd( -155.349, 120.856, -119.675, 0.29 ) }
    dend_48 { pt3dadd( -156.048, 121.685, -119.336, 0.29 ) }
    dend_48 { pt3dadd( -156.871, 122.555, -118.897, 0.59 ) }
    dend_48 { pt3dadd( -157.667, 123.32, -118.519, 0.74 ) }
    dend_48 { pt3dadd( -158.806, 124.359, -118.143, 0.44 ) }
    dend_48 { pt3dadd( -159.732, 125.165, -117.981, 1.55 ) }
    dend_48 { pt3dadd( -160.37, 125.656, -117.993, 1.99 ) }
    dend_48 { pt3dadd( -162.197, 126.797, -118.174, 0.29 ) }
    dend_48 { pt3dadd( -163.501, 127.394, -118.359, 0.29 ) }
    dend_48 { pt3dadd( -165.381, 128.027, -118.714, 0.29 ) }
    dend_48 { pt3dadd( -166.096, 128.205, -118.871, 0.29 ) }
    dend_48 { pt3dadd( -167.608, 128.484, -119.252, 0.44 ) }
    dend_48 { pt3dadd( -168.577, 128.616, -119.501, 0.44 ) }
    dend_48 { pt3dadd( -169.733, 128.71, -119.778, 0.29 ) }
    dend_48 { pt3dadd( -171.273, 128.806, -120.014, 0.29 ) }
    dend_48 { pt3dadd( -172.287, 128.88, -120.128, 0.29 ) }
    dend_48 { pt3dadd( -173.304, 128.988, -120.269, 0.37 ) }
    dend_48 { pt3dadd( -174.194, 129.136, -120.409, 0.59 ) }
    dend_48 { pt3dadd( -175.208, 129.349, -120.576, 0.59 ) }
    dend_48 { pt3dadd( -176.415, 129.638, -120.749, 0.44 ) }
    dend_48 { pt3dadd( -177.397, 129.977, -120.805, 0.29 ) }
    dend_48 { pt3dadd( -177.763, 130.162, -120.81, 0.88 ) }
    dend_48 { pt3dadd( -178.543, 130.632, -120.794, 0.88 ) }
    dend_48 { pt3dadd( -179.015, 130.918, -120.767, 0.88 ) }
    dend_48 { pt3dadd( -180.091, 131.506, -120.672, 0.29 ) }
    dend_48 { pt3dadd( -181.4, 132.153, -120.541, 0.29 ) }
    dend_48 { pt3dadd( -182.404, 132.677, -120.447, 0.29 ) }
    dend_48 { pt3dadd( -183.286, 133.223, -120.394, 0.29 ) }
    dend_48 { pt3dadd( -184.043, 133.773, -120.375, 0.52 ) }
    dend_48 { pt3dadd( -184.981, 134.547, -120.387, 0.52 ) }
    dend_48 { pt3dadd( -186.23, 135.634, -120.457, 0.29 ) }
    dend_48 { pt3dadd( -187.155, 136.451, -120.556, 0.29 ) }
    dend_48 { pt3dadd( -188.067, 137.313, -120.672, 0.74 ) }
    dend_48 { pt3dadd( -188.616, 137.879, -120.792, 1.03 ) }
    dend_48 { pt3dadd( -189.284, 138.643, -121.024, 0.37 ) }
    dend_48 { pt3dadd( -189.937, 139.395, -121.319, 0.37 ) }
    dend_48 { pt3dadd( -190.518, 139.98, -121.597, 0.96 ) }
    dend_48 { pt3dadd( -190.987, 140.374, -121.802, 1.18 ) }
    dend_48 { pt3dadd( -192.216, 141.376, -122.32, 0.29 ) }
    dend_48 { pt3dadd( -192.928, 142.012, -122.623, 0.29 ) }
    dend_48 { pt3dadd( -193.672, 142.702, -122.944, 0.29 ) }
    dend_48 { pt3dadd( -194.419, 143.375, -123.226, 0.37 ) }
    dend_48 { pt3dadd( -195.312, 144.132, -123.504, 0.37 ) }
    dend_48 { pt3dadd( -196.385, 145.049, -123.784, 0.37 ) }
    dend_48 { pt3dadd( -197.263, 145.761, -123.96, 0.37 ) }
    dend_48 { pt3dadd( -198.197, 146.504, -124.15, 0.37 ) }
    dend_48 { pt3dadd( -199.404, 147.56, -124.432, 0.37 ) }
    dend_48 { pt3dadd( -200.34, 148.431, -124.682, 0.37 ) }
    dend_48 { pt3dadd( -201.157, 149.216, -124.909, 0.37 ) }
    dend_48 { pt3dadd( -202.167, 150.157, -125.122, 0.37 ) }
    dend_48 { pt3dadd( -203.197, 151.092, -125.263, 0.37 ) }
    dend_48 { pt3dadd( -204.436, 152.167, -125.328, 1.4 ) }
    dend_48 { pt3dadd( -204.676, 152.365, -125.327, 2.06 ) }
    dend_48 { pt3dadd( -205.278, 152.82, -125.294, 2.28 ) }
    dend_48 { pt3dadd( -206.782, 153.83, -125.161, 0.29 ) }
    dend_48 { pt3dadd( -207.827, 154.452, -125.002, 0.29 ) }
    dend_48 { pt3dadd( -209.497, 155.267, -124.636, 0.29 ) }
    dend_48 { pt3dadd( -210.628, 155.739, -124.33, 0.29 ) }
    dend_48 { pt3dadd( -211.92, 156.217, -123.941, 0.29 ) }
    dend_48 { pt3dadd( -213.258, 156.645, -123.514, 0.29 ) }
    dend_48 { pt3dadd( -214.57, 157.017, -123.086, 0.29 ) }
    dend_48 { pt3dadd( -215.485, 157.278, -122.765, 0.29 ) }
    dend_48 { pt3dadd( -216.387, 157.546, -122.432, 0.44 ) }
    dend_48 { pt3dadd( -217.701, 157.941, -122.005, 0.44 ) }
    dend_48 { pt3dadd( -218.746, 158.341, -121.738, 0.29 ) }
    dend_48 { pt3dadd( -219.431, 158.723, -121.635, 0.29 ) }
    dend_48 { pt3dadd( -220.065, 159.192, -121.61, 0.74 ) }
    dend_48 { pt3dadd( -220.677, 159.691, -121.62, 0.74 ) }
    dend_48 { pt3dadd( -221.998, 160.872, -121.704, 0.29 ) }
    dend_48 { pt3dadd( -223.095, 162.004, -121.818, 0.29 ) }
    dend_48 { pt3dadd( -224.233, 163.285, -121.97, 0.29 ) }
    dend_48 { pt3dadd( -225.082, 164.269, -122.093, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -95.6505, 99.3166, -129.94, 0.44 ) }
    dend_31 { pt3dadd( -97.1457, 99.8367, -130.539, 0.44 ) }
    dend_31 { pt3dadd( -98.0319, 100.132, -130.832, 0.44 ) }
    dend_31 { pt3dadd( -99.2133, 100.579, -131.183, 0.44 ) }
    dend_31 { pt3dadd( -100.006, 100.937, -131.404, 0.44 ) }
    dend_31 { pt3dadd( -100.899, 101.43, -131.639, 0.44 ) }
    dend_31 { pt3dadd( -101.639, 101.896, -131.815, 0.44 ) }
    dend_31 { pt3dadd( -102.185, 102.313, -131.888, 0.44 ) }
    dend_31 { pt3dadd( -102.716, 102.848, -131.953, 0.66 ) }
    dend_31 { pt3dadd( -103.151, 103.403, -132.016, 0.66 ) }
    dend_31 { pt3dadd( -103.708, 104.234, -132.128, 0.29 ) }
    dend_31 { pt3dadd( -104.27, 105.208, -132.281, 0.29 ) }
    dend_31 { pt3dadd( -104.787, 106.234, -132.454, 1.11 ) }
    dend_31 { pt3dadd( -104.932, 106.55, -132.51, 1.11 ) }
    dend_31 { pt3dadd( -105.369, 107.429, -132.671, 0.29 ) }
    dend_31 { pt3dadd( -105.627, 107.979, -132.771, 0.29 ) }
    dend_31 { pt3dadd( -105.778, 108.375, -132.84, 1.03 ) }
    dend_31 { pt3dadd( -105.877, 108.729, -132.894, 1.03 ) }
    dend_31 { pt3dadd( -106.02, 109.261, -132.968, 1.03 ) }
    dend_31 { pt3dadd( -106.415, 110.816, -133.155, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( -106.636, 111.734, -133.239, 0.29 ) }
    dend_31 { pt3dadd( -106.847, 112.56, -133.304, 0.29 ) }
    dend_31 { pt3dadd( -107.065, 113.226, -133.346, 0.29 ) }
    dend_31 { pt3dadd( -107.503, 114.376, -133.404, 1.33 ) }
    dend_31 { pt3dadd( -107.665, 114.763, -133.425, 1.69 ) }
    dend_31 { pt3dadd( -108.357, 116.16, -133.513, 0.37 ) }
    dend_31 { pt3dadd( -108.798, 116.882, -133.572, 0.37 ) }
    dend_31 { pt3dadd( -109.628, 118.031, -133.686, 0.37 ) }
    dend_31 { pt3dadd( -110.325, 118.924, -133.786, 0.37 ) }
    dend_31 { pt3dadd( -111.028, 119.817, -133.897, 0.37 ) }
    dend_31 { pt3dadd( -111.56, 120.54, -134.004, 0.37 ) }
    dend_31 { pt3dadd( -111.801, 120.911, -134.075, 0.81 ) }
    dend_31 { pt3dadd( -112.113, 121.535, -134.242, 0.81 ) }
    dend_31 { pt3dadd( -112.365, 122.303, -134.539, 0.52 ) }
    dend_31 { pt3dadd( -112.551, 122.96, -134.832, 0.52 ) }
    dend_31 { pt3dadd( -112.845, 123.859, -135.267, 1.03 ) }
    dend_31 { pt3dadd( -112.991, 124.29, -135.489, 1.03 ) }
    dend_31 { pt3dadd( -113.291, 125.045, -135.897, 0.88 ) }
    dend_31 { pt3dadd( -113.786, 126.077, -136.472, 0.37 ) }
    dend_31 { pt3dadd( -114.415, 127.175, -137.087, 0.37 ) }
    dend_31 { pt3dadd( -115.129, 128.331, -137.64, 0.37 ) }
    dend_31 { pt3dadd( -115.497, 128.928, -137.877, 0.37 ) }
    dend_31 { pt3dadd( -116.12, 129.953, -138.207, 0.37 ) }
    dend_31 { pt3dadd( -116.542, 130.662, -138.378, 1.18 ) }
    dend_31 { pt3dadd( -116.86, 131.206, -138.477, 1.69 ) }
    dend_31 { pt3dadd( -117.972, 133.348, -138.803, 0.44 ) }
    dend_31 { pt3dadd( -118.512, 134.626, -138.977, 0.44 ) }
    dend_31 { pt3dadd( -118.96, 135.872, -139.144, 0.44 ) }
    dend_31 { pt3dadd( -119.116, 136.393, -139.219, 0.96 ) }
    dend_31 { pt3dadd( -119.263, 136.933, -139.305, 1.33 ) }
    dend_31 { pt3dadd( -119.621, 138.251, -139.536, 0.37 ) }
    dend_31 { pt3dadd( -119.918, 139.468, -139.776, 0.37 ) }
    dend_31 { pt3dadd( -120.089, 140.274, -139.936, 0.37 ) }
    dend_31 { pt3dadd( -120.247, 141.256, -140.127, 0.37 ) }
    dend_31 { pt3dadd( -120.442, 142.47, -140.377, 0.37 ) }
    dend_31 { pt3dadd( -120.649, 143.538, -140.635, 0.37 ) }
    dend_31 { pt3dadd( -120.841, 144.321, -140.819, 0.59 ) }
    dend_31 { pt3dadd( -121.053, 145.095, -140.978, 0.59 ) }
    dend_31 { pt3dadd( -121.313, 146.118, -141.248, 0.29 ) }
    dend_31 { pt3dadd( -121.418, 146.58, -141.391, 0.29 ) }
    dend_31 { pt3dadd( -121.83, 148.153, -141.944, 1.33 ) }
    dend_31 { pt3dadd( -122.017, 148.749, -142.162, 2.14 ) }
    dend_31 { pt3dadd( -122.198, 149.225, -142.347, 2.28 ) }
    dend_31 { pt3dadd( -122.88, 150.674, -142.977, 1.11 ) }
    dend_31 { pt3dadd( -123.435, 151.616, -143.454, 0.29 ) }
    dend_31 { pt3dadd( -124.122, 152.713, -144.031, 0.29 ) }
    dend_31 { pt3dadd( -124.591, 153.436, -144.421, 0.29 ) }
    dend_31 { pt3dadd( -125.013, 154.122, -144.803, 0.44 ) }
    dend_31 { pt3dadd( -125.413, 154.851, -145.218, 0.44 ) }
    dend_31 { pt3dadd( -125.864, 155.802, -145.723, 0.44 ) }
    dend_31 { pt3dadd( -126.224, 156.77, -146.238, 0.66 ) }
    dend_31 { pt3dadd( -126.364, 157.319, -146.507, 0.66 ) }
    dend_31 { pt3dadd( -126.514, 158.158, -146.868, 0.29 ) }
    dend_31 { pt3dadd( -126.628, 159.166, -147.161, 0.29 ) }
    dend_31 { pt3dadd( -126.689, 160.004, -147.302, 0.29 ) }
    dend_31 { pt3dadd( -126.728, 160.81, -147.401, 0.29 ) }
    dend_31 { pt3dadd( -126.829, 161.974, -147.521, 0.44 ) }
    dend_31 { pt3dadd( -126.934, 162.777, -147.575, 0.44 ) }
    dend_31 { pt3dadd( -127.159, 164.071, -147.565, 1.03 ) }
    dend_31 { pt3dadd( -127.274, 164.74, -147.468, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 13.3071, -68.1811, 17.3377, 0.59 ) }
    dend_11 { pt3dadd( 14.0657, -70.3277, 17.0545, 0.59 ) }
    dend_11 { pt3dadd( 14.4568, -71.8151, 16.7827, 0.59 ) }
    dend_11 { pt3dadd( 14.8599, -73.6571, 16.4286, 0.59 ) }
    dend_11 { pt3dadd( 15.1497, -75.0133, 16.1798, 0.59 ) }
    dend_11 { pt3dadd( 15.5353, -77.0676, 15.8684, 0.88 ) }
    dend_11 { pt3dadd( 15.8135, -78.9967, 15.6022, 0.88 ) }
    dend_11 { pt3dadd( 15.8955, -80.4389, 15.4086, 0.66 ) }
    dend_11 { pt3dadd( 15.7778, -82.1214, 15.219, 0.81 ) }
    dend_11 { pt3dadd( 15.4653, -83.9079, 15.077, 0.74 ) }
    dend_11 { pt3dadd( 15.1364, -85.3447, 15.0431, 0.96 ) }
    dend_11 { pt3dadd( 14.8056, -86.772, 15.1245, 0.74 ) }
    dend_11 { pt3dadd( 14.4631, -88.3264, 15.2909, 0.59 ) }
    dend_11 { pt3dadd( 14.1258, -90.0392, 15.5066, 0.52 ) }
    dend_11 { pt3dadd( 14.0299, -90.6155, 15.5843, 1.03 ) }
    dend_11 { pt3dadd( 13.9122, -92.1783, 15.7624, 0.52 ) }
    dend_11 { pt3dadd( 14.0531, -93.9365, 15.8947, 0.81 ) }
    dend_11 { pt3dadd( 14.2959, -94.9871, 15.947, 1.03 ) }
    dend_11 { pt3dadd( 14.6129, -95.9804, 15.9444, 1.03 ) }
    dend_11 { pt3dadd( 15.0582, -97.286, 15.8699, 0.88 ) }
    dend_11 { pt3dadd( 15.5107, -98.7123, 15.7375, 0.74 ) }
    dend_11 { pt3dadd( 15.7777, -99.6438, 15.6257, 0.74 ) }
    dend_11 { pt3dadd( 16.077, -100.783, 15.4739, 0.44 ) }
    dend_11 { pt3dadd( 16.6064, -102.651, 15.1932, 0.44 ) }
    dend_11 { pt3dadd( 16.9316, -103.801, 15.013, 0.66 ) }
    dend_11 { pt3dadd( 17.1705, -104.653, 14.8953, 0.66 ) }
    dend_11 { pt3dadd( 17.4873, -105.784, 14.7403, 0.52 ) }
    dend_11 { pt3dadd( 17.8619, -107.175, 14.5228, 0.81 ) }
    dend_11 { pt3dadd( 18.207, -108.411, 14.2749, 1.03 ) }
    dend_11 { pt3dadd( 18.455, -109.244, 14.0707, 1.03 ) }
    dend_11 { pt3dadd( 18.768, -110.399, 13.7517, 0.66 ) }
    dend_11 { pt3dadd( 19.0708, -111.761, 13.2997, 0.52 ) }
    dend_11 { pt3dadd( 19.2706, -112.872, 12.8884, 0.52 ) }
    dend_11 { pt3dadd( 19.3855, -113.82, 12.5395, 0.52 ) }
    dend_11 { pt3dadd( 19.4911, -114.975, 12.15, 0.74 ) }
    dend_11 { pt3dadd( 19.5559, -115.866, 11.8683, 0.74 ) }
    dend_11 { pt3dadd( 19.6521, -118.053, 11.2558, 0.59 ) }
    dend_11 { pt3dadd( 19.6971, -119.384, 10.9929, 0.59 ) }
    dend_11 { pt3dadd( 19.7848, -120.651, 10.8193, 0.96 ) }
    dend_11 { pt3dadd( 19.8485, -121.333, 10.7724, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( 19.9674, -122.696, 10.776, 0.59 ) }
    dend_11 { pt3dadd( 20.0868, -124.435, 10.8179, 0.44 ) }
    dend_11 { pt3dadd( 20.1548, -126.015, 10.9082, 0.44 ) }
    dend_11 { pt3dadd( 20.2064, -127.367, 10.9771, 0.44 ) }
    dend_11 { pt3dadd( 20.294, -128.796, 11.0226, 0.44 ) }
    dend_11 { pt3dadd( 20.4456, -130.245, 11.0483, 0.44 ) }
    dend_11 { pt3dadd( 20.7868, -132.222, 11.0625, 0.59 ) }
    dend_11 { pt3dadd( 20.9565, -132.993, 11.0846, 0.81 ) }
    dend_11 { pt3dadd( 21.2852, -134.231, 11.1267, 0.44 ) }
    dend_11 { pt3dadd( 21.7262, -135.884, 11.2226, 0.44 ) }
    dend_11 { pt3dadd( 22.0062, -136.89, 11.3145, 0.81 ) }
    dend_11 { pt3dadd( 22.2996, -137.887, 11.46, 0.81 ) }
    dend_11 { pt3dadd( 22.7677, -139.335, 11.6831, 0.81 ) }
    dend_11 { pt3dadd( 23.1505, -140.384, 11.7969, 0.52 ) }
    dend_11 { pt3dadd( 23.6629, -141.671, 11.8691, 0.52 ) }
    dend_11 { pt3dadd( 24.055, -142.691, 11.8371, 0.81 ) }
    dend_11 { pt3dadd( 24.426, -143.921, 11.6791, 1.03 ) }
    dend_11 { pt3dadd( 24.7956, -145.713, 11.306, 0.52 ) }
    dend_11 { pt3dadd( 24.9842, -147.014, 10.9592, 0.52 ) }
    dend_11 { pt3dadd( 25.0771, -148.245, 10.6229, 0.88 ) }
    dend_11 { pt3dadd( 25.1242, -149.765, 10.2214, 0.88 ) }
    dend_11 { pt3dadd( 25.0841, -151.571, 9.7797, 0.44 ) }
    dend_11 { pt3dadd( 24.9561, -153.43, 9.3662, 0.74 ) }
    dend_11 { pt3dadd( 24.8665, -154.308, 9.2679, 0.74 ) }
    dend_11 { pt3dadd( 24.6964, -155.915, 9.12805, 0.37 ) }
    dend_11 { pt3dadd( 24.5897, -157.097, 9.06027, 0.66 ) }
    dend_11 { pt3dadd( 24.5478, -158.225, 9.0465, 0.96 ) }
    dend_11 { pt3dadd( 24.6043, -159.551, 9.05949, 0.96 ) }
    dend_11 { pt3dadd( 24.9066, -162.459, 9.08492, 0.37 ) }
    dend_11 { pt3dadd( 25.1522, -164.241, 9.18103, 0.37 ) }
    dend_11 { pt3dadd( 25.2793, -165.015, 9.27261, 0.88 ) }
    dend_11 { pt3dadd( 25.3974, -165.691, 9.36313, 0.88 ) }
    dend_11 { pt3dadd( 25.6092, -166.928, 9.47039, 0.88 ) }
    dend_11 { pt3dadd( 25.8043, -168.208, 9.49041, 0.52 ) }
    dend_11 { pt3dadd( 25.9701, -170.014, 9.53399, 0.52 ) }
    dend_11 { pt3dadd( 26.0658, -171.903, 9.71669, 0.44 ) }
    dend_11 { pt3dadd( 26.1177, -173.466, 9.91569, 0.52 ) }
    dend_11 { pt3dadd( 26.151, -175.673, 10.2311, 0.74 ) }
    dend_11 { pt3dadd( 26.1426, -177.402, 10.4926, 0.74 ) }
    dend_11 { pt3dadd( 26.0413, -180.263, 10.8697, 0.59 ) }
    dend_11 { pt3dadd( 25.9646, -181.664, 11.0048, 0.59 ) }
    dend_11 { pt3dadd( 25.8372, -183.098, 11.1522, 0.44 ) }
    dend_11 { pt3dadd( 25.7103, -184.377, 11.2887, 0.44 ) }
    dend_11 { pt3dadd( 25.6469, -185.064, 11.3506, 0.81 ) }
    dend_11 { pt3dadd( 25.5822, -186.357, 11.3541, 0.81 ) }
    dend_11 { pt3dadd( 25.5799, -187.396, 11.2317, 0.74 ) }
    dend_11 { pt3dadd( 25.5436, -188.457, 11.1212, 0.59 ) }
    dend_11 { pt3dadd( 25.451, -190.031, 11.0007, 0.29 ) }
    dend_11 { pt3dadd( 25.3853, -190.816, 10.9721, 0.52 ) }
    dend_11 { pt3dadd( 25.2406, -192.777, 10.9379, 0.52 ) }
    dend_11 { pt3dadd( 25.1722, -193.996, 10.9538, 0.52 ) }
    dend_11 { pt3dadd( 25.0547, -195.938, 11.0485, 0.74 ) }
    dend_11 { pt3dadd( 24.9701, -196.944, 11.1558, 1.11 ) }
    dend_11 { pt3dadd( 24.831, -197.733, 11.3068, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 54/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.3071, -68.1811, 17.3377, 0.52 ) }
    dend_8 { pt3dadd( 14.4163, -67.0912, 18.3803, 0.52 ) }
    dend_8 { pt3dadd( 15.0191, -66.499, 18.9469, 0.52 ) }
    dend_8 { pt3dadd( 15.5231, -66.0039, 19.4206, 0.52 ) }
    dend_8 { pt3dadd( 15.9595, -65.575, 19.8308, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 59/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -127.274, 164.74, -147.468, 0.22 ) }
    dend_37 { pt3dadd( -127.532, 167.349, -149.526, 0.22 ) }
    dend_37 { pt3dadd( -127.726, 168.112, -150.296, 0.22 ) }
    dend_37 { pt3dadd( -127.965, 168.613, -150.908, 0.22 ) }
    dend_37 { pt3dadd( -128.232, 169.185, -151.581, 0.22 ) }
    dend_37 { pt3dadd( -128.73, 170.62, -153.123, 0.22 ) }
    dend_37 { pt3dadd( -128.998, 171.886, -154.408, 1.25 ) }
    dend_37 { pt3dadd( -129.108, 172.39, -154.943, 1.55 ) }
    dend_37 { pt3dadd( -129.413, 174.298, -156.811, 0.37 ) }
    dend_37 { pt3dadd( -129.486, 175.061, -157.454, 0.37 ) }
    dend_37 { pt3dadd( -129.539, 176.488, -158.484, 0.37 ) }
    dend_37 { pt3dadd( -129.469, 177.89, -159.3, 0.37 ) }
    dend_37 { pt3dadd( -129.324, 179.029, -159.914, 0.66 ) }
    dend_37 { pt3dadd( -129.174, 179.874, -160.362, 1.33 ) }
    dend_37 { pt3dadd( -128.807, 181.637, -161.231, 0.52 ) }
    dend_37 { pt3dadd( -128.532, 183.18, -162.015, 0.52 ) }
    dend_37 { pt3dadd( -128.372, 184.302, -162.589, 0.37 ) }
    dend_37 { pt3dadd( -128.174, 185.457, -163.145, 0.37 ) }
    dend_37 { pt3dadd( -127.942, 186.417, -163.59, 0.37 ) }
    dend_37 { pt3dadd( -127.41, 188.253, -164.394, 2.65 ) }
    dend_37 { pt3dadd( -127.3, 188.593, -164.533, 3.32 ) }
    dend_37 { pt3dadd( -127.168, 189.073, -164.768, 3.32 ) }
    dend_37 { pt3dadd( -126.689, 191.879, -166.272, 0.44 ) }
    dend_37 { pt3dadd( -126.516, 193.555, -167.216, 0.44 ) }
    dend_37 { pt3dadd( -126.45, 194.351, -167.695, 0.59 ) }
    dend_37 { pt3dadd( -126.395, 195.038, -168.141, 0.59 ) }
    dend_37 { pt3dadd( -126.171, 198.407, -170.473, 0.29 ) }
    dend_37 { pt3dadd( -126.117, 199.762, -171.487, 0.29 ) }
    dend_37 { pt3dadd( -126.124, 200.969, -172.474, 0.29 ) }
    dend_37 { pt3dadd( -126.165, 202.27, -173.525, 0.29 ) }
    dend_37 { pt3dadd( -126.151, 202.792, -173.922, 0.29 ) }
    dend_37 { pt3dadd( -126.0, 204.3, -174.94, 1.11 ) }
    dend_37 { pt3dadd( -125.834, 205.269, -175.47, 1.11 ) }
    dend_37 { pt3dadd( -125.716, 206.029, -175.888, 0.88 ) }
    dend_37 { pt3dadd( -125.625, 207.747, -176.769, 0.52 ) }
    dend_37 { pt3dadd( -125.734, 209.579, -177.581, 0.29 ) }
    dend_37 { pt3dadd( -125.88, 210.684, -178.019, 0.29 ) }
    dend_37 { pt3dadd( -125.989, 211.349, -178.236, 0.66 ) }
    dend_37 { pt3dadd( -126.277, 212.867, -178.668, 0.66 ) }
    dend_37 { pt3dadd( -126.557, 214.065, -178.97, 0.29 ) }
    dend_37 { pt3dadd( -126.875, 214.988, -179.158, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -127.732, 216.506, -179.425, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 1/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -127.274, 164.74, -147.468, 0.37 ) }
    dend_32 { pt3dadd( -126.689, 165.817, -147.016, 0.37 ) }
    dend_32 { pt3dadd( -126.041, 167.078, -146.466, 0.37 ) }
    dend_32 { pt3dadd( -125.626, 167.95, -146.077, 0.37 ) }
    dend_32 { pt3dadd( -124.86, 169.696, -145.285, 0.37 ) }
    dend_32 { pt3dadd( -124.339, 170.976, -144.722, 0.52 ) }
    dend_32 { pt3dadd( -123.847, 172.274, -144.193, 1.18 ) }
    dend_32 { pt3dadd( -123.55, 173.136, -143.846, 1.18 ) }
    dend_32 { pt3dadd( -123.366, 173.732, -143.661, 1.18 ) }
    dend_32 { pt3dadd( -123.241, 174.106, -143.574, 1.03 ) }
    dend_32 { pt3dadd( -122.938, 174.891, -143.472, 0.44 ) }
    dend_32 { pt3dadd( -122.442, 175.911, -143.329, 0.88 ) }
    dend_32 { pt3dadd( -121.618, 177.436, -143.125, 0.37 ) }
    dend_32 { pt3dadd( -120.845, 178.833, -142.926, 0.29 ) }
    dend_32 { pt3dadd( -120.334, 179.779, -142.764, 0.29 ) }
    dend_32 { pt3dadd( -119.957, 180.501, -142.603, 0.66 ) }
    dend_32 { pt3dadd( -119.036, 182.384, -142.104, 0.37 ) }
    dend_32 { pt3dadd( -118.54, 183.492, -141.781, 0.37 ) }
    dend_32 { pt3dadd( -118.066, 184.693, -141.443, 0.29 ) }
    dend_32 { pt3dadd( -117.695, 185.857, -141.14, 0.29 ) }
    dend_32 { pt3dadd( -117.481, 186.915, -140.916, 0.29 ) }
    dend_32 { pt3dadd( -117.313, 188.286, -140.714, 0.88 ) }
    dend_32 { pt3dadd( -117.239, 188.978, -140.668, 0.88 ) }
    dend_32 { pt3dadd( -117.039, 190.455, -140.654, 0.37 ) }
    dend_32 { pt3dadd( -116.825, 191.944, -140.742, 0.37 ) }
    dend_32 { pt3dadd( -116.491, 193.918, -140.99, 0.37 ) }
    dend_32 { pt3dadd( -116.181, 195.497, -141.226, 0.37 ) }
    dend_32 { pt3dadd( -115.869, 196.989, -141.44, 0.37 ) }
    dend_32 { pt3dadd( -115.625, 198.087, -141.591, 0.37 ) }
    dend_32 { pt3dadd( -115.216, 199.89, -141.824, 0.37 ) }
    dend_32 { pt3dadd( -114.681, 201.941, -142.079, 0.37 ) }
    dend_32 { pt3dadd( -114.2, 203.625, -142.282, 1.47 ) }
    dend_32 { pt3dadd( -114.04, 204.297, -142.354, 1.69 ) }
    dend_32 { pt3dadd( -113.888, 205.007, -142.397, 1.69 ) }
    dend_32 { pt3dadd( -113.501, 206.811, -142.44, 0.44 ) }
    dend_32 { pt3dadd( -113.191, 208.238, -142.438, 0.44 ) }
    dend_32 { pt3dadd( -112.947, 209.587, -142.424, 0.44 ) }
    dend_32 { pt3dadd( -112.657, 211.486, -142.415, 0.44 ) }
    dend_32 { pt3dadd( -112.406, 213.3, -142.396, 0.37 ) }
    dend_32 { pt3dadd( -112.213, 214.658, -142.364, 0.37 ) }
    dend_32 { pt3dadd( -112.122, 215.337, -142.333, 0.37 ) }
    dend_32 { pt3dadd( -112.027, 216.43, -142.252, 0.96 ) }
    dend_32 { pt3dadd( -111.975, 217.519, -142.142, 1.25 ) }
    dend_32 { pt3dadd( -111.983, 217.864, -142.105, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 24.831, -197.733, 11.3068, 0.44 ) }
    dend_15 { pt3dadd( 24.17, -198.068, 11.4713, 0.44 ) }
    dend_15 { pt3dadd( 23.6386, -198.244, 11.5747, 0.29 ) }
    dend_15 { pt3dadd( 22.9145, -198.432, 11.7023, 0.22 ) }
    dend_15 { pt3dadd( 22.4012, -198.538, 11.7883, 0.59 ) }
    dend_15 { pt3dadd( 22.1, -198.59, 11.8374, 0.59 ) }
    dend_15 { pt3dadd( 21.2355, -198.738, 11.9783, 0.29 ) }
    dend_15 { pt3dadd( 20.3725, -198.795, 12.1103, 0.29 ) }
    dend_15 { pt3dadd( 20.1817, -198.793, 12.1341, 0.52 ) }
    dend_15 { pt3dadd( 19.8615, -198.777, 12.1559, 0.52 ) }
    dend_15 { pt3dadd( 19.5995, -198.754, 12.1723, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 24.831, -197.733, 11.3068, 0.37 ) }
    dend_12 { pt3dadd( 25.0511, -199.753, 10.9846, 0.37 ) }
    dend_12 { pt3dadd( 25.1355, -200.894, 10.8178, 0.81 ) }
    dend_12 { pt3dadd( 25.1514, -201.555, 10.7336, 0.88 ) }
    dend_12 { pt3dadd( 25.141, -202.25, 10.6578, 0.66 ) }
    dend_12 { pt3dadd( 25.0742, -203.539, 10.5364, 0.37 ) }
    dend_12 { pt3dadd( 25.0406, -204.025, 10.4964, 0.37 ) }
    dend_12 { pt3dadd( 24.962, -204.867, 10.4769, 0.37 ) }
    dend_12 { pt3dadd( 24.9214, -205.884, 10.4549, 0.37 ) }
    dend_12 { pt3dadd( 24.928, -206.803, 10.4305, 0.74 ) }
    dend_12 { pt3dadd( 24.9596, -207.691, 10.382, 1.11 ) }
    dend_12 { pt3dadd( 24.9887, -208.464, 10.3255, 0.81 ) }
    dend_12 { pt3dadd( 25.0868, -209.923, 10.2019, 0.37 ) }
    dend_12 { pt3dadd( 25.227, -211.607, 10.0312, 0.37 ) }
    dend_12 { pt3dadd( 25.2664, -212.688, 9.90135, 0.37 ) }
    dend_12 { pt3dadd( 25.2418, -213.802, 9.74978, 0.37 ) }
    dend_12 { pt3dadd( 25.1927, -214.452, 9.64979, 0.96 ) }
    dend_12 { pt3dadd( 25.111, -214.97, 9.56286, 0.96 ) }
    dend_12 { pt3dadd( 24.8515, -216.021, 9.38314, 0.44 ) }
    dend_12 { pt3dadd( 24.4715, -217.36, 9.15751, 0.37 ) }
    dend_12 { pt3dadd( 24.3272, -218.1, 9.02062, 0.37 ) }
    dend_12 { pt3dadd( 24.2862, -218.664, 8.91748, 1.11 ) }
    dend_12 { pt3dadd( 24.29, -219.495, 8.75919, 0.88 ) }
    dend_12 { pt3dadd( 24.3406, -220.663, 8.54066, 0.66 ) }
    dend_12 { pt3dadd( 24.4594, -222.166, 8.27414, 0.52 ) }
    dend_12 { pt3dadd( 24.5862, -223.491, 8.051, 0.52 ) }
    dend_12 { pt3dadd( 24.6675, -224.679, 7.86432, 0.52 ) }
    dend_12 { pt3dadd( 24.7076, -226.113, 7.64362, 0.81 ) }
    dend_12 { pt3dadd( 24.6907, -226.824, 7.53465, 0.96 ) }
    dend_12 { pt3dadd( 24.6229, -227.658, 7.41362, 0.96 ) }
    dend_12 { pt3dadd( 24.5035, -228.555, 7.29234, 0.81 ) }
    dend_12 { pt3dadd( 24.3317, -229.649, 7.12781, 0.44 ) }
    dend_12 { pt3dadd( 24.1631, -230.862, 6.89766, 0.29 ) }
    dend_12 { pt3dadd( 24.1013, -231.575, 6.72988, 0.29 ) }
    dend_12 { pt3dadd( 24.0374, -232.316, 6.53528, 0.29 ) }
    dend_12 { pt3dadd( 23.9197, -233.252, 6.26933, 0.29 ) }
    dend_12 { pt3dadd( 23.7488, -234.336, 5.90623, 1.03 ) }
    dend_12 { pt3dadd( 23.6941, -234.631, 5.79183, 1.47 ) }
    dend_12 { pt3dadd( 23.431, -236.162, 5.15226, 0.44 ) }
    dend_12 { pt3dadd( 23.2609, -237.244, 4.67316, 0.37 ) }
    dend_12 { pt3dadd( 23.0792, -238.344, 4.18091, 0.37 ) }
    dend_12 { pt3dadd( 22.8636, -239.628, 3.59998, 0.29 ) }
    dend_12 { pt3dadd( 22.6613, -240.865, 3.03445, 0.29 ) }
    dend_12 { pt3dadd( 22.5568, -241.598, 2.69148, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( 22.413, -242.806, 2.10624, 0.29 ) }
    dend_12 { pt3dadd( 22.3135, -244.3, 1.36913, 0.66 ) }
    dend_12 { pt3dadd( 22.2914, -245.202, 0.940378, 1.18 ) }
    dend_12 { pt3dadd( 22.2783, -245.998, 0.606324, 1.18 ) }
    dend_12 { pt3dadd( 22.2684, -246.545, 0.390922, 1.18 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 5/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.9595, -65.575, 19.8308, 0.44 ) }
    dend_10 { pt3dadd( 16.1128, -65.7256, 20.779, 0.44 ) }
    dend_10 { pt3dadd( 16.3592, -66.0611, 22.6998, 1.11 ) }
    dend_10 { pt3dadd( 16.8188, -66.6551, 25.7452, 0.44 ) }
    dend_10 { pt3dadd( 17.8259, -67.7838, 31.257, 0.88 ) }
    dend_10 { pt3dadd( 18.2068, -68.1714, 33.0408, 1.25 ) }
    dend_10 { pt3dadd( 18.4693, -68.4387, 34.2703, 0.88 ) }
    dend_10 { pt3dadd( 18.7294, -68.6977, 35.5215, 0.74 ) }
    dend_10 { pt3dadd( 19.6982, -69.565, 39.6532, 0.37 ) }
    dend_10 { pt3dadd( 19.9867, -69.8099, 40.6175, 0.66 ) }
    dend_10 { pt3dadd( 20.2653, -70.0837, 41.3449, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.9595, -65.575, 19.8308, 0.44 ) }
    dend_9 { pt3dadd( 16.1871, -65.6442, 20.5535, 0.44 ) }
    dend_9 { pt3dadd( 18.1576, -66.2433, 26.8131, 0.44 ) }
    dend_9 { pt3dadd( 18.415, -66.3216, 27.6311, 0.37 ) }
    dend_9 { pt3dadd( 18.5765, -66.3707, 28.1439, 0.37 ) }
    dend_9 { pt3dadd( 18.6964, -66.4072, 28.525, 0.74 ) }
    dend_9 { pt3dadd( 18.7934, -66.4367, 28.833, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -127.732, 216.506, -179.425, 0.59 ) }
    dend_43 { pt3dadd( -128.051, 217.624, -179.677, 0.59 ) }
    dend_43 { pt3dadd( -128.627, 218.739, -179.943, 0.37 ) }
    dend_43 { pt3dadd( -129.255, 219.658, -180.17, 0.37 ) }
    dend_43 { pt3dadd( -129.95, 220.612, -180.4, 0.37 ) }
    dend_43 { pt3dadd( -130.921, 221.942, -180.707, 0.37 ) }
    dend_43 { pt3dadd( -131.692, 223.01, -180.943, 0.37 ) }
    dend_43 { pt3dadd( -132.612, 224.227, -181.155, 0.37 ) }
    dend_43 { pt3dadd( -133.342, 225.138, -181.312, 0.37 ) }
    dend_43 { pt3dadd( -134.152, 226.142, -181.471, 0.37 ) }
    dend_43 { pt3dadd( -134.661, 226.841, -181.608, 0.37 ) }
    dend_43 { pt3dadd( -134.937, 227.397, -181.738, 1.03 ) }
    dend_43 { pt3dadd( -135.057, 227.77, -181.827, 1.33 ) }
    dend_43 { pt3dadd( -135.273, 228.667, -182.036, 1.11 ) }
    dend_43 { pt3dadd( -135.555, 229.923, -182.329, 0.37 ) }
    dend_43 { pt3dadd( -135.862, 231.302, -182.654, 0.37 ) }
    dend_43 { pt3dadd( -136.234, 233.067, -183.08, 0.29 ) }
    dend_43 { pt3dadd( -136.509, 234.451, -183.421, 0.29 ) }
    dend_43 { pt3dadd( -136.728, 235.617, -183.709, 0.52 ) }
    dend_43 { pt3dadd( -136.928, 236.78, -183.994, 1.55 ) }
    dend_43 { pt3dadd( -137.002, 237.28, -184.108, 1.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 44/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -127.732, 216.506, -179.425, 0.52 ) }
    dend_38 { pt3dadd( -127.631, 217.098, -180.329, 0.52 ) }
    dend_38 { pt3dadd( -127.457, 217.618, -181.258, 0.52 ) }
    dend_38 { pt3dadd( -127.248, 218.089, -182.093, 0.52 ) }
    dend_38 { pt3dadd( -127.035, 218.518, -182.807, 1.25 ) }
    dend_38 { pt3dadd( -126.37, 219.834, -184.86, 2.28 ) }
    dend_38 { pt3dadd( -126.225, 220.14, -185.318, 2.28 ) }
    dend_38 { pt3dadd( -125.72, 221.195, -186.986, 0.29 ) }
    dend_38 { pt3dadd( -125.497, 221.641, -187.729, 0.44 ) }
    dend_38 { pt3dadd( -125.295, 222.029, -188.351, 0.44 ) }
    dend_38 { pt3dadd( -125.089, 222.437, -188.931, 0.44 ) }
    dend_38 { pt3dadd( -124.897, 222.833, -189.362, 0.44 ) }
    dend_38 { pt3dadd( -124.578, 223.675, -190.262, 0.29 ) }
    dend_38 { pt3dadd( -124.485, 224.144, -190.719, 1.03 ) }
    dend_38 { pt3dadd( -124.434, 224.586, -191.127, 1.55 ) }
    dend_38 { pt3dadd( -124.352, 225.277, -191.749, 0.88 ) }
    dend_38 { pt3dadd( -124.212, 226.076, -192.438, 0.52 ) }
    dend_38 { pt3dadd( -124.051, 226.786, -193.005, 0.52 ) }
    dend_38 { pt3dadd( -123.938, 227.385, -193.411, 0.52 ) }
    dend_38 { pt3dadd( -123.783, 228.301, -193.979, 0.52 ) }
    dend_38 { pt3dadd( -123.656, 228.919, -194.321, 0.52 ) }
    dend_38 { pt3dadd( -123.521, 229.525, -194.628, 0.52 ) }
    dend_38 { pt3dadd( -123.361, 230.109, -194.908, 0.52 ) }
    dend_38 { pt3dadd( -122.998, 231.141, -195.371, 0.52 ) }
    dend_38 { pt3dadd( -122.582, 232.186, -195.84, 0.52 ) }
    dend_38 { pt3dadd( -122.206, 233.179, -196.259, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 70/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -111.983, 217.864, -142.105, 0.29 ) }
    dend_36 { pt3dadd( -113.135, 220.343, -142.073, 0.29 ) }
    dend_36 { pt3dadd( -113.696, 221.548, -142.057, 0.29 ) }
    dend_36 { pt3dadd( -114.105, 222.43, -142.045, 0.29 ) }
    dend_36 { pt3dadd( -114.413, 223.093, -142.037, 0.74 ) }
    dend_36 { pt3dadd( -114.666, 223.637, -142.03, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -111.983, 217.864, -142.105, 0.29 ) }
    dend_33 { pt3dadd( -111.935, 218.896, -141.968, 0.29 ) }
    dend_33 { pt3dadd( -111.904, 219.456, -141.908, 0.29 ) }
    dend_33 { pt3dadd( -111.677, 220.875, -141.811, 0.29 ) }
    dend_33 { pt3dadd( -111.553, 221.387, -141.794, 0.74 ) }
    dend_33 { pt3dadd( -111.436, 221.927, -141.789, 0.74 ) }
    dend_33 { pt3dadd( -111.214, 223.16, -141.799, 0.37 ) }
    dend_33 { pt3dadd( -111.062, 224.023, -141.84, 0.29 ) }
    dend_33 { pt3dadd( -110.777, 225.364, -141.953, 0.37 ) }
    dend_33 { pt3dadd( -110.554, 226.276, -142.066, 0.37 ) }
    dend_33 { pt3dadd( -110.176, 227.914, -142.242, 0.29 ) }
    dend_33 { pt3dadd( -109.954, 229.015, -142.331, 0.29 ) }
    dend_33 { pt3dadd( -109.77, 230.296, -142.39, 0.29 ) }
    dend_33 { pt3dadd( -109.72, 231.595, -142.399, 0.29 ) }
    dend_33 { pt3dadd( -109.764, 232.514, -142.375, 0.29 ) }
    dend_33 { pt3dadd( -109.846, 233.728, -142.283, 0.29 ) }
    dend_33 { pt3dadd( -109.891, 234.655, -142.159, 0.29 ) }
    dend_33 { pt3dadd( -109.926, 235.628, -141.988, 0.29 ) }
    dend_33 { pt3dadd( -109.944, 236.374, -141.81, 0.29 ) }
    dend_33 { pt3dadd( -109.931, 237.379, -141.55, 1.03 ) }
    dend_33 { pt3dadd( -109.848, 238.196, -141.348, 1.33 ) }
    dend_33 { pt3dadd( -109.687, 238.951, -141.19, 1.33 ) }
    dend_33 { pt3dadd( -109.303, 240.344, -140.907, 0.29 ) }
    dend_33 { pt3dadd( -108.947, 241.633, -140.627, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( -108.678, 242.842, -140.326, 0.29 ) }
    dend_33 { pt3dadd( -108.54, 243.726, -140.067, 0.29 ) }
    dend_33 { pt3dadd( -108.449, 244.857, -139.696, 0.29 ) }
    dend_33 { pt3dadd( -108.43, 245.442, -139.476, 0.29 ) }
    dend_33 { pt3dadd( -108.43, 246.698, -138.953, 0.29 ) }
    dend_33 { pt3dadd( -108.457, 247.908, -138.437, 0.74 ) }
    dend_33 { pt3dadd( -108.487, 248.74, -138.038, 0.88 ) }
    dend_33 { pt3dadd( -108.522, 249.948, -137.45, 0.44 ) }
    dend_33 { pt3dadd( -108.522, 250.639, -137.12, 0.44 ) }
    dend_33 { pt3dadd( -108.452, 251.676, -136.676, 0.96 ) }
    dend_33 { pt3dadd( -108.361, 252.513, -136.389, 1.25 ) }
    dend_33 { pt3dadd( -108.177, 254.328, -135.932, 0.29 ) }
    dend_33 { pt3dadd( -108.111, 255.302, -135.781, 0.37 ) }
    dend_33 { pt3dadd( -108.08, 255.933, -135.697, 0.37 ) }
    dend_33 { pt3dadd( -108.031, 257.044, -135.467, 0.37 ) }
    dend_33 { pt3dadd( -107.985, 258.345, -135.21, 0.37 ) }
    dend_33 { pt3dadd( -107.948, 259.122, -135.066, 0.37 ) }
    dend_33 { pt3dadd( -107.921, 260.002, -134.921, 0.37 ) }
    dend_33 { pt3dadd( -107.937, 262.237, -134.387, 1.33 ) }
    dend_33 { pt3dadd( -107.936, 264.033, -133.76, 2.06 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 22.2684, -246.545, 0.390922, 0.29 ) }
    dend_14 { pt3dadd( 21.3032, -247.777, 1.20463, 0.29 ) }
    dend_14 { pt3dadd( 20.7878, -248.684, 1.79391, 0.29 ) }
    dend_14 { pt3dadd( 20.5595, -249.285, 2.11023, 0.74 ) }
    dend_14 { pt3dadd( 20.293, -250.083, 2.5017, 0.29 ) }
    dend_14 { pt3dadd( 20.0777, -250.732, 2.76836, 0.29 ) }
    dend_14 { pt3dadd( 19.5529, -252.312, 3.41814, 0.59 ) }
    dend_14 { pt3dadd( 19.4512, -252.786, 3.58808, 0.74 ) }
    dend_14 { pt3dadd( 19.1594, -254.563, 4.22596, 0.37 ) }
    dend_14 { pt3dadd( 18.9868, -255.492, 4.57668, 0.96 ) }
    dend_14 { pt3dadd( 18.7556, -256.425, 4.93773, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 31/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 22.2684, -246.545, 0.390922, 0.37 ) }
    dend_13 { pt3dadd( 23.6407, -246.736, 0.485209, 0.37 ) }
    dend_13 { pt3dadd( 24.5939, -246.976, 0.574362, 0.37 ) }
    dend_13 { pt3dadd( 25.5908, -247.308, 0.873438, 0.37 ) }
    dend_13 { pt3dadd( 26.3243, -247.565, 1.35757, 0.29 ) }
    dend_13 { pt3dadd( 27.2067, -247.821, 2.16927, 0.29 ) }
    dend_13 { pt3dadd( 28.0378, -248.062, 2.93373, 0.52 ) }
    dend_13 { pt3dadd( 28.4692, -248.198, 3.47699, 0.52 ) }
    dend_13 { pt3dadd( 29.6728, -248.677, 5.47988, 1.11 ) }
    dend_13 { pt3dadd( 30.656, -249.163, 7.66447, 0.59 ) }
    dend_13 { pt3dadd( 30.9226, -249.284, 8.51633, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -137.002, 237.28, -184.108, 0.37 ) }
    dend_45 { pt3dadd( -137.285, 238.501, -183.974, 0.37 ) }
    dend_45 { pt3dadd( -137.544, 239.615, -183.852, 0.37 ) }
    dend_45 { pt3dadd( -137.735, 240.438, -183.761, 0.37 ) }
    dend_45 { pt3dadd( -138.062, 241.842, -183.607, 1.18 ) }
    dend_45 { pt3dadd( -138.217, 242.512, -183.533, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -137.002, 237.28, -184.108, 0.29 ) }
    dend_44 { pt3dadd( -137.84, 237.495, -185.497, 0.29 ) }
    dend_44 { pt3dadd( -138.501, 237.689, -186.555, 0.52 ) }
    dend_44 { pt3dadd( -139.569, 237.984, -188.09, 1.03 ) }
    dend_44 { pt3dadd( -140.161, 238.152, -188.872, 1.03 ) }
    dend_44 { pt3dadd( -140.715, 238.327, -189.576, 0.88 ) }
    dend_44 { pt3dadd( -141.498, 238.639, -190.555, 0.81 ) }
    dend_44 { pt3dadd( -141.957, 238.884, -191.178, 0.29 ) }
    dend_44 { pt3dadd( -142.485, 239.218, -191.852, 0.29 ) }
    dend_44 { pt3dadd( -143.024, 239.555, -192.448, 0.29 ) }
    dend_44 { pt3dadd( -143.301, 239.669, -192.819, 0.52 ) }
    dend_44 { pt3dadd( -143.907, 239.878, -193.748, 0.52 ) }
    dend_44 { pt3dadd( -144.636, 240.094, -194.924, 1.18 ) }
    dend_44 { pt3dadd( -144.902, 240.161, -195.345, 1.47 ) }
    dend_44 { pt3dadd( -145.29, 240.264, -195.938, 1.47 ) }
    dend_44 { pt3dadd( -147.152, 240.76, -198.54, 0.52 ) }
    dend_44 { pt3dadd( -147.795, 240.907, -199.312, 0.29 ) }
    dend_44 { pt3dadd( -148.613, 241.094, -200.17, 0.29 ) }
    dend_44 { pt3dadd( -149.883, 241.479, -201.308, 0.29 ) }
    dend_44 { pt3dadd( -150.982, 241.861, -202.164, 0.29 ) }
    dend_44 { pt3dadd( -151.795, 242.141, -202.701, 0.29 ) }
    dend_44 { pt3dadd( -153.115, 242.564, -203.392, 0.29 ) }
    dend_44 { pt3dadd( -153.68, 242.727, -203.683, 0.29 ) }
    dend_44 { pt3dadd( -154.625, 243.021, -204.157, 0.88 ) }
    dend_44 { pt3dadd( -155.126, 243.192, -204.401, 1.25 ) }
    dend_44 { pt3dadd( -156.664, 243.705, -205.189, 0.37 ) }
    dend_44 { pt3dadd( -157.363, 243.908, -205.682, 0.29 ) }
    dend_44 { pt3dadd( -157.941, 244.058, -206.211, 0.74 ) }
    dend_44 { pt3dadd( -158.361, 244.155, -206.615, 0.74 ) }
    dend_44 { pt3dadd( -159.176, 244.34, -207.421, 0.37 ) }
    dend_44 { pt3dadd( -159.931, 244.506, -208.205, 0.37 ) }
    dend_44 { pt3dadd( -161.566, 244.857, -210.018, 0.37 ) }
    dend_44 { pt3dadd( -162.093, 244.947, -210.582, 0.37 ) }
    dend_44 { pt3dadd( -163.176, 245.092, -211.646, 0.29 ) }
    dend_44 { pt3dadd( -163.719, 245.144, -212.117, 0.29 ) }
    dend_44 { pt3dadd( -165.034, 245.195, -213.022, 0.66 ) }
    dend_44 { pt3dadd( -166.24, 245.206, -213.705, 0.74 ) }
    dend_44 { pt3dadd( -167.488, 245.22, -214.283, 0.52 ) }
    dend_44 { pt3dadd( -168.381, 245.215, -214.683, 0.96 ) }
    dend_44 { pt3dadd( -169.204, 245.2, -215.062, 0.96 ) }
    dend_44 { pt3dadd( -170.689, 245.197, -215.693, 0.29 ) }
    dend_44 { pt3dadd( -171.806, 245.241, -216.095, 0.96 ) }
    dend_44 { pt3dadd( -172.459, 245.291, -216.322, 1.11 ) }
    dend_44 { pt3dadd( -173.504, 245.495, -216.745, 0.44 ) }
    dend_44 { pt3dadd( -174.247, 245.775, -217.078, 0.44 ) }
    dend_44 { pt3dadd( -175.098, 246.304, -217.51, 0.44 ) }
    dend_44 { pt3dadd( -175.797, 246.876, -217.883, 0.44 ) }
    dend_44 { pt3dadd( -176.325, 247.328, -218.148, 0.44 ) }
    dend_44 { pt3dadd( -177.215, 248.0, -218.589, 0.44 ) }
    dend_44 { pt3dadd( -177.865, 248.4, -218.931, 0.44 ) }
    dend_44 { pt3dadd( -179.037, 249.021, -219.539, 0.44 ) }
    dend_44 { pt3dadd( -179.729, 249.363, -219.909, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -180.59, 249.75, -220.372, 0.81 ) }
    dend_44 { pt3dadd( -181.785, 250.233, -221.009, 0.52 ) }
    dend_44 { pt3dadd( -183.016, 250.72, -221.669, 0.37 ) }
    dend_44 { pt3dadd( -183.602, 250.97, -222.015, 0.37 ) }
    dend_44 { pt3dadd( -184.228, 251.263, -222.43, 1.03 ) }
    dend_44 { pt3dadd( -185.097, 251.717, -223.117, 1.47 ) }
    dend_44 { pt3dadd( -185.578, 252.015, -223.565, 1.47 ) }
    dend_44 { pt3dadd( -186.109, 252.435, -224.159, 0.44 ) }
    dend_44 { pt3dadd( -187.144, 253.216, -225.468, 0.29 ) }
    dend_44 { pt3dadd( -188.017, 253.725, -226.663, 0.29 ) }
    dend_44 { pt3dadd( -189.06, 254.148, -228.237, 0.29 ) }
    dend_44 { pt3dadd( -189.779, 254.368, -229.396, 0.52 ) }
    dend_44 { pt3dadd( -190.665, 254.629, -230.817, 0.74 ) }
    dend_44 { pt3dadd( -191.742, 255.016, -232.558, 0.59 ) }
    dend_44 { pt3dadd( -192.359, 255.327, -233.633, 0.59 ) }
    dend_44 { pt3dadd( -193.313, 255.899, -235.332, 0.37 ) }
    dend_44 { pt3dadd( -194.015, 256.299, -236.433, 0.37 ) }
    dend_44 { pt3dadd( -194.821, 256.697, -237.493, 0.37 ) }
    dend_44 { pt3dadd( -195.782, 257.084, -238.52, 0.37 ) }
    dend_44 { pt3dadd( -197.056, 257.57, -239.623, 0.59 ) }
    dend_44 { pt3dadd( -197.925, 257.765, -240.205, 0.59 ) }
    dend_44 { pt3dadd( -199.346, 257.762, -240.837, 2.06 ) }
    dend_44 { pt3dadd( -199.927, 257.635, -241.022, 2.87 ) }
    dend_44 { pt3dadd( -201.192, 257.136, -241.307, 2.5 ) }
    dend_44 { pt3dadd( -202.253, 256.601, -241.441, 1.55 ) }
    dend_44 { pt3dadd( -203.388, 255.947, -241.489, 0.37 ) }
    dend_44 { pt3dadd( -203.992, 255.548, -241.497, 0.37 ) }
    dend_44 { pt3dadd( -205.016, 254.801, -241.488, 0.37 ) }
    dend_44 { pt3dadd( -206.101, 254.025, -241.484, 0.37 ) }
    dend_44 { pt3dadd( -207.455, 253.01, -241.482, 0.37 ) }
    dend_44 { pt3dadd( -207.799, 252.74, -241.491, 0.66 ) }
    dend_44 { pt3dadd( -208.456, 252.225, -241.526, 0.44 ) }
    dend_44 { pt3dadd( -209.182, 251.658, -241.581, 0.37 ) }
    dend_44 { pt3dadd( -210.204, 250.929, -241.62, 0.37 ) }
    dend_44 { pt3dadd( -211.088, 250.381, -241.642, 0.37 ) }
    dend_44 { pt3dadd( -212.185, 249.756, -241.647, 0.37 ) }
    dend_44 { pt3dadd( -213.006, 249.343, -241.634, 0.59 ) }
    dend_44 { pt3dadd( -213.799, 248.997, -241.619, 0.59 ) }
    dend_44 { pt3dadd( -215.129, 248.48, -241.579, 0.37 ) }
    dend_44 { pt3dadd( -216.221, 248.101, -241.524, 0.66 ) }
    dend_44 { pt3dadd( -217.049, 247.898, -241.464, 0.66 ) }
    dend_44 { pt3dadd( -217.725, 247.788, -241.376, 0.66 ) }
    dend_44 { pt3dadd( -218.404, 247.728, -241.265, 0.37 ) }
    dend_44 { pt3dadd( -219.059, 247.723, -241.152, 0.74 ) }
    dend_44 { pt3dadd( -219.627, 247.764, -241.056, 0.74 ) }
    dend_44 { pt3dadd( -220.818, 247.929, -240.806, 0.52 ) }
    dend_44 { pt3dadd( -222.468, 248.233, -240.47, 0.29 ) }
    dend_44 { pt3dadd( -223.536, 248.393, -240.262, 0.29 ) }
    dend_44 { pt3dadd( -224.422, 248.459, -240.102, 1.47 ) }
    dend_44 { pt3dadd( -225.071, 248.443, -240.006, 1.99 ) }
    dend_44 { pt3dadd( -225.785, 248.33, -239.924, 1.99 ) }
    dend_44 { pt3dadd( -227.61, 247.85, -239.789, 0.29 ) }
    dend_44 { pt3dadd( -229.133, 247.366, -239.759, 0.29 ) }
    dend_44 { pt3dadd( -230.52, 246.849, -239.755, 0.29 ) }
    dend_44 { pt3dadd( -231.702, 246.39, -239.769, 0.29 ) }
    dend_44 { pt3dadd( -233.363, 245.776, -239.834, 0.29 ) }
    dend_44 { pt3dadd( -234.303, 245.43, -239.916, 0.44 ) }
    dend_44 { pt3dadd( -235.649, 244.924, -240.135, 0.44 ) }
    dend_44 { pt3dadd( -236.871, 244.537, -240.41, 0.44 ) }
    dend_44 { pt3dadd( -238.249, 244.185, -240.768, 0.44 ) }
    dend_44 { pt3dadd( -239.537, 243.917, -241.118, 0.44 ) }
    dend_44 { pt3dadd( -240.925, 243.645, -241.499, 0.44 ) }
    dend_44 { pt3dadd( -242.631, 243.278, -241.938, 0.44 ) }
    dend_44 { pt3dadd( -243.922, 242.987, -242.25, 0.44 ) }
    dend_44 { pt3dadd( -245.619, 242.583, -242.711, 0.44 ) }
    dend_44 { pt3dadd( -246.739, 242.246, -243.046, 1.62 ) }
    dend_44 { pt3dadd( -247.364, 242.046, -243.233, 2.5 ) }
    dend_44 { pt3dadd( -247.816, 241.913, -243.363, 2.5 ) }
    dend_44 { pt3dadd( -250.25, 241.158, -244.065, 0.37 ) }
    dend_44 { pt3dadd( -251.426, 240.704, -244.429, 0.37 ) }
    dend_44 { pt3dadd( -252.628, 240.17, -244.84, 0.37 ) }
    dend_44 { pt3dadd( -253.641, 239.701, -245.145, 0.81 ) }
    dend_44 { pt3dadd( -254.595, 239.309, -245.368, 0.37 ) }
    dend_44 { pt3dadd( -255.355, 239.075, -245.48, 0.52 ) }
    dend_44 { pt3dadd( -255.924, 238.993, -245.478, 0.81 ) }
    dend_44 { pt3dadd( -256.676, 238.968, -245.412, 0.81 ) }
    dend_44 { pt3dadd( -258.224, 239.005, -245.29, 0.37 ) }
    dend_44 { pt3dadd( -259.545, 238.99, -245.209, 0.37 ) }
    dend_44 { pt3dadd( -260.911, 238.901, -245.148, 0.37 ) }
    dend_44 { pt3dadd( -261.95, 238.802, -245.075, 0.37 ) }
    dend_44 { pt3dadd( -263.196, 238.651, -244.97, 0.37 ) }
    dend_44 { pt3dadd( -265.436, 238.272, -244.762, 0.29 ) }
    dend_44 { pt3dadd( -266.703, 237.917, -244.653, 0.29 ) }
    dend_44 { pt3dadd( -267.88, 237.384, -244.521, 0.29 ) }
    dend_44 { pt3dadd( -269.051, 236.61, -244.313, 0.88 ) }
    dend_44 { pt3dadd( -269.662, 236.09, -244.142, 0.88 ) }
    dend_44 { pt3dadd( -270.441, 235.293, -243.831, 0.29 ) }
    dend_44 { pt3dadd( -271.485, 234.079, -243.3, 0.29 ) }
    dend_44 { pt3dadd( -272.611, 232.743, -242.707, 0.37 ) }
    dend_44 { pt3dadd( -274.032, 231.035, -241.968, 0.66 ) }
    dend_44 { pt3dadd( -274.95, 229.951, -241.546, 0.66 ) }
    dend_44 { pt3dadd( -275.561, 229.257, -241.273, 0.22 ) }
    dend_44 { pt3dadd( -276.004, 228.766, -241.075, 0.59 ) }
    dend_44 { pt3dadd( -276.518, 228.243, -240.863, 0.81 ) }
    dend_44 { pt3dadd( -276.845, 227.937, -240.747, 0.81 ) }
    dend_44 { pt3dadd( -278.261, 226.691, -240.259, 0.29 ) }
    dend_44 { pt3dadd( -278.624, 226.337, -240.118, 0.29 ) }
    dend_44 { pt3dadd( -279.37, 225.477, -239.758, 0.52 ) }
    dend_44 { pt3dadd( -279.773, 224.942, -239.483, 0.52 ) }
    dend_44 { pt3dadd( -280.317, 224.193, -239.053, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -281.485, 222.679, -238.104, 0.66 ) }
    dend_44 { pt3dadd( -282.295, 221.745, -237.466, 0.52 ) }
    dend_44 { pt3dadd( -282.905, 221.164, -236.989, 0.96 ) }
    dend_44 { pt3dadd( -284.178, 220.195, -236.048, 0.66 ) }
    dend_44 { pt3dadd( -285.096, 219.616, -235.4, 0.29 ) }
    dend_44 { pt3dadd( -286.465, 218.944, -234.543, 0.29 ) }
    dend_44 { pt3dadd( -287.497, 218.554, -233.999, 0.29 ) }
    dend_44 { pt3dadd( -289.52, 217.904, -233.009, 0.29 ) }
    dend_44 { pt3dadd( -290.243, 217.684, -232.683, 1.47 ) }
    dend_44 { pt3dadd( -290.741, 217.531, -232.479, 1.77 ) }
    dend_44 { pt3dadd( -292.489, 217.023, -231.741, 0.37 ) }
    dend_44 { pt3dadd( -294.244, 216.533, -231.035, 0.37 ) }
    dend_44 { pt3dadd( -295.199, 216.256, -230.657, 0.66 ) }
    dend_44 { pt3dadd( -296.183, 215.961, -230.243, 0.66 ) }
    dend_44 { pt3dadd( -296.965, 215.726, -229.851, 0.59 ) }
    dend_44 { pt3dadd( -298.704, 215.284, -228.86, 0.37 ) }
    dend_44 { pt3dadd( -299.888, 215.056, -228.101, 0.37 ) }
    dend_44 { pt3dadd( -301.144, 214.856, -227.237, 0.37 ) }
    dend_44 { pt3dadd( -302.546, 214.642, -226.182, 0.96 ) }
    dend_44 { pt3dadd( -303.598, 214.457, -225.298, 0.22 ) }
    dend_44 { pt3dadd( -304.706, 214.212, -224.299, 0.22 ) }
    dend_44 { pt3dadd( -305.258, 214.052, -223.782, 0.22 ) }
    dend_44 { pt3dadd( -306.086, 213.796, -223.03, 0.52 ) }
    dend_44 { pt3dadd( -307.449, 213.317, -221.942, 0.74 ) }
    dend_44 { pt3dadd( -308.392, 212.989, -221.325, 0.66 ) }
    dend_44 { pt3dadd( -309.784, 212.514, -220.508, 0.29 ) }
    dend_44 { pt3dadd( -310.803, 212.16, -219.972, 0.96 ) }
    dend_44 { pt3dadd( -311.251, 212.028, -219.768, 1.33 ) }
    dend_44 { pt3dadd( -313.124, 211.662, -219.041, 0.37 ) }
    dend_44 { pt3dadd( -314.815, 211.367, -218.422, 0.37 ) }
    dend_44 { pt3dadd( -315.684, 211.21, -218.09, 0.37 ) }
    dend_44 { pt3dadd( -317.446, 210.919, -217.334, 0.37 ) }
    dend_44 { pt3dadd( -318.628, 210.727, -216.767, 0.37 ) }
    dend_44 { pt3dadd( -320.873, 210.295, -215.559, 0.37 ) }
    dend_44 { pt3dadd( -322.342, 209.935, -214.678, 0.37 ) }
    dend_44 { pt3dadd( -323.462, 209.573, -213.869, 0.37 ) }
    dend_44 { pt3dadd( -324.734, 209.128, -212.758, 1.11 ) }
    dend_44 { pt3dadd( -325.276, 208.946, -212.221, 1.11 ) }
    dend_44 { pt3dadd( -326.16, 208.581, -211.27, 0.44 ) }
    dend_44 { pt3dadd( -326.815, 208.313, -210.556, 0.29 ) }
    dend_44 { pt3dadd( -328.209, 207.856, -209.161, 0.29 ) }
    dend_44 { pt3dadd( -329.482, 207.408, -207.838, 0.81 ) }
    dend_44 { pt3dadd( -330.912, 206.792, -206.312, 0.52 ) }
    dend_44 { pt3dadd( -332.1, 206.218, -205.084, 0.52 ) }
    dend_44 { pt3dadd( -333.049, 205.697, -204.051, 0.52 ) }
    dend_44 { pt3dadd( -333.554, 205.398, -203.428, 0.81 ) }
    dend_44 { pt3dadd( -334.745, 204.625, -201.89, 0.44 ) }
    dend_44 { pt3dadd( -335.406, 204.188, -200.978, 0.37 ) }
    dend_44 { pt3dadd( -336.181, 203.759, -199.827, 0.37 ) }
    dend_44 { pt3dadd( -337.58, 203.11, -197.818, 0.37 ) }
    dend_44 { pt3dadd( -339.147, 202.331, -195.605, 1.55 ) }
    dend_44 { pt3dadd( -339.768, 202.016, -194.746, 2.36 ) }
    dend_44 { pt3dadd( -340.097, 201.851, -194.301, 2.58 ) }
    dend_44 { pt3dadd( -341.75, 200.858, -191.931, 0.52 ) }
    dend_44 { pt3dadd( -342.208, 200.438, -191.146, 0.74 ) }
    dend_44 { pt3dadd( -342.745, 199.662, -190.123, 0.74 ) }
    dend_44 { pt3dadd( -343.199, 198.773, -189.065, 0.44 ) }
    dend_44 { pt3dadd( -343.618, 197.904, -187.896, 0.37 ) }
    dend_44 { pt3dadd( -343.94, 197.272, -186.984, 0.44 ) }
    dend_44 { pt3dadd( -344.364, 196.391, -185.719, 0.44 ) }
    dend_44 { pt3dadd( -344.736, 195.763, -184.62, 0.44 ) }
    dend_44 { pt3dadd( -345.409, 194.819, -182.718, 0.81 ) }
    dend_44 { pt3dadd( -345.878, 194.244, -181.527, 1.11 ) }
    dend_44 { pt3dadd( -346.417, 193.639, -180.445, 0.37 ) }
    dend_44 { pt3dadd( -346.945, 192.978, -179.496, 0.37 ) }
    dend_44 { pt3dadd( -348.213, 190.989, -177.258, 1.4 ) }
    dend_44 { pt3dadd( -348.582, 190.321, -176.589, 1.99 ) }
    dend_44 { pt3dadd( -348.948, 189.616, -175.968, 1.99 ) }
    dend_44 { pt3dadd( -349.983, 187.497, -174.259, 0.52 ) }
    dend_44 { pt3dadd( -350.668, 185.999, -173.122, 0.52 ) }
    dend_44 { pt3dadd( -351.211, 184.796, -172.305, 0.52 ) }
    dend_44 { pt3dadd( -352.086, 182.823, -171.241, 0.52 ) }
    dend_44 { pt3dadd( -352.55, 181.689, -170.648, 0.74 ) }
    dend_44 { pt3dadd( -352.981, 180.474, -169.956, 0.74 ) }
    dend_44 { pt3dadd( -353.257, 179.682, -169.458, 0.52 ) }
    dend_44 { pt3dadd( -353.624, 178.759, -168.882, 0.52 ) }
    dend_44 { pt3dadd( -354.25, 177.406, -168.048, 0.44 ) }
    dend_44 { pt3dadd( -355.066, 175.838, -167.113, 0.44 ) }
    dend_44 { pt3dadd( -355.718, 174.719, -166.373, 0.52 ) }
    dend_44 { pt3dadd( -356.592, 173.427, -165.421, 0.44 ) }
    dend_44 { pt3dadd( -357.333, 172.421, -164.608, 0.44 ) }
    dend_44 { pt3dadd( -357.903, 171.662, -163.94, 2.36 ) }
    dend_44 { pt3dadd( -358.507, 170.878, -163.216, 3.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -122.206, 233.179, -196.259, 0.37 ) }
    dend_42 { pt3dadd( -122.734, 236.131, -197.0, 0.37 ) }
    dend_42 { pt3dadd( -123.036, 237.777, -197.398, 0.37 ) }
    dend_42 { pt3dadd( -123.24, 238.996, -197.683, 0.59 ) }
    dend_42 { pt3dadd( -123.421, 240.434, -198.018, 0.44 ) }
    dend_42 { pt3dadd( -123.51, 241.338, -198.231, 0.37 ) }
    dend_42 { pt3dadd( -123.579, 242.279, -198.462, 0.37 ) }
    dend_42 { pt3dadd( -123.602, 243.98, -198.923, 0.29 ) }
    dend_42 { pt3dadd( -123.591, 245.15, -199.243, 0.29 ) }
    dend_42 { pt3dadd( -123.536, 246.323, -199.557, 0.29 ) }
    dend_42 { pt3dadd( -123.422, 247.852, -199.933, 0.88 ) }
    dend_42 { pt3dadd( -123.348, 248.648, -200.143, 1.11 ) }
    dend_42 { pt3dadd( -123.259, 249.284, -200.328, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -122.206, 233.179, -196.259, 0.29 ) }
    dend_39 { pt3dadd( -120.999, 234.657, -197.688, 0.29 ) }
    dend_39 { pt3dadd( -120.385, 235.466, -198.406, 0.29 ) }
    dend_39 { pt3dadd( -119.896, 236.121, -199.112, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_39 { pt3dadd( -119.643, 236.474, -199.511, 0.44 ) }
    dend_39 { pt3dadd( -119.16, 237.182, -200.279, 0.37 ) }
    dend_39 { pt3dadd( -118.686, 237.921, -201.031, 0.37 ) }
    dend_39 { pt3dadd( -118.139, 238.804, -201.879, 0.37 ) }
    dend_39 { pt3dadd( -117.254, 240.307, -203.353, 0.81 ) }
    dend_39 { pt3dadd( -116.93, 240.915, -203.935, 0.59 ) }
    dend_39 { pt3dadd( -116.4, 242.01, -204.938, 1.33 ) }
    dend_39 { pt3dadd( -116.056, 242.826, -205.66, 1.92 ) }
    dend_39 { pt3dadd( -115.905, 243.175, -205.973, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -107.936, 264.033, -133.76, 0.52 ) }
    dend_35 { pt3dadd( -107.017, 267.004, -134.014, 0.52 ) }
    dend_35 { pt3dadd( -106.55, 268.706, -134.114, 0.52 ) }
    dend_35 { pt3dadd( -106.06, 270.723, -134.168, 0.52 ) }
    dend_35 { pt3dadd( -105.747, 272.049, -134.197, 0.52 ) }
    dend_35 { pt3dadd( -105.348, 273.703, -134.249, 0.52 ) }
    dend_35 { pt3dadd( -105.084, 274.717, -134.298, 0.66 ) }
    dend_35 { pt3dadd( -104.821, 275.732, -134.326, 0.29 ) }
    dend_35 { pt3dadd( -104.652, 276.421, -134.365, 0.29 ) }
    dend_35 { pt3dadd( -104.231, 278.2, -134.588, 0.29 ) }
    dend_35 { pt3dadd( -103.929, 279.433, -134.734, 0.29 ) }
    dend_35 { pt3dadd( -103.6, 280.695, -134.948, 0.29 ) }
    dend_35 { pt3dadd( -103.234, 281.988, -135.192, 1.25 ) }
    dend_35 { pt3dadd( -103.016, 282.731, -135.334, 1.55 ) }
    dend_35 { pt3dadd( -102.615, 284.124, -135.618, 0.22 ) }
    dend_35 { pt3dadd( -102.246, 285.851, -135.869, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -107.936, 264.033, -133.76, 0.29 ) }
    dend_34 { pt3dadd( -107.918, 265.619, -133.27, 0.29 ) }
    dend_34 { pt3dadd( -107.87, 266.527, -132.951, 0.29 ) }
    dend_34 { pt3dadd( -107.804, 267.466, -132.613, 0.29 ) }
    dend_34 { pt3dadd( -107.726, 268.607, -132.24, 0.37 ) }
    dend_34 { pt3dadd( -107.671, 269.337, -132.043, 0.37 ) }
    dend_34 { pt3dadd( -107.617, 269.938, -131.914, 0.29 ) }
    dend_34 { pt3dadd( -107.46, 271.068, -131.754, 0.29 ) }
    dend_34 { pt3dadd( -107.341, 271.863, -131.676, 0.29 ) }
    dend_34 { pt3dadd( -107.17, 272.998, -131.631, 0.29 ) }
    dend_34 { pt3dadd( -106.955, 274.23, -131.588, 0.29 ) }
    dend_34 { pt3dadd( -106.781, 275.154, -131.563, 0.52 ) }
    dend_34 { pt3dadd( -106.67, 275.755, -131.551, 0.29 ) }
    dend_34 { pt3dadd( -106.432, 277.0, -131.533, 0.29 ) }
    dend_34 { pt3dadd( -106.217, 277.956, -131.505, 0.29 ) }
    dend_34 { pt3dadd( -105.909, 279.166, -131.452, 0.59 ) }
    dend_34 { pt3dadd( -105.677, 280.071, -131.405, 0.74 ) }
    dend_34 { pt3dadd( -105.447, 280.964, -131.371, 0.22 ) }
    dend_34 { pt3dadd( -105.294, 281.552, -131.37, 0.22 ) }
    dend_34 { pt3dadd( -105.055, 282.486, -131.43, 0.22 ) }
    dend_34 { pt3dadd( -104.863, 283.227, -131.494, 0.22 ) }
    dend_34 { pt3dadd( -104.718, 283.843, -131.56, 0.74 ) }
    dend_34 { pt3dadd( -104.637, 284.193, -131.587, 0.74 ) }
    dend_34 { pt3dadd( -104.554, 284.659, -131.59, 0.29 ) }
    dend_34 { pt3dadd( -104.442, 285.479, -131.559, 0.59 ) }
    dend_34 { pt3dadd( -104.346, 286.415, -131.452, 0.29 ) }
    dend_34 { pt3dadd( -104.257, 287.397, -131.301, 0.29 ) }
    dend_34 { pt3dadd( -104.22, 288.266, -131.118, 0.29 ) }
    dend_34 { pt3dadd( -104.228, 289.111, -130.897, 0.29 ) }
    dend_34 { pt3dadd( -104.269, 289.976, -130.598, 0.29 ) }
    dend_34 { pt3dadd( -104.331, 290.936, -130.207, 0.29 ) }
    dend_34 { pt3dadd( -104.371, 291.652, -129.879, 0.29 ) }
    dend_34 { pt3dadd( -104.404, 292.925, -129.246, 0.29 ) }
    dend_34 { pt3dadd( -104.401, 293.681, -128.862, 0.29 ) }
    dend_34 { pt3dadd( -104.372, 294.835, -128.262, 1.4 ) }
    dend_34 { pt3dadd( -104.349, 295.529, -127.881, 1.77 ) }
    dend_34 { pt3dadd( -104.239, 296.82, -127.181, 0.37 ) }
    dend_34 { pt3dadd( -104.141, 297.486, -126.806, 0.66 ) }
    dend_34 { pt3dadd( -104.049, 297.795, -126.654, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 64/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -138.217, 242.512, -183.533, 0.29 ) }
    dend_47 { pt3dadd( -137.861, 243.724, -182.18, 0.29 ) }
    dend_47 { pt3dadd( -137.777, 244.422, -181.401, 0.22 ) }
    dend_47 { pt3dadd( -137.805, 245.201, -180.533, 0.22 ) }
    dend_47 { pt3dadd( -138.029, 246.231, -179.329, 0.44 ) }
    dend_47 { pt3dadd( -138.228, 246.842, -178.614, 0.44 ) }
    dend_47 { pt3dadd( -138.528, 247.75, -177.629, 0.44 ) }
    dend_47 { pt3dadd( -138.858, 248.407, -176.954, 0.74 ) }
    dend_47 { pt3dadd( -139.128, 248.943, -176.391, 0.74 ) }
    dend_47 { pt3dadd( -139.557, 249.778, -175.572, 0.44 ) }
    dend_47 { pt3dadd( -139.859, 250.462, -174.923, 0.29 ) }
    dend_47 { pt3dadd( -140.142, 251.362, -174.084, 0.29 ) }
    dend_47 { pt3dadd( -140.279, 252.304, -173.246, 0.29 ) }
    dend_47 { pt3dadd( -140.229, 254.318, -171.45, 0.29 ) }
    dend_47 { pt3dadd( -140.07, 255.372, -170.492, 0.29 ) }
    dend_47 { pt3dadd( -139.871, 256.107, -169.749, 0.29 ) }
    dend_47 { pt3dadd( -139.654, 256.809, -169.031, 0.29 ) }
    dend_47 { pt3dadd( -139.38, 257.671, -168.22, 0.81 ) }
    dend_47 { pt3dadd( -139.035, 258.79, -167.261, 1.47 ) }
    dend_47 { pt3dadd( -138.787, 259.608, -166.652, 1.84 ) }
    dend_47 { pt3dadd( -137.871, 262.553, -164.648, 0.29 ) }
    dend_47 { pt3dadd( -137.512, 263.84, -163.858, 0.29 ) }
    dend_47 { pt3dadd( -137.091, 265.394, -162.873, 0.29 ) }
    dend_47 { pt3dadd( -136.487, 267.489, -161.521, 1.84 ) }
    dend_47 { pt3dadd( -135.994, 269.095, -160.506, 0.37 ) }
    dend_47 { pt3dadd( -135.673, 270.167, -159.832, 0.37 ) }
    dend_47 { pt3dadd( -135.443, 270.969, -159.325, 0.37 ) }
    dend_47 { pt3dadd( -134.759, 273.505, -157.472, 0.66 ) }
    dend_47 { pt3dadd( -134.53, 274.533, -156.527, 0.37 ) }
    dend_47 { pt3dadd( -134.48, 275.063, -155.951, 0.37 ) }
    dend_47 { pt3dadd( -134.508, 275.856, -155.008, 0.59 ) }
    dend_47 { pt3dadd( -134.536, 276.242, -154.583, 0.59 ) }
    dend_47 { pt3dadd( -134.61, 276.906, -153.939, 0.44 ) }
    dend_47 { pt3dadd( -134.996, 279.766, -151.679, 0.44 ) }
    dend_47 { pt3dadd( -135.172, 281.175, -150.654, 0.29 ) }
    dend_47 { pt3dadd( -135.299, 282.49, -149.765, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_47 { pt3dadd( -135.438, 284.33, -148.674, 0.29 ) }
    dend_47 { pt3dadd( -135.49, 285.183, -148.199, 0.29 ) }
    dend_47 { pt3dadd( -135.54, 286.348, -147.621, 0.29 ) }
    dend_47 { pt3dadd( -135.581, 287.618, -147.08, 1.18 ) }
    dend_47 { pt3dadd( -135.591, 288.088, -146.862, 1.55 ) }
    dend_47 { pt3dadd( -135.692, 289.512, -145.982, 0.66 ) }
    dend_47 { pt3dadd( -135.791, 291.189, -144.533, 1.03 ) }
    dend_47 { pt3dadd( -135.792, 291.744, -143.931, 1.03 ) }
    dend_47 { pt3dadd( -135.729, 292.946, -142.401, 0.29 ) }
    dend_47 { pt3dadd( -135.685, 293.471, -141.692, 0.29 ) }
    dend_47 { pt3dadd( -135.549, 294.611, -140.168, 0.66 ) }
    dend_47 { pt3dadd( -135.332, 296.027, -138.118, 0.37 ) }
    dend_47 { pt3dadd( -135.193, 296.917, -136.82, 0.37 ) }
    dend_47 { pt3dadd( -135.108, 297.394, -136.081, 0.37 ) }
    dend_47 { pt3dadd( -134.944, 298.025, -135.069, 1.47 ) }
    dend_47 { pt3dadd( -134.689, 298.719, -134.074, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -138.217, 242.512, -183.533, 0.29 ) }
    dend_46 { pt3dadd( -137.252, 245.357, -184.035, 0.29 ) }
    dend_46 { pt3dadd( -136.621, 247.068, -184.222, 0.29 ) }
    dend_46 { pt3dadd( -136.015, 248.719, -184.31, 1.69 ) }
    dend_46 { pt3dadd( -135.108, 251.224, -184.329, 0.29 ) }
    dend_46 { pt3dadd( -134.777, 252.168, -184.294, 0.29 ) }
    dend_46 { pt3dadd( -134.37, 253.475, -184.19, 0.29 ) }
    dend_46 { pt3dadd( -133.982, 254.653, -183.952, 0.29 ) }
    dend_46 { pt3dadd( -133.73, 255.53, -183.745, 0.29 ) }
    dend_46 { pt3dadd( -133.444, 256.751, -183.463, 0.59 ) }
    dend_46 { pt3dadd( -133.256, 258.087, -183.201, 0.29 ) }
    dend_46 { pt3dadd( -133.158, 259.557, -182.934, 0.29 ) }
    dend_46 { pt3dadd( -133.168, 260.29, -182.823, 0.59 ) }
    dend_46 { pt3dadd( -133.26, 261.216, -182.726, 0.59 ) }
    dend_46 { pt3dadd( -133.47, 262.254, -182.595, 0.29 ) }
    dend_46 { pt3dadd( -133.724, 263.117, -182.472, 0.29 ) }
    dend_46 { pt3dadd( -134.036, 264.111, -182.328, 0.88 ) }
    dend_46 { pt3dadd( -134.221, 264.718, -182.237, 1.03 ) }
    dend_46 { pt3dadd( -134.651, 266.019, -182.024, 0.29 ) }
    dend_46 { pt3dadd( -135.12, 267.379, -181.793, 0.29 ) }
    dend_46 { pt3dadd( -135.531, 268.548, -181.659, 0.29 ) }
    dend_46 { pt3dadd( -135.836, 269.471, -181.629, 0.29 ) }
    dend_46 { pt3dadd( -136.177, 270.525, -181.701, 0.29 ) }
    dend_46 { pt3dadd( -136.54, 271.586, -181.899, 0.66 ) }
    dend_46 { pt3dadd( -136.751, 272.145, -182.09, 0.88 ) }
    dend_46 { pt3dadd( -137.146, 273.148, -182.596, 0.29 ) }
    dend_46 { pt3dadd( -137.497, 273.864, -183.058, 0.29 ) }
    dend_46 { pt3dadd( -138.021, 274.761, -183.828, 0.29 ) }
    dend_46 { pt3dadd( -138.551, 275.587, -184.815, 0.29 ) }
    dend_46 { pt3dadd( -138.995, 276.209, -185.727, 0.29 ) }
    dend_46 { pt3dadd( -139.52, 276.861, -186.823, 0.59 ) }
    dend_46 { pt3dadd( -140.145, 277.528, -188.073, 0.44 ) }
    dend_46 { pt3dadd( -140.906, 278.253, -189.505, 0.81 ) }
    dend_46 { pt3dadd( -141.804, 279.002, -191.057, 0.37 ) }
    dend_46 { pt3dadd( -142.469, 279.53, -192.049, 0.29 ) }
    dend_46 { pt3dadd( -142.94, 279.897, -192.638, 0.29 ) }
    dend_46 { pt3dadd( -143.457, 280.304, -193.18, 0.29 ) }
    dend_46 { pt3dadd( -144.234, 281.027, -193.909, 0.59 ) }
    dend_46 { pt3dadd( -145.233, 281.989, -194.673, 0.29 ) }
    dend_46 { pt3dadd( -146.082, 282.835, -195.217, 0.22 ) }
    dend_46 { pt3dadd( -146.543, 283.331, -195.524, 0.22 ) }
    dend_46 { pt3dadd( -147.239, 284.154, -196.008, 1.25 ) }
    dend_46 { pt3dadd( -147.604, 284.638, -196.281, 1.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -115.905, 243.175, -205.973, 0.44 ) }
    dend_41 { pt3dadd( -116.47, 245.023, -206.786, 0.44 ) }
    dend_41 { pt3dadd( -116.975, 246.845, -207.651, 0.37 ) }
    dend_41 { pt3dadd( -117.264, 248.04, -208.221, 0.37 ) }
    dend_41 { pt3dadd( -117.538, 249.225, -208.771, 0.37 ) }
    dend_41 { pt3dadd( -117.767, 250.201, -209.239, 0.37 ) }
    dend_41 { pt3dadd( -118.14, 251.742, -209.97, 0.29 ) }
    dend_41 { pt3dadd( -118.458, 253.479, -210.818, 1.25 ) }
    dend_41 { pt3dadd( -118.581, 254.357, -211.281, 1.62 ) }
    dend_41 { pt3dadd( -118.683, 255.143, -211.765, 1.62 ) }
    dend_41 { pt3dadd( -118.938, 257.275, -213.171, 0.29 ) }
    dend_41 { pt3dadd( -119.027, 258.288, -213.85, 0.29 ) }
    dend_41 { pt3dadd( -119.067, 259.575, -214.769, 0.29 ) }
    dend_41 { pt3dadd( -119.025, 260.744, -215.698, 0.59 ) }
    dend_41 { pt3dadd( -118.852, 262.833, -217.435, 0.29 ) }
    dend_41 { pt3dadd( -118.782, 263.524, -218.015, 0.29 ) }
    dend_41 { pt3dadd( -118.693, 264.507, -218.843, 0.29 ) }
    dend_41 { pt3dadd( -118.674, 265.105, -219.328, 0.29 ) }
    dend_41 { pt3dadd( -118.679, 265.943, -219.929, 0.59 ) }
    dend_41 { pt3dadd( -118.67, 266.961, -220.551, 0.59 ) }
    dend_41 { pt3dadd( -118.634, 269.0, -221.692, 0.29 ) }
    dend_41 { pt3dadd( -118.619, 270.232, -222.416, 0.29 ) }
    dend_41 { pt3dadd( -118.588, 271.624, -223.233, 0.29 ) }
    dend_41 { pt3dadd( -118.514, 273.449, -224.315, 0.37 ) }
    dend_41 { pt3dadd( -118.459, 274.401, -224.878, 0.37 ) }
    dend_41 { pt3dadd( -118.295, 276.084, -225.849, 0.37 ) }
    dend_41 { pt3dadd( -118.103, 277.48, -226.623, 0.37 ) }
    dend_41 { pt3dadd( -117.786, 279.404, -227.612, 0.44 ) }
    dend_41 { pt3dadd( -117.523, 280.692, -228.232, 0.66 ) }
    dend_41 { pt3dadd( -117.304, 281.664, -228.665, 0.66 ) }
    dend_41 { pt3dadd( -116.774, 283.699, -229.389, 0.29 ) }
    dend_41 { pt3dadd( -116.496, 284.624, -229.631, 0.74 ) }
    dend_41 { pt3dadd( -115.92, 286.469, -229.984, 0.29 ) }
    dend_41 { pt3dadd( -115.285, 288.574, -230.278, 0.37 ) }
    dend_41 { pt3dadd( -114.908, 289.808, -230.42, 0.37 ) }
    dend_41 { pt3dadd( -114.288, 291.933, -230.661, 0.37 ) }
    dend_41 { pt3dadd( -113.931, 293.278, -230.82, 0.37 ) }
    dend_41 { pt3dadd( -113.585, 294.823, -231.03, 0.37 ) }
    dend_41 { pt3dadd( -113.283, 296.543, -231.306, 0.29 ) }
    dend_41 { pt3dadd( -113.059, 298.219, -231.614, 0.29 ) }
    dend_41 { pt3dadd( -112.723, 300.544, -232.191, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -112.559, 301.57, -232.523, 0.29 ) }
    dend_41 { pt3dadd( -112.322, 302.946, -233.011, 1.03 ) }
    dend_41 { pt3dadd( -112.13, 303.981, -233.396, 1.33 ) }
    dend_41 { pt3dadd( -111.746, 306.133, -234.195, 0.52 ) }
    dend_41 { pt3dadd( -111.427, 307.968, -234.861, 0.52 ) }
    dend_41 { pt3dadd( -111.09, 309.73, -235.504, 0.52 ) }
    dend_41 { pt3dadd( -110.809, 311.176, -236.019, 0.81 ) }
    dend_41 { pt3dadd( -110.662, 311.965, -236.288, 0.81 ) }
    dend_41 { pt3dadd( -110.33, 314.171, -236.965, 0.37 ) }
    dend_41 { pt3dadd( -110.091, 316.025, -237.459, 0.37 ) }
    dend_41 { pt3dadd( -109.911, 317.585, -237.814, 0.96 ) }
    dend_41 { pt3dadd( -109.83, 318.281, -237.969, 1.33 ) }
    dend_41 { pt3dadd( -109.743, 319.177, -238.164, 1.4 ) }
    dend_41 { pt3dadd( -109.605, 321.247, -238.605, 0.52 ) }
    dend_41 { pt3dadd( -109.552, 322.752, -238.919, 0.44 ) }
    dend_41 { pt3dadd( -109.581, 324.721, -239.313, 0.37 ) }
    dend_41 { pt3dadd( -109.628, 326.473, -239.664, 0.37 ) }
    dend_41 { pt3dadd( -109.656, 327.929, -239.961, 0.37 ) }
    dend_41 { pt3dadd( -109.672, 328.912, -240.162, 0.37 ) }
    dend_41 { pt3dadd( -109.763, 330.595, -240.492, 0.74 ) }
    dend_41 { pt3dadd( -109.819, 330.981, -240.558, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -115.905, 243.175, -205.973, 0.37 ) }
    dend_40 { pt3dadd( -115.938, 244.58, -207.896, 0.37 ) }
    dend_40 { pt3dadd( -115.844, 245.584, -209.166, 0.74 ) }
    dend_40 { pt3dadd( -115.525, 247.124, -211.188, 0.29 ) }
    dend_40 { pt3dadd( -115.297, 247.898, -212.324, 0.29 ) }
    dend_40 { pt3dadd( -115.009, 248.68, -213.526, 1.25 ) }
    dend_40 { pt3dadd( -114.885, 248.984, -214.006, 1.25 ) }
    dend_40 { pt3dadd( -114.475, 249.748, -215.213, 0.29 ) }
    dend_40 { pt3dadd( -113.988, 250.472, -216.397, 0.29 ) }
    dend_40 { pt3dadd( -113.427, 251.23, -217.703, 0.29 ) }
    dend_40 { pt3dadd( -113.146, 251.66, -218.536, 0.29 ) }
    dend_40 { pt3dadd( -112.977, 252.031, -219.335, 0.29 ) }
    dend_40 { pt3dadd( -112.837, 252.474, -220.338, 0.29 ) }
    dend_40 { pt3dadd( -112.793, 253.013, -221.485, 1.03 ) }
    dend_40 { pt3dadd( -112.818, 254.147, -223.645, 0.37 ) }
    dend_40 { pt3dadd( -112.839, 254.785, -224.784, 0.37 ) }
    dend_40 { pt3dadd( -112.845, 255.301, -225.811, 0.37 ) }
    dend_40 { pt3dadd( -112.86, 255.74, -226.715, 1.03 ) }
    dend_40 { pt3dadd( -112.908, 256.485, -228.299, 0.52 ) }
    dend_40 { pt3dadd( -112.911, 257.002, -229.42, 0.52 ) }
    dend_40 { pt3dadd( -112.814, 257.561, -230.481, 0.44 ) }
    dend_40 { pt3dadd( -112.429, 258.765, -232.746, 1.62 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, axon_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, axon_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_5 = new SectionList()
    dend_51 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_49 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_48 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_31 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_47 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_46 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_2 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_26 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_10 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_15 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_43 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_34 OneSecGrp_SectionRef_51.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_31 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 3
    dend_18 nseg = 9
    dend_1 nseg = 9
    dend_50 nseg = 7
    dend_24 nseg = 13
    dend_19 nseg = 3
    dend_49 nseg = 5
    dend_28 nseg = 7
    dend_30 nseg = 5
    dend_29 nseg = 5
    dend_6 nseg = 9
    dend_48 nseg = 7
    dend_31 nseg = 3
    dend_11 nseg = 7
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_12 nseg = 3
    dend_33 nseg = 3
    dend_44 nseg = 15
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_41 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_LBC_3285d77dba_0_0


