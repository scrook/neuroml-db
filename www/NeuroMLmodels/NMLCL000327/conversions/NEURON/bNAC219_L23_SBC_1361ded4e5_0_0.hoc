// Cell: bNAC219_L23_SBC_1361ded4e5_0_0
/*
{
  "id" : "bNAC219_L23_SBC_1361ded4e5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.33595, 9.86266, -2.58258, 3.10392", "-1.10693, 8.70666, -2.27545, 5.13149", "-0.877919, 7.55065, -1.96833, 5.9409", "-0.648905, 6.39464, -1.66121, 6.21705", "-0.419891, 5.23864, -1.35409, 6.94548", "-0.190877, 4.08263, -1.04697, 7.90278", "0.0381366, 2.92662, -0.739853, 8.68773", "0.267151, 1.77062, -0.432733, 9.13726", "0.496164, 0.614609, -0.125613, 9.57756", "0.725178, -0.541398, 0.181507, 10.0179", "0.954192, -1.69741, 0.488628, 10.4496", "1.18321, -2.85341, 0.795748, 10.783", "1.41222, -4.00942, 1.10287, 11.0771", "1.64123, -5.16543, 1.40999, 10.6686", "1.87025, -6.32143, 1.71711, 9.98139", "2.09926, -7.47744, 2.02423, 9.29419", "2.32828, -8.63345, 2.33135, 8.60698", "2.55729, -9.78945, 2.63847, 7.32288", "2.7863, -10.9455, 2.94559, 6.0067", "3.01532, -12.1015, 3.25271, 3.27186", "3.24433, -13.2575, 3.55983, 2.03515" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.869971, -13.5197, 3.91359, 2.77", "0.463739, -15.9251, 3.95848, 2.22", "-0.118596, -19.3732, 4.02281, 2.49", "-0.621218, -22.3494, 4.07835, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.909968, 10.4858, -2.65641, 1.94", "2.49793, 13.1555, -4.5005, 1.94", "4.98138, 17.3307, -7.38452, 1.11", "6.82522, 20.4305, -9.52576, 0.83", "9.76597, 25.3746, -12.9408, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.44003, 10.045, -5.44641, 1.11", "-4.15962, 14.0974, -3.7838, 1.11", "-4.51769, 14.9413, -3.4376, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.58997, -7.12372, -9.93641, 1.11", "3.71246, -7.60663, -11.382, 1.11", "4.00507, -8.76018, -14.8351, 1.11", "4.40107, -10.3213, -19.5083, 1.11", "4.63057, -11.226, -22.2166, 1.11", "4.91058, -12.3299, -25.5211, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.05997, -2.00897, -13.4864, 1.39", "5.2757, -1.85737, -14.7703, 1.39", "7.8787, -1.67502, -17.1561, 1.11", "10.5296, -1.59598, -19.2501, 1.11", "12.9595, -1.55414, -20.993, 1.11", "15.4054, -1.51202, -22.7474, 0.83", "17.4751, -1.47638, -24.2319, 0.83", "20.2514, -1.52666, -26.1691, 0.83", "21.9787, -1.66734, -27.1749, 0.83", "24.062, -1.82421, -28.0577, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.70003, 8.71253, -8.35641, 1.39", "-6.66265, 9.44661, -10.0587, 1.11", "-8.78195, 10.2393, -11.8969, 1.11", "-10.0502, 10.7137, -12.9969, 1.11", "-12.7323, 11.7169, -15.3232, 1.11", "-15.9785, 12.931, -18.1389, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.58997, -3.12622, 15.3936, 1.66", "7.37961, -3.96568, 15.3936, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.24433, -13.2575, 3.55983, 0.83", "6.15929, -27.9715, 3.55983, 0.83", "9.07426, -42.6856, 3.55983, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-0.621218, -22.3494, 4.07835, 2.77", "-0.979112, -24.1404, 7.36255, 2.77" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "9.76597, 25.3746, -12.9408, 0.83", "12.0297, 27.4036, -15.8101, 0.83", "14.831, 29.6573, -18.3003, 0.83", "17.3422, 31.4747, -20.1495, 0.28", "18.6738, 32.3902, -21.0762, 0.83", "20.9866, 33.8927, -22.6079, 0.55", "25.8911, 36.8625, -25.6236, 0.55", "29.0769, 38.6011, -27.1427, 0.28", "30.5186, 39.3462, -27.7338, 0.83", "32.7541, 40.2689, -28.6717, 0.28", "34.757, 40.9809, -29.5497, 0.83", "36.9398, 41.5792, -30.5892, 0.28", "38.3762, 41.9724, -31.4869, 0.83", "40.485, 42.6639, -33.0658, 0.55", "42.8697, 43.5404, -34.9164, 0.55", "45.553, 44.6707, -37.2203, 0.28", "47.6642, 45.6316, -39.1093, 0.55", "51.2503, 47.4227, -42.5547, 0.28", "52.7936, 48.2359, -44.0527, 0.55", "53.3701, 48.5943, -44.7721, 0.55", "55.8059, 50.4728, -48.632, 0.28", "56.8055, 51.3874, -50.8175, 0.55", "57.6438, 52.2284, -52.8953, 0.28", "58.1307, 52.738, -54.248, 0.55", "60.397, 55.6011, -62.2523, 0.28", "60.9563, 56.4495, -64.7747, 0.55", "61.3839, 57.4375, -67.9303, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "9.76597, 25.3746, -12.9408, 0.55", "12.4115, 26.331, -11.6814, 0.55", "14.0646, 26.9189, -11.0082, 0.55", "17.2638, 28.0651, -9.67492, 0.55", "19.2272, 28.7391, -8.88748, 0.55", "19.8507, 28.9498, -8.65035, 0.55", "21.493, 29.5017, -8.06872, 0.55", "24.0083, 30.2969, -7.41278, 0.55", "26.1034, 30.966, -6.98146, 0.55", "27.2907, 31.3751, -6.77267, 0.55", "28.1124, 31.6693, -6.68839, 0.83", "29.0686, 32.0287, -6.60464, 0.55", "30.0012, 32.3972, -6.57119, 1.11", "32.3904, 33.4613, -6.55898, 0.55", "33.0928, 33.8118, -6.58225, 0.55", "34.2526, 34.5544, -6.60689, 0.55", "35.5533, 35.4803, -6.63503, 0.55", "36.7439, 36.3834, -6.68595, 0.55", "37.796, 37.1895, -6.76302, 0.55", "39.3597, 38.4261, -6.92333, 0.55", "41.8914, 40.4567, -7.32561, 0.55", "43.7785, 41.9254, -7.69008, 0.55", "46.0294, 43.5943, -8.29948, 0.55", "47.3795, 44.571, -8.7732, 0.28", "48.7437, 45.5025, -9.30413, 0.55", "50.5511, 46.657, -10.1573, 0.28", "52.9846, 48.0244, -11.3763, 0.28", "54.7234, 49.0049, -12.3043, 0.55", "56.0813, 49.7598, -12.9703, 0.55", "57.6389, 50.6603, -13.6473, 0.83", "59.6721, 51.7874, -14.4655, 0.28", "61.8342, 52.902, -14.9694, 0.28", "62.2578, 53.1545, -15.0111, 0.55", "63.8151, 54.0686, -14.7054, 0.28", "64.4308, 54.3823, -14.4947, 0.55", "70.3052, 56.7266, -14.5031, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.51769, 14.9413, -3.4376, 1.11", "-6.62629, 14.9933, -1.54579, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.51769, 14.9413, -3.4376, 0.83", "-4.01426, 17.0484, -5.66157, 0.83", "-3.44057, 19.6576, -8.23218, 0.83", "-2.70788, 23.7155, -11.5098, 0.83", "-1.95977, 28.3994, -14.7437, 0.83", "-0.978177, 34.1244, -18.5704, 0.83", "-0.330246, 37.8527, -21.0109, 0.83", "0.356585, 41.9247, -23.5089, 0.83", "1.70888, 50.458, -28.2408, 0.83", "2.59068, 56.7797, -31.5341, 0.83", "3.17484, 62.0417, -33.9131, 0.28", "3.24046, 62.6944, -34.17, 0.55", "4.04863, 71.0706, -37.4021, 0.55", "4.30331, 73.7468, -38.4097, 0.55", "4.70718, 78.8015, -40.2373, 0.28", "5.1716, 86.6622, -42.7083, 0.55", "5.32856, 91.222, -43.9279, 0.55", "5.41346, 94.3508, -44.7105, 0.28", "5.42901, 95.5956, -44.9777, 0.55", "5.4162, 99.0753, -45.6833, 0.28", "5.3501, 101.587, -46.127, 0.55", "5.07781, 107.037, -47.2651, 0.28", "4.94384, 108.989, -47.7394, 0.55", "4.7646, 112.695, -48.7944, 0.28", "4.71025, 114.19, -49.2959, 0.55", "4.66238, 117.896, -50.4943, 0.28", "4.68154, 120.213, -51.227, 0.55", "4.81217, 123.738, -52.3055, 0.28", "4.95776, 126.226, -53.0533, 0.55", "5.19909, 128.427, -53.7079, 0.55", "6.40076, 135.777, -55.5962, 0.28", "6.72855, 137.333, -55.9246, 0.55", "7.8879, 141.568, -56.8405, 0.28", "8.39107, 143.068, -57.1858, 0.55", "10.3318, 147.499, -58.627, 0.55", "12.386, 151.569, -60.1723, 0.28", "12.7239, 152.136, -60.4361, 0.55", "16.3039, 157.76, -63.1161, 0.28", "17.7175, 159.734, -64.1419, 0.28", "21.1112, 164.214, -66.8264, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.91058, -12.3299, -25.5211, 0.83", "6.10073, -13.125, -27.1636, 0.83", "7.88256, -14.0184, -29.1984, 0.83", "9.44208, -14.699, -30.8068, 0.83", "13.3247, -16.1469, -34.6425, 0.83", "15.3297, -16.8205, -36.6236, 0.83", "17.8371, -17.5698, -39.1786, 0.83", "22.0986, -18.5717, -43.5633, 0.28", "22.9701, -18.7163, -44.4985, 0.55", "26.2355, -19.1798, -48.0343, 0.28", "27.8276, -19.3755, -49.7459, 0.55", "30.649, -19.8175, -53.0447, 0.28", "31.453, -19.9711, -54.0783, 0.55", "34.2876, -20.5549, -58.1707, 0.55", "36.5076, -21.0746, -61.4999, 0.28", "37.2914, -21.2965, -62.6916, 0.55", "40.1505, -22.2288, -66.9744, 0.28", "40.3546, -22.3102, -67.2799, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.91058, -12.3299, -25.5211, 0.55", "6.51804, -16.3399, -36.1169, 0.55", "7.3633, -18.3835, -41.6233, 0.55", "8.52319, -21.2163, -49.2981, 0.55", "9.1774, -22.7626, -53.4259, 0.83", "10.2754, -25.1664, -59.7005, 0.28", "10.5503, -25.7593, -61.2085, 0.28", "10.7455, -26.1364, -62.0643, 0.55", "13.6653, -31.8939, -74.144, 0.28", "13.9174, -32.4085, -75.0986, 0.55", "14.9476, -34.4796, -78.6519, 0.28", "15.7121, -36.0725, -81.2333, 0.55", "16.9394, -38.6272, -85.3159, 0.28", "17.496, -39.7671, -87.0628, 0.55", "19.5248, -43.8932, -92.9758, 0.28", "19.9036, -44.6971, -94.1611, 0.55", "21.6016, -48.4414, -99.8376, 0.28", "22.4102, -50.1087, -102.555, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "24.062, -1.82421, -28.0577, 0.55", "27.1379, -0.309874, -29.9075, 0.55", "29.514, 0.847871, -31.234, 0.28", "31.0658, 1.60637, -32.1293, 0.83", "36.0696, 4.1981, -35.2303, 0.28", "36.2953, 4.31695, -35.3721, 0.55", "38.4051, 5.47533, -36.7426, 0.28", "40.6968, 6.80491, -38.4048, 0.28", "41.9049, 7.5292, -39.2615, 0.83", "44.8321, 9.34354, -41.049, 0.28", "45.3273, 9.66954, -41.3228, 0.83", "46.8531, 10.7861, -42.205, 0.28", "49.1679, 12.7455, -44.0044, 0.55", "49.9932, 13.386, -44.6404, 0.28", "50.8371, 13.99, -45.2443, 0.55", "54.6184, 16.3436, -47.5492, 0.28", "56.3488, 17.3193, -48.4898, 0.55", "62.4915, 20.4539, -51.1294, 0.55", "67.9486, 23.085, -53.0037, 0.28", "70.3487, 24.181, -53.5696, 0.55", "76.3834, 26.753, -54.3587, 0.28", "78.1899, 27.4478, -54.401, 0.55", "82.8904, 29.1228, -54.2081, 0.28", "85.2201, 29.9262, -53.897, 0.55", "89.9904, 31.6397, -53.1346, 0.28", "92.5119, 32.5551, -52.6347, 0.55", "95.6161, 33.7075, -51.9292, 0.28", "96.7186, 34.1127, -51.7097, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "24.062, -1.82421, -28.0577, 0.55", "26.3383, -1.03609, -29.0775, 0.55", "27.351, -0.548102, -29.9251, 0.55", "28.781, 0.0781753, -31.2484, 0.28", "29.3369, 0.324287, -31.813, 0.55", "31.1326, 1.21769, -33.9894, 0.55", "32.2239, 1.73654, -35.3799, 0.55", "34.8136, 2.96876, -39.0991, 0.55", "36.5478, 3.68908, -41.6683, 0.55", "38.2393, 4.23843, -44.1988, 0.55", "40.8562, 5.04689, -48.1396, 0.55", "42.3793, 5.44444, -50.3931, 0.55", "43.5192, 5.70041, -52.0533, 0.55", "45.5642, 5.98487, -54.9749, 0.28", "47.6995, 6.21963, -58.1255, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.9785, 12.931, -18.1389, 0.83", "-20.8308, 17.5432, -16.6635, 0.83", "-23.7957, 20.0621, -15.6599, 0.83", "-27.619, 23.2654, -14.1757, 0.55", "-31.8251, 26.605, -12.9412, 0.55", "-33.7295, 28.1004, -12.6142, 0.55", "-37.1756, 30.7569, -12.3593, 0.55", "-41.9596, 34.197, -12.6899, 0.55", "-44.8584, 36.232, -13.1671, 0.55", "-50.6236, 40.0981, -14.3963, 0.55", "-55.4154, 43.2694, -15.7249, 0.55", "-58.354, 45.161, -16.5592, 0.55", "-60.3224, 46.3922, -17.0948, 0.55", "-63.0635, 48.1168, -17.82, 0.83", "-66.5595, 50.0786, -18.4093, 0.28", "-68.186, 50.9906, -18.5745, 0.55", "-72.3504, 53.2867, -18.924, 0.55", "-76.7213, 55.8459, -19.4816, 0.55", "-78.4764, 56.9011, -19.764, 0.55", "-85.4331, 61.4137, -20.7629, 0.55", "-92.6718, 66.2955, -21.6854, 0.28", "-93.8745, 67.1343, -21.784, 0.55", "-104.159, 74.4324, -22.3485, 0.28", "-105.187, 75.194, -22.396, 0.55", "-110.721, 79.3177, -22.4026, 0.28", "-113.408, 81.4816, -22.1112, 0.55", "-118.13, 85.1865, -20.8569, 0.28", "-119.856, 86.5386, -20.2538, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.9785, 12.931, -18.1389, 0.55", "-18.1841, 14.7046, -22.177, 0.55", "-22.4175, 18.1305, -29.5581, 0.55", "-25.9543, 21.0659, -35.4246, 0.55", "-27.3878, 22.2872, -37.7603, 0.83", "-31.69, 26.0602, -44.6405, 0.28", "-33.7798, 27.9023, -47.8954, 0.55", "-35.8741, 29.7707, -51.1129, 0.28", "-36.8733, 30.6585, -52.4741, 0.55", "-38.0742, 31.7378, -54.063, 0.28", "-38.7669, 32.3483, -55.0584, 0.55", "-41.7385, 34.8168, -59.2883, 0.28", "-42.6739, 35.4606, -60.7764, 0.55", "-44.9902, 36.7998, -64.4214, 0.28", "-46.1684, 37.3849, -66.2759, 0.55", "-49.0762, 38.6363, -70.7764, 0.28", "-50.2732, 39.0613, -72.6035, 0.55", "-55.6063, 40.6527, -80.5804, 0.28", "-56.3601, 40.844, -81.7024, 0.55", "-59.3932, 41.5014, -85.978, 0.28", "-61.0143, 41.8206, -88.1301, 0.55", "-62.7621, 42.1747, -90.2129, 0.55", "-64.3467, 42.5661, -91.9513, 0.55", "-70.2693, 44.4787, -97.0756, 0.28", "-71.7042, 45.0178, -98.1937, 0.55", "-74.185, 46.0522, -99.9964, 0.28", "-75.2331, 46.537, -100.739, 0.55", "-78.3158, 48.0644, -103.326, 0.28", "-82.437, 50.1578, -107.07, 0.28", "-86.4833, 52.2801, -110.838, 0.83", "-90.7724, 54.5208, -115.309, 0.28", "-91.9067, 55.0845, -116.646, 0.55", "-98.1014, 58.0071, -124.803, 0.28", "-98.5891, 58.2085, -125.555, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.37961, -3.96568, 15.3936, 0.83", "8.97077, -5.85746, 17.64, 0.83", "10.2941, -7.43088, 19.5083, 0.83", "11.1245, -8.41814, 20.6806, 0.83", "13.674, -11.4494, 24.28, 0.83", "14.8576, -12.8566, 25.951, 0.83", "17.2491, -15.6999, 29.3273, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.37961, -3.96568, 15.3936, 0.83", "8.22429, -4.73815, 16.8329, 0.83", "9.99764, -6.13246, 19.7499, 0.83", "13.8911, -9.20572, 26.7567, 0.83", "15.0849, -10.119, 28.9616, 0.83", "16.2516, -10.9643, 31.1197, 0.83", "17.9645, -12.0801, 34.291, 0.83", "19.1319, -12.7933, 36.547, 0.83", "21.8152, -14.1553, 41.7162, 0.55", "22.3342, -14.3596, 42.8033, 0.55", "23.3227, -14.7347, 44.8827, 0.83", "25.212, -15.3771, 48.8313, 0.55", "28.9247, -16.7339, 57.26, 0.55", "34.2353, -17.3959, 64.8785, 0.55", "39.9241, -18.7757, 72.1294, 0.55", "45.7973, -19.7849, 79.29, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.07426, -42.6856, 3.55983, 0.83", "11.9892, -57.3996, 3.55983, 0.83", "14.9042, -72.1137, 3.55983, 0.83" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-0.979112, -24.1404, 7.36255, 0.83", "-4.73106, -27.3148, 7.75865, 0.83", "-6.59333, -28.9539, 8.01365, 0.55", "-9.62165, -31.7277, 8.61189, 0.55", "-13.3538, -35.2373, 9.48762, 0.55", "-16.9995, -38.7838, 10.3804, 0.55", "-20.4525, -42.1827, 11.2569, 0.55", "-23.5794, -45.4101, 12.2123, 0.55", "-26.1048, -48.0009, 12.9999, 0.55", "-27.709, -49.6651, 13.5041, 0.55", "-30.3227, -52.4071, 14.2678, 0.28", "-30.7024, -52.7917, 14.3497, 1.11", "-32.8563, -54.7461, 14.6429, 0.55", "-34.3003, -55.935, 14.7586, 0.55", "-35.8021, -57.0257, 14.7676, 0.28", "-37.2195, -57.866, 14.7853, 0.55", "-38.3957, -58.4408, 14.7781, 0.28", "-38.9375, -58.6715, 14.7882, 0.55", "-40.3536, -59.1197, 14.8728, 0.28", "-41.4902, -59.392, 14.949, 0.55", "-43.5638, -59.7371, 15.0997, 0.28", "-45.9842, -60.0932, 15.2823, 0.55", "-48.2083, -60.5058, 15.4477, 0.28", "-49.9422, -60.817, 15.5611, 0.55" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-0.979112, -24.1404, 7.36255, 0.83", "-6.11563, -27.7125, 14.9006, 0.83", "-8.04071, -28.9856, 17.6212, 0.83", "-9.9633, -30.1434, 20.2472, 0.83", "-11.282, -30.9243, 22.0293, 0.83", "-12.8192, -31.7904, 23.9996, 0.83", "-15.1673, -33.0787, 26.9498, 0.83", "-16.94, -33.9792, 29.0529, 0.83", "-20.1017, -35.7034, 32.7472, 0.83", "-21.981, -36.8532, 34.9416, 0.83", "-23.8668, -38.0751, 37.1774, 0.83", "-25.9856, -39.4989, 39.767, 0.83", "-27.2617, -40.4081, 41.3627, 0.83", "-28.6339, -41.5117, 43.0647, 0.83", "-29.8089, -42.7028, 44.5834, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-0.979112, -24.1404, 7.36255, 1.66", "-0.273482, -27.2748, 8.09681, 1.66", "0.321377, -29.9171, 8.7158, 1.39" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.62629, 14.9933, -1.54579, 0.83", "-9.55759, 16.7492, 0.932688, 0.83", "-11.5864, 18.3242, 2.55613, 0.55", "-12.6003, 19.148, 3.3102, 0.83", "-15.2611, 21.4187, 5.00675, 0.55", "-17.9669, 23.6764, 6.49042, 0.55", "-22.5429, 27.3818, 8.82451, 0.55", "-28.1983, 31.9234, 10.9596, 0.55", "-29.9197, 33.238, 11.4676, 0.55", "-34.6463, 36.5983, 12.2726, 0.55", "-38.4428, 39.0687, 12.4522, 0.55", "-42.7816, 41.6374, 12.4056, 0.55", "-49.5125, 45.0866, 12.0752, 0.55", "-54.3145, 47.1999, 11.9189, 0.55", "-59.4689, 49.3591, 12.0561, 0.55", "-64.7355, 51.4134, 12.6149, 0.55", "-68.9291, 53.0384, 13.3067, 0.55", "-71.8629, 54.1255, 14.1062, 0.55", "-75.1299, 55.249, 15.5881, 0.55", "-78.1752, 56.2203, 17.1129, 0.28", "-81.2002, 57.2024, 18.9316, 0.28", "-82.6894, 57.6951, 19.8799, 0.55", "-85.9172, 58.7188, 21.7098, 0.28", "-91.1121, 60.2423, 24.3732, 0.55", "-95.6506, 61.43, 26.2405, 0.55", "-103.695, 67.1764, 29.8726, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.62629, 14.9933, -1.54579, 0.28", "-7.13976, 15.6355, -0.0819336, 0.28", "-7.90335, 16.5907, 2.09502, 0.28", "-10.2227, 19.4918, 8.70715, 0.55", "-11.8938, 21.5821, 13.4713, 0.55", "-13.5156, 23.6108, 18.0949, 0.55", "-14.3941, 24.7097, 20.5996, 0.55", "-15.5168, 27.2752, 29.166, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "17.2491, -15.6999, 29.3273, 0.55", "17.8767, -18.6132, 29.2713, 0.55", "18.5712, -21.68, 29.1921, 0.55", "18.8454, -22.8404, 29.1791, 0.55", "19.3657, -25.281, 29.1691, 0.55", "19.6627, -27.0439, 29.3045, 0.55", "20.168, -30.226, 29.6785, 0.55", "20.3946, -31.9579, 29.9369, 0.55", "20.5204, -33.2385, 30.1758, 0.55", "20.7218, -35.7029, 30.6826, 0.55", "21.028, -40.1121, 31.6965, 0.55", "21.1771, -43.7826, 32.6606, 0.55", "21.1691, -44.9842, 33.0043, 0.28", "21.1536, -45.5303, 33.1603, 0.55", "20.9528, -51.2575, 34.731, 0.28", "20.9354, -51.8268, 34.8798, 0.55", "20.8223, -54.226, 35.3261, 0.28", "20.691, -55.1951, 35.558, 0.28", "20.483, -61.4074, 37.238, 0.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "17.2491, -15.6999, 29.3273, 0.55", "21.2574, -15.1898, 31.6105, 0.55", "22.9992, -14.9537, 32.6461, 0.55", "24.3361, -14.7041, 33.4608, 0.55", "25.7991, -14.3702, 34.4081, 0.55", "29.9903, -13.2899, 37.2742, 0.55", "32.7691, -12.4331, 39.2866, 0.55", "33.8128, -12.0121, 40.1754, 0.83", "36.7237, -10.7309, 42.7304, 0.55", "40.0872, -9.18065, 45.8558, 0.55", "41.4531, -8.51156, 47.1901, 0.83", "45.2876, -6.39778, 51.0328, 0.55", "48.964, -4.29086, 54.7598, 1.39", "58.7939, -0.138558, 61.8673, 1.39", "69.0035, 3.63934, 68.6324, 1.39", "79.9995, 4.73306, 75.0559, 1.39", "91.346, 3.54188, 80.788, 1.39", "102.98, 5.14155, 85.8591, 1.39" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-29.8089, -42.7028, 44.5834, 0.55", "-32.1555, -43.5124, 45.6533, 0.55", "-35.2115, -44.5669, 47.0467, 0.55", "-37.9847, -45.5237, 48.3111, 0.55", "-41.0042, -46.5655, 49.6878, 0.55", "-44.7597, -47.8613, 51.4001, 0.55", "-50.2916, -49.77, 53.9223, 0.55" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-29.8089, -42.7028, 44.5834, 0.55", "-28.9701, -45.8434, 47.023, 0.55", "-28.2088, -48.6935, 49.237, 0.55", "-27.4804, -51.4205, 51.3553, 0.55" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "0.321377, -29.9171, 8.7158, 0.55", "-0.0219461, -30.6345, 10.4211, 0.55", "-0.22238, -31.0104, 11.369, 0.55", "-0.990796, -32.2726, 14.7168, 0.83", "-1.63368, -33.3561, 17.5816, 0.83", "-2.52052, -34.83, 21.4473, 0.83", "-3.06233, -35.7157, 23.7287, 0.83", "-3.46226, -36.3905, 25.4097, 0.83", "-3.91621, -37.1257, 27.2468, 0.83", "-4.50663, -38.0108, 29.33, 0.83", "-4.9523, -38.6025, 30.5957, 0.83", "-5.61524, -39.4982, 32.2887, 0.83", "-6.37629, -40.5909, 34.204, 0.83", "-7.03517, -41.5573, 35.8283, 0.83", "-7.42493, -42.1279, 36.7489, 0.83", "-8.50473, -43.5604, 39.0589, 0.83", "-9.28528, -44.6282, 40.7663, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "0.321377, -29.9171, 8.7158, 1.11", "0.178942, -37.6673, 8.36033, 1.11", "0.11341, -41.233, 8.19679, 1.11", "-0.0211296, -48.5537, 7.86104, 1.11", "-0.100503, -52.8726, 7.66295, 1.11", "-0.142243, -55.1438, 7.55878, 1.11", "-0.173089, -56.8222, 7.4818, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-15.5168, 27.2752, 29.166, 0.28", "-16.4207, 33.4084, 39.5446, 0.28", "-16.1769, 37.9385, 50.7145, 0.28", "-14.8461, 44.4951, 60.7687, 0.28", "-12.524, 50.5369, 70.9466, 0.28", "-11.1736, 57.2374, 80.9055, 0.28", "-12.0111, 64.8522, 90.2977, 0.28" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-15.5168, 27.2752, 29.166, 0.83", "-17.7193, 32.2849, 40.4502, 0.28", "-20.2726, 37.6176, 51.5197, 0.28", "-21.125, 44.674, 61.8939, 0.28", "-21.8882, 53.4771, 70.9087, 0.28", "-25.5908, 62.3035, 79.1866, 0.28", "-27.1356, 71.9271, 87.2633, 0.28", "-28.1078, 80.7641, 96.2289, 0.28" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-0.173089, -56.8222, 7.4818, 1.11", "-0.502303, -60.8925, 7.93814, 1.11", "-0.722596, -64.4717, 8.3169, 1.11", "-1.08871, -70.5453, 8.71856, 1.11", "-1.18426, -72.6799, 8.78922, 1.11", "-1.31581, -76.1429, 8.93154, 1.11", "-1.36854, -81.2476, 9.15676, 1.11", "-1.34133, -83.1007, 9.21539, 1.11", "-1.23675, -86.4605, 9.41182, 1.11", "-0.856192, -93.5761, 9.98727, 1.11", "-0.617764, -96.8953, 10.3246, 1.11", "-0.294848, -100.881, 10.8318, 1.11", "-0.168377, -102.462, 11.08, 1.11", "0.0977769, -106.459, 11.8909, 1.11", "0.350548, -109.449, 12.6071, 1.11", "0.866967, -114.929, 13.9238, 1.11", "1.13742, -118.543, 14.5915, 1.11", "1.27081, -120.612, 14.9027, 1.11", "1.47256, -123.827, 15.2634, 1.11", "1.77797, -128.19, 15.6886, 1.11", "1.99426, -131.387, 15.9833, 1.11", "2.7356, -142.257, 16.9608, 1.11", "3.13325, -147.319, 17.4079, 1.11", "3.49103, -151.36, 17.7738, 1.11", "3.94445, -155.917, 18.1646, 1.11", "4.40633, -161.482, 18.7422, 0.83", "4.68386, -164.427, 19.1066, 0.83", "4.97563, -166.623, 19.423, 0.83", "5.24938, -168.7, 19.7683, 0.83", "5.65386, -171.713, 20.2977, 0.83", "6.01138, -174.726, 20.8764, 0.83", "6.28208, -177.079, 21.4561, 0.83", "6.48939, -178.759, 21.9123, 0.83", "6.87956, -182.461, 22.9539, 0.83", "7.78446, -190.652, 25.3915, 0.83", "8.15548, -193.75, 26.3253, 0.83", "8.53903, -196.499, 27.1598, 0.83", "8.88957, -198.908, 27.9425, 0.83", "9.35826, -201.74, 28.9485, 0.83", "9.89704, -204.869, 30.1245, 0.83", "10.352, -207.224, 31.1161, 0.83", "10.8413, -209.647, 32.1541, 0.83", "11.8695, -214.286, 34.25, 0.83", "12.6104, -217.448, 35.6297, 0.83", "13.4148, -220.568, 36.9211, 0.83", "14.0584, -223.337, 37.9158, 0.83", "14.7002, -226.248, 38.8624, 0.83", "15.1979, -228.79, 39.5206, 0.83", "16.0545, -234.325, 40.4831, 0.83", "16.7354, -238.558, 40.9284, 0.83", "17.2202, -241.42, 41.1009, 0.83", "18.08, -246.704, 41.2771, 0.83", "18.8377, -250.801, 41.3978, 0.83", "19.4748, -254.306, 41.4765, 0.83", "20.4441, -259.265, 41.6132, 0.55", "20.7836, -260.833, 41.6339, 0.55", "22.6877, -267.928, 41.7305, 0.55", "23.5222, -270.744, 41.6825, 0.55" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-0.173089, -56.8222, 7.4818, 0.83", "0.359846, -64.8974, 9.6269, 0.83", "0.401313, -66.48, 10.0315, 0.83", "0.440771, -69.2977, 10.7599, 0.83", "0.457799, -70.9512, 11.1576, 0.83", "0.563941, -75.1861, 12.1133, 0.83", "0.736738, -80.0504, 13.2457, 0.83", "0.96587, -85.5952, 14.1559, 0.83", "1.12053, -89.484, 14.9289, 0.83", "1.21676, -93.39, 15.9473, 0.83", "1.32281, -98.1505, 17.526, 0.83", "1.35436, -100.716, 18.6101, 0.83", "1.406, -103.687, 20.2189, 0.83", "1.45135, -106.887, 22.0888, 0.83", "1.43383, -110.922, 24.8312, 0.55", "1.3458, -113.26, 26.7635, 0.55", "1.17243, -115.011, 28.5097, 0.55", "0.89803, -117.144, 30.8869, 0.55" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "23.5222, -270.744, 41.6825, 0.28", "26.1428, -270.454, 42.6768, 0.28", "26.425, -270.423, 42.7839, 0.55", "28.1094, -270.236, 43.4231, 0.28", "29.6657, -270.064, 44.0135, 0.83" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "23.5222, -270.744, 41.6825, 0.83", "22.3796, -274.092, 41.9479, 0.83", "20.3036, -280.175, 42.4302, 0.55", "19.2494, -283.265, 42.675, 0.55", "18.67, -284.963, 42.8096, 0.55", "17.4351, -288.581, 43.0965, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_21", "dend_14", "dend_11", "dend_8", "dend_5", "dend_0", "apic_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "apic_12", "apic_9", "apic_2", "dend_20", "dend_17", "dend_4", "dend_3", "apic_11", "apic_10", "apic_8", "apic_3", "dend_19", "dend_18", "apic_5", "apic_4", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_21", "dend_14", "dend_11", "dend_8", "dend_5", "dend_0", "apic_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "apic_12", "apic_9", "apic_2", "dend_20", "dend_17", "dend_4", "dend_3", "apic_11", "apic_10", "apic_8", "apic_3", "dend_19", "dend_18", "apic_5", "apic_4", "apic_7", "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "axon_0", "axon_0", "apic_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_2", "apic_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_SBC_1361ded4e5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_12, id: apic_12, parent: apic_1
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_1
create apic_9
public apic_9
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_8, id: apic_8, parent: apic_2
create apic_8
public apic_8
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, axon_0, axon_0, apic_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999996567799549)
    connect dend_21(0), soma_0(0.4999996567799549)
    connect dend_14(0), soma_0(0.4999996567799549)
    connect dend_11(0), soma_0(0.4999996567799549)
    connect dend_8(0), soma_0(0.4999996567799549)
    connect dend_5(0), soma_0(0.4999996567799549)
    connect dend_0(0), soma_0(0.4999996567799549)
    connect axon_0(0), soma_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_12(0), apic_1(1.0)
    connect apic_9(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_8(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.33595, 9.86266, -2.58258, 3.10392 ) }
    soma_0 { pt3dadd( -1.10693, 8.70666, -2.27545, 5.13149 ) }
    soma_0 { pt3dadd( -0.877919, 7.55065, -1.96833, 5.9409 ) }
    soma_0 { pt3dadd( -0.648905, 6.39464, -1.66121, 6.21705 ) }
    soma_0 { pt3dadd( -0.419891, 5.23864, -1.35409, 6.94548 ) }
    soma_0 { pt3dadd( -0.190877, 4.08263, -1.04697, 7.90278 ) }
    soma_0 { pt3dadd( 0.0381366, 2.92662, -0.739853, 8.68773 ) }
    soma_0 { pt3dadd( 0.267151, 1.77062, -0.432733, 9.13726 ) }
    soma_0 { pt3dadd( 0.496164, 0.614609, -0.125613, 9.57756 ) }
    soma_0 { pt3dadd( 0.725178, -0.541398, 0.181507, 10.0179 ) }
    soma_0 { pt3dadd( 0.954192, -1.69741, 0.488628, 10.4496 ) }
    soma_0 { pt3dadd( 1.18321, -2.85341, 0.795748, 10.783 ) }
    soma_0 { pt3dadd( 1.41222, -4.00942, 1.10287, 11.0771 ) }
    soma_0 { pt3dadd( 1.64123, -5.16543, 1.40999, 10.6686 ) }
    soma_0 { pt3dadd( 1.87025, -6.32143, 1.71711, 9.98139 ) }
    soma_0 { pt3dadd( 2.09926, -7.47744, 2.02423, 9.29419 ) }
    soma_0 { pt3dadd( 2.32828, -8.63345, 2.33135, 8.60698 ) }
    soma_0 { pt3dadd( 2.55729, -9.78945, 2.63847, 7.32288 ) }
    soma_0 { pt3dadd( 2.7863, -10.9455, 2.94559, 6.0067 ) }
    soma_0 { pt3dadd( 3.01532, -12.1015, 3.25271, 3.27186 ) }
    soma_0 { pt3dadd( 3.24433, -13.2575, 3.55983, 2.03515 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.869971, -13.5197, 3.91359, 2.77 ) }
    apic_0 { pt3dadd( 0.463739, -15.9251, 3.95848, 2.22 ) }
    apic_0 { pt3dadd( -0.118596, -19.3732, 4.02281, 2.49 ) }
    apic_0 { pt3dadd( -0.621218, -22.3494, 4.07835, 2.77 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 25/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.909968, 10.4858, -2.65641, 1.94 ) }
    dend_21 { pt3dadd( 2.49793, 13.1555, -4.5005, 1.94 ) }
    dend_21 { pt3dadd( 4.98138, 17.3307, -7.38452, 1.11 ) }
    dend_21 { pt3dadd( 6.82522, 20.4305, -9.52576, 0.83 ) }
    dend_21 { pt3dadd( 9.76597, 25.3746, -12.9408, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 30/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.44003, 10.045, -5.44641, 1.11 ) }
    dend_14 { pt3dadd( -4.15962, 14.0974, -3.7838, 1.11 ) }
    dend_14 { pt3dadd( -4.51769, 14.9413, -3.4376, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.58997, -7.12372, -9.93641, 1.11 ) }
    dend_11 { pt3dadd( 3.71246, -7.60663, -11.382, 1.11 ) }
    dend_11 { pt3dadd( 4.00507, -8.76018, -14.8351, 1.11 ) }
    dend_11 { pt3dadd( 4.40107, -10.3213, -19.5083, 1.11 ) }
    dend_11 { pt3dadd( 4.63057, -11.226, -22.2166, 1.11 ) }
    dend_11 { pt3dadd( 4.91058, -12.3299, -25.5211, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.05997, -2.00897, -13.4864, 1.39 ) }
    dend_8 { pt3dadd( 5.2757, -1.85737, -14.7703, 1.39 ) }
    dend_8 { pt3dadd( 7.8787, -1.67502, -17.1561, 1.11 ) }
    dend_8 { pt3dadd( 10.5296, -1.59598, -19.2501, 1.11 ) }
    dend_8 { pt3dadd( 12.9595, -1.55414, -20.993, 1.11 ) }
    dend_8 { pt3dadd( 15.4054, -1.51202, -22.7474, 0.83 ) }
    dend_8 { pt3dadd( 17.4751, -1.47638, -24.2319, 0.83 ) }
    dend_8 { pt3dadd( 20.2514, -1.52666, -26.1691, 0.83 ) }
    dend_8 { pt3dadd( 21.9787, -1.66734, -27.1749, 0.83 ) }
    dend_8 { pt3dadd( 24.062, -1.82421, -28.0577, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.70003, 8.71253, -8.35641, 1.39 ) }
    dend_5 { pt3dadd( -6.66265, 9.44661, -10.0587, 1.11 ) }
    dend_5 { pt3dadd( -8.78195, 10.2393, -11.8969, 1.11 ) }
    dend_5 { pt3dadd( -10.0502, 10.7137, -12.9969, 1.11 ) }
    dend_5 { pt3dadd( -12.7323, 11.7169, -15.3232, 1.11 ) }
    dend_5 { pt3dadd( -15.9785, 12.931, -18.1389, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.58997, -3.12622, 15.3936, 1.66 ) }
    dend_0 { pt3dadd( 7.37961, -3.96568, 15.3936, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 57/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.24433, -13.2575, 3.55983, 0.83 ) }
    axon_0 { pt3dadd( 6.15929, -27.9715, 3.55983, 0.83 ) }
    axon_0 { pt3dadd( 9.07426, -42.6856, 3.55983, 0.83 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 60/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -0.621218, -22.3494, 4.07835, 2.77 ) }
    apic_1 { pt3dadd( -0.979112, -24.1404, 7.36255, 2.77 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 9.76597, 25.3746, -12.9408, 0.83 ) }
    dend_23 { pt3dadd( 12.0297, 27.4036, -15.8101, 0.83 ) }
    dend_23 { pt3dadd( 14.831, 29.6573, -18.3003, 0.83 ) }
    dend_23 { pt3dadd( 17.3422, 31.4747, -20.1495, 0.28 ) }
    dend_23 { pt3dadd( 18.6738, 32.3902, -21.0762, 0.83 ) }
    dend_23 { pt3dadd( 20.9866, 33.8927, -22.6079, 0.55 ) }
    dend_23 { pt3dadd( 25.8911, 36.8625, -25.6236, 0.55 ) }
    dend_23 { pt3dadd( 29.0769, 38.6011, -27.1427, 0.28 ) }
    dend_23 { pt3dadd( 30.5186, 39.3462, -27.7338, 0.83 ) }
    dend_23 { pt3dadd( 32.7541, 40.2689, -28.6717, 0.28 ) }
    dend_23 { pt3dadd( 34.757, 40.9809, -29.5497, 0.83 ) }
    dend_23 { pt3dadd( 36.9398, 41.5792, -30.5892, 0.28 ) }
    dend_23 { pt3dadd( 38.3762, 41.9724, -31.4869, 0.83 ) }
    dend_23 { pt3dadd( 40.485, 42.6639, -33.0658, 0.55 ) }
    dend_23 { pt3dadd( 42.8697, 43.5404, -34.9164, 0.55 ) }
    dend_23 { pt3dadd( 45.553, 44.6707, -37.2203, 0.28 ) }
    dend_23 { pt3dadd( 47.6642, 45.6316, -39.1093, 0.55 ) }
    dend_23 { pt3dadd( 51.2503, 47.4227, -42.5547, 0.28 ) }
    dend_23 { pt3dadd( 52.7936, 48.2359, -44.0527, 0.55 ) }
    dend_23 { pt3dadd( 53.3701, 48.5943, -44.7721, 0.55 ) }
    dend_23 { pt3dadd( 55.8059, 50.4728, -48.632, 0.28 ) }
    dend_23 { pt3dadd( 56.8055, 51.3874, -50.8175, 0.55 ) }
    dend_23 { pt3dadd( 57.6438, 52.2284, -52.8953, 0.28 ) }
    dend_23 { pt3dadd( 58.1307, 52.738, -54.248, 0.55 ) }
    dend_23 { pt3dadd( 60.397, 55.6011, -62.2523, 0.28 ) }
    dend_23 { pt3dadd( 60.9563, 56.4495, -64.7747, 0.55 ) }
    dend_23 { pt3dadd( 61.3839, 57.4375, -67.9303, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 89/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 9.76597, 25.3746, -12.9408, 0.55 ) }
    dend_22 { pt3dadd( 12.4115, 26.331, -11.6814, 0.55 ) }
    dend_22 { pt3dadd( 14.0646, 26.9189, -11.0082, 0.55 ) }
    dend_22 { pt3dadd( 17.2638, 28.0651, -9.67492, 0.55 ) }
    dend_22 { pt3dadd( 19.2272, 28.7391, -8.88748, 0.55 ) }
    dend_22 { pt3dadd( 19.8507, 28.9498, -8.65035, 0.55 ) }
    dend_22 { pt3dadd( 21.493, 29.5017, -8.06872, 0.55 ) }
    dend_22 { pt3dadd( 24.0083, 30.2969, -7.41278, 0.55 ) }
    dend_22 { pt3dadd( 26.1034, 30.966, -6.98146, 0.55 ) }
    dend_22 { pt3dadd( 27.2907, 31.3751, -6.77267, 0.55 ) }
    dend_22 { pt3dadd( 28.1124, 31.6693, -6.68839, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 29.0686, 32.0287, -6.60464, 0.55 ) }
    dend_22 { pt3dadd( 30.0012, 32.3972, -6.57119, 1.11 ) }
    dend_22 { pt3dadd( 32.3904, 33.4613, -6.55898, 0.55 ) }
    dend_22 { pt3dadd( 33.0928, 33.8118, -6.58225, 0.55 ) }
    dend_22 { pt3dadd( 34.2526, 34.5544, -6.60689, 0.55 ) }
    dend_22 { pt3dadd( 35.5533, 35.4803, -6.63503, 0.55 ) }
    dend_22 { pt3dadd( 36.7439, 36.3834, -6.68595, 0.55 ) }
    dend_22 { pt3dadd( 37.796, 37.1895, -6.76302, 0.55 ) }
    dend_22 { pt3dadd( 39.3597, 38.4261, -6.92333, 0.55 ) }
    dend_22 { pt3dadd( 41.8914, 40.4567, -7.32561, 0.55 ) }
    dend_22 { pt3dadd( 43.7785, 41.9254, -7.69008, 0.55 ) }
    dend_22 { pt3dadd( 46.0294, 43.5943, -8.29948, 0.55 ) }
    dend_22 { pt3dadd( 47.3795, 44.571, -8.7732, 0.28 ) }
    dend_22 { pt3dadd( 48.7437, 45.5025, -9.30413, 0.55 ) }
    dend_22 { pt3dadd( 50.5511, 46.657, -10.1573, 0.28 ) }
    dend_22 { pt3dadd( 52.9846, 48.0244, -11.3763, 0.28 ) }
    dend_22 { pt3dadd( 54.7234, 49.0049, -12.3043, 0.55 ) }
    dend_22 { pt3dadd( 56.0813, 49.7598, -12.9703, 0.55 ) }
    dend_22 { pt3dadd( 57.6389, 50.6603, -13.6473, 0.83 ) }
    dend_22 { pt3dadd( 59.6721, 51.7874, -14.4655, 0.28 ) }
    dend_22 { pt3dadd( 61.8342, 52.902, -14.9694, 0.28 ) }
    dend_22 { pt3dadd( 62.2578, 53.1545, -15.0111, 0.55 ) }
    dend_22 { pt3dadd( 63.8151, 54.0686, -14.7054, 0.28 ) }
    dend_22 { pt3dadd( 64.4308, 54.3823, -14.4947, 0.55 ) }
    dend_22 { pt3dadd( 70.3052, 56.7266, -14.5031, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.51769, 14.9413, -3.4376, 1.11 ) }
    dend_16 { pt3dadd( -6.62629, 14.9933, -1.54579, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.51769, 14.9413, -3.4376, 0.83 ) }
    dend_15 { pt3dadd( -4.01426, 17.0484, -5.66157, 0.83 ) }
    dend_15 { pt3dadd( -3.44057, 19.6576, -8.23218, 0.83 ) }
    dend_15 { pt3dadd( -2.70788, 23.7155, -11.5098, 0.83 ) }
    dend_15 { pt3dadd( -1.95977, 28.3994, -14.7437, 0.83 ) }
    dend_15 { pt3dadd( -0.978177, 34.1244, -18.5704, 0.83 ) }
    dend_15 { pt3dadd( -0.330246, 37.8527, -21.0109, 0.83 ) }
    dend_15 { pt3dadd( 0.356585, 41.9247, -23.5089, 0.83 ) }
    dend_15 { pt3dadd( 1.70888, 50.458, -28.2408, 0.83 ) }
    dend_15 { pt3dadd( 2.59068, 56.7797, -31.5341, 0.83 ) }
    dend_15 { pt3dadd( 3.17484, 62.0417, -33.9131, 0.28 ) }
    dend_15 { pt3dadd( 3.24046, 62.6944, -34.17, 0.55 ) }
    dend_15 { pt3dadd( 4.04863, 71.0706, -37.4021, 0.55 ) }
    dend_15 { pt3dadd( 4.30331, 73.7468, -38.4097, 0.55 ) }
    dend_15 { pt3dadd( 4.70718, 78.8015, -40.2373, 0.28 ) }
    dend_15 { pt3dadd( 5.1716, 86.6622, -42.7083, 0.55 ) }
    dend_15 { pt3dadd( 5.32856, 91.222, -43.9279, 0.55 ) }
    dend_15 { pt3dadd( 5.41346, 94.3508, -44.7105, 0.28 ) }
    dend_15 { pt3dadd( 5.42901, 95.5956, -44.9777, 0.55 ) }
    dend_15 { pt3dadd( 5.4162, 99.0753, -45.6833, 0.28 ) }
    dend_15 { pt3dadd( 5.3501, 101.587, -46.127, 0.55 ) }
    dend_15 { pt3dadd( 5.07781, 107.037, -47.2651, 0.28 ) }
    dend_15 { pt3dadd( 4.94384, 108.989, -47.7394, 0.55 ) }
    dend_15 { pt3dadd( 4.7646, 112.695, -48.7944, 0.28 ) }
    dend_15 { pt3dadd( 4.71025, 114.19, -49.2959, 0.55 ) }
    dend_15 { pt3dadd( 4.66238, 117.896, -50.4943, 0.28 ) }
    dend_15 { pt3dadd( 4.68154, 120.213, -51.227, 0.55 ) }
    dend_15 { pt3dadd( 4.81217, 123.738, -52.3055, 0.28 ) }
    dend_15 { pt3dadd( 4.95776, 126.226, -53.0533, 0.55 ) }
    dend_15 { pt3dadd( 5.19909, 128.427, -53.7079, 0.55 ) }
    dend_15 { pt3dadd( 6.40076, 135.777, -55.5962, 0.28 ) }
    dend_15 { pt3dadd( 6.72855, 137.333, -55.9246, 0.55 ) }
    dend_15 { pt3dadd( 7.8879, 141.568, -56.8405, 0.28 ) }
    dend_15 { pt3dadd( 8.39107, 143.068, -57.1858, 0.55 ) }
    dend_15 { pt3dadd( 10.3318, 147.499, -58.627, 0.55 ) }
    dend_15 { pt3dadd( 12.386, 151.569, -60.1723, 0.28 ) }
    dend_15 { pt3dadd( 12.7239, 152.136, -60.4361, 0.55 ) }
    dend_15 { pt3dadd( 16.3039, 157.76, -63.1161, 0.28 ) }
    dend_15 { pt3dadd( 17.7175, 159.734, -64.1419, 0.28 ) }
    dend_15 { pt3dadd( 21.1112, 164.214, -66.8264, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.91058, -12.3299, -25.5211, 0.83 ) }
    dend_13 { pt3dadd( 6.10073, -13.125, -27.1636, 0.83 ) }
    dend_13 { pt3dadd( 7.88256, -14.0184, -29.1984, 0.83 ) }
    dend_13 { pt3dadd( 9.44208, -14.699, -30.8068, 0.83 ) }
    dend_13 { pt3dadd( 13.3247, -16.1469, -34.6425, 0.83 ) }
    dend_13 { pt3dadd( 15.3297, -16.8205, -36.6236, 0.83 ) }
    dend_13 { pt3dadd( 17.8371, -17.5698, -39.1786, 0.83 ) }
    dend_13 { pt3dadd( 22.0986, -18.5717, -43.5633, 0.28 ) }
    dend_13 { pt3dadd( 22.9701, -18.7163, -44.4985, 0.55 ) }
    dend_13 { pt3dadd( 26.2355, -19.1798, -48.0343, 0.28 ) }
    dend_13 { pt3dadd( 27.8276, -19.3755, -49.7459, 0.55 ) }
    dend_13 { pt3dadd( 30.649, -19.8175, -53.0447, 0.28 ) }
    dend_13 { pt3dadd( 31.453, -19.9711, -54.0783, 0.55 ) }
    dend_13 { pt3dadd( 34.2876, -20.5549, -58.1707, 0.55 ) }
    dend_13 { pt3dadd( 36.5076, -21.0746, -61.4999, 0.28 ) }
    dend_13 { pt3dadd( 37.2914, -21.2965, -62.6916, 0.55 ) }
    dend_13 { pt3dadd( 40.1505, -22.2288, -66.9744, 0.28 ) }
    dend_13 { pt3dadd( 40.3546, -22.3102, -67.2799, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.91058, -12.3299, -25.5211, 0.55 ) }
    dend_12 { pt3dadd( 6.51804, -16.3399, -36.1169, 0.55 ) }
    dend_12 { pt3dadd( 7.3633, -18.3835, -41.6233, 0.55 ) }
    dend_12 { pt3dadd( 8.52319, -21.2163, -49.2981, 0.55 ) }
    dend_12 { pt3dadd( 9.1774, -22.7626, -53.4259, 0.83 ) }
    dend_12 { pt3dadd( 10.2754, -25.1664, -59.7005, 0.28 ) }
    dend_12 { pt3dadd( 10.5503, -25.7593, -61.2085, 0.28 ) }
    dend_12 { pt3dadd( 10.7455, -26.1364, -62.0643, 0.55 ) }
    dend_12 { pt3dadd( 13.6653, -31.8939, -74.144, 0.28 ) }
    dend_12 { pt3dadd( 13.9174, -32.4085, -75.0986, 0.55 ) }
    dend_12 { pt3dadd( 14.9476, -34.4796, -78.6519, 0.28 ) }
    dend_12 { pt3dadd( 15.7121, -36.0725, -81.2333, 0.55 ) }
    dend_12 { pt3dadd( 16.9394, -38.6272, -85.3159, 0.28 ) }
    dend_12 { pt3dadd( 17.496, -39.7671, -87.0628, 0.55 ) }
    dend_12 { pt3dadd( 19.5248, -43.8932, -92.9758, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( 19.9036, -44.6971, -94.1611, 0.55 ) }
    dend_12 { pt3dadd( 21.6016, -48.4414, -99.8376, 0.28 ) }
    dend_12 { pt3dadd( 22.4102, -50.1087, -102.555, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 3/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 24.062, -1.82421, -28.0577, 0.55 ) }
    dend_10 { pt3dadd( 27.1379, -0.309874, -29.9075, 0.55 ) }
    dend_10 { pt3dadd( 29.514, 0.847871, -31.234, 0.28 ) }
    dend_10 { pt3dadd( 31.0658, 1.60637, -32.1293, 0.83 ) }
    dend_10 { pt3dadd( 36.0696, 4.1981, -35.2303, 0.28 ) }
    dend_10 { pt3dadd( 36.2953, 4.31695, -35.3721, 0.55 ) }
    dend_10 { pt3dadd( 38.4051, 5.47533, -36.7426, 0.28 ) }
    dend_10 { pt3dadd( 40.6968, 6.80491, -38.4048, 0.28 ) }
    dend_10 { pt3dadd( 41.9049, 7.5292, -39.2615, 0.83 ) }
    dend_10 { pt3dadd( 44.8321, 9.34354, -41.049, 0.28 ) }
    dend_10 { pt3dadd( 45.3273, 9.66954, -41.3228, 0.83 ) }
    dend_10 { pt3dadd( 46.8531, 10.7861, -42.205, 0.28 ) }
    dend_10 { pt3dadd( 49.1679, 12.7455, -44.0044, 0.55 ) }
    dend_10 { pt3dadd( 49.9932, 13.386, -44.6404, 0.28 ) }
    dend_10 { pt3dadd( 50.8371, 13.99, -45.2443, 0.55 ) }
    dend_10 { pt3dadd( 54.6184, 16.3436, -47.5492, 0.28 ) }
    dend_10 { pt3dadd( 56.3488, 17.3193, -48.4898, 0.55 ) }
    dend_10 { pt3dadd( 62.4915, 20.4539, -51.1294, 0.55 ) }
    dend_10 { pt3dadd( 67.9486, 23.085, -53.0037, 0.28 ) }
    dend_10 { pt3dadd( 70.3487, 24.181, -53.5696, 0.55 ) }
    dend_10 { pt3dadd( 76.3834, 26.753, -54.3587, 0.28 ) }
    dend_10 { pt3dadd( 78.1899, 27.4478, -54.401, 0.55 ) }
    dend_10 { pt3dadd( 82.8904, 29.1228, -54.2081, 0.28 ) }
    dend_10 { pt3dadd( 85.2201, 29.9262, -53.897, 0.55 ) }
    dend_10 { pt3dadd( 89.9904, 31.6397, -53.1346, 0.28 ) }
    dend_10 { pt3dadd( 92.5119, 32.5551, -52.6347, 0.55 ) }
    dend_10 { pt3dadd( 95.6161, 33.7075, -51.9292, 0.28 ) }
    dend_10 { pt3dadd( 96.7186, 34.1127, -51.7097, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 24.062, -1.82421, -28.0577, 0.55 ) }
    dend_9 { pt3dadd( 26.3383, -1.03609, -29.0775, 0.55 ) }
    dend_9 { pt3dadd( 27.351, -0.548102, -29.9251, 0.55 ) }
    dend_9 { pt3dadd( 28.781, 0.0781753, -31.2484, 0.28 ) }
    dend_9 { pt3dadd( 29.3369, 0.324287, -31.813, 0.55 ) }
    dend_9 { pt3dadd( 31.1326, 1.21769, -33.9894, 0.55 ) }
    dend_9 { pt3dadd( 32.2239, 1.73654, -35.3799, 0.55 ) }
    dend_9 { pt3dadd( 34.8136, 2.96876, -39.0991, 0.55 ) }
    dend_9 { pt3dadd( 36.5478, 3.68908, -41.6683, 0.55 ) }
    dend_9 { pt3dadd( 38.2393, 4.23843, -44.1988, 0.55 ) }
    dend_9 { pt3dadd( 40.8562, 5.04689, -48.1396, 0.55 ) }
    dend_9 { pt3dadd( 42.3793, 5.44444, -50.3931, 0.55 ) }
    dend_9 { pt3dadd( 43.5192, 5.70041, -52.0533, 0.55 ) }
    dend_9 { pt3dadd( 45.5642, 5.98487, -54.9749, 0.28 ) }
    dend_9 { pt3dadd( 47.6995, 6.21963, -58.1255, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.9785, 12.931, -18.1389, 0.83 ) }
    dend_7 { pt3dadd( -20.8308, 17.5432, -16.6635, 0.83 ) }
    dend_7 { pt3dadd( -23.7957, 20.0621, -15.6599, 0.83 ) }
    dend_7 { pt3dadd( -27.619, 23.2654, -14.1757, 0.55 ) }
    dend_7 { pt3dadd( -31.8251, 26.605, -12.9412, 0.55 ) }
    dend_7 { pt3dadd( -33.7295, 28.1004, -12.6142, 0.55 ) }
    dend_7 { pt3dadd( -37.1756, 30.7569, -12.3593, 0.55 ) }
    dend_7 { pt3dadd( -41.9596, 34.197, -12.6899, 0.55 ) }
    dend_7 { pt3dadd( -44.8584, 36.232, -13.1671, 0.55 ) }
    dend_7 { pt3dadd( -50.6236, 40.0981, -14.3963, 0.55 ) }
    dend_7 { pt3dadd( -55.4154, 43.2694, -15.7249, 0.55 ) }
    dend_7 { pt3dadd( -58.354, 45.161, -16.5592, 0.55 ) }
    dend_7 { pt3dadd( -60.3224, 46.3922, -17.0948, 0.55 ) }
    dend_7 { pt3dadd( -63.0635, 48.1168, -17.82, 0.83 ) }
    dend_7 { pt3dadd( -66.5595, 50.0786, -18.4093, 0.28 ) }
    dend_7 { pt3dadd( -68.186, 50.9906, -18.5745, 0.55 ) }
    dend_7 { pt3dadd( -72.3504, 53.2867, -18.924, 0.55 ) }
    dend_7 { pt3dadd( -76.7213, 55.8459, -19.4816, 0.55 ) }
    dend_7 { pt3dadd( -78.4764, 56.9011, -19.764, 0.55 ) }
    dend_7 { pt3dadd( -85.4331, 61.4137, -20.7629, 0.55 ) }
    dend_7 { pt3dadd( -92.6718, 66.2955, -21.6854, 0.28 ) }
    dend_7 { pt3dadd( -93.8745, 67.1343, -21.784, 0.55 ) }
    dend_7 { pt3dadd( -104.159, 74.4324, -22.3485, 0.28 ) }
    dend_7 { pt3dadd( -105.187, 75.194, -22.396, 0.55 ) }
    dend_7 { pt3dadd( -110.721, 79.3177, -22.4026, 0.28 ) }
    dend_7 { pt3dadd( -113.408, 81.4816, -22.1112, 0.55 ) }
    dend_7 { pt3dadd( -118.13, 85.1865, -20.8569, 0.28 ) }
    dend_7 { pt3dadd( -119.856, 86.5386, -20.2538, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.9785, 12.931, -18.1389, 0.55 ) }
    dend_6 { pt3dadd( -18.1841, 14.7046, -22.177, 0.55 ) }
    dend_6 { pt3dadd( -22.4175, 18.1305, -29.5581, 0.55 ) }
    dend_6 { pt3dadd( -25.9543, 21.0659, -35.4246, 0.55 ) }
    dend_6 { pt3dadd( -27.3878, 22.2872, -37.7603, 0.83 ) }
    dend_6 { pt3dadd( -31.69, 26.0602, -44.6405, 0.28 ) }
    dend_6 { pt3dadd( -33.7798, 27.9023, -47.8954, 0.55 ) }
    dend_6 { pt3dadd( -35.8741, 29.7707, -51.1129, 0.28 ) }
    dend_6 { pt3dadd( -36.8733, 30.6585, -52.4741, 0.55 ) }
    dend_6 { pt3dadd( -38.0742, 31.7378, -54.063, 0.28 ) }
    dend_6 { pt3dadd( -38.7669, 32.3483, -55.0584, 0.55 ) }
    dend_6 { pt3dadd( -41.7385, 34.8168, -59.2883, 0.28 ) }
    dend_6 { pt3dadd( -42.6739, 35.4606, -60.7764, 0.55 ) }
    dend_6 { pt3dadd( -44.9902, 36.7998, -64.4214, 0.28 ) }
    dend_6 { pt3dadd( -46.1684, 37.3849, -66.2759, 0.55 ) }
    dend_6 { pt3dadd( -49.0762, 38.6363, -70.7764, 0.28 ) }
    dend_6 { pt3dadd( -50.2732, 39.0613, -72.6035, 0.55 ) }
    dend_6 { pt3dadd( -55.6063, 40.6527, -80.5804, 0.28 ) }
    dend_6 { pt3dadd( -56.3601, 40.844, -81.7024, 0.55 ) }
    dend_6 { pt3dadd( -59.3932, 41.5014, -85.978, 0.28 ) }
    dend_6 { pt3dadd( -61.0143, 41.8206, -88.1301, 0.55 ) }
    dend_6 { pt3dadd( -62.7621, 42.1747, -90.2129, 0.55 ) }
    dend_6 { pt3dadd( -64.3467, 42.5661, -91.9513, 0.55 ) }
    dend_6 { pt3dadd( -70.2693, 44.4787, -97.0756, 0.28 ) }
    dend_6 { pt3dadd( -71.7042, 45.0178, -98.1937, 0.55 ) }
    dend_6 { pt3dadd( -74.185, 46.0522, -99.9964, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( -75.2331, 46.537, -100.739, 0.55 ) }
    dend_6 { pt3dadd( -78.3158, 48.0644, -103.326, 0.28 ) }
    dend_6 { pt3dadd( -82.437, 50.1578, -107.07, 0.28 ) }
    dend_6 { pt3dadd( -86.4833, 52.2801, -110.838, 0.83 ) }
    dend_6 { pt3dadd( -90.7724, 54.5208, -115.309, 0.28 ) }
    dend_6 { pt3dadd( -91.9067, 55.0845, -116.646, 0.55 ) }
    dend_6 { pt3dadd( -98.1014, 58.0071, -124.803, 0.28 ) }
    dend_6 { pt3dadd( -98.5891, 58.2085, -125.555, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 8/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.37961, -3.96568, 15.3936, 0.83 ) }
    dend_2 { pt3dadd( 8.97077, -5.85746, 17.64, 0.83 ) }
    dend_2 { pt3dadd( 10.2941, -7.43088, 19.5083, 0.83 ) }
    dend_2 { pt3dadd( 11.1245, -8.41814, 20.6806, 0.83 ) }
    dend_2 { pt3dadd( 13.674, -11.4494, 24.28, 0.83 ) }
    dend_2 { pt3dadd( 14.8576, -12.8566, 25.951, 0.83 ) }
    dend_2 { pt3dadd( 17.2491, -15.6999, 29.3273, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 15/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.37961, -3.96568, 15.3936, 0.83 ) }
    dend_1 { pt3dadd( 8.22429, -4.73815, 16.8329, 0.83 ) }
    dend_1 { pt3dadd( 9.99764, -6.13246, 19.7499, 0.83 ) }
    dend_1 { pt3dadd( 13.8911, -9.20572, 26.7567, 0.83 ) }
    dend_1 { pt3dadd( 15.0849, -10.119, 28.9616, 0.83 ) }
    dend_1 { pt3dadd( 16.2516, -10.9643, 31.1197, 0.83 ) }
    dend_1 { pt3dadd( 17.9645, -12.0801, 34.291, 0.83 ) }
    dend_1 { pt3dadd( 19.1319, -12.7933, 36.547, 0.83 ) }
    dend_1 { pt3dadd( 21.8152, -14.1553, 41.7162, 0.55 ) }
    dend_1 { pt3dadd( 22.3342, -14.3596, 42.8033, 0.55 ) }
    dend_1 { pt3dadd( 23.3227, -14.7347, 44.8827, 0.83 ) }
    dend_1 { pt3dadd( 25.212, -15.3771, 48.8313, 0.55 ) }
    dend_1 { pt3dadd( 28.9247, -16.7339, 57.26, 0.55 ) }
    dend_1 { pt3dadd( 34.2353, -17.3959, 64.8785, 0.55 ) }
    dend_1 { pt3dadd( 39.9241, -18.7757, 72.1294, 0.55 ) }
    dend_1 { pt3dadd( 45.7973, -19.7849, 79.29, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 31/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.07426, -42.6856, 3.55983, 0.83 ) }
    axon_1 { pt3dadd( 11.9892, -57.3996, 3.55983, 0.83 ) }
    axon_1 { pt3dadd( 14.9042, -72.1137, 3.55983, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_1 (entry count 34/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -0.979112, -24.1404, 7.36255, 0.83 ) }
    apic_12 { pt3dadd( -4.73106, -27.3148, 7.75865, 0.83 ) }
    apic_12 { pt3dadd( -6.59333, -28.9539, 8.01365, 0.55 ) }
    apic_12 { pt3dadd( -9.62165, -31.7277, 8.61189, 0.55 ) }
    apic_12 { pt3dadd( -13.3538, -35.2373, 9.48762, 0.55 ) }
    apic_12 { pt3dadd( -16.9995, -38.7838, 10.3804, 0.55 ) }
    apic_12 { pt3dadd( -20.4525, -42.1827, 11.2569, 0.55 ) }
    apic_12 { pt3dadd( -23.5794, -45.4101, 12.2123, 0.55 ) }
    apic_12 { pt3dadd( -26.1048, -48.0009, 12.9999, 0.55 ) }
    apic_12 { pt3dadd( -27.709, -49.6651, 13.5041, 0.55 ) }
    apic_12 { pt3dadd( -30.3227, -52.4071, 14.2678, 0.28 ) }
    apic_12 { pt3dadd( -30.7024, -52.7917, 14.3497, 1.11 ) }
    apic_12 { pt3dadd( -32.8563, -54.7461, 14.6429, 0.55 ) }
    apic_12 { pt3dadd( -34.3003, -55.935, 14.7586, 0.55 ) }
    apic_12 { pt3dadd( -35.8021, -57.0257, 14.7676, 0.28 ) }
    apic_12 { pt3dadd( -37.2195, -57.866, 14.7853, 0.55 ) }
    apic_12 { pt3dadd( -38.3957, -58.4408, 14.7781, 0.28 ) }
    apic_12 { pt3dadd( -38.9375, -58.6715, 14.7882, 0.55 ) }
    apic_12 { pt3dadd( -40.3536, -59.1197, 14.8728, 0.28 ) }
    apic_12 { pt3dadd( -41.4902, -59.392, 14.949, 0.55 ) }
    apic_12 { pt3dadd( -43.5638, -59.7371, 15.0997, 0.28 ) }
    apic_12 { pt3dadd( -45.9842, -60.0932, 15.2823, 0.55 ) }
    apic_12 { pt3dadd( -48.2083, -60.5058, 15.4477, 0.28 ) }
    apic_12 { pt3dadd( -49.9422, -60.817, 15.5611, 0.55 ) }
    // Section: apic_9, id: apic_9, parent: apic_1 (entry count 58/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -0.979112, -24.1404, 7.36255, 0.83 ) }
    apic_9 { pt3dadd( -6.11563, -27.7125, 14.9006, 0.83 ) }
    apic_9 { pt3dadd( -8.04071, -28.9856, 17.6212, 0.83 ) }
    apic_9 { pt3dadd( -9.9633, -30.1434, 20.2472, 0.83 ) }
    apic_9 { pt3dadd( -11.282, -30.9243, 22.0293, 0.83 ) }
    apic_9 { pt3dadd( -12.8192, -31.7904, 23.9996, 0.83 ) }
    apic_9 { pt3dadd( -15.1673, -33.0787, 26.9498, 0.83 ) }
    apic_9 { pt3dadd( -16.94, -33.9792, 29.0529, 0.83 ) }
    apic_9 { pt3dadd( -20.1017, -35.7034, 32.7472, 0.83 ) }
    apic_9 { pt3dadd( -21.981, -36.8532, 34.9416, 0.83 ) }
    apic_9 { pt3dadd( -23.8668, -38.0751, 37.1774, 0.83 ) }
    apic_9 { pt3dadd( -25.9856, -39.4989, 39.767, 0.83 ) }
    apic_9 { pt3dadd( -27.2617, -40.4081, 41.3627, 0.83 ) }
    apic_9 { pt3dadd( -28.6339, -41.5117, 43.0647, 0.83 ) }
    apic_9 { pt3dadd( -29.8089, -42.7028, 44.5834, 0.83 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 73/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -0.979112, -24.1404, 7.36255, 1.66 ) }
    apic_2 { pt3dadd( -0.273482, -27.2748, 8.09681, 1.66 ) }
    apic_2 { pt3dadd( 0.321377, -29.9171, 8.7158, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 76/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.62629, 14.9933, -1.54579, 0.83 ) }
    dend_20 { pt3dadd( -9.55759, 16.7492, 0.932688, 0.83 ) }
    dend_20 { pt3dadd( -11.5864, 18.3242, 2.55613, 0.55 ) }
    dend_20 { pt3dadd( -12.6003, 19.148, 3.3102, 0.83 ) }
    dend_20 { pt3dadd( -15.2611, 21.4187, 5.00675, 0.55 ) }
    dend_20 { pt3dadd( -17.9669, 23.6764, 6.49042, 0.55 ) }
    dend_20 { pt3dadd( -22.5429, 27.3818, 8.82451, 0.55 ) }
    dend_20 { pt3dadd( -28.1983, 31.9234, 10.9596, 0.55 ) }
    dend_20 { pt3dadd( -29.9197, 33.238, 11.4676, 0.55 ) }
    dend_20 { pt3dadd( -34.6463, 36.5983, 12.2726, 0.55 ) }
    dend_20 { pt3dadd( -38.4428, 39.0687, 12.4522, 0.55 ) }
    dend_20 { pt3dadd( -42.7816, 41.6374, 12.4056, 0.55 ) }
    dend_20 { pt3dadd( -49.5125, 45.0866, 12.0752, 0.55 ) }
    dend_20 { pt3dadd( -54.3145, 47.1999, 11.9189, 0.55 ) }
    dend_20 { pt3dadd( -59.4689, 49.3591, 12.0561, 0.55 ) }
    dend_20 { pt3dadd( -64.7355, 51.4134, 12.6149, 0.55 ) }
    dend_20 { pt3dadd( -68.9291, 53.0384, 13.3067, 0.55 ) }
    dend_20 { pt3dadd( -71.8629, 54.1255, 14.1062, 0.55 ) }
    dend_20 { pt3dadd( -75.1299, 55.249, 15.5881, 0.55 ) }
    dend_20 { pt3dadd( -78.1752, 56.2203, 17.1129, 0.28 ) }
    dend_20 { pt3dadd( -81.2002, 57.2024, 18.9316, 0.28 ) }
    dend_20 { pt3dadd( -82.6894, 57.6951, 19.8799, 0.55 ) }
    dend_20 { pt3dadd( -85.9172, 58.7188, 21.7098, 0.28 ) }
    dend_20 { pt3dadd( -91.1121, 60.2423, 24.3732, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( -95.6506, 61.43, 26.2405, 0.55 ) }
    dend_20 { pt3dadd( -103.695, 67.1764, 29.8726, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.62629, 14.9933, -1.54579, 0.28 ) }
    dend_17 { pt3dadd( -7.13976, 15.6355, -0.0819336, 0.28 ) }
    dend_17 { pt3dadd( -7.90335, 16.5907, 2.09502, 0.28 ) }
    dend_17 { pt3dadd( -10.2227, 19.4918, 8.70715, 0.55 ) }
    dend_17 { pt3dadd( -11.8938, 21.5821, 13.4713, 0.55 ) }
    dend_17 { pt3dadd( -13.5156, 23.6108, 18.0949, 0.55 ) }
    dend_17 { pt3dadd( -14.3941, 24.7097, 20.5996, 0.55 ) }
    dend_17 { pt3dadd( -15.5168, 27.2752, 29.166, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 10/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 17.2491, -15.6999, 29.3273, 0.55 ) }
    dend_4 { pt3dadd( 17.8767, -18.6132, 29.2713, 0.55 ) }
    dend_4 { pt3dadd( 18.5712, -21.68, 29.1921, 0.55 ) }
    dend_4 { pt3dadd( 18.8454, -22.8404, 29.1791, 0.55 ) }
    dend_4 { pt3dadd( 19.3657, -25.281, 29.1691, 0.55 ) }
    dend_4 { pt3dadd( 19.6627, -27.0439, 29.3045, 0.55 ) }
    dend_4 { pt3dadd( 20.168, -30.226, 29.6785, 0.55 ) }
    dend_4 { pt3dadd( 20.3946, -31.9579, 29.9369, 0.55 ) }
    dend_4 { pt3dadd( 20.5204, -33.2385, 30.1758, 0.55 ) }
    dend_4 { pt3dadd( 20.7218, -35.7029, 30.6826, 0.55 ) }
    dend_4 { pt3dadd( 21.028, -40.1121, 31.6965, 0.55 ) }
    dend_4 { pt3dadd( 21.1771, -43.7826, 32.6606, 0.55 ) }
    dend_4 { pt3dadd( 21.1691, -44.9842, 33.0043, 0.28 ) }
    dend_4 { pt3dadd( 21.1536, -45.5303, 33.1603, 0.55 ) }
    dend_4 { pt3dadd( 20.9528, -51.2575, 34.731, 0.28 ) }
    dend_4 { pt3dadd( 20.9354, -51.8268, 34.8798, 0.55 ) }
    dend_4 { pt3dadd( 20.8223, -54.226, 35.3261, 0.28 ) }
    dend_4 { pt3dadd( 20.691, -55.1951, 35.558, 0.28 ) }
    dend_4 { pt3dadd( 20.483, -61.4074, 37.238, 0.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 29/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 17.2491, -15.6999, 29.3273, 0.55 ) }
    dend_3 { pt3dadd( 21.2574, -15.1898, 31.6105, 0.55 ) }
    dend_3 { pt3dadd( 22.9992, -14.9537, 32.6461, 0.55 ) }
    dend_3 { pt3dadd( 24.3361, -14.7041, 33.4608, 0.55 ) }
    dend_3 { pt3dadd( 25.7991, -14.3702, 34.4081, 0.55 ) }
    dend_3 { pt3dadd( 29.9903, -13.2899, 37.2742, 0.55 ) }
    dend_3 { pt3dadd( 32.7691, -12.4331, 39.2866, 0.55 ) }
    dend_3 { pt3dadd( 33.8128, -12.0121, 40.1754, 0.83 ) }
    dend_3 { pt3dadd( 36.7237, -10.7309, 42.7304, 0.55 ) }
    dend_3 { pt3dadd( 40.0872, -9.18065, 45.8558, 0.55 ) }
    dend_3 { pt3dadd( 41.4531, -8.51156, 47.1901, 0.83 ) }
    dend_3 { pt3dadd( 45.2876, -6.39778, 51.0328, 0.55 ) }
    dend_3 { pt3dadd( 48.964, -4.29086, 54.7598, 1.39 ) }
    dend_3 { pt3dadd( 58.7939, -0.138558, 61.8673, 1.39 ) }
    dend_3 { pt3dadd( 69.0035, 3.63934, 68.6324, 1.39 ) }
    dend_3 { pt3dadd( 79.9995, 4.73306, 75.0559, 1.39 ) }
    dend_3 { pt3dadd( 91.346, 3.54188, 80.788, 1.39 ) }
    dend_3 { pt3dadd( 102.98, 5.14155, 85.8591, 1.39 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 47/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -29.8089, -42.7028, 44.5834, 0.55 ) }
    apic_11 { pt3dadd( -32.1555, -43.5124, 45.6533, 0.55 ) }
    apic_11 { pt3dadd( -35.2115, -44.5669, 47.0467, 0.55 ) }
    apic_11 { pt3dadd( -37.9847, -45.5237, 48.3111, 0.55 ) }
    apic_11 { pt3dadd( -41.0042, -46.5655, 49.6878, 0.55 ) }
    apic_11 { pt3dadd( -44.7597, -47.8613, 51.4001, 0.55 ) }
    apic_11 { pt3dadd( -50.2916, -49.77, 53.9223, 0.55 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 54/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -29.8089, -42.7028, 44.5834, 0.55 ) }
    apic_10 { pt3dadd( -28.9701, -45.8434, 47.023, 0.55 ) }
    apic_10 { pt3dadd( -28.2088, -48.6935, 49.237, 0.55 ) }
    apic_10 { pt3dadd( -27.4804, -51.4205, 51.3553, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_2 (entry count 58/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 0.321377, -29.9171, 8.7158, 0.55 ) }
    apic_8 { pt3dadd( -0.0219461, -30.6345, 10.4211, 0.55 ) }
    apic_8 { pt3dadd( -0.22238, -31.0104, 11.369, 0.55 ) }
    apic_8 { pt3dadd( -0.990796, -32.2726, 14.7168, 0.83 ) }
    apic_8 { pt3dadd( -1.63368, -33.3561, 17.5816, 0.83 ) }
    apic_8 { pt3dadd( -2.52052, -34.83, 21.4473, 0.83 ) }
    apic_8 { pt3dadd( -3.06233, -35.7157, 23.7287, 0.83 ) }
    apic_8 { pt3dadd( -3.46226, -36.3905, 25.4097, 0.83 ) }
    apic_8 { pt3dadd( -3.91621, -37.1257, 27.2468, 0.83 ) }
    apic_8 { pt3dadd( -4.50663, -38.0108, 29.33, 0.83 ) }
    apic_8 { pt3dadd( -4.9523, -38.6025, 30.5957, 0.83 ) }
    apic_8 { pt3dadd( -5.61524, -39.4982, 32.2887, 0.83 ) }
    apic_8 { pt3dadd( -6.37629, -40.5909, 34.204, 0.83 ) }
    apic_8 { pt3dadd( -7.03517, -41.5573, 35.8283, 0.83 ) }
    apic_8 { pt3dadd( -7.42493, -42.1279, 36.7489, 0.83 ) }
    apic_8 { pt3dadd( -8.50473, -43.5604, 39.0589, 0.83 ) }
    apic_8 { pt3dadd( -9.28528, -44.6282, 40.7663, 0.83 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 75/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 0.321377, -29.9171, 8.7158, 1.11 ) }
    apic_3 { pt3dadd( 0.178942, -37.6673, 8.36033, 1.11 ) }
    apic_3 { pt3dadd( 0.11341, -41.233, 8.19679, 1.11 ) }
    apic_3 { pt3dadd( -0.0211296, -48.5537, 7.86104, 1.11 ) }
    apic_3 { pt3dadd( -0.100503, -52.8726, 7.66295, 1.11 ) }
    apic_3 { pt3dadd( -0.142243, -55.1438, 7.55878, 1.11 ) }
    apic_3 { pt3dadd( -0.173089, -56.8222, 7.4818, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -15.5168, 27.2752, 29.166, 0.28 ) }
    dend_19 { pt3dadd( -16.4207, 33.4084, 39.5446, 0.28 ) }
    dend_19 { pt3dadd( -16.1769, 37.9385, 50.7145, 0.28 ) }
    dend_19 { pt3dadd( -14.8461, 44.4951, 60.7687, 0.28 ) }
    dend_19 { pt3dadd( -12.524, 50.5369, 70.9466, 0.28 ) }
    dend_19 { pt3dadd( -11.1736, 57.2374, 80.9055, 0.28 ) }
    dend_19 { pt3dadd( -12.0111, 64.8522, 90.2977, 0.28 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -15.5168, 27.2752, 29.166, 0.83 ) }
    dend_18 { pt3dadd( -17.7193, 32.2849, 40.4502, 0.28 ) }
    dend_18 { pt3dadd( -20.2726, 37.6176, 51.5197, 0.28 ) }
    dend_18 { pt3dadd( -21.125, 44.674, 61.8939, 0.28 ) }
    dend_18 { pt3dadd( -21.8882, 53.4771, 70.9087, 0.28 ) }
    dend_18 { pt3dadd( -25.5908, 62.3035, 79.1866, 0.28 ) }
    dend_18 { pt3dadd( -27.1356, 71.9271, 87.2633, 0.28 ) }
    dend_18 { pt3dadd( -28.1078, 80.7641, 96.2289, 0.28 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 97/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -0.173089, -56.8222, 7.4818, 1.11 ) }
    apic_5 { pt3dadd( -0.502303, -60.8925, 7.93814, 1.11 ) }
    apic_5 { pt3dadd( -0.722596, -64.4717, 8.3169, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_5 { pt3dadd( -1.08871, -70.5453, 8.71856, 1.11 ) }
    apic_5 { pt3dadd( -1.18426, -72.6799, 8.78922, 1.11 ) }
    apic_5 { pt3dadd( -1.31581, -76.1429, 8.93154, 1.11 ) }
    apic_5 { pt3dadd( -1.36854, -81.2476, 9.15676, 1.11 ) }
    apic_5 { pt3dadd( -1.34133, -83.1007, 9.21539, 1.11 ) }
    apic_5 { pt3dadd( -1.23675, -86.4605, 9.41182, 1.11 ) }
    apic_5 { pt3dadd( -0.856192, -93.5761, 9.98727, 1.11 ) }
    apic_5 { pt3dadd( -0.617764, -96.8953, 10.3246, 1.11 ) }
    apic_5 { pt3dadd( -0.294848, -100.881, 10.8318, 1.11 ) }
    apic_5 { pt3dadd( -0.168377, -102.462, 11.08, 1.11 ) }
    apic_5 { pt3dadd( 0.0977769, -106.459, 11.8909, 1.11 ) }
    apic_5 { pt3dadd( 0.350548, -109.449, 12.6071, 1.11 ) }
    apic_5 { pt3dadd( 0.866967, -114.929, 13.9238, 1.11 ) }
    apic_5 { pt3dadd( 1.13742, -118.543, 14.5915, 1.11 ) }
    apic_5 { pt3dadd( 1.27081, -120.612, 14.9027, 1.11 ) }
    apic_5 { pt3dadd( 1.47256, -123.827, 15.2634, 1.11 ) }
    apic_5 { pt3dadd( 1.77797, -128.19, 15.6886, 1.11 ) }
    apic_5 { pt3dadd( 1.99426, -131.387, 15.9833, 1.11 ) }
    apic_5 { pt3dadd( 2.7356, -142.257, 16.9608, 1.11 ) }
    apic_5 { pt3dadd( 3.13325, -147.319, 17.4079, 1.11 ) }
    apic_5 { pt3dadd( 3.49103, -151.36, 17.7738, 1.11 ) }
    apic_5 { pt3dadd( 3.94445, -155.917, 18.1646, 1.11 ) }
    apic_5 { pt3dadd( 4.40633, -161.482, 18.7422, 0.83 ) }
    apic_5 { pt3dadd( 4.68386, -164.427, 19.1066, 0.83 ) }
    apic_5 { pt3dadd( 4.97563, -166.623, 19.423, 0.83 ) }
    apic_5 { pt3dadd( 5.24938, -168.7, 19.7683, 0.83 ) }
    apic_5 { pt3dadd( 5.65386, -171.713, 20.2977, 0.83 ) }
    apic_5 { pt3dadd( 6.01138, -174.726, 20.8764, 0.83 ) }
    apic_5 { pt3dadd( 6.28208, -177.079, 21.4561, 0.83 ) }
    apic_5 { pt3dadd( 6.48939, -178.759, 21.9123, 0.83 ) }
    apic_5 { pt3dadd( 6.87956, -182.461, 22.9539, 0.83 ) }
    apic_5 { pt3dadd( 7.78446, -190.652, 25.3915, 0.83 ) }
    apic_5 { pt3dadd( 8.15548, -193.75, 26.3253, 0.83 ) }
    apic_5 { pt3dadd( 8.53903, -196.499, 27.1598, 0.83 ) }
    apic_5 { pt3dadd( 8.88957, -198.908, 27.9425, 0.83 ) }
    apic_5 { pt3dadd( 9.35826, -201.74, 28.9485, 0.83 ) }
    apic_5 { pt3dadd( 9.89704, -204.869, 30.1245, 0.83 ) }
    apic_5 { pt3dadd( 10.352, -207.224, 31.1161, 0.83 ) }
    apic_5 { pt3dadd( 10.8413, -209.647, 32.1541, 0.83 ) }
    apic_5 { pt3dadd( 11.8695, -214.286, 34.25, 0.83 ) }
    apic_5 { pt3dadd( 12.6104, -217.448, 35.6297, 0.83 ) }
    apic_5 { pt3dadd( 13.4148, -220.568, 36.9211, 0.83 ) }
    apic_5 { pt3dadd( 14.0584, -223.337, 37.9158, 0.83 ) }
    apic_5 { pt3dadd( 14.7002, -226.248, 38.8624, 0.83 ) }
    apic_5 { pt3dadd( 15.1979, -228.79, 39.5206, 0.83 ) }
    apic_5 { pt3dadd( 16.0545, -234.325, 40.4831, 0.83 ) }
    apic_5 { pt3dadd( 16.7354, -238.558, 40.9284, 0.83 ) }
    apic_5 { pt3dadd( 17.2202, -241.42, 41.1009, 0.83 ) }
    apic_5 { pt3dadd( 18.08, -246.704, 41.2771, 0.83 ) }
    apic_5 { pt3dadd( 18.8377, -250.801, 41.3978, 0.83 ) }
    apic_5 { pt3dadd( 19.4748, -254.306, 41.4765, 0.83 ) }
    apic_5 { pt3dadd( 20.4441, -259.265, 41.6132, 0.55 ) }
    apic_5 { pt3dadd( 20.7836, -260.833, 41.6339, 0.55 ) }
    apic_5 { pt3dadd( 22.6877, -267.928, 41.7305, 0.55 ) }
    apic_5 { pt3dadd( 23.5222, -270.744, 41.6825, 0.55 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 55/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -0.173089, -56.8222, 7.4818, 0.83 ) }
    apic_4 { pt3dadd( 0.359846, -64.8974, 9.6269, 0.83 ) }
    apic_4 { pt3dadd( 0.401313, -66.48, 10.0315, 0.83 ) }
    apic_4 { pt3dadd( 0.440771, -69.2977, 10.7599, 0.83 ) }
    apic_4 { pt3dadd( 0.457799, -70.9512, 11.1576, 0.83 ) }
    apic_4 { pt3dadd( 0.563941, -75.1861, 12.1133, 0.83 ) }
    apic_4 { pt3dadd( 0.736738, -80.0504, 13.2457, 0.83 ) }
    apic_4 { pt3dadd( 0.96587, -85.5952, 14.1559, 0.83 ) }
    apic_4 { pt3dadd( 1.12053, -89.484, 14.9289, 0.83 ) }
    apic_4 { pt3dadd( 1.21676, -93.39, 15.9473, 0.83 ) }
    apic_4 { pt3dadd( 1.32281, -98.1505, 17.526, 0.83 ) }
    apic_4 { pt3dadd( 1.35436, -100.716, 18.6101, 0.83 ) }
    apic_4 { pt3dadd( 1.406, -103.687, 20.2189, 0.83 ) }
    apic_4 { pt3dadd( 1.45135, -106.887, 22.0888, 0.83 ) }
    apic_4 { pt3dadd( 1.43383, -110.922, 24.8312, 0.55 ) }
    apic_4 { pt3dadd( 1.3458, -113.26, 26.7635, 0.55 ) }
    apic_4 { pt3dadd( 1.17243, -115.011, 28.5097, 0.55 ) }
    apic_4 { pt3dadd( 0.89803, -117.144, 30.8869, 0.55 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 73/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 23.5222, -270.744, 41.6825, 0.28 ) }
    apic_7 { pt3dadd( 26.1428, -270.454, 42.6768, 0.28 ) }
    apic_7 { pt3dadd( 26.425, -270.423, 42.7839, 0.55 ) }
    apic_7 { pt3dadd( 28.1094, -270.236, 43.4231, 0.28 ) }
    apic_7 { pt3dadd( 29.6657, -270.064, 44.0135, 0.83 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 78/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 23.5222, -270.744, 41.6825, 0.83 ) }
    apic_6 { pt3dadd( 22.3796, -274.092, 41.9479, 0.83 ) }
    apic_6 { pt3dadd( 20.3036, -280.175, 42.4302, 0.55 ) }
    apic_6 { pt3dadd( 19.2494, -283.265, 42.675, 0.55 ) }
    apic_6 { pt3dadd( 18.67, -284.963, 42.8096, 0.55 ) }
    apic_6 { pt3dadd( 17.4351, -288.581, 43.0965, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_22 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_12 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_10 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_7 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_12 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_9 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_20 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_19 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_18 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_5 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_8 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_9 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    apic_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, axon_0, axon_0, apic_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_6 all.append()
    apic_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 5
    dend_22 nseg = 3
    dend_15 nseg = 9
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_10 nseg = 5
    dend_7 nseg = 7
    dend_6 nseg = 7
    dend_1 nseg = 3
    apic_12 nseg = 3
    apic_9 nseg = 3
    dend_20 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 5
    dend_19 nseg = 3
    dend_18 nseg = 5
    apic_5 nseg = 11
    apic_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_SBC_1361ded4e5_0_0


