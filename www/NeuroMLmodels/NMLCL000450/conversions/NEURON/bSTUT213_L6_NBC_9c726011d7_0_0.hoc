// Cell: bSTUT213_L6_NBC_9c726011d7_0_0
/*
{
  "id" : "bSTUT213_L6_NBC_9c726011d7_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.69096, -9.75392, 0.0, 3.54463", "1.52222, -8.84351, 0.0, 6.43815", "1.35347, -7.93311, 0.0, 8.80214", "1.18473, -7.0227, 0.0, 10.0004", "1.01599, -6.11229, 0.0, 10.9716", "0.847242, -5.20188, 0.0, 11.7871", "0.678498, -4.29147, 0.0, 12.5324", "0.509755, -3.38107, 0.0, 13.2727", "0.341011, -2.47066, 0.0, 13.4566", "0.172268, -1.56025, 0.0, 13.5676", "0.00352426, -0.649843, 0.0, 13.7469", "-0.165219, 0.260565, 0.0, 13.8983", "-0.333963, 1.17097, 0.0, 14.0", "-0.502706, 2.08138, 0.0, 13.9192", "-0.67145, 2.99179, 0.0, 13.4728", "-0.840193, 3.9022, 0.0, 12.9681", "-1.00894, 4.8126, 0.0, 12.2669", "-1.17768, 5.72301, 0.0, 11.0106", "-1.34642, 6.63342, 0.0, 9.31796", "-1.51517, 7.54383, 0.0, 7.37652", "-1.68391, 8.45424, 0.0, 4.20409" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.62975, 7.48071, -1.86, 3.64", "-2.04842, 8.9128, -1.86, 3.64", "-2.89726, 11.8163, -1.86, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.38975, -7.41879, 8.54, 2.73", "-2.33828, -10.6761, 8.54, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.41975, 1.44321, -4.58, 0.68", "-4.46874, 0.198911, -5.40357, 0.68", "-4.51082, -0.652897, -5.95753, 0.45", "-4.66377, -2.33397, -6.99905, 0.45", "-4.84456, -4.20136, -8.18065, 0.45", "-4.90951, -4.80105, -8.57781, 1.14", "-5.14418, -7.02085, -10.2046, 0.23", "-5.21194, -7.81481, -10.8302, 0.23", "-5.36781, -9.00436, -11.848, 0.91", "-5.71155, -10.4867, -13.3517, 0.23", "-6.02532, -11.3268, -14.3571, 0.91", "-6.53599, -12.4942, -15.8857, 0.23", "-6.80789, -13.0101, -16.6913, 0.23", "-7.18457, -13.7027, -17.8585, 0.68", "-7.83072, -14.9222, -20.0045, 0.23", "-8.09988, -15.4947, -20.9901, 0.23", "-8.32216, -16.1062, -21.9363, 1.14", "-8.75345, -17.7803, -24.2101, 0.23", "-8.8253, -18.4186, -25.0549, 0.23", "-8.82352, -19.1544, -26.0212, 1.14", "-8.80381, -20.403, -27.6992, 0.23", "-8.81537, -21.0174, -28.6843, 0.23", "-8.86629, -21.6973, -29.929, 0.91", "-8.96587, -22.6752, -31.8316, 0.91", "-9.09336, -23.4372, -33.5281, 0.23", "-9.2527, -24.0122, -34.8913, 0.23", "-9.57136, -24.8667, -36.9456, 0.68", "-9.79821, -25.4097, -38.3641, 0.23", "-9.97176, -25.7655, -39.3121, 1.14", "-10.4781, -26.7439, -41.6367, 0.23", "-10.6065, -27.0787, -42.2999, 0.23", "-10.6991, -27.5214, -43.0395, 0.23", "-12.2545, -32.2738, -49.2457, 0.23", "-13.6236, -37.3983, -55.225, 0.23", "-14.341, -40.9977, -62.2472, 0.23", "-15.7999, -43.2535, -69.634, 0.23", "-17.9549, -47.187, -76.1623, 0.23", "-22.18, -50.2027, -82.0599, 0.23", "-25.8818, -53.2914, -88.2748, 0.23", "-29.5842, -55.5974, -94.7902, 0.23", "-33.3007, -59.1086, -100.787, 0.23", "-35.9153, -62.1024, -107.586, 0.23", "-38.7127, -66.3533, -113.662, 0.23", "-41.7228, -71.3883, -119.042, 0.23", "-44.9549, -75.8057, -124.775, 0.23", "-47.8002, -81.351, -129.771, 0.23", "-50.3563, -87.8744, -133.727, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.43025, -9.09879, 1.04, 1.14", "4.74177, -12.1018, -0.444799, 1.14", "6.72874, -14.6831, -1.72112, 1.14", "8.65219, -17.182, -2.95665, 1.14", "9.80641, -18.6815, -3.69806, 1.14", "10.8723, -20.0662, -4.38273, 1.59", "12.1426, -21.7165, -5.19871, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.95025, 5.64321, -1.12, 1.59", "3.91511, 7.57987, -1.12, 1.59", "4.93185, 9.62065, -1.12, 1.59", "6.59116, 12.9512, -1.12, 1.59", "7.5527, 14.8812, -1.12, 1.59", "8.95424, 17.6943, -1.12, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.68391, 8.45424, 0.0, 0.825086", "-4.41759, 23.203, 0.0, 0.825086", "-7.15127, 37.9518, 0.0, 0.825086" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-2.89726, 11.8163, -1.86, 0.68", "-4.36192, 12.2779, -1.4393, 0.68", "-5.38924, 12.617, -1.16356, 0.68", "-6.79805, 13.0821, -0.785432, 1.14", "-7.60852, 13.3496, -0.567898, 0.23", "-9.49582, 13.9725, -0.0613444, 0.23", "-10.5693, 14.3268, 0.22676, 0.91", "-12.3804, 14.8774, 0.771703, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.89726, 11.8163, -1.86, 1.82", "-0.707187, 14.1062, -3.47381, 1.82", "1.40628, 16.3292, -5.02133, 1.14", "3.01628, 18.0012, -6.16214, 0.68", "4.10584, 19.0914, -6.88994, 1.14", "6.97151, 21.8748, -8.80316, 0.45", "8.58807, 23.4008, -9.89886, 0.45", "9.58192, 24.2534, -10.565, 1.59", "10.6144, 25.0868, -11.2374, 1.59", "12.1255, 26.2819, -12.1732, 0.68", "13.8945, 27.6585, -13.2666, 0.68", "15.3238, 28.7093, -14.0986, 1.36", "16.7416, 29.7056, -14.9323, 2.05", "18.0819, 30.6036, -15.7542, 0.91", "19.5683, 31.6169, -16.7165, 1.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.33828, -10.6761, 8.54, 0.68", "-6.63247, -11.5507, 8.11765, 0.68", "-11.3781, -12.4648, 7.67881, 0.68", "-14.2721, -12.996, 7.35761, 0.23", "-16.3263, -13.3686, 7.11557, 0.91", "-19.0367, -13.8889, 6.79341, 0.91", "-21.6577, -14.4031, 6.44762, 0.23", "-23.6822, -14.795, 6.1461, 0.23", "-27.0248, -15.5047, 5.63171, 0.68", "-29.4629, -16.0992, 5.22092, 0.68", "-31.9506, -16.7543, 4.73256, 0.23", "-34.5857, -17.5114, 4.16368, 0.68", "-36.526, -18.1156, 3.72956, 0.68", "-40.01, -19.2887, 2.96976, 0.23", "-42.7747, -20.289, 2.41764, 0.23", "-44.8087, -21.0552, 2.03338, 0.68", "-46.3237, -21.6346, 1.84407, 0.68", "-48.4832, -22.4794, 1.7102, 0.68", "-51.301, -23.5676, 1.65817, 0.23", "-53.7146, -24.4418, 1.72406, 0.45", "-55.9137, -25.2, 1.91377, 0.45", "-59.9987, -26.6011, 2.37432, 0.23", "-61.5099, -27.1424, 2.60779, 1.14", "-63.0151, -27.7113, 2.88473, 1.14", "-66.2083, -28.9726, 3.53991, 0.23", "-68.5644, -29.9893, 4.0324, 0.23", "-70.694, -31.0066, 4.44789, 0.91", "-74.4108, -32.9185, 5.04958, 0.23", "-76.2136, -33.8819, 5.32203, 1.14", "-77.0085, -34.316, 5.42914, 1.14", "-79.509, -35.6824, 5.68793, 0.23", "-81.7154, -36.8237, 5.80874, 1.14", "-84.1913, -37.9966, 5.85731, 0.23", "-86.3519, -38.888, 5.80859, 1.14", "-87.6451, -39.3762, 5.78196, 0.23", "-90.2931, -40.3045, 5.72945, 0.23", "-92.073, -40.9067, 5.70666, 1.14", "-93.3989, -41.3325, 5.71411, 1.14", "-96.7787, -42.4652, 5.78139, 0.23", "-98.1118, -42.949, 5.91235, 1.14", "-99.8232, -43.608, 6.18168, 1.14", "-101.839, -44.4075, 6.59258, 0.23", "-103.852, -45.2506, 7.13988, 0.91", "-106.026, -46.2111, 7.83156, 0.23", "-109.743, -47.9972, 9.07454, 0.23", "-110.536, -48.3992, 9.34195, 1.14", "-112.732, -49.5611, 9.99872, 1.14", "-115.537, -51.1204, 10.6708, 0.23", "-116.965, -51.9335, 10.9171, 0.23", "-120.616, -54.0013, 11.4508, 0.68", "-123.143, -55.4034, 11.7112, 0.23", "-125.785, -56.8847, 11.9771, 1.14", "-128.883, -58.6614, 12.2609, 0.23", "-131.513, -60.192, 12.5105, 0.91", "-134.841, -62.1469, 12.9305, 0.23", "-137.03, -63.4372, 13.2687, 0.23", "-137.802, -63.9002, 13.4254, 0.23", "-139.029, -64.6407, 13.7522, 0.23", "-141.364, -66.0605, 14.5785, 0.91", "-143.059, -67.1153, 15.2591, 0.91", "-145.269, -68.4603, 16.0973, 0.23", "-147.381, -69.7164, 16.8564, 1.14", "-148.736, -70.4678, 17.3614, 1.14", "-151.76, -72.0591, 18.4799, 0.23", "-153.364, -72.8815, 19.0392, 0.68", "-156.733, -74.675, 20.1847, 0.23", "-159.369, -76.1768, 21.0802, 0.91", "-162.571, -78.2316, 22.0813, 0.23", "-163.519, -78.9225, 22.3538, 0.23", "-164.862, -80.0111, 22.6667, 0.23", "-166.747, -81.736, 23.0355, 1.14", "-169.08, -84.0652, 23.3843, 0.23", "-170.794, -85.9103, 23.414, 0.68", "-173.42, -88.8686, 23.0228, 0.23", "-175.52, -91.2382, 22.5057, 0.91", "-177.926, -93.7979, 21.7998, 0.23", "-179.096, -94.9422, 21.4558, 0.91", "-182.02, -97.5586, 20.5833, 0.23", "-184.56, -99.5886, 19.9292, 0.91", "-187.14, -101.457, 19.3884, 0.23", "-189.599, -103.057, 19.0261, 0.91", "-192.831, -104.828, 18.8223, 0.23", "-194.12, -105.445, 18.8218, 0.91", "-196.277, -106.291, 18.9766, 0.23", "-198.061, -106.865, 19.1081, 0.91", "-198.724, -107.04, 19.0983, 0.91", "-202.327, -107.907, 18.9026, 0.23", "-203.461, -108.138, 18.8368, 0.23", "-205.729, -108.577, 18.7058, 0.91", "-208.492, -109.09, 18.549, 0.23", "-212.081, -109.724, 18.3546, 0.91", "-217.062, -110.602, 18.1108, 0.23", "-220.1, -111.141, 17.9993, 0.91" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.33828, -10.6761, 8.54, 0.91", "-0.888231, -13.0611, 9.51953, 0.91", "0.209583, -14.8667, 10.2611, 0.91", "1.63401, -17.2095, 11.2233, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "12.1426, -21.7165, -5.19871, 0.91", "11.5364, -25.823, -6.81957, 0.91", "10.9549, -29.7633, -8.37484, 0.91", "10.5269, -32.6628, -9.5193, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "12.1426, -21.7165, -5.19871, 0.23", "14.6711, -23.3022, -4.71512, 0.23", "16.6646, -24.5366, -4.36997, 0.68", "19.383, -26.2525, -3.94211, 0.68", "21.0379, -27.3546, -3.79865, 0.23", "21.9304, -27.9588, -3.76829, 0.91", "23.2678, -28.8626, -3.76382, 0.91", "24.9858, -30.0114, -3.89125, 0.23", "26.5485, -30.9667, -4.10894, 0.91", "29.2333, -32.5327, -4.53537, 0.23", "30.2716, -33.1263, -4.71712, 0.91", "31.6717, -33.9082, -4.96161, 0.23", "33.4506, -34.9148, -5.24371, 1.14", "34.7585, -35.6155, -5.37077, 1.14", "37.3027, -36.9324, -5.44371, 0.23", "38.5695, -37.5579, -5.3897, 0.91", "39.8982, -38.2178, -5.28753, 0.91", "42.5461, -39.4466, -5.0185, 0.23", "44.7661, -40.3641, -4.70639, 0.68", "46.7735, -41.073, -4.38596, 0.23", "47.8597, -41.3514, -4.19585, 0.91", "50.2555, -41.7978, -3.75317, 0.23", "52.6992, -42.0694, -3.31878, 0.91", "54.7998, -42.1619, -2.97532, 0.23", "56.2558, -42.1775, -2.81519, 0.91", "59.187, -42.1784, -2.57026, 0.23", "60.0878, -42.1868, -2.51752, 1.14", "61.9026, -42.2319, -2.45795, 1.14", "64.2336, -42.4412, -2.44234, 0.23", "66.9463, -42.8672, -2.48312, 0.68", "67.9879, -43.0998, -2.47489, 1.36", "70.0067, -43.72, -2.3547, 0.23", "70.9323, -44.0302, -2.26045, 0.45", "73.4412, -44.9103, -1.90791, 0.23", "75.0813, -45.5002, -1.5833, 0.91", "78.1692, -46.6496, -0.761976, 0.23", "81.0893, -47.7136, 0.0869749, 1.14", "82.5257, -48.2238, 0.534601, 0.23", "83.7862, -48.6398, 0.943864, 0.91", "86.2166, -49.399, 1.79444, 0.23", "87.6558, -49.8372, 2.3064, 1.14", "89.972, -50.5357, 3.08347, 0.23", "91.3165, -50.9777, 3.52726, 0.91", "91.7372, -51.1328, 3.66394, 0.91", "93.7274, -51.893, 4.26567, 0.23", "95.0345, -52.3605, 4.59491, 0.91", "97.2686, -53.1692, 5.07443, 0.23", "98.9055, -53.7706, 5.41569, 0.91", "100.759, -54.4389, 5.78025, 0.23", "102.135, -54.9289, 6.02665, 0.68", "105.198, -56.0568, 6.51546, 0.23", "107.165, -56.8143, 6.86428, 0.23", "108.41, -57.2854, 7.12973, 1.14", "109.235, -57.595, 7.34339, 1.14", "111.647, -58.5381, 8.07977, 0.23", "113.048, -59.0843, 8.55415, 1.14", "115.462, -59.9925, 9.41436, 0.23", "118.937, -61.2244, 10.7607, 0.91", "120.556, -61.7915, 11.3817, 0.23", "122.358, -62.4034, 12.0269, 0.91", "124.981, -63.2342, 12.8873, 0.23", "126.948, -63.8601, 13.3917, 0.91", "129.594, -64.8178, 13.8538, 0.23", "133.051, -66.268, 14.1738, 0.23", "135.814, -67.5165, 14.2621, 0.45", "137.808, -68.4993, 14.2381, 0.23", "140.435, -69.8919, 14.0724, 0.23", "142.604, -71.1044, 13.7736, 0.91", "144.048, -71.941, 13.418, 0.23", "145.105, -72.5841, 13.0962, 0.45", "145.895, -73.0729, 12.8379, 0.23", "147.322, -73.8813, 12.3875, 0.91", "149.579, -74.9378, 11.7165, 0.23", "151.322, -75.6099, 11.1966, 0.91", "152.614, -76.0714, 10.8175, 0.23", "153.032, -76.2179, 10.6971, 0.91", "154.521, -76.7329, 10.317, 0.23", "156.159, -77.3737, 9.9491, 0.45", "158.186, -78.2336, 9.637, 0.23", "158.856, -78.5327, 9.55746, 0.91", "159.655, -78.9253, 9.47025, 0.23", "161.064, -79.7119, 9.34249, 1.14", "163.179, -81.1018, 9.28566, 0.23", "164.324, -81.9816, 9.24436, 0.68", "164.973, -82.6351, 9.17837, 0.23", "166.041, -84.1056, 8.97391, 0.23", "166.442, -85.3932, 8.73434, 0.23", "165.912, -87.1452, 8.33594, 0.91", "164.628, -89.7436, 7.70716, 0.23", "163.231, -92.0825, 7.10458, 0.23", "162.315, -93.4098, 6.74459, 0.23", "160.439, -95.6934, 6.07613, 0.23", "158.006, -98.269, 5.27109, 0.68", "166.354, -103.915, 4.60473, 0.68", "174.927, -108.692, 2.38566, 0.68", "182.802, -113.743, -1.36411, 0.68", "190.498, -118.287, -5.97707, 0.68", "199.596, -121.353, -8.78217, 0.68", "208.86, -124.697, -10.5556, 0.68", "217.798, -128.716, -12.6975, 0.68", "227.289, -131.513, -14.0945, 0.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.95424, 17.6943, -1.12, 0.23", "10.9814, 19.1898, -1.2483, 0.23", "14.1832, 21.4113, -1.31998, 0.68", "15.1437, 22.0778, -1.34149, 0.68", "17.1161, 23.4463, -1.38565, 0.23", "19.4213, 25.0457, -1.43726, 0.91", "21.5519, 26.524, -1.48496, 0.91", "23.3247, 27.8574, -1.52028, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.95424, 17.6943, -1.12, 0.68", "8.86046, 21.4073, -0.363611, 0.68", "8.83046, 23.7696, 0.020053, 0.68", "8.83305, 25.7001, 0.292074, 0.91", "8.93432, 29.0474, 0.487883, 0.23", "9.00815, 30.2039, 0.507834, 0.68", "9.33369, 34.3159, 0.500866, 0.23", "9.60484, 37.0372, 0.342588, 1.14", "9.79134, 38.6217, 0.20167, 1.14", "10.591, 44.0277, -0.413482, 0.23", "11.228, 47.3817, -0.868203, 0.91", "11.5645, 48.8435, -1.08284, 0.91", "12.1121, 50.7837, -1.40663, 0.23", "12.9156, 53.4755, -1.83632, 0.23", "13.4653, 55.2564, -2.11823, 0.91", "14.0599, 57.0456, -2.36506, 0.91", "14.9304, 59.625, -2.73263, 0.23", "16.0114, 62.6821, -3.16032, 0.68", "17.1539, 65.8177, -3.62877, 0.23", "17.8574, 67.8048, -3.91093, 0.91", "19.0718, 71.3227, -4.4523, 0.23", "19.6166, 72.8081, -4.69135, 0.23", "19.947, 73.6792, -4.82544, 1.14", "20.4856, 75.0119, -4.98839, 1.14", "21.3559, 77.0315, -5.1846, 0.23", "21.9474, 78.5646, -5.30986, 0.68", "22.8833, 81.4371, -5.53329, 0.23", "23.5133, 83.6413, -5.68264, 0.91", "24.3668, 87.1772, -5.86693, 0.23", "24.8895, 89.7943, -5.9557, 1.14", "25.4009, 93.8009, -6.11581, 0.23", "25.5351, 96.4163, -6.21705, 0.68", "25.4956, 97.9205, -6.30729, 0.23", "25.3181, 100.171, -6.47372, 0.91", "25.101, 101.657, -6.59099, 0.91", "23.9263, 107.677, -7.12381, 0.23", "23.5355, 109.471, -7.3291, 1.14", "22.6637, 113.22, -7.89696, 0.23", "22.0628, 115.715, -8.3301, 0.91", "21.5232, 117.795, -8.72277, 0.91", "20.6229, 121.177, -9.38542, 0.23", "19.4219, 125.511, -10.4032, 0.91", "18.7909, 127.809, -10.9792, 0.23", "18.4356, 129.223, -11.2751, 0.45", "18.0256, 131.03, -11.6409, 0.23", "17.728, 132.474, -11.9248, 0.91", "17.055, 135.939, -12.6486, 0.23", "16.5698, 138.417, -13.2314, 1.14", "15.5656, 143.447, -14.6266, 0.23", "14.8252, 146.945, -15.7285, 1.36", "13.9081, 150.984, -17.2771, 0.45", "13.3838, 153.084, -18.2462, 0.91", "12.517, 156.217, -19.8899, 0.23", "11.8505, 158.269, -21.1587, 0.68", "11.2415, 159.859, -22.3147, 0.68", "9.95382, 163.058, -24.7144, 0.23", "9.24974, 164.913, -26.1187, 0.23", "8.93062, 165.889, -26.8004, 0.91", "8.47674, 168.046, -28.2344, 0.45", "8.3298, 170.027, -29.4596, 0.23", "8.47033, 171.672, -30.4257, 0.91", "8.98386, 173.757, -31.5393, 0.23", "9.37915, 174.811, -32.0923, 1.14", "10.4424, 176.783, -33.2008, 0.23", "11.5366, 178.454, -34.2017, 0.91", "13.0407, 180.613, -35.5771, 0.23", "13.7585, 181.655, -36.2535, 0.23", "14.8664, 183.384, -37.4099, 1.14", "16.6331, 186.562, -39.6635, 0.23", "17.9076, 189.488, -41.8227, 1.14", "18.7738, 192.896, -44.5613, 0.23", "18.9181, 193.738, -45.2554, 0.23", "19.061, 195.557, -46.8159, 0.68", "18.9502, 197.54, -48.6493, 0.23", "18.4212, 199.336, -50.4026, 1.14", "16.9142, 202.118, -53.3136, 0.23", "15.1867, 213.883, -58.2331, 0.23", "11.9564, 226.28, -60.0254, 0.23", "10.6653, 238.738, -63.2611, 0.23", "7.88666, 250.996, -66.242, 0.23", "7.23979, 263.608, -69.1191, 0.23", "5.09272, 276.145, -71.5297, 0.23", "1.35916, 288.274, -73.8933, 0.23", "-2.43164, 300.114, -77.258, 0.23", "-5.63427, 311.701, -81.8096, 0.23", "-8.04024, 322.683, -87.9288, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.15127, 37.9518, 0.0, 0.163069", "-9.88495, 52.7006, 0.0, 0.163069", "-12.6186, 67.4494, 0.0, 0.163069" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-12.3804, 14.8774, 0.771703, 0.23", "-13.085, 15.5502, -1.68092, 0.23", "-13.4884, 15.9354, -3.08525, 0.23", "-14.0198, 16.4429, -4.93535, 0.91", "-15.0034, 17.3821, -8.35913, 0.23", "-16.0501, 18.3817, -12.003, 0.23", "-16.4389, 18.7529, -13.3562, 1.14" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-12.3804, 14.8774, 0.771703, 0.23", "-14.2863, 16.412, 1.07478, 0.23", "-16.8738, 18.5092, 1.52235, 0.91", "-20.1539, 21.1444, 2.11537, 0.68", "-23.2601, 23.7265, 2.7321, 0.23", "-25.6659, 25.7176, 3.12197, 0.68", "-27.801, 27.4768, 3.42186, 0.23", "-28.9333, 28.373, 3.51591, 1.14", "-30.4707, 29.4926, 3.57528, 1.14", "-34.341, 32.084, 3.48089, 0.23", "-37.9194, 34.3582, 3.21175, 0.45", "-40.1805, 35.7229, 3.00224, 0.23", "-43.2704, 37.4666, 2.73135, 0.23", "-47.0041, 39.4365, 2.44788, 0.23", "-49.8502, 40.8423, 2.2705, 0.91", "-51.3774, 41.5293, 2.21725, 0.91", "-56.8384, 43.9353, 2.3555, 0.23", "-60.1854, 45.4129, 2.56709, 0.68", "-62.9094, 46.66, 2.86711, 0.23", "-63.9731, 47.1477, 2.99529, 0.91", "-66.4067, 48.2129, 3.36034, 0.91", "-70.747, 50.0359, 4.02113, 0.23", "-72.9263, 50.8954, 4.36428, 2.05", "-75.0841, 51.8382, 4.71519, 2.05" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "19.5683, 31.6169, -16.7165, 0.68", "21.1763, 31.9553, -17.497, 0.68", "23.5588, 32.3761, -18.7053, 1.14", "25.8926, 32.7728, -19.8237, 0.68", "28.7938, 33.2782, -21.1439, 0.68", "30.7576, 33.6486, -21.9946, 0.68", "32.4346, 33.9649, -22.721, 1.14", "35.1548, 34.4825, -23.8272, 0.68", "37.9747, 35.0229, -24.8946, 0.68", "39.7087, 35.383, -25.5527, 0.68", "40.9362, 35.6156, -25.978, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "19.5683, 31.6169, -16.7165, 0.68", "19.6717, 33.9636, -17.1272, 0.68", "19.7562, 35.2848, -17.3116, 1.14", "19.8797, 36.857, -17.4946, 0.23", "20.0988, 39.245, -17.656, 0.68", "20.2587, 40.9784, -17.6976, 0.68", "20.3386, 41.8713, -17.6969, 0.68", "20.5208, 43.9797, -17.5649, 1.14", "20.7509, 46.9267, -17.3178, 0.23", "20.8542, 48.5207, -17.147, 0.23", "20.9776, 50.8051, -16.8425, 0.68", "20.9863, 51.6657, -16.7148, 0.68", "20.9676, 53.3603, -16.4449, 0.23", "20.9112, 54.5641, -16.2345, 0.91", "20.7394, 56.5792, -15.8688, 0.23", "20.597, 57.8028, -15.6986, 0.68", "20.2675, 60.0843, -15.3866, 1.14" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-220.1, -111.141, 17.9993, 0.23", "-222.459, -111.223, 18.1913, 0.23", "-223.897, -111.301, 18.3126, 0.68", "-225.788, -111.438, 18.4626, 0.23", "-227.303, -111.626, 18.512, 0.45", "-230.577, -112.167, 18.3165, 0.23", "-232.968, -112.614, 18.0661, 0.45", "-233.796, -112.813, 17.9436, 0.23", "-235.149, -113.206, 17.6943, 0.68", "-237.986, -114.131, 17.0678, 0.23", "-241.907, -115.518, 16.2558, 0.68", "-242.861, -115.855, 16.0642, 0.23", "-243.839, -116.205, 15.9225, 0.68", "-245.821, -116.933, 15.7497, 0.23", "-247.174, -117.408, 15.717, 0.91", "-250.409, -118.484, 15.8788, 0.23", "-252.227, -119.066, 16.0531, 1.14", "-254.439, -119.73, 16.2264, 0.23", "-255.902, -120.117, 16.3362, 0.91", "-258.143, -120.636, 16.4773, 0.23", "-259.362, -120.895, 16.525, 0.68", "-260.745, -121.159, 16.519, 0.23", "-262.546, -121.498, 16.5303, 0.68", "-264.17, -121.777, 16.5473, 0.23", "-265.567, -122.073, 16.5927, 0.91", "-266.552, -122.331, 16.6383, 0.23", "-268.322, -122.875, 16.7219, 0.45", "-269.133, -123.142, 16.767, 0.23", "-271.072, -123.796, 16.868, 0.45", "-274.243, -124.814, 16.9831, 0.23", "-275.807, -125.316, 17.049, 0.23", "-278.002, -126.01, 17.1527, 0.68", "-280.673, -126.831, 17.2925, 0.23", "-282.24, -127.28, 17.3748, 0.23", "-284.737, -127.923, 17.4976, 0.91" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-220.1, -111.141, 17.9993, 0.23", "-223.454, -112.573, 16.1661, 0.23", "-224.569, -112.987, 15.653, 0.68", "-226.589, -113.686, 14.8917, 0.23", "-228.213, -114.228, 14.348, 0.91", "-230.514, -114.994, 13.5779, 0.23", "-232.814, -115.761, 12.8079, 0.45", "-235.005, -116.452, 12.2845, 0.23", "-237.603, -117.236, 11.6491, 0.68", "-238.31, -117.442, 11.4804, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.63401, -17.2095, 11.2233, 1.14", "2.59996, -19.5074, 14.2467, 1.14", "3.85453, -22.3237, 17.7025, 1.14", "4.99158, -24.7623, 20.4497, 0.68", "5.92583, -26.766, 22.707, 0.68", "6.41114, -27.8069, 23.8796, 0.91", "7.30955, -29.7337, 26.0502, 0.68", "8.12318, -31.4802, 27.8409, 1.14", "8.76521, -32.7326, 28.9463, 1.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.63401, -17.2095, 11.2233, 0.23", "3.62879, -21.0441, 10.2531, 0.23", "5.9539, -25.5718, 8.83779, 0.23", "8.71154, -30.8827, 7.1334, 0.23", "10.573, -34.3418, 6.0589, 1.82", "11.8738, -36.8307, 5.21412, 1.82", "13.5186, -39.9634, 4.13272, 0.68", "15.2857, -43.3963, 2.81878, 0.23", "16.8037, -46.6227, 1.68862, 0.23", "17.7076, -48.7719, 0.853966, 0.91", "19.2778, -52.719, -0.837584, 0.23", "20.0225, -54.9002, -1.74385, 0.23", "21.0437, -58.651, -3.15752, 0.23", "21.3848, -60.4409, -3.70494, 0.68", "21.978, -64.923, -4.97539, 0.23", "22.1433, -66.6931, -5.40308, 1.36", "22.4013, -70.0467, -5.96989, 0.23", "22.5383, -72.1945, -6.26297, 0.23", "22.8066, -75.4423, -6.48929, 0.91", "23.231, -78.3558, -6.47415, 0.91", "23.6516, -80.3412, -6.39267, 0.91", "25.055, -85.1232, -6.25492, 0.23", "25.9852, -87.5254, -6.24525, 0.23", "27.467, -90.7719, -6.3923, 0.91", "29.4946, -94.7009, -6.70268, 0.23", "31.3884, -98.1019, -7.0698, 0.45", "33.9692, -102.461, -7.64977, 0.23", "36.3331, -106.38, -8.27686, 0.68", "39.0979, -111.098, -9.21106, 0.23", "40.3476, -113.428, -9.73667, 1.14", "40.6752, -114.115, -9.88977, 1.14", "41.399, -115.801, -10.1824, 1.14", "42.9009, -119.594, -10.7282, 0.23", "44.0108, -122.478, -11.0591, 0.91", "45.7786, -127.02, -11.4737, 0.23", "46.5816, -129.069, -11.6512, 1.14", "48.3993, -133.619, -12.0751, 0.23", "49.3502, -135.985, -12.2976, 1.14", "50.714, -139.424, -12.5967, 0.23", "51.3784, -141.23, -12.7319, 1.14", "52.0945, -143.316, -12.8918, 1.14", "53.6414, -148.297, -13.3641, 0.23", "54.4403, -151.232, -13.6685, 1.14", "55.4049, -155.164, -14.1281, 0.23", "56.0328, -157.897, -14.4632, 1.14", "57.0356, -162.191, -14.9595, 0.23", "57.6351, -164.67, -15.2461, 1.82", "58.8192, -169.337, -15.744, 0.23", "59.1376, -170.535, -15.8801, 0.68", "59.727, -172.722, -16.139, 0.23", "60.5987, -175.902, -16.4832, 0.91", "61.4504, -179.173, -16.7952, 0.23", "61.7982, -180.597, -16.8185, 1.14", "62.378, -182.889, -16.744, 0.23", "62.7743, -184.419, -16.64, 0.68", "63.9082, -188.694, -16.2863, 0.23", "64.3308, -190.21, -16.1345, 1.14", "66.0263, -195.862, -15.4614, 0.23", "66.862, -198.764, -14.955, 0.91", "67.2431, -200.145, -14.6618, 0.91", "68.0197, -203.096, -13.9609, 0.23", "68.4372, -204.854, -13.5284, 1.14", "68.7291, -206.274, -13.2024, 1.14", "69.8224, -212.804, -12.2812, 0.23", "70.2013, -215.472, -12.0194, 0.91", "70.3596, -216.561, -11.9999, 0.91", "70.9071, -219.936, -12.1842, 0.23", "71.2261, -221.595, -12.4206, 0.68", "72.221, -225.8, -13.5126, 0.23", "72.5928, -227.155, -14.0402, 0.91", "73.542, -230.644, -15.4289, 0.23", "74.0724, -232.655, -16.1768, 1.14", "74.3365, -233.693, -16.5315, 1.14", "74.6882, -235.204, -16.954, 1.59", "75.3603, -238.682, -17.6149, 0.23", "75.6354, -240.342, -17.9142, 1.14", "76.0661, -243.227, -18.3655, 0.23", "76.2236, -244.14, -18.5323, 0.68", "76.5395, -245.638, -18.8511, 0.23", "76.9271, -247.065, -19.1706, 0.91", "77.6213, -248.893, -19.6429, 0.23", "78.3316, -250.641, -20.0037, 1.14", "79.6051, -253.845, -20.325, 0.23", "80.5284, -256.223, -20.4045, 0.23", "81.3692, -258.458, -20.3733, 0.91", "82.9419, -262.802, -20.1251, 0.23", "84.328, -266.832, -19.7306, 1.14", "86.2617, -272.756, -18.8674, 0.23", "86.7741, -274.502, -18.5492, 0.91", "87.0535, -275.59, -18.3348, 0.91", "87.7123, -278.759, -17.7374, 0.23", "88.0951, -281.296, -17.4059, 1.14", "88.5124, -285.055, -17.305, 0.23", "88.5937, -286.649, -17.3914, 0.68", "88.6145, -289.593, -17.5376, 0.23", "88.573, -291.006, -17.6071, 1.14", "88.3158, -295.504, -17.8028, 0.23", "88.2447, -297.097, -17.8534, 0.91", "88.2318, -297.893, -17.8721, 0.91", "88.2731, -301.307, -17.627, 0.23", "88.2948, -302.777, -17.3469, 0.91", "88.3072, -305.988, -16.4731, 0.23", "88.3129, -307.582, -15.9427, 1.14", "88.2842, -310.236, -15.0825, 0.23", "88.2061, -313.403, -14.1261, 0.91", "88.2315, -316.297, -13.5202, 0.23", "88.3119, -317.884, -13.2796, 0.91", "88.5378, -320.853, -13.0149, 0.23", "88.8147, -323.856, -12.8558, 1.14", "88.9836, -324.956, -12.8635, 1.14", "90.1848, -329.983, -13.4208, 0.23", "90.8602, -332.084, -13.8186, 0.23", "91.2017, -332.942, -14.0147, 0.68", "93.7429, -345.513, -14.7223, 0.68", "97.4009, -357.806, -14.1515, 0.68", "102.217, -369.467, -11.9927, 0.68", "107.757, -380.676, -9.38099, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.5269, -32.6628, -9.5193, 1.59", "10.4658, -32.8826, -9.59158, 1.59", "10.0189, -34.4896, -10.1202, 1.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.5269, -32.6628, -9.5193, 0.23", "11.0166, -33.5871, -10.9705, 0.23", "11.8323, -34.9465, -13.2502, 0.68", "12.7513, -36.4346, -15.7016, 0.23", "13.7782, -37.8787, -18.2046, 0.91", "15.532, -40.2804, -22.4138, 0.91", "16.5415, -41.698, -24.8664, 0.23", "17.411, -42.7631, -26.8288, 0.23", "17.8866, -43.2612, -27.7681, 1.59", "19.8226, -45.0803, -31.1104, 0.23", "20.283, -45.4711, -31.7511, 0.23", "20.9234, -46.0428, -32.4145, 0.23", "21.7029, -46.662, -32.9983, 0.23", "23.0277, -47.5692, -33.8278, 1.14", "24.4685, -48.4369, -34.664, 0.68", "25.9068, -49.334, -35.5091, 0.68", "27.2453, -50.2193, -36.3822, 0.68", "28.8461, -51.2324, -37.7084, 0.23", "30.5883, -52.4165, -39.5022, 0.23", "31.807, -53.2972, -40.8894, 0.68", "33.0546, -54.1972, -42.4169, 0.23", "33.881, -54.7823, -43.4995, 0.91", "36.784, -56.8534, -47.6487, 0.23", "37.5885, -57.5369, -48.9978, 0.23", "38.4538, -58.3091, -50.5574, 0.68", "43.1774, -62.3536, -58.2555, 0.68", "47.3359, -66.9881, -65.9857, 0.68", "52.4194, -72.011, -72.8917, 0.68", "57.4355, -78.2455, -78.8904, 0.68", "61.1973, -84.5428, -85.7106, 0.68", "63.9118, -91.5889, -92.3708, 0.68", "66.2127, -99.5729, -98.1659, 0.68", "70.6111, -107.259, -103.002, 0.68", "74.7144, -115.279, -107.598, 0.68", "79.1748, -123.62, -111.209, 0.68", "83.8734, -132.075, -114.207, 0.68", "87.9282, -141.194, -116.153, 0.68", "91.7232, -150.447, -118.056, 0.68", "94.5829, -159.827, -120.884, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "227.289, -131.513, -14.0945, 0.23", "238.0, -137.093, -14.4052, 0.23", "248.034, -143.854, -15.4276, 0.23", "256.803, -152.356, -15.1475, 0.23", "263.945, -162.378, -16.0456, 0.23", "270.737, -172.534, -14.6009, 0.23", "276.75, -183.171, -12.9321, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "227.289, -131.513, -14.0945, 0.23", "238.077, -136.969, -14.6636, 0.23", "249.384, -141.142, -14.1958, 0.23", "260.005, -146.887, -15.1444, 0.23", "269.84, -153.612, -17.523, 0.23", "278.964, -161.064, -20.6292, 0.23", "288.746, -168.17, -22.055, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "23.3247, 27.8574, -1.52028, 0.23", "24.6668, 28.8088, -1.90966, 0.23", "26.507, 30.0761, -2.4867, 0.68", "28.4255, 31.3825, -3.03288, 0.23", "29.4583, 32.1124, -3.30658, 0.91", "30.1205, 32.5999, -3.4931, 0.91", "31.1943, 33.4255, -3.80284, 0.23", "32.783, 34.6942, -4.20211, 1.59", "34.1852, 35.879, -4.54618, 0.23", "35.012, 36.6243, -4.76231, 1.14", "36.437, 37.8935, -5.09408, 0.23", "37.0625, 38.4274, -5.24198, 0.23", "38.218, 39.4318, -5.53353, 1.14", "39.1062, 40.1946, -5.82159, 0.23", "39.7147, 40.6973, -6.06051, 1.14", "40.6292, 41.4227, -6.43485, 1.14", "42.2662, 42.6758, -7.0692, 0.23", "43.6521, 43.7084, -7.57983, 1.59", "45.6935, 45.1913, -8.29278, 0.23", "46.9873, 46.1442, -8.68865, 0.68", "48.7082, 47.4061, -9.11514, 0.23", "49.8215, 48.252, -9.33058, 1.36", "50.9758, 49.1487, -9.46, 0.23", "52.357, 50.2651, -9.52293, 1.36", "54.7046, 52.2985, -9.47766, 0.23", "56.4533, 53.9006, -9.42718, 0.23", "57.4489, 54.9007, -9.3849, 0.23", "58.5609, 56.136, -9.34157, 2.05", "59.7918, 57.6388, -9.28596, 0.23", "61.0254, 59.3295, -9.20718, 0.23", "61.7135, 60.3703, -9.14748, 1.59", "62.7747, 62.0578, -9.05521, 0.23", "63.1464, 62.6461, -9.01814, 1.14", "63.6549, 63.4829, -8.96631, 1.14", "64.1585, 64.2948, -8.92284, 0.23", "65.0504, 65.7434, -8.86949, 1.14", "65.731, 66.7976, -8.77737, 0.23", "66.2303, 67.4871, -8.71759, 0.23", "66.8255, 68.2357, -8.6687, 0.91", "67.6298, 69.1936, -8.62735, 0.23", "68.4334, 70.1243, -8.6087, 1.36", "69.8218, 71.7122, -8.71838, 0.23", "71.2689, 73.3437, -8.96379, 0.23", "72.0115, 74.1163, -9.15237, 0.91", "72.4936, 74.5912, -9.30294, 0.91", "73.5739, 75.5695, -9.7433, 0.23", "74.6943, 76.4806, -10.2821, 0.91", "76.0503, 77.526, -11.0543, 0.23", "77.2001, 78.3854, -11.6932, 1.14", "77.7198, 78.7408, -11.9569, 1.14", "79.0089, 79.5768, -12.5465, 0.23", "79.8047, 80.0417, -12.8581, 1.14", "81.0896, 80.7702, -13.2197, 0.23", "81.7137, 81.1188, -13.3815, 1.14", "83.9247, 82.3627, -13.8889, 0.23", "84.7366, 82.8251, -14.0576, 0.23", "86.3121, 83.7733, -14.3197, 1.82", "88.0219, 84.8282, -14.5787, 0.23", "90.0972, 86.1347, -14.8512, 1.36", "90.6715, 86.5204, -14.9222, 0.23", "91.4595, 87.0999, -15.0012, 0.68", "92.8823, 88.2005, -15.1156, 0.23", "93.605, 88.8366, -15.1563, 0.23", "94.2007, 89.3966, -15.1793, 1.14", "94.8001, 89.9957, -15.1573, 1.14", "95.2733, 90.5028, -15.152, 0.23", "95.628, 90.8847, -15.1762, 0.23", "96.2286, 91.573, -15.2634, 1.14", "96.6913, 92.147, -15.3463, 1.14", "97.4526, 93.1241, -15.56, 0.23", "97.8668, 93.6543, -15.7007, 0.91", "98.7354, 94.7893, -16.0247, 0.23", "99.6647, 96.0474, -16.4009, 1.14", "100.49, 97.1578, -16.7347, 0.23", "101.481, 98.4423, -17.1752, 1.14", "101.987, 99.0772, -17.4046, 0.23", "102.569, 99.7998, -17.6554, 0.68", "103.493, 100.904, -17.9986, 0.23", "103.84, 101.28, -18.1355, 0.91", "105.302, 102.868, -18.7231, 0.23", "105.841, 103.492, -18.9363, 0.23", "106.459, 104.272, -19.2224, 0.23", "107.138, 105.249, -19.6211, 0.91", "107.898, 106.587, -20.1862, 0.23", "108.431, 107.89, -20.7687, 1.14", "108.593, 108.514, -21.0488, 0.23", "108.738, 109.379, -21.4551, 0.91", "108.881, 110.913, -22.1577, 0.23", "108.907, 111.963, -22.6122, 0.91", "108.877, 113.376, -23.1664, 0.23", "108.852, 114.222, -23.5415, 0.91", "108.828, 115.28, -24.0336, 0.23", "108.829, 116.595, -24.6598, 0.23", "108.826, 117.215, -24.9494, 0.91", "108.828, 118.041, -25.3419, 0.23", "108.86, 119.683, -26.1074, 1.14", "108.87, 120.294, -26.3957, 1.14", "108.894, 122.499, -27.3978, 0.23", "108.902, 123.66, -27.936, 0.23", "108.909, 124.073, -28.1195, 0.45", "108.924, 124.61, -28.3321, 0.23", "108.927, 125.262, -28.5186, 0.23", "108.935, 126.582, -28.8747, 0.23", "114.031, 132.43, -29.2854, 0.23", "119.307, 137.871, -30.9249, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "23.3247, 27.8574, -1.52028, 0.23", "25.2379, 28.7902, -1.60003, 0.23", "28.6065, 30.4627, -1.75431, 0.91", "31.4659, 31.8483, -1.95739, 0.23", "33.08, 32.6119, -2.07501, 0.91", "34.8496, 33.4256, -2.18051, 0.23", "36.4839, 34.1684, -2.24892, 0.23", "37.926, 34.8226, -2.32171, 0.91", "39.4242, 35.5363, -2.39943, 0.23", "41.183, 36.3825, -2.37459, 0.91", "43.3063, 37.4265, -2.33033, 0.23", "45.2739, 38.4108, -2.22986, 0.68", "46.6526, 39.1036, -2.16018, 0.23", "47.9905, 39.7925, -2.08108, 1.14", "49.934, 40.8685, -1.91324, 0.23", "51.0535, 41.5255, -1.8488, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.04024, 322.683, -87.9288, 0.23", "-8.4367, 330.956, -90.7067, 0.23", "-10.5171, 338.911, -93.548, 0.23", "-11.6069, 346.906, -96.8213, 0.23", "-13.3937, 355.291, -98.5289, 0.23", "-16.6182, 363.345, -99.2904, 0.23", "-19.8874, 371.363, -98.3324, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.04024, 322.683, -87.9288, 0.23", "-8.83822, 335.179, -90.6723, 0.23", "-7.83534, 347.753, -93.0701, 0.23", "-5.47091, 360.349, -94.0993, 0.23", "-4.16049, 373.123, -94.9081, 0.23", "-1.82935, 385.766, -94.387, 0.23", "1.47702, 398.17, -94.9227, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-16.4389, 18.7529, -13.3562, 0.23", "-16.9716, 18.1285, -15.7999, 0.23", "-17.2826, 17.8196, -17.2592, 0.23", "-17.5698, 17.5232, -18.5371, 0.91", "-18.1654, 16.8837, -20.879, 0.68", "-18.7476, 16.2578, -22.8643, 0.23", "-19.2327, 15.7807, -24.2397, 0.68", "-20.0535, 14.9668, -26.4444, 0.23", "-20.4726, 14.6133, -27.3149, 0.91", "-21.4529, 13.9018, -28.9457, 0.23", "-22.1412, 13.4371, -29.8212, 1.14", "-23.652, 12.3474, -31.4479, 0.23", "-24.2739, 11.8528, -32.089, 0.68", "-24.938, 11.2871, -32.733, 0.23", "-25.4448, 10.8133, -33.245, 0.23", "-25.8447, 10.4015, -33.652, 0.23", "-26.7812, 9.21034, -34.7691, 1.14", "-27.714, 7.78219, -36.008, 0.23", "-28.6304, 6.17678, -37.4652, 0.91", "-29.3144, 4.88491, -38.6804, 0.23", "-29.7765, 3.90068, -39.6011, 1.14", "-30.5922, 2.12468, -41.3012, 0.23", "-30.9978, 1.19351, -42.2141, 0.91", "-31.6245, -0.380924, -43.7252, 0.23", "-31.9594, -1.3886, -44.6805, 1.14", "-32.3391, -2.71941, -46.0493, 0.23", "-35.8918, -9.12776, -52.278, 0.23" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-16.4389, 18.7529, -13.3562, 0.23", "-15.0821, 18.6545, -14.6784, 0.23", "-13.3783, 18.6024, -16.2642, 0.91", "-12.0092, 18.5521, -17.4697, 0.23", "-11.5996, 18.554, -17.8476, 0.68", "-10.6115, 18.6052, -18.8128, 0.23", "-9.96402, 18.6813, -19.5136, 1.14", "-8.38181, 18.9138, -21.3296, 0.23", "-7.2428, 19.1161, -22.884, 0.91", "-5.60044, 19.3798, -25.4599, 0.23", "-4.9182, 19.4861, -26.6695, 1.36", "-3.49074, 19.7648, -29.6626, 0.23", "-2.91283, 19.8956, -31.1722, 0.91", "-1.80523, 20.1432, -35.044, 0.23", "-1.35986, 20.25, -36.9519, 0.68", "-0.974524, 20.2972, -39.0227, 0.91", "-0.622925, 20.2831, -41.3628, 0.23", "-0.521391, 20.2471, -42.6834, 0.23", "-0.522374, 20.27, -44.1539, 1.14", "3.29753, 21.0405, -51.3296, 1.14", "8.64016, 22.9755, -57.2135, 1.14" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-75.0841, 51.8382, 4.71519, 0.23", "-76.0538, 53.6531, 5.2419, 0.23", "-76.976, 55.2485, 5.6985, 0.23", "-77.3813, 55.8904, 5.87639, 0.91", "-78.7034, 57.9167, 6.50604, 0.23", "-79.5078, 59.1023, 6.88661, 0.91", "-81.2116, 61.5269, 7.66627, 0.23", "-82.267, 62.9606, 8.21325, 1.14", "-83.9418, 65.1057, 9.06829, 0.23", "-85.1589, 66.5965, 9.64856, 0.91", "-86.2814, 67.872, 10.131, 0.23", "-87.215, 68.9076, 10.6025, 0.91", "-88.5889, 70.3187, 11.3746, 0.23", "-89.6879, 71.3953, 12.0414, 0.68", "-90.5001, 72.0897, 12.5253, 0.23", "-91.3798, 72.7265, 13.0413, 0.68", "-93.2469, 73.878, 14.1676, 0.23", "-94.1567, 74.3394, 14.7312, 1.14", "-95.6241, 74.9377, 15.6203, 0.23", "-97.4159, 75.554, 16.7469, 0.23", "-99.2703, 76.0691, 17.8415, 0.68", "-100.221, 76.3039, 18.3364, 0.23", "-102.47, 76.7901, 19.317, 0.68", "-103.31, 76.9699, 19.6595, 0.23", "-104.536, 77.2395, 20.1116, 0.68", "-105.941, 77.5991, 20.5602, 0.23", "-107.898, 78.1591, 21.1002, 0.91", "-110.042, 78.8951, 21.6672, 0.23", "-111.866, 79.6266, 22.1124, 0.91", "-113.727, 80.5017, 22.6628, 0.23", "-114.592, 80.9469, 22.9574, 0.23", "-116.315, 81.9399, 23.5799, 0.91", "-117.818, 82.9166, 24.2049, 0.23", "-118.79, 83.6261, 24.644, 0.68", "-121.21, 85.5673, 25.8174, 0.23", "-122.643, 86.8317, 26.5444, 0.68", "-124.368, 88.4806, 27.4267, 0.23", "-125.887, 90.1723, 28.2801, 0.23", "-126.803, 91.3505, 28.8337, 0.23", "-127.564, 92.5299, 29.3082, 0.68", "-127.961, 93.2875, 29.5682, 0.23", "-128.241, 93.9202, 29.7835, 0.91", "-129.423, 97.0143, 30.8511, 0.23", "-129.865, 98.2939, 31.2363, 0.23", "-130.434, 100.143, 31.807, 0.23", "-131.014, 101.993, 32.3848, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-75.0841, 51.8382, 4.71519, 0.45", "-77.1052, 51.3527, 4.44222, 0.45", "-79.685, 50.6428, 4.15831, 0.91", "-81.0336, 50.2247, 3.94605, 0.23", "-83.0687, 49.4614, 3.50882, 0.91", "-83.8051, 49.1568, 3.3354, 0.91", "-84.6876, 48.7766, 3.11048, 0.23", "-86.326, 48.0095, 2.6484, 0.68", "-88.1865, 47.0429, 2.09443, 0.23", "-90.0839, 46.0467, 1.52716, 1.14", "-91.1589, 45.4865, 1.18757, 1.14", "-93.2873, 44.4218, 0.486407, 0.23", "-94.5601, 43.8521, 0.0754656, 1.14", "-96.8684, 42.8966, -0.676977, 0.23", "-98.1653, 42.4177, -1.0351, 0.23", "-100.338, 41.6685, -1.56367, 0.23", "-100.746, 41.5219, -1.64114, 0.91", "-101.939, 41.096, -1.78707, 1.59", "-104.604, 40.1938, -1.96063, 0.23", "-107.144, 39.4069, -1.97644, 1.36", "-109.238, 38.801, -1.86298, 0.91", "-112.165, 38.0119, -1.52911, 0.23", "-114.322, 37.4571, -1.21756, 1.14", "-116.483, 36.9313, -0.836887, 0.23", "-117.754, 36.6803, -0.556763, 0.23", "-119.604, 36.385, -0.140552, 0.68", "-120.586, 36.2654, 0.0745578, 0.68", "-121.981, 36.1231, 0.353234, 0.23", "-123.758, 35.9144, 0.696759, 0.91", "-125.387, 35.708, 0.958593, 0.23", "-126.185, 35.604, 1.05804, 0.91", "-127.589, 35.4269, 1.18158, 0.23", "-130.221, 35.0899, 1.38904, 1.14", "-131.223, 34.9591, 1.45923, 0.23", "-132.634, 34.7745, 1.54795, 0.68", "-134.467, 34.5171, 1.65931, 0.23", "-135.87, 34.3297, 1.79271, 0.45", "-137.086, 34.1527, 1.99869, 0.23", "-137.675, 34.0679, 2.13549, 0.23", "-139.228, 33.8425, 2.63718, 0.91", "-141.843, 33.4248, 3.67375, 0.23", "-143.668, 33.1309, 4.46462, 0.91", "-147.046, 32.6126, 6.00249, 0.23", "-147.95, 32.4724, 6.43064, 0.23", "-150.25, 32.0795, 7.57562, 1.59", "-153.124, 31.5317, 9.14301, 0.23", "-154.014, 31.3484, 9.65003, 0.91", "-154.581, 31.2312, 9.97708, 0.91", "-156.794, 30.783, 11.2561, 0.23", "-158.825, 30.3342, 12.4131, 0.91", "-160.782, 29.8821, 13.483, 0.23", "-161.832, 29.6359, 14.0568, 1.14", "-163.882, 29.1397, 15.1086, 0.23", "-164.987, 28.8583, 15.6167, 0.91", "-165.86, 28.6551, 15.9497, 0.23", "-167.048, 28.3981, 16.2673, 0.68", "-170.29, 27.7163, 16.9012, 0.23", "-171.663, 27.4213, 17.1415, 0.91", "-173.314, 27.0607, 17.383, 0.23", "-175.253, 26.6583, 17.6091, 0.68", "-177.258, 26.234, 17.7855, 0.23", "-178.767, 25.8953, 17.8751, 0.23", "-180.677, 25.4038, 17.927, 0.91", "-182.833, 24.8091, 17.987, 0.23", "-184.354, 24.3783, 18.0369, 1.14", "-186.563, 23.7206, 18.1297, 0.23", "-187.732, 23.3965, 18.198, 0.91", "-189.596, 22.981, 18.2822, 0.23", "-191.798, 22.629, 18.3944, 0.91", "-193.03, 22.4943, 18.4929, 0.23", "-194.069, 22.4407, 18.6121, 0.68", "-195.202, 22.4542, 18.744, 0.23", "-197.268, 22.588, 19.041, 0.91", "-199.27, 22.7848, 19.4521, 0.23", "-200.241, 22.9174, 19.7052, 0.23", "-200.998, 23.0174, 19.9322, 0.91", "-201.8, 23.1156, 20.2116, 0.23", "-203.854, 23.3146, 20.9926, 0.91", "-205.584, 23.449, 21.8436, 0.23", "-206.865, 23.548, 22.6517, 0.68", "-207.866, 23.6131, 23.3834, 0.23", "-209.903, 23.6768, 25.1386, 0.91", "-210.953, 23.6986, 26.0955, 0.23", "-212.961, 23.7096, 28.0434, 0.91", "-214.798, 23.7132, 29.9474, 0.23", "-215.935, 23.6674, 31.2675, 0.91", "-217.722, 23.6251, 33.6532, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "40.9362, 35.6156, -25.978, 0.23", "42.548, 37.0186, -25.7361, 0.23", "43.6275, 37.8902, -25.5332, 0.91", "45.0171, 38.9536, -25.1782, 0.23", "46.984, 40.4302, -24.6651, 0.23", "47.5761, 40.8688, -24.512, 0.91", "48.9294, 41.9086, -24.1308, 0.23", "49.9528, 42.6796, -23.7889, 0.68", "51.3839, 43.823, -23.2861, 0.23", "52.4143, 44.7303, -22.889, 0.68", "53.6851, 46.0022, -22.4433, 0.23", "54.871, 47.2584, -22.0546, 0.68", "55.4427, 47.9004, -21.8996, 0.23", "56.0165, 48.5488, -21.7781, 0.91", "57.308, 49.8879, -21.629, 0.23", "58.298, 50.7911, -21.5674, 0.68", "59.7445, 51.9577, -21.5661, 0.23", "60.675, 52.5889, -21.5846, 0.68", "62.6485, 53.8092, -21.5552, 0.23", "64.5191, 54.8867, -21.5082, 0.91", "65.7905, 55.5819, -21.5392, 0.23", "66.4496, 55.9386, -21.5629, 0.23", "68.6854, 57.2398, -21.6813, 0.68", "70.4896, 58.4037, -21.8093, 0.23", "71.5568, 59.2169, -21.9202, 0.91", "73.8092, 61.1609, -22.3275, 0.23", "74.4332, 61.7401, -22.5001, 0.23", "75.4317, 62.72, -22.8969, 0.91", "76.865, 64.1782, -23.7025, 0.23", "77.8864, 65.2588, -24.3948, 0.91", "79.4144, 66.9114, -25.4736, 0.23", "80.5276, 68.1259, -26.277, 0.68", "81.8519, 69.4946, -27.2942, 0.23", "82.7475, 70.3531, -28.0518, 0.23", "83.5794, 71.093, -28.8681, 0.91", "90.5064, 74.5399, -30.2606, 0.91", "98.0425, 76.5737, -30.0149, 0.91", "105.722, 76.7784, -31.2985, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "40.9362, 35.6156, -25.978, 0.23", "42.4024, 35.1103, -28.4613, 0.23", "43.6531, 34.682, -30.4543, 0.68", "45.4838, 34.0263, -33.2837, 1.36", "47.6098, 33.2388, -36.3631, 0.23", "48.6869, 32.8536, -37.7963, 0.45", "50.4742, 32.2523, -40.0388, 0.45", "52.0066, 31.8085, -41.6943, 0.23", "53.3879, 31.426, -42.9875, 1.14", "54.5192, 31.1845, -43.8771, 1.14", "55.8983, 31.0097, -44.7982, 0.45", "59.5489, 30.9333, -46.9837, 0.23", "61.2107, 31.0209, -47.8319, 1.14", "62.4119, 31.1069, -48.3644, 0.23", "63.9263, 31.2817, -48.9589, 0.23", "66.1638, 31.5487, -49.8246, 0.91", "68.5697, 31.829, -50.8213, 0.23", "69.2192, 31.9063, -51.0789, 0.68", "70.2498, 32.0059, -51.5355, 0.68", "71.7073, 32.0962, -52.3243, 0.23", "74.1011, 32.1982, -53.6553, 0.91", "76.9967, 32.4193, -55.3259, 0.23", "78.402, 32.53, -56.1565, 1.14", "79.4874, 32.6022, -56.7726, 1.14", "83.0366, 32.8367, -58.7191, 0.23", "84.9044, 32.9577, -59.6887, 0.68", "86.2954, 33.1129, -60.2881, 0.23", "89.1805, 33.5812, -61.2959, 1.14", "92.0233, 34.254, -62.1915, 0.23", "93.4116, 34.7227, -62.5475, 0.91", "94.236, 35.0895, -62.7314, 1.36", "96.7614, 36.495, -63.3737, 0.23", "98.4401, 37.5883, -63.7706, 0.91", "99.6155, 38.4618, -64.0308, 0.91", "101.415, 39.9063, -64.47, 0.23", "103.215, 41.3126, -64.9174, 0.91", "105.904, 43.2555, -65.6071, 0.23", "107.633, 44.402, -66.0685, 0.91", "109.915, 45.7401, -66.6207, 0.23", "110.58, 46.1025, -66.7686, 0.23", "112.448, 47.0664, -67.1575, 0.23", "114.77, 48.1911, -67.5567, 0.68", "116.492, 48.9463, -67.855, 0.23", "118.414, 49.7988, -68.1757, 0.23", "120.441, 50.6547, -68.4671, 0.68", "129.156, 50.6685, -73.9457, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "20.2675, 60.0843, -15.3866, 0.23", "18.2354, 61.6153, -15.0699, 0.23", "16.2595, 63.2249, -14.91, 0.91", "13.3307, 66.0098, -14.8461, 0.23", "12.2177, 67.2739, -15.0103, 1.14", "11.2599, 68.5656, -15.2719, 0.23", "10.2933, 70.0779, -15.6277, 0.68", "9.42452, 71.9348, -16.2123, 0.23", "8.67605, 74.1212, -17.0856, 1.36", "7.78356, 77.7446, -18.7319, 0.23", "7.42286, 79.6369, -19.6303, 0.91", "7.12051, 81.5137, -20.5306, 0.23", "6.83628, 83.712, -21.54, 0.68", "6.62828, 85.5904, -22.3376, 0.23", "6.53778, 86.908, -22.8781, 1.14", "6.51879, 89.2535, -23.8181, 0.23", "6.56042, 90.8672, -24.5041, 0.23", "6.63405, 92.3787, -25.1507, 0.91", "6.77262, 94.2449, -25.9217, 0.23", "6.96468, 96.3268, -26.7425, 0.23", "7.27861, 99.0121, -27.7926, 1.14", "7.46665, 100.306, -28.2738, 1.14", "7.87699, 102.7, -29.1988, 0.23", "8.20682, 104.608, -29.917, 0.23", "8.48147, 106.141, -30.4431, 0.23", "8.66737, 107.399, -30.8646, 0.23", "8.77788, 108.542, -31.2536, 0.45", "8.72927, 111.141, -32.3596, 0.23", "8.54239, 112.403, -32.9644, 0.91", "8.22926, 113.615, -33.6318, 0.91", "7.66522, 115.429, -34.7141, 0.68", "6.83992, 118.001, -36.3673, 1.36", "5.86538, 121.055, -38.438, 0.23", "5.55849, 122.253, -39.296, 0.23", "5.27774, 124.066, -40.6532, 0.23", "5.27891, 125.263, -41.5849, 1.14", "5.80383, 127.336, -43.115, 0.23", "6.02216, 127.758, -43.4027, 0.68", "7.76297, 130.236, -44.9578, 0.23", "8.24228, 130.872, -45.3272, 1.14", "9.43753, 132.493, -46.1268, 0.23", "11.0064, 134.602, -47.1298, 0.91", "11.8844, 135.767, -47.6239, 0.23", "13.3258, 137.733, -48.3914, 0.68", "14.3633, 139.164, -48.845, 0.68", "15.3631, 140.619, -49.2745, 0.23", "13.7287, 152.34, -52.7163, 0.23", "14.3073, 164.348, -55.5623, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "20.2675, 60.0843, -15.3866, 0.23", "21.0208, 61.0253, -15.4838, 0.23", "22.2515, 62.4748, -15.7889, 1.14", "24.034, 64.533, -16.3057, 0.23", "25.0637, 65.7443, -16.6185, 0.68", "25.9685, 66.8256, -16.898, 0.23", "26.987, 68.0561, -17.2143, 0.68", "28.6174, 70.1229, -17.8284, 0.23", "29.7267, 71.652, -18.3144, 0.91", "30.7932, 73.2943, -18.8078, 0.23", "31.1422, 73.8595, -18.9315, 0.91", "32.3834, 75.9727, -19.2327, 0.23", "33.7221, 78.3254, -19.4443, 0.91", "34.9636, 80.5777, -19.5103, 0.23", "35.4801, 81.5273, -19.5102, 0.91", "37.0272, 84.2053, -19.3985, 0.23", "37.5821, 85.0506, -19.2962, 1.14", "38.0808, 85.6784, -19.1581, 1.14", "39.0133, 86.5617, -18.8324, 0.23", "40.366, 87.5666, -18.3726, 0.91", "41.9088, 88.4175, -17.9102, 0.23", "43.9067, 89.2216, -17.4258, 0.23", "45.2344, 89.5762, -17.0741, 0.91", "47.2212, 89.9083, -16.5452, 0.23", "48.3991, 90.0279, -16.2397, 0.91", "50.946, 90.1535, -15.6366, 0.23", "52.5494, 90.1909, -15.3125, 0.68", "55.8074, 90.2022, -14.7883, 0.23", "57.1106, 90.1839, -14.607, 0.68", "58.0621, 90.1584, -14.5192, 0.23", "59.6936, 90.1031, -14.4097, 0.91", "60.7235, 90.0445, -14.3868, 0.23", "61.8579, 89.9815, -14.4151, 0.23", "62.7043, 89.9403, -14.4803, 0.23", "64.5249, 89.8931, -14.5971, 0.91", "65.3736, 89.8945, -14.644, 0.23", "66.6643, 89.958, -14.7753, 0.68", "68.7942, 90.1769, -15.0712, 0.23", "69.6927, 90.3304, -15.2573, 0.91", "71.4112, 90.7526, -15.7083, 0.23", "72.3113, 91.0086, -15.9728, 0.91", "74.7695, 91.8005, -16.7741, 0.23", "76.2286, 92.3363, -17.3182, 0.91", "77.7001, 92.8678, -17.9816, 0.23", "79.0553, 93.3943, -18.698, 0.68", "86.6215, 98.0332, -20.2882, 0.68", "94.2894, 101.602, -23.2753, 0.68", "101.981, 105.792, -25.3248, 0.68", "109.291, 110.704, -27.3263, 0.68" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-238.31, -117.442, 11.4804, 0.23", "-240.362, -120.028, 11.7806, 0.23", "-241.619, -121.703, 11.8567, 0.68", "-242.729, -123.24, 11.8745, 0.23", "-244.312, -125.455, 11.8652, 0.45", "-247.064, -129.351, 11.8153, 0.23", "-248.829, -131.831, 11.7696, 0.23", "-250.524, -134.359, 11.641, 0.91", "-251.981, -136.601, 11.6005, 0.23", "-252.593, -137.574, 11.5807, 0.23", "-253.494, -139.047, 11.5517, 0.91", "-254.723, -141.234, 11.4929, 0.23", "-255.371, -142.515, 11.5138, 0.91", "-257.041, -146.498, 11.434, 0.23", "-258.117, -149.584, 11.1812, 0.23", "-259.063, -152.503, 10.9107, 0.23", "-259.999, -155.681, 10.5651, 0.23", "-260.779, -158.726, 10.1647, 0.68", "-261.734, -162.887, 9.47383, 0.23", "-262.317, -166.235, 8.69561, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-238.31, -117.442, 11.4804, 0.23", "-241.53, -117.739, 10.7825, 0.23", "-243.827, -118.04, 10.3815, 0.45", "-246.143, -118.41, 10.1167, 0.23", "-247.289, -118.604, 9.96697, 0.23", "-248.081, -118.747, 9.86542, 0.23", "-249.12, -118.94, 9.68605, 0.68", "-251.561, -119.513, 9.2391, 0.23", "-252.833, -119.869, 8.9853, 0.45", "-255.327, -120.633, 8.40781, 0.23", "-258.016, -121.461, 7.75637, 0.91", "-260.657, -122.252, 7.11948, 0.23", "-262.825, -122.923, 6.57302, 0.91", "-263.993, -123.277, 6.28016, 0.23", "-264.708, -123.494, 6.09599, 0.91", "-266.0, -123.87, 5.82002, 0.23", "-267.676, -124.29, 5.30195, 0.68", "-269.854, -124.789, 4.5228, 0.23", "-271.255, -125.074, 3.93517, 0.68", "-272.851, -125.431, 3.23289, 0.23", "-274.035, -125.72, 2.63814, 0.91", "-277.899, -126.738, 0.557626, 0.23", "-279.639, -127.211, -0.439471, 0.23", "-280.775, -127.504, -1.10719, 0.23", "-282.974, -128.075, -2.37597, 0.91", "-285.299, -128.705, -3.72125, 0.23", "-286.6, -129.09, -4.45022, 0.23", "-287.747, -129.438, -5.06307, 0.68", "-289.704, -130.045, -6.193, 0.23", "-290.987, -130.45, -6.96071, 0.91", "-292.968, -131.074, -8.18443, 0.23", "-294.78, -131.681, -9.22572, 0.91", "-297.081, -132.564, -10.5417, 0.23", "-298.107, -132.991, -11.1172, 0.23", "-299.563, -133.654, -11.8937, 0.68", "-300.976, -134.35, -12.5966, 0.23", "-302.422, -135.126, -13.2375, 1.14", "-303.955, -135.979, -13.8846, 0.23", "-305.377, -136.797, -14.4096, 0.23", "-307.222, -137.911, -15.0995, 0.91", "-308.855, -138.926, -15.6715, 0.23", "-310.834, -140.182, -16.4707, 1.14", "-311.695, -140.715, -16.8603, 0.23", "-312.355, -141.087, -17.1598, 0.91", "-313.943, -141.995, -17.8925, 0.23", "-315.826, -143.034, -18.85, 1.14", "-318.692, -144.541, -20.4115, 0.23", "-319.769, -145.098, -21.021, 0.23", "-321.139, -145.852, -21.8553, 0.45", "-328.452, -149.353, -24.5047, 0.45" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "8.76521, -32.7326, 28.9463, 0.23", "9.90471, -33.9404, 29.7278, 0.23", "11.1044, -35.2811, 30.5911, 0.91", "14.0138, -38.5511, 32.6302, 0.23", "16.1217, -40.8963, 34.0751, 0.91", "19.0424, -44.1429, 35.9618, 0.23", "20.0054, -45.2655, 36.5744, 0.23", "22.0492, -47.9149, 37.8599, 0.23", "22.6894, -48.8595, 38.3784, 0.68", "23.8458, -50.8045, 39.4846, 0.23", "24.7382, -52.5694, 40.6613, 0.91", "26.0265, -55.7357, 43.0619, 0.23", "26.2559, -56.3469, 43.6003, 0.91", "28.0667, -61.3157, 48.3084, 0.23", "28.4538, -62.312, 49.3208, 0.91", "29.5922, -64.6936, 52.0976, 0.23", "30.2642, -65.6924, 53.5367, 0.91", "32.837, -68.3403, 58.1322, 0.23", "33.5752, -68.9334, 59.2045, 0.23", "34.5954, -69.6094, 60.4687, 0.91", "37.8126, -71.5123, 64.0927, 0.23", "41.4378, -73.4222, 68.0101, 0.23", "45.0016, -75.2502, 71.7853, 0.23", "47.5283, -76.5952, 74.4433, 0.23", "50.6838, -78.3197, 77.8747, 0.23", "52.4167, -79.3122, 79.7854, 0.91", "56.6089, -81.7768, 84.0212, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.76521, -32.7326, 28.9463, 0.23", "8.46148, -36.2084, 29.4934, 0.23", "8.29163, -38.2955, 29.9076, 0.23", "8.02339, -41.4487, 30.5812, 0.91", "7.77765, -44.0541, 31.2407, 0.23", "7.6543, -45.2162, 31.5477, 0.23", "7.48982, -46.9944, 32.0129, 1.14", "7.25096, -49.9862, 32.8447, 0.23", "7.16173, -51.9868, 33.3871, 0.23", "7.17292, -54.1899, 33.9284, 0.91", "7.30435, -56.236, 34.3331, 0.23", "7.62105, -58.6073, 34.7308, 0.23", "7.83977, -59.7316, 34.8761, 0.91", "8.23816, -61.405, 35.1222, 0.68", "8.84668, -63.7213, 35.5864, 0.23", "9.1775, -64.9896, 35.8814, 0.91", "10.0744, -68.5169, 36.9524, 0.23", "10.3741, -69.9973, 37.4813, 0.91", "11.0199, -74.3042, 39.1662, 0.23", "11.1959, -76.561, 40.1574, 0.91", "11.1904, -77.7983, 40.7774, 0.91", "10.991, -80.3431, 42.1496, 0.23", "10.6883, -82.1798, 43.1896, 0.91", "10.2847, -83.7107, 44.1543, 0.23", "9.67366, -85.2616, 45.2666, 0.91", "8.87148, -86.8052, 46.5629, 0.23", "8.37693, -87.5865, 47.3107, 1.14", "7.95542, -88.1376, 47.9105, 0.23", "6.23832, -90.3713, 50.6857, 0.91", "5.34273, -91.5411, 52.2123, 0.23", "4.89046, -92.1623, 53.0026, 1.14", "4.36847, -92.9955, 54.0528, 0.23", "3.92648, -93.8807, 55.1615, 0.91", "3.33116, -95.556, 57.1817, 0.23", "3.14784, -96.332, 58.0569, 0.91", "3.05225, -96.7934, 58.5598, 0.23", "2.67329, -98.9681, 61.0057, 0.91", "2.3787, -100.747, 63.1248, 0.23", "2.06399, -102.677, 65.4366, 0.91", "1.81115, -104.129, 67.2058, 0.23", "1.65712, -105.013, 68.3306, 1.14", "1.32445, -106.739, 70.5722, 0.23", "0.908244, -108.35, 72.6454, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.0189, -34.4896, -10.1202, 0.23", "10.1054, -38.7987, -8.41134, 0.23", "10.0763, -40.931, -7.28742, 0.23", "10.082, -43.7364, -5.65083, 0.91", "10.1142, -44.8576, -4.99292, 0.23", "10.2578, -47.2512, -3.57821, 0.68", "10.3865, -49.4102, -2.14671, 0.23", "10.5752, -53.2584, 0.60736, 0.68", "10.6264, -54.2882, 1.39979, 0.68", "10.7416, -55.7399, 2.51121, 0.23", "10.9139, -57.8668, 4.1292, 1.14", "11.2437, -62.0452, 6.92707, 0.23", "11.2821, -62.8607, 7.37229, 0.23", "11.3229, -63.7158, 7.74986, 0.23", "11.3688, -65.4387, 8.43274, 1.14", "11.3377, -69.2818, 9.94247, 0.23", "11.2644, -71.9709, 10.8935, 1.14", "11.1086, -76.8638, 12.529, 0.23", "10.9791, -80.4385, 13.7715, 0.23", "10.9022, -82.8793, 14.6337, 0.68", "10.7628, -87.6383, 16.2594, 0.23", "10.7034, -89.6926, 16.9289, 1.14", "10.578, -93.3332, 18.1173, 0.23", "10.529, -94.8101, 18.5151, 0.23", "10.5226, -96.3139, 18.8172, 0.23", "10.5584, -98.7412, 19.2607, 0.91", "10.5933, -100.951, 19.6746, 0.23", "10.5991, -103.012, 20.1446, 0.91", "10.5559, -105.053, 20.7401, 0.23", "10.4464, -107.303, 21.6119, 0.91", "10.1491, -110.097, 22.9513, 0.23", "9.50868, -115.164, 25.6414, 0.23", "9.41032, -116.319, 26.1999, 0.68", "9.2752, -119.844, 27.854, 1.14", "9.4157, -123.288, 29.4794, 0.23", "9.95777, -127.936, 31.5611, 0.23", "10.3643, -129.967, 32.3673, 0.23", "11.9957, -136.131, 34.4841, 0.23", "12.8834, -139.142, 35.3779, 0.68", "14.7648, -145.33, 37.0543, 0.23", "15.5733, -147.721, 37.6568, 0.68", "17.0957, -151.836, 38.6918, 0.23", "17.9648, -154.384, 39.4228, 0.23", "18.7421, -157.119, 40.3712, 0.91", "20.2916, -163.442, 42.2134, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.0189, -34.4896, -10.1202, 0.23", "8.91375, -35.678, -11.5024, 0.23", "7.7993, -37.1471, -12.8931, 0.68", "6.51157, -39.0919, -14.6509, 0.68", "5.86837, -40.1632, -15.5628, 0.68", "5.29082, -41.2114, -16.3887, 0.68", "4.49508, -42.7162, -17.512, 0.23", "3.87818, -44.0992, -18.3563, 0.23", "3.19003, -45.9145, -19.3312, 0.23", "2.72992, -47.164, -19.9344, 0.23", "2.07709, -48.8488, -20.7585, 1.14", "1.70665, -49.7602, -21.1962, 1.14", "0.621462, -52.0493, -22.1782, 0.23", "-0.277198, -53.7886, -22.8186, 0.91", "-1.2187, -55.6314, -23.427, 0.91", "-1.57254, -56.3317, -23.6571, 0.91", "-2.74479, -58.7443, -24.514, 0.23", "-3.86208, -61.2008, -25.3677, 0.23", "-4.97148, -63.7558, -26.2412, 0.23", "-5.66857, -65.4996, -26.8161, 0.23", "-6.33072, -67.3695, -27.4691, 0.91", "-7.40657, -70.7617, -28.7221, 0.23", "-8.17322, -73.4802, -29.7975, 0.91", "-8.4311, -74.5133, -30.2324, 0.91", "-8.75637, -75.9172, -30.7924, 0.23", "-9.15931, -77.711, -31.4461, 0.68", "-9.66276, -79.8867, -32.2271, 0.23", "-9.88837, -80.8107, -32.5527, 0.68", "-10.4463, -82.9008, -33.3458, 0.23", "-10.7266, -83.8148, -33.6934, 1.14", "-11.229, -85.2194, -34.2249, 1.14", "-12.1386, -87.3849, -35.0536, 0.23", "-13.2436, -89.6243, -36.0033, 0.23", "-13.9312, -90.777, -36.5499, 0.91", "-14.6573, -91.8105, -37.0918, 0.91", "-15.7545, -93.1732, -37.7666, 0.23", "-16.9301, -94.4851, -38.3764, 0.91", "-17.604, -95.1636, -38.671, 0.91", "-19.3532, -96.7067, -39.3151, 0.23", "-20.2391, -97.4665, -39.6181, 0.23", "-22.4603, -99.3788, -40.3399, 0.68", "-23.4469, -100.272, -40.6558, 0.23", "-24.105, -100.936, -40.8772, 1.14", "-24.7026, -101.593, -41.1025, 1.14", "-26.2083, -103.409, -41.7603, 0.23", "-26.9311, -104.304, -42.1343, 0.23", "-27.9773, -105.742, -42.8073, 1.14", "-28.9781, -107.308, -43.5636, 0.23", "-29.3428, -107.951, -43.9148, 0.68", "-29.821, -108.958, -44.4967, 0.23", "-30.3118, -110.224, -45.2528, 0.23", "-30.7453, -111.884, -46.2496, 0.68", "-31.0934, -113.898, -47.4578, 0.23", "-31.2446, -115.817, -48.5312, 0.23", "-31.2419, -117.798, -49.5371, 0.45", "-31.1285, -118.961, -50.0832, 1.59", "-30.5972, -122.144, -51.4316, 0.23", "-30.4476, -122.841, -51.7045, 0.23", "-29.9302, -124.9, -52.3992, 1.14", "-29.568, -126.243, -52.8074, 1.14", "-28.927, -128.526, -53.501, 0.23", "-28.5233, -129.934, -53.9256, 0.91", "-27.7421, -132.728, -54.7376, 0.23", "-27.4587, -133.862, -55.1019, 0.23", "-27.0947, -135.46, -55.6758, 1.14", "-26.9025, -136.39, -56.0268, 1.14", "-26.1591, -140.173, -57.5334, 0.23", "-25.7891, -141.978, -58.2978, 1.14", "-25.2917, -144.446, -59.4551, 0.23", "-24.9649, -146.029, -60.2707, 1.14", "-24.8629, -146.487, -60.5211, 1.14", "-24.5578, -147.804, -61.1639, 0.23", "-24.3837, -148.507, -61.4063, 0.68", "-23.8987, -150.167, -61.6689, 0.23", "-23.3655, -151.578, -61.5054, 1.14", "-22.9091, -152.697, -61.2148, 1.14", "-21.7283, -155.356, -60.3347, 0.23", "-21.0521, -156.762, -59.8041, 0.91", "-20.6405, -157.551, -59.5359, 0.91", "-19.3072, -159.918, -58.8628, 0.23", "-18.6849, -161.022, -58.6626, 1.14", "-17.9149, -162.489, -58.6347, 1.36", "-16.8507, -164.649, -58.9106, 0.23", "-15.7748, -167.042, -59.3795, 0.23", "-15.1003, -168.671, -59.75, 0.91", "-14.5961, -169.994, -60.0868, 0.91", "-13.4737, -173.074, -60.8356, 0.23", "-12.9905, -174.444, -61.1708, 1.14", "-12.0727, -177.107, -61.7746, 0.23", "-11.571, -178.686, -62.0785, 1.14", "-11.0895, -180.369, -62.3843, 0.23", "-10.8298, -181.319, -62.5601, 0.91", "-10.3184, -184.074, -63.1335, 0.23", "-10.2277, -185.796, -63.5943, 1.59", "-10.5112, -188.023, -64.3549, 0.23", "-10.8985, -189.294, -64.7663, 0.91", "-11.1636, -189.843, -64.9328, 0.91", "-12.6538, -192.248, -65.5672, 0.23", "-13.5954, -193.478, -65.8365, 1.14", "-14.2948, -194.302, -65.9661, 1.14", "-16.26, -196.65, -66.2169, 0.23", "-16.8534, -197.465, -66.2844, 0.91", "-17.8324, -198.983, -66.3594, 0.23", "-18.1898, -199.659, -66.3663, 0.91", "-18.8768, -201.326, -66.4883, 0.23", "-19.415, -202.948, -66.7766, 0.91", "-20.0381, -205.257, -67.5657, 0.23", "-20.2857, -206.334, -68.0509, 0.23", "-20.6082, -207.9, -68.9812, 1.14", "-21.0193, -210.144, -70.5449, 0.23", "-21.2421, -211.784, -71.9044, 1.36", "-21.5036, -213.827, -73.7758, 0.23", "-21.6157, -214.964, -74.8813, 1.14", "-21.72, -216.451, -76.3393, 0.23", "-21.7908, -217.414, -77.2842, 0.68", "-21.9805, -219.624, -79.3584, 0.23", "-22.0374, -220.536, -80.1683, 0.91", "-22.095, -222.101, -81.3891, 0.23", "-22.1154, -223.149, -82.1027, 0.23", "-22.1129, -224.491, -82.9186, 0.23", "-25.1309, -232.201, -85.3998, 0.23", "-28.6154, -239.754, -87.694, 0.23", "-31.7494, -247.569, -89.6489, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "94.5829, -159.827, -120.884, 0.23", "99.065, -165.957, -126.17, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "94.5829, -159.827, -120.884, 0.23", "96.929, -165.631, -126.022, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "51.0535, 41.5255, -1.8488, 0.23", "52.6986, 40.9341, -1.45141, 0.23", "54.2661, 40.4998, -1.19225, 0.68", "56.5994, 39.9531, -0.842638, 0.23", "58.3563, 39.6503, -0.628762, 0.91", "60.1986, 39.3735, -0.467473, 0.23", "61.7494, 39.1668, -0.381276, 1.14", "65.179, 38.8574, -0.251655, 0.23", "66.7788, 38.7429, -0.27557, 0.68", "71.0242, 38.5171, -0.399017, 0.23", "72.9969, 38.4098, -0.445468, 0.68", "76.5079, 38.2562, -0.451008, 0.23", "78.7263, 38.1719, -0.420686, 0.68", "83.4989, 38.0617, -0.302369, 0.23", "87.0052, 38.0135, -0.216924, 0.23", "90.1048, 38.0015, -0.0954227, 0.68", "93.3432, 38.0476, 0.0906654, 0.23", "95.284, 38.1207, 0.2285, 0.68", "97.6698, 38.3045, 0.402498, 0.23", "100.206, 38.6378, 0.655928, 0.23", "101.353, 38.8449, 0.718778, 0.23", "102.093, 39.0312, 0.709129, 0.23", "103.584, 39.454, 0.664092, 0.23", "106.098, 40.2806, 0.634614, 0.68", "107.548, 40.8312, 0.630684, 0.23", "108.698, 41.3533, 0.600856, 0.23", "111.068, 42.4962, 0.422028, 1.36", "119.409, 42.2451, 1.30497, 1.36", "127.554, 40.7351, 2.74061, 1.36", "135.865, 40.7944, 3.89621, 1.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "51.0535, 41.5255, -1.8488, 0.23", "51.8897, 41.9995, -1.67842, 0.23", "54.2354, 43.3292, -1.20049, 1.14", "56.858, 44.8159, -0.666152, 0.23", "58.0538, 45.4938, -0.422501, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-35.8918, -9.12776, -52.278, 0.23", "-41.2966, -16.4012, -61.7177, 0.23", "-46.5151, -23.2938, -71.5211, 0.23", "-50.609, -31.6379, -80.8419, 0.23", "-53.4757, -41.1051, -89.6453, 0.23", "-56.6799, -48.5237, -99.9954, 0.23", "-58.5871, -56.4347, -110.357, 0.23", "-61.0883, -65.3223, -119.817, 0.23", "-61.8554, -73.5017, -130.154, 0.23", "-61.6481, -82.8258, -139.602, 0.23", "-60.5406, -91.284, -149.722, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-35.8918, -9.12776, -52.278, 0.23", "-42.4311, -17.6881, -63.2218, 0.23", "-51.935, -26.5702, -71.3598, 0.23", "-60.0166, -36.9181, -79.4827, 0.23", "-68.2742, -47.1268, -87.5861, 0.23", "-75.7035, -55.93, -97.7509, 0.23", "-85.3544, -64.4337, -106.079, 0.23", "-94.5113, -74.2935, -113.565, 0.23", "-103.485, -83.6465, -121.835, 0.23", "-110.074, -93.4358, -131.768, 0.23", "-117.015, -103.149, -141.522, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "8.64016, 22.9755, -57.2135, 0.23", "13.0817, 22.6354, -67.6064, 0.23", "17.7799, 21.4735, -77.8297, 0.23", "25.0663, 21.5469, -86.483, 0.23", "31.2598, 23.0375, -95.8463, 0.23", "39.5386, 26.0122, -103.076, 0.23", "47.2348, 30.7575, -110.102, 0.23", "56.4341, 36.1158, -114.516, 0.23", "65.562, 40.026, -120.202, 0.23", "75.3795, 43.8475, -124.703, 0.23", "85.3645, 46.9774, -129.297, 0.23", "95.773, 47.995, -133.733, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "8.64016, 22.9755, -57.2135, 0.23", "15.4604, 26.1222, -66.5532, 0.23", "22.1434, 28.966, -76.08, 0.23", "30.3013, 29.2999, -84.8231, 0.23", "39.0963, 28.0616, -92.8524, 0.23", "46.7447, 26.2787, -101.905, 0.23", "54.7823, 22.9941, -110.213, 0.23", "63.6419, 18.9094, -117.261, 0.23", "71.6302, 14.1809, -124.966, 0.23", "79.7865, 8.07301, -131.524, 0.23", "86.6376, 0.610824, -138.315, 0.23", "94.0578, -7.5276, -143.619, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-131.014, 101.993, 32.3848, 0.23", "-132.371, 103.992, 32.4562, 0.23", "-133.495, 105.616, 32.5905, 0.23", "-134.778, 107.589, 32.7471, 0.45", "-135.549, 108.906, 32.873, 0.23", "-136.238, 110.367, 33.0689, 0.68", "-137.143, 112.288, 33.3265, 0.23", "-138.117, 114.565, 33.7126, 0.68", "-138.596, 115.793, 33.9235, 0.23", "-139.087, 117.352, 34.255, 0.68", "-139.781, 120.56, 35.023, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-131.014, 101.993, 32.3848, 0.23", "-133.094, 103.777, 33.4014, 0.23", "-134.305, 104.831, 34.2297, 0.23", "-135.611, 105.968, 35.1228, 0.23", "-137.883, 107.945, 36.6756, 0.68", "-140.468, 110.195, 38.443, 0.23", "-143.558, 112.884, 40.5556, 0.23", "-146.306, 115.432, 42.7508, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "109.291, 110.704, -27.3263, 0.23", "119.092, 116.565, -27.9379, 0.23", "129.246, 121.258, -30.1372, 0.23", "138.804, 126.865, -33.0074, 0.23", "147.271, 132.609, -38.2126, 0.23", "156.004, 139.507, -41.1803, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "109.291, 110.704, -27.3263, 0.23", "119.675, 116.899, -27.9466, 0.23", "129.577, 123.819, -29.2763, 0.23", "139.29, 131.129, -29.2853, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.908244, -108.35, 72.6454, 0.23", "1.20994, -110.304, 73.1023, 0.23", "1.42405, -112.099, 73.4899, 0.68", "1.60411, -114.302, 73.9308, 0.23", "1.68409, -115.727, 74.1959, 0.91", "1.74603, -116.783, 74.3923, 0.23", "1.80803, -117.529, 74.5429, 0.23", "1.94227, -118.739, 74.8107, 0.68", "2.08934, -119.961, 75.0331, 0.23", "2.22977, -120.833, 75.2043, 0.91", "2.67403, -122.625, 75.6651, 0.23", "3.36523, -124.838, 76.3013, 0.91", "3.77236, -125.938, 76.646, 0.23", "4.28035, -127.124, 77.0457, 0.91", "5.36184, -129.424, 77.9191, 0.23", "6.24036, -131.23, 78.6568, 0.23", "6.67425, -132.097, 79.0267, 0.91", "7.37517, -133.46, 79.6416, 0.23", "7.95134, -134.563, 80.1797, 0.91", "9.10657, -136.7, 81.2556, 0.23", "9.52567, -137.496, 81.6113, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.908244, -108.35, 72.6454, 0.23", "0.486279, -109.681, 74.6045, 0.23", "-0.0268071, -111.207, 76.7983, 0.23", "-0.360308, -112.351, 78.4779, 0.68", "-0.493576, -112.982, 79.4084, 0.23", "-0.576542, -113.388, 80.0284, 0.91", "-0.847667, -114.903, 82.4962, 0.23", "-0.931693, -115.458, 83.4409, 0.91", "-1.12341, -116.688, 85.6513, 0.23", "-1.31968, -117.823, 87.6995, 0.23", "-1.41415, -118.302, 88.5148, 0.91", "-1.84399, -119.86, 90.9929, 0.23", "-2.01901, -120.252, 91.5816, 0.91", "-2.37621, -120.875, 92.394, 0.23", "-2.80077, -121.497, 93.0903, 1.14", "-3.79536, -122.821, 94.4166, 0.23", "-4.86125, -124.265, 95.7413, 0.91", "-6.11081, -125.87, 97.0786, 0.23", "-7.12627, -127.187, 98.1847, 0.68", "-8.06692, -128.371, 99.2201, 0.23", "-8.7932, -129.227, 100.004, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "58.0538, 45.4938, -0.422501, 0.23", "60.1942, 45.1585, 1.79755, 0.23", "63.7304, 44.9626, 4.72062, 0.23", "66.5626, 45.0115, 6.69962, 0.91", "68.293, 45.1622, 7.78683, 0.23", "69.6316, 45.3431, 8.58623, 0.91", "72.4207, 45.7692, 10.0774, 0.23", "75.7003, 46.4819, 11.5565, 0.23", "78.5933, 47.1685, 12.6273, 0.23", "82.1556, 47.9809, 13.8426, 0.23", "85.1587, 48.6055, 14.8035, 0.91", "87.8764, 49.1654, 15.6868, 0.23", "89.8223, 49.5944, 16.3545, 0.68", "92.1467, 50.1306, 17.2322, 0.23", "93.9322, 50.607, 17.9642, 0.23", "94.7193, 50.8606, 18.3095, 0.23", "97.173, 51.8689, 19.5552, 0.91", "98.9123, 52.7496, 20.557, 0.23", "100.135, 53.4788, 21.3003, 0.91", "102.985, 55.3168, 22.8701, 0.23", "105.446, 57.017, 24.0654, 0.23", "107.13, 58.2394, 24.7914, 0.23", "108.589, 59.324, 25.3439, 0.68", "111.135, 61.1669, 26.1869, 0.23", "115.081, 63.9439, 27.3462, 0.23", "117.586, 65.5518, 27.8941, 0.23", "118.834, 66.2693, 28.1195, 0.23", "120.634, 67.166, 28.3825, 0.23", "122.272, 67.8769, 28.6195, 0.68", "123.16, 68.1742, 28.769, 0.68", "125.362, 68.7261, 29.4366, 0.23", "127.13, 69.0485, 30.0221, 0.68", "128.391, 69.2429, 30.4608, 0.23", "129.879, 69.4838, 30.9907, 0.68", "132.677, 70.0296, 32.0337, 0.23", "135.054, 70.5431, 33.058, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "58.0538, 45.4938, -0.422501, 0.68", "59.4967, 46.4939, -0.678925, 0.68", "60.4477, 47.1178, -0.800047, 0.68", "62.6904, 48.5287, -1.01318, 0.23", "64.2368, 49.4928, -1.10784, 0.23", "66.3768, 50.7937, -1.16034, 0.91", "68.9359, 52.3235, -1.15551, 0.23", "69.5625, 52.6948, -1.13434, 1.36", "70.1836, 53.0728, -1.08551, 1.36", "71.9275, 54.264, -0.726266, 0.23", "73.5899, 55.6381, -0.242342, 0.23", "74.473, 56.486, 0.0555943, 0.23", "75.1637, 57.24, 0.282214, 1.14", "76.4265, 58.6731, 0.545043, 1.14", "78.745, 61.327, 0.68571, 0.23", "79.9767, 62.6813, 0.514359, 0.68", "81.1983, 63.8743, 0.190646, 0.23", "82.9387, 65.3018, -0.351253, 0.68", "85.5531, 67.0651, -1.22021, 0.23", "87.2322, 67.9566, -1.73514, 0.23", "89.6032, 68.9115, -2.38952, 1.14", "92.1387, 69.6282, -2.79988, 0.23", "94.2774, 70.0139, -2.86516, 0.68", "95.2637, 70.1019, -2.74257, 0.23", "97.9296, 70.1874, -2.00959, 0.91", "99.0932, 70.2024, -1.59206, 0.91", "101.014, 70.2156, -0.805676, 0.23", "102.267, 70.2492, -0.3132, 0.23", "103.0, 70.3057, -0.0479869, 0.23", "105.056, 70.6068, 0.601562, 0.68", "107.332, 71.1601, 1.17796, 0.23", "108.453, 71.5128, 1.40149, 0.68", "109.603, 71.9643, 1.54317, 0.23", "110.678, 72.4098, 1.57726, 0.23", "112.016, 72.9373, 1.55326, 0.23", "112.984, 73.2982, 1.50547, 0.68", "115.524, 74.1425, 1.36874, 0.23", "117.404, 74.7331, 1.24736, 1.14", "120.081, 75.4985, 1.05874, 0.23", "122.432, 76.0916, 0.894552, 0.23", "124.097, 76.4814, 0.780548, 0.91", "126.946, 77.0591, 0.656611, 0.23", "135.92, 82.856, 0.0572275, 0.23", "145.366, 87.6407, -1.15643, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-60.5406, -91.284, -149.722, 0.23", "-65.107, -103.338, -155.789, 0.23", "-72.0069, -114.069, -161.872, 0.23", "-79.6174, -125.319, -165.73, 0.23", "-86.4012, -137.429, -168.548, 0.23", "-91.2212, -150.794, -169.159, 0.23", "-96.057, -164.044, -167.83, 0.23", "-99.1746, -177.784, -166.039, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-60.5406, -91.284, -149.722, 0.23", "-62.1309, -96.949, -159.394, 0.23", "-64.9573, -103.336, -168.327, 0.23", "-66.1972, -109.097, -178.005, 0.23", "-68.2558, -115.543, -187.124, 0.23", "-69.7156, -120.155, -197.302, 0.23", "-70.6649, -123.658, -207.921, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-117.015, -103.149, -141.522, 0.23", "-121.674, -108.64, -146.788, 0.23", "-126.606, -114.475, -151.416, 0.23", "-131.832, -120.363, -155.629, 0.23", "-136.892, -126.331, -159.946, 0.23", "-141.819, -131.577, -165.189, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-117.015, -103.149, -141.522, 0.23", "-123.573, -110.324, -148.173, 0.23", "-128.473, -119.192, -154.376, 0.23", "-131.755, -128.84, -160.566, 0.23", "-136.198, -137.865, -166.9, 0.23", "-142.042, -145.868, -173.356, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "95.773, 47.995, -133.733, 0.23", "103.214, 50.3239, -140.196, 0.23", "109.034, 51.5635, -148.343, 0.23", "114.032, 52.1502, -157.074, 0.23", "119.251, 54.5551, -165.391, 0.23", "124.975, 57.7022, -173.14, 0.23", "131.683, 60.7351, -180.117, 0.23", "139.194, 63.514, -186.342, 0.23", "146.627, 66.1798, -192.699, 0.23", "155.554, 67.4169, -197.286, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "95.773, 47.995, -133.733, 0.23", "98.643, 48.7753, -136.264, 0.23", "101.019, 49.7849, -139.193, 0.23", "103.561, 50.6542, -142.023, 0.23", "106.535, 51.8755, -144.273, 0.23", "109.507, 53.1177, -146.516, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "94.0578, -7.5276, -143.619, 0.23", "102.52, -10.2228, -151.893, 0.23", "111.172, -13.9727, -159.586, 0.23", "119.963, -16.3638, -167.596, 0.23", "126.971, -20.554, -176.645, 0.23", "134.035, -23.6132, -186.047, 0.23", "139.7, -27.1086, -196.232, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "94.0578, -7.5276, -143.619, 0.23", "103.05, -12.1105, -154.486, 0.23", "110.422, -14.7346, -167.062, 0.23", "119.292, -16.949, -178.691, 0.23", "127.491, -18.3089, -190.922, 0.23", "134.915, -17.6471, -203.68, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "156.004, 139.507, -41.1803, 0.23", "167.332, 146.24, -43.4696, 0.23", "178.039, 154.262, -44.4927, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "156.004, 139.507, -41.1803, 0.23", "164.765, 144.803, -43.3335, 0.23", "173.219, 150.582, -45.5978, 0.23", "180.343, 158.251, -47.0431, 0.23", "186.397, 166.83, -48.6909, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "9.52567, -137.496, 81.6113, 0.23", "10.866, -140.856, 82.0844, 0.23", "11.5342, -142.531, 82.3202, 0.91", "13.3274, -147.025, 82.9532, 0.23", "14.0217, -148.765, 83.1982, 0.68", "15.3881, -152.19, 83.6805, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "9.52567, -137.496, 81.6113, 0.23", "9.82996, -140.702, 83.725, 0.23", "10.2067, -144.67, 86.3423, 0.68", "10.4456, -147.187, 88.0021, 0.23", "10.6129, -148.949, 89.1637, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.7932, -129.227, 100.004, 0.23", "-8.26167, -131.007, 101.165, 0.23", "-7.89859, -131.901, 101.672, 0.68", "-6.47604, -135.456, 103.136, 0.23", "-6.25401, -136.011, 103.364, 0.23", "-5.54214, -137.79, 104.097, 0.23", "-4.5743, -140.209, 105.093, 0.91", "-3.85081, -141.823, 105.754, 0.23", "-2.74297, -144.04, 106.446, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.7932, -129.227, 100.004, 0.23", "-9.24941, -130.288, 103.693, 0.23", "-9.71827, -131.144, 106.914, 0.91", "-10.3267, -132.358, 111.728, 0.23", "-10.4555, -132.622, 112.894, 0.68", "-10.8795, -133.473, 116.654, 0.23", "-10.9383, -133.749, 117.877, 1.14", "-10.9094, -134.044, 119.243, 1.14", "-10.7691, -135.282, 124.117, 0.23", "-10.6578, -136.224, 127.529, 1.14", "-10.5997, -136.556, 128.635, 1.14", "-10.1435, -138.65, 135.124, 0.23", "-9.90647, -139.385, 137.261, 0.23", "-9.24005, -140.944, 141.501, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "135.054, 70.5431, 33.058, 0.23", "135.465, 71.7954, 33.1627, 0.23", "135.703, 72.4197, 33.2197, 0.91", "137.208, 75.6875, 33.5977, 0.23", "138.24, 77.5361, 33.9335, 0.68", "139.21, 78.9556, 34.2897, 0.23", "140.229, 80.2653, 34.6759, 0.91", "141.014, 81.0934, 34.986, 0.23", "142.217, 82.1536, 35.4664, 0.68", "144.008, 83.4283, 36.1814, 0.23", "145.862, 84.5972, 36.9628, 0.23", "146.879, 85.1708, 37.3822, 0.23", "147.846, 85.7059, 37.7962, 0.91", "148.527, 86.0632, 38.0986, 0.91", "154.141, 90.2603, 40.292, 0.91", "159.591, 94.4719, 42.8274, 0.91", "163.98, 99.7719, 45.4872, 0.91", "168.993, 104.993, 47.0323, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "135.054, 70.5431, 33.058, 0.23", "136.373, 70.8555, 33.9665, 0.23", "139.139, 71.4522, 35.8664, 0.45", "142.043, 72.0287, 37.8633, 0.23", "144.939, 72.6632, 39.9433, 0.68", "147.957, 73.389, 42.1107, 0.23", "151.296, 74.217, 44.5039, 0.68", "152.684, 74.5873, 45.4825, 0.23", "154.126, 74.9763, 46.4921, 0.68", "157.036, 75.7373, 48.5012, 0.23", "160.821, 76.8424, 51.1547, 1.14", "162.672, 77.4232, 52.4492, 0.23", "163.529, 77.7365, 53.1028, 0.91", "165.428, 78.5207, 54.5785, 0.23", "166.593, 79.0253, 55.4725, 1.14", "169.045, 80.0725, 57.3322, 0.23", "171.843, 81.4239, 59.6856, 0.91", "174.678, 82.8408, 62.1602, 0.23", "177.43, 84.2159, 64.5482, 0.68", "180.817, 85.8857, 67.4182, 0.23", "182.276, 86.619, 68.6933, 0.68", "185.375, 88.1877, 71.5154, 0.23", "188.349, 89.6801, 74.2524, 0.68", "191.04, 91.0431, 76.7391, 0.23", "193.134, 92.1338, 78.7249, 0.23", "198.245, 94.7587, 83.5198, 0.23", "201.754, 96.4892, 86.6447, 0.23", "204.419, 97.7413, 88.8689, 0.68", "209.075, 100.045, 92.7423, 0.23", "212.198, 101.607, 95.2659, 0.23", "215.325, 103.246, 97.7405, 0.23", "218.654, 104.951, 100.183, 0.45", "220.138, 105.717, 101.242, 0.68", "225.122, 108.379, 104.829, 0.23", "227.62, 109.716, 106.615, 0.68", "231.971, 112.428, 109.905, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "145.366, 87.6407, -1.15643, 0.23", "154.64, 92.1974, -1.54555, 0.23", "164.216, 95.9736, -0.86465, 0.23", "173.972, 99.2203, -1.37056, 0.23", "184.021, 101.343, -1.3176, 0.23", "194.215, 101.704, -0.294487, 0.23", "204.306, 100.086, 0.634653, 0.23", "214.345, 99.4634, 2.61217, 0.23", "224.166, 99.4095, 5.55171, 0.23", "234.296, 99.6355, 7.10623, 0.23", "244.146, 99.601, 9.94679, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "145.366, 87.6407, -1.15643, 0.23", "157.688, 93.5533, -0.391676, 0.23", "170.098, 99.0377, 1.24842, 0.23", "181.984, 105.919, 1.30931, 0.23", "194.351, 111.69, 0.132928, 0.23", "207.061, 116.55, 1.21353, 0.23", "219.286, 122.369, 3.14189, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_NBC_9c726011d7_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_44
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_62
create dend_70
public dend_70
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4999998479938421)
    connect dend_27(0), soma_0(0.4999998479938421)
    connect dend_26(0), soma_0(0.4999998479938421)
    connect dend_15(0), soma_0(0.4999998479938421)
    connect dend_0(0), soma_0(0.4999998479938421)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.69096, -9.75392, 0.0, 3.54463 ) }
    soma_0 { pt3dadd( 1.52222, -8.84351, 0.0, 6.43815 ) }
    soma_0 { pt3dadd( 1.35347, -7.93311, 0.0, 8.80214 ) }
    soma_0 { pt3dadd( 1.18473, -7.0227, 0.0, 10.0004 ) }
    soma_0 { pt3dadd( 1.01599, -6.11229, 0.0, 10.9716 ) }
    soma_0 { pt3dadd( 0.847242, -5.20188, 0.0, 11.7871 ) }
    soma_0 { pt3dadd( 0.678498, -4.29147, 0.0, 12.5324 ) }
    soma_0 { pt3dadd( 0.509755, -3.38107, 0.0, 13.2727 ) }
    soma_0 { pt3dadd( 0.341011, -2.47066, 0.0, 13.4566 ) }
    soma_0 { pt3dadd( 0.172268, -1.56025, 0.0, 13.5676 ) }
    soma_0 { pt3dadd( 0.00352426, -0.649843, 0.0, 13.7469 ) }
    soma_0 { pt3dadd( -0.165219, 0.260565, 0.0, 13.8983 ) }
    soma_0 { pt3dadd( -0.333963, 1.17097, 0.0, 14.0 ) }
    soma_0 { pt3dadd( -0.502706, 2.08138, 0.0, 13.9192 ) }
    soma_0 { pt3dadd( -0.67145, 2.99179, 0.0, 13.4728 ) }
    soma_0 { pt3dadd( -0.840193, 3.9022, 0.0, 12.9681 ) }
    soma_0 { pt3dadd( -1.00894, 4.8126, 0.0, 12.2669 ) }
    soma_0 { pt3dadd( -1.17768, 5.72301, 0.0, 11.0106 ) }
    soma_0 { pt3dadd( -1.34642, 6.63342, 0.0, 9.31796 ) }
    soma_0 { pt3dadd( -1.51517, 7.54383, 0.0, 7.37652 ) }
    soma_0 { pt3dadd( -1.68391, 8.45424, 0.0, 4.20409 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.62975, 7.48071, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -2.04842, 8.9128, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -2.89726, 11.8163, -1.86, 3.18 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.38975, -7.41879, 8.54, 2.73 ) }
    dend_27 { pt3dadd( -2.33828, -10.6761, 8.54, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.41975, 1.44321, -4.58, 0.68 ) }
    dend_26 { pt3dadd( -4.46874, 0.198911, -5.40357, 0.68 ) }
    dend_26 { pt3dadd( -4.51082, -0.652897, -5.95753, 0.45 ) }
    dend_26 { pt3dadd( -4.66377, -2.33397, -6.99905, 0.45 ) }
    dend_26 { pt3dadd( -4.84456, -4.20136, -8.18065, 0.45 ) }
    dend_26 { pt3dadd( -4.90951, -4.80105, -8.57781, 1.14 ) }
    dend_26 { pt3dadd( -5.14418, -7.02085, -10.2046, 0.23 ) }
    dend_26 { pt3dadd( -5.21194, -7.81481, -10.8302, 0.23 ) }
    dend_26 { pt3dadd( -5.36781, -9.00436, -11.848, 0.91 ) }
    dend_26 { pt3dadd( -5.71155, -10.4867, -13.3517, 0.23 ) }
    dend_26 { pt3dadd( -6.02532, -11.3268, -14.3571, 0.91 ) }
    dend_26 { pt3dadd( -6.53599, -12.4942, -15.8857, 0.23 ) }
    dend_26 { pt3dadd( -6.80789, -13.0101, -16.6913, 0.23 ) }
    dend_26 { pt3dadd( -7.18457, -13.7027, -17.8585, 0.68 ) }
    dend_26 { pt3dadd( -7.83072, -14.9222, -20.0045, 0.23 ) }
    dend_26 { pt3dadd( -8.09988, -15.4947, -20.9901, 0.23 ) }
    dend_26 { pt3dadd( -8.32216, -16.1062, -21.9363, 1.14 ) }
    dend_26 { pt3dadd( -8.75345, -17.7803, -24.2101, 0.23 ) }
    dend_26 { pt3dadd( -8.8253, -18.4186, -25.0549, 0.23 ) }
    dend_26 { pt3dadd( -8.82352, -19.1544, -26.0212, 1.14 ) }
    dend_26 { pt3dadd( -8.80381, -20.403, -27.6992, 0.23 ) }
    dend_26 { pt3dadd( -8.81537, -21.0174, -28.6843, 0.23 ) }
    dend_26 { pt3dadd( -8.86629, -21.6973, -29.929, 0.91 ) }
    dend_26 { pt3dadd( -8.96587, -22.6752, -31.8316, 0.91 ) }
    dend_26 { pt3dadd( -9.09336, -23.4372, -33.5281, 0.23 ) }
    dend_26 { pt3dadd( -9.2527, -24.0122, -34.8913, 0.23 ) }
    dend_26 { pt3dadd( -9.57136, -24.8667, -36.9456, 0.68 ) }
    dend_26 { pt3dadd( -9.79821, -25.4097, -38.3641, 0.23 ) }
    dend_26 { pt3dadd( -9.97176, -25.7655, -39.3121, 1.14 ) }
    dend_26 { pt3dadd( -10.4781, -26.7439, -41.6367, 0.23 ) }
    dend_26 { pt3dadd( -10.6065, -27.0787, -42.2999, 0.23 ) }
    dend_26 { pt3dadd( -10.6991, -27.5214, -43.0395, 0.23 ) }
    dend_26 { pt3dadd( -12.2545, -32.2738, -49.2457, 0.23 ) }
    dend_26 { pt3dadd( -13.6236, -37.3983, -55.225, 0.23 ) }
    dend_26 { pt3dadd( -14.341, -40.9977, -62.2472, 0.23 ) }
    dend_26 { pt3dadd( -15.7999, -43.2535, -69.634, 0.23 ) }
    dend_26 { pt3dadd( -17.9549, -47.187, -76.1623, 0.23 ) }
    dend_26 { pt3dadd( -22.18, -50.2027, -82.0599, 0.23 ) }
    dend_26 { pt3dadd( -25.8818, -53.2914, -88.2748, 0.23 ) }
    dend_26 { pt3dadd( -29.5842, -55.5974, -94.7902, 0.23 ) }
    dend_26 { pt3dadd( -33.3007, -59.1086, -100.787, 0.23 ) }
    dend_26 { pt3dadd( -35.9153, -62.1024, -107.586, 0.23 ) }
    dend_26 { pt3dadd( -38.7127, -66.3533, -113.662, 0.23 ) }
    dend_26 { pt3dadd( -41.7228, -71.3883, -119.042, 0.23 ) }
    dend_26 { pt3dadd( -44.9549, -75.8057, -124.775, 0.23 ) }
    dend_26 { pt3dadd( -47.8002, -81.351, -129.771, 0.23 ) }
    dend_26 { pt3dadd( -50.3563, -87.8744, -133.727, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.43025, -9.09879, 1.04, 1.14 ) }
    dend_15 { pt3dadd( 4.74177, -12.1018, -0.444799, 1.14 ) }
    dend_15 { pt3dadd( 6.72874, -14.6831, -1.72112, 1.14 ) }
    dend_15 { pt3dadd( 8.65219, -17.182, -2.95665, 1.14 ) }
    dend_15 { pt3dadd( 9.80641, -18.6815, -3.69806, 1.14 ) }
    dend_15 { pt3dadd( 10.8723, -20.0662, -4.38273, 1.59 ) }
    dend_15 { pt3dadd( 12.1426, -21.7165, -5.19871, 1.59 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.95025, 5.64321, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 3.91511, 7.57987, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 4.93185, 9.62065, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 6.59116, 12.9512, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 7.5527, 14.8812, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 8.95424, 17.6943, -1.12, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.68391, 8.45424, 0.0, 0.825086 ) }
    axon_0 { pt3dadd( -4.41759, 23.203, 0.0, 0.825086 ) }
    axon_0 { pt3dadd( -7.15127, 37.9518, 0.0, 0.825086 ) }
    // Section: dend_56, id: dend_56, parent: dend_44 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -2.89726, 11.8163, -1.86, 0.68 ) }
    dend_56 { pt3dadd( -4.36192, 12.2779, -1.4393, 0.68 ) }
    dend_56 { pt3dadd( -5.38924, 12.617, -1.16356, 0.68 ) }
    dend_56 { pt3dadd( -6.79805, 13.0821, -0.785432, 1.14 ) }
    dend_56 { pt3dadd( -7.60852, 13.3496, -0.567898, 0.23 ) }
    dend_56 { pt3dadd( -9.49582, 13.9725, -0.0613444, 0.23 ) }
    dend_56 { pt3dadd( -10.5693, 14.3268, 0.22676, 0.91 ) }
    dend_56 { pt3dadd( -12.3804, 14.8774, 0.771703, 1.82 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.89726, 11.8163, -1.86, 1.82 ) }
    dend_45 { pt3dadd( -0.707187, 14.1062, -3.47381, 1.82 ) }
    dend_45 { pt3dadd( 1.40628, 16.3292, -5.02133, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( 3.01628, 18.0012, -6.16214, 0.68 ) }
    dend_45 { pt3dadd( 4.10584, 19.0914, -6.88994, 1.14 ) }
    dend_45 { pt3dadd( 6.97151, 21.8748, -8.80316, 0.45 ) }
    dend_45 { pt3dadd( 8.58807, 23.4008, -9.89886, 0.45 ) }
    dend_45 { pt3dadd( 9.58192, 24.2534, -10.565, 1.59 ) }
    dend_45 { pt3dadd( 10.6144, 25.0868, -11.2374, 1.59 ) }
    dend_45 { pt3dadd( 12.1255, 26.2819, -12.1732, 0.68 ) }
    dend_45 { pt3dadd( 13.8945, 27.6585, -13.2666, 0.68 ) }
    dend_45 { pt3dadd( 15.3238, 28.7093, -14.0986, 1.36 ) }
    dend_45 { pt3dadd( 16.7416, 29.7056, -14.9323, 2.05 ) }
    dend_45 { pt3dadd( 18.0819, 30.6036, -15.7542, 0.91 ) }
    dend_45 { pt3dadd( 19.5683, 31.6169, -16.7165, 1.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.33828, -10.6761, 8.54, 0.68 ) }
    dend_39 { pt3dadd( -6.63247, -11.5507, 8.11765, 0.68 ) }
    dend_39 { pt3dadd( -11.3781, -12.4648, 7.67881, 0.68 ) }
    dend_39 { pt3dadd( -14.2721, -12.996, 7.35761, 0.23 ) }
    dend_39 { pt3dadd( -16.3263, -13.3686, 7.11557, 0.91 ) }
    dend_39 { pt3dadd( -19.0367, -13.8889, 6.79341, 0.91 ) }
    dend_39 { pt3dadd( -21.6577, -14.4031, 6.44762, 0.23 ) }
    dend_39 { pt3dadd( -23.6822, -14.795, 6.1461, 0.23 ) }
    dend_39 { pt3dadd( -27.0248, -15.5047, 5.63171, 0.68 ) }
    dend_39 { pt3dadd( -29.4629, -16.0992, 5.22092, 0.68 ) }
    dend_39 { pt3dadd( -31.9506, -16.7543, 4.73256, 0.23 ) }
    dend_39 { pt3dadd( -34.5857, -17.5114, 4.16368, 0.68 ) }
    dend_39 { pt3dadd( -36.526, -18.1156, 3.72956, 0.68 ) }
    dend_39 { pt3dadd( -40.01, -19.2887, 2.96976, 0.23 ) }
    dend_39 { pt3dadd( -42.7747, -20.289, 2.41764, 0.23 ) }
    dend_39 { pt3dadd( -44.8087, -21.0552, 2.03338, 0.68 ) }
    dend_39 { pt3dadd( -46.3237, -21.6346, 1.84407, 0.68 ) }
    dend_39 { pt3dadd( -48.4832, -22.4794, 1.7102, 0.68 ) }
    dend_39 { pt3dadd( -51.301, -23.5676, 1.65817, 0.23 ) }
    dend_39 { pt3dadd( -53.7146, -24.4418, 1.72406, 0.45 ) }
    dend_39 { pt3dadd( -55.9137, -25.2, 1.91377, 0.45 ) }
    dend_39 { pt3dadd( -59.9987, -26.6011, 2.37432, 0.23 ) }
    dend_39 { pt3dadd( -61.5099, -27.1424, 2.60779, 1.14 ) }
    dend_39 { pt3dadd( -63.0151, -27.7113, 2.88473, 1.14 ) }
    dend_39 { pt3dadd( -66.2083, -28.9726, 3.53991, 0.23 ) }
    dend_39 { pt3dadd( -68.5644, -29.9893, 4.0324, 0.23 ) }
    dend_39 { pt3dadd( -70.694, -31.0066, 4.44789, 0.91 ) }
    dend_39 { pt3dadd( -74.4108, -32.9185, 5.04958, 0.23 ) }
    dend_39 { pt3dadd( -76.2136, -33.8819, 5.32203, 1.14 ) }
    dend_39 { pt3dadd( -77.0085, -34.316, 5.42914, 1.14 ) }
    dend_39 { pt3dadd( -79.509, -35.6824, 5.68793, 0.23 ) }
    dend_39 { pt3dadd( -81.7154, -36.8237, 5.80874, 1.14 ) }
    dend_39 { pt3dadd( -84.1913, -37.9966, 5.85731, 0.23 ) }
    dend_39 { pt3dadd( -86.3519, -38.888, 5.80859, 1.14 ) }
    dend_39 { pt3dadd( -87.6451, -39.3762, 5.78196, 0.23 ) }
    dend_39 { pt3dadd( -90.2931, -40.3045, 5.72945, 0.23 ) }
    dend_39 { pt3dadd( -92.073, -40.9067, 5.70666, 1.14 ) }
    dend_39 { pt3dadd( -93.3989, -41.3325, 5.71411, 1.14 ) }
    dend_39 { pt3dadd( -96.7787, -42.4652, 5.78139, 0.23 ) }
    dend_39 { pt3dadd( -98.1118, -42.949, 5.91235, 1.14 ) }
    dend_39 { pt3dadd( -99.8232, -43.608, 6.18168, 1.14 ) }
    dend_39 { pt3dadd( -101.839, -44.4075, 6.59258, 0.23 ) }
    dend_39 { pt3dadd( -103.852, -45.2506, 7.13988, 0.91 ) }
    dend_39 { pt3dadd( -106.026, -46.2111, 7.83156, 0.23 ) }
    dend_39 { pt3dadd( -109.743, -47.9972, 9.07454, 0.23 ) }
    dend_39 { pt3dadd( -110.536, -48.3992, 9.34195, 1.14 ) }
    dend_39 { pt3dadd( -112.732, -49.5611, 9.99872, 1.14 ) }
    dend_39 { pt3dadd( -115.537, -51.1204, 10.6708, 0.23 ) }
    dend_39 { pt3dadd( -116.965, -51.9335, 10.9171, 0.23 ) }
    dend_39 { pt3dadd( -120.616, -54.0013, 11.4508, 0.68 ) }
    dend_39 { pt3dadd( -123.143, -55.4034, 11.7112, 0.23 ) }
    dend_39 { pt3dadd( -125.785, -56.8847, 11.9771, 1.14 ) }
    dend_39 { pt3dadd( -128.883, -58.6614, 12.2609, 0.23 ) }
    dend_39 { pt3dadd( -131.513, -60.192, 12.5105, 0.91 ) }
    dend_39 { pt3dadd( -134.841, -62.1469, 12.9305, 0.23 ) }
    dend_39 { pt3dadd( -137.03, -63.4372, 13.2687, 0.23 ) }
    dend_39 { pt3dadd( -137.802, -63.9002, 13.4254, 0.23 ) }
    dend_39 { pt3dadd( -139.029, -64.6407, 13.7522, 0.23 ) }
    dend_39 { pt3dadd( -141.364, -66.0605, 14.5785, 0.91 ) }
    dend_39 { pt3dadd( -143.059, -67.1153, 15.2591, 0.91 ) }
    dend_39 { pt3dadd( -145.269, -68.4603, 16.0973, 0.23 ) }
    dend_39 { pt3dadd( -147.381, -69.7164, 16.8564, 1.14 ) }
    dend_39 { pt3dadd( -148.736, -70.4678, 17.3614, 1.14 ) }
    dend_39 { pt3dadd( -151.76, -72.0591, 18.4799, 0.23 ) }
    dend_39 { pt3dadd( -153.364, -72.8815, 19.0392, 0.68 ) }
    dend_39 { pt3dadd( -156.733, -74.675, 20.1847, 0.23 ) }
    dend_39 { pt3dadd( -159.369, -76.1768, 21.0802, 0.91 ) }
    dend_39 { pt3dadd( -162.571, -78.2316, 22.0813, 0.23 ) }
    dend_39 { pt3dadd( -163.519, -78.9225, 22.3538, 0.23 ) }
    dend_39 { pt3dadd( -164.862, -80.0111, 22.6667, 0.23 ) }
    dend_39 { pt3dadd( -166.747, -81.736, 23.0355, 1.14 ) }
    dend_39 { pt3dadd( -169.08, -84.0652, 23.3843, 0.23 ) }
    dend_39 { pt3dadd( -170.794, -85.9103, 23.414, 0.68 ) }
    dend_39 { pt3dadd( -173.42, -88.8686, 23.0228, 0.23 ) }
    dend_39 { pt3dadd( -175.52, -91.2382, 22.5057, 0.91 ) }
    dend_39 { pt3dadd( -177.926, -93.7979, 21.7998, 0.23 ) }
    dend_39 { pt3dadd( -179.096, -94.9422, 21.4558, 0.91 ) }
    dend_39 { pt3dadd( -182.02, -97.5586, 20.5833, 0.23 ) }
    dend_39 { pt3dadd( -184.56, -99.5886, 19.9292, 0.91 ) }
    dend_39 { pt3dadd( -187.14, -101.457, 19.3884, 0.23 ) }
    dend_39 { pt3dadd( -189.599, -103.057, 19.0261, 0.91 ) }
    dend_39 { pt3dadd( -192.831, -104.828, 18.8223, 0.23 ) }
    dend_39 { pt3dadd( -194.12, -105.445, 18.8218, 0.91 ) }
    dend_39 { pt3dadd( -196.277, -106.291, 18.9766, 0.23 ) }
    dend_39 { pt3dadd( -198.061, -106.865, 19.1081, 0.91 ) }
    dend_39 { pt3dadd( -198.724, -107.04, 19.0983, 0.91 ) }
    dend_39 { pt3dadd( -202.327, -107.907, 18.9026, 0.23 ) }
    dend_39 { pt3dadd( -203.461, -108.138, 18.8368, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_39 { pt3dadd( -205.729, -108.577, 18.7058, 0.91 ) }
    dend_39 { pt3dadd( -208.492, -109.09, 18.549, 0.23 ) }
    dend_39 { pt3dadd( -212.081, -109.724, 18.3546, 0.91 ) }
    dend_39 { pt3dadd( -217.062, -110.602, 18.1108, 0.23 ) }
    dend_39 { pt3dadd( -220.1, -111.141, 17.9993, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.33828, -10.6761, 8.54, 0.91 ) }
    dend_28 { pt3dadd( -0.888231, -13.0611, 9.51953, 0.91 ) }
    dend_28 { pt3dadd( 0.209583, -14.8667, 10.2611, 0.91 ) }
    dend_28 { pt3dadd( 1.63401, -17.2095, 11.2233, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 12.1426, -21.7165, -5.19871, 0.91 ) }
    dend_19 { pt3dadd( 11.5364, -25.823, -6.81957, 0.91 ) }
    dend_19 { pt3dadd( 10.9549, -29.7633, -8.37484, 0.91 ) }
    dend_19 { pt3dadd( 10.5269, -32.6628, -9.5193, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 12.1426, -21.7165, -5.19871, 0.23 ) }
    dend_16 { pt3dadd( 14.6711, -23.3022, -4.71512, 0.23 ) }
    dend_16 { pt3dadd( 16.6646, -24.5366, -4.36997, 0.68 ) }
    dend_16 { pt3dadd( 19.383, -26.2525, -3.94211, 0.68 ) }
    dend_16 { pt3dadd( 21.0379, -27.3546, -3.79865, 0.23 ) }
    dend_16 { pt3dadd( 21.9304, -27.9588, -3.76829, 0.91 ) }
    dend_16 { pt3dadd( 23.2678, -28.8626, -3.76382, 0.91 ) }
    dend_16 { pt3dadd( 24.9858, -30.0114, -3.89125, 0.23 ) }
    dend_16 { pt3dadd( 26.5485, -30.9667, -4.10894, 0.91 ) }
    dend_16 { pt3dadd( 29.2333, -32.5327, -4.53537, 0.23 ) }
    dend_16 { pt3dadd( 30.2716, -33.1263, -4.71712, 0.91 ) }
    dend_16 { pt3dadd( 31.6717, -33.9082, -4.96161, 0.23 ) }
    dend_16 { pt3dadd( 33.4506, -34.9148, -5.24371, 1.14 ) }
    dend_16 { pt3dadd( 34.7585, -35.6155, -5.37077, 1.14 ) }
    dend_16 { pt3dadd( 37.3027, -36.9324, -5.44371, 0.23 ) }
    dend_16 { pt3dadd( 38.5695, -37.5579, -5.3897, 0.91 ) }
    dend_16 { pt3dadd( 39.8982, -38.2178, -5.28753, 0.91 ) }
    dend_16 { pt3dadd( 42.5461, -39.4466, -5.0185, 0.23 ) }
    dend_16 { pt3dadd( 44.7661, -40.3641, -4.70639, 0.68 ) }
    dend_16 { pt3dadd( 46.7735, -41.073, -4.38596, 0.23 ) }
    dend_16 { pt3dadd( 47.8597, -41.3514, -4.19585, 0.91 ) }
    dend_16 { pt3dadd( 50.2555, -41.7978, -3.75317, 0.23 ) }
    dend_16 { pt3dadd( 52.6992, -42.0694, -3.31878, 0.91 ) }
    dend_16 { pt3dadd( 54.7998, -42.1619, -2.97532, 0.23 ) }
    dend_16 { pt3dadd( 56.2558, -42.1775, -2.81519, 0.91 ) }
    dend_16 { pt3dadd( 59.187, -42.1784, -2.57026, 0.23 ) }
    dend_16 { pt3dadd( 60.0878, -42.1868, -2.51752, 1.14 ) }
    dend_16 { pt3dadd( 61.9026, -42.2319, -2.45795, 1.14 ) }
    dend_16 { pt3dadd( 64.2336, -42.4412, -2.44234, 0.23 ) }
    dend_16 { pt3dadd( 66.9463, -42.8672, -2.48312, 0.68 ) }
    dend_16 { pt3dadd( 67.9879, -43.0998, -2.47489, 1.36 ) }
    dend_16 { pt3dadd( 70.0067, -43.72, -2.3547, 0.23 ) }
    dend_16 { pt3dadd( 70.9323, -44.0302, -2.26045, 0.45 ) }
    dend_16 { pt3dadd( 73.4412, -44.9103, -1.90791, 0.23 ) }
    dend_16 { pt3dadd( 75.0813, -45.5002, -1.5833, 0.91 ) }
    dend_16 { pt3dadd( 78.1692, -46.6496, -0.761976, 0.23 ) }
    dend_16 { pt3dadd( 81.0893, -47.7136, 0.0869749, 1.14 ) }
    dend_16 { pt3dadd( 82.5257, -48.2238, 0.534601, 0.23 ) }
    dend_16 { pt3dadd( 83.7862, -48.6398, 0.943864, 0.91 ) }
    dend_16 { pt3dadd( 86.2166, -49.399, 1.79444, 0.23 ) }
    dend_16 { pt3dadd( 87.6558, -49.8372, 2.3064, 1.14 ) }
    dend_16 { pt3dadd( 89.972, -50.5357, 3.08347, 0.23 ) }
    dend_16 { pt3dadd( 91.3165, -50.9777, 3.52726, 0.91 ) }
    dend_16 { pt3dadd( 91.7372, -51.1328, 3.66394, 0.91 ) }
    dend_16 { pt3dadd( 93.7274, -51.893, 4.26567, 0.23 ) }
    dend_16 { pt3dadd( 95.0345, -52.3605, 4.59491, 0.91 ) }
    dend_16 { pt3dadd( 97.2686, -53.1692, 5.07443, 0.23 ) }
    dend_16 { pt3dadd( 98.9055, -53.7706, 5.41569, 0.91 ) }
    dend_16 { pt3dadd( 100.759, -54.4389, 5.78025, 0.23 ) }
    dend_16 { pt3dadd( 102.135, -54.9289, 6.02665, 0.68 ) }
    dend_16 { pt3dadd( 105.198, -56.0568, 6.51546, 0.23 ) }
    dend_16 { pt3dadd( 107.165, -56.8143, 6.86428, 0.23 ) }
    dend_16 { pt3dadd( 108.41, -57.2854, 7.12973, 1.14 ) }
    dend_16 { pt3dadd( 109.235, -57.595, 7.34339, 1.14 ) }
    dend_16 { pt3dadd( 111.647, -58.5381, 8.07977, 0.23 ) }
    dend_16 { pt3dadd( 113.048, -59.0843, 8.55415, 1.14 ) }
    dend_16 { pt3dadd( 115.462, -59.9925, 9.41436, 0.23 ) }
    dend_16 { pt3dadd( 118.937, -61.2244, 10.7607, 0.91 ) }
    dend_16 { pt3dadd( 120.556, -61.7915, 11.3817, 0.23 ) }
    dend_16 { pt3dadd( 122.358, -62.4034, 12.0269, 0.91 ) }
    dend_16 { pt3dadd( 124.981, -63.2342, 12.8873, 0.23 ) }
    dend_16 { pt3dadd( 126.948, -63.8601, 13.3917, 0.91 ) }
    dend_16 { pt3dadd( 129.594, -64.8178, 13.8538, 0.23 ) }
    dend_16 { pt3dadd( 133.051, -66.268, 14.1738, 0.23 ) }
    dend_16 { pt3dadd( 135.814, -67.5165, 14.2621, 0.45 ) }
    dend_16 { pt3dadd( 137.808, -68.4993, 14.2381, 0.23 ) }
    dend_16 { pt3dadd( 140.435, -69.8919, 14.0724, 0.23 ) }
    dend_16 { pt3dadd( 142.604, -71.1044, 13.7736, 0.91 ) }
    dend_16 { pt3dadd( 144.048, -71.941, 13.418, 0.23 ) }
    dend_16 { pt3dadd( 145.105, -72.5841, 13.0962, 0.45 ) }
    dend_16 { pt3dadd( 145.895, -73.0729, 12.8379, 0.23 ) }
    dend_16 { pt3dadd( 147.322, -73.8813, 12.3875, 0.91 ) }
    dend_16 { pt3dadd( 149.579, -74.9378, 11.7165, 0.23 ) }
    dend_16 { pt3dadd( 151.322, -75.6099, 11.1966, 0.91 ) }
    dend_16 { pt3dadd( 152.614, -76.0714, 10.8175, 0.23 ) }
    dend_16 { pt3dadd( 153.032, -76.2179, 10.6971, 0.91 ) }
    dend_16 { pt3dadd( 154.521, -76.7329, 10.317, 0.23 ) }
    dend_16 { pt3dadd( 156.159, -77.3737, 9.9491, 0.45 ) }
    dend_16 { pt3dadd( 158.186, -78.2336, 9.637, 0.23 ) }
    dend_16 { pt3dadd( 158.856, -78.5327, 9.55746, 0.91 ) }
    dend_16 { pt3dadd( 159.655, -78.9253, 9.47025, 0.23 ) }
    dend_16 { pt3dadd( 161.064, -79.7119, 9.34249, 1.14 ) }
    dend_16 { pt3dadd( 163.179, -81.1018, 9.28566, 0.23 ) }
    dend_16 { pt3dadd( 164.324, -81.9816, 9.24436, 0.68 ) }
    dend_16 { pt3dadd( 164.973, -82.6351, 9.17837, 0.23 ) }
    dend_16 { pt3dadd( 166.041, -84.1056, 8.97391, 0.23 ) }
    dend_16 { pt3dadd( 166.442, -85.3932, 8.73434, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 165.912, -87.1452, 8.33594, 0.91 ) }
    dend_16 { pt3dadd( 164.628, -89.7436, 7.70716, 0.23 ) }
    dend_16 { pt3dadd( 163.231, -92.0825, 7.10458, 0.23 ) }
    dend_16 { pt3dadd( 162.315, -93.4098, 6.74459, 0.23 ) }
    dend_16 { pt3dadd( 160.439, -95.6934, 6.07613, 0.23 ) }
    dend_16 { pt3dadd( 158.006, -98.269, 5.27109, 0.68 ) }
    dend_16 { pt3dadd( 166.354, -103.915, 4.60473, 0.68 ) }
    dend_16 { pt3dadd( 174.927, -108.692, 2.38566, 0.68 ) }
    dend_16 { pt3dadd( 182.802, -113.743, -1.36411, 0.68 ) }
    dend_16 { pt3dadd( 190.498, -118.287, -5.97707, 0.68 ) }
    dend_16 { pt3dadd( 199.596, -121.353, -8.78217, 0.68 ) }
    dend_16 { pt3dadd( 208.86, -124.697, -10.5556, 0.68 ) }
    dend_16 { pt3dadd( 217.798, -128.716, -12.6975, 0.68 ) }
    dend_16 { pt3dadd( 227.289, -131.513, -14.0945, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.95424, 17.6943, -1.12, 0.23 ) }
    dend_4 { pt3dadd( 10.9814, 19.1898, -1.2483, 0.23 ) }
    dend_4 { pt3dadd( 14.1832, 21.4113, -1.31998, 0.68 ) }
    dend_4 { pt3dadd( 15.1437, 22.0778, -1.34149, 0.68 ) }
    dend_4 { pt3dadd( 17.1161, 23.4463, -1.38565, 0.23 ) }
    dend_4 { pt3dadd( 19.4213, 25.0457, -1.43726, 0.91 ) }
    dend_4 { pt3dadd( 21.5519, 26.524, -1.48496, 0.91 ) }
    dend_4 { pt3dadd( 23.3247, 27.8574, -1.52028, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.95424, 17.6943, -1.12, 0.68 ) }
    dend_1 { pt3dadd( 8.86046, 21.4073, -0.363611, 0.68 ) }
    dend_1 { pt3dadd( 8.83046, 23.7696, 0.020053, 0.68 ) }
    dend_1 { pt3dadd( 8.83305, 25.7001, 0.292074, 0.91 ) }
    dend_1 { pt3dadd( 8.93432, 29.0474, 0.487883, 0.23 ) }
    dend_1 { pt3dadd( 9.00815, 30.2039, 0.507834, 0.68 ) }
    dend_1 { pt3dadd( 9.33369, 34.3159, 0.500866, 0.23 ) }
    dend_1 { pt3dadd( 9.60484, 37.0372, 0.342588, 1.14 ) }
    dend_1 { pt3dadd( 9.79134, 38.6217, 0.20167, 1.14 ) }
    dend_1 { pt3dadd( 10.591, 44.0277, -0.413482, 0.23 ) }
    dend_1 { pt3dadd( 11.228, 47.3817, -0.868203, 0.91 ) }
    dend_1 { pt3dadd( 11.5645, 48.8435, -1.08284, 0.91 ) }
    dend_1 { pt3dadd( 12.1121, 50.7837, -1.40663, 0.23 ) }
    dend_1 { pt3dadd( 12.9156, 53.4755, -1.83632, 0.23 ) }
    dend_1 { pt3dadd( 13.4653, 55.2564, -2.11823, 0.91 ) }
    dend_1 { pt3dadd( 14.0599, 57.0456, -2.36506, 0.91 ) }
    dend_1 { pt3dadd( 14.9304, 59.625, -2.73263, 0.23 ) }
    dend_1 { pt3dadd( 16.0114, 62.6821, -3.16032, 0.68 ) }
    dend_1 { pt3dadd( 17.1539, 65.8177, -3.62877, 0.23 ) }
    dend_1 { pt3dadd( 17.8574, 67.8048, -3.91093, 0.91 ) }
    dend_1 { pt3dadd( 19.0718, 71.3227, -4.4523, 0.23 ) }
    dend_1 { pt3dadd( 19.6166, 72.8081, -4.69135, 0.23 ) }
    dend_1 { pt3dadd( 19.947, 73.6792, -4.82544, 1.14 ) }
    dend_1 { pt3dadd( 20.4856, 75.0119, -4.98839, 1.14 ) }
    dend_1 { pt3dadd( 21.3559, 77.0315, -5.1846, 0.23 ) }
    dend_1 { pt3dadd( 21.9474, 78.5646, -5.30986, 0.68 ) }
    dend_1 { pt3dadd( 22.8833, 81.4371, -5.53329, 0.23 ) }
    dend_1 { pt3dadd( 23.5133, 83.6413, -5.68264, 0.91 ) }
    dend_1 { pt3dadd( 24.3668, 87.1772, -5.86693, 0.23 ) }
    dend_1 { pt3dadd( 24.8895, 89.7943, -5.9557, 1.14 ) }
    dend_1 { pt3dadd( 25.4009, 93.8009, -6.11581, 0.23 ) }
    dend_1 { pt3dadd( 25.5351, 96.4163, -6.21705, 0.68 ) }
    dend_1 { pt3dadd( 25.4956, 97.9205, -6.30729, 0.23 ) }
    dend_1 { pt3dadd( 25.3181, 100.171, -6.47372, 0.91 ) }
    dend_1 { pt3dadd( 25.101, 101.657, -6.59099, 0.91 ) }
    dend_1 { pt3dadd( 23.9263, 107.677, -7.12381, 0.23 ) }
    dend_1 { pt3dadd( 23.5355, 109.471, -7.3291, 1.14 ) }
    dend_1 { pt3dadd( 22.6637, 113.22, -7.89696, 0.23 ) }
    dend_1 { pt3dadd( 22.0628, 115.715, -8.3301, 0.91 ) }
    dend_1 { pt3dadd( 21.5232, 117.795, -8.72277, 0.91 ) }
    dend_1 { pt3dadd( 20.6229, 121.177, -9.38542, 0.23 ) }
    dend_1 { pt3dadd( 19.4219, 125.511, -10.4032, 0.91 ) }
    dend_1 { pt3dadd( 18.7909, 127.809, -10.9792, 0.23 ) }
    dend_1 { pt3dadd( 18.4356, 129.223, -11.2751, 0.45 ) }
    dend_1 { pt3dadd( 18.0256, 131.03, -11.6409, 0.23 ) }
    dend_1 { pt3dadd( 17.728, 132.474, -11.9248, 0.91 ) }
    dend_1 { pt3dadd( 17.055, 135.939, -12.6486, 0.23 ) }
    dend_1 { pt3dadd( 16.5698, 138.417, -13.2314, 1.14 ) }
    dend_1 { pt3dadd( 15.5656, 143.447, -14.6266, 0.23 ) }
    dend_1 { pt3dadd( 14.8252, 146.945, -15.7285, 1.36 ) }
    dend_1 { pt3dadd( 13.9081, 150.984, -17.2771, 0.45 ) }
    dend_1 { pt3dadd( 13.3838, 153.084, -18.2462, 0.91 ) }
    dend_1 { pt3dadd( 12.517, 156.217, -19.8899, 0.23 ) }
    dend_1 { pt3dadd( 11.8505, 158.269, -21.1587, 0.68 ) }
    dend_1 { pt3dadd( 11.2415, 159.859, -22.3147, 0.68 ) }
    dend_1 { pt3dadd( 9.95382, 163.058, -24.7144, 0.23 ) }
    dend_1 { pt3dadd( 9.24974, 164.913, -26.1187, 0.23 ) }
    dend_1 { pt3dadd( 8.93062, 165.889, -26.8004, 0.91 ) }
    dend_1 { pt3dadd( 8.47674, 168.046, -28.2344, 0.45 ) }
    dend_1 { pt3dadd( 8.3298, 170.027, -29.4596, 0.23 ) }
    dend_1 { pt3dadd( 8.47033, 171.672, -30.4257, 0.91 ) }
    dend_1 { pt3dadd( 8.98386, 173.757, -31.5393, 0.23 ) }
    dend_1 { pt3dadd( 9.37915, 174.811, -32.0923, 1.14 ) }
    dend_1 { pt3dadd( 10.4424, 176.783, -33.2008, 0.23 ) }
    dend_1 { pt3dadd( 11.5366, 178.454, -34.2017, 0.91 ) }
    dend_1 { pt3dadd( 13.0407, 180.613, -35.5771, 0.23 ) }
    dend_1 { pt3dadd( 13.7585, 181.655, -36.2535, 0.23 ) }
    dend_1 { pt3dadd( 14.8664, 183.384, -37.4099, 1.14 ) }
    dend_1 { pt3dadd( 16.6331, 186.562, -39.6635, 0.23 ) }
    dend_1 { pt3dadd( 17.9076, 189.488, -41.8227, 1.14 ) }
    dend_1 { pt3dadd( 18.7738, 192.896, -44.5613, 0.23 ) }
    dend_1 { pt3dadd( 18.9181, 193.738, -45.2554, 0.23 ) }
    dend_1 { pt3dadd( 19.061, 195.557, -46.8159, 0.68 ) }
    dend_1 { pt3dadd( 18.9502, 197.54, -48.6493, 0.23 ) }
    dend_1 { pt3dadd( 18.4212, 199.336, -50.4026, 1.14 ) }
    dend_1 { pt3dadd( 16.9142, 202.118, -53.3136, 0.23 ) }
    dend_1 { pt3dadd( 15.1867, 213.883, -58.2331, 0.23 ) }
    dend_1 { pt3dadd( 11.9564, 226.28, -60.0254, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 10.6653, 238.738, -63.2611, 0.23 ) }
    dend_1 { pt3dadd( 7.88666, 250.996, -66.242, 0.23 ) }
    dend_1 { pt3dadd( 7.23979, 263.608, -69.1191, 0.23 ) }
    dend_1 { pt3dadd( 5.09272, 276.145, -71.5297, 0.23 ) }
    dend_1 { pt3dadd( 1.35916, 288.274, -73.8933, 0.23 ) }
    dend_1 { pt3dadd( -2.43164, 300.114, -77.258, 0.23 ) }
    dend_1 { pt3dadd( -5.63427, 311.701, -81.8096, 0.23 ) }
    dend_1 { pt3dadd( -8.04024, 322.683, -87.9288, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.15127, 37.9518, 0.0, 0.163069 ) }
    axon_1 { pt3dadd( -9.88495, 52.7006, 0.0, 0.163069 ) }
    axon_1 { pt3dadd( -12.6186, 67.4494, 0.0, 0.163069 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 11/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -12.3804, 14.8774, 0.771703, 0.23 ) }
    dend_62 { pt3dadd( -13.085, 15.5502, -1.68092, 0.23 ) }
    dend_62 { pt3dadd( -13.4884, 15.9354, -3.08525, 0.23 ) }
    dend_62 { pt3dadd( -14.0198, 16.4429, -4.93535, 0.91 ) }
    dend_62 { pt3dadd( -15.0034, 17.3821, -8.35913, 0.23 ) }
    dend_62 { pt3dadd( -16.0501, 18.3817, -12.003, 0.23 ) }
    dend_62 { pt3dadd( -16.4389, 18.7529, -13.3562, 1.14 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 18/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -12.3804, 14.8774, 0.771703, 0.23 ) }
    dend_57 { pt3dadd( -14.2863, 16.412, 1.07478, 0.23 ) }
    dend_57 { pt3dadd( -16.8738, 18.5092, 1.52235, 0.91 ) }
    dend_57 { pt3dadd( -20.1539, 21.1444, 2.11537, 0.68 ) }
    dend_57 { pt3dadd( -23.2601, 23.7265, 2.7321, 0.23 ) }
    dend_57 { pt3dadd( -25.6659, 25.7176, 3.12197, 0.68 ) }
    dend_57 { pt3dadd( -27.801, 27.4768, 3.42186, 0.23 ) }
    dend_57 { pt3dadd( -28.9333, 28.373, 3.51591, 1.14 ) }
    dend_57 { pt3dadd( -30.4707, 29.4926, 3.57528, 1.14 ) }
    dend_57 { pt3dadd( -34.341, 32.084, 3.48089, 0.23 ) }
    dend_57 { pt3dadd( -37.9194, 34.3582, 3.21175, 0.45 ) }
    dend_57 { pt3dadd( -40.1805, 35.7229, 3.00224, 0.23 ) }
    dend_57 { pt3dadd( -43.2704, 37.4666, 2.73135, 0.23 ) }
    dend_57 { pt3dadd( -47.0041, 39.4365, 2.44788, 0.23 ) }
    dend_57 { pt3dadd( -49.8502, 40.8423, 2.2705, 0.91 ) }
    dend_57 { pt3dadd( -51.3774, 41.5293, 2.21725, 0.91 ) }
    dend_57 { pt3dadd( -56.8384, 43.9353, 2.3555, 0.23 ) }
    dend_57 { pt3dadd( -60.1854, 45.4129, 2.56709, 0.68 ) }
    dend_57 { pt3dadd( -62.9094, 46.66, 2.86711, 0.23 ) }
    dend_57 { pt3dadd( -63.9731, 47.1477, 2.99529, 0.91 ) }
    dend_57 { pt3dadd( -66.4067, 48.2129, 3.36034, 0.91 ) }
    dend_57 { pt3dadd( -70.747, 50.0359, 4.02113, 0.23 ) }
    dend_57 { pt3dadd( -72.9263, 50.8954, 4.36428, 2.05 ) }
    dend_57 { pt3dadd( -75.0841, 51.8382, 4.71519, 2.05 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 19.5683, 31.6169, -16.7165, 0.68 ) }
    dend_53 { pt3dadd( 21.1763, 31.9553, -17.497, 0.68 ) }
    dend_53 { pt3dadd( 23.5588, 32.3761, -18.7053, 1.14 ) }
    dend_53 { pt3dadd( 25.8926, 32.7728, -19.8237, 0.68 ) }
    dend_53 { pt3dadd( 28.7938, 33.2782, -21.1439, 0.68 ) }
    dend_53 { pt3dadd( 30.7576, 33.6486, -21.9946, 0.68 ) }
    dend_53 { pt3dadd( 32.4346, 33.9649, -22.721, 1.14 ) }
    dend_53 { pt3dadd( 35.1548, 34.4825, -23.8272, 0.68 ) }
    dend_53 { pt3dadd( 37.9747, 35.0229, -24.8946, 0.68 ) }
    dend_53 { pt3dadd( 39.7087, 35.383, -25.5527, 0.68 ) }
    dend_53 { pt3dadd( 40.9362, 35.6156, -25.978, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 19.5683, 31.6169, -16.7165, 0.68 ) }
    dend_46 { pt3dadd( 19.6717, 33.9636, -17.1272, 0.68 ) }
    dend_46 { pt3dadd( 19.7562, 35.2848, -17.3116, 1.14 ) }
    dend_46 { pt3dadd( 19.8797, 36.857, -17.4946, 0.23 ) }
    dend_46 { pt3dadd( 20.0988, 39.245, -17.656, 0.68 ) }
    dend_46 { pt3dadd( 20.2587, 40.9784, -17.6976, 0.68 ) }
    dend_46 { pt3dadd( 20.3386, 41.8713, -17.6969, 0.68 ) }
    dend_46 { pt3dadd( 20.5208, 43.9797, -17.5649, 1.14 ) }
    dend_46 { pt3dadd( 20.7509, 46.9267, -17.3178, 0.23 ) }
    dend_46 { pt3dadd( 20.8542, 48.5207, -17.147, 0.23 ) }
    dend_46 { pt3dadd( 20.9776, 50.8051, -16.8425, 0.68 ) }
    dend_46 { pt3dadd( 20.9863, 51.6657, -16.7148, 0.68 ) }
    dend_46 { pt3dadd( 20.9676, 53.3603, -16.4449, 0.23 ) }
    dend_46 { pt3dadd( 20.9112, 54.5641, -16.2345, 0.91 ) }
    dend_46 { pt3dadd( 20.7394, 56.5792, -15.8688, 0.23 ) }
    dend_46 { pt3dadd( 20.597, 57.8028, -15.6986, 0.68 ) }
    dend_46 { pt3dadd( 20.2675, 60.0843, -15.3866, 1.14 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -220.1, -111.141, 17.9993, 0.23 ) }
    dend_43 { pt3dadd( -222.459, -111.223, 18.1913, 0.23 ) }
    dend_43 { pt3dadd( -223.897, -111.301, 18.3126, 0.68 ) }
    dend_43 { pt3dadd( -225.788, -111.438, 18.4626, 0.23 ) }
    dend_43 { pt3dadd( -227.303, -111.626, 18.512, 0.45 ) }
    dend_43 { pt3dadd( -230.577, -112.167, 18.3165, 0.23 ) }
    dend_43 { pt3dadd( -232.968, -112.614, 18.0661, 0.45 ) }
    dend_43 { pt3dadd( -233.796, -112.813, 17.9436, 0.23 ) }
    dend_43 { pt3dadd( -235.149, -113.206, 17.6943, 0.68 ) }
    dend_43 { pt3dadd( -237.986, -114.131, 17.0678, 0.23 ) }
    dend_43 { pt3dadd( -241.907, -115.518, 16.2558, 0.68 ) }
    dend_43 { pt3dadd( -242.861, -115.855, 16.0642, 0.23 ) }
    dend_43 { pt3dadd( -243.839, -116.205, 15.9225, 0.68 ) }
    dend_43 { pt3dadd( -245.821, -116.933, 15.7497, 0.23 ) }
    dend_43 { pt3dadd( -247.174, -117.408, 15.717, 0.91 ) }
    dend_43 { pt3dadd( -250.409, -118.484, 15.8788, 0.23 ) }
    dend_43 { pt3dadd( -252.227, -119.066, 16.0531, 1.14 ) }
    dend_43 { pt3dadd( -254.439, -119.73, 16.2264, 0.23 ) }
    dend_43 { pt3dadd( -255.902, -120.117, 16.3362, 0.91 ) }
    dend_43 { pt3dadd( -258.143, -120.636, 16.4773, 0.23 ) }
    dend_43 { pt3dadd( -259.362, -120.895, 16.525, 0.68 ) }
    dend_43 { pt3dadd( -260.745, -121.159, 16.519, 0.23 ) }
    dend_43 { pt3dadd( -262.546, -121.498, 16.5303, 0.68 ) }
    dend_43 { pt3dadd( -264.17, -121.777, 16.5473, 0.23 ) }
    dend_43 { pt3dadd( -265.567, -122.073, 16.5927, 0.91 ) }
    dend_43 { pt3dadd( -266.552, -122.331, 16.6383, 0.23 ) }
    dend_43 { pt3dadd( -268.322, -122.875, 16.7219, 0.45 ) }
    dend_43 { pt3dadd( -269.133, -123.142, 16.767, 0.23 ) }
    dend_43 { pt3dadd( -271.072, -123.796, 16.868, 0.45 ) }
    dend_43 { pt3dadd( -274.243, -124.814, 16.9831, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( -275.807, -125.316, 17.049, 0.23 ) }
    dend_43 { pt3dadd( -278.002, -126.01, 17.1527, 0.68 ) }
    dend_43 { pt3dadd( -280.673, -126.831, 17.2925, 0.23 ) }
    dend_43 { pt3dadd( -282.24, -127.28, 17.3748, 0.23 ) }
    dend_43 { pt3dadd( -284.737, -127.923, 17.4976, 0.91 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 5/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -220.1, -111.141, 17.9993, 0.23 ) }
    dend_40 { pt3dadd( -223.454, -112.573, 16.1661, 0.23 ) }
    dend_40 { pt3dadd( -224.569, -112.987, 15.653, 0.68 ) }
    dend_40 { pt3dadd( -226.589, -113.686, 14.8917, 0.23 ) }
    dend_40 { pt3dadd( -228.213, -114.228, 14.348, 0.91 ) }
    dend_40 { pt3dadd( -230.514, -114.994, 13.5779, 0.23 ) }
    dend_40 { pt3dadd( -232.814, -115.761, 12.8079, 0.45 ) }
    dend_40 { pt3dadd( -235.005, -116.452, 12.2845, 0.23 ) }
    dend_40 { pt3dadd( -237.603, -117.236, 11.6491, 0.68 ) }
    dend_40 { pt3dadd( -238.31, -117.442, 11.4804, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 15/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.63401, -17.2095, 11.2233, 1.14 ) }
    dend_30 { pt3dadd( 2.59996, -19.5074, 14.2467, 1.14 ) }
    dend_30 { pt3dadd( 3.85453, -22.3237, 17.7025, 1.14 ) }
    dend_30 { pt3dadd( 4.99158, -24.7623, 20.4497, 0.68 ) }
    dend_30 { pt3dadd( 5.92583, -26.766, 22.707, 0.68 ) }
    dend_30 { pt3dadd( 6.41114, -27.8069, 23.8796, 0.91 ) }
    dend_30 { pt3dadd( 7.30955, -29.7337, 26.0502, 0.68 ) }
    dend_30 { pt3dadd( 8.12318, -31.4802, 27.8409, 1.14 ) }
    dend_30 { pt3dadd( 8.76521, -32.7326, 28.9463, 1.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.63401, -17.2095, 11.2233, 0.23 ) }
    dend_29 { pt3dadd( 3.62879, -21.0441, 10.2531, 0.23 ) }
    dend_29 { pt3dadd( 5.9539, -25.5718, 8.83779, 0.23 ) }
    dend_29 { pt3dadd( 8.71154, -30.8827, 7.1334, 0.23 ) }
    dend_29 { pt3dadd( 10.573, -34.3418, 6.0589, 1.82 ) }
    dend_29 { pt3dadd( 11.8738, -36.8307, 5.21412, 1.82 ) }
    dend_29 { pt3dadd( 13.5186, -39.9634, 4.13272, 0.68 ) }
    dend_29 { pt3dadd( 15.2857, -43.3963, 2.81878, 0.23 ) }
    dend_29 { pt3dadd( 16.8037, -46.6227, 1.68862, 0.23 ) }
    dend_29 { pt3dadd( 17.7076, -48.7719, 0.853966, 0.91 ) }
    dend_29 { pt3dadd( 19.2778, -52.719, -0.837584, 0.23 ) }
    dend_29 { pt3dadd( 20.0225, -54.9002, -1.74385, 0.23 ) }
    dend_29 { pt3dadd( 21.0437, -58.651, -3.15752, 0.23 ) }
    dend_29 { pt3dadd( 21.3848, -60.4409, -3.70494, 0.68 ) }
    dend_29 { pt3dadd( 21.978, -64.923, -4.97539, 0.23 ) }
    dend_29 { pt3dadd( 22.1433, -66.6931, -5.40308, 1.36 ) }
    dend_29 { pt3dadd( 22.4013, -70.0467, -5.96989, 0.23 ) }
    dend_29 { pt3dadd( 22.5383, -72.1945, -6.26297, 0.23 ) }
    dend_29 { pt3dadd( 22.8066, -75.4423, -6.48929, 0.91 ) }
    dend_29 { pt3dadd( 23.231, -78.3558, -6.47415, 0.91 ) }
    dend_29 { pt3dadd( 23.6516, -80.3412, -6.39267, 0.91 ) }
    dend_29 { pt3dadd( 25.055, -85.1232, -6.25492, 0.23 ) }
    dend_29 { pt3dadd( 25.9852, -87.5254, -6.24525, 0.23 ) }
    dend_29 { pt3dadd( 27.467, -90.7719, -6.3923, 0.91 ) }
    dend_29 { pt3dadd( 29.4946, -94.7009, -6.70268, 0.23 ) }
    dend_29 { pt3dadd( 31.3884, -98.1019, -7.0698, 0.45 ) }
    dend_29 { pt3dadd( 33.9692, -102.461, -7.64977, 0.23 ) }
    dend_29 { pt3dadd( 36.3331, -106.38, -8.27686, 0.68 ) }
    dend_29 { pt3dadd( 39.0979, -111.098, -9.21106, 0.23 ) }
    dend_29 { pt3dadd( 40.3476, -113.428, -9.73667, 1.14 ) }
    dend_29 { pt3dadd( 40.6752, -114.115, -9.88977, 1.14 ) }
    dend_29 { pt3dadd( 41.399, -115.801, -10.1824, 1.14 ) }
    dend_29 { pt3dadd( 42.9009, -119.594, -10.7282, 0.23 ) }
    dend_29 { pt3dadd( 44.0108, -122.478, -11.0591, 0.91 ) }
    dend_29 { pt3dadd( 45.7786, -127.02, -11.4737, 0.23 ) }
    dend_29 { pt3dadd( 46.5816, -129.069, -11.6512, 1.14 ) }
    dend_29 { pt3dadd( 48.3993, -133.619, -12.0751, 0.23 ) }
    dend_29 { pt3dadd( 49.3502, -135.985, -12.2976, 1.14 ) }
    dend_29 { pt3dadd( 50.714, -139.424, -12.5967, 0.23 ) }
    dend_29 { pt3dadd( 51.3784, -141.23, -12.7319, 1.14 ) }
    dend_29 { pt3dadd( 52.0945, -143.316, -12.8918, 1.14 ) }
    dend_29 { pt3dadd( 53.6414, -148.297, -13.3641, 0.23 ) }
    dend_29 { pt3dadd( 54.4403, -151.232, -13.6685, 1.14 ) }
    dend_29 { pt3dadd( 55.4049, -155.164, -14.1281, 0.23 ) }
    dend_29 { pt3dadd( 56.0328, -157.897, -14.4632, 1.14 ) }
    dend_29 { pt3dadd( 57.0356, -162.191, -14.9595, 0.23 ) }
    dend_29 { pt3dadd( 57.6351, -164.67, -15.2461, 1.82 ) }
    dend_29 { pt3dadd( 58.8192, -169.337, -15.744, 0.23 ) }
    dend_29 { pt3dadd( 59.1376, -170.535, -15.8801, 0.68 ) }
    dend_29 { pt3dadd( 59.727, -172.722, -16.139, 0.23 ) }
    dend_29 { pt3dadd( 60.5987, -175.902, -16.4832, 0.91 ) }
    dend_29 { pt3dadd( 61.4504, -179.173, -16.7952, 0.23 ) }
    dend_29 { pt3dadd( 61.7982, -180.597, -16.8185, 1.14 ) }
    dend_29 { pt3dadd( 62.378, -182.889, -16.744, 0.23 ) }
    dend_29 { pt3dadd( 62.7743, -184.419, -16.64, 0.68 ) }
    dend_29 { pt3dadd( 63.9082, -188.694, -16.2863, 0.23 ) }
    dend_29 { pt3dadd( 64.3308, -190.21, -16.1345, 1.14 ) }
    dend_29 { pt3dadd( 66.0263, -195.862, -15.4614, 0.23 ) }
    dend_29 { pt3dadd( 66.862, -198.764, -14.955, 0.91 ) }
    dend_29 { pt3dadd( 67.2431, -200.145, -14.6618, 0.91 ) }
    dend_29 { pt3dadd( 68.0197, -203.096, -13.9609, 0.23 ) }
    dend_29 { pt3dadd( 68.4372, -204.854, -13.5284, 1.14 ) }
    dend_29 { pt3dadd( 68.7291, -206.274, -13.2024, 1.14 ) }
    dend_29 { pt3dadd( 69.8224, -212.804, -12.2812, 0.23 ) }
    dend_29 { pt3dadd( 70.2013, -215.472, -12.0194, 0.91 ) }
    dend_29 { pt3dadd( 70.3596, -216.561, -11.9999, 0.91 ) }
    dend_29 { pt3dadd( 70.9071, -219.936, -12.1842, 0.23 ) }
    dend_29 { pt3dadd( 71.2261, -221.595, -12.4206, 0.68 ) }
    dend_29 { pt3dadd( 72.221, -225.8, -13.5126, 0.23 ) }
    dend_29 { pt3dadd( 72.5928, -227.155, -14.0402, 0.91 ) }
    dend_29 { pt3dadd( 73.542, -230.644, -15.4289, 0.23 ) }
    dend_29 { pt3dadd( 74.0724, -232.655, -16.1768, 1.14 ) }
    dend_29 { pt3dadd( 74.3365, -233.693, -16.5315, 1.14 ) }
    dend_29 { pt3dadd( 74.6882, -235.204, -16.954, 1.59 ) }
    dend_29 { pt3dadd( 75.3603, -238.682, -17.6149, 0.23 ) }
    dend_29 { pt3dadd( 75.6354, -240.342, -17.9142, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( 76.0661, -243.227, -18.3655, 0.23 ) }
    dend_29 { pt3dadd( 76.2236, -244.14, -18.5323, 0.68 ) }
    dend_29 { pt3dadd( 76.5395, -245.638, -18.8511, 0.23 ) }
    dend_29 { pt3dadd( 76.9271, -247.065, -19.1706, 0.91 ) }
    dend_29 { pt3dadd( 77.6213, -248.893, -19.6429, 0.23 ) }
    dend_29 { pt3dadd( 78.3316, -250.641, -20.0037, 1.14 ) }
    dend_29 { pt3dadd( 79.6051, -253.845, -20.325, 0.23 ) }
    dend_29 { pt3dadd( 80.5284, -256.223, -20.4045, 0.23 ) }
    dend_29 { pt3dadd( 81.3692, -258.458, -20.3733, 0.91 ) }
    dend_29 { pt3dadd( 82.9419, -262.802, -20.1251, 0.23 ) }
    dend_29 { pt3dadd( 84.328, -266.832, -19.7306, 1.14 ) }
    dend_29 { pt3dadd( 86.2617, -272.756, -18.8674, 0.23 ) }
    dend_29 { pt3dadd( 86.7741, -274.502, -18.5492, 0.91 ) }
    dend_29 { pt3dadd( 87.0535, -275.59, -18.3348, 0.91 ) }
    dend_29 { pt3dadd( 87.7123, -278.759, -17.7374, 0.23 ) }
    dend_29 { pt3dadd( 88.0951, -281.296, -17.4059, 1.14 ) }
    dend_29 { pt3dadd( 88.5124, -285.055, -17.305, 0.23 ) }
    dend_29 { pt3dadd( 88.5937, -286.649, -17.3914, 0.68 ) }
    dend_29 { pt3dadd( 88.6145, -289.593, -17.5376, 0.23 ) }
    dend_29 { pt3dadd( 88.573, -291.006, -17.6071, 1.14 ) }
    dend_29 { pt3dadd( 88.3158, -295.504, -17.8028, 0.23 ) }
    dend_29 { pt3dadd( 88.2447, -297.097, -17.8534, 0.91 ) }
    dend_29 { pt3dadd( 88.2318, -297.893, -17.8721, 0.91 ) }
    dend_29 { pt3dadd( 88.2731, -301.307, -17.627, 0.23 ) }
    dend_29 { pt3dadd( 88.2948, -302.777, -17.3469, 0.91 ) }
    dend_29 { pt3dadd( 88.3072, -305.988, -16.4731, 0.23 ) }
    dend_29 { pt3dadd( 88.3129, -307.582, -15.9427, 1.14 ) }
    dend_29 { pt3dadd( 88.2842, -310.236, -15.0825, 0.23 ) }
    dend_29 { pt3dadd( 88.2061, -313.403, -14.1261, 0.91 ) }
    dend_29 { pt3dadd( 88.2315, -316.297, -13.5202, 0.23 ) }
    dend_29 { pt3dadd( 88.3119, -317.884, -13.2796, 0.91 ) }
    dend_29 { pt3dadd( 88.5378, -320.853, -13.0149, 0.23 ) }
    dend_29 { pt3dadd( 88.8147, -323.856, -12.8558, 1.14 ) }
    dend_29 { pt3dadd( 88.9836, -324.956, -12.8635, 1.14 ) }
    dend_29 { pt3dadd( 90.1848, -329.983, -13.4208, 0.23 ) }
    dend_29 { pt3dadd( 90.8602, -332.084, -13.8186, 0.23 ) }
    dend_29 { pt3dadd( 91.2017, -332.942, -14.0147, 0.68 ) }
    dend_29 { pt3dadd( 93.7429, -345.513, -14.7223, 0.68 ) }
    dend_29 { pt3dadd( 97.4009, -357.806, -14.1515, 0.68 ) }
    dend_29 { pt3dadd( 102.217, -369.467, -11.9927, 0.68 ) }
    dend_29 { pt3dadd( 107.757, -380.676, -9.38099, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.5269, -32.6628, -9.5193, 1.59 ) }
    dend_23 { pt3dadd( 10.4658, -32.8826, -9.59158, 1.59 ) }
    dend_23 { pt3dadd( 10.0189, -34.4896, -10.1202, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.5269, -32.6628, -9.5193, 0.23 ) }
    dend_20 { pt3dadd( 11.0166, -33.5871, -10.9705, 0.23 ) }
    dend_20 { pt3dadd( 11.8323, -34.9465, -13.2502, 0.68 ) }
    dend_20 { pt3dadd( 12.7513, -36.4346, -15.7016, 0.23 ) }
    dend_20 { pt3dadd( 13.7782, -37.8787, -18.2046, 0.91 ) }
    dend_20 { pt3dadd( 15.532, -40.2804, -22.4138, 0.91 ) }
    dend_20 { pt3dadd( 16.5415, -41.698, -24.8664, 0.23 ) }
    dend_20 { pt3dadd( 17.411, -42.7631, -26.8288, 0.23 ) }
    dend_20 { pt3dadd( 17.8866, -43.2612, -27.7681, 1.59 ) }
    dend_20 { pt3dadd( 19.8226, -45.0803, -31.1104, 0.23 ) }
    dend_20 { pt3dadd( 20.283, -45.4711, -31.7511, 0.23 ) }
    dend_20 { pt3dadd( 20.9234, -46.0428, -32.4145, 0.23 ) }
    dend_20 { pt3dadd( 21.7029, -46.662, -32.9983, 0.23 ) }
    dend_20 { pt3dadd( 23.0277, -47.5692, -33.8278, 1.14 ) }
    dend_20 { pt3dadd( 24.4685, -48.4369, -34.664, 0.68 ) }
    dend_20 { pt3dadd( 25.9068, -49.334, -35.5091, 0.68 ) }
    dend_20 { pt3dadd( 27.2453, -50.2193, -36.3822, 0.68 ) }
    dend_20 { pt3dadd( 28.8461, -51.2324, -37.7084, 0.23 ) }
    dend_20 { pt3dadd( 30.5883, -52.4165, -39.5022, 0.23 ) }
    dend_20 { pt3dadd( 31.807, -53.2972, -40.8894, 0.68 ) }
    dend_20 { pt3dadd( 33.0546, -54.1972, -42.4169, 0.23 ) }
    dend_20 { pt3dadd( 33.881, -54.7823, -43.4995, 0.91 ) }
    dend_20 { pt3dadd( 36.784, -56.8534, -47.6487, 0.23 ) }
    dend_20 { pt3dadd( 37.5885, -57.5369, -48.9978, 0.23 ) }
    dend_20 { pt3dadd( 38.4538, -58.3091, -50.5574, 0.68 ) }
    dend_20 { pt3dadd( 43.1774, -62.3536, -58.2555, 0.68 ) }
    dend_20 { pt3dadd( 47.3359, -66.9881, -65.9857, 0.68 ) }
    dend_20 { pt3dadd( 52.4194, -72.011, -72.8917, 0.68 ) }
    dend_20 { pt3dadd( 57.4355, -78.2455, -78.8904, 0.68 ) }
    dend_20 { pt3dadd( 61.1973, -84.5428, -85.7106, 0.68 ) }
    dend_20 { pt3dadd( 63.9118, -91.5889, -92.3708, 0.68 ) }
    dend_20 { pt3dadd( 66.2127, -99.5729, -98.1659, 0.68 ) }
    dend_20 { pt3dadd( 70.6111, -107.259, -103.002, 0.68 ) }
    dend_20 { pt3dadd( 74.7144, -115.279, -107.598, 0.68 ) }
    dend_20 { pt3dadd( 79.1748, -123.62, -111.209, 0.68 ) }
    dend_20 { pt3dadd( 83.8734, -132.075, -114.207, 0.68 ) }
    dend_20 { pt3dadd( 87.9282, -141.194, -116.153, 0.68 ) }
    dend_20 { pt3dadd( 91.7232, -150.447, -118.056, 0.68 ) }
    dend_20 { pt3dadd( 94.5829, -159.827, -120.884, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 83/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 227.289, -131.513, -14.0945, 0.23 ) }
    dend_18 { pt3dadd( 238.0, -137.093, -14.4052, 0.23 ) }
    dend_18 { pt3dadd( 248.034, -143.854, -15.4276, 0.23 ) }
    dend_18 { pt3dadd( 256.803, -152.356, -15.1475, 0.23 ) }
    dend_18 { pt3dadd( 263.945, -162.378, -16.0456, 0.23 ) }
    dend_18 { pt3dadd( 270.737, -172.534, -14.6009, 0.23 ) }
    dend_18 { pt3dadd( 276.75, -183.171, -12.9321, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 227.289, -131.513, -14.0945, 0.23 ) }
    dend_17 { pt3dadd( 238.077, -136.969, -14.6636, 0.23 ) }
    dend_17 { pt3dadd( 249.384, -141.142, -14.1958, 0.23 ) }
    dend_17 { pt3dadd( 260.005, -146.887, -15.1444, 0.23 ) }
    dend_17 { pt3dadd( 269.84, -153.612, -17.523, 0.23 ) }
    dend_17 { pt3dadd( 278.964, -161.064, -20.6292, 0.23 ) }
    dend_17 { pt3dadd( 288.746, -168.17, -22.055, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 23.3247, 27.8574, -1.52028, 0.23 ) }
    dend_14 { pt3dadd( 24.6668, 28.8088, -1.90966, 0.23 ) }
    dend_14 { pt3dadd( 26.507, 30.0761, -2.4867, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 28.4255, 31.3825, -3.03288, 0.23 ) }
    dend_14 { pt3dadd( 29.4583, 32.1124, -3.30658, 0.91 ) }
    dend_14 { pt3dadd( 30.1205, 32.5999, -3.4931, 0.91 ) }
    dend_14 { pt3dadd( 31.1943, 33.4255, -3.80284, 0.23 ) }
    dend_14 { pt3dadd( 32.783, 34.6942, -4.20211, 1.59 ) }
    dend_14 { pt3dadd( 34.1852, 35.879, -4.54618, 0.23 ) }
    dend_14 { pt3dadd( 35.012, 36.6243, -4.76231, 1.14 ) }
    dend_14 { pt3dadd( 36.437, 37.8935, -5.09408, 0.23 ) }
    dend_14 { pt3dadd( 37.0625, 38.4274, -5.24198, 0.23 ) }
    dend_14 { pt3dadd( 38.218, 39.4318, -5.53353, 1.14 ) }
    dend_14 { pt3dadd( 39.1062, 40.1946, -5.82159, 0.23 ) }
    dend_14 { pt3dadd( 39.7147, 40.6973, -6.06051, 1.14 ) }
    dend_14 { pt3dadd( 40.6292, 41.4227, -6.43485, 1.14 ) }
    dend_14 { pt3dadd( 42.2662, 42.6758, -7.0692, 0.23 ) }
    dend_14 { pt3dadd( 43.6521, 43.7084, -7.57983, 1.59 ) }
    dend_14 { pt3dadd( 45.6935, 45.1913, -8.29278, 0.23 ) }
    dend_14 { pt3dadd( 46.9873, 46.1442, -8.68865, 0.68 ) }
    dend_14 { pt3dadd( 48.7082, 47.4061, -9.11514, 0.23 ) }
    dend_14 { pt3dadd( 49.8215, 48.252, -9.33058, 1.36 ) }
    dend_14 { pt3dadd( 50.9758, 49.1487, -9.46, 0.23 ) }
    dend_14 { pt3dadd( 52.357, 50.2651, -9.52293, 1.36 ) }
    dend_14 { pt3dadd( 54.7046, 52.2985, -9.47766, 0.23 ) }
    dend_14 { pt3dadd( 56.4533, 53.9006, -9.42718, 0.23 ) }
    dend_14 { pt3dadd( 57.4489, 54.9007, -9.3849, 0.23 ) }
    dend_14 { pt3dadd( 58.5609, 56.136, -9.34157, 2.05 ) }
    dend_14 { pt3dadd( 59.7918, 57.6388, -9.28596, 0.23 ) }
    dend_14 { pt3dadd( 61.0254, 59.3295, -9.20718, 0.23 ) }
    dend_14 { pt3dadd( 61.7135, 60.3703, -9.14748, 1.59 ) }
    dend_14 { pt3dadd( 62.7747, 62.0578, -9.05521, 0.23 ) }
    dend_14 { pt3dadd( 63.1464, 62.6461, -9.01814, 1.14 ) }
    dend_14 { pt3dadd( 63.6549, 63.4829, -8.96631, 1.14 ) }
    dend_14 { pt3dadd( 64.1585, 64.2948, -8.92284, 0.23 ) }
    dend_14 { pt3dadd( 65.0504, 65.7434, -8.86949, 1.14 ) }
    dend_14 { pt3dadd( 65.731, 66.7976, -8.77737, 0.23 ) }
    dend_14 { pt3dadd( 66.2303, 67.4871, -8.71759, 0.23 ) }
    dend_14 { pt3dadd( 66.8255, 68.2357, -8.6687, 0.91 ) }
    dend_14 { pt3dadd( 67.6298, 69.1936, -8.62735, 0.23 ) }
    dend_14 { pt3dadd( 68.4334, 70.1243, -8.6087, 1.36 ) }
    dend_14 { pt3dadd( 69.8218, 71.7122, -8.71838, 0.23 ) }
    dend_14 { pt3dadd( 71.2689, 73.3437, -8.96379, 0.23 ) }
    dend_14 { pt3dadd( 72.0115, 74.1163, -9.15237, 0.91 ) }
    dend_14 { pt3dadd( 72.4936, 74.5912, -9.30294, 0.91 ) }
    dend_14 { pt3dadd( 73.5739, 75.5695, -9.7433, 0.23 ) }
    dend_14 { pt3dadd( 74.6943, 76.4806, -10.2821, 0.91 ) }
    dend_14 { pt3dadd( 76.0503, 77.526, -11.0543, 0.23 ) }
    dend_14 { pt3dadd( 77.2001, 78.3854, -11.6932, 1.14 ) }
    dend_14 { pt3dadd( 77.7198, 78.7408, -11.9569, 1.14 ) }
    dend_14 { pt3dadd( 79.0089, 79.5768, -12.5465, 0.23 ) }
    dend_14 { pt3dadd( 79.8047, 80.0417, -12.8581, 1.14 ) }
    dend_14 { pt3dadd( 81.0896, 80.7702, -13.2197, 0.23 ) }
    dend_14 { pt3dadd( 81.7137, 81.1188, -13.3815, 1.14 ) }
    dend_14 { pt3dadd( 83.9247, 82.3627, -13.8889, 0.23 ) }
    dend_14 { pt3dadd( 84.7366, 82.8251, -14.0576, 0.23 ) }
    dend_14 { pt3dadd( 86.3121, 83.7733, -14.3197, 1.82 ) }
    dend_14 { pt3dadd( 88.0219, 84.8282, -14.5787, 0.23 ) }
    dend_14 { pt3dadd( 90.0972, 86.1347, -14.8512, 1.36 ) }
    dend_14 { pt3dadd( 90.6715, 86.5204, -14.9222, 0.23 ) }
    dend_14 { pt3dadd( 91.4595, 87.0999, -15.0012, 0.68 ) }
    dend_14 { pt3dadd( 92.8823, 88.2005, -15.1156, 0.23 ) }
    dend_14 { pt3dadd( 93.605, 88.8366, -15.1563, 0.23 ) }
    dend_14 { pt3dadd( 94.2007, 89.3966, -15.1793, 1.14 ) }
    dend_14 { pt3dadd( 94.8001, 89.9957, -15.1573, 1.14 ) }
    dend_14 { pt3dadd( 95.2733, 90.5028, -15.152, 0.23 ) }
    dend_14 { pt3dadd( 95.628, 90.8847, -15.1762, 0.23 ) }
    dend_14 { pt3dadd( 96.2286, 91.573, -15.2634, 1.14 ) }
    dend_14 { pt3dadd( 96.6913, 92.147, -15.3463, 1.14 ) }
    dend_14 { pt3dadd( 97.4526, 93.1241, -15.56, 0.23 ) }
    dend_14 { pt3dadd( 97.8668, 93.6543, -15.7007, 0.91 ) }
    dend_14 { pt3dadd( 98.7354, 94.7893, -16.0247, 0.23 ) }
    dend_14 { pt3dadd( 99.6647, 96.0474, -16.4009, 1.14 ) }
    dend_14 { pt3dadd( 100.49, 97.1578, -16.7347, 0.23 ) }
    dend_14 { pt3dadd( 101.481, 98.4423, -17.1752, 1.14 ) }
    dend_14 { pt3dadd( 101.987, 99.0772, -17.4046, 0.23 ) }
    dend_14 { pt3dadd( 102.569, 99.7998, -17.6554, 0.68 ) }
    dend_14 { pt3dadd( 103.493, 100.904, -17.9986, 0.23 ) }
    dend_14 { pt3dadd( 103.84, 101.28, -18.1355, 0.91 ) }
    dend_14 { pt3dadd( 105.302, 102.868, -18.7231, 0.23 ) }
    dend_14 { pt3dadd( 105.841, 103.492, -18.9363, 0.23 ) }
    dend_14 { pt3dadd( 106.459, 104.272, -19.2224, 0.23 ) }
    dend_14 { pt3dadd( 107.138, 105.249, -19.6211, 0.91 ) }
    dend_14 { pt3dadd( 107.898, 106.587, -20.1862, 0.23 ) }
    dend_14 { pt3dadd( 108.431, 107.89, -20.7687, 1.14 ) }
    dend_14 { pt3dadd( 108.593, 108.514, -21.0488, 0.23 ) }
    dend_14 { pt3dadd( 108.738, 109.379, -21.4551, 0.91 ) }
    dend_14 { pt3dadd( 108.881, 110.913, -22.1577, 0.23 ) }
    dend_14 { pt3dadd( 108.907, 111.963, -22.6122, 0.91 ) }
    dend_14 { pt3dadd( 108.877, 113.376, -23.1664, 0.23 ) }
    dend_14 { pt3dadd( 108.852, 114.222, -23.5415, 0.91 ) }
    dend_14 { pt3dadd( 108.828, 115.28, -24.0336, 0.23 ) }
    dend_14 { pt3dadd( 108.829, 116.595, -24.6598, 0.23 ) }
    dend_14 { pt3dadd( 108.826, 117.215, -24.9494, 0.91 ) }
    dend_14 { pt3dadd( 108.828, 118.041, -25.3419, 0.23 ) }
    dend_14 { pt3dadd( 108.86, 119.683, -26.1074, 1.14 ) }
    dend_14 { pt3dadd( 108.87, 120.294, -26.3957, 1.14 ) }
    dend_14 { pt3dadd( 108.894, 122.499, -27.3978, 0.23 ) }
    dend_14 { pt3dadd( 108.902, 123.66, -27.936, 0.23 ) }
    dend_14 { pt3dadd( 108.909, 124.073, -28.1195, 0.45 ) }
    dend_14 { pt3dadd( 108.924, 124.61, -28.3321, 0.23 ) }
    dend_14 { pt3dadd( 108.927, 125.262, -28.5186, 0.23 ) }
    dend_14 { pt3dadd( 108.935, 126.582, -28.8747, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 114.031, 132.43, -29.2854, 0.23 ) }
    dend_14 { pt3dadd( 119.307, 137.871, -30.9249, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 23.3247, 27.8574, -1.52028, 0.23 ) }
    dend_5 { pt3dadd( 25.2379, 28.7902, -1.60003, 0.23 ) }
    dend_5 { pt3dadd( 28.6065, 30.4627, -1.75431, 0.91 ) }
    dend_5 { pt3dadd( 31.4659, 31.8483, -1.95739, 0.23 ) }
    dend_5 { pt3dadd( 33.08, 32.6119, -2.07501, 0.91 ) }
    dend_5 { pt3dadd( 34.8496, 33.4256, -2.18051, 0.23 ) }
    dend_5 { pt3dadd( 36.4839, 34.1684, -2.24892, 0.23 ) }
    dend_5 { pt3dadd( 37.926, 34.8226, -2.32171, 0.91 ) }
    dend_5 { pt3dadd( 39.4242, 35.5363, -2.39943, 0.23 ) }
    dend_5 { pt3dadd( 41.183, 36.3825, -2.37459, 0.91 ) }
    dend_5 { pt3dadd( 43.3063, 37.4265, -2.33033, 0.23 ) }
    dend_5 { pt3dadd( 45.2739, 38.4108, -2.22986, 0.68 ) }
    dend_5 { pt3dadd( 46.6526, 39.1036, -2.16018, 0.23 ) }
    dend_5 { pt3dadd( 47.9905, 39.7925, -2.08108, 1.14 ) }
    dend_5 { pt3dadd( 49.934, 40.8685, -1.91324, 0.23 ) }
    dend_5 { pt3dadd( 51.0535, 41.5255, -1.8488, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 18/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.04024, 322.683, -87.9288, 0.23 ) }
    dend_3 { pt3dadd( -8.4367, 330.956, -90.7067, 0.23 ) }
    dend_3 { pt3dadd( -10.5171, 338.911, -93.548, 0.23 ) }
    dend_3 { pt3dadd( -11.6069, 346.906, -96.8213, 0.23 ) }
    dend_3 { pt3dadd( -13.3937, 355.291, -98.5289, 0.23 ) }
    dend_3 { pt3dadd( -16.6182, 363.345, -99.2904, 0.23 ) }
    dend_3 { pt3dadd( -19.8874, 371.363, -98.3324, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.04024, 322.683, -87.9288, 0.23 ) }
    dend_2 { pt3dadd( -8.83822, 335.179, -90.6723, 0.23 ) }
    dend_2 { pt3dadd( -7.83534, 347.753, -93.0701, 0.23 ) }
    dend_2 { pt3dadd( -5.47091, 360.349, -94.0993, 0.23 ) }
    dend_2 { pt3dadd( -4.16049, 373.123, -94.9081, 0.23 ) }
    dend_2 { pt3dadd( -1.82935, 385.766, -94.387, 0.23 ) }
    dend_2 { pt3dadd( 1.47702, 398.17, -94.9227, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_62 (entry count 32/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -16.4389, 18.7529, -13.3562, 0.23 ) }
    dend_70 { pt3dadd( -16.9716, 18.1285, -15.7999, 0.23 ) }
    dend_70 { pt3dadd( -17.2826, 17.8196, -17.2592, 0.23 ) }
    dend_70 { pt3dadd( -17.5698, 17.5232, -18.5371, 0.91 ) }
    dend_70 { pt3dadd( -18.1654, 16.8837, -20.879, 0.68 ) }
    dend_70 { pt3dadd( -18.7476, 16.2578, -22.8643, 0.23 ) }
    dend_70 { pt3dadd( -19.2327, 15.7807, -24.2397, 0.68 ) }
    dend_70 { pt3dadd( -20.0535, 14.9668, -26.4444, 0.23 ) }
    dend_70 { pt3dadd( -20.4726, 14.6133, -27.3149, 0.91 ) }
    dend_70 { pt3dadd( -21.4529, 13.9018, -28.9457, 0.23 ) }
    dend_70 { pt3dadd( -22.1412, 13.4371, -29.8212, 1.14 ) }
    dend_70 { pt3dadd( -23.652, 12.3474, -31.4479, 0.23 ) }
    dend_70 { pt3dadd( -24.2739, 11.8528, -32.089, 0.68 ) }
    dend_70 { pt3dadd( -24.938, 11.2871, -32.733, 0.23 ) }
    dend_70 { pt3dadd( -25.4448, 10.8133, -33.245, 0.23 ) }
    dend_70 { pt3dadd( -25.8447, 10.4015, -33.652, 0.23 ) }
    dend_70 { pt3dadd( -26.7812, 9.21034, -34.7691, 1.14 ) }
    dend_70 { pt3dadd( -27.714, 7.78219, -36.008, 0.23 ) }
    dend_70 { pt3dadd( -28.6304, 6.17678, -37.4652, 0.91 ) }
    dend_70 { pt3dadd( -29.3144, 4.88491, -38.6804, 0.23 ) }
    dend_70 { pt3dadd( -29.7765, 3.90068, -39.6011, 1.14 ) }
    dend_70 { pt3dadd( -30.5922, 2.12468, -41.3012, 0.23 ) }
    dend_70 { pt3dadd( -30.9978, 1.19351, -42.2141, 0.91 ) }
    dend_70 { pt3dadd( -31.6245, -0.380924, -43.7252, 0.23 ) }
    dend_70 { pt3dadd( -31.9594, -1.3886, -44.6805, 1.14 ) }
    dend_70 { pt3dadd( -32.3391, -2.71941, -46.0493, 0.23 ) }
    dend_70 { pt3dadd( -35.8918, -9.12776, -52.278, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 59/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -16.4389, 18.7529, -13.3562, 0.23 ) }
    dend_63 { pt3dadd( -15.0821, 18.6545, -14.6784, 0.23 ) }
    dend_63 { pt3dadd( -13.3783, 18.6024, -16.2642, 0.91 ) }
    dend_63 { pt3dadd( -12.0092, 18.5521, -17.4697, 0.23 ) }
    dend_63 { pt3dadd( -11.5996, 18.554, -17.8476, 0.68 ) }
    dend_63 { pt3dadd( -10.6115, 18.6052, -18.8128, 0.23 ) }
    dend_63 { pt3dadd( -9.96402, 18.6813, -19.5136, 1.14 ) }
    dend_63 { pt3dadd( -8.38181, 18.9138, -21.3296, 0.23 ) }
    dend_63 { pt3dadd( -7.2428, 19.1161, -22.884, 0.91 ) }
    dend_63 { pt3dadd( -5.60044, 19.3798, -25.4599, 0.23 ) }
    dend_63 { pt3dadd( -4.9182, 19.4861, -26.6695, 1.36 ) }
    dend_63 { pt3dadd( -3.49074, 19.7648, -29.6626, 0.23 ) }
    dend_63 { pt3dadd( -2.91283, 19.8956, -31.1722, 0.91 ) }
    dend_63 { pt3dadd( -1.80523, 20.1432, -35.044, 0.23 ) }
    dend_63 { pt3dadd( -1.35986, 20.25, -36.9519, 0.68 ) }
    dend_63 { pt3dadd( -0.974524, 20.2972, -39.0227, 0.91 ) }
    dend_63 { pt3dadd( -0.622925, 20.2831, -41.3628, 0.23 ) }
    dend_63 { pt3dadd( -0.521391, 20.2471, -42.6834, 0.23 ) }
    dend_63 { pt3dadd( -0.522374, 20.27, -44.1539, 1.14 ) }
    dend_63 { pt3dadd( 3.29753, 21.0405, -51.3296, 1.14 ) }
    dend_63 { pt3dadd( 8.64016, 22.9755, -57.2135, 1.14 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -75.0841, 51.8382, 4.71519, 0.23 ) }
    dend_59 { pt3dadd( -76.0538, 53.6531, 5.2419, 0.23 ) }
    dend_59 { pt3dadd( -76.976, 55.2485, 5.6985, 0.23 ) }
    dend_59 { pt3dadd( -77.3813, 55.8904, 5.87639, 0.91 ) }
    dend_59 { pt3dadd( -78.7034, 57.9167, 6.50604, 0.23 ) }
    dend_59 { pt3dadd( -79.5078, 59.1023, 6.88661, 0.91 ) }
    dend_59 { pt3dadd( -81.2116, 61.5269, 7.66627, 0.23 ) }
    dend_59 { pt3dadd( -82.267, 62.9606, 8.21325, 1.14 ) }
    dend_59 { pt3dadd( -83.9418, 65.1057, 9.06829, 0.23 ) }
    dend_59 { pt3dadd( -85.1589, 66.5965, 9.64856, 0.91 ) }
    dend_59 { pt3dadd( -86.2814, 67.872, 10.131, 0.23 ) }
    dend_59 { pt3dadd( -87.215, 68.9076, 10.6025, 0.91 ) }
    dend_59 { pt3dadd( -88.5889, 70.3187, 11.3746, 0.23 ) }
    dend_59 { pt3dadd( -89.6879, 71.3953, 12.0414, 0.68 ) }
    dend_59 { pt3dadd( -90.5001, 72.0897, 12.5253, 0.23 ) }
    dend_59 { pt3dadd( -91.3798, 72.7265, 13.0413, 0.68 ) }
    dend_59 { pt3dadd( -93.2469, 73.878, 14.1676, 0.23 ) }
    dend_59 { pt3dadd( -94.1567, 74.3394, 14.7312, 1.14 ) }
    dend_59 { pt3dadd( -95.6241, 74.9377, 15.6203, 0.23 ) }
    dend_59 { pt3dadd( -97.4159, 75.554, 16.7469, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_59 { pt3dadd( -99.2703, 76.0691, 17.8415, 0.68 ) }
    dend_59 { pt3dadd( -100.221, 76.3039, 18.3364, 0.23 ) }
    dend_59 { pt3dadd( -102.47, 76.7901, 19.317, 0.68 ) }
    dend_59 { pt3dadd( -103.31, 76.9699, 19.6595, 0.23 ) }
    dend_59 { pt3dadd( -104.536, 77.2395, 20.1116, 0.68 ) }
    dend_59 { pt3dadd( -105.941, 77.5991, 20.5602, 0.23 ) }
    dend_59 { pt3dadd( -107.898, 78.1591, 21.1002, 0.91 ) }
    dend_59 { pt3dadd( -110.042, 78.8951, 21.6672, 0.23 ) }
    dend_59 { pt3dadd( -111.866, 79.6266, 22.1124, 0.91 ) }
    dend_59 { pt3dadd( -113.727, 80.5017, 22.6628, 0.23 ) }
    dend_59 { pt3dadd( -114.592, 80.9469, 22.9574, 0.23 ) }
    dend_59 { pt3dadd( -116.315, 81.9399, 23.5799, 0.91 ) }
    dend_59 { pt3dadd( -117.818, 82.9166, 24.2049, 0.23 ) }
    dend_59 { pt3dadd( -118.79, 83.6261, 24.644, 0.68 ) }
    dend_59 { pt3dadd( -121.21, 85.5673, 25.8174, 0.23 ) }
    dend_59 { pt3dadd( -122.643, 86.8317, 26.5444, 0.68 ) }
    dend_59 { pt3dadd( -124.368, 88.4806, 27.4267, 0.23 ) }
    dend_59 { pt3dadd( -125.887, 90.1723, 28.2801, 0.23 ) }
    dend_59 { pt3dadd( -126.803, 91.3505, 28.8337, 0.23 ) }
    dend_59 { pt3dadd( -127.564, 92.5299, 29.3082, 0.68 ) }
    dend_59 { pt3dadd( -127.961, 93.2875, 29.5682, 0.23 ) }
    dend_59 { pt3dadd( -128.241, 93.9202, 29.7835, 0.91 ) }
    dend_59 { pt3dadd( -129.423, 97.0143, 30.8511, 0.23 ) }
    dend_59 { pt3dadd( -129.865, 98.2939, 31.2363, 0.23 ) }
    dend_59 { pt3dadd( -130.434, 100.143, 31.807, 0.23 ) }
    dend_59 { pt3dadd( -131.014, 101.993, 32.3848, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -75.0841, 51.8382, 4.71519, 0.45 ) }
    dend_58 { pt3dadd( -77.1052, 51.3527, 4.44222, 0.45 ) }
    dend_58 { pt3dadd( -79.685, 50.6428, 4.15831, 0.91 ) }
    dend_58 { pt3dadd( -81.0336, 50.2247, 3.94605, 0.23 ) }
    dend_58 { pt3dadd( -83.0687, 49.4614, 3.50882, 0.91 ) }
    dend_58 { pt3dadd( -83.8051, 49.1568, 3.3354, 0.91 ) }
    dend_58 { pt3dadd( -84.6876, 48.7766, 3.11048, 0.23 ) }
    dend_58 { pt3dadd( -86.326, 48.0095, 2.6484, 0.68 ) }
    dend_58 { pt3dadd( -88.1865, 47.0429, 2.09443, 0.23 ) }
    dend_58 { pt3dadd( -90.0839, 46.0467, 1.52716, 1.14 ) }
    dend_58 { pt3dadd( -91.1589, 45.4865, 1.18757, 1.14 ) }
    dend_58 { pt3dadd( -93.2873, 44.4218, 0.486407, 0.23 ) }
    dend_58 { pt3dadd( -94.5601, 43.8521, 0.0754656, 1.14 ) }
    dend_58 { pt3dadd( -96.8684, 42.8966, -0.676977, 0.23 ) }
    dend_58 { pt3dadd( -98.1653, 42.4177, -1.0351, 0.23 ) }
    dend_58 { pt3dadd( -100.338, 41.6685, -1.56367, 0.23 ) }
    dend_58 { pt3dadd( -100.746, 41.5219, -1.64114, 0.91 ) }
    dend_58 { pt3dadd( -101.939, 41.096, -1.78707, 1.59 ) }
    dend_58 { pt3dadd( -104.604, 40.1938, -1.96063, 0.23 ) }
    dend_58 { pt3dadd( -107.144, 39.4069, -1.97644, 1.36 ) }
    dend_58 { pt3dadd( -109.238, 38.801, -1.86298, 0.91 ) }
    dend_58 { pt3dadd( -112.165, 38.0119, -1.52911, 0.23 ) }
    dend_58 { pt3dadd( -114.322, 37.4571, -1.21756, 1.14 ) }
    dend_58 { pt3dadd( -116.483, 36.9313, -0.836887, 0.23 ) }
    dend_58 { pt3dadd( -117.754, 36.6803, -0.556763, 0.23 ) }
    dend_58 { pt3dadd( -119.604, 36.385, -0.140552, 0.68 ) }
    dend_58 { pt3dadd( -120.586, 36.2654, 0.0745578, 0.68 ) }
    dend_58 { pt3dadd( -121.981, 36.1231, 0.353234, 0.23 ) }
    dend_58 { pt3dadd( -123.758, 35.9144, 0.696759, 0.91 ) }
    dend_58 { pt3dadd( -125.387, 35.708, 0.958593, 0.23 ) }
    dend_58 { pt3dadd( -126.185, 35.604, 1.05804, 0.91 ) }
    dend_58 { pt3dadd( -127.589, 35.4269, 1.18158, 0.23 ) }
    dend_58 { pt3dadd( -130.221, 35.0899, 1.38904, 1.14 ) }
    dend_58 { pt3dadd( -131.223, 34.9591, 1.45923, 0.23 ) }
    dend_58 { pt3dadd( -132.634, 34.7745, 1.54795, 0.68 ) }
    dend_58 { pt3dadd( -134.467, 34.5171, 1.65931, 0.23 ) }
    dend_58 { pt3dadd( -135.87, 34.3297, 1.79271, 0.45 ) }
    dend_58 { pt3dadd( -137.086, 34.1527, 1.99869, 0.23 ) }
    dend_58 { pt3dadd( -137.675, 34.0679, 2.13549, 0.23 ) }
    dend_58 { pt3dadd( -139.228, 33.8425, 2.63718, 0.91 ) }
    dend_58 { pt3dadd( -141.843, 33.4248, 3.67375, 0.23 ) }
    dend_58 { pt3dadd( -143.668, 33.1309, 4.46462, 0.91 ) }
    dend_58 { pt3dadd( -147.046, 32.6126, 6.00249, 0.23 ) }
    dend_58 { pt3dadd( -147.95, 32.4724, 6.43064, 0.23 ) }
    dend_58 { pt3dadd( -150.25, 32.0795, 7.57562, 1.59 ) }
    dend_58 { pt3dadd( -153.124, 31.5317, 9.14301, 0.23 ) }
    dend_58 { pt3dadd( -154.014, 31.3484, 9.65003, 0.91 ) }
    dend_58 { pt3dadd( -154.581, 31.2312, 9.97708, 0.91 ) }
    dend_58 { pt3dadd( -156.794, 30.783, 11.2561, 0.23 ) }
    dend_58 { pt3dadd( -158.825, 30.3342, 12.4131, 0.91 ) }
    dend_58 { pt3dadd( -160.782, 29.8821, 13.483, 0.23 ) }
    dend_58 { pt3dadd( -161.832, 29.6359, 14.0568, 1.14 ) }
    dend_58 { pt3dadd( -163.882, 29.1397, 15.1086, 0.23 ) }
    dend_58 { pt3dadd( -164.987, 28.8583, 15.6167, 0.91 ) }
    dend_58 { pt3dadd( -165.86, 28.6551, 15.9497, 0.23 ) }
    dend_58 { pt3dadd( -167.048, 28.3981, 16.2673, 0.68 ) }
    dend_58 { pt3dadd( -170.29, 27.7163, 16.9012, 0.23 ) }
    dend_58 { pt3dadd( -171.663, 27.4213, 17.1415, 0.91 ) }
    dend_58 { pt3dadd( -173.314, 27.0607, 17.383, 0.23 ) }
    dend_58 { pt3dadd( -175.253, 26.6583, 17.6091, 0.68 ) }
    dend_58 { pt3dadd( -177.258, 26.234, 17.7855, 0.23 ) }
    dend_58 { pt3dadd( -178.767, 25.8953, 17.8751, 0.23 ) }
    dend_58 { pt3dadd( -180.677, 25.4038, 17.927, 0.91 ) }
    dend_58 { pt3dadd( -182.833, 24.8091, 17.987, 0.23 ) }
    dend_58 { pt3dadd( -184.354, 24.3783, 18.0369, 1.14 ) }
    dend_58 { pt3dadd( -186.563, 23.7206, 18.1297, 0.23 ) }
    dend_58 { pt3dadd( -187.732, 23.3965, 18.198, 0.91 ) }
    dend_58 { pt3dadd( -189.596, 22.981, 18.2822, 0.23 ) }
    dend_58 { pt3dadd( -191.798, 22.629, 18.3944, 0.91 ) }
    dend_58 { pt3dadd( -193.03, 22.4943, 18.4929, 0.23 ) }
    dend_58 { pt3dadd( -194.069, 22.4407, 18.6121, 0.68 ) }
    dend_58 { pt3dadd( -195.202, 22.4542, 18.744, 0.23 ) }
    dend_58 { pt3dadd( -197.268, 22.588, 19.041, 0.91 ) }
    dend_58 { pt3dadd( -199.27, 22.7848, 19.4521, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( -200.241, 22.9174, 19.7052, 0.23 ) }
    dend_58 { pt3dadd( -200.998, 23.0174, 19.9322, 0.91 ) }
    dend_58 { pt3dadd( -201.8, 23.1156, 20.2116, 0.23 ) }
    dend_58 { pt3dadd( -203.854, 23.3146, 20.9926, 0.91 ) }
    dend_58 { pt3dadd( -205.584, 23.449, 21.8436, 0.23 ) }
    dend_58 { pt3dadd( -206.865, 23.548, 22.6517, 0.68 ) }
    dend_58 { pt3dadd( -207.866, 23.6131, 23.3834, 0.23 ) }
    dend_58 { pt3dadd( -209.903, 23.6768, 25.1386, 0.91 ) }
    dend_58 { pt3dadd( -210.953, 23.6986, 26.0955, 0.23 ) }
    dend_58 { pt3dadd( -212.961, 23.7096, 28.0434, 0.91 ) }
    dend_58 { pt3dadd( -214.798, 23.7132, 29.9474, 0.23 ) }
    dend_58 { pt3dadd( -215.935, 23.6674, 31.2675, 0.91 ) }
    dend_58 { pt3dadd( -217.722, 23.6251, 33.6532, 0.23 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 40.9362, 35.6156, -25.978, 0.23 ) }
    dend_55 { pt3dadd( 42.548, 37.0186, -25.7361, 0.23 ) }
    dend_55 { pt3dadd( 43.6275, 37.8902, -25.5332, 0.91 ) }
    dend_55 { pt3dadd( 45.0171, 38.9536, -25.1782, 0.23 ) }
    dend_55 { pt3dadd( 46.984, 40.4302, -24.6651, 0.23 ) }
    dend_55 { pt3dadd( 47.5761, 40.8688, -24.512, 0.91 ) }
    dend_55 { pt3dadd( 48.9294, 41.9086, -24.1308, 0.23 ) }
    dend_55 { pt3dadd( 49.9528, 42.6796, -23.7889, 0.68 ) }
    dend_55 { pt3dadd( 51.3839, 43.823, -23.2861, 0.23 ) }
    dend_55 { pt3dadd( 52.4143, 44.7303, -22.889, 0.68 ) }
    dend_55 { pt3dadd( 53.6851, 46.0022, -22.4433, 0.23 ) }
    dend_55 { pt3dadd( 54.871, 47.2584, -22.0546, 0.68 ) }
    dend_55 { pt3dadd( 55.4427, 47.9004, -21.8996, 0.23 ) }
    dend_55 { pt3dadd( 56.0165, 48.5488, -21.7781, 0.91 ) }
    dend_55 { pt3dadd( 57.308, 49.8879, -21.629, 0.23 ) }
    dend_55 { pt3dadd( 58.298, 50.7911, -21.5674, 0.68 ) }
    dend_55 { pt3dadd( 59.7445, 51.9577, -21.5661, 0.23 ) }
    dend_55 { pt3dadd( 60.675, 52.5889, -21.5846, 0.68 ) }
    dend_55 { pt3dadd( 62.6485, 53.8092, -21.5552, 0.23 ) }
    dend_55 { pt3dadd( 64.5191, 54.8867, -21.5082, 0.91 ) }
    dend_55 { pt3dadd( 65.7905, 55.5819, -21.5392, 0.23 ) }
    dend_55 { pt3dadd( 66.4496, 55.9386, -21.5629, 0.23 ) }
    dend_55 { pt3dadd( 68.6854, 57.2398, -21.6813, 0.68 ) }
    dend_55 { pt3dadd( 70.4896, 58.4037, -21.8093, 0.23 ) }
    dend_55 { pt3dadd( 71.5568, 59.2169, -21.9202, 0.91 ) }
    dend_55 { pt3dadd( 73.8092, 61.1609, -22.3275, 0.23 ) }
    dend_55 { pt3dadd( 74.4332, 61.7401, -22.5001, 0.23 ) }
    dend_55 { pt3dadd( 75.4317, 62.72, -22.8969, 0.91 ) }
    dend_55 { pt3dadd( 76.865, 64.1782, -23.7025, 0.23 ) }
    dend_55 { pt3dadd( 77.8864, 65.2588, -24.3948, 0.91 ) }
    dend_55 { pt3dadd( 79.4144, 66.9114, -25.4736, 0.23 ) }
    dend_55 { pt3dadd( 80.5276, 68.1259, -26.277, 0.68 ) }
    dend_55 { pt3dadd( 81.8519, 69.4946, -27.2942, 0.23 ) }
    dend_55 { pt3dadd( 82.7475, 70.3531, -28.0518, 0.23 ) }
    dend_55 { pt3dadd( 83.5794, 71.093, -28.8681, 0.91 ) }
    dend_55 { pt3dadd( 90.5064, 74.5399, -30.2606, 0.91 ) }
    dend_55 { pt3dadd( 98.0425, 76.5737, -30.0149, 0.91 ) }
    dend_55 { pt3dadd( 105.722, 76.7784, -31.2985, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 40.9362, 35.6156, -25.978, 0.23 ) }
    dend_54 { pt3dadd( 42.4024, 35.1103, -28.4613, 0.23 ) }
    dend_54 { pt3dadd( 43.6531, 34.682, -30.4543, 0.68 ) }
    dend_54 { pt3dadd( 45.4838, 34.0263, -33.2837, 1.36 ) }
    dend_54 { pt3dadd( 47.6098, 33.2388, -36.3631, 0.23 ) }
    dend_54 { pt3dadd( 48.6869, 32.8536, -37.7963, 0.45 ) }
    dend_54 { pt3dadd( 50.4742, 32.2523, -40.0388, 0.45 ) }
    dend_54 { pt3dadd( 52.0066, 31.8085, -41.6943, 0.23 ) }
    dend_54 { pt3dadd( 53.3879, 31.426, -42.9875, 1.14 ) }
    dend_54 { pt3dadd( 54.5192, 31.1845, -43.8771, 1.14 ) }
    dend_54 { pt3dadd( 55.8983, 31.0097, -44.7982, 0.45 ) }
    dend_54 { pt3dadd( 59.5489, 30.9333, -46.9837, 0.23 ) }
    dend_54 { pt3dadd( 61.2107, 31.0209, -47.8319, 1.14 ) }
    dend_54 { pt3dadd( 62.4119, 31.1069, -48.3644, 0.23 ) }
    dend_54 { pt3dadd( 63.9263, 31.2817, -48.9589, 0.23 ) }
    dend_54 { pt3dadd( 66.1638, 31.5487, -49.8246, 0.91 ) }
    dend_54 { pt3dadd( 68.5697, 31.829, -50.8213, 0.23 ) }
    dend_54 { pt3dadd( 69.2192, 31.9063, -51.0789, 0.68 ) }
    dend_54 { pt3dadd( 70.2498, 32.0059, -51.5355, 0.68 ) }
    dend_54 { pt3dadd( 71.7073, 32.0962, -52.3243, 0.23 ) }
    dend_54 { pt3dadd( 74.1011, 32.1982, -53.6553, 0.91 ) }
    dend_54 { pt3dadd( 76.9967, 32.4193, -55.3259, 0.23 ) }
    dend_54 { pt3dadd( 78.402, 32.53, -56.1565, 1.14 ) }
    dend_54 { pt3dadd( 79.4874, 32.6022, -56.7726, 1.14 ) }
    dend_54 { pt3dadd( 83.0366, 32.8367, -58.7191, 0.23 ) }
    dend_54 { pt3dadd( 84.9044, 32.9577, -59.6887, 0.68 ) }
    dend_54 { pt3dadd( 86.2954, 33.1129, -60.2881, 0.23 ) }
    dend_54 { pt3dadd( 89.1805, 33.5812, -61.2959, 1.14 ) }
    dend_54 { pt3dadd( 92.0233, 34.254, -62.1915, 0.23 ) }
    dend_54 { pt3dadd( 93.4116, 34.7227, -62.5475, 0.91 ) }
    dend_54 { pt3dadd( 94.236, 35.0895, -62.7314, 1.36 ) }
    dend_54 { pt3dadd( 96.7614, 36.495, -63.3737, 0.23 ) }
    dend_54 { pt3dadd( 98.4401, 37.5883, -63.7706, 0.91 ) }
    dend_54 { pt3dadd( 99.6155, 38.4618, -64.0308, 0.91 ) }
    dend_54 { pt3dadd( 101.415, 39.9063, -64.47, 0.23 ) }
    dend_54 { pt3dadd( 103.215, 41.3126, -64.9174, 0.91 ) }
    dend_54 { pt3dadd( 105.904, 43.2555, -65.6071, 0.23 ) }
    dend_54 { pt3dadd( 107.633, 44.402, -66.0685, 0.91 ) }
    dend_54 { pt3dadd( 109.915, 45.7401, -66.6207, 0.23 ) }
    dend_54 { pt3dadd( 110.58, 46.1025, -66.7686, 0.23 ) }
    dend_54 { pt3dadd( 112.448, 47.0664, -67.1575, 0.23 ) }
    dend_54 { pt3dadd( 114.77, 48.1911, -67.5567, 0.68 ) }
    dend_54 { pt3dadd( 116.492, 48.9463, -67.855, 0.23 ) }
    dend_54 { pt3dadd( 118.414, 49.7988, -68.1757, 0.23 ) }
    dend_54 { pt3dadd( 120.441, 50.6547, -68.4671, 0.68 ) }
    dend_54 { pt3dadd( 129.156, 50.6685, -73.9457, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 97/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 20.2675, 60.0843, -15.3866, 0.23 ) }
    dend_52 { pt3dadd( 18.2354, 61.6153, -15.0699, 0.23 ) }
    dend_52 { pt3dadd( 16.2595, 63.2249, -14.91, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( 13.3307, 66.0098, -14.8461, 0.23 ) }
    dend_52 { pt3dadd( 12.2177, 67.2739, -15.0103, 1.14 ) }
    dend_52 { pt3dadd( 11.2599, 68.5656, -15.2719, 0.23 ) }
    dend_52 { pt3dadd( 10.2933, 70.0779, -15.6277, 0.68 ) }
    dend_52 { pt3dadd( 9.42452, 71.9348, -16.2123, 0.23 ) }
    dend_52 { pt3dadd( 8.67605, 74.1212, -17.0856, 1.36 ) }
    dend_52 { pt3dadd( 7.78356, 77.7446, -18.7319, 0.23 ) }
    dend_52 { pt3dadd( 7.42286, 79.6369, -19.6303, 0.91 ) }
    dend_52 { pt3dadd( 7.12051, 81.5137, -20.5306, 0.23 ) }
    dend_52 { pt3dadd( 6.83628, 83.712, -21.54, 0.68 ) }
    dend_52 { pt3dadd( 6.62828, 85.5904, -22.3376, 0.23 ) }
    dend_52 { pt3dadd( 6.53778, 86.908, -22.8781, 1.14 ) }
    dend_52 { pt3dadd( 6.51879, 89.2535, -23.8181, 0.23 ) }
    dend_52 { pt3dadd( 6.56042, 90.8672, -24.5041, 0.23 ) }
    dend_52 { pt3dadd( 6.63405, 92.3787, -25.1507, 0.91 ) }
    dend_52 { pt3dadd( 6.77262, 94.2449, -25.9217, 0.23 ) }
    dend_52 { pt3dadd( 6.96468, 96.3268, -26.7425, 0.23 ) }
    dend_52 { pt3dadd( 7.27861, 99.0121, -27.7926, 1.14 ) }
    dend_52 { pt3dadd( 7.46665, 100.306, -28.2738, 1.14 ) }
    dend_52 { pt3dadd( 7.87699, 102.7, -29.1988, 0.23 ) }
    dend_52 { pt3dadd( 8.20682, 104.608, -29.917, 0.23 ) }
    dend_52 { pt3dadd( 8.48147, 106.141, -30.4431, 0.23 ) }
    dend_52 { pt3dadd( 8.66737, 107.399, -30.8646, 0.23 ) }
    dend_52 { pt3dadd( 8.77788, 108.542, -31.2536, 0.45 ) }
    dend_52 { pt3dadd( 8.72927, 111.141, -32.3596, 0.23 ) }
    dend_52 { pt3dadd( 8.54239, 112.403, -32.9644, 0.91 ) }
    dend_52 { pt3dadd( 8.22926, 113.615, -33.6318, 0.91 ) }
    dend_52 { pt3dadd( 7.66522, 115.429, -34.7141, 0.68 ) }
    dend_52 { pt3dadd( 6.83992, 118.001, -36.3673, 1.36 ) }
    dend_52 { pt3dadd( 5.86538, 121.055, -38.438, 0.23 ) }
    dend_52 { pt3dadd( 5.55849, 122.253, -39.296, 0.23 ) }
    dend_52 { pt3dadd( 5.27774, 124.066, -40.6532, 0.23 ) }
    dend_52 { pt3dadd( 5.27891, 125.263, -41.5849, 1.14 ) }
    dend_52 { pt3dadd( 5.80383, 127.336, -43.115, 0.23 ) }
    dend_52 { pt3dadd( 6.02216, 127.758, -43.4027, 0.68 ) }
    dend_52 { pt3dadd( 7.76297, 130.236, -44.9578, 0.23 ) }
    dend_52 { pt3dadd( 8.24228, 130.872, -45.3272, 1.14 ) }
    dend_52 { pt3dadd( 9.43753, 132.493, -46.1268, 0.23 ) }
    dend_52 { pt3dadd( 11.0064, 134.602, -47.1298, 0.91 ) }
    dend_52 { pt3dadd( 11.8844, 135.767, -47.6239, 0.23 ) }
    dend_52 { pt3dadd( 13.3258, 137.733, -48.3914, 0.68 ) }
    dend_52 { pt3dadd( 14.3633, 139.164, -48.845, 0.68 ) }
    dend_52 { pt3dadd( 15.3631, 140.619, -49.2745, 0.23 ) }
    dend_52 { pt3dadd( 13.7287, 152.34, -52.7163, 0.23 ) }
    dend_52 { pt3dadd( 14.3073, 164.348, -55.5623, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 20.2675, 60.0843, -15.3866, 0.23 ) }
    dend_47 { pt3dadd( 21.0208, 61.0253, -15.4838, 0.23 ) }
    dend_47 { pt3dadd( 22.2515, 62.4748, -15.7889, 1.14 ) }
    dend_47 { pt3dadd( 24.034, 64.533, -16.3057, 0.23 ) }
    dend_47 { pt3dadd( 25.0637, 65.7443, -16.6185, 0.68 ) }
    dend_47 { pt3dadd( 25.9685, 66.8256, -16.898, 0.23 ) }
    dend_47 { pt3dadd( 26.987, 68.0561, -17.2143, 0.68 ) }
    dend_47 { pt3dadd( 28.6174, 70.1229, -17.8284, 0.23 ) }
    dend_47 { pt3dadd( 29.7267, 71.652, -18.3144, 0.91 ) }
    dend_47 { pt3dadd( 30.7932, 73.2943, -18.8078, 0.23 ) }
    dend_47 { pt3dadd( 31.1422, 73.8595, -18.9315, 0.91 ) }
    dend_47 { pt3dadd( 32.3834, 75.9727, -19.2327, 0.23 ) }
    dend_47 { pt3dadd( 33.7221, 78.3254, -19.4443, 0.91 ) }
    dend_47 { pt3dadd( 34.9636, 80.5777, -19.5103, 0.23 ) }
    dend_47 { pt3dadd( 35.4801, 81.5273, -19.5102, 0.91 ) }
    dend_47 { pt3dadd( 37.0272, 84.2053, -19.3985, 0.23 ) }
    dend_47 { pt3dadd( 37.5821, 85.0506, -19.2962, 1.14 ) }
    dend_47 { pt3dadd( 38.0808, 85.6784, -19.1581, 1.14 ) }
    dend_47 { pt3dadd( 39.0133, 86.5617, -18.8324, 0.23 ) }
    dend_47 { pt3dadd( 40.366, 87.5666, -18.3726, 0.91 ) }
    dend_47 { pt3dadd( 41.9088, 88.4175, -17.9102, 0.23 ) }
    dend_47 { pt3dadd( 43.9067, 89.2216, -17.4258, 0.23 ) }
    dend_47 { pt3dadd( 45.2344, 89.5762, -17.0741, 0.91 ) }
    dend_47 { pt3dadd( 47.2212, 89.9083, -16.5452, 0.23 ) }
    dend_47 { pt3dadd( 48.3991, 90.0279, -16.2397, 0.91 ) }
    dend_47 { pt3dadd( 50.946, 90.1535, -15.6366, 0.23 ) }
    dend_47 { pt3dadd( 52.5494, 90.1909, -15.3125, 0.68 ) }
    dend_47 { pt3dadd( 55.8074, 90.2022, -14.7883, 0.23 ) }
    dend_47 { pt3dadd( 57.1106, 90.1839, -14.607, 0.68 ) }
    dend_47 { pt3dadd( 58.0621, 90.1584, -14.5192, 0.23 ) }
    dend_47 { pt3dadd( 59.6936, 90.1031, -14.4097, 0.91 ) }
    dend_47 { pt3dadd( 60.7235, 90.0445, -14.3868, 0.23 ) }
    dend_47 { pt3dadd( 61.8579, 89.9815, -14.4151, 0.23 ) }
    dend_47 { pt3dadd( 62.7043, 89.9403, -14.4803, 0.23 ) }
    dend_47 { pt3dadd( 64.5249, 89.8931, -14.5971, 0.91 ) }
    dend_47 { pt3dadd( 65.3736, 89.8945, -14.644, 0.23 ) }
    dend_47 { pt3dadd( 66.6643, 89.958, -14.7753, 0.68 ) }
    dend_47 { pt3dadd( 68.7942, 90.1769, -15.0712, 0.23 ) }
    dend_47 { pt3dadd( 69.6927, 90.3304, -15.2573, 0.91 ) }
    dend_47 { pt3dadd( 71.4112, 90.7526, -15.7083, 0.23 ) }
    dend_47 { pt3dadd( 72.3113, 91.0086, -15.9728, 0.91 ) }
    dend_47 { pt3dadd( 74.7695, 91.8005, -16.7741, 0.23 ) }
    dend_47 { pt3dadd( 76.2286, 92.3363, -17.3182, 0.91 ) }
    dend_47 { pt3dadd( 77.7001, 92.8678, -17.9816, 0.23 ) }
    dend_47 { pt3dadd( 79.0553, 93.3943, -18.698, 0.68 ) }
    dend_47 { pt3dadd( 86.6215, 98.0332, -20.2882, 0.68 ) }
    dend_47 { pt3dadd( 94.2894, 101.602, -23.2753, 0.68 ) }
    dend_47 { pt3dadd( 101.981, 105.792, -25.3248, 0.68 ) }
    dend_47 { pt3dadd( 109.291, 110.704, -27.3263, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 94/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -238.31, -117.442, 11.4804, 0.23 ) }
    dend_42 { pt3dadd( -240.362, -120.028, 11.7806, 0.23 ) }
    dend_42 { pt3dadd( -241.619, -121.703, 11.8567, 0.68 ) }
    dend_42 { pt3dadd( -242.729, -123.24, 11.8745, 0.23 ) }
    dend_42 { pt3dadd( -244.312, -125.455, 11.8652, 0.45 ) }
    dend_42 { pt3dadd( -247.064, -129.351, 11.8153, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_42 { pt3dadd( -248.829, -131.831, 11.7696, 0.23 ) }
    dend_42 { pt3dadd( -250.524, -134.359, 11.641, 0.91 ) }
    dend_42 { pt3dadd( -251.981, -136.601, 11.6005, 0.23 ) }
    dend_42 { pt3dadd( -252.593, -137.574, 11.5807, 0.23 ) }
    dend_42 { pt3dadd( -253.494, -139.047, 11.5517, 0.91 ) }
    dend_42 { pt3dadd( -254.723, -141.234, 11.4929, 0.23 ) }
    dend_42 { pt3dadd( -255.371, -142.515, 11.5138, 0.91 ) }
    dend_42 { pt3dadd( -257.041, -146.498, 11.434, 0.23 ) }
    dend_42 { pt3dadd( -258.117, -149.584, 11.1812, 0.23 ) }
    dend_42 { pt3dadd( -259.063, -152.503, 10.9107, 0.23 ) }
    dend_42 { pt3dadd( -259.999, -155.681, 10.5651, 0.23 ) }
    dend_42 { pt3dadd( -260.779, -158.726, 10.1647, 0.68 ) }
    dend_42 { pt3dadd( -261.734, -162.887, 9.47383, 0.23 ) }
    dend_42 { pt3dadd( -262.317, -166.235, 8.69561, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -238.31, -117.442, 11.4804, 0.23 ) }
    dend_41 { pt3dadd( -241.53, -117.739, 10.7825, 0.23 ) }
    dend_41 { pt3dadd( -243.827, -118.04, 10.3815, 0.45 ) }
    dend_41 { pt3dadd( -246.143, -118.41, 10.1167, 0.23 ) }
    dend_41 { pt3dadd( -247.289, -118.604, 9.96697, 0.23 ) }
    dend_41 { pt3dadd( -248.081, -118.747, 9.86542, 0.23 ) }
    dend_41 { pt3dadd( -249.12, -118.94, 9.68605, 0.68 ) }
    dend_41 { pt3dadd( -251.561, -119.513, 9.2391, 0.23 ) }
    dend_41 { pt3dadd( -252.833, -119.869, 8.9853, 0.45 ) }
    dend_41 { pt3dadd( -255.327, -120.633, 8.40781, 0.23 ) }
    dend_41 { pt3dadd( -258.016, -121.461, 7.75637, 0.91 ) }
    dend_41 { pt3dadd( -260.657, -122.252, 7.11948, 0.23 ) }
    dend_41 { pt3dadd( -262.825, -122.923, 6.57302, 0.91 ) }
    dend_41 { pt3dadd( -263.993, -123.277, 6.28016, 0.23 ) }
    dend_41 { pt3dadd( -264.708, -123.494, 6.09599, 0.91 ) }
    dend_41 { pt3dadd( -266.0, -123.87, 5.82002, 0.23 ) }
    dend_41 { pt3dadd( -267.676, -124.29, 5.30195, 0.68 ) }
    dend_41 { pt3dadd( -269.854, -124.789, 4.5228, 0.23 ) }
    dend_41 { pt3dadd( -271.255, -125.074, 3.93517, 0.68 ) }
    dend_41 { pt3dadd( -272.851, -125.431, 3.23289, 0.23 ) }
    dend_41 { pt3dadd( -274.035, -125.72, 2.63814, 0.91 ) }
    dend_41 { pt3dadd( -277.899, -126.738, 0.557626, 0.23 ) }
    dend_41 { pt3dadd( -279.639, -127.211, -0.439471, 0.23 ) }
    dend_41 { pt3dadd( -280.775, -127.504, -1.10719, 0.23 ) }
    dend_41 { pt3dadd( -282.974, -128.075, -2.37597, 0.91 ) }
    dend_41 { pt3dadd( -285.299, -128.705, -3.72125, 0.23 ) }
    dend_41 { pt3dadd( -286.6, -129.09, -4.45022, 0.23 ) }
    dend_41 { pt3dadd( -287.747, -129.438, -5.06307, 0.68 ) }
    dend_41 { pt3dadd( -289.704, -130.045, -6.193, 0.23 ) }
    dend_41 { pt3dadd( -290.987, -130.45, -6.96071, 0.91 ) }
    dend_41 { pt3dadd( -292.968, -131.074, -8.18443, 0.23 ) }
    dend_41 { pt3dadd( -294.78, -131.681, -9.22572, 0.91 ) }
    dend_41 { pt3dadd( -297.081, -132.564, -10.5417, 0.23 ) }
    dend_41 { pt3dadd( -298.107, -132.991, -11.1172, 0.23 ) }
    dend_41 { pt3dadd( -299.563, -133.654, -11.8937, 0.68 ) }
    dend_41 { pt3dadd( -300.976, -134.35, -12.5966, 0.23 ) }
    dend_41 { pt3dadd( -302.422, -135.126, -13.2375, 1.14 ) }
    dend_41 { pt3dadd( -303.955, -135.979, -13.8846, 0.23 ) }
    dend_41 { pt3dadd( -305.377, -136.797, -14.4096, 0.23 ) }
    dend_41 { pt3dadd( -307.222, -137.911, -15.0995, 0.91 ) }
    dend_41 { pt3dadd( -308.855, -138.926, -15.6715, 0.23 ) }
    dend_41 { pt3dadd( -310.834, -140.182, -16.4707, 1.14 ) }
    dend_41 { pt3dadd( -311.695, -140.715, -16.8603, 0.23 ) }
    dend_41 { pt3dadd( -312.355, -141.087, -17.1598, 0.91 ) }
    dend_41 { pt3dadd( -313.943, -141.995, -17.8925, 0.23 ) }
    dend_41 { pt3dadd( -315.826, -143.034, -18.85, 1.14 ) }
    dend_41 { pt3dadd( -318.692, -144.541, -20.4115, 0.23 ) }
    dend_41 { pt3dadd( -319.769, -145.098, -21.021, 0.23 ) }
    dend_41 { pt3dadd( -321.139, -145.852, -21.8553, 0.45 ) }
    dend_41 { pt3dadd( -328.452, -149.353, -24.5047, 0.45 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 8.76521, -32.7326, 28.9463, 0.23 ) }
    dend_38 { pt3dadd( 9.90471, -33.9404, 29.7278, 0.23 ) }
    dend_38 { pt3dadd( 11.1044, -35.2811, 30.5911, 0.91 ) }
    dend_38 { pt3dadd( 14.0138, -38.5511, 32.6302, 0.23 ) }
    dend_38 { pt3dadd( 16.1217, -40.8963, 34.0751, 0.91 ) }
    dend_38 { pt3dadd( 19.0424, -44.1429, 35.9618, 0.23 ) }
    dend_38 { pt3dadd( 20.0054, -45.2655, 36.5744, 0.23 ) }
    dend_38 { pt3dadd( 22.0492, -47.9149, 37.8599, 0.23 ) }
    dend_38 { pt3dadd( 22.6894, -48.8595, 38.3784, 0.68 ) }
    dend_38 { pt3dadd( 23.8458, -50.8045, 39.4846, 0.23 ) }
    dend_38 { pt3dadd( 24.7382, -52.5694, 40.6613, 0.91 ) }
    dend_38 { pt3dadd( 26.0265, -55.7357, 43.0619, 0.23 ) }
    dend_38 { pt3dadd( 26.2559, -56.3469, 43.6003, 0.91 ) }
    dend_38 { pt3dadd( 28.0667, -61.3157, 48.3084, 0.23 ) }
    dend_38 { pt3dadd( 28.4538, -62.312, 49.3208, 0.91 ) }
    dend_38 { pt3dadd( 29.5922, -64.6936, 52.0976, 0.23 ) }
    dend_38 { pt3dadd( 30.2642, -65.6924, 53.5367, 0.91 ) }
    dend_38 { pt3dadd( 32.837, -68.3403, 58.1322, 0.23 ) }
    dend_38 { pt3dadd( 33.5752, -68.9334, 59.2045, 0.23 ) }
    dend_38 { pt3dadd( 34.5954, -69.6094, 60.4687, 0.91 ) }
    dend_38 { pt3dadd( 37.8126, -71.5123, 64.0927, 0.23 ) }
    dend_38 { pt3dadd( 41.4378, -73.4222, 68.0101, 0.23 ) }
    dend_38 { pt3dadd( 45.0016, -75.2502, 71.7853, 0.23 ) }
    dend_38 { pt3dadd( 47.5283, -76.5952, 74.4433, 0.23 ) }
    dend_38 { pt3dadd( 50.6838, -78.3197, 77.8747, 0.23 ) }
    dend_38 { pt3dadd( 52.4167, -79.3122, 79.7854, 0.91 ) }
    dend_38 { pt3dadd( 56.6089, -81.7768, 84.0212, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.76521, -32.7326, 28.9463, 0.23 ) }
    dend_31 { pt3dadd( 8.46148, -36.2084, 29.4934, 0.23 ) }
    dend_31 { pt3dadd( 8.29163, -38.2955, 29.9076, 0.23 ) }
    dend_31 { pt3dadd( 8.02339, -41.4487, 30.5812, 0.91 ) }
    dend_31 { pt3dadd( 7.77765, -44.0541, 31.2407, 0.23 ) }
    dend_31 { pt3dadd( 7.6543, -45.2162, 31.5477, 0.23 ) }
    dend_31 { pt3dadd( 7.48982, -46.9944, 32.0129, 1.14 ) }
    dend_31 { pt3dadd( 7.25096, -49.9862, 32.8447, 0.23 ) }
    dend_31 { pt3dadd( 7.16173, -51.9868, 33.3871, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 7.17292, -54.1899, 33.9284, 0.91 ) }
    dend_31 { pt3dadd( 7.30435, -56.236, 34.3331, 0.23 ) }
    dend_31 { pt3dadd( 7.62105, -58.6073, 34.7308, 0.23 ) }
    dend_31 { pt3dadd( 7.83977, -59.7316, 34.8761, 0.91 ) }
    dend_31 { pt3dadd( 8.23816, -61.405, 35.1222, 0.68 ) }
    dend_31 { pt3dadd( 8.84668, -63.7213, 35.5864, 0.23 ) }
    dend_31 { pt3dadd( 9.1775, -64.9896, 35.8814, 0.91 ) }
    dend_31 { pt3dadd( 10.0744, -68.5169, 36.9524, 0.23 ) }
    dend_31 { pt3dadd( 10.3741, -69.9973, 37.4813, 0.91 ) }
    dend_31 { pt3dadd( 11.0199, -74.3042, 39.1662, 0.23 ) }
    dend_31 { pt3dadd( 11.1959, -76.561, 40.1574, 0.91 ) }
    dend_31 { pt3dadd( 11.1904, -77.7983, 40.7774, 0.91 ) }
    dend_31 { pt3dadd( 10.991, -80.3431, 42.1496, 0.23 ) }
    dend_31 { pt3dadd( 10.6883, -82.1798, 43.1896, 0.91 ) }
    dend_31 { pt3dadd( 10.2847, -83.7107, 44.1543, 0.23 ) }
    dend_31 { pt3dadd( 9.67366, -85.2616, 45.2666, 0.91 ) }
    dend_31 { pt3dadd( 8.87148, -86.8052, 46.5629, 0.23 ) }
    dend_31 { pt3dadd( 8.37693, -87.5865, 47.3107, 1.14 ) }
    dend_31 { pt3dadd( 7.95542, -88.1376, 47.9105, 0.23 ) }
    dend_31 { pt3dadd( 6.23832, -90.3713, 50.6857, 0.91 ) }
    dend_31 { pt3dadd( 5.34273, -91.5411, 52.2123, 0.23 ) }
    dend_31 { pt3dadd( 4.89046, -92.1623, 53.0026, 1.14 ) }
    dend_31 { pt3dadd( 4.36847, -92.9955, 54.0528, 0.23 ) }
    dend_31 { pt3dadd( 3.92648, -93.8807, 55.1615, 0.91 ) }
    dend_31 { pt3dadd( 3.33116, -95.556, 57.1817, 0.23 ) }
    dend_31 { pt3dadd( 3.14784, -96.332, 58.0569, 0.91 ) }
    dend_31 { pt3dadd( 3.05225, -96.7934, 58.5598, 0.23 ) }
    dend_31 { pt3dadd( 2.67329, -98.9681, 61.0057, 0.91 ) }
    dend_31 { pt3dadd( 2.3787, -100.747, 63.1248, 0.23 ) }
    dend_31 { pt3dadd( 2.06399, -102.677, 65.4366, 0.91 ) }
    dend_31 { pt3dadd( 1.81115, -104.129, 67.2058, 0.23 ) }
    dend_31 { pt3dadd( 1.65712, -105.013, 68.3306, 1.14 ) }
    dend_31 { pt3dadd( 1.32445, -106.739, 70.5722, 0.23 ) }
    dend_31 { pt3dadd( 0.908244, -108.35, 72.6454, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.0189, -34.4896, -10.1202, 0.23 ) }
    dend_25 { pt3dadd( 10.1054, -38.7987, -8.41134, 0.23 ) }
    dend_25 { pt3dadd( 10.0763, -40.931, -7.28742, 0.23 ) }
    dend_25 { pt3dadd( 10.082, -43.7364, -5.65083, 0.91 ) }
    dend_25 { pt3dadd( 10.1142, -44.8576, -4.99292, 0.23 ) }
    dend_25 { pt3dadd( 10.2578, -47.2512, -3.57821, 0.68 ) }
    dend_25 { pt3dadd( 10.3865, -49.4102, -2.14671, 0.23 ) }
    dend_25 { pt3dadd( 10.5752, -53.2584, 0.60736, 0.68 ) }
    dend_25 { pt3dadd( 10.6264, -54.2882, 1.39979, 0.68 ) }
    dend_25 { pt3dadd( 10.7416, -55.7399, 2.51121, 0.23 ) }
    dend_25 { pt3dadd( 10.9139, -57.8668, 4.1292, 1.14 ) }
    dend_25 { pt3dadd( 11.2437, -62.0452, 6.92707, 0.23 ) }
    dend_25 { pt3dadd( 11.2821, -62.8607, 7.37229, 0.23 ) }
    dend_25 { pt3dadd( 11.3229, -63.7158, 7.74986, 0.23 ) }
    dend_25 { pt3dadd( 11.3688, -65.4387, 8.43274, 1.14 ) }
    dend_25 { pt3dadd( 11.3377, -69.2818, 9.94247, 0.23 ) }
    dend_25 { pt3dadd( 11.2644, -71.9709, 10.8935, 1.14 ) }
    dend_25 { pt3dadd( 11.1086, -76.8638, 12.529, 0.23 ) }
    dend_25 { pt3dadd( 10.9791, -80.4385, 13.7715, 0.23 ) }
    dend_25 { pt3dadd( 10.9022, -82.8793, 14.6337, 0.68 ) }
    dend_25 { pt3dadd( 10.7628, -87.6383, 16.2594, 0.23 ) }
    dend_25 { pt3dadd( 10.7034, -89.6926, 16.9289, 1.14 ) }
    dend_25 { pt3dadd( 10.578, -93.3332, 18.1173, 0.23 ) }
    dend_25 { pt3dadd( 10.529, -94.8101, 18.5151, 0.23 ) }
    dend_25 { pt3dadd( 10.5226, -96.3139, 18.8172, 0.23 ) }
    dend_25 { pt3dadd( 10.5584, -98.7412, 19.2607, 0.91 ) }
    dend_25 { pt3dadd( 10.5933, -100.951, 19.6746, 0.23 ) }
    dend_25 { pt3dadd( 10.5991, -103.012, 20.1446, 0.91 ) }
    dend_25 { pt3dadd( 10.5559, -105.053, 20.7401, 0.23 ) }
    dend_25 { pt3dadd( 10.4464, -107.303, 21.6119, 0.91 ) }
    dend_25 { pt3dadd( 10.1491, -110.097, 22.9513, 0.23 ) }
    dend_25 { pt3dadd( 9.50868, -115.164, 25.6414, 0.23 ) }
    dend_25 { pt3dadd( 9.41032, -116.319, 26.1999, 0.68 ) }
    dend_25 { pt3dadd( 9.2752, -119.844, 27.854, 1.14 ) }
    dend_25 { pt3dadd( 9.4157, -123.288, 29.4794, 0.23 ) }
    dend_25 { pt3dadd( 9.95777, -127.936, 31.5611, 0.23 ) }
    dend_25 { pt3dadd( 10.3643, -129.967, 32.3673, 0.23 ) }
    dend_25 { pt3dadd( 11.9957, -136.131, 34.4841, 0.23 ) }
    dend_25 { pt3dadd( 12.8834, -139.142, 35.3779, 0.68 ) }
    dend_25 { pt3dadd( 14.7648, -145.33, 37.0543, 0.23 ) }
    dend_25 { pt3dadd( 15.5733, -147.721, 37.6568, 0.68 ) }
    dend_25 { pt3dadd( 17.0957, -151.836, 38.6918, 0.23 ) }
    dend_25 { pt3dadd( 17.9648, -154.384, 39.4228, 0.23 ) }
    dend_25 { pt3dadd( 18.7421, -157.119, 40.3712, 0.91 ) }
    dend_25 { pt3dadd( 20.2916, -163.442, 42.2134, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 79/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.0189, -34.4896, -10.1202, 0.23 ) }
    dend_24 { pt3dadd( 8.91375, -35.678, -11.5024, 0.23 ) }
    dend_24 { pt3dadd( 7.7993, -37.1471, -12.8931, 0.68 ) }
    dend_24 { pt3dadd( 6.51157, -39.0919, -14.6509, 0.68 ) }
    dend_24 { pt3dadd( 5.86837, -40.1632, -15.5628, 0.68 ) }
    dend_24 { pt3dadd( 5.29082, -41.2114, -16.3887, 0.68 ) }
    dend_24 { pt3dadd( 4.49508, -42.7162, -17.512, 0.23 ) }
    dend_24 { pt3dadd( 3.87818, -44.0992, -18.3563, 0.23 ) }
    dend_24 { pt3dadd( 3.19003, -45.9145, -19.3312, 0.23 ) }
    dend_24 { pt3dadd( 2.72992, -47.164, -19.9344, 0.23 ) }
    dend_24 { pt3dadd( 2.07709, -48.8488, -20.7585, 1.14 ) }
    dend_24 { pt3dadd( 1.70665, -49.7602, -21.1962, 1.14 ) }
    dend_24 { pt3dadd( 0.621462, -52.0493, -22.1782, 0.23 ) }
    dend_24 { pt3dadd( -0.277198, -53.7886, -22.8186, 0.91 ) }
    dend_24 { pt3dadd( -1.2187, -55.6314, -23.427, 0.91 ) }
    dend_24 { pt3dadd( -1.57254, -56.3317, -23.6571, 0.91 ) }
    dend_24 { pt3dadd( -2.74479, -58.7443, -24.514, 0.23 ) }
    dend_24 { pt3dadd( -3.86208, -61.2008, -25.3677, 0.23 ) }
    dend_24 { pt3dadd( -4.97148, -63.7558, -26.2412, 0.23 ) }
    dend_24 { pt3dadd( -5.66857, -65.4996, -26.8161, 0.23 ) }
    dend_24 { pt3dadd( -6.33072, -67.3695, -27.4691, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_24 { pt3dadd( -7.40657, -70.7617, -28.7221, 0.23 ) }
    dend_24 { pt3dadd( -8.17322, -73.4802, -29.7975, 0.91 ) }
    dend_24 { pt3dadd( -8.4311, -74.5133, -30.2324, 0.91 ) }
    dend_24 { pt3dadd( -8.75637, -75.9172, -30.7924, 0.23 ) }
    dend_24 { pt3dadd( -9.15931, -77.711, -31.4461, 0.68 ) }
    dend_24 { pt3dadd( -9.66276, -79.8867, -32.2271, 0.23 ) }
    dend_24 { pt3dadd( -9.88837, -80.8107, -32.5527, 0.68 ) }
    dend_24 { pt3dadd( -10.4463, -82.9008, -33.3458, 0.23 ) }
    dend_24 { pt3dadd( -10.7266, -83.8148, -33.6934, 1.14 ) }
    dend_24 { pt3dadd( -11.229, -85.2194, -34.2249, 1.14 ) }
    dend_24 { pt3dadd( -12.1386, -87.3849, -35.0536, 0.23 ) }
    dend_24 { pt3dadd( -13.2436, -89.6243, -36.0033, 0.23 ) }
    dend_24 { pt3dadd( -13.9312, -90.777, -36.5499, 0.91 ) }
    dend_24 { pt3dadd( -14.6573, -91.8105, -37.0918, 0.91 ) }
    dend_24 { pt3dadd( -15.7545, -93.1732, -37.7666, 0.23 ) }
    dend_24 { pt3dadd( -16.9301, -94.4851, -38.3764, 0.91 ) }
    dend_24 { pt3dadd( -17.604, -95.1636, -38.671, 0.91 ) }
    dend_24 { pt3dadd( -19.3532, -96.7067, -39.3151, 0.23 ) }
    dend_24 { pt3dadd( -20.2391, -97.4665, -39.6181, 0.23 ) }
    dend_24 { pt3dadd( -22.4603, -99.3788, -40.3399, 0.68 ) }
    dend_24 { pt3dadd( -23.4469, -100.272, -40.6558, 0.23 ) }
    dend_24 { pt3dadd( -24.105, -100.936, -40.8772, 1.14 ) }
    dend_24 { pt3dadd( -24.7026, -101.593, -41.1025, 1.14 ) }
    dend_24 { pt3dadd( -26.2083, -103.409, -41.7603, 0.23 ) }
    dend_24 { pt3dadd( -26.9311, -104.304, -42.1343, 0.23 ) }
    dend_24 { pt3dadd( -27.9773, -105.742, -42.8073, 1.14 ) }
    dend_24 { pt3dadd( -28.9781, -107.308, -43.5636, 0.23 ) }
    dend_24 { pt3dadd( -29.3428, -107.951, -43.9148, 0.68 ) }
    dend_24 { pt3dadd( -29.821, -108.958, -44.4967, 0.23 ) }
    dend_24 { pt3dadd( -30.3118, -110.224, -45.2528, 0.23 ) }
    dend_24 { pt3dadd( -30.7453, -111.884, -46.2496, 0.68 ) }
    dend_24 { pt3dadd( -31.0934, -113.898, -47.4578, 0.23 ) }
    dend_24 { pt3dadd( -31.2446, -115.817, -48.5312, 0.23 ) }
    dend_24 { pt3dadd( -31.2419, -117.798, -49.5371, 0.45 ) }
    dend_24 { pt3dadd( -31.1285, -118.961, -50.0832, 1.59 ) }
    dend_24 { pt3dadd( -30.5972, -122.144, -51.4316, 0.23 ) }
    dend_24 { pt3dadd( -30.4476, -122.841, -51.7045, 0.23 ) }
    dend_24 { pt3dadd( -29.9302, -124.9, -52.3992, 1.14 ) }
    dend_24 { pt3dadd( -29.568, -126.243, -52.8074, 1.14 ) }
    dend_24 { pt3dadd( -28.927, -128.526, -53.501, 0.23 ) }
    dend_24 { pt3dadd( -28.5233, -129.934, -53.9256, 0.91 ) }
    dend_24 { pt3dadd( -27.7421, -132.728, -54.7376, 0.23 ) }
    dend_24 { pt3dadd( -27.4587, -133.862, -55.1019, 0.23 ) }
    dend_24 { pt3dadd( -27.0947, -135.46, -55.6758, 1.14 ) }
    dend_24 { pt3dadd( -26.9025, -136.39, -56.0268, 1.14 ) }
    dend_24 { pt3dadd( -26.1591, -140.173, -57.5334, 0.23 ) }
    dend_24 { pt3dadd( -25.7891, -141.978, -58.2978, 1.14 ) }
    dend_24 { pt3dadd( -25.2917, -144.446, -59.4551, 0.23 ) }
    dend_24 { pt3dadd( -24.9649, -146.029, -60.2707, 1.14 ) }
    dend_24 { pt3dadd( -24.8629, -146.487, -60.5211, 1.14 ) }
    dend_24 { pt3dadd( -24.5578, -147.804, -61.1639, 0.23 ) }
    dend_24 { pt3dadd( -24.3837, -148.507, -61.4063, 0.68 ) }
    dend_24 { pt3dadd( -23.8987, -150.167, -61.6689, 0.23 ) }
    dend_24 { pt3dadd( -23.3655, -151.578, -61.5054, 1.14 ) }
    dend_24 { pt3dadd( -22.9091, -152.697, -61.2148, 1.14 ) }
    dend_24 { pt3dadd( -21.7283, -155.356, -60.3347, 0.23 ) }
    dend_24 { pt3dadd( -21.0521, -156.762, -59.8041, 0.91 ) }
    dend_24 { pt3dadd( -20.6405, -157.551, -59.5359, 0.91 ) }
    dend_24 { pt3dadd( -19.3072, -159.918, -58.8628, 0.23 ) }
    dend_24 { pt3dadd( -18.6849, -161.022, -58.6626, 1.14 ) }
    dend_24 { pt3dadd( -17.9149, -162.489, -58.6347, 1.36 ) }
    dend_24 { pt3dadd( -16.8507, -164.649, -58.9106, 0.23 ) }
    dend_24 { pt3dadd( -15.7748, -167.042, -59.3795, 0.23 ) }
    dend_24 { pt3dadd( -15.1003, -168.671, -59.75, 0.91 ) }
    dend_24 { pt3dadd( -14.5961, -169.994, -60.0868, 0.91 ) }
    dend_24 { pt3dadd( -13.4737, -173.074, -60.8356, 0.23 ) }
    dend_24 { pt3dadd( -12.9905, -174.444, -61.1708, 1.14 ) }
    dend_24 { pt3dadd( -12.0727, -177.107, -61.7746, 0.23 ) }
    dend_24 { pt3dadd( -11.571, -178.686, -62.0785, 1.14 ) }
    dend_24 { pt3dadd( -11.0895, -180.369, -62.3843, 0.23 ) }
    dend_24 { pt3dadd( -10.8298, -181.319, -62.5601, 0.91 ) }
    dend_24 { pt3dadd( -10.3184, -184.074, -63.1335, 0.23 ) }
    dend_24 { pt3dadd( -10.2277, -185.796, -63.5943, 1.59 ) }
    dend_24 { pt3dadd( -10.5112, -188.023, -64.3549, 0.23 ) }
    dend_24 { pt3dadd( -10.8985, -189.294, -64.7663, 0.91 ) }
    dend_24 { pt3dadd( -11.1636, -189.843, -64.9328, 0.91 ) }
    dend_24 { pt3dadd( -12.6538, -192.248, -65.5672, 0.23 ) }
    dend_24 { pt3dadd( -13.5954, -193.478, -65.8365, 1.14 ) }
    dend_24 { pt3dadd( -14.2948, -194.302, -65.9661, 1.14 ) }
    dend_24 { pt3dadd( -16.26, -196.65, -66.2169, 0.23 ) }
    dend_24 { pt3dadd( -16.8534, -197.465, -66.2844, 0.91 ) }
    dend_24 { pt3dadd( -17.8324, -198.983, -66.3594, 0.23 ) }
    dend_24 { pt3dadd( -18.1898, -199.659, -66.3663, 0.91 ) }
    dend_24 { pt3dadd( -18.8768, -201.326, -66.4883, 0.23 ) }
    dend_24 { pt3dadd( -19.415, -202.948, -66.7766, 0.91 ) }
    dend_24 { pt3dadd( -20.0381, -205.257, -67.5657, 0.23 ) }
    dend_24 { pt3dadd( -20.2857, -206.334, -68.0509, 0.23 ) }
    dend_24 { pt3dadd( -20.6082, -207.9, -68.9812, 1.14 ) }
    dend_24 { pt3dadd( -21.0193, -210.144, -70.5449, 0.23 ) }
    dend_24 { pt3dadd( -21.2421, -211.784, -71.9044, 1.36 ) }
    dend_24 { pt3dadd( -21.5036, -213.827, -73.7758, 0.23 ) }
    dend_24 { pt3dadd( -21.6157, -214.964, -74.8813, 1.14 ) }
    dend_24 { pt3dadd( -21.72, -216.451, -76.3393, 0.23 ) }
    dend_24 { pt3dadd( -21.7908, -217.414, -77.2842, 0.68 ) }
    dend_24 { pt3dadd( -21.9805, -219.624, -79.3584, 0.23 ) }
    dend_24 { pt3dadd( -22.0374, -220.536, -80.1683, 0.91 ) }
    dend_24 { pt3dadd( -22.095, -222.101, -81.3891, 0.23 ) }
    dend_24 { pt3dadd( -22.1154, -223.149, -82.1027, 0.23 ) }
    dend_24 { pt3dadd( -22.1129, -224.491, -82.9186, 0.23 ) }
    dend_24 { pt3dadd( -25.1309, -232.201, -85.3998, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_24 { pt3dadd( -28.6154, -239.754, -87.694, 0.23 ) }
    dend_24 { pt3dadd( -31.7494, -247.569, -89.6489, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 2/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 94.5829, -159.827, -120.884, 0.23 ) }
    dend_22 { pt3dadd( 99.065, -165.957, -126.17, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 94.5829, -159.827, -120.884, 0.23 ) }
    dend_21 { pt3dadd( 96.929, -165.631, -126.022, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 51.0535, 41.5255, -1.8488, 0.23 ) }
    dend_13 { pt3dadd( 52.6986, 40.9341, -1.45141, 0.23 ) }
    dend_13 { pt3dadd( 54.2661, 40.4998, -1.19225, 0.68 ) }
    dend_13 { pt3dadd( 56.5994, 39.9531, -0.842638, 0.23 ) }
    dend_13 { pt3dadd( 58.3563, 39.6503, -0.628762, 0.91 ) }
    dend_13 { pt3dadd( 60.1986, 39.3735, -0.467473, 0.23 ) }
    dend_13 { pt3dadd( 61.7494, 39.1668, -0.381276, 1.14 ) }
    dend_13 { pt3dadd( 65.179, 38.8574, -0.251655, 0.23 ) }
    dend_13 { pt3dadd( 66.7788, 38.7429, -0.27557, 0.68 ) }
    dend_13 { pt3dadd( 71.0242, 38.5171, -0.399017, 0.23 ) }
    dend_13 { pt3dadd( 72.9969, 38.4098, -0.445468, 0.68 ) }
    dend_13 { pt3dadd( 76.5079, 38.2562, -0.451008, 0.23 ) }
    dend_13 { pt3dadd( 78.7263, 38.1719, -0.420686, 0.68 ) }
    dend_13 { pt3dadd( 83.4989, 38.0617, -0.302369, 0.23 ) }
    dend_13 { pt3dadd( 87.0052, 38.0135, -0.216924, 0.23 ) }
    dend_13 { pt3dadd( 90.1048, 38.0015, -0.0954227, 0.68 ) }
    dend_13 { pt3dadd( 93.3432, 38.0476, 0.0906654, 0.23 ) }
    dend_13 { pt3dadd( 95.284, 38.1207, 0.2285, 0.68 ) }
    dend_13 { pt3dadd( 97.6698, 38.3045, 0.402498, 0.23 ) }
    dend_13 { pt3dadd( 100.206, 38.6378, 0.655928, 0.23 ) }
    dend_13 { pt3dadd( 101.353, 38.8449, 0.718778, 0.23 ) }
    dend_13 { pt3dadd( 102.093, 39.0312, 0.709129, 0.23 ) }
    dend_13 { pt3dadd( 103.584, 39.454, 0.664092, 0.23 ) }
    dend_13 { pt3dadd( 106.098, 40.2806, 0.634614, 0.68 ) }
    dend_13 { pt3dadd( 107.548, 40.8312, 0.630684, 0.23 ) }
    dend_13 { pt3dadd( 108.698, 41.3533, 0.600856, 0.23 ) }
    dend_13 { pt3dadd( 111.068, 42.4962, 0.422028, 1.36 ) }
    dend_13 { pt3dadd( 119.409, 42.2451, 1.30497, 1.36 ) }
    dend_13 { pt3dadd( 127.554, 40.7351, 2.74061, 1.36 ) }
    dend_13 { pt3dadd( 135.865, 40.7944, 3.89621, 1.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 51.0535, 41.5255, -1.8488, 0.23 ) }
    dend_6 { pt3dadd( 51.8897, 41.9995, -1.67842, 0.23 ) }
    dend_6 { pt3dadd( 54.2354, 43.3292, -1.20049, 1.14 ) }
    dend_6 { pt3dadd( 56.858, 44.8159, -0.666152, 0.23 ) }
    dend_6 { pt3dadd( 58.0538, 45.4938, -0.422501, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 41/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -35.8918, -9.12776, -52.278, 0.23 ) }
    dend_74 { pt3dadd( -41.2966, -16.4012, -61.7177, 0.23 ) }
    dend_74 { pt3dadd( -46.5151, -23.2938, -71.5211, 0.23 ) }
    dend_74 { pt3dadd( -50.609, -31.6379, -80.8419, 0.23 ) }
    dend_74 { pt3dadd( -53.4757, -41.1051, -89.6453, 0.23 ) }
    dend_74 { pt3dadd( -56.6799, -48.5237, -99.9954, 0.23 ) }
    dend_74 { pt3dadd( -58.5871, -56.4347, -110.357, 0.23 ) }
    dend_74 { pt3dadd( -61.0883, -65.3223, -119.817, 0.23 ) }
    dend_74 { pt3dadd( -61.8554, -73.5017, -130.154, 0.23 ) }
    dend_74 { pt3dadd( -61.6481, -82.8258, -139.602, 0.23 ) }
    dend_74 { pt3dadd( -60.5406, -91.284, -149.722, 0.23 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 52/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -35.8918, -9.12776, -52.278, 0.23 ) }
    dend_71 { pt3dadd( -42.4311, -17.6881, -63.2218, 0.23 ) }
    dend_71 { pt3dadd( -51.935, -26.5702, -71.3598, 0.23 ) }
    dend_71 { pt3dadd( -60.0166, -36.9181, -79.4827, 0.23 ) }
    dend_71 { pt3dadd( -68.2742, -47.1268, -87.5861, 0.23 ) }
    dend_71 { pt3dadd( -75.7035, -55.93, -97.7509, 0.23 ) }
    dend_71 { pt3dadd( -85.3544, -64.4337, -106.079, 0.23 ) }
    dend_71 { pt3dadd( -94.5113, -74.2935, -113.565, 0.23 ) }
    dend_71 { pt3dadd( -103.485, -83.6465, -121.835, 0.23 ) }
    dend_71 { pt3dadd( -110.074, -93.4358, -131.768, 0.23 ) }
    dend_71 { pt3dadd( -117.015, -103.149, -141.522, 0.23 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 63/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 8.64016, 22.9755, -57.2135, 0.23 ) }
    dend_67 { pt3dadd( 13.0817, 22.6354, -67.6064, 0.23 ) }
    dend_67 { pt3dadd( 17.7799, 21.4735, -77.8297, 0.23 ) }
    dend_67 { pt3dadd( 25.0663, 21.5469, -86.483, 0.23 ) }
    dend_67 { pt3dadd( 31.2598, 23.0375, -95.8463, 0.23 ) }
    dend_67 { pt3dadd( 39.5386, 26.0122, -103.076, 0.23 ) }
    dend_67 { pt3dadd( 47.2348, 30.7575, -110.102, 0.23 ) }
    dend_67 { pt3dadd( 56.4341, 36.1158, -114.516, 0.23 ) }
    dend_67 { pt3dadd( 65.562, 40.026, -120.202, 0.23 ) }
    dend_67 { pt3dadd( 75.3795, 43.8475, -124.703, 0.23 ) }
    dend_67 { pt3dadd( 85.3645, 46.9774, -129.297, 0.23 ) }
    dend_67 { pt3dadd( 95.773, 47.995, -133.733, 0.23 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 75/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 8.64016, 22.9755, -57.2135, 0.23 ) }
    dend_64 { pt3dadd( 15.4604, 26.1222, -66.5532, 0.23 ) }
    dend_64 { pt3dadd( 22.1434, 28.966, -76.08, 0.23 ) }
    dend_64 { pt3dadd( 30.3013, 29.2999, -84.8231, 0.23 ) }
    dend_64 { pt3dadd( 39.0963, 28.0616, -92.8524, 0.23 ) }
    dend_64 { pt3dadd( 46.7447, 26.2787, -101.905, 0.23 ) }
    dend_64 { pt3dadd( 54.7823, 22.9941, -110.213, 0.23 ) }
    dend_64 { pt3dadd( 63.6419, 18.9094, -117.261, 0.23 ) }
    dend_64 { pt3dadd( 71.6302, 14.1809, -124.966, 0.23 ) }
    dend_64 { pt3dadd( 79.7865, 8.07301, -131.524, 0.23 ) }
    dend_64 { pt3dadd( 86.6376, 0.610824, -138.315, 0.23 ) }
    dend_64 { pt3dadd( 94.0578, -7.5276, -143.619, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -131.014, 101.993, 32.3848, 0.23 ) }
    dend_61 { pt3dadd( -132.371, 103.992, 32.4562, 0.23 ) }
    dend_61 { pt3dadd( -133.495, 105.616, 32.5905, 0.23 ) }
    dend_61 { pt3dadd( -134.778, 107.589, 32.7471, 0.45 ) }
    dend_61 { pt3dadd( -135.549, 108.906, 32.873, 0.23 ) }
    dend_61 { pt3dadd( -136.238, 110.367, 33.0689, 0.68 ) }
    dend_61 { pt3dadd( -137.143, 112.288, 33.3265, 0.23 ) }
    dend_61 { pt3dadd( -138.117, 114.565, 33.7126, 0.68 ) }
    dend_61 { pt3dadd( -138.596, 115.793, 33.9235, 0.23 ) }
    dend_61 { pt3dadd( -139.087, 117.352, 34.255, 0.68 ) }
    dend_61 { pt3dadd( -139.781, 120.56, 35.023, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 98/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -131.014, 101.993, 32.3848, 0.23 ) }
    dend_60 { pt3dadd( -133.094, 103.777, 33.4014, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( -134.305, 104.831, 34.2297, 0.23 ) }
    dend_60 { pt3dadd( -135.611, 105.968, 35.1228, 0.23 ) }
    dend_60 { pt3dadd( -137.883, 107.945, 36.6756, 0.68 ) }
    dend_60 { pt3dadd( -140.468, 110.195, 38.443, 0.23 ) }
    dend_60 { pt3dadd( -143.558, 112.884, 40.5556, 0.23 ) }
    dend_60 { pt3dadd( -146.306, 115.432, 42.7508, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 109.291, 110.704, -27.3263, 0.23 ) }
    dend_49 { pt3dadd( 119.092, 116.565, -27.9379, 0.23 ) }
    dend_49 { pt3dadd( 129.246, 121.258, -30.1372, 0.23 ) }
    dend_49 { pt3dadd( 138.804, 126.865, -33.0074, 0.23 ) }
    dend_49 { pt3dadd( 147.271, 132.609, -38.2126, 0.23 ) }
    dend_49 { pt3dadd( 156.004, 139.507, -41.1803, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 109.291, 110.704, -27.3263, 0.23 ) }
    dend_48 { pt3dadd( 119.675, 116.899, -27.9466, 0.23 ) }
    dend_48 { pt3dadd( 129.577, 123.819, -29.2763, 0.23 ) }
    dend_48 { pt3dadd( 139.29, 131.129, -29.2853, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.908244, -108.35, 72.6454, 0.23 ) }
    dend_35 { pt3dadd( 1.20994, -110.304, 73.1023, 0.23 ) }
    dend_35 { pt3dadd( 1.42405, -112.099, 73.4899, 0.68 ) }
    dend_35 { pt3dadd( 1.60411, -114.302, 73.9308, 0.23 ) }
    dend_35 { pt3dadd( 1.68409, -115.727, 74.1959, 0.91 ) }
    dend_35 { pt3dadd( 1.74603, -116.783, 74.3923, 0.23 ) }
    dend_35 { pt3dadd( 1.80803, -117.529, 74.5429, 0.23 ) }
    dend_35 { pt3dadd( 1.94227, -118.739, 74.8107, 0.68 ) }
    dend_35 { pt3dadd( 2.08934, -119.961, 75.0331, 0.23 ) }
    dend_35 { pt3dadd( 2.22977, -120.833, 75.2043, 0.91 ) }
    dend_35 { pt3dadd( 2.67403, -122.625, 75.6651, 0.23 ) }
    dend_35 { pt3dadd( 3.36523, -124.838, 76.3013, 0.91 ) }
    dend_35 { pt3dadd( 3.77236, -125.938, 76.646, 0.23 ) }
    dend_35 { pt3dadd( 4.28035, -127.124, 77.0457, 0.91 ) }
    dend_35 { pt3dadd( 5.36184, -129.424, 77.9191, 0.23 ) }
    dend_35 { pt3dadd( 6.24036, -131.23, 78.6568, 0.23 ) }
    dend_35 { pt3dadd( 6.67425, -132.097, 79.0267, 0.91 ) }
    dend_35 { pt3dadd( 7.37517, -133.46, 79.6416, 0.23 ) }
    dend_35 { pt3dadd( 7.95134, -134.563, 80.1797, 0.91 ) }
    dend_35 { pt3dadd( 9.10657, -136.7, 81.2556, 0.23 ) }
    dend_35 { pt3dadd( 9.52567, -137.496, 81.6113, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.908244, -108.35, 72.6454, 0.23 ) }
    dend_32 { pt3dadd( 0.486279, -109.681, 74.6045, 0.23 ) }
    dend_32 { pt3dadd( -0.0268071, -111.207, 76.7983, 0.23 ) }
    dend_32 { pt3dadd( -0.360308, -112.351, 78.4779, 0.68 ) }
    dend_32 { pt3dadd( -0.493576, -112.982, 79.4084, 0.23 ) }
    dend_32 { pt3dadd( -0.576542, -113.388, 80.0284, 0.91 ) }
    dend_32 { pt3dadd( -0.847667, -114.903, 82.4962, 0.23 ) }
    dend_32 { pt3dadd( -0.931693, -115.458, 83.4409, 0.91 ) }
    dend_32 { pt3dadd( -1.12341, -116.688, 85.6513, 0.23 ) }
    dend_32 { pt3dadd( -1.31968, -117.823, 87.6995, 0.23 ) }
    dend_32 { pt3dadd( -1.41415, -118.302, 88.5148, 0.91 ) }
    dend_32 { pt3dadd( -1.84399, -119.86, 90.9929, 0.23 ) }
    dend_32 { pt3dadd( -2.01901, -120.252, 91.5816, 0.91 ) }
    dend_32 { pt3dadd( -2.37621, -120.875, 92.394, 0.23 ) }
    dend_32 { pt3dadd( -2.80077, -121.497, 93.0903, 1.14 ) }
    dend_32 { pt3dadd( -3.79536, -122.821, 94.4166, 0.23 ) }
    dend_32 { pt3dadd( -4.86125, -124.265, 95.7413, 0.91 ) }
    dend_32 { pt3dadd( -6.11081, -125.87, 97.0786, 0.23 ) }
    dend_32 { pt3dadd( -7.12627, -127.187, 98.1847, 0.68 ) }
    dend_32 { pt3dadd( -8.06692, -128.371, 99.2201, 0.23 ) }
    dend_32 { pt3dadd( -8.7932, -129.227, 100.004, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 58.0538, 45.4938, -0.422501, 0.23 ) }
    dend_10 { pt3dadd( 60.1942, 45.1585, 1.79755, 0.23 ) }
    dend_10 { pt3dadd( 63.7304, 44.9626, 4.72062, 0.23 ) }
    dend_10 { pt3dadd( 66.5626, 45.0115, 6.69962, 0.91 ) }
    dend_10 { pt3dadd( 68.293, 45.1622, 7.78683, 0.23 ) }
    dend_10 { pt3dadd( 69.6316, 45.3431, 8.58623, 0.91 ) }
    dend_10 { pt3dadd( 72.4207, 45.7692, 10.0774, 0.23 ) }
    dend_10 { pt3dadd( 75.7003, 46.4819, 11.5565, 0.23 ) }
    dend_10 { pt3dadd( 78.5933, 47.1685, 12.6273, 0.23 ) }
    dend_10 { pt3dadd( 82.1556, 47.9809, 13.8426, 0.23 ) }
    dend_10 { pt3dadd( 85.1587, 48.6055, 14.8035, 0.91 ) }
    dend_10 { pt3dadd( 87.8764, 49.1654, 15.6868, 0.23 ) }
    dend_10 { pt3dadd( 89.8223, 49.5944, 16.3545, 0.68 ) }
    dend_10 { pt3dadd( 92.1467, 50.1306, 17.2322, 0.23 ) }
    dend_10 { pt3dadd( 93.9322, 50.607, 17.9642, 0.23 ) }
    dend_10 { pt3dadd( 94.7193, 50.8606, 18.3095, 0.23 ) }
    dend_10 { pt3dadd( 97.173, 51.8689, 19.5552, 0.91 ) }
    dend_10 { pt3dadd( 98.9123, 52.7496, 20.557, 0.23 ) }
    dend_10 { pt3dadd( 100.135, 53.4788, 21.3003, 0.91 ) }
    dend_10 { pt3dadd( 102.985, 55.3168, 22.8701, 0.23 ) }
    dend_10 { pt3dadd( 105.446, 57.017, 24.0654, 0.23 ) }
    dend_10 { pt3dadd( 107.13, 58.2394, 24.7914, 0.23 ) }
    dend_10 { pt3dadd( 108.589, 59.324, 25.3439, 0.68 ) }
    dend_10 { pt3dadd( 111.135, 61.1669, 26.1869, 0.23 ) }
    dend_10 { pt3dadd( 115.081, 63.9439, 27.3462, 0.23 ) }
    dend_10 { pt3dadd( 117.586, 65.5518, 27.8941, 0.23 ) }
    dend_10 { pt3dadd( 118.834, 66.2693, 28.1195, 0.23 ) }
    dend_10 { pt3dadd( 120.634, 67.166, 28.3825, 0.23 ) }
    dend_10 { pt3dadd( 122.272, 67.8769, 28.6195, 0.68 ) }
    dend_10 { pt3dadd( 123.16, 68.1742, 28.769, 0.68 ) }
    dend_10 { pt3dadd( 125.362, 68.7261, 29.4366, 0.23 ) }
    dend_10 { pt3dadd( 127.13, 69.0485, 30.0221, 0.68 ) }
    dend_10 { pt3dadd( 128.391, 69.2429, 30.4608, 0.23 ) }
    dend_10 { pt3dadd( 129.879, 69.4838, 30.9907, 0.68 ) }
    dend_10 { pt3dadd( 132.677, 70.0296, 32.0337, 0.23 ) }
    dend_10 { pt3dadd( 135.054, 70.5431, 33.058, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 58.0538, 45.4938, -0.422501, 0.68 ) }
    dend_7 { pt3dadd( 59.4967, 46.4939, -0.678925, 0.68 ) }
    dend_7 { pt3dadd( 60.4477, 47.1178, -0.800047, 0.68 ) }
    dend_7 { pt3dadd( 62.6904, 48.5287, -1.01318, 0.23 ) }
    dend_7 { pt3dadd( 64.2368, 49.4928, -1.10784, 0.23 ) }
    dend_7 { pt3dadd( 66.3768, 50.7937, -1.16034, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_7 { pt3dadd( 68.9359, 52.3235, -1.15551, 0.23 ) }
    dend_7 { pt3dadd( 69.5625, 52.6948, -1.13434, 1.36 ) }
    dend_7 { pt3dadd( 70.1836, 53.0728, -1.08551, 1.36 ) }
    dend_7 { pt3dadd( 71.9275, 54.264, -0.726266, 0.23 ) }
    dend_7 { pt3dadd( 73.5899, 55.6381, -0.242342, 0.23 ) }
    dend_7 { pt3dadd( 74.473, 56.486, 0.0555943, 0.23 ) }
    dend_7 { pt3dadd( 75.1637, 57.24, 0.282214, 1.14 ) }
    dend_7 { pt3dadd( 76.4265, 58.6731, 0.545043, 1.14 ) }
    dend_7 { pt3dadd( 78.745, 61.327, 0.68571, 0.23 ) }
    dend_7 { pt3dadd( 79.9767, 62.6813, 0.514359, 0.68 ) }
    dend_7 { pt3dadd( 81.1983, 63.8743, 0.190646, 0.23 ) }
    dend_7 { pt3dadd( 82.9387, 65.3018, -0.351253, 0.68 ) }
    dend_7 { pt3dadd( 85.5531, 67.0651, -1.22021, 0.23 ) }
    dend_7 { pt3dadd( 87.2322, 67.9566, -1.73514, 0.23 ) }
    dend_7 { pt3dadd( 89.6032, 68.9115, -2.38952, 1.14 ) }
    dend_7 { pt3dadd( 92.1387, 69.6282, -2.79988, 0.23 ) }
    dend_7 { pt3dadd( 94.2774, 70.0139, -2.86516, 0.68 ) }
    dend_7 { pt3dadd( 95.2637, 70.1019, -2.74257, 0.23 ) }
    dend_7 { pt3dadd( 97.9296, 70.1874, -2.00959, 0.91 ) }
    dend_7 { pt3dadd( 99.0932, 70.2024, -1.59206, 0.91 ) }
    dend_7 { pt3dadd( 101.014, 70.2156, -0.805676, 0.23 ) }
    dend_7 { pt3dadd( 102.267, 70.2492, -0.3132, 0.23 ) }
    dend_7 { pt3dadd( 103.0, 70.3057, -0.0479869, 0.23 ) }
    dend_7 { pt3dadd( 105.056, 70.6068, 0.601562, 0.68 ) }
    dend_7 { pt3dadd( 107.332, 71.1601, 1.17796, 0.23 ) }
    dend_7 { pt3dadd( 108.453, 71.5128, 1.40149, 0.68 ) }
    dend_7 { pt3dadd( 109.603, 71.9643, 1.54317, 0.23 ) }
    dend_7 { pt3dadd( 110.678, 72.4098, 1.57726, 0.23 ) }
    dend_7 { pt3dadd( 112.016, 72.9373, 1.55326, 0.23 ) }
    dend_7 { pt3dadd( 112.984, 73.2982, 1.50547, 0.68 ) }
    dend_7 { pt3dadd( 115.524, 74.1425, 1.36874, 0.23 ) }
    dend_7 { pt3dadd( 117.404, 74.7331, 1.24736, 1.14 ) }
    dend_7 { pt3dadd( 120.081, 75.4985, 1.05874, 0.23 ) }
    dend_7 { pt3dadd( 122.432, 76.0916, 0.894552, 0.23 ) }
    dend_7 { pt3dadd( 124.097, 76.4814, 0.780548, 0.91 ) }
    dend_7 { pt3dadd( 126.946, 77.0591, 0.656611, 0.23 ) }
    dend_7 { pt3dadd( 135.92, 82.856, 0.0572275, 0.23 ) }
    dend_7 { pt3dadd( 145.366, 87.6407, -1.15643, 0.23 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -60.5406, -91.284, -149.722, 0.23 ) }
    dend_76 { pt3dadd( -65.107, -103.338, -155.789, 0.23 ) }
    dend_76 { pt3dadd( -72.0069, -114.069, -161.872, 0.23 ) }
    dend_76 { pt3dadd( -79.6174, -125.319, -165.73, 0.23 ) }
    dend_76 { pt3dadd( -86.4012, -137.429, -168.548, 0.23 ) }
    dend_76 { pt3dadd( -91.2212, -150.794, -169.159, 0.23 ) }
    dend_76 { pt3dadd( -96.057, -164.044, -167.83, 0.23 ) }
    dend_76 { pt3dadd( -99.1746, -177.784, -166.039, 0.23 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 46/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -60.5406, -91.284, -149.722, 0.23 ) }
    dend_75 { pt3dadd( -62.1309, -96.949, -159.394, 0.23 ) }
    dend_75 { pt3dadd( -64.9573, -103.336, -168.327, 0.23 ) }
    dend_75 { pt3dadd( -66.1972, -109.097, -178.005, 0.23 ) }
    dend_75 { pt3dadd( -68.2558, -115.543, -187.124, 0.23 ) }
    dend_75 { pt3dadd( -69.7156, -120.155, -197.302, 0.23 ) }
    dend_75 { pt3dadd( -70.6649, -123.658, -207.921, 0.23 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 53/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -117.015, -103.149, -141.522, 0.23 ) }
    dend_73 { pt3dadd( -121.674, -108.64, -146.788, 0.23 ) }
    dend_73 { pt3dadd( -126.606, -114.475, -151.416, 0.23 ) }
    dend_73 { pt3dadd( -131.832, -120.363, -155.629, 0.23 ) }
    dend_73 { pt3dadd( -136.892, -126.331, -159.946, 0.23 ) }
    dend_73 { pt3dadd( -141.819, -131.577, -165.189, 0.23 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 59/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -117.015, -103.149, -141.522, 0.23 ) }
    dend_72 { pt3dadd( -123.573, -110.324, -148.173, 0.23 ) }
    dend_72 { pt3dadd( -128.473, -119.192, -154.376, 0.23 ) }
    dend_72 { pt3dadd( -131.755, -128.84, -160.566, 0.23 ) }
    dend_72 { pt3dadd( -136.198, -137.865, -166.9, 0.23 ) }
    dend_72 { pt3dadd( -142.042, -145.868, -173.356, 0.23 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 65/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 95.773, 47.995, -133.733, 0.23 ) }
    dend_69 { pt3dadd( 103.214, 50.3239, -140.196, 0.23 ) }
    dend_69 { pt3dadd( 109.034, 51.5635, -148.343, 0.23 ) }
    dend_69 { pt3dadd( 114.032, 52.1502, -157.074, 0.23 ) }
    dend_69 { pt3dadd( 119.251, 54.5551, -165.391, 0.23 ) }
    dend_69 { pt3dadd( 124.975, 57.7022, -173.14, 0.23 ) }
    dend_69 { pt3dadd( 131.683, 60.7351, -180.117, 0.23 ) }
    dend_69 { pt3dadd( 139.194, 63.514, -186.342, 0.23 ) }
    dend_69 { pt3dadd( 146.627, 66.1798, -192.699, 0.23 ) }
    dend_69 { pt3dadd( 155.554, 67.4169, -197.286, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 75/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 95.773, 47.995, -133.733, 0.23 ) }
    dend_68 { pt3dadd( 98.643, 48.7753, -136.264, 0.23 ) }
    dend_68 { pt3dadd( 101.019, 49.7849, -139.193, 0.23 ) }
    dend_68 { pt3dadd( 103.561, 50.6542, -142.023, 0.23 ) }
    dend_68 { pt3dadd( 106.535, 51.8755, -144.273, 0.23 ) }
    dend_68 { pt3dadd( 109.507, 53.1177, -146.516, 0.23 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 81/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 94.0578, -7.5276, -143.619, 0.23 ) }
    dend_66 { pt3dadd( 102.52, -10.2228, -151.893, 0.23 ) }
    dend_66 { pt3dadd( 111.172, -13.9727, -159.586, 0.23 ) }
    dend_66 { pt3dadd( 119.963, -16.3638, -167.596, 0.23 ) }
    dend_66 { pt3dadd( 126.971, -20.554, -176.645, 0.23 ) }
    dend_66 { pt3dadd( 134.035, -23.6132, -186.047, 0.23 ) }
    dend_66 { pt3dadd( 139.7, -27.1086, -196.232, 0.23 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 88/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 94.0578, -7.5276, -143.619, 0.23 ) }
    dend_65 { pt3dadd( 103.05, -12.1105, -154.486, 0.23 ) }
    dend_65 { pt3dadd( 110.422, -14.7346, -167.062, 0.23 ) }
    dend_65 { pt3dadd( 119.292, -16.949, -178.691, 0.23 ) }
    dend_65 { pt3dadd( 127.491, -18.3089, -190.922, 0.23 ) }
    dend_65 { pt3dadd( 134.915, -17.6471, -203.68, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 94/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 156.004, 139.507, -41.1803, 0.23 ) }
    dend_51 { pt3dadd( 167.332, 146.24, -43.4696, 0.23 ) }
    dend_51 { pt3dadd( 178.039, 154.262, -44.4927, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 97/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 156.004, 139.507, -41.1803, 0.23 ) }
    dend_50 { pt3dadd( 164.765, 144.803, -43.3335, 0.23 ) }
    dend_50 { pt3dadd( 173.219, 150.582, -45.5978, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 180.343, 158.251, -47.0431, 0.23 ) }
    dend_50 { pt3dadd( 186.397, 166.83, -48.6909, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 2/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 9.52567, -137.496, 81.6113, 0.23 ) }
    dend_37 { pt3dadd( 10.866, -140.856, 82.0844, 0.23 ) }
    dend_37 { pt3dadd( 11.5342, -142.531, 82.3202, 0.91 ) }
    dend_37 { pt3dadd( 13.3274, -147.025, 82.9532, 0.23 ) }
    dend_37 { pt3dadd( 14.0217, -148.765, 83.1982, 0.68 ) }
    dend_37 { pt3dadd( 15.3881, -152.19, 83.6805, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 8/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 9.52567, -137.496, 81.6113, 0.23 ) }
    dend_36 { pt3dadd( 9.82996, -140.702, 83.725, 0.23 ) }
    dend_36 { pt3dadd( 10.2067, -144.67, 86.3423, 0.68 ) }
    dend_36 { pt3dadd( 10.4456, -147.187, 88.0021, 0.23 ) }
    dend_36 { pt3dadd( 10.6129, -148.949, 89.1637, 0.91 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.7932, -129.227, 100.004, 0.23 ) }
    dend_34 { pt3dadd( -8.26167, -131.007, 101.165, 0.23 ) }
    dend_34 { pt3dadd( -7.89859, -131.901, 101.672, 0.68 ) }
    dend_34 { pt3dadd( -6.47604, -135.456, 103.136, 0.23 ) }
    dend_34 { pt3dadd( -6.25401, -136.011, 103.364, 0.23 ) }
    dend_34 { pt3dadd( -5.54214, -137.79, 104.097, 0.23 ) }
    dend_34 { pt3dadd( -4.5743, -140.209, 105.093, 0.91 ) }
    dend_34 { pt3dadd( -3.85081, -141.823, 105.754, 0.23 ) }
    dend_34 { pt3dadd( -2.74297, -144.04, 106.446, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.7932, -129.227, 100.004, 0.23 ) }
    dend_33 { pt3dadd( -9.24941, -130.288, 103.693, 0.23 ) }
    dend_33 { pt3dadd( -9.71827, -131.144, 106.914, 0.91 ) }
    dend_33 { pt3dadd( -10.3267, -132.358, 111.728, 0.23 ) }
    dend_33 { pt3dadd( -10.4555, -132.622, 112.894, 0.68 ) }
    dend_33 { pt3dadd( -10.8795, -133.473, 116.654, 0.23 ) }
    dend_33 { pt3dadd( -10.9383, -133.749, 117.877, 1.14 ) }
    dend_33 { pt3dadd( -10.9094, -134.044, 119.243, 1.14 ) }
    dend_33 { pt3dadd( -10.7691, -135.282, 124.117, 0.23 ) }
    dend_33 { pt3dadd( -10.6578, -136.224, 127.529, 1.14 ) }
    dend_33 { pt3dadd( -10.5997, -136.556, 128.635, 1.14 ) }
    dend_33 { pt3dadd( -10.1435, -138.65, 135.124, 0.23 ) }
    dend_33 { pt3dadd( -9.90647, -139.385, 137.261, 0.23 ) }
    dend_33 { pt3dadd( -9.24005, -140.944, 141.501, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 135.054, 70.5431, 33.058, 0.23 ) }
    dend_12 { pt3dadd( 135.465, 71.7954, 33.1627, 0.23 ) }
    dend_12 { pt3dadd( 135.703, 72.4197, 33.2197, 0.91 ) }
    dend_12 { pt3dadd( 137.208, 75.6875, 33.5977, 0.23 ) }
    dend_12 { pt3dadd( 138.24, 77.5361, 33.9335, 0.68 ) }
    dend_12 { pt3dadd( 139.21, 78.9556, 34.2897, 0.23 ) }
    dend_12 { pt3dadd( 140.229, 80.2653, 34.6759, 0.91 ) }
    dend_12 { pt3dadd( 141.014, 81.0934, 34.986, 0.23 ) }
    dend_12 { pt3dadd( 142.217, 82.1536, 35.4664, 0.68 ) }
    dend_12 { pt3dadd( 144.008, 83.4283, 36.1814, 0.23 ) }
    dend_12 { pt3dadd( 145.862, 84.5972, 36.9628, 0.23 ) }
    dend_12 { pt3dadd( 146.879, 85.1708, 37.3822, 0.23 ) }
    dend_12 { pt3dadd( 147.846, 85.7059, 37.7962, 0.91 ) }
    dend_12 { pt3dadd( 148.527, 86.0632, 38.0986, 0.91 ) }
    dend_12 { pt3dadd( 154.141, 90.2603, 40.292, 0.91 ) }
    dend_12 { pt3dadd( 159.591, 94.4719, 42.8274, 0.91 ) }
    dend_12 { pt3dadd( 163.98, 99.7719, 45.4872, 0.91 ) }
    dend_12 { pt3dadd( 168.993, 104.993, 47.0323, 0.91 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 135.054, 70.5431, 33.058, 0.23 ) }
    dend_11 { pt3dadd( 136.373, 70.8555, 33.9665, 0.23 ) }
    dend_11 { pt3dadd( 139.139, 71.4522, 35.8664, 0.45 ) }
    dend_11 { pt3dadd( 142.043, 72.0287, 37.8633, 0.23 ) }
    dend_11 { pt3dadd( 144.939, 72.6632, 39.9433, 0.68 ) }
    dend_11 { pt3dadd( 147.957, 73.389, 42.1107, 0.23 ) }
    dend_11 { pt3dadd( 151.296, 74.217, 44.5039, 0.68 ) }
    dend_11 { pt3dadd( 152.684, 74.5873, 45.4825, 0.23 ) }
    dend_11 { pt3dadd( 154.126, 74.9763, 46.4921, 0.68 ) }
    dend_11 { pt3dadd( 157.036, 75.7373, 48.5012, 0.23 ) }
    dend_11 { pt3dadd( 160.821, 76.8424, 51.1547, 1.14 ) }
    dend_11 { pt3dadd( 162.672, 77.4232, 52.4492, 0.23 ) }
    dend_11 { pt3dadd( 163.529, 77.7365, 53.1028, 0.91 ) }
    dend_11 { pt3dadd( 165.428, 78.5207, 54.5785, 0.23 ) }
    dend_11 { pt3dadd( 166.593, 79.0253, 55.4725, 1.14 ) }
    dend_11 { pt3dadd( 169.045, 80.0725, 57.3322, 0.23 ) }
    dend_11 { pt3dadd( 171.843, 81.4239, 59.6856, 0.91 ) }
    dend_11 { pt3dadd( 174.678, 82.8408, 62.1602, 0.23 ) }
    dend_11 { pt3dadd( 177.43, 84.2159, 64.5482, 0.68 ) }
    dend_11 { pt3dadd( 180.817, 85.8857, 67.4182, 0.23 ) }
    dend_11 { pt3dadd( 182.276, 86.619, 68.6933, 0.68 ) }
    dend_11 { pt3dadd( 185.375, 88.1877, 71.5154, 0.23 ) }
    dend_11 { pt3dadd( 188.349, 89.6801, 74.2524, 0.68 ) }
    dend_11 { pt3dadd( 191.04, 91.0431, 76.7391, 0.23 ) }
    dend_11 { pt3dadd( 193.134, 92.1338, 78.7249, 0.23 ) }
    dend_11 { pt3dadd( 198.245, 94.7587, 83.5198, 0.23 ) }
    dend_11 { pt3dadd( 201.754, 96.4892, 86.6447, 0.23 ) }
    dend_11 { pt3dadd( 204.419, 97.7413, 88.8689, 0.68 ) }
    dend_11 { pt3dadd( 209.075, 100.045, 92.7423, 0.23 ) }
    dend_11 { pt3dadd( 212.198, 101.607, 95.2659, 0.23 ) }
    dend_11 { pt3dadd( 215.325, 103.246, 97.7405, 0.23 ) }
    dend_11 { pt3dadd( 218.654, 104.951, 100.183, 0.45 ) }
    dend_11 { pt3dadd( 220.138, 105.717, 101.242, 0.68 ) }
    dend_11 { pt3dadd( 225.122, 108.379, 104.829, 0.23 ) }
    dend_11 { pt3dadd( 227.62, 109.716, 106.615, 0.68 ) }
    dend_11 { pt3dadd( 231.971, 112.428, 109.905, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 145.366, 87.6407, -1.15643, 0.23 ) }
    dend_9 { pt3dadd( 154.64, 92.1974, -1.54555, 0.23 ) }
    dend_9 { pt3dadd( 164.216, 95.9736, -0.86465, 0.23 ) }
    dend_9 { pt3dadd( 173.972, 99.2203, -1.37056, 0.23 ) }
    dend_9 { pt3dadd( 184.021, 101.343, -1.3176, 0.23 ) }
    dend_9 { pt3dadd( 194.215, 101.704, -0.294487, 0.23 ) }
    dend_9 { pt3dadd( 204.306, 100.086, 0.634653, 0.23 ) }
    dend_9 { pt3dadd( 214.345, 99.4634, 2.61217, 0.23 ) }
    dend_9 { pt3dadd( 224.166, 99.4095, 5.55171, 0.23 ) }
    dend_9 { pt3dadd( 234.296, 99.6355, 7.10623, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 244.146, 99.601, 9.94679, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 145.366, 87.6407, -1.15643, 0.23 ) }
    dend_8 { pt3dadd( 157.688, 93.5533, -0.391676, 0.23 ) }
    dend_8 { pt3dadd( 170.098, 99.0377, 1.24842, 0.23 ) }
    dend_8 { pt3dadd( 181.984, 105.919, 1.30931, 0.23 ) }
    dend_8 { pt3dadd( 194.351, 111.69, 0.132928, 0.23 ) }
    dend_8 { pt3dadd( 207.061, 116.55, 1.21353, 0.23 ) }
    dend_8 { pt3dadd( 219.286, 122.369, 3.14189, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_57 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_70 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_63 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_58 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_55 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_71 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_67 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_49 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_7 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_76 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_75 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_73 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_72 OneSecGrp_SectionRef_66.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_69 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_66 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_65 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_50 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_8 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_15 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_4 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_53 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_35 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_32 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_37 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_60 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_48 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_68 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_51 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 9
    dend_39 nseg = 13
    dend_16 nseg = 13
    dend_1 nseg = 17
    dend_57 nseg = 3
    dend_43 nseg = 3
    dend_29 nseg = 19
    dend_20 nseg = 9
    dend_18 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 7
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_70 nseg = 3
    dend_63 nseg = 3
    dend_59 nseg = 5
    dend_58 nseg = 7
    dend_55 nseg = 5
    dend_54 nseg = 5
    dend_52 nseg = 7
    dend_47 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 5
    dend_38 nseg = 5
    dend_31 nseg = 5
    dend_25 nseg = 7
    dend_24 nseg = 13
    dend_13 nseg = 5
    dend_74 nseg = 7
    dend_71 nseg = 7
    dend_67 nseg = 7
    dend_64 nseg = 7
    dend_49 nseg = 3
    dend_10 nseg = 5
    dend_7 nseg = 5
    dend_76 nseg = 5
    dend_75 nseg = 3
    dend_73 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 5
    dend_66 nseg = 3
    dend_65 nseg = 3
    dend_50 nseg = 3
    dend_33 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 7
    dend_9 nseg = 5
    dend_8 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_NBC_9c726011d7_0_0


