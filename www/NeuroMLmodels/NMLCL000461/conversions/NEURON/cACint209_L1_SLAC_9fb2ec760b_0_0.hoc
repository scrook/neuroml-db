// Cell: cACint209_L1_SLAC_9fb2ec760b_0_0
/*
{
  "id" : "cACint209_L1_SLAC_9fb2ec760b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.29606, 0.50401, 0.0, 3.86383", "-7.40488, 0.318884, 0.0, 7.08485", "-6.51371, 0.133758, 0.0, 9.19243", "-5.62253, -0.0513684, 0.0, 10.6164", "-4.73135, -0.236494, 0.0, 12.0715", "-3.84018, -0.42162, 0.0, 13.3757", "-2.949, -0.606746, 0.0, 13.7086", "-2.05782, -0.791872, 0.0, 13.8732", "-1.16665, -0.976998, 0.0, 13.9573", "-0.275473, -1.16212, 0.0, 14.0078", "0.615704, -1.34725, 0.0, 13.4912", "1.50688, -1.53238, 0.0, 12.6275", "2.39806, -1.7175, 0.0, 11.7159", "3.28923, -1.90263, 0.0, 10.5589", "4.18041, -2.08775, 0.0, 9.29434", "5.07158, -2.27288, 0.0, 8.21169", "5.96276, -2.45801, 0.0, 6.80861", "6.85394, -2.64313, 0.0, 5.40518", "7.74511, -2.82826, 0.0, 3.94532", "8.63629, -3.01338, 0.0, 2.52721", "9.52747, -3.19851, 0.0, 1.51152" ]
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.44316, -2.42247, 2.73, 3.93", "10.5675, -2.85834, 3.32548, 3.93", "14.3242, -3.25535, 3.86788, 3.93" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "10.0032, -3.31497, -9.46, 1.23", "12.9359, -3.63271, -10.7461, 1.23", "14.3528, -3.72806, -11.4943, 1.23", "17.4664, -3.84686, -13.1248, 1.23", "19.4946, -3.90409, -14.1565, 0.98", "21.9789, -3.96209, -15.4062, 0.98", "26.2148, -4.00221, -17.43, 0.61", "29.2826, -3.95493, -18.9906, 0.61", "31.2717, -3.91794, -19.9736, 0.61", "34.0388, -3.84985, -21.2576, 0.61", "34.151, -3.84983, -21.3046, 0.61", "36.7092, -3.88895, -22.1767, 0.61", "38.0279, -3.86675, -22.4617, 0.61", "40.9533, -3.97691, -23.0863, 0.61", "40.9825, -3.97889, -23.0932, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.18684, -2.36997, -5.13, 2.21", "-9.29914, -3.42669, -7.97165, 1.97", "-11.4838, -4.23847, -10.9623, 1.72", "-13.5413, -4.79325, -13.774, 1.72", "-16.3974, -5.36835, -17.5877, 1.84", "-18.0247, -5.65428, -19.6548, 1.35", "-19.2904, -5.89321, -21.2044, 1.35", "-20.2536, -6.02493, -22.4136, 1.35", "-21.2393, -6.0624, -23.5357, 1.35", "-22.4946, -6.02916, -24.7521, 1.35", "-24.2873, -6.01387, -26.367, 1.35", "-26.4448, -6.18141, -28.3924, 1.35", "-28.1169, -6.42347, -30.0238, 1.35", "-30.2705, -6.83823, -32.2718, 1.35", "-31.987, -7.20235, -34.1805, 1.35", "-33.5456, -7.5443, -36.0403, 1.23", "-35.1969, -7.93412, -38.1012, 1.23", "-36.2349, -8.23396, -39.4174, 1.23", "-38.4082, -9.08713, -42.083, 1.23", "-38.4082, -9.08713, -42.083, 1.23", "-40.4289, -10.0132, -43.7266, 1.23", "-42.0794, -10.6997, -44.7632, 0.98", "-43.9632, -11.415, -45.6935, 0.61", "-45.8947, -12.1601, -46.434, 0.61", "-48.6948, -13.2744, -47.1488, 0.61", "-50.8019, -14.1272, -47.5412, 0.61", "-51.7869, -14.5235, -47.6556, 0.61", "-51.8935, -14.5644, -47.6672, 0.61", "-53.2291, -15.0762, -47.8104, 0.61", "-55.4213, -15.9056, -48.1493, 0.61", "-56.941, -16.4968, -48.4287, 0.61", "-59.7001, -17.5417, -49.4515, 0.61", "-62.2991, -18.5272, -50.6878, 0.61", "-64.3082, -19.2705, -51.7067, 0.61", "-66.0026, -19.8674, -52.6573, 0.61", "-67.9993, -20.5572, -53.9363, 0.61", "-74.0036, -22.7021, -58.3437, 0.61", "-76.2671, -23.5543, -60.3347, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.23684, 5.00103, 2.57, 2.09", "-7.89448, 6.7388, 2.83332, 2.09", "-9.33804, 8.17502, 3.04333, 2.09", "-11.2126, 10.0401, 3.31606, 1.84", "-12.5249, 11.3458, 3.50698, 1.84", "-13.8768, 12.6908, 3.70366, 1.84", "-15.2272, 14.0344, 3.90012, 1.84", "-16.1126, 14.7955, 4.02968, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.52747, -3.19851, 0.0, 0.61", "24.2139, -6.24936, 0.0, 0.61", "38.9004, -9.30021, 0.0, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "14.3242, -3.25535, 3.86788, 1.6", "17.8474, -4.06961, 4.06513, 1.6", "22.7791, -5.20938, 4.34124, 1.35", "25.7877, -5.90469, 4.50968, 1.35", "28.1962, -6.46133, 4.64452, 1.23", "31.2471, -7.16642, 4.81533, 1.23", "34.3763, -7.88963, 4.99052, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "14.3242, -3.25535, 3.86788, 1.6", "14.1022, -0.972761, 7.50881, 1.6", "13.5998, 1.94752, 12.269, 1.6", "13.0918, 3.70676, 15.9463, 0.86", "12.6635, 5.18997, 19.0467, 0.86", "12.4319, 5.99228, 20.7237, 0.86", "12.2676, 6.56135, 21.9132, 0.86", "11.6859, 7.72165, 24.8161, 0.86", "9.82721, 10.0278, 31.5881, 0.86" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.3242, -3.25535, 3.86788, 1.72", "14.1032, -8.87793, 5.37718, 1.72", "13.9259, -11.9232, 6.12854, 1.6", "13.8885, -12.4294, 6.2557, 1.6", "13.6985, -15.3557, 7.02784, 1.48", "13.5976, -18.0952, 7.79128, 1.35", "13.5453, -21.3844, 8.71418, 1.35", "13.4828, -24.0396, 9.50937, 1.23", "13.4437, -26.2804, 10.1694, 1.23", "13.4123, -28.7921, 10.8926, 1.23", "13.39, -31.5377, 11.7252, 0.98", "13.3898, -33.3595, 12.3025, 0.98", "13.388, -35.4838, 12.9533, 0.98", "13.3833, -36.8995, 13.3613, 0.98", "13.3881, -38.0492, 13.6295, 0.98", "13.4083, -39.7706, 13.9733, 0.98", "13.4744, -41.886, 14.3963, 0.98", "13.5582, -43.2422, 14.6752, 0.98", "13.7344, -44.9529, 15.0183, 0.98", "13.997, -47.0133, 15.4847, 0.98", "14.4025, -49.7004, 16.1037, 0.98", "14.7148, -51.5665, 16.5283, 0.98", "14.9081, -52.8153, 16.861, 0.98", "14.923, -52.9381, 16.8983, 0.98", "15.0771, -55.0529, 17.6481, 0.98" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "14.3242, -3.25535, 3.86788, 2.7", "19.4943, -3.33792, 2.57384, 2.7", "25.8743, -3.43981, 0.97702, 2.21", "31.8076, -3.53456, -0.508026, 1.72", "35.9299, -3.60039, -1.53977, 1.6", "39.4325, -3.65633, -2.41645, 1.6", "42.6633, -3.70793, -3.22508, 1.6" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "40.9825, -3.97889, -23.0932, 0.49", "42.9021, -5.30938, -24.6242, 0.49", "46.1122, -7.49737, -27.2647, 0.49", "47.6499, -8.56784, -28.4785, 0.49", "50.7931, -10.756, -30.9595, 0.49", "52.872, -12.2032, -32.6004, 0.49", "54.9322, -13.6373, -34.2266, 0.49", "57.6909, -15.415, -36.3648, 0.49", "59.505, -16.634, -37.6264, 0.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "40.9825, -3.97889, -23.0932, 0.61", "42.3768, -2.53104, -23.4694, 0.61", "43.8385, -0.808351, -23.9103, 0.61", "45.0513, 0.707069, -24.2912, 0.61", "46.2576, 2.22603, -24.7137, 0.61", "47.1239, 3.26961, -25.0012, 0.61", "48.8383, 5.09278, -25.4821, 0.61", "49.5599, 5.77325, -25.6638, 0.61", "49.6164, 5.81452, -25.6769, 0.61", "51.4177, 6.6787, -26.0116, 0.61", "54.4001, 7.50667, -26.5654, 0.61", "57.6647, 7.99188, -27.1279, 0.61", "59.5893, 8.08195, -27.4952, 0.61", "62.0285, 8.06649, -28.0013, 0.61", "64.8586, 7.92407, -28.7087, 0.61", "67.08, 7.66326, -29.3342, 0.49", "69.0865, 7.32546, -29.9847, 0.49", "71.9448, 6.8052, -31.0187, 0.49", "73.5999, 6.53274, -31.6622, 0.49", "75.8206, 6.20412, -32.536, 0.49", "77.4101, 5.96413, -33.2427, 0.49", "78.6285, 5.74981, -33.8688, 0.49", "78.7255, 5.7301, -33.9211, 0.49", "80.5644, 5.33747, -34.9077, 0.49", "81.7403, 5.06672, -35.5744, 0.49", "84.1959, 4.50454, -36.9572, 0.49", "89.1943, 3.37077, -40.1362, 0.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.1126, 14.7955, 4.02968, 1.23", "-21.3581, 17.7578, -0.827408, 1.23", "-22.1435, 18.2833, -1.41097, 1.23", "-23.192, 19.0287, -2.10225, 0.98", "-24.4858, 20.0419, -2.84586, 0.98", "-25.532, 20.9117, -3.37698, 0.98", "-26.9469, 22.1245, -4.03793, 0.98", "-28.335, 23.6273, -4.23834, 0.98", "-28.4185, 23.7223, -4.25025, 0.98", "-29.6478, 25.1214, -4.40762, 0.98", "-30.3338, 25.8694, -4.47838, 0.98", "-30.4184, 25.964, -4.48352, 0.98", "-31.8587, 27.5921, -4.48352, 0.98", "-31.9396, 27.6874, -4.48352, 0.98", "-33.0661, 28.9679, -4.48352, 0.98", "-33.1451, 29.0505, -4.47578, 0.98", "-34.2905, 30.2989, -4.30087, 0.98", "-34.3669, 30.3858, -4.28335, 0.98", "-36.0105, 32.3607, -3.8328, 0.98", "-36.1622, 32.5439, -3.78877, 0.98", "-38.4397, 35.3006, -3.07223, 0.98", "-40.115, 37.3536, -2.51369, 0.98", "-41.6328, 39.2442, -1.95826, 0.98", "-42.9062, 40.8905, -1.45905, 0.98" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-16.1126, 14.7955, 4.02968, 1.35", "-17.1491, 15.8787, 4.91059, 1.35", "-18.0249, 17.1506, 6.20841, 1.35", "-18.8266, 18.5724, 7.92879, 1.35", "-19.4302, 19.6828, 9.36348, 1.35", "-20.0467, 20.8025, 10.8512, 1.35", "-22.0902, 24.347, 15.692, 1.35", "-22.9695, 25.9405, 17.9638, 1.35", "-23.9394, 27.6559, 20.5624, 1.35", "-24.4564, 28.5098, 21.97, 1.35", "-24.9406, 29.2833, 23.3169, 1.35", "-25.8589, 30.5878, 25.6457, 1.35", "-26.8659, 31.6612, 27.386, 1.35", "-28.0915, 32.7383, 29.1841, 1.35", "-29.4952, 33.8926, 30.9998, 1.35" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "38.9004, -9.30021, 0.0, 0.61", "53.5869, -12.3511, 0.0, 0.61", "68.2733, -15.4019, 0.0, 0.61" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "9.82721, 10.0278, 31.5881, 0.61", "8.32308, 9.83566, 32.7952, 0.61", "7.09615, 9.67892, 33.7798, 0.49", "5.77748, 9.51047, 34.838, 0.49", "4.87598, 9.3953, 35.5615, 0.49", "2.67042, 9.11355, 37.3314, 0.49", "-1.52183, 8.578, 40.6957, 0.49" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "9.82721, 10.0278, 31.5881, 0.86", "8.30092, 9.72046, 32.6196, 0.86", "6.35891, 9.29972, 33.9898, 0.61", "5.21608, 9.07755, 34.8913, 0.61", "3.92767, 8.90472, 35.9431, 0.61", "2.33625, 8.80824, 37.1955, 0.61", "2.2813, 8.80491, 37.2388, 0.61", "1.22919, 8.75838, 38.1162, 0.61", "-0.759844, 8.77077, 39.7135, 0.61", "-2.26745, 8.81634, 41.0334, 0.61", "-3.45834, 8.95696, 42.0774, 0.61" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "15.0771, -55.0529, 17.6481, 0.74", "15.2948, -57.1527, 15.8317, 0.74", "15.5477, -58.9075, 14.1241, 0.74", "15.7024, -59.9113, 13.1594, 0.74", "16.0588, -61.6616, 11.4238, 0.74", "16.5027, -63.4769, 9.69596, 0.98", "16.8624, -64.9474, 8.29623, 0.98", "17.46, -67.0846, 6.07482, 0.98", "17.981, -68.6764, 4.43999, 0.98", "18.8306, -70.9987, 2.00507, 1.23", "19.3538, -72.4111, 0.615805, 1.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "15.0771, -55.0529, 17.6481, 0.86", "14.1516, -57.7796, 18.7111, 0.86", "13.6931, -59.4438, 19.4505, 0.86", "13.3342, -61.3447, 20.3281, 0.86", "12.9605, -63.5189, 21.3179, 0.86", "12.5967, -65.4257, 22.2678, 0.86", "12.3266, -66.7825, 22.9761, 0.86", "11.7818, -69.4386, 24.4816, 0.74", "11.1389, -71.8933, 26.1539, 0.74", "10.7587, -72.8548, 26.9339, 0.74", "9.8321, -74.5557, 28.4841, 0.86", "9.77315, -74.6317, 28.5653, 0.86", "8.37829, -75.7569, 30.1199, 0.86", "6.9269, -76.2372, 31.3037, 0.86", "5.86865, -76.2962, 32.0285, 0.86" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "42.6633, -3.70793, -3.22508, 1.23", "44.5462, -1.54622, -5.07376, 1.23", "45.4267, -0.318808, -5.89203, 1.23", "46.3862, 1.06011, -6.72894, 1.11", "47.9411, 3.25159, -8.14573, 1.11", "47.9411, 3.25159, -8.14573, 1.11", "48.8181, 4.38441, -8.91039, 1.11", "49.9538, 5.96293, -9.93335, 1.11", "50.9332, 7.33192, -10.8259, 1.11", "52.4011, 9.19132, -12.042, 1.11", "54.0666, 11.0037, -13.2568, 0.98", "55.3856, 12.3562, -14.2328, 0.98", "55.6959, 12.6367, -14.4689, 0.98" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "42.6633, -3.70793, -3.22508, 1.11", "45.2403, -4.97978, -3.39999, 1.11", "47.5328, -6.11124, -3.55559, 1.11", "49.6724, -7.16723, -3.70081, 1.11", "51.6148, -8.12592, -3.83266, 1.11", "54.43, -9.51532, -4.02373, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-42.9062, 40.8905, -1.45905, 1.35", "-42.6311, 43.5202, -3.81927, 1.35", "-42.5224, 44.8491, -5.16347, 0.98", "-42.5241, 46.2693, -6.70606, 0.86", "-42.5448, 47.635, -8.20845, 0.86", "-42.6211, 50.9647, -12.0218, 0.86", "-42.6694, 53.0049, -14.4313, 0.86", "-42.7007, 55.4789, -17.432, 0.74", "-42.677, 57.3476, -19.8298, 0.61", "-42.5845, 58.9348, -21.9415, 0.61", "-42.381, 60.1565, -23.786, 0.61", "-41.9951, 61.4797, -25.8136, 0.61", "-41.6407, 62.4536, -27.458, 0.61", "-41.0315, 63.5588, -29.7108, 0.61", "-40.5462, 64.283, -31.3648, 0.61", "-39.3004, 66.1765, -36.0601, 0.61", "-39.0044, 66.6802, -37.3313, 0.61", "-38.0352, 68.5932, -42.3888, 0.61", "-37.3521, 70.3715, -47.1824, 0.61", "-37.1547, 71.2424, -49.5677, 0.61", "-37.0864, 71.9065, -51.3673, 0.61", "-37.1277, 73.3654, -55.0754, 0.61", "-37.2675, 74.536, -57.9875, 0.61", "-37.3497, 74.9707, -58.9108, 0.61", "-37.8897, 77.3064, -62.898, 0.61", "-37.8956, 77.3411, -62.9478, 0.61", "-37.9491, 78.0944, -63.8244, 0.61", "-38.0222, 79.4198, -65.0487, 0.61", "-38.352, 84.1172, -68.8249, 0.61", "-38.494, 85.6167, -70.0229, 0.61", "-38.6672, 87.9158, -71.6727, 0.61", "-38.8734, 90.4727, -73.5466, 0.61", "-39.0457, 92.3592, -74.982, 0.61", "-39.2699, 93.7525, -76.0687, 0.61", "-40.0319, 95.8771, -77.4653, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-42.9062, 40.8905, -1.45905, 0.86", "-45.0054, 42.9509, 0.262758, 0.86", "-47.0484, 44.8626, 1.92109, 0.86", "-47.9023, 45.6243, 2.59601, 0.86", "-50.0458, 47.5321, 4.27278, 0.86", "-51.0109, 48.401, 4.99549, 0.86", "-52.7554, 49.986, 6.28019, 0.61", "-54.3526, 51.4168, 7.36722, 0.61", "-55.9724, 52.8256, 8.44716, 0.61", "-57.4436, 54.0949, 9.47032, 0.61", "-58.6858, 55.1854, 10.364, 0.61", "-59.8771, 56.2679, 11.2159, 0.61", "-61.063, 57.2993, 11.9243, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-29.4952, 33.8926, 30.9998, 0.61", "-28.7949, 33.8594, 33.3967, 0.61", "-28.1971, 34.103, 35.6067, 0.61", "-27.8234, 34.3624, 36.9258, 0.61", "-27.4111, 34.7026, 38.6326, 0.61", "-26.9854, 35.1415, 41.0171, 0.61", "-26.6189, 35.6292, 44.3302, 0.61", "-26.3168, 36.0281, 46.5214, 0.61", "-26.143, 36.4186, 48.1327, 0.61", "-26.03, 36.8541, 49.8245, 0.61", "-26.0744, 37.3419, 52.0484, 0.61", "-26.4461, 37.808, 55.2239, 0.61" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-29.4952, 33.8926, 30.9998, 1.35", "-30.1487, 35.4327, 31.4488, 1.35", "-31.1014, 37.6779, 32.1032, 1.23", "-31.9612, 39.704, 32.6938, 0.86", "-32.539, 41.0656, 33.0908, 0.86" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "19.3538, -72.4111, 0.615805, 0.49", "22.6673, -72.8002, -0.10113, 0.49", "25.6657, -73.0961, -0.684233, 0.49", "28.6348, -73.4425, -1.32358, 0.49", "30.5589, -73.7429, -1.73177, 0.49", "35.4787, -74.6667, -2.81947, 0.49", "37.9295, -75.2492, -3.35604, 0.49", "39.2096, -75.6359, -3.63358, 0.49", "43.0403, -77.1733, -4.43746, 0.49", "46.4867, -78.817, -5.13147, 0.49", "48.0082, -79.7006, -5.43546, 0.49", "51.0215, -81.7644, -6.00026, 0.49", "53.9066, -83.8427, -6.48018, 0.49", "56.6359, -85.8392, -6.84936, 0.49", "58.4379, -87.1711, -7.01036, 0.49", "60.0041, -88.3376, -7.12381, 0.49", "61.8946, -89.7171, -7.20494, 0.49", "64.2466, -91.3434, -7.31402, 0.49", "65.2726, -92.0318, -7.35334, 0.49", "65.5681, -92.2375, -7.37327, 0.49", "67.1887, -93.432, -7.5834, 0.49", "67.3937, -93.5703, -7.626, 0.49", "68.9848, -94.5305, -8.08085, 0.49", "69.0884, -94.5802, -8.1238, 0.49", "71.0219, -95.4388, -8.96223, 0.49", "72.934, -96.2156, -9.81605, 0.49", "75.8387, -97.2477, -11.1633, 0.49", "78.3636, -98.0997, -12.3503, 0.49", "81.794, -99.1397, -13.9839, 0.49" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.3538, -72.4111, 0.615805, 1.11", "18.6213, -74.6669, -1.09729, 1.11", "17.945, -76.7613, -2.43569, 1.11", "17.1151, -79.2132, -3.76979, 0.98", "16.1701, -81.9964, -5.111, 0.98", "15.4495, -84.0909, -6.032, 0.86", "14.4337, -86.9766, -7.24261, 0.74", "13.4074, -89.6821, -8.25261, 0.74", "11.9857, -93.4613, -9.49663, 0.61", "11.3601, -95.1825, -10.0566, 0.61", "10.2673, -98.2139, -11.1727, 0.61", "9.51592, -100.295, -12.0487, 0.61", "8.83599, -102.183, -12.9154, 0.61", "7.76283, -105.169, -14.4123, 0.61", "6.59436, -108.612, -16.1955, 0.61", "5.29239, -112.609, -18.2475, 0.61", "4.5927, -114.835, -19.3995, 0.61", "3.87529, -117.202, -20.6081, 0.61", "3.31086, -119.108, -21.558, 0.61", "2.41984, -121.927, -22.9314, 0.61", "1.96707, -123.42, -23.4922, 0.61" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.86865, -76.2962, 32.0285, 0.86", "4.29676, -74.8031, 35.1954, 0.86", "3.36131, -73.9146, 37.08, 0.86", "2.38003, -72.9825, 39.057, 0.74", "1.52394, -72.1693, 40.7817, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "5.86865, -76.2962, 32.0285, 0.86", "5.2512, -78.6821, 32.7612, 0.86", "5.20885, -78.8, 32.7911, 0.86", "4.44688, -80.092, 33.1043, 0.74", "3.88105, -80.9108, 33.2978, 0.74", "3.24643, -81.6741, 33.4719, 0.74", "3.15954, -81.7644, 33.4909, 0.74", "2.15075, -82.6747, 33.5827, 0.74", "0.426613, -84.1738, 33.729, 0.74", "0.403264, -84.1935, 33.7307, 0.74", "-0.676464, -85.1708, 33.8055, 0.74", "-1.83176, -86.2848, 33.8729, 0.74", "-2.6653, -87.0635, 33.9104, 0.61", "-3.73452, -88.0715, 33.9439, 0.61", "-5.06522, -89.2648, 33.9584, 0.61", "-5.91656, -89.9289, 33.9678, 0.61", "-7.17039, -90.7492, 33.979, 0.61", "-9.44994, -91.7892, 33.9976, 0.61", "-9.56714, -91.8309, 33.9986, 0.61", "-10.5224, -92.0723, 34.0067, 0.61", "-11.9087, -92.294, 34.0181, 0.61", "-13.484, -92.4591, 34.0297, 0.61", "-16.2002, -92.7076, 34.0447, 0.61" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "55.6959, 12.6367, -14.4689, 0.49", "56.2741, 13.8738, -16.8541, 0.49", "57.0331, 14.955, -19.7225, 0.49", "57.6611, 15.6003, -22.1557, 0.49", "58.0789, 15.9457, -23.7501, 0.49", "58.5904, 16.3371, -25.7216, 0.49", "60.3685, 17.5213, -32.1717, 0.49", "61.1136, 17.8537, -34.8315, 0.49", "62.1205, 18.0375, -37.9602, 0.49", "63.7585, 18.0396, -42.7626, 0.49", "64.8285, 17.9431, -45.7149, 0.49", "66.1902, 17.712, -49.1508, 0.49", "67.4941, 17.4, -51.9952, 0.49", "69.8689, 16.7685, -56.6464, 0.49", "71.1983, 16.3482, -58.9062, 0.49", "72.1117, 15.9584, -60.305, 0.49", "72.4594, 15.7879, -60.7872, 0.49", "74.5206, 14.6853, -63.4097, 0.49", "74.849, 14.5278, -63.7569, 0.49", "75.4367, 14.2375, -64.3192, 0.49" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "55.6959, 12.6367, -14.4689, 0.98", "57.1778, 14.5315, -14.9871, 0.98", "58.4127, 16.1443, -15.4162, 0.86", "59.869, 18.1056, -15.9778, 0.86", "61.5324, 20.339, -16.7409, 0.61", "61.6034, 20.4343, -16.7797, 0.61", "63.7326, 23.1741, -18.0291, 0.61", "65.9202, 26.0061, -19.4107, 0.61", "67.1329, 27.519, -20.2204, 0.61", "69.5447, 30.312, -21.7386, 0.61", "71.2849, 32.1423, -22.7746, 0.61", "73.0367, 33.86, -23.7354, 0.61", "74.8193, 35.4555, -24.582, 0.61", "76.764, 37.0583, -25.3697, 0.61", "78.4788, 38.4958, -25.8913, 0.61", "79.8324, 39.701, -26.1649, 0.61", "81.682, 41.4609, -26.4606, 0.61", "83.5093, 43.3145, -26.728, 0.61", "85.6052, 45.6089, -27.0824, 0.61", "87.8375, 48.3547, -27.4936, 0.61", "89.7721, 50.9056, -27.9, 0.61", "90.5788, 52.0142, -28.0668, 0.61", "91.6157, 53.4703, -28.256, 0.61", "92.9421, 55.363, -28.4021, 0.61", "93.1022, 55.6017, -28.4042, 0.61", "94.1036, 57.007, -28.3072, 0.61", "95.4554, 58.9764, -27.9899, 0.61", "96.7834, 60.9783, -27.5528, 0.61", "98.2884, 63.2562, -26.9383, 0.61", "99.668, 65.267, -26.2678, 0.61", "101.08, 67.3348, -25.544, 0.61", "102.28, 69.159, -24.8855, 0.61", "103.184, 70.5382, -24.3746, 0.61", "104.493, 72.4364, -23.6499, 0.61", "105.459, 73.8077, -23.1851, 0.61", "106.221, 74.7718, -22.7726, 0.61" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "54.43, -9.51532, -4.02373, 0.61", "55.2911, -7.5328, -5.40241, 0.61", "55.8835, -6.16884, -6.35092, 0.61", "56.6321, -4.44543, -7.54939, 0.61", "57.4729, -2.50982, -8.89544, 0.61" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "54.43, -9.51532, -4.02373, 1.11", "55.86, -11.1931, -5.16857, 1.11", "57.1549, -12.3088, -6.05914, 1.11", "58.4018, -13.2093, -6.93427, 1.11", "59.584, -14.0002, -7.77386, 1.11", "61.537, -15.3041, -9.26308, 1.11", "63.0394, -16.3071, -10.4087, 1.11", "65.1371, -17.4927, -12.0406, 1.11", "67.0231, -18.3892, -13.4465, 1.11", "67.0776, -18.4108, -13.4852, 1.11", "69.1129, -19.1226, -14.9396, 1.11" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-61.063, 57.2993, 11.9243, 0.61", "-61.3891, 58.9479, 12.6683, 0.61", "-61.875, 61.4034, 13.7766, 0.61", "-62.1494, 62.7903, 14.4026, 0.49", "-62.4583, 64.3517, 15.1073, 0.49", "-62.7077, 65.6121, 15.6762, 0.49", "-63.1591, 67.8939, 16.7061, 0.49" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-61.063, 57.2993, 11.9243, 0.61", "-62.8182, 58.2583, 12.9576, 0.61", "-62.8747, 58.288, 12.9877, 0.61", "-65.4246, 59.593, 14.2826, 0.61", "-66.8115, 60.2053, 14.9684, 0.61", "-67.9497, 60.6156, 15.5277, 0.61", "-69.3786, 60.9234, 16.2359, 0.61", "-70.7032, 61.0664, 16.8855, 0.61", "-70.8153, 61.0647, 16.9379, 0.61", "-72.7324, 60.7389, 17.8044, 0.61", "-74.6909, 60.2322, 18.6603, 0.61", "-77.4625, 59.4295, 19.7662, 0.61", "-79.582, 58.8482, 20.556, 0.61", "-81.1111, 58.4974, 21.1139, 0.61", "-83.6247, 58.1013, 21.9775, 0.61", "-85.5839, 57.8481, 22.5963, 0.61", "-87.7259, 57.6731, 23.2022, 0.61", "-89.73, 57.7146, 23.6995, 0.61", "-90.9483, 57.7863, 23.9728, 0.61", "-92.3694, 58.0977, 24.2952, 0.61" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-32.539, 41.0656, 33.0908, 0.61", "-33.9829, 40.8236, 34.7156, 0.61", "-36.1466, 40.4805, 37.1201, 0.61", "-39.9328, 39.8885, 41.1508, 0.61", "-42.4097, 39.468, 43.6469, 0.61", "-44.3561, 39.1222, 45.5461, 0.61", "-45.0318, 39.0077, 46.2375, 0.61", "-46.8061, 38.6934, 48.0312, 0.61", "-47.6334, 38.5666, 48.9141, 0.61", "-48.6745, 38.4152, 49.8105, 0.61", "-48.7256, 38.4071, 49.8577, 0.61", "-51.745, 37.8369, 52.8764, 0.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-32.539, 41.0656, 33.0908, 0.74", "-32.3146, 43.0026, 33.1134, 0.74", "-32.2856, 44.7435, 33.1289, 0.74", "-32.2933, 45.7309, 33.1355, 0.74", "-32.2787, 46.7608, 33.1903, 0.74", "-32.2721, 47.0503, 33.2115, 0.74", "-32.25, 48.9471, 33.3654, 0.74", "-32.2656, 50.6109, 33.5161, 0.74", "-32.3124, 52.4134, 33.7074, 0.61", "-32.4213, 55.303, 34.0238, 0.61", "-32.4255, 55.3754, 34.035, 0.61", "-32.5751, 57.3554, 34.3837, 0.61", "-32.7759, 59.5076, 34.7866, 0.61", "-33.0814, 62.0034, 35.2731, 0.61", "-33.3571, 64.1968, 35.855, 0.61", "-33.6704, 68.0116, 37.0862, 0.61", "-33.8077, 69.8007, 37.6908, 0.61", "-33.9456, 71.8484, 38.4383, 0.61", "-34.2311, 76.6039, 40.3116, 0.61", "-34.4334, 81.9423, 42.5561, 0.61", "-34.4672, 86.5588, 44.6513, 0.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-16.2002, -92.7076, 34.0447, 0.37", "-18.2325, -96.002, 34.9578, 0.37", "-18.6805, -96.763, 35.1577, 0.37", "-19.219, -97.7456, 35.3991, 0.37", "-20.1598, -99.6659, 35.8978, 0.37", "-20.7312, -100.924, 36.2337, 0.37", "-21.0808, -101.743, 36.4457, 0.37", "-21.1199, -101.861, 36.4677, 0.37", "-21.3391, -102.513, 36.5959, 0.37", "-21.7962, -104.389, 36.9312, 0.37", "-21.8231, -104.504, 36.9484, 0.37", "-22.2395, -106.033, 37.124, 0.37", "-22.6175, -107.118, 37.223, 0.37", "-23.1512, -108.318, 37.3515, 0.37", "-24.381, -110.509, 37.6011, 0.37", "-25.5028, -112.364, 37.7761, 0.37", "-25.8503, -112.909, 37.8338, 0.37", "-26.947, -114.489, 38.0376, 0.37", "-28.6185, -116.658, 38.3752, 0.37", "-29.4436, -117.64, 38.5624, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-16.2002, -92.7076, 34.0447, 0.61", "-18.4645, -94.0259, 33.7636, 0.61", "-21.1267, -95.5581, 33.4582, 0.61", "-23.2713, -96.7035, 33.2434, 0.37", "-25.531, -97.9029, 33.0734, 0.37", "-27.7922, -99.1268, 32.9361, 0.37", "-30.5389, -100.692, 32.795, 0.37", "-33.3274, -102.424, 32.6784, 0.37", "-35.9763, -104.202, 32.6725, 0.37", "-38.5028, -106.099, 32.8285, 0.37", "-40.0213, -107.343, 33.0432, 0.37", "-41.6873, -108.755, 33.427, 0.37", "-43.6478, -110.42, 34.0444, 0.37", "-45.3092, -111.814, 34.6928, 0.37", "-46.58, -112.934, 35.2818, 0.37", "-47.6457, -113.8, 35.8348, 0.37", "-49.3553, -114.981, 36.7974, 0.37", "-51.8699, -116.234, 38.2383, 0.37", "-52.8286, -116.514, 38.7441, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "106.221, 74.7718, -22.7726, 0.49", "107.866, 78.467, -19.1655, 0.49", "108.34, 79.5549, -18.1576, 0.49", "109.217, 81.6214, -16.3065, 0.49", "109.558, 82.4704, -15.5986, 0.49", "110.377, 84.5541, -14.0269, 0.49", "111.102, 86.5492, -12.6658, 0.25", "111.704, 88.4598, -11.6771, 0.25", "112.162, 90.0344, -10.9539, 0.25", "112.552, 91.5493, -10.3722, 0.25", "113.031, 93.6076, -9.65155, 0.25", "113.641, 96.401, -8.86698, 0.25", "114.234, 99.2364, -8.22351, 0.25", "114.288, 99.5182, -8.16987, 0.25", "114.726, 101.905, -7.77071, 0.25" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "106.221, 74.7718, -22.7726, 0.49", "109.896, 74.7822, -22.4508, 0.49", "112.366, 74.7617, -22.3024, 0.49", "114.268, 74.765, -22.2234, 0.49", "114.768, 74.7699, -22.2077, 0.49", "117.725, 74.7995, -22.2217, 0.49", "120.186, 74.7991, -22.2921, 0.49", "120.307, 74.796, -22.3069, 0.49", "121.717, 74.7176, -22.5078, 0.49", "121.894, 74.701, -22.5352, 0.49", "124.187, 74.4892, -22.8686, 0.49", "126.017, 74.298, -23.0772, 0.49", "126.622, 74.2543, -23.1429, 0.49", "127.551, 74.1984, -23.2315, 0.49", "127.665, 74.197, -23.2396, 0.49", "130.578, 74.3279, -23.3646, 0.49", "131.064, 74.4, -23.3646, 0.49", "131.913, 74.6393, -23.4029, 0.49", "132.086, 74.7036, -23.4155, 0.49", "134.228, 75.5968, -23.6116, 0.49", "134.35, 75.65, -23.6247, 0.49", "135.69, 76.3177, -23.7819, 0.49", "138.151, 77.6704, -24.0487, 0.49", "138.73, 78.0102, -24.1055, 0.49", "140.33, 78.8744, -24.2331, 0.49", "140.444, 78.9245, -24.2398, 0.49", "143.123, 79.8739, -24.3426, 0.49", "145.22, 80.4679, -24.3834, 0.49", "146.748, 80.8072, -24.4152, 0.49", "149.765, 81.4134, -24.5213, 0.49", "152.901, 82.0589, -24.6664, 0.49", "155.075, 82.5117, -24.7838, 0.49", "156.483, 82.7821, -24.8729, 0.49", "158.414, 83.2211, -25.0105, 0.49", "160.337, 83.7894, -25.1637, 0.49", "161.61, 84.3927, -25.3074, 0.49", "163.338, 85.6432, -25.5597, 0.49", "163.457, 85.764, -25.5797, 0.49", "164.37, 87.0652, -25.7863, 0.49", "164.449, 87.2176, -25.8076, 0.49", "165.309, 89.3929, -26.1171, 0.49", "166.004, 91.4455, -26.3983, 0.49", "166.689, 93.6331, -26.6578, 0.49", "167.586, 96.6294, -27.0063, 0.49", "168.208, 98.8479, -27.2549, 0.49", "168.632, 100.414, -27.4124, 0.49", "169.106, 102.257, -27.5492, 0.49", "169.567, 103.992, -27.6779, 0.49" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "69.1129, -19.1226, -14.9396, 0.86", "70.6789, -24.1553, -19.446, 0.86", "71.4526, -26.4865, -21.6287, 0.74", "72.0309, -28.1649, -23.2825, 0.74", "72.5957, -29.8047, -24.9481, 0.74", "73.355, -32.1571, -27.3987, 0.61", "73.9109, -34.0436, -29.436, 0.61", "74.3764, -35.7573, -31.4931, 0.61", "74.7174, -37.1925, -33.5022, 0.61", "75.0977, -38.8642, -35.9582, 0.61", "75.4971, -40.6196, -38.6128, 0.61", "75.8186, -42.219, -41.0324, 0.61", "76.3936, -45.8329, -46.61, 0.61", "76.7397, -48.2486, -50.4465, 0.61", "76.8945, -49.379, -52.29, 0.61" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "69.1129, -19.1226, -14.9396, 0.86", "73.598, -19.257, -17.6543, 0.86", "75.0838, -19.4424, -18.5074, 0.86", "77.496, -19.8372, -19.8737, 0.86", "79.2552, -20.2686, -20.9307, 0.74", "79.3557, -20.3038, -20.9945, 0.74", "80.5196, -20.8379, -21.756, 0.74", "83.1551, -22.714, -23.1869, 0.74", "83.3189, -22.8678, -23.2713, 0.74", "85.2644, -25.0955, -24.2114, 0.74", "86.6753, -26.9113, -24.8606, 0.74", "87.8275, -28.5164, -25.3226, 0.74", "89.4006, -30.9807, -25.8198, 0.61", "90.6119, -33.1334, -26.0247, 0.61", "91.3424, -34.5007, -26.0874, 0.61", "91.3995, -34.6135, -26.0846, 0.61", "92.0874, -36.0077, -26.0184, 0.61", "92.9965, -37.9404, -25.9475, 0.61", "94.2872, -40.618, -25.8561, 0.61", "94.3401, -40.7212, -25.8501, 0.61", "95.4223, -42.7184, -25.7037, 0.61", "95.4821, -42.8172, -25.6953, 0.61", "96.8606, -44.8608, -25.49, 0.61", "99.0146, -47.7623, -25.1726, 0.61", "99.0605, -47.8175, -25.1666, 0.61", "100.302, -49.1226, -25.1395, 0.61", "102.072, -50.7551, -25.2111, 0.61", "103.079, -51.6094, -25.3124, 0.61", "104.757, -52.9053, -25.5495, 0.61", "107.122, -54.5969, -25.9413, 0.61", "111.471, -57.5661, -26.6726, 0.61", "114.229, -59.2675, -27.1228, 0.61", "117.046, -60.8934, -27.5606, 0.61", "118.582, -61.7129, -27.777, 0.61", "121.391, -63.0686, -28.1111, 0.61", "121.514, -63.1218, -28.1206, 0.61", "124.874, -64.3903, -28.1731, 0.61", "126.993, -65.0844, -28.1638, 0.61", "129.121, -65.7031, -28.0998, 0.61", "130.912, -66.2002, -28.003, 0.61", "132.993, -66.7926, -27.8593, 0.61", "134.646, -67.2824, -27.6659, 0.61", "134.763, -67.3182, -27.6477, 0.61", "137.252, -68.0573, -27.2166, 0.61", "141.429, -69.3499, -26.4316, 0.61", "144.905, -70.3537, -25.7121, 0.61", "148.541, -71.2827, -24.9501, 0.61", "148.648, -71.3047, -24.9238, 0.61", "151.12, -71.6991, -24.2609, 0.61", "151.238, -71.7109, -24.226, 0.61", "154.204, -71.7266, -23.3569, 0.61", "157.148, -71.4716, -22.4362, 0.61", "159.574, -71.1307, -21.674, 0.61", "161.304, -70.8307, -21.1174, 0.61", "161.41, -70.8112, -21.08, 0.61", "164.682, -70.2249, -19.8885, 0.61", "168.428, -69.5891, -18.3364, 0.61", "170.84, -69.2021, -17.0744, 0.61", "172.475, -68.9055, -16.0998, 0.61", "175.507, -68.2606, -14.0515, 0.61", "175.563, -68.2475, -14.0115, 0.61", "179.081, -67.3737, -11.3576, 0.61", "182.979, -66.3393, -8.38103, 0.37", "188.375, -64.7744, -4.33377, 0.37", "191.348, -63.8195, -2.08943, 0.37", "194.345, -62.728, 0.0867805, 0.37", "196.117, -62.0414, 1.3107, 0.37", "198.406, -61.0394, 2.82071, 0.37", "200.543, -59.9937, 4.14277, 0.37", "202.346, -59.074, 5.32086, 0.37", "203.809, -58.2816, 6.37379, 0.37", "203.898, -58.2289, 6.44365, 0.37", "207.406, -55.992, 8.97301, 0.37", "208.627, -55.173, 9.78736, 0.37", "210.792, -53.6323, 10.9434, 0.37", "213.931, -50.9924, 12.0266, 0.37", "214.832, -50.0986, 12.1925, 0.37", "217.73, -46.9052, 12.2468, 0.37", "217.81, -46.8075, 12.2316, 0.37", "220.25, -43.5069, 11.5445, 0.37", "222.169, -40.5823, 10.8979, 0.37", "223.64, -38.2872, 10.4905, 0.37", "224.093, -37.617, 10.4755, 0.37", "225.179, -36.1901, 10.6696, 0.37", "226.647, -34.5104, 11.1265, 0.37", "229.214, -32.021, 12.2721, 0.37", "231.233, -30.3668, 13.4476, 0.37", "233.597, -28.678, 14.9728, 0.37", "235.583, -27.3703, 16.328, 0.37", "237.727, -26.0117, 17.8741, 0.37", "239.737, -24.7189, 19.3623, 0.37", "243.496, -22.0732, 22.1614, 0.37", "245.119, -20.7491, 23.3498, 0.37", "246.647, -19.3689, 24.4015, 0.37", "248.541, -17.5213, 25.6206, 0.37", "250.359, -15.8166, 26.5433, 0.37", "252.152, -14.2763, 27.2241, 0.37", "253.464, -13.3298, 27.469, 0.37", "255.825, -12.1355, 27.7397, 0.37", "257.418, -11.7289, 27.8028, 0.37", "259.708, -11.5743, 27.8007, 0.37", "261.384, -11.6598, 27.7769, 0.37", "264.07, -11.9725, 27.7062, 0.37", "266.769, -12.3478, 27.5808, 0.37", "269.001, -12.6845, 27.4308, 0.37", "271.328, -12.9975, 27.2765, 0.37", "273.266, -13.2246, 27.1579, 0.37", "275.678, -13.4152, 27.0364, 0.37", "278.582, -13.564, 26.9467, 0.37", "278.748, -13.5625, 26.9377, 0.37", "279.978, -13.5307, 26.8485, 0.37", "281.689, -13.4684, 26.7059, 0.37", "282.846, -13.4453, 26.608, 0.37", "284.827, -13.422, 26.4499, 0.37", "287.011, -13.4379, 26.2982, 0.37", "288.611, -13.4977, 26.1986, 0.37", "290.455, -13.618, 26.093, 0.37", "292.919, -13.8297, 25.9742, 0.37", "294.578, -13.9757, 25.9182, 0.37", "295.704, -14.0883, 25.8988, 0.37", "298.144, -14.3598, 25.9059, 0.37", "298.277, -14.3747, 25.9032, 0.37", "300.718, -14.6924, 25.802, 0.37", "303.814, -15.1078, 25.6239, 0.37", "305.167, -15.3486, 25.5367, 0.37", "306.14, -15.5349, 25.4388, 0.37", "308.08, -15.9056, 25.1996, 0.37", "309.669, -16.1778, 24.9921, 0.37", "311.144, -16.3446, 24.7926, 0.37", "313.791, -16.5224, 24.2846, 0.37", "316.65, -16.5117, 23.5977, 0.37", "318.892, -16.447, 22.9088, 0.37", "320.663, -16.329, 22.2881, 0.37", "322.954, -16.0887, 21.2552, 0.37", "325.931, -15.7372, 19.706, 0.37", "328.454, -15.3353, 18.1991, 0.37", "330.56, -14.9915, 16.827, 0.37", "331.692, -14.8286, 16.0182, 0.37", "334.419, -14.4757, 13.9729, 0.37", "335.887, -14.303, 12.8605, 0.37", "337.744, -14.044, 11.5307, 0.37", "339.706, -13.7138, 10.1714, 0.37", "342.306, -13.1595, 8.57622, 0.37", "345.361, -12.5815, 6.99236, 0.37", "345.424, -12.5701, 6.96568, 0.37", "347.71, -12.1367, 6.26926, 0.37", "349.07, -11.879, 6.12327, 0.37", "353.235, -10.9797, 6.19627, 0.37", "356.1, -10.263, 6.79136, 0.37", "356.156, -10.2486, 6.80929, 0.37", "360.349, -9.14857, 8.41134, 0.37", "363.903, -8.18797, 10.0202, 0.37", "368.406, -6.96323, 12.3106, 0.37", "373.15, -5.62649, 15.0154, 0.37", "373.675, -5.46724, 15.3035, 0.37", "374.098, -5.35908, 15.5284, 0.37", "374.72, -5.23644, 15.8538, 0.37", "376.635, -4.92922, 16.6945, 0.37", "377.428, -4.83177, 17.04, 0.37", "379.192, -4.58289, 17.4861, 0.37", "380.455, -4.33757, 17.8168, 0.37", "382.531, -3.87301, 18.3706, 0.37", "383.664, -3.57012, 18.7368, 0.37", "383.891, -3.49385, 18.834, 0.37", "386.017, -2.54015, 19.9661, 0.37", "386.533, -2.28308, 20.3025, 0.37", "386.709, -2.18431, 20.4454, 0.37", "389.151, -0.841224, 22.6481, 0.37", "391.074, 0.200251, 24.6489, 0.37", "393.063, 1.29521, 26.8601, 0.37", "394.623, 2.2208, 28.7086, 0.37", "396.613, 3.42084, 31.1527, 0.37", "397.233, 3.81307, 31.9224, 0.37", "399.151, 5.14167, 34.4853, 0.37", "399.82, 5.60795, 35.4082, 0.37", "400.545, 6.10491, 36.4435, 0.37", "402.258, 7.40803, 38.7581, 0.37", "402.97, 7.9597, 39.6167, 0.37", "404.828, 9.64259, 41.9554, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_15", "dend_12", "dend_11", "dend_0", "dend_39", "dend_36", "dend_27", "dend_16", "dend_14", "dend_13", "dend_6", "dend_1", "dend_38", "dend_37", "dend_33", "dend_28", "dend_22", "dend_17", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_32", "dend_29", "dend_26", "dend_23", "dend_21", "dend_18", "dend_9", "dend_8", "dend_4", "dend_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_15", "dend_12", "dend_11", "dend_0", "dend_39", "dend_36", "dend_27", "dend_16", "dend_14", "dend_13", "dend_6", "dend_1", "dend_38", "dend_37", "dend_33", "dend_28", "dend_22", "dend_17", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_32", "dend_29", "dend_26", "dend_23", "dend_21", "dend_18", "dend_9", "dend_8", "dend_4", "dend_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_15", "dend_12", "dend_11", "dend_0", "axon_0", "dend_39", "dend_36", "dend_27", "dend_16", "dend_14", "dend_13", "dend_6", "dend_1", "axon_1", "dend_38", "dend_37", "dend_33", "dend_28", "dend_22", "dend_17", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_32", "dend_29", "dend_26", "dend_23", "dend_21", "dend_18", "dend_9", "dend_8", "dend_4", "dend_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L1_SLAC_9fb2ec760b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_15
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_15
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: dend_15
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_15, dend_12, dend_11, dend_0, axon_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, axon_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_15(0), soma_0(0.4999999462115129)
    connect dend_12(0), soma_0(0.4999999462115129)
    connect dend_11(0), soma_0(0.4999999462115129)
    connect dend_0(0), soma_0(0.4999999462115129)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_15(1.0)
    connect dend_36(0), dend_15(1.0)
    connect dend_27(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.29606, 0.50401, 0.0, 3.86383 ) }
    soma_0 { pt3dadd( -7.40488, 0.318884, 0.0, 7.08485 ) }
    soma_0 { pt3dadd( -6.51371, 0.133758, 0.0, 9.19243 ) }
    soma_0 { pt3dadd( -5.62253, -0.0513684, 0.0, 10.6164 ) }
    soma_0 { pt3dadd( -4.73135, -0.236494, 0.0, 12.0715 ) }
    soma_0 { pt3dadd( -3.84018, -0.42162, 0.0, 13.3757 ) }
    soma_0 { pt3dadd( -2.949, -0.606746, 0.0, 13.7086 ) }
    soma_0 { pt3dadd( -2.05782, -0.791872, 0.0, 13.8732 ) }
    soma_0 { pt3dadd( -1.16665, -0.976998, 0.0, 13.9573 ) }
    soma_0 { pt3dadd( -0.275473, -1.16212, 0.0, 14.0078 ) }
    soma_0 { pt3dadd( 0.615704, -1.34725, 0.0, 13.4912 ) }
    soma_0 { pt3dadd( 1.50688, -1.53238, 0.0, 12.6275 ) }
    soma_0 { pt3dadd( 2.39806, -1.7175, 0.0, 11.7159 ) }
    soma_0 { pt3dadd( 3.28923, -1.90263, 0.0, 10.5589 ) }
    soma_0 { pt3dadd( 4.18041, -2.08775, 0.0, 9.29434 ) }
    soma_0 { pt3dadd( 5.07158, -2.27288, 0.0, 8.21169 ) }
    soma_0 { pt3dadd( 5.96276, -2.45801, 0.0, 6.80861 ) }
    soma_0 { pt3dadd( 6.85394, -2.64313, 0.0, 5.40518 ) }
    soma_0 { pt3dadd( 7.74511, -2.82826, 0.0, 3.94532 ) }
    soma_0 { pt3dadd( 8.63629, -3.01338, 0.0, 2.52721 ) }
    soma_0 { pt3dadd( 9.52747, -3.19851, 0.0, 1.51152 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 21/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.44316, -2.42247, 2.73, 3.93 ) }
    dend_15 { pt3dadd( 10.5675, -2.85834, 3.32548, 3.93 ) }
    dend_15 { pt3dadd( 14.3242, -3.25535, 3.86788, 3.93 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 24/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 10.0032, -3.31497, -9.46, 1.23 ) }
    dend_12 { pt3dadd( 12.9359, -3.63271, -10.7461, 1.23 ) }
    dend_12 { pt3dadd( 14.3528, -3.72806, -11.4943, 1.23 ) }
    dend_12 { pt3dadd( 17.4664, -3.84686, -13.1248, 1.23 ) }
    dend_12 { pt3dadd( 19.4946, -3.90409, -14.1565, 0.98 ) }
    dend_12 { pt3dadd( 21.9789, -3.96209, -15.4062, 0.98 ) }
    dend_12 { pt3dadd( 26.2148, -4.00221, -17.43, 0.61 ) }
    dend_12 { pt3dadd( 29.2826, -3.95493, -18.9906, 0.61 ) }
    dend_12 { pt3dadd( 31.2717, -3.91794, -19.9736, 0.61 ) }
    dend_12 { pt3dadd( 34.0388, -3.84985, -21.2576, 0.61 ) }
    dend_12 { pt3dadd( 34.151, -3.84983, -21.3046, 0.61 ) }
    dend_12 { pt3dadd( 36.7092, -3.88895, -22.1767, 0.61 ) }
    dend_12 { pt3dadd( 38.0279, -3.86675, -22.4617, 0.61 ) }
    dend_12 { pt3dadd( 40.9533, -3.97691, -23.0863, 0.61 ) }
    dend_12 { pt3dadd( 40.9825, -3.97889, -23.0932, 0.61 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 39/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.18684, -2.36997, -5.13, 2.21 ) }
    dend_11 { pt3dadd( -9.29914, -3.42669, -7.97165, 1.97 ) }
    dend_11 { pt3dadd( -11.4838, -4.23847, -10.9623, 1.72 ) }
    dend_11 { pt3dadd( -13.5413, -4.79325, -13.774, 1.72 ) }
    dend_11 { pt3dadd( -16.3974, -5.36835, -17.5877, 1.84 ) }
    dend_11 { pt3dadd( -18.0247, -5.65428, -19.6548, 1.35 ) }
    dend_11 { pt3dadd( -19.2904, -5.89321, -21.2044, 1.35 ) }
    dend_11 { pt3dadd( -20.2536, -6.02493, -22.4136, 1.35 ) }
    dend_11 { pt3dadd( -21.2393, -6.0624, -23.5357, 1.35 ) }
    dend_11 { pt3dadd( -22.4946, -6.02916, -24.7521, 1.35 ) }
    dend_11 { pt3dadd( -24.2873, -6.01387, -26.367, 1.35 ) }
    dend_11 { pt3dadd( -26.4448, -6.18141, -28.3924, 1.35 ) }
    dend_11 { pt3dadd( -28.1169, -6.42347, -30.0238, 1.35 ) }
    dend_11 { pt3dadd( -30.2705, -6.83823, -32.2718, 1.35 ) }
    dend_11 { pt3dadd( -31.987, -7.20235, -34.1805, 1.35 ) }
    dend_11 { pt3dadd( -33.5456, -7.5443, -36.0403, 1.23 ) }
    dend_11 { pt3dadd( -35.1969, -7.93412, -38.1012, 1.23 ) }
    dend_11 { pt3dadd( -36.2349, -8.23396, -39.4174, 1.23 ) }
    dend_11 { pt3dadd( -38.4082, -9.08713, -42.083, 1.23 ) }
    dend_11 { pt3dadd( -38.4082, -9.08713, -42.083, 1.23 ) }
    dend_11 { pt3dadd( -40.4289, -10.0132, -43.7266, 1.23 ) }
    dend_11 { pt3dadd( -42.0794, -10.6997, -44.7632, 0.98 ) }
    dend_11 { pt3dadd( -43.9632, -11.415, -45.6935, 0.61 ) }
    dend_11 { pt3dadd( -45.8947, -12.1601, -46.434, 0.61 ) }
    dend_11 { pt3dadd( -48.6948, -13.2744, -47.1488, 0.61 ) }
    dend_11 { pt3dadd( -50.8019, -14.1272, -47.5412, 0.61 ) }
    dend_11 { pt3dadd( -51.7869, -14.5235, -47.6556, 0.61 ) }
    dend_11 { pt3dadd( -51.8935, -14.5644, -47.6672, 0.61 ) }
    dend_11 { pt3dadd( -53.2291, -15.0762, -47.8104, 0.61 ) }
    dend_11 { pt3dadd( -55.4213, -15.9056, -48.1493, 0.61 ) }
    dend_11 { pt3dadd( -56.941, -16.4968, -48.4287, 0.61 ) }
    dend_11 { pt3dadd( -59.7001, -17.5417, -49.4515, 0.61 ) }
    dend_11 { pt3dadd( -62.2991, -18.5272, -50.6878, 0.61 ) }
    dend_11 { pt3dadd( -64.3082, -19.2705, -51.7067, 0.61 ) }
    dend_11 { pt3dadd( -66.0026, -19.8674, -52.6573, 0.61 ) }
    dend_11 { pt3dadd( -67.9993, -20.5572, -53.9363, 0.61 ) }
    dend_11 { pt3dadd( -74.0036, -22.7021, -58.3437, 0.61 ) }
    dend_11 { pt3dadd( -76.2671, -23.5543, -60.3347, 0.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.23684, 5.00103, 2.57, 2.09 ) }
    dend_0 { pt3dadd( -7.89448, 6.7388, 2.83332, 2.09 ) }
    dend_0 { pt3dadd( -9.33804, 8.17502, 3.04333, 2.09 ) }
    dend_0 { pt3dadd( -11.2126, 10.0401, 3.31606, 1.84 ) }
    dend_0 { pt3dadd( -12.5249, 11.3458, 3.50698, 1.84 ) }
    dend_0 { pt3dadd( -13.8768, 12.6908, 3.70366, 1.84 ) }
    dend_0 { pt3dadd( -15.2272, 14.0344, 3.90012, 1.84 ) }
    dend_0 { pt3dadd( -16.1126, 14.7955, 4.02968, 1.35 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 85/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.52747, -3.19851, 0.0, 0.61 ) }
    axon_0 { pt3dadd( 24.2139, -6.24936, 0.0, 0.61 ) }
    axon_0 { pt3dadd( 38.9004, -9.30021, 0.0, 0.61 ) }
    // Section: dend_39, id: dend_39, parent: dend_15 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 14.3242, -3.25535, 3.86788, 1.6 ) }
    dend_39 { pt3dadd( 17.8474, -4.06961, 4.06513, 1.6 ) }
    dend_39 { pt3dadd( 22.7791, -5.20938, 4.34124, 1.35 ) }
    dend_39 { pt3dadd( 25.7877, -5.90469, 4.50968, 1.35 ) }
    dend_39 { pt3dadd( 28.1962, -6.46133, 4.64452, 1.23 ) }
    dend_39 { pt3dadd( 31.2471, -7.16642, 4.81533, 1.23 ) }
    dend_39 { pt3dadd( 34.3763, -7.88963, 4.99052, 1.11 ) }
    // Section: dend_36, id: dend_36, parent: dend_15 (entry count 95/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 14.3242, -3.25535, 3.86788, 1.6 ) }
    dend_36 { pt3dadd( 14.1022, -0.972761, 7.50881, 1.6 ) }
    dend_36 { pt3dadd( 13.5998, 1.94752, 12.269, 1.6 ) }
    dend_36 { pt3dadd( 13.0918, 3.70676, 15.9463, 0.86 ) }
    dend_36 { pt3dadd( 12.6635, 5.18997, 19.0467, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( 12.4319, 5.99228, 20.7237, 0.86 ) }
    dend_36 { pt3dadd( 12.2676, 6.56135, 21.9132, 0.86 ) }
    dend_36 { pt3dadd( 11.6859, 7.72165, 24.8161, 0.86 ) }
    dend_36 { pt3dadd( 9.82721, 10.0278, 31.5881, 0.86 ) }
    // Section: dend_27, id: dend_27, parent: dend_15 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.3242, -3.25535, 3.86788, 1.72 ) }
    dend_27 { pt3dadd( 14.1032, -8.87793, 5.37718, 1.72 ) }
    dend_27 { pt3dadd( 13.9259, -11.9232, 6.12854, 1.6 ) }
    dend_27 { pt3dadd( 13.8885, -12.4294, 6.2557, 1.6 ) }
    dend_27 { pt3dadd( 13.6985, -15.3557, 7.02784, 1.48 ) }
    dend_27 { pt3dadd( 13.5976, -18.0952, 7.79128, 1.35 ) }
    dend_27 { pt3dadd( 13.5453, -21.3844, 8.71418, 1.35 ) }
    dend_27 { pt3dadd( 13.4828, -24.0396, 9.50937, 1.23 ) }
    dend_27 { pt3dadd( 13.4437, -26.2804, 10.1694, 1.23 ) }
    dend_27 { pt3dadd( 13.4123, -28.7921, 10.8926, 1.23 ) }
    dend_27 { pt3dadd( 13.39, -31.5377, 11.7252, 0.98 ) }
    dend_27 { pt3dadd( 13.3898, -33.3595, 12.3025, 0.98 ) }
    dend_27 { pt3dadd( 13.388, -35.4838, 12.9533, 0.98 ) }
    dend_27 { pt3dadd( 13.3833, -36.8995, 13.3613, 0.98 ) }
    dend_27 { pt3dadd( 13.3881, -38.0492, 13.6295, 0.98 ) }
    dend_27 { pt3dadd( 13.4083, -39.7706, 13.9733, 0.98 ) }
    dend_27 { pt3dadd( 13.4744, -41.886, 14.3963, 0.98 ) }
    dend_27 { pt3dadd( 13.5582, -43.2422, 14.6752, 0.98 ) }
    dend_27 { pt3dadd( 13.7344, -44.9529, 15.0183, 0.98 ) }
    dend_27 { pt3dadd( 13.997, -47.0133, 15.4847, 0.98 ) }
    dend_27 { pt3dadd( 14.4025, -49.7004, 16.1037, 0.98 ) }
    dend_27 { pt3dadd( 14.7148, -51.5665, 16.5283, 0.98 ) }
    dend_27 { pt3dadd( 14.9081, -52.8153, 16.861, 0.98 ) }
    dend_27 { pt3dadd( 14.923, -52.9381, 16.8983, 0.98 ) }
    dend_27 { pt3dadd( 15.0771, -55.0529, 17.6481, 0.98 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 14.3242, -3.25535, 3.86788, 2.7 ) }
    dend_16 { pt3dadd( 19.4943, -3.33792, 2.57384, 2.7 ) }
    dend_16 { pt3dadd( 25.8743, -3.43981, 0.97702, 2.21 ) }
    dend_16 { pt3dadd( 31.8076, -3.53456, -0.508026, 1.72 ) }
    dend_16 { pt3dadd( 35.9299, -3.60039, -1.53977, 1.6 ) }
    dend_16 { pt3dadd( 39.4325, -3.65633, -2.41645, 1.6 ) }
    dend_16 { pt3dadd( 42.6633, -3.70793, -3.22508, 1.6 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 40.9825, -3.97889, -23.0932, 0.49 ) }
    dend_14 { pt3dadd( 42.9021, -5.30938, -24.6242, 0.49 ) }
    dend_14 { pt3dadd( 46.1122, -7.49737, -27.2647, 0.49 ) }
    dend_14 { pt3dadd( 47.6499, -8.56784, -28.4785, 0.49 ) }
    dend_14 { pt3dadd( 50.7931, -10.756, -30.9595, 0.49 ) }
    dend_14 { pt3dadd( 52.872, -12.2032, -32.6004, 0.49 ) }
    dend_14 { pt3dadd( 54.9322, -13.6373, -34.2266, 0.49 ) }
    dend_14 { pt3dadd( 57.6909, -15.415, -36.3648, 0.49 ) }
    dend_14 { pt3dadd( 59.505, -16.634, -37.6264, 0.49 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 45/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 40.9825, -3.97889, -23.0932, 0.61 ) }
    dend_13 { pt3dadd( 42.3768, -2.53104, -23.4694, 0.61 ) }
    dend_13 { pt3dadd( 43.8385, -0.808351, -23.9103, 0.61 ) }
    dend_13 { pt3dadd( 45.0513, 0.707069, -24.2912, 0.61 ) }
    dend_13 { pt3dadd( 46.2576, 2.22603, -24.7137, 0.61 ) }
    dend_13 { pt3dadd( 47.1239, 3.26961, -25.0012, 0.61 ) }
    dend_13 { pt3dadd( 48.8383, 5.09278, -25.4821, 0.61 ) }
    dend_13 { pt3dadd( 49.5599, 5.77325, -25.6638, 0.61 ) }
    dend_13 { pt3dadd( 49.6164, 5.81452, -25.6769, 0.61 ) }
    dend_13 { pt3dadd( 51.4177, 6.6787, -26.0116, 0.61 ) }
    dend_13 { pt3dadd( 54.4001, 7.50667, -26.5654, 0.61 ) }
    dend_13 { pt3dadd( 57.6647, 7.99188, -27.1279, 0.61 ) }
    dend_13 { pt3dadd( 59.5893, 8.08195, -27.4952, 0.61 ) }
    dend_13 { pt3dadd( 62.0285, 8.06649, -28.0013, 0.61 ) }
    dend_13 { pt3dadd( 64.8586, 7.92407, -28.7087, 0.61 ) }
    dend_13 { pt3dadd( 67.08, 7.66326, -29.3342, 0.49 ) }
    dend_13 { pt3dadd( 69.0865, 7.32546, -29.9847, 0.49 ) }
    dend_13 { pt3dadd( 71.9448, 6.8052, -31.0187, 0.49 ) }
    dend_13 { pt3dadd( 73.5999, 6.53274, -31.6622, 0.49 ) }
    dend_13 { pt3dadd( 75.8206, 6.20412, -32.536, 0.49 ) }
    dend_13 { pt3dadd( 77.4101, 5.96413, -33.2427, 0.49 ) }
    dend_13 { pt3dadd( 78.6285, 5.74981, -33.8688, 0.49 ) }
    dend_13 { pt3dadd( 78.7255, 5.7301, -33.9211, 0.49 ) }
    dend_13 { pt3dadd( 80.5644, 5.33747, -34.9077, 0.49 ) }
    dend_13 { pt3dadd( 81.7403, 5.06672, -35.5744, 0.49 ) }
    dend_13 { pt3dadd( 84.1959, 4.50454, -36.9572, 0.49 ) }
    dend_13 { pt3dadd( 89.1943, 3.37077, -40.1362, 0.49 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.1126, 14.7955, 4.02968, 1.23 ) }
    dend_6 { pt3dadd( -21.3581, 17.7578, -0.827408, 1.23 ) }
    dend_6 { pt3dadd( -22.1435, 18.2833, -1.41097, 1.23 ) }
    dend_6 { pt3dadd( -23.192, 19.0287, -2.10225, 0.98 ) }
    dend_6 { pt3dadd( -24.4858, 20.0419, -2.84586, 0.98 ) }
    dend_6 { pt3dadd( -25.532, 20.9117, -3.37698, 0.98 ) }
    dend_6 { pt3dadd( -26.9469, 22.1245, -4.03793, 0.98 ) }
    dend_6 { pt3dadd( -28.335, 23.6273, -4.23834, 0.98 ) }
    dend_6 { pt3dadd( -28.4185, 23.7223, -4.25025, 0.98 ) }
    dend_6 { pt3dadd( -29.6478, 25.1214, -4.40762, 0.98 ) }
    dend_6 { pt3dadd( -30.3338, 25.8694, -4.47838, 0.98 ) }
    dend_6 { pt3dadd( -30.4184, 25.964, -4.48352, 0.98 ) }
    dend_6 { pt3dadd( -31.8587, 27.5921, -4.48352, 0.98 ) }
    dend_6 { pt3dadd( -31.9396, 27.6874, -4.48352, 0.98 ) }
    dend_6 { pt3dadd( -33.0661, 28.9679, -4.48352, 0.98 ) }
    dend_6 { pt3dadd( -33.1451, 29.0505, -4.47578, 0.98 ) }
    dend_6 { pt3dadd( -34.2905, 30.2989, -4.30087, 0.98 ) }
    dend_6 { pt3dadd( -34.3669, 30.3858, -4.28335, 0.98 ) }
    dend_6 { pt3dadd( -36.0105, 32.3607, -3.8328, 0.98 ) }
    dend_6 { pt3dadd( -36.1622, 32.5439, -3.78877, 0.98 ) }
    dend_6 { pt3dadd( -38.4397, 35.3006, -3.07223, 0.98 ) }
    dend_6 { pt3dadd( -40.115, 37.3536, -2.51369, 0.98 ) }
    dend_6 { pt3dadd( -41.6328, 39.2442, -1.95826, 0.98 ) }
    dend_6 { pt3dadd( -42.9062, 40.8905, -1.45905, 0.98 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 96/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -16.1126, 14.7955, 4.02968, 1.35 ) }
    dend_1 { pt3dadd( -17.1491, 15.8787, 4.91059, 1.35 ) }
    dend_1 { pt3dadd( -18.0249, 17.1506, 6.20841, 1.35 ) }
    dend_1 { pt3dadd( -18.8266, 18.5724, 7.92879, 1.35 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( -19.4302, 19.6828, 9.36348, 1.35 ) }
    dend_1 { pt3dadd( -20.0467, 20.8025, 10.8512, 1.35 ) }
    dend_1 { pt3dadd( -22.0902, 24.347, 15.692, 1.35 ) }
    dend_1 { pt3dadd( -22.9695, 25.9405, 17.9638, 1.35 ) }
    dend_1 { pt3dadd( -23.9394, 27.6559, 20.5624, 1.35 ) }
    dend_1 { pt3dadd( -24.4564, 28.5098, 21.97, 1.35 ) }
    dend_1 { pt3dadd( -24.9406, 29.2833, 23.3169, 1.35 ) }
    dend_1 { pt3dadd( -25.8589, 30.5878, 25.6457, 1.35 ) }
    dend_1 { pt3dadd( -26.8659, 31.6612, 27.386, 1.35 ) }
    dend_1 { pt3dadd( -28.0915, 32.7383, 29.1841, 1.35 ) }
    dend_1 { pt3dadd( -29.4952, 33.8926, 30.9998, 1.35 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 38.9004, -9.30021, 0.0, 0.61 ) }
    axon_1 { pt3dadd( 53.5869, -12.3511, 0.0, 0.61 ) }
    axon_1 { pt3dadd( 68.2733, -15.4019, 0.0, 0.61 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 14/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 9.82721, 10.0278, 31.5881, 0.61 ) }
    dend_38 { pt3dadd( 8.32308, 9.83566, 32.7952, 0.61 ) }
    dend_38 { pt3dadd( 7.09615, 9.67892, 33.7798, 0.49 ) }
    dend_38 { pt3dadd( 5.77748, 9.51047, 34.838, 0.49 ) }
    dend_38 { pt3dadd( 4.87598, 9.3953, 35.5615, 0.49 ) }
    dend_38 { pt3dadd( 2.67042, 9.11355, 37.3314, 0.49 ) }
    dend_38 { pt3dadd( -1.52183, 8.578, 40.6957, 0.49 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 9.82721, 10.0278, 31.5881, 0.86 ) }
    dend_37 { pt3dadd( 8.30092, 9.72046, 32.6196, 0.86 ) }
    dend_37 { pt3dadd( 6.35891, 9.29972, 33.9898, 0.61 ) }
    dend_37 { pt3dadd( 5.21608, 9.07755, 34.8913, 0.61 ) }
    dend_37 { pt3dadd( 3.92767, 8.90472, 35.9431, 0.61 ) }
    dend_37 { pt3dadd( 2.33625, 8.80824, 37.1955, 0.61 ) }
    dend_37 { pt3dadd( 2.2813, 8.80491, 37.2388, 0.61 ) }
    dend_37 { pt3dadd( 1.22919, 8.75838, 38.1162, 0.61 ) }
    dend_37 { pt3dadd( -0.759844, 8.77077, 39.7135, 0.61 ) }
    dend_37 { pt3dadd( -2.26745, 8.81634, 41.0334, 0.61 ) }
    dend_37 { pt3dadd( -3.45834, 8.95696, 42.0774, 0.61 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 15.0771, -55.0529, 17.6481, 0.74 ) }
    dend_33 { pt3dadd( 15.2948, -57.1527, 15.8317, 0.74 ) }
    dend_33 { pt3dadd( 15.5477, -58.9075, 14.1241, 0.74 ) }
    dend_33 { pt3dadd( 15.7024, -59.9113, 13.1594, 0.74 ) }
    dend_33 { pt3dadd( 16.0588, -61.6616, 11.4238, 0.74 ) }
    dend_33 { pt3dadd( 16.5027, -63.4769, 9.69596, 0.98 ) }
    dend_33 { pt3dadd( 16.8624, -64.9474, 8.29623, 0.98 ) }
    dend_33 { pt3dadd( 17.46, -67.0846, 6.07482, 0.98 ) }
    dend_33 { pt3dadd( 17.981, -68.6764, 4.43999, 0.98 ) }
    dend_33 { pt3dadd( 18.8306, -70.9987, 2.00507, 1.23 ) }
    dend_33 { pt3dadd( 19.3538, -72.4111, 0.615805, 1.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 15.0771, -55.0529, 17.6481, 0.86 ) }
    dend_28 { pt3dadd( 14.1516, -57.7796, 18.7111, 0.86 ) }
    dend_28 { pt3dadd( 13.6931, -59.4438, 19.4505, 0.86 ) }
    dend_28 { pt3dadd( 13.3342, -61.3447, 20.3281, 0.86 ) }
    dend_28 { pt3dadd( 12.9605, -63.5189, 21.3179, 0.86 ) }
    dend_28 { pt3dadd( 12.5967, -65.4257, 22.2678, 0.86 ) }
    dend_28 { pt3dadd( 12.3266, -66.7825, 22.9761, 0.86 ) }
    dend_28 { pt3dadd( 11.7818, -69.4386, 24.4816, 0.74 ) }
    dend_28 { pt3dadd( 11.1389, -71.8933, 26.1539, 0.74 ) }
    dend_28 { pt3dadd( 10.7587, -72.8548, 26.9339, 0.74 ) }
    dend_28 { pt3dadd( 9.8321, -74.5557, 28.4841, 0.86 ) }
    dend_28 { pt3dadd( 9.77315, -74.6317, 28.5653, 0.86 ) }
    dend_28 { pt3dadd( 8.37829, -75.7569, 30.1199, 0.86 ) }
    dend_28 { pt3dadd( 6.9269, -76.2372, 31.3037, 0.86 ) }
    dend_28 { pt3dadd( 5.86865, -76.2962, 32.0285, 0.86 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 42.6633, -3.70793, -3.22508, 1.23 ) }
    dend_22 { pt3dadd( 44.5462, -1.54622, -5.07376, 1.23 ) }
    dend_22 { pt3dadd( 45.4267, -0.318808, -5.89203, 1.23 ) }
    dend_22 { pt3dadd( 46.3862, 1.06011, -6.72894, 1.11 ) }
    dend_22 { pt3dadd( 47.9411, 3.25159, -8.14573, 1.11 ) }
    dend_22 { pt3dadd( 47.9411, 3.25159, -8.14573, 1.11 ) }
    dend_22 { pt3dadd( 48.8181, 4.38441, -8.91039, 1.11 ) }
    dend_22 { pt3dadd( 49.9538, 5.96293, -9.93335, 1.11 ) }
    dend_22 { pt3dadd( 50.9332, 7.33192, -10.8259, 1.11 ) }
    dend_22 { pt3dadd( 52.4011, 9.19132, -12.042, 1.11 ) }
    dend_22 { pt3dadd( 54.0666, 11.0037, -13.2568, 0.98 ) }
    dend_22 { pt3dadd( 55.3856, 12.3562, -14.2328, 0.98 ) }
    dend_22 { pt3dadd( 55.6959, 12.6367, -14.4689, 0.98 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 42.6633, -3.70793, -3.22508, 1.11 ) }
    dend_17 { pt3dadd( 45.2403, -4.97978, -3.39999, 1.11 ) }
    dend_17 { pt3dadd( 47.5328, -6.11124, -3.55559, 1.11 ) }
    dend_17 { pt3dadd( 49.6724, -7.16723, -3.70081, 1.11 ) }
    dend_17 { pt3dadd( 51.6148, -8.12592, -3.83266, 1.11 ) }
    dend_17 { pt3dadd( 54.43, -9.51532, -4.02373, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 77/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -42.9062, 40.8905, -1.45905, 1.35 ) }
    dend_10 { pt3dadd( -42.6311, 43.5202, -3.81927, 1.35 ) }
    dend_10 { pt3dadd( -42.5224, 44.8491, -5.16347, 0.98 ) }
    dend_10 { pt3dadd( -42.5241, 46.2693, -6.70606, 0.86 ) }
    dend_10 { pt3dadd( -42.5448, 47.635, -8.20845, 0.86 ) }
    dend_10 { pt3dadd( -42.6211, 50.9647, -12.0218, 0.86 ) }
    dend_10 { pt3dadd( -42.6694, 53.0049, -14.4313, 0.86 ) }
    dend_10 { pt3dadd( -42.7007, 55.4789, -17.432, 0.74 ) }
    dend_10 { pt3dadd( -42.677, 57.3476, -19.8298, 0.61 ) }
    dend_10 { pt3dadd( -42.5845, 58.9348, -21.9415, 0.61 ) }
    dend_10 { pt3dadd( -42.381, 60.1565, -23.786, 0.61 ) }
    dend_10 { pt3dadd( -41.9951, 61.4797, -25.8136, 0.61 ) }
    dend_10 { pt3dadd( -41.6407, 62.4536, -27.458, 0.61 ) }
    dend_10 { pt3dadd( -41.0315, 63.5588, -29.7108, 0.61 ) }
    dend_10 { pt3dadd( -40.5462, 64.283, -31.3648, 0.61 ) }
    dend_10 { pt3dadd( -39.3004, 66.1765, -36.0601, 0.61 ) }
    dend_10 { pt3dadd( -39.0044, 66.6802, -37.3313, 0.61 ) }
    dend_10 { pt3dadd( -38.0352, 68.5932, -42.3888, 0.61 ) }
    dend_10 { pt3dadd( -37.3521, 70.3715, -47.1824, 0.61 ) }
    dend_10 { pt3dadd( -37.1547, 71.2424, -49.5677, 0.61 ) }
    dend_10 { pt3dadd( -37.0864, 71.9065, -51.3673, 0.61 ) }
    dend_10 { pt3dadd( -37.1277, 73.3654, -55.0754, 0.61 ) }
    dend_10 { pt3dadd( -37.2675, 74.536, -57.9875, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( -37.3497, 74.9707, -58.9108, 0.61 ) }
    dend_10 { pt3dadd( -37.8897, 77.3064, -62.898, 0.61 ) }
    dend_10 { pt3dadd( -37.8956, 77.3411, -62.9478, 0.61 ) }
    dend_10 { pt3dadd( -37.9491, 78.0944, -63.8244, 0.61 ) }
    dend_10 { pt3dadd( -38.0222, 79.4198, -65.0487, 0.61 ) }
    dend_10 { pt3dadd( -38.352, 84.1172, -68.8249, 0.61 ) }
    dend_10 { pt3dadd( -38.494, 85.6167, -70.0229, 0.61 ) }
    dend_10 { pt3dadd( -38.6672, 87.9158, -71.6727, 0.61 ) }
    dend_10 { pt3dadd( -38.8734, 90.4727, -73.5466, 0.61 ) }
    dend_10 { pt3dadd( -39.0457, 92.3592, -74.982, 0.61 ) }
    dend_10 { pt3dadd( -39.2699, 93.7525, -76.0687, 0.61 ) }
    dend_10 { pt3dadd( -40.0319, 95.8771, -77.4653, 0.61 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -42.9062, 40.8905, -1.45905, 0.86 ) }
    dend_7 { pt3dadd( -45.0054, 42.9509, 0.262758, 0.86 ) }
    dend_7 { pt3dadd( -47.0484, 44.8626, 1.92109, 0.86 ) }
    dend_7 { pt3dadd( -47.9023, 45.6243, 2.59601, 0.86 ) }
    dend_7 { pt3dadd( -50.0458, 47.5321, 4.27278, 0.86 ) }
    dend_7 { pt3dadd( -51.0109, 48.401, 4.99549, 0.86 ) }
    dend_7 { pt3dadd( -52.7554, 49.986, 6.28019, 0.61 ) }
    dend_7 { pt3dadd( -54.3526, 51.4168, 7.36722, 0.61 ) }
    dend_7 { pt3dadd( -55.9724, 52.8256, 8.44716, 0.61 ) }
    dend_7 { pt3dadd( -57.4436, 54.0949, 9.47032, 0.61 ) }
    dend_7 { pt3dadd( -58.6858, 55.1854, 10.364, 0.61 ) }
    dend_7 { pt3dadd( -59.8771, 56.2679, 11.2159, 0.61 ) }
    dend_7 { pt3dadd( -61.063, 57.2993, 11.9243, 0.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 25/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -29.4952, 33.8926, 30.9998, 0.61 ) }
    dend_5 { pt3dadd( -28.7949, 33.8594, 33.3967, 0.61 ) }
    dend_5 { pt3dadd( -28.1971, 34.103, 35.6067, 0.61 ) }
    dend_5 { pt3dadd( -27.8234, 34.3624, 36.9258, 0.61 ) }
    dend_5 { pt3dadd( -27.4111, 34.7026, 38.6326, 0.61 ) }
    dend_5 { pt3dadd( -26.9854, 35.1415, 41.0171, 0.61 ) }
    dend_5 { pt3dadd( -26.6189, 35.6292, 44.3302, 0.61 ) }
    dend_5 { pt3dadd( -26.3168, 36.0281, 46.5214, 0.61 ) }
    dend_5 { pt3dadd( -26.143, 36.4186, 48.1327, 0.61 ) }
    dend_5 { pt3dadd( -26.03, 36.8541, 49.8245, 0.61 ) }
    dend_5 { pt3dadd( -26.0744, 37.3419, 52.0484, 0.61 ) }
    dend_5 { pt3dadd( -26.4461, 37.808, 55.2239, 0.61 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -29.4952, 33.8926, 30.9998, 1.35 ) }
    dend_2 { pt3dadd( -30.1487, 35.4327, 31.4488, 1.35 ) }
    dend_2 { pt3dadd( -31.1014, 37.6779, 32.1032, 1.23 ) }
    dend_2 { pt3dadd( -31.9612, 39.704, 32.6938, 0.86 ) }
    dend_2 { pt3dadd( -32.539, 41.0656, 33.0908, 0.86 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 42/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 19.3538, -72.4111, 0.615805, 0.49 ) }
    dend_35 { pt3dadd( 22.6673, -72.8002, -0.10113, 0.49 ) }
    dend_35 { pt3dadd( 25.6657, -73.0961, -0.684233, 0.49 ) }
    dend_35 { pt3dadd( 28.6348, -73.4425, -1.32358, 0.49 ) }
    dend_35 { pt3dadd( 30.5589, -73.7429, -1.73177, 0.49 ) }
    dend_35 { pt3dadd( 35.4787, -74.6667, -2.81947, 0.49 ) }
    dend_35 { pt3dadd( 37.9295, -75.2492, -3.35604, 0.49 ) }
    dend_35 { pt3dadd( 39.2096, -75.6359, -3.63358, 0.49 ) }
    dend_35 { pt3dadd( 43.0403, -77.1733, -4.43746, 0.49 ) }
    dend_35 { pt3dadd( 46.4867, -78.817, -5.13147, 0.49 ) }
    dend_35 { pt3dadd( 48.0082, -79.7006, -5.43546, 0.49 ) }
    dend_35 { pt3dadd( 51.0215, -81.7644, -6.00026, 0.49 ) }
    dend_35 { pt3dadd( 53.9066, -83.8427, -6.48018, 0.49 ) }
    dend_35 { pt3dadd( 56.6359, -85.8392, -6.84936, 0.49 ) }
    dend_35 { pt3dadd( 58.4379, -87.1711, -7.01036, 0.49 ) }
    dend_35 { pt3dadd( 60.0041, -88.3376, -7.12381, 0.49 ) }
    dend_35 { pt3dadd( 61.8946, -89.7171, -7.20494, 0.49 ) }
    dend_35 { pt3dadd( 64.2466, -91.3434, -7.31402, 0.49 ) }
    dend_35 { pt3dadd( 65.2726, -92.0318, -7.35334, 0.49 ) }
    dend_35 { pt3dadd( 65.5681, -92.2375, -7.37327, 0.49 ) }
    dend_35 { pt3dadd( 67.1887, -93.432, -7.5834, 0.49 ) }
    dend_35 { pt3dadd( 67.3937, -93.5703, -7.626, 0.49 ) }
    dend_35 { pt3dadd( 68.9848, -94.5305, -8.08085, 0.49 ) }
    dend_35 { pt3dadd( 69.0884, -94.5802, -8.1238, 0.49 ) }
    dend_35 { pt3dadd( 71.0219, -95.4388, -8.96223, 0.49 ) }
    dend_35 { pt3dadd( 72.934, -96.2156, -9.81605, 0.49 ) }
    dend_35 { pt3dadd( 75.8387, -97.2477, -11.1633, 0.49 ) }
    dend_35 { pt3dadd( 78.3636, -98.0997, -12.3503, 0.49 ) }
    dend_35 { pt3dadd( 81.794, -99.1397, -13.9839, 0.49 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 71/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.3538, -72.4111, 0.615805, 1.11 ) }
    dend_34 { pt3dadd( 18.6213, -74.6669, -1.09729, 1.11 ) }
    dend_34 { pt3dadd( 17.945, -76.7613, -2.43569, 1.11 ) }
    dend_34 { pt3dadd( 17.1151, -79.2132, -3.76979, 0.98 ) }
    dend_34 { pt3dadd( 16.1701, -81.9964, -5.111, 0.98 ) }
    dend_34 { pt3dadd( 15.4495, -84.0909, -6.032, 0.86 ) }
    dend_34 { pt3dadd( 14.4337, -86.9766, -7.24261, 0.74 ) }
    dend_34 { pt3dadd( 13.4074, -89.6821, -8.25261, 0.74 ) }
    dend_34 { pt3dadd( 11.9857, -93.4613, -9.49663, 0.61 ) }
    dend_34 { pt3dadd( 11.3601, -95.1825, -10.0566, 0.61 ) }
    dend_34 { pt3dadd( 10.2673, -98.2139, -11.1727, 0.61 ) }
    dend_34 { pt3dadd( 9.51592, -100.295, -12.0487, 0.61 ) }
    dend_34 { pt3dadd( 8.83599, -102.183, -12.9154, 0.61 ) }
    dend_34 { pt3dadd( 7.76283, -105.169, -14.4123, 0.61 ) }
    dend_34 { pt3dadd( 6.59436, -108.612, -16.1955, 0.61 ) }
    dend_34 { pt3dadd( 5.29239, -112.609, -18.2475, 0.61 ) }
    dend_34 { pt3dadd( 4.5927, -114.835, -19.3995, 0.61 ) }
    dend_34 { pt3dadd( 3.87529, -117.202, -20.6081, 0.61 ) }
    dend_34 { pt3dadd( 3.31086, -119.108, -21.558, 0.61 ) }
    dend_34 { pt3dadd( 2.41984, -121.927, -22.9314, 0.61 ) }
    dend_34 { pt3dadd( 1.96707, -123.42, -23.4922, 0.61 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 92/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.86865, -76.2962, 32.0285, 0.86 ) }
    dend_32 { pt3dadd( 4.29676, -74.8031, 35.1954, 0.86 ) }
    dend_32 { pt3dadd( 3.36131, -73.9146, 37.08, 0.86 ) }
    dend_32 { pt3dadd( 2.38003, -72.9825, 39.057, 0.74 ) }
    dend_32 { pt3dadd( 1.52394, -72.1693, 40.7817, 0.74 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 97/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 5.86865, -76.2962, 32.0285, 0.86 ) }
    dend_29 { pt3dadd( 5.2512, -78.6821, 32.7612, 0.86 ) }
    dend_29 { pt3dadd( 5.20885, -78.8, 32.7911, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 4.44688, -80.092, 33.1043, 0.74 ) }
    dend_29 { pt3dadd( 3.88105, -80.9108, 33.2978, 0.74 ) }
    dend_29 { pt3dadd( 3.24643, -81.6741, 33.4719, 0.74 ) }
    dend_29 { pt3dadd( 3.15954, -81.7644, 33.4909, 0.74 ) }
    dend_29 { pt3dadd( 2.15075, -82.6747, 33.5827, 0.74 ) }
    dend_29 { pt3dadd( 0.426613, -84.1738, 33.729, 0.74 ) }
    dend_29 { pt3dadd( 0.403264, -84.1935, 33.7307, 0.74 ) }
    dend_29 { pt3dadd( -0.676464, -85.1708, 33.8055, 0.74 ) }
    dend_29 { pt3dadd( -1.83176, -86.2848, 33.8729, 0.74 ) }
    dend_29 { pt3dadd( -2.6653, -87.0635, 33.9104, 0.61 ) }
    dend_29 { pt3dadd( -3.73452, -88.0715, 33.9439, 0.61 ) }
    dend_29 { pt3dadd( -5.06522, -89.2648, 33.9584, 0.61 ) }
    dend_29 { pt3dadd( -5.91656, -89.9289, 33.9678, 0.61 ) }
    dend_29 { pt3dadd( -7.17039, -90.7492, 33.979, 0.61 ) }
    dend_29 { pt3dadd( -9.44994, -91.7892, 33.9976, 0.61 ) }
    dend_29 { pt3dadd( -9.56714, -91.8309, 33.9986, 0.61 ) }
    dend_29 { pt3dadd( -10.5224, -92.0723, 34.0067, 0.61 ) }
    dend_29 { pt3dadd( -11.9087, -92.294, 34.0181, 0.61 ) }
    dend_29 { pt3dadd( -13.484, -92.4591, 34.0297, 0.61 ) }
    dend_29 { pt3dadd( -16.2002, -92.7076, 34.0447, 0.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 20/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 55.6959, 12.6367, -14.4689, 0.49 ) }
    dend_26 { pt3dadd( 56.2741, 13.8738, -16.8541, 0.49 ) }
    dend_26 { pt3dadd( 57.0331, 14.955, -19.7225, 0.49 ) }
    dend_26 { pt3dadd( 57.6611, 15.6003, -22.1557, 0.49 ) }
    dend_26 { pt3dadd( 58.0789, 15.9457, -23.7501, 0.49 ) }
    dend_26 { pt3dadd( 58.5904, 16.3371, -25.7216, 0.49 ) }
    dend_26 { pt3dadd( 60.3685, 17.5213, -32.1717, 0.49 ) }
    dend_26 { pt3dadd( 61.1136, 17.8537, -34.8315, 0.49 ) }
    dend_26 { pt3dadd( 62.1205, 18.0375, -37.9602, 0.49 ) }
    dend_26 { pt3dadd( 63.7585, 18.0396, -42.7626, 0.49 ) }
    dend_26 { pt3dadd( 64.8285, 17.9431, -45.7149, 0.49 ) }
    dend_26 { pt3dadd( 66.1902, 17.712, -49.1508, 0.49 ) }
    dend_26 { pt3dadd( 67.4941, 17.4, -51.9952, 0.49 ) }
    dend_26 { pt3dadd( 69.8689, 16.7685, -56.6464, 0.49 ) }
    dend_26 { pt3dadd( 71.1983, 16.3482, -58.9062, 0.49 ) }
    dend_26 { pt3dadd( 72.1117, 15.9584, -60.305, 0.49 ) }
    dend_26 { pt3dadd( 72.4594, 15.7879, -60.7872, 0.49 ) }
    dend_26 { pt3dadd( 74.5206, 14.6853, -63.4097, 0.49 ) }
    dend_26 { pt3dadd( 74.849, 14.5278, -63.7569, 0.49 ) }
    dend_26 { pt3dadd( 75.4367, 14.2375, -64.3192, 0.49 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 40/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 55.6959, 12.6367, -14.4689, 0.98 ) }
    dend_23 { pt3dadd( 57.1778, 14.5315, -14.9871, 0.98 ) }
    dend_23 { pt3dadd( 58.4127, 16.1443, -15.4162, 0.86 ) }
    dend_23 { pt3dadd( 59.869, 18.1056, -15.9778, 0.86 ) }
    dend_23 { pt3dadd( 61.5324, 20.339, -16.7409, 0.61 ) }
    dend_23 { pt3dadd( 61.6034, 20.4343, -16.7797, 0.61 ) }
    dend_23 { pt3dadd( 63.7326, 23.1741, -18.0291, 0.61 ) }
    dend_23 { pt3dadd( 65.9202, 26.0061, -19.4107, 0.61 ) }
    dend_23 { pt3dadd( 67.1329, 27.519, -20.2204, 0.61 ) }
    dend_23 { pt3dadd( 69.5447, 30.312, -21.7386, 0.61 ) }
    dend_23 { pt3dadd( 71.2849, 32.1423, -22.7746, 0.61 ) }
    dend_23 { pt3dadd( 73.0367, 33.86, -23.7354, 0.61 ) }
    dend_23 { pt3dadd( 74.8193, 35.4555, -24.582, 0.61 ) }
    dend_23 { pt3dadd( 76.764, 37.0583, -25.3697, 0.61 ) }
    dend_23 { pt3dadd( 78.4788, 38.4958, -25.8913, 0.61 ) }
    dend_23 { pt3dadd( 79.8324, 39.701, -26.1649, 0.61 ) }
    dend_23 { pt3dadd( 81.682, 41.4609, -26.4606, 0.61 ) }
    dend_23 { pt3dadd( 83.5093, 43.3145, -26.728, 0.61 ) }
    dend_23 { pt3dadd( 85.6052, 45.6089, -27.0824, 0.61 ) }
    dend_23 { pt3dadd( 87.8375, 48.3547, -27.4936, 0.61 ) }
    dend_23 { pt3dadd( 89.7721, 50.9056, -27.9, 0.61 ) }
    dend_23 { pt3dadd( 90.5788, 52.0142, -28.0668, 0.61 ) }
    dend_23 { pt3dadd( 91.6157, 53.4703, -28.256, 0.61 ) }
    dend_23 { pt3dadd( 92.9421, 55.363, -28.4021, 0.61 ) }
    dend_23 { pt3dadd( 93.1022, 55.6017, -28.4042, 0.61 ) }
    dend_23 { pt3dadd( 94.1036, 57.007, -28.3072, 0.61 ) }
    dend_23 { pt3dadd( 95.4554, 58.9764, -27.9899, 0.61 ) }
    dend_23 { pt3dadd( 96.7834, 60.9783, -27.5528, 0.61 ) }
    dend_23 { pt3dadd( 98.2884, 63.2562, -26.9383, 0.61 ) }
    dend_23 { pt3dadd( 99.668, 65.267, -26.2678, 0.61 ) }
    dend_23 { pt3dadd( 101.08, 67.3348, -25.544, 0.61 ) }
    dend_23 { pt3dadd( 102.28, 69.159, -24.8855, 0.61 ) }
    dend_23 { pt3dadd( 103.184, 70.5382, -24.3746, 0.61 ) }
    dend_23 { pt3dadd( 104.493, 72.4364, -23.6499, 0.61 ) }
    dend_23 { pt3dadd( 105.459, 73.8077, -23.1851, 0.61 ) }
    dend_23 { pt3dadd( 106.221, 74.7718, -22.7726, 0.61 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 76/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 54.43, -9.51532, -4.02373, 0.61 ) }
    dend_21 { pt3dadd( 55.2911, -7.5328, -5.40241, 0.61 ) }
    dend_21 { pt3dadd( 55.8835, -6.16884, -6.35092, 0.61 ) }
    dend_21 { pt3dadd( 56.6321, -4.44543, -7.54939, 0.61 ) }
    dend_21 { pt3dadd( 57.4729, -2.50982, -8.89544, 0.61 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 81/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 54.43, -9.51532, -4.02373, 1.11 ) }
    dend_18 { pt3dadd( 55.86, -11.1931, -5.16857, 1.11 ) }
    dend_18 { pt3dadd( 57.1549, -12.3088, -6.05914, 1.11 ) }
    dend_18 { pt3dadd( 58.4018, -13.2093, -6.93427, 1.11 ) }
    dend_18 { pt3dadd( 59.584, -14.0002, -7.77386, 1.11 ) }
    dend_18 { pt3dadd( 61.537, -15.3041, -9.26308, 1.11 ) }
    dend_18 { pt3dadd( 63.0394, -16.3071, -10.4087, 1.11 ) }
    dend_18 { pt3dadd( 65.1371, -17.4927, -12.0406, 1.11 ) }
    dend_18 { pt3dadd( 67.0231, -18.3892, -13.4465, 1.11 ) }
    dend_18 { pt3dadd( 67.0776, -18.4108, -13.4852, 1.11 ) }
    dend_18 { pt3dadd( 69.1129, -19.1226, -14.9396, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -61.063, 57.2993, 11.9243, 0.61 ) }
    dend_9 { pt3dadd( -61.3891, 58.9479, 12.6683, 0.61 ) }
    dend_9 { pt3dadd( -61.875, 61.4034, 13.7766, 0.61 ) }
    dend_9 { pt3dadd( -62.1494, 62.7903, 14.4026, 0.49 ) }
    dend_9 { pt3dadd( -62.4583, 64.3517, 15.1073, 0.49 ) }
    dend_9 { pt3dadd( -62.7077, 65.6121, 15.6762, 0.49 ) }
    dend_9 { pt3dadd( -63.1591, 67.8939, 16.7061, 0.49 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 99/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -61.063, 57.2993, 11.9243, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( -62.8182, 58.2583, 12.9576, 0.61 ) }
    dend_8 { pt3dadd( -62.8747, 58.288, 12.9877, 0.61 ) }
    dend_8 { pt3dadd( -65.4246, 59.593, 14.2826, 0.61 ) }
    dend_8 { pt3dadd( -66.8115, 60.2053, 14.9684, 0.61 ) }
    dend_8 { pt3dadd( -67.9497, 60.6156, 15.5277, 0.61 ) }
    dend_8 { pt3dadd( -69.3786, 60.9234, 16.2359, 0.61 ) }
    dend_8 { pt3dadd( -70.7032, 61.0664, 16.8855, 0.61 ) }
    dend_8 { pt3dadd( -70.8153, 61.0647, 16.9379, 0.61 ) }
    dend_8 { pt3dadd( -72.7324, 60.7389, 17.8044, 0.61 ) }
    dend_8 { pt3dadd( -74.6909, 60.2322, 18.6603, 0.61 ) }
    dend_8 { pt3dadd( -77.4625, 59.4295, 19.7662, 0.61 ) }
    dend_8 { pt3dadd( -79.582, 58.8482, 20.556, 0.61 ) }
    dend_8 { pt3dadd( -81.1111, 58.4974, 21.1139, 0.61 ) }
    dend_8 { pt3dadd( -83.6247, 58.1013, 21.9775, 0.61 ) }
    dend_8 { pt3dadd( -85.5839, 57.8481, 22.5963, 0.61 ) }
    dend_8 { pt3dadd( -87.7259, 57.6731, 23.2022, 0.61 ) }
    dend_8 { pt3dadd( -89.73, 57.7146, 23.6995, 0.61 ) }
    dend_8 { pt3dadd( -90.9483, 57.7863, 23.9728, 0.61 ) }
    dend_8 { pt3dadd( -92.3694, 58.0977, 24.2952, 0.61 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -32.539, 41.0656, 33.0908, 0.61 ) }
    dend_4 { pt3dadd( -33.9829, 40.8236, 34.7156, 0.61 ) }
    dend_4 { pt3dadd( -36.1466, 40.4805, 37.1201, 0.61 ) }
    dend_4 { pt3dadd( -39.9328, 39.8885, 41.1508, 0.61 ) }
    dend_4 { pt3dadd( -42.4097, 39.468, 43.6469, 0.61 ) }
    dend_4 { pt3dadd( -44.3561, 39.1222, 45.5461, 0.61 ) }
    dend_4 { pt3dadd( -45.0318, 39.0077, 46.2375, 0.61 ) }
    dend_4 { pt3dadd( -46.8061, 38.6934, 48.0312, 0.61 ) }
    dend_4 { pt3dadd( -47.6334, 38.5666, 48.9141, 0.61 ) }
    dend_4 { pt3dadd( -48.6745, 38.4152, 49.8105, 0.61 ) }
    dend_4 { pt3dadd( -48.7256, 38.4071, 49.8577, 0.61 ) }
    dend_4 { pt3dadd( -51.745, 37.8369, 52.8764, 0.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -32.539, 41.0656, 33.0908, 0.74 ) }
    dend_3 { pt3dadd( -32.3146, 43.0026, 33.1134, 0.74 ) }
    dend_3 { pt3dadd( -32.2856, 44.7435, 33.1289, 0.74 ) }
    dend_3 { pt3dadd( -32.2933, 45.7309, 33.1355, 0.74 ) }
    dend_3 { pt3dadd( -32.2787, 46.7608, 33.1903, 0.74 ) }
    dend_3 { pt3dadd( -32.2721, 47.0503, 33.2115, 0.74 ) }
    dend_3 { pt3dadd( -32.25, 48.9471, 33.3654, 0.74 ) }
    dend_3 { pt3dadd( -32.2656, 50.6109, 33.5161, 0.74 ) }
    dend_3 { pt3dadd( -32.3124, 52.4134, 33.7074, 0.61 ) }
    dend_3 { pt3dadd( -32.4213, 55.303, 34.0238, 0.61 ) }
    dend_3 { pt3dadd( -32.4255, 55.3754, 34.035, 0.61 ) }
    dend_3 { pt3dadd( -32.5751, 57.3554, 34.3837, 0.61 ) }
    dend_3 { pt3dadd( -32.7759, 59.5076, 34.7866, 0.61 ) }
    dend_3 { pt3dadd( -33.0814, 62.0034, 35.2731, 0.61 ) }
    dend_3 { pt3dadd( -33.3571, 64.1968, 35.855, 0.61 ) }
    dend_3 { pt3dadd( -33.6704, 68.0116, 37.0862, 0.61 ) }
    dend_3 { pt3dadd( -33.8077, 69.8007, 37.6908, 0.61 ) }
    dend_3 { pt3dadd( -33.9456, 71.8484, 38.4383, 0.61 ) }
    dend_3 { pt3dadd( -34.2311, 76.6039, 40.3116, 0.61 ) }
    dend_3 { pt3dadd( -34.4334, 81.9423, 42.5561, 0.61 ) }
    dend_3 { pt3dadd( -34.4672, 86.5588, 44.6513, 0.61 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -16.2002, -92.7076, 34.0447, 0.37 ) }
    dend_31 { pt3dadd( -18.2325, -96.002, 34.9578, 0.37 ) }
    dend_31 { pt3dadd( -18.6805, -96.763, 35.1577, 0.37 ) }
    dend_31 { pt3dadd( -19.219, -97.7456, 35.3991, 0.37 ) }
    dend_31 { pt3dadd( -20.1598, -99.6659, 35.8978, 0.37 ) }
    dend_31 { pt3dadd( -20.7312, -100.924, 36.2337, 0.37 ) }
    dend_31 { pt3dadd( -21.0808, -101.743, 36.4457, 0.37 ) }
    dend_31 { pt3dadd( -21.1199, -101.861, 36.4677, 0.37 ) }
    dend_31 { pt3dadd( -21.3391, -102.513, 36.5959, 0.37 ) }
    dend_31 { pt3dadd( -21.7962, -104.389, 36.9312, 0.37 ) }
    dend_31 { pt3dadd( -21.8231, -104.504, 36.9484, 0.37 ) }
    dend_31 { pt3dadd( -22.2395, -106.033, 37.124, 0.37 ) }
    dend_31 { pt3dadd( -22.6175, -107.118, 37.223, 0.37 ) }
    dend_31 { pt3dadd( -23.1512, -108.318, 37.3515, 0.37 ) }
    dend_31 { pt3dadd( -24.381, -110.509, 37.6011, 0.37 ) }
    dend_31 { pt3dadd( -25.5028, -112.364, 37.7761, 0.37 ) }
    dend_31 { pt3dadd( -25.8503, -112.909, 37.8338, 0.37 ) }
    dend_31 { pt3dadd( -26.947, -114.489, 38.0376, 0.37 ) }
    dend_31 { pt3dadd( -28.6185, -116.658, 38.3752, 0.37 ) }
    dend_31 { pt3dadd( -29.4436, -117.64, 38.5624, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 72/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -16.2002, -92.7076, 34.0447, 0.61 ) }
    dend_30 { pt3dadd( -18.4645, -94.0259, 33.7636, 0.61 ) }
    dend_30 { pt3dadd( -21.1267, -95.5581, 33.4582, 0.61 ) }
    dend_30 { pt3dadd( -23.2713, -96.7035, 33.2434, 0.37 ) }
    dend_30 { pt3dadd( -25.531, -97.9029, 33.0734, 0.37 ) }
    dend_30 { pt3dadd( -27.7922, -99.1268, 32.9361, 0.37 ) }
    dend_30 { pt3dadd( -30.5389, -100.692, 32.795, 0.37 ) }
    dend_30 { pt3dadd( -33.3274, -102.424, 32.6784, 0.37 ) }
    dend_30 { pt3dadd( -35.9763, -104.202, 32.6725, 0.37 ) }
    dend_30 { pt3dadd( -38.5028, -106.099, 32.8285, 0.37 ) }
    dend_30 { pt3dadd( -40.0213, -107.343, 33.0432, 0.37 ) }
    dend_30 { pt3dadd( -41.6873, -108.755, 33.427, 0.37 ) }
    dend_30 { pt3dadd( -43.6478, -110.42, 34.0444, 0.37 ) }
    dend_30 { pt3dadd( -45.3092, -111.814, 34.6928, 0.37 ) }
    dend_30 { pt3dadd( -46.58, -112.934, 35.2818, 0.37 ) }
    dend_30 { pt3dadd( -47.6457, -113.8, 35.8348, 0.37 ) }
    dend_30 { pt3dadd( -49.3553, -114.981, 36.7974, 0.37 ) }
    dend_30 { pt3dadd( -51.8699, -116.234, 38.2383, 0.37 ) }
    dend_30 { pt3dadd( -52.8286, -116.514, 38.7441, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 106.221, 74.7718, -22.7726, 0.49 ) }
    dend_25 { pt3dadd( 107.866, 78.467, -19.1655, 0.49 ) }
    dend_25 { pt3dadd( 108.34, 79.5549, -18.1576, 0.49 ) }
    dend_25 { pt3dadd( 109.217, 81.6214, -16.3065, 0.49 ) }
    dend_25 { pt3dadd( 109.558, 82.4704, -15.5986, 0.49 ) }
    dend_25 { pt3dadd( 110.377, 84.5541, -14.0269, 0.49 ) }
    dend_25 { pt3dadd( 111.102, 86.5492, -12.6658, 0.25 ) }
    dend_25 { pt3dadd( 111.704, 88.4598, -11.6771, 0.25 ) }
    dend_25 { pt3dadd( 112.162, 90.0344, -10.9539, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_25 { pt3dadd( 112.552, 91.5493, -10.3722, 0.25 ) }
    dend_25 { pt3dadd( 113.031, 93.6076, -9.65155, 0.25 ) }
    dend_25 { pt3dadd( 113.641, 96.401, -8.86698, 0.25 ) }
    dend_25 { pt3dadd( 114.234, 99.2364, -8.22351, 0.25 ) }
    dend_25 { pt3dadd( 114.288, 99.5182, -8.16987, 0.25 ) }
    dend_25 { pt3dadd( 114.726, 101.905, -7.77071, 0.25 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 106.221, 74.7718, -22.7726, 0.49 ) }
    dend_24 { pt3dadd( 109.896, 74.7822, -22.4508, 0.49 ) }
    dend_24 { pt3dadd( 112.366, 74.7617, -22.3024, 0.49 ) }
    dend_24 { pt3dadd( 114.268, 74.765, -22.2234, 0.49 ) }
    dend_24 { pt3dadd( 114.768, 74.7699, -22.2077, 0.49 ) }
    dend_24 { pt3dadd( 117.725, 74.7995, -22.2217, 0.49 ) }
    dend_24 { pt3dadd( 120.186, 74.7991, -22.2921, 0.49 ) }
    dend_24 { pt3dadd( 120.307, 74.796, -22.3069, 0.49 ) }
    dend_24 { pt3dadd( 121.717, 74.7176, -22.5078, 0.49 ) }
    dend_24 { pt3dadd( 121.894, 74.701, -22.5352, 0.49 ) }
    dend_24 { pt3dadd( 124.187, 74.4892, -22.8686, 0.49 ) }
    dend_24 { pt3dadd( 126.017, 74.298, -23.0772, 0.49 ) }
    dend_24 { pt3dadd( 126.622, 74.2543, -23.1429, 0.49 ) }
    dend_24 { pt3dadd( 127.551, 74.1984, -23.2315, 0.49 ) }
    dend_24 { pt3dadd( 127.665, 74.197, -23.2396, 0.49 ) }
    dend_24 { pt3dadd( 130.578, 74.3279, -23.3646, 0.49 ) }
    dend_24 { pt3dadd( 131.064, 74.4, -23.3646, 0.49 ) }
    dend_24 { pt3dadd( 131.913, 74.6393, -23.4029, 0.49 ) }
    dend_24 { pt3dadd( 132.086, 74.7036, -23.4155, 0.49 ) }
    dend_24 { pt3dadd( 134.228, 75.5968, -23.6116, 0.49 ) }
    dend_24 { pt3dadd( 134.35, 75.65, -23.6247, 0.49 ) }
    dend_24 { pt3dadd( 135.69, 76.3177, -23.7819, 0.49 ) }
    dend_24 { pt3dadd( 138.151, 77.6704, -24.0487, 0.49 ) }
    dend_24 { pt3dadd( 138.73, 78.0102, -24.1055, 0.49 ) }
    dend_24 { pt3dadd( 140.33, 78.8744, -24.2331, 0.49 ) }
    dend_24 { pt3dadd( 140.444, 78.9245, -24.2398, 0.49 ) }
    dend_24 { pt3dadd( 143.123, 79.8739, -24.3426, 0.49 ) }
    dend_24 { pt3dadd( 145.22, 80.4679, -24.3834, 0.49 ) }
    dend_24 { pt3dadd( 146.748, 80.8072, -24.4152, 0.49 ) }
    dend_24 { pt3dadd( 149.765, 81.4134, -24.5213, 0.49 ) }
    dend_24 { pt3dadd( 152.901, 82.0589, -24.6664, 0.49 ) }
    dend_24 { pt3dadd( 155.075, 82.5117, -24.7838, 0.49 ) }
    dend_24 { pt3dadd( 156.483, 82.7821, -24.8729, 0.49 ) }
    dend_24 { pt3dadd( 158.414, 83.2211, -25.0105, 0.49 ) }
    dend_24 { pt3dadd( 160.337, 83.7894, -25.1637, 0.49 ) }
    dend_24 { pt3dadd( 161.61, 84.3927, -25.3074, 0.49 ) }
    dend_24 { pt3dadd( 163.338, 85.6432, -25.5597, 0.49 ) }
    dend_24 { pt3dadd( 163.457, 85.764, -25.5797, 0.49 ) }
    dend_24 { pt3dadd( 164.37, 87.0652, -25.7863, 0.49 ) }
    dend_24 { pt3dadd( 164.449, 87.2176, -25.8076, 0.49 ) }
    dend_24 { pt3dadd( 165.309, 89.3929, -26.1171, 0.49 ) }
    dend_24 { pt3dadd( 166.004, 91.4455, -26.3983, 0.49 ) }
    dend_24 { pt3dadd( 166.689, 93.6331, -26.6578, 0.49 ) }
    dend_24 { pt3dadd( 167.586, 96.6294, -27.0063, 0.49 ) }
    dend_24 { pt3dadd( 168.208, 98.8479, -27.2549, 0.49 ) }
    dend_24 { pt3dadd( 168.632, 100.414, -27.4124, 0.49 ) }
    dend_24 { pt3dadd( 169.106, 102.257, -27.5492, 0.49 ) }
    dend_24 { pt3dadd( 169.567, 103.992, -27.6779, 0.49 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 54/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 69.1129, -19.1226, -14.9396, 0.86 ) }
    dend_20 { pt3dadd( 70.6789, -24.1553, -19.446, 0.86 ) }
    dend_20 { pt3dadd( 71.4526, -26.4865, -21.6287, 0.74 ) }
    dend_20 { pt3dadd( 72.0309, -28.1649, -23.2825, 0.74 ) }
    dend_20 { pt3dadd( 72.5957, -29.8047, -24.9481, 0.74 ) }
    dend_20 { pt3dadd( 73.355, -32.1571, -27.3987, 0.61 ) }
    dend_20 { pt3dadd( 73.9109, -34.0436, -29.436, 0.61 ) }
    dend_20 { pt3dadd( 74.3764, -35.7573, -31.4931, 0.61 ) }
    dend_20 { pt3dadd( 74.7174, -37.1925, -33.5022, 0.61 ) }
    dend_20 { pt3dadd( 75.0977, -38.8642, -35.9582, 0.61 ) }
    dend_20 { pt3dadd( 75.4971, -40.6196, -38.6128, 0.61 ) }
    dend_20 { pt3dadd( 75.8186, -42.219, -41.0324, 0.61 ) }
    dend_20 { pt3dadd( 76.3936, -45.8329, -46.61, 0.61 ) }
    dend_20 { pt3dadd( 76.7397, -48.2486, -50.4465, 0.61 ) }
    dend_20 { pt3dadd( 76.8945, -49.379, -52.29, 0.61 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 69/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 69.1129, -19.1226, -14.9396, 0.86 ) }
    dend_19 { pt3dadd( 73.598, -19.257, -17.6543, 0.86 ) }
    dend_19 { pt3dadd( 75.0838, -19.4424, -18.5074, 0.86 ) }
    dend_19 { pt3dadd( 77.496, -19.8372, -19.8737, 0.86 ) }
    dend_19 { pt3dadd( 79.2552, -20.2686, -20.9307, 0.74 ) }
    dend_19 { pt3dadd( 79.3557, -20.3038, -20.9945, 0.74 ) }
    dend_19 { pt3dadd( 80.5196, -20.8379, -21.756, 0.74 ) }
    dend_19 { pt3dadd( 83.1551, -22.714, -23.1869, 0.74 ) }
    dend_19 { pt3dadd( 83.3189, -22.8678, -23.2713, 0.74 ) }
    dend_19 { pt3dadd( 85.2644, -25.0955, -24.2114, 0.74 ) }
    dend_19 { pt3dadd( 86.6753, -26.9113, -24.8606, 0.74 ) }
    dend_19 { pt3dadd( 87.8275, -28.5164, -25.3226, 0.74 ) }
    dend_19 { pt3dadd( 89.4006, -30.9807, -25.8198, 0.61 ) }
    dend_19 { pt3dadd( 90.6119, -33.1334, -26.0247, 0.61 ) }
    dend_19 { pt3dadd( 91.3424, -34.5007, -26.0874, 0.61 ) }
    dend_19 { pt3dadd( 91.3995, -34.6135, -26.0846, 0.61 ) }
    dend_19 { pt3dadd( 92.0874, -36.0077, -26.0184, 0.61 ) }
    dend_19 { pt3dadd( 92.9965, -37.9404, -25.9475, 0.61 ) }
    dend_19 { pt3dadd( 94.2872, -40.618, -25.8561, 0.61 ) }
    dend_19 { pt3dadd( 94.3401, -40.7212, -25.8501, 0.61 ) }
    dend_19 { pt3dadd( 95.4223, -42.7184, -25.7037, 0.61 ) }
    dend_19 { pt3dadd( 95.4821, -42.8172, -25.6953, 0.61 ) }
    dend_19 { pt3dadd( 96.8606, -44.8608, -25.49, 0.61 ) }
    dend_19 { pt3dadd( 99.0146, -47.7623, -25.1726, 0.61 ) }
    dend_19 { pt3dadd( 99.0605, -47.8175, -25.1666, 0.61 ) }
    dend_19 { pt3dadd( 100.302, -49.1226, -25.1395, 0.61 ) }
    dend_19 { pt3dadd( 102.072, -50.7551, -25.2111, 0.61 ) }
    dend_19 { pt3dadd( 103.079, -51.6094, -25.3124, 0.61 ) }
    dend_19 { pt3dadd( 104.757, -52.9053, -25.5495, 0.61 ) }
    dend_19 { pt3dadd( 107.122, -54.5969, -25.9413, 0.61 ) }
    dend_19 { pt3dadd( 111.471, -57.5661, -26.6726, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 114.229, -59.2675, -27.1228, 0.61 ) }
    dend_19 { pt3dadd( 117.046, -60.8934, -27.5606, 0.61 ) }
    dend_19 { pt3dadd( 118.582, -61.7129, -27.777, 0.61 ) }
    dend_19 { pt3dadd( 121.391, -63.0686, -28.1111, 0.61 ) }
    dend_19 { pt3dadd( 121.514, -63.1218, -28.1206, 0.61 ) }
    dend_19 { pt3dadd( 124.874, -64.3903, -28.1731, 0.61 ) }
    dend_19 { pt3dadd( 126.993, -65.0844, -28.1638, 0.61 ) }
    dend_19 { pt3dadd( 129.121, -65.7031, -28.0998, 0.61 ) }
    dend_19 { pt3dadd( 130.912, -66.2002, -28.003, 0.61 ) }
    dend_19 { pt3dadd( 132.993, -66.7926, -27.8593, 0.61 ) }
    dend_19 { pt3dadd( 134.646, -67.2824, -27.6659, 0.61 ) }
    dend_19 { pt3dadd( 134.763, -67.3182, -27.6477, 0.61 ) }
    dend_19 { pt3dadd( 137.252, -68.0573, -27.2166, 0.61 ) }
    dend_19 { pt3dadd( 141.429, -69.3499, -26.4316, 0.61 ) }
    dend_19 { pt3dadd( 144.905, -70.3537, -25.7121, 0.61 ) }
    dend_19 { pt3dadd( 148.541, -71.2827, -24.9501, 0.61 ) }
    dend_19 { pt3dadd( 148.648, -71.3047, -24.9238, 0.61 ) }
    dend_19 { pt3dadd( 151.12, -71.6991, -24.2609, 0.61 ) }
    dend_19 { pt3dadd( 151.238, -71.7109, -24.226, 0.61 ) }
    dend_19 { pt3dadd( 154.204, -71.7266, -23.3569, 0.61 ) }
    dend_19 { pt3dadd( 157.148, -71.4716, -22.4362, 0.61 ) }
    dend_19 { pt3dadd( 159.574, -71.1307, -21.674, 0.61 ) }
    dend_19 { pt3dadd( 161.304, -70.8307, -21.1174, 0.61 ) }
    dend_19 { pt3dadd( 161.41, -70.8112, -21.08, 0.61 ) }
    dend_19 { pt3dadd( 164.682, -70.2249, -19.8885, 0.61 ) }
    dend_19 { pt3dadd( 168.428, -69.5891, -18.3364, 0.61 ) }
    dend_19 { pt3dadd( 170.84, -69.2021, -17.0744, 0.61 ) }
    dend_19 { pt3dadd( 172.475, -68.9055, -16.0998, 0.61 ) }
    dend_19 { pt3dadd( 175.507, -68.2606, -14.0515, 0.61 ) }
    dend_19 { pt3dadd( 175.563, -68.2475, -14.0115, 0.61 ) }
    dend_19 { pt3dadd( 179.081, -67.3737, -11.3576, 0.61 ) }
    dend_19 { pt3dadd( 182.979, -66.3393, -8.38103, 0.37 ) }
    dend_19 { pt3dadd( 188.375, -64.7744, -4.33377, 0.37 ) }
    dend_19 { pt3dadd( 191.348, -63.8195, -2.08943, 0.37 ) }
    dend_19 { pt3dadd( 194.345, -62.728, 0.0867805, 0.37 ) }
    dend_19 { pt3dadd( 196.117, -62.0414, 1.3107, 0.37 ) }
    dend_19 { pt3dadd( 198.406, -61.0394, 2.82071, 0.37 ) }
    dend_19 { pt3dadd( 200.543, -59.9937, 4.14277, 0.37 ) }
    dend_19 { pt3dadd( 202.346, -59.074, 5.32086, 0.37 ) }
    dend_19 { pt3dadd( 203.809, -58.2816, 6.37379, 0.37 ) }
    dend_19 { pt3dadd( 203.898, -58.2289, 6.44365, 0.37 ) }
    dend_19 { pt3dadd( 207.406, -55.992, 8.97301, 0.37 ) }
    dend_19 { pt3dadd( 208.627, -55.173, 9.78736, 0.37 ) }
    dend_19 { pt3dadd( 210.792, -53.6323, 10.9434, 0.37 ) }
    dend_19 { pt3dadd( 213.931, -50.9924, 12.0266, 0.37 ) }
    dend_19 { pt3dadd( 214.832, -50.0986, 12.1925, 0.37 ) }
    dend_19 { pt3dadd( 217.73, -46.9052, 12.2468, 0.37 ) }
    dend_19 { pt3dadd( 217.81, -46.8075, 12.2316, 0.37 ) }
    dend_19 { pt3dadd( 220.25, -43.5069, 11.5445, 0.37 ) }
    dend_19 { pt3dadd( 222.169, -40.5823, 10.8979, 0.37 ) }
    dend_19 { pt3dadd( 223.64, -38.2872, 10.4905, 0.37 ) }
    dend_19 { pt3dadd( 224.093, -37.617, 10.4755, 0.37 ) }
    dend_19 { pt3dadd( 225.179, -36.1901, 10.6696, 0.37 ) }
    dend_19 { pt3dadd( 226.647, -34.5104, 11.1265, 0.37 ) }
    dend_19 { pt3dadd( 229.214, -32.021, 12.2721, 0.37 ) }
    dend_19 { pt3dadd( 231.233, -30.3668, 13.4476, 0.37 ) }
    dend_19 { pt3dadd( 233.597, -28.678, 14.9728, 0.37 ) }
    dend_19 { pt3dadd( 235.583, -27.3703, 16.328, 0.37 ) }
    dend_19 { pt3dadd( 237.727, -26.0117, 17.8741, 0.37 ) }
    dend_19 { pt3dadd( 239.737, -24.7189, 19.3623, 0.37 ) }
    dend_19 { pt3dadd( 243.496, -22.0732, 22.1614, 0.37 ) }
    dend_19 { pt3dadd( 245.119, -20.7491, 23.3498, 0.37 ) }
    dend_19 { pt3dadd( 246.647, -19.3689, 24.4015, 0.37 ) }
    dend_19 { pt3dadd( 248.541, -17.5213, 25.6206, 0.37 ) }
    dend_19 { pt3dadd( 250.359, -15.8166, 26.5433, 0.37 ) }
    dend_19 { pt3dadd( 252.152, -14.2763, 27.2241, 0.37 ) }
    dend_19 { pt3dadd( 253.464, -13.3298, 27.469, 0.37 ) }
    dend_19 { pt3dadd( 255.825, -12.1355, 27.7397, 0.37 ) }
    dend_19 { pt3dadd( 257.418, -11.7289, 27.8028, 0.37 ) }
    dend_19 { pt3dadd( 259.708, -11.5743, 27.8007, 0.37 ) }
    dend_19 { pt3dadd( 261.384, -11.6598, 27.7769, 0.37 ) }
    dend_19 { pt3dadd( 264.07, -11.9725, 27.7062, 0.37 ) }
    dend_19 { pt3dadd( 266.769, -12.3478, 27.5808, 0.37 ) }
    dend_19 { pt3dadd( 269.001, -12.6845, 27.4308, 0.37 ) }
    dend_19 { pt3dadd( 271.328, -12.9975, 27.2765, 0.37 ) }
    dend_19 { pt3dadd( 273.266, -13.2246, 27.1579, 0.37 ) }
    dend_19 { pt3dadd( 275.678, -13.4152, 27.0364, 0.37 ) }
    dend_19 { pt3dadd( 278.582, -13.564, 26.9467, 0.37 ) }
    dend_19 { pt3dadd( 278.748, -13.5625, 26.9377, 0.37 ) }
    dend_19 { pt3dadd( 279.978, -13.5307, 26.8485, 0.37 ) }
    dend_19 { pt3dadd( 281.689, -13.4684, 26.7059, 0.37 ) }
    dend_19 { pt3dadd( 282.846, -13.4453, 26.608, 0.37 ) }
    dend_19 { pt3dadd( 284.827, -13.422, 26.4499, 0.37 ) }
    dend_19 { pt3dadd( 287.011, -13.4379, 26.2982, 0.37 ) }
    dend_19 { pt3dadd( 288.611, -13.4977, 26.1986, 0.37 ) }
    dend_19 { pt3dadd( 290.455, -13.618, 26.093, 0.37 ) }
    dend_19 { pt3dadd( 292.919, -13.8297, 25.9742, 0.37 ) }
    dend_19 { pt3dadd( 294.578, -13.9757, 25.9182, 0.37 ) }
    dend_19 { pt3dadd( 295.704, -14.0883, 25.8988, 0.37 ) }
    dend_19 { pt3dadd( 298.144, -14.3598, 25.9059, 0.37 ) }
    dend_19 { pt3dadd( 298.277, -14.3747, 25.9032, 0.37 ) }
    dend_19 { pt3dadd( 300.718, -14.6924, 25.802, 0.37 ) }
    dend_19 { pt3dadd( 303.814, -15.1078, 25.6239, 0.37 ) }
    dend_19 { pt3dadd( 305.167, -15.3486, 25.5367, 0.37 ) }
    dend_19 { pt3dadd( 306.14, -15.5349, 25.4388, 0.37 ) }
    dend_19 { pt3dadd( 308.08, -15.9056, 25.1996, 0.37 ) }
    dend_19 { pt3dadd( 309.669, -16.1778, 24.9921, 0.37 ) }
    dend_19 { pt3dadd( 311.144, -16.3446, 24.7926, 0.37 ) }
    dend_19 { pt3dadd( 313.791, -16.5224, 24.2846, 0.37 ) }
    dend_19 { pt3dadd( 316.65, -16.5117, 23.5977, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( 318.892, -16.447, 22.9088, 0.37 ) }
    dend_19 { pt3dadd( 320.663, -16.329, 22.2881, 0.37 ) }
    dend_19 { pt3dadd( 322.954, -16.0887, 21.2552, 0.37 ) }
    dend_19 { pt3dadd( 325.931, -15.7372, 19.706, 0.37 ) }
    dend_19 { pt3dadd( 328.454, -15.3353, 18.1991, 0.37 ) }
    dend_19 { pt3dadd( 330.56, -14.9915, 16.827, 0.37 ) }
    dend_19 { pt3dadd( 331.692, -14.8286, 16.0182, 0.37 ) }
    dend_19 { pt3dadd( 334.419, -14.4757, 13.9729, 0.37 ) }
    dend_19 { pt3dadd( 335.887, -14.303, 12.8605, 0.37 ) }
    dend_19 { pt3dadd( 337.744, -14.044, 11.5307, 0.37 ) }
    dend_19 { pt3dadd( 339.706, -13.7138, 10.1714, 0.37 ) }
    dend_19 { pt3dadd( 342.306, -13.1595, 8.57622, 0.37 ) }
    dend_19 { pt3dadd( 345.361, -12.5815, 6.99236, 0.37 ) }
    dend_19 { pt3dadd( 345.424, -12.5701, 6.96568, 0.37 ) }
    dend_19 { pt3dadd( 347.71, -12.1367, 6.26926, 0.37 ) }
    dend_19 { pt3dadd( 349.07, -11.879, 6.12327, 0.37 ) }
    dend_19 { pt3dadd( 353.235, -10.9797, 6.19627, 0.37 ) }
    dend_19 { pt3dadd( 356.1, -10.263, 6.79136, 0.37 ) }
    dend_19 { pt3dadd( 356.156, -10.2486, 6.80929, 0.37 ) }
    dend_19 { pt3dadd( 360.349, -9.14857, 8.41134, 0.37 ) }
    dend_19 { pt3dadd( 363.903, -8.18797, 10.0202, 0.37 ) }
    dend_19 { pt3dadd( 368.406, -6.96323, 12.3106, 0.37 ) }
    dend_19 { pt3dadd( 373.15, -5.62649, 15.0154, 0.37 ) }
    dend_19 { pt3dadd( 373.675, -5.46724, 15.3035, 0.37 ) }
    dend_19 { pt3dadd( 374.098, -5.35908, 15.5284, 0.37 ) }
    dend_19 { pt3dadd( 374.72, -5.23644, 15.8538, 0.37 ) }
    dend_19 { pt3dadd( 376.635, -4.92922, 16.6945, 0.37 ) }
    dend_19 { pt3dadd( 377.428, -4.83177, 17.04, 0.37 ) }
    dend_19 { pt3dadd( 379.192, -4.58289, 17.4861, 0.37 ) }
    dend_19 { pt3dadd( 380.455, -4.33757, 17.8168, 0.37 ) }
    dend_19 { pt3dadd( 382.531, -3.87301, 18.3706, 0.37 ) }
    dend_19 { pt3dadd( 383.664, -3.57012, 18.7368, 0.37 ) }
    dend_19 { pt3dadd( 383.891, -3.49385, 18.834, 0.37 ) }
    dend_19 { pt3dadd( 386.017, -2.54015, 19.9661, 0.37 ) }
    dend_19 { pt3dadd( 386.533, -2.28308, 20.3025, 0.37 ) }
    dend_19 { pt3dadd( 386.709, -2.18431, 20.4454, 0.37 ) }
    dend_19 { pt3dadd( 389.151, -0.841224, 22.6481, 0.37 ) }
    dend_19 { pt3dadd( 391.074, 0.200251, 24.6489, 0.37 ) }
    dend_19 { pt3dadd( 393.063, 1.29521, 26.8601, 0.37 ) }
    dend_19 { pt3dadd( 394.623, 2.2208, 28.7086, 0.37 ) }
    dend_19 { pt3dadd( 396.613, 3.42084, 31.1527, 0.37 ) }
    dend_19 { pt3dadd( 397.233, 3.81307, 31.9224, 0.37 ) }
    dend_19 { pt3dadd( 399.151, 5.14167, 34.4853, 0.37 ) }
    dend_19 { pt3dadd( 399.82, 5.60795, 35.4082, 0.37 ) }
    dend_19 { pt3dadd( 400.545, 6.10491, 36.4435, 0.37 ) }
    dend_19 { pt3dadd( 402.258, 7.40803, 38.7581, 0.37 ) }
    dend_19 { pt3dadd( 402.97, 7.9597, 39.6167, 0.37 ) }
    dend_19 { pt3dadd( 404.828, 9.64259, 41.9554, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_15, dend_12, dend_11, dend_0, axon_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, axon_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_27 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_13 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_26 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_30 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_24 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_15 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_39 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_16 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_38 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_37 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_22 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_33 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_28 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_29 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_31 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_25 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 5
    dend_27 nseg = 3
    dend_13 nseg = 3
    dend_6 nseg = 3
    dend_10 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_26 nseg = 3
    dend_23 nseg = 5
    dend_3 nseg = 3
    dend_30 nseg = 3
    dend_24 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 21
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L1_SLAC_9fb2ec760b_0_0


