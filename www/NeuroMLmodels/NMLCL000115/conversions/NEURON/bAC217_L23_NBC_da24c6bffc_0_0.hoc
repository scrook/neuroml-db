// Cell: bAC217_L23_NBC_da24c6bffc_0_0
/*
{
  "id" : "bAC217_L23_NBC_da24c6bffc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.36225, -9.19447, -1.05898, 3.37379", "-7.5192, -8.3328, -0.983264, 5.59841", "-6.67615, -7.47114, -0.907549, 5.3333", "-5.8331, -6.60947, -0.831834, 5.68073", "-4.99005, -5.7478, -0.756119, 6.02816", "-4.147, -4.88613, -0.680404, 6.37559", "-3.30395, -4.02446, -0.604689, 6.72117", "-2.46089, -3.16279, -0.528974, 6.8656", "-1.61784, -2.30113, -0.453259, 6.93412", "-0.774793, -1.43946, -0.377544, 6.84096", "0.0682572, -0.577789, -0.301829, 6.68704", "0.911308, 0.28388, -0.226114, 6.6716", "1.75436, 1.14555, -0.150399, 6.90842", "2.59741, 2.00722, -0.0746836, 7.45096", "3.44046, 2.86888, 0.00103138, 8.43414", "4.28351, 3.73055, 0.0767464, 9.41614", "5.12656, 4.59222, 0.152461, 10.0048", "5.96961, 5.45389, 0.228176, 10.3326", "6.81266, 6.31556, 0.303891, 9.50982", "7.65571, 7.17723, 0.379606, 7.06842", "8.49876, 8.03889, 0.455321, 3.91086" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "7.80497, 1.11839, 15.3717, 0.83", "7.92886, -1.56946, 16.5299, 0.83", "8.06722, -3.95705, 17.6302, 0.83", "8.25444, -5.92111, 18.547, 0.83", "8.81581, -9.76203, 20.3483, 1.38", "9.43997, -12.9987, 21.8144, 0.83", "10.0875, -15.883, 23.0363, 0.83", "10.7449, -18.4842, 24.0943, 0.55", "11.6291, -21.1535, 25.1039, 1.11", "12.6888, -23.4821, 25.8372, 0.55", "13.8319, -25.3768, 26.204, 0.55", "15.3916, -27.5034, 26.3712, 0.55", "16.9424, -29.3921, 26.2698, 0.55", "18.239, -30.8933, 25.9632, 0.55", "19.5973, -32.387, 25.3189, 0.55", "21.1612, -34.1702, 24.2055, 0.55", "22.0251, -35.2455, 23.4436, 1.11", "23.3829, -37.179, 22.0612, 0.28", "24.1583, -38.4884, 21.1463, 0.55", "25.928, -41.9495, 18.8683, 0.55", "26.9556, -44.1696, 17.5726, 0.55", "28.1859, -47.0641, 16.0676, 0.28", "29.0276, -49.1448, 15.1926, 0.83", "30.4785, -52.9845, 13.6064, 0.28", "30.9185, -54.2405, 13.107, 0.55", "31.6567, -56.2918, 12.3105, 0.28", "32.4216, -58.1445, 11.4884, 0.28", "33.0462, -59.5215, 10.7219, 0.83", "35.415, -64.5188, 7.66534, 0.28", "35.9063, -65.5923, 7.01131, 1.11", "36.9548, -67.9449, 5.58096, 0.28", "37.657, -69.6475, 4.53145, 0.83", "39.5084, -74.235, 1.82676, 0.28", "40.0319, -75.7984, 0.992176, 0.55", "40.5281, -77.7394, 0.222707, 0.28", "40.8183, -79.1981, -0.333449, 1.11", "41.1841, -81.6684, -1.28938, 0.28", "41.3594, -83.1194, -1.87875, 0.83", "41.9281, -87.9094, -3.94299, 0.28", "42.5071, -92.1863, -5.95545, 0.28", "42.779, -93.9421, -6.78238, 0.55", "43.1913, -96.3598, -7.87214, 0.28", "43.3266, -97.0952, -8.15207, 0.55", "43.8, -99.4507, -8.9063, 0.28", "44.2095, -101.191, -9.28703, 0.83", "44.9466, -104.198, -9.68393, 0.28", "45.1218, -104.942, -9.72152, 0.55", "45.8829, -108.251, -9.63862, 0.28", "46.2725, -110.013, -9.54013, 0.55", "46.4863, -111.053, -9.41455, 0.28", "46.8024, -112.631, -9.22896, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.135, 1.55539, 1.42168, 0.83", "11.2779, 1.1701, 0.383288, 0.83", "12.9442, -0.0706676, -1.67765, 1.11", "14.1331, -1.08889, -3.1468, 1.11", "16.3485, -2.9095, -5.77677, 1.38", "18.3797, -4.35912, -7.88108, 1.11", "19.7218, -5.29487, -9.1487, 1.66", "21.8274, -7.08695, -11.2543, 0.83", "22.7546, -8.13888, -12.3402, 0.83", "23.5304, -9.27012, -13.4324, 1.11", "24.8822, -11.7839, -15.8189, 1.11", "25.5497, -12.979, -17.0894, 1.11", "26.5374, -14.828, -19.1299, 0.83", "27.3691, -16.6847, -21.1799, 0.83", "27.9031, -18.4214, -23.105, 0.83", "28.3086, -20.7751, -25.679, 0.83", "28.3962, -24.3888, -29.856, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.38497, 8.95589, 2.58168, 2.49", "10.241, 12.4706, 1.43095, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.93503, -6.44361, -4.25832, 0.83", "-11.9524, -5.70035, -4.28663, 0.83", "-15.2952, -4.01318, -4.31508, 0.83", "-17.2398, -2.74486, -4.34756, 0.55", "-19.9012, -0.809287, -4.40205, 0.83", "-21.4698, 0.436303, -4.43578, 0.83", "-23.8738, 2.45854, -4.48607, 1.11", "-25.8895, 4.41887, -4.52861, 0.83", "-27.3107, 5.88547, -4.55524, 0.83", "-28.4801, 7.03373, -4.57263, 1.11", "-30.9485, 9.19921, -4.60369, 0.83", "-33.2024, 11.2083, -4.64985, 0.83", "-35.5545, 13.3389, -4.83814, 0.83", "-38.2941, 15.7548, -5.17873, 1.11", "-40.6453, 17.8986, -5.5011, 0.83", "-42.085, 19.2957, -5.70141, 0.83", "-45.2841, 22.6054, -6.15102, 0.83", "-47.8296, 25.4003, -6.49366, 0.55", "-50.2981, 28.2778, -6.70266, 0.55", "-52.2703, 30.6143, -6.7078, 0.83", "-54.4839, 33.1873, -6.44932, 0.83", "-56.0092, 34.8833, -6.18307, 0.55", "-57.5807, 36.4615, -5.77925, 0.83", "-59.272, 38.2653, -5.11335, 0.55", "-61.2277, 40.5414, -4.21078, 0.55", "-63.5895, 43.0802, -3.11919, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.47503, -9.81611, -6.25832, 2.49", "-7.49471, -14.659, -6.18105, 2.49", "-8.08946, -17.4837, -6.13598, 1.66", "-8.66336, -20.2094, -6.09249, 2.77", "-9.16558, -22.5946, -6.05444, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.49876, 8.03889, 0.455321, 0.55", "18.9889, 18.7607, 0.455321, 0.55", "29.479, 29.4825, 0.455321, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "28.3962, -24.3888, -29.856, 0.55", "29.6498, -25.1402, -31.4091, 0.55", "30.9974, -26.1252, -32.9955, 0.55", "35.379, -29.6813, -38.0402, 0.55", "37.1472, -31.0747, -39.9608, 0.55", "38.691, -32.1623, -41.5544, 0.55", "41.3384, -33.9093, -44.1878, 0.83", "43.9088, -35.4385, -46.6596, 0.83", "46.1194, -36.7616, -48.7832, 0.55", "47.2844, -37.52, -49.9406, 0.55", "49.2644, -38.7941, -52.3472, 0.55", "50.6155, -39.5993, -54.1519, 0.83", "51.5243, -40.1902, -55.4847, 0.28", "53.109, -41.3589, -57.9987, 0.55", "55.2802, -43.2738, -61.669, 0.83", "57.2946, -45.2615, -64.9372, 0.55", "58.4394, -46.443, -66.5639, 0.55", "60.1663, -48.0361, -68.5366, 0.55", "61.9633, -49.4693, -70.1161, 0.28", "63.214, -50.3086, -70.912, 0.83", "67.0784, -52.5194, -72.6792, 0.55", "69.5564, -53.6795, -73.5719, 0.28", "72.6702, -54.814, -74.705, 0.55", "74.4439, -55.3146, -75.3148, 0.28", "76.0913, -55.7284, -75.8217, 0.55", "78.1941, -56.1651, -76.5671, 0.28", "80.1691, -56.5008, -77.386, 0.55", "83.2556, -56.9673, -78.8665, 0.28", "84.9224, -57.2685, -79.8424, 0.55", "86.5745, -57.6932, -80.9826, 0.55", "88.4656, -58.2151, -83.3178, 0.28", "89.0905, -58.3665, -84.2848, 0.28", "89.8777, -58.5789, -85.7532, 0.55", "91.5631, -59.0744, -89.2933, 0.28", "92.9291, -59.4842, -92.3817, 0.83", "98.3588, -61.1122, -105.086, 0.28", "98.932, -61.2775, -106.509, 0.55", "100.088, -61.5746, -109.476, 0.55", "101.233, -61.8714, -112.495, 0.28", "102.114, -62.0815, -114.717, 0.55", "105.104, -62.761, -121.761, 0.55", "107.858, -63.5922, -127.247, 0.55", "109.196, -63.9933, -129.803, 0.28", "110.139, -64.2393, -131.492, 0.55", "110.997, -64.4912, -132.991, 0.28", "112.213, -64.9985, -134.989, 0.55", "113.25, -65.6325, -136.581, 0.28", "114.391, -66.486, -138.327, 0.55", "115.32, -67.2091, -139.98, 0.55", "116.681, -68.2093, -142.538, 0.28", "118.091, -69.2834, -145.201, 0.55", "119.804, -70.6547, -148.556, 0.28", "120.944, -71.6051, -150.803, 0.55", "123.096, -73.6266, -155.037, 0.28", "123.657, -74.1262, -156.007, 0.55", "124.98, -75.215, -158.033, 0.28", "126.989, -76.8343, -160.761, 0.55", "128.535, -78.0761, -162.552, 0.28", "130.079, -79.371, -164.223, 0.55", "131.452, -80.6057, -165.681, 0.28", "132.91, -81.9696, -167.369, 0.55", "133.539, -82.5548, -168.203, 0.28", "134.374, -83.2833, -169.604, 0.55", "135.396, -84.269, -171.854, 0.28", "135.76, -84.6217, -172.74, 0.55", "136.026, -84.8952, -173.442, 0.28", "137.012, -86.0281, -176.23, 0.55", "139.379, -89.1525, -183.696, 0.28", "139.833, -89.8497, -185.348, 0.55", "140.229, -90.6078, -186.952, 0.28", "140.546, -91.2401, -188.117, 0.28", "140.999, -92.1576, -189.628, 0.55", "142.01, -94.3059, -192.411, 0.28", "142.949, -96.0899, -194.407, 0.55", "143.957, -97.7551, -196.136, 0.28", "145.341, -99.8652, -198.095, 0.28", "147.258, -102.612, -199.998, 0.83", "148.905, -104.881, -201.055, 0.28", "151.784, -109.153, -201.949, 0.55", "153.738, -112.436, -202.12, 0.28", "154.494, -113.824, -202.069, 0.55", "156.798, -118.77, -201.417, 0.28", "157.726, -121.03, -200.967, 0.55", "158.965, -124.313, -200.312, 0.28", "159.521, -125.905, -199.986, 0.28", "160.068, -127.451, -199.853, 0.55", "161.215, -130.332, -199.818, 0.28", "162.582, -133.258, -200.152, 0.28", "163.314, -134.693, -200.391, 0.55", "165.064, -137.772, -201.07, 0.28", "166.53, -140.218, -201.662, 0.55", "168.182, -142.989, -202.437, 0.28", "169.346, -144.763, -203.176, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "28.3962, -24.3888, -29.856, 1.11", "29.0647, -26.3876, -30.3907, 1.11", "29.9187, -28.6005, -31.053, 0.55", "30.551, -30.1348, -31.5274, 0.55", "31.3458, -31.9687, -32.0756, 0.55", "32.0052, -33.4876, -32.4756, 0.55", "32.7545, -35.1938, -32.9137, 0.83", "33.4994, -36.8362, -33.3051, 0.55", "34.075, -38.0013, -33.511, 0.28", "34.59, -39.021, -33.6553, 0.55", "35.363, -40.6271, -33.7796, 0.28", "35.8135, -41.5846, -33.808, 0.55", "36.5774, -43.1774, -33.92, 0.55", "37.1828, -44.2508, -34.0509, 0.28", "37.4952, -44.7041, -34.1624, 0.55", "38.3289, -45.7706, -34.5404, 0.28", "39.8796, -47.5273, -35.2522, 0.55", "41.543, -49.2099, -35.94, 0.28", "42.7907, -50.3307, -36.4595, 0.83", "44.5631, -51.7887, -37.1326, 0.28", "46.1483, -53.0787, -37.7452, 0.55", "47.3561, -54.0502, -38.2015, 0.28", "49.0691, -55.4643, -38.7597, 0.55", "50.224, -56.4494, -39.0914, 0.55", "51.7489, -57.8477, -39.5461, 0.55", "53.0277, -59.1079, -39.9224, 0.28", "54.0683, -60.1787, -40.2189, 0.55", "54.68, -60.8779, -40.4112, 0.28", "55.3321, -61.6684, -40.5885, 0.55", "55.8526, -62.3006, -40.6659, 0.28", "56.7511, -63.3368, -40.6987, 0.55", "57.7174, -64.3934, -40.6073, 0.28", "59.0839, -65.8644, -40.4049, 0.55", "60.1762, -67.0146, -40.1916, 0.55", "61.4416, -68.3368, -39.8955, 0.28", "62.4305, -69.4193, -39.646, 0.55", "63.4034, -70.5278, -39.3787, 0.28", "64.1595, -71.428, -39.1943, 0.55", "64.5689, -71.9454, -39.0866, 0.28", "64.7876, -72.2457, -39.0517, 0.55", "65.5833, -73.3558, -39.0226, 0.28", "66.6145, -74.7888, -39.1271, 0.55", "67.2501, -75.6138, -39.2265, 0.28", "67.9615, -76.4721, -39.3408, 0.55", "68.9984, -77.6432, -39.5139, 0.28", "69.6718, -78.3583, -39.5326, 0.55", "70.4022, -79.0874, -39.5321, 0.28", "71.2929, -79.9921, -39.5251, 0.55", "72.2054, -80.8873, -39.5106, 0.28", "72.7809, -81.4215, -39.5087, 0.83", "74.8501, -83.2628, -39.4511, 0.28", "76.3708, -84.5636, -39.4182, 0.28", "77.2108, -85.2586, -39.3991, 0.55", "77.8582, -85.7528, -39.4378, 0.28", "79.205, -86.6608, -39.6465, 0.55", "80.1547, -87.2042, -39.8414, 0.28", "81.3722, -87.7376, -40.1495, 0.55", "82.5267, -88.1132, -40.393, 0.28", "83.85, -88.4259, -40.658, 0.55", "85.4219, -88.7056, -41.0431, 0.28", "86.3974, -88.8214, -41.3151, 0.55", "88.142, -88.9653, -41.8653, 0.28", "89.3853, -89.0194, -42.2628, 0.55", "90.4031, -89.0325, -42.5683, 0.28", "91.9913, -89.0643, -42.9111, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "10.241, 12.4706, 1.43095, 1.38", "9.08382, 14.6597, -1.62757, 1.38", "7.65943, 18.0114, -6.79375, 1.38", "7.12166, 20.2297, -10.9941, 1.38", "6.60546, 23.18, -16.5548, 1.11", "6.23366, 25.3764, -20.6627, 1.11", "5.71804, 27.2319, -24.2585, 0.83", "5.05415, 28.8184, -28.0433, 0.83", "2.97052, 32.1096, -36.3122, 1.66", "1.96085, 33.4402, -39.0502, 0.55", "1.49364, 34.1161, -40.0329, 0.55", "-1.31041, 37.8539, -44.3415, 0.55", "-2.68969, 39.4587, -45.8952, 0.28", "-6.05333, 43.4206, -48.9485, 0.83", "-11.1165, 50.1746, -52.9264, 0.55", "-13.1787, 53.5878, -54.7356, 0.55", "-14.5459, 56.7763, -56.1508, 0.55", "-14.9541, 58.3546, -56.7142, 0.55", "-15.383, 60.9202, -57.3711, 0.83", "-15.5581, 64.2921, -57.8955, 0.55", "-15.484, 66.7088, -57.9254, 0.55", "-15.2495, 70.0967, -58.0755, 0.55", "-15.0616, 72.021, -58.2137, 0.55", "-14.8535, 75.4386, -58.6001, 0.55", "-14.8263, 77.6249, -58.9213, 0.55", "-14.909, 80.4782, -59.6343, 0.83", "-15.1633, 83.7306, -60.7013, 0.28", "-15.4619, 85.9607, -61.5679, 0.83", "-15.9576, 89.3414, -62.9506, 0.28", "-16.2871, 91.7296, -63.9635, 0.83", "-16.9598, 96.6228, -66.0105, 0.28", "-17.1832, 98.5178, -66.8274, 0.28", "-17.3507, 100.216, -67.5517, 0.55", "-17.5649, 104.142, -69.361, 0.83", "-17.6113, 106.303, -70.3543, 0.28", "-17.6411, 107.429, -70.8812, 0.55", "-17.749, 111.207, -72.5434, 0.28", "-17.874, 113.541, -73.7114, 0.83", "-18.1463, 115.873, -75.0036, 0.28", "-18.6043, 117.712, -76.1181, 0.55", "-19.2979, 119.887, -77.4654, 0.28", "-19.6033, 120.753, -77.9703, 0.55", "-20.4373, 122.957, -79.1438, 0.28", "-20.8277, 124.127, -79.7943, 0.55", "-21.9704, 128.152, -81.9663, 0.83", "-22.4622, 130.356, -83.1536, 0.55", "-22.7404, 132.67, -84.3871, 0.28", "-22.8224, 134.469, -85.3465, 0.83", "-22.669, 138.492, -87.5808, 0.55", "-22.4762, 140.461, -88.7302, 0.28", "-22.2757, 141.448, -89.328, 0.55", "-21.6145, 144.299, -91.0533, 0.28", "-21.4324, 144.947, -91.4436, 0.55", "-20.4282, 148.227, -93.2393, 0.28", "-19.9089, 149.937, -94.0997, 0.83", "-18.8667, 153.422, -95.7485, 0.28", "-18.4339, 154.98, -96.3624, 0.55", "-17.7578, 157.757, -97.2417, 0.28", "-17.2393, 159.917, -97.8115, 0.55", "-16.4002, 163.771, -98.5884, 0.28", "-15.8284, 166.669, -99.986, 0.55", "-15.3395, 169.674, -102.004, 0.55", "-14.7421, 173.501, -105.086, 0.28", "-14.4313, 175.512, -106.905, 0.55", "-14.0747, 177.8, -109.166, 0.55", "-11.936, 191.363, -123.47, 0.55", "-11.6619, 193.061, -125.374, 0.28", "-11.4949, 194.036, -126.507, 0.55", "-11.2581, 195.503, -128.208, 0.28", "-11.109, 196.495, -129.254, 0.55", "-10.7824, 198.527, -130.696, 0.55", "-10.5255, 200.217, -130.849, 0.28", "-10.2072, 202.353, -131.181, 0.55", "-10.0095, 204.028, -131.532, 0.55", "-9.94026, 205.005, -131.815, 0.28", "-9.85787, 207.828, -132.818, 0.55", "-9.8978, 210.099, -133.823, 0.55", "-9.92113, 211.524, -134.482, 0.28", "-9.91393, 212.208, -134.81, 0.55", "-9.84343, 214.445, -135.824, 0.28", "-9.82352, 215.77, -136.365, 0.55", "-9.76861, 218.052, -137.251, 0.28", "-9.62552, 221.736, -138.612, 0.55", "-9.34691, 226.304, -140.229, 0.28", "-9.11564, 229.42, -141.225, 0.55", "-8.91869, 231.735, -141.889, 0.55", "-8.63962, 234.815, -142.701, 0.55", "-8.39595, 237.24, -143.228, 0.28", "-8.13526, 240.106, -143.732, 0.55", "-7.77112, 243.145, -144.069, 0.55", "-7.69414, 243.619, -144.106, 0.28", "-7.4394, 244.832, -144.191, 0.28", "-6.52567, 248.622, -144.43, 0.55", "-5.73768, 251.244, -144.745, 0.83", "-4.9103, 253.563, -145.011, 0.28", "-4.14486, 255.355, -145.207, 0.55", "-2.43711, 258.678, -145.208, 0.28", "-0.848758, 261.225, -144.952, 0.55", "1.51653, 264.295, -144.316, 0.28", "4.31003, 267.297, -143.393, 0.55", "6.36185, 269.137, -142.679, 0.55", "10.9558, 272.876, -140.827, 0.28", "12.5916, 274.049, -140.041, 0.28", "13.997, 274.938, -139.302, 0.55", "16.2497, 276.208, -138.067, 0.28", "19.9388, 278.066, -136.665, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "10.241, 12.4706, 1.43095, 0.83", "11.2029, 15.5647, 0.168908, 0.83", "12.3846, 18.4235, -1.07416, 0.83", "14.0904, 21.3922, -2.56997, 0.83", "15.7241, 23.8354, -4.08422, 1.38", "16.9096, 25.628, -5.28796, 0.83", "17.8832, 27.1357, -6.49275, 0.55", "19.482, 29.5839, -8.84304, 0.55", "21.1703, 31.9945, -11.3782, 0.83", "22.9939, 34.2937, -14.1158, 0.83", "24.5867, 36.1315, -16.6264, 0.83", "27.1181, 39.0924, -20.9165, 0.55", "27.5499, 39.7183, -21.8396, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-63.5895, 43.0802, -3.11919, 0.55", "-66.1153, 46.345, -4.67746, 0.55", "-68.5603, 49.6377, -6.47752, 0.55", "-70.2688, 51.8376, -8.04169, 0.55", "-72.8411, 55.0655, -10.8239, 0.55", "-74.3505, 56.9626, -12.6186, 0.28", "-75.9602, 58.94, -14.4986, 0.83", "-78.9046, 62.4123, -18.4862, 0.55", "-81.0102, 65.0069, -21.7684, 0.55", "-82.5112, 66.9374, -24.2769, 0.28", "-83.8828, 68.7344, -26.5326, 0.55", "-85.7584, 71.1524, -29.3203, 0.55", "-88.3445, 74.6977, -33.0104, 0.55", "-90.117, 77.5042, -35.2766, 0.28", "-91.5995, 80.2224, -36.8404, 0.55", "-92.8476, 82.7031, -37.9013, 0.28", "-94.1405, 85.5675, -38.8395, 0.55", "-94.6712, 86.7991, -39.1326, 0.55", "-95.5634, 88.7878, -39.4522, 0.55", "-96.8194, 91.4485, -39.8987, 0.28", "-98.0237, 94.0221, -40.4212, 0.55", "-99.1904, 96.3695, -40.9932, 0.28", "-101.324, 100.216, -42.1578, 0.55", "-102.744, 102.53, -42.9638, 0.28", "-103.01, 102.938, -43.1455, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-63.5895, 43.0802, -3.11919, 0.55", "-65.7374, 45.9456, -2.15225, 0.55", "-67.2124, 47.6812, -1.61332, 0.55", "-70.4955, 50.993, -0.497025, 0.55", "-72.4018, 52.6351, 0.0603901, 0.83", "-74.5232, 54.1723, 0.649133, 0.55", "-77.6888, 56.4662, 1.52768, 0.55", "-79.5278, 57.7868, 2.08043, 0.55", "-83.2992, 60.1373, 3.16754, 0.83", "-86.6043, 61.7033, 3.99081, 0.83", "-90.8458, 63.4806, 4.81431, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.16558, -22.5946, -6.05444, 2.49", "-8.62991, -25.1417, -5.91256, 2.49", "-8.20548, -27.1598, -5.80014, 1.38", "-8.14317, -27.4561, -5.78364, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.16558, -22.5946, -6.05444, 1.38", "-10.2752, -27.431, 1.08456, 1.38", "-10.7065, -29.3108, 3.85922, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.479, 29.4825, 0.455321, 0.28", "39.9692, 40.2043, 0.455321, 0.28", "50.4593, 50.9261, 0.455321, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "27.5499, 39.7183, -21.8396, 0.55", "28.2808, 41.3597, -21.895, 0.55", "29.2935, 43.6792, -22.0869, 0.83", "30.146, 45.6967, -22.4044, 0.55", "31.4067, 48.5527, -22.935, 0.28", "32.7567, 51.5266, -23.5083, 0.55", "34.6071, 55.421, -24.2831, 0.55", "37.0832, 60.2159, -25.3312, 0.55", "39.1116, 63.8278, -26.1459, 0.55", "40.3299, 65.8264, -26.5882, 0.83", "41.4603, 67.4494, -26.9337, 0.28", "42.2784, 68.5438, -27.156, 0.28", "44.1423, 70.6847, -27.5474, 0.55", "46.5936, 72.8317, -27.875, 0.83", "48.5777, 74.3774, -28.0553, 0.83", "50.5023, 75.8006, -28.2478, 0.28", "51.7715, 76.7485, -28.3813, 0.55", "54.0127, 78.5127, -28.6454, 0.55", "57.0543, 80.9611, -29.05, 0.55", "59.7475, 83.2666, -29.4203, 0.83", "62.3589, 85.842, -29.8454, 0.28", "64.4959, 88.3167, -30.2214, 0.55", "65.3295, 89.4299, -30.402, 0.55", "66.7143, 91.5757, -30.7437, 0.55", "68.7066, 95.0106, -31.2682, 0.83", "70.4376, 98.0597, -31.8027, 0.28", "71.6547, 100.188, -32.1891, 0.55", "74.0336, 104.131, -33.0, 0.55", "75.2086, 106.023, -33.4173, 0.55", "77.0251, 108.938, -34.1629, 0.83", "79.4514, 112.704, -35.2422, 0.28", "81.5555, 115.775, -36.166, 0.55", "84.0582, 119.352, -37.3053, 0.28", "85.3443, 121.278, -37.94, 0.55", "86.6473, 123.27, -38.6559, 0.28", "86.9055, 123.659, -38.8114, 0.55", "87.9144, 125.148, -39.4516, 0.28", "88.8719, 126.52, -40.0789, 0.55", "90.2111, 128.34, -40.8474, 0.28", "91.5977, 130.087, -41.5271, 0.55", "93.7649, 132.6, -42.4373, 0.55", "95.3282, 134.393, -43.0458, 0.28", "96.5497, 135.796, -43.4515, 0.55", "97.77, 137.193, -43.7686, 0.28", "99.4501, 139.129, -44.0866, 0.55", "101.922, 141.952, -44.318, 0.28", "103.096, 143.319, -44.3171, 0.28", "105.686, 146.385, -44.1021, 0.55", "107.458, 148.48, -43.9382, 0.28", "109.022, 150.35, -43.8629, 0.55", "110.686, 152.376, -43.8261, 0.28", "111.614, 153.531, -43.8238, 0.55", "112.678, 154.851, -43.8768, 0.28", "114.45, 157.273, -44.1319, 0.55", "115.834, 159.35, -44.4071, 0.28", "117.583, 162.351, -44.8825, 0.55", "118.482, 164.133, -45.211, 0.28", "119.234, 165.689, -45.5072, 0.55", "120.337, 168.107, -45.9408, 0.28", "121.431, 170.632, -46.3125, 0.55", "122.52, 173.136, -46.6107, 0.28", "123.306, 174.903, -46.8503, 0.55", "124.462, 177.316, -47.1812, 0.28", "125.075, 178.421, -47.2984, 0.55", "126.53, 180.916, -47.5125, 0.55", "128.237, 183.758, -47.5579, 0.55", "129.887, 186.377, -47.5279, 0.28", "131.11, 188.271, -47.4598, 0.55", "134.079, 192.941, -47.114, 0.28", "135.264, 194.762, -46.9454, 0.55", "137.487, 198.098, -46.4647, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "27.5499, 39.7183, -21.8396, 0.55", "29.0115, 42.1638, -23.0466, 0.55", "30.1394, 44.1692, -23.9185, 0.55", "30.7162, 45.1243, -24.5024, 0.28", "31.0994, 45.8022, -25.0108, 0.83", "31.9061, 47.3717, -26.2412, 0.55", "32.2987, 48.265, -26.9886, 0.28", "33.212, 50.9515, -29.4563, 0.83", "34.3579, 54.4991, -33.1296, 0.55", "34.9004, 56.0872, -34.8898, 0.28", "35.1482, 56.7865, -35.8663, 0.83", "35.8079, 58.647, -38.7646, 0.55", "36.4237, 60.6127, -41.883, 0.55", "36.7345, 61.9573, -44.0427, 0.28", "36.9363, 63.0038, -45.6255, 0.83", "37.8829, 67.7613, -52.3836, 0.55", "38.1301, 69.049, -54.1104, 0.55", "38.3539, 70.4052, -55.7316, 0.83", "38.6278, 72.9995, -58.422, 0.55", "38.741, 74.3616, -59.6651, 0.83", "38.8973, 76.2548, -61.1651, 0.28", "38.9877, 77.5098, -61.8794, 0.55", "39.1471, 79.8495, -63.2376, 0.28", "39.2409, 80.8905, -63.8494, 0.55", "39.4655, 82.8437, -64.9066, 0.28", "39.6287, 83.9628, -65.5558, 0.55", "39.953, 85.9642, -66.7468, 0.28", "40.3939, 88.1272, -68.1475, 0.83", "41.1827, 91.2974, -70.2964, 0.28", "41.576, 92.5997, -71.2406, 0.83", "42.5369, 95.3741, -73.3287, 0.28", "42.6887, 95.7803, -73.6477, 0.55", "43.5662, 97.6509, -75.0971, 0.28", "43.9905, 98.4747, -75.798, 0.83", "45.0244, 100.374, -77.584, 0.28", "45.795, 101.701, -78.935, 0.55", "47.0849, 103.876, -81.2052, 0.28", "48.4749, 106.226, -83.6566, 0.28", "50.3852, 109.487, -87.061, 0.83", "51.8672, 111.939, -89.5398, 0.55", "52.9996, 113.784, -91.2937, 0.28", "53.5553, 114.638, -92.0654, 0.55", "54.667, 116.323, -93.4959, 0.28", "55.2033, 117.191, -94.2531, 0.55", "56.8649, 119.986, -96.7726, 0.28", "58.0352, 121.844, -98.6479, 0.55", "59.7894, 124.427, -101.559, 0.28", "60.6115, 125.556, -102.971, 0.55", "63.1974, 129.01, -107.688, 1.38", "65.4691, 132.005, -111.953, 0.28", "66.7203, 133.612, -114.359, 0.55", "67.814, 134.991, -116.424, 0.28", "68.6545, 136.131, -118.01, 0.28", "69.2175, 136.937, -119.024, 0.55", "69.9706, 138.147, -120.276, 0.55", "70.8428, 139.907, -121.975, 0.28", "71.1786, 140.781, -122.887, 0.55", "71.8792, 142.977, -125.191, 0.28", "72.293, 144.348, -126.647, 0.55", "72.7995, 146.244, -128.75, 0.28", "73.1216, 147.775, -130.435, 0.55", "73.5795, 150.941, -133.802, 0.28", "73.8011, 152.818, -135.651, 0.28", "74.1122, 155.279, -137.918, 0.55", "74.4581, 157.939, -140.241, 0.28", "74.645, 159.551, -141.638, 0.28", "74.9199, 161.167, -142.958, 0.28", "75.2411, 162.778, -144.222, 0.55", "75.6977, 164.512, -145.6, 0.55", "76.5659, 167.161, -147.659, 0.28", "77.1716, 168.578, -148.729, 0.83", "78.5278, 171.27, -150.653, 0.55", "79.4893, 173.044, -151.787, 0.28", "80.2885, 174.513, -152.664, 0.55", "81.4556, 176.701, -153.727, 0.28", "82.723, 178.8, -154.528, 0.55", "84.1635, 180.985, -155.209, 0.28", "85.2891, 182.511, -155.618, 0.55", "87.1385, 184.774, -156.118, 0.28", "88.4891, 186.266, -156.383, 0.55", "91.0658, 188.852, -156.687, 0.28", "91.8121, 189.51, -156.754, 0.55", "95.1189, 191.921, -156.991, 0.28", "95.9587, 192.469, -157.023, 0.55", "97.7761, 193.51, -157.019, 0.28", "98.6554, 193.956, -157.052, 0.55", "100.075, 194.555, -157.065, 0.28", "101.637, 195.058, -157.077, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-103.01, 102.938, -43.1455, 0.28", "-102.991, 104.411, -43.7709, 0.28", "-103.026, 106.25, -44.489, 0.83", "-103.031, 109.045, -45.6625, 0.28", "-103.037, 109.646, -45.969, 0.55", "-103.054, 110.679, -46.5456, 0.28", "-103.075, 111.537, -47.0494, 0.55", "-103.127, 112.526, -47.7224, 0.28", "-103.204, 113.871, -48.7463, 0.55", "-103.376, 115.443, -50.0569, 0.55", "-103.553, 116.601, -51.0575, 0.28", "-104.073, 119.625, -53.5622, 0.55", "-104.457, 121.593, -55.0308, 0.28", "-104.576, 122.128, -55.3772, 0.55", "-105.154, 124.587, -56.7042, 0.28", "-105.549, 126.407, -57.5214, 0.55", "-105.93, 128.33, -58.2709, 0.28", "-106.371, 130.787, -59.1341, 0.55", "-106.646, 132.822, -59.8, 0.28", "-106.748, 133.952, -60.1971, 0.55", "-106.814, 135.067, -60.6176, 0.28", "-106.893, 136.557, -61.3641, 0.55", "-107.055, 139.198, -63.0191, 0.28", "-107.196, 140.592, -64.0653, 0.55", "-107.482, 142.45, -65.5571, 0.28", "-107.68, 143.288, -66.2288, 0.55", "-108.461, 145.585, -68.0758, 0.28", "-108.633, 145.993, -68.3906, 0.55", "-109.457, 147.721, -69.6558, 0.28", "-109.962, 148.738, -70.3317, 1.11", "-110.977, 150.976, -71.5172, 0.28", "-111.764, 152.941, -72.3212, 0.28", "-112.182, 154.051, -72.6436, 0.55", "-112.887, 156.107, -73.1584, 0.28", "-113.38, 157.668, -73.4602, 0.55", "-114.115, 159.967, -73.8613, 0.28", "-114.483, 161.098, -74.0029, 0.55", "-114.954, 162.543, -74.1281, 0.28", "-115.217, 163.257, -74.1988, 0.55", "-115.61, 164.177, -74.322, 0.28", "-115.963, 164.834, -74.5315, 0.55", "-116.681, 166.018, -75.0345, 0.28", "-117.155, 166.781, -75.4117, 0.55", "-117.411, 167.198, -75.6547, 0.28", "-117.807, 167.839, -76.0728, 0.55", "-118.458, 168.864, -76.8233, 0.28", "-119.438, 170.359, -77.9243, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-103.01, 102.938, -43.1455, 0.55", "-104.394, 104.167, -44.477, 0.55", "-105.718, 105.382, -45.8153, 0.28", "-107.125, 106.666, -47.3615, 0.83", "-108.944, 108.345, -49.4976, 0.83", "-110.49, 109.78, -51.3329, 0.55", "-111.953, 111.145, -53.0502, 0.28", "-112.788, 111.971, -54.104, 0.55", "-114.102, 113.297, -55.7515, 0.28", "-114.551, 113.757, -56.3016, 0.55", "-115.628, 114.852, -57.4194, 0.28", "-116.133, 115.405, -57.8337, 0.55", "-117.205, 116.651, -58.4674, 0.28", "-117.566, 117.102, -58.6471, 0.55", "-118.696, 118.668, -59.1019, 0.28", "-118.84, 118.88, -59.1653, 0.55", "-119.563, 120.045, -59.5524, 0.28", "-120.062, 120.936, -59.9234, 0.55", "-121.151, 122.941, -60.7397, 0.28", "-121.485, 123.609, -61.0275, 0.55", "-121.982, 124.626, -61.4697, 0.28", "-122.091, 124.842, -61.5831, 0.55", "-123.077, 126.634, -62.498, 0.28", "-123.773, 127.88, -63.091, 0.55", "-124.336, 128.908, -63.5809, 0.28", "-125.267, 130.674, -64.4655, 0.55", "-127.283, 134.852, -66.8283, 0.28", "-128.41, 137.301, -68.2723, 0.28", "-128.886, 138.426, -68.9407, 0.55", "-129.596, 140.335, -70.1197, 0.28", "-129.921, 141.277, -70.6858, 0.55", "-130.927, 144.359, -72.3756, 0.28", "-131.426, 146.012, -73.1604, 0.28", "-131.789, 147.186, -73.6925, 0.55", "-133.149, 151.148, -75.2657, 0.28", "-133.504, 152.129, -75.6078, 0.55", "-135.346, 156.941, -77.1442, 0.28", "-135.565, 157.474, -77.2801, 0.55", "-136.1, 158.744, -77.6227, 0.28", "-136.762, 160.152, -77.9846, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-90.8458, 63.4806, 4.81431, 0.83", "-92.7275, 64.3333, 5.03183, 0.83", "-94.6345, 65.2875, 5.10542, 0.28", "-96.3062, 66.0698, 5.06791, 0.55", "-97.5386, 66.6144, 5.02821, 0.55", "-98.5885, 67.1134, 5.00118, 0.28", "-99.8786, 67.7552, 5.06435, 0.55", "-100.913, 68.4076, 5.12437, 0.28", "-102.433, 69.4702, 5.2633, 0.55", "-103.289, 70.145, 5.41499, 0.83", "-105.03, 71.6773, 5.84988, 0.83", "-107.436, 73.8217, 6.69253, 0.55", "-109.762, 75.8667, 7.66696, 0.55", "-111.287, 77.227, 8.38902, 0.55", "-113.341, 79.1409, 9.4446, 0.55", "-114.944, 80.5876, 10.2718, 0.55", "-116.589, 82.0108, 11.0941, 0.55", "-118.01, 83.1478, 11.7042, 0.55", "-118.819, 83.7261, 12.0588, 0.28", "-119.255, 84.043, 12.2417, 0.55", "-120.418, 84.7859, 12.6253, 0.55", "-122.291, 86.0339, 13.1199, 0.55", "-125.856, 88.7734, 13.7729, 0.55", "-132.01, 96.2488, 16.9733, 0.55", "-138.027, 103.941, 19.8386, 0.55", "-144.896, 110.783, 23.1441, 0.55", "-150.452, 118.916, 25.5504, 0.55", "-155.633, 126.992, 28.8673, 0.55", "-160.106, 135.195, 32.8286, 0.55", "-165.023, 142.272, 38.3693, 0.55", "-168.735, 150.247, 43.488, 0.55", "-170.749, 157.91, 49.9328, 0.55", "-171.248, 165.374, 56.9154, 0.55", "-172.459, 172.8, 63.8541, 0.55", "-174.696, 180.453, 70.2364, 0.55", "-176.326, 187.314, 77.7108, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-90.8458, 63.4806, 4.81431, 0.83", "-93.3218, 66.2913, 4.91968, 0.83", "-95.5629, 68.7837, 4.98595, 0.83", "-97.6874, 71.2339, 5.01687, 0.83", "-98.7824, 72.4966, 5.02323, 0.55", "-100.61, 74.6051, 5.02118, 0.83", "-102.537, 76.7557, 5.03712, 0.55", "-104.58, 78.959, 5.07851, 0.55", "-107.196, 81.777, 5.19367, 0.83", "-109.012, 83.7121, 5.28248, 0.55", "-111.119, 85.9416, 5.36611, 0.55", "-112.677, 87.4897, 5.42653, 0.55", "-115.876, 90.3904, 5.54094, 0.83", "-117.781, 91.896, 5.58808, 0.55", "-119.114, 92.7983, 5.60361, 1.11", "-120.74, 93.7343, 5.6562, 0.55", "-122.653, 94.641, 5.84163, 0.55", "-125.62, 95.8489, 6.30573, 0.83", "-128.036, 96.6085, 6.8076, 0.55", "-130.395, 97.4007, 7.46165, 0.55", "-132.976, 98.3677, 8.3191, 0.55", "-137.058, 99.9164, 9.89323, 0.83", "-139.008, 100.688, 10.7032, 0.55", "-141.723, 101.702, 11.8478, 0.55", "-145.205, 103.116, 13.226, 0.55", "-146.71, 103.759, 13.7391, 0.55", "-149.893, 105.218, 14.5812, 0.28", "-151.265, 105.846, 14.8665, 0.83", "-154.074, 107.034, 15.3495, 0.28", "-157.338, 108.326, 15.6715, 0.28", "-159.244, 108.994, 15.7164, 0.28", "-160.496, 109.47, 15.6427, 0.28", "-161.045, 109.707, 15.5521, 0.55", "-163.78, 110.859, 14.955, 0.28", "-166.022, 111.849, 14.3221, 0.28", "-168.081, 112.663, 13.6693, 0.55", "-170.211, 113.543, 12.9729, 0.28", "-171.162, 113.933, 12.6875, 0.55", "-172.514, 114.484, 12.3532, 0.28", "-173.48, 114.926, 12.1771, 0.55", "-174.628, 115.394, 12.1415, 0.28", "-175.902, 115.809, 12.0481, 0.55", "-177.131, 116.213, 11.9802, 0.28", "-178.074, 116.53, 11.9044, 0.55", "-179.253, 116.932, 11.8023, 0.28", "-180.195, 117.286, 11.7214, 0.55", "-183.596, 118.693, 11.3264, 0.28", "-185.643, 119.493, 11.1727, 0.55", "-187.04, 120.046, 11.0565, 1.11", "-188.988, 120.834, 10.8907, 0.55", "-190.757, 121.529, 10.7748, 0.55", "-193.927, 122.82, 10.6565, 0.55", "-196.204, 123.793, 10.8792, 0.55", "-205.862, 128.345, 12.8175, 0.55", "-215.199, 133.766, 13.1589, 0.55", "-223.584, 140.43, 12.6668, 0.55", "-232.685, 145.812, 10.5007, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.14317, -27.4561, -5.78364, 0.83", "-8.14532, -30.3432, -6.89645, 0.83", "-8.14738, -33.0978, -7.95815, 0.83", "-8.15143, -38.5411, -10.0562, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.14317, -27.4561, -5.78364, 0.55", "-8.8873, -28.6376, -5.01373, 0.55", "-10.1132, -30.4498, -3.95067, 0.55", "-12.0882, -33.27, -2.52626, 0.55", "-13.0903, -34.6516, -1.83821, 0.55", "-15.0056, -37.2671, -0.293996, 0.83", "-15.9976, -38.5417, 0.538352, 0.55", "-16.8131, -39.5502, 1.26707, 0.55", "-17.7262, -40.6643, 2.05686, 0.55", "-19.4794, -42.6827, 3.40651, 0.83", "-22.1117, -45.6642, 5.45331, 0.55", "-23.4469, -47.1734, 6.47406, 0.55", "-24.7939, -48.6664, 7.5267, 0.55", "-27.0343, -51.2028, 9.28301, 0.55", "-29.0554, -53.4696, 10.8196, 0.55", "-30.2879, -54.8269, 11.654, 0.83", "-32.8102, -57.5686, 13.087, 0.55", "-34.0151, -58.8756, 13.7377, 0.55", "-36.4915, -61.5039, 15.0539, 0.55", "-38.3328, -63.4126, 16.0111, 0.28", "-39.5924, -64.7496, 16.6178, 0.28", "-41.884, -67.0741, 17.5883, 0.28", "-43.207, -68.4133, 18.036, 0.55", "-47.6909, -74.1487, 20.0792, 0.55", "-53.0643, -79.4923, 20.6471, 0.55", "-59.0125, -84.1819, 19.5319, 0.55", "-65.0932, -88.2905, 17.201, 0.55", "-71.984, -91.2792, 15.2725, 0.55", "-78.9362, -94.5093, 14.2096, 0.55", "-85.676, -97.4142, 11.6855, 0.55", "-92.8329, -99.9986, 10.1132, 0.55", "-99.0488, -103.965, 7.86901, 0.55", "-105.398, -106.627, 4.25402, 0.55", "-111.471, -107.887, -0.507499, 0.55", "-117.974, -107.608, -4.86027, 0.55", "-125.218, -107.508, -7.83095, 0.55", "-132.503, -107.843, -10.6777, 0.55", "-139.238, -107.738, -14.6713, 0.55", "-146.573, -108.093, -17.3811, 0.55", "-154.006, -107.795, -19.8269, 0.55", "-161.605, -106.668, -21.3263, 0.55", "-169.089, -104.431, -21.2823, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.7065, -29.3108, 3.85922, 0.83", "-13.4796, -30.9951, -0.411227, 0.83", "-14.6635, -31.7142, -2.23442, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.7065, -29.3108, 3.85922, 0.55", "-11.4153, -31.084, 1.76648, 0.55", "-12.4976, -34.1231, -0.979679, 0.55", "-12.8679, -35.1445, -1.92374, 0.55", "-13.2126, -35.8291, -2.7164, 0.55", "-13.9512, -37.0078, -4.22581, 0.55", "-15.029, -38.3627, -6.13823, 0.55", "-16.1576, -39.3521, -7.65826, 0.28", "-17.1936, -40.1307, -8.91928, 0.83", "-19.9641, -42.0377, -12.3671, 0.55", "-21.1487, -42.8923, -13.9009, 0.83", "-22.6584, -44.0233, -15.8351, 0.55", "-24.0182, -45.156, -17.6351, 0.55", "-24.622, -45.7511, -18.521, 0.55", "-25.5056, -46.8774, -19.987, 0.83", "-27.0221, -49.3949, -22.9146, 0.83", "-28.002, -51.1149, -24.9215, 0.55", "-28.3599, -51.9941, -25.789, 0.55", "-28.9408, -53.8889, -27.4083, 0.83", "-29.1597, -54.6976, -27.9936, 0.55", "-29.6157, -56.3393, -29.136, 0.83", "-30.5348, -59.5256, -31.3634, 0.55", "-31.7693, -64.1132, -34.2416, 0.55", "-32.0727, -65.1728, -34.7968, 0.83", "-32.7037, -67.2072, -35.6284, 0.83", "-33.7147, -69.9331, -36.7851, 0.83", "-34.3401, -71.6698, -37.6487, 0.55", "-35.2014, -73.3923, -38.963, 0.55", "-36.131, -74.556, -40.3158, 0.83", "-36.9748, -75.4709, -41.5402, 0.28", "-38.1774, -76.6863, -43.3275, 0.55", "-39.387, -77.714, -45.0371, 0.55", "-41.7273, -79.5592, -48.4011, 0.55", "-43.3211, -80.6746, -50.7242, 0.28", "-43.9894, -81.1366, -51.6908, 0.55", "-46.0272, -82.5497, -54.4786, 0.83", "-48.8389, -84.5938, -57.9276, 0.28", "-50.0623, -85.536, -59.2754, 0.55", "-51.6388, -87.0665, -61.0135, 0.28", "-52.4466, -88.0152, -61.9698, 0.83", "-53.2651, -89.2046, -63.0437, 0.28", "-53.7995, -90.3404, -63.9513, 0.83", "-54.268, -91.7389, -65.1271, 0.83", "-54.8866, -93.6606, -66.9601, 0.28", "-55.2398, -94.8437, -68.2373, 1.66", "-55.5771, -96.0339, -69.7848, 0.28", "-55.8424, -97.1451, -71.348, 0.55", "-56.447, -99.1751, -74.8511, 0.28", "-56.7899, -99.9678, -76.5473, 0.55", "-57.3807, -100.907, -78.9809, 0.28", "-57.8534, -101.555, -80.8534, 0.55", "-58.5131, -102.36, -83.3782, 0.55", "-59.4119, -103.475, -87.0334, 0.83", "-60.0631, -104.466, -90.2413, 0.83", "-60.4669, -105.134, -92.6269, 0.28", "-60.6122, -105.377, -93.6298, 0.55", "-60.8574, -105.772, -95.5044, 0.28", "-60.9353, -105.962, -96.604, 0.28", "-60.8194, -106.315, -98.4002, 0.28", "-60.6455, -106.584, -99.9826, 0.83", "-60.2119, -107.078, -103.521, 0.28", "-60.1454, -107.151, -104.067, 0.55", "-60.0229, -107.328, -105.455, 0.28", "-59.9629, -107.533, -106.801, 0.55", "-60.016, -108.109, -110.494, 0.28", "-60.0781, -108.3, -111.51, 0.28", "-60.2101, -108.694, -113.065, 0.55", "-60.6014, -109.405, -115.58, 0.28", "-60.9218, -109.885, -116.976, 0.55", "-61.6966, -110.997, -119.644, 0.28", "-62.6184, -112.497, -122.245, 0.55", "-63.2356, -113.31, -123.436, 0.55", "-64.0957, -114.239, -124.614, 0.55", "-65.4013, -115.505, -125.936, 0.28", "-65.9323, -115.914, -126.346, 0.28", "-68.7866, -117.891, -128.228, 0.55", "-72.1158, -119.941, -130.18, 0.55", "-73.9019, -121.034, -131.233, 0.28", "-76.1779, -122.513, -132.645, 0.83", "-79.2306, -124.603, -134.527, 0.28", "-80.856, -125.811, -135.547, 0.55", "-82.7603, -127.445, -136.804, 0.55", "-84.8916, -129.84, -138.418, 0.55", "-86.9783, -132.771, -140.246, 0.28", "-88.1597, -134.68, -141.315, 0.55", "-88.6838, -135.658, -141.807, 0.28", "-89.4261, -137.106, -142.482, 0.55", "-90.5233, -139.427, -143.571, 0.28", "-91.1389, -140.528, -144.123, 0.83", "-92.5809, -142.634, -145.282, 0.28", "-93.5171, -143.724, -146.067, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "137.487, 198.098, -46.4647, 0.28", "141.979, 199.088, -45.0873, 0.28", "143.419, 199.405, -44.6457, 0.55", "147.006, 200.196, -43.5462, 0.28", "148.327, 200.487, -43.1411, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "137.487, 198.098, -46.4647, 0.28", "139.479, 199.446, -45.3576, 0.28", "140.585, 200.188, -44.737, 0.55", "143.638, 202.269, -43.0382, 0.28", "145.224, 203.285, -42.1545, 0.55", "149.399, 205.809, -39.8952, 0.28", "151.095, 206.757, -39.1052, 0.55", "152.728, 207.487, -38.3145, 0.28", "153.752, 207.897, -37.8176, 0.55", "155.826, 208.571, -36.8942, 0.28", "156.775, 208.795, -36.5164, 0.55", "161.106, 208.931, -36.318, 0.28", "164.705, 208.028, -36.5627, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.15143, -38.5411, -10.0562, 0.55", "-7.44997, -40.7134, -10.3316, 0.55", "-6.86988, -42.3529, -10.5523, 0.83", "-5.75088, -45.1606, -10.9647, 0.83", "-4.94334, -47.0904, -11.3695, 0.55", "-4.21157, -48.8743, -11.8275, 0.83", "-3.71378, -50.0459, -12.141, 0.28", "-2.51393, -52.8376, -12.9946, 0.55", "-1.99491, -53.962, -13.3331, 0.28", "-1.05193, -55.9551, -13.9003, 0.83", "0.0509809, -58.1099, -14.4312, 0.83", "0.911297, -59.7388, -14.6841, 0.28", "1.58152, -61.0676, -14.7638, 0.55", "2.56312, -63.2044, -14.6895, 0.28", "3.52475, -65.4082, -14.4277, 0.83", "4.41563, -67.4073, -14.0589, 0.83", "5.18195, -69.1633, -13.7625, 0.83", "5.63016, -70.3473, -13.6379, 1.11", "6.16497, -71.8, -13.5514, 1.11", "6.98724, -74.2216, -13.6028, 0.55", "7.3953, -75.4384, -13.6749, 0.83", "8.11224, -77.5009, -13.91, 0.55", "9.11601, -80.2814, -14.317, 0.28", "9.60049, -81.5785, -14.5065, 0.55", "10.4655, -83.8195, -14.8812, 0.55", "10.8282, -84.7691, -15.0693, 0.28", "11.9025, -87.6601, -15.6957, 0.55", "12.7911, -89.8866, -16.1361, 0.28", "13.6114, -91.7377, -16.4825, 0.55", "14.4338, -93.4914, -16.7523, 0.28", "14.9977, -94.6717, -16.8625, 0.55", "15.6509, -96.0624, -16.8973, 0.28", "16.6032, -98.0394, -16.802, 0.55", "17.3042, -99.3621, -16.6923, 0.28", "18.263, -101.177, -16.5885, 0.55", "20.0062, -104.425, -16.5354, 0.28", "20.9453, -106.086, -16.5479, 0.55", "23.0407, -109.706, -16.8161, 0.28", "23.9543, -111.348, -17.1079, 0.55", "25.3082, -113.75, -17.6018, 0.28", "26.258, -115.429, -17.9836, 0.28", "27.4031, -117.456, -18.4668, 0.28", "28.1994, -119.129, -18.923, 0.55", "29.2807, -121.983, -19.7339, 0.28", "30.0745, -124.636, -20.4941, 0.55", "30.8779, -128.134, -21.4289, 0.28", "31.0896, -129.51, -21.8078, 0.55", "31.3987, -133.229, -22.8207, 0.28", "31.4117, -134.899, -23.2497, 0.55", "31.2683, -136.935, -23.8199, 0.28", "31.0612, -138.278, -24.2776, 0.55", "30.6729, -140.247, -24.9066, 0.28", "30.3035, -142.307, -25.4502, 0.55", "29.8247, -145.3, -26.1112, 0.28", "29.6883, -146.377, -26.3409, 0.55", "29.5776, -147.985, -26.6543, 0.28", "29.5014, -149.869, -27.0589, 0.55", "29.4834, -152.597, -27.7023, 0.28", "29.6322, -154.066, -28.1043, 0.55", "30.0017, -155.266, -28.3417, 0.28", "30.4239, -156.299, -28.5058, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.15143, -38.5411, -10.0562, 0.55", "-9.3809, -40.631, -11.9573, 0.55", "-9.7409, -41.2784, -12.5436, 0.55", "-10.808, -43.2907, -14.3008, 0.55", "-12.702, -46.9965, -17.466, 0.55", "-14.4811, -50.6113, -20.3841, 0.83", "-16.2259, -53.9401, -23.0187, 0.55", "-17.0617, -55.5807, -24.3284, 0.55", "-17.6616, -56.8482, -25.3018, 0.28", "-18.9405, -59.8338, -27.3984, 0.55", "-20.0841, -62.8503, -29.1392, 0.55", "-21.2476, -65.8077, -30.5864, 0.55", "-22.4857, -69.2606, -32.0708, 0.55", "-23.7883, -73.2469, -33.6454, 0.55", "-24.61, -76.0805, -34.5972, 0.83", "-25.2259, -78.6023, -35.2536, 0.83", "-25.6204, -80.6228, -35.6365, 0.55", "-25.8422, -81.9335, -35.8028, 0.55", "-26.2602, -83.9598, -35.9735, 0.83", "-27.1055, -87.5605, -36.3236, 0.55", "-27.6652, -89.8488, -36.6991, 0.28", "-28.0288, -91.244, -36.9915, 0.83", "-28.7456, -93.5633, -37.5153, 0.55", "-29.4278, -95.4491, -38.0943, 0.28", "-30.4999, -98.3333, -39.1502, 0.55", "-31.3751, -100.944, -40.3392, 0.28", "-31.8505, -102.604, -41.1741, 0.28", "-32.3643, -104.888, -42.4147, 0.83", "-32.8993, -108.209, -44.2805, 0.28", "-33.2357, -111.026, -45.8776, 0.83", "-33.4634, -113.814, -47.4186, 0.28", "-33.4791, -114.756, -47.8867, 0.83", "-33.4171, -117.208, -49.0309, 0.55", "-33.3263, -118.813, -49.6964, 0.28", "-33.1701, -121.368, -50.4972, 0.55", "-33.0593, -123.776, -51.1217, 0.28", "-33.0373, -126.025, -51.5222, 0.55", "-33.0514, -128.344, -51.8975, 0.28", "-33.062, -129.969, -52.1773, 0.55", "-33.0285, -131.113, -52.4438, 0.28", "-32.9933, -131.74, -52.6276, 0.55", "-32.7412, -134.667, -53.9028, 0.28", "-32.3175, -137.847, -54.7766, 0.83", "-31.8022, -140.453, -55.2164, 0.28", "-30.8456, -143.929, -55.66, 0.28", "-30.189, -145.79, -55.87, 0.83", "-28.3544, -149.83, -56.1376, 0.28", "-21.5568, -161.786, -55.6774, 0.83", "-19.4654, -165.201, -55.4007, 0.55", "-17.8301, -167.766, -55.3215, 0.55", "-17.1591, -168.863, -55.7463, 0.55", "-16.7765, -169.559, -56.358, 0.28", "-15.9803, -171.032, -57.8224, 0.55", "-14.6679, -173.379, -60.169, 0.28", "-13.8505, -174.985, -61.5244, 0.55", "-12.7285, -177.489, -63.4577, 0.28", "-11.8632, -179.736, -65.2318, 0.83", "-11.1704, -181.975, -67.1354, 0.28", "-10.7661, -184.004, -69.0151, 0.55", "-10.4639, -187.559, -72.2927, 0.28", "-10.53, -188.779, -73.426, 0.55", "-11.2309, -192.439, -76.8213, 0.28", "-11.9931, -194.506, -78.9807, 0.55", "-13.4581, -197.21, -81.9773, 0.28", "-14.1659, -198.227, -83.1108, 0.55", "-15.1441, -199.379, -84.367, 0.28", "-16.1206, -200.32, -85.4255, 0.55", "-18.9106, -202.46, -87.9586, 0.28", "-20.1005, -203.243, -88.9545, 0.55", "-21.7307, -204.182, -90.2578, 0.55", "-24.4082, -205.737, -92.4505, 0.28", "-26.0302, -206.76, -93.8369, 0.83", "-27.6278, -207.876, -95.2332, 0.28", "-28.3028, -208.421, -95.8344, 0.55", "-30.0554, -210.054, -97.4873, 0.28", "-31.5051, -211.614, -98.9365, 0.55", "-33.2474, -213.872, -100.735, 0.28", "-33.6545, -214.47, -101.184, 0.55", "-35.0559, -216.691, -102.752, 0.28", "-36.018, -218.252, -103.831, 0.55", "-38.4995, -222.122, -106.438, 0.28", "-39.5867, -223.682, -107.463, 0.55", "-40.1914, -224.551, -107.955, 0.28", "-40.4405, -224.901, -108.154, 0.55", "-41.6818, -226.564, -109.005, 0.28", "-42.64, -227.706, -109.781, 0.55", "-43.5256, -228.683, -110.476, 0.28", "-44.4153, -229.685, -111.354, 0.55", "-46.1507, -231.868, -113.24, 0.28", "-46.96, -232.931, -114.346, 0.55", "-49.4735, -236.369, -118.375, 0.28", "-50.5038, -237.903, -120.338, 0.28", "-51.8198, -240.101, -123.291, 0.28", "-52.5606, -241.55, -125.244, 0.55", "-53.8796, -245.121, -129.623, 0.55", "-54.0919, -246.009, -130.629, 0.28", "-54.2056, -246.99, -131.634, 0.55", "-54.3165, -248.024, -132.741, 0.28", "-54.5117, -248.981, -133.709, 0.55", "-54.7986, -250.197, -134.842, 0.28", "-55.0785, -251.464, -135.748, 0.55", "-56.183, -256.33, -139.102, 0.28", "-56.4739, -257.489, -139.905, 0.55", "-57.9626, -262.858, -143.702, 0.28", "-58.3913, -264.344, -144.765, 0.55", "-60.0952, -270.211, -148.904, 0.28", "-60.5291, -271.866, -149.972, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.6635, -31.7142, -2.23442, 0.83", "-17.3554, -30.2231, -3.19538, 0.83", "-20.5944, -28.9093, -4.69818, 0.83", "-23.3743, -28.0626, -6.15505, 0.83", "-25.8346, -27.5594, -7.60009, 0.83", "-29.6902, -27.1825, -10.1724, 0.83", "-33.4021, -27.2283, -12.8598, 0.83", "-36.3901, -27.8467, -15.3009, 0.55", "-38.3249, -28.4432, -16.9282, 0.55", "-40.0465, -29.0408, -18.3694, 0.83", "-42.0905, -29.7233, -19.9824, 0.55", "-44.0851, -30.2378, -21.2292, 0.55", "-47.489, -30.6732, -22.9858, 0.55", "-49.8999, -30.5041, -23.8224, 0.55", "-52.5916, -29.9953, -24.5274, 0.55", "-54.0634, -29.5436, -24.9726, 0.55", "-55.5913, -29.0275, -25.4679, 0.55", "-58.0537, -28.2541, -26.4034, 0.55", "-59.7796, -27.9372, -27.1703, 1.11", "-61.1088, -27.9039, -27.8173, 1.11", "-67.5062, -28.4786, -31.2403, 0.55", "-69.6243, -28.7949, -32.4328, 0.55", "-71.4282, -29.1407, -33.4956, 0.55", "-74.5251, -29.776, -35.4161, 0.55", "-77.3206, -30.1837, -37.4413, 0.55", "-79.6956, -30.2527, -39.6287, 0.55", "-80.7696, -30.2041, -40.8227, 0.28", "-81.5646, -30.0817, -41.8793, 0.83", "-83.425, -29.6188, -44.5719, 0.83", "-85.7925, -28.7881, -48.3246, 0.83", "-88.4078, -27.6181, -53.0257, 0.55", "-89.5071, -27.0929, -55.1053, 0.55", "-90.9249, -26.4915, -57.7315, 0.28", "-91.6253, -26.2342, -58.9456, 0.83", "-93.013, -25.7, -61.2188, 0.55", "-94.458, -24.8429, -63.3966, 0.55", "-96.3876, -23.3205, -66.2146, 0.28", "-97.4385, -22.5039, -67.679, 1.11", "-98.263, -21.9201, -68.8767, 0.83", "-100.17, -20.7372, -71.7213, 0.83", "-102.518, -19.5374, -75.4207, 0.83", "-106.251, -17.9115, -81.3295, 0.28", "-107.473, -17.4553, -83.3486, 0.83", "-111.07, -16.19, -89.5571, 0.28", "-112.65, -15.7214, -92.395, 0.83", "-115.736, -15.1151, -98.1195, 0.28", "-116.189, -15.0833, -99.0504, 0.28", "-116.97, -15.0936, -100.816, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.6635, -31.7142, -2.23442, 1.11", "-16.2404, -33.5557, -1.22807, 1.11", "-18.5692, -35.5684, -0.13073, 1.11", "-20.2669, -36.9767, 0.570095, 1.11", "-22.6547, -39.0931, 1.85037, 1.11", "-24.9651, -41.3228, 3.39525, 0.83", "-26.5811, -42.9003, 4.54752, 0.83", "-28.6928, -44.7004, 6.00147, 0.83", "-31.5181, -46.7731, 7.74846, 0.83", "-35.4385, -49.5148, 9.94777, 1.11", "-37.5393, -50.9153, 10.9264, 0.83", "-39.3159, -52.0438, 11.6691, 0.83", "-42.2512, -53.7558, 12.7153, 0.83", "-45.6258, -55.555, 13.6096, 0.83", "-48.5477, -56.9253, 14.0695, 0.83", "-52.0282, -58.5403, 14.3284, 0.83", "-54.8563, -59.8309, 14.4593, 0.83", "-57.1811, -60.9534, 14.5745, 0.83", "-59.0611, -61.9371, 14.6705, 1.11", "-61.4302, -63.277, 14.7698, 0.83", "-63.8827, -64.7084, 14.8721, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-116.97, -15.0936, -100.816, 0.28", "-120.679, -16.0202, -104.604, 0.28", "-121.636, -16.2478, -105.537, 0.55", "-123.462, -16.5833, -107.19, 0.28", "-124.844, -16.6579, -108.471, 0.28", "-126.781, -16.663, -110.3, 0.55", "-129.802, -16.6343, -113.062, 0.28", "-130.721, -16.6441, -113.958, 0.55", "-132.468, -16.6638, -115.735, 1.11", "-136.085, -16.7735, -119.563, 0.28", "-138.026, -16.9463, -121.76, 0.55", "-140.276, -17.2554, -124.403, 0.55", "-143.952, -18.2308, -129.103, 0.55", "-145.538, -18.8186, -131.262, 0.55", "-147.449, -19.7045, -133.968, 0.55", "-148.815, -20.4942, -135.939, 0.55", "-151.217, -21.9886, -139.564, 0.55", "-153.81, -23.7325, -143.698, 0.55", "-156.482, -25.4998, -147.637, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-116.97, -15.0936, -100.816, 0.55", "-116.125, -16.8238, -102.924, 0.55", "-114.941, -19.2475, -105.877, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-63.8827, -64.7084, 14.8721, 0.55", "-65.4821, -66.3327, 15.2053, 0.55", "-66.6752, -67.5351, 15.3947, 0.55", "-68.0882, -68.7324, 15.5937, 0.55", "-70.1076, -70.2447, 15.8612, 0.55", "-71.5214, -71.1512, 16.0473, 0.55", "-74.5474, -72.9443, 16.4299, 0.55", "-77.3854, -74.6375, 16.7526, 0.55", "-80.2769, -76.4708, 17.0185, 0.55", "-82.0214, -77.5596, 17.2379, 0.55", "-84.3628, -78.9978, 17.5758, 0.55", "-86.6816, -80.4469, 17.9981, 0.55", "-88.4962, -81.5085, 18.3978, 0.55", "-92.8923, -83.933, 19.5033, 0.55", "-96.2107, -85.7296, 20.511, 0.55", "-97.4474, -86.4337, 20.9814, 0.83", "-99.3591, -87.625, 21.8762, 0.55", "-101.194, -88.7166, 22.9033, 0.55", "-103.111, -89.8539, 24.109, 0.55", "-104.985, -90.9956, 25.3305, 0.55", "-107.537, -92.9047, 26.9557, 0.55", "-109.895, -94.7596, 28.4706, 0.55", "-112.189, -96.6369, 29.9061, 0.55", "-113.955, -98.0844, 31.0204, 0.55", "-116.91, -100.298, 32.8707, 0.55", "-119.363, -101.789, 34.2022, 0.55", "-121.45, -102.769, 35.2147, 0.55", "-123.263, -103.481, 36.0355, 0.55", "-125.347, -104.289, 36.922, 0.55", "-127.896, -105.282, 38.0424, 0.83", "-130.368, -106.346, 39.1378, 0.55", "-132.202, -107.192, 39.8613, 0.55", "-134.448, -108.414, 40.6616, 0.55", "-135.686, -109.168, 41.0459, 0.55", "-138.001, -110.665, 41.6266, 0.55", "-140.107, -112.215, 42.0564, 0.55", "-142.217, -113.738, 42.4793, 0.55", "-143.175, -114.406, 42.645, 0.83", "-145.72, -116.077, 42.9642, 0.55", "-147.542, -117.179, 43.1189, 0.55", "-152.43, -120.085, 43.2968, 0.55", "-155.063, -121.533, 43.4399, 0.55", "-158.548, -123.225, 43.7163, 0.55", "-160.498, -124.047, 43.9981, 0.55", "-162.453, -124.682, 44.4414, 1.38", "-166.022, -125.532, 45.5841, 0.55", "-169.487, -126.018, 47.1227, 0.55", "-172.238, -126.42, 48.7642, 0.55", "-175.085, -126.713, 50.7858, 0.55", "-177.578, -126.936, 52.748, 0.55", "-179.423, -127.08, 54.3418, 0.55", "-181.843, -127.298, 56.6214, 0.55", "-185.39, -127.905, 60.162, 0.55", "-186.943, -128.256, 61.7728, 0.55", "-187.569, -128.421, 62.3969, 0.55", "-188.724, -128.767, 63.488, 0.28", "-189.851, -129.063, 64.4615, 0.83", "-192.453, -129.583, 66.1142, 0.28", "-193.805, -129.689, 66.7678, 0.28", "-195.645, -129.712, 67.5836, 0.55", "-198.751, -129.672, 68.8296, 0.55", "-202.836, -129.591, 70.3026, 0.28", "-206.502, -129.53, 71.5414, 0.28", "-209.676, -129.501, 72.4939, 0.55", "-211.199, -129.478, 72.9573, 0.55", "-213.433, -129.49, 73.6354, 0.55", "-215.805, -129.543, 74.4307, 0.28", "-216.672, -129.583, 74.6268, 0.55", "-218.124, -129.712, 74.9167, 0.28", "-218.545, -129.775, 74.961, 0.55", "-220.935, -130.016, 75.0767, 0.28", "-222.46, -130.092, 75.1129, 0.83", "-224.89, -130.182, 75.0812, 0.28", "-226.999, -130.269, 75.0222, 0.28", "-229.766, -130.436, 74.889, 0.28", "-232.268, -130.567, 74.7083, 0.28", "-241.766, -134.993, 76.4647, 0.28", "-250.318, -140.42, 79.5549, 0.28", "-258.898, -145.294, 83.4832, 0.28", "-267.242, -150.402, 87.5935, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-63.8827, -64.7084, 14.8721, 0.55", "-64.1532, -67.6888, 14.4451, 0.55", "-64.2721, -70.1362, 13.9714, 0.55", "-64.2948, -71.4558, 13.6463, 0.55", "-64.3662, -73.2086, 13.184, 0.83", "-64.6491, -76.8046, 12.2629, 0.83", "-64.9144, -79.4999, 11.6366, 0.55", "-65.151, -81.1348, 11.2654, 0.83", "-65.537, -83.3481, 10.8025, 0.55", "-65.9063, -85.1785, 10.428, 0.55", "-66.6232, -88.0351, 9.88883, 0.55", "-67.5741, -91.2426, 9.3597, 0.55", "-68.7956, -95.107, 8.86902, 0.55", "-69.1947, -96.3188, 8.73176, 0.55", "-70.4724, -100.18, 8.36047, 0.55", "-71.0661, -102.231, 8.12619, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-156.482, -25.4998, -147.637, 0.55", "-159.994, -25.7217, -152.23, 0.55", "-161.463, -25.848, -153.979, 0.55", "-164.04, -25.9645, -156.821, 0.55", "-165.123, -25.977, -157.917, 0.55", "-167.6, -26.004, -160.307, 0.55", "-171.042, -26.0363, -163.545, 0.55", "-172.849, -25.9605, -165.02, 0.55", "-174.295, -25.8896, -166.14, 0.55", "-175.753, -25.8768, -167.104, 0.55", "-177.436, -25.8617, -168.174, 0.55", "-178.742, -25.7661, -168.863, 0.55", "-179.885, -25.5614, -169.403, 0.28", "-181.477, -25.2718, -170.182, 0.55", "-184.614, -24.8636, -172.097, 0.28", "-185.135, -24.8598, -172.461, 0.28", "-185.794, -24.9124, -172.951, 0.55", "-187.619, -25.197, -174.378, 0.55", "-188.88, -25.5084, -175.423, 0.55", "-192.565, -26.8655, -178.745, 0.55", "-195.228, -28.0279, -181.174, 0.55", "-196.477, -28.6492, -182.35, 0.55", "-197.758, -29.4032, -183.635, 0.55", "-198.743, -30.1329, -184.704, 0.55", "-200.252, -31.4539, -186.447, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-156.482, -25.4998, -147.637, 0.55", "-154.93, -22.416, -148.092, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-71.0661, -102.231, 8.12619, 0.55", "-72.2751, -104.303, 7.87979, 0.55", "-73.1313, -105.75, 7.5144, 0.28", "-74.0345, -106.945, 7.04586, 0.55", "-75.3055, -108.639, 5.95626, 0.55", "-76.2894, -109.915, 4.79122, 0.28", "-76.6626, -110.441, 4.27334, 0.83", "-77.964, -112.217, 2.3084, 0.55", "-79.2471, -113.831, 0.374113, 0.55", "-81.149, -116.113, -2.79808, 0.55", "-82.8939, -118.088, -5.77008, 0.55", "-84.8211, -120.252, -9.05385, 0.55", "-85.4181, -120.907, -10.0353, 0.55", "-86.4241, -122.011, -11.6182, 0.55", "-87.7194, -123.323, -13.4827, 0.55", "-89.8159, -125.212, -16.2473, 0.55", "-90.7591, -126.095, -17.6485, 0.55", "-92.3874, -127.814, -20.3973, 0.55", "-93.4209, -129.131, -22.3801, 0.28", "-94.5459, -130.826, -24.7544, 0.55", "-95.9262, -133.12, -27.7253, 0.55", "-97.6776, -136.234, -31.6886, 0.55", "-98.8203, -138.358, -34.2485, 0.55", "-99.3299, -139.488, -35.4938, 0.28", "-99.9155, -140.988, -37.0638, 0.55", "-100.796, -143.468, -39.5729, 0.28", "-101.066, -144.131, -40.2381, 0.28", "-101.336, -144.764, -40.8902, 0.28", "-102.321, -146.813, -43.2066, 1.38", "-103.51, -149.109, -45.8228, 0.55", "-104.159, -150.313, -47.2094, 0.28", "-104.438, -150.871, -47.8242, 0.55", "-105.141, -152.394, -49.3312, 0.28", "-105.593, -153.424, -50.1935, 0.55", "-106.22, -154.971, -50.7722, 0.28", "-106.376, -155.356, -50.8422, 0.55", "-107.057, -157.142, -51.0361, 0.28", "-107.566, -158.49, -51.1244, 0.55", "-108.185, -160.11, -51.1697, 0.28", "-110.741, -166.978, -51.2836, 0.55", "-111.413, -168.794, -51.2894, 0.28", "-111.874, -169.99, -51.2856, 0.55", "-112.439, -171.314, -51.2507, 0.28", "-112.653, -171.848, -51.235, 0.55", "-113.067, -172.914, -51.1677, 0.28", "-113.482, -174.112, -51.0904, 0.55", "-113.982, -175.503, -51.0354, 0.28", "-114.767, -177.604, -50.9668, 0.83", "-115.584, -179.676, -50.8915, 0.28", "-116.218, -181.273, -50.8196, 0.28", "-117.228, -183.794, -50.6648, 0.55", "-118.237, -186.337, -50.5327, 0.28", "-119.245, -188.902, -50.2917, 0.28", "-119.486, -189.502, -50.2285, 0.55", "-120.309, -191.371, -49.9762, 0.28", "-120.76, -192.485, -49.8368, 0.55", "-121.522, -194.475, -49.5078, 0.28", "-122.248, -196.852, -48.9183, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-71.0661, -102.231, 8.12619, 0.28", "-70.0181, -103.612, 8.66733, 0.28", "-69.2716, -104.571, 9.08385, 0.28", "-68.9233, -105.018, 9.27814, 0.55", "-68.4046, -105.684, 9.56758, 0.28", "-67.9929, -106.212, 9.79727, 0.55", "-66.6149, -107.981, 10.5661, 0.28", "-65.6617, -109.31, 11.2824, 0.55", "-60.8194, -114.648, 14.3903, 0.55", "-55.5234, -120.045, 16.473, 0.55", "-50.1117, -125.375, 18.4427, 0.55", "-44.6766, -130.719, 20.3048, 0.55", "-38.0311, -134.469, 22.5256, 0.55", "-31.4223, -138.693, 23.6155, 0.55", "-25.7859, -143.794, 25.6286, 0.55", "-20.7188, -149.694, 26.2439, 0.55", "-16.3353, -155.883, 27.9778, 0.55", "-12.289, -162.211, 29.9657, 0.55", "-7.49308, -168.114, 31.7083, 0.55", "-2.19299, -173.656, 33.298, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-200.252, -31.4539, -186.447, 0.28", "-202.297, -32.0539, -186.766, 0.28", "-204.487, -32.3791, -188.244, 0.28", "-206.603, -32.6102, -189.821, 0.28", "-208.647, -32.7633, -191.321, 0.28", "-211.015, -32.8185, -192.991, 0.28", "-213.402, -32.7972, -195.817, 0.28", "-217.355, -32.6736, -202.016, 0.28", "-218.142, -32.6373, -203.55, 0.55", "-218.768, -32.5822, -204.951, 0.28", "-219.396, -32.5516, -206.362, 0.55", "-224.678, -32.8483, -217.839, 0.55", "-225.29, -32.8989, -219.015, 0.28", "-226.616, -33.1827, -221.317, 0.55", "-227.937, -33.4887, -223.439, 0.55", "-229.639, -34.0464, -225.928, 0.55", "-231.19, -34.6971, -227.747, 0.55", "-233.052, -35.5431, -229.126, 0.55", "-235.2, -36.5561, -230.844, 0.83", "-235.801, -36.8861, -231.326, 0.83", "-237.853, -38.2035, -233.09, 0.28", "-239.975, -39.546, -234.878, 0.55", "-242.364, -40.7622, -236.565, 0.28", "-243.356, -41.2875, -237.201, 0.55", "-244.967, -42.1176, -238.19, 0.28", "-245.925, -42.5632, -238.764, 0.28", "-247.423, -43.0063, -239.507, 0.55", "-250.769, -43.7404, -240.688, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-200.252, -31.4539, -186.447, 0.55", "-199.73, -33.3683, -186.593, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_NBC_da24c6bffc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4500000145978539)
    connect dend_35(0), soma_0(0.4500000145978539)
    connect dend_28(0), soma_0(0.4500000145978539)
    connect dend_21(0), soma_0(0.4500000145978539)
    connect dend_0(0), soma_0(0.4500000145978539)
    connect axon_0(0), soma_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.36225, -9.19447, -1.05898, 3.37379 ) }
    soma_0 { pt3dadd( -7.5192, -8.3328, -0.983264, 5.59841 ) }
    soma_0 { pt3dadd( -6.67615, -7.47114, -0.907549, 5.3333 ) }
    soma_0 { pt3dadd( -5.8331, -6.60947, -0.831834, 5.68073 ) }
    soma_0 { pt3dadd( -4.99005, -5.7478, -0.756119, 6.02816 ) }
    soma_0 { pt3dadd( -4.147, -4.88613, -0.680404, 6.37559 ) }
    soma_0 { pt3dadd( -3.30395, -4.02446, -0.604689, 6.72117 ) }
    soma_0 { pt3dadd( -2.46089, -3.16279, -0.528974, 6.8656 ) }
    soma_0 { pt3dadd( -1.61784, -2.30113, -0.453259, 6.93412 ) }
    soma_0 { pt3dadd( -0.774793, -1.43946, -0.377544, 6.84096 ) }
    soma_0 { pt3dadd( 0.0682572, -0.577789, -0.301829, 6.68704 ) }
    soma_0 { pt3dadd( 0.911308, 0.28388, -0.226114, 6.6716 ) }
    soma_0 { pt3dadd( 1.75436, 1.14555, -0.150399, 6.90842 ) }
    soma_0 { pt3dadd( 2.59741, 2.00722, -0.0746836, 7.45096 ) }
    soma_0 { pt3dadd( 3.44046, 2.86888, 0.00103138, 8.43414 ) }
    soma_0 { pt3dadd( 4.28351, 3.73055, 0.0767464, 9.41614 ) }
    soma_0 { pt3dadd( 5.12656, 4.59222, 0.152461, 10.0048 ) }
    soma_0 { pt3dadd( 5.96961, 5.45389, 0.228176, 10.3326 ) }
    soma_0 { pt3dadd( 6.81266, 6.31556, 0.303891, 9.50982 ) }
    soma_0 { pt3dadd( 7.65571, 7.17723, 0.379606, 7.06842 ) }
    soma_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 3.91086 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 7.80497, 1.11839, 15.3717, 0.83 ) }
    dend_38 { pt3dadd( 7.92886, -1.56946, 16.5299, 0.83 ) }
    dend_38 { pt3dadd( 8.06722, -3.95705, 17.6302, 0.83 ) }
    dend_38 { pt3dadd( 8.25444, -5.92111, 18.547, 0.83 ) }
    dend_38 { pt3dadd( 8.81581, -9.76203, 20.3483, 1.38 ) }
    dend_38 { pt3dadd( 9.43997, -12.9987, 21.8144, 0.83 ) }
    dend_38 { pt3dadd( 10.0875, -15.883, 23.0363, 0.83 ) }
    dend_38 { pt3dadd( 10.7449, -18.4842, 24.0943, 0.55 ) }
    dend_38 { pt3dadd( 11.6291, -21.1535, 25.1039, 1.11 ) }
    dend_38 { pt3dadd( 12.6888, -23.4821, 25.8372, 0.55 ) }
    dend_38 { pt3dadd( 13.8319, -25.3768, 26.204, 0.55 ) }
    dend_38 { pt3dadd( 15.3916, -27.5034, 26.3712, 0.55 ) }
    dend_38 { pt3dadd( 16.9424, -29.3921, 26.2698, 0.55 ) }
    dend_38 { pt3dadd( 18.239, -30.8933, 25.9632, 0.55 ) }
    dend_38 { pt3dadd( 19.5973, -32.387, 25.3189, 0.55 ) }
    dend_38 { pt3dadd( 21.1612, -34.1702, 24.2055, 0.55 ) }
    dend_38 { pt3dadd( 22.0251, -35.2455, 23.4436, 1.11 ) }
    dend_38 { pt3dadd( 23.3829, -37.179, 22.0612, 0.28 ) }
    dend_38 { pt3dadd( 24.1583, -38.4884, 21.1463, 0.55 ) }
    dend_38 { pt3dadd( 25.928, -41.9495, 18.8683, 0.55 ) }
    dend_38 { pt3dadd( 26.9556, -44.1696, 17.5726, 0.55 ) }
    dend_38 { pt3dadd( 28.1859, -47.0641, 16.0676, 0.28 ) }
    dend_38 { pt3dadd( 29.0276, -49.1448, 15.1926, 0.83 ) }
    dend_38 { pt3dadd( 30.4785, -52.9845, 13.6064, 0.28 ) }
    dend_38 { pt3dadd( 30.9185, -54.2405, 13.107, 0.55 ) }
    dend_38 { pt3dadd( 31.6567, -56.2918, 12.3105, 0.28 ) }
    dend_38 { pt3dadd( 32.4216, -58.1445, 11.4884, 0.28 ) }
    dend_38 { pt3dadd( 33.0462, -59.5215, 10.7219, 0.83 ) }
    dend_38 { pt3dadd( 35.415, -64.5188, 7.66534, 0.28 ) }
    dend_38 { pt3dadd( 35.9063, -65.5923, 7.01131, 1.11 ) }
    dend_38 { pt3dadd( 36.9548, -67.9449, 5.58096, 0.28 ) }
    dend_38 { pt3dadd( 37.657, -69.6475, 4.53145, 0.83 ) }
    dend_38 { pt3dadd( 39.5084, -74.235, 1.82676, 0.28 ) }
    dend_38 { pt3dadd( 40.0319, -75.7984, 0.992176, 0.55 ) }
    dend_38 { pt3dadd( 40.5281, -77.7394, 0.222707, 0.28 ) }
    dend_38 { pt3dadd( 40.8183, -79.1981, -0.333449, 1.11 ) }
    dend_38 { pt3dadd( 41.1841, -81.6684, -1.28938, 0.28 ) }
    dend_38 { pt3dadd( 41.3594, -83.1194, -1.87875, 0.83 ) }
    dend_38 { pt3dadd( 41.9281, -87.9094, -3.94299, 0.28 ) }
    dend_38 { pt3dadd( 42.5071, -92.1863, -5.95545, 0.28 ) }
    dend_38 { pt3dadd( 42.779, -93.9421, -6.78238, 0.55 ) }
    dend_38 { pt3dadd( 43.1913, -96.3598, -7.87214, 0.28 ) }
    dend_38 { pt3dadd( 43.3266, -97.0952, -8.15207, 0.55 ) }
    dend_38 { pt3dadd( 43.8, -99.4507, -8.9063, 0.28 ) }
    dend_38 { pt3dadd( 44.2095, -101.191, -9.28703, 0.83 ) }
    dend_38 { pt3dadd( 44.9466, -104.198, -9.68393, 0.28 ) }
    dend_38 { pt3dadd( 45.1218, -104.942, -9.72152, 0.55 ) }
    dend_38 { pt3dadd( 45.8829, -108.251, -9.63862, 0.28 ) }
    dend_38 { pt3dadd( 46.2725, -110.013, -9.54013, 0.55 ) }
    dend_38 { pt3dadd( 46.4863, -111.053, -9.41455, 0.28 ) }
    dend_38 { pt3dadd( 46.8024, -112.631, -9.22896, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 72/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.135, 1.55539, 1.42168, 0.83 ) }
    dend_35 { pt3dadd( 11.2779, 1.1701, 0.383288, 0.83 ) }
    dend_35 { pt3dadd( 12.9442, -0.0706676, -1.67765, 1.11 ) }
    dend_35 { pt3dadd( 14.1331, -1.08889, -3.1468, 1.11 ) }
    dend_35 { pt3dadd( 16.3485, -2.9095, -5.77677, 1.38 ) }
    dend_35 { pt3dadd( 18.3797, -4.35912, -7.88108, 1.11 ) }
    dend_35 { pt3dadd( 19.7218, -5.29487, -9.1487, 1.66 ) }
    dend_35 { pt3dadd( 21.8274, -7.08695, -11.2543, 0.83 ) }
    dend_35 { pt3dadd( 22.7546, -8.13888, -12.3402, 0.83 ) }
    dend_35 { pt3dadd( 23.5304, -9.27012, -13.4324, 1.11 ) }
    dend_35 { pt3dadd( 24.8822, -11.7839, -15.8189, 1.11 ) }
    dend_35 { pt3dadd( 25.5497, -12.979, -17.0894, 1.11 ) }
    dend_35 { pt3dadd( 26.5374, -14.828, -19.1299, 0.83 ) }
    dend_35 { pt3dadd( 27.3691, -16.6847, -21.1799, 0.83 ) }
    dend_35 { pt3dadd( 27.9031, -18.4214, -23.105, 0.83 ) }
    dend_35 { pt3dadd( 28.3086, -20.7751, -25.679, 0.83 ) }
    dend_35 { pt3dadd( 28.3962, -24.3888, -29.856, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.38497, 8.95589, 2.58168, 2.49 ) }
    dend_28 { pt3dadd( 10.241, 12.4706, 1.43095, 2.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.93503, -6.44361, -4.25832, 0.83 ) }
    dend_21 { pt3dadd( -11.9524, -5.70035, -4.28663, 0.83 ) }
    dend_21 { pt3dadd( -15.2952, -4.01318, -4.31508, 0.83 ) }
    dend_21 { pt3dadd( -17.2398, -2.74486, -4.34756, 0.55 ) }
    dend_21 { pt3dadd( -19.9012, -0.809287, -4.40205, 0.83 ) }
    dend_21 { pt3dadd( -21.4698, 0.436303, -4.43578, 0.83 ) }
    dend_21 { pt3dadd( -23.8738, 2.45854, -4.48607, 1.11 ) }
    dend_21 { pt3dadd( -25.8895, 4.41887, -4.52861, 0.83 ) }
    dend_21 { pt3dadd( -27.3107, 5.88547, -4.55524, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( -28.4801, 7.03373, -4.57263, 1.11 ) }
    dend_21 { pt3dadd( -30.9485, 9.19921, -4.60369, 0.83 ) }
    dend_21 { pt3dadd( -33.2024, 11.2083, -4.64985, 0.83 ) }
    dend_21 { pt3dadd( -35.5545, 13.3389, -4.83814, 0.83 ) }
    dend_21 { pt3dadd( -38.2941, 15.7548, -5.17873, 1.11 ) }
    dend_21 { pt3dadd( -40.6453, 17.8986, -5.5011, 0.83 ) }
    dend_21 { pt3dadd( -42.085, 19.2957, -5.70141, 0.83 ) }
    dend_21 { pt3dadd( -45.2841, 22.6054, -6.15102, 0.83 ) }
    dend_21 { pt3dadd( -47.8296, 25.4003, -6.49366, 0.55 ) }
    dend_21 { pt3dadd( -50.2981, 28.2778, -6.70266, 0.55 ) }
    dend_21 { pt3dadd( -52.2703, 30.6143, -6.7078, 0.83 ) }
    dend_21 { pt3dadd( -54.4839, 33.1873, -6.44932, 0.83 ) }
    dend_21 { pt3dadd( -56.0092, 34.8833, -6.18307, 0.55 ) }
    dend_21 { pt3dadd( -57.5807, 36.4615, -5.77925, 0.83 ) }
    dend_21 { pt3dadd( -59.272, 38.2653, -5.11335, 0.55 ) }
    dend_21 { pt3dadd( -61.2277, 40.5414, -4.21078, 0.55 ) }
    dend_21 { pt3dadd( -63.5895, 43.0802, -3.11919, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.47503, -9.81611, -6.25832, 2.49 ) }
    dend_0 { pt3dadd( -7.49471, -14.659, -6.18105, 2.49 ) }
    dend_0 { pt3dadd( -8.08946, -17.4837, -6.13598, 1.66 ) }
    dend_0 { pt3dadd( -8.66336, -20.2094, -6.09249, 2.77 ) }
    dend_0 { pt3dadd( -9.16558, -22.5946, -6.05444, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 22/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 18.9889, 18.7607, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 29.479, 29.4825, 0.455321, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 25/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 28.3962, -24.3888, -29.856, 0.55 ) }
    dend_37 { pt3dadd( 29.6498, -25.1402, -31.4091, 0.55 ) }
    dend_37 { pt3dadd( 30.9974, -26.1252, -32.9955, 0.55 ) }
    dend_37 { pt3dadd( 35.379, -29.6813, -38.0402, 0.55 ) }
    dend_37 { pt3dadd( 37.1472, -31.0747, -39.9608, 0.55 ) }
    dend_37 { pt3dadd( 38.691, -32.1623, -41.5544, 0.55 ) }
    dend_37 { pt3dadd( 41.3384, -33.9093, -44.1878, 0.83 ) }
    dend_37 { pt3dadd( 43.9088, -35.4385, -46.6596, 0.83 ) }
    dend_37 { pt3dadd( 46.1194, -36.7616, -48.7832, 0.55 ) }
    dend_37 { pt3dadd( 47.2844, -37.52, -49.9406, 0.55 ) }
    dend_37 { pt3dadd( 49.2644, -38.7941, -52.3472, 0.55 ) }
    dend_37 { pt3dadd( 50.6155, -39.5993, -54.1519, 0.83 ) }
    dend_37 { pt3dadd( 51.5243, -40.1902, -55.4847, 0.28 ) }
    dend_37 { pt3dadd( 53.109, -41.3589, -57.9987, 0.55 ) }
    dend_37 { pt3dadd( 55.2802, -43.2738, -61.669, 0.83 ) }
    dend_37 { pt3dadd( 57.2946, -45.2615, -64.9372, 0.55 ) }
    dend_37 { pt3dadd( 58.4394, -46.443, -66.5639, 0.55 ) }
    dend_37 { pt3dadd( 60.1663, -48.0361, -68.5366, 0.55 ) }
    dend_37 { pt3dadd( 61.9633, -49.4693, -70.1161, 0.28 ) }
    dend_37 { pt3dadd( 63.214, -50.3086, -70.912, 0.83 ) }
    dend_37 { pt3dadd( 67.0784, -52.5194, -72.6792, 0.55 ) }
    dend_37 { pt3dadd( 69.5564, -53.6795, -73.5719, 0.28 ) }
    dend_37 { pt3dadd( 72.6702, -54.814, -74.705, 0.55 ) }
    dend_37 { pt3dadd( 74.4439, -55.3146, -75.3148, 0.28 ) }
    dend_37 { pt3dadd( 76.0913, -55.7284, -75.8217, 0.55 ) }
    dend_37 { pt3dadd( 78.1941, -56.1651, -76.5671, 0.28 ) }
    dend_37 { pt3dadd( 80.1691, -56.5008, -77.386, 0.55 ) }
    dend_37 { pt3dadd( 83.2556, -56.9673, -78.8665, 0.28 ) }
    dend_37 { pt3dadd( 84.9224, -57.2685, -79.8424, 0.55 ) }
    dend_37 { pt3dadd( 86.5745, -57.6932, -80.9826, 0.55 ) }
    dend_37 { pt3dadd( 88.4656, -58.2151, -83.3178, 0.28 ) }
    dend_37 { pt3dadd( 89.0905, -58.3665, -84.2848, 0.28 ) }
    dend_37 { pt3dadd( 89.8777, -58.5789, -85.7532, 0.55 ) }
    dend_37 { pt3dadd( 91.5631, -59.0744, -89.2933, 0.28 ) }
    dend_37 { pt3dadd( 92.9291, -59.4842, -92.3817, 0.83 ) }
    dend_37 { pt3dadd( 98.3588, -61.1122, -105.086, 0.28 ) }
    dend_37 { pt3dadd( 98.932, -61.2775, -106.509, 0.55 ) }
    dend_37 { pt3dadd( 100.088, -61.5746, -109.476, 0.55 ) }
    dend_37 { pt3dadd( 101.233, -61.8714, -112.495, 0.28 ) }
    dend_37 { pt3dadd( 102.114, -62.0815, -114.717, 0.55 ) }
    dend_37 { pt3dadd( 105.104, -62.761, -121.761, 0.55 ) }
    dend_37 { pt3dadd( 107.858, -63.5922, -127.247, 0.55 ) }
    dend_37 { pt3dadd( 109.196, -63.9933, -129.803, 0.28 ) }
    dend_37 { pt3dadd( 110.139, -64.2393, -131.492, 0.55 ) }
    dend_37 { pt3dadd( 110.997, -64.4912, -132.991, 0.28 ) }
    dend_37 { pt3dadd( 112.213, -64.9985, -134.989, 0.55 ) }
    dend_37 { pt3dadd( 113.25, -65.6325, -136.581, 0.28 ) }
    dend_37 { pt3dadd( 114.391, -66.486, -138.327, 0.55 ) }
    dend_37 { pt3dadd( 115.32, -67.2091, -139.98, 0.55 ) }
    dend_37 { pt3dadd( 116.681, -68.2093, -142.538, 0.28 ) }
    dend_37 { pt3dadd( 118.091, -69.2834, -145.201, 0.55 ) }
    dend_37 { pt3dadd( 119.804, -70.6547, -148.556, 0.28 ) }
    dend_37 { pt3dadd( 120.944, -71.6051, -150.803, 0.55 ) }
    dend_37 { pt3dadd( 123.096, -73.6266, -155.037, 0.28 ) }
    dend_37 { pt3dadd( 123.657, -74.1262, -156.007, 0.55 ) }
    dend_37 { pt3dadd( 124.98, -75.215, -158.033, 0.28 ) }
    dend_37 { pt3dadd( 126.989, -76.8343, -160.761, 0.55 ) }
    dend_37 { pt3dadd( 128.535, -78.0761, -162.552, 0.28 ) }
    dend_37 { pt3dadd( 130.079, -79.371, -164.223, 0.55 ) }
    dend_37 { pt3dadd( 131.452, -80.6057, -165.681, 0.28 ) }
    dend_37 { pt3dadd( 132.91, -81.9696, -167.369, 0.55 ) }
    dend_37 { pt3dadd( 133.539, -82.5548, -168.203, 0.28 ) }
    dend_37 { pt3dadd( 134.374, -83.2833, -169.604, 0.55 ) }
    dend_37 { pt3dadd( 135.396, -84.269, -171.854, 0.28 ) }
    dend_37 { pt3dadd( 135.76, -84.6217, -172.74, 0.55 ) }
    dend_37 { pt3dadd( 136.026, -84.8952, -173.442, 0.28 ) }
    dend_37 { pt3dadd( 137.012, -86.0281, -176.23, 0.55 ) }
    dend_37 { pt3dadd( 139.379, -89.1525, -183.696, 0.28 ) }
    dend_37 { pt3dadd( 139.833, -89.8497, -185.348, 0.55 ) }
    dend_37 { pt3dadd( 140.229, -90.6078, -186.952, 0.28 ) }
    dend_37 { pt3dadd( 140.546, -91.2401, -188.117, 0.28 ) }
    dend_37 { pt3dadd( 140.999, -92.1576, -189.628, 0.55 ) }
    dend_37 { pt3dadd( 142.01, -94.3059, -192.411, 0.28 ) }
    dend_37 { pt3dadd( 142.949, -96.0899, -194.407, 0.55 ) }
    dend_37 { pt3dadd( 143.957, -97.7551, -196.136, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( 145.341, -99.8652, -198.095, 0.28 ) }
    dend_37 { pt3dadd( 147.258, -102.612, -199.998, 0.83 ) }
    dend_37 { pt3dadd( 148.905, -104.881, -201.055, 0.28 ) }
    dend_37 { pt3dadd( 151.784, -109.153, -201.949, 0.55 ) }
    dend_37 { pt3dadd( 153.738, -112.436, -202.12, 0.28 ) }
    dend_37 { pt3dadd( 154.494, -113.824, -202.069, 0.55 ) }
    dend_37 { pt3dadd( 156.798, -118.77, -201.417, 0.28 ) }
    dend_37 { pt3dadd( 157.726, -121.03, -200.967, 0.55 ) }
    dend_37 { pt3dadd( 158.965, -124.313, -200.312, 0.28 ) }
    dend_37 { pt3dadd( 159.521, -125.905, -199.986, 0.28 ) }
    dend_37 { pt3dadd( 160.068, -127.451, -199.853, 0.55 ) }
    dend_37 { pt3dadd( 161.215, -130.332, -199.818, 0.28 ) }
    dend_37 { pt3dadd( 162.582, -133.258, -200.152, 0.28 ) }
    dend_37 { pt3dadd( 163.314, -134.693, -200.391, 0.55 ) }
    dend_37 { pt3dadd( 165.064, -137.772, -201.07, 0.28 ) }
    dend_37 { pt3dadd( 166.53, -140.218, -201.662, 0.55 ) }
    dend_37 { pt3dadd( 168.182, -142.989, -202.437, 0.28 ) }
    dend_37 { pt3dadd( 169.346, -144.763, -203.176, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 18/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 28.3962, -24.3888, -29.856, 1.11 ) }
    dend_36 { pt3dadd( 29.0647, -26.3876, -30.3907, 1.11 ) }
    dend_36 { pt3dadd( 29.9187, -28.6005, -31.053, 0.55 ) }
    dend_36 { pt3dadd( 30.551, -30.1348, -31.5274, 0.55 ) }
    dend_36 { pt3dadd( 31.3458, -31.9687, -32.0756, 0.55 ) }
    dend_36 { pt3dadd( 32.0052, -33.4876, -32.4756, 0.55 ) }
    dend_36 { pt3dadd( 32.7545, -35.1938, -32.9137, 0.83 ) }
    dend_36 { pt3dadd( 33.4994, -36.8362, -33.3051, 0.55 ) }
    dend_36 { pt3dadd( 34.075, -38.0013, -33.511, 0.28 ) }
    dend_36 { pt3dadd( 34.59, -39.021, -33.6553, 0.55 ) }
    dend_36 { pt3dadd( 35.363, -40.6271, -33.7796, 0.28 ) }
    dend_36 { pt3dadd( 35.8135, -41.5846, -33.808, 0.55 ) }
    dend_36 { pt3dadd( 36.5774, -43.1774, -33.92, 0.55 ) }
    dend_36 { pt3dadd( 37.1828, -44.2508, -34.0509, 0.28 ) }
    dend_36 { pt3dadd( 37.4952, -44.7041, -34.1624, 0.55 ) }
    dend_36 { pt3dadd( 38.3289, -45.7706, -34.5404, 0.28 ) }
    dend_36 { pt3dadd( 39.8796, -47.5273, -35.2522, 0.55 ) }
    dend_36 { pt3dadd( 41.543, -49.2099, -35.94, 0.28 ) }
    dend_36 { pt3dadd( 42.7907, -50.3307, -36.4595, 0.83 ) }
    dend_36 { pt3dadd( 44.5631, -51.7887, -37.1326, 0.28 ) }
    dend_36 { pt3dadd( 46.1483, -53.0787, -37.7452, 0.55 ) }
    dend_36 { pt3dadd( 47.3561, -54.0502, -38.2015, 0.28 ) }
    dend_36 { pt3dadd( 49.0691, -55.4643, -38.7597, 0.55 ) }
    dend_36 { pt3dadd( 50.224, -56.4494, -39.0914, 0.55 ) }
    dend_36 { pt3dadd( 51.7489, -57.8477, -39.5461, 0.55 ) }
    dend_36 { pt3dadd( 53.0277, -59.1079, -39.9224, 0.28 ) }
    dend_36 { pt3dadd( 54.0683, -60.1787, -40.2189, 0.55 ) }
    dend_36 { pt3dadd( 54.68, -60.8779, -40.4112, 0.28 ) }
    dend_36 { pt3dadd( 55.3321, -61.6684, -40.5885, 0.55 ) }
    dend_36 { pt3dadd( 55.8526, -62.3006, -40.6659, 0.28 ) }
    dend_36 { pt3dadd( 56.7511, -63.3368, -40.6987, 0.55 ) }
    dend_36 { pt3dadd( 57.7174, -64.3934, -40.6073, 0.28 ) }
    dend_36 { pt3dadd( 59.0839, -65.8644, -40.4049, 0.55 ) }
    dend_36 { pt3dadd( 60.1762, -67.0146, -40.1916, 0.55 ) }
    dend_36 { pt3dadd( 61.4416, -68.3368, -39.8955, 0.28 ) }
    dend_36 { pt3dadd( 62.4305, -69.4193, -39.646, 0.55 ) }
    dend_36 { pt3dadd( 63.4034, -70.5278, -39.3787, 0.28 ) }
    dend_36 { pt3dadd( 64.1595, -71.428, -39.1943, 0.55 ) }
    dend_36 { pt3dadd( 64.5689, -71.9454, -39.0866, 0.28 ) }
    dend_36 { pt3dadd( 64.7876, -72.2457, -39.0517, 0.55 ) }
    dend_36 { pt3dadd( 65.5833, -73.3558, -39.0226, 0.28 ) }
    dend_36 { pt3dadd( 66.6145, -74.7888, -39.1271, 0.55 ) }
    dend_36 { pt3dadd( 67.2501, -75.6138, -39.2265, 0.28 ) }
    dend_36 { pt3dadd( 67.9615, -76.4721, -39.3408, 0.55 ) }
    dend_36 { pt3dadd( 68.9984, -77.6432, -39.5139, 0.28 ) }
    dend_36 { pt3dadd( 69.6718, -78.3583, -39.5326, 0.55 ) }
    dend_36 { pt3dadd( 70.4022, -79.0874, -39.5321, 0.28 ) }
    dend_36 { pt3dadd( 71.2929, -79.9921, -39.5251, 0.55 ) }
    dend_36 { pt3dadd( 72.2054, -80.8873, -39.5106, 0.28 ) }
    dend_36 { pt3dadd( 72.7809, -81.4215, -39.5087, 0.83 ) }
    dend_36 { pt3dadd( 74.8501, -83.2628, -39.4511, 0.28 ) }
    dend_36 { pt3dadd( 76.3708, -84.5636, -39.4182, 0.28 ) }
    dend_36 { pt3dadd( 77.2108, -85.2586, -39.3991, 0.55 ) }
    dend_36 { pt3dadd( 77.8582, -85.7528, -39.4378, 0.28 ) }
    dend_36 { pt3dadd( 79.205, -86.6608, -39.6465, 0.55 ) }
    dend_36 { pt3dadd( 80.1547, -87.2042, -39.8414, 0.28 ) }
    dend_36 { pt3dadd( 81.3722, -87.7376, -40.1495, 0.55 ) }
    dend_36 { pt3dadd( 82.5267, -88.1132, -40.393, 0.28 ) }
    dend_36 { pt3dadd( 83.85, -88.4259, -40.658, 0.55 ) }
    dend_36 { pt3dadd( 85.4219, -88.7056, -41.0431, 0.28 ) }
    dend_36 { pt3dadd( 86.3974, -88.8214, -41.3151, 0.55 ) }
    dend_36 { pt3dadd( 88.142, -88.9653, -41.8653, 0.28 ) }
    dend_36 { pt3dadd( 89.3853, -89.0194, -42.2628, 0.55 ) }
    dend_36 { pt3dadd( 90.4031, -89.0325, -42.5683, 0.28 ) }
    dend_36 { pt3dadd( 91.9913, -89.0643, -42.9111, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 10.241, 12.4706, 1.43095, 1.38 ) }
    dend_34 { pt3dadd( 9.08382, 14.6597, -1.62757, 1.38 ) }
    dend_34 { pt3dadd( 7.65943, 18.0114, -6.79375, 1.38 ) }
    dend_34 { pt3dadd( 7.12166, 20.2297, -10.9941, 1.38 ) }
    dend_34 { pt3dadd( 6.60546, 23.18, -16.5548, 1.11 ) }
    dend_34 { pt3dadd( 6.23366, 25.3764, -20.6627, 1.11 ) }
    dend_34 { pt3dadd( 5.71804, 27.2319, -24.2585, 0.83 ) }
    dend_34 { pt3dadd( 5.05415, 28.8184, -28.0433, 0.83 ) }
    dend_34 { pt3dadd( 2.97052, 32.1096, -36.3122, 1.66 ) }
    dend_34 { pt3dadd( 1.96085, 33.4402, -39.0502, 0.55 ) }
    dend_34 { pt3dadd( 1.49364, 34.1161, -40.0329, 0.55 ) }
    dend_34 { pt3dadd( -1.31041, 37.8539, -44.3415, 0.55 ) }
    dend_34 { pt3dadd( -2.68969, 39.4587, -45.8952, 0.28 ) }
    dend_34 { pt3dadd( -6.05333, 43.4206, -48.9485, 0.83 ) }
    dend_34 { pt3dadd( -11.1165, 50.1746, -52.9264, 0.55 ) }
    dend_34 { pt3dadd( -13.1787, 53.5878, -54.7356, 0.55 ) }
    dend_34 { pt3dadd( -14.5459, 56.7763, -56.1508, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( -14.9541, 58.3546, -56.7142, 0.55 ) }
    dend_34 { pt3dadd( -15.383, 60.9202, -57.3711, 0.83 ) }
    dend_34 { pt3dadd( -15.5581, 64.2921, -57.8955, 0.55 ) }
    dend_34 { pt3dadd( -15.484, 66.7088, -57.9254, 0.55 ) }
    dend_34 { pt3dadd( -15.2495, 70.0967, -58.0755, 0.55 ) }
    dend_34 { pt3dadd( -15.0616, 72.021, -58.2137, 0.55 ) }
    dend_34 { pt3dadd( -14.8535, 75.4386, -58.6001, 0.55 ) }
    dend_34 { pt3dadd( -14.8263, 77.6249, -58.9213, 0.55 ) }
    dend_34 { pt3dadd( -14.909, 80.4782, -59.6343, 0.83 ) }
    dend_34 { pt3dadd( -15.1633, 83.7306, -60.7013, 0.28 ) }
    dend_34 { pt3dadd( -15.4619, 85.9607, -61.5679, 0.83 ) }
    dend_34 { pt3dadd( -15.9576, 89.3414, -62.9506, 0.28 ) }
    dend_34 { pt3dadd( -16.2871, 91.7296, -63.9635, 0.83 ) }
    dend_34 { pt3dadd( -16.9598, 96.6228, -66.0105, 0.28 ) }
    dend_34 { pt3dadd( -17.1832, 98.5178, -66.8274, 0.28 ) }
    dend_34 { pt3dadd( -17.3507, 100.216, -67.5517, 0.55 ) }
    dend_34 { pt3dadd( -17.5649, 104.142, -69.361, 0.83 ) }
    dend_34 { pt3dadd( -17.6113, 106.303, -70.3543, 0.28 ) }
    dend_34 { pt3dadd( -17.6411, 107.429, -70.8812, 0.55 ) }
    dend_34 { pt3dadd( -17.749, 111.207, -72.5434, 0.28 ) }
    dend_34 { pt3dadd( -17.874, 113.541, -73.7114, 0.83 ) }
    dend_34 { pt3dadd( -18.1463, 115.873, -75.0036, 0.28 ) }
    dend_34 { pt3dadd( -18.6043, 117.712, -76.1181, 0.55 ) }
    dend_34 { pt3dadd( -19.2979, 119.887, -77.4654, 0.28 ) }
    dend_34 { pt3dadd( -19.6033, 120.753, -77.9703, 0.55 ) }
    dend_34 { pt3dadd( -20.4373, 122.957, -79.1438, 0.28 ) }
    dend_34 { pt3dadd( -20.8277, 124.127, -79.7943, 0.55 ) }
    dend_34 { pt3dadd( -21.9704, 128.152, -81.9663, 0.83 ) }
    dend_34 { pt3dadd( -22.4622, 130.356, -83.1536, 0.55 ) }
    dend_34 { pt3dadd( -22.7404, 132.67, -84.3871, 0.28 ) }
    dend_34 { pt3dadd( -22.8224, 134.469, -85.3465, 0.83 ) }
    dend_34 { pt3dadd( -22.669, 138.492, -87.5808, 0.55 ) }
    dend_34 { pt3dadd( -22.4762, 140.461, -88.7302, 0.28 ) }
    dend_34 { pt3dadd( -22.2757, 141.448, -89.328, 0.55 ) }
    dend_34 { pt3dadd( -21.6145, 144.299, -91.0533, 0.28 ) }
    dend_34 { pt3dadd( -21.4324, 144.947, -91.4436, 0.55 ) }
    dend_34 { pt3dadd( -20.4282, 148.227, -93.2393, 0.28 ) }
    dend_34 { pt3dadd( -19.9089, 149.937, -94.0997, 0.83 ) }
    dend_34 { pt3dadd( -18.8667, 153.422, -95.7485, 0.28 ) }
    dend_34 { pt3dadd( -18.4339, 154.98, -96.3624, 0.55 ) }
    dend_34 { pt3dadd( -17.7578, 157.757, -97.2417, 0.28 ) }
    dend_34 { pt3dadd( -17.2393, 159.917, -97.8115, 0.55 ) }
    dend_34 { pt3dadd( -16.4002, 163.771, -98.5884, 0.28 ) }
    dend_34 { pt3dadd( -15.8284, 166.669, -99.986, 0.55 ) }
    dend_34 { pt3dadd( -15.3395, 169.674, -102.004, 0.55 ) }
    dend_34 { pt3dadd( -14.7421, 173.501, -105.086, 0.28 ) }
    dend_34 { pt3dadd( -14.4313, 175.512, -106.905, 0.55 ) }
    dend_34 { pt3dadd( -14.0747, 177.8, -109.166, 0.55 ) }
    dend_34 { pt3dadd( -11.936, 191.363, -123.47, 0.55 ) }
    dend_34 { pt3dadd( -11.6619, 193.061, -125.374, 0.28 ) }
    dend_34 { pt3dadd( -11.4949, 194.036, -126.507, 0.55 ) }
    dend_34 { pt3dadd( -11.2581, 195.503, -128.208, 0.28 ) }
    dend_34 { pt3dadd( -11.109, 196.495, -129.254, 0.55 ) }
    dend_34 { pt3dadd( -10.7824, 198.527, -130.696, 0.55 ) }
    dend_34 { pt3dadd( -10.5255, 200.217, -130.849, 0.28 ) }
    dend_34 { pt3dadd( -10.2072, 202.353, -131.181, 0.55 ) }
    dend_34 { pt3dadd( -10.0095, 204.028, -131.532, 0.55 ) }
    dend_34 { pt3dadd( -9.94026, 205.005, -131.815, 0.28 ) }
    dend_34 { pt3dadd( -9.85787, 207.828, -132.818, 0.55 ) }
    dend_34 { pt3dadd( -9.8978, 210.099, -133.823, 0.55 ) }
    dend_34 { pt3dadd( -9.92113, 211.524, -134.482, 0.28 ) }
    dend_34 { pt3dadd( -9.91393, 212.208, -134.81, 0.55 ) }
    dend_34 { pt3dadd( -9.84343, 214.445, -135.824, 0.28 ) }
    dend_34 { pt3dadd( -9.82352, 215.77, -136.365, 0.55 ) }
    dend_34 { pt3dadd( -9.76861, 218.052, -137.251, 0.28 ) }
    dend_34 { pt3dadd( -9.62552, 221.736, -138.612, 0.55 ) }
    dend_34 { pt3dadd( -9.34691, 226.304, -140.229, 0.28 ) }
    dend_34 { pt3dadd( -9.11564, 229.42, -141.225, 0.55 ) }
    dend_34 { pt3dadd( -8.91869, 231.735, -141.889, 0.55 ) }
    dend_34 { pt3dadd( -8.63962, 234.815, -142.701, 0.55 ) }
    dend_34 { pt3dadd( -8.39595, 237.24, -143.228, 0.28 ) }
    dend_34 { pt3dadd( -8.13526, 240.106, -143.732, 0.55 ) }
    dend_34 { pt3dadd( -7.77112, 243.145, -144.069, 0.55 ) }
    dend_34 { pt3dadd( -7.69414, 243.619, -144.106, 0.28 ) }
    dend_34 { pt3dadd( -7.4394, 244.832, -144.191, 0.28 ) }
    dend_34 { pt3dadd( -6.52567, 248.622, -144.43, 0.55 ) }
    dend_34 { pt3dadd( -5.73768, 251.244, -144.745, 0.83 ) }
    dend_34 { pt3dadd( -4.9103, 253.563, -145.011, 0.28 ) }
    dend_34 { pt3dadd( -4.14486, 255.355, -145.207, 0.55 ) }
    dend_34 { pt3dadd( -2.43711, 258.678, -145.208, 0.28 ) }
    dend_34 { pt3dadd( -0.848758, 261.225, -144.952, 0.55 ) }
    dend_34 { pt3dadd( 1.51653, 264.295, -144.316, 0.28 ) }
    dend_34 { pt3dadd( 4.31003, 267.297, -143.393, 0.55 ) }
    dend_34 { pt3dadd( 6.36185, 269.137, -142.679, 0.55 ) }
    dend_34 { pt3dadd( 10.9558, 272.876, -140.827, 0.28 ) }
    dend_34 { pt3dadd( 12.5916, 274.049, -140.041, 0.28 ) }
    dend_34 { pt3dadd( 13.997, 274.938, -139.302, 0.55 ) }
    dend_34 { pt3dadd( 16.2497, 276.208, -138.067, 0.28 ) }
    dend_34 { pt3dadd( 19.9388, 278.066, -136.665, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 10.241, 12.4706, 1.43095, 0.83 ) }
    dend_29 { pt3dadd( 11.2029, 15.5647, 0.168908, 0.83 ) }
    dend_29 { pt3dadd( 12.3846, 18.4235, -1.07416, 0.83 ) }
    dend_29 { pt3dadd( 14.0904, 21.3922, -2.56997, 0.83 ) }
    dend_29 { pt3dadd( 15.7241, 23.8354, -4.08422, 1.38 ) }
    dend_29 { pt3dadd( 16.9096, 25.628, -5.28796, 0.83 ) }
    dend_29 { pt3dadd( 17.8832, 27.1357, -6.49275, 0.55 ) }
    dend_29 { pt3dadd( 19.482, 29.5839, -8.84304, 0.55 ) }
    dend_29 { pt3dadd( 21.1703, 31.9945, -11.3782, 0.83 ) }
    dend_29 { pt3dadd( 22.9939, 34.2937, -14.1158, 0.83 ) }
    dend_29 { pt3dadd( 24.5867, 36.1315, -16.6264, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 27.1181, 39.0924, -20.9165, 0.55 ) }
    dend_29 { pt3dadd( 27.5499, 39.7183, -21.8396, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -63.5895, 43.0802, -3.11919, 0.55 ) }
    dend_25 { pt3dadd( -66.1153, 46.345, -4.67746, 0.55 ) }
    dend_25 { pt3dadd( -68.5603, 49.6377, -6.47752, 0.55 ) }
    dend_25 { pt3dadd( -70.2688, 51.8376, -8.04169, 0.55 ) }
    dend_25 { pt3dadd( -72.8411, 55.0655, -10.8239, 0.55 ) }
    dend_25 { pt3dadd( -74.3505, 56.9626, -12.6186, 0.28 ) }
    dend_25 { pt3dadd( -75.9602, 58.94, -14.4986, 0.83 ) }
    dend_25 { pt3dadd( -78.9046, 62.4123, -18.4862, 0.55 ) }
    dend_25 { pt3dadd( -81.0102, 65.0069, -21.7684, 0.55 ) }
    dend_25 { pt3dadd( -82.5112, 66.9374, -24.2769, 0.28 ) }
    dend_25 { pt3dadd( -83.8828, 68.7344, -26.5326, 0.55 ) }
    dend_25 { pt3dadd( -85.7584, 71.1524, -29.3203, 0.55 ) }
    dend_25 { pt3dadd( -88.3445, 74.6977, -33.0104, 0.55 ) }
    dend_25 { pt3dadd( -90.117, 77.5042, -35.2766, 0.28 ) }
    dend_25 { pt3dadd( -91.5995, 80.2224, -36.8404, 0.55 ) }
    dend_25 { pt3dadd( -92.8476, 82.7031, -37.9013, 0.28 ) }
    dend_25 { pt3dadd( -94.1405, 85.5675, -38.8395, 0.55 ) }
    dend_25 { pt3dadd( -94.6712, 86.7991, -39.1326, 0.55 ) }
    dend_25 { pt3dadd( -95.5634, 88.7878, -39.4522, 0.55 ) }
    dend_25 { pt3dadd( -96.8194, 91.4485, -39.8987, 0.28 ) }
    dend_25 { pt3dadd( -98.0237, 94.0221, -40.4212, 0.55 ) }
    dend_25 { pt3dadd( -99.1904, 96.3695, -40.9932, 0.28 ) }
    dend_25 { pt3dadd( -101.324, 100.216, -42.1578, 0.55 ) }
    dend_25 { pt3dadd( -102.744, 102.53, -42.9638, 0.28 ) }
    dend_25 { pt3dadd( -103.01, 102.938, -43.1455, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -63.5895, 43.0802, -3.11919, 0.55 ) }
    dend_22 { pt3dadd( -65.7374, 45.9456, -2.15225, 0.55 ) }
    dend_22 { pt3dadd( -67.2124, 47.6812, -1.61332, 0.55 ) }
    dend_22 { pt3dadd( -70.4955, 50.993, -0.497025, 0.55 ) }
    dend_22 { pt3dadd( -72.4018, 52.6351, 0.0603901, 0.83 ) }
    dend_22 { pt3dadd( -74.5232, 54.1723, 0.649133, 0.55 ) }
    dend_22 { pt3dadd( -77.6888, 56.4662, 1.52768, 0.55 ) }
    dend_22 { pt3dadd( -79.5278, 57.7868, 2.08043, 0.55 ) }
    dend_22 { pt3dadd( -83.2992, 60.1373, 3.16754, 0.83 ) }
    dend_22 { pt3dadd( -86.6043, 61.7033, 3.99081, 0.83 ) }
    dend_22 { pt3dadd( -90.8458, 63.4806, 4.81431, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.16558, -22.5946, -6.05444, 2.49 ) }
    dend_16 { pt3dadd( -8.62991, -25.1417, -5.91256, 2.49 ) }
    dend_16 { pt3dadd( -8.20548, -27.1598, -5.80014, 1.38 ) }
    dend_16 { pt3dadd( -8.14317, -27.4561, -5.78364, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.16558, -22.5946, -6.05444, 1.38 ) }
    dend_1 { pt3dadd( -10.2752, -27.431, 1.08456, 1.38 ) }
    dend_1 { pt3dadd( -10.7065, -29.3108, 3.85922, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 45/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.479, 29.4825, 0.455321, 0.28 ) }
    axon_1 { pt3dadd( 39.9692, 40.2043, 0.455321, 0.28 ) }
    axon_1 { pt3dadd( 50.4593, 50.9261, 0.455321, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 48/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 27.5499, 39.7183, -21.8396, 0.55 ) }
    dend_31 { pt3dadd( 28.2808, 41.3597, -21.895, 0.55 ) }
    dend_31 { pt3dadd( 29.2935, 43.6792, -22.0869, 0.83 ) }
    dend_31 { pt3dadd( 30.146, 45.6967, -22.4044, 0.55 ) }
    dend_31 { pt3dadd( 31.4067, 48.5527, -22.935, 0.28 ) }
    dend_31 { pt3dadd( 32.7567, 51.5266, -23.5083, 0.55 ) }
    dend_31 { pt3dadd( 34.6071, 55.421, -24.2831, 0.55 ) }
    dend_31 { pt3dadd( 37.0832, 60.2159, -25.3312, 0.55 ) }
    dend_31 { pt3dadd( 39.1116, 63.8278, -26.1459, 0.55 ) }
    dend_31 { pt3dadd( 40.3299, 65.8264, -26.5882, 0.83 ) }
    dend_31 { pt3dadd( 41.4603, 67.4494, -26.9337, 0.28 ) }
    dend_31 { pt3dadd( 42.2784, 68.5438, -27.156, 0.28 ) }
    dend_31 { pt3dadd( 44.1423, 70.6847, -27.5474, 0.55 ) }
    dend_31 { pt3dadd( 46.5936, 72.8317, -27.875, 0.83 ) }
    dend_31 { pt3dadd( 48.5777, 74.3774, -28.0553, 0.83 ) }
    dend_31 { pt3dadd( 50.5023, 75.8006, -28.2478, 0.28 ) }
    dend_31 { pt3dadd( 51.7715, 76.7485, -28.3813, 0.55 ) }
    dend_31 { pt3dadd( 54.0127, 78.5127, -28.6454, 0.55 ) }
    dend_31 { pt3dadd( 57.0543, 80.9611, -29.05, 0.55 ) }
    dend_31 { pt3dadd( 59.7475, 83.2666, -29.4203, 0.83 ) }
    dend_31 { pt3dadd( 62.3589, 85.842, -29.8454, 0.28 ) }
    dend_31 { pt3dadd( 64.4959, 88.3167, -30.2214, 0.55 ) }
    dend_31 { pt3dadd( 65.3295, 89.4299, -30.402, 0.55 ) }
    dend_31 { pt3dadd( 66.7143, 91.5757, -30.7437, 0.55 ) }
    dend_31 { pt3dadd( 68.7066, 95.0106, -31.2682, 0.83 ) }
    dend_31 { pt3dadd( 70.4376, 98.0597, -31.8027, 0.28 ) }
    dend_31 { pt3dadd( 71.6547, 100.188, -32.1891, 0.55 ) }
    dend_31 { pt3dadd( 74.0336, 104.131, -33.0, 0.55 ) }
    dend_31 { pt3dadd( 75.2086, 106.023, -33.4173, 0.55 ) }
    dend_31 { pt3dadd( 77.0251, 108.938, -34.1629, 0.83 ) }
    dend_31 { pt3dadd( 79.4514, 112.704, -35.2422, 0.28 ) }
    dend_31 { pt3dadd( 81.5555, 115.775, -36.166, 0.55 ) }
    dend_31 { pt3dadd( 84.0582, 119.352, -37.3053, 0.28 ) }
    dend_31 { pt3dadd( 85.3443, 121.278, -37.94, 0.55 ) }
    dend_31 { pt3dadd( 86.6473, 123.27, -38.6559, 0.28 ) }
    dend_31 { pt3dadd( 86.9055, 123.659, -38.8114, 0.55 ) }
    dend_31 { pt3dadd( 87.9144, 125.148, -39.4516, 0.28 ) }
    dend_31 { pt3dadd( 88.8719, 126.52, -40.0789, 0.55 ) }
    dend_31 { pt3dadd( 90.2111, 128.34, -40.8474, 0.28 ) }
    dend_31 { pt3dadd( 91.5977, 130.087, -41.5271, 0.55 ) }
    dend_31 { pt3dadd( 93.7649, 132.6, -42.4373, 0.55 ) }
    dend_31 { pt3dadd( 95.3282, 134.393, -43.0458, 0.28 ) }
    dend_31 { pt3dadd( 96.5497, 135.796, -43.4515, 0.55 ) }
    dend_31 { pt3dadd( 97.77, 137.193, -43.7686, 0.28 ) }
    dend_31 { pt3dadd( 99.4501, 139.129, -44.0866, 0.55 ) }
    dend_31 { pt3dadd( 101.922, 141.952, -44.318, 0.28 ) }
    dend_31 { pt3dadd( 103.096, 143.319, -44.3171, 0.28 ) }
    dend_31 { pt3dadd( 105.686, 146.385, -44.1021, 0.55 ) }
    dend_31 { pt3dadd( 107.458, 148.48, -43.9382, 0.28 ) }
    dend_31 { pt3dadd( 109.022, 150.35, -43.8629, 0.55 ) }
    dend_31 { pt3dadd( 110.686, 152.376, -43.8261, 0.28 ) }
    dend_31 { pt3dadd( 111.614, 153.531, -43.8238, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 112.678, 154.851, -43.8768, 0.28 ) }
    dend_31 { pt3dadd( 114.45, 157.273, -44.1319, 0.55 ) }
    dend_31 { pt3dadd( 115.834, 159.35, -44.4071, 0.28 ) }
    dend_31 { pt3dadd( 117.583, 162.351, -44.8825, 0.55 ) }
    dend_31 { pt3dadd( 118.482, 164.133, -45.211, 0.28 ) }
    dend_31 { pt3dadd( 119.234, 165.689, -45.5072, 0.55 ) }
    dend_31 { pt3dadd( 120.337, 168.107, -45.9408, 0.28 ) }
    dend_31 { pt3dadd( 121.431, 170.632, -46.3125, 0.55 ) }
    dend_31 { pt3dadd( 122.52, 173.136, -46.6107, 0.28 ) }
    dend_31 { pt3dadd( 123.306, 174.903, -46.8503, 0.55 ) }
    dend_31 { pt3dadd( 124.462, 177.316, -47.1812, 0.28 ) }
    dend_31 { pt3dadd( 125.075, 178.421, -47.2984, 0.55 ) }
    dend_31 { pt3dadd( 126.53, 180.916, -47.5125, 0.55 ) }
    dend_31 { pt3dadd( 128.237, 183.758, -47.5579, 0.55 ) }
    dend_31 { pt3dadd( 129.887, 186.377, -47.5279, 0.28 ) }
    dend_31 { pt3dadd( 131.11, 188.271, -47.4598, 0.55 ) }
    dend_31 { pt3dadd( 134.079, 192.941, -47.114, 0.28 ) }
    dend_31 { pt3dadd( 135.264, 194.762, -46.9454, 0.55 ) }
    dend_31 { pt3dadd( 137.487, 198.098, -46.4647, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 19/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 27.5499, 39.7183, -21.8396, 0.55 ) }
    dend_30 { pt3dadd( 29.0115, 42.1638, -23.0466, 0.55 ) }
    dend_30 { pt3dadd( 30.1394, 44.1692, -23.9185, 0.55 ) }
    dend_30 { pt3dadd( 30.7162, 45.1243, -24.5024, 0.28 ) }
    dend_30 { pt3dadd( 31.0994, 45.8022, -25.0108, 0.83 ) }
    dend_30 { pt3dadd( 31.9061, 47.3717, -26.2412, 0.55 ) }
    dend_30 { pt3dadd( 32.2987, 48.265, -26.9886, 0.28 ) }
    dend_30 { pt3dadd( 33.212, 50.9515, -29.4563, 0.83 ) }
    dend_30 { pt3dadd( 34.3579, 54.4991, -33.1296, 0.55 ) }
    dend_30 { pt3dadd( 34.9004, 56.0872, -34.8898, 0.28 ) }
    dend_30 { pt3dadd( 35.1482, 56.7865, -35.8663, 0.83 ) }
    dend_30 { pt3dadd( 35.8079, 58.647, -38.7646, 0.55 ) }
    dend_30 { pt3dadd( 36.4237, 60.6127, -41.883, 0.55 ) }
    dend_30 { pt3dadd( 36.7345, 61.9573, -44.0427, 0.28 ) }
    dend_30 { pt3dadd( 36.9363, 63.0038, -45.6255, 0.83 ) }
    dend_30 { pt3dadd( 37.8829, 67.7613, -52.3836, 0.55 ) }
    dend_30 { pt3dadd( 38.1301, 69.049, -54.1104, 0.55 ) }
    dend_30 { pt3dadd( 38.3539, 70.4052, -55.7316, 0.83 ) }
    dend_30 { pt3dadd( 38.6278, 72.9995, -58.422, 0.55 ) }
    dend_30 { pt3dadd( 38.741, 74.3616, -59.6651, 0.83 ) }
    dend_30 { pt3dadd( 38.8973, 76.2548, -61.1651, 0.28 ) }
    dend_30 { pt3dadd( 38.9877, 77.5098, -61.8794, 0.55 ) }
    dend_30 { pt3dadd( 39.1471, 79.8495, -63.2376, 0.28 ) }
    dend_30 { pt3dadd( 39.2409, 80.8905, -63.8494, 0.55 ) }
    dend_30 { pt3dadd( 39.4655, 82.8437, -64.9066, 0.28 ) }
    dend_30 { pt3dadd( 39.6287, 83.9628, -65.5558, 0.55 ) }
    dend_30 { pt3dadd( 39.953, 85.9642, -66.7468, 0.28 ) }
    dend_30 { pt3dadd( 40.3939, 88.1272, -68.1475, 0.83 ) }
    dend_30 { pt3dadd( 41.1827, 91.2974, -70.2964, 0.28 ) }
    dend_30 { pt3dadd( 41.576, 92.5997, -71.2406, 0.83 ) }
    dend_30 { pt3dadd( 42.5369, 95.3741, -73.3287, 0.28 ) }
    dend_30 { pt3dadd( 42.6887, 95.7803, -73.6477, 0.55 ) }
    dend_30 { pt3dadd( 43.5662, 97.6509, -75.0971, 0.28 ) }
    dend_30 { pt3dadd( 43.9905, 98.4747, -75.798, 0.83 ) }
    dend_30 { pt3dadd( 45.0244, 100.374, -77.584, 0.28 ) }
    dend_30 { pt3dadd( 45.795, 101.701, -78.935, 0.55 ) }
    dend_30 { pt3dadd( 47.0849, 103.876, -81.2052, 0.28 ) }
    dend_30 { pt3dadd( 48.4749, 106.226, -83.6566, 0.28 ) }
    dend_30 { pt3dadd( 50.3852, 109.487, -87.061, 0.83 ) }
    dend_30 { pt3dadd( 51.8672, 111.939, -89.5398, 0.55 ) }
    dend_30 { pt3dadd( 52.9996, 113.784, -91.2937, 0.28 ) }
    dend_30 { pt3dadd( 53.5553, 114.638, -92.0654, 0.55 ) }
    dend_30 { pt3dadd( 54.667, 116.323, -93.4959, 0.28 ) }
    dend_30 { pt3dadd( 55.2033, 117.191, -94.2531, 0.55 ) }
    dend_30 { pt3dadd( 56.8649, 119.986, -96.7726, 0.28 ) }
    dend_30 { pt3dadd( 58.0352, 121.844, -98.6479, 0.55 ) }
    dend_30 { pt3dadd( 59.7894, 124.427, -101.559, 0.28 ) }
    dend_30 { pt3dadd( 60.6115, 125.556, -102.971, 0.55 ) }
    dend_30 { pt3dadd( 63.1974, 129.01, -107.688, 1.38 ) }
    dend_30 { pt3dadd( 65.4691, 132.005, -111.953, 0.28 ) }
    dend_30 { pt3dadd( 66.7203, 133.612, -114.359, 0.55 ) }
    dend_30 { pt3dadd( 67.814, 134.991, -116.424, 0.28 ) }
    dend_30 { pt3dadd( 68.6545, 136.131, -118.01, 0.28 ) }
    dend_30 { pt3dadd( 69.2175, 136.937, -119.024, 0.55 ) }
    dend_30 { pt3dadd( 69.9706, 138.147, -120.276, 0.55 ) }
    dend_30 { pt3dadd( 70.8428, 139.907, -121.975, 0.28 ) }
    dend_30 { pt3dadd( 71.1786, 140.781, -122.887, 0.55 ) }
    dend_30 { pt3dadd( 71.8792, 142.977, -125.191, 0.28 ) }
    dend_30 { pt3dadd( 72.293, 144.348, -126.647, 0.55 ) }
    dend_30 { pt3dadd( 72.7995, 146.244, -128.75, 0.28 ) }
    dend_30 { pt3dadd( 73.1216, 147.775, -130.435, 0.55 ) }
    dend_30 { pt3dadd( 73.5795, 150.941, -133.802, 0.28 ) }
    dend_30 { pt3dadd( 73.8011, 152.818, -135.651, 0.28 ) }
    dend_30 { pt3dadd( 74.1122, 155.279, -137.918, 0.55 ) }
    dend_30 { pt3dadd( 74.4581, 157.939, -140.241, 0.28 ) }
    dend_30 { pt3dadd( 74.645, 159.551, -141.638, 0.28 ) }
    dend_30 { pt3dadd( 74.9199, 161.167, -142.958, 0.28 ) }
    dend_30 { pt3dadd( 75.2411, 162.778, -144.222, 0.55 ) }
    dend_30 { pt3dadd( 75.6977, 164.512, -145.6, 0.55 ) }
    dend_30 { pt3dadd( 76.5659, 167.161, -147.659, 0.28 ) }
    dend_30 { pt3dadd( 77.1716, 168.578, -148.729, 0.83 ) }
    dend_30 { pt3dadd( 78.5278, 171.27, -150.653, 0.55 ) }
    dend_30 { pt3dadd( 79.4893, 173.044, -151.787, 0.28 ) }
    dend_30 { pt3dadd( 80.2885, 174.513, -152.664, 0.55 ) }
    dend_30 { pt3dadd( 81.4556, 176.701, -153.727, 0.28 ) }
    dend_30 { pt3dadd( 82.723, 178.8, -154.528, 0.55 ) }
    dend_30 { pt3dadd( 84.1635, 180.985, -155.209, 0.28 ) }
    dend_30 { pt3dadd( 85.2891, 182.511, -155.618, 0.55 ) }
    dend_30 { pt3dadd( 87.1385, 184.774, -156.118, 0.28 ) }
    dend_30 { pt3dadd( 88.4891, 186.266, -156.383, 0.55 ) }
    dend_30 { pt3dadd( 91.0658, 188.852, -156.687, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( 91.8121, 189.51, -156.754, 0.55 ) }
    dend_30 { pt3dadd( 95.1189, 191.921, -156.991, 0.28 ) }
    dend_30 { pt3dadd( 95.9587, 192.469, -157.023, 0.55 ) }
    dend_30 { pt3dadd( 97.7761, 193.51, -157.019, 0.28 ) }
    dend_30 { pt3dadd( 98.6554, 193.956, -157.052, 0.55 ) }
    dend_30 { pt3dadd( 100.075, 194.555, -157.065, 0.28 ) }
    dend_30 { pt3dadd( 101.637, 195.058, -157.077, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -103.01, 102.938, -43.1455, 0.28 ) }
    dend_27 { pt3dadd( -102.991, 104.411, -43.7709, 0.28 ) }
    dend_27 { pt3dadd( -103.026, 106.25, -44.489, 0.83 ) }
    dend_27 { pt3dadd( -103.031, 109.045, -45.6625, 0.28 ) }
    dend_27 { pt3dadd( -103.037, 109.646, -45.969, 0.55 ) }
    dend_27 { pt3dadd( -103.054, 110.679, -46.5456, 0.28 ) }
    dend_27 { pt3dadd( -103.075, 111.537, -47.0494, 0.55 ) }
    dend_27 { pt3dadd( -103.127, 112.526, -47.7224, 0.28 ) }
    dend_27 { pt3dadd( -103.204, 113.871, -48.7463, 0.55 ) }
    dend_27 { pt3dadd( -103.376, 115.443, -50.0569, 0.55 ) }
    dend_27 { pt3dadd( -103.553, 116.601, -51.0575, 0.28 ) }
    dend_27 { pt3dadd( -104.073, 119.625, -53.5622, 0.55 ) }
    dend_27 { pt3dadd( -104.457, 121.593, -55.0308, 0.28 ) }
    dend_27 { pt3dadd( -104.576, 122.128, -55.3772, 0.55 ) }
    dend_27 { pt3dadd( -105.154, 124.587, -56.7042, 0.28 ) }
    dend_27 { pt3dadd( -105.549, 126.407, -57.5214, 0.55 ) }
    dend_27 { pt3dadd( -105.93, 128.33, -58.2709, 0.28 ) }
    dend_27 { pt3dadd( -106.371, 130.787, -59.1341, 0.55 ) }
    dend_27 { pt3dadd( -106.646, 132.822, -59.8, 0.28 ) }
    dend_27 { pt3dadd( -106.748, 133.952, -60.1971, 0.55 ) }
    dend_27 { pt3dadd( -106.814, 135.067, -60.6176, 0.28 ) }
    dend_27 { pt3dadd( -106.893, 136.557, -61.3641, 0.55 ) }
    dend_27 { pt3dadd( -107.055, 139.198, -63.0191, 0.28 ) }
    dend_27 { pt3dadd( -107.196, 140.592, -64.0653, 0.55 ) }
    dend_27 { pt3dadd( -107.482, 142.45, -65.5571, 0.28 ) }
    dend_27 { pt3dadd( -107.68, 143.288, -66.2288, 0.55 ) }
    dend_27 { pt3dadd( -108.461, 145.585, -68.0758, 0.28 ) }
    dend_27 { pt3dadd( -108.633, 145.993, -68.3906, 0.55 ) }
    dend_27 { pt3dadd( -109.457, 147.721, -69.6558, 0.28 ) }
    dend_27 { pt3dadd( -109.962, 148.738, -70.3317, 1.11 ) }
    dend_27 { pt3dadd( -110.977, 150.976, -71.5172, 0.28 ) }
    dend_27 { pt3dadd( -111.764, 152.941, -72.3212, 0.28 ) }
    dend_27 { pt3dadd( -112.182, 154.051, -72.6436, 0.55 ) }
    dend_27 { pt3dadd( -112.887, 156.107, -73.1584, 0.28 ) }
    dend_27 { pt3dadd( -113.38, 157.668, -73.4602, 0.55 ) }
    dend_27 { pt3dadd( -114.115, 159.967, -73.8613, 0.28 ) }
    dend_27 { pt3dadd( -114.483, 161.098, -74.0029, 0.55 ) }
    dend_27 { pt3dadd( -114.954, 162.543, -74.1281, 0.28 ) }
    dend_27 { pt3dadd( -115.217, 163.257, -74.1988, 0.55 ) }
    dend_27 { pt3dadd( -115.61, 164.177, -74.322, 0.28 ) }
    dend_27 { pt3dadd( -115.963, 164.834, -74.5315, 0.55 ) }
    dend_27 { pt3dadd( -116.681, 166.018, -75.0345, 0.28 ) }
    dend_27 { pt3dadd( -117.155, 166.781, -75.4117, 0.55 ) }
    dend_27 { pt3dadd( -117.411, 167.198, -75.6547, 0.28 ) }
    dend_27 { pt3dadd( -117.807, 167.839, -76.0728, 0.55 ) }
    dend_27 { pt3dadd( -118.458, 168.864, -76.8233, 0.28 ) }
    dend_27 { pt3dadd( -119.438, 170.359, -77.9243, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 54/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -103.01, 102.938, -43.1455, 0.55 ) }
    dend_26 { pt3dadd( -104.394, 104.167, -44.477, 0.55 ) }
    dend_26 { pt3dadd( -105.718, 105.382, -45.8153, 0.28 ) }
    dend_26 { pt3dadd( -107.125, 106.666, -47.3615, 0.83 ) }
    dend_26 { pt3dadd( -108.944, 108.345, -49.4976, 0.83 ) }
    dend_26 { pt3dadd( -110.49, 109.78, -51.3329, 0.55 ) }
    dend_26 { pt3dadd( -111.953, 111.145, -53.0502, 0.28 ) }
    dend_26 { pt3dadd( -112.788, 111.971, -54.104, 0.55 ) }
    dend_26 { pt3dadd( -114.102, 113.297, -55.7515, 0.28 ) }
    dend_26 { pt3dadd( -114.551, 113.757, -56.3016, 0.55 ) }
    dend_26 { pt3dadd( -115.628, 114.852, -57.4194, 0.28 ) }
    dend_26 { pt3dadd( -116.133, 115.405, -57.8337, 0.55 ) }
    dend_26 { pt3dadd( -117.205, 116.651, -58.4674, 0.28 ) }
    dend_26 { pt3dadd( -117.566, 117.102, -58.6471, 0.55 ) }
    dend_26 { pt3dadd( -118.696, 118.668, -59.1019, 0.28 ) }
    dend_26 { pt3dadd( -118.84, 118.88, -59.1653, 0.55 ) }
    dend_26 { pt3dadd( -119.563, 120.045, -59.5524, 0.28 ) }
    dend_26 { pt3dadd( -120.062, 120.936, -59.9234, 0.55 ) }
    dend_26 { pt3dadd( -121.151, 122.941, -60.7397, 0.28 ) }
    dend_26 { pt3dadd( -121.485, 123.609, -61.0275, 0.55 ) }
    dend_26 { pt3dadd( -121.982, 124.626, -61.4697, 0.28 ) }
    dend_26 { pt3dadd( -122.091, 124.842, -61.5831, 0.55 ) }
    dend_26 { pt3dadd( -123.077, 126.634, -62.498, 0.28 ) }
    dend_26 { pt3dadd( -123.773, 127.88, -63.091, 0.55 ) }
    dend_26 { pt3dadd( -124.336, 128.908, -63.5809, 0.28 ) }
    dend_26 { pt3dadd( -125.267, 130.674, -64.4655, 0.55 ) }
    dend_26 { pt3dadd( -127.283, 134.852, -66.8283, 0.28 ) }
    dend_26 { pt3dadd( -128.41, 137.301, -68.2723, 0.28 ) }
    dend_26 { pt3dadd( -128.886, 138.426, -68.9407, 0.55 ) }
    dend_26 { pt3dadd( -129.596, 140.335, -70.1197, 0.28 ) }
    dend_26 { pt3dadd( -129.921, 141.277, -70.6858, 0.55 ) }
    dend_26 { pt3dadd( -130.927, 144.359, -72.3756, 0.28 ) }
    dend_26 { pt3dadd( -131.426, 146.012, -73.1604, 0.28 ) }
    dend_26 { pt3dadd( -131.789, 147.186, -73.6925, 0.55 ) }
    dend_26 { pt3dadd( -133.149, 151.148, -75.2657, 0.28 ) }
    dend_26 { pt3dadd( -133.504, 152.129, -75.6078, 0.55 ) }
    dend_26 { pt3dadd( -135.346, 156.941, -77.1442, 0.28 ) }
    dend_26 { pt3dadd( -135.565, 157.474, -77.2801, 0.55 ) }
    dend_26 { pt3dadd( -136.1, 158.744, -77.6227, 0.28 ) }
    dend_26 { pt3dadd( -136.762, 160.152, -77.9846, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 94/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -90.8458, 63.4806, 4.81431, 0.83 ) }
    dend_24 { pt3dadd( -92.7275, 64.3333, 5.03183, 0.83 ) }
    dend_24 { pt3dadd( -94.6345, 65.2875, 5.10542, 0.28 ) }
    dend_24 { pt3dadd( -96.3062, 66.0698, 5.06791, 0.55 ) }
    dend_24 { pt3dadd( -97.5386, 66.6144, 5.02821, 0.55 ) }
    dend_24 { pt3dadd( -98.5885, 67.1134, 5.00118, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -99.8786, 67.7552, 5.06435, 0.55 ) }
    dend_24 { pt3dadd( -100.913, 68.4076, 5.12437, 0.28 ) }
    dend_24 { pt3dadd( -102.433, 69.4702, 5.2633, 0.55 ) }
    dend_24 { pt3dadd( -103.289, 70.145, 5.41499, 0.83 ) }
    dend_24 { pt3dadd( -105.03, 71.6773, 5.84988, 0.83 ) }
    dend_24 { pt3dadd( -107.436, 73.8217, 6.69253, 0.55 ) }
    dend_24 { pt3dadd( -109.762, 75.8667, 7.66696, 0.55 ) }
    dend_24 { pt3dadd( -111.287, 77.227, 8.38902, 0.55 ) }
    dend_24 { pt3dadd( -113.341, 79.1409, 9.4446, 0.55 ) }
    dend_24 { pt3dadd( -114.944, 80.5876, 10.2718, 0.55 ) }
    dend_24 { pt3dadd( -116.589, 82.0108, 11.0941, 0.55 ) }
    dend_24 { pt3dadd( -118.01, 83.1478, 11.7042, 0.55 ) }
    dend_24 { pt3dadd( -118.819, 83.7261, 12.0588, 0.28 ) }
    dend_24 { pt3dadd( -119.255, 84.043, 12.2417, 0.55 ) }
    dend_24 { pt3dadd( -120.418, 84.7859, 12.6253, 0.55 ) }
    dend_24 { pt3dadd( -122.291, 86.0339, 13.1199, 0.55 ) }
    dend_24 { pt3dadd( -125.856, 88.7734, 13.7729, 0.55 ) }
    dend_24 { pt3dadd( -132.01, 96.2488, 16.9733, 0.55 ) }
    dend_24 { pt3dadd( -138.027, 103.941, 19.8386, 0.55 ) }
    dend_24 { pt3dadd( -144.896, 110.783, 23.1441, 0.55 ) }
    dend_24 { pt3dadd( -150.452, 118.916, 25.5504, 0.55 ) }
    dend_24 { pt3dadd( -155.633, 126.992, 28.8673, 0.55 ) }
    dend_24 { pt3dadd( -160.106, 135.195, 32.8286, 0.55 ) }
    dend_24 { pt3dadd( -165.023, 142.272, 38.3693, 0.55 ) }
    dend_24 { pt3dadd( -168.735, 150.247, 43.488, 0.55 ) }
    dend_24 { pt3dadd( -170.749, 157.91, 49.9328, 0.55 ) }
    dend_24 { pt3dadd( -171.248, 165.374, 56.9154, 0.55 ) }
    dend_24 { pt3dadd( -172.459, 172.8, 63.8541, 0.55 ) }
    dend_24 { pt3dadd( -174.696, 180.453, 70.2364, 0.55 ) }
    dend_24 { pt3dadd( -176.326, 187.314, 77.7108, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 30/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -90.8458, 63.4806, 4.81431, 0.83 ) }
    dend_23 { pt3dadd( -93.3218, 66.2913, 4.91968, 0.83 ) }
    dend_23 { pt3dadd( -95.5629, 68.7837, 4.98595, 0.83 ) }
    dend_23 { pt3dadd( -97.6874, 71.2339, 5.01687, 0.83 ) }
    dend_23 { pt3dadd( -98.7824, 72.4966, 5.02323, 0.55 ) }
    dend_23 { pt3dadd( -100.61, 74.6051, 5.02118, 0.83 ) }
    dend_23 { pt3dadd( -102.537, 76.7557, 5.03712, 0.55 ) }
    dend_23 { pt3dadd( -104.58, 78.959, 5.07851, 0.55 ) }
    dend_23 { pt3dadd( -107.196, 81.777, 5.19367, 0.83 ) }
    dend_23 { pt3dadd( -109.012, 83.7121, 5.28248, 0.55 ) }
    dend_23 { pt3dadd( -111.119, 85.9416, 5.36611, 0.55 ) }
    dend_23 { pt3dadd( -112.677, 87.4897, 5.42653, 0.55 ) }
    dend_23 { pt3dadd( -115.876, 90.3904, 5.54094, 0.83 ) }
    dend_23 { pt3dadd( -117.781, 91.896, 5.58808, 0.55 ) }
    dend_23 { pt3dadd( -119.114, 92.7983, 5.60361, 1.11 ) }
    dend_23 { pt3dadd( -120.74, 93.7343, 5.6562, 0.55 ) }
    dend_23 { pt3dadd( -122.653, 94.641, 5.84163, 0.55 ) }
    dend_23 { pt3dadd( -125.62, 95.8489, 6.30573, 0.83 ) }
    dend_23 { pt3dadd( -128.036, 96.6085, 6.8076, 0.55 ) }
    dend_23 { pt3dadd( -130.395, 97.4007, 7.46165, 0.55 ) }
    dend_23 { pt3dadd( -132.976, 98.3677, 8.3191, 0.55 ) }
    dend_23 { pt3dadd( -137.058, 99.9164, 9.89323, 0.83 ) }
    dend_23 { pt3dadd( -139.008, 100.688, 10.7032, 0.55 ) }
    dend_23 { pt3dadd( -141.723, 101.702, 11.8478, 0.55 ) }
    dend_23 { pt3dadd( -145.205, 103.116, 13.226, 0.55 ) }
    dend_23 { pt3dadd( -146.71, 103.759, 13.7391, 0.55 ) }
    dend_23 { pt3dadd( -149.893, 105.218, 14.5812, 0.28 ) }
    dend_23 { pt3dadd( -151.265, 105.846, 14.8665, 0.83 ) }
    dend_23 { pt3dadd( -154.074, 107.034, 15.3495, 0.28 ) }
    dend_23 { pt3dadd( -157.338, 108.326, 15.6715, 0.28 ) }
    dend_23 { pt3dadd( -159.244, 108.994, 15.7164, 0.28 ) }
    dend_23 { pt3dadd( -160.496, 109.47, 15.6427, 0.28 ) }
    dend_23 { pt3dadd( -161.045, 109.707, 15.5521, 0.55 ) }
    dend_23 { pt3dadd( -163.78, 110.859, 14.955, 0.28 ) }
    dend_23 { pt3dadd( -166.022, 111.849, 14.3221, 0.28 ) }
    dend_23 { pt3dadd( -168.081, 112.663, 13.6693, 0.55 ) }
    dend_23 { pt3dadd( -170.211, 113.543, 12.9729, 0.28 ) }
    dend_23 { pt3dadd( -171.162, 113.933, 12.6875, 0.55 ) }
    dend_23 { pt3dadd( -172.514, 114.484, 12.3532, 0.28 ) }
    dend_23 { pt3dadd( -173.48, 114.926, 12.1771, 0.55 ) }
    dend_23 { pt3dadd( -174.628, 115.394, 12.1415, 0.28 ) }
    dend_23 { pt3dadd( -175.902, 115.809, 12.0481, 0.55 ) }
    dend_23 { pt3dadd( -177.131, 116.213, 11.9802, 0.28 ) }
    dend_23 { pt3dadd( -178.074, 116.53, 11.9044, 0.55 ) }
    dend_23 { pt3dadd( -179.253, 116.932, 11.8023, 0.28 ) }
    dend_23 { pt3dadd( -180.195, 117.286, 11.7214, 0.55 ) }
    dend_23 { pt3dadd( -183.596, 118.693, 11.3264, 0.28 ) }
    dend_23 { pt3dadd( -185.643, 119.493, 11.1727, 0.55 ) }
    dend_23 { pt3dadd( -187.04, 120.046, 11.0565, 1.11 ) }
    dend_23 { pt3dadd( -188.988, 120.834, 10.8907, 0.55 ) }
    dend_23 { pt3dadd( -190.757, 121.529, 10.7748, 0.55 ) }
    dend_23 { pt3dadd( -193.927, 122.82, 10.6565, 0.55 ) }
    dend_23 { pt3dadd( -196.204, 123.793, 10.8792, 0.55 ) }
    dend_23 { pt3dadd( -205.862, 128.345, 12.8175, 0.55 ) }
    dend_23 { pt3dadd( -215.199, 133.766, 13.1589, 0.55 ) }
    dend_23 { pt3dadd( -223.584, 140.43, 12.6668, 0.55 ) }
    dend_23 { pt3dadd( -232.685, 145.812, 10.5007, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.14317, -27.4561, -5.78364, 0.83 ) }
    dend_18 { pt3dadd( -8.14532, -30.3432, -6.89645, 0.83 ) }
    dend_18 { pt3dadd( -8.14738, -33.0978, -7.95815, 0.83 ) }
    dend_18 { pt3dadd( -8.15143, -38.5411, -10.0562, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.14317, -27.4561, -5.78364, 0.55 ) }
    dend_17 { pt3dadd( -8.8873, -28.6376, -5.01373, 0.55 ) }
    dend_17 { pt3dadd( -10.1132, -30.4498, -3.95067, 0.55 ) }
    dend_17 { pt3dadd( -12.0882, -33.27, -2.52626, 0.55 ) }
    dend_17 { pt3dadd( -13.0903, -34.6516, -1.83821, 0.55 ) }
    dend_17 { pt3dadd( -15.0056, -37.2671, -0.293996, 0.83 ) }
    dend_17 { pt3dadd( -15.9976, -38.5417, 0.538352, 0.55 ) }
    dend_17 { pt3dadd( -16.8131, -39.5502, 1.26707, 0.55 ) }
    dend_17 { pt3dadd( -17.7262, -40.6643, 2.05686, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -19.4794, -42.6827, 3.40651, 0.83 ) }
    dend_17 { pt3dadd( -22.1117, -45.6642, 5.45331, 0.55 ) }
    dend_17 { pt3dadd( -23.4469, -47.1734, 6.47406, 0.55 ) }
    dend_17 { pt3dadd( -24.7939, -48.6664, 7.5267, 0.55 ) }
    dend_17 { pt3dadd( -27.0343, -51.2028, 9.28301, 0.55 ) }
    dend_17 { pt3dadd( -29.0554, -53.4696, 10.8196, 0.55 ) }
    dend_17 { pt3dadd( -30.2879, -54.8269, 11.654, 0.83 ) }
    dend_17 { pt3dadd( -32.8102, -57.5686, 13.087, 0.55 ) }
    dend_17 { pt3dadd( -34.0151, -58.8756, 13.7377, 0.55 ) }
    dend_17 { pt3dadd( -36.4915, -61.5039, 15.0539, 0.55 ) }
    dend_17 { pt3dadd( -38.3328, -63.4126, 16.0111, 0.28 ) }
    dend_17 { pt3dadd( -39.5924, -64.7496, 16.6178, 0.28 ) }
    dend_17 { pt3dadd( -41.884, -67.0741, 17.5883, 0.28 ) }
    dend_17 { pt3dadd( -43.207, -68.4133, 18.036, 0.55 ) }
    dend_17 { pt3dadd( -47.6909, -74.1487, 20.0792, 0.55 ) }
    dend_17 { pt3dadd( -53.0643, -79.4923, 20.6471, 0.55 ) }
    dend_17 { pt3dadd( -59.0125, -84.1819, 19.5319, 0.55 ) }
    dend_17 { pt3dadd( -65.0932, -88.2905, 17.201, 0.55 ) }
    dend_17 { pt3dadd( -71.984, -91.2792, 15.2725, 0.55 ) }
    dend_17 { pt3dadd( -78.9362, -94.5093, 14.2096, 0.55 ) }
    dend_17 { pt3dadd( -85.676, -97.4142, 11.6855, 0.55 ) }
    dend_17 { pt3dadd( -92.8329, -99.9986, 10.1132, 0.55 ) }
    dend_17 { pt3dadd( -99.0488, -103.965, 7.86901, 0.55 ) }
    dend_17 { pt3dadd( -105.398, -106.627, 4.25402, 0.55 ) }
    dend_17 { pt3dadd( -111.471, -107.887, -0.507499, 0.55 ) }
    dend_17 { pt3dadd( -117.974, -107.608, -4.86027, 0.55 ) }
    dend_17 { pt3dadd( -125.218, -107.508, -7.83095, 0.55 ) }
    dend_17 { pt3dadd( -132.503, -107.843, -10.6777, 0.55 ) }
    dend_17 { pt3dadd( -139.238, -107.738, -14.6713, 0.55 ) }
    dend_17 { pt3dadd( -146.573, -108.093, -17.3811, 0.55 ) }
    dend_17 { pt3dadd( -154.006, -107.795, -19.8269, 0.55 ) }
    dend_17 { pt3dadd( -161.605, -106.668, -21.3263, 0.55 ) }
    dend_17 { pt3dadd( -169.089, -104.431, -21.2823, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.7065, -29.3108, 3.85922, 0.83 ) }
    dend_3 { pt3dadd( -13.4796, -30.9951, -0.411227, 0.83 ) }
    dend_3 { pt3dadd( -14.6635, -31.7142, -2.23442, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.7065, -29.3108, 3.85922, 0.55 ) }
    dend_2 { pt3dadd( -11.4153, -31.084, 1.76648, 0.55 ) }
    dend_2 { pt3dadd( -12.4976, -34.1231, -0.979679, 0.55 ) }
    dend_2 { pt3dadd( -12.8679, -35.1445, -1.92374, 0.55 ) }
    dend_2 { pt3dadd( -13.2126, -35.8291, -2.7164, 0.55 ) }
    dend_2 { pt3dadd( -13.9512, -37.0078, -4.22581, 0.55 ) }
    dend_2 { pt3dadd( -15.029, -38.3627, -6.13823, 0.55 ) }
    dend_2 { pt3dadd( -16.1576, -39.3521, -7.65826, 0.28 ) }
    dend_2 { pt3dadd( -17.1936, -40.1307, -8.91928, 0.83 ) }
    dend_2 { pt3dadd( -19.9641, -42.0377, -12.3671, 0.55 ) }
    dend_2 { pt3dadd( -21.1487, -42.8923, -13.9009, 0.83 ) }
    dend_2 { pt3dadd( -22.6584, -44.0233, -15.8351, 0.55 ) }
    dend_2 { pt3dadd( -24.0182, -45.156, -17.6351, 0.55 ) }
    dend_2 { pt3dadd( -24.622, -45.7511, -18.521, 0.55 ) }
    dend_2 { pt3dadd( -25.5056, -46.8774, -19.987, 0.83 ) }
    dend_2 { pt3dadd( -27.0221, -49.3949, -22.9146, 0.83 ) }
    dend_2 { pt3dadd( -28.002, -51.1149, -24.9215, 0.55 ) }
    dend_2 { pt3dadd( -28.3599, -51.9941, -25.789, 0.55 ) }
    dend_2 { pt3dadd( -28.9408, -53.8889, -27.4083, 0.83 ) }
    dend_2 { pt3dadd( -29.1597, -54.6976, -27.9936, 0.55 ) }
    dend_2 { pt3dadd( -29.6157, -56.3393, -29.136, 0.83 ) }
    dend_2 { pt3dadd( -30.5348, -59.5256, -31.3634, 0.55 ) }
    dend_2 { pt3dadd( -31.7693, -64.1132, -34.2416, 0.55 ) }
    dend_2 { pt3dadd( -32.0727, -65.1728, -34.7968, 0.83 ) }
    dend_2 { pt3dadd( -32.7037, -67.2072, -35.6284, 0.83 ) }
    dend_2 { pt3dadd( -33.7147, -69.9331, -36.7851, 0.83 ) }
    dend_2 { pt3dadd( -34.3401, -71.6698, -37.6487, 0.55 ) }
    dend_2 { pt3dadd( -35.2014, -73.3923, -38.963, 0.55 ) }
    dend_2 { pt3dadd( -36.131, -74.556, -40.3158, 0.83 ) }
    dend_2 { pt3dadd( -36.9748, -75.4709, -41.5402, 0.28 ) }
    dend_2 { pt3dadd( -38.1774, -76.6863, -43.3275, 0.55 ) }
    dend_2 { pt3dadd( -39.387, -77.714, -45.0371, 0.55 ) }
    dend_2 { pt3dadd( -41.7273, -79.5592, -48.4011, 0.55 ) }
    dend_2 { pt3dadd( -43.3211, -80.6746, -50.7242, 0.28 ) }
    dend_2 { pt3dadd( -43.9894, -81.1366, -51.6908, 0.55 ) }
    dend_2 { pt3dadd( -46.0272, -82.5497, -54.4786, 0.83 ) }
    dend_2 { pt3dadd( -48.8389, -84.5938, -57.9276, 0.28 ) }
    dend_2 { pt3dadd( -50.0623, -85.536, -59.2754, 0.55 ) }
    dend_2 { pt3dadd( -51.6388, -87.0665, -61.0135, 0.28 ) }
    dend_2 { pt3dadd( -52.4466, -88.0152, -61.9698, 0.83 ) }
    dend_2 { pt3dadd( -53.2651, -89.2046, -63.0437, 0.28 ) }
    dend_2 { pt3dadd( -53.7995, -90.3404, -63.9513, 0.83 ) }
    dend_2 { pt3dadd( -54.268, -91.7389, -65.1271, 0.83 ) }
    dend_2 { pt3dadd( -54.8866, -93.6606, -66.9601, 0.28 ) }
    dend_2 { pt3dadd( -55.2398, -94.8437, -68.2373, 1.66 ) }
    dend_2 { pt3dadd( -55.5771, -96.0339, -69.7848, 0.28 ) }
    dend_2 { pt3dadd( -55.8424, -97.1451, -71.348, 0.55 ) }
    dend_2 { pt3dadd( -56.447, -99.1751, -74.8511, 0.28 ) }
    dend_2 { pt3dadd( -56.7899, -99.9678, -76.5473, 0.55 ) }
    dend_2 { pt3dadd( -57.3807, -100.907, -78.9809, 0.28 ) }
    dend_2 { pt3dadd( -57.8534, -101.555, -80.8534, 0.55 ) }
    dend_2 { pt3dadd( -58.5131, -102.36, -83.3782, 0.55 ) }
    dend_2 { pt3dadd( -59.4119, -103.475, -87.0334, 0.83 ) }
    dend_2 { pt3dadd( -60.0631, -104.466, -90.2413, 0.83 ) }
    dend_2 { pt3dadd( -60.4669, -105.134, -92.6269, 0.28 ) }
    dend_2 { pt3dadd( -60.6122, -105.377, -93.6298, 0.55 ) }
    dend_2 { pt3dadd( -60.8574, -105.772, -95.5044, 0.28 ) }
    dend_2 { pt3dadd( -60.9353, -105.962, -96.604, 0.28 ) }
    dend_2 { pt3dadd( -60.8194, -106.315, -98.4002, 0.28 ) }
    dend_2 { pt3dadd( -60.6455, -106.584, -99.9826, 0.83 ) }
    dend_2 { pt3dadd( -60.2119, -107.078, -103.521, 0.28 ) }
    dend_2 { pt3dadd( -60.1454, -107.151, -104.067, 0.55 ) }
    dend_2 { pt3dadd( -60.0229, -107.328, -105.455, 0.28 ) }
    dend_2 { pt3dadd( -59.9629, -107.533, -106.801, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( -60.016, -108.109, -110.494, 0.28 ) }
    dend_2 { pt3dadd( -60.0781, -108.3, -111.51, 0.28 ) }
    dend_2 { pt3dadd( -60.2101, -108.694, -113.065, 0.55 ) }
    dend_2 { pt3dadd( -60.6014, -109.405, -115.58, 0.28 ) }
    dend_2 { pt3dadd( -60.9218, -109.885, -116.976, 0.55 ) }
    dend_2 { pt3dadd( -61.6966, -110.997, -119.644, 0.28 ) }
    dend_2 { pt3dadd( -62.6184, -112.497, -122.245, 0.55 ) }
    dend_2 { pt3dadd( -63.2356, -113.31, -123.436, 0.55 ) }
    dend_2 { pt3dadd( -64.0957, -114.239, -124.614, 0.55 ) }
    dend_2 { pt3dadd( -65.4013, -115.505, -125.936, 0.28 ) }
    dend_2 { pt3dadd( -65.9323, -115.914, -126.346, 0.28 ) }
    dend_2 { pt3dadd( -68.7866, -117.891, -128.228, 0.55 ) }
    dend_2 { pt3dadd( -72.1158, -119.941, -130.18, 0.55 ) }
    dend_2 { pt3dadd( -73.9019, -121.034, -131.233, 0.28 ) }
    dend_2 { pt3dadd( -76.1779, -122.513, -132.645, 0.83 ) }
    dend_2 { pt3dadd( -79.2306, -124.603, -134.527, 0.28 ) }
    dend_2 { pt3dadd( -80.856, -125.811, -135.547, 0.55 ) }
    dend_2 { pt3dadd( -82.7603, -127.445, -136.804, 0.55 ) }
    dend_2 { pt3dadd( -84.8916, -129.84, -138.418, 0.55 ) }
    dend_2 { pt3dadd( -86.9783, -132.771, -140.246, 0.28 ) }
    dend_2 { pt3dadd( -88.1597, -134.68, -141.315, 0.55 ) }
    dend_2 { pt3dadd( -88.6838, -135.658, -141.807, 0.28 ) }
    dend_2 { pt3dadd( -89.4261, -137.106, -142.482, 0.55 ) }
    dend_2 { pt3dadd( -90.5233, -139.427, -143.571, 0.28 ) }
    dend_2 { pt3dadd( -91.1389, -140.528, -144.123, 0.83 ) }
    dend_2 { pt3dadd( -92.5809, -142.634, -145.282, 0.28 ) }
    dend_2 { pt3dadd( -93.5171, -143.724, -146.067, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 137.487, 198.098, -46.4647, 0.28 ) }
    dend_33 { pt3dadd( 141.979, 199.088, -45.0873, 0.28 ) }
    dend_33 { pt3dadd( 143.419, 199.405, -44.6457, 0.55 ) }
    dend_33 { pt3dadd( 147.006, 200.196, -43.5462, 0.28 ) }
    dend_33 { pt3dadd( 148.327, 200.487, -43.1411, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 137.487, 198.098, -46.4647, 0.28 ) }
    dend_32 { pt3dadd( 139.479, 199.446, -45.3576, 0.28 ) }
    dend_32 { pt3dadd( 140.585, 200.188, -44.737, 0.55 ) }
    dend_32 { pt3dadd( 143.638, 202.269, -43.0382, 0.28 ) }
    dend_32 { pt3dadd( 145.224, 203.285, -42.1545, 0.55 ) }
    dend_32 { pt3dadd( 149.399, 205.809, -39.8952, 0.28 ) }
    dend_32 { pt3dadd( 151.095, 206.757, -39.1052, 0.55 ) }
    dend_32 { pt3dadd( 152.728, 207.487, -38.3145, 0.28 ) }
    dend_32 { pt3dadd( 153.752, 207.897, -37.8176, 0.55 ) }
    dend_32 { pt3dadd( 155.826, 208.571, -36.8942, 0.28 ) }
    dend_32 { pt3dadd( 156.775, 208.795, -36.5164, 0.55 ) }
    dend_32 { pt3dadd( 161.106, 208.931, -36.318, 0.28 ) }
    dend_32 { pt3dadd( 164.705, 208.028, -36.5627, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 45/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.15143, -38.5411, -10.0562, 0.55 ) }
    dend_20 { pt3dadd( -7.44997, -40.7134, -10.3316, 0.55 ) }
    dend_20 { pt3dadd( -6.86988, -42.3529, -10.5523, 0.83 ) }
    dend_20 { pt3dadd( -5.75088, -45.1606, -10.9647, 0.83 ) }
    dend_20 { pt3dadd( -4.94334, -47.0904, -11.3695, 0.55 ) }
    dend_20 { pt3dadd( -4.21157, -48.8743, -11.8275, 0.83 ) }
    dend_20 { pt3dadd( -3.71378, -50.0459, -12.141, 0.28 ) }
    dend_20 { pt3dadd( -2.51393, -52.8376, -12.9946, 0.55 ) }
    dend_20 { pt3dadd( -1.99491, -53.962, -13.3331, 0.28 ) }
    dend_20 { pt3dadd( -1.05193, -55.9551, -13.9003, 0.83 ) }
    dend_20 { pt3dadd( 0.0509809, -58.1099, -14.4312, 0.83 ) }
    dend_20 { pt3dadd( 0.911297, -59.7388, -14.6841, 0.28 ) }
    dend_20 { pt3dadd( 1.58152, -61.0676, -14.7638, 0.55 ) }
    dend_20 { pt3dadd( 2.56312, -63.2044, -14.6895, 0.28 ) }
    dend_20 { pt3dadd( 3.52475, -65.4082, -14.4277, 0.83 ) }
    dend_20 { pt3dadd( 4.41563, -67.4073, -14.0589, 0.83 ) }
    dend_20 { pt3dadd( 5.18195, -69.1633, -13.7625, 0.83 ) }
    dend_20 { pt3dadd( 5.63016, -70.3473, -13.6379, 1.11 ) }
    dend_20 { pt3dadd( 6.16497, -71.8, -13.5514, 1.11 ) }
    dend_20 { pt3dadd( 6.98724, -74.2216, -13.6028, 0.55 ) }
    dend_20 { pt3dadd( 7.3953, -75.4384, -13.6749, 0.83 ) }
    dend_20 { pt3dadd( 8.11224, -77.5009, -13.91, 0.55 ) }
    dend_20 { pt3dadd( 9.11601, -80.2814, -14.317, 0.28 ) }
    dend_20 { pt3dadd( 9.60049, -81.5785, -14.5065, 0.55 ) }
    dend_20 { pt3dadd( 10.4655, -83.8195, -14.8812, 0.55 ) }
    dend_20 { pt3dadd( 10.8282, -84.7691, -15.0693, 0.28 ) }
    dend_20 { pt3dadd( 11.9025, -87.6601, -15.6957, 0.55 ) }
    dend_20 { pt3dadd( 12.7911, -89.8866, -16.1361, 0.28 ) }
    dend_20 { pt3dadd( 13.6114, -91.7377, -16.4825, 0.55 ) }
    dend_20 { pt3dadd( 14.4338, -93.4914, -16.7523, 0.28 ) }
    dend_20 { pt3dadd( 14.9977, -94.6717, -16.8625, 0.55 ) }
    dend_20 { pt3dadd( 15.6509, -96.0624, -16.8973, 0.28 ) }
    dend_20 { pt3dadd( 16.6032, -98.0394, -16.802, 0.55 ) }
    dend_20 { pt3dadd( 17.3042, -99.3621, -16.6923, 0.28 ) }
    dend_20 { pt3dadd( 18.263, -101.177, -16.5885, 0.55 ) }
    dend_20 { pt3dadd( 20.0062, -104.425, -16.5354, 0.28 ) }
    dend_20 { pt3dadd( 20.9453, -106.086, -16.5479, 0.55 ) }
    dend_20 { pt3dadd( 23.0407, -109.706, -16.8161, 0.28 ) }
    dend_20 { pt3dadd( 23.9543, -111.348, -17.1079, 0.55 ) }
    dend_20 { pt3dadd( 25.3082, -113.75, -17.6018, 0.28 ) }
    dend_20 { pt3dadd( 26.258, -115.429, -17.9836, 0.28 ) }
    dend_20 { pt3dadd( 27.4031, -117.456, -18.4668, 0.28 ) }
    dend_20 { pt3dadd( 28.1994, -119.129, -18.923, 0.55 ) }
    dend_20 { pt3dadd( 29.2807, -121.983, -19.7339, 0.28 ) }
    dend_20 { pt3dadd( 30.0745, -124.636, -20.4941, 0.55 ) }
    dend_20 { pt3dadd( 30.8779, -128.134, -21.4289, 0.28 ) }
    dend_20 { pt3dadd( 31.0896, -129.51, -21.8078, 0.55 ) }
    dend_20 { pt3dadd( 31.3987, -133.229, -22.8207, 0.28 ) }
    dend_20 { pt3dadd( 31.4117, -134.899, -23.2497, 0.55 ) }
    dend_20 { pt3dadd( 31.2683, -136.935, -23.8199, 0.28 ) }
    dend_20 { pt3dadd( 31.0612, -138.278, -24.2776, 0.55 ) }
    dend_20 { pt3dadd( 30.6729, -140.247, -24.9066, 0.28 ) }
    dend_20 { pt3dadd( 30.3035, -142.307, -25.4502, 0.55 ) }
    dend_20 { pt3dadd( 29.8247, -145.3, -26.1112, 0.28 ) }
    dend_20 { pt3dadd( 29.6883, -146.377, -26.3409, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 29.5776, -147.985, -26.6543, 0.28 ) }
    dend_20 { pt3dadd( 29.5014, -149.869, -27.0589, 0.55 ) }
    dend_20 { pt3dadd( 29.4834, -152.597, -27.7023, 0.28 ) }
    dend_20 { pt3dadd( 29.6322, -154.066, -28.1043, 0.55 ) }
    dend_20 { pt3dadd( 30.0017, -155.266, -28.3417, 0.28 ) }
    dend_20 { pt3dadd( 30.4239, -156.299, -28.5058, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.15143, -38.5411, -10.0562, 0.55 ) }
    dend_19 { pt3dadd( -9.3809, -40.631, -11.9573, 0.55 ) }
    dend_19 { pt3dadd( -9.7409, -41.2784, -12.5436, 0.55 ) }
    dend_19 { pt3dadd( -10.808, -43.2907, -14.3008, 0.55 ) }
    dend_19 { pt3dadd( -12.702, -46.9965, -17.466, 0.55 ) }
    dend_19 { pt3dadd( -14.4811, -50.6113, -20.3841, 0.83 ) }
    dend_19 { pt3dadd( -16.2259, -53.9401, -23.0187, 0.55 ) }
    dend_19 { pt3dadd( -17.0617, -55.5807, -24.3284, 0.55 ) }
    dend_19 { pt3dadd( -17.6616, -56.8482, -25.3018, 0.28 ) }
    dend_19 { pt3dadd( -18.9405, -59.8338, -27.3984, 0.55 ) }
    dend_19 { pt3dadd( -20.0841, -62.8503, -29.1392, 0.55 ) }
    dend_19 { pt3dadd( -21.2476, -65.8077, -30.5864, 0.55 ) }
    dend_19 { pt3dadd( -22.4857, -69.2606, -32.0708, 0.55 ) }
    dend_19 { pt3dadd( -23.7883, -73.2469, -33.6454, 0.55 ) }
    dend_19 { pt3dadd( -24.61, -76.0805, -34.5972, 0.83 ) }
    dend_19 { pt3dadd( -25.2259, -78.6023, -35.2536, 0.83 ) }
    dend_19 { pt3dadd( -25.6204, -80.6228, -35.6365, 0.55 ) }
    dend_19 { pt3dadd( -25.8422, -81.9335, -35.8028, 0.55 ) }
    dend_19 { pt3dadd( -26.2602, -83.9598, -35.9735, 0.83 ) }
    dend_19 { pt3dadd( -27.1055, -87.5605, -36.3236, 0.55 ) }
    dend_19 { pt3dadd( -27.6652, -89.8488, -36.6991, 0.28 ) }
    dend_19 { pt3dadd( -28.0288, -91.244, -36.9915, 0.83 ) }
    dend_19 { pt3dadd( -28.7456, -93.5633, -37.5153, 0.55 ) }
    dend_19 { pt3dadd( -29.4278, -95.4491, -38.0943, 0.28 ) }
    dend_19 { pt3dadd( -30.4999, -98.3333, -39.1502, 0.55 ) }
    dend_19 { pt3dadd( -31.3751, -100.944, -40.3392, 0.28 ) }
    dend_19 { pt3dadd( -31.8505, -102.604, -41.1741, 0.28 ) }
    dend_19 { pt3dadd( -32.3643, -104.888, -42.4147, 0.83 ) }
    dend_19 { pt3dadd( -32.8993, -108.209, -44.2805, 0.28 ) }
    dend_19 { pt3dadd( -33.2357, -111.026, -45.8776, 0.83 ) }
    dend_19 { pt3dadd( -33.4634, -113.814, -47.4186, 0.28 ) }
    dend_19 { pt3dadd( -33.4791, -114.756, -47.8867, 0.83 ) }
    dend_19 { pt3dadd( -33.4171, -117.208, -49.0309, 0.55 ) }
    dend_19 { pt3dadd( -33.3263, -118.813, -49.6964, 0.28 ) }
    dend_19 { pt3dadd( -33.1701, -121.368, -50.4972, 0.55 ) }
    dend_19 { pt3dadd( -33.0593, -123.776, -51.1217, 0.28 ) }
    dend_19 { pt3dadd( -33.0373, -126.025, -51.5222, 0.55 ) }
    dend_19 { pt3dadd( -33.0514, -128.344, -51.8975, 0.28 ) }
    dend_19 { pt3dadd( -33.062, -129.969, -52.1773, 0.55 ) }
    dend_19 { pt3dadd( -33.0285, -131.113, -52.4438, 0.28 ) }
    dend_19 { pt3dadd( -32.9933, -131.74, -52.6276, 0.55 ) }
    dend_19 { pt3dadd( -32.7412, -134.667, -53.9028, 0.28 ) }
    dend_19 { pt3dadd( -32.3175, -137.847, -54.7766, 0.83 ) }
    dend_19 { pt3dadd( -31.8022, -140.453, -55.2164, 0.28 ) }
    dend_19 { pt3dadd( -30.8456, -143.929, -55.66, 0.28 ) }
    dend_19 { pt3dadd( -30.189, -145.79, -55.87, 0.83 ) }
    dend_19 { pt3dadd( -28.3544, -149.83, -56.1376, 0.28 ) }
    dend_19 { pt3dadd( -21.5568, -161.786, -55.6774, 0.83 ) }
    dend_19 { pt3dadd( -19.4654, -165.201, -55.4007, 0.55 ) }
    dend_19 { pt3dadd( -17.8301, -167.766, -55.3215, 0.55 ) }
    dend_19 { pt3dadd( -17.1591, -168.863, -55.7463, 0.55 ) }
    dend_19 { pt3dadd( -16.7765, -169.559, -56.358, 0.28 ) }
    dend_19 { pt3dadd( -15.9803, -171.032, -57.8224, 0.55 ) }
    dend_19 { pt3dadd( -14.6679, -173.379, -60.169, 0.28 ) }
    dend_19 { pt3dadd( -13.8505, -174.985, -61.5244, 0.55 ) }
    dend_19 { pt3dadd( -12.7285, -177.489, -63.4577, 0.28 ) }
    dend_19 { pt3dadd( -11.8632, -179.736, -65.2318, 0.83 ) }
    dend_19 { pt3dadd( -11.1704, -181.975, -67.1354, 0.28 ) }
    dend_19 { pt3dadd( -10.7661, -184.004, -69.0151, 0.55 ) }
    dend_19 { pt3dadd( -10.4639, -187.559, -72.2927, 0.28 ) }
    dend_19 { pt3dadd( -10.53, -188.779, -73.426, 0.55 ) }
    dend_19 { pt3dadd( -11.2309, -192.439, -76.8213, 0.28 ) }
    dend_19 { pt3dadd( -11.9931, -194.506, -78.9807, 0.55 ) }
    dend_19 { pt3dadd( -13.4581, -197.21, -81.9773, 0.28 ) }
    dend_19 { pt3dadd( -14.1659, -198.227, -83.1108, 0.55 ) }
    dend_19 { pt3dadd( -15.1441, -199.379, -84.367, 0.28 ) }
    dend_19 { pt3dadd( -16.1206, -200.32, -85.4255, 0.55 ) }
    dend_19 { pt3dadd( -18.9106, -202.46, -87.9586, 0.28 ) }
    dend_19 { pt3dadd( -20.1005, -203.243, -88.9545, 0.55 ) }
    dend_19 { pt3dadd( -21.7307, -204.182, -90.2578, 0.55 ) }
    dend_19 { pt3dadd( -24.4082, -205.737, -92.4505, 0.28 ) }
    dend_19 { pt3dadd( -26.0302, -206.76, -93.8369, 0.83 ) }
    dend_19 { pt3dadd( -27.6278, -207.876, -95.2332, 0.28 ) }
    dend_19 { pt3dadd( -28.3028, -208.421, -95.8344, 0.55 ) }
    dend_19 { pt3dadd( -30.0554, -210.054, -97.4873, 0.28 ) }
    dend_19 { pt3dadd( -31.5051, -211.614, -98.9365, 0.55 ) }
    dend_19 { pt3dadd( -33.2474, -213.872, -100.735, 0.28 ) }
    dend_19 { pt3dadd( -33.6545, -214.47, -101.184, 0.55 ) }
    dend_19 { pt3dadd( -35.0559, -216.691, -102.752, 0.28 ) }
    dend_19 { pt3dadd( -36.018, -218.252, -103.831, 0.55 ) }
    dend_19 { pt3dadd( -38.4995, -222.122, -106.438, 0.28 ) }
    dend_19 { pt3dadd( -39.5867, -223.682, -107.463, 0.55 ) }
    dend_19 { pt3dadd( -40.1914, -224.551, -107.955, 0.28 ) }
    dend_19 { pt3dadd( -40.4405, -224.901, -108.154, 0.55 ) }
    dend_19 { pt3dadd( -41.6818, -226.564, -109.005, 0.28 ) }
    dend_19 { pt3dadd( -42.64, -227.706, -109.781, 0.55 ) }
    dend_19 { pt3dadd( -43.5256, -228.683, -110.476, 0.28 ) }
    dend_19 { pt3dadd( -44.4153, -229.685, -111.354, 0.55 ) }
    dend_19 { pt3dadd( -46.1507, -231.868, -113.24, 0.28 ) }
    dend_19 { pt3dadd( -46.96, -232.931, -114.346, 0.55 ) }
    dend_19 { pt3dadd( -49.4735, -236.369, -118.375, 0.28 ) }
    dend_19 { pt3dadd( -50.5038, -237.903, -120.338, 0.28 ) }
    dend_19 { pt3dadd( -51.8198, -240.101, -123.291, 0.28 ) }
    dend_19 { pt3dadd( -52.5606, -241.55, -125.244, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( -53.8796, -245.121, -129.623, 0.55 ) }
    dend_19 { pt3dadd( -54.0919, -246.009, -130.629, 0.28 ) }
    dend_19 { pt3dadd( -54.2056, -246.99, -131.634, 0.55 ) }
    dend_19 { pt3dadd( -54.3165, -248.024, -132.741, 0.28 ) }
    dend_19 { pt3dadd( -54.5117, -248.981, -133.709, 0.55 ) }
    dend_19 { pt3dadd( -54.7986, -250.197, -134.842, 0.28 ) }
    dend_19 { pt3dadd( -55.0785, -251.464, -135.748, 0.55 ) }
    dend_19 { pt3dadd( -56.183, -256.33, -139.102, 0.28 ) }
    dend_19 { pt3dadd( -56.4739, -257.489, -139.905, 0.55 ) }
    dend_19 { pt3dadd( -57.9626, -262.858, -143.702, 0.28 ) }
    dend_19 { pt3dadd( -58.3913, -264.344, -144.765, 0.55 ) }
    dend_19 { pt3dadd( -60.0952, -270.211, -148.904, 0.28 ) }
    dend_19 { pt3dadd( -60.5291, -271.866, -149.972, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.6635, -31.7142, -2.23442, 0.83 ) }
    dend_9 { pt3dadd( -17.3554, -30.2231, -3.19538, 0.83 ) }
    dend_9 { pt3dadd( -20.5944, -28.9093, -4.69818, 0.83 ) }
    dend_9 { pt3dadd( -23.3743, -28.0626, -6.15505, 0.83 ) }
    dend_9 { pt3dadd( -25.8346, -27.5594, -7.60009, 0.83 ) }
    dend_9 { pt3dadd( -29.6902, -27.1825, -10.1724, 0.83 ) }
    dend_9 { pt3dadd( -33.4021, -27.2283, -12.8598, 0.83 ) }
    dend_9 { pt3dadd( -36.3901, -27.8467, -15.3009, 0.55 ) }
    dend_9 { pt3dadd( -38.3249, -28.4432, -16.9282, 0.55 ) }
    dend_9 { pt3dadd( -40.0465, -29.0408, -18.3694, 0.83 ) }
    dend_9 { pt3dadd( -42.0905, -29.7233, -19.9824, 0.55 ) }
    dend_9 { pt3dadd( -44.0851, -30.2378, -21.2292, 0.55 ) }
    dend_9 { pt3dadd( -47.489, -30.6732, -22.9858, 0.55 ) }
    dend_9 { pt3dadd( -49.8999, -30.5041, -23.8224, 0.55 ) }
    dend_9 { pt3dadd( -52.5916, -29.9953, -24.5274, 0.55 ) }
    dend_9 { pt3dadd( -54.0634, -29.5436, -24.9726, 0.55 ) }
    dend_9 { pt3dadd( -55.5913, -29.0275, -25.4679, 0.55 ) }
    dend_9 { pt3dadd( -58.0537, -28.2541, -26.4034, 0.55 ) }
    dend_9 { pt3dadd( -59.7796, -27.9372, -27.1703, 1.11 ) }
    dend_9 { pt3dadd( -61.1088, -27.9039, -27.8173, 1.11 ) }
    dend_9 { pt3dadd( -67.5062, -28.4786, -31.2403, 0.55 ) }
    dend_9 { pt3dadd( -69.6243, -28.7949, -32.4328, 0.55 ) }
    dend_9 { pt3dadd( -71.4282, -29.1407, -33.4956, 0.55 ) }
    dend_9 { pt3dadd( -74.5251, -29.776, -35.4161, 0.55 ) }
    dend_9 { pt3dadd( -77.3206, -30.1837, -37.4413, 0.55 ) }
    dend_9 { pt3dadd( -79.6956, -30.2527, -39.6287, 0.55 ) }
    dend_9 { pt3dadd( -80.7696, -30.2041, -40.8227, 0.28 ) }
    dend_9 { pt3dadd( -81.5646, -30.0817, -41.8793, 0.83 ) }
    dend_9 { pt3dadd( -83.425, -29.6188, -44.5719, 0.83 ) }
    dend_9 { pt3dadd( -85.7925, -28.7881, -48.3246, 0.83 ) }
    dend_9 { pt3dadd( -88.4078, -27.6181, -53.0257, 0.55 ) }
    dend_9 { pt3dadd( -89.5071, -27.0929, -55.1053, 0.55 ) }
    dend_9 { pt3dadd( -90.9249, -26.4915, -57.7315, 0.28 ) }
    dend_9 { pt3dadd( -91.6253, -26.2342, -58.9456, 0.83 ) }
    dend_9 { pt3dadd( -93.013, -25.7, -61.2188, 0.55 ) }
    dend_9 { pt3dadd( -94.458, -24.8429, -63.3966, 0.55 ) }
    dend_9 { pt3dadd( -96.3876, -23.3205, -66.2146, 0.28 ) }
    dend_9 { pt3dadd( -97.4385, -22.5039, -67.679, 1.11 ) }
    dend_9 { pt3dadd( -98.263, -21.9201, -68.8767, 0.83 ) }
    dend_9 { pt3dadd( -100.17, -20.7372, -71.7213, 0.83 ) }
    dend_9 { pt3dadd( -102.518, -19.5374, -75.4207, 0.83 ) }
    dend_9 { pt3dadd( -106.251, -17.9115, -81.3295, 0.28 ) }
    dend_9 { pt3dadd( -107.473, -17.4553, -83.3486, 0.83 ) }
    dend_9 { pt3dadd( -111.07, -16.19, -89.5571, 0.28 ) }
    dend_9 { pt3dadd( -112.65, -15.7214, -92.395, 0.83 ) }
    dend_9 { pt3dadd( -115.736, -15.1151, -98.1195, 0.28 ) }
    dend_9 { pt3dadd( -116.189, -15.0833, -99.0504, 0.28 ) }
    dend_9 { pt3dadd( -116.97, -15.0936, -100.816, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 61/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.6635, -31.7142, -2.23442, 1.11 ) }
    dend_4 { pt3dadd( -16.2404, -33.5557, -1.22807, 1.11 ) }
    dend_4 { pt3dadd( -18.5692, -35.5684, -0.13073, 1.11 ) }
    dend_4 { pt3dadd( -20.2669, -36.9767, 0.570095, 1.11 ) }
    dend_4 { pt3dadd( -22.6547, -39.0931, 1.85037, 1.11 ) }
    dend_4 { pt3dadd( -24.9651, -41.3228, 3.39525, 0.83 ) }
    dend_4 { pt3dadd( -26.5811, -42.9003, 4.54752, 0.83 ) }
    dend_4 { pt3dadd( -28.6928, -44.7004, 6.00147, 0.83 ) }
    dend_4 { pt3dadd( -31.5181, -46.7731, 7.74846, 0.83 ) }
    dend_4 { pt3dadd( -35.4385, -49.5148, 9.94777, 1.11 ) }
    dend_4 { pt3dadd( -37.5393, -50.9153, 10.9264, 0.83 ) }
    dend_4 { pt3dadd( -39.3159, -52.0438, 11.6691, 0.83 ) }
    dend_4 { pt3dadd( -42.2512, -53.7558, 12.7153, 0.83 ) }
    dend_4 { pt3dadd( -45.6258, -55.555, 13.6096, 0.83 ) }
    dend_4 { pt3dadd( -48.5477, -56.9253, 14.0695, 0.83 ) }
    dend_4 { pt3dadd( -52.0282, -58.5403, 14.3284, 0.83 ) }
    dend_4 { pt3dadd( -54.8563, -59.8309, 14.4593, 0.83 ) }
    dend_4 { pt3dadd( -57.1811, -60.9534, 14.5745, 0.83 ) }
    dend_4 { pt3dadd( -59.0611, -61.9371, 14.6705, 1.11 ) }
    dend_4 { pt3dadd( -61.4302, -63.277, 14.7698, 0.83 ) }
    dend_4 { pt3dadd( -63.8827, -64.7084, 14.8721, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 82/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -116.97, -15.0936, -100.816, 0.28 ) }
    dend_11 { pt3dadd( -120.679, -16.0202, -104.604, 0.28 ) }
    dend_11 { pt3dadd( -121.636, -16.2478, -105.537, 0.55 ) }
    dend_11 { pt3dadd( -123.462, -16.5833, -107.19, 0.28 ) }
    dend_11 { pt3dadd( -124.844, -16.6579, -108.471, 0.28 ) }
    dend_11 { pt3dadd( -126.781, -16.663, -110.3, 0.55 ) }
    dend_11 { pt3dadd( -129.802, -16.6343, -113.062, 0.28 ) }
    dend_11 { pt3dadd( -130.721, -16.6441, -113.958, 0.55 ) }
    dend_11 { pt3dadd( -132.468, -16.6638, -115.735, 1.11 ) }
    dend_11 { pt3dadd( -136.085, -16.7735, -119.563, 0.28 ) }
    dend_11 { pt3dadd( -138.026, -16.9463, -121.76, 0.55 ) }
    dend_11 { pt3dadd( -140.276, -17.2554, -124.403, 0.55 ) }
    dend_11 { pt3dadd( -143.952, -18.2308, -129.103, 0.55 ) }
    dend_11 { pt3dadd( -145.538, -18.8186, -131.262, 0.55 ) }
    dend_11 { pt3dadd( -147.449, -19.7045, -133.968, 0.55 ) }
    dend_11 { pt3dadd( -148.815, -20.4942, -135.939, 0.55 ) }
    dend_11 { pt3dadd( -151.217, -21.9886, -139.564, 0.55 ) }
    dend_11 { pt3dadd( -153.81, -23.7325, -143.698, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -156.482, -25.4998, -147.637, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -116.97, -15.0936, -100.816, 0.55 ) }
    dend_10 { pt3dadd( -116.125, -16.8238, -102.924, 0.55 ) }
    dend_10 { pt3dadd( -114.941, -19.2475, -105.877, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -63.8827, -64.7084, 14.8721, 0.55 ) }
    dend_8 { pt3dadd( -65.4821, -66.3327, 15.2053, 0.55 ) }
    dend_8 { pt3dadd( -66.6752, -67.5351, 15.3947, 0.55 ) }
    dend_8 { pt3dadd( -68.0882, -68.7324, 15.5937, 0.55 ) }
    dend_8 { pt3dadd( -70.1076, -70.2447, 15.8612, 0.55 ) }
    dend_8 { pt3dadd( -71.5214, -71.1512, 16.0473, 0.55 ) }
    dend_8 { pt3dadd( -74.5474, -72.9443, 16.4299, 0.55 ) }
    dend_8 { pt3dadd( -77.3854, -74.6375, 16.7526, 0.55 ) }
    dend_8 { pt3dadd( -80.2769, -76.4708, 17.0185, 0.55 ) }
    dend_8 { pt3dadd( -82.0214, -77.5596, 17.2379, 0.55 ) }
    dend_8 { pt3dadd( -84.3628, -78.9978, 17.5758, 0.55 ) }
    dend_8 { pt3dadd( -86.6816, -80.4469, 17.9981, 0.55 ) }
    dend_8 { pt3dadd( -88.4962, -81.5085, 18.3978, 0.55 ) }
    dend_8 { pt3dadd( -92.8923, -83.933, 19.5033, 0.55 ) }
    dend_8 { pt3dadd( -96.2107, -85.7296, 20.511, 0.55 ) }
    dend_8 { pt3dadd( -97.4474, -86.4337, 20.9814, 0.83 ) }
    dend_8 { pt3dadd( -99.3591, -87.625, 21.8762, 0.55 ) }
    dend_8 { pt3dadd( -101.194, -88.7166, 22.9033, 0.55 ) }
    dend_8 { pt3dadd( -103.111, -89.8539, 24.109, 0.55 ) }
    dend_8 { pt3dadd( -104.985, -90.9956, 25.3305, 0.55 ) }
    dend_8 { pt3dadd( -107.537, -92.9047, 26.9557, 0.55 ) }
    dend_8 { pt3dadd( -109.895, -94.7596, 28.4706, 0.55 ) }
    dend_8 { pt3dadd( -112.189, -96.6369, 29.9061, 0.55 ) }
    dend_8 { pt3dadd( -113.955, -98.0844, 31.0204, 0.55 ) }
    dend_8 { pt3dadd( -116.91, -100.298, 32.8707, 0.55 ) }
    dend_8 { pt3dadd( -119.363, -101.789, 34.2022, 0.55 ) }
    dend_8 { pt3dadd( -121.45, -102.769, 35.2147, 0.55 ) }
    dend_8 { pt3dadd( -123.263, -103.481, 36.0355, 0.55 ) }
    dend_8 { pt3dadd( -125.347, -104.289, 36.922, 0.55 ) }
    dend_8 { pt3dadd( -127.896, -105.282, 38.0424, 0.83 ) }
    dend_8 { pt3dadd( -130.368, -106.346, 39.1378, 0.55 ) }
    dend_8 { pt3dadd( -132.202, -107.192, 39.8613, 0.55 ) }
    dend_8 { pt3dadd( -134.448, -108.414, 40.6616, 0.55 ) }
    dend_8 { pt3dadd( -135.686, -109.168, 41.0459, 0.55 ) }
    dend_8 { pt3dadd( -138.001, -110.665, 41.6266, 0.55 ) }
    dend_8 { pt3dadd( -140.107, -112.215, 42.0564, 0.55 ) }
    dend_8 { pt3dadd( -142.217, -113.738, 42.4793, 0.55 ) }
    dend_8 { pt3dadd( -143.175, -114.406, 42.645, 0.83 ) }
    dend_8 { pt3dadd( -145.72, -116.077, 42.9642, 0.55 ) }
    dend_8 { pt3dadd( -147.542, -117.179, 43.1189, 0.55 ) }
    dend_8 { pt3dadd( -152.43, -120.085, 43.2968, 0.55 ) }
    dend_8 { pt3dadd( -155.063, -121.533, 43.4399, 0.55 ) }
    dend_8 { pt3dadd( -158.548, -123.225, 43.7163, 0.55 ) }
    dend_8 { pt3dadd( -160.498, -124.047, 43.9981, 0.55 ) }
    dend_8 { pt3dadd( -162.453, -124.682, 44.4414, 1.38 ) }
    dend_8 { pt3dadd( -166.022, -125.532, 45.5841, 0.55 ) }
    dend_8 { pt3dadd( -169.487, -126.018, 47.1227, 0.55 ) }
    dend_8 { pt3dadd( -172.238, -126.42, 48.7642, 0.55 ) }
    dend_8 { pt3dadd( -175.085, -126.713, 50.7858, 0.55 ) }
    dend_8 { pt3dadd( -177.578, -126.936, 52.748, 0.55 ) }
    dend_8 { pt3dadd( -179.423, -127.08, 54.3418, 0.55 ) }
    dend_8 { pt3dadd( -181.843, -127.298, 56.6214, 0.55 ) }
    dend_8 { pt3dadd( -185.39, -127.905, 60.162, 0.55 ) }
    dend_8 { pt3dadd( -186.943, -128.256, 61.7728, 0.55 ) }
    dend_8 { pt3dadd( -187.569, -128.421, 62.3969, 0.55 ) }
    dend_8 { pt3dadd( -188.724, -128.767, 63.488, 0.28 ) }
    dend_8 { pt3dadd( -189.851, -129.063, 64.4615, 0.83 ) }
    dend_8 { pt3dadd( -192.453, -129.583, 66.1142, 0.28 ) }
    dend_8 { pt3dadd( -193.805, -129.689, 66.7678, 0.28 ) }
    dend_8 { pt3dadd( -195.645, -129.712, 67.5836, 0.55 ) }
    dend_8 { pt3dadd( -198.751, -129.672, 68.8296, 0.55 ) }
    dend_8 { pt3dadd( -202.836, -129.591, 70.3026, 0.28 ) }
    dend_8 { pt3dadd( -206.502, -129.53, 71.5414, 0.28 ) }
    dend_8 { pt3dadd( -209.676, -129.501, 72.4939, 0.55 ) }
    dend_8 { pt3dadd( -211.199, -129.478, 72.9573, 0.55 ) }
    dend_8 { pt3dadd( -213.433, -129.49, 73.6354, 0.55 ) }
    dend_8 { pt3dadd( -215.805, -129.543, 74.4307, 0.28 ) }
    dend_8 { pt3dadd( -216.672, -129.583, 74.6268, 0.55 ) }
    dend_8 { pt3dadd( -218.124, -129.712, 74.9167, 0.28 ) }
    dend_8 { pt3dadd( -218.545, -129.775, 74.961, 0.55 ) }
    dend_8 { pt3dadd( -220.935, -130.016, 75.0767, 0.28 ) }
    dend_8 { pt3dadd( -222.46, -130.092, 75.1129, 0.83 ) }
    dend_8 { pt3dadd( -224.89, -130.182, 75.0812, 0.28 ) }
    dend_8 { pt3dadd( -226.999, -130.269, 75.0222, 0.28 ) }
    dend_8 { pt3dadd( -229.766, -130.436, 74.889, 0.28 ) }
    dend_8 { pt3dadd( -232.268, -130.567, 74.7083, 0.28 ) }
    dend_8 { pt3dadd( -241.766, -134.993, 76.4647, 0.28 ) }
    dend_8 { pt3dadd( -250.318, -140.42, 79.5549, 0.28 ) }
    dend_8 { pt3dadd( -258.898, -145.294, 83.4832, 0.28 ) }
    dend_8 { pt3dadd( -267.242, -150.402, 87.5935, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -63.8827, -64.7084, 14.8721, 0.55 ) }
    dend_5 { pt3dadd( -64.1532, -67.6888, 14.4451, 0.55 ) }
    dend_5 { pt3dadd( -64.2721, -70.1362, 13.9714, 0.55 ) }
    dend_5 { pt3dadd( -64.2948, -71.4558, 13.6463, 0.55 ) }
    dend_5 { pt3dadd( -64.3662, -73.2086, 13.184, 0.83 ) }
    dend_5 { pt3dadd( -64.6491, -76.8046, 12.2629, 0.83 ) }
    dend_5 { pt3dadd( -64.9144, -79.4999, 11.6366, 0.55 ) }
    dend_5 { pt3dadd( -65.151, -81.1348, 11.2654, 0.83 ) }
    dend_5 { pt3dadd( -65.537, -83.3481, 10.8025, 0.55 ) }
    dend_5 { pt3dadd( -65.9063, -85.1785, 10.428, 0.55 ) }
    dend_5 { pt3dadd( -66.6232, -88.0351, 9.88883, 0.55 ) }
    dend_5 { pt3dadd( -67.5741, -91.2426, 9.3597, 0.55 ) }
    dend_5 { pt3dadd( -68.7956, -95.107, 8.86902, 0.55 ) }
    dend_5 { pt3dadd( -69.1947, -96.3188, 8.73176, 0.55 ) }
    dend_5 { pt3dadd( -70.4724, -100.18, 8.36047, 0.55 ) }
    dend_5 { pt3dadd( -71.0661, -102.231, 8.12619, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 0/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -156.482, -25.4998, -147.637, 0.55 ) }
    dend_13 { pt3dadd( -159.994, -25.7217, -152.23, 0.55 ) }
    dend_13 { pt3dadd( -161.463, -25.848, -153.979, 0.55 ) }
    dend_13 { pt3dadd( -164.04, -25.9645, -156.821, 0.55 ) }
    dend_13 { pt3dadd( -165.123, -25.977, -157.917, 0.55 ) }
    dend_13 { pt3dadd( -167.6, -26.004, -160.307, 0.55 ) }
    dend_13 { pt3dadd( -171.042, -26.0363, -163.545, 0.55 ) }
    dend_13 { pt3dadd( -172.849, -25.9605, -165.02, 0.55 ) }
    dend_13 { pt3dadd( -174.295, -25.8896, -166.14, 0.55 ) }
    dend_13 { pt3dadd( -175.753, -25.8768, -167.104, 0.55 ) }
    dend_13 { pt3dadd( -177.436, -25.8617, -168.174, 0.55 ) }
    dend_13 { pt3dadd( -178.742, -25.7661, -168.863, 0.55 ) }
    dend_13 { pt3dadd( -179.885, -25.5614, -169.403, 0.28 ) }
    dend_13 { pt3dadd( -181.477, -25.2718, -170.182, 0.55 ) }
    dend_13 { pt3dadd( -184.614, -24.8636, -172.097, 0.28 ) }
    dend_13 { pt3dadd( -185.135, -24.8598, -172.461, 0.28 ) }
    dend_13 { pt3dadd( -185.794, -24.9124, -172.951, 0.55 ) }
    dend_13 { pt3dadd( -187.619, -25.197, -174.378, 0.55 ) }
    dend_13 { pt3dadd( -188.88, -25.5084, -175.423, 0.55 ) }
    dend_13 { pt3dadd( -192.565, -26.8655, -178.745, 0.55 ) }
    dend_13 { pt3dadd( -195.228, -28.0279, -181.174, 0.55 ) }
    dend_13 { pt3dadd( -196.477, -28.6492, -182.35, 0.55 ) }
    dend_13 { pt3dadd( -197.758, -29.4032, -183.635, 0.55 ) }
    dend_13 { pt3dadd( -198.743, -30.1329, -184.704, 0.55 ) }
    dend_13 { pt3dadd( -200.252, -31.4539, -186.447, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -156.482, -25.4998, -147.637, 0.55 ) }
    dend_12 { pt3dadd( -154.93, -22.416, -148.092, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 27/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -71.0661, -102.231, 8.12619, 0.55 ) }
    dend_7 { pt3dadd( -72.2751, -104.303, 7.87979, 0.55 ) }
    dend_7 { pt3dadd( -73.1313, -105.75, 7.5144, 0.28 ) }
    dend_7 { pt3dadd( -74.0345, -106.945, 7.04586, 0.55 ) }
    dend_7 { pt3dadd( -75.3055, -108.639, 5.95626, 0.55 ) }
    dend_7 { pt3dadd( -76.2894, -109.915, 4.79122, 0.28 ) }
    dend_7 { pt3dadd( -76.6626, -110.441, 4.27334, 0.83 ) }
    dend_7 { pt3dadd( -77.964, -112.217, 2.3084, 0.55 ) }
    dend_7 { pt3dadd( -79.2471, -113.831, 0.374113, 0.55 ) }
    dend_7 { pt3dadd( -81.149, -116.113, -2.79808, 0.55 ) }
    dend_7 { pt3dadd( -82.8939, -118.088, -5.77008, 0.55 ) }
    dend_7 { pt3dadd( -84.8211, -120.252, -9.05385, 0.55 ) }
    dend_7 { pt3dadd( -85.4181, -120.907, -10.0353, 0.55 ) }
    dend_7 { pt3dadd( -86.4241, -122.011, -11.6182, 0.55 ) }
    dend_7 { pt3dadd( -87.7194, -123.323, -13.4827, 0.55 ) }
    dend_7 { pt3dadd( -89.8159, -125.212, -16.2473, 0.55 ) }
    dend_7 { pt3dadd( -90.7591, -126.095, -17.6485, 0.55 ) }
    dend_7 { pt3dadd( -92.3874, -127.814, -20.3973, 0.55 ) }
    dend_7 { pt3dadd( -93.4209, -129.131, -22.3801, 0.28 ) }
    dend_7 { pt3dadd( -94.5459, -130.826, -24.7544, 0.55 ) }
    dend_7 { pt3dadd( -95.9262, -133.12, -27.7253, 0.55 ) }
    dend_7 { pt3dadd( -97.6776, -136.234, -31.6886, 0.55 ) }
    dend_7 { pt3dadd( -98.8203, -138.358, -34.2485, 0.55 ) }
    dend_7 { pt3dadd( -99.3299, -139.488, -35.4938, 0.28 ) }
    dend_7 { pt3dadd( -99.9155, -140.988, -37.0638, 0.55 ) }
    dend_7 { pt3dadd( -100.796, -143.468, -39.5729, 0.28 ) }
    dend_7 { pt3dadd( -101.066, -144.131, -40.2381, 0.28 ) }
    dend_7 { pt3dadd( -101.336, -144.764, -40.8902, 0.28 ) }
    dend_7 { pt3dadd( -102.321, -146.813, -43.2066, 1.38 ) }
    dend_7 { pt3dadd( -103.51, -149.109, -45.8228, 0.55 ) }
    dend_7 { pt3dadd( -104.159, -150.313, -47.2094, 0.28 ) }
    dend_7 { pt3dadd( -104.438, -150.871, -47.8242, 0.55 ) }
    dend_7 { pt3dadd( -105.141, -152.394, -49.3312, 0.28 ) }
    dend_7 { pt3dadd( -105.593, -153.424, -50.1935, 0.55 ) }
    dend_7 { pt3dadd( -106.22, -154.971, -50.7722, 0.28 ) }
    dend_7 { pt3dadd( -106.376, -155.356, -50.8422, 0.55 ) }
    dend_7 { pt3dadd( -107.057, -157.142, -51.0361, 0.28 ) }
    dend_7 { pt3dadd( -107.566, -158.49, -51.1244, 0.55 ) }
    dend_7 { pt3dadd( -108.185, -160.11, -51.1697, 0.28 ) }
    dend_7 { pt3dadd( -110.741, -166.978, -51.2836, 0.55 ) }
    dend_7 { pt3dadd( -111.413, -168.794, -51.2894, 0.28 ) }
    dend_7 { pt3dadd( -111.874, -169.99, -51.2856, 0.55 ) }
    dend_7 { pt3dadd( -112.439, -171.314, -51.2507, 0.28 ) }
    dend_7 { pt3dadd( -112.653, -171.848, -51.235, 0.55 ) }
    dend_7 { pt3dadd( -113.067, -172.914, -51.1677, 0.28 ) }
    dend_7 { pt3dadd( -113.482, -174.112, -51.0904, 0.55 ) }
    dend_7 { pt3dadd( -113.982, -175.503, -51.0354, 0.28 ) }
    dend_7 { pt3dadd( -114.767, -177.604, -50.9668, 0.83 ) }
    dend_7 { pt3dadd( -115.584, -179.676, -50.8915, 0.28 ) }
    dend_7 { pt3dadd( -116.218, -181.273, -50.8196, 0.28 ) }
    dend_7 { pt3dadd( -117.228, -183.794, -50.6648, 0.55 ) }
    dend_7 { pt3dadd( -118.237, -186.337, -50.5327, 0.28 ) }
    dend_7 { pt3dadd( -119.245, -188.902, -50.2917, 0.28 ) }
    dend_7 { pt3dadd( -119.486, -189.502, -50.2285, 0.55 ) }
    dend_7 { pt3dadd( -120.309, -191.371, -49.9762, 0.28 ) }
    dend_7 { pt3dadd( -120.76, -192.485, -49.8368, 0.55 ) }
    dend_7 { pt3dadd( -121.522, -194.475, -49.5078, 0.28 ) }
    dend_7 { pt3dadd( -122.248, -196.852, -48.9183, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -71.0661, -102.231, 8.12619, 0.28 ) }
    dend_6 { pt3dadd( -70.0181, -103.612, 8.66733, 0.28 ) }
    dend_6 { pt3dadd( -69.2716, -104.571, 9.08385, 0.28 ) }
    dend_6 { pt3dadd( -68.9233, -105.018, 9.27814, 0.55 ) }
    dend_6 { pt3dadd( -68.4046, -105.684, 9.56758, 0.28 ) }
    dend_6 { pt3dadd( -67.9929, -106.212, 9.79727, 0.55 ) }
    dend_6 { pt3dadd( -66.6149, -107.981, 10.5661, 0.28 ) }
    dend_6 { pt3dadd( -65.6617, -109.31, 11.2824, 0.55 ) }
    dend_6 { pt3dadd( -60.8194, -114.648, 14.3903, 0.55 ) }
    dend_6 { pt3dadd( -55.5234, -120.045, 16.473, 0.55 ) }
    dend_6 { pt3dadd( -50.1117, -125.375, 18.4427, 0.55 ) }
    dend_6 { pt3dadd( -44.6766, -130.719, 20.3048, 0.55 ) }
    dend_6 { pt3dadd( -38.0311, -134.469, 22.5256, 0.55 ) }
    dend_6 { pt3dadd( -31.4223, -138.693, 23.6155, 0.55 ) }
    dend_6 { pt3dadd( -25.7859, -143.794, 25.6286, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -20.7188, -149.694, 26.2439, 0.55 ) }
    dend_6 { pt3dadd( -16.3353, -155.883, 27.9778, 0.55 ) }
    dend_6 { pt3dadd( -12.289, -162.211, 29.9657, 0.55 ) }
    dend_6 { pt3dadd( -7.49308, -168.114, 31.7083, 0.55 ) }
    dend_6 { pt3dadd( -2.19299, -173.656, 33.298, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 5/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -200.252, -31.4539, -186.447, 0.28 ) }
    dend_15 { pt3dadd( -202.297, -32.0539, -186.766, 0.28 ) }
    dend_15 { pt3dadd( -204.487, -32.3791, -188.244, 0.28 ) }
    dend_15 { pt3dadd( -206.603, -32.6102, -189.821, 0.28 ) }
    dend_15 { pt3dadd( -208.647, -32.7633, -191.321, 0.28 ) }
    dend_15 { pt3dadd( -211.015, -32.8185, -192.991, 0.28 ) }
    dend_15 { pt3dadd( -213.402, -32.7972, -195.817, 0.28 ) }
    dend_15 { pt3dadd( -217.355, -32.6736, -202.016, 0.28 ) }
    dend_15 { pt3dadd( -218.142, -32.6373, -203.55, 0.55 ) }
    dend_15 { pt3dadd( -218.768, -32.5822, -204.951, 0.28 ) }
    dend_15 { pt3dadd( -219.396, -32.5516, -206.362, 0.55 ) }
    dend_15 { pt3dadd( -224.678, -32.8483, -217.839, 0.55 ) }
    dend_15 { pt3dadd( -225.29, -32.8989, -219.015, 0.28 ) }
    dend_15 { pt3dadd( -226.616, -33.1827, -221.317, 0.55 ) }
    dend_15 { pt3dadd( -227.937, -33.4887, -223.439, 0.55 ) }
    dend_15 { pt3dadd( -229.639, -34.0464, -225.928, 0.55 ) }
    dend_15 { pt3dadd( -231.19, -34.6971, -227.747, 0.55 ) }
    dend_15 { pt3dadd( -233.052, -35.5431, -229.126, 0.55 ) }
    dend_15 { pt3dadd( -235.2, -36.5561, -230.844, 0.83 ) }
    dend_15 { pt3dadd( -235.801, -36.8861, -231.326, 0.83 ) }
    dend_15 { pt3dadd( -237.853, -38.2035, -233.09, 0.28 ) }
    dend_15 { pt3dadd( -239.975, -39.546, -234.878, 0.55 ) }
    dend_15 { pt3dadd( -242.364, -40.7622, -236.565, 0.28 ) }
    dend_15 { pt3dadd( -243.356, -41.2875, -237.201, 0.55 ) }
    dend_15 { pt3dadd( -244.967, -42.1176, -238.19, 0.28 ) }
    dend_15 { pt3dadd( -245.925, -42.5632, -238.764, 0.28 ) }
    dend_15 { pt3dadd( -247.423, -43.0063, -239.507, 0.55 ) }
    dend_15 { pt3dadd( -250.769, -43.7404, -240.688, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -200.252, -31.4539, -186.447, 0.55 ) }
    dend_14 { pt3dadd( -199.73, -33.3683, -186.593, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_21 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_29 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_27 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_26 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_23 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_17 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_28 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_22 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_21 nseg = 3
    dend_37 nseg = 15
    dend_36 nseg = 5
    dend_34 nseg = 17
    dend_29 nseg = 3
    dend_25 nseg = 5
    dend_31 nseg = 9
    dend_30 nseg = 11
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_24 nseg = 9
    dend_23 nseg = 9
    dend_17 nseg = 11
    dend_2 nseg = 11
    dend_20 nseg = 7
    dend_19 nseg = 15
    dend_9 nseg = 7
    dend_4 nseg = 3
    dend_11 nseg = 3
    dend_8 nseg = 13
    dend_13 nseg = 3
    dend_7 nseg = 7
    dend_6 nseg = 5
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_NBC_da24c6bffc_0_0


