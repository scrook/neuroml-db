// Cell: cACint209_L5_BP_46b07f0520_0_0
/*
{
  "id" : "cACint209_L5_BP_46b07f0520_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-2.73712, 7.54352, 2.76708, 0.83", "-5.09123, 9.27692, 3.12212, 1.11", "-6.47923, 10.2983, 3.3068, 0.83", "-7.82772, 11.2819, 3.47227, 0.83", "-8.62613, 11.8429, 3.56294, 1.11", "-11.1264, 13.5956, 3.85356, 1.11", "-15.5984, 16.5964, 4.36727, 0.83", "-17.2095, 17.6362, 4.53691, 0.83", "-18.4853, 18.4352, 4.64228, 0.83", "-19.7294, 19.2271, 4.73349, 0.83", "-20.7421, 19.8797, 4.7827, 0.55", "-21.5033, 20.3216, 4.83265, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "4.79265, 6.0166, -6.28047, 0.55", "7.74142, 6.62258, -6.93899, 0.55", "9.45249, 6.77556, -7.81034, 0.83", "12.1605, 6.93835, -9.42894, 0.55", "13.4678, 7.01693, -10.2103, 1.38", "16.682, 7.21015, -12.1314, 0.55", "18.051, 7.14472, -13.048, 0.83", "25.1324, 5.94478, -18.1983, 0.55", "25.8175, 5.78342, -18.7649, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.680582, -9.65605, 3.12053, 1.11", "-0.722185, -13.1432, 4.43647, 1.11", "-0.739128, -14.5634, 4.9724, 0.83", "-0.761638, -16.4502, 5.68442, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.893438, 9.43439, -1.37448, 1.11", "0.992648, 11.3782, -1.35467, 1.11", "1.1471, 14.5494, -1.2003, 1.38", "1.15896, 14.726, -1.18841, 1.38", "1.44463, 16.9099, -1.01957, 0.83", "1.84695, 19.2181, -0.712148, 0.83", "2.53981, 21.8217, -0.0353919, 0.83", "2.93311, 22.8079, 0.348031, 0.83", "3.32011, 23.5211, 0.700582, 1.11", "4.44894, 25.2569, 1.6082, 0.55", "5.76169, 27.0674, 2.69254, 0.83", "7.47654, 28.9266, 3.91881, 0.55", "8.3494, 29.6976, 4.47257, 0.83", "9.57107, 30.7412, 5.33917, 0.55", "11.0864, 32.0686, 6.51547, 0.55", "13.2063, 34.0673, 8.31706, 0.55", "15.543, 36.3527, 10.3066, 0.55", "17.021, 37.8356, 11.7987, 0.55", "18.8375, 39.7102, 13.911, 0.55", "19.2156, 40.0859, 14.3909, 0.83", "20.2156, 41.0784, 15.7461, 0.55", "21.0557, 41.8517, 16.8087, 0.83", "22.9926, 43.9681, 19.3305, 0.55", "23.7184, 44.7414, 20.0639, 0.83", "24.3938, 45.3106, 20.5572, 0.55", "25.0616, 45.8001, 20.9323, 0.83", "26.539, 46.7086, 21.606, 0.83", "28.4899, 47.9465, 22.3221, 0.83", "29.6847, 48.766, 22.6313, 0.55", "30.5962, 49.4761, 22.8725, 0.55", "32.985, 51.3106, 23.4686, 0.83", "34.5265, 52.4872, 23.7908, 0.55", "36.8645, 54.2104, 24.1841, 0.55", "39.0042, 55.6541, 24.4576, 0.55", "40.9166, 56.8765, 24.6502, 0.55", "43.3301, 58.3077, 24.7826, 0.55", "44.8032, 59.0071, 24.8147, 0.55", "45.8049, 59.3993, 24.7154, 0.55", "47.1316, 59.6889, 24.4697, 0.55", "49.1059, 59.814, 23.9386, 0.55", "50.335, 59.7426, 23.559, 0.55", "52.1339, 59.5911, 23.1314, 0.55", "55.569, 59.406, 22.6261, 0.55", "58.27, 59.3791, 22.423, 0.55", "61.1376, 59.4798, 22.3798, 0.55", "62.9803, 59.6038, 22.4977, 0.55", "67.7778, 60.3362, 23.1208, 0.55", "70.6228, 60.9759, 23.7035, 0.55", "72.7618, 61.5871, 24.34, 0.55", "74.0638, 62.162, 24.7777, 0.55", "75.5738, 63.0203, 25.2784, 0.55", "78.1251, 64.7164, 25.9004, 0.55", "78.7083, 65.1252, 25.9626, 0.55", "80.3785, 66.2181, 26.0306, 0.55", "81.9139, 67.3839, 26.0879, 0.83", "82.7515, 68.0308, 26.1059, 0.55", "84.0054, 69.1423, 26.0837, 0.83", "90.6521, 75.0737, 27.7073, 0.83", "96.4285, 81.8916, 28.6705, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-21.5033, 20.3216, 4.83265, 0.55", "-22.9971, 21.0376, 4.08335, 0.55", "-24.6215, 21.8161, 3.26856, 0.55", "-26.5817, 22.7557, 2.28528, 0.55", "-28.2004, 23.5315, 1.47336, 0.83", "-29.5568, 24.1816, 0.792972, 0.55", "-32.0745, 25.3884, -0.469926, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-21.5033, 20.3216, 4.83265, 0.55", "-23.5098, 20.9294, 4.23505, 0.55", "-25.6989, 21.4508, 3.79216, 0.55", "-28.1958, 22.0214, 3.3477, 0.55", "-31.8923, 22.7194, 3.01417, 0.55", "-35.0388, 23.1611, 2.9192, 0.55", "-38.3725, 23.5408, 2.93751, 0.55", "-41.6785, 23.6203, 3.21906, 0.55", "-44.5909, 23.3751, 3.63938, 0.55", "-48.3095, 22.754, 4.44291, 0.55", "-49.9764, 22.3292, 4.9576, 0.55", "-51.7934, 21.8362, 5.57393, 0.55", "-54.9727, 20.8057, 6.48409, 0.55", "-56.6096, 20.3249, 6.74737, 0.55", "-58.3229, 19.7798, 7.00168, 0.55", "-60.3159, 19.204, 7.13218, 0.55", "-62.468, 18.6319, 7.23288, 0.55", "-65.525, 17.8258, 7.31526, 0.55", "-69.5222, 17.0793, 7.16699, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "25.8175, 5.78342, -18.7649, 0.55", "30.9952, 6.73465, -19.8649, 0.55", "33.9549, 7.18066, -20.9346, 0.55", "36.8636, 7.50425, -22.0506, 0.55", "38.844, 7.65066, -22.8235, 0.55", "41.7331, 7.79807, -23.9405, 0.55", "47.7117, 8.02178, -26.4607, 0.55", "54.4801, 8.30129, -29.7785, 0.55", "57.7386, 8.27564, -31.6444, 0.55", "59.4774, 8.23779, -32.7657, 0.55", "61.3829, 8.2167, -34.0723, 0.55", "64.775, 8.08585, -36.4041, 0.55", "65.9994, 7.97474, -37.303, 0.55", "71.1852, 7.69008, -41.5001, 0.55", "74.8549, 7.58641, -44.7408, 0.55", "76.97, 7.57532, -46.6601, 0.55", "79.0779, 7.54598, -48.5755, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "25.8175, 5.78342, -18.7649, 0.83", "27.7839, 7.02824, -18.8238, 0.83", "28.9086, 7.73692, -18.9104, 0.55", "30.5647, 8.81062, -19.1842, 0.83", "31.6775, 9.55915, -19.404, 0.55", "33.2104, 10.6324, -19.6856, 0.83", "35.0515, 11.9608, -19.9553, 0.55", "35.9798, 12.5635, -20.0488, 0.55", "38.1254, 13.6722, -20.0972, 0.83", "40.0787, 14.4595, -19.8721, 0.55", "41.1695, 14.8924, -19.6388, 0.83", "42.8023, 15.5832, -19.1136, 0.55", "45.1416, 16.6273, -18.0526, 0.55", "48.3942, 17.9198, -16.4006, 0.55", "51.4966, 19.0514, -14.6001, 0.55", "53.9549, 19.924, -13.1271, 0.55", "58.0065, 21.3817, -10.6777, 0.55", "60.9665, 22.5338, -8.82173, 0.55", "62.7465, 23.3783, -7.63925, 0.55", "66.0104, 25.2643, -5.44317, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.761638, -16.4502, 5.68442, 0.83", "-0.970955, -19.1794, 5.565, 0.83", "-1.17489, -21.8384, 5.44865, 0.83", "-1.40258, -24.8072, 5.31874, 0.83", "-1.52148, -26.3575, 5.2509, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.761638, -16.4502, 5.68442, 0.55", "-0.315515, -17.8095, 6.79179, 0.55", "0.040873, -19.4845, 8.19773, 0.55", "0.136839, -21.701, 10.0783, 0.55", "0.106686, -22.5664, 10.824, 0.83", "-0.2242, -24.787, 12.9592, 0.55", "-0.496853, -25.9396, 14.0695, 0.55", "-1.09181, -28.1838, 16.3199, 0.83", "-1.65057, -29.856, 18.0857, 0.55", "-2.23494, -31.2431, 19.5004, 0.55", "-3.39495, -33.8738, 22.1212, 0.55", "-4.31336, -35.9706, 24.1851, 0.55", "-5.01833, -37.6493, 25.8693, 0.55", "-5.65671, -39.4256, 27.6152, 0.28", "-5.8538, -40.1618, 28.323, 0.55", "-6.16866, -41.5194, 29.5558, 0.28", "-6.30712, -43.6216, 31.184, 0.55", "-8.59375, -50.7205, 36.7247, 0.55", "-11.1916, -57.2969, 42.8157, 0.55", "-13.6161, -62.6924, 50.1356, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-32.0745, 25.3884, -0.469926, 0.55", "-33.5737, 25.9801, 0.90634, 0.55", "-34.1722, 26.2254, 1.58585, 0.83", "-34.8322, 26.515, 2.50474, 0.55", "-35.3178, 26.7591, 3.26495, 0.83", "-36.5995, 27.4512, 5.22074, 0.55", "-37.084, 27.7256, 5.96234, 0.28", "-37.8626, 28.2297, 7.28241, 0.55", "-38.9103, 28.9116, 9.04405, 0.55", "-39.7224, 29.4104, 10.3328, 0.55", "-40.8227, 30.0582, 12.0094, 0.28", "-41.124, 30.2116, 12.3995, 0.55", "-41.7581, 30.5267, 13.1749, 0.28", "-42.2063, 30.7347, 13.6478, 0.55", "-43.1521, 31.1154, 14.5244, 0.28", "-43.7157, 31.2919, 15.0195, 0.55", "-44.7014, 31.5269, 15.9317, 0.28", "-45.3718, 31.6697, 16.5203, 0.55", "-48.7497, 32.9759, 22.2297, 0.55", "-51.5773, 33.8106, 28.3038, 0.55", "-54.2053, 34.0618, 34.5018, 0.55", "-56.8594, 33.5062, 40.6405, 0.55", "-58.6052, 33.4209, 47.1298, 0.55", "-60.9186, 33.482, 53.4484, 0.55", "-63.3003, 34.6114, 59.6683, 0.55", "-65.6602, 35.2278, 65.9565, 0.55", "-67.8694, 36.3079, 72.2467, 0.55", "-69.7194, 37.3571, 78.655, 0.55", "-70.8395, 37.7674, 85.2816, 0.55", "-72.0175, 38.7824, 91.849, 0.55", "-73.3054, 39.1242, 98.4477, 0.55", "-73.7516, 39.2742, 105.153, 0.55", "-73.018, 39.9483, 111.815, 0.55", "-72.3039, 39.3651, 118.442, 0.55", "-70.6461, 38.6489, 124.878, 0.55", "-69.3155, 38.235, 131.429, 0.55", "-68.6755, 38.3138, 138.115, 0.55", "-69.4717, 39.3363, 144.737, 0.55", "-69.6604, 39.6785, 151.454, 0.55", "-68.5556, 41.1532, 157.952, 0.55", "-68.5579, 43.0545, 164.441, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-32.0745, 25.3884, -0.469926, 0.55", "-33.7356, 25.6943, -2.12493, 0.55", "-35.0804, 26.0353, -4.02301, 0.55", "-36.3666, 26.5208, -6.06695, 0.55", "-37.1719, 26.8248, -7.34685, 0.55", "-38.641, 27.3794, -9.68152, 0.83", "-39.7158, 27.7852, -11.3896, 0.55", "-41.0067, 28.3104, -13.9184, 0.83", "-41.5375, 28.7201, -15.3786, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-69.5222, 17.0793, 7.16699, 0.28", "-70.3451, 15.4948, 6.94218, 0.28", "-70.7355, 14.8058, 6.78266, 0.28", "-71.2361, 13.8291, 6.5269, 0.55", "-71.6469, 12.9722, 6.3129, 0.28", "-72.2527, 11.6692, 6.0058, 0.55", "-73.9348, 7.84989, 5.17778, 0.28", "-74.4682, 6.5, 4.78587, 0.55", "-75.2676, 4.41384, 4.11444, 0.28", "-75.7182, 3.1605, 3.65982, 0.55", "-76.0276, 2.29444, 3.32595, 0.28", "-76.3805, 1.30142, 2.95106, 0.55", "-77.4351, -1.99959, 1.79505, 0.28", "-77.7657, -3.0025, 1.40885, 0.55", "-78.3428, -4.55616, 0.652624, 0.28", "-78.8306, -5.56428, 0.0693965, 0.28", "-79.2853, -6.24421, -0.360193, 0.55", "-80.9144, -8.15683, -1.55836, 0.28", "-81.6828, -8.93245, -2.04125, 0.55", "-83.5624, -10.7145, -3.26277, 0.28", "-85.457, -12.3025, -4.40967, 0.28", "-87.5287, -13.8335, -5.61126, 0.28", "-88.4885, -14.416, -6.09207, 0.55", "-92.9528, -20.5125, -8.90813, 0.55", "-98.1223, -26.548, -10.2739, 0.55", "-103.061, -32.3994, -12.8604, 0.55", "-108.074, -37.8386, -16.1969, 0.55", "-113.096, -42.7869, -20.2853, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-69.5222, 17.0793, 7.16699, 0.55", "-70.2495, 17.066, 7.08211, 0.55", "-72.3637, 16.955, 7.08976, 0.55", "-73.1685, 16.8836, 7.12524, 0.55", "-75.0691, 16.6582, 7.21923, 0.55", "-77.9595, 16.3756, 7.24664, 0.55", "-79.4542, 16.2764, 7.24943, 0.28", "-81.7712, 16.0902, 7.19919, 0.55", "-83.4787, 15.9378, 7.09652, 0.55", "-84.2002, 15.8688, 7.05326, 0.28", "-88.5268, 15.4544, 6.78804, 0.55", "-90.5229, 15.2124, 6.52637, 0.28", "-93.1786, 14.9212, 6.02534, 0.28", "-95.4354, 14.7391, 5.47763, 0.55", "-104.666, 14.6667, 5.51688, 0.55", "-113.831, 14.0823, 6.44798, 0.55", "-122.745, 12.3461, 8.05241, 0.55", "-131.545, 11.7956, 10.7851, 0.55", "-139.592, 10.4227, 15.0963, 0.55", "-146.606, 9.04666, 20.9351, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "79.0779, 7.54598, -48.5755, 0.55", "81.9022, 8.36613, -50.954, 0.55", "82.7916, 8.58957, -51.7646, 0.55", "83.9035, 8.833, -52.7671, 0.55", "85.9168, 9.26205, -54.7084, 0.55", "88.0128, 9.62698, -56.7916, 0.55", "89.0349, 9.72365, -57.7869, 0.83", "89.8718, 9.7484, -58.6743, 0.55", "90.4935, 9.71786, -59.4062, 0.83", "91.9792, 9.43795, -61.2881, 0.55", "93.1972, 9.09182, -62.8516, 0.55", "94.6001, 8.68122, -64.5766, 0.55", "96.163, 8.27102, -66.5292, 0.55", "97.2092, 7.97169, -67.8678, 0.55", "98.3883, 7.63177, -69.4182, 0.55", "99.4064, 7.37778, -70.8327, 0.55", "100.047, 7.28142, -71.8113, 0.55", "100.834, 7.14334, -73.7641, 0.55", "101.256, 7.0244, -74.9846, 0.55", "101.596, 6.80974, -76.6019, 0.55", "102.038, 6.37503, -79.3345, 0.55", "102.125, 6.25577, -79.9511, 0.28", "103.266, 4.72383, -87.4522, 0.28", "103.666, 4.28563, -89.6556, 0.83", "105.272, 2.59278, -97.4803, 0.83", "106.107, 1.66649, -101.122, 0.83", "106.518, 1.23211, -102.601, 0.55", "107.001, 0.799101, -104.045, 0.55", "108.395, -0.0843879, -106.736, 0.55", "109.911, -0.89631, -109.109, 0.28", "110.391, -1.06659, -109.262, 0.55", "111.463, -1.38221, -109.207, 0.28", "112.131, -1.5353, -109.074, 0.55", "112.829, -1.70586, -108.876, 0.28", "113.67, -1.87183, -108.597, 0.55", "114.927, -2.05213, -108.313, 0.28", "115.934, -2.22533, -108.119, 0.55", "117.049, -2.34321, -107.991, 0.28", "118.561, -2.49392, -107.952, 0.55", "120.256, -2.62181, -108.009, 0.55", "121.744, -2.7139, -108.158, 0.28", "123.801, -2.8193, -108.479, 0.55", "127.351, -2.894, -109.412, 0.55", "128.918, -2.8422, -110.012, 0.55", "129.59, -2.79041, -110.343, 0.83", "130.868, -2.67886, -111.091, 0.55", "131.755, -2.56465, -111.665, 0.83", "134.143, -2.19554, -113.236, 0.55", "135.595, -2.06615, -114.238, 0.28", "136.207, -2.05108, -114.591, 0.55", "137.882, -2.16699, -115.373, 0.28", "138.467, -2.26134, -115.609, 0.55", "139.675, -2.53584, -115.909, 0.28", "140.906, -2.93855, -116.001, 0.55", "143.399, -3.89646, -115.747, 0.28", "144.55, -4.39135, -115.507, 0.55", "146.26, -5.22535, -115.061, 0.28", "148.422, -6.27346, -114.419, 0.55", "149.988, -7.0116, -113.928, 0.55", "152.705, -8.20974, -113.029, 0.28", "153.82, -8.64868, -112.752, 0.55", "155.741, -9.29259, -112.483, 0.28", "157.657, -9.78859, -112.346, 0.55", "158.709, -9.94122, -112.414, 0.28", "159.664, -9.95362, -112.547, 0.55", "162.357, -9.82642, -113.172, 0.28", "164.286, -9.60694, -113.646, 0.28", "165.968, -9.29852, -114.078, 0.55", "167.824, -8.90542, -114.647, 0.28", "168.293, -8.77894, -114.774, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "79.0779, 7.54598, -48.5755, 0.55", "79.2829, 6.53958, -49.5843, 0.55", "79.3673, 5.67942, -50.3637, 0.28", "79.4455, 4.87594, -50.9992, 0.55", "79.7122, 3.17016, -52.369, 0.28", "79.7252, 3.06644, -52.4724, 0.55", "79.81, 2.53245, -53.0674, 0.28", "79.8288, 2.11055, -53.6419, 0.55", "79.815, 1.68474, -54.3035, 0.28", "79.7728, 1.11231, -55.2402, 0.55", "79.6665, -0.332135, -57.5562, 0.55", "79.5486, -1.64127, -59.6971, 0.55", "79.4405, -2.68636, -61.4096, 0.55", "79.3094, -3.7169, -63.0675, 0.55", "79.2747, -3.98608, -63.4808, 0.28", "79.2492, -4.28053, -63.8914, 0.55", "79.2644, -4.70114, -64.4139, 0.28", "79.3895, -5.47834, -65.2694, 0.55", "79.7896, -7.03269, -66.6318, 0.55", "80.0152, -7.88612, -67.2791, 0.28", "80.1865, -8.74153, -67.977, 0.55", "80.3245, -9.92272, -69.0014, 0.28", "80.3641, -10.8663, -69.8508, 0.55", "80.3524, -12.2718, -71.1209, 0.28", "80.3541, -13.7373, -72.383, 0.55", "80.3229, -15.8586, -74.2358, 0.28", "80.2771, -16.9866, -75.2264, 0.55", "80.2076, -18.1327, -76.2705, 0.28", "80.132, -19.1266, -77.2628, 0.28", "80.086, -20.3484, -78.634, 0.55", "80.1402, -21.4942, -79.8749, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "66.0104, 25.2643, -5.44317, 0.55", "67.7663, 25.0835, -5.08721, 0.55", "69.0451, 24.9073, -4.95046, 0.55", "71.8426, 24.4938, -4.79828, 0.55", "73.0989, 24.2853, -4.8427, 0.55", "74.4683, 24.0869, -4.96063, 0.55", "76.304, 23.8542, -5.24932, 0.55", "78.2376, 23.5631, -5.73983, 0.55", "79.2504, 23.3999, -6.11447, 0.55", "81.3027, 23.0734, -7.16004, 0.55", "82.2472, 22.9311, -7.67193, 0.55", "84.4595, 22.558, -8.93051, 0.55", "85.9589, 22.2465, -9.77154, 0.55", "87.0636, 22.0094, -10.3395, 0.83", "88.8299, 21.5665, -11.2278, 0.55", "90.5624, 21.0494, -12.0312, 0.83", "92.0344, 20.5439, -12.6608, 0.55", "93.3459, 20.1112, -13.1511, 0.55", "94.0923, 19.8959, -13.3874, 0.83", "95.837, 19.3966, -13.8458, 0.28", "96.7056, 19.1819, -14.0172, 0.28", "97.5454, 18.9235, -14.2282, 0.28", "98.4531, 18.6678, -14.4598, 0.28", "99.9044, 18.2855, -14.8604, 0.28", "100.489, 18.1384, -15.0037, 0.55", "101.89, 17.7973, -15.2078, 0.55", "104.414, 17.1575, -15.4473, 0.55", "105.114, 16.962, -15.483, 0.55", "105.74, 16.7673, -15.4884, 0.83", "107.101, 16.3823, -15.3886, 0.55", "108.285, 16.0494, -15.2828, 0.55", "109.404, 15.7394, -15.1775, 0.55", "110.27, 15.4853, -15.1209, 0.55", "111.642, 14.9918, -15.101, 0.55", "113.257, 14.2752, -15.1712, 0.55", "115.765, 12.8931, -15.4649, 0.55", "117.14, 11.9405, -15.7199, 0.55", "118.331, 10.9187, -16.0071, 0.28", "118.685, 10.5387, -16.1158, 0.55", "119.468, 9.46871, -16.4042, 0.28", "120.141, 8.26293, -16.6966, 0.55", "120.775, 6.75053, -16.9291, 0.55", "121.204, 5.75584, -17.0321, 0.28", "121.362, 5.40426, -17.0505, 0.55", "121.772, 4.53114, -17.0839, 0.28", "122.332, 3.39541, -17.099, 0.55", "123.793, 0.660693, -17.0661, 0.55", "124.556, -0.717297, -17.0195, 0.55", "125.264, -1.98011, -16.965, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "66.0104, 25.2643, -5.44317, 0.55", "68.6981, 25.4209, -3.48087, 0.55", "69.5594, 25.4741, -2.89825, 0.55", "72.7727, 25.5466, -0.881415, 0.55", "76.3581, 25.6865, 1.43062, 0.55", "80.9559, 25.8406, 4.51226, 0.55", "82.2256, 25.8856, 5.35532, 0.55", "84.5071, 25.8877, 6.83531, 0.55", "87.0041, 25.9557, 8.3723, 0.55", "89.9016, 26.1273, 10.0413, 0.55", "92.6305, 26.3237, 11.6284, 0.55", "94.1234, 26.5041, 12.4393, 0.55", "95.8738, 26.7636, 13.3945, 0.55", "98.0358, 27.1483, 14.5455, 0.83", "101.571, 27.8195, 16.0645, 0.55", "103.914, 28.1919, 16.9479, 0.83", "107.171, 28.5834, 18.0455, 0.55", "108.173, 28.6545, 18.3616, 0.55", "111.289, 28.7391, 19.2596, 0.55", "116.874, 28.6053, 20.606, 0.55", "120.972, 28.3079, 21.4721, 0.55", "124.223, 27.9225, 22.2136, 0.55", "127.548, 27.353, 23.0589, 0.55", "128.249, 27.2154, 23.2378, 0.28", "129.671, 26.8842, 23.5904, 0.83", "135.516, 25.4409, 25.0605, 0.55", "139.603, 24.446, 26.0125, 0.55", "142.955, 23.697, 26.8864, 0.55", "144.959, 23.2412, 27.4265, 0.83", "146.536, 22.9033, 27.8573, 0.28", "147.965, 22.6007, 28.2352, 0.55", "159.023, 22.5424, 33.0816, 0.55", "170.752, 21.0626, 35.5937, 0.55", "182.383, 20.8811, 38.8508, 0.55", "192.912, 18.7279, 44.3812, 0.55", "202.793, 14.9661, 50.2123, 0.55", "213.543, 10.0762, 52.4869, 0.55", "224.097, 4.42059, 52.614, 0.55", "235.606, 0.881317, 52.2906, 0.55", "247.017, -2.94421, 52.7399, 0.55", "258.827, -5.4289, 52.5971, 0.55", "270.613, -7.63468, 54.0587, 0.55", "281.743, -11.8574, 55.8785, 0.55", "293.125, -14.2558, 59.1465, 0.55", "304.003, -15.239, 64.3122, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.52148, -26.3575, 5.2509, 1.38", "0.913975, -29.2117, 3.91506, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.52148, -26.3575, 5.2509, 0.55", "-3.16596, -28.1876, 5.45098, 0.55", "-4.99113, -30.5406, 5.67043, 0.55", "-6.40442, -32.0937, 5.85947, 0.55", "-7.61557, -33.3898, 5.83182, 0.55", "-10.2819, -36.0688, 5.52597, 0.55", "-12.1554, -37.8552, 5.26146, 0.55", "-13.8283, -39.4565, 4.96454, 0.55", "-18.1209, -43.3484, 4.20763, 0.55", "-23.271, -47.85, 3.33971, 0.55", "-27.265, -51.2566, 2.60078, 0.55", "-29.8194, -53.4951, 2.09263, 0.55", "-32.7517, -56.1845, 1.51711, 0.55", "-36.4761, -60.055, 0.830251, 0.55", "-38.6606, -62.8137, 0.468442, 0.55", "-41.3428, -66.7959, 0.245449, 0.55", "-43.485, -70.538, 0.144619, 0.55", "-45.666, -75.2211, 0.0703293, 0.55", "-47.7376, -80.7331, 0.0751267, 0.55", "-48.8736, -84.9583, 0.139445, 0.55", "-49.2731, -87.0661, 0.300212, 0.55", "-49.8694, -92.0291, 0.928432, 0.55", "-50.327, -96.6762, 1.63432, 0.55", "-50.4973, -101.367, 2.68143, 0.55", "-50.6079, -104.058, 3.43865, 0.55", "-50.8627, -112.385, 6.09364, 0.55", "-50.8845, -112.998, 6.30081, 0.55", "-50.9339, -116.755, 7.65782, 0.55", "-51.3317, -123.467, 10.2838, 0.55", "-51.4933, -125.71, 11.0241, 0.55", "-51.9037, -129.209, 11.563, 0.55", "-52.0544, -130.507, 11.448, 0.55", "-52.4534, -134.899, 10.1723, 0.55", "-52.6129, -137.742, 8.69932, 0.55", "-52.8404, -142.267, 5.37351, 0.55", "-52.9314, -147.805, 0.829925, 0.28", "-52.9521, -149.173, -0.490031, 0.55", "-52.9971, -151.245, -2.68411, 0.28", "-53.0088, -151.557, -3.03188, 0.55", "-53.0675, -153.268, -4.78087, 0.28", "-53.1142, -153.848, -5.22958, 0.55", "-53.3628, -156.871, -6.94115, 0.28", "-53.4878, -157.898, -7.50541, 0.55", "-53.8692, -160.871, -8.95528, 0.28", "-53.9845, -161.806, -9.40856, 0.55", "-54.4043, -165.035, -10.9144, 0.28", "-54.5901, -166.521, -11.6159, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.6161, -62.6924, 50.1356, 0.55", "-18.6715, -70.7681, 58.4048, 0.55", "-24.8878, -77.6786, 67.0345, 0.55", "-30.8304, -85.4036, 75.0686, 0.55", "-36.9983, -93.1475, 82.9059, 0.55", "-41.9504, -102.354, 89.807, 0.55", "-46.7395, -111.195, 97.3338, 0.55", "-50.2683, -121.998, 102.287, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.6161, -62.6924, 50.1356, 0.55", "-13.4165, -69.4012, 56.6819, 0.55", "-12.8541, -77.1088, 61.8451, 0.55", "-13.8382, -84.802, 66.9503, 0.55", "-15.3797, -92.888, 71.156, 0.55", "-16.5353, -100.962, 75.5149, 0.55", "-17.6127, -108.725, 80.4805, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-41.5375, 28.7201, -15.3786, 0.83", "-41.5511, 29.7834, -17.6022, 0.83", "-41.6325, 32.4404, -22.6407, 0.55", "-41.639, 33.6275, -24.6727, 0.83", "-41.616, 34.9338, -26.7234, 0.55", "-41.5438, 36.3549, -28.5675, 0.55", "-41.4773, 37.1039, -29.3743, 0.28", "-41.4444, 37.6459, -29.7446, 0.55", "-41.1868, 39.5836, -30.5515, 0.28", "-41.0455, 40.4253, -30.8567, 0.55", "-40.5692, 43.3877, -31.7847, 0.28", "-40.241, 45.7592, -32.4248, 0.55", "-39.8932, 49.4974, -33.2687, 0.28", "-39.6957, 52.8019, -33.9221, 0.28", "-39.6896, 54.6621, -34.2289, 0.55", "-39.8222, 56.8678, -34.5631, 0.28", "-39.9541, 57.9244, -34.6933, 0.55", "-40.426, 60.3769, -35.083, 0.28", "-40.8707, 61.9861, -35.406, 0.28", "-41.3526, 63.5521, -35.7656, 0.28", "-41.5741, 64.3787, -35.9658, 0.55", "-42.2952, 67.7017, -36.8965, 0.28", "-43.0236, 71.6178, -38.1032, 0.55", "-43.2549, 72.9689, -38.5299, 0.55", "-43.5042, 74.332, -38.9222, 0.55", "-44.2078, 77.2118, -39.7713, 0.55", "-44.8091, 79.0879, -40.3445, 0.28", "-45.1281, 79.7938, -40.5533, 0.55", "-46.1302, 81.7149, -41.0453, 0.28", "-47.3047, 83.7337, -41.636, 0.55", "-49.3144, 86.5958, -42.5453, 0.28", "-50.306, 87.7753, -42.9371, 0.28", "-51.9585, 89.3588, -43.6138, 0.55", "-53.8284, 90.977, -44.3917, 0.28", "-54.1704, 91.2258, -44.5192, 0.55", "-55.405, 92.0047, -44.9364, 0.28", "-59.6537, 94.4872, -46.2363, 0.55", "-65.6141, 97.4237, -48.1093, 0.28", "-66.7288, 97.8884, -48.4963, 0.55", "-69.801, 99.0497, -49.5747, 0.28", "-71.0978, 99.5131, -50.0538, 0.28", "-72.2354, 99.8776, -50.5102, 0.55", "-75.6185, 100.545, -51.9696, 0.28", "-77.9944, 100.836, -52.8592, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-41.5375, 28.7201, -15.3786, 0.55", "-41.7634, 29.7736, -15.6815, 0.55", "-41.9063, 30.4059, -15.7957, 0.28", "-42.0904, 30.8752, -15.748, 0.55", "-42.5132, 31.953, -15.6384, 0.28", "-42.8101, 32.71, -15.5614, 0.55", "-43.3575, 34.1056, -15.4195, 0.28", "-43.7124, 34.8742, -15.2007, 0.55", "-45.0248, 36.7967, -13.9642, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-113.096, -42.7869, -20.2853, 0.55", "-118.495, -50.6426, -22.2183, 0.55", "-122.245, -59.3044, -24.2811, 0.55", "-124.811, -67.7882, -28.2466, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-113.096, -42.7869, -20.2853, 0.55", "-119.431, -51.525, -24.3479, 0.55", "-124.372, -60.6364, -29.3831, 0.55", "-128.808, -69.9428, -34.5034, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-146.606, 9.04666, 20.9351, 0.55", "-155.403, 8.71055, 24.4688, 0.55", "-164.459, 9.58617, 27.1224, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-146.606, 9.04666, 20.9351, 0.55", "-157.659, 7.60766, 22.1183, 0.55", "-168.768, 7.89948, 23.6346, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "80.1402, -21.4942, -79.8749, 0.28", "85.3226, -23.8561, -89.8025, 0.28", "85.8307, -24.147, -90.6954, 0.55", "86.6886, -24.638, -92.203, 0.28", "87.411, -25.0515, -93.4724, 0.28", "88.3672, -25.5988, -95.1528, 0.55", "89.6279, -26.3204, -97.3683, 0.55", "91.2678, -27.8375, -98.6522, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "80.1402, -21.4942, -79.8749, 0.55", "80.6932, -22.4606, -81.1577, 0.55", "80.8464, -22.8967, -81.7223, 0.28", "81.0604, -23.6439, -82.7057, 0.55", "81.5319, -25.2899, -84.8719, 0.28", "81.8587, -26.4306, -86.3731, 0.55", "82.4123, -28.3633, -88.9166, 0.28", "82.9921, -30.7087, -92.2421, 0.28", "83.2012, -31.7863, -93.7936, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "125.264, -1.98011, -16.965, 0.28", "127.373, -4.767, -16.3953, 0.28", "130.024, -8.48122, -15.3193, 0.28", "131.698, -10.9019, -14.5184, 0.55", "132.709, -12.2421, -14.0009, 0.28", "133.246, -12.9645, -13.7151, 0.28", "135.91, -16.5258, -12.3631, 0.55", "136.522, -17.3263, -11.95, 0.28", "137.956, -19.4532, -10.7186, 0.55", "139.18, -21.2964, -9.73078, 0.28", "140.254, -22.7906, -8.95429, 0.55", "141.516, -24.5691, -8.1459, 0.55", "143.535, -27.364, -7.24185, 0.55", "144.022, -28.048, -7.04728, 0.55", "145.763, -30.6014, -6.35601, 0.28", "146.436, -31.6434, -6.10553, 0.55", "147.381, -32.9718, -5.78616, 0.28", "148.716, -34.8507, -5.42664, 0.55", "150.947, -37.773, -5.32137, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "125.264, -1.98011, -16.965, 0.55", "122.909, -1.88271, -17.0875, 0.55", "120.996, -1.8036, -17.187, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.913975, -29.2117, 3.91506, 0.83", "1.02977, -29.4393, 3.8888, 0.83", "2.37489, -31.4525, 3.78464, 0.83", "3.55175, -33.2134, 3.56803, 0.55", "4.49062, -34.6182, 3.39521, 0.55", "6.48625, -37.6041, 3.0279, 0.83", "8.9068, -41.2258, 2.58236, 0.55", "10.2279, -43.1218, 2.3886, 0.83", "12.5701, -46.1387, 2.22096, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.913975, -29.2117, 3.91506, 0.55", "-1.07823, -30.1231, 1.38336, 0.55", "-3.21662, -31.1014, -1.3341, 0.55", "-5.741, -32.2563, -4.54209, 0.55", "-8.80642, -33.6586, -8.43763, 0.55", "-10.546, -34.4544, -10.6482, 0.55", "-10.8954, -34.6143, -11.0923, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-17.6127, -108.725, 80.4805, 0.55", "-17.8089, -113.475, 83.852, 0.55", "-17.273, -118.589, 86.5453, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-17.6127, -108.725, 80.4805, 0.55", "-18.7004, -116.414, 84.9414, 0.55", "-20.1637, -123.88, 89.6992, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-45.0248, 36.7967, -13.9642, 0.28", "-46.2873, 38.8074, -12.3271, 0.28", "-46.7475, 39.5869, -11.6247, 0.55", "-48.0502, 41.8551, -9.55078, 0.28", "-48.7182, 42.9568, -8.62747, 0.55", "-50.5668, 45.9171, -6.22261, 0.28", "-52.4456, 48.926, -3.77841, 0.55", "-55.5396, 53.688, 0.354582, 0.28", "-56.1983, 54.7097, 1.23403, 0.55", "-57.6651, 57.0649, 3.06755, 0.28", "-58.237, 58.0344, 3.77752, 0.55", "-64.9859, 64.6929, 10.5327, 0.55", "-73.0186, 71.9439, 14.6294, 0.55", "-79.6193, 79.8279, 19.9075, 0.55", "-84.8109, 89.0065, 24.4064, 0.55", "-91.3091, 97.5778, 28.4564, 0.55", "-98.4999, 104.716, 34.1104, 0.55", "-104.626, 111.399, 41.424, 0.55", "-109.38, 117.354, 50.2943, 0.55", "-114.244, 123.849, 58.6819, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-45.0248, 36.7967, -13.9642, 0.55", "-47.8534, 35.852, -12.3187, 0.55", "-49.3204, 35.3106, -11.4602, 0.28", "-50.4121, 34.9078, -10.8213, 0.55", "-51.322, 34.572, -10.2888, 0.28", "-51.9593, 34.3368, -9.91584, 0.55", "-53.7167, 33.6884, -8.8874, 0.28", "-54.8936, 33.1338, -8.34911, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-124.811, -67.7882, -28.2466, 0.55", "-129.701, -77.8627, -27.2276, 0.55", "-134.629, -87.6763, -24.9053, 0.55", "-138.299, -98.2619, -24.2782, 0.55", "-143.405, -108.124, -22.5574, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-124.811, -67.7882, -28.2466, 0.55", "-127.315, -72.9049, -32.9584, 0.55", "-129.301, -77.3674, -38.5653, 0.55", "-132.072, -82.3395, -43.2934, 0.55", "-136.328, -86.0962, -48.1156, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-128.808, -69.9428, -34.5034, 0.55", "-132.686, -74.0248, -41.6717, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-128.808, -69.9428, -34.5034, 0.55", "-132.204, -78.7875, -34.827, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "91.2678, -27.8375, -98.6522, 0.28", "95.0331, -29.7778, -101.195, 0.28", "96.7822, -30.6791, -102.377, 0.55", "100.118, -32.3979, -104.629, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "91.2678, -27.8375, -98.6522, 0.55", "90.5192, -28.3476, -100.95, 0.55", "89.0219, -29.368, -105.545, 0.28", "88.5342, -29.7004, -107.042, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "83.2012, -31.7863, -93.7936, 0.28", "83.7706, -33.901, -97.1007, 0.28", "84.0525, -34.9481, -98.7383, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "83.2012, -31.7863, -93.7936, 0.55", "81.7283, -32.2215, -93.2637, 0.55", "77.6209, -33.435, -91.7862, 0.28", "76.6452, -33.7232, -91.4352, 0.55", "73.9761, -34.5118, -90.475, 0.28", "72.2556, -35.0201, -89.8561, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.5701, -46.1387, 2.22096, 0.83", "12.6172, -46.4214, 2.17381, 0.83", "13.2776, -50.124, 1.67359, 0.83", "13.4926, -52.9134, 1.44934, 0.83", "13.4612, -55.6252, 1.49633, 0.83", "13.2467, -59.2507, 1.8236, 0.83", "12.8574, -63.4379, 2.34358, 0.83", "12.4077, -68.1246, 3.18067, 0.83", "11.9418, -72.6871, 4.21091, 0.83", "11.0122, -78.2908, 5.28866, 0.83", "10.4604, -80.8615, 5.61239, 0.83", "10.0554, -82.7891, 5.7288, 0.83", "9.20825, -86.4855, 5.85941, 0.83", "8.55677, -89.7858, 5.79814, 0.83", "7.68005, -96.7778, 4.90633, 0.83", "7.32047, -100.577, 3.90268, 0.83", "7.02455, -104.065, 2.70791, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.5701, -46.1387, 2.22096, 0.55", "12.011, -47.355, 2.41735, 0.55", "11.6025, -48.2347, 2.63154, 0.55", "11.3663, -48.7945, 2.82568, 0.55", "11.0547, -49.6668, 3.21297, 0.55", "10.5037, -51.3888, 4.0908, 0.55", "10.0988, -52.6852, 4.91011, 0.55", "9.79371, -53.719, 5.68571, 0.55", "9.47051, -54.7595, 6.55318, 0.55", "9.20222, -55.6201, 7.32266, 0.28", "8.98935, -56.3181, 8.06487, 0.55", "8.60018, -57.5793, 9.61582, 0.55", "8.32926, -58.3479, 10.6659, 0.55", "8.17144, -58.7787, 11.2502, 0.55", "7.95213, -59.2881, 11.9143, 0.83", "7.26934, -60.8037, 13.7734, 0.28", "7.04156, -61.3059, 14.3735, 0.55", "6.65653, -62.2144, 15.4192, 0.28", "6.54163, -62.4934, 15.7641, 0.55", "6.31014, -63.1493, 16.5533, 0.28", "6.17654, -63.5238, 16.9712, 0.55", "5.6019, -64.7588, 17.9824, 0.55", "5.18347, -68.026, 21.9835, 0.55", "5.04667, -71.1223, 26.1512, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.8954, -34.6143, -11.0923, 0.55", "-13.3566, -35.5474, -14.1006, 0.55", "-14.0843, -35.7598, -14.9512, 0.55", "-15.9221, -36.2932, -17.0109, 0.55", "-19.9613, -37.3329, -21.3357, 0.28", "-20.5669, -37.473, -21.9389, 0.55", "-23.1097, -38.1288, -24.349, 0.55", "-26.6344, -39.0271, -27.2959, 0.55", "-27.9849, -39.3288, -28.3901, 0.28", "-29.1723, -39.5137, -29.2801, 0.28", "-31.2282, -39.7892, -30.5219, 0.55", "-33.7223, -40.0135, -32.132, 0.28", "-36.013, -40.0323, -33.6733, 0.55", "-37.7814, -39.9059, -34.8321, 0.55", "-38.9912, -39.7209, -35.6701, 0.55", "-42.529, -39.0224, -38.2426, 0.55", "-46.2495, -38.0408, -40.8808, 0.55", "-47.7868, -37.5526, -41.9325, 0.28", "-49.246, -37.1113, -42.9591, 0.55", "-52.2185, -36.4026, -45.0088, 0.28", "-53.2211, -36.192, -45.688, 0.83", "-55.1057, -35.777, -46.8268, 0.28", "-56.4852, -35.5759, -47.4671, 0.55", "-58.4952, -35.3501, -48.3559, 0.28", "-59.2976, -35.2504, -48.6837, 0.55", "-60.7929, -35.0919, -49.2118, 0.55", "-63.0487, -34.6409, -49.9265, 0.55", "-64.5243, -34.2611, -50.3123, 0.28", "-65.7135, -33.8174, -50.5313, 0.55", "-67.1064, -33.1342, -50.7972, 0.28", "-67.3343, -33.0047, -50.8488, 0.55", "-69.4147, -31.7648, -51.6904, 0.28", "-70.9139, -30.8361, -52.4641, 0.55", "-72.8688, -29.4856, -53.7639, 0.83", "-74.4657, -28.3374, -55.0216, 0.28", "-74.8757, -28.0437, -55.3889, 0.55", "-78.0105, -25.8372, -58.3898, 0.28", "-78.5557, -25.4602, -58.972, 0.55", "-80.1507, -24.2385, -60.7988, 0.28", "-80.5622, -23.9242, -61.2736, 0.55", "-81.6238, -23.1068, -62.4141, 0.28", "-82.3793, -22.5189, -63.1709, 0.55", "-84.0879, -21.206, -64.5886, 0.28", "-85.1107, -20.4983, -65.3881, 0.55", "-87.3126, -19.1241, -66.9701, 0.28", "-87.972, -18.7503, -67.4302, 0.55", "-89.0144, -18.2428, -68.1114, 0.28", "-89.9008, -17.8153, -68.6439, 0.55", "-91.7519, -16.9516, -69.6354, 0.28", "-92.3115, -16.7036, -69.9151, 0.55", "-96.4774, -14.783, -71.7961, 0.28", "-97.939, -14.0101, -72.3263, 0.55", "-100.546, -12.5109, -73.1021, 0.28", "-101.719, -11.7904, -73.4152, 0.55", "-104.418, -10.1576, -73.9743, 0.28", "-105.413, -9.60071, -74.1349, 0.55", "-109.042, -7.89649, -74.5151, 0.28", "-110.569, -7.36665, -74.6574, 0.55", "-112.772, -6.94868, -74.8313, 0.55", "-114.135, -6.77218, -74.905, 0.55", "-116.918, -6.48012, -74.8422, 0.28", "-119.656, -6.21903, -74.6087, 0.28", "-121.936, -5.994, -74.3482, 0.55", "-124.696, -5.49483, -73.728, 0.28", "-126.04, -5.08767, -73.2379, 0.55", "-129.173, -3.62425, -71.7491, 0.28", "-130.716, -2.55964, -70.5828, 0.55", "-131.666, -1.71155, -69.5908, 0.28", "-132.678, -0.758001, -68.1767, 0.55", "-133.901, 0.487162, -66.2182, 0.28", "-134.372, 0.927065, -65.4824, 0.55", "-136.93, 2.91543, -62.0404, 0.28", "-137.802, 3.54432, -60.8904, 0.55", "-139.868, 4.94156, -58.0902, 0.28", "-140.993, 5.68406, -56.5694, 0.55", "-141.92, 6.29249, -55.3215, 0.55", "-143.039, 7.00955, -53.8663, 0.28", "-143.656, 7.37627, -53.2272, 0.55", "-145.759, 8.68507, -51.2333, 0.28", "-146.837, 9.51308, -50.1647, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.8954, -34.6143, -11.0923, 0.55", "-10.5601, -34.7407, -12.1349, 0.55", "-10.1856, -34.756, -13.1726, 0.55", "-9.64887, -34.6895, -14.4393, 0.55", "-9.16343, -34.5552, -15.4501, 0.55", "-5.47356, -33.0084, -21.8057, 0.55", "-4.64326, -32.4949, -23.2487, 0.55", "-3.43998, -31.5801, -25.407, 0.55", "-2.59225, -30.8815, -26.94, 0.55", "-1.7367, -30.1161, -28.4074, 0.28", "-0.329889, -28.8144, -30.5814, 0.55", "1.90808, -26.7804, -33.6774, 0.28", "2.04954, -26.6588, -34.0058, 0.55", "2.42913, -26.2587, -36.4089, 0.28", "2.4093, -26.0782, -38.072, 0.55", "2.21535, -25.9991, -39.875, 0.55", "1.81636, -26.0116, -43.1148, 0.55", "1.04948, -26.0791, -49.4755, 0.55", "0.608945, -26.1679, -53.756, 0.55", "0.495918, -26.2118, -55.2371, 0.55", "-0.0142691, -26.431, -64.9826, 0.55", "-0.039972, -26.4561, -67.6245, 0.55", "0.0571403, -26.472, -69.1072, 0.55", "0.583043, -26.5941, -72.5446, 0.55", "2.31883, -27.2874, -80.7257, 0.55", "2.87907, -27.5602, -82.9107, 0.28", "3.29145, -27.7694, -84.1311, 0.55", "3.93552, -28.1512, -85.9295, 0.28", "4.25424, -28.3805, -86.6492, 0.55", "5.70294, -29.3887, -88.4945, 0.28", "7.21872, -30.7246, -89.0272, 0.55", "8.13895, -31.6694, -89.2804, 0.28", "9.00311, -32.7053, -89.3976, 0.55", "9.76817, -33.8266, -89.4254, 0.28", "10.092, -34.4016, -89.4496, 0.55", "10.8505, -35.9044, -89.4338, 0.28", "11.0282, -36.3509, -89.496, 0.55", "12.0047, -38.9077, -90.0, 0.28", "12.459, -40.0887, -90.3991, 0.55", "13.4647, -42.6085, -91.5679, 0.28", "13.8536, -43.5355, -92.1152, 0.55", "15.2171, -46.5783, -94.1343, 0.28", "15.5468, -47.3176, -94.6595, 0.55", "16.5036, -49.6557, -96.3973, 0.28", "16.7033, -50.2037, -96.7531, 0.55", "17.183, -51.6512, -97.669, 0.28", "17.4518, -52.4896, -98.2881, 0.55", "17.7316, -53.3122, -98.9718, 0.55", "18.2936, -54.9537, -100.323, 0.28", "18.7156, -55.9688, -101.306, 0.55", "20.1708, -58.5018, -104.488, 0.28", "20.7506, -59.3221, -105.774, 0.55", "21.1701, -59.8429, -106.651, 0.28", "21.6148, -60.3181, -107.53, 0.55", "23.0476, -61.6496, -110.208, 0.28", "24.1574, -62.6839, -112.191, 0.55", "26.1475, -64.6579, -115.361, 0.28", "26.7781, -65.2722, -116.355, 0.55", "28.0716, -66.4057, -118.116, 0.28", "28.5263, -66.779, -118.657, 0.55", "29.3424, -67.3806, -119.368, 0.28", "30.0949, -67.8904, -119.924, 0.55", "32.2392, -69.163, -121.197, 0.28", "34.7271, -70.5181, -122.615, 0.28", "36.0267, -71.1471, -123.239, 0.28", "37.313, -71.7374, -123.949, 0.55", "39.1994, -72.5099, -124.996, 0.28", "40.0466, -72.8409, -125.443, 0.83", "42.2342, -73.7168, -126.497, 0.28", "43.1621, -74.117, -127.008, 0.55", "47.1532, -76.0308, -129.454, 0.28", "49.0834, -77.0079, -130.847, 0.28", "50.4485, -77.7154, -131.961, 0.55", "51.2015, -78.1435, -132.711, 0.55", "53.1184, -79.3066, -134.884, 0.28", "54.86, -80.4923, -137.004, 0.55", "56.4385, -81.6353, -138.935, 0.28", "57.8207, -82.6929, -140.775, 0.55", "58.9696, -83.549, -142.288, 0.28", "59.9506, -84.1621, -143.462, 0.55", "62.3994, -85.4747, -146.161, 0.28", "63.6689, -86.1396, -147.468, 0.55", "65.612, -87.1471, -149.348, 0.28", "67.2276, -87.9183, -150.845, 0.55", "71.0284, -89.5295, -154.356, 0.28", "72.5355, -90.08, -155.904, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.273, -118.589, 86.5453, 0.55", "-17.0259, -127.879, 91.2881, 0.55", "-15.1266, -137.735, 93.9059, 0.55", "-14.2175, -147.336, 97.8033, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.273, -118.589, 86.5453, 0.55", "-16.5067, -128.015, 93.6513, 0.55", "-17.4954, -136.12, 102.338, 0.55", "-18.5639, -142.348, 112.588, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-20.1637, -123.88, 89.6992, 0.55", "-20.4645, -132.568, 94.6217, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-20.1637, -123.88, 89.6992, 0.55", "-23.0268, -134.546, 96.5768, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.02455, -104.065, 2.70791, 0.83", "8.07521, -107.939, 3.10246, 0.83", "9.13845, -111.206, 3.67388, 0.83", "10.1953, -114.453, 4.24188, 0.83", "11.199, -117.537, 4.78129, 0.83", "12.7457, -122.289, 5.61257, 0.83", "14.2813, -127.007, 6.43784, 0.83", "15.5948, -130.133, 7.38293, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.02455, -104.065, 2.70791, 0.55", "8.32224, -105.698, 2.84705, 0.55", "9.35657, -106.964, 2.71913, 0.55", "10.0911, -107.896, 2.51837, 0.55", "10.7975, -108.988, 2.10672, 0.83", "11.537, -110.224, 1.46292, 0.55", "12.2604, -111.432, 0.833215, 0.83", "12.9853, -112.74, 0.00618198, 0.55", "13.4162, -113.495, -0.55056, 0.83", "14.7311, -115.932, -2.57778, 0.55", "15.6109, -117.845, -4.32784, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.04667, -71.1223, 26.1512, 0.55", "1.3831, -79.8115, 32.7757, 0.55", "-3.95414, -87.551, 39.5889, 0.55", "-10.1756, -94.2892, 46.8204, 0.55", "-17.4875, -99.8032, 54.1809, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "5.04667, -71.1223, 26.1512, 0.55", "2.89052, -78.104, 33.0527, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.5948, -130.133, 7.38293, 0.55", "15.7295, -131.661, 7.75395, 0.55", "15.9562, -133.611, 8.28013, 0.55", "16.1711, -135.452, 8.76626, 0.55", "16.3085, -136.761, 9.0906, 0.55", "16.5269, -139.096, 9.63095, 0.55", "17.2491, -145.651, 10.9762, 0.55", "17.5526, -147.872, 11.3333, 0.55", "17.7745, -149.436, 11.5023, 0.55", "18.0461, -151.216, 11.5445, 0.55", "18.2337, -152.59, 11.4476, 0.55", "18.7755, -155.792, 11.082, 0.55", "19.0967, -158.227, 10.7997, 0.55", "19.3525, -159.825, 10.6651, 0.55", "19.9971, -163.977, 10.5411, 0.55", "20.4098, -166.773, 10.5887, 0.55", "20.9574, -170.384, 10.865, 0.55", "21.6309, -174.49, 11.5125, 0.55", "22.2086, -177.233, 12.1251, 0.55", "22.5908, -178.853, 12.5332, 0.55", "22.914, -180.348, 12.9046, 0.55", "23.3581, -182.237, 13.2812, 0.55", "24.3749, -186.783, 13.8628, 0.55", "24.8321, -188.537, 14.0193, 0.55", "25.2919, -190.493, 14.179, 0.55", "25.9568, -193.429, 14.4026, 0.55", "26.3563, -195.691, 14.5964, 0.55", "26.6045, -197.845, 14.75, 0.55", "26.7446, -199.901, 14.8961, 0.55", "26.8448, -201.91, 15.069, 0.55", "26.9254, -203.339, 15.1772, 0.55", "27.0737, -205.674, 15.2691, 0.55", "27.2132, -208.471, 15.1531, 0.55", "27.3198, -209.825, 14.9887, 0.55", "27.4285, -211.011, 14.7484, 0.55", "27.7454, -213.239, 14.1539, 0.55", "27.9316, -214.65, 13.7346, 0.55", "28.181, -216.391, 13.2888, 0.55", "28.3055, -217.62, 13.0548, 0.55", "28.5657, -220.82, 12.5796, 0.55", "28.6948, -223.224, 12.4067, 0.55", "28.8236, -226.959, 12.4629, 0.55", "28.958, -229.375, 12.7408, 0.55", "29.077, -231.915, 13.1196, 0.28", "29.0974, -232.938, 13.3159, 0.28", "29.1306, -235.43, 14.0298, 0.28", "29.1355, -237.739, 14.881, 0.28", "29.4303, -240.791, 16.3397, 0.28", "31.0635, -247.563, 17.7969, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "15.5948, -130.133, 7.38293, 0.55", "16.7724, -130.579, 8.14545, 0.55", "19.119, -131.723, 9.88624, 0.55", "21.108, -132.851, 11.4747, 0.28", "23.2127, -134.135, 13.2454, 0.55", "24.3986, -134.96, 14.5004, 0.28", "26.3522, -136.454, 16.8978, 0.55", "27.033, -137.25, 18.1809, 0.28", "27.2452, -137.541, 18.7121, 0.28", "27.6067, -137.959, 19.6414, 0.55", "29.1319, -139.336, 23.0745, 0.28", "29.8077, -139.874, 24.4939, 0.55", "32.0845, -141.423, 28.4096, 0.28", "33.3999, -142.184, 30.4096, 0.28", "35.1198, -143.155, 32.7691, 0.55", "37.8526, -144.651, 35.9867, 0.28", "38.2502, -144.847, 36.3735, 0.55", "40.2908, -145.799, 38.1267, 0.28", "40.4877, -145.887, 38.2633, 0.55", "42.2022, -146.924, 39.5157, 0.28", "42.9925, -147.491, 40.162, 0.55", "49.4523, -151.694, 45.5565, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.4875, -99.8032, 54.1809, 0.55", "-21.6701, -103.785, 62.2675, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-17.4875, -99.8032, 54.1809, 0.55", "-21.0134, -105.105, 56.8429, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_BP_46b07f0520_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.73712, 7.54352, 2.76708, 0.83 ) }
    dend_43 { pt3dadd( -5.09123, 9.27692, 3.12212, 1.11 ) }
    dend_43 { pt3dadd( -6.47923, 10.2983, 3.3068, 0.83 ) }
    dend_43 { pt3dadd( -7.82772, 11.2819, 3.47227, 0.83 ) }
    dend_43 { pt3dadd( -8.62613, 11.8429, 3.56294, 1.11 ) }
    dend_43 { pt3dadd( -11.1264, 13.5956, 3.85356, 1.11 ) }
    dend_43 { pt3dadd( -15.5984, 16.5964, 4.36727, 0.83 ) }
    dend_43 { pt3dadd( -17.2095, 17.6362, 4.53691, 0.83 ) }
    dend_43 { pt3dadd( -18.4853, 18.4352, 4.64228, 0.83 ) }
    dend_43 { pt3dadd( -19.7294, 19.2271, 4.73349, 0.83 ) }
    dend_43 { pt3dadd( -20.7421, 19.8797, 4.7827, 0.55 ) }
    dend_43 { pt3dadd( -21.5033, 20.3216, 4.83265, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.79265, 6.0166, -6.28047, 0.55 ) }
    dend_28 { pt3dadd( 7.74142, 6.62258, -6.93899, 0.55 ) }
    dend_28 { pt3dadd( 9.45249, 6.77556, -7.81034, 0.83 ) }
    dend_28 { pt3dadd( 12.1605, 6.93835, -9.42894, 0.55 ) }
    dend_28 { pt3dadd( 13.4678, 7.01693, -10.2103, 1.38 ) }
    dend_28 { pt3dadd( 16.682, 7.21015, -12.1314, 0.55 ) }
    dend_28 { pt3dadd( 18.051, 7.14472, -13.048, 0.83 ) }
    dend_28 { pt3dadd( 25.1324, 5.94478, -18.1983, 0.55 ) }
    dend_28 { pt3dadd( 25.8175, 5.78342, -18.7649, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.680582, -9.65605, 3.12053, 1.11 ) }
    dend_1 { pt3dadd( -0.722185, -13.1432, 4.43647, 1.11 ) }
    dend_1 { pt3dadd( -0.739128, -14.5634, 4.9724, 0.83 ) }
    dend_1 { pt3dadd( -0.761638, -16.4502, 5.68442, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.893438, 9.43439, -1.37448, 1.11 ) }
    dend_0 { pt3dadd( 0.992648, 11.3782, -1.35467, 1.11 ) }
    dend_0 { pt3dadd( 1.1471, 14.5494, -1.2003, 1.38 ) }
    dend_0 { pt3dadd( 1.15896, 14.726, -1.18841, 1.38 ) }
    dend_0 { pt3dadd( 1.44463, 16.9099, -1.01957, 0.83 ) }
    dend_0 { pt3dadd( 1.84695, 19.2181, -0.712148, 0.83 ) }
    dend_0 { pt3dadd( 2.53981, 21.8217, -0.0353919, 0.83 ) }
    dend_0 { pt3dadd( 2.93311, 22.8079, 0.348031, 0.83 ) }
    dend_0 { pt3dadd( 3.32011, 23.5211, 0.700582, 1.11 ) }
    dend_0 { pt3dadd( 4.44894, 25.2569, 1.6082, 0.55 ) }
    dend_0 { pt3dadd( 5.76169, 27.0674, 2.69254, 0.83 ) }
    dend_0 { pt3dadd( 7.47654, 28.9266, 3.91881, 0.55 ) }
    dend_0 { pt3dadd( 8.3494, 29.6976, 4.47257, 0.83 ) }
    dend_0 { pt3dadd( 9.57107, 30.7412, 5.33917, 0.55 ) }
    dend_0 { pt3dadd( 11.0864, 32.0686, 6.51547, 0.55 ) }
    dend_0 { pt3dadd( 13.2063, 34.0673, 8.31706, 0.55 ) }
    dend_0 { pt3dadd( 15.543, 36.3527, 10.3066, 0.55 ) }
    dend_0 { pt3dadd( 17.021, 37.8356, 11.7987, 0.55 ) }
    dend_0 { pt3dadd( 18.8375, 39.7102, 13.911, 0.55 ) }
    dend_0 { pt3dadd( 19.2156, 40.0859, 14.3909, 0.83 ) }
    dend_0 { pt3dadd( 20.2156, 41.0784, 15.7461, 0.55 ) }
    dend_0 { pt3dadd( 21.0557, 41.8517, 16.8087, 0.83 ) }
    dend_0 { pt3dadd( 22.9926, 43.9681, 19.3305, 0.55 ) }
    dend_0 { pt3dadd( 23.7184, 44.7414, 20.0639, 0.83 ) }
    dend_0 { pt3dadd( 24.3938, 45.3106, 20.5572, 0.55 ) }
    dend_0 { pt3dadd( 25.0616, 45.8001, 20.9323, 0.83 ) }
    dend_0 { pt3dadd( 26.539, 46.7086, 21.606, 0.83 ) }
    dend_0 { pt3dadd( 28.4899, 47.9465, 22.3221, 0.83 ) }
    dend_0 { pt3dadd( 29.6847, 48.766, 22.6313, 0.55 ) }
    dend_0 { pt3dadd( 30.5962, 49.4761, 22.8725, 0.55 ) }
    dend_0 { pt3dadd( 32.985, 51.3106, 23.4686, 0.83 ) }
    dend_0 { pt3dadd( 34.5265, 52.4872, 23.7908, 0.55 ) }
    dend_0 { pt3dadd( 36.8645, 54.2104, 24.1841, 0.55 ) }
    dend_0 { pt3dadd( 39.0042, 55.6541, 24.4576, 0.55 ) }
    dend_0 { pt3dadd( 40.9166, 56.8765, 24.6502, 0.55 ) }
    dend_0 { pt3dadd( 43.3301, 58.3077, 24.7826, 0.55 ) }
    dend_0 { pt3dadd( 44.8032, 59.0071, 24.8147, 0.55 ) }
    dend_0 { pt3dadd( 45.8049, 59.3993, 24.7154, 0.55 ) }
    dend_0 { pt3dadd( 47.1316, 59.6889, 24.4697, 0.55 ) }
    dend_0 { pt3dadd( 49.1059, 59.814, 23.9386, 0.55 ) }
    dend_0 { pt3dadd( 50.335, 59.7426, 23.559, 0.55 ) }
    dend_0 { pt3dadd( 52.1339, 59.5911, 23.1314, 0.55 ) }
    dend_0 { pt3dadd( 55.569, 59.406, 22.6261, 0.55 ) }
    dend_0 { pt3dadd( 58.27, 59.3791, 22.423, 0.55 ) }
    dend_0 { pt3dadd( 61.1376, 59.4798, 22.3798, 0.55 ) }
    dend_0 { pt3dadd( 62.9803, 59.6038, 22.4977, 0.55 ) }
    dend_0 { pt3dadd( 67.7778, 60.3362, 23.1208, 0.55 ) }
    dend_0 { pt3dadd( 70.6228, 60.9759, 23.7035, 0.55 ) }
    dend_0 { pt3dadd( 72.7618, 61.5871, 24.34, 0.55 ) }
    dend_0 { pt3dadd( 74.0638, 62.162, 24.7777, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 75.5738, 63.0203, 25.2784, 0.55 ) }
    dend_0 { pt3dadd( 78.1251, 64.7164, 25.9004, 0.55 ) }
    dend_0 { pt3dadd( 78.7083, 65.1252, 25.9626, 0.55 ) }
    dend_0 { pt3dadd( 80.3785, 66.2181, 26.0306, 0.55 ) }
    dend_0 { pt3dadd( 81.9139, 67.3839, 26.0879, 0.83 ) }
    dend_0 { pt3dadd( 82.7515, 68.0308, 26.1059, 0.55 ) }
    dend_0 { pt3dadd( 84.0054, 69.1423, 26.0837, 0.83 ) }
    dend_0 { pt3dadd( 90.6521, 75.0737, 27.7073, 0.83 ) }
    dend_0 { pt3dadd( 96.4285, 81.8916, 28.6705, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -21.5033, 20.3216, 4.83265, 0.55 ) }
    dend_55 { pt3dadd( -22.9971, 21.0376, 4.08335, 0.55 ) }
    dend_55 { pt3dadd( -24.6215, 21.8161, 3.26856, 0.55 ) }
    dend_55 { pt3dadd( -26.5817, 22.7557, 2.28528, 0.55 ) }
    dend_55 { pt3dadd( -28.2004, 23.5315, 1.47336, 0.83 ) }
    dend_55 { pt3dadd( -29.5568, 24.1816, 0.792972, 0.55 ) }
    dend_55 { pt3dadd( -32.0745, 25.3884, -0.469926, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -21.5033, 20.3216, 4.83265, 0.55 ) }
    dend_44 { pt3dadd( -23.5098, 20.9294, 4.23505, 0.55 ) }
    dend_44 { pt3dadd( -25.6989, 21.4508, 3.79216, 0.55 ) }
    dend_44 { pt3dadd( -28.1958, 22.0214, 3.3477, 0.55 ) }
    dend_44 { pt3dadd( -31.8923, 22.7194, 3.01417, 0.55 ) }
    dend_44 { pt3dadd( -35.0388, 23.1611, 2.9192, 0.55 ) }
    dend_44 { pt3dadd( -38.3725, 23.5408, 2.93751, 0.55 ) }
    dend_44 { pt3dadd( -41.6785, 23.6203, 3.21906, 0.55 ) }
    dend_44 { pt3dadd( -44.5909, 23.3751, 3.63938, 0.55 ) }
    dend_44 { pt3dadd( -48.3095, 22.754, 4.44291, 0.55 ) }
    dend_44 { pt3dadd( -49.9764, 22.3292, 4.9576, 0.55 ) }
    dend_44 { pt3dadd( -51.7934, 21.8362, 5.57393, 0.55 ) }
    dend_44 { pt3dadd( -54.9727, 20.8057, 6.48409, 0.55 ) }
    dend_44 { pt3dadd( -56.6096, 20.3249, 6.74737, 0.55 ) }
    dend_44 { pt3dadd( -58.3229, 19.7798, 7.00168, 0.55 ) }
    dend_44 { pt3dadd( -60.3159, 19.204, 7.13218, 0.55 ) }
    dend_44 { pt3dadd( -62.468, 18.6319, 7.23288, 0.55 ) }
    dend_44 { pt3dadd( -65.525, 17.8258, 7.31526, 0.55 ) }
    dend_44 { pt3dadd( -69.5222, 17.0793, 7.16699, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 25.8175, 5.78342, -18.7649, 0.55 ) }
    dend_34 { pt3dadd( 30.9952, 6.73465, -19.8649, 0.55 ) }
    dend_34 { pt3dadd( 33.9549, 7.18066, -20.9346, 0.55 ) }
    dend_34 { pt3dadd( 36.8636, 7.50425, -22.0506, 0.55 ) }
    dend_34 { pt3dadd( 38.844, 7.65066, -22.8235, 0.55 ) }
    dend_34 { pt3dadd( 41.7331, 7.79807, -23.9405, 0.55 ) }
    dend_34 { pt3dadd( 47.7117, 8.02178, -26.4607, 0.55 ) }
    dend_34 { pt3dadd( 54.4801, 8.30129, -29.7785, 0.55 ) }
    dend_34 { pt3dadd( 57.7386, 8.27564, -31.6444, 0.55 ) }
    dend_34 { pt3dadd( 59.4774, 8.23779, -32.7657, 0.55 ) }
    dend_34 { pt3dadd( 61.3829, 8.2167, -34.0723, 0.55 ) }
    dend_34 { pt3dadd( 64.775, 8.08585, -36.4041, 0.55 ) }
    dend_34 { pt3dadd( 65.9994, 7.97474, -37.303, 0.55 ) }
    dend_34 { pt3dadd( 71.1852, 7.69008, -41.5001, 0.55 ) }
    dend_34 { pt3dadd( 74.8549, 7.58641, -44.7408, 0.55 ) }
    dend_34 { pt3dadd( 76.97, 7.57532, -46.6601, 0.55 ) }
    dend_34 { pt3dadd( 79.0779, 7.54598, -48.5755, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 25.8175, 5.78342, -18.7649, 0.83 ) }
    dend_29 { pt3dadd( 27.7839, 7.02824, -18.8238, 0.83 ) }
    dend_29 { pt3dadd( 28.9086, 7.73692, -18.9104, 0.55 ) }
    dend_29 { pt3dadd( 30.5647, 8.81062, -19.1842, 0.83 ) }
    dend_29 { pt3dadd( 31.6775, 9.55915, -19.404, 0.55 ) }
    dend_29 { pt3dadd( 33.2104, 10.6324, -19.6856, 0.83 ) }
    dend_29 { pt3dadd( 35.0515, 11.9608, -19.9553, 0.55 ) }
    dend_29 { pt3dadd( 35.9798, 12.5635, -20.0488, 0.55 ) }
    dend_29 { pt3dadd( 38.1254, 13.6722, -20.0972, 0.83 ) }
    dend_29 { pt3dadd( 40.0787, 14.4595, -19.8721, 0.55 ) }
    dend_29 { pt3dadd( 41.1695, 14.8924, -19.6388, 0.83 ) }
    dend_29 { pt3dadd( 42.8023, 15.5832, -19.1136, 0.55 ) }
    dend_29 { pt3dadd( 45.1416, 16.6273, -18.0526, 0.55 ) }
    dend_29 { pt3dadd( 48.3942, 17.9198, -16.4006, 0.55 ) }
    dend_29 { pt3dadd( 51.4966, 19.0514, -14.6001, 0.55 ) }
    dend_29 { pt3dadd( 53.9549, 19.924, -13.1271, 0.55 ) }
    dend_29 { pt3dadd( 58.0065, 21.3817, -10.6777, 0.55 ) }
    dend_29 { pt3dadd( 60.9665, 22.5338, -8.82173, 0.55 ) }
    dend_29 { pt3dadd( 62.7465, 23.3783, -7.63925, 0.55 ) }
    dend_29 { pt3dadd( 66.0104, 25.2643, -5.44317, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.761638, -16.4502, 5.68442, 0.83 ) }
    dend_11 { pt3dadd( -0.970955, -19.1794, 5.565, 0.83 ) }
    dend_11 { pt3dadd( -1.17489, -21.8384, 5.44865, 0.83 ) }
    dend_11 { pt3dadd( -1.40258, -24.8072, 5.31874, 0.83 ) }
    dend_11 { pt3dadd( -1.52148, -26.3575, 5.2509, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.761638, -16.4502, 5.68442, 0.55 ) }
    dend_2 { pt3dadd( -0.315515, -17.8095, 6.79179, 0.55 ) }
    dend_2 { pt3dadd( 0.040873, -19.4845, 8.19773, 0.55 ) }
    dend_2 { pt3dadd( 0.136839, -21.701, 10.0783, 0.55 ) }
    dend_2 { pt3dadd( 0.106686, -22.5664, 10.824, 0.83 ) }
    dend_2 { pt3dadd( -0.2242, -24.787, 12.9592, 0.55 ) }
    dend_2 { pt3dadd( -0.496853, -25.9396, 14.0695, 0.55 ) }
    dend_2 { pt3dadd( -1.09181, -28.1838, 16.3199, 0.83 ) }
    dend_2 { pt3dadd( -1.65057, -29.856, 18.0857, 0.55 ) }
    dend_2 { pt3dadd( -2.23494, -31.2431, 19.5004, 0.55 ) }
    dend_2 { pt3dadd( -3.39495, -33.8738, 22.1212, 0.55 ) }
    dend_2 { pt3dadd( -4.31336, -35.9706, 24.1851, 0.55 ) }
    dend_2 { pt3dadd( -5.01833, -37.6493, 25.8693, 0.55 ) }
    dend_2 { pt3dadd( -5.65671, -39.4256, 27.6152, 0.28 ) }
    dend_2 { pt3dadd( -5.8538, -40.1618, 28.323, 0.55 ) }
    dend_2 { pt3dadd( -6.16866, -41.5194, 29.5558, 0.28 ) }
    dend_2 { pt3dadd( -6.30712, -43.6216, 31.184, 0.55 ) }
    dend_2 { pt3dadd( -8.59375, -50.7205, 36.7247, 0.55 ) }
    dend_2 { pt3dadd( -11.1916, -57.2969, 42.8157, 0.55 ) }
    dend_2 { pt3dadd( -13.6161, -62.6924, 50.1356, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -32.0745, 25.3884, -0.469926, 0.55 ) }
    dend_61 { pt3dadd( -33.5737, 25.9801, 0.90634, 0.55 ) }
    dend_61 { pt3dadd( -34.1722, 26.2254, 1.58585, 0.83 ) }
    dend_61 { pt3dadd( -34.8322, 26.515, 2.50474, 0.55 ) }
    dend_61 { pt3dadd( -35.3178, 26.7591, 3.26495, 0.83 ) }
    dend_61 { pt3dadd( -36.5995, 27.4512, 5.22074, 0.55 ) }
    dend_61 { pt3dadd( -37.084, 27.7256, 5.96234, 0.28 ) }
    dend_61 { pt3dadd( -37.8626, 28.2297, 7.28241, 0.55 ) }
    dend_61 { pt3dadd( -38.9103, 28.9116, 9.04405, 0.55 ) }
    dend_61 { pt3dadd( -39.7224, 29.4104, 10.3328, 0.55 ) }
    dend_61 { pt3dadd( -40.8227, 30.0582, 12.0094, 0.28 ) }
    dend_61 { pt3dadd( -41.124, 30.2116, 12.3995, 0.55 ) }
    dend_61 { pt3dadd( -41.7581, 30.5267, 13.1749, 0.28 ) }
    dend_61 { pt3dadd( -42.2063, 30.7347, 13.6478, 0.55 ) }
    dend_61 { pt3dadd( -43.1521, 31.1154, 14.5244, 0.28 ) }
    dend_61 { pt3dadd( -43.7157, 31.2919, 15.0195, 0.55 ) }
    dend_61 { pt3dadd( -44.7014, 31.5269, 15.9317, 0.28 ) }
    dend_61 { pt3dadd( -45.3718, 31.6697, 16.5203, 0.55 ) }
    dend_61 { pt3dadd( -48.7497, 32.9759, 22.2297, 0.55 ) }
    dend_61 { pt3dadd( -51.5773, 33.8106, 28.3038, 0.55 ) }
    dend_61 { pt3dadd( -54.2053, 34.0618, 34.5018, 0.55 ) }
    dend_61 { pt3dadd( -56.8594, 33.5062, 40.6405, 0.55 ) }
    dend_61 { pt3dadd( -58.6052, 33.4209, 47.1298, 0.55 ) }
    dend_61 { pt3dadd( -60.9186, 33.482, 53.4484, 0.55 ) }
    dend_61 { pt3dadd( -63.3003, 34.6114, 59.6683, 0.55 ) }
    dend_61 { pt3dadd( -65.6602, 35.2278, 65.9565, 0.55 ) }
    dend_61 { pt3dadd( -67.8694, 36.3079, 72.2467, 0.55 ) }
    dend_61 { pt3dadd( -69.7194, 37.3571, 78.655, 0.55 ) }
    dend_61 { pt3dadd( -70.8395, 37.7674, 85.2816, 0.55 ) }
    dend_61 { pt3dadd( -72.0175, 38.7824, 91.849, 0.55 ) }
    dend_61 { pt3dadd( -73.3054, 39.1242, 98.4477, 0.55 ) }
    dend_61 { pt3dadd( -73.7516, 39.2742, 105.153, 0.55 ) }
    dend_61 { pt3dadd( -73.018, 39.9483, 111.815, 0.55 ) }
    dend_61 { pt3dadd( -72.3039, 39.3651, 118.442, 0.55 ) }
    dend_61 { pt3dadd( -70.6461, 38.6489, 124.878, 0.55 ) }
    dend_61 { pt3dadd( -69.3155, 38.235, 131.429, 0.55 ) }
    dend_61 { pt3dadd( -68.6755, 38.3138, 138.115, 0.55 ) }
    dend_61 { pt3dadd( -69.4717, 39.3363, 144.737, 0.55 ) }
    dend_61 { pt3dadd( -69.6604, 39.6785, 151.454, 0.55 ) }
    dend_61 { pt3dadd( -68.5556, 41.1532, 157.952, 0.55 ) }
    dend_61 { pt3dadd( -68.5579, 43.0545, 164.441, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -32.0745, 25.3884, -0.469926, 0.55 ) }
    dend_56 { pt3dadd( -33.7356, 25.6943, -2.12493, 0.55 ) }
    dend_56 { pt3dadd( -35.0804, 26.0353, -4.02301, 0.55 ) }
    dend_56 { pt3dadd( -36.3666, 26.5208, -6.06695, 0.55 ) }
    dend_56 { pt3dadd( -37.1719, 26.8248, -7.34685, 0.55 ) }
    dend_56 { pt3dadd( -38.641, 27.3794, -9.68152, 0.83 ) }
    dend_56 { pt3dadd( -39.7158, 27.7852, -11.3896, 0.55 ) }
    dend_56 { pt3dadd( -41.0067, 28.3104, -13.9184, 0.83 ) }
    dend_56 { pt3dadd( -41.5375, 28.7201, -15.3786, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -69.5222, 17.0793, 7.16699, 0.28 ) }
    dend_48 { pt3dadd( -70.3451, 15.4948, 6.94218, 0.28 ) }
    dend_48 { pt3dadd( -70.7355, 14.8058, 6.78266, 0.28 ) }
    dend_48 { pt3dadd( -71.2361, 13.8291, 6.5269, 0.55 ) }
    dend_48 { pt3dadd( -71.6469, 12.9722, 6.3129, 0.28 ) }
    dend_48 { pt3dadd( -72.2527, 11.6692, 6.0058, 0.55 ) }
    dend_48 { pt3dadd( -73.9348, 7.84989, 5.17778, 0.28 ) }
    dend_48 { pt3dadd( -74.4682, 6.5, 4.78587, 0.55 ) }
    dend_48 { pt3dadd( -75.2676, 4.41384, 4.11444, 0.28 ) }
    dend_48 { pt3dadd( -75.7182, 3.1605, 3.65982, 0.55 ) }
    dend_48 { pt3dadd( -76.0276, 2.29444, 3.32595, 0.28 ) }
    dend_48 { pt3dadd( -76.3805, 1.30142, 2.95106, 0.55 ) }
    dend_48 { pt3dadd( -77.4351, -1.99959, 1.79505, 0.28 ) }
    dend_48 { pt3dadd( -77.7657, -3.0025, 1.40885, 0.55 ) }
    dend_48 { pt3dadd( -78.3428, -4.55616, 0.652624, 0.28 ) }
    dend_48 { pt3dadd( -78.8306, -5.56428, 0.0693965, 0.28 ) }
    dend_48 { pt3dadd( -79.2853, -6.24421, -0.360193, 0.55 ) }
    dend_48 { pt3dadd( -80.9144, -8.15683, -1.55836, 0.28 ) }
    dend_48 { pt3dadd( -81.6828, -8.93245, -2.04125, 0.55 ) }
    dend_48 { pt3dadd( -83.5624, -10.7145, -3.26277, 0.28 ) }
    dend_48 { pt3dadd( -85.457, -12.3025, -4.40967, 0.28 ) }
    dend_48 { pt3dadd( -87.5287, -13.8335, -5.61126, 0.28 ) }
    dend_48 { pt3dadd( -88.4885, -14.416, -6.09207, 0.55 ) }
    dend_48 { pt3dadd( -92.9528, -20.5125, -8.90813, 0.55 ) }
    dend_48 { pt3dadd( -98.1223, -26.548, -10.2739, 0.55 ) }
    dend_48 { pt3dadd( -103.061, -32.3994, -12.8604, 0.55 ) }
    dend_48 { pt3dadd( -108.074, -37.8386, -16.1969, 0.55 ) }
    dend_48 { pt3dadd( -113.096, -42.7869, -20.2853, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -69.5222, 17.0793, 7.16699, 0.55 ) }
    dend_45 { pt3dadd( -70.2495, 17.066, 7.08211, 0.55 ) }
    dend_45 { pt3dadd( -72.3637, 16.955, 7.08976, 0.55 ) }
    dend_45 { pt3dadd( -73.1685, 16.8836, 7.12524, 0.55 ) }
    dend_45 { pt3dadd( -75.0691, 16.6582, 7.21923, 0.55 ) }
    dend_45 { pt3dadd( -77.9595, 16.3756, 7.24664, 0.55 ) }
    dend_45 { pt3dadd( -79.4542, 16.2764, 7.24943, 0.28 ) }
    dend_45 { pt3dadd( -81.7712, 16.0902, 7.19919, 0.55 ) }
    dend_45 { pt3dadd( -83.4787, 15.9378, 7.09652, 0.55 ) }
    dend_45 { pt3dadd( -84.2002, 15.8688, 7.05326, 0.28 ) }
    dend_45 { pt3dadd( -88.5268, 15.4544, 6.78804, 0.55 ) }
    dend_45 { pt3dadd( -90.5229, 15.2124, 6.52637, 0.28 ) }
    dend_45 { pt3dadd( -93.1786, 14.9212, 6.02534, 0.28 ) }
    dend_45 { pt3dadd( -95.4354, 14.7391, 5.47763, 0.55 ) }
    dend_45 { pt3dadd( -104.666, 14.6667, 5.51688, 0.55 ) }
    dend_45 { pt3dadd( -113.831, 14.0823, 6.44798, 0.55 ) }
    dend_45 { pt3dadd( -122.745, 12.3461, 8.05241, 0.55 ) }
    dend_45 { pt3dadd( -131.545, 11.7956, 10.7851, 0.55 ) }
    dend_45 { pt3dadd( -139.592, 10.4227, 15.0963, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -146.606, 9.04666, 20.9351, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 79.0779, 7.54598, -48.5755, 0.55 ) }
    dend_42 { pt3dadd( 81.9022, 8.36613, -50.954, 0.55 ) }
    dend_42 { pt3dadd( 82.7916, 8.58957, -51.7646, 0.55 ) }
    dend_42 { pt3dadd( 83.9035, 8.833, -52.7671, 0.55 ) }
    dend_42 { pt3dadd( 85.9168, 9.26205, -54.7084, 0.55 ) }
    dend_42 { pt3dadd( 88.0128, 9.62698, -56.7916, 0.55 ) }
    dend_42 { pt3dadd( 89.0349, 9.72365, -57.7869, 0.83 ) }
    dend_42 { pt3dadd( 89.8718, 9.7484, -58.6743, 0.55 ) }
    dend_42 { pt3dadd( 90.4935, 9.71786, -59.4062, 0.83 ) }
    dend_42 { pt3dadd( 91.9792, 9.43795, -61.2881, 0.55 ) }
    dend_42 { pt3dadd( 93.1972, 9.09182, -62.8516, 0.55 ) }
    dend_42 { pt3dadd( 94.6001, 8.68122, -64.5766, 0.55 ) }
    dend_42 { pt3dadd( 96.163, 8.27102, -66.5292, 0.55 ) }
    dend_42 { pt3dadd( 97.2092, 7.97169, -67.8678, 0.55 ) }
    dend_42 { pt3dadd( 98.3883, 7.63177, -69.4182, 0.55 ) }
    dend_42 { pt3dadd( 99.4064, 7.37778, -70.8327, 0.55 ) }
    dend_42 { pt3dadd( 100.047, 7.28142, -71.8113, 0.55 ) }
    dend_42 { pt3dadd( 100.834, 7.14334, -73.7641, 0.55 ) }
    dend_42 { pt3dadd( 101.256, 7.0244, -74.9846, 0.55 ) }
    dend_42 { pt3dadd( 101.596, 6.80974, -76.6019, 0.55 ) }
    dend_42 { pt3dadd( 102.038, 6.37503, -79.3345, 0.55 ) }
    dend_42 { pt3dadd( 102.125, 6.25577, -79.9511, 0.28 ) }
    dend_42 { pt3dadd( 103.266, 4.72383, -87.4522, 0.28 ) }
    dend_42 { pt3dadd( 103.666, 4.28563, -89.6556, 0.83 ) }
    dend_42 { pt3dadd( 105.272, 2.59278, -97.4803, 0.83 ) }
    dend_42 { pt3dadd( 106.107, 1.66649, -101.122, 0.83 ) }
    dend_42 { pt3dadd( 106.518, 1.23211, -102.601, 0.55 ) }
    dend_42 { pt3dadd( 107.001, 0.799101, -104.045, 0.55 ) }
    dend_42 { pt3dadd( 108.395, -0.0843879, -106.736, 0.55 ) }
    dend_42 { pt3dadd( 109.911, -0.89631, -109.109, 0.28 ) }
    dend_42 { pt3dadd( 110.391, -1.06659, -109.262, 0.55 ) }
    dend_42 { pt3dadd( 111.463, -1.38221, -109.207, 0.28 ) }
    dend_42 { pt3dadd( 112.131, -1.5353, -109.074, 0.55 ) }
    dend_42 { pt3dadd( 112.829, -1.70586, -108.876, 0.28 ) }
    dend_42 { pt3dadd( 113.67, -1.87183, -108.597, 0.55 ) }
    dend_42 { pt3dadd( 114.927, -2.05213, -108.313, 0.28 ) }
    dend_42 { pt3dadd( 115.934, -2.22533, -108.119, 0.55 ) }
    dend_42 { pt3dadd( 117.049, -2.34321, -107.991, 0.28 ) }
    dend_42 { pt3dadd( 118.561, -2.49392, -107.952, 0.55 ) }
    dend_42 { pt3dadd( 120.256, -2.62181, -108.009, 0.55 ) }
    dend_42 { pt3dadd( 121.744, -2.7139, -108.158, 0.28 ) }
    dend_42 { pt3dadd( 123.801, -2.8193, -108.479, 0.55 ) }
    dend_42 { pt3dadd( 127.351, -2.894, -109.412, 0.55 ) }
    dend_42 { pt3dadd( 128.918, -2.8422, -110.012, 0.55 ) }
    dend_42 { pt3dadd( 129.59, -2.79041, -110.343, 0.83 ) }
    dend_42 { pt3dadd( 130.868, -2.67886, -111.091, 0.55 ) }
    dend_42 { pt3dadd( 131.755, -2.56465, -111.665, 0.83 ) }
    dend_42 { pt3dadd( 134.143, -2.19554, -113.236, 0.55 ) }
    dend_42 { pt3dadd( 135.595, -2.06615, -114.238, 0.28 ) }
    dend_42 { pt3dadd( 136.207, -2.05108, -114.591, 0.55 ) }
    dend_42 { pt3dadd( 137.882, -2.16699, -115.373, 0.28 ) }
    dend_42 { pt3dadd( 138.467, -2.26134, -115.609, 0.55 ) }
    dend_42 { pt3dadd( 139.675, -2.53584, -115.909, 0.28 ) }
    dend_42 { pt3dadd( 140.906, -2.93855, -116.001, 0.55 ) }
    dend_42 { pt3dadd( 143.399, -3.89646, -115.747, 0.28 ) }
    dend_42 { pt3dadd( 144.55, -4.39135, -115.507, 0.55 ) }
    dend_42 { pt3dadd( 146.26, -5.22535, -115.061, 0.28 ) }
    dend_42 { pt3dadd( 148.422, -6.27346, -114.419, 0.55 ) }
    dend_42 { pt3dadd( 149.988, -7.0116, -113.928, 0.55 ) }
    dend_42 { pt3dadd( 152.705, -8.20974, -113.029, 0.28 ) }
    dend_42 { pt3dadd( 153.82, -8.64868, -112.752, 0.55 ) }
    dend_42 { pt3dadd( 155.741, -9.29259, -112.483, 0.28 ) }
    dend_42 { pt3dadd( 157.657, -9.78859, -112.346, 0.55 ) }
    dend_42 { pt3dadd( 158.709, -9.94122, -112.414, 0.28 ) }
    dend_42 { pt3dadd( 159.664, -9.95362, -112.547, 0.55 ) }
    dend_42 { pt3dadd( 162.357, -9.82642, -113.172, 0.28 ) }
    dend_42 { pt3dadd( 164.286, -9.60694, -113.646, 0.28 ) }
    dend_42 { pt3dadd( 165.968, -9.29852, -114.078, 0.55 ) }
    dend_42 { pt3dadd( 167.824, -8.90542, -114.647, 0.28 ) }
    dend_42 { pt3dadd( 168.293, -8.77894, -114.774, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 79.0779, 7.54598, -48.5755, 0.55 ) }
    dend_35 { pt3dadd( 79.2829, 6.53958, -49.5843, 0.55 ) }
    dend_35 { pt3dadd( 79.3673, 5.67942, -50.3637, 0.28 ) }
    dend_35 { pt3dadd( 79.4455, 4.87594, -50.9992, 0.55 ) }
    dend_35 { pt3dadd( 79.7122, 3.17016, -52.369, 0.28 ) }
    dend_35 { pt3dadd( 79.7252, 3.06644, -52.4724, 0.55 ) }
    dend_35 { pt3dadd( 79.81, 2.53245, -53.0674, 0.28 ) }
    dend_35 { pt3dadd( 79.8288, 2.11055, -53.6419, 0.55 ) }
    dend_35 { pt3dadd( 79.815, 1.68474, -54.3035, 0.28 ) }
    dend_35 { pt3dadd( 79.7728, 1.11231, -55.2402, 0.55 ) }
    dend_35 { pt3dadd( 79.6665, -0.332135, -57.5562, 0.55 ) }
    dend_35 { pt3dadd( 79.5486, -1.64127, -59.6971, 0.55 ) }
    dend_35 { pt3dadd( 79.4405, -2.68636, -61.4096, 0.55 ) }
    dend_35 { pt3dadd( 79.3094, -3.7169, -63.0675, 0.55 ) }
    dend_35 { pt3dadd( 79.2747, -3.98608, -63.4808, 0.28 ) }
    dend_35 { pt3dadd( 79.2492, -4.28053, -63.8914, 0.55 ) }
    dend_35 { pt3dadd( 79.2644, -4.70114, -64.4139, 0.28 ) }
    dend_35 { pt3dadd( 79.3895, -5.47834, -65.2694, 0.55 ) }
    dend_35 { pt3dadd( 79.7896, -7.03269, -66.6318, 0.55 ) }
    dend_35 { pt3dadd( 80.0152, -7.88612, -67.2791, 0.28 ) }
    dend_35 { pt3dadd( 80.1865, -8.74153, -67.977, 0.55 ) }
    dend_35 { pt3dadd( 80.3245, -9.92272, -69.0014, 0.28 ) }
    dend_35 { pt3dadd( 80.3641, -10.8663, -69.8508, 0.55 ) }
    dend_35 { pt3dadd( 80.3524, -12.2718, -71.1209, 0.28 ) }
    dend_35 { pt3dadd( 80.3541, -13.7373, -72.383, 0.55 ) }
    dend_35 { pt3dadd( 80.3229, -15.8586, -74.2358, 0.28 ) }
    dend_35 { pt3dadd( 80.2771, -16.9866, -75.2264, 0.55 ) }
    dend_35 { pt3dadd( 80.2076, -18.1327, -76.2705, 0.28 ) }
    dend_35 { pt3dadd( 80.132, -19.1266, -77.2628, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 80.086, -20.3484, -78.634, 0.55 ) }
    dend_35 { pt3dadd( 80.1402, -21.4942, -79.8749, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 66.0104, 25.2643, -5.44317, 0.55 ) }
    dend_31 { pt3dadd( 67.7663, 25.0835, -5.08721, 0.55 ) }
    dend_31 { pt3dadd( 69.0451, 24.9073, -4.95046, 0.55 ) }
    dend_31 { pt3dadd( 71.8426, 24.4938, -4.79828, 0.55 ) }
    dend_31 { pt3dadd( 73.0989, 24.2853, -4.8427, 0.55 ) }
    dend_31 { pt3dadd( 74.4683, 24.0869, -4.96063, 0.55 ) }
    dend_31 { pt3dadd( 76.304, 23.8542, -5.24932, 0.55 ) }
    dend_31 { pt3dadd( 78.2376, 23.5631, -5.73983, 0.55 ) }
    dend_31 { pt3dadd( 79.2504, 23.3999, -6.11447, 0.55 ) }
    dend_31 { pt3dadd( 81.3027, 23.0734, -7.16004, 0.55 ) }
    dend_31 { pt3dadd( 82.2472, 22.9311, -7.67193, 0.55 ) }
    dend_31 { pt3dadd( 84.4595, 22.558, -8.93051, 0.55 ) }
    dend_31 { pt3dadd( 85.9589, 22.2465, -9.77154, 0.55 ) }
    dend_31 { pt3dadd( 87.0636, 22.0094, -10.3395, 0.83 ) }
    dend_31 { pt3dadd( 88.8299, 21.5665, -11.2278, 0.55 ) }
    dend_31 { pt3dadd( 90.5624, 21.0494, -12.0312, 0.83 ) }
    dend_31 { pt3dadd( 92.0344, 20.5439, -12.6608, 0.55 ) }
    dend_31 { pt3dadd( 93.3459, 20.1112, -13.1511, 0.55 ) }
    dend_31 { pt3dadd( 94.0923, 19.8959, -13.3874, 0.83 ) }
    dend_31 { pt3dadd( 95.837, 19.3966, -13.8458, 0.28 ) }
    dend_31 { pt3dadd( 96.7056, 19.1819, -14.0172, 0.28 ) }
    dend_31 { pt3dadd( 97.5454, 18.9235, -14.2282, 0.28 ) }
    dend_31 { pt3dadd( 98.4531, 18.6678, -14.4598, 0.28 ) }
    dend_31 { pt3dadd( 99.9044, 18.2855, -14.8604, 0.28 ) }
    dend_31 { pt3dadd( 100.489, 18.1384, -15.0037, 0.55 ) }
    dend_31 { pt3dadd( 101.89, 17.7973, -15.2078, 0.55 ) }
    dend_31 { pt3dadd( 104.414, 17.1575, -15.4473, 0.55 ) }
    dend_31 { pt3dadd( 105.114, 16.962, -15.483, 0.55 ) }
    dend_31 { pt3dadd( 105.74, 16.7673, -15.4884, 0.83 ) }
    dend_31 { pt3dadd( 107.101, 16.3823, -15.3886, 0.55 ) }
    dend_31 { pt3dadd( 108.285, 16.0494, -15.2828, 0.55 ) }
    dend_31 { pt3dadd( 109.404, 15.7394, -15.1775, 0.55 ) }
    dend_31 { pt3dadd( 110.27, 15.4853, -15.1209, 0.55 ) }
    dend_31 { pt3dadd( 111.642, 14.9918, -15.101, 0.55 ) }
    dend_31 { pt3dadd( 113.257, 14.2752, -15.1712, 0.55 ) }
    dend_31 { pt3dadd( 115.765, 12.8931, -15.4649, 0.55 ) }
    dend_31 { pt3dadd( 117.14, 11.9405, -15.7199, 0.55 ) }
    dend_31 { pt3dadd( 118.331, 10.9187, -16.0071, 0.28 ) }
    dend_31 { pt3dadd( 118.685, 10.5387, -16.1158, 0.55 ) }
    dend_31 { pt3dadd( 119.468, 9.46871, -16.4042, 0.28 ) }
    dend_31 { pt3dadd( 120.141, 8.26293, -16.6966, 0.55 ) }
    dend_31 { pt3dadd( 120.775, 6.75053, -16.9291, 0.55 ) }
    dend_31 { pt3dadd( 121.204, 5.75584, -17.0321, 0.28 ) }
    dend_31 { pt3dadd( 121.362, 5.40426, -17.0505, 0.55 ) }
    dend_31 { pt3dadd( 121.772, 4.53114, -17.0839, 0.28 ) }
    dend_31 { pt3dadd( 122.332, 3.39541, -17.099, 0.55 ) }
    dend_31 { pt3dadd( 123.793, 0.660693, -17.0661, 0.55 ) }
    dend_31 { pt3dadd( 124.556, -0.717297, -17.0195, 0.55 ) }
    dend_31 { pt3dadd( 125.264, -1.98011, -16.965, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 66.0104, 25.2643, -5.44317, 0.55 ) }
    dend_30 { pt3dadd( 68.6981, 25.4209, -3.48087, 0.55 ) }
    dend_30 { pt3dadd( 69.5594, 25.4741, -2.89825, 0.55 ) }
    dend_30 { pt3dadd( 72.7727, 25.5466, -0.881415, 0.55 ) }
    dend_30 { pt3dadd( 76.3581, 25.6865, 1.43062, 0.55 ) }
    dend_30 { pt3dadd( 80.9559, 25.8406, 4.51226, 0.55 ) }
    dend_30 { pt3dadd( 82.2256, 25.8856, 5.35532, 0.55 ) }
    dend_30 { pt3dadd( 84.5071, 25.8877, 6.83531, 0.55 ) }
    dend_30 { pt3dadd( 87.0041, 25.9557, 8.3723, 0.55 ) }
    dend_30 { pt3dadd( 89.9016, 26.1273, 10.0413, 0.55 ) }
    dend_30 { pt3dadd( 92.6305, 26.3237, 11.6284, 0.55 ) }
    dend_30 { pt3dadd( 94.1234, 26.5041, 12.4393, 0.55 ) }
    dend_30 { pt3dadd( 95.8738, 26.7636, 13.3945, 0.55 ) }
    dend_30 { pt3dadd( 98.0358, 27.1483, 14.5455, 0.83 ) }
    dend_30 { pt3dadd( 101.571, 27.8195, 16.0645, 0.55 ) }
    dend_30 { pt3dadd( 103.914, 28.1919, 16.9479, 0.83 ) }
    dend_30 { pt3dadd( 107.171, 28.5834, 18.0455, 0.55 ) }
    dend_30 { pt3dadd( 108.173, 28.6545, 18.3616, 0.55 ) }
    dend_30 { pt3dadd( 111.289, 28.7391, 19.2596, 0.55 ) }
    dend_30 { pt3dadd( 116.874, 28.6053, 20.606, 0.55 ) }
    dend_30 { pt3dadd( 120.972, 28.3079, 21.4721, 0.55 ) }
    dend_30 { pt3dadd( 124.223, 27.9225, 22.2136, 0.55 ) }
    dend_30 { pt3dadd( 127.548, 27.353, 23.0589, 0.55 ) }
    dend_30 { pt3dadd( 128.249, 27.2154, 23.2378, 0.28 ) }
    dend_30 { pt3dadd( 129.671, 26.8842, 23.5904, 0.83 ) }
    dend_30 { pt3dadd( 135.516, 25.4409, 25.0605, 0.55 ) }
    dend_30 { pt3dadd( 139.603, 24.446, 26.0125, 0.55 ) }
    dend_30 { pt3dadd( 142.955, 23.697, 26.8864, 0.55 ) }
    dend_30 { pt3dadd( 144.959, 23.2412, 27.4265, 0.83 ) }
    dend_30 { pt3dadd( 146.536, 22.9033, 27.8573, 0.28 ) }
    dend_30 { pt3dadd( 147.965, 22.6007, 28.2352, 0.55 ) }
    dend_30 { pt3dadd( 159.023, 22.5424, 33.0816, 0.55 ) }
    dend_30 { pt3dadd( 170.752, 21.0626, 35.5937, 0.55 ) }
    dend_30 { pt3dadd( 182.383, 20.8811, 38.8508, 0.55 ) }
    dend_30 { pt3dadd( 192.912, 18.7279, 44.3812, 0.55 ) }
    dend_30 { pt3dadd( 202.793, 14.9661, 50.2123, 0.55 ) }
    dend_30 { pt3dadd( 213.543, 10.0762, 52.4869, 0.55 ) }
    dend_30 { pt3dadd( 224.097, 4.42059, 52.614, 0.55 ) }
    dend_30 { pt3dadd( 235.606, 0.881317, 52.2906, 0.55 ) }
    dend_30 { pt3dadd( 247.017, -2.94421, 52.7399, 0.55 ) }
    dend_30 { pt3dadd( 258.827, -5.4289, 52.5971, 0.55 ) }
    dend_30 { pt3dadd( 270.613, -7.63468, 54.0587, 0.55 ) }
    dend_30 { pt3dadd( 281.743, -11.8574, 55.8785, 0.55 ) }
    dend_30 { pt3dadd( 293.125, -14.2558, 59.1465, 0.55 ) }
    dend_30 { pt3dadd( 304.003, -15.239, 64.3122, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.52148, -26.3575, 5.2509, 1.38 ) }
    dend_13 { pt3dadd( 0.913975, -29.2117, 3.91506, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.52148, -26.3575, 5.2509, 0.55 ) }
    dend_12 { pt3dadd( -3.16596, -28.1876, 5.45098, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.99113, -30.5406, 5.67043, 0.55 ) }
    dend_12 { pt3dadd( -6.40442, -32.0937, 5.85947, 0.55 ) }
    dend_12 { pt3dadd( -7.61557, -33.3898, 5.83182, 0.55 ) }
    dend_12 { pt3dadd( -10.2819, -36.0688, 5.52597, 0.55 ) }
    dend_12 { pt3dadd( -12.1554, -37.8552, 5.26146, 0.55 ) }
    dend_12 { pt3dadd( -13.8283, -39.4565, 4.96454, 0.55 ) }
    dend_12 { pt3dadd( -18.1209, -43.3484, 4.20763, 0.55 ) }
    dend_12 { pt3dadd( -23.271, -47.85, 3.33971, 0.55 ) }
    dend_12 { pt3dadd( -27.265, -51.2566, 2.60078, 0.55 ) }
    dend_12 { pt3dadd( -29.8194, -53.4951, 2.09263, 0.55 ) }
    dend_12 { pt3dadd( -32.7517, -56.1845, 1.51711, 0.55 ) }
    dend_12 { pt3dadd( -36.4761, -60.055, 0.830251, 0.55 ) }
    dend_12 { pt3dadd( -38.6606, -62.8137, 0.468442, 0.55 ) }
    dend_12 { pt3dadd( -41.3428, -66.7959, 0.245449, 0.55 ) }
    dend_12 { pt3dadd( -43.485, -70.538, 0.144619, 0.55 ) }
    dend_12 { pt3dadd( -45.666, -75.2211, 0.0703293, 0.55 ) }
    dend_12 { pt3dadd( -47.7376, -80.7331, 0.0751267, 0.55 ) }
    dend_12 { pt3dadd( -48.8736, -84.9583, 0.139445, 0.55 ) }
    dend_12 { pt3dadd( -49.2731, -87.0661, 0.300212, 0.55 ) }
    dend_12 { pt3dadd( -49.8694, -92.0291, 0.928432, 0.55 ) }
    dend_12 { pt3dadd( -50.327, -96.6762, 1.63432, 0.55 ) }
    dend_12 { pt3dadd( -50.4973, -101.367, 2.68143, 0.55 ) }
    dend_12 { pt3dadd( -50.6079, -104.058, 3.43865, 0.55 ) }
    dend_12 { pt3dadd( -50.8627, -112.385, 6.09364, 0.55 ) }
    dend_12 { pt3dadd( -50.8845, -112.998, 6.30081, 0.55 ) }
    dend_12 { pt3dadd( -50.9339, -116.755, 7.65782, 0.55 ) }
    dend_12 { pt3dadd( -51.3317, -123.467, 10.2838, 0.55 ) }
    dend_12 { pt3dadd( -51.4933, -125.71, 11.0241, 0.55 ) }
    dend_12 { pt3dadd( -51.9037, -129.209, 11.563, 0.55 ) }
    dend_12 { pt3dadd( -52.0544, -130.507, 11.448, 0.55 ) }
    dend_12 { pt3dadd( -52.4534, -134.899, 10.1723, 0.55 ) }
    dend_12 { pt3dadd( -52.6129, -137.742, 8.69932, 0.55 ) }
    dend_12 { pt3dadd( -52.8404, -142.267, 5.37351, 0.55 ) }
    dend_12 { pt3dadd( -52.9314, -147.805, 0.829925, 0.28 ) }
    dend_12 { pt3dadd( -52.9521, -149.173, -0.490031, 0.55 ) }
    dend_12 { pt3dadd( -52.9971, -151.245, -2.68411, 0.28 ) }
    dend_12 { pt3dadd( -53.0088, -151.557, -3.03188, 0.55 ) }
    dend_12 { pt3dadd( -53.0675, -153.268, -4.78087, 0.28 ) }
    dend_12 { pt3dadd( -53.1142, -153.848, -5.22958, 0.55 ) }
    dend_12 { pt3dadd( -53.3628, -156.871, -6.94115, 0.28 ) }
    dend_12 { pt3dadd( -53.4878, -157.898, -7.50541, 0.55 ) }
    dend_12 { pt3dadd( -53.8692, -160.871, -8.95528, 0.28 ) }
    dend_12 { pt3dadd( -53.9845, -161.806, -9.40856, 0.55 ) }
    dend_12 { pt3dadd( -54.4043, -165.035, -10.9144, 0.28 ) }
    dend_12 { pt3dadd( -54.5901, -166.521, -11.6159, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.6161, -62.6924, 50.1356, 0.55 ) }
    dend_10 { pt3dadd( -18.6715, -70.7681, 58.4048, 0.55 ) }
    dend_10 { pt3dadd( -24.8878, -77.6786, 67.0345, 0.55 ) }
    dend_10 { pt3dadd( -30.8304, -85.4036, 75.0686, 0.55 ) }
    dend_10 { pt3dadd( -36.9983, -93.1475, 82.9059, 0.55 ) }
    dend_10 { pt3dadd( -41.9504, -102.354, 89.807, 0.55 ) }
    dend_10 { pt3dadd( -46.7395, -111.195, 97.3338, 0.55 ) }
    dend_10 { pt3dadd( -50.2683, -121.998, 102.287, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.6161, -62.6924, 50.1356, 0.55 ) }
    dend_3 { pt3dadd( -13.4165, -69.4012, 56.6819, 0.55 ) }
    dend_3 { pt3dadd( -12.8541, -77.1088, 61.8451, 0.55 ) }
    dend_3 { pt3dadd( -13.8382, -84.802, 66.9503, 0.55 ) }
    dend_3 { pt3dadd( -15.3797, -92.888, 71.156, 0.55 ) }
    dend_3 { pt3dadd( -16.5353, -100.962, 75.5149, 0.55 ) }
    dend_3 { pt3dadd( -17.6127, -108.725, 80.4805, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -41.5375, 28.7201, -15.3786, 0.83 ) }
    dend_60 { pt3dadd( -41.5511, 29.7834, -17.6022, 0.83 ) }
    dend_60 { pt3dadd( -41.6325, 32.4404, -22.6407, 0.55 ) }
    dend_60 { pt3dadd( -41.639, 33.6275, -24.6727, 0.83 ) }
    dend_60 { pt3dadd( -41.616, 34.9338, -26.7234, 0.55 ) }
    dend_60 { pt3dadd( -41.5438, 36.3549, -28.5675, 0.55 ) }
    dend_60 { pt3dadd( -41.4773, 37.1039, -29.3743, 0.28 ) }
    dend_60 { pt3dadd( -41.4444, 37.6459, -29.7446, 0.55 ) }
    dend_60 { pt3dadd( -41.1868, 39.5836, -30.5515, 0.28 ) }
    dend_60 { pt3dadd( -41.0455, 40.4253, -30.8567, 0.55 ) }
    dend_60 { pt3dadd( -40.5692, 43.3877, -31.7847, 0.28 ) }
    dend_60 { pt3dadd( -40.241, 45.7592, -32.4248, 0.55 ) }
    dend_60 { pt3dadd( -39.8932, 49.4974, -33.2687, 0.28 ) }
    dend_60 { pt3dadd( -39.6957, 52.8019, -33.9221, 0.28 ) }
    dend_60 { pt3dadd( -39.6896, 54.6621, -34.2289, 0.55 ) }
    dend_60 { pt3dadd( -39.8222, 56.8678, -34.5631, 0.28 ) }
    dend_60 { pt3dadd( -39.9541, 57.9244, -34.6933, 0.55 ) }
    dend_60 { pt3dadd( -40.426, 60.3769, -35.083, 0.28 ) }
    dend_60 { pt3dadd( -40.8707, 61.9861, -35.406, 0.28 ) }
    dend_60 { pt3dadd( -41.3526, 63.5521, -35.7656, 0.28 ) }
    dend_60 { pt3dadd( -41.5741, 64.3787, -35.9658, 0.55 ) }
    dend_60 { pt3dadd( -42.2952, 67.7017, -36.8965, 0.28 ) }
    dend_60 { pt3dadd( -43.0236, 71.6178, -38.1032, 0.55 ) }
    dend_60 { pt3dadd( -43.2549, 72.9689, -38.5299, 0.55 ) }
    dend_60 { pt3dadd( -43.5042, 74.332, -38.9222, 0.55 ) }
    dend_60 { pt3dadd( -44.2078, 77.2118, -39.7713, 0.55 ) }
    dend_60 { pt3dadd( -44.8091, 79.0879, -40.3445, 0.28 ) }
    dend_60 { pt3dadd( -45.1281, 79.7938, -40.5533, 0.55 ) }
    dend_60 { pt3dadd( -46.1302, 81.7149, -41.0453, 0.28 ) }
    dend_60 { pt3dadd( -47.3047, 83.7337, -41.636, 0.55 ) }
    dend_60 { pt3dadd( -49.3144, 86.5958, -42.5453, 0.28 ) }
    dend_60 { pt3dadd( -50.306, 87.7753, -42.9371, 0.28 ) }
    dend_60 { pt3dadd( -51.9585, 89.3588, -43.6138, 0.55 ) }
    dend_60 { pt3dadd( -53.8284, 90.977, -44.3917, 0.28 ) }
    dend_60 { pt3dadd( -54.1704, 91.2258, -44.5192, 0.55 ) }
    dend_60 { pt3dadd( -55.405, 92.0047, -44.9364, 0.28 ) }
    dend_60 { pt3dadd( -59.6537, 94.4872, -46.2363, 0.55 ) }
    dend_60 { pt3dadd( -65.6141, 97.4237, -48.1093, 0.28 ) }
    dend_60 { pt3dadd( -66.7288, 97.8884, -48.4963, 0.55 ) }
    dend_60 { pt3dadd( -69.801, 99.0497, -49.5747, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -71.0978, 99.5131, -50.0538, 0.28 ) }
    dend_60 { pt3dadd( -72.2354, 99.8776, -50.5102, 0.55 ) }
    dend_60 { pt3dadd( -75.6185, 100.545, -51.9696, 0.28 ) }
    dend_60 { pt3dadd( -77.9944, 100.836, -52.8592, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -41.5375, 28.7201, -15.3786, 0.55 ) }
    dend_57 { pt3dadd( -41.7634, 29.7736, -15.6815, 0.55 ) }
    dend_57 { pt3dadd( -41.9063, 30.4059, -15.7957, 0.28 ) }
    dend_57 { pt3dadd( -42.0904, 30.8752, -15.748, 0.55 ) }
    dend_57 { pt3dadd( -42.5132, 31.953, -15.6384, 0.28 ) }
    dend_57 { pt3dadd( -42.8101, 32.71, -15.5614, 0.55 ) }
    dend_57 { pt3dadd( -43.3575, 34.1056, -15.4195, 0.28 ) }
    dend_57 { pt3dadd( -43.7124, 34.8742, -15.2007, 0.55 ) }
    dend_57 { pt3dadd( -45.0248, 36.7967, -13.9642, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -113.096, -42.7869, -20.2853, 0.55 ) }
    dend_52 { pt3dadd( -118.495, -50.6426, -22.2183, 0.55 ) }
    dend_52 { pt3dadd( -122.245, -59.3044, -24.2811, 0.55 ) }
    dend_52 { pt3dadd( -124.811, -67.7882, -28.2466, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -113.096, -42.7869, -20.2853, 0.55 ) }
    dend_49 { pt3dadd( -119.431, -51.525, -24.3479, 0.55 ) }
    dend_49 { pt3dadd( -124.372, -60.6364, -29.3831, 0.55 ) }
    dend_49 { pt3dadd( -128.808, -69.9428, -34.5034, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -146.606, 9.04666, 20.9351, 0.55 ) }
    dend_47 { pt3dadd( -155.403, 8.71055, 24.4688, 0.55 ) }
    dend_47 { pt3dadd( -164.459, 9.58617, 27.1224, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -146.606, 9.04666, 20.9351, 0.55 ) }
    dend_46 { pt3dadd( -157.659, 7.60766, 22.1183, 0.55 ) }
    dend_46 { pt3dadd( -168.768, 7.89948, 23.6346, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 80.1402, -21.4942, -79.8749, 0.28 ) }
    dend_39 { pt3dadd( 85.3226, -23.8561, -89.8025, 0.28 ) }
    dend_39 { pt3dadd( 85.8307, -24.147, -90.6954, 0.55 ) }
    dend_39 { pt3dadd( 86.6886, -24.638, -92.203, 0.28 ) }
    dend_39 { pt3dadd( 87.411, -25.0515, -93.4724, 0.28 ) }
    dend_39 { pt3dadd( 88.3672, -25.5988, -95.1528, 0.55 ) }
    dend_39 { pt3dadd( 89.6279, -26.3204, -97.3683, 0.55 ) }
    dend_39 { pt3dadd( 91.2678, -27.8375, -98.6522, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 80.1402, -21.4942, -79.8749, 0.55 ) }
    dend_36 { pt3dadd( 80.6932, -22.4606, -81.1577, 0.55 ) }
    dend_36 { pt3dadd( 80.8464, -22.8967, -81.7223, 0.28 ) }
    dend_36 { pt3dadd( 81.0604, -23.6439, -82.7057, 0.55 ) }
    dend_36 { pt3dadd( 81.5319, -25.2899, -84.8719, 0.28 ) }
    dend_36 { pt3dadd( 81.8587, -26.4306, -86.3731, 0.55 ) }
    dend_36 { pt3dadd( 82.4123, -28.3633, -88.9166, 0.28 ) }
    dend_36 { pt3dadd( 82.9921, -30.7087, -92.2421, 0.28 ) }
    dend_36 { pt3dadd( 83.2012, -31.7863, -93.7936, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 125.264, -1.98011, -16.965, 0.28 ) }
    dend_33 { pt3dadd( 127.373, -4.767, -16.3953, 0.28 ) }
    dend_33 { pt3dadd( 130.024, -8.48122, -15.3193, 0.28 ) }
    dend_33 { pt3dadd( 131.698, -10.9019, -14.5184, 0.55 ) }
    dend_33 { pt3dadd( 132.709, -12.2421, -14.0009, 0.28 ) }
    dend_33 { pt3dadd( 133.246, -12.9645, -13.7151, 0.28 ) }
    dend_33 { pt3dadd( 135.91, -16.5258, -12.3631, 0.55 ) }
    dend_33 { pt3dadd( 136.522, -17.3263, -11.95, 0.28 ) }
    dend_33 { pt3dadd( 137.956, -19.4532, -10.7186, 0.55 ) }
    dend_33 { pt3dadd( 139.18, -21.2964, -9.73078, 0.28 ) }
    dend_33 { pt3dadd( 140.254, -22.7906, -8.95429, 0.55 ) }
    dend_33 { pt3dadd( 141.516, -24.5691, -8.1459, 0.55 ) }
    dend_33 { pt3dadd( 143.535, -27.364, -7.24185, 0.55 ) }
    dend_33 { pt3dadd( 144.022, -28.048, -7.04728, 0.55 ) }
    dend_33 { pt3dadd( 145.763, -30.6014, -6.35601, 0.28 ) }
    dend_33 { pt3dadd( 146.436, -31.6434, -6.10553, 0.55 ) }
    dend_33 { pt3dadd( 147.381, -32.9718, -5.78616, 0.28 ) }
    dend_33 { pt3dadd( 148.716, -34.8507, -5.42664, 0.55 ) }
    dend_33 { pt3dadd( 150.947, -37.773, -5.32137, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 125.264, -1.98011, -16.965, 0.55 ) }
    dend_32 { pt3dadd( 122.909, -1.88271, -17.0875, 0.55 ) }
    dend_32 { pt3dadd( 120.996, -1.8036, -17.187, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.913975, -29.2117, 3.91506, 0.83 ) }
    dend_17 { pt3dadd( 1.02977, -29.4393, 3.8888, 0.83 ) }
    dend_17 { pt3dadd( 2.37489, -31.4525, 3.78464, 0.83 ) }
    dend_17 { pt3dadd( 3.55175, -33.2134, 3.56803, 0.55 ) }
    dend_17 { pt3dadd( 4.49062, -34.6182, 3.39521, 0.55 ) }
    dend_17 { pt3dadd( 6.48625, -37.6041, 3.0279, 0.83 ) }
    dend_17 { pt3dadd( 8.9068, -41.2258, 2.58236, 0.55 ) }
    dend_17 { pt3dadd( 10.2279, -43.1218, 2.3886, 0.83 ) }
    dend_17 { pt3dadd( 12.5701, -46.1387, 2.22096, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.913975, -29.2117, 3.91506, 0.55 ) }
    dend_14 { pt3dadd( -1.07823, -30.1231, 1.38336, 0.55 ) }
    dend_14 { pt3dadd( -3.21662, -31.1014, -1.3341, 0.55 ) }
    dend_14 { pt3dadd( -5.741, -32.2563, -4.54209, 0.55 ) }
    dend_14 { pt3dadd( -8.80642, -33.6586, -8.43763, 0.55 ) }
    dend_14 { pt3dadd( -10.546, -34.4544, -10.6482, 0.55 ) }
    dend_14 { pt3dadd( -10.8954, -34.6143, -11.0923, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -17.6127, -108.725, 80.4805, 0.55 ) }
    dend_7 { pt3dadd( -17.8089, -113.475, 83.852, 0.55 ) }
    dend_7 { pt3dadd( -17.273, -118.589, 86.5453, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -17.6127, -108.725, 80.4805, 0.55 ) }
    dend_4 { pt3dadd( -18.7004, -116.414, 84.9414, 0.55 ) }
    dend_4 { pt3dadd( -20.1637, -123.88, 89.6992, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -45.0248, 36.7967, -13.9642, 0.28 ) }
    dend_59 { pt3dadd( -46.2873, 38.8074, -12.3271, 0.28 ) }
    dend_59 { pt3dadd( -46.7475, 39.5869, -11.6247, 0.55 ) }
    dend_59 { pt3dadd( -48.0502, 41.8551, -9.55078, 0.28 ) }
    dend_59 { pt3dadd( -48.7182, 42.9568, -8.62747, 0.55 ) }
    dend_59 { pt3dadd( -50.5668, 45.9171, -6.22261, 0.28 ) }
    dend_59 { pt3dadd( -52.4456, 48.926, -3.77841, 0.55 ) }
    dend_59 { pt3dadd( -55.5396, 53.688, 0.354582, 0.28 ) }
    dend_59 { pt3dadd( -56.1983, 54.7097, 1.23403, 0.55 ) }
    dend_59 { pt3dadd( -57.6651, 57.0649, 3.06755, 0.28 ) }
    dend_59 { pt3dadd( -58.237, 58.0344, 3.77752, 0.55 ) }
    dend_59 { pt3dadd( -64.9859, 64.6929, 10.5327, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -73.0186, 71.9439, 14.6294, 0.55 ) }
    dend_59 { pt3dadd( -79.6193, 79.8279, 19.9075, 0.55 ) }
    dend_59 { pt3dadd( -84.8109, 89.0065, 24.4064, 0.55 ) }
    dend_59 { pt3dadd( -91.3091, 97.5778, 28.4564, 0.55 ) }
    dend_59 { pt3dadd( -98.4999, 104.716, 34.1104, 0.55 ) }
    dend_59 { pt3dadd( -104.626, 111.399, 41.424, 0.55 ) }
    dend_59 { pt3dadd( -109.38, 117.354, 50.2943, 0.55 ) }
    dend_59 { pt3dadd( -114.244, 123.849, 58.6819, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -45.0248, 36.7967, -13.9642, 0.55 ) }
    dend_58 { pt3dadd( -47.8534, 35.852, -12.3187, 0.55 ) }
    dend_58 { pt3dadd( -49.3204, 35.3106, -11.4602, 0.28 ) }
    dend_58 { pt3dadd( -50.4121, 34.9078, -10.8213, 0.55 ) }
    dend_58 { pt3dadd( -51.322, 34.572, -10.2888, 0.28 ) }
    dend_58 { pt3dadd( -51.9593, 34.3368, -9.91584, 0.55 ) }
    dend_58 { pt3dadd( -53.7167, 33.6884, -8.8874, 0.28 ) }
    dend_58 { pt3dadd( -54.8936, 33.1338, -8.34911, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -124.811, -67.7882, -28.2466, 0.55 ) }
    dend_54 { pt3dadd( -129.701, -77.8627, -27.2276, 0.55 ) }
    dend_54 { pt3dadd( -134.629, -87.6763, -24.9053, 0.55 ) }
    dend_54 { pt3dadd( -138.299, -98.2619, -24.2782, 0.55 ) }
    dend_54 { pt3dadd( -143.405, -108.124, -22.5574, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -124.811, -67.7882, -28.2466, 0.55 ) }
    dend_53 { pt3dadd( -127.315, -72.9049, -32.9584, 0.55 ) }
    dend_53 { pt3dadd( -129.301, -77.3674, -38.5653, 0.55 ) }
    dend_53 { pt3dadd( -132.072, -82.3395, -43.2934, 0.55 ) }
    dend_53 { pt3dadd( -136.328, -86.0962, -48.1156, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -128.808, -69.9428, -34.5034, 0.55 ) }
    dend_51 { pt3dadd( -132.686, -74.0248, -41.6717, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -128.808, -69.9428, -34.5034, 0.55 ) }
    dend_50 { pt3dadd( -132.204, -78.7875, -34.827, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 91.2678, -27.8375, -98.6522, 0.28 ) }
    dend_41 { pt3dadd( 95.0331, -29.7778, -101.195, 0.28 ) }
    dend_41 { pt3dadd( 96.7822, -30.6791, -102.377, 0.55 ) }
    dend_41 { pt3dadd( 100.118, -32.3979, -104.629, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 91.2678, -27.8375, -98.6522, 0.55 ) }
    dend_40 { pt3dadd( 90.5192, -28.3476, -100.95, 0.55 ) }
    dend_40 { pt3dadd( 89.0219, -29.368, -105.545, 0.28 ) }
    dend_40 { pt3dadd( 88.5342, -29.7004, -107.042, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 83.2012, -31.7863, -93.7936, 0.28 ) }
    dend_38 { pt3dadd( 83.7706, -33.901, -97.1007, 0.28 ) }
    dend_38 { pt3dadd( 84.0525, -34.9481, -98.7383, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 83.2012, -31.7863, -93.7936, 0.55 ) }
    dend_37 { pt3dadd( 81.7283, -32.2215, -93.2637, 0.55 ) }
    dend_37 { pt3dadd( 77.6209, -33.435, -91.7862, 0.28 ) }
    dend_37 { pt3dadd( 76.6452, -33.7232, -91.4352, 0.55 ) }
    dend_37 { pt3dadd( 73.9761, -34.5118, -90.475, 0.28 ) }
    dend_37 { pt3dadd( 72.2556, -35.0201, -89.8561, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.5701, -46.1387, 2.22096, 0.83 ) }
    dend_23 { pt3dadd( 12.6172, -46.4214, 2.17381, 0.83 ) }
    dend_23 { pt3dadd( 13.2776, -50.124, 1.67359, 0.83 ) }
    dend_23 { pt3dadd( 13.4926, -52.9134, 1.44934, 0.83 ) }
    dend_23 { pt3dadd( 13.4612, -55.6252, 1.49633, 0.83 ) }
    dend_23 { pt3dadd( 13.2467, -59.2507, 1.8236, 0.83 ) }
    dend_23 { pt3dadd( 12.8574, -63.4379, 2.34358, 0.83 ) }
    dend_23 { pt3dadd( 12.4077, -68.1246, 3.18067, 0.83 ) }
    dend_23 { pt3dadd( 11.9418, -72.6871, 4.21091, 0.83 ) }
    dend_23 { pt3dadd( 11.0122, -78.2908, 5.28866, 0.83 ) }
    dend_23 { pt3dadd( 10.4604, -80.8615, 5.61239, 0.83 ) }
    dend_23 { pt3dadd( 10.0554, -82.7891, 5.7288, 0.83 ) }
    dend_23 { pt3dadd( 9.20825, -86.4855, 5.85941, 0.83 ) }
    dend_23 { pt3dadd( 8.55677, -89.7858, 5.79814, 0.83 ) }
    dend_23 { pt3dadd( 7.68005, -96.7778, 4.90633, 0.83 ) }
    dend_23 { pt3dadd( 7.32047, -100.577, 3.90268, 0.83 ) }
    dend_23 { pt3dadd( 7.02455, -104.065, 2.70791, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.5701, -46.1387, 2.22096, 0.55 ) }
    dend_18 { pt3dadd( 12.011, -47.355, 2.41735, 0.55 ) }
    dend_18 { pt3dadd( 11.6025, -48.2347, 2.63154, 0.55 ) }
    dend_18 { pt3dadd( 11.3663, -48.7945, 2.82568, 0.55 ) }
    dend_18 { pt3dadd( 11.0547, -49.6668, 3.21297, 0.55 ) }
    dend_18 { pt3dadd( 10.5037, -51.3888, 4.0908, 0.55 ) }
    dend_18 { pt3dadd( 10.0988, -52.6852, 4.91011, 0.55 ) }
    dend_18 { pt3dadd( 9.79371, -53.719, 5.68571, 0.55 ) }
    dend_18 { pt3dadd( 9.47051, -54.7595, 6.55318, 0.55 ) }
    dend_18 { pt3dadd( 9.20222, -55.6201, 7.32266, 0.28 ) }
    dend_18 { pt3dadd( 8.98935, -56.3181, 8.06487, 0.55 ) }
    dend_18 { pt3dadd( 8.60018, -57.5793, 9.61582, 0.55 ) }
    dend_18 { pt3dadd( 8.32926, -58.3479, 10.6659, 0.55 ) }
    dend_18 { pt3dadd( 8.17144, -58.7787, 11.2502, 0.55 ) }
    dend_18 { pt3dadd( 7.95213, -59.2881, 11.9143, 0.83 ) }
    dend_18 { pt3dadd( 7.26934, -60.8037, 13.7734, 0.28 ) }
    dend_18 { pt3dadd( 7.04156, -61.3059, 14.3735, 0.55 ) }
    dend_18 { pt3dadd( 6.65653, -62.2144, 15.4192, 0.28 ) }
    dend_18 { pt3dadd( 6.54163, -62.4934, 15.7641, 0.55 ) }
    dend_18 { pt3dadd( 6.31014, -63.1493, 16.5533, 0.28 ) }
    dend_18 { pt3dadd( 6.17654, -63.5238, 16.9712, 0.55 ) }
    dend_18 { pt3dadd( 5.6019, -64.7588, 17.9824, 0.55 ) }
    dend_18 { pt3dadd( 5.18347, -68.026, 21.9835, 0.55 ) }
    dend_18 { pt3dadd( 5.04667, -71.1223, 26.1512, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.8954, -34.6143, -11.0923, 0.55 ) }
    dend_16 { pt3dadd( -13.3566, -35.5474, -14.1006, 0.55 ) }
    dend_16 { pt3dadd( -14.0843, -35.7598, -14.9512, 0.55 ) }
    dend_16 { pt3dadd( -15.9221, -36.2932, -17.0109, 0.55 ) }
    dend_16 { pt3dadd( -19.9613, -37.3329, -21.3357, 0.28 ) }
    dend_16 { pt3dadd( -20.5669, -37.473, -21.9389, 0.55 ) }
    dend_16 { pt3dadd( -23.1097, -38.1288, -24.349, 0.55 ) }
    dend_16 { pt3dadd( -26.6344, -39.0271, -27.2959, 0.55 ) }
    dend_16 { pt3dadd( -27.9849, -39.3288, -28.3901, 0.28 ) }
    dend_16 { pt3dadd( -29.1723, -39.5137, -29.2801, 0.28 ) }
    dend_16 { pt3dadd( -31.2282, -39.7892, -30.5219, 0.55 ) }
    dend_16 { pt3dadd( -33.7223, -40.0135, -32.132, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -36.013, -40.0323, -33.6733, 0.55 ) }
    dend_16 { pt3dadd( -37.7814, -39.9059, -34.8321, 0.55 ) }
    dend_16 { pt3dadd( -38.9912, -39.7209, -35.6701, 0.55 ) }
    dend_16 { pt3dadd( -42.529, -39.0224, -38.2426, 0.55 ) }
    dend_16 { pt3dadd( -46.2495, -38.0408, -40.8808, 0.55 ) }
    dend_16 { pt3dadd( -47.7868, -37.5526, -41.9325, 0.28 ) }
    dend_16 { pt3dadd( -49.246, -37.1113, -42.9591, 0.55 ) }
    dend_16 { pt3dadd( -52.2185, -36.4026, -45.0088, 0.28 ) }
    dend_16 { pt3dadd( -53.2211, -36.192, -45.688, 0.83 ) }
    dend_16 { pt3dadd( -55.1057, -35.777, -46.8268, 0.28 ) }
    dend_16 { pt3dadd( -56.4852, -35.5759, -47.4671, 0.55 ) }
    dend_16 { pt3dadd( -58.4952, -35.3501, -48.3559, 0.28 ) }
    dend_16 { pt3dadd( -59.2976, -35.2504, -48.6837, 0.55 ) }
    dend_16 { pt3dadd( -60.7929, -35.0919, -49.2118, 0.55 ) }
    dend_16 { pt3dadd( -63.0487, -34.6409, -49.9265, 0.55 ) }
    dend_16 { pt3dadd( -64.5243, -34.2611, -50.3123, 0.28 ) }
    dend_16 { pt3dadd( -65.7135, -33.8174, -50.5313, 0.55 ) }
    dend_16 { pt3dadd( -67.1064, -33.1342, -50.7972, 0.28 ) }
    dend_16 { pt3dadd( -67.3343, -33.0047, -50.8488, 0.55 ) }
    dend_16 { pt3dadd( -69.4147, -31.7648, -51.6904, 0.28 ) }
    dend_16 { pt3dadd( -70.9139, -30.8361, -52.4641, 0.55 ) }
    dend_16 { pt3dadd( -72.8688, -29.4856, -53.7639, 0.83 ) }
    dend_16 { pt3dadd( -74.4657, -28.3374, -55.0216, 0.28 ) }
    dend_16 { pt3dadd( -74.8757, -28.0437, -55.3889, 0.55 ) }
    dend_16 { pt3dadd( -78.0105, -25.8372, -58.3898, 0.28 ) }
    dend_16 { pt3dadd( -78.5557, -25.4602, -58.972, 0.55 ) }
    dend_16 { pt3dadd( -80.1507, -24.2385, -60.7988, 0.28 ) }
    dend_16 { pt3dadd( -80.5622, -23.9242, -61.2736, 0.55 ) }
    dend_16 { pt3dadd( -81.6238, -23.1068, -62.4141, 0.28 ) }
    dend_16 { pt3dadd( -82.3793, -22.5189, -63.1709, 0.55 ) }
    dend_16 { pt3dadd( -84.0879, -21.206, -64.5886, 0.28 ) }
    dend_16 { pt3dadd( -85.1107, -20.4983, -65.3881, 0.55 ) }
    dend_16 { pt3dadd( -87.3126, -19.1241, -66.9701, 0.28 ) }
    dend_16 { pt3dadd( -87.972, -18.7503, -67.4302, 0.55 ) }
    dend_16 { pt3dadd( -89.0144, -18.2428, -68.1114, 0.28 ) }
    dend_16 { pt3dadd( -89.9008, -17.8153, -68.6439, 0.55 ) }
    dend_16 { pt3dadd( -91.7519, -16.9516, -69.6354, 0.28 ) }
    dend_16 { pt3dadd( -92.3115, -16.7036, -69.9151, 0.55 ) }
    dend_16 { pt3dadd( -96.4774, -14.783, -71.7961, 0.28 ) }
    dend_16 { pt3dadd( -97.939, -14.0101, -72.3263, 0.55 ) }
    dend_16 { pt3dadd( -100.546, -12.5109, -73.1021, 0.28 ) }
    dend_16 { pt3dadd( -101.719, -11.7904, -73.4152, 0.55 ) }
    dend_16 { pt3dadd( -104.418, -10.1576, -73.9743, 0.28 ) }
    dend_16 { pt3dadd( -105.413, -9.60071, -74.1349, 0.55 ) }
    dend_16 { pt3dadd( -109.042, -7.89649, -74.5151, 0.28 ) }
    dend_16 { pt3dadd( -110.569, -7.36665, -74.6574, 0.55 ) }
    dend_16 { pt3dadd( -112.772, -6.94868, -74.8313, 0.55 ) }
    dend_16 { pt3dadd( -114.135, -6.77218, -74.905, 0.55 ) }
    dend_16 { pt3dadd( -116.918, -6.48012, -74.8422, 0.28 ) }
    dend_16 { pt3dadd( -119.656, -6.21903, -74.6087, 0.28 ) }
    dend_16 { pt3dadd( -121.936, -5.994, -74.3482, 0.55 ) }
    dend_16 { pt3dadd( -124.696, -5.49483, -73.728, 0.28 ) }
    dend_16 { pt3dadd( -126.04, -5.08767, -73.2379, 0.55 ) }
    dend_16 { pt3dadd( -129.173, -3.62425, -71.7491, 0.28 ) }
    dend_16 { pt3dadd( -130.716, -2.55964, -70.5828, 0.55 ) }
    dend_16 { pt3dadd( -131.666, -1.71155, -69.5908, 0.28 ) }
    dend_16 { pt3dadd( -132.678, -0.758001, -68.1767, 0.55 ) }
    dend_16 { pt3dadd( -133.901, 0.487162, -66.2182, 0.28 ) }
    dend_16 { pt3dadd( -134.372, 0.927065, -65.4824, 0.55 ) }
    dend_16 { pt3dadd( -136.93, 2.91543, -62.0404, 0.28 ) }
    dend_16 { pt3dadd( -137.802, 3.54432, -60.8904, 0.55 ) }
    dend_16 { pt3dadd( -139.868, 4.94156, -58.0902, 0.28 ) }
    dend_16 { pt3dadd( -140.993, 5.68406, -56.5694, 0.55 ) }
    dend_16 { pt3dadd( -141.92, 6.29249, -55.3215, 0.55 ) }
    dend_16 { pt3dadd( -143.039, 7.00955, -53.8663, 0.28 ) }
    dend_16 { pt3dadd( -143.656, 7.37627, -53.2272, 0.55 ) }
    dend_16 { pt3dadd( -145.759, 8.68507, -51.2333, 0.28 ) }
    dend_16 { pt3dadd( -146.837, 9.51308, -50.1647, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.8954, -34.6143, -11.0923, 0.55 ) }
    dend_15 { pt3dadd( -10.5601, -34.7407, -12.1349, 0.55 ) }
    dend_15 { pt3dadd( -10.1856, -34.756, -13.1726, 0.55 ) }
    dend_15 { pt3dadd( -9.64887, -34.6895, -14.4393, 0.55 ) }
    dend_15 { pt3dadd( -9.16343, -34.5552, -15.4501, 0.55 ) }
    dend_15 { pt3dadd( -5.47356, -33.0084, -21.8057, 0.55 ) }
    dend_15 { pt3dadd( -4.64326, -32.4949, -23.2487, 0.55 ) }
    dend_15 { pt3dadd( -3.43998, -31.5801, -25.407, 0.55 ) }
    dend_15 { pt3dadd( -2.59225, -30.8815, -26.94, 0.55 ) }
    dend_15 { pt3dadd( -1.7367, -30.1161, -28.4074, 0.28 ) }
    dend_15 { pt3dadd( -0.329889, -28.8144, -30.5814, 0.55 ) }
    dend_15 { pt3dadd( 1.90808, -26.7804, -33.6774, 0.28 ) }
    dend_15 { pt3dadd( 2.04954, -26.6588, -34.0058, 0.55 ) }
    dend_15 { pt3dadd( 2.42913, -26.2587, -36.4089, 0.28 ) }
    dend_15 { pt3dadd( 2.4093, -26.0782, -38.072, 0.55 ) }
    dend_15 { pt3dadd( 2.21535, -25.9991, -39.875, 0.55 ) }
    dend_15 { pt3dadd( 1.81636, -26.0116, -43.1148, 0.55 ) }
    dend_15 { pt3dadd( 1.04948, -26.0791, -49.4755, 0.55 ) }
    dend_15 { pt3dadd( 0.608945, -26.1679, -53.756, 0.55 ) }
    dend_15 { pt3dadd( 0.495918, -26.2118, -55.2371, 0.55 ) }
    dend_15 { pt3dadd( -0.0142691, -26.431, -64.9826, 0.55 ) }
    dend_15 { pt3dadd( -0.039972, -26.4561, -67.6245, 0.55 ) }
    dend_15 { pt3dadd( 0.0571403, -26.472, -69.1072, 0.55 ) }
    dend_15 { pt3dadd( 0.583043, -26.5941, -72.5446, 0.55 ) }
    dend_15 { pt3dadd( 2.31883, -27.2874, -80.7257, 0.55 ) }
    dend_15 { pt3dadd( 2.87907, -27.5602, -82.9107, 0.28 ) }
    dend_15 { pt3dadd( 3.29145, -27.7694, -84.1311, 0.55 ) }
    dend_15 { pt3dadd( 3.93552, -28.1512, -85.9295, 0.28 ) }
    dend_15 { pt3dadd( 4.25424, -28.3805, -86.6492, 0.55 ) }
    dend_15 { pt3dadd( 5.70294, -29.3887, -88.4945, 0.28 ) }
    dend_15 { pt3dadd( 7.21872, -30.7246, -89.0272, 0.55 ) }
    dend_15 { pt3dadd( 8.13895, -31.6694, -89.2804, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 9.00311, -32.7053, -89.3976, 0.55 ) }
    dend_15 { pt3dadd( 9.76817, -33.8266, -89.4254, 0.28 ) }
    dend_15 { pt3dadd( 10.092, -34.4016, -89.4496, 0.55 ) }
    dend_15 { pt3dadd( 10.8505, -35.9044, -89.4338, 0.28 ) }
    dend_15 { pt3dadd( 11.0282, -36.3509, -89.496, 0.55 ) }
    dend_15 { pt3dadd( 12.0047, -38.9077, -90.0, 0.28 ) }
    dend_15 { pt3dadd( 12.459, -40.0887, -90.3991, 0.55 ) }
    dend_15 { pt3dadd( 13.4647, -42.6085, -91.5679, 0.28 ) }
    dend_15 { pt3dadd( 13.8536, -43.5355, -92.1152, 0.55 ) }
    dend_15 { pt3dadd( 15.2171, -46.5783, -94.1343, 0.28 ) }
    dend_15 { pt3dadd( 15.5468, -47.3176, -94.6595, 0.55 ) }
    dend_15 { pt3dadd( 16.5036, -49.6557, -96.3973, 0.28 ) }
    dend_15 { pt3dadd( 16.7033, -50.2037, -96.7531, 0.55 ) }
    dend_15 { pt3dadd( 17.183, -51.6512, -97.669, 0.28 ) }
    dend_15 { pt3dadd( 17.4518, -52.4896, -98.2881, 0.55 ) }
    dend_15 { pt3dadd( 17.7316, -53.3122, -98.9718, 0.55 ) }
    dend_15 { pt3dadd( 18.2936, -54.9537, -100.323, 0.28 ) }
    dend_15 { pt3dadd( 18.7156, -55.9688, -101.306, 0.55 ) }
    dend_15 { pt3dadd( 20.1708, -58.5018, -104.488, 0.28 ) }
    dend_15 { pt3dadd( 20.7506, -59.3221, -105.774, 0.55 ) }
    dend_15 { pt3dadd( 21.1701, -59.8429, -106.651, 0.28 ) }
    dend_15 { pt3dadd( 21.6148, -60.3181, -107.53, 0.55 ) }
    dend_15 { pt3dadd( 23.0476, -61.6496, -110.208, 0.28 ) }
    dend_15 { pt3dadd( 24.1574, -62.6839, -112.191, 0.55 ) }
    dend_15 { pt3dadd( 26.1475, -64.6579, -115.361, 0.28 ) }
    dend_15 { pt3dadd( 26.7781, -65.2722, -116.355, 0.55 ) }
    dend_15 { pt3dadd( 28.0716, -66.4057, -118.116, 0.28 ) }
    dend_15 { pt3dadd( 28.5263, -66.779, -118.657, 0.55 ) }
    dend_15 { pt3dadd( 29.3424, -67.3806, -119.368, 0.28 ) }
    dend_15 { pt3dadd( 30.0949, -67.8904, -119.924, 0.55 ) }
    dend_15 { pt3dadd( 32.2392, -69.163, -121.197, 0.28 ) }
    dend_15 { pt3dadd( 34.7271, -70.5181, -122.615, 0.28 ) }
    dend_15 { pt3dadd( 36.0267, -71.1471, -123.239, 0.28 ) }
    dend_15 { pt3dadd( 37.313, -71.7374, -123.949, 0.55 ) }
    dend_15 { pt3dadd( 39.1994, -72.5099, -124.996, 0.28 ) }
    dend_15 { pt3dadd( 40.0466, -72.8409, -125.443, 0.83 ) }
    dend_15 { pt3dadd( 42.2342, -73.7168, -126.497, 0.28 ) }
    dend_15 { pt3dadd( 43.1621, -74.117, -127.008, 0.55 ) }
    dend_15 { pt3dadd( 47.1532, -76.0308, -129.454, 0.28 ) }
    dend_15 { pt3dadd( 49.0834, -77.0079, -130.847, 0.28 ) }
    dend_15 { pt3dadd( 50.4485, -77.7154, -131.961, 0.55 ) }
    dend_15 { pt3dadd( 51.2015, -78.1435, -132.711, 0.55 ) }
    dend_15 { pt3dadd( 53.1184, -79.3066, -134.884, 0.28 ) }
    dend_15 { pt3dadd( 54.86, -80.4923, -137.004, 0.55 ) }
    dend_15 { pt3dadd( 56.4385, -81.6353, -138.935, 0.28 ) }
    dend_15 { pt3dadd( 57.8207, -82.6929, -140.775, 0.55 ) }
    dend_15 { pt3dadd( 58.9696, -83.549, -142.288, 0.28 ) }
    dend_15 { pt3dadd( 59.9506, -84.1621, -143.462, 0.55 ) }
    dend_15 { pt3dadd( 62.3994, -85.4747, -146.161, 0.28 ) }
    dend_15 { pt3dadd( 63.6689, -86.1396, -147.468, 0.55 ) }
    dend_15 { pt3dadd( 65.612, -87.1471, -149.348, 0.28 ) }
    dend_15 { pt3dadd( 67.2276, -87.9183, -150.845, 0.55 ) }
    dend_15 { pt3dadd( 71.0284, -89.5295, -154.356, 0.28 ) }
    dend_15 { pt3dadd( 72.5355, -90.08, -155.904, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.273, -118.589, 86.5453, 0.55 ) }
    dend_9 { pt3dadd( -17.0259, -127.879, 91.2881, 0.55 ) }
    dend_9 { pt3dadd( -15.1266, -137.735, 93.9059, 0.55 ) }
    dend_9 { pt3dadd( -14.2175, -147.336, 97.8033, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.273, -118.589, 86.5453, 0.55 ) }
    dend_8 { pt3dadd( -16.5067, -128.015, 93.6513, 0.55 ) }
    dend_8 { pt3dadd( -17.4954, -136.12, 102.338, 0.55 ) }
    dend_8 { pt3dadd( -18.5639, -142.348, 112.588, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -20.1637, -123.88, 89.6992, 0.55 ) }
    dend_6 { pt3dadd( -20.4645, -132.568, 94.6217, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -20.1637, -123.88, 89.6992, 0.55 ) }
    dend_5 { pt3dadd( -23.0268, -134.546, 96.5768, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.02455, -104.065, 2.70791, 0.83 ) }
    dend_25 { pt3dadd( 8.07521, -107.939, 3.10246, 0.83 ) }
    dend_25 { pt3dadd( 9.13845, -111.206, 3.67388, 0.83 ) }
    dend_25 { pt3dadd( 10.1953, -114.453, 4.24188, 0.83 ) }
    dend_25 { pt3dadd( 11.199, -117.537, 4.78129, 0.83 ) }
    dend_25 { pt3dadd( 12.7457, -122.289, 5.61257, 0.83 ) }
    dend_25 { pt3dadd( 14.2813, -127.007, 6.43784, 0.83 ) }
    dend_25 { pt3dadd( 15.5948, -130.133, 7.38293, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.02455, -104.065, 2.70791, 0.55 ) }
    dend_24 { pt3dadd( 8.32224, -105.698, 2.84705, 0.55 ) }
    dend_24 { pt3dadd( 9.35657, -106.964, 2.71913, 0.55 ) }
    dend_24 { pt3dadd( 10.0911, -107.896, 2.51837, 0.55 ) }
    dend_24 { pt3dadd( 10.7975, -108.988, 2.10672, 0.83 ) }
    dend_24 { pt3dadd( 11.537, -110.224, 1.46292, 0.55 ) }
    dend_24 { pt3dadd( 12.2604, -111.432, 0.833215, 0.83 ) }
    dend_24 { pt3dadd( 12.9853, -112.74, 0.00618198, 0.55 ) }
    dend_24 { pt3dadd( 13.4162, -113.495, -0.55056, 0.83 ) }
    dend_24 { pt3dadd( 14.7311, -115.932, -2.57778, 0.55 ) }
    dend_24 { pt3dadd( 15.6109, -117.845, -4.32784, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.04667, -71.1223, 26.1512, 0.55 ) }
    dend_20 { pt3dadd( 1.3831, -79.8115, 32.7757, 0.55 ) }
    dend_20 { pt3dadd( -3.95414, -87.551, 39.5889, 0.55 ) }
    dend_20 { pt3dadd( -10.1756, -94.2892, 46.8204, 0.55 ) }
    dend_20 { pt3dadd( -17.4875, -99.8032, 54.1809, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 5.04667, -71.1223, 26.1512, 0.55 ) }
    dend_19 { pt3dadd( 2.89052, -78.104, 33.0527, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.5948, -130.133, 7.38293, 0.55 ) }
    dend_27 { pt3dadd( 15.7295, -131.661, 7.75395, 0.55 ) }
    dend_27 { pt3dadd( 15.9562, -133.611, 8.28013, 0.55 ) }
    dend_27 { pt3dadd( 16.1711, -135.452, 8.76626, 0.55 ) }
    dend_27 { pt3dadd( 16.3085, -136.761, 9.0906, 0.55 ) }
    dend_27 { pt3dadd( 16.5269, -139.096, 9.63095, 0.55 ) }
    dend_27 { pt3dadd( 17.2491, -145.651, 10.9762, 0.55 ) }
    dend_27 { pt3dadd( 17.5526, -147.872, 11.3333, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 17.7745, -149.436, 11.5023, 0.55 ) }
    dend_27 { pt3dadd( 18.0461, -151.216, 11.5445, 0.55 ) }
    dend_27 { pt3dadd( 18.2337, -152.59, 11.4476, 0.55 ) }
    dend_27 { pt3dadd( 18.7755, -155.792, 11.082, 0.55 ) }
    dend_27 { pt3dadd( 19.0967, -158.227, 10.7997, 0.55 ) }
    dend_27 { pt3dadd( 19.3525, -159.825, 10.6651, 0.55 ) }
    dend_27 { pt3dadd( 19.9971, -163.977, 10.5411, 0.55 ) }
    dend_27 { pt3dadd( 20.4098, -166.773, 10.5887, 0.55 ) }
    dend_27 { pt3dadd( 20.9574, -170.384, 10.865, 0.55 ) }
    dend_27 { pt3dadd( 21.6309, -174.49, 11.5125, 0.55 ) }
    dend_27 { pt3dadd( 22.2086, -177.233, 12.1251, 0.55 ) }
    dend_27 { pt3dadd( 22.5908, -178.853, 12.5332, 0.55 ) }
    dend_27 { pt3dadd( 22.914, -180.348, 12.9046, 0.55 ) }
    dend_27 { pt3dadd( 23.3581, -182.237, 13.2812, 0.55 ) }
    dend_27 { pt3dadd( 24.3749, -186.783, 13.8628, 0.55 ) }
    dend_27 { pt3dadd( 24.8321, -188.537, 14.0193, 0.55 ) }
    dend_27 { pt3dadd( 25.2919, -190.493, 14.179, 0.55 ) }
    dend_27 { pt3dadd( 25.9568, -193.429, 14.4026, 0.55 ) }
    dend_27 { pt3dadd( 26.3563, -195.691, 14.5964, 0.55 ) }
    dend_27 { pt3dadd( 26.6045, -197.845, 14.75, 0.55 ) }
    dend_27 { pt3dadd( 26.7446, -199.901, 14.8961, 0.55 ) }
    dend_27 { pt3dadd( 26.8448, -201.91, 15.069, 0.55 ) }
    dend_27 { pt3dadd( 26.9254, -203.339, 15.1772, 0.55 ) }
    dend_27 { pt3dadd( 27.0737, -205.674, 15.2691, 0.55 ) }
    dend_27 { pt3dadd( 27.2132, -208.471, 15.1531, 0.55 ) }
    dend_27 { pt3dadd( 27.3198, -209.825, 14.9887, 0.55 ) }
    dend_27 { pt3dadd( 27.4285, -211.011, 14.7484, 0.55 ) }
    dend_27 { pt3dadd( 27.7454, -213.239, 14.1539, 0.55 ) }
    dend_27 { pt3dadd( 27.9316, -214.65, 13.7346, 0.55 ) }
    dend_27 { pt3dadd( 28.181, -216.391, 13.2888, 0.55 ) }
    dend_27 { pt3dadd( 28.3055, -217.62, 13.0548, 0.55 ) }
    dend_27 { pt3dadd( 28.5657, -220.82, 12.5796, 0.55 ) }
    dend_27 { pt3dadd( 28.6948, -223.224, 12.4067, 0.55 ) }
    dend_27 { pt3dadd( 28.8236, -226.959, 12.4629, 0.55 ) }
    dend_27 { pt3dadd( 28.958, -229.375, 12.7408, 0.55 ) }
    dend_27 { pt3dadd( 29.077, -231.915, 13.1196, 0.28 ) }
    dend_27 { pt3dadd( 29.0974, -232.938, 13.3159, 0.28 ) }
    dend_27 { pt3dadd( 29.1306, -235.43, 14.0298, 0.28 ) }
    dend_27 { pt3dadd( 29.1355, -237.739, 14.881, 0.28 ) }
    dend_27 { pt3dadd( 29.4303, -240.791, 16.3397, 0.28 ) }
    dend_27 { pt3dadd( 31.0635, -247.563, 17.7969, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 15.5948, -130.133, 7.38293, 0.55 ) }
    dend_26 { pt3dadd( 16.7724, -130.579, 8.14545, 0.55 ) }
    dend_26 { pt3dadd( 19.119, -131.723, 9.88624, 0.55 ) }
    dend_26 { pt3dadd( 21.108, -132.851, 11.4747, 0.28 ) }
    dend_26 { pt3dadd( 23.2127, -134.135, 13.2454, 0.55 ) }
    dend_26 { pt3dadd( 24.3986, -134.96, 14.5004, 0.28 ) }
    dend_26 { pt3dadd( 26.3522, -136.454, 16.8978, 0.55 ) }
    dend_26 { pt3dadd( 27.033, -137.25, 18.1809, 0.28 ) }
    dend_26 { pt3dadd( 27.2452, -137.541, 18.7121, 0.28 ) }
    dend_26 { pt3dadd( 27.6067, -137.959, 19.6414, 0.55 ) }
    dend_26 { pt3dadd( 29.1319, -139.336, 23.0745, 0.28 ) }
    dend_26 { pt3dadd( 29.8077, -139.874, 24.4939, 0.55 ) }
    dend_26 { pt3dadd( 32.0845, -141.423, 28.4096, 0.28 ) }
    dend_26 { pt3dadd( 33.3999, -142.184, 30.4096, 0.28 ) }
    dend_26 { pt3dadd( 35.1198, -143.155, 32.7691, 0.55 ) }
    dend_26 { pt3dadd( 37.8526, -144.651, 35.9867, 0.28 ) }
    dend_26 { pt3dadd( 38.2502, -144.847, 36.3735, 0.55 ) }
    dend_26 { pt3dadd( 40.2908, -145.799, 38.1267, 0.28 ) }
    dend_26 { pt3dadd( 40.4877, -145.887, 38.2633, 0.55 ) }
    dend_26 { pt3dadd( 42.2022, -146.924, 39.5157, 0.28 ) }
    dend_26 { pt3dadd( 42.9925, -147.491, 40.162, 0.55 ) }
    dend_26 { pt3dadd( 49.4523, -151.694, 45.5565, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.4875, -99.8032, 54.1809, 0.55 ) }
    dend_22 { pt3dadd( -21.6701, -103.785, 62.2675, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -17.4875, -99.8032, 54.1809, 0.55 ) }
    dend_21 { pt3dadd( -21.0134, -105.105, 56.8429, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 9
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 7
    dend_35 nseg = 3
    dend_31 nseg = 3
    dend_30 nseg = 13
    dend_12 nseg = 9
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_BP_46b07f0520_0_0


