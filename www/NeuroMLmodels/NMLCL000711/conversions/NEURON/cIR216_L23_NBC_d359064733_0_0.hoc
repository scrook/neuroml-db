// Cell: cIR216_L23_NBC_d359064733_0_0
/*
{
  "id" : "cIR216_L23_NBC_d359064733_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.36225, -9.19447, -1.05898, 3.37379", "-7.5192, -8.3328, -0.983264, 5.59841", "-6.67615, -7.47114, -0.907549, 5.3333", "-5.8331, -6.60947, -0.831834, 5.68073", "-4.99005, -5.7478, -0.756119, 6.02816", "-4.147, -4.88613, -0.680404, 6.37559", "-3.30395, -4.02446, -0.604689, 6.72117", "-2.46089, -3.16279, -0.528974, 6.8656", "-1.61784, -2.30113, -0.453259, 6.93412", "-0.774793, -1.43946, -0.377544, 6.84096", "0.0682572, -0.577789, -0.301829, 6.68704", "0.911308, 0.28388, -0.226114, 6.6716", "1.75436, 1.14555, -0.150399, 6.90842", "2.59741, 2.00722, -0.0746836, 7.45096", "3.44046, 2.86888, 0.00103138, 8.43414", "4.28351, 3.73055, 0.0767464, 9.41614", "5.12656, 4.59222, 0.152461, 10.0048", "5.96961, 5.45389, 0.228176, 10.3326", "6.81266, 6.31556, 0.303891, 9.50982", "7.65571, 7.17723, 0.379606, 7.06842", "8.49876, 8.03889, 0.455321, 3.91086" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "7.80497, 1.25302, 15.3717, 0.83", "8.78585, -1.42045, 15.9734, 0.83", "9.68548, -3.79748, 16.5719, 0.83", "10.4894, -5.73259, 17.0743, 0.83", "12.2301, -9.45968, 18.0634, 1.38", "13.8242, -12.5474, 18.8496, 0.83", "15.3187, -15.2589, 19.4741, 0.83", "16.7273, -17.6759, 19.9975, 0.55", "18.3491, -20.0817, 20.4653, 1.11", "20.0041, -22.0722, 20.7399, 0.55", "21.5799, -23.5733, 20.7558, 0.55", "23.5732, -25.1385, 20.5532, 0.55", "25.4724, -26.4418, 20.1484, 0.55", "27.0245, -27.4247, 19.6237, 0.55", "28.6089, -28.3316, 18.7972, 0.55", "30.4316, -29.38, 17.502, 0.55", "31.4577, -30.0224, 16.6403, 1.11", "33.1334, -31.2342, 15.0806, 0.28", "34.1454, -32.1013, 14.0441, 0.55", "36.5869, -34.498, 11.4315, 0.55", "38.0695, -36.0923, 9.90453, 0.55", "39.9185, -38.2313, 8.07957, 0.28", "41.2222, -39.8126, 6.95334, 0.83", "43.5415, -42.7656, 4.90119, 0.28", "44.2715, -43.7448, 4.24744, 0.55", "45.4816, -45.3411, 3.19688, 0.28", "46.6534, -46.7381, 2.15551, 0.28", "47.564, -47.7364, 1.2418, 0.83", "50.9416, -51.2874, -2.32098, 0.28", "51.6522, -52.0559, -3.08394, 1.11", "53.1853, -53.7489, -4.75319, 0.28", "54.2453, -54.989, -5.97383, 0.83", "57.0732, -58.3608, -9.15219, 0.28", "57.9492, -59.5551, -10.1567, 0.55", "58.9192, -61.1238, -11.1639, 0.28", "59.5781, -62.3308, -11.9007, 1.11", "60.585, -64.4104, -13.1604, 0.28", "61.1409, -65.6396, -13.9252, 0.83", "62.9606, -69.6826, -16.556, 0.28", "64.6374, -73.2459, -19.0572, 0.28", "65.3553, -74.6984, -20.0849, 0.55", "66.3789, -76.6944, -21.4563, 0.28", "66.7017, -77.3063, -21.8273, 0.55", "67.7778, -79.2754, -22.888, 0.28", "68.6339, -80.7383, -23.5137, 0.83", "70.1532, -83.2969, -24.3611, 0.28", "70.5262, -83.9409, -24.5163, 0.55", "72.1837, -86.8493, -24.9826, 0.28", "73.0558, -88.4107, -25.1821, 0.55", "73.5605, -89.3476, -25.2393, 0.28", "74.3185, -90.77, -25.3304, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.135, 1.73602, 1.42168, 0.83", "11.1443, 1.35996, 0.504687, 0.83", "12.6158, 0.148915, -1.3153, 1.11", "13.6657, -0.844914, -2.61269, 1.11", "15.6221, -2.62192, -4.93519, 1.38", "17.4158, -4.03681, -6.79349, 1.11", "18.601, -4.95014, -7.91291, 1.66", "20.4605, -6.6993, -9.77234, 0.83", "21.2792, -7.72603, -10.7313, 0.83", "21.9643, -8.83017, -11.6958, 1.11", "23.1581, -11.2837, -13.8033, 1.11", "23.7475, -12.4502, -14.9252, 1.11", "24.6198, -14.255, -16.7272, 0.83", "25.3543, -16.0672, -18.5376, 0.83", "25.8258, -17.7623, -20.2375, 0.83", "26.1839, -20.0596, -22.5106, 0.83", "26.2613, -23.5867, -26.1993, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.38497, 9.91549, 2.58168, 2.49", "10.1037, 13.5128, 1.51608, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.93503, -7.10498, -4.25832, 0.83", "-11.5989, -6.37975, -4.28331, 0.83", "-14.5499, -4.7335, -4.30843, 0.83", "-16.2666, -3.49593, -4.3371, 0.55", "-18.6162, -1.6073, -4.38521, 0.83", "-20.0009, -0.391925, -4.41498, 0.83", "-22.1232, 1.58127, -4.45938, 1.11", "-23.9028, 3.49405, -4.49694, 0.83", "-25.1574, 4.92508, -4.52044, 0.83", "-26.1898, 6.0455, -4.53579, 1.11", "-28.3689, 8.15845, -4.56322, 0.83", "-30.3587, 10.1188, -4.60397, 0.83", "-32.4352, 12.1978, -4.7702, 0.83", "-34.8538, 14.5551, -5.07088, 1.11", "-36.9295, 16.6468, -5.35547, 0.83", "-38.2004, 18.01, -5.5323, 0.83", "-41.0246, 21.2395, -5.92923, 0.83", "-43.2719, 23.9666, -6.23172, 0.55", "-45.4511, 26.7744, -6.41623, 0.55", "-47.1922, 29.0542, -6.42076, 0.83", "-49.1464, 31.5648, -6.19258, 0.83", "-50.493, 33.2197, -5.95752, 0.55", "-51.8803, 34.7595, -5.60103, 0.83", "-53.3734, 36.5196, -5.01315, 0.55", "-55.1, 38.7405, -4.21635, 0.55", "-57.185, 41.2178, -3.25268, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.47503, -10.8325, -6.25832, 2.49", "-7.67543, -17.1338, -6.16736, 2.49", "-8.3756, -20.8092, -6.1143, 1.66", "-9.05122, -24.3557, -6.0631, 2.77", "-9.64244, -27.4593, -6.0183, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.49876, 8.03889, 0.455321, 0.55", "18.9889, 18.7607, 0.455321, 0.55", "29.479, 29.4825, 0.455321, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "26.2613, -23.5867, -26.1993, 0.55", "27.4245, -24.3987, -27.7297, 0.55", "28.6974, -25.4535, -29.2819, 0.55", "32.8771, -29.2495, -34.1933, 0.55", "34.568, -30.7289, -36.0679, 0.55", "36.0382, -31.8776, -37.6343, 0.55", "38.5553, -33.7152, -40.2338, 0.83", "40.9895, -35.3159, -42.6886, 0.83", "43.0838, -36.701, -44.7971, 0.55", "44.1907, -37.4985, -45.9403, 0.55", "46.0393, -38.8702, -48.3066, 0.55", "47.2834, -39.75, -50.082, 0.83", "48.1165, -40.4028, -51.3867, 0.28", "49.5686, -41.7015, -53.8337, 0.55", "51.5715, -43.8299, -57.3797, 0.83", "53.4593, -46.0184, -60.5223, 0.55", "54.5531, -47.3004, -62.083, 0.55", "56.2195, -48.9984, -63.9895, 0.55", "57.9658, -50.4927, -65.5358, 0.28", "59.1878, -51.343, -66.3326, 0.83", "62.9766, -53.5139, -68.1588, 0.55", "65.3989, -54.6154, -69.1182, 0.28", "68.4118, -55.6576, -70.3587, 0.55", "70.1168, -56.0942, -71.0421, 0.28", "71.6999, -56.4412, -71.6236, 0.55", "73.7051, -56.7942, -72.467, 0.28", "75.5731, -57.0556, -73.3788, 0.55", "78.4729, -57.4171, -75.0008, 0.28", "80.031, -57.6774, -76.0423, 0.55", "81.5749, -58.0818, -77.2313, 0.55", "83.2731, -58.6578, -79.5783, 0.28", "83.8185, -58.8401, -80.543, 0.28", "84.4899, -59.111, -81.9969, 0.55", "85.9033, -59.7629, -85.487, 0.28", "87.0342, -60.3161, -88.5254, 0.83", "91.4993, -62.5451, -101.014, 0.28", "91.9642, -62.7794, -102.412, 0.55", "92.8912, -63.2206, -105.326, 0.55", "93.8052, -63.6662, -108.29, 0.28", "94.5128, -63.9823, -110.474, 0.55", "96.9477, -64.9832, -117.414, 0.55", "99.2803, -66.0496, -122.829, 0.55", "100.422, -66.5568, -125.354, 0.28", "101.23, -66.8673, -127.03, 0.55", "101.971, -67.1766, -128.515, 0.28", "103.044, -67.7654, -130.488, 0.55", "103.986, -68.4726, -132.048, 0.28", "105.037, -69.4159, -133.748, 0.55", "105.879, -70.2306, -135.351, 0.55", "107.098, -71.3713, -137.836, 0.28", "108.363, -72.5942, -140.42, 0.55", "109.898, -74.1592, -143.669, 0.28", "110.922, -75.2417, -145.841, 0.55", "112.877, -77.5258, -149.92, 0.28", "113.393, -78.0824, -150.856, 0.55", "114.621, -79.2813, -152.821, 0.28", "116.508, -81.0401, -155.472, 0.55", "117.98, -82.3667, -157.216, 0.28", "119.464, -83.7408, -158.841, 0.55", "120.794, -85.049, -160.254, 0.28", "122.201, -86.5043, -161.883, 0.55", "122.8, -87.1365, -162.689, 0.28", "123.571, -87.9459, -164.043, 0.55", "124.484, -89.0753, -166.207, 0.28", "124.804, -89.4854, -167.059, 0.55", "125.035, -89.8059, -167.733, 0.28", "125.891, -91.1334, -170.4, 0.55", "127.927, -94.8059, -177.514, 0.28", "128.312, -95.6301, -179.083, 0.55", "128.65, -96.5199, -180.596, 0.28", "128.93, -97.2506, -181.691, 0.28", "129.344, -98.2983, -183.108, 0.55", "130.319, -100.7, -185.696, 0.28", "131.245, -102.664, -187.55, 0.55", "132.247, -104.477, -189.162, 0.28", "133.633, -106.749, -190.991, 0.28", "135.594, -109.65, -192.759, 0.83", "137.312, -112.003, -193.73, 0.28", "140.41, -116.373, -194.488, 0.55", "142.579, -119.714, -194.556, 0.28", "143.437, -121.123, -194.461, 0.55", "146.156, -126.139, -193.641, 0.28", "147.289, -128.43, -193.111, 0.55", "148.831, -131.766, -192.332, 0.28", "149.536, -133.386, -191.942, 0.28", "150.214, -134.972, -191.74, 0.55", "151.586, -137.935, -191.579, 0.28", "153.148, -140.955, -191.785, 0.28", "153.967, -142.436, -191.963, 0.55", "155.886, -145.613, -192.518, 0.28", "157.479, -148.136, -193.016, 0.55", "159.267, -151.001, -193.679, 0.28", "160.498, -152.845, -194.344, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "26.2613, -23.5867, -26.1993, 1.11", "26.8044, -26.3082, -27.0975, 1.11", "27.5549, -29.3321, -28.1611, 0.55", "28.1264, -31.4338, -28.9112, 0.55", "28.8536, -33.9554, -29.7794, 0.55", "29.4484, -36.0514, -30.4329, 0.55", "30.1252, -38.409, -31.1519, 0.83", "30.8004, -40.6867, -31.8041, 0.55", "31.3248, -42.3206, -32.173, 0.28", "31.7916, -43.7575, -32.4508, 0.55", "32.4638, -46.0279, -32.7686, 0.28", "32.8445, -47.3858, -32.9043, 0.55", "33.5061, -49.6385, -33.2063, 0.55", "34.0706, -51.1653, -33.4642, 0.28", "34.3867, -51.8126, -33.6332, 0.55", "35.2687, -53.3373, -34.1573, 0.28", "36.9505, -55.8682, -35.1033, 0.55", "38.778, -58.3234, -35.9916, 0.28", "40.1743, -59.9754, -36.638, 0.83", "42.1707, -62.1514, -37.4542, 0.28", "43.9606, -64.0775, -38.1947, 0.55", "45.3246, -65.5311, -38.7442, 0.28", "47.2384, -67.6535, -39.422, 0.55", "48.5159, -69.1328, -39.8303, 0.55", "50.188, -71.2145, -40.4065, 0.55", "51.5741, -73.078, -40.8987, 0.28", "52.6924, -74.6564, -41.2952, 0.55", "53.3405, -75.6753, -41.5622, 0.28", "54.0188, -76.8254, -41.821, 0.55", "54.5496, -77.7539, -41.95, 0.28", "55.4593, -79.2964, -42.0409, 0.55", "56.4272, -80.8952, -41.9752, 0.28", "57.7884, -83.1352, -41.7893, 0.55", "58.8725, -84.8983, -41.574, 0.55", "60.1224, -86.9339, -41.2632, 0.28", "61.0875, -88.5929, -41.0069, 0.55", "62.0258, -90.2864, -40.7357, 0.28", "62.7519, -91.651, -40.5601, 0.55", "63.1386, -92.431, -40.4605, 0.28", "63.3446, -92.8768, -40.4389, 0.55", "64.1068, -94.5083, -40.4821, 0.28", "65.1188, -96.5959, -40.7095, 0.55", "65.7585, -97.7998, -40.8821, 0.28", "66.4864, -99.0599, -41.0678, 0.55", "67.5625, -100.789, -41.3325, 0.28", "68.2542, -101.864, -41.383, 0.55", "69.0092, -102.97, -41.4044, 0.28", "69.9262, -104.34, -41.4255, 0.55", "70.87, -105.703, -41.4328, 0.28", "71.4718, -106.521, -41.4408, 0.83", "73.6414, -109.362, -41.3949, 0.28", "75.2466, -111.379, -41.3635, 0.28", "76.1373, -112.462, -41.3409, 0.55", "76.8396, -113.233, -41.3812, 0.28", "78.3429, -114.66, -41.5998, 0.55", "79.4277, -115.531, -41.7951, 0.28", "80.8567, -116.42, -42.088, 0.55", "82.2268, -117.095, -42.2843, 0.28", "83.8157, -117.714, -42.472, 0.55", "85.7307, -118.317, -42.7642, 0.28", "86.9347, -118.609, -42.9758, 0.55", "89.1093, -119.038, -43.4204, 0.28", "90.6685, -119.278, -43.7355, 0.55", "91.9472, -119.436, -43.9639, 0.28", "93.9187, -119.715, -44.1599, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "10.1037, 13.5128, 1.51608, 1.38", "8.85201, 15.5609, -0.336267, 1.38", "7.13262, 18.7539, -3.56517, 1.38", "6.19816, 20.9553, -6.3187, 1.38", "5.10466, 23.8864, -9.98548, 1.11", "4.30361, 26.0658, -12.6935, 1.11", "3.46372, 27.9131, -15.049, 0.83", "2.49629, 29.555, -17.5542, 0.83", "-0.0798167, 32.9808, -22.9721, 1.66", "-1.1714, 34.302, -24.7023, 0.55", "-1.64323, 34.9348, -25.2892, 0.55", "-4.27894, 38.3183, -27.6893, 0.55", "-5.50378, 39.737, -28.4835, 0.28", "-8.40298, 43.1647, -29.8791, 0.83", "-12.7048, 48.9085, -31.4431, 0.55", "-14.4897, 51.8064, -32.1454, 0.55", "-15.7133, 54.5035, -32.6669, 0.55", "-16.1052, 55.8333, -32.8566, 0.55", "-16.5386, 57.9766, -33.0041, 0.83", "-16.782, 60.7721, -32.9967, 0.55", "-16.7682, 62.7481, -32.7627, 0.55", "-16.6658, 65.5325, -32.529, 0.55", "-16.574, 67.1208, -32.4413, 0.55", "-16.5199, 69.9515, -32.3733, 0.55", "-16.5721, 71.7665, -32.3712, 0.55", "-16.7623, 74.1602, -32.5687, 0.83", "-17.1273, 76.9087, -32.9602, 0.28", "-17.4852, 78.8027, -33.3124, 0.83", "-18.0675, 81.6792, -33.8915, 0.28", "-18.468, 83.7155, -34.3293, 0.83", "-19.2835, 87.8848, -35.206, 0.28", "-19.5749, 89.5029, -35.5674, 0.28", "-19.8111, 90.9539, -35.8895, 0.55", "-20.2464, 94.3247, -36.7528, 0.83", "-20.4331, 96.1821, -37.2344, 0.28", "-20.5356, 97.1508, -37.4914, 0.55", "-20.8728, 100.39, -38.2761, 0.28", "-21.1409, 102.403, -38.8569, 0.83", "-21.5321, 104.422, -39.5109, 0.28", "-22.0309, 106.017, -40.0678, 0.55", "-22.7359, 107.901, -40.7297, 0.28", "-23.0342, 108.646, -40.967, 0.55", "-23.8219, 110.534, -41.4826, 0.28", "-24.2049, 111.539, -41.7826, 0.55", "-25.3674, 114.998, -42.7902, 0.83", "-25.9054, 116.897, -43.356, 0.55", "-26.2936, 118.895, -43.9687, 0.28", "-26.4968, 120.453, -44.461, 0.83", "-26.7146, 123.956, -45.6663, 0.55", "-26.7414, 125.679, -46.3107, 0.28", "-26.6812, 126.548, -46.6617, 0.55", "-26.4467, 129.061, -47.6841, 0.28", "-26.3698, 129.633, -47.9188, 0.55", "-25.8983, 132.512, -48.9858, 0.28", "-25.6466, 134.005, -49.4864, 0.83", "-25.1327, 137.038, -50.4285, 0.28", "-24.9124, 138.381, -50.756, 0.55", "-24.564, 140.752, -51.1719, 0.28", "-24.2848, 142.584, -51.4116, 0.55", "-23.8209, 145.827, -51.6544, 0.28", "-23.6133, 148.343, -52.4224, 0.55", "-23.543, 151.005, -53.6206, 0.55", "-23.5336, 154.443, -55.5173, 0.28", "-23.555, 156.269, -56.6589, 0.55", "-23.6001, 158.365, -58.0971, 0.55", "-23.9576, 170.88, -67.2824, 0.55", "-24.0114, 172.458, -68.5158, 0.28", "-24.04, 173.368, -69.2541, 0.55", "-24.0932, 174.737, -70.3605, 0.28", "-24.1247, 175.652, -71.0313, 0.55", "-24.0894, 177.459, -71.8974, 0.55", "-23.9449, 178.86, -71.8538, 0.28", "-23.7838, 180.643, -71.8999, 0.55", "-23.7064, 182.049, -71.9954, 0.55", "-23.7045, 182.875, -72.1023, 0.28", "-23.8079, 185.278, -72.5338, 0.55", "-23.9929, 187.226, -73.0128, 0.55", "-24.1113, 188.452, -73.3346, 0.28", "-24.1559, 189.042, -73.4995, 0.55", "-24.2604, 190.966, -74.0017, 0.28", "-24.3312, 192.1, -74.253, 0.55", "-24.4324, 194.049, -74.6551, 0.28", "-24.5474, 197.19, -75.2599, 0.55", "-24.6073, 201.08, -75.9707, 0.28", "-24.6049, 203.725, -76.3824, 0.55", "-24.5757, 205.683, -76.6363, 0.55", "-24.5154, 208.282, -76.923, 0.55", "-24.437, 210.319, -77.0705, 0.28", "-24.35, 212.712, -77.1545, 0.55", "-24.1697, 215.234, -77.1108, 0.55", "-24.1248, 215.626, -77.0944, 0.28", "-23.9665, 216.632, -77.0536, 0.28", "-23.382, 219.773, -76.9205, 0.55", "-22.8812, 221.965, -76.9558, 0.83", "-22.3409, 223.906, -76.9929, 0.28", "-21.8295, 225.41, -77.0292, 0.55", "-20.6259, 228.17, -76.8669, 0.28", "-19.4673, 230.27, -76.5888, 0.55", "-17.7, 232.782, -76.0667, 0.28", "-15.5828, 235.224, -75.3947, 0.55", "-14.0176, 236.716, -74.9141, 0.55", "-10.4771, 239.722, -73.6956, 0.28", "-9.1988, 240.65, -73.1866, 0.28", "-8.09094, 241.346, -72.7159, 0.55", "-6.30691, 242.328, -71.9423, 0.28", "-3.4564, 243.817, -71.1507, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "10.1037, 13.5128, 1.51608, 0.83", "10.8585, 16.829, 0.531178, 0.83", "11.8206, 19.9002, -0.488741, 0.83", "13.2419, 23.1072, -1.80145, 0.83", "14.5904, 25.769, -3.17641, 1.38", "15.5556, 27.7287, -4.27027, 0.83", "16.3205, 29.3914, -5.36716, 0.55", "17.5284, 32.1208, -7.51906, 0.55", "18.7961, 34.8254, -9.85935, 0.83", "20.1639, 37.4301, -12.418, 0.83", "21.3424, 39.5369, -14.7821, 0.83", "23.1767, 42.9493, -18.816, 0.55", "23.4655, 43.6714, -19.6705, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-57.185, 41.2178, -3.25268, 0.55", "-58.6011, 43.2443, -4.11996, 0.55", "-59.9708, 45.2867, -5.12319, 0.55", "-60.9268, 46.6495, -5.99763, 0.55", "-62.365, 48.6463, -7.55567, 0.55", "-63.2083, 49.819, -8.56131, 0.28", "-64.1078, 51.0413, -9.61493, 0.83", "-65.7513, 53.184, -11.8525, 0.55", "-66.9251, 54.7832, -13.6949, 0.55", "-67.7613, 55.9726, -15.103, 0.28", "-68.5254, 57.0802, -16.3689, 0.55", "-69.5714, 58.572, -17.9326, 0.55", "-71.014, 60.7612, -20.0008, 0.55", "-72.0035, 62.4975, -21.2677, 0.28", "-72.8319, 64.1823, -22.138, 0.55", "-73.5302, 65.7218, -22.7254, 0.28", "-74.2539, 67.5008, -23.2413, 0.55", "-74.5512, 68.2663, -23.4008, 0.55", "-75.0517, 69.5033, -23.5719, 0.55", "-75.7565, 71.1582, -23.8116, 0.28", "-76.4318, 72.7584, -24.0945, 0.55", "-77.0859, 74.2176, -24.4067, 0.28", "-78.2818, 76.6079, -25.047, 0.55", "-79.078, 78.0454, -25.4922, 0.28", "-79.2269, 78.2989, -25.593, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-57.185, 41.2178, -3.25268, 0.55", "-58.7252, 43.2938, -2.47888, 0.55", "-59.7739, 44.5545, -2.05179, 0.55", "-62.0987, 46.9534, -1.20422, 0.55", "-63.4411, 48.1423, -0.797275, 0.83", "-64.9307, 49.2501, -0.390361, 0.55", "-67.1535, 50.9033, 0.216847, 0.55", "-68.4471, 51.8516, 0.597263, 0.55", "-71.0944, 53.5314, 1.31564, 0.83", "-73.4029, 54.6428, 1.81579, 0.83", "-76.3503, 55.9117, 2.28032, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.64244, -27.4593, -6.0183, 2.49", "-9.09226, -30.2476, -5.91565, 2.49", "-8.65634, -32.4569, -5.83432, 1.38", "-8.59234, -32.7813, -5.82238, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.64244, -27.4593, -6.0183, 1.38", "-13.8705, -31.8102, 1.21192, 1.38", "-15.5138, -33.5013, 4.02203, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.479, 29.4825, 0.455321, 0.524975", "39.9692, 40.2043, 0.455321, 0.524975", "50.4593, 50.9261, 0.455321, 0.524975" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "23.4655, 43.6714, -19.6705, 0.55", "23.889, 44.8683, -19.6694, 0.55", "24.4703, 46.5598, -19.7411, 0.83", "24.9523, 48.0309, -19.9004, 0.55", "25.6666, 50.116, -20.1802, 0.28", "26.4337, 52.2889, -20.4864, 0.55", "27.4908, 55.1378, -20.9056, 0.55", "28.9168, 58.6538, -21.4893, 0.55", "30.0957, 61.309, -21.9506, 0.55", "30.8103, 62.782, -22.2035, 0.83", "31.4822, 63.9836, -22.4044, 0.28", "31.9719, 64.7961, -22.5348, 0.28", "33.1016, 66.3955, -22.77, 0.55", "34.6131, 68.0221, -22.9825, 0.83", "35.8451, 69.2015, -23.1063, 0.83", "37.0417, 70.2914, -23.2408, 0.28", "37.8302, 71.0169, -23.3333, 0.55", "39.2192, 72.3624, -23.5119, 0.55", "41.101, 74.2273, -23.7822, 0.55", "42.7629, 75.9766, -24.0243, 0.83", "44.3621, 77.9149, -24.2894, 0.28", "45.6594, 79.7625, -24.5111, 0.55", "46.16, 80.5886, -24.6142, 0.55", "46.9815, 82.1722, -24.8016, 0.55", "48.1524, 84.6982, -25.0797, 0.83", "49.165, 86.9393, -25.3701, 0.28", "49.8771, 88.5047, -25.5818, 0.55", "51.2732, 91.409, -26.0396, 0.55", "51.9637, 92.804, -26.2788, 0.55", "53.028, 94.9551, -26.714, 0.83", "54.4503, 97.7373, -27.3543, 0.28", "55.6898, 100.011, -27.9089, 0.55", "57.1647, 102.662, -28.5977, 0.28", "57.9185, 104.088, -28.9804, 0.55", "58.6783, 105.561, -29.414, 0.28", "58.8286, 105.849, -29.5089, 0.55", "59.4154, 106.953, -29.9024, 0.28", "59.9728, 107.971, -30.2901, 0.55", "60.7592, 109.323, -30.7654, 0.28", "61.5814, 110.626, -31.1872, 0.55", "62.8781, 112.506, -31.7555, 0.55", "63.8158, 113.847, -32.135, 0.28", "64.5508, 114.896, -32.3861, 0.55", "65.2885, 115.94, -32.5798, 0.28", "66.3078, 117.386, -32.769, 0.55", "67.8169, 119.494, -32.8947, 0.28", "68.5362, 120.513, -32.8813, 0.28", "70.1305, 122.795, -32.7118, 0.55", "71.2217, 124.355, -32.5849, 0.28", "72.182, 125.746, -32.5173, 0.55", "73.2004, 127.253, -32.4721, 0.28", "73.7677, 128.111, -32.4578, 0.55", "74.4155, 129.093, -32.4778, 0.28", "75.4829, 130.888, -32.6111, 0.55", "76.3084, 132.422, -32.7578, 0.28", "77.3359, 134.629, -33.0122, 0.55", "77.8546, 135.934, -33.1888, 0.28", "78.2851, 137.073, -33.348, 0.55", "78.9139, 138.84, -33.5759, 0.28", "79.5352, 140.682, -33.7594, 0.55", "80.1567, 142.509, -33.8958, 0.28", "80.6061, 143.798, -34.0116, 0.55", "81.272, 145.563, -34.1747, 0.28", "81.6328, 146.374, -34.2298, 0.55", "82.4938, 148.208, -34.3236, 0.55", "83.5147, 150.298, -34.3031, 0.55", "84.5069, 152.225, -34.24, 0.28", "85.2459, 153.621, -34.1652, 0.55", "87.0432, 157.059, -33.8636, 0.28", "87.7635, 158.4, -33.725, 0.55", "89.1217, 160.858, -33.361, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "23.4655, 43.6714, -19.6705, 0.55", "24.905, 46.6956, -20.8452, 0.55", "26.0509, 49.1524, -21.6655, 0.55", "26.5831, 50.3609, -22.2394, 0.28", "26.9038, 51.2439, -22.7322, 0.83", "27.5465, 53.3086, -23.8988, 0.55", "27.8291, 54.5009, -24.5871, 0.28", "28.3336, 58.1637, -26.786, 0.83", "28.8051, 63.1079, -30.0858, 0.55", "29.0092, 65.3473, -31.6895, 0.28", "29.0436, 66.3825, -32.6013, 0.83", "29.0389, 69.2105, -35.3289, 0.55", "28.9327, 72.2192, -38.2394, 0.55", "28.7381, 74.2931, -40.2188, 0.28", "28.5772, 75.8864, -41.6469, 0.83", "28.0158, 83.0193, -47.7097, 0.55", "27.8874, 84.9253, -49.2447, 0.55", "27.7782, 86.8871, -50.6502, 0.83", "27.5432, 90.5515, -52.8727, 0.55", "27.4427, 92.4361, -53.8587, 0.83", "27.3753, 94.9994, -54.9998, 0.28", "27.407, 96.6306, -55.4701, 0.55", "27.4482, 99.6789, -56.3705, 0.28", "27.4876, 101.035, -56.7866, 0.55", "27.6405, 103.553, -57.4928, 0.28", "27.7495, 105.003, -57.9531, 0.55", "27.9682, 107.602, -58.8176, 0.28", "28.2608, 110.431, -59.8971, 0.83", "28.805, 114.59, -61.6252, 0.28", "29.0798, 116.307, -62.4207, 0.83", "29.7669, 119.975, -64.235, 0.28", "29.8746, 120.514, -64.5178, 0.55", "30.5601, 122.977, -65.8621, 0.28", "30.8807, 124.075, -66.5301, 0.83", "31.6223, 126.642, -68.2602, 0.28", "32.1568, 128.457, -69.5895, 0.55", "33.0425, 131.443, -71.8337, 0.28", "33.9961, 134.67, -74.2554, 0.28", "35.2994, 139.149, -77.6126, 0.83", "36.3521, 142.492, -80.0714, 0.55", "37.1978, 144.98, -81.8154, 0.28", "37.6345, 146.119, -82.5932, 0.55", "38.5414, 148.342, -84.0404, 0.28", "38.9646, 149.495, -84.7941, 0.55", "40.2346, 153.234, -87.2794, 0.28", "41.0819, 155.763, -89.1556, 0.55", "42.2927, 159.344, -92.1133, 0.28", "42.8337, 160.938, -93.5662, 0.55", "44.4341, 165.91, -98.4334, 1.38", "45.7961, 170.261, -102.839, 0.28", "46.5223, 172.622, -105.332, 0.55", "47.166, 174.647, -107.479, 0.28", "47.6713, 176.296, -109.111, 0.28", "48.0313, 177.438, -110.145, 0.55", "48.5639, 179.094, -111.395, 0.55", "49.1489, 181.489, -113.013, 0.28", "49.3179, 182.706, -113.851, 0.55", "49.5908, 185.774, -115.921, 0.28", "49.7316, 187.697, -117.223, 0.55", "49.8301, 190.382, -119.09, 0.28", "49.8245, 192.555, -120.555, 0.55", "49.6378, 197.037, -123.394, 0.28", "49.5229, 199.662, -124.912, 0.28", "49.444, 203.064, -126.752, 0.55", "49.4096, 206.708, -128.615, 0.28", "49.3689, 208.915, -129.725, 0.28", "49.4435, 211.102, -130.789, 0.28", "49.5834, 213.263, -131.812, 0.55", "49.8417, 215.586, -132.969, 0.55", "50.4264, 219.108, -134.75, 0.28", "50.894, 220.972, -135.72, 0.83", "52.0282, 224.47, -137.524, 0.55", "52.8879, 226.735, -138.603, 0.28", "53.6231, 228.597, -139.433, 0.55", "54.7726, 231.31, -140.418, 0.28", "56.0966, 233.846, -141.195, 0.55", "57.6485, 236.439, -141.891, 0.28", "58.8764, 238.222, -142.352, 0.55", "60.9162, 240.828, -142.991, 0.28", "62.4166, 242.517, -143.392, 0.55", "65.3086, 245.388, -144.013, 0.28", "66.1408, 246.108, -144.192, 0.55", "69.7797, 248.697, -145.036, 0.28", "70.7042, 249.272, -145.237, 0.55", "72.7091, 250.33, -145.629, 0.28", "73.6604, 250.783, -145.866, 0.55", "75.1928, 251.365, -146.237, 0.28", "76.8582, 251.822, -146.676, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-79.2269, 78.2989, -25.593, 0.28", "-79.339, 80.6372, -25.5812, 0.28", "-79.5774, 83.5169, -25.5259, 0.83", "-79.8447, 87.944, -25.509, 0.28", "-79.8844, 88.9257, -25.5694, 0.55", "-79.9373, 90.6391, -25.7324, 0.28", "-79.9791, 92.0765, -25.8995, 0.55", "-80.0191, 93.7816, -26.2106, 0.28", "-80.0326, 96.1586, -26.7604, 0.55", "-80.0971, 98.994, -27.5737, 0.55", "-80.1899, 101.097, -28.2388, 0.28", "-80.5515, 106.523, -29.8846, 0.55", "-80.9162, 109.962, -30.7974, 0.28", "-81.0561, 110.866, -30.9932, 0.55", "-81.8578, 114.872, -31.6111, 0.28", "-82.4867, 117.748, -31.8659, 0.55", "-83.1565, 120.727, -31.987, 0.28", "-83.999, 124.486, -32.0106, 0.55", "-84.6096, 127.58, -31.9282, 0.28", "-84.8739, 129.318, -31.8864, 0.55", "-85.0801, 131.052, -31.8593, 0.28", "-85.2622, 133.471, -32.0275, 0.55", "-85.4608, 137.943, -32.7101, 0.28", "-85.5558, 140.393, -33.295, 0.55", "-85.7583, 143.705, -34.2349, 0.28", "-85.9351, 145.191, -34.6942, 0.55", "-86.7054, 149.247, -36.0838, 0.28", "-86.8882, 149.958, -36.3325, 0.55", "-87.8124, 152.919, -37.3617, 0.28", "-88.4106, 154.621, -37.9, 1.11", "-89.7467, 158.21, -38.6936, 0.28", "-90.8997, 161.239, -39.0691, 0.28", "-91.5772, 162.879, -39.1184, 0.55", "-92.785, 165.88, -39.0796, 0.28", "-93.6911, 168.11, -38.9288, 0.55", "-95.0551, 171.373, -38.6609, 0.28", "-95.7592, 172.946, -38.4699, 0.55", "-96.6853, 174.926, -38.1632, 0.28", "-97.1745, 175.905, -38.0373, 0.55", "-97.8579, 177.181, -37.9399, 0.28", "-98.3789, 178.152, -38.0456, 0.55", "-99.3629, 179.966, -38.4201, 0.28", "-99.986, 181.163, -38.7274, 0.55", "-100.306, 181.837, -38.9353, 0.28", "-100.782, 182.899, -39.3064, 0.55", "-101.528, 184.641, -40.0016, 0.28", "-102.649, 187.182, -41.0389, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-79.2269, 78.2989, -25.593, 0.55", "-80.5973, 79.4693, -26.8144, 0.55", "-81.913, 80.6228, -28.0466, 0.28", "-83.3231, 81.8256, -29.4695, 0.83", "-85.1594, 83.3854, -31.4378, 0.83", "-86.722, 84.7175, -33.1296, 0.55", "-88.1979, 85.9868, -34.7134, 0.28", "-89.0456, 86.7514, -35.69, 0.55", "-90.3779, 87.9824, -37.2194, 0.28", "-90.8325, 88.4112, -37.7307, 0.55", "-91.9017, 89.4546, -38.7702, 0.28", "-92.3907, 89.9969, -39.16, 0.55", "-93.4037, 91.2506, -39.7678, 0.28", "-93.7397, 91.7083, -39.9444, 0.55", "-94.778, 93.3129, -40.4127, 0.28", "-94.9108, 93.5296, -40.4786, 0.55", "-95.5784, 94.7119, -40.8831, 0.28", "-96.0464, 95.6043, -41.2664, 0.55", "-97.0662, 97.6144, -42.1154, 0.28", "-97.3814, 98.2813, -42.4155, 0.55", "-97.8497, 99.2948, -42.8772, 0.28", "-97.9545, 99.5084, -42.993, 0.55", "-98.8957, 101.283, -43.9217, 0.28", "-99.5558, 102.525, -44.5267, 0.55", "-100.09, 103.546, -45.0274, 0.28", "-100.978, 105.297, -45.9308, 0.55", "-102.933, 109.398, -48.3343, 0.28", "-104.033, 111.792, -49.8029, 0.28", "-104.501, 112.89, -50.4861, 0.55", "-105.208, 114.742, -51.6957, 0.28", "-105.532, 115.657, -52.2805, 0.55", "-106.522, 118.666, -54.0491, 0.28", "-107.004, 120.291, -54.8892, 0.28", "-107.352, 121.448, -55.4617, 0.55", "-108.629, 125.388, -57.1759, 0.28", "-108.958, 126.369, -57.5547, 0.55", "-110.649, 131.206, -59.2734, 0.28", "-110.847, 131.746, -59.4307, 0.55", "-111.333, 133.032, -59.8217, 0.28", "-111.933, 134.463, -60.2321, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-76.3503, 55.9117, 2.28032, 0.83", "-77.6936, 56.5453, 2.36059, 0.83", "-79.0407, 57.2791, 2.35662, 0.28", "-80.2099, 57.8974, 2.27543, 0.55", "-81.0701, 58.3306, 2.20235, 0.55", "-81.8041, 58.7253, 2.1502, 0.28", "-82.7168, 59.2167, 2.15599, 0.55", "-83.4517, 59.7141, 2.18868, 0.28", "-84.5385, 60.5158, 2.28749, 0.55", "-85.1592, 61.0138, 2.40502, 0.83", "-86.4374, 62.1281, 2.75489, 0.83", "-88.231, 63.6502, 3.4063, 0.55", "-89.981, 65.075, 4.14004, 0.55", "-91.1378, 66.0108, 4.68052, 0.55", "-92.7055, 67.3203, 5.47774, 0.55", "-93.9284, 68.3059, 6.09485, 0.55", "-95.1803, 69.275, 6.70031, 0.55", "-96.2497, 70.0576, 7.14089, 0.55", "-96.8582, 70.4496, 7.38571, 0.28", "-97.1849, 70.6662, 7.51302, 0.55", "-98.0452, 71.1825, 7.76551, 0.55", "-99.4176, 72.0726, 8.09691, 0.55", "-102.005, 74.0893, 8.5894, 0.55", "-106.731, 79.3301, 11.278, 0.55", "-111.33, 84.7877, 13.7882, 0.55", "-116.555, 89.5381, 16.3717, 0.55", "-120.791, 95.3977, 18.6894, 0.55", "-124.863, 101.066, 21.6557, 0.55", "-128.513, 106.722, 25.1547, 0.55", "-132.624, 111.277, 29.4995, 0.55", "-135.865, 116.568, 33.8287, 0.55", "-138.063, 121.394, 39.1896, 0.55", "-139.262, 125.968, 45.0459, 0.55", "-140.951, 130.527, 50.7902, 0.55", "-143.298, 135.358, 56.0832, 0.55", "-145.327, 139.407, 62.0567, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-76.3503, 55.9117, 2.28032, 0.83", "-78.3944, 58.407, 2.50328, 0.83", "-80.2416, 60.6233, 2.67548, 0.83", "-81.991, 62.8061, 2.82391, 0.83", "-82.8919, 63.9322, 2.89272, 0.55", "-84.3944, 65.8141, 2.99758, 0.83", "-85.9797, 67.7316, 3.11368, 0.55", "-87.6614, 69.6931, 3.24698, 0.55", "-89.8193, 72.1941, 3.46708, 0.83", "-91.3184, 73.9102, 3.62429, 0.55", "-93.0553, 75.89, 3.78933, 0.55", "-94.3386, 77.2645, 3.89787, 0.55", "-96.9693, 79.8407, 4.07897, 0.83", "-98.5319, 81.18, 4.14279, 0.55", "-99.6221, 81.9847, 4.15492, 1.11", "-100.953, 82.8156, 4.17643, 0.55", "-102.527, 83.6045, 4.2768, 0.55", "-104.98, 84.6294, 4.54943, 0.83", "-106.985, 85.2491, 4.84316, 0.55", "-108.958, 85.8786, 5.2674, 0.55", "-111.128, 86.639, 5.85743, 0.55", "-114.58, 87.8313, 6.96739, 0.83", "-116.233, 88.422, 7.54801, 0.55", "-118.536, 89.1888, 8.36249, 0.55", "-121.484, 90.2843, 9.34909, 0.55", "-122.751, 90.7962, 9.71336, 0.55", "-125.414, 91.9982, 10.3013, 0.28", "-126.555, 92.5248, 10.4924, 0.83", "-128.881, 93.5294, 10.791, 0.28", "-131.564, 94.6482, 10.9355, 0.28", "-133.118, 95.2423, 10.8947, 0.28", "-134.131, 95.678, 10.7898, 0.28", "-134.57, 95.9014, 10.7006, 0.55", "-136.747, 97.0088, 10.1364, 0.28", "-138.52, 97.975, 9.56467, 0.28", "-140.142, 98.787, 8.97065, 0.55", "-141.819, 99.6624, 8.34383, 0.28", "-142.569, 100.048, 8.0841, 0.55", "-143.642, 100.583, 7.77155, 0.28", "-144.414, 101.001, 7.60449, 0.55", "-145.346, 101.425, 7.53774, 0.28", "-146.373, 101.809, 7.40788, 0.55", "-147.367, 102.181, 7.30086, 0.28", "-148.127, 102.475, 7.2006, 0.55", "-149.078, 102.849, 7.07004, 0.28", "-149.838, 103.176, 6.97018, 0.55", "-152.574, 104.487, 6.54362, 0.28", "-154.226, 105.224, 6.34832, 0.55", "-155.353, 105.734, 6.20691, 1.11", "-156.926, 106.461, 6.00854, 0.55", "-158.355, 107.099, 5.85387, 0.55", "-160.926, 108.271, 5.65353, 0.55", "-162.798, 109.116, 5.76165, 0.55", "-170.826, 112.95, 7.06731, 0.55", "-178.471, 117.757, 7.22826, 0.55", "-185.292, 123.773, 6.9538, 0.55", "-192.539, 128.858, 5.12268, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.59234, -32.7813, -5.82238, 0.83", "-8.47419, -35.6309, -6.47338, 0.83", "-8.36147, -38.3496, -7.09448, 0.83", "-8.13871, -43.7222, -8.32183, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.59234, -32.7813, -5.82238, 0.55", "-8.55499, -34.1413, -5.15601, 0.55", "-8.62387, -36.2266, -4.1595, 0.55", "-8.91411, -39.4533, -2.7156, 0.55", "-9.08456, -41.0388, -1.99431, 0.55", "-9.27241, -44.0754, -0.464632, 0.83", "-9.35344, -45.576, 0.365699, 0.55", "-9.39484, -46.7779, 1.08514, 0.55", "-9.45766, -48.1057, 1.87731, 0.55", "-9.68469, -50.5182, 3.31848, 0.83", "-10.0155, -54.0962, 5.50606, 0.55", "-10.1939, -55.9057, 6.60519, 0.55", "-10.3613, -57.7061, 7.73501, 0.55", "-10.6342, -60.7521, 9.60619, 0.55", "-10.9104, -63.4733, 11.2684, 0.55", "-11.1421, -65.0953, 12.2223, 0.83", "-11.7846, -68.3442, 14.0078, 0.55", "-12.1121, -69.8891, 14.8397, 0.55", "-12.8007, -73.0063, 16.5489, 0.55", "-13.3277, -75.2777, 17.816, 0.28", "-13.7161, -76.8551, 18.6454, 0.28", "-14.5081, -79.6043, 20.0931, 0.28", "-15.0338, -81.1739, 20.8579, 0.55", "-16.4444, -87.7056, 23.5244, 0.55", "-19.3425, -93.8248, 25.8571, 0.55", "-23.6622, -99.1987, 27.5975, 0.55", "-28.8307, -103.882, 28.7689, 0.55", "-34.3278, -107.69, 30.9114, 0.55", "-39.3289, -111.853, 33.5874, 0.55", "-45.0934, -115.476, 35.2817, 0.55", "-50.5642, -118.992, 37.8935, 0.55", "-55.7738, -123.574, 39.2298, 0.55", "-61.9583, -126.753, 40.0561, 0.55", "-68.7205, -128.394, 40.2968, 0.55", "-75.5805, -128.695, 41.383, 0.55", "-82.0735, -129.479, 43.7404, 0.55", "-88.4981, -130.701, 46.1054, 0.55", "-95.2824, -131.257, 47.5168, 0.55", "-101.656, -132.525, 49.9941, 0.55", "-107.961, -133.222, 52.8379, 0.55", "-113.836, -133.282, 56.5602, 0.55", "-118.748, -132.465, 61.4371, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-15.5138, -33.5013, 4.02203, 0.83", "-17.7977, -34.3016, 1.37315, 0.83", "-18.7728, -34.6433, 0.242245, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.5138, -33.5013, 4.02203, 0.55", "-14.62, -37.3168, 1.94092, 0.55", "-13.7774, -43.4374, -0.66605, 0.55", "-13.4802, -45.5054, -1.56951, 0.55", "-13.2251, -46.9802, -2.42966, 0.55", "-12.7959, -49.6066, -4.19915, 0.55", "-12.3685, -52.7395, -6.6382, 0.55", "-12.2943, -55.1295, -8.88531, 0.28", "-12.3277, -57.06, -10.8665, 0.83", "-12.3004, -61.9894, -16.3071, 0.55", "-12.2393, -64.1859, -18.6768, 0.83", "-12.1918, -67.0396, -21.6603, 0.55", "-12.1191, -69.8129, -24.3598, 0.55", "-12.0235, -71.2274, -25.6079, 0.55", "-11.7772, -73.7709, -27.5013, 0.83", "-11.0884, -79.2316, -30.9279, 0.83", "-10.5519, -82.9584, -33.2188, 0.55", "-10.2833, -84.7697, -34.0899, 0.55", "-9.75069, -88.5295, -35.5293, 0.83", "-9.59709, -90.0799, -36.0103, 0.55", "-9.34268, -93.2071, -36.9536, 0.83", "-8.87483, -99.2855, -38.8285, 0.55", "-8.43177, -107.869, -41.1154, 0.55", "-8.45675, -109.801, -41.5543, 0.83", "-8.78666, -113.406, -42.2155, 0.83", "-9.36125, -118.276, -43.3103, 0.83", "-9.58276, -121.438, -44.1132, 0.55", "-9.60491, -124.822, -45.6028, 0.55", "-9.52759, -127.375, -47.4168, 0.83", "-9.42717, -129.473, -49.1151, 0.28", "-9.22124, -132.348, -51.6113, 0.55", "-9.05454, -134.898, -54.1115, 0.55", "-8.64231, -139.637, -59.0599, 0.55", "-8.29612, -142.664, -62.5165, 0.28", "-8.15705, -143.92, -63.9608, 0.55", "-7.89136, -147.682, -68.2061, 0.83", "-7.93901, -152.828, -73.6361, 0.28", "-8.12305, -155.076, -75.8279, 0.55", "-8.43456, -158.458, -78.5303, 0.28", "-8.56863, -160.476, -79.9154, 0.83", "-8.65548, -162.921, -81.3332, 0.28", "-8.59439, -165.168, -82.3218, 0.83", "-8.26217, -167.939, -83.4053, 0.83", "-7.56486, -171.847, -85.0822, 0.28", "-6.95988, -174.32, -86.233, 1.66", "-6.07343, -176.932, -87.6306, 0.28", "-5.07681, -179.421, -89.0019, 0.55", "-2.74413, -184.291, -92.2641, 0.28", "-1.62213, -186.364, -93.9685, 0.55", "-0.0688345, -189.044, -96.5908, 0.28", "1.12498, -190.995, -98.6557, 0.55", "2.72728, -193.523, -101.489, 0.55", "5.11875, -197.096, -105.554, 0.83", "7.35929, -200.235, -108.978, 0.83", "9.12658, -202.453, -111.47, 0.28", "9.90426, -203.325, -112.508, 0.55", "11.4001, -204.859, -114.444, 0.28", "12.3568, -205.686, -115.53, 0.28", "14.1655, -207.073, -117.041, 0.28", "15.8446, -208.22, -118.316, 0.83", "19.6718, -210.616, -121.165, 0.28", "20.2626, -210.981, -121.605, 0.55", "21.7181, -211.9, -122.778, 0.28", "23.0591, -212.851, -123.96, 0.55", "26.5062, -215.509, -127.419, 0.28", "27.3974, -216.295, -128.406, 0.28", "28.6971, -217.661, -129.914, 0.55", "30.5954, -220.005, -132.504, 0.28", "31.519, -221.451, -134.012, 0.55", "33.0688, -224.532, -136.983, 0.28", "34.3051, -228.198, -139.886, 0.55", "34.6348, -230.095, -141.362, 0.55", "34.6689, -232.195, -143.025, 0.55", "34.2955, -234.937, -145.149, 0.28", "34.0432, -235.829, -145.928, 0.28", "32.4218, -240.128, -149.887, 0.55", "30.3523, -244.633, -154.365, 0.55", "29.2489, -247.043, -156.776, 0.28", "27.8915, -250.279, -159.883, 0.83", "26.0342, -254.777, -163.998, 0.28", "25.0403, -257.326, -166.169, 0.55", "23.8849, -260.68, -168.689, 0.55", "22.6609, -265.401, -171.493, 0.55", "21.5668, -271.045, -174.253, 0.28", "20.9206, -274.64, -175.75, 0.55", "20.6206, -276.444, -176.382, 0.28", "20.1592, -279.086, -177.23, 0.55", "19.5237, -283.313, -178.503, 0.28", "19.1567, -285.347, -179.237, 0.83", "18.2785, -289.321, -181.01, 0.28", "17.8071, -291.49, -182.302, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "89.1217, 160.858, -33.361, 0.28", "93.5809, 162.146, -32.1333, 0.28", "95.0105, 162.559, -31.7397, 0.55", "98.5703, 163.588, -30.7596, 0.28", "99.8819, 163.967, -30.3986, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "89.1217, 160.858, -33.361, 0.28", "90.4372, 161.834, -32.6979, 0.28", "91.1677, 162.371, -32.3261, 0.55", "93.1834, 163.877, -31.3077, 0.28", "94.2317, 164.614, -30.7813, 0.55", "96.99, 166.448, -29.4468, 0.28", "98.1048, 167.143, -28.9907, 0.55", "99.1829, 167.681, -28.5422, 0.28", "99.8599, 167.985, -28.2629, 0.55", "101.23, 168.493, -27.7588, 0.28", "101.856, 168.667, -27.5614, 0.55", "104.634, 168.881, -27.6852, 0.28", "106.938, 168.354, -28.1054, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.13871, -43.7222, -8.32183, 0.55", "-7.57749, -46.1416, -8.15515, 0.55", "-7.10283, -47.9719, -8.02422, 0.83", "-6.16242, -51.1171, -7.78988, 0.83", "-5.44076, -53.2948, -7.7279, 0.55", "-4.7598, -55.3167, -7.75292, 0.83", "-4.29252, -56.6469, -7.77524, 0.28", "-3.13143, -59.8296, -7.92238, 0.55", "-2.63242, -61.1128, -7.96482, 0.28", "-1.73741, -63.385, -8.00195, 0.83", "-0.71953, -65.8368, -7.93831, 0.83", "0.0258908, -67.6749, -7.74436, 0.28", "0.563285, -69.1581, -7.47991, 0.55", "1.27208, -71.5149, -6.89989, 0.28", "1.89547, -73.9217, -6.14777, 0.83", "2.43509, -76.091, -5.33808, 0.83", "2.90312, -77.9987, -4.65773, 0.83", "3.17996, -79.2899, -4.29133, 1.11", "3.52743, -80.8806, -3.90818, 1.11", "4.10658, -83.5508, -3.47296, 0.55", "4.40804, -84.8975, -3.29871, 0.83", "4.97936, -87.1944, -3.09901, 0.55", "5.81361, -90.3032, -2.90058, 0.28", "6.21764, -91.7544, -2.80219, 0.55", "6.95707, -94.2684, -2.66656, 0.55", "7.27644, -95.3369, -2.63743, 0.28", "8.23881, -98.5941, -2.60834, 0.55", "9.02278, -101.102, -2.52665, 0.28", "9.74356, -103.188, -2.41331, 0.55", "10.4492, -105.161, -2.23689, 0.28", "10.9105, -106.481, -2.04889, 0.55", "11.4123, -108.025, -1.74325, 0.28", "12.1001, -110.205, -1.16737, 0.55", "12.6045, -111.662, -0.718354, 0.28", "13.309, -113.665, -0.146381, 0.55", "14.6384, -117.269, 0.763987, 0.28", "15.3752, -119.119, 1.20896, 0.55", "17.1054, -123.181, 1.97245, 0.28", "17.9118, -125.04, 2.14945, 0.55", "19.1295, -127.768, 2.35234, 0.28", "19.9959, -129.68, 2.46149, 0.28", "21.0476, -131.991, 2.57242, 0.28", "21.7968, -133.897, 2.56119, 0.55", "22.8291, -137.135, 2.41913, 0.28", "23.5952, -140.134, 2.21051, 0.55", "24.3581, -144.068, 1.91662, 0.28", "24.5652, -145.611, 1.75579, 0.55", "24.8781, -149.765, 1.24335, 0.28", "24.8938, -151.62, 0.995037, 0.55", "24.781, -153.878, 0.595546, 0.28", "24.629, -155.372, 0.219178, 0.55", "24.3142, -157.551, -0.322174, 0.28", "23.9816, -159.82, -0.770644, 0.55", "23.5096, -163.105, -1.28394, 0.28", "23.3702, -164.288, -1.4491, 0.55", "23.2387, -166.056, -1.63747, 0.28", "23.1462, -168.135, -1.8747, 0.55", "23.1166, -171.157, -2.24048, 0.28", "23.2654, -172.801, -2.43566, 0.55", "23.5868, -174.146, -2.42826, 0.28", "23.9465, -175.305, -2.34993, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.13871, -43.7222, -8.32183, 0.55", "-8.24144, -46.0919, -10.1851, 0.55", "-8.26044, -46.827, -10.7476, 0.55", "-8.323, -49.1035, -12.4188, 0.55", "-8.43162, -53.2879, -15.4034, 0.55", "-8.59198, -57.3427, -18.156, 0.83", "-8.8446, -61.0589, -20.7208, 0.55", "-8.94584, -62.8944, -21.9776, 0.55", "-9.01547, -64.3085, -22.8937, 0.28", "-9.20479, -67.6127, -24.8332, 0.55", "-9.52039, -70.891, -26.4412, 0.55", "-10.0146, -74.0531, -27.8657, 0.55", "-10.6318, -77.7154, -29.3131, 0.55", "-11.3406, -81.9266, -30.8097, 0.55", "-11.8731, -84.8963, -31.6938, 0.83", "-12.3819, -87.5119, -32.2777, 0.83", "-12.8071, -89.588, -32.5859, 0.55", "-13.1088, -90.9218, -32.7082, 0.55", "-13.6788, -92.9621, -32.8847, 0.83", "-14.7342, -96.5887, -33.294, 0.55", "-15.3284, -98.9207, -33.6733, 0.28", "-15.6682, -100.353, -33.962, 0.83", "-16.2876, -102.733, -34.5378, 0.55", "-16.768, -104.689, -35.1729, 0.28", "-17.4202, -107.71, -36.2791, 0.55", "-17.8049, -110.496, -37.3814, 0.28", "-17.9463, -112.288, -38.0861, 0.28", "-17.989, -114.782, -39.0314, 0.83", "-17.868, -118.435, -40.3165, 0.28", "-17.6758, -121.546, -41.3434, 0.83", "-17.4369, -124.625, -42.2671, 0.28", "-17.3454, -125.66, -42.5051, 0.83", "-17.0812, -128.347, -43.0095, 0.55", "-16.9239, -130.095, -43.2509, 0.28", "-16.8204, -132.828, -43.4506, 0.55", "-16.826, -135.377, -43.572, 0.28", "-16.9971, -137.717, -43.6105, 0.55", "-17.2216, -140.121, -43.6473, 0.28", "-17.3693, -141.808, -43.685, 0.55", "-17.4034, -143.012, -43.7338, 0.28", "-17.3877, -143.68, -43.776, 0.55", "-17.004, -146.884, -44.205, 0.28", "-16.7909, -150.28, -44.2265, 0.83", "-16.6664, -153.024, -43.9498, 0.28", "-16.4005, -156.677, -43.315, 0.28", "-16.175, -158.637, -42.8666, 0.83", "-15.5169, -162.89, -41.5089, 0.28", "-13.3775, -175.34, -35.7801, 0.83", "-12.7505, -178.88, -33.9508, 0.55", "-12.1578, -181.567, -32.6252, 0.55", "-11.6487, -182.801, -32.3909, 0.55", "-11.1501, -183.645, -32.5041, 0.28", "-10.0023, -185.463, -32.8686, 0.55", "-8.1351, -188.363, -33.4314, 0.28", "-7.06334, -190.295, -33.6948, 0.55", "-5.60528, -193.263, -34.0766, 0.28", "-4.37074, -195.922, -34.5342, 0.83", "-3.17579, -198.584, -35.1889, 0.28", "-2.15428, -201.011, -36.0273, 0.55", "-0.653587, -205.227, -37.7382, 0.28", "-0.250653, -206.664, -38.4366, 0.55", "0.60957, -210.934, -40.8418, 0.28", "0.988058, -213.364, -42.5942, 0.55", "1.26398, -216.54, -45.2955, 0.28", "1.26369, -217.724, -46.4135, 0.55", "1.12502, -219.047, -47.7706, 0.28", "0.908798, -220.121, -49.0116, 0.55", "0.100684, -222.544, -52.2747, 0.28", "-0.270075, -223.431, -53.6211, 0.55", "-0.789224, -224.5, -55.4371, 0.55", "-1.61327, -226.279, -58.4543, 0.28", "-2.09299, -227.449, -60.314, 0.83", "-2.56755, -228.716, -62.156, 0.28", "-2.77525, -229.328, -62.9348, 0.55", "-3.30053, -231.152, -64.9983, 0.28", "-3.72576, -232.887, -66.7406, 0.55", "-4.27488, -235.368, -68.8362, 0.28", "-4.3999, -236.025, -69.338, 0.55", "-4.84543, -238.451, -71.0669, 0.28", "-5.15696, -240.153, -72.2516, 0.55", "-6.03676, -244.354, -75.2017, 0.28", "-6.46654, -246.036, -76.4275, 0.55", "-6.75248, -246.958, -77.0556, 0.28", "-6.87107, -247.329, -77.3126, 0.55", "-7.5314, -249.071, -78.504, 0.28", "-7.94262, -250.295, -79.5198, 0.55", "-8.3206, -251.343, -80.4515, 0.28", "-8.59711, -252.45, -81.5083, 0.55", "-9.07506, -254.874, -83.6667, 0.28", "-9.17059, -256.091, -84.8244, 0.55", "-9.13707, -260.123, -88.814, 0.28", "-8.95967, -261.96, -90.6514, 0.28", "-8.5114, -264.63, -93.2803, 0.28", "-8.12501, -266.401, -94.9385, 0.55", "-7.0836, -270.72, -98.4123, 0.55", "-6.79468, -271.787, -99.1472, 0.28", "-6.45587, -272.956, -99.8112, 0.55", "-6.06399, -274.196, -100.538, 0.28", "-5.79951, -275.327, -101.229, 0.55", "-5.54763, -276.742, -102.066, 0.28", "-5.43711, -278.167, -102.736, 0.55", "-5.10866, -283.613, -105.245, 0.28", "-5.04699, -284.909, -105.862, 0.55", "-4.8127, -290.916, -108.864, 0.28", "-4.75204, -292.579, -109.714, 0.55", "-4.55574, -299.137, -113.034, 0.28", "-4.52728, -300.971, -113.874, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-18.7728, -34.6433, 0.242245, 0.83", "-20.8756, -32.8532, -0.983718, 0.83", "-23.4389, -31.2007, -2.75601, 0.83", "-25.6617, -30.0735, -4.41859, 0.83", "-27.6482, -29.3316, -6.02242, 0.83", "-30.7884, -28.5994, -8.80028, 0.83", "-33.8482, -28.3159, -11.6513, 0.83", "-36.366, -28.6861, -14.1775, 0.55", "-38.0196, -29.1246, -15.8486, 0.55", "-39.5014, -29.5812, -17.327, 0.83", "-41.267, -30.0902, -18.9941, 0.55", "-43.0023, -30.4151, -20.3296, 0.55", "-45.9387, -30.5043, -22.2878, 0.55", "-47.9923, -30.0649, -23.3222, 0.55", "-50.2629, -29.2404, -24.2807, 0.55", "-51.4734, -28.62, -24.8653, 0.55", "-52.7197, -27.9307, -25.5037, 0.55", "-54.7224, -26.8869, -26.6553, 0.55", "-56.1468, -26.3872, -27.5552, 1.11", "-57.2683, -26.2164, -28.2919, 1.11", "-62.7393, -26.1481, -32.0913, 0.55", "-64.5627, -26.2551, -33.3985, 0.55", "-66.1216, -26.4255, -34.5517, 0.55", "-68.794, -26.7656, -36.6172, 0.55", "-71.1519, -26.9252, -38.7521, 0.55", "-73.0667, -26.8125, -40.9995, 0.55", "-73.8996, -26.6946, -42.2043, 0.28", "-74.4857, -26.5317, -43.2561, 0.83", "-75.8091, -25.9878, -45.9232, 0.83", "-77.4243, -25.0745, -49.6218, 0.83", "-79.1143, -23.848, -54.2208, 0.55", "-79.8091, -23.3056, -56.2489, 0.55", "-80.7219, -22.6783, -58.8113, 0.28", "-81.1872, -22.403, -60.0003, 0.83", "-82.1195, -21.8251, -62.2367, 0.55", "-83.0667, -20.9108, -64.4045, 0.55", "-84.2868, -19.3068, -67.2311, 0.28", "-84.9603, -18.4414, -68.7062, 1.11", "-85.4919, -17.8222, -69.9058, 0.83", "-86.7376, -16.5621, -72.7419, 0.83", "-88.288, -15.2792, -76.4033, 0.83", "-90.7897, -13.5229, -82.2389, 0.28", "-91.6115, -13.0292, -84.2235, 0.83", "-94.0123, -11.6699, -90.3031, 0.28", "-95.0674, -11.1669, -93.0708, 0.83", "-97.1543, -10.5043, -98.6305, 0.28", "-97.4596, -10.4699, -99.5267, 0.28", "-97.9787, -10.4854, -101.215, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.7728, -34.6433, 0.242245, 1.11", "-19.4017, -35.5028, 0.731246, 1.11", "-20.3337, -36.4182, 1.34184, 1.11", "-21.0213, -37.0512, 1.7509, 1.11", "-21.9615, -38.0252, 2.43588, 1.11", "-22.8458, -39.0737, 3.21005, 0.83", "-23.4568, -39.8204, 3.77918, 0.83", "-24.2454, -40.672, 4.51855, 0.83", "-25.3034, -41.6423, 5.44932, 0.83", "-26.7904, -42.9105, 6.65911, 1.11", "-27.6069, -43.5439, 7.2315, 0.83", "-28.3041, -44.0477, 7.685, 0.83", "-29.4684, -44.7967, 8.37133, 0.83", "-30.8334, -45.5577, 9.04722, 0.83", "-32.0414, -46.1074, 9.51805, 0.83", "-33.5139, -46.7333, 9.96402, 0.83", "-34.7187, -47.2262, 10.296, 0.83", "-35.7118, -47.6604, 10.5679, 0.83", "-36.5193, -48.0467, 10.7843, 1.11", "-37.5457, -48.5782, 11.0418, 0.83", "-38.6109, -49.1489, 11.3055, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-97.9787, -10.4854, -101.215, 0.28", "-101.703, -11.2591, -105.934, 0.28", "-102.669, -11.4446, -107.101, 0.55", "-104.519, -11.6772, -109.183, 0.28", "-105.901, -11.6317, -110.786, 0.28", "-107.823, -11.4452, -113.065, 0.55", "-110.83, -11.1093, -116.517, 0.28", "-111.74, -11.0298, -117.631, 0.55", "-113.459, -10.8798, -119.83, 1.11", "-117.006, -10.6539, -124.55, 0.28", "-118.902, -10.6728, -127.247, 0.55", "-121.096, -10.8288, -130.486, 0.55", "-124.674, -11.6632, -136.219, 0.55", "-126.216, -12.2288, -138.846, 0.55", "-128.077, -13.1293, -142.134, 0.55", "-129.416, -13.966, -144.531, 0.55", "-131.76, -15.5673, -148.929, 0.55", "-134.274, -17.4566, -153.926, 0.55", "-136.901, -19.3677, -158.718, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-97.9787, -10.4854, -101.215, 0.55", "-97.5698, -12.9607, -102.71, 0.55", "-96.997, -16.428, -104.802, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-38.6109, -49.1489, 11.3055, 0.55", "-40.5449, -51.0925, 11.9491, 0.55", "-42.0078, -52.5185, 12.3669, 0.55", "-43.7063, -53.9184, 12.882, 0.55", "-46.1016, -55.667, 13.642, 0.55", "-47.7499, -56.7003, 14.205, 0.55", "-51.2554, -58.7248, 15.4242, 0.55", "-54.5586, -60.6304, 16.5259, 0.55", "-57.9683, -62.6945, 17.5571, 0.55", "-60.0001, -63.9302, 18.247, 0.55", "-62.7067, -65.5688, 19.2251, 0.55", "-65.3594, -67.2406, 20.2837, 0.55", "-67.3957, -68.4724, 21.2027, 0.55", "-72.2497, -71.3004, 23.6093, 0.55", "-75.843, -73.4288, 25.6213, 0.55", "-77.1537, -74.2847, 26.4669, 0.83", "-79.1372, -75.771, 27.9344, 0.55", "-80.969, -77.1671, 29.537, 0.55", "-82.8319, -78.6493, 31.3556, 0.55", "-84.6437, -80.1442, 33.1739, 0.55", "-87.1924, -82.6157, 35.5335, 0.55", "-89.5604, -85.0156, 37.7089, 0.55", "-91.8931, -87.4337, 39.7687, 0.55", "-93.6851, -89.3, 41.3635, 0.55", "-96.6482, -92.1587, 44.0605, 0.55", "-99.1184, -94.0567, 46.1509, 0.55", "-101.209, -95.2853, 47.8595, 0.55", "-103.021, -96.1657, 49.3099, 0.55", "-105.121, -97.1535, 50.9167, 0.55", "-107.679, -98.3757, 52.9205, 0.83", "-110.175, -99.6883, 54.8519, 0.55", "-112.071, -100.715, 56.176, 0.55", "-114.46, -102.188, 57.6647, 0.55", "-115.814, -103.088, 58.407, 0.55", "-118.413, -104.853, 59.6261, 0.55", "-120.85, -106.674, 60.5883, 0.55", "-123.289, -108.459, 61.5505, 0.55", "-124.401, -109.234, 61.9633, 0.83", "-127.381, -111.14, 62.9514, 0.55", "-129.525, -112.372, 63.5987, 0.55", "-135.352, -115.564, 65.0875, 0.55", "-138.451, -117.146, 65.9658, 0.55", "-142.478, -118.976, 67.2706, 0.55", "-144.659, -119.87, 68.1648, 0.55", "-146.751, -120.564, 69.2762, 1.38", "-150.386, -121.51, 71.7334, 0.55", "-153.691, -122.094, 74.6567, 0.55", "-156.163, -122.663, 77.431, 0.55", "-158.576, -123.164, 80.6785, 0.55", "-160.612, -123.6, 83.7382, 0.55", "-162.063, -123.926, 86.1609, 0.55", "-163.9, -124.43, 89.5378, 0.55", "-166.575, -125.567, 94.6432, 0.55", "-167.741, -126.183, 96.9269, 0.55", "-168.224, -126.456, 97.8149, 0.55", "-169.147, -127.0, 99.3787, 0.28", "-170.072, -127.46, 100.814, 0.83", "-172.399, -128.193, 103.518, 0.28", "-173.653, -128.327, 104.734, 0.28", "-175.362, -128.342, 106.335, 0.55", "-178.284, -128.241, 108.911, 0.55", "-182.181, -128.041, 112.126, 0.28", "-185.711, -127.858, 114.918, 0.28", "-188.817, -127.705, 117.2, 0.55", "-190.303, -127.621, 118.303, 0.55", "-192.493, -127.556, 119.911, 0.55", "-194.798, -127.551, 121.691, 0.28", "-195.679, -127.556, 122.235, 0.55", "-197.181, -127.634, 123.09, 0.28", "-197.636, -127.681, 123.289, 0.55", "-200.249, -127.771, 124.298, 0.28", "-201.915, -127.723, 124.918, 0.83", "-204.596, -127.59, 125.814, 0.28", "-206.937, -127.479, 126.556, 0.28", "-210.039, -127.388, 127.457, 0.28", "-212.862, -127.268, 128.211, 0.28", "-223.429, -132.233, 132.896, 0.28", "-232.659, -138.817, 138.448, 0.28", "-241.503, -144.877, 145.04, 0.28", "-250.067, -151.291, 151.687, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-38.6109, -49.1489, 11.3055, 0.55", "-39.4417, -52.0171, 10.5038, 0.55", "-40.0713, -54.3563, 9.70675, 0.55", "-40.3958, -55.607, 9.20388, 0.55", "-40.8717, -57.2584, 8.52323, 0.83", "-41.958, -60.6402, 7.19444, 0.83", "-42.7992, -63.1833, 6.27066, 0.55", "-43.3725, -64.7212, 5.74222, 0.83", "-44.1936, -66.8054, 5.08207, 0.55", "-44.9136, -68.5264, 4.55942, 0.55", "-46.1454, -71.2095, 3.82812, 0.55", "-47.6323, -74.225, 3.11956, 0.55", "-49.4454, -77.8814, 2.41608, 0.55", "-50.0228, -79.0299, 2.21487, 0.55", "-51.8484, -82.7025, 1.63237, 0.55", "-52.7554, -84.653, 1.26371, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-136.901, -19.3677, -158.718, 0.55", "-139.096, -19.1656, -162.207, 0.55", "-140.022, -19.1281, -163.551, 0.55", "-141.667, -19.0088, -165.735, 0.55", "-142.367, -18.9426, -166.58, 0.55", "-143.973, -18.8043, -168.43, 0.55", "-146.212, -18.6183, -170.943, 0.55", "-147.407, -18.4766, -172.092, 0.55", "-148.368, -18.3626, -172.969, 0.55", "-149.342, -18.3136, -173.744, 0.55", "-150.47, -18.2621, -174.609, 0.55", "-151.358, -18.1744, -175.172, 0.55", "-152.148, -18.0118, -175.603, 0.28", "-153.247, -17.7783, -176.224, 0.55", "-155.378, -17.3976, -177.733, 0.28", "-155.725, -17.3783, -178.023, 0.28", "-156.158, -17.3946, -178.419, 0.55", "-157.345, -17.539, -179.583, 0.55", "-158.155, -17.7204, -180.443, 0.55", "-160.475, -18.5639, -183.199, 0.55", "-162.138, -19.3107, -185.235, 0.55", "-162.911, -19.7155, -186.225, 0.55", "-163.692, -20.2113, -187.31, 0.55", "-164.277, -20.6988, -188.221, 0.55", "-165.155, -21.59, -189.715, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-136.901, -19.3677, -158.718, 0.55", "-135.104, -17.5266, -159.251, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-52.7554, -84.653, 1.26371, 0.55", "-54.5126, -86.8404, 1.05437, 0.55", "-55.8421, -88.2927, 0.738154, 0.28", "-57.2065, -89.4161, 0.426863, 0.55", "-59.3326, -90.8477, -0.407637, 0.55", "-61.1221, -91.7933, -1.33665, 0.28", "-61.8462, -92.1697, -1.77051, 0.83", "-64.4338, -93.3588, -3.4121, 0.55", "-66.9515, -94.3763, -4.9873, 0.55", "-70.8014, -95.6419, -7.56765, 0.55", "-74.3352, -96.6452, -9.95626, 0.55", "-78.2345, -97.7329, -12.5905, 0.55", "-79.4218, -98.0652, -13.3691, 0.55", "-81.3893, -98.6533, -14.6166, 0.55", "-83.815, -99.3526, -16.0323, 0.55", "-87.5668, -100.313, -18.023, 0.55", "-89.3366, -100.723, -19.072, 0.55", "-92.5934, -101.527, -21.2417, 0.55", "-94.8258, -102.204, -22.903, 0.28", "-97.4191, -103.157, -24.9861, 0.55", "-100.678, -104.547, -27.658, 0.55", "-104.952, -106.469, -31.2853, 0.55", "-107.751, -107.84, -33.6558, 0.55", "-109.09, -108.619, -34.8616, 0.28", "-110.743, -109.691, -36.4338, 0.55", "-113.349, -111.504, -38.9998, 0.28", "-114.076, -111.988, -39.6629, 0.28", "-114.791, -112.443, -40.3048, 0.28", "-117.306, -113.83, -42.5129, 1.38", "-120.216, -115.372, -44.9613, 0.55", "-121.772, -116.172, -46.2454, 0.28", "-122.46, -116.556, -46.8266, 0.55", "-124.199, -117.67, -48.2873, 0.28", "-125.28, -118.485, -49.1436, 0.55", "-126.515, -119.987, -49.804, 0.28", "-126.788, -120.389, -49.9007, 0.55", "-127.948, -122.305, -50.2524, 0.28", "-128.792, -123.774, -50.4672, 0.55", "-129.784, -125.562, -50.6664, 0.28", "-133.889, -133.177, -51.4753, 0.55", "-134.959, -135.199, -51.6689, 0.28", "-135.678, -136.534, -51.7799, 0.55", "-136.511, -138.018, -51.8463, 0.28", "-136.834, -138.618, -51.8787, 0.55", "-137.447, -139.831, -51.9176, 0.28", "-138.088, -141.199, -51.9861, 0.55", "-138.865, -142.772, -52.0881, 0.28", "-140.075, -145.14, -52.239, 0.83", "-141.306, -147.476, -52.3589, 0.28", "-142.252, -149.282, -52.4365, 0.28", "-143.734, -152.147, -52.5165, 0.55", "-145.232, -155.029, -52.6246, 0.28", "-146.682, -157.977, -52.6402, 0.28", "-147.023, -158.669, -52.6345, 0.55", "-148.128, -160.841, -52.5301, 0.28", "-148.755, -162.133, -52.4976, 0.55", "-149.793, -164.476, -52.391, 0.28", "-150.766, -167.361, -52.1789, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-52.7554, -84.653, 1.26371, 0.28", "-51.2249, -87.3872, 1.51785, 0.28", "-50.1186, -89.2956, 1.75214, 0.28", "-49.6025, -90.1857, 1.86142, 0.55", "-48.8337, -91.5118, 2.02423, 0.28", "-48.2236, -92.5642, 2.15343, 0.55", "-46.1816, -96.0865, 2.58587, 0.28", "-44.7303, -98.7433, 3.1591, 0.55", "-37.2257, -109.639, 5.4666, 0.55", "-29.361, -120.526, 5.98373, 0.55", "-21.3371, -131.294, 6.29211, 0.55", "-13.3152, -142.07, 6.42021, 0.55", "-2.91378, -150.291, 6.95091, 0.55", "6.94713, -159.14, 5.62872, 0.55", "15.3906, -169.548, 5.96439, 0.55", "22.2927, -181.016, 4.16021, 0.55", "28.4272, -193.087, 4.31778, 0.55", "34.0844, -205.391, 4.97326, 0.55", "40.9351, -217.028, 5.04587, 0.55", "48.6095, -228.081, 4.75827, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-165.155, -21.59, -189.715, 0.28", "-166.768, -22.3568, -190.307, 0.28", "-168.512, -22.6338, -191.813, 0.28", "-170.208, -22.7928, -193.371, 0.28", "-171.862, -22.8891, -194.837, 0.28", "-173.806, -22.9071, -196.446, 0.28", "-175.733, -22.5943, -199.009, 0.28", "-178.875, -21.6492, -204.51, 0.28", "-179.489, -21.3816, -205.855, 0.55", "-179.977, -21.1041, -207.07, 0.28", "-180.459, -20.8462, -208.3, 0.55", "-184.424, -19.2638, -218.468, 0.55", "-184.887, -19.13, -219.521, 0.28", "-185.864, -19.0527, -221.642, 0.55", "-186.839, -19.0359, -223.617, 0.55", "-188.073, -19.2163, -225.999, 0.55", "-189.187, -19.6111, -227.83, 0.55", "-190.546, -20.3275, -229.368, 0.55", "-192.1, -21.158, -231.259, 0.83", "-192.525, -21.4316, -231.802, 0.83", "-193.932, -22.5093, -233.807, 0.28", "-195.393, -23.6145, -235.844, 0.55", "-197.113, -24.6695, -237.783, 0.28", "-197.825, -25.1406, -238.539, 0.55", "-198.99, -25.895, -239.723, 0.28", "-199.692, -26.304, -240.403, 0.28", "-200.851, -26.7519, -241.268, 0.55", "-203.513, -27.6342, -242.724, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-165.155, -21.59, -189.715, 0.55", "-164.237, -23.9981, -190.302, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "axon_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "axon_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L23_NBC_d359064733_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, axon_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, axon_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4500000145978539)
    connect dend_35(0), soma_0(0.4500000145978539)
    connect dend_28(0), soma_0(0.4500000145978539)
    connect dend_21(0), soma_0(0.4500000145978539)
    connect dend_0(0), soma_0(0.4500000145978539)
    connect axon_0(0), soma_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.36225, -9.19447, -1.05898, 3.37379 ) }
    soma_0 { pt3dadd( -7.5192, -8.3328, -0.983264, 5.59841 ) }
    soma_0 { pt3dadd( -6.67615, -7.47114, -0.907549, 5.3333 ) }
    soma_0 { pt3dadd( -5.8331, -6.60947, -0.831834, 5.68073 ) }
    soma_0 { pt3dadd( -4.99005, -5.7478, -0.756119, 6.02816 ) }
    soma_0 { pt3dadd( -4.147, -4.88613, -0.680404, 6.37559 ) }
    soma_0 { pt3dadd( -3.30395, -4.02446, -0.604689, 6.72117 ) }
    soma_0 { pt3dadd( -2.46089, -3.16279, -0.528974, 6.8656 ) }
    soma_0 { pt3dadd( -1.61784, -2.30113, -0.453259, 6.93412 ) }
    soma_0 { pt3dadd( -0.774793, -1.43946, -0.377544, 6.84096 ) }
    soma_0 { pt3dadd( 0.0682572, -0.577789, -0.301829, 6.68704 ) }
    soma_0 { pt3dadd( 0.911308, 0.28388, -0.226114, 6.6716 ) }
    soma_0 { pt3dadd( 1.75436, 1.14555, -0.150399, 6.90842 ) }
    soma_0 { pt3dadd( 2.59741, 2.00722, -0.0746836, 7.45096 ) }
    soma_0 { pt3dadd( 3.44046, 2.86888, 0.00103138, 8.43414 ) }
    soma_0 { pt3dadd( 4.28351, 3.73055, 0.0767464, 9.41614 ) }
    soma_0 { pt3dadd( 5.12656, 4.59222, 0.152461, 10.0048 ) }
    soma_0 { pt3dadd( 5.96961, 5.45389, 0.228176, 10.3326 ) }
    soma_0 { pt3dadd( 6.81266, 6.31556, 0.303891, 9.50982 ) }
    soma_0 { pt3dadd( 7.65571, 7.17723, 0.379606, 7.06842 ) }
    soma_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 3.91086 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 7.80497, 1.25302, 15.3717, 0.83 ) }
    dend_38 { pt3dadd( 8.78585, -1.42045, 15.9734, 0.83 ) }
    dend_38 { pt3dadd( 9.68548, -3.79748, 16.5719, 0.83 ) }
    dend_38 { pt3dadd( 10.4894, -5.73259, 17.0743, 0.83 ) }
    dend_38 { pt3dadd( 12.2301, -9.45968, 18.0634, 1.38 ) }
    dend_38 { pt3dadd( 13.8242, -12.5474, 18.8496, 0.83 ) }
    dend_38 { pt3dadd( 15.3187, -15.2589, 19.4741, 0.83 ) }
    dend_38 { pt3dadd( 16.7273, -17.6759, 19.9975, 0.55 ) }
    dend_38 { pt3dadd( 18.3491, -20.0817, 20.4653, 1.11 ) }
    dend_38 { pt3dadd( 20.0041, -22.0722, 20.7399, 0.55 ) }
    dend_38 { pt3dadd( 21.5799, -23.5733, 20.7558, 0.55 ) }
    dend_38 { pt3dadd( 23.5732, -25.1385, 20.5532, 0.55 ) }
    dend_38 { pt3dadd( 25.4724, -26.4418, 20.1484, 0.55 ) }
    dend_38 { pt3dadd( 27.0245, -27.4247, 19.6237, 0.55 ) }
    dend_38 { pt3dadd( 28.6089, -28.3316, 18.7972, 0.55 ) }
    dend_38 { pt3dadd( 30.4316, -29.38, 17.502, 0.55 ) }
    dend_38 { pt3dadd( 31.4577, -30.0224, 16.6403, 1.11 ) }
    dend_38 { pt3dadd( 33.1334, -31.2342, 15.0806, 0.28 ) }
    dend_38 { pt3dadd( 34.1454, -32.1013, 14.0441, 0.55 ) }
    dend_38 { pt3dadd( 36.5869, -34.498, 11.4315, 0.55 ) }
    dend_38 { pt3dadd( 38.0695, -36.0923, 9.90453, 0.55 ) }
    dend_38 { pt3dadd( 39.9185, -38.2313, 8.07957, 0.28 ) }
    dend_38 { pt3dadd( 41.2222, -39.8126, 6.95334, 0.83 ) }
    dend_38 { pt3dadd( 43.5415, -42.7656, 4.90119, 0.28 ) }
    dend_38 { pt3dadd( 44.2715, -43.7448, 4.24744, 0.55 ) }
    dend_38 { pt3dadd( 45.4816, -45.3411, 3.19688, 0.28 ) }
    dend_38 { pt3dadd( 46.6534, -46.7381, 2.15551, 0.28 ) }
    dend_38 { pt3dadd( 47.564, -47.7364, 1.2418, 0.83 ) }
    dend_38 { pt3dadd( 50.9416, -51.2874, -2.32098, 0.28 ) }
    dend_38 { pt3dadd( 51.6522, -52.0559, -3.08394, 1.11 ) }
    dend_38 { pt3dadd( 53.1853, -53.7489, -4.75319, 0.28 ) }
    dend_38 { pt3dadd( 54.2453, -54.989, -5.97383, 0.83 ) }
    dend_38 { pt3dadd( 57.0732, -58.3608, -9.15219, 0.28 ) }
    dend_38 { pt3dadd( 57.9492, -59.5551, -10.1567, 0.55 ) }
    dend_38 { pt3dadd( 58.9192, -61.1238, -11.1639, 0.28 ) }
    dend_38 { pt3dadd( 59.5781, -62.3308, -11.9007, 1.11 ) }
    dend_38 { pt3dadd( 60.585, -64.4104, -13.1604, 0.28 ) }
    dend_38 { pt3dadd( 61.1409, -65.6396, -13.9252, 0.83 ) }
    dend_38 { pt3dadd( 62.9606, -69.6826, -16.556, 0.28 ) }
    dend_38 { pt3dadd( 64.6374, -73.2459, -19.0572, 0.28 ) }
    dend_38 { pt3dadd( 65.3553, -74.6984, -20.0849, 0.55 ) }
    dend_38 { pt3dadd( 66.3789, -76.6944, -21.4563, 0.28 ) }
    dend_38 { pt3dadd( 66.7017, -77.3063, -21.8273, 0.55 ) }
    dend_38 { pt3dadd( 67.7778, -79.2754, -22.888, 0.28 ) }
    dend_38 { pt3dadd( 68.6339, -80.7383, -23.5137, 0.83 ) }
    dend_38 { pt3dadd( 70.1532, -83.2969, -24.3611, 0.28 ) }
    dend_38 { pt3dadd( 70.5262, -83.9409, -24.5163, 0.55 ) }
    dend_38 { pt3dadd( 72.1837, -86.8493, -24.9826, 0.28 ) }
    dend_38 { pt3dadd( 73.0558, -88.4107, -25.1821, 0.55 ) }
    dend_38 { pt3dadd( 73.5605, -89.3476, -25.2393, 0.28 ) }
    dend_38 { pt3dadd( 74.3185, -90.77, -25.3304, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 72/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.135, 1.73602, 1.42168, 0.83 ) }
    dend_35 { pt3dadd( 11.1443, 1.35996, 0.504687, 0.83 ) }
    dend_35 { pt3dadd( 12.6158, 0.148915, -1.3153, 1.11 ) }
    dend_35 { pt3dadd( 13.6657, -0.844914, -2.61269, 1.11 ) }
    dend_35 { pt3dadd( 15.6221, -2.62192, -4.93519, 1.38 ) }
    dend_35 { pt3dadd( 17.4158, -4.03681, -6.79349, 1.11 ) }
    dend_35 { pt3dadd( 18.601, -4.95014, -7.91291, 1.66 ) }
    dend_35 { pt3dadd( 20.4605, -6.6993, -9.77234, 0.83 ) }
    dend_35 { pt3dadd( 21.2792, -7.72603, -10.7313, 0.83 ) }
    dend_35 { pt3dadd( 21.9643, -8.83017, -11.6958, 1.11 ) }
    dend_35 { pt3dadd( 23.1581, -11.2837, -13.8033, 1.11 ) }
    dend_35 { pt3dadd( 23.7475, -12.4502, -14.9252, 1.11 ) }
    dend_35 { pt3dadd( 24.6198, -14.255, -16.7272, 0.83 ) }
    dend_35 { pt3dadd( 25.3543, -16.0672, -18.5376, 0.83 ) }
    dend_35 { pt3dadd( 25.8258, -17.7623, -20.2375, 0.83 ) }
    dend_35 { pt3dadd( 26.1839, -20.0596, -22.5106, 0.83 ) }
    dend_35 { pt3dadd( 26.2613, -23.5867, -26.1993, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.38497, 9.91549, 2.58168, 2.49 ) }
    dend_28 { pt3dadd( 10.1037, 13.5128, 1.51608, 2.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.93503, -7.10498, -4.25832, 0.83 ) }
    dend_21 { pt3dadd( -11.5989, -6.37975, -4.28331, 0.83 ) }
    dend_21 { pt3dadd( -14.5499, -4.7335, -4.30843, 0.83 ) }
    dend_21 { pt3dadd( -16.2666, -3.49593, -4.3371, 0.55 ) }
    dend_21 { pt3dadd( -18.6162, -1.6073, -4.38521, 0.83 ) }
    dend_21 { pt3dadd( -20.0009, -0.391925, -4.41498, 0.83 ) }
    dend_21 { pt3dadd( -22.1232, 1.58127, -4.45938, 1.11 ) }
    dend_21 { pt3dadd( -23.9028, 3.49405, -4.49694, 0.83 ) }
    dend_21 { pt3dadd( -25.1574, 4.92508, -4.52044, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( -26.1898, 6.0455, -4.53579, 1.11 ) }
    dend_21 { pt3dadd( -28.3689, 8.15845, -4.56322, 0.83 ) }
    dend_21 { pt3dadd( -30.3587, 10.1188, -4.60397, 0.83 ) }
    dend_21 { pt3dadd( -32.4352, 12.1978, -4.7702, 0.83 ) }
    dend_21 { pt3dadd( -34.8538, 14.5551, -5.07088, 1.11 ) }
    dend_21 { pt3dadd( -36.9295, 16.6468, -5.35547, 0.83 ) }
    dend_21 { pt3dadd( -38.2004, 18.01, -5.5323, 0.83 ) }
    dend_21 { pt3dadd( -41.0246, 21.2395, -5.92923, 0.83 ) }
    dend_21 { pt3dadd( -43.2719, 23.9666, -6.23172, 0.55 ) }
    dend_21 { pt3dadd( -45.4511, 26.7744, -6.41623, 0.55 ) }
    dend_21 { pt3dadd( -47.1922, 29.0542, -6.42076, 0.83 ) }
    dend_21 { pt3dadd( -49.1464, 31.5648, -6.19258, 0.83 ) }
    dend_21 { pt3dadd( -50.493, 33.2197, -5.95752, 0.55 ) }
    dend_21 { pt3dadd( -51.8803, 34.7595, -5.60103, 0.83 ) }
    dend_21 { pt3dadd( -53.3734, 36.5196, -5.01315, 0.55 ) }
    dend_21 { pt3dadd( -55.1, 38.7405, -4.21635, 0.55 ) }
    dend_21 { pt3dadd( -57.185, 41.2178, -3.25268, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.47503, -10.8325, -6.25832, 2.49 ) }
    dend_0 { pt3dadd( -7.67543, -17.1338, -6.16736, 2.49 ) }
    dend_0 { pt3dadd( -8.3756, -20.8092, -6.1143, 1.66 ) }
    dend_0 { pt3dadd( -9.05122, -24.3557, -6.0631, 2.77 ) }
    dend_0 { pt3dadd( -9.64244, -27.4593, -6.0183, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 22/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 18.9889, 18.7607, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 29.479, 29.4825, 0.455321, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 25/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 26.2613, -23.5867, -26.1993, 0.55 ) }
    dend_37 { pt3dadd( 27.4245, -24.3987, -27.7297, 0.55 ) }
    dend_37 { pt3dadd( 28.6974, -25.4535, -29.2819, 0.55 ) }
    dend_37 { pt3dadd( 32.8771, -29.2495, -34.1933, 0.55 ) }
    dend_37 { pt3dadd( 34.568, -30.7289, -36.0679, 0.55 ) }
    dend_37 { pt3dadd( 36.0382, -31.8776, -37.6343, 0.55 ) }
    dend_37 { pt3dadd( 38.5553, -33.7152, -40.2338, 0.83 ) }
    dend_37 { pt3dadd( 40.9895, -35.3159, -42.6886, 0.83 ) }
    dend_37 { pt3dadd( 43.0838, -36.701, -44.7971, 0.55 ) }
    dend_37 { pt3dadd( 44.1907, -37.4985, -45.9403, 0.55 ) }
    dend_37 { pt3dadd( 46.0393, -38.8702, -48.3066, 0.55 ) }
    dend_37 { pt3dadd( 47.2834, -39.75, -50.082, 0.83 ) }
    dend_37 { pt3dadd( 48.1165, -40.4028, -51.3867, 0.28 ) }
    dend_37 { pt3dadd( 49.5686, -41.7015, -53.8337, 0.55 ) }
    dend_37 { pt3dadd( 51.5715, -43.8299, -57.3797, 0.83 ) }
    dend_37 { pt3dadd( 53.4593, -46.0184, -60.5223, 0.55 ) }
    dend_37 { pt3dadd( 54.5531, -47.3004, -62.083, 0.55 ) }
    dend_37 { pt3dadd( 56.2195, -48.9984, -63.9895, 0.55 ) }
    dend_37 { pt3dadd( 57.9658, -50.4927, -65.5358, 0.28 ) }
    dend_37 { pt3dadd( 59.1878, -51.343, -66.3326, 0.83 ) }
    dend_37 { pt3dadd( 62.9766, -53.5139, -68.1588, 0.55 ) }
    dend_37 { pt3dadd( 65.3989, -54.6154, -69.1182, 0.28 ) }
    dend_37 { pt3dadd( 68.4118, -55.6576, -70.3587, 0.55 ) }
    dend_37 { pt3dadd( 70.1168, -56.0942, -71.0421, 0.28 ) }
    dend_37 { pt3dadd( 71.6999, -56.4412, -71.6236, 0.55 ) }
    dend_37 { pt3dadd( 73.7051, -56.7942, -72.467, 0.28 ) }
    dend_37 { pt3dadd( 75.5731, -57.0556, -73.3788, 0.55 ) }
    dend_37 { pt3dadd( 78.4729, -57.4171, -75.0008, 0.28 ) }
    dend_37 { pt3dadd( 80.031, -57.6774, -76.0423, 0.55 ) }
    dend_37 { pt3dadd( 81.5749, -58.0818, -77.2313, 0.55 ) }
    dend_37 { pt3dadd( 83.2731, -58.6578, -79.5783, 0.28 ) }
    dend_37 { pt3dadd( 83.8185, -58.8401, -80.543, 0.28 ) }
    dend_37 { pt3dadd( 84.4899, -59.111, -81.9969, 0.55 ) }
    dend_37 { pt3dadd( 85.9033, -59.7629, -85.487, 0.28 ) }
    dend_37 { pt3dadd( 87.0342, -60.3161, -88.5254, 0.83 ) }
    dend_37 { pt3dadd( 91.4993, -62.5451, -101.014, 0.28 ) }
    dend_37 { pt3dadd( 91.9642, -62.7794, -102.412, 0.55 ) }
    dend_37 { pt3dadd( 92.8912, -63.2206, -105.326, 0.55 ) }
    dend_37 { pt3dadd( 93.8052, -63.6662, -108.29, 0.28 ) }
    dend_37 { pt3dadd( 94.5128, -63.9823, -110.474, 0.55 ) }
    dend_37 { pt3dadd( 96.9477, -64.9832, -117.414, 0.55 ) }
    dend_37 { pt3dadd( 99.2803, -66.0496, -122.829, 0.55 ) }
    dend_37 { pt3dadd( 100.422, -66.5568, -125.354, 0.28 ) }
    dend_37 { pt3dadd( 101.23, -66.8673, -127.03, 0.55 ) }
    dend_37 { pt3dadd( 101.971, -67.1766, -128.515, 0.28 ) }
    dend_37 { pt3dadd( 103.044, -67.7654, -130.488, 0.55 ) }
    dend_37 { pt3dadd( 103.986, -68.4726, -132.048, 0.28 ) }
    dend_37 { pt3dadd( 105.037, -69.4159, -133.748, 0.55 ) }
    dend_37 { pt3dadd( 105.879, -70.2306, -135.351, 0.55 ) }
    dend_37 { pt3dadd( 107.098, -71.3713, -137.836, 0.28 ) }
    dend_37 { pt3dadd( 108.363, -72.5942, -140.42, 0.55 ) }
    dend_37 { pt3dadd( 109.898, -74.1592, -143.669, 0.28 ) }
    dend_37 { pt3dadd( 110.922, -75.2417, -145.841, 0.55 ) }
    dend_37 { pt3dadd( 112.877, -77.5258, -149.92, 0.28 ) }
    dend_37 { pt3dadd( 113.393, -78.0824, -150.856, 0.55 ) }
    dend_37 { pt3dadd( 114.621, -79.2813, -152.821, 0.28 ) }
    dend_37 { pt3dadd( 116.508, -81.0401, -155.472, 0.55 ) }
    dend_37 { pt3dadd( 117.98, -82.3667, -157.216, 0.28 ) }
    dend_37 { pt3dadd( 119.464, -83.7408, -158.841, 0.55 ) }
    dend_37 { pt3dadd( 120.794, -85.049, -160.254, 0.28 ) }
    dend_37 { pt3dadd( 122.201, -86.5043, -161.883, 0.55 ) }
    dend_37 { pt3dadd( 122.8, -87.1365, -162.689, 0.28 ) }
    dend_37 { pt3dadd( 123.571, -87.9459, -164.043, 0.55 ) }
    dend_37 { pt3dadd( 124.484, -89.0753, -166.207, 0.28 ) }
    dend_37 { pt3dadd( 124.804, -89.4854, -167.059, 0.55 ) }
    dend_37 { pt3dadd( 125.035, -89.8059, -167.733, 0.28 ) }
    dend_37 { pt3dadd( 125.891, -91.1334, -170.4, 0.55 ) }
    dend_37 { pt3dadd( 127.927, -94.8059, -177.514, 0.28 ) }
    dend_37 { pt3dadd( 128.312, -95.6301, -179.083, 0.55 ) }
    dend_37 { pt3dadd( 128.65, -96.5199, -180.596, 0.28 ) }
    dend_37 { pt3dadd( 128.93, -97.2506, -181.691, 0.28 ) }
    dend_37 { pt3dadd( 129.344, -98.2983, -183.108, 0.55 ) }
    dend_37 { pt3dadd( 130.319, -100.7, -185.696, 0.28 ) }
    dend_37 { pt3dadd( 131.245, -102.664, -187.55, 0.55 ) }
    dend_37 { pt3dadd( 132.247, -104.477, -189.162, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( 133.633, -106.749, -190.991, 0.28 ) }
    dend_37 { pt3dadd( 135.594, -109.65, -192.759, 0.83 ) }
    dend_37 { pt3dadd( 137.312, -112.003, -193.73, 0.28 ) }
    dend_37 { pt3dadd( 140.41, -116.373, -194.488, 0.55 ) }
    dend_37 { pt3dadd( 142.579, -119.714, -194.556, 0.28 ) }
    dend_37 { pt3dadd( 143.437, -121.123, -194.461, 0.55 ) }
    dend_37 { pt3dadd( 146.156, -126.139, -193.641, 0.28 ) }
    dend_37 { pt3dadd( 147.289, -128.43, -193.111, 0.55 ) }
    dend_37 { pt3dadd( 148.831, -131.766, -192.332, 0.28 ) }
    dend_37 { pt3dadd( 149.536, -133.386, -191.942, 0.28 ) }
    dend_37 { pt3dadd( 150.214, -134.972, -191.74, 0.55 ) }
    dend_37 { pt3dadd( 151.586, -137.935, -191.579, 0.28 ) }
    dend_37 { pt3dadd( 153.148, -140.955, -191.785, 0.28 ) }
    dend_37 { pt3dadd( 153.967, -142.436, -191.963, 0.55 ) }
    dend_37 { pt3dadd( 155.886, -145.613, -192.518, 0.28 ) }
    dend_37 { pt3dadd( 157.479, -148.136, -193.016, 0.55 ) }
    dend_37 { pt3dadd( 159.267, -151.001, -193.679, 0.28 ) }
    dend_37 { pt3dadd( 160.498, -152.845, -194.344, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 18/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 26.2613, -23.5867, -26.1993, 1.11 ) }
    dend_36 { pt3dadd( 26.8044, -26.3082, -27.0975, 1.11 ) }
    dend_36 { pt3dadd( 27.5549, -29.3321, -28.1611, 0.55 ) }
    dend_36 { pt3dadd( 28.1264, -31.4338, -28.9112, 0.55 ) }
    dend_36 { pt3dadd( 28.8536, -33.9554, -29.7794, 0.55 ) }
    dend_36 { pt3dadd( 29.4484, -36.0514, -30.4329, 0.55 ) }
    dend_36 { pt3dadd( 30.1252, -38.409, -31.1519, 0.83 ) }
    dend_36 { pt3dadd( 30.8004, -40.6867, -31.8041, 0.55 ) }
    dend_36 { pt3dadd( 31.3248, -42.3206, -32.173, 0.28 ) }
    dend_36 { pt3dadd( 31.7916, -43.7575, -32.4508, 0.55 ) }
    dend_36 { pt3dadd( 32.4638, -46.0279, -32.7686, 0.28 ) }
    dend_36 { pt3dadd( 32.8445, -47.3858, -32.9043, 0.55 ) }
    dend_36 { pt3dadd( 33.5061, -49.6385, -33.2063, 0.55 ) }
    dend_36 { pt3dadd( 34.0706, -51.1653, -33.4642, 0.28 ) }
    dend_36 { pt3dadd( 34.3867, -51.8126, -33.6332, 0.55 ) }
    dend_36 { pt3dadd( 35.2687, -53.3373, -34.1573, 0.28 ) }
    dend_36 { pt3dadd( 36.9505, -55.8682, -35.1033, 0.55 ) }
    dend_36 { pt3dadd( 38.778, -58.3234, -35.9916, 0.28 ) }
    dend_36 { pt3dadd( 40.1743, -59.9754, -36.638, 0.83 ) }
    dend_36 { pt3dadd( 42.1707, -62.1514, -37.4542, 0.28 ) }
    dend_36 { pt3dadd( 43.9606, -64.0775, -38.1947, 0.55 ) }
    dend_36 { pt3dadd( 45.3246, -65.5311, -38.7442, 0.28 ) }
    dend_36 { pt3dadd( 47.2384, -67.6535, -39.422, 0.55 ) }
    dend_36 { pt3dadd( 48.5159, -69.1328, -39.8303, 0.55 ) }
    dend_36 { pt3dadd( 50.188, -71.2145, -40.4065, 0.55 ) }
    dend_36 { pt3dadd( 51.5741, -73.078, -40.8987, 0.28 ) }
    dend_36 { pt3dadd( 52.6924, -74.6564, -41.2952, 0.55 ) }
    dend_36 { pt3dadd( 53.3405, -75.6753, -41.5622, 0.28 ) }
    dend_36 { pt3dadd( 54.0188, -76.8254, -41.821, 0.55 ) }
    dend_36 { pt3dadd( 54.5496, -77.7539, -41.95, 0.28 ) }
    dend_36 { pt3dadd( 55.4593, -79.2964, -42.0409, 0.55 ) }
    dend_36 { pt3dadd( 56.4272, -80.8952, -41.9752, 0.28 ) }
    dend_36 { pt3dadd( 57.7884, -83.1352, -41.7893, 0.55 ) }
    dend_36 { pt3dadd( 58.8725, -84.8983, -41.574, 0.55 ) }
    dend_36 { pt3dadd( 60.1224, -86.9339, -41.2632, 0.28 ) }
    dend_36 { pt3dadd( 61.0875, -88.5929, -41.0069, 0.55 ) }
    dend_36 { pt3dadd( 62.0258, -90.2864, -40.7357, 0.28 ) }
    dend_36 { pt3dadd( 62.7519, -91.651, -40.5601, 0.55 ) }
    dend_36 { pt3dadd( 63.1386, -92.431, -40.4605, 0.28 ) }
    dend_36 { pt3dadd( 63.3446, -92.8768, -40.4389, 0.55 ) }
    dend_36 { pt3dadd( 64.1068, -94.5083, -40.4821, 0.28 ) }
    dend_36 { pt3dadd( 65.1188, -96.5959, -40.7095, 0.55 ) }
    dend_36 { pt3dadd( 65.7585, -97.7998, -40.8821, 0.28 ) }
    dend_36 { pt3dadd( 66.4864, -99.0599, -41.0678, 0.55 ) }
    dend_36 { pt3dadd( 67.5625, -100.789, -41.3325, 0.28 ) }
    dend_36 { pt3dadd( 68.2542, -101.864, -41.383, 0.55 ) }
    dend_36 { pt3dadd( 69.0092, -102.97, -41.4044, 0.28 ) }
    dend_36 { pt3dadd( 69.9262, -104.34, -41.4255, 0.55 ) }
    dend_36 { pt3dadd( 70.87, -105.703, -41.4328, 0.28 ) }
    dend_36 { pt3dadd( 71.4718, -106.521, -41.4408, 0.83 ) }
    dend_36 { pt3dadd( 73.6414, -109.362, -41.3949, 0.28 ) }
    dend_36 { pt3dadd( 75.2466, -111.379, -41.3635, 0.28 ) }
    dend_36 { pt3dadd( 76.1373, -112.462, -41.3409, 0.55 ) }
    dend_36 { pt3dadd( 76.8396, -113.233, -41.3812, 0.28 ) }
    dend_36 { pt3dadd( 78.3429, -114.66, -41.5998, 0.55 ) }
    dend_36 { pt3dadd( 79.4277, -115.531, -41.7951, 0.28 ) }
    dend_36 { pt3dadd( 80.8567, -116.42, -42.088, 0.55 ) }
    dend_36 { pt3dadd( 82.2268, -117.095, -42.2843, 0.28 ) }
    dend_36 { pt3dadd( 83.8157, -117.714, -42.472, 0.55 ) }
    dend_36 { pt3dadd( 85.7307, -118.317, -42.7642, 0.28 ) }
    dend_36 { pt3dadd( 86.9347, -118.609, -42.9758, 0.55 ) }
    dend_36 { pt3dadd( 89.1093, -119.038, -43.4204, 0.28 ) }
    dend_36 { pt3dadd( 90.6685, -119.278, -43.7355, 0.55 ) }
    dend_36 { pt3dadd( 91.9472, -119.436, -43.9639, 0.28 ) }
    dend_36 { pt3dadd( 93.9187, -119.715, -44.1599, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 10.1037, 13.5128, 1.51608, 1.38 ) }
    dend_34 { pt3dadd( 8.85201, 15.5609, -0.336267, 1.38 ) }
    dend_34 { pt3dadd( 7.13262, 18.7539, -3.56517, 1.38 ) }
    dend_34 { pt3dadd( 6.19816, 20.9553, -6.3187, 1.38 ) }
    dend_34 { pt3dadd( 5.10466, 23.8864, -9.98548, 1.11 ) }
    dend_34 { pt3dadd( 4.30361, 26.0658, -12.6935, 1.11 ) }
    dend_34 { pt3dadd( 3.46372, 27.9131, -15.049, 0.83 ) }
    dend_34 { pt3dadd( 2.49629, 29.555, -17.5542, 0.83 ) }
    dend_34 { pt3dadd( -0.0798167, 32.9808, -22.9721, 1.66 ) }
    dend_34 { pt3dadd( -1.1714, 34.302, -24.7023, 0.55 ) }
    dend_34 { pt3dadd( -1.64323, 34.9348, -25.2892, 0.55 ) }
    dend_34 { pt3dadd( -4.27894, 38.3183, -27.6893, 0.55 ) }
    dend_34 { pt3dadd( -5.50378, 39.737, -28.4835, 0.28 ) }
    dend_34 { pt3dadd( -8.40298, 43.1647, -29.8791, 0.83 ) }
    dend_34 { pt3dadd( -12.7048, 48.9085, -31.4431, 0.55 ) }
    dend_34 { pt3dadd( -14.4897, 51.8064, -32.1454, 0.55 ) }
    dend_34 { pt3dadd( -15.7133, 54.5035, -32.6669, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( -16.1052, 55.8333, -32.8566, 0.55 ) }
    dend_34 { pt3dadd( -16.5386, 57.9766, -33.0041, 0.83 ) }
    dend_34 { pt3dadd( -16.782, 60.7721, -32.9967, 0.55 ) }
    dend_34 { pt3dadd( -16.7682, 62.7481, -32.7627, 0.55 ) }
    dend_34 { pt3dadd( -16.6658, 65.5325, -32.529, 0.55 ) }
    dend_34 { pt3dadd( -16.574, 67.1208, -32.4413, 0.55 ) }
    dend_34 { pt3dadd( -16.5199, 69.9515, -32.3733, 0.55 ) }
    dend_34 { pt3dadd( -16.5721, 71.7665, -32.3712, 0.55 ) }
    dend_34 { pt3dadd( -16.7623, 74.1602, -32.5687, 0.83 ) }
    dend_34 { pt3dadd( -17.1273, 76.9087, -32.9602, 0.28 ) }
    dend_34 { pt3dadd( -17.4852, 78.8027, -33.3124, 0.83 ) }
    dend_34 { pt3dadd( -18.0675, 81.6792, -33.8915, 0.28 ) }
    dend_34 { pt3dadd( -18.468, 83.7155, -34.3293, 0.83 ) }
    dend_34 { pt3dadd( -19.2835, 87.8848, -35.206, 0.28 ) }
    dend_34 { pt3dadd( -19.5749, 89.5029, -35.5674, 0.28 ) }
    dend_34 { pt3dadd( -19.8111, 90.9539, -35.8895, 0.55 ) }
    dend_34 { pt3dadd( -20.2464, 94.3247, -36.7528, 0.83 ) }
    dend_34 { pt3dadd( -20.4331, 96.1821, -37.2344, 0.28 ) }
    dend_34 { pt3dadd( -20.5356, 97.1508, -37.4914, 0.55 ) }
    dend_34 { pt3dadd( -20.8728, 100.39, -38.2761, 0.28 ) }
    dend_34 { pt3dadd( -21.1409, 102.403, -38.8569, 0.83 ) }
    dend_34 { pt3dadd( -21.5321, 104.422, -39.5109, 0.28 ) }
    dend_34 { pt3dadd( -22.0309, 106.017, -40.0678, 0.55 ) }
    dend_34 { pt3dadd( -22.7359, 107.901, -40.7297, 0.28 ) }
    dend_34 { pt3dadd( -23.0342, 108.646, -40.967, 0.55 ) }
    dend_34 { pt3dadd( -23.8219, 110.534, -41.4826, 0.28 ) }
    dend_34 { pt3dadd( -24.2049, 111.539, -41.7826, 0.55 ) }
    dend_34 { pt3dadd( -25.3674, 114.998, -42.7902, 0.83 ) }
    dend_34 { pt3dadd( -25.9054, 116.897, -43.356, 0.55 ) }
    dend_34 { pt3dadd( -26.2936, 118.895, -43.9687, 0.28 ) }
    dend_34 { pt3dadd( -26.4968, 120.453, -44.461, 0.83 ) }
    dend_34 { pt3dadd( -26.7146, 123.956, -45.6663, 0.55 ) }
    dend_34 { pt3dadd( -26.7414, 125.679, -46.3107, 0.28 ) }
    dend_34 { pt3dadd( -26.6812, 126.548, -46.6617, 0.55 ) }
    dend_34 { pt3dadd( -26.4467, 129.061, -47.6841, 0.28 ) }
    dend_34 { pt3dadd( -26.3698, 129.633, -47.9188, 0.55 ) }
    dend_34 { pt3dadd( -25.8983, 132.512, -48.9858, 0.28 ) }
    dend_34 { pt3dadd( -25.6466, 134.005, -49.4864, 0.83 ) }
    dend_34 { pt3dadd( -25.1327, 137.038, -50.4285, 0.28 ) }
    dend_34 { pt3dadd( -24.9124, 138.381, -50.756, 0.55 ) }
    dend_34 { pt3dadd( -24.564, 140.752, -51.1719, 0.28 ) }
    dend_34 { pt3dadd( -24.2848, 142.584, -51.4116, 0.55 ) }
    dend_34 { pt3dadd( -23.8209, 145.827, -51.6544, 0.28 ) }
    dend_34 { pt3dadd( -23.6133, 148.343, -52.4224, 0.55 ) }
    dend_34 { pt3dadd( -23.543, 151.005, -53.6206, 0.55 ) }
    dend_34 { pt3dadd( -23.5336, 154.443, -55.5173, 0.28 ) }
    dend_34 { pt3dadd( -23.555, 156.269, -56.6589, 0.55 ) }
    dend_34 { pt3dadd( -23.6001, 158.365, -58.0971, 0.55 ) }
    dend_34 { pt3dadd( -23.9576, 170.88, -67.2824, 0.55 ) }
    dend_34 { pt3dadd( -24.0114, 172.458, -68.5158, 0.28 ) }
    dend_34 { pt3dadd( -24.04, 173.368, -69.2541, 0.55 ) }
    dend_34 { pt3dadd( -24.0932, 174.737, -70.3605, 0.28 ) }
    dend_34 { pt3dadd( -24.1247, 175.652, -71.0313, 0.55 ) }
    dend_34 { pt3dadd( -24.0894, 177.459, -71.8974, 0.55 ) }
    dend_34 { pt3dadd( -23.9449, 178.86, -71.8538, 0.28 ) }
    dend_34 { pt3dadd( -23.7838, 180.643, -71.8999, 0.55 ) }
    dend_34 { pt3dadd( -23.7064, 182.049, -71.9954, 0.55 ) }
    dend_34 { pt3dadd( -23.7045, 182.875, -72.1023, 0.28 ) }
    dend_34 { pt3dadd( -23.8079, 185.278, -72.5338, 0.55 ) }
    dend_34 { pt3dadd( -23.9929, 187.226, -73.0128, 0.55 ) }
    dend_34 { pt3dadd( -24.1113, 188.452, -73.3346, 0.28 ) }
    dend_34 { pt3dadd( -24.1559, 189.042, -73.4995, 0.55 ) }
    dend_34 { pt3dadd( -24.2604, 190.966, -74.0017, 0.28 ) }
    dend_34 { pt3dadd( -24.3312, 192.1, -74.253, 0.55 ) }
    dend_34 { pt3dadd( -24.4324, 194.049, -74.6551, 0.28 ) }
    dend_34 { pt3dadd( -24.5474, 197.19, -75.2599, 0.55 ) }
    dend_34 { pt3dadd( -24.6073, 201.08, -75.9707, 0.28 ) }
    dend_34 { pt3dadd( -24.6049, 203.725, -76.3824, 0.55 ) }
    dend_34 { pt3dadd( -24.5757, 205.683, -76.6363, 0.55 ) }
    dend_34 { pt3dadd( -24.5154, 208.282, -76.923, 0.55 ) }
    dend_34 { pt3dadd( -24.437, 210.319, -77.0705, 0.28 ) }
    dend_34 { pt3dadd( -24.35, 212.712, -77.1545, 0.55 ) }
    dend_34 { pt3dadd( -24.1697, 215.234, -77.1108, 0.55 ) }
    dend_34 { pt3dadd( -24.1248, 215.626, -77.0944, 0.28 ) }
    dend_34 { pt3dadd( -23.9665, 216.632, -77.0536, 0.28 ) }
    dend_34 { pt3dadd( -23.382, 219.773, -76.9205, 0.55 ) }
    dend_34 { pt3dadd( -22.8812, 221.965, -76.9558, 0.83 ) }
    dend_34 { pt3dadd( -22.3409, 223.906, -76.9929, 0.28 ) }
    dend_34 { pt3dadd( -21.8295, 225.41, -77.0292, 0.55 ) }
    dend_34 { pt3dadd( -20.6259, 228.17, -76.8669, 0.28 ) }
    dend_34 { pt3dadd( -19.4673, 230.27, -76.5888, 0.55 ) }
    dend_34 { pt3dadd( -17.7, 232.782, -76.0667, 0.28 ) }
    dend_34 { pt3dadd( -15.5828, 235.224, -75.3947, 0.55 ) }
    dend_34 { pt3dadd( -14.0176, 236.716, -74.9141, 0.55 ) }
    dend_34 { pt3dadd( -10.4771, 239.722, -73.6956, 0.28 ) }
    dend_34 { pt3dadd( -9.1988, 240.65, -73.1866, 0.28 ) }
    dend_34 { pt3dadd( -8.09094, 241.346, -72.7159, 0.55 ) }
    dend_34 { pt3dadd( -6.30691, 242.328, -71.9423, 0.28 ) }
    dend_34 { pt3dadd( -3.4564, 243.817, -71.1507, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 10.1037, 13.5128, 1.51608, 0.83 ) }
    dend_29 { pt3dadd( 10.8585, 16.829, 0.531178, 0.83 ) }
    dend_29 { pt3dadd( 11.8206, 19.9002, -0.488741, 0.83 ) }
    dend_29 { pt3dadd( 13.2419, 23.1072, -1.80145, 0.83 ) }
    dend_29 { pt3dadd( 14.5904, 25.769, -3.17641, 1.38 ) }
    dend_29 { pt3dadd( 15.5556, 27.7287, -4.27027, 0.83 ) }
    dend_29 { pt3dadd( 16.3205, 29.3914, -5.36716, 0.55 ) }
    dend_29 { pt3dadd( 17.5284, 32.1208, -7.51906, 0.55 ) }
    dend_29 { pt3dadd( 18.7961, 34.8254, -9.85935, 0.83 ) }
    dend_29 { pt3dadd( 20.1639, 37.4301, -12.418, 0.83 ) }
    dend_29 { pt3dadd( 21.3424, 39.5369, -14.7821, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 23.1767, 42.9493, -18.816, 0.55 ) }
    dend_29 { pt3dadd( 23.4655, 43.6714, -19.6705, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -57.185, 41.2178, -3.25268, 0.55 ) }
    dend_25 { pt3dadd( -58.6011, 43.2443, -4.11996, 0.55 ) }
    dend_25 { pt3dadd( -59.9708, 45.2867, -5.12319, 0.55 ) }
    dend_25 { pt3dadd( -60.9268, 46.6495, -5.99763, 0.55 ) }
    dend_25 { pt3dadd( -62.365, 48.6463, -7.55567, 0.55 ) }
    dend_25 { pt3dadd( -63.2083, 49.819, -8.56131, 0.28 ) }
    dend_25 { pt3dadd( -64.1078, 51.0413, -9.61493, 0.83 ) }
    dend_25 { pt3dadd( -65.7513, 53.184, -11.8525, 0.55 ) }
    dend_25 { pt3dadd( -66.9251, 54.7832, -13.6949, 0.55 ) }
    dend_25 { pt3dadd( -67.7613, 55.9726, -15.103, 0.28 ) }
    dend_25 { pt3dadd( -68.5254, 57.0802, -16.3689, 0.55 ) }
    dend_25 { pt3dadd( -69.5714, 58.572, -17.9326, 0.55 ) }
    dend_25 { pt3dadd( -71.014, 60.7612, -20.0008, 0.55 ) }
    dend_25 { pt3dadd( -72.0035, 62.4975, -21.2677, 0.28 ) }
    dend_25 { pt3dadd( -72.8319, 64.1823, -22.138, 0.55 ) }
    dend_25 { pt3dadd( -73.5302, 65.7218, -22.7254, 0.28 ) }
    dend_25 { pt3dadd( -74.2539, 67.5008, -23.2413, 0.55 ) }
    dend_25 { pt3dadd( -74.5512, 68.2663, -23.4008, 0.55 ) }
    dend_25 { pt3dadd( -75.0517, 69.5033, -23.5719, 0.55 ) }
    dend_25 { pt3dadd( -75.7565, 71.1582, -23.8116, 0.28 ) }
    dend_25 { pt3dadd( -76.4318, 72.7584, -24.0945, 0.55 ) }
    dend_25 { pt3dadd( -77.0859, 74.2176, -24.4067, 0.28 ) }
    dend_25 { pt3dadd( -78.2818, 76.6079, -25.047, 0.55 ) }
    dend_25 { pt3dadd( -79.078, 78.0454, -25.4922, 0.28 ) }
    dend_25 { pt3dadd( -79.2269, 78.2989, -25.593, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -57.185, 41.2178, -3.25268, 0.55 ) }
    dend_22 { pt3dadd( -58.7252, 43.2938, -2.47888, 0.55 ) }
    dend_22 { pt3dadd( -59.7739, 44.5545, -2.05179, 0.55 ) }
    dend_22 { pt3dadd( -62.0987, 46.9534, -1.20422, 0.55 ) }
    dend_22 { pt3dadd( -63.4411, 48.1423, -0.797275, 0.83 ) }
    dend_22 { pt3dadd( -64.9307, 49.2501, -0.390361, 0.55 ) }
    dend_22 { pt3dadd( -67.1535, 50.9033, 0.216847, 0.55 ) }
    dend_22 { pt3dadd( -68.4471, 51.8516, 0.597263, 0.55 ) }
    dend_22 { pt3dadd( -71.0944, 53.5314, 1.31564, 0.83 ) }
    dend_22 { pt3dadd( -73.4029, 54.6428, 1.81579, 0.83 ) }
    dend_22 { pt3dadd( -76.3503, 55.9117, 2.28032, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.64244, -27.4593, -6.0183, 2.49 ) }
    dend_16 { pt3dadd( -9.09226, -30.2476, -5.91565, 2.49 ) }
    dend_16 { pt3dadd( -8.65634, -32.4569, -5.83432, 1.38 ) }
    dend_16 { pt3dadd( -8.59234, -32.7813, -5.82238, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.64244, -27.4593, -6.0183, 1.38 ) }
    dend_1 { pt3dadd( -13.8705, -31.8102, 1.21192, 1.38 ) }
    dend_1 { pt3dadd( -15.5138, -33.5013, 4.02203, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 45/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.479, 29.4825, 0.455321, 0.524975 ) }
    axon_1 { pt3dadd( 39.9692, 40.2043, 0.455321, 0.524975 ) }
    axon_1 { pt3dadd( 50.4593, 50.9261, 0.455321, 0.524975 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 48/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 23.4655, 43.6714, -19.6705, 0.55 ) }
    dend_31 { pt3dadd( 23.889, 44.8683, -19.6694, 0.55 ) }
    dend_31 { pt3dadd( 24.4703, 46.5598, -19.7411, 0.83 ) }
    dend_31 { pt3dadd( 24.9523, 48.0309, -19.9004, 0.55 ) }
    dend_31 { pt3dadd( 25.6666, 50.116, -20.1802, 0.28 ) }
    dend_31 { pt3dadd( 26.4337, 52.2889, -20.4864, 0.55 ) }
    dend_31 { pt3dadd( 27.4908, 55.1378, -20.9056, 0.55 ) }
    dend_31 { pt3dadd( 28.9168, 58.6538, -21.4893, 0.55 ) }
    dend_31 { pt3dadd( 30.0957, 61.309, -21.9506, 0.55 ) }
    dend_31 { pt3dadd( 30.8103, 62.782, -22.2035, 0.83 ) }
    dend_31 { pt3dadd( 31.4822, 63.9836, -22.4044, 0.28 ) }
    dend_31 { pt3dadd( 31.9719, 64.7961, -22.5348, 0.28 ) }
    dend_31 { pt3dadd( 33.1016, 66.3955, -22.77, 0.55 ) }
    dend_31 { pt3dadd( 34.6131, 68.0221, -22.9825, 0.83 ) }
    dend_31 { pt3dadd( 35.8451, 69.2015, -23.1063, 0.83 ) }
    dend_31 { pt3dadd( 37.0417, 70.2914, -23.2408, 0.28 ) }
    dend_31 { pt3dadd( 37.8302, 71.0169, -23.3333, 0.55 ) }
    dend_31 { pt3dadd( 39.2192, 72.3624, -23.5119, 0.55 ) }
    dend_31 { pt3dadd( 41.101, 74.2273, -23.7822, 0.55 ) }
    dend_31 { pt3dadd( 42.7629, 75.9766, -24.0243, 0.83 ) }
    dend_31 { pt3dadd( 44.3621, 77.9149, -24.2894, 0.28 ) }
    dend_31 { pt3dadd( 45.6594, 79.7625, -24.5111, 0.55 ) }
    dend_31 { pt3dadd( 46.16, 80.5886, -24.6142, 0.55 ) }
    dend_31 { pt3dadd( 46.9815, 82.1722, -24.8016, 0.55 ) }
    dend_31 { pt3dadd( 48.1524, 84.6982, -25.0797, 0.83 ) }
    dend_31 { pt3dadd( 49.165, 86.9393, -25.3701, 0.28 ) }
    dend_31 { pt3dadd( 49.8771, 88.5047, -25.5818, 0.55 ) }
    dend_31 { pt3dadd( 51.2732, 91.409, -26.0396, 0.55 ) }
    dend_31 { pt3dadd( 51.9637, 92.804, -26.2788, 0.55 ) }
    dend_31 { pt3dadd( 53.028, 94.9551, -26.714, 0.83 ) }
    dend_31 { pt3dadd( 54.4503, 97.7373, -27.3543, 0.28 ) }
    dend_31 { pt3dadd( 55.6898, 100.011, -27.9089, 0.55 ) }
    dend_31 { pt3dadd( 57.1647, 102.662, -28.5977, 0.28 ) }
    dend_31 { pt3dadd( 57.9185, 104.088, -28.9804, 0.55 ) }
    dend_31 { pt3dadd( 58.6783, 105.561, -29.414, 0.28 ) }
    dend_31 { pt3dadd( 58.8286, 105.849, -29.5089, 0.55 ) }
    dend_31 { pt3dadd( 59.4154, 106.953, -29.9024, 0.28 ) }
    dend_31 { pt3dadd( 59.9728, 107.971, -30.2901, 0.55 ) }
    dend_31 { pt3dadd( 60.7592, 109.323, -30.7654, 0.28 ) }
    dend_31 { pt3dadd( 61.5814, 110.626, -31.1872, 0.55 ) }
    dend_31 { pt3dadd( 62.8781, 112.506, -31.7555, 0.55 ) }
    dend_31 { pt3dadd( 63.8158, 113.847, -32.135, 0.28 ) }
    dend_31 { pt3dadd( 64.5508, 114.896, -32.3861, 0.55 ) }
    dend_31 { pt3dadd( 65.2885, 115.94, -32.5798, 0.28 ) }
    dend_31 { pt3dadd( 66.3078, 117.386, -32.769, 0.55 ) }
    dend_31 { pt3dadd( 67.8169, 119.494, -32.8947, 0.28 ) }
    dend_31 { pt3dadd( 68.5362, 120.513, -32.8813, 0.28 ) }
    dend_31 { pt3dadd( 70.1305, 122.795, -32.7118, 0.55 ) }
    dend_31 { pt3dadd( 71.2217, 124.355, -32.5849, 0.28 ) }
    dend_31 { pt3dadd( 72.182, 125.746, -32.5173, 0.55 ) }
    dend_31 { pt3dadd( 73.2004, 127.253, -32.4721, 0.28 ) }
    dend_31 { pt3dadd( 73.7677, 128.111, -32.4578, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 74.4155, 129.093, -32.4778, 0.28 ) }
    dend_31 { pt3dadd( 75.4829, 130.888, -32.6111, 0.55 ) }
    dend_31 { pt3dadd( 76.3084, 132.422, -32.7578, 0.28 ) }
    dend_31 { pt3dadd( 77.3359, 134.629, -33.0122, 0.55 ) }
    dend_31 { pt3dadd( 77.8546, 135.934, -33.1888, 0.28 ) }
    dend_31 { pt3dadd( 78.2851, 137.073, -33.348, 0.55 ) }
    dend_31 { pt3dadd( 78.9139, 138.84, -33.5759, 0.28 ) }
    dend_31 { pt3dadd( 79.5352, 140.682, -33.7594, 0.55 ) }
    dend_31 { pt3dadd( 80.1567, 142.509, -33.8958, 0.28 ) }
    dend_31 { pt3dadd( 80.6061, 143.798, -34.0116, 0.55 ) }
    dend_31 { pt3dadd( 81.272, 145.563, -34.1747, 0.28 ) }
    dend_31 { pt3dadd( 81.6328, 146.374, -34.2298, 0.55 ) }
    dend_31 { pt3dadd( 82.4938, 148.208, -34.3236, 0.55 ) }
    dend_31 { pt3dadd( 83.5147, 150.298, -34.3031, 0.55 ) }
    dend_31 { pt3dadd( 84.5069, 152.225, -34.24, 0.28 ) }
    dend_31 { pt3dadd( 85.2459, 153.621, -34.1652, 0.55 ) }
    dend_31 { pt3dadd( 87.0432, 157.059, -33.8636, 0.28 ) }
    dend_31 { pt3dadd( 87.7635, 158.4, -33.725, 0.55 ) }
    dend_31 { pt3dadd( 89.1217, 160.858, -33.361, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 19/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 23.4655, 43.6714, -19.6705, 0.55 ) }
    dend_30 { pt3dadd( 24.905, 46.6956, -20.8452, 0.55 ) }
    dend_30 { pt3dadd( 26.0509, 49.1524, -21.6655, 0.55 ) }
    dend_30 { pt3dadd( 26.5831, 50.3609, -22.2394, 0.28 ) }
    dend_30 { pt3dadd( 26.9038, 51.2439, -22.7322, 0.83 ) }
    dend_30 { pt3dadd( 27.5465, 53.3086, -23.8988, 0.55 ) }
    dend_30 { pt3dadd( 27.8291, 54.5009, -24.5871, 0.28 ) }
    dend_30 { pt3dadd( 28.3336, 58.1637, -26.786, 0.83 ) }
    dend_30 { pt3dadd( 28.8051, 63.1079, -30.0858, 0.55 ) }
    dend_30 { pt3dadd( 29.0092, 65.3473, -31.6895, 0.28 ) }
    dend_30 { pt3dadd( 29.0436, 66.3825, -32.6013, 0.83 ) }
    dend_30 { pt3dadd( 29.0389, 69.2105, -35.3289, 0.55 ) }
    dend_30 { pt3dadd( 28.9327, 72.2192, -38.2394, 0.55 ) }
    dend_30 { pt3dadd( 28.7381, 74.2931, -40.2188, 0.28 ) }
    dend_30 { pt3dadd( 28.5772, 75.8864, -41.6469, 0.83 ) }
    dend_30 { pt3dadd( 28.0158, 83.0193, -47.7097, 0.55 ) }
    dend_30 { pt3dadd( 27.8874, 84.9253, -49.2447, 0.55 ) }
    dend_30 { pt3dadd( 27.7782, 86.8871, -50.6502, 0.83 ) }
    dend_30 { pt3dadd( 27.5432, 90.5515, -52.8727, 0.55 ) }
    dend_30 { pt3dadd( 27.4427, 92.4361, -53.8587, 0.83 ) }
    dend_30 { pt3dadd( 27.3753, 94.9994, -54.9998, 0.28 ) }
    dend_30 { pt3dadd( 27.407, 96.6306, -55.4701, 0.55 ) }
    dend_30 { pt3dadd( 27.4482, 99.6789, -56.3705, 0.28 ) }
    dend_30 { pt3dadd( 27.4876, 101.035, -56.7866, 0.55 ) }
    dend_30 { pt3dadd( 27.6405, 103.553, -57.4928, 0.28 ) }
    dend_30 { pt3dadd( 27.7495, 105.003, -57.9531, 0.55 ) }
    dend_30 { pt3dadd( 27.9682, 107.602, -58.8176, 0.28 ) }
    dend_30 { pt3dadd( 28.2608, 110.431, -59.8971, 0.83 ) }
    dend_30 { pt3dadd( 28.805, 114.59, -61.6252, 0.28 ) }
    dend_30 { pt3dadd( 29.0798, 116.307, -62.4207, 0.83 ) }
    dend_30 { pt3dadd( 29.7669, 119.975, -64.235, 0.28 ) }
    dend_30 { pt3dadd( 29.8746, 120.514, -64.5178, 0.55 ) }
    dend_30 { pt3dadd( 30.5601, 122.977, -65.8621, 0.28 ) }
    dend_30 { pt3dadd( 30.8807, 124.075, -66.5301, 0.83 ) }
    dend_30 { pt3dadd( 31.6223, 126.642, -68.2602, 0.28 ) }
    dend_30 { pt3dadd( 32.1568, 128.457, -69.5895, 0.55 ) }
    dend_30 { pt3dadd( 33.0425, 131.443, -71.8337, 0.28 ) }
    dend_30 { pt3dadd( 33.9961, 134.67, -74.2554, 0.28 ) }
    dend_30 { pt3dadd( 35.2994, 139.149, -77.6126, 0.83 ) }
    dend_30 { pt3dadd( 36.3521, 142.492, -80.0714, 0.55 ) }
    dend_30 { pt3dadd( 37.1978, 144.98, -81.8154, 0.28 ) }
    dend_30 { pt3dadd( 37.6345, 146.119, -82.5932, 0.55 ) }
    dend_30 { pt3dadd( 38.5414, 148.342, -84.0404, 0.28 ) }
    dend_30 { pt3dadd( 38.9646, 149.495, -84.7941, 0.55 ) }
    dend_30 { pt3dadd( 40.2346, 153.234, -87.2794, 0.28 ) }
    dend_30 { pt3dadd( 41.0819, 155.763, -89.1556, 0.55 ) }
    dend_30 { pt3dadd( 42.2927, 159.344, -92.1133, 0.28 ) }
    dend_30 { pt3dadd( 42.8337, 160.938, -93.5662, 0.55 ) }
    dend_30 { pt3dadd( 44.4341, 165.91, -98.4334, 1.38 ) }
    dend_30 { pt3dadd( 45.7961, 170.261, -102.839, 0.28 ) }
    dend_30 { pt3dadd( 46.5223, 172.622, -105.332, 0.55 ) }
    dend_30 { pt3dadd( 47.166, 174.647, -107.479, 0.28 ) }
    dend_30 { pt3dadd( 47.6713, 176.296, -109.111, 0.28 ) }
    dend_30 { pt3dadd( 48.0313, 177.438, -110.145, 0.55 ) }
    dend_30 { pt3dadd( 48.5639, 179.094, -111.395, 0.55 ) }
    dend_30 { pt3dadd( 49.1489, 181.489, -113.013, 0.28 ) }
    dend_30 { pt3dadd( 49.3179, 182.706, -113.851, 0.55 ) }
    dend_30 { pt3dadd( 49.5908, 185.774, -115.921, 0.28 ) }
    dend_30 { pt3dadd( 49.7316, 187.697, -117.223, 0.55 ) }
    dend_30 { pt3dadd( 49.8301, 190.382, -119.09, 0.28 ) }
    dend_30 { pt3dadd( 49.8245, 192.555, -120.555, 0.55 ) }
    dend_30 { pt3dadd( 49.6378, 197.037, -123.394, 0.28 ) }
    dend_30 { pt3dadd( 49.5229, 199.662, -124.912, 0.28 ) }
    dend_30 { pt3dadd( 49.444, 203.064, -126.752, 0.55 ) }
    dend_30 { pt3dadd( 49.4096, 206.708, -128.615, 0.28 ) }
    dend_30 { pt3dadd( 49.3689, 208.915, -129.725, 0.28 ) }
    dend_30 { pt3dadd( 49.4435, 211.102, -130.789, 0.28 ) }
    dend_30 { pt3dadd( 49.5834, 213.263, -131.812, 0.55 ) }
    dend_30 { pt3dadd( 49.8417, 215.586, -132.969, 0.55 ) }
    dend_30 { pt3dadd( 50.4264, 219.108, -134.75, 0.28 ) }
    dend_30 { pt3dadd( 50.894, 220.972, -135.72, 0.83 ) }
    dend_30 { pt3dadd( 52.0282, 224.47, -137.524, 0.55 ) }
    dend_30 { pt3dadd( 52.8879, 226.735, -138.603, 0.28 ) }
    dend_30 { pt3dadd( 53.6231, 228.597, -139.433, 0.55 ) }
    dend_30 { pt3dadd( 54.7726, 231.31, -140.418, 0.28 ) }
    dend_30 { pt3dadd( 56.0966, 233.846, -141.195, 0.55 ) }
    dend_30 { pt3dadd( 57.6485, 236.439, -141.891, 0.28 ) }
    dend_30 { pt3dadd( 58.8764, 238.222, -142.352, 0.55 ) }
    dend_30 { pt3dadd( 60.9162, 240.828, -142.991, 0.28 ) }
    dend_30 { pt3dadd( 62.4166, 242.517, -143.392, 0.55 ) }
    dend_30 { pt3dadd( 65.3086, 245.388, -144.013, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( 66.1408, 246.108, -144.192, 0.55 ) }
    dend_30 { pt3dadd( 69.7797, 248.697, -145.036, 0.28 ) }
    dend_30 { pt3dadd( 70.7042, 249.272, -145.237, 0.55 ) }
    dend_30 { pt3dadd( 72.7091, 250.33, -145.629, 0.28 ) }
    dend_30 { pt3dadd( 73.6604, 250.783, -145.866, 0.55 ) }
    dend_30 { pt3dadd( 75.1928, 251.365, -146.237, 0.28 ) }
    dend_30 { pt3dadd( 76.8582, 251.822, -146.676, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -79.2269, 78.2989, -25.593, 0.28 ) }
    dend_27 { pt3dadd( -79.339, 80.6372, -25.5812, 0.28 ) }
    dend_27 { pt3dadd( -79.5774, 83.5169, -25.5259, 0.83 ) }
    dend_27 { pt3dadd( -79.8447, 87.944, -25.509, 0.28 ) }
    dend_27 { pt3dadd( -79.8844, 88.9257, -25.5694, 0.55 ) }
    dend_27 { pt3dadd( -79.9373, 90.6391, -25.7324, 0.28 ) }
    dend_27 { pt3dadd( -79.9791, 92.0765, -25.8995, 0.55 ) }
    dend_27 { pt3dadd( -80.0191, 93.7816, -26.2106, 0.28 ) }
    dend_27 { pt3dadd( -80.0326, 96.1586, -26.7604, 0.55 ) }
    dend_27 { pt3dadd( -80.0971, 98.994, -27.5737, 0.55 ) }
    dend_27 { pt3dadd( -80.1899, 101.097, -28.2388, 0.28 ) }
    dend_27 { pt3dadd( -80.5515, 106.523, -29.8846, 0.55 ) }
    dend_27 { pt3dadd( -80.9162, 109.962, -30.7974, 0.28 ) }
    dend_27 { pt3dadd( -81.0561, 110.866, -30.9932, 0.55 ) }
    dend_27 { pt3dadd( -81.8578, 114.872, -31.6111, 0.28 ) }
    dend_27 { pt3dadd( -82.4867, 117.748, -31.8659, 0.55 ) }
    dend_27 { pt3dadd( -83.1565, 120.727, -31.987, 0.28 ) }
    dend_27 { pt3dadd( -83.999, 124.486, -32.0106, 0.55 ) }
    dend_27 { pt3dadd( -84.6096, 127.58, -31.9282, 0.28 ) }
    dend_27 { pt3dadd( -84.8739, 129.318, -31.8864, 0.55 ) }
    dend_27 { pt3dadd( -85.0801, 131.052, -31.8593, 0.28 ) }
    dend_27 { pt3dadd( -85.2622, 133.471, -32.0275, 0.55 ) }
    dend_27 { pt3dadd( -85.4608, 137.943, -32.7101, 0.28 ) }
    dend_27 { pt3dadd( -85.5558, 140.393, -33.295, 0.55 ) }
    dend_27 { pt3dadd( -85.7583, 143.705, -34.2349, 0.28 ) }
    dend_27 { pt3dadd( -85.9351, 145.191, -34.6942, 0.55 ) }
    dend_27 { pt3dadd( -86.7054, 149.247, -36.0838, 0.28 ) }
    dend_27 { pt3dadd( -86.8882, 149.958, -36.3325, 0.55 ) }
    dend_27 { pt3dadd( -87.8124, 152.919, -37.3617, 0.28 ) }
    dend_27 { pt3dadd( -88.4106, 154.621, -37.9, 1.11 ) }
    dend_27 { pt3dadd( -89.7467, 158.21, -38.6936, 0.28 ) }
    dend_27 { pt3dadd( -90.8997, 161.239, -39.0691, 0.28 ) }
    dend_27 { pt3dadd( -91.5772, 162.879, -39.1184, 0.55 ) }
    dend_27 { pt3dadd( -92.785, 165.88, -39.0796, 0.28 ) }
    dend_27 { pt3dadd( -93.6911, 168.11, -38.9288, 0.55 ) }
    dend_27 { pt3dadd( -95.0551, 171.373, -38.6609, 0.28 ) }
    dend_27 { pt3dadd( -95.7592, 172.946, -38.4699, 0.55 ) }
    dend_27 { pt3dadd( -96.6853, 174.926, -38.1632, 0.28 ) }
    dend_27 { pt3dadd( -97.1745, 175.905, -38.0373, 0.55 ) }
    dend_27 { pt3dadd( -97.8579, 177.181, -37.9399, 0.28 ) }
    dend_27 { pt3dadd( -98.3789, 178.152, -38.0456, 0.55 ) }
    dend_27 { pt3dadd( -99.3629, 179.966, -38.4201, 0.28 ) }
    dend_27 { pt3dadd( -99.986, 181.163, -38.7274, 0.55 ) }
    dend_27 { pt3dadd( -100.306, 181.837, -38.9353, 0.28 ) }
    dend_27 { pt3dadd( -100.782, 182.899, -39.3064, 0.55 ) }
    dend_27 { pt3dadd( -101.528, 184.641, -40.0016, 0.28 ) }
    dend_27 { pt3dadd( -102.649, 187.182, -41.0389, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 54/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -79.2269, 78.2989, -25.593, 0.55 ) }
    dend_26 { pt3dadd( -80.5973, 79.4693, -26.8144, 0.55 ) }
    dend_26 { pt3dadd( -81.913, 80.6228, -28.0466, 0.28 ) }
    dend_26 { pt3dadd( -83.3231, 81.8256, -29.4695, 0.83 ) }
    dend_26 { pt3dadd( -85.1594, 83.3854, -31.4378, 0.83 ) }
    dend_26 { pt3dadd( -86.722, 84.7175, -33.1296, 0.55 ) }
    dend_26 { pt3dadd( -88.1979, 85.9868, -34.7134, 0.28 ) }
    dend_26 { pt3dadd( -89.0456, 86.7514, -35.69, 0.55 ) }
    dend_26 { pt3dadd( -90.3779, 87.9824, -37.2194, 0.28 ) }
    dend_26 { pt3dadd( -90.8325, 88.4112, -37.7307, 0.55 ) }
    dend_26 { pt3dadd( -91.9017, 89.4546, -38.7702, 0.28 ) }
    dend_26 { pt3dadd( -92.3907, 89.9969, -39.16, 0.55 ) }
    dend_26 { pt3dadd( -93.4037, 91.2506, -39.7678, 0.28 ) }
    dend_26 { pt3dadd( -93.7397, 91.7083, -39.9444, 0.55 ) }
    dend_26 { pt3dadd( -94.778, 93.3129, -40.4127, 0.28 ) }
    dend_26 { pt3dadd( -94.9108, 93.5296, -40.4786, 0.55 ) }
    dend_26 { pt3dadd( -95.5784, 94.7119, -40.8831, 0.28 ) }
    dend_26 { pt3dadd( -96.0464, 95.6043, -41.2664, 0.55 ) }
    dend_26 { pt3dadd( -97.0662, 97.6144, -42.1154, 0.28 ) }
    dend_26 { pt3dadd( -97.3814, 98.2813, -42.4155, 0.55 ) }
    dend_26 { pt3dadd( -97.8497, 99.2948, -42.8772, 0.28 ) }
    dend_26 { pt3dadd( -97.9545, 99.5084, -42.993, 0.55 ) }
    dend_26 { pt3dadd( -98.8957, 101.283, -43.9217, 0.28 ) }
    dend_26 { pt3dadd( -99.5558, 102.525, -44.5267, 0.55 ) }
    dend_26 { pt3dadd( -100.09, 103.546, -45.0274, 0.28 ) }
    dend_26 { pt3dadd( -100.978, 105.297, -45.9308, 0.55 ) }
    dend_26 { pt3dadd( -102.933, 109.398, -48.3343, 0.28 ) }
    dend_26 { pt3dadd( -104.033, 111.792, -49.8029, 0.28 ) }
    dend_26 { pt3dadd( -104.501, 112.89, -50.4861, 0.55 ) }
    dend_26 { pt3dadd( -105.208, 114.742, -51.6957, 0.28 ) }
    dend_26 { pt3dadd( -105.532, 115.657, -52.2805, 0.55 ) }
    dend_26 { pt3dadd( -106.522, 118.666, -54.0491, 0.28 ) }
    dend_26 { pt3dadd( -107.004, 120.291, -54.8892, 0.28 ) }
    dend_26 { pt3dadd( -107.352, 121.448, -55.4617, 0.55 ) }
    dend_26 { pt3dadd( -108.629, 125.388, -57.1759, 0.28 ) }
    dend_26 { pt3dadd( -108.958, 126.369, -57.5547, 0.55 ) }
    dend_26 { pt3dadd( -110.649, 131.206, -59.2734, 0.28 ) }
    dend_26 { pt3dadd( -110.847, 131.746, -59.4307, 0.55 ) }
    dend_26 { pt3dadd( -111.333, 133.032, -59.8217, 0.28 ) }
    dend_26 { pt3dadd( -111.933, 134.463, -60.2321, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 94/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -76.3503, 55.9117, 2.28032, 0.83 ) }
    dend_24 { pt3dadd( -77.6936, 56.5453, 2.36059, 0.83 ) }
    dend_24 { pt3dadd( -79.0407, 57.2791, 2.35662, 0.28 ) }
    dend_24 { pt3dadd( -80.2099, 57.8974, 2.27543, 0.55 ) }
    dend_24 { pt3dadd( -81.0701, 58.3306, 2.20235, 0.55 ) }
    dend_24 { pt3dadd( -81.8041, 58.7253, 2.1502, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -82.7168, 59.2167, 2.15599, 0.55 ) }
    dend_24 { pt3dadd( -83.4517, 59.7141, 2.18868, 0.28 ) }
    dend_24 { pt3dadd( -84.5385, 60.5158, 2.28749, 0.55 ) }
    dend_24 { pt3dadd( -85.1592, 61.0138, 2.40502, 0.83 ) }
    dend_24 { pt3dadd( -86.4374, 62.1281, 2.75489, 0.83 ) }
    dend_24 { pt3dadd( -88.231, 63.6502, 3.4063, 0.55 ) }
    dend_24 { pt3dadd( -89.981, 65.075, 4.14004, 0.55 ) }
    dend_24 { pt3dadd( -91.1378, 66.0108, 4.68052, 0.55 ) }
    dend_24 { pt3dadd( -92.7055, 67.3203, 5.47774, 0.55 ) }
    dend_24 { pt3dadd( -93.9284, 68.3059, 6.09485, 0.55 ) }
    dend_24 { pt3dadd( -95.1803, 69.275, 6.70031, 0.55 ) }
    dend_24 { pt3dadd( -96.2497, 70.0576, 7.14089, 0.55 ) }
    dend_24 { pt3dadd( -96.8582, 70.4496, 7.38571, 0.28 ) }
    dend_24 { pt3dadd( -97.1849, 70.6662, 7.51302, 0.55 ) }
    dend_24 { pt3dadd( -98.0452, 71.1825, 7.76551, 0.55 ) }
    dend_24 { pt3dadd( -99.4176, 72.0726, 8.09691, 0.55 ) }
    dend_24 { pt3dadd( -102.005, 74.0893, 8.5894, 0.55 ) }
    dend_24 { pt3dadd( -106.731, 79.3301, 11.278, 0.55 ) }
    dend_24 { pt3dadd( -111.33, 84.7877, 13.7882, 0.55 ) }
    dend_24 { pt3dadd( -116.555, 89.5381, 16.3717, 0.55 ) }
    dend_24 { pt3dadd( -120.791, 95.3977, 18.6894, 0.55 ) }
    dend_24 { pt3dadd( -124.863, 101.066, 21.6557, 0.55 ) }
    dend_24 { pt3dadd( -128.513, 106.722, 25.1547, 0.55 ) }
    dend_24 { pt3dadd( -132.624, 111.277, 29.4995, 0.55 ) }
    dend_24 { pt3dadd( -135.865, 116.568, 33.8287, 0.55 ) }
    dend_24 { pt3dadd( -138.063, 121.394, 39.1896, 0.55 ) }
    dend_24 { pt3dadd( -139.262, 125.968, 45.0459, 0.55 ) }
    dend_24 { pt3dadd( -140.951, 130.527, 50.7902, 0.55 ) }
    dend_24 { pt3dadd( -143.298, 135.358, 56.0832, 0.55 ) }
    dend_24 { pt3dadd( -145.327, 139.407, 62.0567, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 30/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -76.3503, 55.9117, 2.28032, 0.83 ) }
    dend_23 { pt3dadd( -78.3944, 58.407, 2.50328, 0.83 ) }
    dend_23 { pt3dadd( -80.2416, 60.6233, 2.67548, 0.83 ) }
    dend_23 { pt3dadd( -81.991, 62.8061, 2.82391, 0.83 ) }
    dend_23 { pt3dadd( -82.8919, 63.9322, 2.89272, 0.55 ) }
    dend_23 { pt3dadd( -84.3944, 65.8141, 2.99758, 0.83 ) }
    dend_23 { pt3dadd( -85.9797, 67.7316, 3.11368, 0.55 ) }
    dend_23 { pt3dadd( -87.6614, 69.6931, 3.24698, 0.55 ) }
    dend_23 { pt3dadd( -89.8193, 72.1941, 3.46708, 0.83 ) }
    dend_23 { pt3dadd( -91.3184, 73.9102, 3.62429, 0.55 ) }
    dend_23 { pt3dadd( -93.0553, 75.89, 3.78933, 0.55 ) }
    dend_23 { pt3dadd( -94.3386, 77.2645, 3.89787, 0.55 ) }
    dend_23 { pt3dadd( -96.9693, 79.8407, 4.07897, 0.83 ) }
    dend_23 { pt3dadd( -98.5319, 81.18, 4.14279, 0.55 ) }
    dend_23 { pt3dadd( -99.6221, 81.9847, 4.15492, 1.11 ) }
    dend_23 { pt3dadd( -100.953, 82.8156, 4.17643, 0.55 ) }
    dend_23 { pt3dadd( -102.527, 83.6045, 4.2768, 0.55 ) }
    dend_23 { pt3dadd( -104.98, 84.6294, 4.54943, 0.83 ) }
    dend_23 { pt3dadd( -106.985, 85.2491, 4.84316, 0.55 ) }
    dend_23 { pt3dadd( -108.958, 85.8786, 5.2674, 0.55 ) }
    dend_23 { pt3dadd( -111.128, 86.639, 5.85743, 0.55 ) }
    dend_23 { pt3dadd( -114.58, 87.8313, 6.96739, 0.83 ) }
    dend_23 { pt3dadd( -116.233, 88.422, 7.54801, 0.55 ) }
    dend_23 { pt3dadd( -118.536, 89.1888, 8.36249, 0.55 ) }
    dend_23 { pt3dadd( -121.484, 90.2843, 9.34909, 0.55 ) }
    dend_23 { pt3dadd( -122.751, 90.7962, 9.71336, 0.55 ) }
    dend_23 { pt3dadd( -125.414, 91.9982, 10.3013, 0.28 ) }
    dend_23 { pt3dadd( -126.555, 92.5248, 10.4924, 0.83 ) }
    dend_23 { pt3dadd( -128.881, 93.5294, 10.791, 0.28 ) }
    dend_23 { pt3dadd( -131.564, 94.6482, 10.9355, 0.28 ) }
    dend_23 { pt3dadd( -133.118, 95.2423, 10.8947, 0.28 ) }
    dend_23 { pt3dadd( -134.131, 95.678, 10.7898, 0.28 ) }
    dend_23 { pt3dadd( -134.57, 95.9014, 10.7006, 0.55 ) }
    dend_23 { pt3dadd( -136.747, 97.0088, 10.1364, 0.28 ) }
    dend_23 { pt3dadd( -138.52, 97.975, 9.56467, 0.28 ) }
    dend_23 { pt3dadd( -140.142, 98.787, 8.97065, 0.55 ) }
    dend_23 { pt3dadd( -141.819, 99.6624, 8.34383, 0.28 ) }
    dend_23 { pt3dadd( -142.569, 100.048, 8.0841, 0.55 ) }
    dend_23 { pt3dadd( -143.642, 100.583, 7.77155, 0.28 ) }
    dend_23 { pt3dadd( -144.414, 101.001, 7.60449, 0.55 ) }
    dend_23 { pt3dadd( -145.346, 101.425, 7.53774, 0.28 ) }
    dend_23 { pt3dadd( -146.373, 101.809, 7.40788, 0.55 ) }
    dend_23 { pt3dadd( -147.367, 102.181, 7.30086, 0.28 ) }
    dend_23 { pt3dadd( -148.127, 102.475, 7.2006, 0.55 ) }
    dend_23 { pt3dadd( -149.078, 102.849, 7.07004, 0.28 ) }
    dend_23 { pt3dadd( -149.838, 103.176, 6.97018, 0.55 ) }
    dend_23 { pt3dadd( -152.574, 104.487, 6.54362, 0.28 ) }
    dend_23 { pt3dadd( -154.226, 105.224, 6.34832, 0.55 ) }
    dend_23 { pt3dadd( -155.353, 105.734, 6.20691, 1.11 ) }
    dend_23 { pt3dadd( -156.926, 106.461, 6.00854, 0.55 ) }
    dend_23 { pt3dadd( -158.355, 107.099, 5.85387, 0.55 ) }
    dend_23 { pt3dadd( -160.926, 108.271, 5.65353, 0.55 ) }
    dend_23 { pt3dadd( -162.798, 109.116, 5.76165, 0.55 ) }
    dend_23 { pt3dadd( -170.826, 112.95, 7.06731, 0.55 ) }
    dend_23 { pt3dadd( -178.471, 117.757, 7.22826, 0.55 ) }
    dend_23 { pt3dadd( -185.292, 123.773, 6.9538, 0.55 ) }
    dend_23 { pt3dadd( -192.539, 128.858, 5.12268, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.59234, -32.7813, -5.82238, 0.83 ) }
    dend_18 { pt3dadd( -8.47419, -35.6309, -6.47338, 0.83 ) }
    dend_18 { pt3dadd( -8.36147, -38.3496, -7.09448, 0.83 ) }
    dend_18 { pt3dadd( -8.13871, -43.7222, -8.32183, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.59234, -32.7813, -5.82238, 0.55 ) }
    dend_17 { pt3dadd( -8.55499, -34.1413, -5.15601, 0.55 ) }
    dend_17 { pt3dadd( -8.62387, -36.2266, -4.1595, 0.55 ) }
    dend_17 { pt3dadd( -8.91411, -39.4533, -2.7156, 0.55 ) }
    dend_17 { pt3dadd( -9.08456, -41.0388, -1.99431, 0.55 ) }
    dend_17 { pt3dadd( -9.27241, -44.0754, -0.464632, 0.83 ) }
    dend_17 { pt3dadd( -9.35344, -45.576, 0.365699, 0.55 ) }
    dend_17 { pt3dadd( -9.39484, -46.7779, 1.08514, 0.55 ) }
    dend_17 { pt3dadd( -9.45766, -48.1057, 1.87731, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -9.68469, -50.5182, 3.31848, 0.83 ) }
    dend_17 { pt3dadd( -10.0155, -54.0962, 5.50606, 0.55 ) }
    dend_17 { pt3dadd( -10.1939, -55.9057, 6.60519, 0.55 ) }
    dend_17 { pt3dadd( -10.3613, -57.7061, 7.73501, 0.55 ) }
    dend_17 { pt3dadd( -10.6342, -60.7521, 9.60619, 0.55 ) }
    dend_17 { pt3dadd( -10.9104, -63.4733, 11.2684, 0.55 ) }
    dend_17 { pt3dadd( -11.1421, -65.0953, 12.2223, 0.83 ) }
    dend_17 { pt3dadd( -11.7846, -68.3442, 14.0078, 0.55 ) }
    dend_17 { pt3dadd( -12.1121, -69.8891, 14.8397, 0.55 ) }
    dend_17 { pt3dadd( -12.8007, -73.0063, 16.5489, 0.55 ) }
    dend_17 { pt3dadd( -13.3277, -75.2777, 17.816, 0.28 ) }
    dend_17 { pt3dadd( -13.7161, -76.8551, 18.6454, 0.28 ) }
    dend_17 { pt3dadd( -14.5081, -79.6043, 20.0931, 0.28 ) }
    dend_17 { pt3dadd( -15.0338, -81.1739, 20.8579, 0.55 ) }
    dend_17 { pt3dadd( -16.4444, -87.7056, 23.5244, 0.55 ) }
    dend_17 { pt3dadd( -19.3425, -93.8248, 25.8571, 0.55 ) }
    dend_17 { pt3dadd( -23.6622, -99.1987, 27.5975, 0.55 ) }
    dend_17 { pt3dadd( -28.8307, -103.882, 28.7689, 0.55 ) }
    dend_17 { pt3dadd( -34.3278, -107.69, 30.9114, 0.55 ) }
    dend_17 { pt3dadd( -39.3289, -111.853, 33.5874, 0.55 ) }
    dend_17 { pt3dadd( -45.0934, -115.476, 35.2817, 0.55 ) }
    dend_17 { pt3dadd( -50.5642, -118.992, 37.8935, 0.55 ) }
    dend_17 { pt3dadd( -55.7738, -123.574, 39.2298, 0.55 ) }
    dend_17 { pt3dadd( -61.9583, -126.753, 40.0561, 0.55 ) }
    dend_17 { pt3dadd( -68.7205, -128.394, 40.2968, 0.55 ) }
    dend_17 { pt3dadd( -75.5805, -128.695, 41.383, 0.55 ) }
    dend_17 { pt3dadd( -82.0735, -129.479, 43.7404, 0.55 ) }
    dend_17 { pt3dadd( -88.4981, -130.701, 46.1054, 0.55 ) }
    dend_17 { pt3dadd( -95.2824, -131.257, 47.5168, 0.55 ) }
    dend_17 { pt3dadd( -101.656, -132.525, 49.9941, 0.55 ) }
    dend_17 { pt3dadd( -107.961, -133.222, 52.8379, 0.55 ) }
    dend_17 { pt3dadd( -113.836, -133.282, 56.5602, 0.55 ) }
    dend_17 { pt3dadd( -118.748, -132.465, 61.4371, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -15.5138, -33.5013, 4.02203, 0.83 ) }
    dend_3 { pt3dadd( -17.7977, -34.3016, 1.37315, 0.83 ) }
    dend_3 { pt3dadd( -18.7728, -34.6433, 0.242245, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.5138, -33.5013, 4.02203, 0.55 ) }
    dend_2 { pt3dadd( -14.62, -37.3168, 1.94092, 0.55 ) }
    dend_2 { pt3dadd( -13.7774, -43.4374, -0.66605, 0.55 ) }
    dend_2 { pt3dadd( -13.4802, -45.5054, -1.56951, 0.55 ) }
    dend_2 { pt3dadd( -13.2251, -46.9802, -2.42966, 0.55 ) }
    dend_2 { pt3dadd( -12.7959, -49.6066, -4.19915, 0.55 ) }
    dend_2 { pt3dadd( -12.3685, -52.7395, -6.6382, 0.55 ) }
    dend_2 { pt3dadd( -12.2943, -55.1295, -8.88531, 0.28 ) }
    dend_2 { pt3dadd( -12.3277, -57.06, -10.8665, 0.83 ) }
    dend_2 { pt3dadd( -12.3004, -61.9894, -16.3071, 0.55 ) }
    dend_2 { pt3dadd( -12.2393, -64.1859, -18.6768, 0.83 ) }
    dend_2 { pt3dadd( -12.1918, -67.0396, -21.6603, 0.55 ) }
    dend_2 { pt3dadd( -12.1191, -69.8129, -24.3598, 0.55 ) }
    dend_2 { pt3dadd( -12.0235, -71.2274, -25.6079, 0.55 ) }
    dend_2 { pt3dadd( -11.7772, -73.7709, -27.5013, 0.83 ) }
    dend_2 { pt3dadd( -11.0884, -79.2316, -30.9279, 0.83 ) }
    dend_2 { pt3dadd( -10.5519, -82.9584, -33.2188, 0.55 ) }
    dend_2 { pt3dadd( -10.2833, -84.7697, -34.0899, 0.55 ) }
    dend_2 { pt3dadd( -9.75069, -88.5295, -35.5293, 0.83 ) }
    dend_2 { pt3dadd( -9.59709, -90.0799, -36.0103, 0.55 ) }
    dend_2 { pt3dadd( -9.34268, -93.2071, -36.9536, 0.83 ) }
    dend_2 { pt3dadd( -8.87483, -99.2855, -38.8285, 0.55 ) }
    dend_2 { pt3dadd( -8.43177, -107.869, -41.1154, 0.55 ) }
    dend_2 { pt3dadd( -8.45675, -109.801, -41.5543, 0.83 ) }
    dend_2 { pt3dadd( -8.78666, -113.406, -42.2155, 0.83 ) }
    dend_2 { pt3dadd( -9.36125, -118.276, -43.3103, 0.83 ) }
    dend_2 { pt3dadd( -9.58276, -121.438, -44.1132, 0.55 ) }
    dend_2 { pt3dadd( -9.60491, -124.822, -45.6028, 0.55 ) }
    dend_2 { pt3dadd( -9.52759, -127.375, -47.4168, 0.83 ) }
    dend_2 { pt3dadd( -9.42717, -129.473, -49.1151, 0.28 ) }
    dend_2 { pt3dadd( -9.22124, -132.348, -51.6113, 0.55 ) }
    dend_2 { pt3dadd( -9.05454, -134.898, -54.1115, 0.55 ) }
    dend_2 { pt3dadd( -8.64231, -139.637, -59.0599, 0.55 ) }
    dend_2 { pt3dadd( -8.29612, -142.664, -62.5165, 0.28 ) }
    dend_2 { pt3dadd( -8.15705, -143.92, -63.9608, 0.55 ) }
    dend_2 { pt3dadd( -7.89136, -147.682, -68.2061, 0.83 ) }
    dend_2 { pt3dadd( -7.93901, -152.828, -73.6361, 0.28 ) }
    dend_2 { pt3dadd( -8.12305, -155.076, -75.8279, 0.55 ) }
    dend_2 { pt3dadd( -8.43456, -158.458, -78.5303, 0.28 ) }
    dend_2 { pt3dadd( -8.56863, -160.476, -79.9154, 0.83 ) }
    dend_2 { pt3dadd( -8.65548, -162.921, -81.3332, 0.28 ) }
    dend_2 { pt3dadd( -8.59439, -165.168, -82.3218, 0.83 ) }
    dend_2 { pt3dadd( -8.26217, -167.939, -83.4053, 0.83 ) }
    dend_2 { pt3dadd( -7.56486, -171.847, -85.0822, 0.28 ) }
    dend_2 { pt3dadd( -6.95988, -174.32, -86.233, 1.66 ) }
    dend_2 { pt3dadd( -6.07343, -176.932, -87.6306, 0.28 ) }
    dend_2 { pt3dadd( -5.07681, -179.421, -89.0019, 0.55 ) }
    dend_2 { pt3dadd( -2.74413, -184.291, -92.2641, 0.28 ) }
    dend_2 { pt3dadd( -1.62213, -186.364, -93.9685, 0.55 ) }
    dend_2 { pt3dadd( -0.0688345, -189.044, -96.5908, 0.28 ) }
    dend_2 { pt3dadd( 1.12498, -190.995, -98.6557, 0.55 ) }
    dend_2 { pt3dadd( 2.72728, -193.523, -101.489, 0.55 ) }
    dend_2 { pt3dadd( 5.11875, -197.096, -105.554, 0.83 ) }
    dend_2 { pt3dadd( 7.35929, -200.235, -108.978, 0.83 ) }
    dend_2 { pt3dadd( 9.12658, -202.453, -111.47, 0.28 ) }
    dend_2 { pt3dadd( 9.90426, -203.325, -112.508, 0.55 ) }
    dend_2 { pt3dadd( 11.4001, -204.859, -114.444, 0.28 ) }
    dend_2 { pt3dadd( 12.3568, -205.686, -115.53, 0.28 ) }
    dend_2 { pt3dadd( 14.1655, -207.073, -117.041, 0.28 ) }
    dend_2 { pt3dadd( 15.8446, -208.22, -118.316, 0.83 ) }
    dend_2 { pt3dadd( 19.6718, -210.616, -121.165, 0.28 ) }
    dend_2 { pt3dadd( 20.2626, -210.981, -121.605, 0.55 ) }
    dend_2 { pt3dadd( 21.7181, -211.9, -122.778, 0.28 ) }
    dend_2 { pt3dadd( 23.0591, -212.851, -123.96, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( 26.5062, -215.509, -127.419, 0.28 ) }
    dend_2 { pt3dadd( 27.3974, -216.295, -128.406, 0.28 ) }
    dend_2 { pt3dadd( 28.6971, -217.661, -129.914, 0.55 ) }
    dend_2 { pt3dadd( 30.5954, -220.005, -132.504, 0.28 ) }
    dend_2 { pt3dadd( 31.519, -221.451, -134.012, 0.55 ) }
    dend_2 { pt3dadd( 33.0688, -224.532, -136.983, 0.28 ) }
    dend_2 { pt3dadd( 34.3051, -228.198, -139.886, 0.55 ) }
    dend_2 { pt3dadd( 34.6348, -230.095, -141.362, 0.55 ) }
    dend_2 { pt3dadd( 34.6689, -232.195, -143.025, 0.55 ) }
    dend_2 { pt3dadd( 34.2955, -234.937, -145.149, 0.28 ) }
    dend_2 { pt3dadd( 34.0432, -235.829, -145.928, 0.28 ) }
    dend_2 { pt3dadd( 32.4218, -240.128, -149.887, 0.55 ) }
    dend_2 { pt3dadd( 30.3523, -244.633, -154.365, 0.55 ) }
    dend_2 { pt3dadd( 29.2489, -247.043, -156.776, 0.28 ) }
    dend_2 { pt3dadd( 27.8915, -250.279, -159.883, 0.83 ) }
    dend_2 { pt3dadd( 26.0342, -254.777, -163.998, 0.28 ) }
    dend_2 { pt3dadd( 25.0403, -257.326, -166.169, 0.55 ) }
    dend_2 { pt3dadd( 23.8849, -260.68, -168.689, 0.55 ) }
    dend_2 { pt3dadd( 22.6609, -265.401, -171.493, 0.55 ) }
    dend_2 { pt3dadd( 21.5668, -271.045, -174.253, 0.28 ) }
    dend_2 { pt3dadd( 20.9206, -274.64, -175.75, 0.55 ) }
    dend_2 { pt3dadd( 20.6206, -276.444, -176.382, 0.28 ) }
    dend_2 { pt3dadd( 20.1592, -279.086, -177.23, 0.55 ) }
    dend_2 { pt3dadd( 19.5237, -283.313, -178.503, 0.28 ) }
    dend_2 { pt3dadd( 19.1567, -285.347, -179.237, 0.83 ) }
    dend_2 { pt3dadd( 18.2785, -289.321, -181.01, 0.28 ) }
    dend_2 { pt3dadd( 17.8071, -291.49, -182.302, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 89.1217, 160.858, -33.361, 0.28 ) }
    dend_33 { pt3dadd( 93.5809, 162.146, -32.1333, 0.28 ) }
    dend_33 { pt3dadd( 95.0105, 162.559, -31.7397, 0.55 ) }
    dend_33 { pt3dadd( 98.5703, 163.588, -30.7596, 0.28 ) }
    dend_33 { pt3dadd( 99.8819, 163.967, -30.3986, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 89.1217, 160.858, -33.361, 0.28 ) }
    dend_32 { pt3dadd( 90.4372, 161.834, -32.6979, 0.28 ) }
    dend_32 { pt3dadd( 91.1677, 162.371, -32.3261, 0.55 ) }
    dend_32 { pt3dadd( 93.1834, 163.877, -31.3077, 0.28 ) }
    dend_32 { pt3dadd( 94.2317, 164.614, -30.7813, 0.55 ) }
    dend_32 { pt3dadd( 96.99, 166.448, -29.4468, 0.28 ) }
    dend_32 { pt3dadd( 98.1048, 167.143, -28.9907, 0.55 ) }
    dend_32 { pt3dadd( 99.1829, 167.681, -28.5422, 0.28 ) }
    dend_32 { pt3dadd( 99.8599, 167.985, -28.2629, 0.55 ) }
    dend_32 { pt3dadd( 101.23, 168.493, -27.7588, 0.28 ) }
    dend_32 { pt3dadd( 101.856, 168.667, -27.5614, 0.55 ) }
    dend_32 { pt3dadd( 104.634, 168.881, -27.6852, 0.28 ) }
    dend_32 { pt3dadd( 106.938, 168.354, -28.1054, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 45/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.13871, -43.7222, -8.32183, 0.55 ) }
    dend_20 { pt3dadd( -7.57749, -46.1416, -8.15515, 0.55 ) }
    dend_20 { pt3dadd( -7.10283, -47.9719, -8.02422, 0.83 ) }
    dend_20 { pt3dadd( -6.16242, -51.1171, -7.78988, 0.83 ) }
    dend_20 { pt3dadd( -5.44076, -53.2948, -7.7279, 0.55 ) }
    dend_20 { pt3dadd( -4.7598, -55.3167, -7.75292, 0.83 ) }
    dend_20 { pt3dadd( -4.29252, -56.6469, -7.77524, 0.28 ) }
    dend_20 { pt3dadd( -3.13143, -59.8296, -7.92238, 0.55 ) }
    dend_20 { pt3dadd( -2.63242, -61.1128, -7.96482, 0.28 ) }
    dend_20 { pt3dadd( -1.73741, -63.385, -8.00195, 0.83 ) }
    dend_20 { pt3dadd( -0.71953, -65.8368, -7.93831, 0.83 ) }
    dend_20 { pt3dadd( 0.0258908, -67.6749, -7.74436, 0.28 ) }
    dend_20 { pt3dadd( 0.563285, -69.1581, -7.47991, 0.55 ) }
    dend_20 { pt3dadd( 1.27208, -71.5149, -6.89989, 0.28 ) }
    dend_20 { pt3dadd( 1.89547, -73.9217, -6.14777, 0.83 ) }
    dend_20 { pt3dadd( 2.43509, -76.091, -5.33808, 0.83 ) }
    dend_20 { pt3dadd( 2.90312, -77.9987, -4.65773, 0.83 ) }
    dend_20 { pt3dadd( 3.17996, -79.2899, -4.29133, 1.11 ) }
    dend_20 { pt3dadd( 3.52743, -80.8806, -3.90818, 1.11 ) }
    dend_20 { pt3dadd( 4.10658, -83.5508, -3.47296, 0.55 ) }
    dend_20 { pt3dadd( 4.40804, -84.8975, -3.29871, 0.83 ) }
    dend_20 { pt3dadd( 4.97936, -87.1944, -3.09901, 0.55 ) }
    dend_20 { pt3dadd( 5.81361, -90.3032, -2.90058, 0.28 ) }
    dend_20 { pt3dadd( 6.21764, -91.7544, -2.80219, 0.55 ) }
    dend_20 { pt3dadd( 6.95707, -94.2684, -2.66656, 0.55 ) }
    dend_20 { pt3dadd( 7.27644, -95.3369, -2.63743, 0.28 ) }
    dend_20 { pt3dadd( 8.23881, -98.5941, -2.60834, 0.55 ) }
    dend_20 { pt3dadd( 9.02278, -101.102, -2.52665, 0.28 ) }
    dend_20 { pt3dadd( 9.74356, -103.188, -2.41331, 0.55 ) }
    dend_20 { pt3dadd( 10.4492, -105.161, -2.23689, 0.28 ) }
    dend_20 { pt3dadd( 10.9105, -106.481, -2.04889, 0.55 ) }
    dend_20 { pt3dadd( 11.4123, -108.025, -1.74325, 0.28 ) }
    dend_20 { pt3dadd( 12.1001, -110.205, -1.16737, 0.55 ) }
    dend_20 { pt3dadd( 12.6045, -111.662, -0.718354, 0.28 ) }
    dend_20 { pt3dadd( 13.309, -113.665, -0.146381, 0.55 ) }
    dend_20 { pt3dadd( 14.6384, -117.269, 0.763987, 0.28 ) }
    dend_20 { pt3dadd( 15.3752, -119.119, 1.20896, 0.55 ) }
    dend_20 { pt3dadd( 17.1054, -123.181, 1.97245, 0.28 ) }
    dend_20 { pt3dadd( 17.9118, -125.04, 2.14945, 0.55 ) }
    dend_20 { pt3dadd( 19.1295, -127.768, 2.35234, 0.28 ) }
    dend_20 { pt3dadd( 19.9959, -129.68, 2.46149, 0.28 ) }
    dend_20 { pt3dadd( 21.0476, -131.991, 2.57242, 0.28 ) }
    dend_20 { pt3dadd( 21.7968, -133.897, 2.56119, 0.55 ) }
    dend_20 { pt3dadd( 22.8291, -137.135, 2.41913, 0.28 ) }
    dend_20 { pt3dadd( 23.5952, -140.134, 2.21051, 0.55 ) }
    dend_20 { pt3dadd( 24.3581, -144.068, 1.91662, 0.28 ) }
    dend_20 { pt3dadd( 24.5652, -145.611, 1.75579, 0.55 ) }
    dend_20 { pt3dadd( 24.8781, -149.765, 1.24335, 0.28 ) }
    dend_20 { pt3dadd( 24.8938, -151.62, 0.995037, 0.55 ) }
    dend_20 { pt3dadd( 24.781, -153.878, 0.595546, 0.28 ) }
    dend_20 { pt3dadd( 24.629, -155.372, 0.219178, 0.55 ) }
    dend_20 { pt3dadd( 24.3142, -157.551, -0.322174, 0.28 ) }
    dend_20 { pt3dadd( 23.9816, -159.82, -0.770644, 0.55 ) }
    dend_20 { pt3dadd( 23.5096, -163.105, -1.28394, 0.28 ) }
    dend_20 { pt3dadd( 23.3702, -164.288, -1.4491, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 23.2387, -166.056, -1.63747, 0.28 ) }
    dend_20 { pt3dadd( 23.1462, -168.135, -1.8747, 0.55 ) }
    dend_20 { pt3dadd( 23.1166, -171.157, -2.24048, 0.28 ) }
    dend_20 { pt3dadd( 23.2654, -172.801, -2.43566, 0.55 ) }
    dend_20 { pt3dadd( 23.5868, -174.146, -2.42826, 0.28 ) }
    dend_20 { pt3dadd( 23.9465, -175.305, -2.34993, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.13871, -43.7222, -8.32183, 0.55 ) }
    dend_19 { pt3dadd( -8.24144, -46.0919, -10.1851, 0.55 ) }
    dend_19 { pt3dadd( -8.26044, -46.827, -10.7476, 0.55 ) }
    dend_19 { pt3dadd( -8.323, -49.1035, -12.4188, 0.55 ) }
    dend_19 { pt3dadd( -8.43162, -53.2879, -15.4034, 0.55 ) }
    dend_19 { pt3dadd( -8.59198, -57.3427, -18.156, 0.83 ) }
    dend_19 { pt3dadd( -8.8446, -61.0589, -20.7208, 0.55 ) }
    dend_19 { pt3dadd( -8.94584, -62.8944, -21.9776, 0.55 ) }
    dend_19 { pt3dadd( -9.01547, -64.3085, -22.8937, 0.28 ) }
    dend_19 { pt3dadd( -9.20479, -67.6127, -24.8332, 0.55 ) }
    dend_19 { pt3dadd( -9.52039, -70.891, -26.4412, 0.55 ) }
    dend_19 { pt3dadd( -10.0146, -74.0531, -27.8657, 0.55 ) }
    dend_19 { pt3dadd( -10.6318, -77.7154, -29.3131, 0.55 ) }
    dend_19 { pt3dadd( -11.3406, -81.9266, -30.8097, 0.55 ) }
    dend_19 { pt3dadd( -11.8731, -84.8963, -31.6938, 0.83 ) }
    dend_19 { pt3dadd( -12.3819, -87.5119, -32.2777, 0.83 ) }
    dend_19 { pt3dadd( -12.8071, -89.588, -32.5859, 0.55 ) }
    dend_19 { pt3dadd( -13.1088, -90.9218, -32.7082, 0.55 ) }
    dend_19 { pt3dadd( -13.6788, -92.9621, -32.8847, 0.83 ) }
    dend_19 { pt3dadd( -14.7342, -96.5887, -33.294, 0.55 ) }
    dend_19 { pt3dadd( -15.3284, -98.9207, -33.6733, 0.28 ) }
    dend_19 { pt3dadd( -15.6682, -100.353, -33.962, 0.83 ) }
    dend_19 { pt3dadd( -16.2876, -102.733, -34.5378, 0.55 ) }
    dend_19 { pt3dadd( -16.768, -104.689, -35.1729, 0.28 ) }
    dend_19 { pt3dadd( -17.4202, -107.71, -36.2791, 0.55 ) }
    dend_19 { pt3dadd( -17.8049, -110.496, -37.3814, 0.28 ) }
    dend_19 { pt3dadd( -17.9463, -112.288, -38.0861, 0.28 ) }
    dend_19 { pt3dadd( -17.989, -114.782, -39.0314, 0.83 ) }
    dend_19 { pt3dadd( -17.868, -118.435, -40.3165, 0.28 ) }
    dend_19 { pt3dadd( -17.6758, -121.546, -41.3434, 0.83 ) }
    dend_19 { pt3dadd( -17.4369, -124.625, -42.2671, 0.28 ) }
    dend_19 { pt3dadd( -17.3454, -125.66, -42.5051, 0.83 ) }
    dend_19 { pt3dadd( -17.0812, -128.347, -43.0095, 0.55 ) }
    dend_19 { pt3dadd( -16.9239, -130.095, -43.2509, 0.28 ) }
    dend_19 { pt3dadd( -16.8204, -132.828, -43.4506, 0.55 ) }
    dend_19 { pt3dadd( -16.826, -135.377, -43.572, 0.28 ) }
    dend_19 { pt3dadd( -16.9971, -137.717, -43.6105, 0.55 ) }
    dend_19 { pt3dadd( -17.2216, -140.121, -43.6473, 0.28 ) }
    dend_19 { pt3dadd( -17.3693, -141.808, -43.685, 0.55 ) }
    dend_19 { pt3dadd( -17.4034, -143.012, -43.7338, 0.28 ) }
    dend_19 { pt3dadd( -17.3877, -143.68, -43.776, 0.55 ) }
    dend_19 { pt3dadd( -17.004, -146.884, -44.205, 0.28 ) }
    dend_19 { pt3dadd( -16.7909, -150.28, -44.2265, 0.83 ) }
    dend_19 { pt3dadd( -16.6664, -153.024, -43.9498, 0.28 ) }
    dend_19 { pt3dadd( -16.4005, -156.677, -43.315, 0.28 ) }
    dend_19 { pt3dadd( -16.175, -158.637, -42.8666, 0.83 ) }
    dend_19 { pt3dadd( -15.5169, -162.89, -41.5089, 0.28 ) }
    dend_19 { pt3dadd( -13.3775, -175.34, -35.7801, 0.83 ) }
    dend_19 { pt3dadd( -12.7505, -178.88, -33.9508, 0.55 ) }
    dend_19 { pt3dadd( -12.1578, -181.567, -32.6252, 0.55 ) }
    dend_19 { pt3dadd( -11.6487, -182.801, -32.3909, 0.55 ) }
    dend_19 { pt3dadd( -11.1501, -183.645, -32.5041, 0.28 ) }
    dend_19 { pt3dadd( -10.0023, -185.463, -32.8686, 0.55 ) }
    dend_19 { pt3dadd( -8.1351, -188.363, -33.4314, 0.28 ) }
    dend_19 { pt3dadd( -7.06334, -190.295, -33.6948, 0.55 ) }
    dend_19 { pt3dadd( -5.60528, -193.263, -34.0766, 0.28 ) }
    dend_19 { pt3dadd( -4.37074, -195.922, -34.5342, 0.83 ) }
    dend_19 { pt3dadd( -3.17579, -198.584, -35.1889, 0.28 ) }
    dend_19 { pt3dadd( -2.15428, -201.011, -36.0273, 0.55 ) }
    dend_19 { pt3dadd( -0.653587, -205.227, -37.7382, 0.28 ) }
    dend_19 { pt3dadd( -0.250653, -206.664, -38.4366, 0.55 ) }
    dend_19 { pt3dadd( 0.60957, -210.934, -40.8418, 0.28 ) }
    dend_19 { pt3dadd( 0.988058, -213.364, -42.5942, 0.55 ) }
    dend_19 { pt3dadd( 1.26398, -216.54, -45.2955, 0.28 ) }
    dend_19 { pt3dadd( 1.26369, -217.724, -46.4135, 0.55 ) }
    dend_19 { pt3dadd( 1.12502, -219.047, -47.7706, 0.28 ) }
    dend_19 { pt3dadd( 0.908798, -220.121, -49.0116, 0.55 ) }
    dend_19 { pt3dadd( 0.100684, -222.544, -52.2747, 0.28 ) }
    dend_19 { pt3dadd( -0.270075, -223.431, -53.6211, 0.55 ) }
    dend_19 { pt3dadd( -0.789224, -224.5, -55.4371, 0.55 ) }
    dend_19 { pt3dadd( -1.61327, -226.279, -58.4543, 0.28 ) }
    dend_19 { pt3dadd( -2.09299, -227.449, -60.314, 0.83 ) }
    dend_19 { pt3dadd( -2.56755, -228.716, -62.156, 0.28 ) }
    dend_19 { pt3dadd( -2.77525, -229.328, -62.9348, 0.55 ) }
    dend_19 { pt3dadd( -3.30053, -231.152, -64.9983, 0.28 ) }
    dend_19 { pt3dadd( -3.72576, -232.887, -66.7406, 0.55 ) }
    dend_19 { pt3dadd( -4.27488, -235.368, -68.8362, 0.28 ) }
    dend_19 { pt3dadd( -4.3999, -236.025, -69.338, 0.55 ) }
    dend_19 { pt3dadd( -4.84543, -238.451, -71.0669, 0.28 ) }
    dend_19 { pt3dadd( -5.15696, -240.153, -72.2516, 0.55 ) }
    dend_19 { pt3dadd( -6.03676, -244.354, -75.2017, 0.28 ) }
    dend_19 { pt3dadd( -6.46654, -246.036, -76.4275, 0.55 ) }
    dend_19 { pt3dadd( -6.75248, -246.958, -77.0556, 0.28 ) }
    dend_19 { pt3dadd( -6.87107, -247.329, -77.3126, 0.55 ) }
    dend_19 { pt3dadd( -7.5314, -249.071, -78.504, 0.28 ) }
    dend_19 { pt3dadd( -7.94262, -250.295, -79.5198, 0.55 ) }
    dend_19 { pt3dadd( -8.3206, -251.343, -80.4515, 0.28 ) }
    dend_19 { pt3dadd( -8.59711, -252.45, -81.5083, 0.55 ) }
    dend_19 { pt3dadd( -9.07506, -254.874, -83.6667, 0.28 ) }
    dend_19 { pt3dadd( -9.17059, -256.091, -84.8244, 0.55 ) }
    dend_19 { pt3dadd( -9.13707, -260.123, -88.814, 0.28 ) }
    dend_19 { pt3dadd( -8.95967, -261.96, -90.6514, 0.28 ) }
    dend_19 { pt3dadd( -8.5114, -264.63, -93.2803, 0.28 ) }
    dend_19 { pt3dadd( -8.12501, -266.401, -94.9385, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( -7.0836, -270.72, -98.4123, 0.55 ) }
    dend_19 { pt3dadd( -6.79468, -271.787, -99.1472, 0.28 ) }
    dend_19 { pt3dadd( -6.45587, -272.956, -99.8112, 0.55 ) }
    dend_19 { pt3dadd( -6.06399, -274.196, -100.538, 0.28 ) }
    dend_19 { pt3dadd( -5.79951, -275.327, -101.229, 0.55 ) }
    dend_19 { pt3dadd( -5.54763, -276.742, -102.066, 0.28 ) }
    dend_19 { pt3dadd( -5.43711, -278.167, -102.736, 0.55 ) }
    dend_19 { pt3dadd( -5.10866, -283.613, -105.245, 0.28 ) }
    dend_19 { pt3dadd( -5.04699, -284.909, -105.862, 0.55 ) }
    dend_19 { pt3dadd( -4.8127, -290.916, -108.864, 0.28 ) }
    dend_19 { pt3dadd( -4.75204, -292.579, -109.714, 0.55 ) }
    dend_19 { pt3dadd( -4.55574, -299.137, -113.034, 0.28 ) }
    dend_19 { pt3dadd( -4.52728, -300.971, -113.874, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -18.7728, -34.6433, 0.242245, 0.83 ) }
    dend_9 { pt3dadd( -20.8756, -32.8532, -0.983718, 0.83 ) }
    dend_9 { pt3dadd( -23.4389, -31.2007, -2.75601, 0.83 ) }
    dend_9 { pt3dadd( -25.6617, -30.0735, -4.41859, 0.83 ) }
    dend_9 { pt3dadd( -27.6482, -29.3316, -6.02242, 0.83 ) }
    dend_9 { pt3dadd( -30.7884, -28.5994, -8.80028, 0.83 ) }
    dend_9 { pt3dadd( -33.8482, -28.3159, -11.6513, 0.83 ) }
    dend_9 { pt3dadd( -36.366, -28.6861, -14.1775, 0.55 ) }
    dend_9 { pt3dadd( -38.0196, -29.1246, -15.8486, 0.55 ) }
    dend_9 { pt3dadd( -39.5014, -29.5812, -17.327, 0.83 ) }
    dend_9 { pt3dadd( -41.267, -30.0902, -18.9941, 0.55 ) }
    dend_9 { pt3dadd( -43.0023, -30.4151, -20.3296, 0.55 ) }
    dend_9 { pt3dadd( -45.9387, -30.5043, -22.2878, 0.55 ) }
    dend_9 { pt3dadd( -47.9923, -30.0649, -23.3222, 0.55 ) }
    dend_9 { pt3dadd( -50.2629, -29.2404, -24.2807, 0.55 ) }
    dend_9 { pt3dadd( -51.4734, -28.62, -24.8653, 0.55 ) }
    dend_9 { pt3dadd( -52.7197, -27.9307, -25.5037, 0.55 ) }
    dend_9 { pt3dadd( -54.7224, -26.8869, -26.6553, 0.55 ) }
    dend_9 { pt3dadd( -56.1468, -26.3872, -27.5552, 1.11 ) }
    dend_9 { pt3dadd( -57.2683, -26.2164, -28.2919, 1.11 ) }
    dend_9 { pt3dadd( -62.7393, -26.1481, -32.0913, 0.55 ) }
    dend_9 { pt3dadd( -64.5627, -26.2551, -33.3985, 0.55 ) }
    dend_9 { pt3dadd( -66.1216, -26.4255, -34.5517, 0.55 ) }
    dend_9 { pt3dadd( -68.794, -26.7656, -36.6172, 0.55 ) }
    dend_9 { pt3dadd( -71.1519, -26.9252, -38.7521, 0.55 ) }
    dend_9 { pt3dadd( -73.0667, -26.8125, -40.9995, 0.55 ) }
    dend_9 { pt3dadd( -73.8996, -26.6946, -42.2043, 0.28 ) }
    dend_9 { pt3dadd( -74.4857, -26.5317, -43.2561, 0.83 ) }
    dend_9 { pt3dadd( -75.8091, -25.9878, -45.9232, 0.83 ) }
    dend_9 { pt3dadd( -77.4243, -25.0745, -49.6218, 0.83 ) }
    dend_9 { pt3dadd( -79.1143, -23.848, -54.2208, 0.55 ) }
    dend_9 { pt3dadd( -79.8091, -23.3056, -56.2489, 0.55 ) }
    dend_9 { pt3dadd( -80.7219, -22.6783, -58.8113, 0.28 ) }
    dend_9 { pt3dadd( -81.1872, -22.403, -60.0003, 0.83 ) }
    dend_9 { pt3dadd( -82.1195, -21.8251, -62.2367, 0.55 ) }
    dend_9 { pt3dadd( -83.0667, -20.9108, -64.4045, 0.55 ) }
    dend_9 { pt3dadd( -84.2868, -19.3068, -67.2311, 0.28 ) }
    dend_9 { pt3dadd( -84.9603, -18.4414, -68.7062, 1.11 ) }
    dend_9 { pt3dadd( -85.4919, -17.8222, -69.9058, 0.83 ) }
    dend_9 { pt3dadd( -86.7376, -16.5621, -72.7419, 0.83 ) }
    dend_9 { pt3dadd( -88.288, -15.2792, -76.4033, 0.83 ) }
    dend_9 { pt3dadd( -90.7897, -13.5229, -82.2389, 0.28 ) }
    dend_9 { pt3dadd( -91.6115, -13.0292, -84.2235, 0.83 ) }
    dend_9 { pt3dadd( -94.0123, -11.6699, -90.3031, 0.28 ) }
    dend_9 { pt3dadd( -95.0674, -11.1669, -93.0708, 0.83 ) }
    dend_9 { pt3dadd( -97.1543, -10.5043, -98.6305, 0.28 ) }
    dend_9 { pt3dadd( -97.4596, -10.4699, -99.5267, 0.28 ) }
    dend_9 { pt3dadd( -97.9787, -10.4854, -101.215, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 61/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.7728, -34.6433, 0.242245, 1.11 ) }
    dend_4 { pt3dadd( -19.4017, -35.5028, 0.731246, 1.11 ) }
    dend_4 { pt3dadd( -20.3337, -36.4182, 1.34184, 1.11 ) }
    dend_4 { pt3dadd( -21.0213, -37.0512, 1.7509, 1.11 ) }
    dend_4 { pt3dadd( -21.9615, -38.0252, 2.43588, 1.11 ) }
    dend_4 { pt3dadd( -22.8458, -39.0737, 3.21005, 0.83 ) }
    dend_4 { pt3dadd( -23.4568, -39.8204, 3.77918, 0.83 ) }
    dend_4 { pt3dadd( -24.2454, -40.672, 4.51855, 0.83 ) }
    dend_4 { pt3dadd( -25.3034, -41.6423, 5.44932, 0.83 ) }
    dend_4 { pt3dadd( -26.7904, -42.9105, 6.65911, 1.11 ) }
    dend_4 { pt3dadd( -27.6069, -43.5439, 7.2315, 0.83 ) }
    dend_4 { pt3dadd( -28.3041, -44.0477, 7.685, 0.83 ) }
    dend_4 { pt3dadd( -29.4684, -44.7967, 8.37133, 0.83 ) }
    dend_4 { pt3dadd( -30.8334, -45.5577, 9.04722, 0.83 ) }
    dend_4 { pt3dadd( -32.0414, -46.1074, 9.51805, 0.83 ) }
    dend_4 { pt3dadd( -33.5139, -46.7333, 9.96402, 0.83 ) }
    dend_4 { pt3dadd( -34.7187, -47.2262, 10.296, 0.83 ) }
    dend_4 { pt3dadd( -35.7118, -47.6604, 10.5679, 0.83 ) }
    dend_4 { pt3dadd( -36.5193, -48.0467, 10.7843, 1.11 ) }
    dend_4 { pt3dadd( -37.5457, -48.5782, 11.0418, 0.83 ) }
    dend_4 { pt3dadd( -38.6109, -49.1489, 11.3055, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 82/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -97.9787, -10.4854, -101.215, 0.28 ) }
    dend_11 { pt3dadd( -101.703, -11.2591, -105.934, 0.28 ) }
    dend_11 { pt3dadd( -102.669, -11.4446, -107.101, 0.55 ) }
    dend_11 { pt3dadd( -104.519, -11.6772, -109.183, 0.28 ) }
    dend_11 { pt3dadd( -105.901, -11.6317, -110.786, 0.28 ) }
    dend_11 { pt3dadd( -107.823, -11.4452, -113.065, 0.55 ) }
    dend_11 { pt3dadd( -110.83, -11.1093, -116.517, 0.28 ) }
    dend_11 { pt3dadd( -111.74, -11.0298, -117.631, 0.55 ) }
    dend_11 { pt3dadd( -113.459, -10.8798, -119.83, 1.11 ) }
    dend_11 { pt3dadd( -117.006, -10.6539, -124.55, 0.28 ) }
    dend_11 { pt3dadd( -118.902, -10.6728, -127.247, 0.55 ) }
    dend_11 { pt3dadd( -121.096, -10.8288, -130.486, 0.55 ) }
    dend_11 { pt3dadd( -124.674, -11.6632, -136.219, 0.55 ) }
    dend_11 { pt3dadd( -126.216, -12.2288, -138.846, 0.55 ) }
    dend_11 { pt3dadd( -128.077, -13.1293, -142.134, 0.55 ) }
    dend_11 { pt3dadd( -129.416, -13.966, -144.531, 0.55 ) }
    dend_11 { pt3dadd( -131.76, -15.5673, -148.929, 0.55 ) }
    dend_11 { pt3dadd( -134.274, -17.4566, -153.926, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -136.901, -19.3677, -158.718, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -97.9787, -10.4854, -101.215, 0.55 ) }
    dend_10 { pt3dadd( -97.5698, -12.9607, -102.71, 0.55 ) }
    dend_10 { pt3dadd( -96.997, -16.428, -104.802, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -38.6109, -49.1489, 11.3055, 0.55 ) }
    dend_8 { pt3dadd( -40.5449, -51.0925, 11.9491, 0.55 ) }
    dend_8 { pt3dadd( -42.0078, -52.5185, 12.3669, 0.55 ) }
    dend_8 { pt3dadd( -43.7063, -53.9184, 12.882, 0.55 ) }
    dend_8 { pt3dadd( -46.1016, -55.667, 13.642, 0.55 ) }
    dend_8 { pt3dadd( -47.7499, -56.7003, 14.205, 0.55 ) }
    dend_8 { pt3dadd( -51.2554, -58.7248, 15.4242, 0.55 ) }
    dend_8 { pt3dadd( -54.5586, -60.6304, 16.5259, 0.55 ) }
    dend_8 { pt3dadd( -57.9683, -62.6945, 17.5571, 0.55 ) }
    dend_8 { pt3dadd( -60.0001, -63.9302, 18.247, 0.55 ) }
    dend_8 { pt3dadd( -62.7067, -65.5688, 19.2251, 0.55 ) }
    dend_8 { pt3dadd( -65.3594, -67.2406, 20.2837, 0.55 ) }
    dend_8 { pt3dadd( -67.3957, -68.4724, 21.2027, 0.55 ) }
    dend_8 { pt3dadd( -72.2497, -71.3004, 23.6093, 0.55 ) }
    dend_8 { pt3dadd( -75.843, -73.4288, 25.6213, 0.55 ) }
    dend_8 { pt3dadd( -77.1537, -74.2847, 26.4669, 0.83 ) }
    dend_8 { pt3dadd( -79.1372, -75.771, 27.9344, 0.55 ) }
    dend_8 { pt3dadd( -80.969, -77.1671, 29.537, 0.55 ) }
    dend_8 { pt3dadd( -82.8319, -78.6493, 31.3556, 0.55 ) }
    dend_8 { pt3dadd( -84.6437, -80.1442, 33.1739, 0.55 ) }
    dend_8 { pt3dadd( -87.1924, -82.6157, 35.5335, 0.55 ) }
    dend_8 { pt3dadd( -89.5604, -85.0156, 37.7089, 0.55 ) }
    dend_8 { pt3dadd( -91.8931, -87.4337, 39.7687, 0.55 ) }
    dend_8 { pt3dadd( -93.6851, -89.3, 41.3635, 0.55 ) }
    dend_8 { pt3dadd( -96.6482, -92.1587, 44.0605, 0.55 ) }
    dend_8 { pt3dadd( -99.1184, -94.0567, 46.1509, 0.55 ) }
    dend_8 { pt3dadd( -101.209, -95.2853, 47.8595, 0.55 ) }
    dend_8 { pt3dadd( -103.021, -96.1657, 49.3099, 0.55 ) }
    dend_8 { pt3dadd( -105.121, -97.1535, 50.9167, 0.55 ) }
    dend_8 { pt3dadd( -107.679, -98.3757, 52.9205, 0.83 ) }
    dend_8 { pt3dadd( -110.175, -99.6883, 54.8519, 0.55 ) }
    dend_8 { pt3dadd( -112.071, -100.715, 56.176, 0.55 ) }
    dend_8 { pt3dadd( -114.46, -102.188, 57.6647, 0.55 ) }
    dend_8 { pt3dadd( -115.814, -103.088, 58.407, 0.55 ) }
    dend_8 { pt3dadd( -118.413, -104.853, 59.6261, 0.55 ) }
    dend_8 { pt3dadd( -120.85, -106.674, 60.5883, 0.55 ) }
    dend_8 { pt3dadd( -123.289, -108.459, 61.5505, 0.55 ) }
    dend_8 { pt3dadd( -124.401, -109.234, 61.9633, 0.83 ) }
    dend_8 { pt3dadd( -127.381, -111.14, 62.9514, 0.55 ) }
    dend_8 { pt3dadd( -129.525, -112.372, 63.5987, 0.55 ) }
    dend_8 { pt3dadd( -135.352, -115.564, 65.0875, 0.55 ) }
    dend_8 { pt3dadd( -138.451, -117.146, 65.9658, 0.55 ) }
    dend_8 { pt3dadd( -142.478, -118.976, 67.2706, 0.55 ) }
    dend_8 { pt3dadd( -144.659, -119.87, 68.1648, 0.55 ) }
    dend_8 { pt3dadd( -146.751, -120.564, 69.2762, 1.38 ) }
    dend_8 { pt3dadd( -150.386, -121.51, 71.7334, 0.55 ) }
    dend_8 { pt3dadd( -153.691, -122.094, 74.6567, 0.55 ) }
    dend_8 { pt3dadd( -156.163, -122.663, 77.431, 0.55 ) }
    dend_8 { pt3dadd( -158.576, -123.164, 80.6785, 0.55 ) }
    dend_8 { pt3dadd( -160.612, -123.6, 83.7382, 0.55 ) }
    dend_8 { pt3dadd( -162.063, -123.926, 86.1609, 0.55 ) }
    dend_8 { pt3dadd( -163.9, -124.43, 89.5378, 0.55 ) }
    dend_8 { pt3dadd( -166.575, -125.567, 94.6432, 0.55 ) }
    dend_8 { pt3dadd( -167.741, -126.183, 96.9269, 0.55 ) }
    dend_8 { pt3dadd( -168.224, -126.456, 97.8149, 0.55 ) }
    dend_8 { pt3dadd( -169.147, -127.0, 99.3787, 0.28 ) }
    dend_8 { pt3dadd( -170.072, -127.46, 100.814, 0.83 ) }
    dend_8 { pt3dadd( -172.399, -128.193, 103.518, 0.28 ) }
    dend_8 { pt3dadd( -173.653, -128.327, 104.734, 0.28 ) }
    dend_8 { pt3dadd( -175.362, -128.342, 106.335, 0.55 ) }
    dend_8 { pt3dadd( -178.284, -128.241, 108.911, 0.55 ) }
    dend_8 { pt3dadd( -182.181, -128.041, 112.126, 0.28 ) }
    dend_8 { pt3dadd( -185.711, -127.858, 114.918, 0.28 ) }
    dend_8 { pt3dadd( -188.817, -127.705, 117.2, 0.55 ) }
    dend_8 { pt3dadd( -190.303, -127.621, 118.303, 0.55 ) }
    dend_8 { pt3dadd( -192.493, -127.556, 119.911, 0.55 ) }
    dend_8 { pt3dadd( -194.798, -127.551, 121.691, 0.28 ) }
    dend_8 { pt3dadd( -195.679, -127.556, 122.235, 0.55 ) }
    dend_8 { pt3dadd( -197.181, -127.634, 123.09, 0.28 ) }
    dend_8 { pt3dadd( -197.636, -127.681, 123.289, 0.55 ) }
    dend_8 { pt3dadd( -200.249, -127.771, 124.298, 0.28 ) }
    dend_8 { pt3dadd( -201.915, -127.723, 124.918, 0.83 ) }
    dend_8 { pt3dadd( -204.596, -127.59, 125.814, 0.28 ) }
    dend_8 { pt3dadd( -206.937, -127.479, 126.556, 0.28 ) }
    dend_8 { pt3dadd( -210.039, -127.388, 127.457, 0.28 ) }
    dend_8 { pt3dadd( -212.862, -127.268, 128.211, 0.28 ) }
    dend_8 { pt3dadd( -223.429, -132.233, 132.896, 0.28 ) }
    dend_8 { pt3dadd( -232.659, -138.817, 138.448, 0.28 ) }
    dend_8 { pt3dadd( -241.503, -144.877, 145.04, 0.28 ) }
    dend_8 { pt3dadd( -250.067, -151.291, 151.687, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -38.6109, -49.1489, 11.3055, 0.55 ) }
    dend_5 { pt3dadd( -39.4417, -52.0171, 10.5038, 0.55 ) }
    dend_5 { pt3dadd( -40.0713, -54.3563, 9.70675, 0.55 ) }
    dend_5 { pt3dadd( -40.3958, -55.607, 9.20388, 0.55 ) }
    dend_5 { pt3dadd( -40.8717, -57.2584, 8.52323, 0.83 ) }
    dend_5 { pt3dadd( -41.958, -60.6402, 7.19444, 0.83 ) }
    dend_5 { pt3dadd( -42.7992, -63.1833, 6.27066, 0.55 ) }
    dend_5 { pt3dadd( -43.3725, -64.7212, 5.74222, 0.83 ) }
    dend_5 { pt3dadd( -44.1936, -66.8054, 5.08207, 0.55 ) }
    dend_5 { pt3dadd( -44.9136, -68.5264, 4.55942, 0.55 ) }
    dend_5 { pt3dadd( -46.1454, -71.2095, 3.82812, 0.55 ) }
    dend_5 { pt3dadd( -47.6323, -74.225, 3.11956, 0.55 ) }
    dend_5 { pt3dadd( -49.4454, -77.8814, 2.41608, 0.55 ) }
    dend_5 { pt3dadd( -50.0228, -79.0299, 2.21487, 0.55 ) }
    dend_5 { pt3dadd( -51.8484, -82.7025, 1.63237, 0.55 ) }
    dend_5 { pt3dadd( -52.7554, -84.653, 1.26371, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 0/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -136.901, -19.3677, -158.718, 0.55 ) }
    dend_13 { pt3dadd( -139.096, -19.1656, -162.207, 0.55 ) }
    dend_13 { pt3dadd( -140.022, -19.1281, -163.551, 0.55 ) }
    dend_13 { pt3dadd( -141.667, -19.0088, -165.735, 0.55 ) }
    dend_13 { pt3dadd( -142.367, -18.9426, -166.58, 0.55 ) }
    dend_13 { pt3dadd( -143.973, -18.8043, -168.43, 0.55 ) }
    dend_13 { pt3dadd( -146.212, -18.6183, -170.943, 0.55 ) }
    dend_13 { pt3dadd( -147.407, -18.4766, -172.092, 0.55 ) }
    dend_13 { pt3dadd( -148.368, -18.3626, -172.969, 0.55 ) }
    dend_13 { pt3dadd( -149.342, -18.3136, -173.744, 0.55 ) }
    dend_13 { pt3dadd( -150.47, -18.2621, -174.609, 0.55 ) }
    dend_13 { pt3dadd( -151.358, -18.1744, -175.172, 0.55 ) }
    dend_13 { pt3dadd( -152.148, -18.0118, -175.603, 0.28 ) }
    dend_13 { pt3dadd( -153.247, -17.7783, -176.224, 0.55 ) }
    dend_13 { pt3dadd( -155.378, -17.3976, -177.733, 0.28 ) }
    dend_13 { pt3dadd( -155.725, -17.3783, -178.023, 0.28 ) }
    dend_13 { pt3dadd( -156.158, -17.3946, -178.419, 0.55 ) }
    dend_13 { pt3dadd( -157.345, -17.539, -179.583, 0.55 ) }
    dend_13 { pt3dadd( -158.155, -17.7204, -180.443, 0.55 ) }
    dend_13 { pt3dadd( -160.475, -18.5639, -183.199, 0.55 ) }
    dend_13 { pt3dadd( -162.138, -19.3107, -185.235, 0.55 ) }
    dend_13 { pt3dadd( -162.911, -19.7155, -186.225, 0.55 ) }
    dend_13 { pt3dadd( -163.692, -20.2113, -187.31, 0.55 ) }
    dend_13 { pt3dadd( -164.277, -20.6988, -188.221, 0.55 ) }
    dend_13 { pt3dadd( -165.155, -21.59, -189.715, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -136.901, -19.3677, -158.718, 0.55 ) }
    dend_12 { pt3dadd( -135.104, -17.5266, -159.251, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 27/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -52.7554, -84.653, 1.26371, 0.55 ) }
    dend_7 { pt3dadd( -54.5126, -86.8404, 1.05437, 0.55 ) }
    dend_7 { pt3dadd( -55.8421, -88.2927, 0.738154, 0.28 ) }
    dend_7 { pt3dadd( -57.2065, -89.4161, 0.426863, 0.55 ) }
    dend_7 { pt3dadd( -59.3326, -90.8477, -0.407637, 0.55 ) }
    dend_7 { pt3dadd( -61.1221, -91.7933, -1.33665, 0.28 ) }
    dend_7 { pt3dadd( -61.8462, -92.1697, -1.77051, 0.83 ) }
    dend_7 { pt3dadd( -64.4338, -93.3588, -3.4121, 0.55 ) }
    dend_7 { pt3dadd( -66.9515, -94.3763, -4.9873, 0.55 ) }
    dend_7 { pt3dadd( -70.8014, -95.6419, -7.56765, 0.55 ) }
    dend_7 { pt3dadd( -74.3352, -96.6452, -9.95626, 0.55 ) }
    dend_7 { pt3dadd( -78.2345, -97.7329, -12.5905, 0.55 ) }
    dend_7 { pt3dadd( -79.4218, -98.0652, -13.3691, 0.55 ) }
    dend_7 { pt3dadd( -81.3893, -98.6533, -14.6166, 0.55 ) }
    dend_7 { pt3dadd( -83.815, -99.3526, -16.0323, 0.55 ) }
    dend_7 { pt3dadd( -87.5668, -100.313, -18.023, 0.55 ) }
    dend_7 { pt3dadd( -89.3366, -100.723, -19.072, 0.55 ) }
    dend_7 { pt3dadd( -92.5934, -101.527, -21.2417, 0.55 ) }
    dend_7 { pt3dadd( -94.8258, -102.204, -22.903, 0.28 ) }
    dend_7 { pt3dadd( -97.4191, -103.157, -24.9861, 0.55 ) }
    dend_7 { pt3dadd( -100.678, -104.547, -27.658, 0.55 ) }
    dend_7 { pt3dadd( -104.952, -106.469, -31.2853, 0.55 ) }
    dend_7 { pt3dadd( -107.751, -107.84, -33.6558, 0.55 ) }
    dend_7 { pt3dadd( -109.09, -108.619, -34.8616, 0.28 ) }
    dend_7 { pt3dadd( -110.743, -109.691, -36.4338, 0.55 ) }
    dend_7 { pt3dadd( -113.349, -111.504, -38.9998, 0.28 ) }
    dend_7 { pt3dadd( -114.076, -111.988, -39.6629, 0.28 ) }
    dend_7 { pt3dadd( -114.791, -112.443, -40.3048, 0.28 ) }
    dend_7 { pt3dadd( -117.306, -113.83, -42.5129, 1.38 ) }
    dend_7 { pt3dadd( -120.216, -115.372, -44.9613, 0.55 ) }
    dend_7 { pt3dadd( -121.772, -116.172, -46.2454, 0.28 ) }
    dend_7 { pt3dadd( -122.46, -116.556, -46.8266, 0.55 ) }
    dend_7 { pt3dadd( -124.199, -117.67, -48.2873, 0.28 ) }
    dend_7 { pt3dadd( -125.28, -118.485, -49.1436, 0.55 ) }
    dend_7 { pt3dadd( -126.515, -119.987, -49.804, 0.28 ) }
    dend_7 { pt3dadd( -126.788, -120.389, -49.9007, 0.55 ) }
    dend_7 { pt3dadd( -127.948, -122.305, -50.2524, 0.28 ) }
    dend_7 { pt3dadd( -128.792, -123.774, -50.4672, 0.55 ) }
    dend_7 { pt3dadd( -129.784, -125.562, -50.6664, 0.28 ) }
    dend_7 { pt3dadd( -133.889, -133.177, -51.4753, 0.55 ) }
    dend_7 { pt3dadd( -134.959, -135.199, -51.6689, 0.28 ) }
    dend_7 { pt3dadd( -135.678, -136.534, -51.7799, 0.55 ) }
    dend_7 { pt3dadd( -136.511, -138.018, -51.8463, 0.28 ) }
    dend_7 { pt3dadd( -136.834, -138.618, -51.8787, 0.55 ) }
    dend_7 { pt3dadd( -137.447, -139.831, -51.9176, 0.28 ) }
    dend_7 { pt3dadd( -138.088, -141.199, -51.9861, 0.55 ) }
    dend_7 { pt3dadd( -138.865, -142.772, -52.0881, 0.28 ) }
    dend_7 { pt3dadd( -140.075, -145.14, -52.239, 0.83 ) }
    dend_7 { pt3dadd( -141.306, -147.476, -52.3589, 0.28 ) }
    dend_7 { pt3dadd( -142.252, -149.282, -52.4365, 0.28 ) }
    dend_7 { pt3dadd( -143.734, -152.147, -52.5165, 0.55 ) }
    dend_7 { pt3dadd( -145.232, -155.029, -52.6246, 0.28 ) }
    dend_7 { pt3dadd( -146.682, -157.977, -52.6402, 0.28 ) }
    dend_7 { pt3dadd( -147.023, -158.669, -52.6345, 0.55 ) }
    dend_7 { pt3dadd( -148.128, -160.841, -52.5301, 0.28 ) }
    dend_7 { pt3dadd( -148.755, -162.133, -52.4976, 0.55 ) }
    dend_7 { pt3dadd( -149.793, -164.476, -52.391, 0.28 ) }
    dend_7 { pt3dadd( -150.766, -167.361, -52.1789, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -52.7554, -84.653, 1.26371, 0.28 ) }
    dend_6 { pt3dadd( -51.2249, -87.3872, 1.51785, 0.28 ) }
    dend_6 { pt3dadd( -50.1186, -89.2956, 1.75214, 0.28 ) }
    dend_6 { pt3dadd( -49.6025, -90.1857, 1.86142, 0.55 ) }
    dend_6 { pt3dadd( -48.8337, -91.5118, 2.02423, 0.28 ) }
    dend_6 { pt3dadd( -48.2236, -92.5642, 2.15343, 0.55 ) }
    dend_6 { pt3dadd( -46.1816, -96.0865, 2.58587, 0.28 ) }
    dend_6 { pt3dadd( -44.7303, -98.7433, 3.1591, 0.55 ) }
    dend_6 { pt3dadd( -37.2257, -109.639, 5.4666, 0.55 ) }
    dend_6 { pt3dadd( -29.361, -120.526, 5.98373, 0.55 ) }
    dend_6 { pt3dadd( -21.3371, -131.294, 6.29211, 0.55 ) }
    dend_6 { pt3dadd( -13.3152, -142.07, 6.42021, 0.55 ) }
    dend_6 { pt3dadd( -2.91378, -150.291, 6.95091, 0.55 ) }
    dend_6 { pt3dadd( 6.94713, -159.14, 5.62872, 0.55 ) }
    dend_6 { pt3dadd( 15.3906, -169.548, 5.96439, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( 22.2927, -181.016, 4.16021, 0.55 ) }
    dend_6 { pt3dadd( 28.4272, -193.087, 4.31778, 0.55 ) }
    dend_6 { pt3dadd( 34.0844, -205.391, 4.97326, 0.55 ) }
    dend_6 { pt3dadd( 40.9351, -217.028, 5.04587, 0.55 ) }
    dend_6 { pt3dadd( 48.6095, -228.081, 4.75827, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 5/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -165.155, -21.59, -189.715, 0.28 ) }
    dend_15 { pt3dadd( -166.768, -22.3568, -190.307, 0.28 ) }
    dend_15 { pt3dadd( -168.512, -22.6338, -191.813, 0.28 ) }
    dend_15 { pt3dadd( -170.208, -22.7928, -193.371, 0.28 ) }
    dend_15 { pt3dadd( -171.862, -22.8891, -194.837, 0.28 ) }
    dend_15 { pt3dadd( -173.806, -22.9071, -196.446, 0.28 ) }
    dend_15 { pt3dadd( -175.733, -22.5943, -199.009, 0.28 ) }
    dend_15 { pt3dadd( -178.875, -21.6492, -204.51, 0.28 ) }
    dend_15 { pt3dadd( -179.489, -21.3816, -205.855, 0.55 ) }
    dend_15 { pt3dadd( -179.977, -21.1041, -207.07, 0.28 ) }
    dend_15 { pt3dadd( -180.459, -20.8462, -208.3, 0.55 ) }
    dend_15 { pt3dadd( -184.424, -19.2638, -218.468, 0.55 ) }
    dend_15 { pt3dadd( -184.887, -19.13, -219.521, 0.28 ) }
    dend_15 { pt3dadd( -185.864, -19.0527, -221.642, 0.55 ) }
    dend_15 { pt3dadd( -186.839, -19.0359, -223.617, 0.55 ) }
    dend_15 { pt3dadd( -188.073, -19.2163, -225.999, 0.55 ) }
    dend_15 { pt3dadd( -189.187, -19.6111, -227.83, 0.55 ) }
    dend_15 { pt3dadd( -190.546, -20.3275, -229.368, 0.55 ) }
    dend_15 { pt3dadd( -192.1, -21.158, -231.259, 0.83 ) }
    dend_15 { pt3dadd( -192.525, -21.4316, -231.802, 0.83 ) }
    dend_15 { pt3dadd( -193.932, -22.5093, -233.807, 0.28 ) }
    dend_15 { pt3dadd( -195.393, -23.6145, -235.844, 0.55 ) }
    dend_15 { pt3dadd( -197.113, -24.6695, -237.783, 0.28 ) }
    dend_15 { pt3dadd( -197.825, -25.1406, -238.539, 0.55 ) }
    dend_15 { pt3dadd( -198.99, -25.895, -239.723, 0.28 ) }
    dend_15 { pt3dadd( -199.692, -26.304, -240.403, 0.28 ) }
    dend_15 { pt3dadd( -200.851, -26.7519, -241.268, 0.55 ) }
    dend_15 { pt3dadd( -203.513, -27.6342, -242.724, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -165.155, -21.59, -189.715, 0.55 ) }
    dend_14 { pt3dadd( -164.237, -23.9981, -190.302, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, axon_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, axon_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_5 = new SectionList()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_21 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_29 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_27 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_26 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_23 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_17 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_28 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_22 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_21 nseg = 3
    dend_37 nseg = 13
    dend_36 nseg = 7
    dend_34 nseg = 13
    dend_29 nseg = 3
    dend_25 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 13
    dend_27 nseg = 5
    dend_26 nseg = 3
    dend_24 nseg = 7
    dend_23 nseg = 7
    dend_17 nseg = 9
    dend_2 nseg = 17
    dend_20 nseg = 7
    dend_19 nseg = 15
    dend_9 nseg = 7
    dend_11 nseg = 3
    dend_8 nseg = 15
    dend_13 nseg = 3
    dend_7 nseg = 7
    dend_6 nseg = 9
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L23_NBC_d359064733_0_0


