// Cell: dNAC222_L4_SBC_799e027057_0_0
/*
{
  "id" : "dNAC222_L4_SBC_799e027057_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.13028, -11.6226, 1.65672, 3.3543", "1.89603, -10.6065, 1.5057, 5.84145", "1.66177, -9.59039, 1.35468, 8.98469", "1.42751, -8.57427, 1.20366, 10.1954", "1.19325, -7.55816, 1.05265, 11.9017", "0.958989, -6.54205, 0.901631, 13.2141", "0.72473, -5.52593, 0.750614, 14.1624", "0.490471, -4.50982, 0.599597, 14.8105", "0.256212, -3.49371, 0.44858, 15.133", "0.0219531, -2.47759, 0.297563, 15.4087", "-0.212306, -1.46148, 0.146546, 15.7558", "-0.446565, -0.445366, -0.00447116, 16.1589", "-0.680824, 0.570747, -0.155488, 16.481", "-0.915083, 1.58686, -0.306505, 16.3666", "-1.14934, 2.60297, -0.457522, 16.058", "-1.3836, 3.61909, -0.608539, 15.598", "-1.61786, 4.6352, -0.759556, 14.7754", "-1.85212, 5.65131, -0.910573, 13.4156", "-2.08638, 6.66743, -1.06159, 9.84057", "-2.32064, 7.68354, -1.21261, 7.78253", "-2.5549, 8.69965, -1.36362, 4.37258" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.64816, 4.73815, -4.16268, 1.4", "6.51572, 5.65375, -4.50779, 1.4", "7.58453, 6.7031, -4.93403, 1.55", "8.58767, 7.65396, -5.35876, 1.77", "9.64195, 8.61598, -5.7928, 1.77", "10.6732, 9.54136, -6.24573, 1.55", "11.9582, 10.6594, -6.86427, 1.25", "12.7113, 11.2688, -7.26852, 1.4", "13.6678, 12.0261, -7.76579, 1.4", "14.5627, 12.7501, -8.21643, 1.77", "15.4455, 13.5075, -8.60901, 2.28", "16.2864, 14.2634, -8.88351, 2.28", "17.2536, 15.1443, -9.14668, 2.36", "18.5238, 16.3321, -9.41584, 1.84", "19.7392, 17.489, -9.56658, 1.11", "20.8098, 18.5394, -9.60321, 1.33", "22.29, 20.0015, -9.43509, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.20816, 3.99815, 3.65732, 2.28", "5.54827, 4.4529, 4.39692, 2.28", "6.53452, 5.76299, 6.40593, 2.28", "6.90658, 6.25967, 7.11204, 2.06", "7.9165, 7.62718, 8.94481, 2.14", "8.36545, 8.23125, 9.73386, 1.47", "9.20236, 9.30577, 11.1449, 0.96", "9.4576, 9.62006, 11.5621, 1.4", "9.78076, 9.98687, 12.0374, 1.4", "10.289, 10.501, 12.7568, 1.55", "10.7975, 10.9567, 13.4265, 1.69", "11.5492, 11.565, 14.4682, 1.47", "12.0499, 11.9787, 15.1794, 1.33", "12.5388, 12.4261, 15.898, 1.84", "12.8877, 12.7859, 16.4067, 2.06", "13.3923, 13.4224, 17.1029, 2.28", "14.1086, 14.564, 17.991, 1.99", "14.6012, 15.5564, 18.5073, 1.47", "14.9978, 16.4843, 18.8268, 1.47", "15.3126, 17.3759, 19.005, 1.33", "15.7066, 18.7511, 19.1195, 1.62", "15.938, 19.8337, 19.0804, 1.55", "16.0835, 20.7359, 18.9773, 1.33", "16.2042, 21.6075, 18.8582, 1.18", "16.3193, 22.4439, 18.7768, 0.96", "16.4312, 23.1472, 18.7486, 0.96", "16.6437, 24.1698, 18.7976, 0.96", "16.9785, 25.4127, 18.9737, 1.18", "17.2526, 26.1988, 19.139, 1.4", "17.6499, 27.1477, 19.3824, 1.4", "17.9378, 27.7612, 19.5517, 1.47", "18.3287, 28.5755, 19.7664, 1.25", "18.6411, 29.2368, 19.8909, 1.03", "19.1069, 30.3158, 19.9769, 0.96", "19.5412, 31.4007, 19.9503, 0.81", "19.8128, 32.1698, 19.861, 0.66", "20.0887, 33.0349, 19.7461, 0.74", "20.4519, 34.2892, 19.5741, 0.59", "20.707, 35.2086, 19.4606, 0.44", "20.9752, 36.1795, 19.3737, 0.44", "21.282, 37.2293, 19.311, 0.59", "21.5797, 38.1671, 19.3047, 0.88", "21.9254, 39.2082, 19.3462, 1.77", "22.145, 39.87, 19.4337, 1.92", "22.4375, 40.7535, 19.5852, 1.4", "22.732, 41.6237, 19.7663, 1.18", "23.1075, 42.5814, 19.9968, 0.52", "23.3448, 43.1066, 20.1291, 0.66", "23.8555, 44.0816, 20.4363, 0.66", "24.0181, 44.3538, 20.537, 0.88", "24.5473, 45.1321, 20.8676, 0.66", "24.9904, 45.7201, 21.1437, 0.52", "25.4803, 46.2794, 21.3959, 0.81", "25.8929, 46.7178, 21.5987, 0.81", "26.4018, 47.2557, 21.8207, 0.74", "26.6681, 47.5604, 21.9448, 0.52", "27.1497, 48.159, 22.1715, 0.29", "27.6706, 48.8839, 22.409, 0.29", "28.265, 49.7899, 22.6673, 0.44", "28.8957, 50.8218, 22.8994, 0.59", "29.5345, 51.9457, 23.0928, 0.59", "29.955, 52.7102, 23.1927, 0.88", "30.2376, 53.2415, 23.2414, 1.11", "30.4881, 53.7279, 23.266, 1.33", "31.0463, 54.7503, 23.2725, 1.62", "31.4684, 55.5091, 23.2736, 2.06", "31.788, 56.0609, 23.2664, 2.43", "32.1951, 56.7604, 23.2719, 2.58", "32.5235, 57.3292, 23.2929, 2.58", "32.8579, 57.9236, 23.3357, 2.36", "33.1412, 58.4628, 23.3949, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.55816, -6.32185, -1.59268, 0.96", "7.01306, -6.51281, -1.732, 0.96", "7.69978, -6.85585, -2.05594, 0.74", "8.32893, -7.21375, -2.45331, 0.81", "9.07539, -7.53911, -3.24499, 0.81", "9.46667, -7.65992, -3.77374, 1.25", "9.97988, -7.75792, -4.50018, 1.03", "10.6797, -7.81991, -5.56539, 1.03", "11.3827, -7.84248, -6.66581, 1.25", "13.4276, -7.87756, -9.77009, 1.25", "14.1859, -7.90815, -10.8435, 1.25", "14.7746, -7.96755, -11.5841, 0.74", "15.476, -8.08449, -12.3164, 0.59", "16.2584, -8.28388, -13.0056, 0.81", "17.2927, -8.67962, -13.7491, 0.96", "18.2067, -9.16157, -14.3021, 1.18", "19.2902, -9.75288, -15.0038, 0.96", "20.6028, -10.4751, -15.9136, 1.03", "21.7584, -11.0861, -16.7774, 1.03", "22.3893, -11.4028, -17.2588, 0.88", "23.5557, -11.9523, -18.1557, 0.88", "24.7423, -12.4831, -19.0336, 0.88", "25.5331, -12.8391, -19.5803, 0.74", "27.0958, -13.5261, -20.5673, 0.59", "27.8268, -13.8096, -21.0261, 0.81", "28.4594, -14.0169, -21.4727, 0.81", "29.3712, -14.2779, -22.1543, 0.37", "30.038, -14.4559, -22.6552, 0.37", "30.9767, -14.6883, -23.3551, 1.18", "32.3487, -15.0116, -24.3476, 1.69", "34.3383, -15.512, -25.7855, 0.37", "35.0606, -15.7428, -26.294, 0.59", "36.0647, -16.1523, -26.9831, 0.22", "36.9288, -16.5973, -27.57, 1.03", "37.3798, -16.8799, -27.869, 1.25", "37.8692, -17.2484, -28.1676, 1.25", "38.9855, -18.1475, -28.9115, 0.22", "39.6485, -18.6733, -29.4069, 1.03", "40.4611, -19.3272, -30.0772, 1.55", "40.8672, -19.6557, -30.4345, 1.77", "41.459, -20.1424, -30.9702, 1.4", "42.8987, -21.2489, -32.2868, 0.37", "43.3009, -21.516, -32.6314, 0.37", "44.0187, -21.9257, -33.1809, 0.59", "44.6703, -22.2011, -33.5484, 0.81", "45.3854, -22.4236, -33.8671, 0.81", "46.4299, -22.6521, -34.2416, 1.18", "47.4376, -22.807, -34.5267, 0.88", "48.9222, -22.9549, -34.9158, 0.22", "51.2257, -23.0692, -35.4926, 0.22", "52.1317, -23.1031, -35.7068, 0.81", "52.7157, -23.1275, -35.8392, 1.25", "53.4687, -23.1771, -36.025, 1.4", "54.352, -23.2566, -36.2732, 1.03", "55.3684, -23.4186, -36.6262, 0.22", "56.8638, -23.8122, -37.272, 0.22", "57.3789, -23.9917, -37.5122, 0.96", "58.1171, -24.284, -37.8942, 1.18", "58.5889, -24.4739, -38.1948, 1.33", "60.3848, -25.2213, -39.558, 0.22", "60.8563, -25.4212, -39.9747, 0.74", "61.3448, -25.6334, -40.4504, 1.33", "62.253, -26.0223, -41.3777, 1.55", "63.7622, -26.6599, -42.9755, 0.66", "64.5385, -26.9788, -43.826, 0.29", "65.176, -27.2241, -44.5351, 0.52", "66.1941, -27.6009, -45.6392, 0.29", "67.144, -27.9258, -46.669, 0.96", "67.8941, -28.1789, -47.4833, 0.96", "69.2296, -28.618, -48.8687, 0.29", "70.0578, -28.8491, -49.7341, 0.29", "70.8699, -29.0514, -50.5959, 1.03", "72.0017, -29.3151, -51.7705, 1.03", "73.2363, -29.6331, -52.935, 0.37", "74.0817, -29.8801, -53.7685, 0.22", "75.134, -30.2125, -54.8308, 0.88", "75.838, -30.4739, -55.521, 0.88", "77.318, -31.1044, -56.9265, 0.22", "78.8616, -31.8376, -58.361, 1.03", "81.8871, -33.5298, -61.2043, 0.22", "82.5811, -33.9903, -61.8876, 0.44", "83.9659, -35.0526, -63.2894, 0.29", "84.8473, -35.7698, -64.2039, 0.81", "85.3502, -36.2223, -64.7597, 0.81", "87.0683, -37.9628, -66.6753, 0.22", "88.4899, -39.6381, -68.0789, 0.66", "88.9677, -40.2684, -68.6012, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.56184, -4.06185, -7.16268, 0.66", "-8.03902, -4.46589, -6.95123, 0.66", "-8.57961, -4.88003, -6.7665, 0.74", "-9.70143, -5.6937, -6.48427, 0.59", "-10.2374, -6.09173, -6.39013, 0.59", "-10.9146, -6.59352, -6.3107, 0.74", "-11.6817, -7.15283, -6.24845, 0.96", "-12.1597, -7.50407, -6.24596, 1.4", "-12.6979, -7.91012, -6.25752, 1.4", "-13.8699, -8.84289, -6.33403, 1.25", "-14.8491, -9.69862, -6.40389, 0.74", "-15.7594, -10.5557, -6.45748, 0.37", "-16.619, -11.4371, -6.48951, 0.37", "-17.53, -12.3937, -6.51274, 1.03", "-17.9745, -12.8692, -6.51389, 1.4", "-18.5368, -13.4764, -6.52278, 1.33", "-19.1863, -14.1988, -6.5455, 0.74", "-19.9299, -14.9997, -6.59397, 0.22", "-20.357, -15.3939, -6.6436, 0.22", "-20.6907, -15.6549, -6.71962, 0.22", "-21.8074, -16.4015, -7.07962, 1.25", "-22.1272, -16.5744, -7.21967, 1.55", "-22.5055, -16.7551, -7.42054, 1.55", "-23.4031, -17.1538, -7.93072, 1.18", "-24.1077, -17.5143, -8.34476, 1.33", "-24.8504, -17.9395, -8.78142, 1.55", "-25.9613, -18.6759, -9.42568, 0.74", "-27.3093, -19.7421, -10.1853, 0.44", "-27.7971, -20.2304, -10.4661, 0.44", "-28.7132, -21.3993, -10.9968, 0.29", "-29.133, -22.0449, -11.2296, 0.59", "-29.5548, -22.8118, -11.4411, 0.81", "-29.8956, -23.5481, -11.6024, 0.37", "-30.5257, -25.0968, -11.8942, 0.29", "-30.9761, -26.2665, -12.1004, 0.74", "-31.3355, -27.2073, -12.2819, 1.25", "-31.7137, -28.1312, -12.4947, 1.77", "-32.092, -29.0171, -12.7227, 2.06", "-32.4335, -29.8553, -12.9527, 1.77", "-32.8648, -30.9617, -13.3745, 0.66", "-33.2309, -31.9391, -13.8605, 0.29", "-33.5431, -32.8122, -14.3738, 0.22", "-33.7932, -33.5265, -14.8369, 0.22", "-34.0434, -34.2264, -15.3671, 0.22", "-34.7753, -36.0247, -16.9445, 0.96", "-34.98, -36.4548, -17.355, 1.4", "-35.1758, -36.8197, -17.6981, 1.55", "-35.5302, -37.4064, -18.2703, 0.96", "-36.2237, -38.3665, -19.2609, 0.37", "-36.9701, -39.2766, -20.1564, 0.15", "-37.7943, -40.2621, -21.0365, 0.15", "-38.1965, -40.7662, -21.4623, 1.18", "-38.6751, -41.4, -21.96, 1.69", "-38.8263, -41.6206, -22.1147, 1.92", "-39.4181, -42.6351, -22.7007, 1.18", "-39.7747, -43.426, -23.1231, 0.59", "-40.2245, -44.9903, -23.9166, 0.22", "-40.3586, -45.7965, -24.3149, 0.22", "-40.4013, -46.4064, -24.6343, 0.96", "-40.3972, -46.9124, -24.9229, 1.25", "-40.3324, -47.6549, -25.4177, 1.4", "-40.1421, -49.042, -26.4369, 0.22", "-40.0398, -49.5885, -26.8908, 1.03", "-39.8373, -50.6882, -27.8702, 1.18", "-39.7743, -51.1142, -28.2642, 0.88", "-39.6455, -52.3401, -29.4309, 0.22", "-39.6117, -52.934, -30.0136, 0.66", "-39.6126, -53.3499, -30.4368, 0.81", "-39.6423, -54.0026, -31.0582, 0.52", "-39.689, -54.435, -31.4353, 0.22", "-39.7843, -54.9057, -31.8752, 0.66", "-39.9961, -55.4576, -32.4233, 0.81", "-40.1911, -55.8775, -32.8394, 0.81", "-40.3358, -56.175, -33.1202, 1.03", "-40.775, -57.0659, -33.9432, 0.88", "-41.2381, -58.0039, -34.785, 0.52", "-42.5005, -60.5591, -36.8926, 0.22", "-43.1429, -61.8068, -37.8583, 0.22", "-43.5662, -62.6041, -38.4395, 1.03", "-43.8679, -63.1726, -38.815, 1.25", "-44.1934, -63.7839, -39.1524, 1.18", "-45.331, -65.863, -40.0618, 0.15", "-45.839, -66.649, -40.3921, 0.15", "-46.1602, -67.0672, -40.6255, 0.88", "-46.6998, -67.67, -41.103, 1.18", "-47.3426, -68.2982, -41.7432, 0.52", "-47.9113, -68.7937, -42.5618, 0.22", "-49.1431, -69.7374, -44.7962, 0.88", "-49.9782, -70.3456, -46.3876, 1.18", "-50.872, -70.9553, -48.1035, 0.88", "-51.5082, -71.3609, -49.3234, 0.66", "-54.153, -73.0468, -54.4369, 0.29", "-55.3117, -73.7928, -56.6205, 0.37", "-56.1898, -74.3772, -58.1948, 0.22", "-56.5481, -74.6169, -58.7618, 0.66", "-57.0835, -74.9822, -59.516, 0.88", "-58.5903, -76.0302, -61.3882, 0.22", "-59.3205, -76.5398, -62.0982, 0.66", "-59.8284, -76.9113, -62.5756, 0.66", "-61.5013, -78.1561, -64.2882, 0.22", "-62.1559, -78.6525, -64.9755, 0.44", "-62.828, -79.1534, -65.6626, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.08184, 2.78815, -1.34268, 0.96", "-8.08184, 2.78815, -1.34268, 0.96", "-8.29468, 3.03984, -1.41932, 0.96", "-8.81583, 3.5302, -1.57702, 0.66", "-9.24488, 3.85076, -1.68283, 0.66", "-9.89138, 4.25787, -1.82319, 1.33", "-10.3875, 4.53978, -1.91842, 1.84", "-10.9606, 4.82363, -2.01342, 1.84", "-11.7426, 5.14401, -2.13616, 1.25", "-12.4849, 5.38901, -2.24327, 0.81", "-13.0757, 5.54267, -2.30271, 0.74", "-13.7151, 5.68972, -2.3483, 0.74", "-14.3244, 5.8271, -2.37336, 0.88", "-14.919, 5.95908, -2.39625, 0.88", "-15.2756, 6.04162, -2.41977, 0.88", "-15.9974, 6.20451, -2.48108, 1.33", "-16.4937, 6.30101, -2.52704, 1.55", "-16.9765, 6.37522, -2.5787, 1.55", "-17.6882, 6.46547, -2.66897, 1.33", "-18.4891, 6.54432, -2.77982, 0.74", "-18.9635, 6.57797, -2.85659, 0.52", "-19.6962, 6.61075, -3.00032, 0.52", "-20.249, 6.61588, -3.10732, 0.88", "-20.7663, 6.61714, -3.20204, 0.88", "-21.2976, 6.62114, -3.29577, 0.96", "-21.7845, 6.6234, -3.35188, 0.96", "-22.1797, 6.62016, -3.36838, 0.81", "-22.7869, 6.61196, -3.35491, 0.59", "-23.3332, 6.60455, -3.3014, 0.52", "-24.0056, 6.59635, -3.19168, 0.44", "-24.772, 6.58903, -3.04104, 0.37", "-25.8079, 6.56624, -2.79717, 1.25", "-26.2849, 6.5496, -2.66286, 1.99", "-26.7347, 6.52623, -2.51374, 2.28", "-27.1384, 6.49433, -2.35564, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.541846, -11.1418, 0.0273224, 3.32", "-0.541846, -11.1418, 0.0273224, 3.32", "-0.374081, -12.2897, 0.0273224, 3.32", "-0.170623, -13.6819, 0.0273224, 3.61", "-0.146266, -13.8486, 0.0273224, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.5549, 8.69965, -1.36362, 1.01124", "-5.92467, 23.3162, -1.36362, 1.01124", "-9.29444, 37.9328, -1.36362, 1.01124" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "22.29, 20.0015, -9.43509, 0.29", "23.2273, 20.2954, -8.99704, 0.29", "23.7392, 20.4977, -8.6842, 0.29", "24.3159, 20.7987, -8.31432, 0.88", "24.8595, 21.1425, -7.96707, 1.18", "25.324, 21.486, -7.651, 0.96", "25.9479, 22.0215, -7.2185, 0.44", "26.682, 22.8427, -6.69001, 0.59", "27.3705, 23.726, -6.26903, 0.96", "27.6963, 24.2117, -6.07477, 1.4", "28.0863, 24.8467, -5.85384, 1.55", "28.4893, 25.5234, -5.64265, 1.55", "28.9491, 26.2952, -5.39859, 1.18", "29.5664, 27.2268, -5.11173, 0.59", "30.2199, 28.148, -4.79454, 0.59", "30.5375, 28.5573, -4.63306, 0.59", "30.9738, 29.0656, -4.40788, 0.44", "31.6013, 29.7265, -4.00812, 0.44", "32.1376, 30.2383, -3.62128, 0.52", "32.6168, 30.6648, -3.25282, 0.81", "33.1706, 31.1119, -2.84932, 0.96", "33.8681, 31.6421, -2.3438, 0.66", "34.7923, 32.3203, -1.67613, 0.88", "35.1392, 32.564, -1.43017, 0.88", "35.5059, 32.8181, -1.16417, 0.88", "36.3598, 33.4093, -0.562447, 0.66", "37.3459, 34.1143, 0.0535307, 0.52", "38.0436, 34.6238, 0.428644, 1.25", "38.5195, 34.9833, 0.639794, 1.47", "38.8989, 35.2784, 0.799398, 1.47", "39.4371, 35.6993, 1.00962, 0.52", "40.2982, 36.3785, 1.3105, 0.22", "40.9334, 36.8955, 1.52835, 0.88", "41.2633, 37.1768, 1.62179, 1.47", "41.6142, 37.4864, 1.70535, 1.55", "42.0206, 37.8515, 1.78416, 1.18", "42.9404, 38.6984, 1.87963, 0.22", "43.9111, 39.62, 1.91887, 0.22", "44.6727, 40.3536, 1.92424, 0.96", "45.018, 40.6744, 1.91849, 1.25", "45.4341, 41.0531, 1.90214, 1.33", "46.6061, 42.1014, 1.88061, 0.37", "47.2815, 42.6779, 1.92084, 1.4", "47.7804, 43.0865, 1.96416, 1.99", "48.1661, 43.3921, 2.03545, 2.21", "48.5332, 43.6809, 2.12727, 2.21", "49.6914, 44.574, 2.55501, 0.66", "50.4278, 45.1099, 2.97365, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "22.29, 20.0015, -9.43509, 0.81", "23.2088, 22.3042, -9.22819, 0.81", "23.9488, 23.7868, -9.10715, 1.11", "24.7718, 25.2788, -8.99274, 1.11", "25.6487, 26.8184, -8.87774, 0.81", "26.5206, 28.3587, -8.76258, 0.81", "27.4632, 30.0686, -8.66654, 0.44", "28.946, 32.6884, -8.59874, 0.44", "29.6622, 33.981, -8.59644, 1.18", "30.303, 35.1891, -8.61983, 2.28", "30.7275, 36.0348, -8.6528, 2.5", "31.3353, 37.3438, -8.72703, 2.28", "31.9099, 38.7315, -8.78318, 1.55", "32.0897, 39.2363, -8.78866, 1.55", "32.7536, 41.0783, -8.74492, 0.81", "33.2552, 42.4228, -8.67742, 1.03", "33.6181, 43.3832, -8.59979, 1.03", "34.2034, 44.8627, -8.40979, 0.88", "34.6253, 45.9152, -8.25508, 0.88", "35.2824, 47.5598, -8.01501, 0.66", "35.7435, 48.7278, -7.84691, 0.74", "36.3015, 50.1488, -7.65867, 0.29", "36.8503, 51.5427, -7.5058, 0.29", "37.4287, 53.1254, -7.39618, 0.74", "37.7659, 54.1418, -7.35157, 0.96", "38.0615, 55.1534, -7.32883, 1.18", "38.2499, 55.879, -7.3465, 1.18", "38.4385, 56.698, -7.40445, 0.88", "38.7117, 58.1141, -7.56362, 0.66", "38.977, 59.5871, -7.74291, 0.37", "39.1569, 60.601, -7.88099, 0.52", "39.4126, 62.0377, -8.10363, 0.52", "39.7205, 63.6777, -8.36177, 0.59", "39.9534, 64.8186, -8.54572, 1.03", "40.3056, 66.3226, -8.79405, 2.21", "40.4617, 66.9607, -8.89978, 2.43", "40.7286, 68.0889, -9.09165, 2.58" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "33.1412, 58.4628, 23.3949, 0.29", "34.2404, 61.5025, 20.9365, 0.29", "34.7801, 62.9343, 19.8224, 0.29", "35.0514, 63.6782, 19.3337, 0.29", "35.3346, 64.5082, 18.8742, 0.74", "35.6005, 65.3055, 18.4041, 0.96", "35.8453, 66.0573, 17.9559, 0.96", "36.1989, 67.2082, 17.3585, 0.22", "36.9346, 69.8506, 15.979, 0.22", "37.2987, 71.3118, 15.284, 1.77", "37.7583, 73.4669, 14.3574, 1.92", "37.8575, 74.0341, 14.1502, 1.99", "37.9725, 74.9374, 13.8211, 1.47", "38.0795, 76.1646, 13.3728, 0.22", "38.1415, 77.5714, 12.8797, 0.22", "38.1591, 78.4178, 12.5844, 0.66", "38.1623, 79.2609, 12.3187, 0.96", "38.1379, 81.516, 11.3969, 0.22", "38.1261, 82.3225, 11.0081, 0.22", "38.0938, 83.5713, 10.3622, 1.77", "38.0552, 84.4533, 9.89452, 2.06", "38.0239, 84.9478, 9.6362, 2.06", "37.8018, 87.5408, 8.36189, 0.22", "37.6749, 88.606, 7.8999, 0.22", "37.4355, 90.3551, 7.19501, 1.55", "37.3567, 90.8901, 6.98943, 1.99", "37.2605, 91.669, 6.6176, 1.99", "37.0129, 94.0382, 5.36982, 0.22", "36.8725, 95.6922, 4.47252, 0.22", "36.7788, 97.1534, 3.63363, 1.47", "36.7536, 98.0085, 3.13478, 1.69", "36.8256, 103.105, 0.400314, 0.15", "36.8849, 103.988, -0.061856, 0.15", "36.9851, 104.802, -0.521433, 0.59", "37.0493, 105.18, -0.743918, 0.59", "37.2483, 106.26, -1.45461, 0.22", "37.5737, 107.979, -2.40445, 0.22", "38.0859, 110.751, -3.70232, 1.47", "38.4152, 112.54, -4.56343, 1.84", "38.5367, 113.18, -4.8764, 2.43", "39.5023, 118.072, -7.25715, 0.22", "40.5101, 123.027, -9.63779, 0.22", "40.8385, 124.512, -10.3049, 1.4", "41.0974, 125.581, -10.703, 1.62", "41.4711, 126.936, -11.1723, 0.29", "41.7343, 127.696, -11.467, 0.52", "42.114, 128.515, -11.8095, 0.66", "42.7955, 129.747, -12.4594, 0.22", "43.3645, 130.766, -13.0345, 1.47", "44.2121, 132.339, -13.9178, 1.69", "45.7609, 135.361, -15.6045, 0.29", "46.2252, 136.319, -16.1462, 0.44", "47.2764, 138.683, -17.5336, 0.22", "47.9432, 140.392, -18.5715, 0.66", "48.1596, 141.052, -18.9521, 0.66", "48.3377, 141.801, -19.3523, 1.11", "48.457, 142.688, -19.8315, 1.33", "48.555, 144.192, -20.7213, 1.47", "48.5283, 145.04, -21.3072, 1.47", "48.3711, 146.675, -22.4124, 0.22", "48.2702, 147.426, -22.9226, 0.22", "48.1492, 148.138, -23.3882, 0.74", "48.0006, 148.818, -23.8006, 1.03", "47.4466, 150.904, -24.9782, 0.22", "47.1695, 151.76, -25.4561, 0.22", "46.9731, 152.273, -25.7858, 0.66", "46.7874, 152.72, -26.1062, 0.96", "46.0339, 154.468, -27.3808, 0.22", "45.6442, 155.333, -27.9909, 0.44", "45.4426, 155.76, -28.2815, 1.18", "44.7305, 157.208, -29.4193, 1.4", "44.4604, 157.725, -29.8803, 1.18" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "33.1412, 58.4628, 23.3949, 1.33", "33.3671, 58.7792, 23.5196, 1.33", "33.9294, 59.5965, 23.6701, 0.29", "34.435, 60.3368, 23.7274, 1.18", "34.7017, 60.7259, 23.7404, 1.92", "34.9879, 61.1567, 23.7586, 1.99", "35.191, 61.4752, 23.7802, 1.62", "35.8475, 62.5999, 23.8628, 0.37", "36.0513, 62.9992, 23.9049, 0.37", "36.2017, 63.3634, 23.957, 0.37", "36.4018, 64.0444, 24.1149, 0.52", "36.475, 64.4968, 24.2776, 0.59", "36.5077, 64.9888, 24.5157, 0.44", "36.5051, 65.3674, 24.7432, 0.44", "36.4938, 65.6641, 24.9126, 0.44", "36.4751, 66.153, 25.1749, 0.29", "36.4559, 66.6491, 25.4254, 0.66", "36.4487, 67.0554, 25.6142, 0.88", "36.4484, 67.3027, 25.732, 0.88", "36.4533, 67.6653, 25.8988, 0.74", "36.47, 68.3702, 26.2144, 0.29", "36.4825, 68.7426, 26.3874, 0.29", "36.4921, 69.1643, 26.5841, 0.29", "36.4887, 69.9901, 27.0071, 0.74", "36.4668, 70.4936, 27.2819, 1.84", "36.4489, 70.7668, 27.438, 2.36", "36.4222, 71.2768, 27.7257, 2.36", "36.3902, 72.2605, 28.2765, 0.44", "36.3729, 72.8734, 28.6371, 0.44", "36.3604, 73.442, 28.9805, 0.44", "36.357, 73.7669, 29.1866, 0.44", "36.3886, 74.7035, 29.7389, 2.06", "36.4116, 74.9861, 29.8833, 2.58", "36.4793, 75.4522, 30.101, 2.58", "36.5144, 75.615, 30.1757, 2.58", "36.6629, 76.0774, 30.4575, 1.62", "36.9461, 76.7692, 31.0894, 0.29", "37.128, 77.1598, 31.5334, 0.29", "37.3482, 77.6266, 32.1118, 0.74", "37.5654, 78.0944, 32.7148, 0.96", "37.941, 79.0067, 33.8623, 1.25", "38.3262, 80.0771, 35.1805, 1.69", "38.3874, 80.2757, 35.4153, 2.21", "38.482, 80.6258, 35.7845, 2.21", "38.5969, 81.1334, 36.2406, 1.18", "38.7629, 82.089, 36.9665, 0.22", "38.8223, 82.5775, 37.2739, 0.22", "38.9542, 83.9643, 38.0556, 1.25", "38.9807, 84.3235, 38.2616, 2.06", "39.0006, 84.7657, 38.5167, 2.28", "38.9998, 85.2329, 38.7913, 1.99", "38.9879, 85.4314, 38.9155, 1.99", "38.9179, 85.963, 39.229, 1.03", "38.8182, 86.4621, 39.5139, 0.22", "38.7413, 86.8423, 39.7412, 0.52", "38.6982, 87.0873, 39.8879, 0.66", "38.662, 87.4051, 40.0905, 0.66", "38.6276, 87.7939, 40.3523, 0.37", "38.5963, 88.5909, 40.9413, 0.96", "38.6022, 88.8734, 41.1693, 1.18", "38.6202, 89.1477, 41.3982, 1.47", "38.6737, 89.5943, 41.7684, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-27.1384, 6.49433, -2.35564, 1.18", "-28.7786, 6.68313, -1.43524, 1.18", "-29.7808, 6.81243, -1.05043, 0.29", "-30.9179, 6.96972, -0.764117, 0.29", "-31.7452, 7.0882, -0.683461, 0.52", "-32.1907, 7.15642, -0.631042, 0.74", "-32.711, 7.23678, -0.54254, 0.88", "-33.5291, 7.37937, -0.46976, 0.88", "-33.8086, 7.42697, -0.434297, 0.88", "-34.9863, 7.59501, -0.192704, 0.29", "-36.171, 7.71658, 0.177237, 0.29", "-37.1949, 7.79344, 0.576878, 1.25", "-37.726, 7.81989, 0.828687, 1.77", "-38.0591, 7.83331, 1.0024, 2.21", "-38.5453, 7.85116, 1.25261, 2.21", "-39.241, 7.87893, 1.6005, 1.92", "-39.9628, 7.91133, 1.9183, 1.4", "-41.2069, 7.98676, 2.4454, 0.29", "-42.2246, 8.06666, 2.873, 0.22", "-43.2438, 8.15857, 3.28686, 0.22", "-43.928, 8.22574, 3.53519, 0.59", "-44.2048, 8.25251, 3.62799, 0.74", "-44.8013, 8.30412, 3.81436, 0.74", "-45.3391, 8.33864, 3.97967, 0.74", "-46.1851, 8.37195, 4.25868, 0.22", "-46.8697, 8.38953, 4.49618, 0.29", "-47.6826, 8.38883, 4.79073, 0.29", "-49.0367, 8.35484, 5.29251, 1.77", "-49.6269, 8.34669, 5.51354, 2.5", "-49.9531, 8.35017, 5.63227, 2.73", "-50.5132, 8.36779, 5.8304, 2.73", "-51.4876, 8.42268, 6.1542, 1.47", "-52.4146, 8.50161, 6.40731, 0.22", "-53.3362, 8.59649, 6.60519, 0.29", "-54.2854, 8.70592, 6.7754, 0.37", "-54.8968, 8.79057, 6.87684, 0.44", "-55.4065, 8.87677, 6.96351, 0.44", "-56.2911, 9.06303, 7.11563, 0.22", "-56.7956, 9.17484, 7.21003, 0.88", "-57.0966, 9.24131, 7.27299, 1.47", "-57.5587, 9.34879, 7.37468, 1.62", "-58.0239, 9.46599, 7.47555, 1.69", "-58.6009, 9.5983, 7.59816, 1.33", "-58.8472, 9.63927, 7.64991, 1.33", "-60.2926, 9.80457, 7.95536, 0.22", "-61.1002, 9.86577, 8.13346, 0.37", "-61.4146, 9.88197, 8.20266, 0.37", "-62.1475, 9.90946, 8.35847, 0.22", "-63.5373, 9.93177, 8.66377, 0.22", "-64.1696, 9.93087, 8.81605, 0.22", "-65.2735, 9.93517, 9.08777, 1.62", "-65.7293, 9.95337, 9.20468, 2.14", "-66.2311, 9.98886, 9.33145, 2.36", "-66.8026, 10.0588, 9.46944, 2.06", "-68.4125, 10.3217, 9.82085, 0.22", "-70.0808, 10.6355, 10.158, 0.22", "-71.5261, 10.9421, 10.428, 1.47", "-72.0393, 11.0606, 10.5199, 2.14", "-72.7125, 11.2314, 10.6322, 2.58", "-74.1316, 11.6622, 10.8374, 0.22", "-74.8745, 11.9342, 10.9421, 0.22", "-75.4474, 12.183, 11.032, 0.66", "-75.7447, 12.3318, 11.082, 0.66", "-76.3233, 12.6517, 11.1997, 0.44", "-77.3029, 13.2656, 11.4404, 0.22", "-77.8717, 13.7034, 11.6049, 0.22", "-78.6634, 14.4057, 11.8618, 1.33", "-78.8457, 14.581, 11.9248, 1.77", "-79.1451, 14.8831, 12.0309, 1.77", "-79.553, 15.3089, 12.1742, 1.47", "-80.4837, 16.2285, 12.4873, 0.22", "-81.3582, 17.0684, 12.7319, 0.22", "-81.9049, 17.5754, 12.869, 1.77", "-82.2703, 17.9004, 12.9489, 2.06", "-82.6995, 18.2683, 13.0438, 1.77", "-83.9895, 19.3361, 13.3204, 0.15", "-85.3359, 20.3935, 13.6059, 0.15", "-86.3357, 21.146, 13.8252, 1.33", "-86.6505, 21.3856, 13.8982, 2.06", "-87.194, 21.8024, 14.027, 2.21", "-88.3593, 22.6972, 14.3168, 0.22", "-89.1733, 23.3203, 14.5356, 0.22", "-89.5852, 23.6047, 14.6611, 0.22", "-90.2126, 24.018, 14.8663, 1.33", "-90.5403, 24.2257, 14.9729, 1.99", "-90.9854, 24.4945, 15.1083, 2.21", "-91.3562, 24.7054, 15.2305, 2.21", "-92.576, 25.3669, 15.6277, 0.22", "-93.1413, 25.6619, 15.8471, 0.22", "-93.5524, 25.8737, 16.0363, 0.74", "-93.8756, 26.0529, 16.2071, 0.96", "-94.3085, 26.2983, 16.4451, 0.96", "-94.8442, 26.6143, 16.7629, 0.37", "-95.7794, 27.2403, 17.4369, 0.59", "-96.0636, 27.4343, 17.6595, 1.33", "-96.5261, 27.759, 18.074, 1.33", "-105.198, 30.532, 22.4481, 1.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-27.1384, 6.49433, -2.35564, 0.52", "-28.1605, 7.32888, -3.3675, 0.52", "-28.4768, 7.5896, -3.69031, 0.37", "-28.9234, 7.95549, -4.13446, 0.81", "-29.3723, 8.32851, -4.56471, 0.96", "-29.8853, 8.77024, -5.08791, 0.66", "-30.3244, 9.15254, -5.53505, 0.88", "-30.7053, 9.50811, -5.9502, 0.88", "-30.9658, 9.73347, -6.22665, 0.81", "-31.2666, 9.94937, -6.51144, 0.66", "-32.0718, 10.465, -7.19028, 0.52", "-32.3781, 10.6452, -7.43056, 0.66", "-32.9354, 10.9414, -7.8765, 0.52", "-33.3729, 11.1537, -8.23724, 0.29", "-34.2093, 11.5027, -8.87557, 1.62", "-34.7979, 11.7333, -9.28697, 2.43", "-35.2224, 11.897, -9.55628, 2.73", "-35.9057, 12.1732, -9.9745, 2.87", "-36.7198, 12.5295, -10.4342, 2.14", "-37.6715, 12.9876, -10.9027, 0.52", "-38.3613, 13.3512, -11.1837, 0.29", "-38.9221, 13.6605, -11.3646, 0.29", "-39.4092, 13.9404, -11.4953, 0.74", "-39.876, 14.2107, -11.6039, 0.96", "-40.973, 14.8492, -11.8734, 0.22", "-41.3172, 15.046, -11.9745, 0.88", "-41.8099, 15.2804, -12.1141, 1.33", "-42.2519, 15.461, -12.2297, 1.47", "-42.8709, 15.667, -12.3847, 1.84", "-43.3092, 15.7841, -12.4972, 1.84", "-44.667, 16.0677, -12.8493, 0.29", "-45.9075, 16.2875, -13.1457, 0.29", "-46.831, 16.4363, -13.3388, 1.25", "-47.4755, 16.5404, -13.4494, 1.84", "-48.1033, 16.6419, -13.545, 1.84", "-49.2834, 16.831, -13.707, 0.22", "-49.9842, 16.9406, -13.7945, 0.22", "-51.2567, 17.1541, -13.9313, 0.22", "-52.2755, 17.3404, -14.0036, 1.4", "-52.7281, 17.438, -14.0132, 1.99", "-53.1957, 17.5493, -13.9942, 2.28", "-53.5712, 17.6525, -13.9518, 2.28", "-54.8527, 18.0357, -13.7421, 0.22", "-55.3096, 18.1694, -13.6325, 0.22", "-55.7537, 18.2922, -13.5047, 0.52", "-56.1025, 18.3889, -13.3972, 0.52", "-57.1113, 18.6705, -13.0758, 0.22", "-58.2473, 19.0055, -12.717, 0.22", "-59.2609, 19.3105, -12.4153, 1.25", "-60.1274, 19.5651, -12.1845, 2.28", "-60.571, 19.6903, -12.0775, 2.5", "-61.0997, 19.8361, -11.9625, 2.5", "-62.3406, 20.1818, -11.7499, 0.22", "-63.9449, 20.6393, -11.5015, 0.22", "-64.4519, 20.7929, -11.4351, 0.66", "-64.9934, 20.9616, -11.3587, 0.81", "-65.2404, 21.0479, -11.3276, 0.88", "-66.8707, 21.7027, -11.1475, 0.22", "-67.6756, 22.0769, -11.0622, 1.47", "-68.1153, 22.3122, -11.0189, 1.99", "-68.6069, 22.5955, -10.9688, 1.99", "-70.1097, 23.5683, -10.8067, 0.22", "-70.7059, 24.011, -10.7518, 0.22", "-71.5055, 24.7117, -10.7031, 0.22", "-71.759, 24.9558, -10.7089, 0.44", "-72.1053, 25.2994, -10.734, 0.59", "-72.5221, 25.7276, -10.7827, 0.29", "-72.9245, 26.1882, -10.8269, 0.29", "-73.1169, 26.4479, -10.8683, 1.03", "-73.4199, 26.9919, -11.0026, 1.25", "-73.5013, 27.159, -11.0579, 1.4" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.146266, -13.8486, 0.0273224, 1.4", "-1.00595, -13.9271, -1.04485, 1.4", "-1.57242, -13.9739, -1.66677, 1.03", "-3.92828, -14.1068, -4.17947, 1.03", "-4.47101, -14.1048, -4.73663, 1.18", "-5.18895, -14.0506, -5.47593, 1.18", "-6.01765, -13.9233, -6.34906, 0.81", "-6.78464, -13.6603, -7.23235, 0.81", "-7.4667, -13.2934, -8.05897, 0.59", "-8.02749, -12.8359, -8.68655, 0.74", "-8.57974, -12.2063, -9.4287, 0.74", "-8.95064, -11.6821, -10.0085, 0.96", "-9.4586, -10.9153, -10.7999, 1.11", "-9.81797, -10.3814, -11.3334, 1.11", "-10.4193, -9.56995, -12.1431, 1.03", "-11.2767, -8.54247, -13.2843, 0.88", "-12.2065, -7.57954, -14.4393, 0.66", "-12.7801, -7.06166, -15.1539, 0.81", "-13.2612, -6.67301, -15.7662, 0.66", "-13.9258, -6.15459, -16.6327, 0.66", "-14.7479, -5.49173, -17.7894, 0.88", "-14.9856, -5.26478, -18.1531, 1.18", "-15.5211, -4.63862, -19.0755, 1.18", "-15.7861, -4.25194, -19.6209, 1.33", "-16.2775, -3.37743, -20.7618, 0.59", "-16.6772, -2.50803, -21.7743, 0.59", "-16.9056, -1.9073, -22.3637, 0.59", "-17.0734, -1.37019, -22.8674, 0.88", "-17.2671, -0.64648, -23.4804, 1.03", "-17.4368, 0.0726742, -24.0587, 1.18", "-17.5523, 0.616725, -24.4978, 0.88", "-17.7286, 1.37569, -25.1028, 0.74", "-18.089, 2.72425, -26.1957, 0.52", "-18.3226, 3.51471, -26.8376, 0.37", "-18.6128, 4.43379, -27.5611, 0.37", "-18.7901, 4.97686, -27.9867, 0.59", "-18.992, 5.59113, -28.4801, 0.59", "-19.1688, 6.11526, -28.9027, 0.59", "-19.3444, 6.58953, -29.2348, 0.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.146266, -13.8486, 0.0273224, 3.68", "-0.079296, -14.7471, 0.106711, 3.68", "-0.050674, -15.9512, 0.211773, 3.09", "-0.070332, -17.1672, 0.316529, 3.09", "-0.108662, -19.5382, 0.520792, 2.8", "-0.144108, -21.7307, 0.709685, 2.73", "-0.170557, -23.3667, 0.850628, 2.5", "-0.267496, -25.047, 1.0021, 2.8", "-0.402117, -26.5676, 1.14838, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-9.29444, 37.9328, -1.36362, 0.29", "-12.6642, 52.5494, -1.36362, 0.29", "-16.034, 67.166, -1.36362, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "50.4278, 45.1099, 2.97365, 0.52", "51.1317, 45.8576, 3.61849, 0.52", "51.6629, 46.4024, 4.11926, 1.18", "52.2283, 46.9507, 4.64909, 1.47", "52.7076, 47.406, 5.12154, 1.47", "53.3491, 48.0094, 5.74462, 0.59", "53.739, 48.3779, 6.13857, 1.11", "54.059, 48.6671, 6.53409, 1.4", "54.3152, 48.9005, 6.91154, 1.4", "54.9933, 49.5337, 7.98762, 0.74", "55.3754, 49.8925, 8.62778, 1.18", "55.9465, 50.427, 9.63778, 1.47", "57.2641, 51.6684, 12.0844, 0.52", "57.7716, 52.1616, 13.0683, 1.25", "58.0241, 52.4128, 13.5966, 1.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "50.4278, 45.1099, 2.97365, 0.29", "49.084, 45.8141, 3.33198, 0.29", "48.0679, 46.3625, 3.61727, 0.29", "47.1967, 46.8326, 3.86185, 0.29", "46.0197, 47.4679, 4.19232, 0.96", "45.4584, 47.7708, 4.34991, 1.11", "45.0101, 48.0127, 4.47578, 1.11", "44.5522, 48.2755, 4.62633, 0.66", "35.7237, 51.0324, 5.27959, 0.66", "26.5772, 52.3367, 4.49905, 0.66", "17.3809, 53.1299, 3.62311, 0.66" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "40.7286, 68.0889, -9.09165, 0.29", "40.2753, 69.5955, -9.0157, 0.29", "39.9664, 70.8678, -8.96634, 0.29", "39.8257, 71.4983, -8.93899, 0.66", "39.5771, 72.64, -8.88193, 0.66", "39.2951, 73.8954, -8.82362, 0.22", "38.8677, 75.7581, -8.74986, 0.29", "38.6014, 77.015, -8.68657, 0.74", "38.424, 77.8865, -8.65528, 0.74", "38.2632, 78.6779, -8.63113, 0.22", "38.0268, 79.8659, -8.5925, 0.22", "37.8341, 80.9484, -8.52013, 1.03", "37.7482, 81.572, -8.45057, 1.77", "37.6987, 82.1567, -8.37081, 1.99", "37.6675, 82.9993, -8.22578, 1.47", "37.6563, 84.5382, -7.9142, 0.29", "37.6827, 85.7782, -7.68082, 0.29", "37.6776, 86.8486, -7.5573, 0.96", "37.6518, 87.5641, -7.51212, 1.4", "37.5872, 88.5037, -7.49625, 1.4", "37.5116, 89.31, -7.52169, 0.88", "37.2664, 91.3031, -7.67047, 0.22", "36.7085, 95.0331, -8.0626, 0.22", "36.5603, 95.992, -8.18426, 0.81", "36.3661, 97.22, -8.35531, 1.99", "36.2785, 97.805, -8.4394, 2.21", "36.1851, 98.4607, -8.52122, 1.84", "36.0409, 99.4979, -8.62495, 1.18", "35.8864, 100.919, -8.75341, 0.37", "35.7919, 101.957, -8.82482, 0.22", "35.4915, 105.512, -8.95416, 0.22", "35.3962, 106.723, -8.94596, 0.66", "35.3581, 107.276, -8.92284, 0.66", "35.2577, 108.776, -8.83083, 0.29", "35.2017, 109.638, -8.7623, 0.29", "35.1423, 110.677, -8.67018, 1.62", "35.0667, 111.553, -8.59269, 1.84", "34.9516, 112.355, -8.58428, 1.84", "34.6605, 113.856, -8.65624, 0.37", "34.5136, 114.48, -8.71974, 0.37", "34.3553, 115.119, -8.81562, 0.37", "34.0269, 116.413, -9.0614, 0.22", "33.2839, 119.329, -9.67377, 0.22", "33.0726, 120.142, -9.85371, 0.88", "32.8988, 120.808, -9.9978, 0.88", "32.7806, 121.26, -10.0964, 0.88", "32.3653, 122.836, -10.4364, 0.22", "32.1524, 123.602, -10.5987, 1.11", "31.9189, 124.331, -10.7377, 1.25", "31.7989, 124.635, -10.7861, 1.25", "31.3081, 125.649, -10.9051, 0.22", "29.8337, 128.158, -11.0347, 0.22", "29.3238, 128.878, -10.996, 1.18", "28.8866, 129.4, -10.8279, 1.62", "27.9602, 130.459, -10.289, 0.37", "27.5114, 130.96, -9.9857, 0.22", "26.9554, 131.566, -9.57862, 0.88", "26.4144, 132.156, -9.16952, 1.11", "24.2182, 134.777, -7.54885, 0.22", "22.3134, 137.178, -6.10988, 0.22", "21.735, 137.972, -5.65954, 0.22", "21.356, 138.526, -5.37726, 0.81", "20.8554, 139.297, -5.04675, 1.03", "20.4583, 139.952, -4.851, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "40.7286, 68.0889, -9.09165, 0.22", "42.5704, 70.881, -10.1809, 0.22", "43.6243, 72.4546, -10.745, 0.22", "44.1569, 73.28, -11.0709, 0.66", "44.6577, 74.0689, -11.4091, 0.88", "45.1604, 74.9127, -11.7548, 0.59", "45.4764, 75.4909, -11.9733, 1.03", "46.0345, 76.6631, -12.3479, 1.99", "46.6166, 78.0729, -12.7824, 1.84", "46.8803, 78.7998, -12.9814, 1.4", "47.578, 81.1047, -13.4361, 0.22", "48.0498, 82.9048, -13.688, 0.22", "48.2769, 83.8404, -13.7807, 0.66", "48.5041, 84.8704, -13.8466, 0.66", "48.9039, 86.7573, -13.8822, 0.29", "49.4267, 89.4053, -13.883, 0.29", "49.7418, 90.9655, -13.8413, 1.33", "49.8859, 91.6206, -13.8157, 1.92", "50.0147, 92.1288, -13.8035, 2.21", "50.2151, 92.732, -13.81, 2.43", "50.4814, 93.4068, -13.8351, 2.43", "51.1292, 94.9518, -13.9344, 0.37", "51.6226, 96.0879, -14.0279, 0.22", "52.6685, 98.4844, -14.2909, 0.22", "54.6353, 102.969, -14.9172, 0.22", "55.7483, 105.498, -15.3283, 0.96", "56.2657, 106.688, -15.5228, 1.33", "56.5873, 107.456, -15.6551, 2.06", "57.0349, 108.545, -15.8305, 2.06", "57.351, 109.352, -15.9566, 0.96", "58.0394, 111.248, -16.2258, 0.22", "59.4027, 115.111, -16.6642, 0.22", "60.2768, 117.605, -16.8658, 1.18", "60.5407, 118.379, -16.9162, 1.69", "60.8092, 119.179, -16.9544, 1.69", "61.4949, 121.311, -17.064, 0.22", "62.6786, 125.192, -17.3644, 0.22", "62.9207, 126.036, -17.4521, 0.66", "63.1044, 126.689, -17.5243, 0.66", "63.4402, 127.906, -17.6903, 0.37", "63.7019, 128.839, -17.8412, 1.03", "63.93, 129.642, -18.0082, 1.69", "64.2086, 130.476, -18.2071, 1.69", "64.5646, 131.33, -18.3929, 1.4", "65.1055, 132.396, -18.5824, 0.15", "65.5119, 133.058, -18.7024, 0.44", "65.7453, 133.379, -18.7532, 0.44", "66.6428, 134.485, -18.8913, 0.15", "67.3502, 135.291, -18.9941, 0.15", "67.8609, 135.845, -19.0747, 0.52", "68.4841, 136.509, -19.2405, 0.74", "69.3154, 137.393, -19.529, 0.22", "70.0871, 138.221, -19.8419, 1.47", "70.7724, 138.981, -20.1514, 1.92", "71.4599, 139.777, -20.5101, 2.06", "72.7828, 141.368, -21.2646, 0.59", "73.6572, 142.488, -21.7844, 0.22", "74.8173, 144.069, -22.4684, 0.22", "75.4108, 144.932, -22.8154, 1.03", "75.9436, 145.783, -23.0544, 1.25", "76.1025, 146.064, -23.0889, 1.4", "77.1773, 148.182, -22.9963, 0.22", "77.6349, 149.196, -22.8279, 1.03", "77.9765, 150.002, -22.5969, 1.25", "78.8792, 152.131, -21.8241, 0.15", "79.4702, 153.531, -21.2337, 0.59", "79.7747, 154.296, -20.8781, 0.81", "80.2976, 155.773, -20.0916, 0.22", "80.484, 156.366, -19.7755, 0.22", "80.6987, 157.128, -19.3532, 1.03", "80.8341, 157.754, -19.0153, 1.4", "81.0118, 158.586, -18.5928, 1.55", "81.4717, 160.474, -17.5624, 0.22", "81.7886, 161.647, -16.867, 1.18", "81.9508, 162.19, -16.5288, 1.62", "82.198, 162.893, -16.0409, 1.77", "82.7709, 164.203, -15.0417, 0.52", "83.4362, 165.264, -14.222, 1.03", "83.6916, 165.562, -14.0097, 1.03", "84.3145, 166.205, -13.6208, 0.44", "85.1558, 167.032, -13.1913, 0.74", "85.8606, 167.707, -12.9002, 0.66", "88.1113, 169.876, -12.1886, 0.22", "90.558, 172.233, -11.7479, 0.22", "91.468, 173.11, -11.6795, 0.96", "91.7276, 173.362, -11.695, 1.25", "92.1994, 173.829, -11.7946, 1.25", "93.1952, 174.806, -12.1566, 0.22", "94.4958, 176.07, -12.9794, 0.22", "95.0856, 176.637, -13.4563, 0.96", "95.8445, 177.338, -14.0677, 1.33", "96.1643, 177.621, -14.3387, 1.33", "96.697, 178.058, -14.8143, 0.52", "97.6692, 178.784, -15.8377, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "44.4604, 157.725, -29.8803, 0.29", "43.403, 158.506, -31.1083, 0.29", "42.7447, 159.0, -31.8514, 0.29", "42.1993, 159.411, -32.4869, 0.52", "41.6087, 159.863, -33.1926, 0.74", "40.9444, 160.372, -33.9865, 0.22", "39.8815, 161.185, -35.2565, 0.22", "39.3561, 161.602, -35.8816, 0.96", "38.749, 162.051, -36.6201, 1.18", "38.4326, 162.278, -36.986, 1.18" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "44.4604, 157.725, -29.8803, 0.29", "44.9361, 160.243, -30.2214, 0.29", "45.1424, 161.335, -30.3693, 1.18", "45.2016, 161.649, -30.4118, 1.18", "45.6245, 163.887, -30.715, 0.22", "45.8246, 164.946, -30.8585, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "38.6737, 89.5943, 41.7684, 0.37", "38.5252, 90.4849, 41.7441, 0.37", "38.4345, 91.0064, 41.7323, 0.44", "38.2798, 91.9065, 41.7272, 0.22", "38.1589, 92.397, 41.743, 0.37", "38.085, 92.6714, 41.7561, 0.37", "37.6592, 94.2301, 41.8411, 0.22", "37.5083, 94.7688, 41.8778, 0.44", "37.387, 95.1914, 41.9094, 0.44", "36.5318, 98.019, 42.1378, 0.22", "36.2239, 99.0528, 42.2264, 0.44", "36.1279, 99.388, 42.2556, 0.44", "35.4903, 101.708, 42.458, 0.22", "35.1503, 102.943, 42.5285, 0.66", "35.1095, 103.07, 42.5268, 0.96", "34.5887, 104.23, 42.4309, 0.22", "34.2795, 104.784, 42.3779, 0.66", "34.0805, 105.102, 42.3417, 0.96", "33.7062, 105.653, 42.2717, 0.96", "31.9676, 108.216, 41.96, 0.22", "29.7768, 111.501, 41.5748, 0.22", "28.6471, 113.146, 41.3676, 0.22", "28.1606, 113.844, 41.2783, 0.96", "27.7285, 114.474, 41.2111, 1.62", "27.0915, 115.447, 41.1376, 1.47", "26.8558, 115.852, 41.1169, 1.4", "26.1832, 117.165, 41.0333, 0.37", "25.6831, 118.236, 40.9785, 0.37", "25.2866, 119.209, 40.9533, 1.11", "25.0622, 119.795, 40.9874, 1.55", "24.8476, 120.374, 41.0734, 1.77", "24.6711, 120.882, 41.1942, 1.77", "24.4667, 121.512, 41.3952, 0.81", "23.6847, 123.424, 42.1154, 0.22", "22.7389, 125.199, 42.8358, 0.22", "22.2823, 125.879, 43.1354, 0.96", "21.8679, 126.402, 43.3773, 1.33", "21.3798, 126.947, 43.6527, 1.77", "20.154, 128.132, 44.3288, 0.22", "19.1764, 128.935, 44.8509, 0.22", "18.3733, 129.568, 45.2359, 1.33", "18.0675, 129.815, 45.3866, 1.77", "17.6196, 130.181, 45.6611, 2.28", "17.3376, 130.408, 45.8742, 2.28", "16.6922, 131.006, 46.4656, 0.74", "16.1345, 131.648, 47.0352, 1.25", "15.7695, 132.221, 47.4157, 1.77", "15.0338, 133.564, 48.0884, 1.11", "14.735, 134.174, 48.3005, 1.11", "14.1488, 135.331, 48.4955, 0.22", "13.2783, 136.847, 48.5366, 0.22", "12.4044, 138.198, 48.4616, 1.77", "12.0906, 138.648, 48.4169, 2.06", "11.7701, 139.095, 48.3483, 2.28", "10.4351, 140.915, 48.0104, 0.22", "8.93807, 142.877, 47.6077, 0.22", "8.19344, 143.843, 47.3839, 0.22", "7.65159, 144.584, 47.1878, 0.66", "7.15704, 145.305, 46.9988, 0.88", "5.9451, 147.257, 46.4739, 0.44", "5.37035, 148.44, 46.145, 0.29", "5.09984, 149.155, 45.8881, 0.52", "4.83996, 149.958, 45.5661, 0.66", "1.3046, 158.545, 47.0323, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "38.6737, 89.5943, 41.7684, 0.29", "39.8864, 90.3789, 41.5162, 0.29", "41.4675, 91.4018, 41.1874, 0.29", "42.5049, 92.0729, 40.9716, 0.29", "42.996, 92.3907, 40.8695, 0.59", "51.6317, 96.0792, 38.313, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-73.5013, 27.159, -11.0579, 0.22", "-73.2731, 28.095, -11.0745, 0.22", "-73.1117, 28.8318, -10.8853, 0.22", "-72.9882, 29.4932, -10.6517, 1.03", "-72.9289, 29.9429, -10.47, 1.33", "-72.8955, 30.3415, -10.304, 1.33", "-72.8809, 30.7014, -10.1466, 1.33", "-72.9962, 32.1838, -9.37147, 0.22", "-73.0731, 32.5971, -9.12074, 0.22", "-73.2537, 33.1956, -8.73019, 0.66", "-73.405, 33.5758, -8.47754, 0.88", "-73.6097, 34.0139, -8.17501, 0.88", "-73.8749, 34.5294, -7.82218, 0.22", "-74.1785, 35.0752, -7.45702, 0.66", "-74.3951, 35.5148, -7.14238, 1.4", "-74.5884, 35.9738, -6.77331, 1.4", "-74.7946, 36.5361, -6.26881, 1.11", "-74.9462, 36.9598, -5.87822, 0.96", "-75.0099, 37.1923, -5.63067, 1.18", "-75.09, 37.5837, -5.21193, 1.18", "-75.2073, 38.3242, -4.41698, 0.74", "-75.2565, 38.7028, -4.02235, 0.44", "-75.3406, 39.3347, -3.39004, 0.66", "-75.5283, 40.8332, -1.95444, 0.52", "-75.5961, 41.4713, -1.39678, 0.22", "-75.6523, 42.1046, -0.914605, 0.44", "-75.6719, 42.5571, -0.612122, 0.44", "-75.6962, 43.0322, -0.31435, 0.22", "-75.7425, 43.782, 0.143544, 0.22", "-75.8731, 44.7071, 0.636506, 0.22", "-75.9793, 45.2669, 0.936178, 0.22", "-76.2945, 46.6096, 1.63475, 0.22", "-76.4404, 47.1538, 1.92023, 1.33", "-76.6448, 47.8461, 2.28769, 1.62", "-76.9228, 48.6363, 2.72579, 0.22", "-77.1823, 49.3105, 3.09411, 0.22", "-77.3548, 49.7797, 3.33079, 0.81", "-77.484, 50.1723, 3.51032, 0.96", "-77.5964, 50.6293, 3.71695, 0.96", "-77.7442, 51.5035, 4.12245, 0.29", "-77.7943, 52.3384, 4.54373, 0.22", "-77.7475, 53.1516, 4.9415, 0.81", "-77.6528, 53.742, 5.20983, 1.11", "-77.5368, 54.1917, 5.40194, 1.11", "-77.1968, 55.1791, 5.70465, 0.29", "-76.9431, 55.7499, 5.78648, 0.22", "-76.5775, 56.5282, 5.80233, 0.22", "-76.4291, 56.8476, 5.77961, 0.29", "-76.1002, 57.5933, 5.66806, 0.29", "-75.5177, 59.0309, 5.36672, 0.22", "-74.9631, 60.5578, 4.97184, 0.22", "-74.6225, 61.6302, 4.68325, 0.22", "-74.5081, 62.0404, 4.57614, 0.52", "-74.443, 62.3042, 4.51504, 0.52", "-74.2126, 63.4112, 4.2938, 0.22", "-74.1205, 63.963, 4.23951, 0.22", "-74.0615, 64.4137, 4.24904, 0.44", "-74.0124, 64.7718, 4.27134, 0.44", "-73.9073, 65.5355, 4.3356, 0.15", "-73.8218, 66.1222, 4.41725, 0.37", "-73.615, 67.4891, 4.67949, 0.22", "-73.4, 68.8884, 4.97702, 0.52", "-73.2945, 69.557, 5.14182, 0.52", "-73.2444, 69.8735, 5.23518, 0.52", "-73.0854, 71.1193, 5.6516, 0.22", "-73.0398, 71.6775, 5.8464, 0.22", "-73.0241, 72.1059, 5.9912, 0.59", "-73.0259, 72.8102, 6.17243, 0.88", "-73.0245, 73.3149, 6.32587, 0.88", "-73.0115, 74.2794, 6.59905, 0.22", "-72.9865, 74.939, 6.77648, 0.37", "-72.9661, 75.2064, 6.85898, 0.37", "-72.8443, 76.0546, 7.12602, 0.15", "-72.5899, 77.4597, 7.5182, 0.15", "-72.3899, 78.4305, 7.76654, 1.11", "-72.243, 79.0752, 7.92703, 1.77", "-72.0513, 79.9713, 8.13815, 1.25", "-71.7429, 81.8045, 8.49365, 0.22", "-71.5689, 83.3379, 8.71818, 0.22", "-71.5368, 83.9525, 8.76296, 0.44", "-71.533, 84.2913, 8.77194, 0.44", "-71.5506, 85.3929, 8.73855, 0.22", "-71.5996, 86.8985, 8.63217, 0.22", "-71.6316, 87.556, 8.57916, 0.37", "-71.6569, 88.4356, 8.51345, 0.37", "-71.6544, 89.5996, 8.46139, 0.37", "-71.6307, 90.5389, 8.42093, 0.44", "-71.5797, 91.2478, 8.38904, 0.96", "-71.4953, 91.8416, 8.37698, 1.62", "-71.4211, 92.2383, 8.37831, 1.77", "-71.2693, 93.0121, 8.4228, 1.77", "-71.6837, 100.234, 10.4601, 1.77" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-73.5013, 27.159, -11.0579, 1.25", "-74.3177, 26.941, -11.5298, 1.25", "-74.8861, 26.8653, -11.8452, 1.69", "-75.3695, 26.8284, -12.094, 1.92", "-76.4594, 26.8403, -12.5946, 1.55", "-76.762, 26.8524, -12.7235, 1.77", "-78.1842, 26.9321, -13.2911, 0.22", "-79.0063, 27.0378, -13.5923, 0.44", "-79.5048, 27.1243, -13.7519, 0.44", "-81.7267, 27.5691, -14.3652, 0.22", "-82.1746, 27.6632, -14.4669, 0.59", "-82.67, 27.7693, -14.5678, 0.59", "-85.1618, 28.3264, -15.0414, 0.22", "-86.1592, 28.5574, -15.2447, 0.22", "-86.8573, 28.729, -15.396, 1.03", "-87.1516, 28.8045, -15.4649, 1.33", "-87.4602, 28.8898, -15.5453, 1.33", "-88.9759, 29.3283, -16.0335, 0.22", "-90.3241, 29.7208, -16.5291, 0.22", "-90.638, 29.8055, -16.6421, 0.74", "-91.4709, 30.0163, -16.9152, 1.55", "-92.0327, 30.1515, -17.0796, 2.06", "-92.876, 30.3434, -17.2969, 1.99", "-94.5683, 30.6903, -17.6582, 0.22", "-97.0407, 31.1459, -18.1839, 0.22", "-98.1817, 31.3415, -18.4216, 0.22", "-98.7525, 31.4256, -18.5348, 0.96", "-99.0638, 31.4615, -18.6009, 1.18", "-99.6024, 31.5126, -18.7165, 1.18", "-100.658, 31.5724, -19.0321, 0.22", "-101.534, 31.5936, -19.3483, 0.22", "-101.892, 31.5986, -19.4819, 1.18", "-102.618, 31.6078, -19.7274, 1.47", "-102.948, 31.6119, -19.8204, 1.47", "-104.523, 31.6366, -20.2017, 0.22", "-105.231, 31.6547, -20.3376, 0.74", "-105.677, 31.6563, -20.4075, 0.74", "-107.143, 31.6269, -20.5989, 0.22", "-108.321, 31.5154, -20.6932, 1.62", "-108.576, 31.4762, -20.7076, 2.21", "-109.16, 31.3502, -20.725, 2.43", "-111.86, 30.6405, -20.7689, 0.22", "-112.916, 30.3165, -20.7453, 0.22", "-115.233, 29.4864, -20.6046, 0.22", "-115.754, 29.281, -20.5595, 1.33", "-116.209, 29.088, -20.5102, 1.92", "-116.576, 28.9192, -20.4625, 2.06", "-118.545, 27.9135, -20.0824, 0.15", "-119.946, 27.1279, -19.7659, 0.15", "-120.378, 26.8702, -19.6534, 0.88", "-120.919, 26.5344, -19.5024, 1.11", "-121.269, 26.31, -19.4008, 1.11", "-123.706, 24.6985, -18.7078, 0.22", "-126.247, 22.9436, -18.0141, 0.22", "-127.305, 22.1993, -17.7291, 1.18", "-127.864, 21.8065, -17.5831, 1.92", "-128.198, 21.5725, -17.4975, 1.92", "-131.656, 19.1449, -16.6532, 0.22", "-134.091, 17.4591, -16.14, 0.22", "-134.495, 17.1898, -16.064, 0.96", "-134.962, 16.8789, -15.9891, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-19.3444, 6.58953, -29.2348, 0.59", "-19.4552, 7.92807, -29.6472, 0.59", "-19.5794, 8.98686, -29.9884, 0.74", "-19.7022, 9.84677, -30.2587, 1.18", "-19.842, 10.7321, -30.5936, 1.33", "-20.0245, 11.7228, -31.0215, 0.88", "-20.1827, 12.4655, -31.3618, 0.52", "-20.4484, 13.5016, -31.9268, 0.74", "-20.6353, 14.0935, -32.2849, 0.88", "-21.0703, 15.2316, -33.0304, 0.37", "-21.3975, 15.9191, -33.4793, 0.52", "-21.6665, 16.3886, -33.8034, 0.74", "-22.1049, 17.0635, -34.2804, 0.74", "-22.426, 17.4941, -34.5991, 0.29", "-23.0503, 18.2473, -35.1503, 0.22", "-23.7951, 19.0387, -35.6876, 0.22", "-24.4942, 19.748, -36.1712, 0.96", "-24.9001, 20.1359, -36.4444, 1.47", "-25.3939, 20.5654, -36.7455, 1.69", "-25.7408, 20.8466, -36.9608, 1.77", "-26.2933, 21.2418, -37.2884, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.402117, -26.5676, 1.14838, 1.33", "-2.05663, -27.5346, 0.896003, 1.33", "-3.55864, -28.556, 0.716416, 0.81", "-4.74432, -29.4523, 0.690272, 1.11", "-5.29011, -29.906, 0.72578, 1.11", "-6.14222, -30.6724, 0.86627, 0.81", "-7.13264, -31.6398, 1.12815, 1.03", "-7.84947, -32.4433, 1.48639, 1.11", "-8.75051, -33.6245, 2.10263, 1.33", "-9.30515, -34.3745, 2.54439, 1.47", "-10.0254, -35.2796, 3.12062, 1.33", "-10.8441, -36.1796, 3.78123, 1.18", "-11.837, -37.054, 4.54542, 0.96", "-12.4568, -37.4836, 4.98577, 0.66", "-13.215, -37.8924, 5.45097, 0.81", "-14.2212, -38.3371, 6.0167, 0.66", "-15.5924, -38.8576, 6.69303, 0.59", "-16.3992, -39.138, 7.04439, 0.74", "-17.9645, -39.7027, 7.68402, 1.18", "-19.0171, -40.1057, 8.07304, 1.33", "-20.2171, -40.6527, 8.44917, 1.47", "-21.0778, -41.0978, 8.68396, 1.25", "-21.9486, -41.5926, 8.88741, 1.25", "-23.0324, -42.2509, 9.16153, 1.03", "-24.2034, -42.9786, 9.46593, 0.29", "-25.5606, -43.8731, 9.863, 0.29", "-26.8534, -44.7803, 10.2763, 0.66", "-27.7934, -45.5045, 10.6192, 1.03", "-29.0605, -46.5565, 11.111, 1.18", "-29.8153, -47.2191, 11.405, 1.62", "-30.404, -47.7608, 11.6315, 1.62", "-31.039, -48.3721, 11.8123, 1.33", "-31.808, -49.1584, 11.911, 0.74", "-32.6989, -50.104, 11.904, 0.37", "-33.2248, -50.6495, 11.8295, 0.44", "-33.8841, -51.3103, 11.6959, 0.22", "-34.7579, -52.115, 11.4908, 1.11", "-35.1963, -52.5131, 11.4022, 1.55", "-35.674, -52.9636, 11.3317, 1.77", "-36.3525, -53.6651, 11.2946, 1.55", "-37.4163, -54.8429, 11.4393, 0.22", "-37.9481, -55.4246, 11.6104, 0.22", "-38.8842, -56.3145, 11.9737, 0.81", "-39.387, -56.7704, 12.142, 0.96", "-39.8323, -57.1751, 12.2656, 0.96", "-40.7254, -58.0408, 12.4547, 0.22", "-41.4231, -58.7145, 12.4988, 0.22", "-42.5942, -59.8383, 12.3636, 0.22", "-43.6426, -60.7392, 12.1381, 1.69", "-44.2202, -61.2056, 11.985, 2.5", "-44.8129, -61.665, 11.804, 2.28", "-46.1345, -62.6514, 11.3944, 0.96", "-47.2406, -63.4529, 11.1179, 0.66", "-48.5426, -64.3379, 10.9432, 1.47", "-48.8299, -64.5069, 10.9455, 1.99", "-49.4128, -64.8337, 10.9941, 1.99", "-50.8812, -65.6659, 11.2006, 1.11", "-51.8088, -66.2186, 11.3719, 0.59", "-52.7824, -66.8102, 11.5864, 1.11", "-54.0448, -67.6201, 11.8757, 0.66", "-55.3307, -68.4621, 12.1932, 0.37", "-56.1292, -69.004, 12.4096, 0.29", "-56.8839, -69.5553, 12.6135, 0.29", "-67.2089, -76.2093, 14.3596, 0.29", "-78.2908, -80.917, 17.3534, 0.29", "-88.8389, -86.7121, 20.3677, 0.29", "-99.9334, -91.2676, 23.5442, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.402117, -26.5676, 1.14838, 2.87", "0.233439, -28.3782, 1.03129, 2.87", "0.659472, -29.559, 0.937284, 3.02", "1.11384, -30.7998, 0.815115, 3.17", "1.89748, -32.9265, 0.566271, 2.58", "2.41946, -34.2987, 0.340614, 2.73", "3.12241, -36.0392, -0.010258, 2.73", "3.84665, -37.6896, -0.436767, 2.36", "4.69133, -39.4834, -0.954506, 2.36", "5.486, -41.1302, -1.45565, 2.73", "6.43113, -43.1169, -2.05902, 1.77", "7.19713, -44.7685, -2.56402, 1.77", "7.66033, -45.7454, -2.87306, 1.84", "8.11195, -46.6936, -3.17518, 2.06", "8.65992, -47.8475, -3.52133, 2.21", "9.14562, -48.9321, -3.77989, 2.28", "9.57323, -50.1411, -3.88756, 2.95" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "58.0241, 52.4128, 13.5966, 0.52", "57.0935, 55.2663, 17.5582, 0.52", "56.63, 56.6568, 19.3194, 0.29", "56.3986, 57.3388, 20.0921, 0.74", "56.0506, 58.324, 21.1524, 1.03", "55.7894, 59.1054, 21.9485, 1.03", "55.292, 60.741, 23.5514, 0.29", "55.1957, 61.2243, 24.0706, 0.29", "55.1546, 61.8062, 24.6626, 0.52", "55.2113, 62.461, 25.2963, 0.52", "55.3758, 63.0152, 25.805, 0.37", "55.6642, 63.5214, 26.2693, 0.52", "56.5974, 64.4864, 27.2102, 0.29", "57.2914, 65.0923, 27.8421, 0.52", "58.3344, 65.8524, 28.7093, 1.11", "59.3759, 66.4938, 29.4812, 0.66", "59.9592, 66.7955, 29.893, 0.96", "60.5913, 67.059, 30.302, 1.47", "61.0391, 73.2042, 38.8163, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "58.0241, 52.4128, 13.5966, 0.59", "58.6563, 52.8494, 14.4038, 0.59", "59.4669, 53.4519, 15.4117, 1.11", "59.8548, 53.7515, 15.8845, 1.55", "60.4114, 54.2035, 16.5387, 2.14", "61.8321, 55.4394, 18.1736, 0.22", "62.2922, 55.8845, 18.6732, 0.22", "62.581, 56.19, 18.9779, 0.44", "62.8144, 56.4617, 19.2179, 0.44", "63.1747, 56.9209, 19.5992, 0.22", "63.8545, 58.0535, 20.4585, 0.22", "64.4611, 59.3366, 21.3858, 1.18", "64.7356, 60.0099, 21.8895, 1.77", "64.9989, 60.7694, 22.4591, 2.28", "65.1724, 61.3865, 22.9216, 2.28", "65.6323, 63.3729, 24.4448, 0.22", "65.728, 63.9848, 24.9161, 0.22", "65.7809, 64.6006, 25.4104, 1.47", "65.7927, 64.8909, 25.6242, 1.92", "65.8025, 65.2778, 25.8891, 1.92", "70.3404, 72.6608, 30.6009, 1.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-26.2933, 21.2418, -37.2884, 0.29", "-27.1647, 23.6419, -39.0457, 0.29", "-27.4641, 24.4225, -39.6364, 0.22", "-27.5524, 24.3876, -38.9012, 0.74", "-27.7485, 24.6133, -38.5062, 0.88", "-28.3485, 25.282, -37.5769, 0.88", "-29.0041, 26.005, -36.7147, 0.29", "-29.6114, 26.6206, -35.9204, 0.29", "-33.8273, 30.5922, -30.0201, 0.29", "-34.6703, 31.3446, -28.7332, 0.29", "-35.2847, 31.8524, -27.719, 0.96", "-35.6789, 32.1458, -27.0018, 1.47", "-36.1355, 32.4448, -26.0784, 1.69" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-26.2933, 21.2418, -37.2884, 0.22", "-28.6866, 21.0077, -37.7773, 0.22", "-30.1153, 20.8614, -38.0326, 0.22", "-32.3912, 20.6336, -38.382, 0.22", "-33.8212, 20.4843, -38.5146, 1.18", "-34.2404, 20.4406, -38.5414, 1.4", "-35.1187, 20.3459, -38.5879, 1.4", "-36.4823, 20.1725, -38.6114, 0.81", "-38.0719, 20.0027, -38.6054, 0.22", "-39.9149, 19.8075, -38.6886, 0.22", "-40.6755, 19.7344, -38.7654, 1.4", "-41.2473, 19.6666, -38.9017, 1.77", "-41.8553, 19.5739, -39.1393, 1.77", "-42.8065, 19.4076, -39.6345, 1.25", "-44.8207, 18.9714, -40.9504, 0.22", "-45.8352, 18.6888, -41.6839, 0.22", "-47.7305, 18.0929, -43.0065, 0.22", "-48.8361, 17.752, -43.726, 1.25", "-49.1938, 17.6407, -43.9431, 1.55", "-50.107, 17.3617, -44.4523, 1.55", "-51.738, 16.9167, -45.247, 1.03", "-53.0142, 16.6127, -45.7842, 0.22", "-54.7869, 16.2985, -46.4339, 1.03", "-55.6266, 16.1985, -46.7242, 1.33", "-57.4056, 16.0757, -47.3525, 0.22", "-58.5366, 16.0527, -47.7488, 0.22", "-59.9663, 16.0854, -48.2884, 1.25", "-60.8461, 16.1134, -48.6379, 1.4", "-62.0136, 16.169, -49.1044, 0.22", "-63.8717, 16.2933, -49.8272, 0.22", "-64.8337, 16.3673, -50.1914, 1.03", "-65.6088, 16.3971, -50.5043, 1.25", "-66.4577, 16.3951, -50.8629, 1.25", "-68.6879, 16.2712, -51.8605, 0.22", "-69.4388, 16.169, -52.2827, 0.88", "-69.9745, 16.0692, -52.6212, 0.88", "-71.8791, 15.6371, -53.8922, 0.22", "-72.3847, 15.4987, -54.2426, 1.03", "-73.4967, 15.1321, -55.0712, 1.18", "-76.225, 14.1467, -57.1909, 0.22", "-77.2246, 13.7883, -57.9773, 0.22", "-78.227, 13.4428, -58.7612, 0.96", "-78.9228, 13.2235, -59.2909, 1.18", "-80.561, 12.7621, -60.5475, 0.15", "-82.2785, 12.3577, -61.82, 0.15", "-82.9403, 12.2445, -62.258, 0.15", "-83.9238, 12.1285, -62.8755, 1.11", "-84.7689, 12.0911, -63.3539, 1.33", "-85.8139, 12.107, -63.9051, 1.33", "-86.2513, 12.1356, -64.1155, 1.33", "-89.1597, 12.3887, -65.4505, 0.22", "-90.7897, 12.5455, -66.1519, 0.22", "-91.9809, 12.6717, -66.6666, 0.81", "-93.1476, 12.8129, -67.2293, 0.96", "-93.8105, 12.9016, -67.5643, 0.44", "-96.0677, 13.2521, -68.7483, 0.22", "-96.9209, 13.4142, -69.2388, 0.59", "-97.8773, 13.5963, -69.8157, 0.59", "-99.9764, 13.985, -71.1025, 0.22", "-102.412, 14.4462, -72.5714, 0.22", "-104.296, 14.8134, -73.746, 0.22", "-105.642, 15.086, -74.603, 0.96", "-106.638, 15.2817, -75.2247, 0.96" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.57323, -50.1411, -3.88756, 2.06", "10.2328, -50.4888, -3.28152, 2.06", "11.185, -50.9364, -2.4237, 0.81", "12.0874, -51.3219, -1.6504, 1.03", "13.3391, -51.7979, -0.661269, 0.96", "13.9392, -51.9949, -0.221566, 0.66", "15.0069, -52.3077, 0.488705, 0.66", "15.7546, -52.4687, 0.943534, 0.81", "16.2275, -52.5464, 1.18245, 0.81", "16.9944, -52.6633, 1.43608, 0.81", "17.7848, -52.8059, 1.55755, 0.44", "18.4313, -52.9517, 1.57936, 0.44", "18.991, -53.0899, 1.54659, 0.96", "19.7486, -53.3057, 1.48313, 1.4", "20.3501, -53.509, 1.41602, 1.62", "20.9742, -53.7746, 1.3198, 1.62", "21.5711, -54.0867, 1.19832, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "9.57323, -50.1411, -3.88756, 1.33", "8.84644, -51.8986, -4.00971, 1.33", "8.3885, -53.127, -4.08148, 1.18", "7.82173, -54.7883, -4.12466, 1.03", "7.50762, -55.8317, -4.12658, 1.03", "7.33592, -56.5263, -4.12068, 1.47", "7.20851, -57.1705, -4.11358, 1.47", "7.14437, -57.9563, -4.10024, 1.18", "7.18268, -58.739, -4.11147, 1.03", "7.32768, -59.6487, -4.18704, 0.74", "7.53834, -60.6031, -4.32512, 0.88", "7.73932, -61.3342, -4.48265, 1.11", "8.01889, -62.199, -4.74085, 1.4", "8.39782, -63.1913, -5.12335, 1.62", "8.84178, -64.1884, -5.60415, 1.69", "9.11186, -64.7507, -5.9065, 1.25", "9.5228, -65.5992, -6.38638, 0.88", "9.87753, -66.3591, -6.81985, 0.52", "10.0995, -66.8715, -7.09821, 0.66", "10.4645, -67.7887, -7.57814, 1.11", "10.7353, -68.5275, -7.93875, 1.55", "10.932, -69.1274, -8.21182, 2.14", "11.1106, -69.7509, -8.47105, 2.14", "11.306, -70.4853, -8.74124, 2.28", "11.5447, -71.4142, -9.05464, 2.06", "11.8726, -72.6953, -9.47161, 1.92", "12.1179, -73.5586, -9.76044, 1.92", "12.3879, -74.407, -10.0449, 1.77", "12.6117, -75.0345, -10.2553, 2.21", "12.8784, -75.7577, -10.4954, 2.5" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-36.1355, 32.4448, -26.0784, 0.59", "-36.2395, 33.801, -28.8772, 0.59", "-36.3004, 34.3046, -29.8001, 0.29", "-36.3485, 34.5696, -30.2078, 0.29", "-36.449, 35.0147, -30.8176, 0.52", "-36.539, 35.3692, -31.2689, 0.52", "-36.6846, 35.8734, -31.853, 0.44", "-36.9132, 36.4799, -32.3539, 0.22", "-37.2402, 37.3453, -33.0139, 0.22", "-37.3525, 37.6442, -33.2376, 0.74", "-37.5925, 38.2769, -33.7092, 0.74", "-37.8555, 38.9077, -34.163, 0.22", "-38.0191, 39.2807, -34.4151, 0.22", "-38.1576, 39.6106, -34.6431, 0.81", "-38.3809, 40.167, -35.0661, 1.03", "-38.552, 40.6339, -35.4445, 1.4" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-36.1355, 32.4448, -26.0784, 0.22", "-37.5046, 33.3924, -26.4447, 0.22", "-39.4243, 34.8793, -27.0944, 0.22", "-40.1168, 35.4681, -27.3769, 0.22", "-40.5009, 35.8226, -27.5451, 0.52", "-40.956, 36.2632, -27.7486, 0.52", "-41.4444, 36.7507, -27.9666, 0.29", "-42.4631, 37.945, -28.4903, 0.74", "-43.0435, 38.6974, -28.8599, 0.88", "-43.5648, 39.3622, -29.1661, 0.88", "-44.1085, 40.0288, -29.4452, 0.29", "-44.6321, 40.6662, -29.6908, 1.25", "-45.2562, 41.4252, -29.9688, 1.25", "-46.6586, 43.0966, -30.5321, 0.22", "-48.5618, 45.3301, -31.2654, 0.22", "-49.4697, 46.382, -31.6081, 0.81", "-49.7928, 46.7571, -31.7298, 1.18", "-50.0819, 47.0908, -31.8404, 1.18", "-50.6642, 47.7453, -32.0372, 0.22", "-51.1593, 48.3163, -32.2021, 0.22", "-51.4722, 48.6954, -32.3455, 0.66", "-51.8386, 49.1486, -32.5531, 0.66", "-52.2574, 49.6242, -32.7954, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "21.5711, -54.0867, 1.19832, 0.66", "22.9074, -54.0885, 0.312902, 0.66", "23.8883, -54.1244, -0.377848, 0.52", "24.7788, -54.1807, -1.07711, 0.52", "26.1122, -54.2625, -2.20396, 0.88", "26.8378, -54.29, -2.83647, 0.96", "27.9905, -54.3033, -3.8301, 1.03", "28.8261, -54.304, -4.53991, 1.11", "29.8922, -54.2931, -5.46575, 0.74", "30.3681, -54.2735, -5.90784, 0.59", "31.0263, -54.2156, -6.54168, 0.52", "31.6073, -54.1288, -7.11456, 0.74", "32.7012, -53.9558, -8.14946, 0.74", "33.8113, -53.8087, -9.14001, 0.52", "35.1562, -53.6859, -10.306, 0.66", "35.9664, -53.6328, -10.9888, 0.81", "36.8173, -53.594, -11.7007, 0.66", "37.974, -53.5436, -12.6269, 0.52", "39.184, -53.4968, -13.5684, 1.4", "39.9673, -53.4687, -14.1491, 2.06", "40.8727, -53.442, -14.7521, 1.92", "41.7965, -53.4271, -15.3252, 1.77", "43.1124, -53.4135, -16.1225, 1.62", "44.477, -53.3748, -16.922, 0.88", "45.6036, -53.338, -17.5612, 0.22", "47.1426, -53.3285, -18.4042, 0.22", "48.1183, -53.3549, -18.9042, 1.03", "48.7073, -53.3791, -19.1588, 1.55", "49.2095, -53.4047, -19.3215, 1.84", "50.2166, -53.4558, -19.5239, 1.25", "52.1508, -53.5732, -19.8756, 0.22", "53.3424, -53.6682, -20.079, 0.22", "54.3734, -53.7736, -20.262, 1.55", "55.4373, -53.8986, -20.4441, 2.06", "56.1122, -53.9917, -20.5676, 2.06", "58.2795, -54.3602, -20.9842, 0.52", "59.905, -54.6816, -21.3315, 0.22", "61.015, -54.923, -21.6097, 1.11", "61.4165, -55.0133, -21.7164, 1.4", "62.0887, -55.1669, -21.8998, 1.4", "63.6555, -55.5035, -22.2638, 0.22", "64.9888, -55.7599, -22.5344, 0.22", "65.8923, -55.9071, -22.7508, 0.74", "66.6873, -56.0159, -22.9527, 0.96", "67.5785, -56.1162, -23.1933, 0.37", "68.9593, -56.1992, -23.5731, 0.15", "70.85, -56.2115, -24.1095, 1.47", "71.5576, -56.1909, -24.3211, 1.77", "72.1402, -56.1608, -24.5107, 1.62", "72.99, -56.0898, -24.7818, 0.74", "75.2556, -55.8368, -25.4197, 0.22", "76.2884, -55.7006, -25.6796, 1.18", "76.9915, -55.6018, -25.8262, 1.69", "77.7343, -55.513, -25.9685, 1.77", "79.778, -55.3174, -26.327, 0.22", "81.7181, -55.1927, -26.6243, 0.22", "82.4169, -55.1699, -26.7019, 0.52", "82.849, -55.1658, -26.7313, 0.52", "84.9787, -55.2159, -26.9067, 0.22", "85.9949, -55.2868, -27.0323, 1.11", "86.5395, -55.3469, -27.133, 1.62", "87.0643, -55.411, -27.2528, 1.84", "87.5589, -55.4705, -27.3774, 1.55", "90.299, -55.7734, -28.1602, 0.15", "93.0015, -56.0583, -28.9638, 0.15", "94.097, -56.1748, -29.3044, 1.03", "94.6824, -56.2289, -29.4932, 1.33", "95.4101, -56.2693, -29.7103, 1.33", "97.2669, -56.3098, -30.1809, 0.22", "98.6057, -56.289, -30.4374, 1.18", "99.3079, -56.2664, -30.5615, 1.77", "100.259, -56.2424, -30.7205, 1.77", "103.174, -56.2145, -31.1841, 0.22", "104.087, -56.2354, -31.3319, 0.74", "104.551, -56.2624, -31.4205, 0.74", "107.698, -56.5634, -32.1323, 0.22", "108.774, -56.7097, -32.3955, 0.81", "109.485, -56.8541, -32.5878, 1.03", "111.124, -57.3415, -33.134, 0.22", "112.497, -57.8029, -33.6525, 0.22", "113.19, -58.0536, -33.932, 1.18", "113.728, -58.2509, -34.1751, 1.4", "114.124, -58.3833, -34.3682, 1.4", "116.503, -59.0971, -35.5587, 0.22", "117.563, -59.392, -36.1124, 0.81", "118.22, -59.5638, -36.4784, 0.81", "120.2, -60.0337, -37.677, 0.22", "121.418, -60.2951, -38.4792, 0.96", "122.211, -60.4188, -39.0383, 1.25", "123.917, -60.556, -40.3942, 0.22", "125.098, -60.5875, -41.4453, 0.22", "125.62, -60.5719, -41.9572, 0.66", "126.202, -60.5104, -42.5818, 0.66", "127.738, -60.2545, -44.176, 0.29", "128.955, -60.0052, -45.4071, 0.74", "129.798, -59.8047, -46.2123, 1.33", "130.532, -59.644, -46.8504, 1.33", "133.027, -59.2451, -48.8295, 0.22", "134.616, -59.2388, -49.7218, 0.22", "135.528, -59.3087, -50.1121, 0.74", "136.059, -59.3614, -50.3038, 0.74", "137.095, -59.4662, -50.6786, 0.59", "139.001, -59.6921, -51.3235, 0.15", "145.303, -60.5874, -53.2507, 0.15", "147.255, -60.8959, -53.865, 0.66", "148.156, -61.0427, -54.1487, 0.96", "150.442, -61.4153, -54.8947, 0.88" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "21.5711, -54.0867, 1.19832, 1.03", "22.2494, -55.0668, 1.4168, 1.03", "22.8282, -55.8731, 1.53455, 0.74", "23.5392, -56.7937, 1.57999, 0.96", "24.148, -57.5267, 1.5264, 0.66", "24.6326, -58.0783, 1.41464, 0.52", "25.6252, -59.1851, 1.033, 0.52", "26.0194, -59.6073, 0.822318, 0.52", "26.8064, -60.456, 0.301605, 0.96", "27.5306, -61.2513, -0.275259, 1.03", "28.1825, -61.9657, -0.852181, 0.81", "29.0936, -62.9625, -1.67049, 0.59", "29.7351, -63.6569, -2.22097, 0.88", "30.1426, -64.1121, -2.55607, 0.88", "30.7965, -64.8789, -3.06555, 0.52", "31.1832, -65.3416, -3.34118, 0.52", "31.8219, -66.1098, -3.75078, 0.96", "32.0513, -66.4061, -3.8988, 1.25", "32.3946, -66.8849, -4.13662, 1.25", "33.1717, -68.0236, -4.65106, 0.59", "33.7376, -68.8827, -4.99622, 0.44", "34.15, -69.4943, -5.21515, 0.29", "34.9184, -70.55, -5.5666, 0.29", "35.4389, -71.1647, -5.75479, 0.29", "36.0715, -71.7652, -5.94324, 0.44", "36.4916, -72.0977, -6.06046, 0.44", "37.2972, -72.6341, -6.30502, 0.59", "37.9967, -73.0263, -6.53345, 0.59", "39.0575, -73.5295, -6.7988, 1.25", "40.3394, -74.1218, -7.06722, 2.58", "41.2563, -74.5698, -7.20812, 3.32", "42.0531, -74.9768, -7.26681, 3.46", "42.6525, -75.3032, -7.26164, 3.09", "44.6132, -76.4401, -7.05138, 0.29", "45.2435, -76.8374, -6.909, 0.29", "46.2766, -77.5783, -6.55838, 1.18", "46.993, -78.1522, -6.26167, 1.69", "47.3576, -78.4814, -6.10383, 1.69", "47.7985, -78.9205, -5.92647, 1.62", "48.5314, -79.7175, -5.68895, 0.96", "49.5619, -80.8282, -5.41066, 0.22", "50.268, -81.5697, -5.27063, 0.22", "50.9636, -82.2831, -5.1796, 1.25", "51.4522, -82.736, -5.14509, 1.77", "51.8731, -83.0957, -5.13804, 1.92", "52.407, -83.4972, -5.15499, 1.69", "52.8347, -83.783, -5.19324, 1.25", "53.5009, -84.2273, -5.26985, 0.88", "54.4816, -84.9382, -5.37165, 0.22", "54.9655, -85.3524, -5.41366, 0.74", "55.3708, -85.7858, -5.43722, 0.96", "55.907, -86.4581, -5.46899, 1.11", "56.2562, -86.96, -5.48607, 1.11", "56.7441, -87.7484, -5.49962, 0.81", "57.1855, -88.5748, -5.49465, 0.52", "57.7008, -89.6014, -5.48251, 0.22", "58.0168, -90.2658, -5.46792, 0.22", "58.3484, -90.9655, -5.44127, 0.81", "58.6086, -91.4834, -5.45111, 1.18", "58.8527, -91.9226, -5.488, 1.4", "59.0866, -92.2912, -5.53474, 1.4", "59.3815, -92.7151, -5.6049, 1.11", "59.7862, -93.2767, -5.70617, 0.81", "60.7865, -94.5525, -5.9609, 0.22", "61.8152, -95.74, -6.18338, 0.22", "62.3339, -96.3028, -6.27748, 1.25", "62.9723, -96.9614, -6.36311, 1.77", "63.2574, -97.2449, -6.38961, 1.99", "63.7084, -97.6847, -6.41543, 1.69", "65.316, -99.2052, -6.45846, 0.22", "66.7276, -100.532, -6.36305, 0.22", "67.6121, -101.343, -6.23062, 1.25", "68.1293, -101.805, -6.11549, 1.69", "68.671, -102.269, -5.96872, 1.92", "69.1978, -102.69, -5.80541, 1.99", "71.261, -104.209, -5.07518, 0.29", "72.3341, -104.945, -4.66842, 0.37", "72.8546, -105.298, -4.47988, 0.37", "73.8363, -105.943, -4.14582, 0.29", "74.8999, -106.621, -3.81564, 0.29", "75.4306, -106.958, -3.67247, 0.44", "75.5244, -107.016, -3.65598, 0.44", "76.4893, -107.631, -3.44528, 0.22", "77.3659, -108.174, -3.22728, 1.47", "78.0116, -108.566, -3.05217, 2.28", "78.6939, -108.965, -2.84391, 2.87", "79.1663, -109.232, -2.691, 3.09", "79.8911, -109.641, -2.45447, 2.5", "81.5757, -110.589, -1.83655, 0.59", "82.3646, -111.042, -1.51789, 0.52", "83.0369, -111.43, -1.23502, 0.44", "83.6293, -111.77, -0.973027, 0.44", "84.4916, -112.253, -0.578276, 0.37", "85.5617, -112.848, -0.0604515, 0.22", "86.4168, -113.318, 0.394416, 0.22", "87.3878, -113.818, 0.880129, 0.96", "87.9254, -114.067, 1.12162, 1.25", "88.5934, -114.344, 1.39391, 1.47", "89.2735, -114.595, 1.6325, 1.47", "90.271, -114.931, 1.90033, 0.66", "91.4195, -115.314, 2.13249, 0.22", "92.7008, -115.742, 2.31901, 0.22", "93.3997, -115.975, 2.3877, 0.66", "93.992, -116.171, 2.42848, 0.88", "94.5443, -116.351, 2.44404, 0.88", "96.2166, -116.9, 2.37826, 0.22", "97.3336, -117.274, 2.27845, 0.66", "97.8825, -117.462, 2.20603, 0.81", "98.3527, -117.634, 2.13979, 0.44", "99.5086, -118.079, 1.96539, 0.22", "100.622, -118.514, 1.78019, 0.44", "101.384, -118.794, 1.64433, 0.66", "102.011, -119.026, 1.52494, 1.47", "102.66, -119.239, 1.37138, 2.28", "103.211, -119.393, 1.22897, 2.65", "103.679, -119.497, 1.10853, 2.65", "104.708, -119.683, 0.860623, 1.69", "105.789, -119.838, 0.581977, 0.74", "107.248, -119.997, 0.206937, 0.22", "107.891, -120.052, 0.0475454, 0.37", "108.765, -120.133, -0.147264, 0.37", "109.579, -120.221, -0.312167, 1.03", "110.376, -120.331, -0.438226, 1.84", "111.03, -120.435, -0.498371, 2.14", "111.442, -120.518, -0.514472, 2.28", "112.332, -120.713, -0.539079, 1.55", "113.23, -120.949, -0.549791, 0.66", "114.353, -121.28, -0.547957, 0.29", "115.219, -121.562, -0.533285, 0.81", "115.937, -121.81, -0.517977, 0.96", "117.13, -122.239, -0.477903, 0.22", "118.271, -122.656, -0.421277, 0.22", "119.16, -122.969, -0.365068, 1.33", "119.613, -123.122, -0.335362, 1.84", "120.087, -123.277, -0.302514, 2.14", "120.53, -123.415, -0.271152, 2.14", "121.811, -123.79, -0.179622, 0.59", "123.559, -124.268, -0.0593615, 0.22", "124.88, -124.621, 0.0226514, 1.11", "125.314, -124.74, 0.0521644, 1.77", "125.717, -124.856, 0.0846426, 2.06", "126.21, -125.012, 0.13564, 2.06", "127.015, -125.305, 0.257163, 1.03", "128.732, -126.026, 0.620825, 0.22", "129.434, -126.342, 0.798602, 0.81", "129.932, -126.586, 0.935804, 0.81", "130.762, -127.034, 1.20561, 0.29", "131.508, -127.475, 1.49714, 0.22", "132.401, -128.044, 1.89703, 1.18", "133.085, -128.522, 2.23398, 1.77", "133.615, -128.888, 2.48797, 1.92", "135.531, -130.154, 3.36562, 0.22", "136.687, -130.843, 3.88212, 1.11", "137.112, -131.069, 4.06627, 1.47", "137.492, -131.244, 4.2302, 1.77", "138.216, -131.523, 4.53403, 1.77", "139.195, -131.792, 4.89843, 0.74", "140.177, -131.947, 5.18664, 0.29", "140.825, -132.008, 5.34624, 0.66", "141.576, -132.058, 5.51821, 0.66", "142.232, -132.087, 5.66134, 0.37", "143.536, -132.148, 5.86925, 0.22", "144.203, -132.184, 5.92467, 0.81", "144.608, -132.213, 5.93784, 1.03", "145.195, -132.255, 5.92227, 0.81", "146.025, -132.314, 5.85856, 0.52", "147.334, -132.379, 5.71786, 0.15", "148.561, -132.416, 5.55618, 1.18", "149.375, -132.423, 5.44305, 2.06", "150.175, -132.416, 5.33114, 2.43", "150.76, -132.407, 5.24061, 2.14", "152.503, -132.376, 4.93873, 0.22", "153.591, -132.379, 4.74716, 0.66", "154.253, -132.405, 4.61831, 0.81", "154.827, -132.45, 4.50507, 0.88", "156.292, -132.643, 4.22681, 0.22", "157.195, -132.807, 4.05146, 0.22", "158.607, -133.131, 3.78325, 1.33", "159.381, -133.33, 3.63734, 2.5", "160.102, -133.526, 3.52219, 2.36", "161.028, -133.753, 3.4679, 1.55", "162.485, -134.065, 3.53823, 0.74", "163.274, -134.207, 3.65799, 0.66", "163.968, -134.294, 3.83071, 0.44", "165.097, -134.38, 4.21385, 0.22", "167.081, -134.461, 5.06835, 0.22", "167.688, -134.468, 5.37389, 0.22", "168.423, -134.46, 5.80171, 0.88", "169.055, -134.44, 6.2222, 1.11", "169.72, -134.398, 6.68293, 1.11", "170.099, -134.362, 6.95168, 0.74", "171.118, -134.266, 7.65136, 0.29", "171.922, -134.192, 8.181, 0.52", "172.844, -134.079, 8.76306, 0.74", "174.314, -133.876, 9.66929, 0.29", "175.322, -133.715, 10.2333, 1.18", "175.927, -133.595, 10.524, 1.62", "176.748, -133.408, 10.8501, 2.14", "177.73, -133.173, 11.131, 2.14", "178.082, -133.088, 11.1919, 2.14", "179.535, -132.736, 11.3405, 0.22", "181.021, -132.384, 11.4075, 0.22", "181.772, -132.199, 11.4162, 0.66", "182.386, -132.062, 11.4006, 0.81", "183.89, -131.794, 11.3135, 0.22", "184.559, -131.717, 11.2693, 0.66", "185.061, -131.713, 11.2328, 0.88", "186.743, -131.906, 11.1179, 0.22", "187.456, -132.057, 11.0712, 0.37", "187.911, -132.201, 11.0395, 0.37", "189.43, -132.868, 10.9662, 0.22", "190.582, -133.556, 10.9582, 0.22", "191.715, -134.454, 11.0248, 1.77", "192.132, -134.886, 11.0706, 2.14", "192.546, -135.398, 11.1353, 2.28", "193.071, -136.222, 11.2458, 1.55", "193.893, -137.93, 11.4795, 0.22", "194.299, -138.998, 11.6069, 0.44", "194.564, -139.826, 11.6817, 0.81", "194.76, -140.459, 11.7111, 0.81", "195.135, -141.626, 11.6213, 0.22", "195.385, -142.277, 11.4739, 0.22", "195.665, -142.87, 11.2781, 0.96", "195.891, -143.283, 11.1271, 1.18", "196.276, -143.911, 10.8791, 1.18", "197.329, -145.488, 10.2439, 0.22", "198.622, -147.312, 9.5042, 0.22", "199.088, -147.945, 9.25409, 0.74", "199.516, -148.465, 9.06471, 0.81", "200.25, -149.278, 8.80424, 0.52", "201.225, -150.258, 8.55159, 1.47", "201.921, -150.886, 8.45607, 2.06", "202.519, -151.394, 8.41755, 1.84", "204.386, -152.928, 8.42123, 0.22", "204.905, -153.327, 8.47106, 0.44", "205.193, -153.537, 8.53202, 0.44", "205.982, -154.059, 8.76741, 0.22", "206.583, -154.451, 8.99817, 0.66", "206.903, -154.651, 9.13947, 1.18", "207.526, -155.011, 9.43342, 1.18", "208.562, -155.55, 9.9182, 0.29", "209.72, -156.07, 10.4718, 0.29", "210.388, -156.335, 10.7882, 0.29", "211.483, -156.743, 11.3362, 0.22", "212.216, -157.036, 11.7553, 0.22", "213.572, -157.605, 12.5892, 1.11", "214.411, -157.967, 13.1529, 2.21", "214.969, -158.222, 13.5501, 2.43", "215.762, -158.576, 14.1331, 2.14", "217.514, -159.361, 15.4341, 0.15", "217.903, -159.525, 15.7374, 0.15", "218.423, -159.723, 16.1526, 0.52", "218.566, -159.774, 16.2753, 0.66", "219.547, -160.075, 17.2001, 0.22", "220.2, -160.239, 17.8295, 0.22", "221.381, -160.518, 19.013, 0.96", "221.711, -160.618, 19.3653, 0.96", "222.889, -161.026, 20.6669, 0.22", "223.717, -161.356, 21.5704, 0.59", "223.985, -161.491, 21.8701, 0.59", "224.424, -161.751, 22.3521, 0.37", "224.979, -162.132, 22.9433, 0.66", "225.277, -162.37, 23.2767, 0.66", "225.788, -162.897, 23.8773, 0.29", "226.408, -163.703, 24.6399, 0.44", "226.822, -164.312, 25.1816, 0.29", "227.326, -165.087, 25.864, 0.66", "227.544, -165.426, 26.1631, 0.66", "228.002, -166.22, 26.8532, 0.22", "228.218, -166.677, 27.2274, 0.22", "228.471, -167.3, 27.7355, 0.44", "228.666, -167.779, 28.1163, 0.44", "229.015, -168.596, 28.7168, 0.66", "229.417, -169.55, 29.3863, 1.4", "229.809, -170.547, 30.0456, 2.06", "230.262, -171.823, 30.7753, 1.92", "230.671, -173.088, 31.3543, 0.29", "231.015, -174.162, 31.7385, 0.59", "231.272, -174.925, 31.9388, 0.96", "231.544, -175.597, 32.0547, 0.96", "232.078, -176.728, 32.162, 0.29", "232.494, -177.515, 32.157, 0.74", "232.867, -178.165, 32.1269, 0.74", "233.481, -179.117, 32.0566, 0.22", "233.931, -179.754, 32.0002, 0.52", "234.133, -180.022, 31.9769, 0.52", "235.579, -181.819, 31.8353, 0.22", "236.163, -182.479, 31.7972, 0.66", "236.546, -182.871, 31.7788, 0.88", "236.923, -183.222, 31.7677, 0.88", "237.969, -184.068, 31.7624, 0.22", "239.443, -185.066, 31.7441, 0.22", "240.666, -185.704, 31.7801, 0.96", "241.538, -186.089, 31.8313, 1.4", "242.016, -186.27, 31.8697, 1.55", "243.435, -186.724, 32.021, 0.22", "244.517, -187.015, 32.1719, 0.22", "245.717, -187.37, 32.3942, 0.52", "246.047, -187.525, 32.4684, 0.52", "246.718, -187.999, 32.647, 0.22", "247.179, -188.445, 32.7834, 0.44", "247.648, -189.022, 32.9368, 0.44", "248.352, -190.035, 33.165, 0.22", "249.164, -191.332, 33.3567, 0.22", "249.481, -191.886, 33.4382, 0.44", "249.719, -192.362, 33.5072, 0.44", "259.814, -197.139, 33.7947, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "12.8784, -75.7577, -10.4954, 1.03", "13.2048, -77.6885, -12.4302, 1.03", "13.6361, -79.4117, -14.0114, 1.55", "13.9722, -80.4797, -14.9377, 1.4", "14.3336, -81.5406, -15.7666, 1.11", "14.9219, -83.254, -16.9755, 0.81", "15.2925, -84.3517, -17.6898, 0.81", "15.7392, -85.6484, -18.3908, 0.88", "16.1966, -86.97, -18.9627, 0.96", "16.6843, -88.3857, -19.5072, 1.62", "17.0298, -89.5504, -19.9436, 2.14", "17.2995, -90.7505, -20.3775, 2.21", "17.447, -91.6984, -20.7295, 2.28", "17.5244, -92.4472, -21.0071, 2.14", "17.6186, -94.0056, -21.61, 1.77", "17.6701, -95.9993, -22.4331, 0.59", "17.676, -97.2917, -22.9449, 0.59", "17.6579, -98.4248, -23.3572, 0.37", "17.6235, -99.419, -23.6807, 0.29", "17.5823, -100.284, -23.9272, 0.29", "17.5076, -101.423, -24.1793, 0.37", "17.4155, -102.997, -24.4542, 0.44", "17.3514, -103.987, -24.6122, 0.96", "17.2964, -104.972, -24.7492, 1.55", "17.279, -105.618, -24.8253, 1.84", "17.2907, -106.522, -24.9322, 1.84", "17.3386, -107.267, -25.0466, 2.06", "17.4171, -107.98, -25.1652, 2.36", "17.6281, -109.14, -25.3743, 2.36", "17.8419, -110.093, -25.5501, 2.21", "18.1333, -111.25, -25.7758, 2.14", "18.6322, -113.056, -26.1345, 1.03", "19.0167, -114.368, -26.4052, 0.81", "19.6108, -116.284, -26.8049, 1.03", "19.8815, -117.14, -26.9889, 1.69", "20.084, -117.883, -27.1556, 2.14", "20.1743, -118.333, -27.2803, 2.43", "20.2483, -119.066, -27.5341, 2.43", "20.2858, -120.717, -28.2162, 0.66", "20.2383, -121.924, -28.7403, 0.37", "20.1791, -123.274, -29.3593, 0.37", "20.1117, -124.783, -30.0982, 0.37", "20.0797, -125.642, -30.5584, 0.44", "20.0569, -126.361, -30.9958, 0.37", "20.0368, -127.162, -31.5424, 0.29", "20.057, -128.007, -32.1608, 0.29", "20.1586, -129.04, -32.9444, 0.96", "20.2827, -129.95, -33.6378, 1.11", "20.4619, -131.129, -34.5436, 1.33", "20.5888, -132.019, -35.214, 1.47", "20.7058, -132.867, -35.8247, 1.69", "20.7759, -133.425, -36.1792, 1.84", "20.9033, -134.459, -36.7237, 1.55", "21.046, -135.533, -37.1992, 0.66", "21.173, -136.447, -37.5366, 0.44", "21.3679, -137.795, -37.9608, 0.44", "21.4726, -138.581, -38.1692, 1.33", "21.6063, -139.63, -38.4219, 1.62", "21.7267, -140.604, -38.6335, 1.92", "21.7911, -141.158, -38.7574, 2.21", "21.8768, -142.026, -38.9504, 2.21", "21.9494, -142.829, -39.1084, 2.21", "21.9955, -143.214, -39.185, 2.36", "22.1648, -144.49, -39.4319, 1.62", "22.3904, -146.186, -39.7601, 0.81", "22.5601, -147.411, -39.9943, 0.29", "22.6862, -148.297, -40.173, 0.29", "22.7959, -149.038, -40.3253, 0.29", "22.9569, -150.19, -40.5503, 1.55", "23.1316, -151.436, -40.8014, 2.58", "23.248, -152.296, -40.96, 3.09", "23.4281, -153.726, -41.2082, 2.5", "23.5536, -154.933, -41.3775, 1.84", "23.7052, -156.835, -41.5371, 0.52", "23.7787, -157.836, -41.5517, 0.37", "23.8608, -159.127, -41.4515, 1.55", "23.9179, -160.148, -41.2918, 2.36", "23.9734, -161.295, -41.0171, 2.87", "24.0153, -162.284, -40.7251, 3.09", "24.0466, -163.381, -40.3708, 2.95", "24.0675, -165.433, -39.7136, 0.66", "24.0733, -166.367, -39.4439, 0.52", "24.0743, -166.844, -39.3284, 0.52", "24.0734, -167.83, -39.1587, 0.37", "24.0333, -169.166, -39.0412, 0.37", "23.9736, -170.06, -39.0145, 0.66", "23.9014, -171.008, -39.0364, 0.66", "23.817, -172.19, -39.0892, 0.29", "23.7351, -173.632, -39.1724, 0.29", "23.6551, -176.128, -39.3256, 0.29", "23.6782, -177.391, -39.406, 0.74", "23.7726, -178.758, -39.488, 1.47", "23.8446, -179.353, -39.5268, 1.99", "23.9899, -180.184, -39.5842, 2.5", "24.1423, -180.868, -39.6298, 2.65", "24.5855, -182.551, -39.7309, 1.4", "24.8841, -183.773, -39.7999, 0.74", "25.1363, -185.002, -39.8449, 0.29", "25.3702, -186.272, -39.9116, 0.29", "25.5603, -187.428, -39.9874, 0.29", "25.642, -187.967, -40.0314, 0.81", "25.8256, -189.139, -40.1434, 1.18", "26.1144, -190.999, -40.2614, 2.28", "26.3445, -192.486, -40.3064, 2.8", "26.4842, -193.335, -40.3103, 2.8", "26.6345, -194.23, -40.2959, 2.87", "27.0226, -196.571, -40.209, 0.29", "27.2829, -198.26, -40.1048, 0.22", "27.3804, -198.978, -40.0392, 0.74", "27.4588, -199.786, -39.9489, 0.81", "27.5086, -200.611, -39.8752, 0.81", "27.5317, -201.385, -39.8275, 0.66", "27.5473, -202.961, -39.7891, 0.22", "27.5754, -203.983, -39.82, 0.22", "27.615, -205.888, -39.9289, 0.22", "27.6002, -207.344, -40.0631, 1.77", "27.5677, -208.265, -40.1729, 2.43", "27.5295, -208.825, -40.2552, 2.73", "27.3789, -210.172, -40.4959, 1.77", "27.1427, -211.775, -40.8575, 0.52", "26.8968, -213.122, -41.2143, 0.29", "26.7417, -213.814, -41.4135, 0.59", "26.6054, -214.35, -41.5742, 0.59", "26.3871, -215.148, -41.8096, 0.52", "25.9507, -216.675, -42.2442, 0.22", "25.6349, -217.902, -42.5598, 0.22", "25.42, -218.95, -42.8171, 0.37", "25.3206, -219.649, -42.9958, 0.37", "25.2751, -220.433, -43.1854, 0.88", "25.2894, -221.24, -43.3662, 1.11", "25.3331, -221.941, -43.5067, 1.25", "25.3888, -222.58, -43.6265, 1.25", "25.5297, -223.981, -43.8905, 0.74", "25.7004, -225.46, -44.172, 0.29", "25.8703, -226.745, -44.4072, 0.22", "26.1993, -229.076, -44.804, 0.22", "26.4737, -230.852, -45.0585, 1.33", "26.6606, -231.943, -45.1618, 1.92", "26.8174, -232.76, -45.2026, 2.36", "26.9476, -233.334, -45.2183, 2.65", "27.106, -233.962, -45.2193, 2.65", "27.3946, -234.963, -45.2193, 1.99", "27.9065, -236.696, -45.2329, 0.52", "28.17, -237.645, -45.243, 0.59", "28.485, -238.871, -45.2728, 0.22", "28.8567, -240.359, -45.3553, 0.22", "29.0683, -241.234, -45.4266, 0.22", "29.1568, -241.616, -45.4664, 0.66", "29.292, -242.152, -45.5258, 0.81", "29.3986, -242.53, -45.5606, 0.81", "29.7855, -243.812, -45.6304, 0.22", "30.0417, -244.615, -45.6575, 0.29", "30.2941, -245.422, -45.6708, 0.29", "30.6774, -246.688, -45.7026, 0.29", "30.9507, -247.632, -45.7346, 0.88", "31.2127, -248.632, -45.7803, 1.84", "31.4413, -249.593, -45.8327, 2.36", "31.5415, -249.997, -45.8641, 2.73", "31.7494, -250.791, -45.9316, 2.73", "31.9826, -251.688, -46.0126, 2.43", "32.3094, -253.035, -46.1359, 1.77", "32.5919, -254.265, -46.2473, 0.66", "32.9492, -255.887, -46.3667, 0.29", "33.293, -257.423, -46.4511, 0.29", "33.5249, -258.402, -46.4808, 0.29", "33.8737, -259.824, -46.4846, 0.29", "34.0836, -260.63, -46.4526, 0.29", "34.4148, -261.794, -46.3725, 1.55", "34.7126, -262.771, -46.2975, 2.28", "35.0235, -263.701, -46.2355, 2.58", "35.3171, -264.492, -46.1947, 2.43", "36.026, -266.314, -46.1412, 1.11", "36.5885, -267.826, -46.1567, 0.44", "36.8968, -268.727, -46.2182, 0.29", "37.1222, -269.452, -46.3247, 0.29", "37.338, -270.281, -46.5046, 0.88", "37.5043, -271.137, -46.7314, 1.47", "37.5811, -271.819, -46.9369, 1.62", "37.624, -272.678, -47.181, 1.62", "37.6425, -274.097, -47.5377, 1.03", "37.6338, -275.249, -47.8156, 0.44", "37.5924, -276.661, -48.1277, 0.37", "37.5563, -277.566, -48.3201, 0.88", "37.5144, -278.63, -48.534, 0.88", "37.4929, -279.698, -48.7344, 1.03", "37.5032, -280.892, -48.9345, 0.88", "37.5597, -281.964, -49.1291, 0.74", "37.6405, -282.853, -49.3098, 0.44", "37.836, -284.435, -49.6668, 0.29", "38.0702, -286.224, -50.079, 1.69", "38.2198, -287.353, -50.3392, 2.73", "38.3833, -288.608, -50.6157, 2.58", "38.5026, -289.609, -50.8247, 2.36", "38.7594, -292.142, -51.2929, 0.29", "38.9039, -293.918, -51.592, 0.29", "38.9677, -294.839, -51.7411, 0.52", "39.0179, -295.524, -51.8431, 0.52", "39.1913, -297.394, -52.0546, 0.22", "39.3248, -298.491, -52.1731, 0.81", "39.4097, -299.032, -52.2293, 1.11", "39.5465, -299.737, -52.3092, 1.25", "39.7444, -300.643, -52.4327, 1.25", "40.298, -302.906, -52.8563, 0.22", "40.6445, -304.178, -53.1426, 0.22", "40.8769, -305.045, -53.3767, 0.96", "41.1046, -305.955, -53.6362, 1.4", "41.3167, -306.894, -53.9201, 1.62", "41.5183, -307.894, -54.232, 1.4", "41.6874, -308.858, -54.5306, 1.03", "41.9179, -310.458, -54.9853, 0.22", "42.0015, -311.186, -55.2014, 0.22", "42.0596, -312.407, -55.5638, 1.69", "42.0345, -313.569, -55.8838, 2.73", "41.9798, -314.265, -56.0624, 3.09", "41.8708, -315.259, -56.3105, 2.95", "41.5467, -317.763, -56.908, 0.74", "41.2427, -319.895, -57.426, 0.22", "40.9848, -321.595, -57.8524, 0.22", "40.7125, -323.421, -58.298, 0.22", "40.6024, -324.239, -58.4694, 0.59", "40.5261, -324.899, -58.5735, 0.59", "40.4449, -325.724, -58.6631, 0.29", "40.3952, -327.085, -58.7682, 0.29", "40.4178, -328.294, -58.8372, 1.55", "40.4874, -329.582, -58.8825, 2.58", "40.5109, -330.048, -58.8867, 2.87" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.8784, -75.7577, -10.4954, 0.66", "13.197, -77.1669, -10.2315, 0.66", "13.3987, -77.9551, -10.0894, 0.59", "13.59, -78.6572, -9.9512, 0.44", "13.745, -79.1953, -9.83323, 0.44", "14.0376, -80.1846, -9.60792, 0.44", "14.3348, -81.1951, -9.3582, 0.44", "14.7676, -82.6005, -8.96304, 0.44", "14.9819, -83.2614, -8.77431, 0.44", "15.2923, -84.231, -8.50037, 1.33", "15.4229, -84.6617, -8.38651, 1.77", "15.5738, -85.1995, -8.23532, 1.99", "15.7793, -85.9241, -8.01955, 1.69", "15.9646, -86.6036, -7.78141, 0.96", "16.1349, -87.3032, -7.49867, 0.37", "16.3331, -88.2609, -7.04303, 0.29", "16.4912, -89.0681, -6.60499, 0.29", "16.6308, -89.827, -6.12717, 0.29", "16.8276, -91.0719, -5.25457, 0.29", "16.9244, -91.7257, -4.7647, 1.25", "17.024, -92.416, -4.21287, 1.69", "17.1092, -92.9935, -3.73751, 1.84", "17.3073, -94.1413, -2.78415, 0.44", "17.4098, -94.6091, -2.39054, 0.37", "17.6085, -95.3133, -1.87163, 0.29", "17.7716, -95.8049, -1.55322, 0.81", "17.9009, -96.1725, -1.3414, 0.96", "18.1266, -96.8131, -1.00958, 0.59", "18.5469, -98.002, -0.478344, 0.29", "18.9571, -99.2928, 0.0259911, 0.29", "19.1278, -99.9908, 0.23464, 1.03", "19.2267, -100.537, 0.353769, 1.33", "19.267, -100.862, 0.405107, 1.47", "19.2966, -101.475, 0.451233, 0.81", "19.2423, -102.526, 0.459735, 0.22", "19.0769, -103.686, 0.434943, 0.22", "18.9784, -104.182, 0.408891, 0.66", "18.9334, -104.363, 0.394787, 0.66", "18.6062, -105.384, 0.285222, 0.22", "18.3657, -105.965, 0.20432, 1.55", "18.162, -106.381, 0.136209, 1.84", "17.965, -106.748, 0.0710392, 2.06", "17.4931, -107.607, -0.083167, 0.22", "16.8096, -108.825, -0.298652, 0.22", "15.903, -110.437, -0.590183, 0.22", "15.5316, -111.109, -0.708164, 0.81", "15.3091, -111.523, -0.779845, 1.03", "15.1971, -111.739, -0.816062, 1.03", "14.7508, -112.706, -0.982376, 0.22", "14.4552, -113.616, -1.14777, 0.22", "14.3946, -113.935, -1.17286, 0.59", "14.3213, -114.447, -1.16812, 1.11", "14.2705, -114.884, -1.13215, 1.55", "14.233, -115.35, -1.06666, 1.77", "14.1647, -117.028, -0.683791, 0.15", "14.1272, -118.964, -0.111182, 0.15", "14.1238, -119.764, 0.155109, 0.96", "14.1234, -120.313, 0.372068, 1.55", "14.1253, -120.973, 0.660414, 2.06", "14.1368, -122.899, 1.56076, 0.22", "14.1612, -123.964, 2.07421, 0.22", "14.2525, -125.878, 2.94727, 0.22", "14.3208, -126.916, 3.4194, 1.03", "14.3746, -127.637, 3.7436, 1.62", "14.4027, -128.175, 3.97915, 1.62", "14.4386, -129.416, 4.44781, 0.22", "14.4259, -130.357, 4.72051, 0.22", "14.4101, -130.836, 4.83239, 0.74", "14.3905, -131.251, 4.90002, 0.88", "14.256, -132.901, 5.12549, 0.22", "14.1204, -133.897, 5.22869, 0.96", "13.9638, -134.558, 5.24407, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "40.5109, -330.048, -58.8867, 0.52", "40.6655, -332.006, -60.1363, 0.52", "40.7923, -333.956, -61.3171, 0.22", "40.8457, -334.89, -61.8629, 0.52", "40.8856, -335.623, -62.288, 0.59", "40.9928, -337.009, -63.1784, 0.22", "41.1337, -338.748, -64.3887, 0.22", "41.1826, -339.268, -64.7862, 0.96", "41.2141, -339.644, -65.0912, 1.25", "41.2439, -340.044, -65.4312, 1.25", "41.3403, -342.494, -67.5693, 0.22", "41.378, -345.029, -69.8865, 0.22", "41.3659, -345.875, -70.6701, 1.11", "41.3403, -346.479, -71.2158, 1.33", "41.3097, -346.895, -71.5736, 1.33", "41.1474, -348.319, -72.6971, 0.22", "40.9983, -349.095, -73.1924, 0.22", "40.8732, -349.711, -73.5157, 1.03", "40.7656, -350.351, -73.8086, 1.47", "40.6836, -350.992, -74.0663, 1.47", "40.6553, -351.505, -74.2602, 0.96", "40.7078, -352.7, -74.6866, 0.22", "40.8104, -353.911, -75.0713, 0.22", "40.9122, -354.706, -75.2918, 0.81", "41.0633, -355.447, -75.4226, 1.84", "41.3691, -356.634, -75.5715, 2.36", "41.6189, -357.448, -75.6404, 2.36", "41.9619, -358.415, -75.6951, 1.33", "42.4598, -359.712, -75.7348, 0.22", "43.9483, -363.123, -76.0378, 0.22", "44.2999, -363.966, -76.1685, 0.81", "44.5468, -364.585, -76.2839, 1.03", "44.7661, -365.129, -76.4126, 1.18", "44.9493, -365.579, -76.54, 1.18", "46.0686, -368.428, -77.5137, 0.22", "48.0447, -373.79, -79.5816, 0.22", "48.392, -374.795, -79.9687, 0.96", "48.8249, -376.076, -80.4763, 1.92", "49.0408, -376.783, -80.7142, 1.92", "49.6748, -379.089, -81.3107, 0.22", "50.3732, -382.164, -81.7668, 0.22", "50.5958, -383.286, -81.8055, 0.81", "50.7742, -384.445, -81.6925, 1.03", "51.2034, -387.962, -81.1074, 0.15", "51.3477, -389.361, -80.811, 0.81", "51.4146, -390.386, -80.5317, 0.96", "51.5333, -393.473, -79.6477, 0.22", "51.6078, -397.822, -78.4626, 0.22", "51.5928, -399.165, -78.134, 0.52", "51.5786, -399.415, -78.0887, 0.81", "51.2438, -401.475, -77.7596, 0.22", "50.9317, -402.606, -77.5968, 1.18", "50.6159, -403.256, -77.4987, 1.4", "50.325, -403.679, -77.4465, 1.4", "49.0764, -405.337, -77.25, 0.22", "47.1401, -407.857, -77.0184, 0.22", "46.7918, -408.302, -76.9919, 0.74", "46.2143, -409.038, -76.9669, 0.74", "43.977, -412.017, -77.1446, 0.22", "43.3815, -412.858, -77.3554, 1.25", "42.9405, -413.477, -77.6684, 1.77", "42.6606, -413.838, -77.9275, 1.99", "42.1639, -414.455, -78.4364, 1.99", "41.3135, -415.452, -79.3552, 1.4", "39.6913, -417.223, -81.2464, 0.15", "37.7871, -419.265, -83.4871, 0.15", "37.4827, -419.58, -83.8291, 0.44", "37.2209, -419.85, -84.1082, 0.44", "36.3071, -420.799, -84.9838, 0.22", "35.6177, -421.506, -85.5447, 0.74", "35.2976, -421.833, -85.7742, 0.74", "34.3045, -422.922, -86.5447, 0.22", "33.5644, -423.761, -87.0999, 1.4", "33.1238, -424.298, -87.4785, 1.62", "32.7961, -424.738, -87.7808, 1.62", "31.7874, -426.211, -88.7061, 0.22", "31.516, -426.633, -88.9727, 0.81", "31.2784, -427.036, -89.2221, 0.96", "30.4206, -428.639, -90.1628, 0.22", "29.1595, -431.211, -91.6296, 0.22", "28.6388, -432.414, -92.2704, 0.88", "28.4391, -432.902, -92.4904, 0.88", "27.607, -434.888, -93.2046, 0.22", "27.1811, -435.867, -93.4695, 0.22", "27.0468, -436.159, -93.5185, 0.96", "26.5796, -437.17, -93.6253, 0.96", "25.5977, -439.207, -93.7414, 0.22", "24.2863, -441.894, -93.7817, 0.22", "23.9725, -442.521, -93.7584, 0.81", "23.6148, -443.282, -93.7325, 1.11", "23.1683, -444.471, -93.7044, 0.37", "23.023, -445.012, -93.6976, 0.29", "22.9423, -445.593, -93.7034, 0.81", "22.9315, -446.603, -93.6952, 1.18", "23.0706, -448.978, -93.6647, 0.22", "23.2927, -451.376, -93.6357, 0.22", "23.3911, -452.244, -93.6243, 0.52", "23.4321, -452.577, -93.6204, 0.52", "23.8557, -456.219, -93.575, 0.22", "24.2689, -460.052, -93.5157, 0.22", "24.3399, -460.772, -93.4933, 0.74", "24.385, -461.321, -93.4802, 1.03", "24.42, -461.817, -93.4735, 1.03", "24.5802, -464.426, -93.4797, 0.22", "24.6176, -465.301, -93.5084, 0.66", "24.6413, -466.204, -93.5246, 0.81", "24.6408, -466.671, -93.4982, 0.88", "24.5798, -467.962, -93.3157, 0.15", "24.5018, -468.502, -93.155, 0.37", "24.3984, -468.882, -92.9654, 0.52", "23.9056, -470.335, -92.147, 0.22", "23.4709, -471.537, -91.4525, 0.44", "23.0024, -472.833, -90.6902, 0.22", "22.3209, -474.703, -89.5628, 0.44", "21.7833, -476.355, -88.5728, 0.96", "21.5073, -477.354, -87.973, 1.03", "21.2722, -478.602, -87.2435, 0.22", "21.2784, -479.102, -87.0123, 0.52", "21.3904, -479.322, -86.9647, 0.66", "22.5795, -480.164, -87.0345, 0.22", "23.279, -480.465, -87.0812, 0.74", "23.9339, -480.654, -87.1572, 0.88", "28.9311, -481.574, -88.0687, 0.22", "29.7646, -481.685, -88.2847, 0.22", "32.4206, -481.899, -89.2061, 1.11", "33.5291, -481.905, -89.7384, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "40.5109, -330.048, -58.8867, 1.69", "40.9005, -331.119, -58.0864, 1.69", "41.2407, -331.984, -57.4495, 0.22", "41.6052, -332.923, -56.7547, 0.22", "42.1533, -334.322, -55.7243, 0.88", "42.4037, -334.959, -55.2487, 1.03", "43.4153, -337.706, -53.0706, 0.22", "43.6832, -338.454, -52.476, 0.22", "43.9981, -339.375, -51.7311, 0.81", "44.2137, -340.028, -51.2149, 1.18", "44.4267, -340.683, -50.7307, 1.18", "44.9112, -342.358, -49.545, 0.15", "45.296, -343.936, -48.5074, 0.15", "45.3839, -344.279, -48.3132, 0.15", "45.5632, -344.93, -48.0153, 1.25", "45.6899, -345.411, -47.8421, 1.84", "45.8862, -346.152, -47.6544, 2.14", "46.0753, -346.844, -47.5488, 2.28", "46.2939, -347.725, -47.4099, 0.96", "46.5096, -348.674, -47.2265, 0.22", "46.6841, -349.512, -47.0313, 0.37", "46.7616, -349.922, -46.9225, 0.37", "46.864, -350.511, -46.7474, 0.37", "47.0581, -351.676, -46.3546, 0.22", "47.2866, -352.731, -45.9842, 1.03", "47.3964, -353.136, -45.845, 1.55", "47.4728, -353.381, -45.7658, 1.77", "47.7061, -354.094, -45.5501, 0.81", "47.9296, -354.766, -45.371, 0.22", "48.4264, -356.276, -45.0479, 0.22", "48.8432, -357.528, -44.9023, 0.22", "49.063, -358.208, -44.8663, 0.81", "49.2113, -358.69, -44.8607, 1.03", "49.3334, -359.092, -44.8655, 1.03", "49.5081, -359.636, -44.8867, 0.88", "49.9448, -360.85, -44.9646, 0.22", "50.5594, -362.22, -45.0531, 0.22", "51.0147, -363.095, -45.077, 0.88", "51.2776, -363.556, -45.0671, 1.11", "51.5388, -363.987, -45.0351, 1.11", "52.1036, -364.861, -44.9428, 0.44", "52.9469, -366.06, -44.8614, 0.22", "53.6122, -367.087, -44.716, 0.22", "54.0292, -367.873, -44.4908, 1.33", "54.3199, -368.613, -44.1568, 2.36", "54.4867, -369.21, -43.7939, 2.58", "54.7209, -370.607, -42.6968, 1.84", "54.894, -372.922, -40.5126, 0.66", "54.9307, -374.141, -39.2083, 0.29", "54.9446, -374.859, -38.3676, 1.18", "54.9542, -375.359, -37.7393, 1.33", "54.9748, -376.471, -36.2636, 0.22", "54.9954, -377.192, -35.2792, 0.22", "55.04, -377.702, -34.6599, 0.22", "55.0556, -378.281, -33.9951, 1.4", "55.0447, -378.628, -33.6303, 2.21", "55.0073, -378.997, -33.2611, 2.5", "54.9177, -379.604, -32.6891, 2.5", "54.3662, -382.679, -29.9528, 0.22", "54.0135, -384.262, -28.6103, 0.22", "53.6324, -385.742, -27.408, 0.22", "53.3912, -386.637, -26.7133, 0.74", "53.2674, -387.089, -26.3792, 1.03", "53.1284, -387.6, -26.0277, 1.03", "52.6795, -389.265, -25.0883, 0.37", "52.4741, -390.098, -24.6626, 1.11", "52.3354, -390.72, -24.3631, 1.99", "52.2343, -391.34, -24.0977, 2.28", "52.1767, -391.833, -23.9025, 2.28", "52.1578, -393.155, -23.4517, 0.29", "52.2375, -394.037, -23.214, 0.15", "52.3007, -394.476, -23.1095, 0.44", "52.4115, -395.108, -22.9755, 0.59", "52.4822, -395.497, -22.8999, 0.59", "52.8, -397.107, -22.635, 0.22", "52.9005, -397.571, -22.5696, 0.52", "52.983, -397.976, -22.5225, 0.66", "53.3059, -399.719, -22.4632, 0.15", "53.488, -400.776, -22.5293, 0.15", "53.621, -401.569, -22.6431, 1.18", "53.694, -401.982, -22.7326, 1.4", "53.7602, -402.307, -22.8124, 1.4", "54.2079, -404.15, -23.347, 0.22", "54.5107, -405.182, -23.7195, 0.22", "54.7184, -405.82, -23.9666, 0.74", "54.9315, -406.467, -24.2124, 0.96", "55.3474, -407.676, -24.6809, 0.29", "55.6923, -408.625, -25.0461, 1.25", "56.1114, -409.704, -25.4365, 2.28", "56.3158, -410.227, -25.6232, 2.5" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "56.3158, -410.227, -25.6232, 0.22", "56.9279, -411.592, -24.4565, 0.22", "57.6121, -413.394, -22.9361, 0.22", "57.9385, -414.42, -22.0466, 0.22", "58.1528, -415.2, -21.3787, 0.88", "58.2672, -415.684, -20.9676, 1.18", "58.3397, -416.04, -20.6614, 1.33", "58.4543, -417.174, -19.6857, 0.15", "58.5443, -418.629, -18.4482, 0.15", "58.5708, -419.328, -17.8297, 0.66", "58.5817, -419.817, -17.3997, 1.11", "58.6014, -420.396, -16.901, 1.4" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "56.3158, -410.227, -25.6232, 0.37", "57.3522, -412.626, -26.291, 0.37", "58.6612, -415.607, -27.078, 0.22", "59.3164, -417.11, -27.4452, 0.96", "59.7487, -418.103, -27.6377, 1.18", "60.0606, -418.804, -27.7518, 1.18", "61.3589, -421.692, -28.1409, 0.22", "61.8707, -422.841, -28.1978, 1.33", "62.1939, -423.593, -28.188, 1.47", "63.0202, -425.636, -28.0877, 0.22", "63.5444, -426.98, -28.0107, 1.03", "63.8177, -427.701, -27.9698, 1.03", "65.4669, -432.239, -27.7022, 0.22", "65.6707, -432.84, -27.6682, 0.59", "65.9409, -433.632, -27.6054, 0.59", "66.4104, -435.034, -27.4546, 0.15", "66.6114, -435.633, -27.3591, 0.66", "66.9279, -436.503, -27.204, 0.81", "67.1937, -437.171, -27.0741, 0.29", "68.38, -440.029, -26.5027, 0.15", "68.7182, -440.852, -26.326, 0.44", "68.9499, -441.438, -26.1777, 0.44", "70.3078, -444.935, -25.2591, 0.22", "70.7893, -446.228, -24.9248, 0.96", "71.1593, -447.426, -24.598, 1.11", "71.4878, -448.969, -24.1945, 0.29", "71.9193, -452.173, -23.3173, 0.15", "71.9677, -452.969, -23.0831, 0.59", "71.9477, -453.604, -22.8846, 0.74", "71.6781, -456.534, -22.053, 0.22", "71.1659, -459.756, -21.2733, 0.22", "70.8648, -461.114, -21.0051, 0.74", "70.7218, -461.637, -20.9214, 0.74", "70.0948, -463.749, -20.6075, 0.22", "69.5516, -465.5, -20.3904, 0.22", "69.2142, -466.539, -20.3403, 0.81", "68.8333, -467.518, -20.3046, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_27", "dend_26", "dend_25", "dend_20", "dend_0", "dend_38", "dend_35", "dend_31", "dend_28", "dend_24", "dend_21", "dend_14", "dend_1", "dend_40", "dend_39", "dend_37", "dend_36", "dend_33", "dend_32", "dend_30", "dend_29", "dend_23", "dend_22", "dend_15", "dend_13", "dend_2", "dend_42", "dend_41", "dend_17", "dend_16", "dend_10", "dend_3", "dend_19", "dend_18", "dend_12", "dend_11", "dend_5", "dend_4", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_27", "dend_26", "dend_25", "dend_20", "dend_0", "dend_38", "dend_35", "dend_31", "dend_28", "dend_24", "dend_21", "dend_14", "dend_1", "dend_40", "dend_39", "dend_37", "dend_36", "dend_33", "dend_32", "dend_30", "dend_29", "dend_23", "dend_22", "dend_15", "dend_13", "dend_2", "dend_42", "dend_41", "dend_17", "dend_16", "dend_10", "dend_3", "dend_19", "dend_18", "dend_12", "dend_11", "dend_5", "dend_4", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_SBC_799e027057_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.49999975618502873)
    connect dend_27(0), soma_0(0.49999975618502873)
    connect dend_26(0), soma_0(0.49999975618502873)
    connect dend_25(0), soma_0(0.49999975618502873)
    connect dend_20(0), soma_0(0.49999975618502873)
    connect dend_0(0), soma_0(0.49999975618502873)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.13028, -11.6226, 1.65672, 3.3543 ) }
    soma_0 { pt3dadd( 1.89603, -10.6065, 1.5057, 5.84145 ) }
    soma_0 { pt3dadd( 1.66177, -9.59039, 1.35468, 8.98469 ) }
    soma_0 { pt3dadd( 1.42751, -8.57427, 1.20366, 10.1954 ) }
    soma_0 { pt3dadd( 1.19325, -7.55816, 1.05265, 11.9017 ) }
    soma_0 { pt3dadd( 0.958989, -6.54205, 0.901631, 13.2141 ) }
    soma_0 { pt3dadd( 0.72473, -5.52593, 0.750614, 14.1624 ) }
    soma_0 { pt3dadd( 0.490471, -4.50982, 0.599597, 14.8105 ) }
    soma_0 { pt3dadd( 0.256212, -3.49371, 0.44858, 15.133 ) }
    soma_0 { pt3dadd( 0.0219531, -2.47759, 0.297563, 15.4087 ) }
    soma_0 { pt3dadd( -0.212306, -1.46148, 0.146546, 15.7558 ) }
    soma_0 { pt3dadd( -0.446565, -0.445366, -0.00447116, 16.1589 ) }
    soma_0 { pt3dadd( -0.680824, 0.570747, -0.155488, 16.481 ) }
    soma_0 { pt3dadd( -0.915083, 1.58686, -0.306505, 16.3666 ) }
    soma_0 { pt3dadd( -1.14934, 2.60297, -0.457522, 16.058 ) }
    soma_0 { pt3dadd( -1.3836, 3.61909, -0.608539, 15.598 ) }
    soma_0 { pt3dadd( -1.61786, 4.6352, -0.759556, 14.7754 ) }
    soma_0 { pt3dadd( -1.85212, 5.65131, -0.910573, 13.4156 ) }
    soma_0 { pt3dadd( -2.08638, 6.66743, -1.06159, 9.84057 ) }
    soma_0 { pt3dadd( -2.32064, 7.68354, -1.21261, 7.78253 ) }
    soma_0 { pt3dadd( -2.5549, 8.69965, -1.36362, 4.37258 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.64816, 4.73815, -4.16268, 1.4 ) }
    dend_34 { pt3dadd( 6.51572, 5.65375, -4.50779, 1.4 ) }
    dend_34 { pt3dadd( 7.58453, 6.7031, -4.93403, 1.55 ) }
    dend_34 { pt3dadd( 8.58767, 7.65396, -5.35876, 1.77 ) }
    dend_34 { pt3dadd( 9.64195, 8.61598, -5.7928, 1.77 ) }
    dend_34 { pt3dadd( 10.6732, 9.54136, -6.24573, 1.55 ) }
    dend_34 { pt3dadd( 11.9582, 10.6594, -6.86427, 1.25 ) }
    dend_34 { pt3dadd( 12.7113, 11.2688, -7.26852, 1.4 ) }
    dend_34 { pt3dadd( 13.6678, 12.0261, -7.76579, 1.4 ) }
    dend_34 { pt3dadd( 14.5627, 12.7501, -8.21643, 1.77 ) }
    dend_34 { pt3dadd( 15.4455, 13.5075, -8.60901, 2.28 ) }
    dend_34 { pt3dadd( 16.2864, 14.2634, -8.88351, 2.28 ) }
    dend_34 { pt3dadd( 17.2536, 15.1443, -9.14668, 2.36 ) }
    dend_34 { pt3dadd( 18.5238, 16.3321, -9.41584, 1.84 ) }
    dend_34 { pt3dadd( 19.7392, 17.489, -9.56658, 1.11 ) }
    dend_34 { pt3dadd( 20.8098, 18.5394, -9.60321, 1.33 ) }
    dend_34 { pt3dadd( 22.29, 20.0015, -9.43509, 1.92 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.20816, 3.99815, 3.65732, 2.28 ) }
    dend_27 { pt3dadd( 5.54827, 4.4529, 4.39692, 2.28 ) }
    dend_27 { pt3dadd( 6.53452, 5.76299, 6.40593, 2.28 ) }
    dend_27 { pt3dadd( 6.90658, 6.25967, 7.11204, 2.06 ) }
    dend_27 { pt3dadd( 7.9165, 7.62718, 8.94481, 2.14 ) }
    dend_27 { pt3dadd( 8.36545, 8.23125, 9.73386, 1.47 ) }
    dend_27 { pt3dadd( 9.20236, 9.30577, 11.1449, 0.96 ) }
    dend_27 { pt3dadd( 9.4576, 9.62006, 11.5621, 1.4 ) }
    dend_27 { pt3dadd( 9.78076, 9.98687, 12.0374, 1.4 ) }
    dend_27 { pt3dadd( 10.289, 10.501, 12.7568, 1.55 ) }
    dend_27 { pt3dadd( 10.7975, 10.9567, 13.4265, 1.69 ) }
    dend_27 { pt3dadd( 11.5492, 11.565, 14.4682, 1.47 ) }
    dend_27 { pt3dadd( 12.0499, 11.9787, 15.1794, 1.33 ) }
    dend_27 { pt3dadd( 12.5388, 12.4261, 15.898, 1.84 ) }
    dend_27 { pt3dadd( 12.8877, 12.7859, 16.4067, 2.06 ) }
    dend_27 { pt3dadd( 13.3923, 13.4224, 17.1029, 2.28 ) }
    dend_27 { pt3dadd( 14.1086, 14.564, 17.991, 1.99 ) }
    dend_27 { pt3dadd( 14.6012, 15.5564, 18.5073, 1.47 ) }
    dend_27 { pt3dadd( 14.9978, 16.4843, 18.8268, 1.47 ) }
    dend_27 { pt3dadd( 15.3126, 17.3759, 19.005, 1.33 ) }
    dend_27 { pt3dadd( 15.7066, 18.7511, 19.1195, 1.62 ) }
    dend_27 { pt3dadd( 15.938, 19.8337, 19.0804, 1.55 ) }
    dend_27 { pt3dadd( 16.0835, 20.7359, 18.9773, 1.33 ) }
    dend_27 { pt3dadd( 16.2042, 21.6075, 18.8582, 1.18 ) }
    dend_27 { pt3dadd( 16.3193, 22.4439, 18.7768, 0.96 ) }
    dend_27 { pt3dadd( 16.4312, 23.1472, 18.7486, 0.96 ) }
    dend_27 { pt3dadd( 16.6437, 24.1698, 18.7976, 0.96 ) }
    dend_27 { pt3dadd( 16.9785, 25.4127, 18.9737, 1.18 ) }
    dend_27 { pt3dadd( 17.2526, 26.1988, 19.139, 1.4 ) }
    dend_27 { pt3dadd( 17.6499, 27.1477, 19.3824, 1.4 ) }
    dend_27 { pt3dadd( 17.9378, 27.7612, 19.5517, 1.47 ) }
    dend_27 { pt3dadd( 18.3287, 28.5755, 19.7664, 1.25 ) }
    dend_27 { pt3dadd( 18.6411, 29.2368, 19.8909, 1.03 ) }
    dend_27 { pt3dadd( 19.1069, 30.3158, 19.9769, 0.96 ) }
    dend_27 { pt3dadd( 19.5412, 31.4007, 19.9503, 0.81 ) }
    dend_27 { pt3dadd( 19.8128, 32.1698, 19.861, 0.66 ) }
    dend_27 { pt3dadd( 20.0887, 33.0349, 19.7461, 0.74 ) }
    dend_27 { pt3dadd( 20.4519, 34.2892, 19.5741, 0.59 ) }
    dend_27 { pt3dadd( 20.707, 35.2086, 19.4606, 0.44 ) }
    dend_27 { pt3dadd( 20.9752, 36.1795, 19.3737, 0.44 ) }
    dend_27 { pt3dadd( 21.282, 37.2293, 19.311, 0.59 ) }
    dend_27 { pt3dadd( 21.5797, 38.1671, 19.3047, 0.88 ) }
    dend_27 { pt3dadd( 21.9254, 39.2082, 19.3462, 1.77 ) }
    dend_27 { pt3dadd( 22.145, 39.87, 19.4337, 1.92 ) }
    dend_27 { pt3dadd( 22.4375, 40.7535, 19.5852, 1.4 ) }
    dend_27 { pt3dadd( 22.732, 41.6237, 19.7663, 1.18 ) }
    dend_27 { pt3dadd( 23.1075, 42.5814, 19.9968, 0.52 ) }
    dend_27 { pt3dadd( 23.3448, 43.1066, 20.1291, 0.66 ) }
    dend_27 { pt3dadd( 23.8555, 44.0816, 20.4363, 0.66 ) }
    dend_27 { pt3dadd( 24.0181, 44.3538, 20.537, 0.88 ) }
    dend_27 { pt3dadd( 24.5473, 45.1321, 20.8676, 0.66 ) }
    dend_27 { pt3dadd( 24.9904, 45.7201, 21.1437, 0.52 ) }
    dend_27 { pt3dadd( 25.4803, 46.2794, 21.3959, 0.81 ) }
    dend_27 { pt3dadd( 25.8929, 46.7178, 21.5987, 0.81 ) }
    dend_27 { pt3dadd( 26.4018, 47.2557, 21.8207, 0.74 ) }
    dend_27 { pt3dadd( 26.6681, 47.5604, 21.9448, 0.52 ) }
    dend_27 { pt3dadd( 27.1497, 48.159, 22.1715, 0.29 ) }
    dend_27 { pt3dadd( 27.6706, 48.8839, 22.409, 0.29 ) }
    dend_27 { pt3dadd( 28.265, 49.7899, 22.6673, 0.44 ) }
    dend_27 { pt3dadd( 28.8957, 50.8218, 22.8994, 0.59 ) }
    dend_27 { pt3dadd( 29.5345, 51.9457, 23.0928, 0.59 ) }
    dend_27 { pt3dadd( 29.955, 52.7102, 23.1927, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 30.2376, 53.2415, 23.2414, 1.11 ) }
    dend_27 { pt3dadd( 30.4881, 53.7279, 23.266, 1.33 ) }
    dend_27 { pt3dadd( 31.0463, 54.7503, 23.2725, 1.62 ) }
    dend_27 { pt3dadd( 31.4684, 55.5091, 23.2736, 2.06 ) }
    dend_27 { pt3dadd( 31.788, 56.0609, 23.2664, 2.43 ) }
    dend_27 { pt3dadd( 32.1951, 56.7604, 23.2719, 2.58 ) }
    dend_27 { pt3dadd( 32.5235, 57.3292, 23.2929, 2.58 ) }
    dend_27 { pt3dadd( 32.8579, 57.9236, 23.3357, 2.36 ) }
    dend_27 { pt3dadd( 33.1412, 58.4628, 23.3949, 2.36 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.55816, -6.32185, -1.59268, 0.96 ) }
    dend_26 { pt3dadd( 7.01306, -6.51281, -1.732, 0.96 ) }
    dend_26 { pt3dadd( 7.69978, -6.85585, -2.05594, 0.74 ) }
    dend_26 { pt3dadd( 8.32893, -7.21375, -2.45331, 0.81 ) }
    dend_26 { pt3dadd( 9.07539, -7.53911, -3.24499, 0.81 ) }
    dend_26 { pt3dadd( 9.46667, -7.65992, -3.77374, 1.25 ) }
    dend_26 { pt3dadd( 9.97988, -7.75792, -4.50018, 1.03 ) }
    dend_26 { pt3dadd( 10.6797, -7.81991, -5.56539, 1.03 ) }
    dend_26 { pt3dadd( 11.3827, -7.84248, -6.66581, 1.25 ) }
    dend_26 { pt3dadd( 13.4276, -7.87756, -9.77009, 1.25 ) }
    dend_26 { pt3dadd( 14.1859, -7.90815, -10.8435, 1.25 ) }
    dend_26 { pt3dadd( 14.7746, -7.96755, -11.5841, 0.74 ) }
    dend_26 { pt3dadd( 15.476, -8.08449, -12.3164, 0.59 ) }
    dend_26 { pt3dadd( 16.2584, -8.28388, -13.0056, 0.81 ) }
    dend_26 { pt3dadd( 17.2927, -8.67962, -13.7491, 0.96 ) }
    dend_26 { pt3dadd( 18.2067, -9.16157, -14.3021, 1.18 ) }
    dend_26 { pt3dadd( 19.2902, -9.75288, -15.0038, 0.96 ) }
    dend_26 { pt3dadd( 20.6028, -10.4751, -15.9136, 1.03 ) }
    dend_26 { pt3dadd( 21.7584, -11.0861, -16.7774, 1.03 ) }
    dend_26 { pt3dadd( 22.3893, -11.4028, -17.2588, 0.88 ) }
    dend_26 { pt3dadd( 23.5557, -11.9523, -18.1557, 0.88 ) }
    dend_26 { pt3dadd( 24.7423, -12.4831, -19.0336, 0.88 ) }
    dend_26 { pt3dadd( 25.5331, -12.8391, -19.5803, 0.74 ) }
    dend_26 { pt3dadd( 27.0958, -13.5261, -20.5673, 0.59 ) }
    dend_26 { pt3dadd( 27.8268, -13.8096, -21.0261, 0.81 ) }
    dend_26 { pt3dadd( 28.4594, -14.0169, -21.4727, 0.81 ) }
    dend_26 { pt3dadd( 29.3712, -14.2779, -22.1543, 0.37 ) }
    dend_26 { pt3dadd( 30.038, -14.4559, -22.6552, 0.37 ) }
    dend_26 { pt3dadd( 30.9767, -14.6883, -23.3551, 1.18 ) }
    dend_26 { pt3dadd( 32.3487, -15.0116, -24.3476, 1.69 ) }
    dend_26 { pt3dadd( 34.3383, -15.512, -25.7855, 0.37 ) }
    dend_26 { pt3dadd( 35.0606, -15.7428, -26.294, 0.59 ) }
    dend_26 { pt3dadd( 36.0647, -16.1523, -26.9831, 0.22 ) }
    dend_26 { pt3dadd( 36.9288, -16.5973, -27.57, 1.03 ) }
    dend_26 { pt3dadd( 37.3798, -16.8799, -27.869, 1.25 ) }
    dend_26 { pt3dadd( 37.8692, -17.2484, -28.1676, 1.25 ) }
    dend_26 { pt3dadd( 38.9855, -18.1475, -28.9115, 0.22 ) }
    dend_26 { pt3dadd( 39.6485, -18.6733, -29.4069, 1.03 ) }
    dend_26 { pt3dadd( 40.4611, -19.3272, -30.0772, 1.55 ) }
    dend_26 { pt3dadd( 40.8672, -19.6557, -30.4345, 1.77 ) }
    dend_26 { pt3dadd( 41.459, -20.1424, -30.9702, 1.4 ) }
    dend_26 { pt3dadd( 42.8987, -21.2489, -32.2868, 0.37 ) }
    dend_26 { pt3dadd( 43.3009, -21.516, -32.6314, 0.37 ) }
    dend_26 { pt3dadd( 44.0187, -21.9257, -33.1809, 0.59 ) }
    dend_26 { pt3dadd( 44.6703, -22.2011, -33.5484, 0.81 ) }
    dend_26 { pt3dadd( 45.3854, -22.4236, -33.8671, 0.81 ) }
    dend_26 { pt3dadd( 46.4299, -22.6521, -34.2416, 1.18 ) }
    dend_26 { pt3dadd( 47.4376, -22.807, -34.5267, 0.88 ) }
    dend_26 { pt3dadd( 48.9222, -22.9549, -34.9158, 0.22 ) }
    dend_26 { pt3dadd( 51.2257, -23.0692, -35.4926, 0.22 ) }
    dend_26 { pt3dadd( 52.1317, -23.1031, -35.7068, 0.81 ) }
    dend_26 { pt3dadd( 52.7157, -23.1275, -35.8392, 1.25 ) }
    dend_26 { pt3dadd( 53.4687, -23.1771, -36.025, 1.4 ) }
    dend_26 { pt3dadd( 54.352, -23.2566, -36.2732, 1.03 ) }
    dend_26 { pt3dadd( 55.3684, -23.4186, -36.6262, 0.22 ) }
    dend_26 { pt3dadd( 56.8638, -23.8122, -37.272, 0.22 ) }
    dend_26 { pt3dadd( 57.3789, -23.9917, -37.5122, 0.96 ) }
    dend_26 { pt3dadd( 58.1171, -24.284, -37.8942, 1.18 ) }
    dend_26 { pt3dadd( 58.5889, -24.4739, -38.1948, 1.33 ) }
    dend_26 { pt3dadd( 60.3848, -25.2213, -39.558, 0.22 ) }
    dend_26 { pt3dadd( 60.8563, -25.4212, -39.9747, 0.74 ) }
    dend_26 { pt3dadd( 61.3448, -25.6334, -40.4504, 1.33 ) }
    dend_26 { pt3dadd( 62.253, -26.0223, -41.3777, 1.55 ) }
    dend_26 { pt3dadd( 63.7622, -26.6599, -42.9755, 0.66 ) }
    dend_26 { pt3dadd( 64.5385, -26.9788, -43.826, 0.29 ) }
    dend_26 { pt3dadd( 65.176, -27.2241, -44.5351, 0.52 ) }
    dend_26 { pt3dadd( 66.1941, -27.6009, -45.6392, 0.29 ) }
    dend_26 { pt3dadd( 67.144, -27.9258, -46.669, 0.96 ) }
    dend_26 { pt3dadd( 67.8941, -28.1789, -47.4833, 0.96 ) }
    dend_26 { pt3dadd( 69.2296, -28.618, -48.8687, 0.29 ) }
    dend_26 { pt3dadd( 70.0578, -28.8491, -49.7341, 0.29 ) }
    dend_26 { pt3dadd( 70.8699, -29.0514, -50.5959, 1.03 ) }
    dend_26 { pt3dadd( 72.0017, -29.3151, -51.7705, 1.03 ) }
    dend_26 { pt3dadd( 73.2363, -29.6331, -52.935, 0.37 ) }
    dend_26 { pt3dadd( 74.0817, -29.8801, -53.7685, 0.22 ) }
    dend_26 { pt3dadd( 75.134, -30.2125, -54.8308, 0.88 ) }
    dend_26 { pt3dadd( 75.838, -30.4739, -55.521, 0.88 ) }
    dend_26 { pt3dadd( 77.318, -31.1044, -56.9265, 0.22 ) }
    dend_26 { pt3dadd( 78.8616, -31.8376, -58.361, 1.03 ) }
    dend_26 { pt3dadd( 81.8871, -33.5298, -61.2043, 0.22 ) }
    dend_26 { pt3dadd( 82.5811, -33.9903, -61.8876, 0.44 ) }
    dend_26 { pt3dadd( 83.9659, -35.0526, -63.2894, 0.29 ) }
    dend_26 { pt3dadd( 84.8473, -35.7698, -64.2039, 0.81 ) }
    dend_26 { pt3dadd( 85.3502, -36.2223, -64.7597, 0.81 ) }
    dend_26 { pt3dadd( 87.0683, -37.9628, -66.6753, 0.22 ) }
    dend_26 { pt3dadd( 88.4899, -39.6381, -68.0789, 0.66 ) }
    dend_26 { pt3dadd( 88.9677, -40.2684, -68.6012, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.56184, -4.06185, -7.16268, 0.66 ) }
    dend_25 { pt3dadd( -8.03902, -4.46589, -6.95123, 0.66 ) }
    dend_25 { pt3dadd( -8.57961, -4.88003, -6.7665, 0.74 ) }
    dend_25 { pt3dadd( -9.70143, -5.6937, -6.48427, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -10.2374, -6.09173, -6.39013, 0.59 ) }
    dend_25 { pt3dadd( -10.9146, -6.59352, -6.3107, 0.74 ) }
    dend_25 { pt3dadd( -11.6817, -7.15283, -6.24845, 0.96 ) }
    dend_25 { pt3dadd( -12.1597, -7.50407, -6.24596, 1.4 ) }
    dend_25 { pt3dadd( -12.6979, -7.91012, -6.25752, 1.4 ) }
    dend_25 { pt3dadd( -13.8699, -8.84289, -6.33403, 1.25 ) }
    dend_25 { pt3dadd( -14.8491, -9.69862, -6.40389, 0.74 ) }
    dend_25 { pt3dadd( -15.7594, -10.5557, -6.45748, 0.37 ) }
    dend_25 { pt3dadd( -16.619, -11.4371, -6.48951, 0.37 ) }
    dend_25 { pt3dadd( -17.53, -12.3937, -6.51274, 1.03 ) }
    dend_25 { pt3dadd( -17.9745, -12.8692, -6.51389, 1.4 ) }
    dend_25 { pt3dadd( -18.5368, -13.4764, -6.52278, 1.33 ) }
    dend_25 { pt3dadd( -19.1863, -14.1988, -6.5455, 0.74 ) }
    dend_25 { pt3dadd( -19.9299, -14.9997, -6.59397, 0.22 ) }
    dend_25 { pt3dadd( -20.357, -15.3939, -6.6436, 0.22 ) }
    dend_25 { pt3dadd( -20.6907, -15.6549, -6.71962, 0.22 ) }
    dend_25 { pt3dadd( -21.8074, -16.4015, -7.07962, 1.25 ) }
    dend_25 { pt3dadd( -22.1272, -16.5744, -7.21967, 1.55 ) }
    dend_25 { pt3dadd( -22.5055, -16.7551, -7.42054, 1.55 ) }
    dend_25 { pt3dadd( -23.4031, -17.1538, -7.93072, 1.18 ) }
    dend_25 { pt3dadd( -24.1077, -17.5143, -8.34476, 1.33 ) }
    dend_25 { pt3dadd( -24.8504, -17.9395, -8.78142, 1.55 ) }
    dend_25 { pt3dadd( -25.9613, -18.6759, -9.42568, 0.74 ) }
    dend_25 { pt3dadd( -27.3093, -19.7421, -10.1853, 0.44 ) }
    dend_25 { pt3dadd( -27.7971, -20.2304, -10.4661, 0.44 ) }
    dend_25 { pt3dadd( -28.7132, -21.3993, -10.9968, 0.29 ) }
    dend_25 { pt3dadd( -29.133, -22.0449, -11.2296, 0.59 ) }
    dend_25 { pt3dadd( -29.5548, -22.8118, -11.4411, 0.81 ) }
    dend_25 { pt3dadd( -29.8956, -23.5481, -11.6024, 0.37 ) }
    dend_25 { pt3dadd( -30.5257, -25.0968, -11.8942, 0.29 ) }
    dend_25 { pt3dadd( -30.9761, -26.2665, -12.1004, 0.74 ) }
    dend_25 { pt3dadd( -31.3355, -27.2073, -12.2819, 1.25 ) }
    dend_25 { pt3dadd( -31.7137, -28.1312, -12.4947, 1.77 ) }
    dend_25 { pt3dadd( -32.092, -29.0171, -12.7227, 2.06 ) }
    dend_25 { pt3dadd( -32.4335, -29.8553, -12.9527, 1.77 ) }
    dend_25 { pt3dadd( -32.8648, -30.9617, -13.3745, 0.66 ) }
    dend_25 { pt3dadd( -33.2309, -31.9391, -13.8605, 0.29 ) }
    dend_25 { pt3dadd( -33.5431, -32.8122, -14.3738, 0.22 ) }
    dend_25 { pt3dadd( -33.7932, -33.5265, -14.8369, 0.22 ) }
    dend_25 { pt3dadd( -34.0434, -34.2264, -15.3671, 0.22 ) }
    dend_25 { pt3dadd( -34.7753, -36.0247, -16.9445, 0.96 ) }
    dend_25 { pt3dadd( -34.98, -36.4548, -17.355, 1.4 ) }
    dend_25 { pt3dadd( -35.1758, -36.8197, -17.6981, 1.55 ) }
    dend_25 { pt3dadd( -35.5302, -37.4064, -18.2703, 0.96 ) }
    dend_25 { pt3dadd( -36.2237, -38.3665, -19.2609, 0.37 ) }
    dend_25 { pt3dadd( -36.9701, -39.2766, -20.1564, 0.15 ) }
    dend_25 { pt3dadd( -37.7943, -40.2621, -21.0365, 0.15 ) }
    dend_25 { pt3dadd( -38.1965, -40.7662, -21.4623, 1.18 ) }
    dend_25 { pt3dadd( -38.6751, -41.4, -21.96, 1.69 ) }
    dend_25 { pt3dadd( -38.8263, -41.6206, -22.1147, 1.92 ) }
    dend_25 { pt3dadd( -39.4181, -42.6351, -22.7007, 1.18 ) }
    dend_25 { pt3dadd( -39.7747, -43.426, -23.1231, 0.59 ) }
    dend_25 { pt3dadd( -40.2245, -44.9903, -23.9166, 0.22 ) }
    dend_25 { pt3dadd( -40.3586, -45.7965, -24.3149, 0.22 ) }
    dend_25 { pt3dadd( -40.4013, -46.4064, -24.6343, 0.96 ) }
    dend_25 { pt3dadd( -40.3972, -46.9124, -24.9229, 1.25 ) }
    dend_25 { pt3dadd( -40.3324, -47.6549, -25.4177, 1.4 ) }
    dend_25 { pt3dadd( -40.1421, -49.042, -26.4369, 0.22 ) }
    dend_25 { pt3dadd( -40.0398, -49.5885, -26.8908, 1.03 ) }
    dend_25 { pt3dadd( -39.8373, -50.6882, -27.8702, 1.18 ) }
    dend_25 { pt3dadd( -39.7743, -51.1142, -28.2642, 0.88 ) }
    dend_25 { pt3dadd( -39.6455, -52.3401, -29.4309, 0.22 ) }
    dend_25 { pt3dadd( -39.6117, -52.934, -30.0136, 0.66 ) }
    dend_25 { pt3dadd( -39.6126, -53.3499, -30.4368, 0.81 ) }
    dend_25 { pt3dadd( -39.6423, -54.0026, -31.0582, 0.52 ) }
    dend_25 { pt3dadd( -39.689, -54.435, -31.4353, 0.22 ) }
    dend_25 { pt3dadd( -39.7843, -54.9057, -31.8752, 0.66 ) }
    dend_25 { pt3dadd( -39.9961, -55.4576, -32.4233, 0.81 ) }
    dend_25 { pt3dadd( -40.1911, -55.8775, -32.8394, 0.81 ) }
    dend_25 { pt3dadd( -40.3358, -56.175, -33.1202, 1.03 ) }
    dend_25 { pt3dadd( -40.775, -57.0659, -33.9432, 0.88 ) }
    dend_25 { pt3dadd( -41.2381, -58.0039, -34.785, 0.52 ) }
    dend_25 { pt3dadd( -42.5005, -60.5591, -36.8926, 0.22 ) }
    dend_25 { pt3dadd( -43.1429, -61.8068, -37.8583, 0.22 ) }
    dend_25 { pt3dadd( -43.5662, -62.6041, -38.4395, 1.03 ) }
    dend_25 { pt3dadd( -43.8679, -63.1726, -38.815, 1.25 ) }
    dend_25 { pt3dadd( -44.1934, -63.7839, -39.1524, 1.18 ) }
    dend_25 { pt3dadd( -45.331, -65.863, -40.0618, 0.15 ) }
    dend_25 { pt3dadd( -45.839, -66.649, -40.3921, 0.15 ) }
    dend_25 { pt3dadd( -46.1602, -67.0672, -40.6255, 0.88 ) }
    dend_25 { pt3dadd( -46.6998, -67.67, -41.103, 1.18 ) }
    dend_25 { pt3dadd( -47.3426, -68.2982, -41.7432, 0.52 ) }
    dend_25 { pt3dadd( -47.9113, -68.7937, -42.5618, 0.22 ) }
    dend_25 { pt3dadd( -49.1431, -69.7374, -44.7962, 0.88 ) }
    dend_25 { pt3dadd( -49.9782, -70.3456, -46.3876, 1.18 ) }
    dend_25 { pt3dadd( -50.872, -70.9553, -48.1035, 0.88 ) }
    dend_25 { pt3dadd( -51.5082, -71.3609, -49.3234, 0.66 ) }
    dend_25 { pt3dadd( -54.153, -73.0468, -54.4369, 0.29 ) }
    dend_25 { pt3dadd( -55.3117, -73.7928, -56.6205, 0.37 ) }
    dend_25 { pt3dadd( -56.1898, -74.3772, -58.1948, 0.22 ) }
    dend_25 { pt3dadd( -56.5481, -74.6169, -58.7618, 0.66 ) }
    dend_25 { pt3dadd( -57.0835, -74.9822, -59.516, 0.88 ) }
    dend_25 { pt3dadd( -58.5903, -76.0302, -61.3882, 0.22 ) }
    dend_25 { pt3dadd( -59.3205, -76.5398, -62.0982, 0.66 ) }
    dend_25 { pt3dadd( -59.8284, -76.9113, -62.5756, 0.66 ) }
    dend_25 { pt3dadd( -61.5013, -78.1561, -64.2882, 0.22 ) }
    dend_25 { pt3dadd( -62.1559, -78.6525, -64.9755, 0.44 ) }
    dend_25 { pt3dadd( -62.828, -79.1534, -65.6626, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 98/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.08184, 2.78815, -1.34268, 0.96 ) }
    dend_20 { pt3dadd( -8.08184, 2.78815, -1.34268, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( -8.29468, 3.03984, -1.41932, 0.96 ) }
    dend_20 { pt3dadd( -8.81583, 3.5302, -1.57702, 0.66 ) }
    dend_20 { pt3dadd( -9.24488, 3.85076, -1.68283, 0.66 ) }
    dend_20 { pt3dadd( -9.89138, 4.25787, -1.82319, 1.33 ) }
    dend_20 { pt3dadd( -10.3875, 4.53978, -1.91842, 1.84 ) }
    dend_20 { pt3dadd( -10.9606, 4.82363, -2.01342, 1.84 ) }
    dend_20 { pt3dadd( -11.7426, 5.14401, -2.13616, 1.25 ) }
    dend_20 { pt3dadd( -12.4849, 5.38901, -2.24327, 0.81 ) }
    dend_20 { pt3dadd( -13.0757, 5.54267, -2.30271, 0.74 ) }
    dend_20 { pt3dadd( -13.7151, 5.68972, -2.3483, 0.74 ) }
    dend_20 { pt3dadd( -14.3244, 5.8271, -2.37336, 0.88 ) }
    dend_20 { pt3dadd( -14.919, 5.95908, -2.39625, 0.88 ) }
    dend_20 { pt3dadd( -15.2756, 6.04162, -2.41977, 0.88 ) }
    dend_20 { pt3dadd( -15.9974, 6.20451, -2.48108, 1.33 ) }
    dend_20 { pt3dadd( -16.4937, 6.30101, -2.52704, 1.55 ) }
    dend_20 { pt3dadd( -16.9765, 6.37522, -2.5787, 1.55 ) }
    dend_20 { pt3dadd( -17.6882, 6.46547, -2.66897, 1.33 ) }
    dend_20 { pt3dadd( -18.4891, 6.54432, -2.77982, 0.74 ) }
    dend_20 { pt3dadd( -18.9635, 6.57797, -2.85659, 0.52 ) }
    dend_20 { pt3dadd( -19.6962, 6.61075, -3.00032, 0.52 ) }
    dend_20 { pt3dadd( -20.249, 6.61588, -3.10732, 0.88 ) }
    dend_20 { pt3dadd( -20.7663, 6.61714, -3.20204, 0.88 ) }
    dend_20 { pt3dadd( -21.2976, 6.62114, -3.29577, 0.96 ) }
    dend_20 { pt3dadd( -21.7845, 6.6234, -3.35188, 0.96 ) }
    dend_20 { pt3dadd( -22.1797, 6.62016, -3.36838, 0.81 ) }
    dend_20 { pt3dadd( -22.7869, 6.61196, -3.35491, 0.59 ) }
    dend_20 { pt3dadd( -23.3332, 6.60455, -3.3014, 0.52 ) }
    dend_20 { pt3dadd( -24.0056, 6.59635, -3.19168, 0.44 ) }
    dend_20 { pt3dadd( -24.772, 6.58903, -3.04104, 0.37 ) }
    dend_20 { pt3dadd( -25.8079, 6.56624, -2.79717, 1.25 ) }
    dend_20 { pt3dadd( -26.2849, 6.5496, -2.66286, 1.99 ) }
    dend_20 { pt3dadd( -26.7347, 6.52623, -2.51374, 2.28 ) }
    dend_20 { pt3dadd( -27.1384, 6.49433, -2.35564, 2.5 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 33/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.541846, -11.1418, 0.0273224, 3.32 ) }
    dend_0 { pt3dadd( -0.541846, -11.1418, 0.0273224, 3.32 ) }
    dend_0 { pt3dadd( -0.374081, -12.2897, 0.0273224, 3.32 ) }
    dend_0 { pt3dadd( -0.170623, -13.6819, 0.0273224, 3.61 ) }
    dend_0 { pt3dadd( -0.146266, -13.8486, 0.0273224, 3.61 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 38/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.5549, 8.69965, -1.36362, 1.01124 ) }
    axon_0 { pt3dadd( -5.92467, 23.3162, -1.36362, 1.01124 ) }
    axon_0 { pt3dadd( -9.29444, 37.9328, -1.36362, 1.01124 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 41/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 22.29, 20.0015, -9.43509, 0.29 ) }
    dend_38 { pt3dadd( 23.2273, 20.2954, -8.99704, 0.29 ) }
    dend_38 { pt3dadd( 23.7392, 20.4977, -8.6842, 0.29 ) }
    dend_38 { pt3dadd( 24.3159, 20.7987, -8.31432, 0.88 ) }
    dend_38 { pt3dadd( 24.8595, 21.1425, -7.96707, 1.18 ) }
    dend_38 { pt3dadd( 25.324, 21.486, -7.651, 0.96 ) }
    dend_38 { pt3dadd( 25.9479, 22.0215, -7.2185, 0.44 ) }
    dend_38 { pt3dadd( 26.682, 22.8427, -6.69001, 0.59 ) }
    dend_38 { pt3dadd( 27.3705, 23.726, -6.26903, 0.96 ) }
    dend_38 { pt3dadd( 27.6963, 24.2117, -6.07477, 1.4 ) }
    dend_38 { pt3dadd( 28.0863, 24.8467, -5.85384, 1.55 ) }
    dend_38 { pt3dadd( 28.4893, 25.5234, -5.64265, 1.55 ) }
    dend_38 { pt3dadd( 28.9491, 26.2952, -5.39859, 1.18 ) }
    dend_38 { pt3dadd( 29.5664, 27.2268, -5.11173, 0.59 ) }
    dend_38 { pt3dadd( 30.2199, 28.148, -4.79454, 0.59 ) }
    dend_38 { pt3dadd( 30.5375, 28.5573, -4.63306, 0.59 ) }
    dend_38 { pt3dadd( 30.9738, 29.0656, -4.40788, 0.44 ) }
    dend_38 { pt3dadd( 31.6013, 29.7265, -4.00812, 0.44 ) }
    dend_38 { pt3dadd( 32.1376, 30.2383, -3.62128, 0.52 ) }
    dend_38 { pt3dadd( 32.6168, 30.6648, -3.25282, 0.81 ) }
    dend_38 { pt3dadd( 33.1706, 31.1119, -2.84932, 0.96 ) }
    dend_38 { pt3dadd( 33.8681, 31.6421, -2.3438, 0.66 ) }
    dend_38 { pt3dadd( 34.7923, 32.3203, -1.67613, 0.88 ) }
    dend_38 { pt3dadd( 35.1392, 32.564, -1.43017, 0.88 ) }
    dend_38 { pt3dadd( 35.5059, 32.8181, -1.16417, 0.88 ) }
    dend_38 { pt3dadd( 36.3598, 33.4093, -0.562447, 0.66 ) }
    dend_38 { pt3dadd( 37.3459, 34.1143, 0.0535307, 0.52 ) }
    dend_38 { pt3dadd( 38.0436, 34.6238, 0.428644, 1.25 ) }
    dend_38 { pt3dadd( 38.5195, 34.9833, 0.639794, 1.47 ) }
    dend_38 { pt3dadd( 38.8989, 35.2784, 0.799398, 1.47 ) }
    dend_38 { pt3dadd( 39.4371, 35.6993, 1.00962, 0.52 ) }
    dend_38 { pt3dadd( 40.2982, 36.3785, 1.3105, 0.22 ) }
    dend_38 { pt3dadd( 40.9334, 36.8955, 1.52835, 0.88 ) }
    dend_38 { pt3dadd( 41.2633, 37.1768, 1.62179, 1.47 ) }
    dend_38 { pt3dadd( 41.6142, 37.4864, 1.70535, 1.55 ) }
    dend_38 { pt3dadd( 42.0206, 37.8515, 1.78416, 1.18 ) }
    dend_38 { pt3dadd( 42.9404, 38.6984, 1.87963, 0.22 ) }
    dend_38 { pt3dadd( 43.9111, 39.62, 1.91887, 0.22 ) }
    dend_38 { pt3dadd( 44.6727, 40.3536, 1.92424, 0.96 ) }
    dend_38 { pt3dadd( 45.018, 40.6744, 1.91849, 1.25 ) }
    dend_38 { pt3dadd( 45.4341, 41.0531, 1.90214, 1.33 ) }
    dend_38 { pt3dadd( 46.6061, 42.1014, 1.88061, 0.37 ) }
    dend_38 { pt3dadd( 47.2815, 42.6779, 1.92084, 1.4 ) }
    dend_38 { pt3dadd( 47.7804, 43.0865, 1.96416, 1.99 ) }
    dend_38 { pt3dadd( 48.1661, 43.3921, 2.03545, 2.21 ) }
    dend_38 { pt3dadd( 48.5332, 43.6809, 2.12727, 2.21 ) }
    dend_38 { pt3dadd( 49.6914, 44.574, 2.55501, 0.66 ) }
    dend_38 { pt3dadd( 50.4278, 45.1099, 2.97365, 0.66 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 22.29, 20.0015, -9.43509, 0.81 ) }
    dend_35 { pt3dadd( 23.2088, 22.3042, -9.22819, 0.81 ) }
    dend_35 { pt3dadd( 23.9488, 23.7868, -9.10715, 1.11 ) }
    dend_35 { pt3dadd( 24.7718, 25.2788, -8.99274, 1.11 ) }
    dend_35 { pt3dadd( 25.6487, 26.8184, -8.87774, 0.81 ) }
    dend_35 { pt3dadd( 26.5206, 28.3587, -8.76258, 0.81 ) }
    dend_35 { pt3dadd( 27.4632, 30.0686, -8.66654, 0.44 ) }
    dend_35 { pt3dadd( 28.946, 32.6884, -8.59874, 0.44 ) }
    dend_35 { pt3dadd( 29.6622, 33.981, -8.59644, 1.18 ) }
    dend_35 { pt3dadd( 30.303, 35.1891, -8.61983, 2.28 ) }
    dend_35 { pt3dadd( 30.7275, 36.0348, -8.6528, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 31.3353, 37.3438, -8.72703, 2.28 ) }
    dend_35 { pt3dadd( 31.9099, 38.7315, -8.78318, 1.55 ) }
    dend_35 { pt3dadd( 32.0897, 39.2363, -8.78866, 1.55 ) }
    dend_35 { pt3dadd( 32.7536, 41.0783, -8.74492, 0.81 ) }
    dend_35 { pt3dadd( 33.2552, 42.4228, -8.67742, 1.03 ) }
    dend_35 { pt3dadd( 33.6181, 43.3832, -8.59979, 1.03 ) }
    dend_35 { pt3dadd( 34.2034, 44.8627, -8.40979, 0.88 ) }
    dend_35 { pt3dadd( 34.6253, 45.9152, -8.25508, 0.88 ) }
    dend_35 { pt3dadd( 35.2824, 47.5598, -8.01501, 0.66 ) }
    dend_35 { pt3dadd( 35.7435, 48.7278, -7.84691, 0.74 ) }
    dend_35 { pt3dadd( 36.3015, 50.1488, -7.65867, 0.29 ) }
    dend_35 { pt3dadd( 36.8503, 51.5427, -7.5058, 0.29 ) }
    dend_35 { pt3dadd( 37.4287, 53.1254, -7.39618, 0.74 ) }
    dend_35 { pt3dadd( 37.7659, 54.1418, -7.35157, 0.96 ) }
    dend_35 { pt3dadd( 38.0615, 55.1534, -7.32883, 1.18 ) }
    dend_35 { pt3dadd( 38.2499, 55.879, -7.3465, 1.18 ) }
    dend_35 { pt3dadd( 38.4385, 56.698, -7.40445, 0.88 ) }
    dend_35 { pt3dadd( 38.7117, 58.1141, -7.56362, 0.66 ) }
    dend_35 { pt3dadd( 38.977, 59.5871, -7.74291, 0.37 ) }
    dend_35 { pt3dadd( 39.1569, 60.601, -7.88099, 0.52 ) }
    dend_35 { pt3dadd( 39.4126, 62.0377, -8.10363, 0.52 ) }
    dend_35 { pt3dadd( 39.7205, 63.6777, -8.36177, 0.59 ) }
    dend_35 { pt3dadd( 39.9534, 64.8186, -8.54572, 1.03 ) }
    dend_35 { pt3dadd( 40.3056, 66.3226, -8.79405, 2.21 ) }
    dend_35 { pt3dadd( 40.4617, 66.9607, -8.89978, 2.43 ) }
    dend_35 { pt3dadd( 40.7286, 68.0889, -9.09165, 2.58 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 33.1412, 58.4628, 23.3949, 0.29 ) }
    dend_31 { pt3dadd( 34.2404, 61.5025, 20.9365, 0.29 ) }
    dend_31 { pt3dadd( 34.7801, 62.9343, 19.8224, 0.29 ) }
    dend_31 { pt3dadd( 35.0514, 63.6782, 19.3337, 0.29 ) }
    dend_31 { pt3dadd( 35.3346, 64.5082, 18.8742, 0.74 ) }
    dend_31 { pt3dadd( 35.6005, 65.3055, 18.4041, 0.96 ) }
    dend_31 { pt3dadd( 35.8453, 66.0573, 17.9559, 0.96 ) }
    dend_31 { pt3dadd( 36.1989, 67.2082, 17.3585, 0.22 ) }
    dend_31 { pt3dadd( 36.9346, 69.8506, 15.979, 0.22 ) }
    dend_31 { pt3dadd( 37.2987, 71.3118, 15.284, 1.77 ) }
    dend_31 { pt3dadd( 37.7583, 73.4669, 14.3574, 1.92 ) }
    dend_31 { pt3dadd( 37.8575, 74.0341, 14.1502, 1.99 ) }
    dend_31 { pt3dadd( 37.9725, 74.9374, 13.8211, 1.47 ) }
    dend_31 { pt3dadd( 38.0795, 76.1646, 13.3728, 0.22 ) }
    dend_31 { pt3dadd( 38.1415, 77.5714, 12.8797, 0.22 ) }
    dend_31 { pt3dadd( 38.1591, 78.4178, 12.5844, 0.66 ) }
    dend_31 { pt3dadd( 38.1623, 79.2609, 12.3187, 0.96 ) }
    dend_31 { pt3dadd( 38.1379, 81.516, 11.3969, 0.22 ) }
    dend_31 { pt3dadd( 38.1261, 82.3225, 11.0081, 0.22 ) }
    dend_31 { pt3dadd( 38.0938, 83.5713, 10.3622, 1.77 ) }
    dend_31 { pt3dadd( 38.0552, 84.4533, 9.89452, 2.06 ) }
    dend_31 { pt3dadd( 38.0239, 84.9478, 9.6362, 2.06 ) }
    dend_31 { pt3dadd( 37.8018, 87.5408, 8.36189, 0.22 ) }
    dend_31 { pt3dadd( 37.6749, 88.606, 7.8999, 0.22 ) }
    dend_31 { pt3dadd( 37.4355, 90.3551, 7.19501, 1.55 ) }
    dend_31 { pt3dadd( 37.3567, 90.8901, 6.98943, 1.99 ) }
    dend_31 { pt3dadd( 37.2605, 91.669, 6.6176, 1.99 ) }
    dend_31 { pt3dadd( 37.0129, 94.0382, 5.36982, 0.22 ) }
    dend_31 { pt3dadd( 36.8725, 95.6922, 4.47252, 0.22 ) }
    dend_31 { pt3dadd( 36.7788, 97.1534, 3.63363, 1.47 ) }
    dend_31 { pt3dadd( 36.7536, 98.0085, 3.13478, 1.69 ) }
    dend_31 { pt3dadd( 36.8256, 103.105, 0.400314, 0.15 ) }
    dend_31 { pt3dadd( 36.8849, 103.988, -0.061856, 0.15 ) }
    dend_31 { pt3dadd( 36.9851, 104.802, -0.521433, 0.59 ) }
    dend_31 { pt3dadd( 37.0493, 105.18, -0.743918, 0.59 ) }
    dend_31 { pt3dadd( 37.2483, 106.26, -1.45461, 0.22 ) }
    dend_31 { pt3dadd( 37.5737, 107.979, -2.40445, 0.22 ) }
    dend_31 { pt3dadd( 38.0859, 110.751, -3.70232, 1.47 ) }
    dend_31 { pt3dadd( 38.4152, 112.54, -4.56343, 1.84 ) }
    dend_31 { pt3dadd( 38.5367, 113.18, -4.8764, 2.43 ) }
    dend_31 { pt3dadd( 39.5023, 118.072, -7.25715, 0.22 ) }
    dend_31 { pt3dadd( 40.5101, 123.027, -9.63779, 0.22 ) }
    dend_31 { pt3dadd( 40.8385, 124.512, -10.3049, 1.4 ) }
    dend_31 { pt3dadd( 41.0974, 125.581, -10.703, 1.62 ) }
    dend_31 { pt3dadd( 41.4711, 126.936, -11.1723, 0.29 ) }
    dend_31 { pt3dadd( 41.7343, 127.696, -11.467, 0.52 ) }
    dend_31 { pt3dadd( 42.114, 128.515, -11.8095, 0.66 ) }
    dend_31 { pt3dadd( 42.7955, 129.747, -12.4594, 0.22 ) }
    dend_31 { pt3dadd( 43.3645, 130.766, -13.0345, 1.47 ) }
    dend_31 { pt3dadd( 44.2121, 132.339, -13.9178, 1.69 ) }
    dend_31 { pt3dadd( 45.7609, 135.361, -15.6045, 0.29 ) }
    dend_31 { pt3dadd( 46.2252, 136.319, -16.1462, 0.44 ) }
    dend_31 { pt3dadd( 47.2764, 138.683, -17.5336, 0.22 ) }
    dend_31 { pt3dadd( 47.9432, 140.392, -18.5715, 0.66 ) }
    dend_31 { pt3dadd( 48.1596, 141.052, -18.9521, 0.66 ) }
    dend_31 { pt3dadd( 48.3377, 141.801, -19.3523, 1.11 ) }
    dend_31 { pt3dadd( 48.457, 142.688, -19.8315, 1.33 ) }
    dend_31 { pt3dadd( 48.555, 144.192, -20.7213, 1.47 ) }
    dend_31 { pt3dadd( 48.5283, 145.04, -21.3072, 1.47 ) }
    dend_31 { pt3dadd( 48.3711, 146.675, -22.4124, 0.22 ) }
    dend_31 { pt3dadd( 48.2702, 147.426, -22.9226, 0.22 ) }
    dend_31 { pt3dadd( 48.1492, 148.138, -23.3882, 0.74 ) }
    dend_31 { pt3dadd( 48.0006, 148.818, -23.8006, 1.03 ) }
    dend_31 { pt3dadd( 47.4466, 150.904, -24.9782, 0.22 ) }
    dend_31 { pt3dadd( 47.1695, 151.76, -25.4561, 0.22 ) }
    dend_31 { pt3dadd( 46.9731, 152.273, -25.7858, 0.66 ) }
    dend_31 { pt3dadd( 46.7874, 152.72, -26.1062, 0.96 ) }
    dend_31 { pt3dadd( 46.0339, 154.468, -27.3808, 0.22 ) }
    dend_31 { pt3dadd( 45.6442, 155.333, -27.9909, 0.44 ) }
    dend_31 { pt3dadd( 45.4426, 155.76, -28.2815, 1.18 ) }
    dend_31 { pt3dadd( 44.7305, 157.208, -29.4193, 1.4 ) }
    dend_31 { pt3dadd( 44.4604, 157.725, -29.8803, 1.18 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 98/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 33.1412, 58.4628, 23.3949, 1.33 ) }
    dend_28 { pt3dadd( 33.3671, 58.7792, 23.5196, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 33.9294, 59.5965, 23.6701, 0.29 ) }
    dend_28 { pt3dadd( 34.435, 60.3368, 23.7274, 1.18 ) }
    dend_28 { pt3dadd( 34.7017, 60.7259, 23.7404, 1.92 ) }
    dend_28 { pt3dadd( 34.9879, 61.1567, 23.7586, 1.99 ) }
    dend_28 { pt3dadd( 35.191, 61.4752, 23.7802, 1.62 ) }
    dend_28 { pt3dadd( 35.8475, 62.5999, 23.8628, 0.37 ) }
    dend_28 { pt3dadd( 36.0513, 62.9992, 23.9049, 0.37 ) }
    dend_28 { pt3dadd( 36.2017, 63.3634, 23.957, 0.37 ) }
    dend_28 { pt3dadd( 36.4018, 64.0444, 24.1149, 0.52 ) }
    dend_28 { pt3dadd( 36.475, 64.4968, 24.2776, 0.59 ) }
    dend_28 { pt3dadd( 36.5077, 64.9888, 24.5157, 0.44 ) }
    dend_28 { pt3dadd( 36.5051, 65.3674, 24.7432, 0.44 ) }
    dend_28 { pt3dadd( 36.4938, 65.6641, 24.9126, 0.44 ) }
    dend_28 { pt3dadd( 36.4751, 66.153, 25.1749, 0.29 ) }
    dend_28 { pt3dadd( 36.4559, 66.6491, 25.4254, 0.66 ) }
    dend_28 { pt3dadd( 36.4487, 67.0554, 25.6142, 0.88 ) }
    dend_28 { pt3dadd( 36.4484, 67.3027, 25.732, 0.88 ) }
    dend_28 { pt3dadd( 36.4533, 67.6653, 25.8988, 0.74 ) }
    dend_28 { pt3dadd( 36.47, 68.3702, 26.2144, 0.29 ) }
    dend_28 { pt3dadd( 36.4825, 68.7426, 26.3874, 0.29 ) }
    dend_28 { pt3dadd( 36.4921, 69.1643, 26.5841, 0.29 ) }
    dend_28 { pt3dadd( 36.4887, 69.9901, 27.0071, 0.74 ) }
    dend_28 { pt3dadd( 36.4668, 70.4936, 27.2819, 1.84 ) }
    dend_28 { pt3dadd( 36.4489, 70.7668, 27.438, 2.36 ) }
    dend_28 { pt3dadd( 36.4222, 71.2768, 27.7257, 2.36 ) }
    dend_28 { pt3dadd( 36.3902, 72.2605, 28.2765, 0.44 ) }
    dend_28 { pt3dadd( 36.3729, 72.8734, 28.6371, 0.44 ) }
    dend_28 { pt3dadd( 36.3604, 73.442, 28.9805, 0.44 ) }
    dend_28 { pt3dadd( 36.357, 73.7669, 29.1866, 0.44 ) }
    dend_28 { pt3dadd( 36.3886, 74.7035, 29.7389, 2.06 ) }
    dend_28 { pt3dadd( 36.4116, 74.9861, 29.8833, 2.58 ) }
    dend_28 { pt3dadd( 36.4793, 75.4522, 30.101, 2.58 ) }
    dend_28 { pt3dadd( 36.5144, 75.615, 30.1757, 2.58 ) }
    dend_28 { pt3dadd( 36.6629, 76.0774, 30.4575, 1.62 ) }
    dend_28 { pt3dadd( 36.9461, 76.7692, 31.0894, 0.29 ) }
    dend_28 { pt3dadd( 37.128, 77.1598, 31.5334, 0.29 ) }
    dend_28 { pt3dadd( 37.3482, 77.6266, 32.1118, 0.74 ) }
    dend_28 { pt3dadd( 37.5654, 78.0944, 32.7148, 0.96 ) }
    dend_28 { pt3dadd( 37.941, 79.0067, 33.8623, 1.25 ) }
    dend_28 { pt3dadd( 38.3262, 80.0771, 35.1805, 1.69 ) }
    dend_28 { pt3dadd( 38.3874, 80.2757, 35.4153, 2.21 ) }
    dend_28 { pt3dadd( 38.482, 80.6258, 35.7845, 2.21 ) }
    dend_28 { pt3dadd( 38.5969, 81.1334, 36.2406, 1.18 ) }
    dend_28 { pt3dadd( 38.7629, 82.089, 36.9665, 0.22 ) }
    dend_28 { pt3dadd( 38.8223, 82.5775, 37.2739, 0.22 ) }
    dend_28 { pt3dadd( 38.9542, 83.9643, 38.0556, 1.25 ) }
    dend_28 { pt3dadd( 38.9807, 84.3235, 38.2616, 2.06 ) }
    dend_28 { pt3dadd( 39.0006, 84.7657, 38.5167, 2.28 ) }
    dend_28 { pt3dadd( 38.9998, 85.2329, 38.7913, 1.99 ) }
    dend_28 { pt3dadd( 38.9879, 85.4314, 38.9155, 1.99 ) }
    dend_28 { pt3dadd( 38.9179, 85.963, 39.229, 1.03 ) }
    dend_28 { pt3dadd( 38.8182, 86.4621, 39.5139, 0.22 ) }
    dend_28 { pt3dadd( 38.7413, 86.8423, 39.7412, 0.52 ) }
    dend_28 { pt3dadd( 38.6982, 87.0873, 39.8879, 0.66 ) }
    dend_28 { pt3dadd( 38.662, 87.4051, 40.0905, 0.66 ) }
    dend_28 { pt3dadd( 38.6276, 87.7939, 40.3523, 0.37 ) }
    dend_28 { pt3dadd( 38.5963, 88.5909, 40.9413, 0.96 ) }
    dend_28 { pt3dadd( 38.6022, 88.8734, 41.1693, 1.18 ) }
    dend_28 { pt3dadd( 38.6202, 89.1477, 41.3982, 1.47 ) }
    dend_28 { pt3dadd( 38.6737, 89.5943, 41.7684, 1.47 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 60/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -27.1384, 6.49433, -2.35564, 1.18 ) }
    dend_24 { pt3dadd( -28.7786, 6.68313, -1.43524, 1.18 ) }
    dend_24 { pt3dadd( -29.7808, 6.81243, -1.05043, 0.29 ) }
    dend_24 { pt3dadd( -30.9179, 6.96972, -0.764117, 0.29 ) }
    dend_24 { pt3dadd( -31.7452, 7.0882, -0.683461, 0.52 ) }
    dend_24 { pt3dadd( -32.1907, 7.15642, -0.631042, 0.74 ) }
    dend_24 { pt3dadd( -32.711, 7.23678, -0.54254, 0.88 ) }
    dend_24 { pt3dadd( -33.5291, 7.37937, -0.46976, 0.88 ) }
    dend_24 { pt3dadd( -33.8086, 7.42697, -0.434297, 0.88 ) }
    dend_24 { pt3dadd( -34.9863, 7.59501, -0.192704, 0.29 ) }
    dend_24 { pt3dadd( -36.171, 7.71658, 0.177237, 0.29 ) }
    dend_24 { pt3dadd( -37.1949, 7.79344, 0.576878, 1.25 ) }
    dend_24 { pt3dadd( -37.726, 7.81989, 0.828687, 1.77 ) }
    dend_24 { pt3dadd( -38.0591, 7.83331, 1.0024, 2.21 ) }
    dend_24 { pt3dadd( -38.5453, 7.85116, 1.25261, 2.21 ) }
    dend_24 { pt3dadd( -39.241, 7.87893, 1.6005, 1.92 ) }
    dend_24 { pt3dadd( -39.9628, 7.91133, 1.9183, 1.4 ) }
    dend_24 { pt3dadd( -41.2069, 7.98676, 2.4454, 0.29 ) }
    dend_24 { pt3dadd( -42.2246, 8.06666, 2.873, 0.22 ) }
    dend_24 { pt3dadd( -43.2438, 8.15857, 3.28686, 0.22 ) }
    dend_24 { pt3dadd( -43.928, 8.22574, 3.53519, 0.59 ) }
    dend_24 { pt3dadd( -44.2048, 8.25251, 3.62799, 0.74 ) }
    dend_24 { pt3dadd( -44.8013, 8.30412, 3.81436, 0.74 ) }
    dend_24 { pt3dadd( -45.3391, 8.33864, 3.97967, 0.74 ) }
    dend_24 { pt3dadd( -46.1851, 8.37195, 4.25868, 0.22 ) }
    dend_24 { pt3dadd( -46.8697, 8.38953, 4.49618, 0.29 ) }
    dend_24 { pt3dadd( -47.6826, 8.38883, 4.79073, 0.29 ) }
    dend_24 { pt3dadd( -49.0367, 8.35484, 5.29251, 1.77 ) }
    dend_24 { pt3dadd( -49.6269, 8.34669, 5.51354, 2.5 ) }
    dend_24 { pt3dadd( -49.9531, 8.35017, 5.63227, 2.73 ) }
    dend_24 { pt3dadd( -50.5132, 8.36779, 5.8304, 2.73 ) }
    dend_24 { pt3dadd( -51.4876, 8.42268, 6.1542, 1.47 ) }
    dend_24 { pt3dadd( -52.4146, 8.50161, 6.40731, 0.22 ) }
    dend_24 { pt3dadd( -53.3362, 8.59649, 6.60519, 0.29 ) }
    dend_24 { pt3dadd( -54.2854, 8.70592, 6.7754, 0.37 ) }
    dend_24 { pt3dadd( -54.8968, 8.79057, 6.87684, 0.44 ) }
    dend_24 { pt3dadd( -55.4065, 8.87677, 6.96351, 0.44 ) }
    dend_24 { pt3dadd( -56.2911, 9.06303, 7.11563, 0.22 ) }
    dend_24 { pt3dadd( -56.7956, 9.17484, 7.21003, 0.88 ) }
    dend_24 { pt3dadd( -57.0966, 9.24131, 7.27299, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -57.5587, 9.34879, 7.37468, 1.62 ) }
    dend_24 { pt3dadd( -58.0239, 9.46599, 7.47555, 1.69 ) }
    dend_24 { pt3dadd( -58.6009, 9.5983, 7.59816, 1.33 ) }
    dend_24 { pt3dadd( -58.8472, 9.63927, 7.64991, 1.33 ) }
    dend_24 { pt3dadd( -60.2926, 9.80457, 7.95536, 0.22 ) }
    dend_24 { pt3dadd( -61.1002, 9.86577, 8.13346, 0.37 ) }
    dend_24 { pt3dadd( -61.4146, 9.88197, 8.20266, 0.37 ) }
    dend_24 { pt3dadd( -62.1475, 9.90946, 8.35847, 0.22 ) }
    dend_24 { pt3dadd( -63.5373, 9.93177, 8.66377, 0.22 ) }
    dend_24 { pt3dadd( -64.1696, 9.93087, 8.81605, 0.22 ) }
    dend_24 { pt3dadd( -65.2735, 9.93517, 9.08777, 1.62 ) }
    dend_24 { pt3dadd( -65.7293, 9.95337, 9.20468, 2.14 ) }
    dend_24 { pt3dadd( -66.2311, 9.98886, 9.33145, 2.36 ) }
    dend_24 { pt3dadd( -66.8026, 10.0588, 9.46944, 2.06 ) }
    dend_24 { pt3dadd( -68.4125, 10.3217, 9.82085, 0.22 ) }
    dend_24 { pt3dadd( -70.0808, 10.6355, 10.158, 0.22 ) }
    dend_24 { pt3dadd( -71.5261, 10.9421, 10.428, 1.47 ) }
    dend_24 { pt3dadd( -72.0393, 11.0606, 10.5199, 2.14 ) }
    dend_24 { pt3dadd( -72.7125, 11.2314, 10.6322, 2.58 ) }
    dend_24 { pt3dadd( -74.1316, 11.6622, 10.8374, 0.22 ) }
    dend_24 { pt3dadd( -74.8745, 11.9342, 10.9421, 0.22 ) }
    dend_24 { pt3dadd( -75.4474, 12.183, 11.032, 0.66 ) }
    dend_24 { pt3dadd( -75.7447, 12.3318, 11.082, 0.66 ) }
    dend_24 { pt3dadd( -76.3233, 12.6517, 11.1997, 0.44 ) }
    dend_24 { pt3dadd( -77.3029, 13.2656, 11.4404, 0.22 ) }
    dend_24 { pt3dadd( -77.8717, 13.7034, 11.6049, 0.22 ) }
    dend_24 { pt3dadd( -78.6634, 14.4057, 11.8618, 1.33 ) }
    dend_24 { pt3dadd( -78.8457, 14.581, 11.9248, 1.77 ) }
    dend_24 { pt3dadd( -79.1451, 14.8831, 12.0309, 1.77 ) }
    dend_24 { pt3dadd( -79.553, 15.3089, 12.1742, 1.47 ) }
    dend_24 { pt3dadd( -80.4837, 16.2285, 12.4873, 0.22 ) }
    dend_24 { pt3dadd( -81.3582, 17.0684, 12.7319, 0.22 ) }
    dend_24 { pt3dadd( -81.9049, 17.5754, 12.869, 1.77 ) }
    dend_24 { pt3dadd( -82.2703, 17.9004, 12.9489, 2.06 ) }
    dend_24 { pt3dadd( -82.6995, 18.2683, 13.0438, 1.77 ) }
    dend_24 { pt3dadd( -83.9895, 19.3361, 13.3204, 0.15 ) }
    dend_24 { pt3dadd( -85.3359, 20.3935, 13.6059, 0.15 ) }
    dend_24 { pt3dadd( -86.3357, 21.146, 13.8252, 1.33 ) }
    dend_24 { pt3dadd( -86.6505, 21.3856, 13.8982, 2.06 ) }
    dend_24 { pt3dadd( -87.194, 21.8024, 14.027, 2.21 ) }
    dend_24 { pt3dadd( -88.3593, 22.6972, 14.3168, 0.22 ) }
    dend_24 { pt3dadd( -89.1733, 23.3203, 14.5356, 0.22 ) }
    dend_24 { pt3dadd( -89.5852, 23.6047, 14.6611, 0.22 ) }
    dend_24 { pt3dadd( -90.2126, 24.018, 14.8663, 1.33 ) }
    dend_24 { pt3dadd( -90.5403, 24.2257, 14.9729, 1.99 ) }
    dend_24 { pt3dadd( -90.9854, 24.4945, 15.1083, 2.21 ) }
    dend_24 { pt3dadd( -91.3562, 24.7054, 15.2305, 2.21 ) }
    dend_24 { pt3dadd( -92.576, 25.3669, 15.6277, 0.22 ) }
    dend_24 { pt3dadd( -93.1413, 25.6619, 15.8471, 0.22 ) }
    dend_24 { pt3dadd( -93.5524, 25.8737, 16.0363, 0.74 ) }
    dend_24 { pt3dadd( -93.8756, 26.0529, 16.2071, 0.96 ) }
    dend_24 { pt3dadd( -94.3085, 26.2983, 16.4451, 0.96 ) }
    dend_24 { pt3dadd( -94.8442, 26.6143, 16.7629, 0.37 ) }
    dend_24 { pt3dadd( -95.7794, 27.2403, 17.4369, 0.59 ) }
    dend_24 { pt3dadd( -96.0636, 27.4343, 17.6595, 1.33 ) }
    dend_24 { pt3dadd( -96.5261, 27.759, 18.074, 1.33 ) }
    dend_24 { pt3dadd( -105.198, 30.532, 22.4481, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -27.1384, 6.49433, -2.35564, 0.52 ) }
    dend_21 { pt3dadd( -28.1605, 7.32888, -3.3675, 0.52 ) }
    dend_21 { pt3dadd( -28.4768, 7.5896, -3.69031, 0.37 ) }
    dend_21 { pt3dadd( -28.9234, 7.95549, -4.13446, 0.81 ) }
    dend_21 { pt3dadd( -29.3723, 8.32851, -4.56471, 0.96 ) }
    dend_21 { pt3dadd( -29.8853, 8.77024, -5.08791, 0.66 ) }
    dend_21 { pt3dadd( -30.3244, 9.15254, -5.53505, 0.88 ) }
    dend_21 { pt3dadd( -30.7053, 9.50811, -5.9502, 0.88 ) }
    dend_21 { pt3dadd( -30.9658, 9.73347, -6.22665, 0.81 ) }
    dend_21 { pt3dadd( -31.2666, 9.94937, -6.51144, 0.66 ) }
    dend_21 { pt3dadd( -32.0718, 10.465, -7.19028, 0.52 ) }
    dend_21 { pt3dadd( -32.3781, 10.6452, -7.43056, 0.66 ) }
    dend_21 { pt3dadd( -32.9354, 10.9414, -7.8765, 0.52 ) }
    dend_21 { pt3dadd( -33.3729, 11.1537, -8.23724, 0.29 ) }
    dend_21 { pt3dadd( -34.2093, 11.5027, -8.87557, 1.62 ) }
    dend_21 { pt3dadd( -34.7979, 11.7333, -9.28697, 2.43 ) }
    dend_21 { pt3dadd( -35.2224, 11.897, -9.55628, 2.73 ) }
    dend_21 { pt3dadd( -35.9057, 12.1732, -9.9745, 2.87 ) }
    dend_21 { pt3dadd( -36.7198, 12.5295, -10.4342, 2.14 ) }
    dend_21 { pt3dadd( -37.6715, 12.9876, -10.9027, 0.52 ) }
    dend_21 { pt3dadd( -38.3613, 13.3512, -11.1837, 0.29 ) }
    dend_21 { pt3dadd( -38.9221, 13.6605, -11.3646, 0.29 ) }
    dend_21 { pt3dadd( -39.4092, 13.9404, -11.4953, 0.74 ) }
    dend_21 { pt3dadd( -39.876, 14.2107, -11.6039, 0.96 ) }
    dend_21 { pt3dadd( -40.973, 14.8492, -11.8734, 0.22 ) }
    dend_21 { pt3dadd( -41.3172, 15.046, -11.9745, 0.88 ) }
    dend_21 { pt3dadd( -41.8099, 15.2804, -12.1141, 1.33 ) }
    dend_21 { pt3dadd( -42.2519, 15.461, -12.2297, 1.47 ) }
    dend_21 { pt3dadd( -42.8709, 15.667, -12.3847, 1.84 ) }
    dend_21 { pt3dadd( -43.3092, 15.7841, -12.4972, 1.84 ) }
    dend_21 { pt3dadd( -44.667, 16.0677, -12.8493, 0.29 ) }
    dend_21 { pt3dadd( -45.9075, 16.2875, -13.1457, 0.29 ) }
    dend_21 { pt3dadd( -46.831, 16.4363, -13.3388, 1.25 ) }
    dend_21 { pt3dadd( -47.4755, 16.5404, -13.4494, 1.84 ) }
    dend_21 { pt3dadd( -48.1033, 16.6419, -13.545, 1.84 ) }
    dend_21 { pt3dadd( -49.2834, 16.831, -13.707, 0.22 ) }
    dend_21 { pt3dadd( -49.9842, 16.9406, -13.7945, 0.22 ) }
    dend_21 { pt3dadd( -51.2567, 17.1541, -13.9313, 0.22 ) }
    dend_21 { pt3dadd( -52.2755, 17.3404, -14.0036, 1.4 ) }
    dend_21 { pt3dadd( -52.7281, 17.438, -14.0132, 1.99 ) }
    dend_21 { pt3dadd( -53.1957, 17.5493, -13.9942, 2.28 ) }
    dend_21 { pt3dadd( -53.5712, 17.6525, -13.9518, 2.28 ) }
    dend_21 { pt3dadd( -54.8527, 18.0357, -13.7421, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( -55.3096, 18.1694, -13.6325, 0.22 ) }
    dend_21 { pt3dadd( -55.7537, 18.2922, -13.5047, 0.52 ) }
    dend_21 { pt3dadd( -56.1025, 18.3889, -13.3972, 0.52 ) }
    dend_21 { pt3dadd( -57.1113, 18.6705, -13.0758, 0.22 ) }
    dend_21 { pt3dadd( -58.2473, 19.0055, -12.717, 0.22 ) }
    dend_21 { pt3dadd( -59.2609, 19.3105, -12.4153, 1.25 ) }
    dend_21 { pt3dadd( -60.1274, 19.5651, -12.1845, 2.28 ) }
    dend_21 { pt3dadd( -60.571, 19.6903, -12.0775, 2.5 ) }
    dend_21 { pt3dadd( -61.0997, 19.8361, -11.9625, 2.5 ) }
    dend_21 { pt3dadd( -62.3406, 20.1818, -11.7499, 0.22 ) }
    dend_21 { pt3dadd( -63.9449, 20.6393, -11.5015, 0.22 ) }
    dend_21 { pt3dadd( -64.4519, 20.7929, -11.4351, 0.66 ) }
    dend_21 { pt3dadd( -64.9934, 20.9616, -11.3587, 0.81 ) }
    dend_21 { pt3dadd( -65.2404, 21.0479, -11.3276, 0.88 ) }
    dend_21 { pt3dadd( -66.8707, 21.7027, -11.1475, 0.22 ) }
    dend_21 { pt3dadd( -67.6756, 22.0769, -11.0622, 1.47 ) }
    dend_21 { pt3dadd( -68.1153, 22.3122, -11.0189, 1.99 ) }
    dend_21 { pt3dadd( -68.6069, 22.5955, -10.9688, 1.99 ) }
    dend_21 { pt3dadd( -70.1097, 23.5683, -10.8067, 0.22 ) }
    dend_21 { pt3dadd( -70.7059, 24.011, -10.7518, 0.22 ) }
    dend_21 { pt3dadd( -71.5055, 24.7117, -10.7031, 0.22 ) }
    dend_21 { pt3dadd( -71.759, 24.9558, -10.7089, 0.44 ) }
    dend_21 { pt3dadd( -72.1053, 25.2994, -10.734, 0.59 ) }
    dend_21 { pt3dadd( -72.5221, 25.7276, -10.7827, 0.29 ) }
    dend_21 { pt3dadd( -72.9245, 26.1882, -10.8269, 0.29 ) }
    dend_21 { pt3dadd( -73.1169, 26.4479, -10.8683, 1.03 ) }
    dend_21 { pt3dadd( -73.4199, 26.9919, -11.0026, 1.25 ) }
    dend_21 { pt3dadd( -73.5013, 27.159, -11.0579, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 28/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.146266, -13.8486, 0.0273224, 1.4 ) }
    dend_14 { pt3dadd( -1.00595, -13.9271, -1.04485, 1.4 ) }
    dend_14 { pt3dadd( -1.57242, -13.9739, -1.66677, 1.03 ) }
    dend_14 { pt3dadd( -3.92828, -14.1068, -4.17947, 1.03 ) }
    dend_14 { pt3dadd( -4.47101, -14.1048, -4.73663, 1.18 ) }
    dend_14 { pt3dadd( -5.18895, -14.0506, -5.47593, 1.18 ) }
    dend_14 { pt3dadd( -6.01765, -13.9233, -6.34906, 0.81 ) }
    dend_14 { pt3dadd( -6.78464, -13.6603, -7.23235, 0.81 ) }
    dend_14 { pt3dadd( -7.4667, -13.2934, -8.05897, 0.59 ) }
    dend_14 { pt3dadd( -8.02749, -12.8359, -8.68655, 0.74 ) }
    dend_14 { pt3dadd( -8.57974, -12.2063, -9.4287, 0.74 ) }
    dend_14 { pt3dadd( -8.95064, -11.6821, -10.0085, 0.96 ) }
    dend_14 { pt3dadd( -9.4586, -10.9153, -10.7999, 1.11 ) }
    dend_14 { pt3dadd( -9.81797, -10.3814, -11.3334, 1.11 ) }
    dend_14 { pt3dadd( -10.4193, -9.56995, -12.1431, 1.03 ) }
    dend_14 { pt3dadd( -11.2767, -8.54247, -13.2843, 0.88 ) }
    dend_14 { pt3dadd( -12.2065, -7.57954, -14.4393, 0.66 ) }
    dend_14 { pt3dadd( -12.7801, -7.06166, -15.1539, 0.81 ) }
    dend_14 { pt3dadd( -13.2612, -6.67301, -15.7662, 0.66 ) }
    dend_14 { pt3dadd( -13.9258, -6.15459, -16.6327, 0.66 ) }
    dend_14 { pt3dadd( -14.7479, -5.49173, -17.7894, 0.88 ) }
    dend_14 { pt3dadd( -14.9856, -5.26478, -18.1531, 1.18 ) }
    dend_14 { pt3dadd( -15.5211, -4.63862, -19.0755, 1.18 ) }
    dend_14 { pt3dadd( -15.7861, -4.25194, -19.6209, 1.33 ) }
    dend_14 { pt3dadd( -16.2775, -3.37743, -20.7618, 0.59 ) }
    dend_14 { pt3dadd( -16.6772, -2.50803, -21.7743, 0.59 ) }
    dend_14 { pt3dadd( -16.9056, -1.9073, -22.3637, 0.59 ) }
    dend_14 { pt3dadd( -17.0734, -1.37019, -22.8674, 0.88 ) }
    dend_14 { pt3dadd( -17.2671, -0.64648, -23.4804, 1.03 ) }
    dend_14 { pt3dadd( -17.4368, 0.0726742, -24.0587, 1.18 ) }
    dend_14 { pt3dadd( -17.5523, 0.616725, -24.4978, 0.88 ) }
    dend_14 { pt3dadd( -17.7286, 1.37569, -25.1028, 0.74 ) }
    dend_14 { pt3dadd( -18.089, 2.72425, -26.1957, 0.52 ) }
    dend_14 { pt3dadd( -18.3226, 3.51471, -26.8376, 0.37 ) }
    dend_14 { pt3dadd( -18.6128, 4.43379, -27.5611, 0.37 ) }
    dend_14 { pt3dadd( -18.7901, 4.97686, -27.9867, 0.59 ) }
    dend_14 { pt3dadd( -18.992, 5.59113, -28.4801, 0.59 ) }
    dend_14 { pt3dadd( -19.1688, 6.11526, -28.9027, 0.59 ) }
    dend_14 { pt3dadd( -19.3444, 6.58953, -29.2348, 0.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.146266, -13.8486, 0.0273224, 3.68 ) }
    dend_1 { pt3dadd( -0.079296, -14.7471, 0.106711, 3.68 ) }
    dend_1 { pt3dadd( -0.050674, -15.9512, 0.211773, 3.09 ) }
    dend_1 { pt3dadd( -0.070332, -17.1672, 0.316529, 3.09 ) }
    dend_1 { pt3dadd( -0.108662, -19.5382, 0.520792, 2.8 ) }
    dend_1 { pt3dadd( -0.144108, -21.7307, 0.709685, 2.73 ) }
    dend_1 { pt3dadd( -0.170557, -23.3667, 0.850628, 2.5 ) }
    dend_1 { pt3dadd( -0.267496, -25.047, 1.0021, 2.8 ) }
    dend_1 { pt3dadd( -0.402117, -26.5676, 1.14838, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 76/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -9.29444, 37.9328, -1.36362, 0.29 ) }
    axon_1 { pt3dadd( -12.6642, 52.5494, -1.36362, 0.29 ) }
    axon_1 { pt3dadd( -16.034, 67.166, -1.36362, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 79/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 50.4278, 45.1099, 2.97365, 0.52 ) }
    dend_40 { pt3dadd( 51.1317, 45.8576, 3.61849, 0.52 ) }
    dend_40 { pt3dadd( 51.6629, 46.4024, 4.11926, 1.18 ) }
    dend_40 { pt3dadd( 52.2283, 46.9507, 4.64909, 1.47 ) }
    dend_40 { pt3dadd( 52.7076, 47.406, 5.12154, 1.47 ) }
    dend_40 { pt3dadd( 53.3491, 48.0094, 5.74462, 0.59 ) }
    dend_40 { pt3dadd( 53.739, 48.3779, 6.13857, 1.11 ) }
    dend_40 { pt3dadd( 54.059, 48.6671, 6.53409, 1.4 ) }
    dend_40 { pt3dadd( 54.3152, 48.9005, 6.91154, 1.4 ) }
    dend_40 { pt3dadd( 54.9933, 49.5337, 7.98762, 0.74 ) }
    dend_40 { pt3dadd( 55.3754, 49.8925, 8.62778, 1.18 ) }
    dend_40 { pt3dadd( 55.9465, 50.427, 9.63778, 1.47 ) }
    dend_40 { pt3dadd( 57.2641, 51.6684, 12.0844, 0.52 ) }
    dend_40 { pt3dadd( 57.7716, 52.1616, 13.0683, 1.25 ) }
    dend_40 { pt3dadd( 58.0241, 52.4128, 13.5966, 1.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 94/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 50.4278, 45.1099, 2.97365, 0.29 ) }
    dend_39 { pt3dadd( 49.084, 45.8141, 3.33198, 0.29 ) }
    dend_39 { pt3dadd( 48.0679, 46.3625, 3.61727, 0.29 ) }
    dend_39 { pt3dadd( 47.1967, 46.8326, 3.86185, 0.29 ) }
    dend_39 { pt3dadd( 46.0197, 47.4679, 4.19232, 0.96 ) }
    dend_39 { pt3dadd( 45.4584, 47.7708, 4.34991, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_39 { pt3dadd( 45.0101, 48.0127, 4.47578, 1.11 ) }
    dend_39 { pt3dadd( 44.5522, 48.2755, 4.62633, 0.66 ) }
    dend_39 { pt3dadd( 35.7237, 51.0324, 5.27959, 0.66 ) }
    dend_39 { pt3dadd( 26.5772, 52.3367, 4.49905, 0.66 ) }
    dend_39 { pt3dadd( 17.3809, 53.1299, 3.62311, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 5/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 40.7286, 68.0889, -9.09165, 0.29 ) }
    dend_37 { pt3dadd( 40.2753, 69.5955, -9.0157, 0.29 ) }
    dend_37 { pt3dadd( 39.9664, 70.8678, -8.96634, 0.29 ) }
    dend_37 { pt3dadd( 39.8257, 71.4983, -8.93899, 0.66 ) }
    dend_37 { pt3dadd( 39.5771, 72.64, -8.88193, 0.66 ) }
    dend_37 { pt3dadd( 39.2951, 73.8954, -8.82362, 0.22 ) }
    dend_37 { pt3dadd( 38.8677, 75.7581, -8.74986, 0.29 ) }
    dend_37 { pt3dadd( 38.6014, 77.015, -8.68657, 0.74 ) }
    dend_37 { pt3dadd( 38.424, 77.8865, -8.65528, 0.74 ) }
    dend_37 { pt3dadd( 38.2632, 78.6779, -8.63113, 0.22 ) }
    dend_37 { pt3dadd( 38.0268, 79.8659, -8.5925, 0.22 ) }
    dend_37 { pt3dadd( 37.8341, 80.9484, -8.52013, 1.03 ) }
    dend_37 { pt3dadd( 37.7482, 81.572, -8.45057, 1.77 ) }
    dend_37 { pt3dadd( 37.6987, 82.1567, -8.37081, 1.99 ) }
    dend_37 { pt3dadd( 37.6675, 82.9993, -8.22578, 1.47 ) }
    dend_37 { pt3dadd( 37.6563, 84.5382, -7.9142, 0.29 ) }
    dend_37 { pt3dadd( 37.6827, 85.7782, -7.68082, 0.29 ) }
    dend_37 { pt3dadd( 37.6776, 86.8486, -7.5573, 0.96 ) }
    dend_37 { pt3dadd( 37.6518, 87.5641, -7.51212, 1.4 ) }
    dend_37 { pt3dadd( 37.5872, 88.5037, -7.49625, 1.4 ) }
    dend_37 { pt3dadd( 37.5116, 89.31, -7.52169, 0.88 ) }
    dend_37 { pt3dadd( 37.2664, 91.3031, -7.67047, 0.22 ) }
    dend_37 { pt3dadd( 36.7085, 95.0331, -8.0626, 0.22 ) }
    dend_37 { pt3dadd( 36.5603, 95.992, -8.18426, 0.81 ) }
    dend_37 { pt3dadd( 36.3661, 97.22, -8.35531, 1.99 ) }
    dend_37 { pt3dadd( 36.2785, 97.805, -8.4394, 2.21 ) }
    dend_37 { pt3dadd( 36.1851, 98.4607, -8.52122, 1.84 ) }
    dend_37 { pt3dadd( 36.0409, 99.4979, -8.62495, 1.18 ) }
    dend_37 { pt3dadd( 35.8864, 100.919, -8.75341, 0.37 ) }
    dend_37 { pt3dadd( 35.7919, 101.957, -8.82482, 0.22 ) }
    dend_37 { pt3dadd( 35.4915, 105.512, -8.95416, 0.22 ) }
    dend_37 { pt3dadd( 35.3962, 106.723, -8.94596, 0.66 ) }
    dend_37 { pt3dadd( 35.3581, 107.276, -8.92284, 0.66 ) }
    dend_37 { pt3dadd( 35.2577, 108.776, -8.83083, 0.29 ) }
    dend_37 { pt3dadd( 35.2017, 109.638, -8.7623, 0.29 ) }
    dend_37 { pt3dadd( 35.1423, 110.677, -8.67018, 1.62 ) }
    dend_37 { pt3dadd( 35.0667, 111.553, -8.59269, 1.84 ) }
    dend_37 { pt3dadd( 34.9516, 112.355, -8.58428, 1.84 ) }
    dend_37 { pt3dadd( 34.6605, 113.856, -8.65624, 0.37 ) }
    dend_37 { pt3dadd( 34.5136, 114.48, -8.71974, 0.37 ) }
    dend_37 { pt3dadd( 34.3553, 115.119, -8.81562, 0.37 ) }
    dend_37 { pt3dadd( 34.0269, 116.413, -9.0614, 0.22 ) }
    dend_37 { pt3dadd( 33.2839, 119.329, -9.67377, 0.22 ) }
    dend_37 { pt3dadd( 33.0726, 120.142, -9.85371, 0.88 ) }
    dend_37 { pt3dadd( 32.8988, 120.808, -9.9978, 0.88 ) }
    dend_37 { pt3dadd( 32.7806, 121.26, -10.0964, 0.88 ) }
    dend_37 { pt3dadd( 32.3653, 122.836, -10.4364, 0.22 ) }
    dend_37 { pt3dadd( 32.1524, 123.602, -10.5987, 1.11 ) }
    dend_37 { pt3dadd( 31.9189, 124.331, -10.7377, 1.25 ) }
    dend_37 { pt3dadd( 31.7989, 124.635, -10.7861, 1.25 ) }
    dend_37 { pt3dadd( 31.3081, 125.649, -10.9051, 0.22 ) }
    dend_37 { pt3dadd( 29.8337, 128.158, -11.0347, 0.22 ) }
    dend_37 { pt3dadd( 29.3238, 128.878, -10.996, 1.18 ) }
    dend_37 { pt3dadd( 28.8866, 129.4, -10.8279, 1.62 ) }
    dend_37 { pt3dadd( 27.9602, 130.459, -10.289, 0.37 ) }
    dend_37 { pt3dadd( 27.5114, 130.96, -9.9857, 0.22 ) }
    dend_37 { pt3dadd( 26.9554, 131.566, -9.57862, 0.88 ) }
    dend_37 { pt3dadd( 26.4144, 132.156, -9.16952, 1.11 ) }
    dend_37 { pt3dadd( 24.2182, 134.777, -7.54885, 0.22 ) }
    dend_37 { pt3dadd( 22.3134, 137.178, -6.10988, 0.22 ) }
    dend_37 { pt3dadd( 21.735, 137.972, -5.65954, 0.22 ) }
    dend_37 { pt3dadd( 21.356, 138.526, -5.37726, 0.81 ) }
    dend_37 { pt3dadd( 20.8554, 139.297, -5.04675, 1.03 ) }
    dend_37 { pt3dadd( 20.4583, 139.952, -4.851, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 69/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 40.7286, 68.0889, -9.09165, 0.22 ) }
    dend_36 { pt3dadd( 42.5704, 70.881, -10.1809, 0.22 ) }
    dend_36 { pt3dadd( 43.6243, 72.4546, -10.745, 0.22 ) }
    dend_36 { pt3dadd( 44.1569, 73.28, -11.0709, 0.66 ) }
    dend_36 { pt3dadd( 44.6577, 74.0689, -11.4091, 0.88 ) }
    dend_36 { pt3dadd( 45.1604, 74.9127, -11.7548, 0.59 ) }
    dend_36 { pt3dadd( 45.4764, 75.4909, -11.9733, 1.03 ) }
    dend_36 { pt3dadd( 46.0345, 76.6631, -12.3479, 1.99 ) }
    dend_36 { pt3dadd( 46.6166, 78.0729, -12.7824, 1.84 ) }
    dend_36 { pt3dadd( 46.8803, 78.7998, -12.9814, 1.4 ) }
    dend_36 { pt3dadd( 47.578, 81.1047, -13.4361, 0.22 ) }
    dend_36 { pt3dadd( 48.0498, 82.9048, -13.688, 0.22 ) }
    dend_36 { pt3dadd( 48.2769, 83.8404, -13.7807, 0.66 ) }
    dend_36 { pt3dadd( 48.5041, 84.8704, -13.8466, 0.66 ) }
    dend_36 { pt3dadd( 48.9039, 86.7573, -13.8822, 0.29 ) }
    dend_36 { pt3dadd( 49.4267, 89.4053, -13.883, 0.29 ) }
    dend_36 { pt3dadd( 49.7418, 90.9655, -13.8413, 1.33 ) }
    dend_36 { pt3dadd( 49.8859, 91.6206, -13.8157, 1.92 ) }
    dend_36 { pt3dadd( 50.0147, 92.1288, -13.8035, 2.21 ) }
    dend_36 { pt3dadd( 50.2151, 92.732, -13.81, 2.43 ) }
    dend_36 { pt3dadd( 50.4814, 93.4068, -13.8351, 2.43 ) }
    dend_36 { pt3dadd( 51.1292, 94.9518, -13.9344, 0.37 ) }
    dend_36 { pt3dadd( 51.6226, 96.0879, -14.0279, 0.22 ) }
    dend_36 { pt3dadd( 52.6685, 98.4844, -14.2909, 0.22 ) }
    dend_36 { pt3dadd( 54.6353, 102.969, -14.9172, 0.22 ) }
    dend_36 { pt3dadd( 55.7483, 105.498, -15.3283, 0.96 ) }
    dend_36 { pt3dadd( 56.2657, 106.688, -15.5228, 1.33 ) }
    dend_36 { pt3dadd( 56.5873, 107.456, -15.6551, 2.06 ) }
    dend_36 { pt3dadd( 57.0349, 108.545, -15.8305, 2.06 ) }
    dend_36 { pt3dadd( 57.351, 109.352, -15.9566, 0.96 ) }
    dend_36 { pt3dadd( 58.0394, 111.248, -16.2258, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 59.4027, 115.111, -16.6642, 0.22 ) }
    dend_36 { pt3dadd( 60.2768, 117.605, -16.8658, 1.18 ) }
    dend_36 { pt3dadd( 60.5407, 118.379, -16.9162, 1.69 ) }
    dend_36 { pt3dadd( 60.8092, 119.179, -16.9544, 1.69 ) }
    dend_36 { pt3dadd( 61.4949, 121.311, -17.064, 0.22 ) }
    dend_36 { pt3dadd( 62.6786, 125.192, -17.3644, 0.22 ) }
    dend_36 { pt3dadd( 62.9207, 126.036, -17.4521, 0.66 ) }
    dend_36 { pt3dadd( 63.1044, 126.689, -17.5243, 0.66 ) }
    dend_36 { pt3dadd( 63.4402, 127.906, -17.6903, 0.37 ) }
    dend_36 { pt3dadd( 63.7019, 128.839, -17.8412, 1.03 ) }
    dend_36 { pt3dadd( 63.93, 129.642, -18.0082, 1.69 ) }
    dend_36 { pt3dadd( 64.2086, 130.476, -18.2071, 1.69 ) }
    dend_36 { pt3dadd( 64.5646, 131.33, -18.3929, 1.4 ) }
    dend_36 { pt3dadd( 65.1055, 132.396, -18.5824, 0.15 ) }
    dend_36 { pt3dadd( 65.5119, 133.058, -18.7024, 0.44 ) }
    dend_36 { pt3dadd( 65.7453, 133.379, -18.7532, 0.44 ) }
    dend_36 { pt3dadd( 66.6428, 134.485, -18.8913, 0.15 ) }
    dend_36 { pt3dadd( 67.3502, 135.291, -18.9941, 0.15 ) }
    dend_36 { pt3dadd( 67.8609, 135.845, -19.0747, 0.52 ) }
    dend_36 { pt3dadd( 68.4841, 136.509, -19.2405, 0.74 ) }
    dend_36 { pt3dadd( 69.3154, 137.393, -19.529, 0.22 ) }
    dend_36 { pt3dadd( 70.0871, 138.221, -19.8419, 1.47 ) }
    dend_36 { pt3dadd( 70.7724, 138.981, -20.1514, 1.92 ) }
    dend_36 { pt3dadd( 71.4599, 139.777, -20.5101, 2.06 ) }
    dend_36 { pt3dadd( 72.7828, 141.368, -21.2646, 0.59 ) }
    dend_36 { pt3dadd( 73.6572, 142.488, -21.7844, 0.22 ) }
    dend_36 { pt3dadd( 74.8173, 144.069, -22.4684, 0.22 ) }
    dend_36 { pt3dadd( 75.4108, 144.932, -22.8154, 1.03 ) }
    dend_36 { pt3dadd( 75.9436, 145.783, -23.0544, 1.25 ) }
    dend_36 { pt3dadd( 76.1025, 146.064, -23.0889, 1.4 ) }
    dend_36 { pt3dadd( 77.1773, 148.182, -22.9963, 0.22 ) }
    dend_36 { pt3dadd( 77.6349, 149.196, -22.8279, 1.03 ) }
    dend_36 { pt3dadd( 77.9765, 150.002, -22.5969, 1.25 ) }
    dend_36 { pt3dadd( 78.8792, 152.131, -21.8241, 0.15 ) }
    dend_36 { pt3dadd( 79.4702, 153.531, -21.2337, 0.59 ) }
    dend_36 { pt3dadd( 79.7747, 154.296, -20.8781, 0.81 ) }
    dend_36 { pt3dadd( 80.2976, 155.773, -20.0916, 0.22 ) }
    dend_36 { pt3dadd( 80.484, 156.366, -19.7755, 0.22 ) }
    dend_36 { pt3dadd( 80.6987, 157.128, -19.3532, 1.03 ) }
    dend_36 { pt3dadd( 80.8341, 157.754, -19.0153, 1.4 ) }
    dend_36 { pt3dadd( 81.0118, 158.586, -18.5928, 1.55 ) }
    dend_36 { pt3dadd( 81.4717, 160.474, -17.5624, 0.22 ) }
    dend_36 { pt3dadd( 81.7886, 161.647, -16.867, 1.18 ) }
    dend_36 { pt3dadd( 81.9508, 162.19, -16.5288, 1.62 ) }
    dend_36 { pt3dadd( 82.198, 162.893, -16.0409, 1.77 ) }
    dend_36 { pt3dadd( 82.7709, 164.203, -15.0417, 0.52 ) }
    dend_36 { pt3dadd( 83.4362, 165.264, -14.222, 1.03 ) }
    dend_36 { pt3dadd( 83.6916, 165.562, -14.0097, 1.03 ) }
    dend_36 { pt3dadd( 84.3145, 166.205, -13.6208, 0.44 ) }
    dend_36 { pt3dadd( 85.1558, 167.032, -13.1913, 0.74 ) }
    dend_36 { pt3dadd( 85.8606, 167.707, -12.9002, 0.66 ) }
    dend_36 { pt3dadd( 88.1113, 169.876, -12.1886, 0.22 ) }
    dend_36 { pt3dadd( 90.558, 172.233, -11.7479, 0.22 ) }
    dend_36 { pt3dadd( 91.468, 173.11, -11.6795, 0.96 ) }
    dend_36 { pt3dadd( 91.7276, 173.362, -11.695, 1.25 ) }
    dend_36 { pt3dadd( 92.1994, 173.829, -11.7946, 1.25 ) }
    dend_36 { pt3dadd( 93.1952, 174.806, -12.1566, 0.22 ) }
    dend_36 { pt3dadd( 94.4958, 176.07, -12.9794, 0.22 ) }
    dend_36 { pt3dadd( 95.0856, 176.637, -13.4563, 0.96 ) }
    dend_36 { pt3dadd( 95.8445, 177.338, -14.0677, 1.33 ) }
    dend_36 { pt3dadd( 96.1643, 177.621, -14.3387, 1.33 ) }
    dend_36 { pt3dadd( 96.697, 178.058, -14.8143, 0.52 ) }
    dend_36 { pt3dadd( 97.6692, 178.784, -15.8377, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 63/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 44.4604, 157.725, -29.8803, 0.29 ) }
    dend_33 { pt3dadd( 43.403, 158.506, -31.1083, 0.29 ) }
    dend_33 { pt3dadd( 42.7447, 159.0, -31.8514, 0.29 ) }
    dend_33 { pt3dadd( 42.1993, 159.411, -32.4869, 0.52 ) }
    dend_33 { pt3dadd( 41.6087, 159.863, -33.1926, 0.74 ) }
    dend_33 { pt3dadd( 40.9444, 160.372, -33.9865, 0.22 ) }
    dend_33 { pt3dadd( 39.8815, 161.185, -35.2565, 0.22 ) }
    dend_33 { pt3dadd( 39.3561, 161.602, -35.8816, 0.96 ) }
    dend_33 { pt3dadd( 38.749, 162.051, -36.6201, 1.18 ) }
    dend_33 { pt3dadd( 38.4326, 162.278, -36.986, 1.18 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 44.4604, 157.725, -29.8803, 0.29 ) }
    dend_32 { pt3dadd( 44.9361, 160.243, -30.2214, 0.29 ) }
    dend_32 { pt3dadd( 45.1424, 161.335, -30.3693, 1.18 ) }
    dend_32 { pt3dadd( 45.2016, 161.649, -30.4118, 1.18 ) }
    dend_32 { pt3dadd( 45.6245, 163.887, -30.715, 0.22 ) }
    dend_32 { pt3dadd( 45.8246, 164.946, -30.8585, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 79/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 38.6737, 89.5943, 41.7684, 0.37 ) }
    dend_30 { pt3dadd( 38.5252, 90.4849, 41.7441, 0.37 ) }
    dend_30 { pt3dadd( 38.4345, 91.0064, 41.7323, 0.44 ) }
    dend_30 { pt3dadd( 38.2798, 91.9065, 41.7272, 0.22 ) }
    dend_30 { pt3dadd( 38.1589, 92.397, 41.743, 0.37 ) }
    dend_30 { pt3dadd( 38.085, 92.6714, 41.7561, 0.37 ) }
    dend_30 { pt3dadd( 37.6592, 94.2301, 41.8411, 0.22 ) }
    dend_30 { pt3dadd( 37.5083, 94.7688, 41.8778, 0.44 ) }
    dend_30 { pt3dadd( 37.387, 95.1914, 41.9094, 0.44 ) }
    dend_30 { pt3dadd( 36.5318, 98.019, 42.1378, 0.22 ) }
    dend_30 { pt3dadd( 36.2239, 99.0528, 42.2264, 0.44 ) }
    dend_30 { pt3dadd( 36.1279, 99.388, 42.2556, 0.44 ) }
    dend_30 { pt3dadd( 35.4903, 101.708, 42.458, 0.22 ) }
    dend_30 { pt3dadd( 35.1503, 102.943, 42.5285, 0.66 ) }
    dend_30 { pt3dadd( 35.1095, 103.07, 42.5268, 0.96 ) }
    dend_30 { pt3dadd( 34.5887, 104.23, 42.4309, 0.22 ) }
    dend_30 { pt3dadd( 34.2795, 104.784, 42.3779, 0.66 ) }
    dend_30 { pt3dadd( 34.0805, 105.102, 42.3417, 0.96 ) }
    dend_30 { pt3dadd( 33.7062, 105.653, 42.2717, 0.96 ) }
    dend_30 { pt3dadd( 31.9676, 108.216, 41.96, 0.22 ) }
    dend_30 { pt3dadd( 29.7768, 111.501, 41.5748, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_30 { pt3dadd( 28.6471, 113.146, 41.3676, 0.22 ) }
    dend_30 { pt3dadd( 28.1606, 113.844, 41.2783, 0.96 ) }
    dend_30 { pt3dadd( 27.7285, 114.474, 41.2111, 1.62 ) }
    dend_30 { pt3dadd( 27.0915, 115.447, 41.1376, 1.47 ) }
    dend_30 { pt3dadd( 26.8558, 115.852, 41.1169, 1.4 ) }
    dend_30 { pt3dadd( 26.1832, 117.165, 41.0333, 0.37 ) }
    dend_30 { pt3dadd( 25.6831, 118.236, 40.9785, 0.37 ) }
    dend_30 { pt3dadd( 25.2866, 119.209, 40.9533, 1.11 ) }
    dend_30 { pt3dadd( 25.0622, 119.795, 40.9874, 1.55 ) }
    dend_30 { pt3dadd( 24.8476, 120.374, 41.0734, 1.77 ) }
    dend_30 { pt3dadd( 24.6711, 120.882, 41.1942, 1.77 ) }
    dend_30 { pt3dadd( 24.4667, 121.512, 41.3952, 0.81 ) }
    dend_30 { pt3dadd( 23.6847, 123.424, 42.1154, 0.22 ) }
    dend_30 { pt3dadd( 22.7389, 125.199, 42.8358, 0.22 ) }
    dend_30 { pt3dadd( 22.2823, 125.879, 43.1354, 0.96 ) }
    dend_30 { pt3dadd( 21.8679, 126.402, 43.3773, 1.33 ) }
    dend_30 { pt3dadd( 21.3798, 126.947, 43.6527, 1.77 ) }
    dend_30 { pt3dadd( 20.154, 128.132, 44.3288, 0.22 ) }
    dend_30 { pt3dadd( 19.1764, 128.935, 44.8509, 0.22 ) }
    dend_30 { pt3dadd( 18.3733, 129.568, 45.2359, 1.33 ) }
    dend_30 { pt3dadd( 18.0675, 129.815, 45.3866, 1.77 ) }
    dend_30 { pt3dadd( 17.6196, 130.181, 45.6611, 2.28 ) }
    dend_30 { pt3dadd( 17.3376, 130.408, 45.8742, 2.28 ) }
    dend_30 { pt3dadd( 16.6922, 131.006, 46.4656, 0.74 ) }
    dend_30 { pt3dadd( 16.1345, 131.648, 47.0352, 1.25 ) }
    dend_30 { pt3dadd( 15.7695, 132.221, 47.4157, 1.77 ) }
    dend_30 { pt3dadd( 15.0338, 133.564, 48.0884, 1.11 ) }
    dend_30 { pt3dadd( 14.735, 134.174, 48.3005, 1.11 ) }
    dend_30 { pt3dadd( 14.1488, 135.331, 48.4955, 0.22 ) }
    dend_30 { pt3dadd( 13.2783, 136.847, 48.5366, 0.22 ) }
    dend_30 { pt3dadd( 12.4044, 138.198, 48.4616, 1.77 ) }
    dend_30 { pt3dadd( 12.0906, 138.648, 48.4169, 2.06 ) }
    dend_30 { pt3dadd( 11.7701, 139.095, 48.3483, 2.28 ) }
    dend_30 { pt3dadd( 10.4351, 140.915, 48.0104, 0.22 ) }
    dend_30 { pt3dadd( 8.93807, 142.877, 47.6077, 0.22 ) }
    dend_30 { pt3dadd( 8.19344, 143.843, 47.3839, 0.22 ) }
    dend_30 { pt3dadd( 7.65159, 144.584, 47.1878, 0.66 ) }
    dend_30 { pt3dadd( 7.15704, 145.305, 46.9988, 0.88 ) }
    dend_30 { pt3dadd( 5.9451, 147.257, 46.4739, 0.44 ) }
    dend_30 { pt3dadd( 5.37035, 148.44, 46.145, 0.29 ) }
    dend_30 { pt3dadd( 5.09984, 149.155, 45.8881, 0.52 ) }
    dend_30 { pt3dadd( 4.83996, 149.958, 45.5661, 0.66 ) }
    dend_30 { pt3dadd( 1.3046, 158.545, 47.0323, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 43/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 38.6737, 89.5943, 41.7684, 0.29 ) }
    dend_29 { pt3dadd( 39.8864, 90.3789, 41.5162, 0.29 ) }
    dend_29 { pt3dadd( 41.4675, 91.4018, 41.1874, 0.29 ) }
    dend_29 { pt3dadd( 42.5049, 92.0729, 40.9716, 0.29 ) }
    dend_29 { pt3dadd( 42.996, 92.3907, 40.8695, 0.59 ) }
    dend_29 { pt3dadd( 51.6317, 96.0792, 38.313, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -73.5013, 27.159, -11.0579, 0.22 ) }
    dend_23 { pt3dadd( -73.2731, 28.095, -11.0745, 0.22 ) }
    dend_23 { pt3dadd( -73.1117, 28.8318, -10.8853, 0.22 ) }
    dend_23 { pt3dadd( -72.9882, 29.4932, -10.6517, 1.03 ) }
    dend_23 { pt3dadd( -72.9289, 29.9429, -10.47, 1.33 ) }
    dend_23 { pt3dadd( -72.8955, 30.3415, -10.304, 1.33 ) }
    dend_23 { pt3dadd( -72.8809, 30.7014, -10.1466, 1.33 ) }
    dend_23 { pt3dadd( -72.9962, 32.1838, -9.37147, 0.22 ) }
    dend_23 { pt3dadd( -73.0731, 32.5971, -9.12074, 0.22 ) }
    dend_23 { pt3dadd( -73.2537, 33.1956, -8.73019, 0.66 ) }
    dend_23 { pt3dadd( -73.405, 33.5758, -8.47754, 0.88 ) }
    dend_23 { pt3dadd( -73.6097, 34.0139, -8.17501, 0.88 ) }
    dend_23 { pt3dadd( -73.8749, 34.5294, -7.82218, 0.22 ) }
    dend_23 { pt3dadd( -74.1785, 35.0752, -7.45702, 0.66 ) }
    dend_23 { pt3dadd( -74.3951, 35.5148, -7.14238, 1.4 ) }
    dend_23 { pt3dadd( -74.5884, 35.9738, -6.77331, 1.4 ) }
    dend_23 { pt3dadd( -74.7946, 36.5361, -6.26881, 1.11 ) }
    dend_23 { pt3dadd( -74.9462, 36.9598, -5.87822, 0.96 ) }
    dend_23 { pt3dadd( -75.0099, 37.1923, -5.63067, 1.18 ) }
    dend_23 { pt3dadd( -75.09, 37.5837, -5.21193, 1.18 ) }
    dend_23 { pt3dadd( -75.2073, 38.3242, -4.41698, 0.74 ) }
    dend_23 { pt3dadd( -75.2565, 38.7028, -4.02235, 0.44 ) }
    dend_23 { pt3dadd( -75.3406, 39.3347, -3.39004, 0.66 ) }
    dend_23 { pt3dadd( -75.5283, 40.8332, -1.95444, 0.52 ) }
    dend_23 { pt3dadd( -75.5961, 41.4713, -1.39678, 0.22 ) }
    dend_23 { pt3dadd( -75.6523, 42.1046, -0.914605, 0.44 ) }
    dend_23 { pt3dadd( -75.6719, 42.5571, -0.612122, 0.44 ) }
    dend_23 { pt3dadd( -75.6962, 43.0322, -0.31435, 0.22 ) }
    dend_23 { pt3dadd( -75.7425, 43.782, 0.143544, 0.22 ) }
    dend_23 { pt3dadd( -75.8731, 44.7071, 0.636506, 0.22 ) }
    dend_23 { pt3dadd( -75.9793, 45.2669, 0.936178, 0.22 ) }
    dend_23 { pt3dadd( -76.2945, 46.6096, 1.63475, 0.22 ) }
    dend_23 { pt3dadd( -76.4404, 47.1538, 1.92023, 1.33 ) }
    dend_23 { pt3dadd( -76.6448, 47.8461, 2.28769, 1.62 ) }
    dend_23 { pt3dadd( -76.9228, 48.6363, 2.72579, 0.22 ) }
    dend_23 { pt3dadd( -77.1823, 49.3105, 3.09411, 0.22 ) }
    dend_23 { pt3dadd( -77.3548, 49.7797, 3.33079, 0.81 ) }
    dend_23 { pt3dadd( -77.484, 50.1723, 3.51032, 0.96 ) }
    dend_23 { pt3dadd( -77.5964, 50.6293, 3.71695, 0.96 ) }
    dend_23 { pt3dadd( -77.7442, 51.5035, 4.12245, 0.29 ) }
    dend_23 { pt3dadd( -77.7943, 52.3384, 4.54373, 0.22 ) }
    dend_23 { pt3dadd( -77.7475, 53.1516, 4.9415, 0.81 ) }
    dend_23 { pt3dadd( -77.6528, 53.742, 5.20983, 1.11 ) }
    dend_23 { pt3dadd( -77.5368, 54.1917, 5.40194, 1.11 ) }
    dend_23 { pt3dadd( -77.1968, 55.1791, 5.70465, 0.29 ) }
    dend_23 { pt3dadd( -76.9431, 55.7499, 5.78648, 0.22 ) }
    dend_23 { pt3dadd( -76.5775, 56.5282, 5.80233, 0.22 ) }
    dend_23 { pt3dadd( -76.4291, 56.8476, 5.77961, 0.29 ) }
    dend_23 { pt3dadd( -76.1002, 57.5933, 5.66806, 0.29 ) }
    dend_23 { pt3dadd( -75.5177, 59.0309, 5.36672, 0.22 ) }
    dend_23 { pt3dadd( -74.9631, 60.5578, 4.97184, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( -74.6225, 61.6302, 4.68325, 0.22 ) }
    dend_23 { pt3dadd( -74.5081, 62.0404, 4.57614, 0.52 ) }
    dend_23 { pt3dadd( -74.443, 62.3042, 4.51504, 0.52 ) }
    dend_23 { pt3dadd( -74.2126, 63.4112, 4.2938, 0.22 ) }
    dend_23 { pt3dadd( -74.1205, 63.963, 4.23951, 0.22 ) }
    dend_23 { pt3dadd( -74.0615, 64.4137, 4.24904, 0.44 ) }
    dend_23 { pt3dadd( -74.0124, 64.7718, 4.27134, 0.44 ) }
    dend_23 { pt3dadd( -73.9073, 65.5355, 4.3356, 0.15 ) }
    dend_23 { pt3dadd( -73.8218, 66.1222, 4.41725, 0.37 ) }
    dend_23 { pt3dadd( -73.615, 67.4891, 4.67949, 0.22 ) }
    dend_23 { pt3dadd( -73.4, 68.8884, 4.97702, 0.52 ) }
    dend_23 { pt3dadd( -73.2945, 69.557, 5.14182, 0.52 ) }
    dend_23 { pt3dadd( -73.2444, 69.8735, 5.23518, 0.52 ) }
    dend_23 { pt3dadd( -73.0854, 71.1193, 5.6516, 0.22 ) }
    dend_23 { pt3dadd( -73.0398, 71.6775, 5.8464, 0.22 ) }
    dend_23 { pt3dadd( -73.0241, 72.1059, 5.9912, 0.59 ) }
    dend_23 { pt3dadd( -73.0259, 72.8102, 6.17243, 0.88 ) }
    dend_23 { pt3dadd( -73.0245, 73.3149, 6.32587, 0.88 ) }
    dend_23 { pt3dadd( -73.0115, 74.2794, 6.59905, 0.22 ) }
    dend_23 { pt3dadd( -72.9865, 74.939, 6.77648, 0.37 ) }
    dend_23 { pt3dadd( -72.9661, 75.2064, 6.85898, 0.37 ) }
    dend_23 { pt3dadd( -72.8443, 76.0546, 7.12602, 0.15 ) }
    dend_23 { pt3dadd( -72.5899, 77.4597, 7.5182, 0.15 ) }
    dend_23 { pt3dadd( -72.3899, 78.4305, 7.76654, 1.11 ) }
    dend_23 { pt3dadd( -72.243, 79.0752, 7.92703, 1.77 ) }
    dend_23 { pt3dadd( -72.0513, 79.9713, 8.13815, 1.25 ) }
    dend_23 { pt3dadd( -71.7429, 81.8045, 8.49365, 0.22 ) }
    dend_23 { pt3dadd( -71.5689, 83.3379, 8.71818, 0.22 ) }
    dend_23 { pt3dadd( -71.5368, 83.9525, 8.76296, 0.44 ) }
    dend_23 { pt3dadd( -71.533, 84.2913, 8.77194, 0.44 ) }
    dend_23 { pt3dadd( -71.5506, 85.3929, 8.73855, 0.22 ) }
    dend_23 { pt3dadd( -71.5996, 86.8985, 8.63217, 0.22 ) }
    dend_23 { pt3dadd( -71.6316, 87.556, 8.57916, 0.37 ) }
    dend_23 { pt3dadd( -71.6569, 88.4356, 8.51345, 0.37 ) }
    dend_23 { pt3dadd( -71.6544, 89.5996, 8.46139, 0.37 ) }
    dend_23 { pt3dadd( -71.6307, 90.5389, 8.42093, 0.44 ) }
    dend_23 { pt3dadd( -71.5797, 91.2478, 8.38904, 0.96 ) }
    dend_23 { pt3dadd( -71.4953, 91.8416, 8.37698, 1.62 ) }
    dend_23 { pt3dadd( -71.4211, 92.2383, 8.37831, 1.77 ) }
    dend_23 { pt3dadd( -71.2693, 93.0121, 8.4228, 1.77 ) }
    dend_23 { pt3dadd( -71.6837, 100.234, 10.4601, 1.77 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -73.5013, 27.159, -11.0579, 1.25 ) }
    dend_22 { pt3dadd( -74.3177, 26.941, -11.5298, 1.25 ) }
    dend_22 { pt3dadd( -74.8861, 26.8653, -11.8452, 1.69 ) }
    dend_22 { pt3dadd( -75.3695, 26.8284, -12.094, 1.92 ) }
    dend_22 { pt3dadd( -76.4594, 26.8403, -12.5946, 1.55 ) }
    dend_22 { pt3dadd( -76.762, 26.8524, -12.7235, 1.77 ) }
    dend_22 { pt3dadd( -78.1842, 26.9321, -13.2911, 0.22 ) }
    dend_22 { pt3dadd( -79.0063, 27.0378, -13.5923, 0.44 ) }
    dend_22 { pt3dadd( -79.5048, 27.1243, -13.7519, 0.44 ) }
    dend_22 { pt3dadd( -81.7267, 27.5691, -14.3652, 0.22 ) }
    dend_22 { pt3dadd( -82.1746, 27.6632, -14.4669, 0.59 ) }
    dend_22 { pt3dadd( -82.67, 27.7693, -14.5678, 0.59 ) }
    dend_22 { pt3dadd( -85.1618, 28.3264, -15.0414, 0.22 ) }
    dend_22 { pt3dadd( -86.1592, 28.5574, -15.2447, 0.22 ) }
    dend_22 { pt3dadd( -86.8573, 28.729, -15.396, 1.03 ) }
    dend_22 { pt3dadd( -87.1516, 28.8045, -15.4649, 1.33 ) }
    dend_22 { pt3dadd( -87.4602, 28.8898, -15.5453, 1.33 ) }
    dend_22 { pt3dadd( -88.9759, 29.3283, -16.0335, 0.22 ) }
    dend_22 { pt3dadd( -90.3241, 29.7208, -16.5291, 0.22 ) }
    dend_22 { pt3dadd( -90.638, 29.8055, -16.6421, 0.74 ) }
    dend_22 { pt3dadd( -91.4709, 30.0163, -16.9152, 1.55 ) }
    dend_22 { pt3dadd( -92.0327, 30.1515, -17.0796, 2.06 ) }
    dend_22 { pt3dadd( -92.876, 30.3434, -17.2969, 1.99 ) }
    dend_22 { pt3dadd( -94.5683, 30.6903, -17.6582, 0.22 ) }
    dend_22 { pt3dadd( -97.0407, 31.1459, -18.1839, 0.22 ) }
    dend_22 { pt3dadd( -98.1817, 31.3415, -18.4216, 0.22 ) }
    dend_22 { pt3dadd( -98.7525, 31.4256, -18.5348, 0.96 ) }
    dend_22 { pt3dadd( -99.0638, 31.4615, -18.6009, 1.18 ) }
    dend_22 { pt3dadd( -99.6024, 31.5126, -18.7165, 1.18 ) }
    dend_22 { pt3dadd( -100.658, 31.5724, -19.0321, 0.22 ) }
    dend_22 { pt3dadd( -101.534, 31.5936, -19.3483, 0.22 ) }
    dend_22 { pt3dadd( -101.892, 31.5986, -19.4819, 1.18 ) }
    dend_22 { pt3dadd( -102.618, 31.6078, -19.7274, 1.47 ) }
    dend_22 { pt3dadd( -102.948, 31.6119, -19.8204, 1.47 ) }
    dend_22 { pt3dadd( -104.523, 31.6366, -20.2017, 0.22 ) }
    dend_22 { pt3dadd( -105.231, 31.6547, -20.3376, 0.74 ) }
    dend_22 { pt3dadd( -105.677, 31.6563, -20.4075, 0.74 ) }
    dend_22 { pt3dadd( -107.143, 31.6269, -20.5989, 0.22 ) }
    dend_22 { pt3dadd( -108.321, 31.5154, -20.6932, 1.62 ) }
    dend_22 { pt3dadd( -108.576, 31.4762, -20.7076, 2.21 ) }
    dend_22 { pt3dadd( -109.16, 31.3502, -20.725, 2.43 ) }
    dend_22 { pt3dadd( -111.86, 30.6405, -20.7689, 0.22 ) }
    dend_22 { pt3dadd( -112.916, 30.3165, -20.7453, 0.22 ) }
    dend_22 { pt3dadd( -115.233, 29.4864, -20.6046, 0.22 ) }
    dend_22 { pt3dadd( -115.754, 29.281, -20.5595, 1.33 ) }
    dend_22 { pt3dadd( -116.209, 29.088, -20.5102, 1.92 ) }
    dend_22 { pt3dadd( -116.576, 28.9192, -20.4625, 2.06 ) }
    dend_22 { pt3dadd( -118.545, 27.9135, -20.0824, 0.15 ) }
    dend_22 { pt3dadd( -119.946, 27.1279, -19.7659, 0.15 ) }
    dend_22 { pt3dadd( -120.378, 26.8702, -19.6534, 0.88 ) }
    dend_22 { pt3dadd( -120.919, 26.5344, -19.5024, 1.11 ) }
    dend_22 { pt3dadd( -121.269, 26.31, -19.4008, 1.11 ) }
    dend_22 { pt3dadd( -123.706, 24.6985, -18.7078, 0.22 ) }
    dend_22 { pt3dadd( -126.247, 22.9436, -18.0141, 0.22 ) }
    dend_22 { pt3dadd( -127.305, 22.1993, -17.7291, 1.18 ) }
    dend_22 { pt3dadd( -127.864, 21.8065, -17.5831, 1.92 ) }
    dend_22 { pt3dadd( -128.198, 21.5725, -17.4975, 1.92 ) }
    dend_22 { pt3dadd( -131.656, 19.1449, -16.6532, 0.22 ) }
    dend_22 { pt3dadd( -134.091, 17.4591, -16.14, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -134.495, 17.1898, -16.064, 0.96 ) }
    dend_22 { pt3dadd( -134.962, 16.8789, -15.9891, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 2/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -19.3444, 6.58953, -29.2348, 0.59 ) }
    dend_15 { pt3dadd( -19.4552, 7.92807, -29.6472, 0.59 ) }
    dend_15 { pt3dadd( -19.5794, 8.98686, -29.9884, 0.74 ) }
    dend_15 { pt3dadd( -19.7022, 9.84677, -30.2587, 1.18 ) }
    dend_15 { pt3dadd( -19.842, 10.7321, -30.5936, 1.33 ) }
    dend_15 { pt3dadd( -20.0245, 11.7228, -31.0215, 0.88 ) }
    dend_15 { pt3dadd( -20.1827, 12.4655, -31.3618, 0.52 ) }
    dend_15 { pt3dadd( -20.4484, 13.5016, -31.9268, 0.74 ) }
    dend_15 { pt3dadd( -20.6353, 14.0935, -32.2849, 0.88 ) }
    dend_15 { pt3dadd( -21.0703, 15.2316, -33.0304, 0.37 ) }
    dend_15 { pt3dadd( -21.3975, 15.9191, -33.4793, 0.52 ) }
    dend_15 { pt3dadd( -21.6665, 16.3886, -33.8034, 0.74 ) }
    dend_15 { pt3dadd( -22.1049, 17.0635, -34.2804, 0.74 ) }
    dend_15 { pt3dadd( -22.426, 17.4941, -34.5991, 0.29 ) }
    dend_15 { pt3dadd( -23.0503, 18.2473, -35.1503, 0.22 ) }
    dend_15 { pt3dadd( -23.7951, 19.0387, -35.6876, 0.22 ) }
    dend_15 { pt3dadd( -24.4942, 19.748, -36.1712, 0.96 ) }
    dend_15 { pt3dadd( -24.9001, 20.1359, -36.4444, 1.47 ) }
    dend_15 { pt3dadd( -25.3939, 20.5654, -36.7455, 1.69 ) }
    dend_15 { pt3dadd( -25.7408, 20.8466, -36.9608, 1.77 ) }
    dend_15 { pt3dadd( -26.2933, 21.2418, -37.2884, 1.77 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.402117, -26.5676, 1.14838, 1.33 ) }
    dend_13 { pt3dadd( -2.05663, -27.5346, 0.896003, 1.33 ) }
    dend_13 { pt3dadd( -3.55864, -28.556, 0.716416, 0.81 ) }
    dend_13 { pt3dadd( -4.74432, -29.4523, 0.690272, 1.11 ) }
    dend_13 { pt3dadd( -5.29011, -29.906, 0.72578, 1.11 ) }
    dend_13 { pt3dadd( -6.14222, -30.6724, 0.86627, 0.81 ) }
    dend_13 { pt3dadd( -7.13264, -31.6398, 1.12815, 1.03 ) }
    dend_13 { pt3dadd( -7.84947, -32.4433, 1.48639, 1.11 ) }
    dend_13 { pt3dadd( -8.75051, -33.6245, 2.10263, 1.33 ) }
    dend_13 { pt3dadd( -9.30515, -34.3745, 2.54439, 1.47 ) }
    dend_13 { pt3dadd( -10.0254, -35.2796, 3.12062, 1.33 ) }
    dend_13 { pt3dadd( -10.8441, -36.1796, 3.78123, 1.18 ) }
    dend_13 { pt3dadd( -11.837, -37.054, 4.54542, 0.96 ) }
    dend_13 { pt3dadd( -12.4568, -37.4836, 4.98577, 0.66 ) }
    dend_13 { pt3dadd( -13.215, -37.8924, 5.45097, 0.81 ) }
    dend_13 { pt3dadd( -14.2212, -38.3371, 6.0167, 0.66 ) }
    dend_13 { pt3dadd( -15.5924, -38.8576, 6.69303, 0.59 ) }
    dend_13 { pt3dadd( -16.3992, -39.138, 7.04439, 0.74 ) }
    dend_13 { pt3dadd( -17.9645, -39.7027, 7.68402, 1.18 ) }
    dend_13 { pt3dadd( -19.0171, -40.1057, 8.07304, 1.33 ) }
    dend_13 { pt3dadd( -20.2171, -40.6527, 8.44917, 1.47 ) }
    dend_13 { pt3dadd( -21.0778, -41.0978, 8.68396, 1.25 ) }
    dend_13 { pt3dadd( -21.9486, -41.5926, 8.88741, 1.25 ) }
    dend_13 { pt3dadd( -23.0324, -42.2509, 9.16153, 1.03 ) }
    dend_13 { pt3dadd( -24.2034, -42.9786, 9.46593, 0.29 ) }
    dend_13 { pt3dadd( -25.5606, -43.8731, 9.863, 0.29 ) }
    dend_13 { pt3dadd( -26.8534, -44.7803, 10.2763, 0.66 ) }
    dend_13 { pt3dadd( -27.7934, -45.5045, 10.6192, 1.03 ) }
    dend_13 { pt3dadd( -29.0605, -46.5565, 11.111, 1.18 ) }
    dend_13 { pt3dadd( -29.8153, -47.2191, 11.405, 1.62 ) }
    dend_13 { pt3dadd( -30.404, -47.7608, 11.6315, 1.62 ) }
    dend_13 { pt3dadd( -31.039, -48.3721, 11.8123, 1.33 ) }
    dend_13 { pt3dadd( -31.808, -49.1584, 11.911, 0.74 ) }
    dend_13 { pt3dadd( -32.6989, -50.104, 11.904, 0.37 ) }
    dend_13 { pt3dadd( -33.2248, -50.6495, 11.8295, 0.44 ) }
    dend_13 { pt3dadd( -33.8841, -51.3103, 11.6959, 0.22 ) }
    dend_13 { pt3dadd( -34.7579, -52.115, 11.4908, 1.11 ) }
    dend_13 { pt3dadd( -35.1963, -52.5131, 11.4022, 1.55 ) }
    dend_13 { pt3dadd( -35.674, -52.9636, 11.3317, 1.77 ) }
    dend_13 { pt3dadd( -36.3525, -53.6651, 11.2946, 1.55 ) }
    dend_13 { pt3dadd( -37.4163, -54.8429, 11.4393, 0.22 ) }
    dend_13 { pt3dadd( -37.9481, -55.4246, 11.6104, 0.22 ) }
    dend_13 { pt3dadd( -38.8842, -56.3145, 11.9737, 0.81 ) }
    dend_13 { pt3dadd( -39.387, -56.7704, 12.142, 0.96 ) }
    dend_13 { pt3dadd( -39.8323, -57.1751, 12.2656, 0.96 ) }
    dend_13 { pt3dadd( -40.7254, -58.0408, 12.4547, 0.22 ) }
    dend_13 { pt3dadd( -41.4231, -58.7145, 12.4988, 0.22 ) }
    dend_13 { pt3dadd( -42.5942, -59.8383, 12.3636, 0.22 ) }
    dend_13 { pt3dadd( -43.6426, -60.7392, 12.1381, 1.69 ) }
    dend_13 { pt3dadd( -44.2202, -61.2056, 11.985, 2.5 ) }
    dend_13 { pt3dadd( -44.8129, -61.665, 11.804, 2.28 ) }
    dend_13 { pt3dadd( -46.1345, -62.6514, 11.3944, 0.96 ) }
    dend_13 { pt3dadd( -47.2406, -63.4529, 11.1179, 0.66 ) }
    dend_13 { pt3dadd( -48.5426, -64.3379, 10.9432, 1.47 ) }
    dend_13 { pt3dadd( -48.8299, -64.5069, 10.9455, 1.99 ) }
    dend_13 { pt3dadd( -49.4128, -64.8337, 10.9941, 1.99 ) }
    dend_13 { pt3dadd( -50.8812, -65.6659, 11.2006, 1.11 ) }
    dend_13 { pt3dadd( -51.8088, -66.2186, 11.3719, 0.59 ) }
    dend_13 { pt3dadd( -52.7824, -66.8102, 11.5864, 1.11 ) }
    dend_13 { pt3dadd( -54.0448, -67.6201, 11.8757, 0.66 ) }
    dend_13 { pt3dadd( -55.3307, -68.4621, 12.1932, 0.37 ) }
    dend_13 { pt3dadd( -56.1292, -69.004, 12.4096, 0.29 ) }
    dend_13 { pt3dadd( -56.8839, -69.5553, 12.6135, 0.29 ) }
    dend_13 { pt3dadd( -67.2089, -76.2093, 14.3596, 0.29 ) }
    dend_13 { pt3dadd( -78.2908, -80.917, 17.3534, 0.29 ) }
    dend_13 { pt3dadd( -88.8389, -86.7121, 20.3677, 0.29 ) }
    dend_13 { pt3dadd( -99.9334, -91.2676, 23.5442, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.402117, -26.5676, 1.14838, 2.87 ) }
    dend_2 { pt3dadd( 0.233439, -28.3782, 1.03129, 2.87 ) }
    dend_2 { pt3dadd( 0.659472, -29.559, 0.937284, 3.02 ) }
    dend_2 { pt3dadd( 1.11384, -30.7998, 0.815115, 3.17 ) }
    dend_2 { pt3dadd( 1.89748, -32.9265, 0.566271, 2.58 ) }
    dend_2 { pt3dadd( 2.41946, -34.2987, 0.340614, 2.73 ) }
    dend_2 { pt3dadd( 3.12241, -36.0392, -0.010258, 2.73 ) }
    dend_2 { pt3dadd( 3.84665, -37.6896, -0.436767, 2.36 ) }
    dend_2 { pt3dadd( 4.69133, -39.4834, -0.954506, 2.36 ) }
    dend_2 { pt3dadd( 5.486, -41.1302, -1.45565, 2.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 6.43113, -43.1169, -2.05902, 1.77 ) }
    dend_2 { pt3dadd( 7.19713, -44.7685, -2.56402, 1.77 ) }
    dend_2 { pt3dadd( 7.66033, -45.7454, -2.87306, 1.84 ) }
    dend_2 { pt3dadd( 8.11195, -46.6936, -3.17518, 2.06 ) }
    dend_2 { pt3dadd( 8.65992, -47.8475, -3.52133, 2.21 ) }
    dend_2 { pt3dadd( 9.14562, -48.9321, -3.77989, 2.28 ) }
    dend_2 { pt3dadd( 9.57323, -50.1411, -3.88756, 2.95 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 58.0241, 52.4128, 13.5966, 0.52 ) }
    dend_42 { pt3dadd( 57.0935, 55.2663, 17.5582, 0.52 ) }
    dend_42 { pt3dadd( 56.63, 56.6568, 19.3194, 0.29 ) }
    dend_42 { pt3dadd( 56.3986, 57.3388, 20.0921, 0.74 ) }
    dend_42 { pt3dadd( 56.0506, 58.324, 21.1524, 1.03 ) }
    dend_42 { pt3dadd( 55.7894, 59.1054, 21.9485, 1.03 ) }
    dend_42 { pt3dadd( 55.292, 60.741, 23.5514, 0.29 ) }
    dend_42 { pt3dadd( 55.1957, 61.2243, 24.0706, 0.29 ) }
    dend_42 { pt3dadd( 55.1546, 61.8062, 24.6626, 0.52 ) }
    dend_42 { pt3dadd( 55.2113, 62.461, 25.2963, 0.52 ) }
    dend_42 { pt3dadd( 55.3758, 63.0152, 25.805, 0.37 ) }
    dend_42 { pt3dadd( 55.6642, 63.5214, 26.2693, 0.52 ) }
    dend_42 { pt3dadd( 56.5974, 64.4864, 27.2102, 0.29 ) }
    dend_42 { pt3dadd( 57.2914, 65.0923, 27.8421, 0.52 ) }
    dend_42 { pt3dadd( 58.3344, 65.8524, 28.7093, 1.11 ) }
    dend_42 { pt3dadd( 59.3759, 66.4938, 29.4812, 0.66 ) }
    dend_42 { pt3dadd( 59.9592, 66.7955, 29.893, 0.96 ) }
    dend_42 { pt3dadd( 60.5913, 67.059, 30.302, 1.47 ) }
    dend_42 { pt3dadd( 61.0391, 73.2042, 38.8163, 1.47 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 26/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 58.0241, 52.4128, 13.5966, 0.59 ) }
    dend_41 { pt3dadd( 58.6563, 52.8494, 14.4038, 0.59 ) }
    dend_41 { pt3dadd( 59.4669, 53.4519, 15.4117, 1.11 ) }
    dend_41 { pt3dadd( 59.8548, 53.7515, 15.8845, 1.55 ) }
    dend_41 { pt3dadd( 60.4114, 54.2035, 16.5387, 2.14 ) }
    dend_41 { pt3dadd( 61.8321, 55.4394, 18.1736, 0.22 ) }
    dend_41 { pt3dadd( 62.2922, 55.8845, 18.6732, 0.22 ) }
    dend_41 { pt3dadd( 62.581, 56.19, 18.9779, 0.44 ) }
    dend_41 { pt3dadd( 62.8144, 56.4617, 19.2179, 0.44 ) }
    dend_41 { pt3dadd( 63.1747, 56.9209, 19.5992, 0.22 ) }
    dend_41 { pt3dadd( 63.8545, 58.0535, 20.4585, 0.22 ) }
    dend_41 { pt3dadd( 64.4611, 59.3366, 21.3858, 1.18 ) }
    dend_41 { pt3dadd( 64.7356, 60.0099, 21.8895, 1.77 ) }
    dend_41 { pt3dadd( 64.9989, 60.7694, 22.4591, 2.28 ) }
    dend_41 { pt3dadd( 65.1724, 61.3865, 22.9216, 2.28 ) }
    dend_41 { pt3dadd( 65.6323, 63.3729, 24.4448, 0.22 ) }
    dend_41 { pt3dadd( 65.728, 63.9848, 24.9161, 0.22 ) }
    dend_41 { pt3dadd( 65.7809, 64.6006, 25.4104, 1.47 ) }
    dend_41 { pt3dadd( 65.7927, 64.8909, 25.6242, 1.92 ) }
    dend_41 { pt3dadd( 65.8025, 65.2778, 25.8891, 1.92 ) }
    dend_41 { pt3dadd( 70.3404, 72.6608, 30.6009, 1.92 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 47/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -26.2933, 21.2418, -37.2884, 0.29 ) }
    dend_17 { pt3dadd( -27.1647, 23.6419, -39.0457, 0.29 ) }
    dend_17 { pt3dadd( -27.4641, 24.4225, -39.6364, 0.22 ) }
    dend_17 { pt3dadd( -27.5524, 24.3876, -38.9012, 0.74 ) }
    dend_17 { pt3dadd( -27.7485, 24.6133, -38.5062, 0.88 ) }
    dend_17 { pt3dadd( -28.3485, 25.282, -37.5769, 0.88 ) }
    dend_17 { pt3dadd( -29.0041, 26.005, -36.7147, 0.29 ) }
    dend_17 { pt3dadd( -29.6114, 26.6206, -35.9204, 0.29 ) }
    dend_17 { pt3dadd( -33.8273, 30.5922, -30.0201, 0.29 ) }
    dend_17 { pt3dadd( -34.6703, 31.3446, -28.7332, 0.29 ) }
    dend_17 { pt3dadd( -35.2847, 31.8524, -27.719, 0.96 ) }
    dend_17 { pt3dadd( -35.6789, 32.1458, -27.0018, 1.47 ) }
    dend_17 { pt3dadd( -36.1355, 32.4448, -26.0784, 1.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -26.2933, 21.2418, -37.2884, 0.22 ) }
    dend_16 { pt3dadd( -28.6866, 21.0077, -37.7773, 0.22 ) }
    dend_16 { pt3dadd( -30.1153, 20.8614, -38.0326, 0.22 ) }
    dend_16 { pt3dadd( -32.3912, 20.6336, -38.382, 0.22 ) }
    dend_16 { pt3dadd( -33.8212, 20.4843, -38.5146, 1.18 ) }
    dend_16 { pt3dadd( -34.2404, 20.4406, -38.5414, 1.4 ) }
    dend_16 { pt3dadd( -35.1187, 20.3459, -38.5879, 1.4 ) }
    dend_16 { pt3dadd( -36.4823, 20.1725, -38.6114, 0.81 ) }
    dend_16 { pt3dadd( -38.0719, 20.0027, -38.6054, 0.22 ) }
    dend_16 { pt3dadd( -39.9149, 19.8075, -38.6886, 0.22 ) }
    dend_16 { pt3dadd( -40.6755, 19.7344, -38.7654, 1.4 ) }
    dend_16 { pt3dadd( -41.2473, 19.6666, -38.9017, 1.77 ) }
    dend_16 { pt3dadd( -41.8553, 19.5739, -39.1393, 1.77 ) }
    dend_16 { pt3dadd( -42.8065, 19.4076, -39.6345, 1.25 ) }
    dend_16 { pt3dadd( -44.8207, 18.9714, -40.9504, 0.22 ) }
    dend_16 { pt3dadd( -45.8352, 18.6888, -41.6839, 0.22 ) }
    dend_16 { pt3dadd( -47.7305, 18.0929, -43.0065, 0.22 ) }
    dend_16 { pt3dadd( -48.8361, 17.752, -43.726, 1.25 ) }
    dend_16 { pt3dadd( -49.1938, 17.6407, -43.9431, 1.55 ) }
    dend_16 { pt3dadd( -50.107, 17.3617, -44.4523, 1.55 ) }
    dend_16 { pt3dadd( -51.738, 16.9167, -45.247, 1.03 ) }
    dend_16 { pt3dadd( -53.0142, 16.6127, -45.7842, 0.22 ) }
    dend_16 { pt3dadd( -54.7869, 16.2985, -46.4339, 1.03 ) }
    dend_16 { pt3dadd( -55.6266, 16.1985, -46.7242, 1.33 ) }
    dend_16 { pt3dadd( -57.4056, 16.0757, -47.3525, 0.22 ) }
    dend_16 { pt3dadd( -58.5366, 16.0527, -47.7488, 0.22 ) }
    dend_16 { pt3dadd( -59.9663, 16.0854, -48.2884, 1.25 ) }
    dend_16 { pt3dadd( -60.8461, 16.1134, -48.6379, 1.4 ) }
    dend_16 { pt3dadd( -62.0136, 16.169, -49.1044, 0.22 ) }
    dend_16 { pt3dadd( -63.8717, 16.2933, -49.8272, 0.22 ) }
    dend_16 { pt3dadd( -64.8337, 16.3673, -50.1914, 1.03 ) }
    dend_16 { pt3dadd( -65.6088, 16.3971, -50.5043, 1.25 ) }
    dend_16 { pt3dadd( -66.4577, 16.3951, -50.8629, 1.25 ) }
    dend_16 { pt3dadd( -68.6879, 16.2712, -51.8605, 0.22 ) }
    dend_16 { pt3dadd( -69.4388, 16.169, -52.2827, 0.88 ) }
    dend_16 { pt3dadd( -69.9745, 16.0692, -52.6212, 0.88 ) }
    dend_16 { pt3dadd( -71.8791, 15.6371, -53.8922, 0.22 ) }
    dend_16 { pt3dadd( -72.3847, 15.4987, -54.2426, 1.03 ) }
    dend_16 { pt3dadd( -73.4967, 15.1321, -55.0712, 1.18 ) }
    dend_16 { pt3dadd( -76.225, 14.1467, -57.1909, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_16 { pt3dadd( -77.2246, 13.7883, -57.9773, 0.22 ) }
    dend_16 { pt3dadd( -78.227, 13.4428, -58.7612, 0.96 ) }
    dend_16 { pt3dadd( -78.9228, 13.2235, -59.2909, 1.18 ) }
    dend_16 { pt3dadd( -80.561, 12.7621, -60.5475, 0.15 ) }
    dend_16 { pt3dadd( -82.2785, 12.3577, -61.82, 0.15 ) }
    dend_16 { pt3dadd( -82.9403, 12.2445, -62.258, 0.15 ) }
    dend_16 { pt3dadd( -83.9238, 12.1285, -62.8755, 1.11 ) }
    dend_16 { pt3dadd( -84.7689, 12.0911, -63.3539, 1.33 ) }
    dend_16 { pt3dadd( -85.8139, 12.107, -63.9051, 1.33 ) }
    dend_16 { pt3dadd( -86.2513, 12.1356, -64.1155, 1.33 ) }
    dend_16 { pt3dadd( -89.1597, 12.3887, -65.4505, 0.22 ) }
    dend_16 { pt3dadd( -90.7897, 12.5455, -66.1519, 0.22 ) }
    dend_16 { pt3dadd( -91.9809, 12.6717, -66.6666, 0.81 ) }
    dend_16 { pt3dadd( -93.1476, 12.8129, -67.2293, 0.96 ) }
    dend_16 { pt3dadd( -93.8105, 12.9016, -67.5643, 0.44 ) }
    dend_16 { pt3dadd( -96.0677, 13.2521, -68.7483, 0.22 ) }
    dend_16 { pt3dadd( -96.9209, 13.4142, -69.2388, 0.59 ) }
    dend_16 { pt3dadd( -97.8773, 13.5963, -69.8157, 0.59 ) }
    dend_16 { pt3dadd( -99.9764, 13.985, -71.1025, 0.22 ) }
    dend_16 { pt3dadd( -102.412, 14.4462, -72.5714, 0.22 ) }
    dend_16 { pt3dadd( -104.296, 14.8134, -73.746, 0.22 ) }
    dend_16 { pt3dadd( -105.642, 15.086, -74.603, 0.96 ) }
    dend_16 { pt3dadd( -106.638, 15.2817, -75.2247, 0.96 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 23/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.57323, -50.1411, -3.88756, 2.06 ) }
    dend_10 { pt3dadd( 10.2328, -50.4888, -3.28152, 2.06 ) }
    dend_10 { pt3dadd( 11.185, -50.9364, -2.4237, 0.81 ) }
    dend_10 { pt3dadd( 12.0874, -51.3219, -1.6504, 1.03 ) }
    dend_10 { pt3dadd( 13.3391, -51.7979, -0.661269, 0.96 ) }
    dend_10 { pt3dadd( 13.9392, -51.9949, -0.221566, 0.66 ) }
    dend_10 { pt3dadd( 15.0069, -52.3077, 0.488705, 0.66 ) }
    dend_10 { pt3dadd( 15.7546, -52.4687, 0.943534, 0.81 ) }
    dend_10 { pt3dadd( 16.2275, -52.5464, 1.18245, 0.81 ) }
    dend_10 { pt3dadd( 16.9944, -52.6633, 1.43608, 0.81 ) }
    dend_10 { pt3dadd( 17.7848, -52.8059, 1.55755, 0.44 ) }
    dend_10 { pt3dadd( 18.4313, -52.9517, 1.57936, 0.44 ) }
    dend_10 { pt3dadd( 18.991, -53.0899, 1.54659, 0.96 ) }
    dend_10 { pt3dadd( 19.7486, -53.3057, 1.48313, 1.4 ) }
    dend_10 { pt3dadd( 20.3501, -53.509, 1.41602, 1.62 ) }
    dend_10 { pt3dadd( 20.9742, -53.7746, 1.3198, 1.62 ) }
    dend_10 { pt3dadd( 21.5711, -54.0867, 1.19832, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 40/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 9.57323, -50.1411, -3.88756, 1.33 ) }
    dend_3 { pt3dadd( 8.84644, -51.8986, -4.00971, 1.33 ) }
    dend_3 { pt3dadd( 8.3885, -53.127, -4.08148, 1.18 ) }
    dend_3 { pt3dadd( 7.82173, -54.7883, -4.12466, 1.03 ) }
    dend_3 { pt3dadd( 7.50762, -55.8317, -4.12658, 1.03 ) }
    dend_3 { pt3dadd( 7.33592, -56.5263, -4.12068, 1.47 ) }
    dend_3 { pt3dadd( 7.20851, -57.1705, -4.11358, 1.47 ) }
    dend_3 { pt3dadd( 7.14437, -57.9563, -4.10024, 1.18 ) }
    dend_3 { pt3dadd( 7.18268, -58.739, -4.11147, 1.03 ) }
    dend_3 { pt3dadd( 7.32768, -59.6487, -4.18704, 0.74 ) }
    dend_3 { pt3dadd( 7.53834, -60.6031, -4.32512, 0.88 ) }
    dend_3 { pt3dadd( 7.73932, -61.3342, -4.48265, 1.11 ) }
    dend_3 { pt3dadd( 8.01889, -62.199, -4.74085, 1.4 ) }
    dend_3 { pt3dadd( 8.39782, -63.1913, -5.12335, 1.62 ) }
    dend_3 { pt3dadd( 8.84178, -64.1884, -5.60415, 1.69 ) }
    dend_3 { pt3dadd( 9.11186, -64.7507, -5.9065, 1.25 ) }
    dend_3 { pt3dadd( 9.5228, -65.5992, -6.38638, 0.88 ) }
    dend_3 { pt3dadd( 9.87753, -66.3591, -6.81985, 0.52 ) }
    dend_3 { pt3dadd( 10.0995, -66.8715, -7.09821, 0.66 ) }
    dend_3 { pt3dadd( 10.4645, -67.7887, -7.57814, 1.11 ) }
    dend_3 { pt3dadd( 10.7353, -68.5275, -7.93875, 1.55 ) }
    dend_3 { pt3dadd( 10.932, -69.1274, -8.21182, 2.14 ) }
    dend_3 { pt3dadd( 11.1106, -69.7509, -8.47105, 2.14 ) }
    dend_3 { pt3dadd( 11.306, -70.4853, -8.74124, 2.28 ) }
    dend_3 { pt3dadd( 11.5447, -71.4142, -9.05464, 2.06 ) }
    dend_3 { pt3dadd( 11.8726, -72.6953, -9.47161, 1.92 ) }
    dend_3 { pt3dadd( 12.1179, -73.5586, -9.76044, 1.92 ) }
    dend_3 { pt3dadd( 12.3879, -74.407, -10.0449, 1.77 ) }
    dend_3 { pt3dadd( 12.6117, -75.0345, -10.2553, 2.21 ) }
    dend_3 { pt3dadd( 12.8784, -75.7577, -10.4954, 2.5 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -36.1355, 32.4448, -26.0784, 0.59 ) }
    dend_19 { pt3dadd( -36.2395, 33.801, -28.8772, 0.59 ) }
    dend_19 { pt3dadd( -36.3004, 34.3046, -29.8001, 0.29 ) }
    dend_19 { pt3dadd( -36.3485, 34.5696, -30.2078, 0.29 ) }
    dend_19 { pt3dadd( -36.449, 35.0147, -30.8176, 0.52 ) }
    dend_19 { pt3dadd( -36.539, 35.3692, -31.2689, 0.52 ) }
    dend_19 { pt3dadd( -36.6846, 35.8734, -31.853, 0.44 ) }
    dend_19 { pt3dadd( -36.9132, 36.4799, -32.3539, 0.22 ) }
    dend_19 { pt3dadd( -37.2402, 37.3453, -33.0139, 0.22 ) }
    dend_19 { pt3dadd( -37.3525, 37.6442, -33.2376, 0.74 ) }
    dend_19 { pt3dadd( -37.5925, 38.2769, -33.7092, 0.74 ) }
    dend_19 { pt3dadd( -37.8555, 38.9077, -34.163, 0.22 ) }
    dend_19 { pt3dadd( -38.0191, 39.2807, -34.4151, 0.22 ) }
    dend_19 { pt3dadd( -38.1576, 39.6106, -34.6431, 0.81 ) }
    dend_19 { pt3dadd( -38.3809, 40.167, -35.0661, 1.03 ) }
    dend_19 { pt3dadd( -38.552, 40.6339, -35.4445, 1.4 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 86/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -36.1355, 32.4448, -26.0784, 0.22 ) }
    dend_18 { pt3dadd( -37.5046, 33.3924, -26.4447, 0.22 ) }
    dend_18 { pt3dadd( -39.4243, 34.8793, -27.0944, 0.22 ) }
    dend_18 { pt3dadd( -40.1168, 35.4681, -27.3769, 0.22 ) }
    dend_18 { pt3dadd( -40.5009, 35.8226, -27.5451, 0.52 ) }
    dend_18 { pt3dadd( -40.956, 36.2632, -27.7486, 0.52 ) }
    dend_18 { pt3dadd( -41.4444, 36.7507, -27.9666, 0.29 ) }
    dend_18 { pt3dadd( -42.4631, 37.945, -28.4903, 0.74 ) }
    dend_18 { pt3dadd( -43.0435, 38.6974, -28.8599, 0.88 ) }
    dend_18 { pt3dadd( -43.5648, 39.3622, -29.1661, 0.88 ) }
    dend_18 { pt3dadd( -44.1085, 40.0288, -29.4452, 0.29 ) }
    dend_18 { pt3dadd( -44.6321, 40.6662, -29.6908, 1.25 ) }
    dend_18 { pt3dadd( -45.2562, 41.4252, -29.9688, 1.25 ) }
    dend_18 { pt3dadd( -46.6586, 43.0966, -30.5321, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_18 { pt3dadd( -48.5618, 45.3301, -31.2654, 0.22 ) }
    dend_18 { pt3dadd( -49.4697, 46.382, -31.6081, 0.81 ) }
    dend_18 { pt3dadd( -49.7928, 46.7571, -31.7298, 1.18 ) }
    dend_18 { pt3dadd( -50.0819, 47.0908, -31.8404, 1.18 ) }
    dend_18 { pt3dadd( -50.6642, 47.7453, -32.0372, 0.22 ) }
    dend_18 { pt3dadd( -51.1593, 48.3163, -32.2021, 0.22 ) }
    dend_18 { pt3dadd( -51.4722, 48.6954, -32.3455, 0.66 ) }
    dend_18 { pt3dadd( -51.8386, 49.1486, -32.5531, 0.66 ) }
    dend_18 { pt3dadd( -52.2574, 49.6242, -32.7954, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 9/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 21.5711, -54.0867, 1.19832, 0.66 ) }
    dend_12 { pt3dadd( 22.9074, -54.0885, 0.312902, 0.66 ) }
    dend_12 { pt3dadd( 23.8883, -54.1244, -0.377848, 0.52 ) }
    dend_12 { pt3dadd( 24.7788, -54.1807, -1.07711, 0.52 ) }
    dend_12 { pt3dadd( 26.1122, -54.2625, -2.20396, 0.88 ) }
    dend_12 { pt3dadd( 26.8378, -54.29, -2.83647, 0.96 ) }
    dend_12 { pt3dadd( 27.9905, -54.3033, -3.8301, 1.03 ) }
    dend_12 { pt3dadd( 28.8261, -54.304, -4.53991, 1.11 ) }
    dend_12 { pt3dadd( 29.8922, -54.2931, -5.46575, 0.74 ) }
    dend_12 { pt3dadd( 30.3681, -54.2735, -5.90784, 0.59 ) }
    dend_12 { pt3dadd( 31.0263, -54.2156, -6.54168, 0.52 ) }
    dend_12 { pt3dadd( 31.6073, -54.1288, -7.11456, 0.74 ) }
    dend_12 { pt3dadd( 32.7012, -53.9558, -8.14946, 0.74 ) }
    dend_12 { pt3dadd( 33.8113, -53.8087, -9.14001, 0.52 ) }
    dend_12 { pt3dadd( 35.1562, -53.6859, -10.306, 0.66 ) }
    dend_12 { pt3dadd( 35.9664, -53.6328, -10.9888, 0.81 ) }
    dend_12 { pt3dadd( 36.8173, -53.594, -11.7007, 0.66 ) }
    dend_12 { pt3dadd( 37.974, -53.5436, -12.6269, 0.52 ) }
    dend_12 { pt3dadd( 39.184, -53.4968, -13.5684, 1.4 ) }
    dend_12 { pt3dadd( 39.9673, -53.4687, -14.1491, 2.06 ) }
    dend_12 { pt3dadd( 40.8727, -53.442, -14.7521, 1.92 ) }
    dend_12 { pt3dadd( 41.7965, -53.4271, -15.3252, 1.77 ) }
    dend_12 { pt3dadd( 43.1124, -53.4135, -16.1225, 1.62 ) }
    dend_12 { pt3dadd( 44.477, -53.3748, -16.922, 0.88 ) }
    dend_12 { pt3dadd( 45.6036, -53.338, -17.5612, 0.22 ) }
    dend_12 { pt3dadd( 47.1426, -53.3285, -18.4042, 0.22 ) }
    dend_12 { pt3dadd( 48.1183, -53.3549, -18.9042, 1.03 ) }
    dend_12 { pt3dadd( 48.7073, -53.3791, -19.1588, 1.55 ) }
    dend_12 { pt3dadd( 49.2095, -53.4047, -19.3215, 1.84 ) }
    dend_12 { pt3dadd( 50.2166, -53.4558, -19.5239, 1.25 ) }
    dend_12 { pt3dadd( 52.1508, -53.5732, -19.8756, 0.22 ) }
    dend_12 { pt3dadd( 53.3424, -53.6682, -20.079, 0.22 ) }
    dend_12 { pt3dadd( 54.3734, -53.7736, -20.262, 1.55 ) }
    dend_12 { pt3dadd( 55.4373, -53.8986, -20.4441, 2.06 ) }
    dend_12 { pt3dadd( 56.1122, -53.9917, -20.5676, 2.06 ) }
    dend_12 { pt3dadd( 58.2795, -54.3602, -20.9842, 0.52 ) }
    dend_12 { pt3dadd( 59.905, -54.6816, -21.3315, 0.22 ) }
    dend_12 { pt3dadd( 61.015, -54.923, -21.6097, 1.11 ) }
    dend_12 { pt3dadd( 61.4165, -55.0133, -21.7164, 1.4 ) }
    dend_12 { pt3dadd( 62.0887, -55.1669, -21.8998, 1.4 ) }
    dend_12 { pt3dadd( 63.6555, -55.5035, -22.2638, 0.22 ) }
    dend_12 { pt3dadd( 64.9888, -55.7599, -22.5344, 0.22 ) }
    dend_12 { pt3dadd( 65.8923, -55.9071, -22.7508, 0.74 ) }
    dend_12 { pt3dadd( 66.6873, -56.0159, -22.9527, 0.96 ) }
    dend_12 { pt3dadd( 67.5785, -56.1162, -23.1933, 0.37 ) }
    dend_12 { pt3dadd( 68.9593, -56.1992, -23.5731, 0.15 ) }
    dend_12 { pt3dadd( 70.85, -56.2115, -24.1095, 1.47 ) }
    dend_12 { pt3dadd( 71.5576, -56.1909, -24.3211, 1.77 ) }
    dend_12 { pt3dadd( 72.1402, -56.1608, -24.5107, 1.62 ) }
    dend_12 { pt3dadd( 72.99, -56.0898, -24.7818, 0.74 ) }
    dend_12 { pt3dadd( 75.2556, -55.8368, -25.4197, 0.22 ) }
    dend_12 { pt3dadd( 76.2884, -55.7006, -25.6796, 1.18 ) }
    dend_12 { pt3dadd( 76.9915, -55.6018, -25.8262, 1.69 ) }
    dend_12 { pt3dadd( 77.7343, -55.513, -25.9685, 1.77 ) }
    dend_12 { pt3dadd( 79.778, -55.3174, -26.327, 0.22 ) }
    dend_12 { pt3dadd( 81.7181, -55.1927, -26.6243, 0.22 ) }
    dend_12 { pt3dadd( 82.4169, -55.1699, -26.7019, 0.52 ) }
    dend_12 { pt3dadd( 82.849, -55.1658, -26.7313, 0.52 ) }
    dend_12 { pt3dadd( 84.9787, -55.2159, -26.9067, 0.22 ) }
    dend_12 { pt3dadd( 85.9949, -55.2868, -27.0323, 1.11 ) }
    dend_12 { pt3dadd( 86.5395, -55.3469, -27.133, 1.62 ) }
    dend_12 { pt3dadd( 87.0643, -55.411, -27.2528, 1.84 ) }
    dend_12 { pt3dadd( 87.5589, -55.4705, -27.3774, 1.55 ) }
    dend_12 { pt3dadd( 90.299, -55.7734, -28.1602, 0.15 ) }
    dend_12 { pt3dadd( 93.0015, -56.0583, -28.9638, 0.15 ) }
    dend_12 { pt3dadd( 94.097, -56.1748, -29.3044, 1.03 ) }
    dend_12 { pt3dadd( 94.6824, -56.2289, -29.4932, 1.33 ) }
    dend_12 { pt3dadd( 95.4101, -56.2693, -29.7103, 1.33 ) }
    dend_12 { pt3dadd( 97.2669, -56.3098, -30.1809, 0.22 ) }
    dend_12 { pt3dadd( 98.6057, -56.289, -30.4374, 1.18 ) }
    dend_12 { pt3dadd( 99.3079, -56.2664, -30.5615, 1.77 ) }
    dend_12 { pt3dadd( 100.259, -56.2424, -30.7205, 1.77 ) }
    dend_12 { pt3dadd( 103.174, -56.2145, -31.1841, 0.22 ) }
    dend_12 { pt3dadd( 104.087, -56.2354, -31.3319, 0.74 ) }
    dend_12 { pt3dadd( 104.551, -56.2624, -31.4205, 0.74 ) }
    dend_12 { pt3dadd( 107.698, -56.5634, -32.1323, 0.22 ) }
    dend_12 { pt3dadd( 108.774, -56.7097, -32.3955, 0.81 ) }
    dend_12 { pt3dadd( 109.485, -56.8541, -32.5878, 1.03 ) }
    dend_12 { pt3dadd( 111.124, -57.3415, -33.134, 0.22 ) }
    dend_12 { pt3dadd( 112.497, -57.8029, -33.6525, 0.22 ) }
    dend_12 { pt3dadd( 113.19, -58.0536, -33.932, 1.18 ) }
    dend_12 { pt3dadd( 113.728, -58.2509, -34.1751, 1.4 ) }
    dend_12 { pt3dadd( 114.124, -58.3833, -34.3682, 1.4 ) }
    dend_12 { pt3dadd( 116.503, -59.0971, -35.5587, 0.22 ) }
    dend_12 { pt3dadd( 117.563, -59.392, -36.1124, 0.81 ) }
    dend_12 { pt3dadd( 118.22, -59.5638, -36.4784, 0.81 ) }
    dend_12 { pt3dadd( 120.2, -60.0337, -37.677, 0.22 ) }
    dend_12 { pt3dadd( 121.418, -60.2951, -38.4792, 0.96 ) }
    dend_12 { pt3dadd( 122.211, -60.4188, -39.0383, 1.25 ) }
    dend_12 { pt3dadd( 123.917, -60.556, -40.3942, 0.22 ) }
    dend_12 { pt3dadd( 125.098, -60.5875, -41.4453, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( 125.62, -60.5719, -41.9572, 0.66 ) }
    dend_12 { pt3dadd( 126.202, -60.5104, -42.5818, 0.66 ) }
    dend_12 { pt3dadd( 127.738, -60.2545, -44.176, 0.29 ) }
    dend_12 { pt3dadd( 128.955, -60.0052, -45.4071, 0.74 ) }
    dend_12 { pt3dadd( 129.798, -59.8047, -46.2123, 1.33 ) }
    dend_12 { pt3dadd( 130.532, -59.644, -46.8504, 1.33 ) }
    dend_12 { pt3dadd( 133.027, -59.2451, -48.8295, 0.22 ) }
    dend_12 { pt3dadd( 134.616, -59.2388, -49.7218, 0.22 ) }
    dend_12 { pt3dadd( 135.528, -59.3087, -50.1121, 0.74 ) }
    dend_12 { pt3dadd( 136.059, -59.3614, -50.3038, 0.74 ) }
    dend_12 { pt3dadd( 137.095, -59.4662, -50.6786, 0.59 ) }
    dend_12 { pt3dadd( 139.001, -59.6921, -51.3235, 0.15 ) }
    dend_12 { pt3dadd( 145.303, -60.5874, -53.2507, 0.15 ) }
    dend_12 { pt3dadd( 147.255, -60.8959, -53.865, 0.66 ) }
    dend_12 { pt3dadd( 148.156, -61.0427, -54.1487, 0.96 ) }
    dend_12 { pt3dadd( 150.442, -61.4153, -54.8947, 0.88 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 21.5711, -54.0867, 1.19832, 1.03 ) }
    dend_11 { pt3dadd( 22.2494, -55.0668, 1.4168, 1.03 ) }
    dend_11 { pt3dadd( 22.8282, -55.8731, 1.53455, 0.74 ) }
    dend_11 { pt3dadd( 23.5392, -56.7937, 1.57999, 0.96 ) }
    dend_11 { pt3dadd( 24.148, -57.5267, 1.5264, 0.66 ) }
    dend_11 { pt3dadd( 24.6326, -58.0783, 1.41464, 0.52 ) }
    dend_11 { pt3dadd( 25.6252, -59.1851, 1.033, 0.52 ) }
    dend_11 { pt3dadd( 26.0194, -59.6073, 0.822318, 0.52 ) }
    dend_11 { pt3dadd( 26.8064, -60.456, 0.301605, 0.96 ) }
    dend_11 { pt3dadd( 27.5306, -61.2513, -0.275259, 1.03 ) }
    dend_11 { pt3dadd( 28.1825, -61.9657, -0.852181, 0.81 ) }
    dend_11 { pt3dadd( 29.0936, -62.9625, -1.67049, 0.59 ) }
    dend_11 { pt3dadd( 29.7351, -63.6569, -2.22097, 0.88 ) }
    dend_11 { pt3dadd( 30.1426, -64.1121, -2.55607, 0.88 ) }
    dend_11 { pt3dadd( 30.7965, -64.8789, -3.06555, 0.52 ) }
    dend_11 { pt3dadd( 31.1832, -65.3416, -3.34118, 0.52 ) }
    dend_11 { pt3dadd( 31.8219, -66.1098, -3.75078, 0.96 ) }
    dend_11 { pt3dadd( 32.0513, -66.4061, -3.8988, 1.25 ) }
    dend_11 { pt3dadd( 32.3946, -66.8849, -4.13662, 1.25 ) }
    dend_11 { pt3dadd( 33.1717, -68.0236, -4.65106, 0.59 ) }
    dend_11 { pt3dadd( 33.7376, -68.8827, -4.99622, 0.44 ) }
    dend_11 { pt3dadd( 34.15, -69.4943, -5.21515, 0.29 ) }
    dend_11 { pt3dadd( 34.9184, -70.55, -5.5666, 0.29 ) }
    dend_11 { pt3dadd( 35.4389, -71.1647, -5.75479, 0.29 ) }
    dend_11 { pt3dadd( 36.0715, -71.7652, -5.94324, 0.44 ) }
    dend_11 { pt3dadd( 36.4916, -72.0977, -6.06046, 0.44 ) }
    dend_11 { pt3dadd( 37.2972, -72.6341, -6.30502, 0.59 ) }
    dend_11 { pt3dadd( 37.9967, -73.0263, -6.53345, 0.59 ) }
    dend_11 { pt3dadd( 39.0575, -73.5295, -6.7988, 1.25 ) }
    dend_11 { pt3dadd( 40.3394, -74.1218, -7.06722, 2.58 ) }
    dend_11 { pt3dadd( 41.2563, -74.5698, -7.20812, 3.32 ) }
    dend_11 { pt3dadd( 42.0531, -74.9768, -7.26681, 3.46 ) }
    dend_11 { pt3dadd( 42.6525, -75.3032, -7.26164, 3.09 ) }
    dend_11 { pt3dadd( 44.6132, -76.4401, -7.05138, 0.29 ) }
    dend_11 { pt3dadd( 45.2435, -76.8374, -6.909, 0.29 ) }
    dend_11 { pt3dadd( 46.2766, -77.5783, -6.55838, 1.18 ) }
    dend_11 { pt3dadd( 46.993, -78.1522, -6.26167, 1.69 ) }
    dend_11 { pt3dadd( 47.3576, -78.4814, -6.10383, 1.69 ) }
    dend_11 { pt3dadd( 47.7985, -78.9205, -5.92647, 1.62 ) }
    dend_11 { pt3dadd( 48.5314, -79.7175, -5.68895, 0.96 ) }
    dend_11 { pt3dadd( 49.5619, -80.8282, -5.41066, 0.22 ) }
    dend_11 { pt3dadd( 50.268, -81.5697, -5.27063, 0.22 ) }
    dend_11 { pt3dadd( 50.9636, -82.2831, -5.1796, 1.25 ) }
    dend_11 { pt3dadd( 51.4522, -82.736, -5.14509, 1.77 ) }
    dend_11 { pt3dadd( 51.8731, -83.0957, -5.13804, 1.92 ) }
    dend_11 { pt3dadd( 52.407, -83.4972, -5.15499, 1.69 ) }
    dend_11 { pt3dadd( 52.8347, -83.783, -5.19324, 1.25 ) }
    dend_11 { pt3dadd( 53.5009, -84.2273, -5.26985, 0.88 ) }
    dend_11 { pt3dadd( 54.4816, -84.9382, -5.37165, 0.22 ) }
    dend_11 { pt3dadd( 54.9655, -85.3524, -5.41366, 0.74 ) }
    dend_11 { pt3dadd( 55.3708, -85.7858, -5.43722, 0.96 ) }
    dend_11 { pt3dadd( 55.907, -86.4581, -5.46899, 1.11 ) }
    dend_11 { pt3dadd( 56.2562, -86.96, -5.48607, 1.11 ) }
    dend_11 { pt3dadd( 56.7441, -87.7484, -5.49962, 0.81 ) }
    dend_11 { pt3dadd( 57.1855, -88.5748, -5.49465, 0.52 ) }
    dend_11 { pt3dadd( 57.7008, -89.6014, -5.48251, 0.22 ) }
    dend_11 { pt3dadd( 58.0168, -90.2658, -5.46792, 0.22 ) }
    dend_11 { pt3dadd( 58.3484, -90.9655, -5.44127, 0.81 ) }
    dend_11 { pt3dadd( 58.6086, -91.4834, -5.45111, 1.18 ) }
    dend_11 { pt3dadd( 58.8527, -91.9226, -5.488, 1.4 ) }
    dend_11 { pt3dadd( 59.0866, -92.2912, -5.53474, 1.4 ) }
    dend_11 { pt3dadd( 59.3815, -92.7151, -5.6049, 1.11 ) }
    dend_11 { pt3dadd( 59.7862, -93.2767, -5.70617, 0.81 ) }
    dend_11 { pt3dadd( 60.7865, -94.5525, -5.9609, 0.22 ) }
    dend_11 { pt3dadd( 61.8152, -95.74, -6.18338, 0.22 ) }
    dend_11 { pt3dadd( 62.3339, -96.3028, -6.27748, 1.25 ) }
    dend_11 { pt3dadd( 62.9723, -96.9614, -6.36311, 1.77 ) }
    dend_11 { pt3dadd( 63.2574, -97.2449, -6.38961, 1.99 ) }
    dend_11 { pt3dadd( 63.7084, -97.6847, -6.41543, 1.69 ) }
    dend_11 { pt3dadd( 65.316, -99.2052, -6.45846, 0.22 ) }
    dend_11 { pt3dadd( 66.7276, -100.532, -6.36305, 0.22 ) }
    dend_11 { pt3dadd( 67.6121, -101.343, -6.23062, 1.25 ) }
    dend_11 { pt3dadd( 68.1293, -101.805, -6.11549, 1.69 ) }
    dend_11 { pt3dadd( 68.671, -102.269, -5.96872, 1.92 ) }
    dend_11 { pt3dadd( 69.1978, -102.69, -5.80541, 1.99 ) }
    dend_11 { pt3dadd( 71.261, -104.209, -5.07518, 0.29 ) }
    dend_11 { pt3dadd( 72.3341, -104.945, -4.66842, 0.37 ) }
    dend_11 { pt3dadd( 72.8546, -105.298, -4.47988, 0.37 ) }
    dend_11 { pt3dadd( 73.8363, -105.943, -4.14582, 0.29 ) }
    dend_11 { pt3dadd( 74.8999, -106.621, -3.81564, 0.29 ) }
    dend_11 { pt3dadd( 75.4306, -106.958, -3.67247, 0.44 ) }
    dend_11 { pt3dadd( 75.5244, -107.016, -3.65598, 0.44 ) }
    dend_11 { pt3dadd( 76.4893, -107.631, -3.44528, 0.22 ) }
    dend_11 { pt3dadd( 77.3659, -108.174, -3.22728, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_11 { pt3dadd( 78.0116, -108.566, -3.05217, 2.28 ) }
    dend_11 { pt3dadd( 78.6939, -108.965, -2.84391, 2.87 ) }
    dend_11 { pt3dadd( 79.1663, -109.232, -2.691, 3.09 ) }
    dend_11 { pt3dadd( 79.8911, -109.641, -2.45447, 2.5 ) }
    dend_11 { pt3dadd( 81.5757, -110.589, -1.83655, 0.59 ) }
    dend_11 { pt3dadd( 82.3646, -111.042, -1.51789, 0.52 ) }
    dend_11 { pt3dadd( 83.0369, -111.43, -1.23502, 0.44 ) }
    dend_11 { pt3dadd( 83.6293, -111.77, -0.973027, 0.44 ) }
    dend_11 { pt3dadd( 84.4916, -112.253, -0.578276, 0.37 ) }
    dend_11 { pt3dadd( 85.5617, -112.848, -0.0604515, 0.22 ) }
    dend_11 { pt3dadd( 86.4168, -113.318, 0.394416, 0.22 ) }
    dend_11 { pt3dadd( 87.3878, -113.818, 0.880129, 0.96 ) }
    dend_11 { pt3dadd( 87.9254, -114.067, 1.12162, 1.25 ) }
    dend_11 { pt3dadd( 88.5934, -114.344, 1.39391, 1.47 ) }
    dend_11 { pt3dadd( 89.2735, -114.595, 1.6325, 1.47 ) }
    dend_11 { pt3dadd( 90.271, -114.931, 1.90033, 0.66 ) }
    dend_11 { pt3dadd( 91.4195, -115.314, 2.13249, 0.22 ) }
    dend_11 { pt3dadd( 92.7008, -115.742, 2.31901, 0.22 ) }
    dend_11 { pt3dadd( 93.3997, -115.975, 2.3877, 0.66 ) }
    dend_11 { pt3dadd( 93.992, -116.171, 2.42848, 0.88 ) }
    dend_11 { pt3dadd( 94.5443, -116.351, 2.44404, 0.88 ) }
    dend_11 { pt3dadd( 96.2166, -116.9, 2.37826, 0.22 ) }
    dend_11 { pt3dadd( 97.3336, -117.274, 2.27845, 0.66 ) }
    dend_11 { pt3dadd( 97.8825, -117.462, 2.20603, 0.81 ) }
    dend_11 { pt3dadd( 98.3527, -117.634, 2.13979, 0.44 ) }
    dend_11 { pt3dadd( 99.5086, -118.079, 1.96539, 0.22 ) }
    dend_11 { pt3dadd( 100.622, -118.514, 1.78019, 0.44 ) }
    dend_11 { pt3dadd( 101.384, -118.794, 1.64433, 0.66 ) }
    dend_11 { pt3dadd( 102.011, -119.026, 1.52494, 1.47 ) }
    dend_11 { pt3dadd( 102.66, -119.239, 1.37138, 2.28 ) }
    dend_11 { pt3dadd( 103.211, -119.393, 1.22897, 2.65 ) }
    dend_11 { pt3dadd( 103.679, -119.497, 1.10853, 2.65 ) }
    dend_11 { pt3dadd( 104.708, -119.683, 0.860623, 1.69 ) }
    dend_11 { pt3dadd( 105.789, -119.838, 0.581977, 0.74 ) }
    dend_11 { pt3dadd( 107.248, -119.997, 0.206937, 0.22 ) }
    dend_11 { pt3dadd( 107.891, -120.052, 0.0475454, 0.37 ) }
    dend_11 { pt3dadd( 108.765, -120.133, -0.147264, 0.37 ) }
    dend_11 { pt3dadd( 109.579, -120.221, -0.312167, 1.03 ) }
    dend_11 { pt3dadd( 110.376, -120.331, -0.438226, 1.84 ) }
    dend_11 { pt3dadd( 111.03, -120.435, -0.498371, 2.14 ) }
    dend_11 { pt3dadd( 111.442, -120.518, -0.514472, 2.28 ) }
    dend_11 { pt3dadd( 112.332, -120.713, -0.539079, 1.55 ) }
    dend_11 { pt3dadd( 113.23, -120.949, -0.549791, 0.66 ) }
    dend_11 { pt3dadd( 114.353, -121.28, -0.547957, 0.29 ) }
    dend_11 { pt3dadd( 115.219, -121.562, -0.533285, 0.81 ) }
    dend_11 { pt3dadd( 115.937, -121.81, -0.517977, 0.96 ) }
    dend_11 { pt3dadd( 117.13, -122.239, -0.477903, 0.22 ) }
    dend_11 { pt3dadd( 118.271, -122.656, -0.421277, 0.22 ) }
    dend_11 { pt3dadd( 119.16, -122.969, -0.365068, 1.33 ) }
    dend_11 { pt3dadd( 119.613, -123.122, -0.335362, 1.84 ) }
    dend_11 { pt3dadd( 120.087, -123.277, -0.302514, 2.14 ) }
    dend_11 { pt3dadd( 120.53, -123.415, -0.271152, 2.14 ) }
    dend_11 { pt3dadd( 121.811, -123.79, -0.179622, 0.59 ) }
    dend_11 { pt3dadd( 123.559, -124.268, -0.0593615, 0.22 ) }
    dend_11 { pt3dadd( 124.88, -124.621, 0.0226514, 1.11 ) }
    dend_11 { pt3dadd( 125.314, -124.74, 0.0521644, 1.77 ) }
    dend_11 { pt3dadd( 125.717, -124.856, 0.0846426, 2.06 ) }
    dend_11 { pt3dadd( 126.21, -125.012, 0.13564, 2.06 ) }
    dend_11 { pt3dadd( 127.015, -125.305, 0.257163, 1.03 ) }
    dend_11 { pt3dadd( 128.732, -126.026, 0.620825, 0.22 ) }
    dend_11 { pt3dadd( 129.434, -126.342, 0.798602, 0.81 ) }
    dend_11 { pt3dadd( 129.932, -126.586, 0.935804, 0.81 ) }
    dend_11 { pt3dadd( 130.762, -127.034, 1.20561, 0.29 ) }
    dend_11 { pt3dadd( 131.508, -127.475, 1.49714, 0.22 ) }
    dend_11 { pt3dadd( 132.401, -128.044, 1.89703, 1.18 ) }
    dend_11 { pt3dadd( 133.085, -128.522, 2.23398, 1.77 ) }
    dend_11 { pt3dadd( 133.615, -128.888, 2.48797, 1.92 ) }
    dend_11 { pt3dadd( 135.531, -130.154, 3.36562, 0.22 ) }
    dend_11 { pt3dadd( 136.687, -130.843, 3.88212, 1.11 ) }
    dend_11 { pt3dadd( 137.112, -131.069, 4.06627, 1.47 ) }
    dend_11 { pt3dadd( 137.492, -131.244, 4.2302, 1.77 ) }
    dend_11 { pt3dadd( 138.216, -131.523, 4.53403, 1.77 ) }
    dend_11 { pt3dadd( 139.195, -131.792, 4.89843, 0.74 ) }
    dend_11 { pt3dadd( 140.177, -131.947, 5.18664, 0.29 ) }
    dend_11 { pt3dadd( 140.825, -132.008, 5.34624, 0.66 ) }
    dend_11 { pt3dadd( 141.576, -132.058, 5.51821, 0.66 ) }
    dend_11 { pt3dadd( 142.232, -132.087, 5.66134, 0.37 ) }
    dend_11 { pt3dadd( 143.536, -132.148, 5.86925, 0.22 ) }
    dend_11 { pt3dadd( 144.203, -132.184, 5.92467, 0.81 ) }
    dend_11 { pt3dadd( 144.608, -132.213, 5.93784, 1.03 ) }
    dend_11 { pt3dadd( 145.195, -132.255, 5.92227, 0.81 ) }
    dend_11 { pt3dadd( 146.025, -132.314, 5.85856, 0.52 ) }
    dend_11 { pt3dadd( 147.334, -132.379, 5.71786, 0.15 ) }
    dend_11 { pt3dadd( 148.561, -132.416, 5.55618, 1.18 ) }
    dend_11 { pt3dadd( 149.375, -132.423, 5.44305, 2.06 ) }
    dend_11 { pt3dadd( 150.175, -132.416, 5.33114, 2.43 ) }
    dend_11 { pt3dadd( 150.76, -132.407, 5.24061, 2.14 ) }
    dend_11 { pt3dadd( 152.503, -132.376, 4.93873, 0.22 ) }
    dend_11 { pt3dadd( 153.591, -132.379, 4.74716, 0.66 ) }
    dend_11 { pt3dadd( 154.253, -132.405, 4.61831, 0.81 ) }
    dend_11 { pt3dadd( 154.827, -132.45, 4.50507, 0.88 ) }
    dend_11 { pt3dadd( 156.292, -132.643, 4.22681, 0.22 ) }
    dend_11 { pt3dadd( 157.195, -132.807, 4.05146, 0.22 ) }
    dend_11 { pt3dadd( 158.607, -133.131, 3.78325, 1.33 ) }
    dend_11 { pt3dadd( 159.381, -133.33, 3.63734, 2.5 ) }
    dend_11 { pt3dadd( 160.102, -133.526, 3.52219, 2.36 ) }
    dend_11 { pt3dadd( 161.028, -133.753, 3.4679, 1.55 ) }
    dend_11 { pt3dadd( 162.485, -134.065, 3.53823, 0.74 ) }
    dend_11 { pt3dadd( 163.274, -134.207, 3.65799, 0.66 ) }
    dend_11 { pt3dadd( 163.968, -134.294, 3.83071, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_11 { pt3dadd( 165.097, -134.38, 4.21385, 0.22 ) }
    dend_11 { pt3dadd( 167.081, -134.461, 5.06835, 0.22 ) }
    dend_11 { pt3dadd( 167.688, -134.468, 5.37389, 0.22 ) }
    dend_11 { pt3dadd( 168.423, -134.46, 5.80171, 0.88 ) }
    dend_11 { pt3dadd( 169.055, -134.44, 6.2222, 1.11 ) }
    dend_11 { pt3dadd( 169.72, -134.398, 6.68293, 1.11 ) }
    dend_11 { pt3dadd( 170.099, -134.362, 6.95168, 0.74 ) }
    dend_11 { pt3dadd( 171.118, -134.266, 7.65136, 0.29 ) }
    dend_11 { pt3dadd( 171.922, -134.192, 8.181, 0.52 ) }
    dend_11 { pt3dadd( 172.844, -134.079, 8.76306, 0.74 ) }
    dend_11 { pt3dadd( 174.314, -133.876, 9.66929, 0.29 ) }
    dend_11 { pt3dadd( 175.322, -133.715, 10.2333, 1.18 ) }
    dend_11 { pt3dadd( 175.927, -133.595, 10.524, 1.62 ) }
    dend_11 { pt3dadd( 176.748, -133.408, 10.8501, 2.14 ) }
    dend_11 { pt3dadd( 177.73, -133.173, 11.131, 2.14 ) }
    dend_11 { pt3dadd( 178.082, -133.088, 11.1919, 2.14 ) }
    dend_11 { pt3dadd( 179.535, -132.736, 11.3405, 0.22 ) }
    dend_11 { pt3dadd( 181.021, -132.384, 11.4075, 0.22 ) }
    dend_11 { pt3dadd( 181.772, -132.199, 11.4162, 0.66 ) }
    dend_11 { pt3dadd( 182.386, -132.062, 11.4006, 0.81 ) }
    dend_11 { pt3dadd( 183.89, -131.794, 11.3135, 0.22 ) }
    dend_11 { pt3dadd( 184.559, -131.717, 11.2693, 0.66 ) }
    dend_11 { pt3dadd( 185.061, -131.713, 11.2328, 0.88 ) }
    dend_11 { pt3dadd( 186.743, -131.906, 11.1179, 0.22 ) }
    dend_11 { pt3dadd( 187.456, -132.057, 11.0712, 0.37 ) }
    dend_11 { pt3dadd( 187.911, -132.201, 11.0395, 0.37 ) }
    dend_11 { pt3dadd( 189.43, -132.868, 10.9662, 0.22 ) }
    dend_11 { pt3dadd( 190.582, -133.556, 10.9582, 0.22 ) }
    dend_11 { pt3dadd( 191.715, -134.454, 11.0248, 1.77 ) }
    dend_11 { pt3dadd( 192.132, -134.886, 11.0706, 2.14 ) }
    dend_11 { pt3dadd( 192.546, -135.398, 11.1353, 2.28 ) }
    dend_11 { pt3dadd( 193.071, -136.222, 11.2458, 1.55 ) }
    dend_11 { pt3dadd( 193.893, -137.93, 11.4795, 0.22 ) }
    dend_11 { pt3dadd( 194.299, -138.998, 11.6069, 0.44 ) }
    dend_11 { pt3dadd( 194.564, -139.826, 11.6817, 0.81 ) }
    dend_11 { pt3dadd( 194.76, -140.459, 11.7111, 0.81 ) }
    dend_11 { pt3dadd( 195.135, -141.626, 11.6213, 0.22 ) }
    dend_11 { pt3dadd( 195.385, -142.277, 11.4739, 0.22 ) }
    dend_11 { pt3dadd( 195.665, -142.87, 11.2781, 0.96 ) }
    dend_11 { pt3dadd( 195.891, -143.283, 11.1271, 1.18 ) }
    dend_11 { pt3dadd( 196.276, -143.911, 10.8791, 1.18 ) }
    dend_11 { pt3dadd( 197.329, -145.488, 10.2439, 0.22 ) }
    dend_11 { pt3dadd( 198.622, -147.312, 9.5042, 0.22 ) }
    dend_11 { pt3dadd( 199.088, -147.945, 9.25409, 0.74 ) }
    dend_11 { pt3dadd( 199.516, -148.465, 9.06471, 0.81 ) }
    dend_11 { pt3dadd( 200.25, -149.278, 8.80424, 0.52 ) }
    dend_11 { pt3dadd( 201.225, -150.258, 8.55159, 1.47 ) }
    dend_11 { pt3dadd( 201.921, -150.886, 8.45607, 2.06 ) }
    dend_11 { pt3dadd( 202.519, -151.394, 8.41755, 1.84 ) }
    dend_11 { pt3dadd( 204.386, -152.928, 8.42123, 0.22 ) }
    dend_11 { pt3dadd( 204.905, -153.327, 8.47106, 0.44 ) }
    dend_11 { pt3dadd( 205.193, -153.537, 8.53202, 0.44 ) }
    dend_11 { pt3dadd( 205.982, -154.059, 8.76741, 0.22 ) }
    dend_11 { pt3dadd( 206.583, -154.451, 8.99817, 0.66 ) }
    dend_11 { pt3dadd( 206.903, -154.651, 9.13947, 1.18 ) }
    dend_11 { pt3dadd( 207.526, -155.011, 9.43342, 1.18 ) }
    dend_11 { pt3dadd( 208.562, -155.55, 9.9182, 0.29 ) }
    dend_11 { pt3dadd( 209.72, -156.07, 10.4718, 0.29 ) }
    dend_11 { pt3dadd( 210.388, -156.335, 10.7882, 0.29 ) }
    dend_11 { pt3dadd( 211.483, -156.743, 11.3362, 0.22 ) }
    dend_11 { pt3dadd( 212.216, -157.036, 11.7553, 0.22 ) }
    dend_11 { pt3dadd( 213.572, -157.605, 12.5892, 1.11 ) }
    dend_11 { pt3dadd( 214.411, -157.967, 13.1529, 2.21 ) }
    dend_11 { pt3dadd( 214.969, -158.222, 13.5501, 2.43 ) }
    dend_11 { pt3dadd( 215.762, -158.576, 14.1331, 2.14 ) }
    dend_11 { pt3dadd( 217.514, -159.361, 15.4341, 0.15 ) }
    dend_11 { pt3dadd( 217.903, -159.525, 15.7374, 0.15 ) }
    dend_11 { pt3dadd( 218.423, -159.723, 16.1526, 0.52 ) }
    dend_11 { pt3dadd( 218.566, -159.774, 16.2753, 0.66 ) }
    dend_11 { pt3dadd( 219.547, -160.075, 17.2001, 0.22 ) }
    dend_11 { pt3dadd( 220.2, -160.239, 17.8295, 0.22 ) }
    dend_11 { pt3dadd( 221.381, -160.518, 19.013, 0.96 ) }
    dend_11 { pt3dadd( 221.711, -160.618, 19.3653, 0.96 ) }
    dend_11 { pt3dadd( 222.889, -161.026, 20.6669, 0.22 ) }
    dend_11 { pt3dadd( 223.717, -161.356, 21.5704, 0.59 ) }
    dend_11 { pt3dadd( 223.985, -161.491, 21.8701, 0.59 ) }
    dend_11 { pt3dadd( 224.424, -161.751, 22.3521, 0.37 ) }
    dend_11 { pt3dadd( 224.979, -162.132, 22.9433, 0.66 ) }
    dend_11 { pt3dadd( 225.277, -162.37, 23.2767, 0.66 ) }
    dend_11 { pt3dadd( 225.788, -162.897, 23.8773, 0.29 ) }
    dend_11 { pt3dadd( 226.408, -163.703, 24.6399, 0.44 ) }
    dend_11 { pt3dadd( 226.822, -164.312, 25.1816, 0.29 ) }
    dend_11 { pt3dadd( 227.326, -165.087, 25.864, 0.66 ) }
    dend_11 { pt3dadd( 227.544, -165.426, 26.1631, 0.66 ) }
    dend_11 { pt3dadd( 228.002, -166.22, 26.8532, 0.22 ) }
    dend_11 { pt3dadd( 228.218, -166.677, 27.2274, 0.22 ) }
    dend_11 { pt3dadd( 228.471, -167.3, 27.7355, 0.44 ) }
    dend_11 { pt3dadd( 228.666, -167.779, 28.1163, 0.44 ) }
    dend_11 { pt3dadd( 229.015, -168.596, 28.7168, 0.66 ) }
    dend_11 { pt3dadd( 229.417, -169.55, 29.3863, 1.4 ) }
    dend_11 { pt3dadd( 229.809, -170.547, 30.0456, 2.06 ) }
    dend_11 { pt3dadd( 230.262, -171.823, 30.7753, 1.92 ) }
    dend_11 { pt3dadd( 230.671, -173.088, 31.3543, 0.29 ) }
    dend_11 { pt3dadd( 231.015, -174.162, 31.7385, 0.59 ) }
    dend_11 { pt3dadd( 231.272, -174.925, 31.9388, 0.96 ) }
    dend_11 { pt3dadd( 231.544, -175.597, 32.0547, 0.96 ) }
    dend_11 { pt3dadd( 232.078, -176.728, 32.162, 0.29 ) }
    dend_11 { pt3dadd( 232.494, -177.515, 32.157, 0.74 ) }
    dend_11 { pt3dadd( 232.867, -178.165, 32.1269, 0.74 ) }
    dend_11 { pt3dadd( 233.481, -179.117, 32.0566, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_11 { pt3dadd( 233.931, -179.754, 32.0002, 0.52 ) }
    dend_11 { pt3dadd( 234.133, -180.022, 31.9769, 0.52 ) }
    dend_11 { pt3dadd( 235.579, -181.819, 31.8353, 0.22 ) }
    dend_11 { pt3dadd( 236.163, -182.479, 31.7972, 0.66 ) }
    dend_11 { pt3dadd( 236.546, -182.871, 31.7788, 0.88 ) }
    dend_11 { pt3dadd( 236.923, -183.222, 31.7677, 0.88 ) }
    dend_11 { pt3dadd( 237.969, -184.068, 31.7624, 0.22 ) }
    dend_11 { pt3dadd( 239.443, -185.066, 31.7441, 0.22 ) }
    dend_11 { pt3dadd( 240.666, -185.704, 31.7801, 0.96 ) }
    dend_11 { pt3dadd( 241.538, -186.089, 31.8313, 1.4 ) }
    dend_11 { pt3dadd( 242.016, -186.27, 31.8697, 1.55 ) }
    dend_11 { pt3dadd( 243.435, -186.724, 32.021, 0.22 ) }
    dend_11 { pt3dadd( 244.517, -187.015, 32.1719, 0.22 ) }
    dend_11 { pt3dadd( 245.717, -187.37, 32.3942, 0.52 ) }
    dend_11 { pt3dadd( 246.047, -187.525, 32.4684, 0.52 ) }
    dend_11 { pt3dadd( 246.718, -187.999, 32.647, 0.22 ) }
    dend_11 { pt3dadd( 247.179, -188.445, 32.7834, 0.44 ) }
    dend_11 { pt3dadd( 247.648, -189.022, 32.9368, 0.44 ) }
    dend_11 { pt3dadd( 248.352, -190.035, 33.165, 0.22 ) }
    dend_11 { pt3dadd( 249.164, -191.332, 33.3567, 0.22 ) }
    dend_11 { pt3dadd( 249.481, -191.886, 33.4382, 0.44 ) }
    dend_11 { pt3dadd( 249.719, -192.362, 33.5072, 0.44 ) }
    dend_11 { pt3dadd( 259.814, -197.139, 33.7947, 0.44 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 23/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 12.8784, -75.7577, -10.4954, 1.03 ) }
    dend_5 { pt3dadd( 13.2048, -77.6885, -12.4302, 1.03 ) }
    dend_5 { pt3dadd( 13.6361, -79.4117, -14.0114, 1.55 ) }
    dend_5 { pt3dadd( 13.9722, -80.4797, -14.9377, 1.4 ) }
    dend_5 { pt3dadd( 14.3336, -81.5406, -15.7666, 1.11 ) }
    dend_5 { pt3dadd( 14.9219, -83.254, -16.9755, 0.81 ) }
    dend_5 { pt3dadd( 15.2925, -84.3517, -17.6898, 0.81 ) }
    dend_5 { pt3dadd( 15.7392, -85.6484, -18.3908, 0.88 ) }
    dend_5 { pt3dadd( 16.1966, -86.97, -18.9627, 0.96 ) }
    dend_5 { pt3dadd( 16.6843, -88.3857, -19.5072, 1.62 ) }
    dend_5 { pt3dadd( 17.0298, -89.5504, -19.9436, 2.14 ) }
    dend_5 { pt3dadd( 17.2995, -90.7505, -20.3775, 2.21 ) }
    dend_5 { pt3dadd( 17.447, -91.6984, -20.7295, 2.28 ) }
    dend_5 { pt3dadd( 17.5244, -92.4472, -21.0071, 2.14 ) }
    dend_5 { pt3dadd( 17.6186, -94.0056, -21.61, 1.77 ) }
    dend_5 { pt3dadd( 17.6701, -95.9993, -22.4331, 0.59 ) }
    dend_5 { pt3dadd( 17.676, -97.2917, -22.9449, 0.59 ) }
    dend_5 { pt3dadd( 17.6579, -98.4248, -23.3572, 0.37 ) }
    dend_5 { pt3dadd( 17.6235, -99.419, -23.6807, 0.29 ) }
    dend_5 { pt3dadd( 17.5823, -100.284, -23.9272, 0.29 ) }
    dend_5 { pt3dadd( 17.5076, -101.423, -24.1793, 0.37 ) }
    dend_5 { pt3dadd( 17.4155, -102.997, -24.4542, 0.44 ) }
    dend_5 { pt3dadd( 17.3514, -103.987, -24.6122, 0.96 ) }
    dend_5 { pt3dadd( 17.2964, -104.972, -24.7492, 1.55 ) }
    dend_5 { pt3dadd( 17.279, -105.618, -24.8253, 1.84 ) }
    dend_5 { pt3dadd( 17.2907, -106.522, -24.9322, 1.84 ) }
    dend_5 { pt3dadd( 17.3386, -107.267, -25.0466, 2.06 ) }
    dend_5 { pt3dadd( 17.4171, -107.98, -25.1652, 2.36 ) }
    dend_5 { pt3dadd( 17.6281, -109.14, -25.3743, 2.36 ) }
    dend_5 { pt3dadd( 17.8419, -110.093, -25.5501, 2.21 ) }
    dend_5 { pt3dadd( 18.1333, -111.25, -25.7758, 2.14 ) }
    dend_5 { pt3dadd( 18.6322, -113.056, -26.1345, 1.03 ) }
    dend_5 { pt3dadd( 19.0167, -114.368, -26.4052, 0.81 ) }
    dend_5 { pt3dadd( 19.6108, -116.284, -26.8049, 1.03 ) }
    dend_5 { pt3dadd( 19.8815, -117.14, -26.9889, 1.69 ) }
    dend_5 { pt3dadd( 20.084, -117.883, -27.1556, 2.14 ) }
    dend_5 { pt3dadd( 20.1743, -118.333, -27.2803, 2.43 ) }
    dend_5 { pt3dadd( 20.2483, -119.066, -27.5341, 2.43 ) }
    dend_5 { pt3dadd( 20.2858, -120.717, -28.2162, 0.66 ) }
    dend_5 { pt3dadd( 20.2383, -121.924, -28.7403, 0.37 ) }
    dend_5 { pt3dadd( 20.1791, -123.274, -29.3593, 0.37 ) }
    dend_5 { pt3dadd( 20.1117, -124.783, -30.0982, 0.37 ) }
    dend_5 { pt3dadd( 20.0797, -125.642, -30.5584, 0.44 ) }
    dend_5 { pt3dadd( 20.0569, -126.361, -30.9958, 0.37 ) }
    dend_5 { pt3dadd( 20.0368, -127.162, -31.5424, 0.29 ) }
    dend_5 { pt3dadd( 20.057, -128.007, -32.1608, 0.29 ) }
    dend_5 { pt3dadd( 20.1586, -129.04, -32.9444, 0.96 ) }
    dend_5 { pt3dadd( 20.2827, -129.95, -33.6378, 1.11 ) }
    dend_5 { pt3dadd( 20.4619, -131.129, -34.5436, 1.33 ) }
    dend_5 { pt3dadd( 20.5888, -132.019, -35.214, 1.47 ) }
    dend_5 { pt3dadd( 20.7058, -132.867, -35.8247, 1.69 ) }
    dend_5 { pt3dadd( 20.7759, -133.425, -36.1792, 1.84 ) }
    dend_5 { pt3dadd( 20.9033, -134.459, -36.7237, 1.55 ) }
    dend_5 { pt3dadd( 21.046, -135.533, -37.1992, 0.66 ) }
    dend_5 { pt3dadd( 21.173, -136.447, -37.5366, 0.44 ) }
    dend_5 { pt3dadd( 21.3679, -137.795, -37.9608, 0.44 ) }
    dend_5 { pt3dadd( 21.4726, -138.581, -38.1692, 1.33 ) }
    dend_5 { pt3dadd( 21.6063, -139.63, -38.4219, 1.62 ) }
    dend_5 { pt3dadd( 21.7267, -140.604, -38.6335, 1.92 ) }
    dend_5 { pt3dadd( 21.7911, -141.158, -38.7574, 2.21 ) }
    dend_5 { pt3dadd( 21.8768, -142.026, -38.9504, 2.21 ) }
    dend_5 { pt3dadd( 21.9494, -142.829, -39.1084, 2.21 ) }
    dend_5 { pt3dadd( 21.9955, -143.214, -39.185, 2.36 ) }
    dend_5 { pt3dadd( 22.1648, -144.49, -39.4319, 1.62 ) }
    dend_5 { pt3dadd( 22.3904, -146.186, -39.7601, 0.81 ) }
    dend_5 { pt3dadd( 22.5601, -147.411, -39.9943, 0.29 ) }
    dend_5 { pt3dadd( 22.6862, -148.297, -40.173, 0.29 ) }
    dend_5 { pt3dadd( 22.7959, -149.038, -40.3253, 0.29 ) }
    dend_5 { pt3dadd( 22.9569, -150.19, -40.5503, 1.55 ) }
    dend_5 { pt3dadd( 23.1316, -151.436, -40.8014, 2.58 ) }
    dend_5 { pt3dadd( 23.248, -152.296, -40.96, 3.09 ) }
    dend_5 { pt3dadd( 23.4281, -153.726, -41.2082, 2.5 ) }
    dend_5 { pt3dadd( 23.5536, -154.933, -41.3775, 1.84 ) }
    dend_5 { pt3dadd( 23.7052, -156.835, -41.5371, 0.52 ) }
    dend_5 { pt3dadd( 23.7787, -157.836, -41.5517, 0.37 ) }
    dend_5 { pt3dadd( 23.8608, -159.127, -41.4515, 1.55 ) }
    dend_5 { pt3dadd( 23.9179, -160.148, -41.2918, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_5 { pt3dadd( 23.9734, -161.295, -41.0171, 2.87 ) }
    dend_5 { pt3dadd( 24.0153, -162.284, -40.7251, 3.09 ) }
    dend_5 { pt3dadd( 24.0466, -163.381, -40.3708, 2.95 ) }
    dend_5 { pt3dadd( 24.0675, -165.433, -39.7136, 0.66 ) }
    dend_5 { pt3dadd( 24.0733, -166.367, -39.4439, 0.52 ) }
    dend_5 { pt3dadd( 24.0743, -166.844, -39.3284, 0.52 ) }
    dend_5 { pt3dadd( 24.0734, -167.83, -39.1587, 0.37 ) }
    dend_5 { pt3dadd( 24.0333, -169.166, -39.0412, 0.37 ) }
    dend_5 { pt3dadd( 23.9736, -170.06, -39.0145, 0.66 ) }
    dend_5 { pt3dadd( 23.9014, -171.008, -39.0364, 0.66 ) }
    dend_5 { pt3dadd( 23.817, -172.19, -39.0892, 0.29 ) }
    dend_5 { pt3dadd( 23.7351, -173.632, -39.1724, 0.29 ) }
    dend_5 { pt3dadd( 23.6551, -176.128, -39.3256, 0.29 ) }
    dend_5 { pt3dadd( 23.6782, -177.391, -39.406, 0.74 ) }
    dend_5 { pt3dadd( 23.7726, -178.758, -39.488, 1.47 ) }
    dend_5 { pt3dadd( 23.8446, -179.353, -39.5268, 1.99 ) }
    dend_5 { pt3dadd( 23.9899, -180.184, -39.5842, 2.5 ) }
    dend_5 { pt3dadd( 24.1423, -180.868, -39.6298, 2.65 ) }
    dend_5 { pt3dadd( 24.5855, -182.551, -39.7309, 1.4 ) }
    dend_5 { pt3dadd( 24.8841, -183.773, -39.7999, 0.74 ) }
    dend_5 { pt3dadd( 25.1363, -185.002, -39.8449, 0.29 ) }
    dend_5 { pt3dadd( 25.3702, -186.272, -39.9116, 0.29 ) }
    dend_5 { pt3dadd( 25.5603, -187.428, -39.9874, 0.29 ) }
    dend_5 { pt3dadd( 25.642, -187.967, -40.0314, 0.81 ) }
    dend_5 { pt3dadd( 25.8256, -189.139, -40.1434, 1.18 ) }
    dend_5 { pt3dadd( 26.1144, -190.999, -40.2614, 2.28 ) }
    dend_5 { pt3dadd( 26.3445, -192.486, -40.3064, 2.8 ) }
    dend_5 { pt3dadd( 26.4842, -193.335, -40.3103, 2.8 ) }
    dend_5 { pt3dadd( 26.6345, -194.23, -40.2959, 2.87 ) }
    dend_5 { pt3dadd( 27.0226, -196.571, -40.209, 0.29 ) }
    dend_5 { pt3dadd( 27.2829, -198.26, -40.1048, 0.22 ) }
    dend_5 { pt3dadd( 27.3804, -198.978, -40.0392, 0.74 ) }
    dend_5 { pt3dadd( 27.4588, -199.786, -39.9489, 0.81 ) }
    dend_5 { pt3dadd( 27.5086, -200.611, -39.8752, 0.81 ) }
    dend_5 { pt3dadd( 27.5317, -201.385, -39.8275, 0.66 ) }
    dend_5 { pt3dadd( 27.5473, -202.961, -39.7891, 0.22 ) }
    dend_5 { pt3dadd( 27.5754, -203.983, -39.82, 0.22 ) }
    dend_5 { pt3dadd( 27.615, -205.888, -39.9289, 0.22 ) }
    dend_5 { pt3dadd( 27.6002, -207.344, -40.0631, 1.77 ) }
    dend_5 { pt3dadd( 27.5677, -208.265, -40.1729, 2.43 ) }
    dend_5 { pt3dadd( 27.5295, -208.825, -40.2552, 2.73 ) }
    dend_5 { pt3dadd( 27.3789, -210.172, -40.4959, 1.77 ) }
    dend_5 { pt3dadd( 27.1427, -211.775, -40.8575, 0.52 ) }
    dend_5 { pt3dadd( 26.8968, -213.122, -41.2143, 0.29 ) }
    dend_5 { pt3dadd( 26.7417, -213.814, -41.4135, 0.59 ) }
    dend_5 { pt3dadd( 26.6054, -214.35, -41.5742, 0.59 ) }
    dend_5 { pt3dadd( 26.3871, -215.148, -41.8096, 0.52 ) }
    dend_5 { pt3dadd( 25.9507, -216.675, -42.2442, 0.22 ) }
    dend_5 { pt3dadd( 25.6349, -217.902, -42.5598, 0.22 ) }
    dend_5 { pt3dadd( 25.42, -218.95, -42.8171, 0.37 ) }
    dend_5 { pt3dadd( 25.3206, -219.649, -42.9958, 0.37 ) }
    dend_5 { pt3dadd( 25.2751, -220.433, -43.1854, 0.88 ) }
    dend_5 { pt3dadd( 25.2894, -221.24, -43.3662, 1.11 ) }
    dend_5 { pt3dadd( 25.3331, -221.941, -43.5067, 1.25 ) }
    dend_5 { pt3dadd( 25.3888, -222.58, -43.6265, 1.25 ) }
    dend_5 { pt3dadd( 25.5297, -223.981, -43.8905, 0.74 ) }
    dend_5 { pt3dadd( 25.7004, -225.46, -44.172, 0.29 ) }
    dend_5 { pt3dadd( 25.8703, -226.745, -44.4072, 0.22 ) }
    dend_5 { pt3dadd( 26.1993, -229.076, -44.804, 0.22 ) }
    dend_5 { pt3dadd( 26.4737, -230.852, -45.0585, 1.33 ) }
    dend_5 { pt3dadd( 26.6606, -231.943, -45.1618, 1.92 ) }
    dend_5 { pt3dadd( 26.8174, -232.76, -45.2026, 2.36 ) }
    dend_5 { pt3dadd( 26.9476, -233.334, -45.2183, 2.65 ) }
    dend_5 { pt3dadd( 27.106, -233.962, -45.2193, 2.65 ) }
    dend_5 { pt3dadd( 27.3946, -234.963, -45.2193, 1.99 ) }
    dend_5 { pt3dadd( 27.9065, -236.696, -45.2329, 0.52 ) }
    dend_5 { pt3dadd( 28.17, -237.645, -45.243, 0.59 ) }
    dend_5 { pt3dadd( 28.485, -238.871, -45.2728, 0.22 ) }
    dend_5 { pt3dadd( 28.8567, -240.359, -45.3553, 0.22 ) }
    dend_5 { pt3dadd( 29.0683, -241.234, -45.4266, 0.22 ) }
    dend_5 { pt3dadd( 29.1568, -241.616, -45.4664, 0.66 ) }
    dend_5 { pt3dadd( 29.292, -242.152, -45.5258, 0.81 ) }
    dend_5 { pt3dadd( 29.3986, -242.53, -45.5606, 0.81 ) }
    dend_5 { pt3dadd( 29.7855, -243.812, -45.6304, 0.22 ) }
    dend_5 { pt3dadd( 30.0417, -244.615, -45.6575, 0.29 ) }
    dend_5 { pt3dadd( 30.2941, -245.422, -45.6708, 0.29 ) }
    dend_5 { pt3dadd( 30.6774, -246.688, -45.7026, 0.29 ) }
    dend_5 { pt3dadd( 30.9507, -247.632, -45.7346, 0.88 ) }
    dend_5 { pt3dadd( 31.2127, -248.632, -45.7803, 1.84 ) }
    dend_5 { pt3dadd( 31.4413, -249.593, -45.8327, 2.36 ) }
    dend_5 { pt3dadd( 31.5415, -249.997, -45.8641, 2.73 ) }
    dend_5 { pt3dadd( 31.7494, -250.791, -45.9316, 2.73 ) }
    dend_5 { pt3dadd( 31.9826, -251.688, -46.0126, 2.43 ) }
    dend_5 { pt3dadd( 32.3094, -253.035, -46.1359, 1.77 ) }
    dend_5 { pt3dadd( 32.5919, -254.265, -46.2473, 0.66 ) }
    dend_5 { pt3dadd( 32.9492, -255.887, -46.3667, 0.29 ) }
    dend_5 { pt3dadd( 33.293, -257.423, -46.4511, 0.29 ) }
    dend_5 { pt3dadd( 33.5249, -258.402, -46.4808, 0.29 ) }
    dend_5 { pt3dadd( 33.8737, -259.824, -46.4846, 0.29 ) }
    dend_5 { pt3dadd( 34.0836, -260.63, -46.4526, 0.29 ) }
    dend_5 { pt3dadd( 34.4148, -261.794, -46.3725, 1.55 ) }
    dend_5 { pt3dadd( 34.7126, -262.771, -46.2975, 2.28 ) }
    dend_5 { pt3dadd( 35.0235, -263.701, -46.2355, 2.58 ) }
    dend_5 { pt3dadd( 35.3171, -264.492, -46.1947, 2.43 ) }
    dend_5 { pt3dadd( 36.026, -266.314, -46.1412, 1.11 ) }
    dend_5 { pt3dadd( 36.5885, -267.826, -46.1567, 0.44 ) }
    dend_5 { pt3dadd( 36.8968, -268.727, -46.2182, 0.29 ) }
    dend_5 { pt3dadd( 37.1222, -269.452, -46.3247, 0.29 ) }
    dend_5 { pt3dadd( 37.338, -270.281, -46.5046, 0.88 ) }
    dend_5 { pt3dadd( 37.5043, -271.137, -46.7314, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_5 { pt3dadd( 37.5811, -271.819, -46.9369, 1.62 ) }
    dend_5 { pt3dadd( 37.624, -272.678, -47.181, 1.62 ) }
    dend_5 { pt3dadd( 37.6425, -274.097, -47.5377, 1.03 ) }
    dend_5 { pt3dadd( 37.6338, -275.249, -47.8156, 0.44 ) }
    dend_5 { pt3dadd( 37.5924, -276.661, -48.1277, 0.37 ) }
    dend_5 { pt3dadd( 37.5563, -277.566, -48.3201, 0.88 ) }
    dend_5 { pt3dadd( 37.5144, -278.63, -48.534, 0.88 ) }
    dend_5 { pt3dadd( 37.4929, -279.698, -48.7344, 1.03 ) }
    dend_5 { pt3dadd( 37.5032, -280.892, -48.9345, 0.88 ) }
    dend_5 { pt3dadd( 37.5597, -281.964, -49.1291, 0.74 ) }
    dend_5 { pt3dadd( 37.6405, -282.853, -49.3098, 0.44 ) }
    dend_5 { pt3dadd( 37.836, -284.435, -49.6668, 0.29 ) }
    dend_5 { pt3dadd( 38.0702, -286.224, -50.079, 1.69 ) }
    dend_5 { pt3dadd( 38.2198, -287.353, -50.3392, 2.73 ) }
    dend_5 { pt3dadd( 38.3833, -288.608, -50.6157, 2.58 ) }
    dend_5 { pt3dadd( 38.5026, -289.609, -50.8247, 2.36 ) }
    dend_5 { pt3dadd( 38.7594, -292.142, -51.2929, 0.29 ) }
    dend_5 { pt3dadd( 38.9039, -293.918, -51.592, 0.29 ) }
    dend_5 { pt3dadd( 38.9677, -294.839, -51.7411, 0.52 ) }
    dend_5 { pt3dadd( 39.0179, -295.524, -51.8431, 0.52 ) }
    dend_5 { pt3dadd( 39.1913, -297.394, -52.0546, 0.22 ) }
    dend_5 { pt3dadd( 39.3248, -298.491, -52.1731, 0.81 ) }
    dend_5 { pt3dadd( 39.4097, -299.032, -52.2293, 1.11 ) }
    dend_5 { pt3dadd( 39.5465, -299.737, -52.3092, 1.25 ) }
    dend_5 { pt3dadd( 39.7444, -300.643, -52.4327, 1.25 ) }
    dend_5 { pt3dadd( 40.298, -302.906, -52.8563, 0.22 ) }
    dend_5 { pt3dadd( 40.6445, -304.178, -53.1426, 0.22 ) }
    dend_5 { pt3dadd( 40.8769, -305.045, -53.3767, 0.96 ) }
    dend_5 { pt3dadd( 41.1046, -305.955, -53.6362, 1.4 ) }
    dend_5 { pt3dadd( 41.3167, -306.894, -53.9201, 1.62 ) }
    dend_5 { pt3dadd( 41.5183, -307.894, -54.232, 1.4 ) }
    dend_5 { pt3dadd( 41.6874, -308.858, -54.5306, 1.03 ) }
    dend_5 { pt3dadd( 41.9179, -310.458, -54.9853, 0.22 ) }
    dend_5 { pt3dadd( 42.0015, -311.186, -55.2014, 0.22 ) }
    dend_5 { pt3dadd( 42.0596, -312.407, -55.5638, 1.69 ) }
    dend_5 { pt3dadd( 42.0345, -313.569, -55.8838, 2.73 ) }
    dend_5 { pt3dadd( 41.9798, -314.265, -56.0624, 3.09 ) }
    dend_5 { pt3dadd( 41.8708, -315.259, -56.3105, 2.95 ) }
    dend_5 { pt3dadd( 41.5467, -317.763, -56.908, 0.74 ) }
    dend_5 { pt3dadd( 41.2427, -319.895, -57.426, 0.22 ) }
    dend_5 { pt3dadd( 40.9848, -321.595, -57.8524, 0.22 ) }
    dend_5 { pt3dadd( 40.7125, -323.421, -58.298, 0.22 ) }
    dend_5 { pt3dadd( 40.6024, -324.239, -58.4694, 0.59 ) }
    dend_5 { pt3dadd( 40.5261, -324.899, -58.5735, 0.59 ) }
    dend_5 { pt3dadd( 40.4449, -325.724, -58.6631, 0.29 ) }
    dend_5 { pt3dadd( 40.3952, -327.085, -58.7682, 0.29 ) }
    dend_5 { pt3dadd( 40.4178, -328.294, -58.8372, 1.55 ) }
    dend_5 { pt3dadd( 40.4874, -329.582, -58.8825, 2.58 ) }
    dend_5 { pt3dadd( 40.5109, -330.048, -58.8867, 2.87 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 49/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.8784, -75.7577, -10.4954, 0.66 ) }
    dend_4 { pt3dadd( 13.197, -77.1669, -10.2315, 0.66 ) }
    dend_4 { pt3dadd( 13.3987, -77.9551, -10.0894, 0.59 ) }
    dend_4 { pt3dadd( 13.59, -78.6572, -9.9512, 0.44 ) }
    dend_4 { pt3dadd( 13.745, -79.1953, -9.83323, 0.44 ) }
    dend_4 { pt3dadd( 14.0376, -80.1846, -9.60792, 0.44 ) }
    dend_4 { pt3dadd( 14.3348, -81.1951, -9.3582, 0.44 ) }
    dend_4 { pt3dadd( 14.7676, -82.6005, -8.96304, 0.44 ) }
    dend_4 { pt3dadd( 14.9819, -83.2614, -8.77431, 0.44 ) }
    dend_4 { pt3dadd( 15.2923, -84.231, -8.50037, 1.33 ) }
    dend_4 { pt3dadd( 15.4229, -84.6617, -8.38651, 1.77 ) }
    dend_4 { pt3dadd( 15.5738, -85.1995, -8.23532, 1.99 ) }
    dend_4 { pt3dadd( 15.7793, -85.9241, -8.01955, 1.69 ) }
    dend_4 { pt3dadd( 15.9646, -86.6036, -7.78141, 0.96 ) }
    dend_4 { pt3dadd( 16.1349, -87.3032, -7.49867, 0.37 ) }
    dend_4 { pt3dadd( 16.3331, -88.2609, -7.04303, 0.29 ) }
    dend_4 { pt3dadd( 16.4912, -89.0681, -6.60499, 0.29 ) }
    dend_4 { pt3dadd( 16.6308, -89.827, -6.12717, 0.29 ) }
    dend_4 { pt3dadd( 16.8276, -91.0719, -5.25457, 0.29 ) }
    dend_4 { pt3dadd( 16.9244, -91.7257, -4.7647, 1.25 ) }
    dend_4 { pt3dadd( 17.024, -92.416, -4.21287, 1.69 ) }
    dend_4 { pt3dadd( 17.1092, -92.9935, -3.73751, 1.84 ) }
    dend_4 { pt3dadd( 17.3073, -94.1413, -2.78415, 0.44 ) }
    dend_4 { pt3dadd( 17.4098, -94.6091, -2.39054, 0.37 ) }
    dend_4 { pt3dadd( 17.6085, -95.3133, -1.87163, 0.29 ) }
    dend_4 { pt3dadd( 17.7716, -95.8049, -1.55322, 0.81 ) }
    dend_4 { pt3dadd( 17.9009, -96.1725, -1.3414, 0.96 ) }
    dend_4 { pt3dadd( 18.1266, -96.8131, -1.00958, 0.59 ) }
    dend_4 { pt3dadd( 18.5469, -98.002, -0.478344, 0.29 ) }
    dend_4 { pt3dadd( 18.9571, -99.2928, 0.0259911, 0.29 ) }
    dend_4 { pt3dadd( 19.1278, -99.9908, 0.23464, 1.03 ) }
    dend_4 { pt3dadd( 19.2267, -100.537, 0.353769, 1.33 ) }
    dend_4 { pt3dadd( 19.267, -100.862, 0.405107, 1.47 ) }
    dend_4 { pt3dadd( 19.2966, -101.475, 0.451233, 0.81 ) }
    dend_4 { pt3dadd( 19.2423, -102.526, 0.459735, 0.22 ) }
    dend_4 { pt3dadd( 19.0769, -103.686, 0.434943, 0.22 ) }
    dend_4 { pt3dadd( 18.9784, -104.182, 0.408891, 0.66 ) }
    dend_4 { pt3dadd( 18.9334, -104.363, 0.394787, 0.66 ) }
    dend_4 { pt3dadd( 18.6062, -105.384, 0.285222, 0.22 ) }
    dend_4 { pt3dadd( 18.3657, -105.965, 0.20432, 1.55 ) }
    dend_4 { pt3dadd( 18.162, -106.381, 0.136209, 1.84 ) }
    dend_4 { pt3dadd( 17.965, -106.748, 0.0710392, 2.06 ) }
    dend_4 { pt3dadd( 17.4931, -107.607, -0.083167, 0.22 ) }
    dend_4 { pt3dadd( 16.8096, -108.825, -0.298652, 0.22 ) }
    dend_4 { pt3dadd( 15.903, -110.437, -0.590183, 0.22 ) }
    dend_4 { pt3dadd( 15.5316, -111.109, -0.708164, 0.81 ) }
    dend_4 { pt3dadd( 15.3091, -111.523, -0.779845, 1.03 ) }
    dend_4 { pt3dadd( 15.1971, -111.739, -0.816062, 1.03 ) }
    dend_4 { pt3dadd( 14.7508, -112.706, -0.982376, 0.22 ) }
    dend_4 { pt3dadd( 14.4552, -113.616, -1.14777, 0.22 ) }
    dend_4 { pt3dadd( 14.3946, -113.935, -1.17286, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_4 { pt3dadd( 14.3213, -114.447, -1.16812, 1.11 ) }
    dend_4 { pt3dadd( 14.2705, -114.884, -1.13215, 1.55 ) }
    dend_4 { pt3dadd( 14.233, -115.35, -1.06666, 1.77 ) }
    dend_4 { pt3dadd( 14.1647, -117.028, -0.683791, 0.15 ) }
    dend_4 { pt3dadd( 14.1272, -118.964, -0.111182, 0.15 ) }
    dend_4 { pt3dadd( 14.1238, -119.764, 0.155109, 0.96 ) }
    dend_4 { pt3dadd( 14.1234, -120.313, 0.372068, 1.55 ) }
    dend_4 { pt3dadd( 14.1253, -120.973, 0.660414, 2.06 ) }
    dend_4 { pt3dadd( 14.1368, -122.899, 1.56076, 0.22 ) }
    dend_4 { pt3dadd( 14.1612, -123.964, 2.07421, 0.22 ) }
    dend_4 { pt3dadd( 14.2525, -125.878, 2.94727, 0.22 ) }
    dend_4 { pt3dadd( 14.3208, -126.916, 3.4194, 1.03 ) }
    dend_4 { pt3dadd( 14.3746, -127.637, 3.7436, 1.62 ) }
    dend_4 { pt3dadd( 14.4027, -128.175, 3.97915, 1.62 ) }
    dend_4 { pt3dadd( 14.4386, -129.416, 4.44781, 0.22 ) }
    dend_4 { pt3dadd( 14.4259, -130.357, 4.72051, 0.22 ) }
    dend_4 { pt3dadd( 14.4101, -130.836, 4.83239, 0.74 ) }
    dend_4 { pt3dadd( 14.3905, -131.251, 4.90002, 0.88 ) }
    dend_4 { pt3dadd( 14.256, -132.901, 5.12549, 0.22 ) }
    dend_4 { pt3dadd( 14.1204, -133.897, 5.22869, 0.96 ) }
    dend_4 { pt3dadd( 13.9638, -134.558, 5.24407, 1.18 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 40.5109, -330.048, -58.8867, 0.52 ) }
    dend_9 { pt3dadd( 40.6655, -332.006, -60.1363, 0.52 ) }
    dend_9 { pt3dadd( 40.7923, -333.956, -61.3171, 0.22 ) }
    dend_9 { pt3dadd( 40.8457, -334.89, -61.8629, 0.52 ) }
    dend_9 { pt3dadd( 40.8856, -335.623, -62.288, 0.59 ) }
    dend_9 { pt3dadd( 40.9928, -337.009, -63.1784, 0.22 ) }
    dend_9 { pt3dadd( 41.1337, -338.748, -64.3887, 0.22 ) }
    dend_9 { pt3dadd( 41.1826, -339.268, -64.7862, 0.96 ) }
    dend_9 { pt3dadd( 41.2141, -339.644, -65.0912, 1.25 ) }
    dend_9 { pt3dadd( 41.2439, -340.044, -65.4312, 1.25 ) }
    dend_9 { pt3dadd( 41.3403, -342.494, -67.5693, 0.22 ) }
    dend_9 { pt3dadd( 41.378, -345.029, -69.8865, 0.22 ) }
    dend_9 { pt3dadd( 41.3659, -345.875, -70.6701, 1.11 ) }
    dend_9 { pt3dadd( 41.3403, -346.479, -71.2158, 1.33 ) }
    dend_9 { pt3dadd( 41.3097, -346.895, -71.5736, 1.33 ) }
    dend_9 { pt3dadd( 41.1474, -348.319, -72.6971, 0.22 ) }
    dend_9 { pt3dadd( 40.9983, -349.095, -73.1924, 0.22 ) }
    dend_9 { pt3dadd( 40.8732, -349.711, -73.5157, 1.03 ) }
    dend_9 { pt3dadd( 40.7656, -350.351, -73.8086, 1.47 ) }
    dend_9 { pt3dadd( 40.6836, -350.992, -74.0663, 1.47 ) }
    dend_9 { pt3dadd( 40.6553, -351.505, -74.2602, 0.96 ) }
    dend_9 { pt3dadd( 40.7078, -352.7, -74.6866, 0.22 ) }
    dend_9 { pt3dadd( 40.8104, -353.911, -75.0713, 0.22 ) }
    dend_9 { pt3dadd( 40.9122, -354.706, -75.2918, 0.81 ) }
    dend_9 { pt3dadd( 41.0633, -355.447, -75.4226, 1.84 ) }
    dend_9 { pt3dadd( 41.3691, -356.634, -75.5715, 2.36 ) }
    dend_9 { pt3dadd( 41.6189, -357.448, -75.6404, 2.36 ) }
    dend_9 { pt3dadd( 41.9619, -358.415, -75.6951, 1.33 ) }
    dend_9 { pt3dadd( 42.4598, -359.712, -75.7348, 0.22 ) }
    dend_9 { pt3dadd( 43.9483, -363.123, -76.0378, 0.22 ) }
    dend_9 { pt3dadd( 44.2999, -363.966, -76.1685, 0.81 ) }
    dend_9 { pt3dadd( 44.5468, -364.585, -76.2839, 1.03 ) }
    dend_9 { pt3dadd( 44.7661, -365.129, -76.4126, 1.18 ) }
    dend_9 { pt3dadd( 44.9493, -365.579, -76.54, 1.18 ) }
    dend_9 { pt3dadd( 46.0686, -368.428, -77.5137, 0.22 ) }
    dend_9 { pt3dadd( 48.0447, -373.79, -79.5816, 0.22 ) }
    dend_9 { pt3dadd( 48.392, -374.795, -79.9687, 0.96 ) }
    dend_9 { pt3dadd( 48.8249, -376.076, -80.4763, 1.92 ) }
    dend_9 { pt3dadd( 49.0408, -376.783, -80.7142, 1.92 ) }
    dend_9 { pt3dadd( 49.6748, -379.089, -81.3107, 0.22 ) }
    dend_9 { pt3dadd( 50.3732, -382.164, -81.7668, 0.22 ) }
    dend_9 { pt3dadd( 50.5958, -383.286, -81.8055, 0.81 ) }
    dend_9 { pt3dadd( 50.7742, -384.445, -81.6925, 1.03 ) }
    dend_9 { pt3dadd( 51.2034, -387.962, -81.1074, 0.15 ) }
    dend_9 { pt3dadd( 51.3477, -389.361, -80.811, 0.81 ) }
    dend_9 { pt3dadd( 51.4146, -390.386, -80.5317, 0.96 ) }
    dend_9 { pt3dadd( 51.5333, -393.473, -79.6477, 0.22 ) }
    dend_9 { pt3dadd( 51.6078, -397.822, -78.4626, 0.22 ) }
    dend_9 { pt3dadd( 51.5928, -399.165, -78.134, 0.52 ) }
    dend_9 { pt3dadd( 51.5786, -399.415, -78.0887, 0.81 ) }
    dend_9 { pt3dadd( 51.2438, -401.475, -77.7596, 0.22 ) }
    dend_9 { pt3dadd( 50.9317, -402.606, -77.5968, 1.18 ) }
    dend_9 { pt3dadd( 50.6159, -403.256, -77.4987, 1.4 ) }
    dend_9 { pt3dadd( 50.325, -403.679, -77.4465, 1.4 ) }
    dend_9 { pt3dadd( 49.0764, -405.337, -77.25, 0.22 ) }
    dend_9 { pt3dadd( 47.1401, -407.857, -77.0184, 0.22 ) }
    dend_9 { pt3dadd( 46.7918, -408.302, -76.9919, 0.74 ) }
    dend_9 { pt3dadd( 46.2143, -409.038, -76.9669, 0.74 ) }
    dend_9 { pt3dadd( 43.977, -412.017, -77.1446, 0.22 ) }
    dend_9 { pt3dadd( 43.3815, -412.858, -77.3554, 1.25 ) }
    dend_9 { pt3dadd( 42.9405, -413.477, -77.6684, 1.77 ) }
    dend_9 { pt3dadd( 42.6606, -413.838, -77.9275, 1.99 ) }
    dend_9 { pt3dadd( 42.1639, -414.455, -78.4364, 1.99 ) }
    dend_9 { pt3dadd( 41.3135, -415.452, -79.3552, 1.4 ) }
    dend_9 { pt3dadd( 39.6913, -417.223, -81.2464, 0.15 ) }
    dend_9 { pt3dadd( 37.7871, -419.265, -83.4871, 0.15 ) }
    dend_9 { pt3dadd( 37.4827, -419.58, -83.8291, 0.44 ) }
    dend_9 { pt3dadd( 37.2209, -419.85, -84.1082, 0.44 ) }
    dend_9 { pt3dadd( 36.3071, -420.799, -84.9838, 0.22 ) }
    dend_9 { pt3dadd( 35.6177, -421.506, -85.5447, 0.74 ) }
    dend_9 { pt3dadd( 35.2976, -421.833, -85.7742, 0.74 ) }
    dend_9 { pt3dadd( 34.3045, -422.922, -86.5447, 0.22 ) }
    dend_9 { pt3dadd( 33.5644, -423.761, -87.0999, 1.4 ) }
    dend_9 { pt3dadd( 33.1238, -424.298, -87.4785, 1.62 ) }
    dend_9 { pt3dadd( 32.7961, -424.738, -87.7808, 1.62 ) }
    dend_9 { pt3dadd( 31.7874, -426.211, -88.7061, 0.22 ) }
    dend_9 { pt3dadd( 31.516, -426.633, -88.9727, 0.81 ) }
    dend_9 { pt3dadd( 31.2784, -427.036, -89.2221, 0.96 ) }
    dend_9 { pt3dadd( 30.4206, -428.639, -90.1628, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_9 { pt3dadd( 29.1595, -431.211, -91.6296, 0.22 ) }
    dend_9 { pt3dadd( 28.6388, -432.414, -92.2704, 0.88 ) }
    dend_9 { pt3dadd( 28.4391, -432.902, -92.4904, 0.88 ) }
    dend_9 { pt3dadd( 27.607, -434.888, -93.2046, 0.22 ) }
    dend_9 { pt3dadd( 27.1811, -435.867, -93.4695, 0.22 ) }
    dend_9 { pt3dadd( 27.0468, -436.159, -93.5185, 0.96 ) }
    dend_9 { pt3dadd( 26.5796, -437.17, -93.6253, 0.96 ) }
    dend_9 { pt3dadd( 25.5977, -439.207, -93.7414, 0.22 ) }
    dend_9 { pt3dadd( 24.2863, -441.894, -93.7817, 0.22 ) }
    dend_9 { pt3dadd( 23.9725, -442.521, -93.7584, 0.81 ) }
    dend_9 { pt3dadd( 23.6148, -443.282, -93.7325, 1.11 ) }
    dend_9 { pt3dadd( 23.1683, -444.471, -93.7044, 0.37 ) }
    dend_9 { pt3dadd( 23.023, -445.012, -93.6976, 0.29 ) }
    dend_9 { pt3dadd( 22.9423, -445.593, -93.7034, 0.81 ) }
    dend_9 { pt3dadd( 22.9315, -446.603, -93.6952, 1.18 ) }
    dend_9 { pt3dadd( 23.0706, -448.978, -93.6647, 0.22 ) }
    dend_9 { pt3dadd( 23.2927, -451.376, -93.6357, 0.22 ) }
    dend_9 { pt3dadd( 23.3911, -452.244, -93.6243, 0.52 ) }
    dend_9 { pt3dadd( 23.4321, -452.577, -93.6204, 0.52 ) }
    dend_9 { pt3dadd( 23.8557, -456.219, -93.575, 0.22 ) }
    dend_9 { pt3dadd( 24.2689, -460.052, -93.5157, 0.22 ) }
    dend_9 { pt3dadd( 24.3399, -460.772, -93.4933, 0.74 ) }
    dend_9 { pt3dadd( 24.385, -461.321, -93.4802, 1.03 ) }
    dend_9 { pt3dadd( 24.42, -461.817, -93.4735, 1.03 ) }
    dend_9 { pt3dadd( 24.5802, -464.426, -93.4797, 0.22 ) }
    dend_9 { pt3dadd( 24.6176, -465.301, -93.5084, 0.66 ) }
    dend_9 { pt3dadd( 24.6413, -466.204, -93.5246, 0.81 ) }
    dend_9 { pt3dadd( 24.6408, -466.671, -93.4982, 0.88 ) }
    dend_9 { pt3dadd( 24.5798, -467.962, -93.3157, 0.15 ) }
    dend_9 { pt3dadd( 24.5018, -468.502, -93.155, 0.37 ) }
    dend_9 { pt3dadd( 24.3984, -468.882, -92.9654, 0.52 ) }
    dend_9 { pt3dadd( 23.9056, -470.335, -92.147, 0.22 ) }
    dend_9 { pt3dadd( 23.4709, -471.537, -91.4525, 0.44 ) }
    dend_9 { pt3dadd( 23.0024, -472.833, -90.6902, 0.22 ) }
    dend_9 { pt3dadd( 22.3209, -474.703, -89.5628, 0.44 ) }
    dend_9 { pt3dadd( 21.7833, -476.355, -88.5728, 0.96 ) }
    dend_9 { pt3dadd( 21.5073, -477.354, -87.973, 1.03 ) }
    dend_9 { pt3dadd( 21.2722, -478.602, -87.2435, 0.22 ) }
    dend_9 { pt3dadd( 21.2784, -479.102, -87.0123, 0.52 ) }
    dend_9 { pt3dadd( 21.3904, -479.322, -86.9647, 0.66 ) }
    dend_9 { pt3dadd( 22.5795, -480.164, -87.0345, 0.22 ) }
    dend_9 { pt3dadd( 23.279, -480.465, -87.0812, 0.74 ) }
    dend_9 { pt3dadd( 23.9339, -480.654, -87.1572, 0.88 ) }
    dend_9 { pt3dadd( 28.9311, -481.574, -88.0687, 0.22 ) }
    dend_9 { pt3dadd( 29.7646, -481.685, -88.2847, 0.22 ) }
    dend_9 { pt3dadd( 32.4206, -481.899, -89.2061, 1.11 ) }
    dend_9 { pt3dadd( 33.5291, -481.905, -89.7384, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 47/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 40.5109, -330.048, -58.8867, 1.69 ) }
    dend_6 { pt3dadd( 40.9005, -331.119, -58.0864, 1.69 ) }
    dend_6 { pt3dadd( 41.2407, -331.984, -57.4495, 0.22 ) }
    dend_6 { pt3dadd( 41.6052, -332.923, -56.7547, 0.22 ) }
    dend_6 { pt3dadd( 42.1533, -334.322, -55.7243, 0.88 ) }
    dend_6 { pt3dadd( 42.4037, -334.959, -55.2487, 1.03 ) }
    dend_6 { pt3dadd( 43.4153, -337.706, -53.0706, 0.22 ) }
    dend_6 { pt3dadd( 43.6832, -338.454, -52.476, 0.22 ) }
    dend_6 { pt3dadd( 43.9981, -339.375, -51.7311, 0.81 ) }
    dend_6 { pt3dadd( 44.2137, -340.028, -51.2149, 1.18 ) }
    dend_6 { pt3dadd( 44.4267, -340.683, -50.7307, 1.18 ) }
    dend_6 { pt3dadd( 44.9112, -342.358, -49.545, 0.15 ) }
    dend_6 { pt3dadd( 45.296, -343.936, -48.5074, 0.15 ) }
    dend_6 { pt3dadd( 45.3839, -344.279, -48.3132, 0.15 ) }
    dend_6 { pt3dadd( 45.5632, -344.93, -48.0153, 1.25 ) }
    dend_6 { pt3dadd( 45.6899, -345.411, -47.8421, 1.84 ) }
    dend_6 { pt3dadd( 45.8862, -346.152, -47.6544, 2.14 ) }
    dend_6 { pt3dadd( 46.0753, -346.844, -47.5488, 2.28 ) }
    dend_6 { pt3dadd( 46.2939, -347.725, -47.4099, 0.96 ) }
    dend_6 { pt3dadd( 46.5096, -348.674, -47.2265, 0.22 ) }
    dend_6 { pt3dadd( 46.6841, -349.512, -47.0313, 0.37 ) }
    dend_6 { pt3dadd( 46.7616, -349.922, -46.9225, 0.37 ) }
    dend_6 { pt3dadd( 46.864, -350.511, -46.7474, 0.37 ) }
    dend_6 { pt3dadd( 47.0581, -351.676, -46.3546, 0.22 ) }
    dend_6 { pt3dadd( 47.2866, -352.731, -45.9842, 1.03 ) }
    dend_6 { pt3dadd( 47.3964, -353.136, -45.845, 1.55 ) }
    dend_6 { pt3dadd( 47.4728, -353.381, -45.7658, 1.77 ) }
    dend_6 { pt3dadd( 47.7061, -354.094, -45.5501, 0.81 ) }
    dend_6 { pt3dadd( 47.9296, -354.766, -45.371, 0.22 ) }
    dend_6 { pt3dadd( 48.4264, -356.276, -45.0479, 0.22 ) }
    dend_6 { pt3dadd( 48.8432, -357.528, -44.9023, 0.22 ) }
    dend_6 { pt3dadd( 49.063, -358.208, -44.8663, 0.81 ) }
    dend_6 { pt3dadd( 49.2113, -358.69, -44.8607, 1.03 ) }
    dend_6 { pt3dadd( 49.3334, -359.092, -44.8655, 1.03 ) }
    dend_6 { pt3dadd( 49.5081, -359.636, -44.8867, 0.88 ) }
    dend_6 { pt3dadd( 49.9448, -360.85, -44.9646, 0.22 ) }
    dend_6 { pt3dadd( 50.5594, -362.22, -45.0531, 0.22 ) }
    dend_6 { pt3dadd( 51.0147, -363.095, -45.077, 0.88 ) }
    dend_6 { pt3dadd( 51.2776, -363.556, -45.0671, 1.11 ) }
    dend_6 { pt3dadd( 51.5388, -363.987, -45.0351, 1.11 ) }
    dend_6 { pt3dadd( 52.1036, -364.861, -44.9428, 0.44 ) }
    dend_6 { pt3dadd( 52.9469, -366.06, -44.8614, 0.22 ) }
    dend_6 { pt3dadd( 53.6122, -367.087, -44.716, 0.22 ) }
    dend_6 { pt3dadd( 54.0292, -367.873, -44.4908, 1.33 ) }
    dend_6 { pt3dadd( 54.3199, -368.613, -44.1568, 2.36 ) }
    dend_6 { pt3dadd( 54.4867, -369.21, -43.7939, 2.58 ) }
    dend_6 { pt3dadd( 54.7209, -370.607, -42.6968, 1.84 ) }
    dend_6 { pt3dadd( 54.894, -372.922, -40.5126, 0.66 ) }
    dend_6 { pt3dadd( 54.9307, -374.141, -39.2083, 0.29 ) }
    dend_6 { pt3dadd( 54.9446, -374.859, -38.3676, 1.18 ) }
    dend_6 { pt3dadd( 54.9542, -375.359, -37.7393, 1.33 ) }
    dend_6 { pt3dadd( 54.9748, -376.471, -36.2636, 0.22 ) }
    dend_6 { pt3dadd( 54.9954, -377.192, -35.2792, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 55.04, -377.702, -34.6599, 0.22 ) }
    dend_6 { pt3dadd( 55.0556, -378.281, -33.9951, 1.4 ) }
    dend_6 { pt3dadd( 55.0447, -378.628, -33.6303, 2.21 ) }
    dend_6 { pt3dadd( 55.0073, -378.997, -33.2611, 2.5 ) }
    dend_6 { pt3dadd( 54.9177, -379.604, -32.6891, 2.5 ) }
    dend_6 { pt3dadd( 54.3662, -382.679, -29.9528, 0.22 ) }
    dend_6 { pt3dadd( 54.0135, -384.262, -28.6103, 0.22 ) }
    dend_6 { pt3dadd( 53.6324, -385.742, -27.408, 0.22 ) }
    dend_6 { pt3dadd( 53.3912, -386.637, -26.7133, 0.74 ) }
    dend_6 { pt3dadd( 53.2674, -387.089, -26.3792, 1.03 ) }
    dend_6 { pt3dadd( 53.1284, -387.6, -26.0277, 1.03 ) }
    dend_6 { pt3dadd( 52.6795, -389.265, -25.0883, 0.37 ) }
    dend_6 { pt3dadd( 52.4741, -390.098, -24.6626, 1.11 ) }
    dend_6 { pt3dadd( 52.3354, -390.72, -24.3631, 1.99 ) }
    dend_6 { pt3dadd( 52.2343, -391.34, -24.0977, 2.28 ) }
    dend_6 { pt3dadd( 52.1767, -391.833, -23.9025, 2.28 ) }
    dend_6 { pt3dadd( 52.1578, -393.155, -23.4517, 0.29 ) }
    dend_6 { pt3dadd( 52.2375, -394.037, -23.214, 0.15 ) }
    dend_6 { pt3dadd( 52.3007, -394.476, -23.1095, 0.44 ) }
    dend_6 { pt3dadd( 52.4115, -395.108, -22.9755, 0.59 ) }
    dend_6 { pt3dadd( 52.4822, -395.497, -22.8999, 0.59 ) }
    dend_6 { pt3dadd( 52.8, -397.107, -22.635, 0.22 ) }
    dend_6 { pt3dadd( 52.9005, -397.571, -22.5696, 0.52 ) }
    dend_6 { pt3dadd( 52.983, -397.976, -22.5225, 0.66 ) }
    dend_6 { pt3dadd( 53.3059, -399.719, -22.4632, 0.15 ) }
    dend_6 { pt3dadd( 53.488, -400.776, -22.5293, 0.15 ) }
    dend_6 { pt3dadd( 53.621, -401.569, -22.6431, 1.18 ) }
    dend_6 { pt3dadd( 53.694, -401.982, -22.7326, 1.4 ) }
    dend_6 { pt3dadd( 53.7602, -402.307, -22.8124, 1.4 ) }
    dend_6 { pt3dadd( 54.2079, -404.15, -23.347, 0.22 ) }
    dend_6 { pt3dadd( 54.5107, -405.182, -23.7195, 0.22 ) }
    dend_6 { pt3dadd( 54.7184, -405.82, -23.9666, 0.74 ) }
    dend_6 { pt3dadd( 54.9315, -406.467, -24.2124, 0.96 ) }
    dend_6 { pt3dadd( 55.3474, -407.676, -24.6809, 0.29 ) }
    dend_6 { pt3dadd( 55.6923, -408.625, -25.0461, 1.25 ) }
    dend_6 { pt3dadd( 56.1114, -409.704, -25.4365, 2.28 ) }
    dend_6 { pt3dadd( 56.3158, -410.227, -25.6232, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 56.3158, -410.227, -25.6232, 0.22 ) }
    dend_8 { pt3dadd( 56.9279, -411.592, -24.4565, 0.22 ) }
    dend_8 { pt3dadd( 57.6121, -413.394, -22.9361, 0.22 ) }
    dend_8 { pt3dadd( 57.9385, -414.42, -22.0466, 0.22 ) }
    dend_8 { pt3dadd( 58.1528, -415.2, -21.3787, 0.88 ) }
    dend_8 { pt3dadd( 58.2672, -415.684, -20.9676, 1.18 ) }
    dend_8 { pt3dadd( 58.3397, -416.04, -20.6614, 1.33 ) }
    dend_8 { pt3dadd( 58.4543, -417.174, -19.6857, 0.15 ) }
    dend_8 { pt3dadd( 58.5443, -418.629, -18.4482, 0.15 ) }
    dend_8 { pt3dadd( 58.5708, -419.328, -17.8297, 0.66 ) }
    dend_8 { pt3dadd( 58.5817, -419.817, -17.3997, 1.11 ) }
    dend_8 { pt3dadd( 58.6014, -420.396, -16.901, 1.4 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 49/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 56.3158, -410.227, -25.6232, 0.37 ) }
    dend_7 { pt3dadd( 57.3522, -412.626, -26.291, 0.37 ) }
    dend_7 { pt3dadd( 58.6612, -415.607, -27.078, 0.22 ) }
    dend_7 { pt3dadd( 59.3164, -417.11, -27.4452, 0.96 ) }
    dend_7 { pt3dadd( 59.7487, -418.103, -27.6377, 1.18 ) }
    dend_7 { pt3dadd( 60.0606, -418.804, -27.7518, 1.18 ) }
    dend_7 { pt3dadd( 61.3589, -421.692, -28.1409, 0.22 ) }
    dend_7 { pt3dadd( 61.8707, -422.841, -28.1978, 1.33 ) }
    dend_7 { pt3dadd( 62.1939, -423.593, -28.188, 1.47 ) }
    dend_7 { pt3dadd( 63.0202, -425.636, -28.0877, 0.22 ) }
    dend_7 { pt3dadd( 63.5444, -426.98, -28.0107, 1.03 ) }
    dend_7 { pt3dadd( 63.8177, -427.701, -27.9698, 1.03 ) }
    dend_7 { pt3dadd( 65.4669, -432.239, -27.7022, 0.22 ) }
    dend_7 { pt3dadd( 65.6707, -432.84, -27.6682, 0.59 ) }
    dend_7 { pt3dadd( 65.9409, -433.632, -27.6054, 0.59 ) }
    dend_7 { pt3dadd( 66.4104, -435.034, -27.4546, 0.15 ) }
    dend_7 { pt3dadd( 66.6114, -435.633, -27.3591, 0.66 ) }
    dend_7 { pt3dadd( 66.9279, -436.503, -27.204, 0.81 ) }
    dend_7 { pt3dadd( 67.1937, -437.171, -27.0741, 0.29 ) }
    dend_7 { pt3dadd( 68.38, -440.029, -26.5027, 0.15 ) }
    dend_7 { pt3dadd( 68.7182, -440.852, -26.326, 0.44 ) }
    dend_7 { pt3dadd( 68.9499, -441.438, -26.1777, 0.44 ) }
    dend_7 { pt3dadd( 70.3078, -444.935, -25.2591, 0.22 ) }
    dend_7 { pt3dadd( 70.7893, -446.228, -24.9248, 0.96 ) }
    dend_7 { pt3dadd( 71.1593, -447.426, -24.598, 1.11 ) }
    dend_7 { pt3dadd( 71.4878, -448.969, -24.1945, 0.29 ) }
    dend_7 { pt3dadd( 71.9193, -452.173, -23.3173, 0.15 ) }
    dend_7 { pt3dadd( 71.9677, -452.969, -23.0831, 0.59 ) }
    dend_7 { pt3dadd( 71.9477, -453.604, -22.8846, 0.74 ) }
    dend_7 { pt3dadd( 71.6781, -456.534, -22.053, 0.22 ) }
    dend_7 { pt3dadd( 71.1659, -459.756, -21.2733, 0.22 ) }
    dend_7 { pt3dadd( 70.8648, -461.114, -21.0051, 0.74 ) }
    dend_7 { pt3dadd( 70.7218, -461.637, -20.9214, 0.74 ) }
    dend_7 { pt3dadd( 70.0948, -463.749, -20.6075, 0.22 ) }
    dend_7 { pt3dadd( 69.5516, -465.5, -20.3904, 0.22 ) }
    dend_7 { pt3dadd( 69.2142, -466.539, -20.3403, 0.81 ) }
    dend_7 { pt3dadd( 68.8333, -467.518, -20.3046, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_38 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_31 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_36 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_12 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_11 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_9 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_7 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_10 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_40 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_17 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_39 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 7
    dend_38 nseg = 3
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_24 nseg = 5
    dend_21 nseg = 3
    dend_14 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 7
    dend_30 nseg = 5
    dend_23 nseg = 5
    dend_22 nseg = 3
    dend_13 nseg = 7
    dend_16 nseg = 5
    dend_12 nseg = 7
    dend_11 nseg = 15
    dend_5 nseg = 13
    dend_4 nseg = 3
    dend_9 nseg = 9
    dend_6 nseg = 5
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_SBC_799e027057_0_0


