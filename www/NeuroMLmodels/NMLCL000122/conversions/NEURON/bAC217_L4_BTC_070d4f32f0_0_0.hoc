// Cell: bAC217_L4_BTC_070d4f32f0_0_0
/*
{
  "id" : "bAC217_L4_BTC_070d4f32f0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.465097, 8.04727, -0.0175891, 2.59198", "0.424424, 7.2054, -0.0170165, 4.38773", "0.383751, 6.36352, -0.0164438, 5.44399", "0.343077, 5.52165, -0.0158711, 6.50025", "0.302404, 4.67978, -0.0152984, 7.50099", "0.261731, 3.83791, -0.0147257, 8.3937", "0.221058, 2.99604, -0.014153, 9.3444", "0.180384, 2.15416, -0.0135803, 10.2953", "0.139711, 1.31229, -0.0130077, 10.7907", "0.0990378, 0.470419, -0.012435, 10.75", "0.0583646, -0.371454, -0.0118623, 10.6053", "0.0176913, -1.21333, -0.0112896, 10.4607", "-0.0229819, -2.0552, -0.0107169, 10.316", "-0.0636552, -2.89707, -0.0101442, 9.78436", "-0.104328, -3.73894, -0.00957155, 9.07182", "-0.145002, -4.58081, -0.00899886, 8.12082", "-0.185675, -5.42269, -0.00842618, 7.10426", "-0.226348, -6.26456, -0.00785349, 5.9023", "-0.267021, -7.10643, -0.0072808, 4.68096", "-0.307695, -7.9483, -0.00670812, 3.08046", "-0.348368, -8.79018, -0.00613543, 1.81235" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.46257, 6.73541, -0.101719, 1.82", "-1.57852, 7.33384, 0.980729, 1.82", "-1.65692, 7.63789, 1.47923, 1.82", "-1.8599, 8.33981, 2.48434, 1.68", "-2.07515, 9.04815, 3.42895, 1.82", "-2.07515, 9.04815, 3.42895, 1.96", "-2.2987, 9.7838, 4.40996, 1.4", "-2.44499, 10.1304, 4.8501, 1.26", "-2.62925, 10.4868, 5.28551, 1.4", "-2.62925, 10.4868, 5.28551, 1.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.682563, -8.18459, 0.898281, 2.1", "-0.315067, -8.8965, 1.46521, 2.1", "0.0285246, -9.81589, 1.99006, 1.96", "0.186581, -10.3439, 2.21402, 2.1", "0.250779, -10.5853, 2.29775, 1.96", "0.349461, -11.0875, 2.44338, 1.82", "0.425835, -11.6526, 2.58388, 1.68", "0.452058, -12.2449, 2.63339, 1.54", "0.436838, -12.7741, 2.63339, 1.4", "0.422551, -13.0307, 2.63339, 1.4", "0.383928, -13.6243, 2.63339, 2.38", "0.360904, -13.9916, 2.63339, 2.24", "0.347655, -14.5209, 2.63339, 2.38", "0.357433, -15.0529, 2.63339, 2.24", "0.373346, -15.5821, 2.63339, 2.1", "0.398758, -15.9575, 2.63339, 1.96", "0.431842, -16.2214, 2.63339, 1.82", "0.495731, -16.7379, 2.63339, 1.54", "0.553955, -17.2641, 2.63339, 1.68", "0.587333, -17.6375, 2.66574, 1.82", "0.621489, -18.1626, 2.74437, 1.68", "0.652015, -18.6728, 2.84206, 1.68", "0.665853, -19.2426, 3.01231, 1.82", "0.667716, -19.7368, 3.20239, 1.82", "0.651263, -20.7218, 3.71716, 1.82", "0.645191, -21.2322, 4.02602, 1.68", "0.641145, -21.4534, 4.17372, 1.68", "0.627039, -22.276, 4.76626, 1.12", "0.612636, -22.7014, 5.08105, 0.98", "0.55011, -23.6193, 5.71345, 1.12", "0.505945, -24.078, 5.97427, 0.98", "0.479084, -24.3157, 6.09076, 1.12", "0.479084, -24.3157, 6.09076, 1.26", "0.426387, -24.893, 6.19146, 1.26", "0.387055, -25.4859, 6.24567, 1.12", "0.382682, -25.8538, 6.24567, 0.98", "0.410062, -26.3826, 6.24567, 1.12", "0.469193, -26.9114, 6.24567, 1.26", "0.552048, -27.4343, 6.24567, 1.4", "0.677373, -27.9421, 6.24567, 1.26", "0.835879, -28.4473, 6.24567, 1.4", "0.96618, -28.8002, 6.24567, 1.4", "0.96618, -28.8002, 6.24567, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.348368, -8.79018, -0.00613543, 0.28", "-1.07222, -23.7727, -0.00613543, 0.28", "-1.79606, -38.7552, -0.00613543, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.62925, 10.4868, 5.28551, 0.84", "-2.64942, 10.986, 4.9324, 0.84", "-2.70185, 11.9487, 4.35072, 0.7", "-2.7347, 12.4396, 4.09777, 0.84", "-2.78664, 13.4592, 3.62278, 0.98", "-2.81964, 13.9685, 3.40956, 1.12", "-2.8501, 14.4632, 3.19245, 1.26", "-2.88584, 14.9736, 2.98232, 1.4", "-2.94357, 15.4924, 2.80734, 1.54", "-2.98417, 15.7585, 2.7436, 1.68", "-3.11463, 16.3625, 2.71896, 1.68", "-3.39304, 17.4497, 2.81014, 1.54", "-3.56183, 18.0268, 2.92321, 1.4", "-3.73547, 18.5308, 3.07106, 1.4", "-4.12635, 19.5471, 3.35789, 1.26", "-4.50795, 20.4787, 3.5086, 1.12", "-4.71621, 20.9866, 3.46837, 0.98", "-4.71621, 20.9866, 3.46837, 0.98", "-4.81198, 21.3073, 2.94822, 0.7", "-4.93617, 21.8434, 2.04706, 0.56", "-5.03071, 22.4439, 1.05826, 0.42", "-5.07808, 23.0089, 0.169594, 0.56", "-5.06562, 24.1144, -1.50068, 0.56", "-5.03225, 24.4325, -1.9487, 1.26", "-4.97262, 24.8124, -2.42074, 1.12", "-4.8952, 25.2645, -2.83831, 0.98", "-4.81519, 25.8063, -3.12562, 0.84", "-4.78386, 26.8585, -3.18125, 0.7", "-4.80737, 27.1225, -3.10236, 0.84", "-5.09085, 28.2177, -2.56983, 0.1", "-5.56791, 28.9231, -1.94017, 0.1", "-5.78291, 29.1063, -1.6822, 0.14", "-5.78291, 29.1063, -1.6822, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.62925, 10.4868, 5.28551, 3.22", "-2.47454, 10.7581, 5.0312, 3.22", "-2.27446, 11.2136, 4.63275, 3.08", "-1.95267, 12.1225, 3.92679, 2.94", "-1.8663, 12.4395, 3.70959, 2.8", "-1.7497, 12.9401, 3.3454, 2.66", "-1.555, 13.8983, 2.65676, 2.52", "-1.49067, 14.3651, 2.33689, 2.38", "-1.44646, 14.8976, 2.00552, 2.24", "-1.41806, 15.4043, 1.74717, 2.1", "-1.38769, 16.3218, 1.2363, 1.96", "-1.37502, 16.8717, 0.911794, 0.28", "-1.34299, 17.4193, 0.608449, 0.42", "-1.31029, 17.7603, 0.396707, 0.56", "-1.25068, 18.2779, 0.0449053, 0.7", "-1.11998, 19.1075, -0.518413, 0.84", "-1.08565, 19.3603, -0.638721, 0.84" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.96618, -28.8002, 6.24567, 1.4", "1.04255, -29.0812, 6.2426, 1.4", "1.16506, -29.6475, 6.23779, 1.54", "1.23801, -30.1912, 6.05092, 1.68", "1.25711, -30.4107, 5.8606, 1.54", "1.27473, -30.8459, 5.47839, 1.4", "1.27473, -30.8459, 5.47839, 1.54", "1.28044, -31.1921, 5.24644, 1.4", "1.28551, -32.2265, 4.66489, 1.26", "1.30643, -33.3121, 4.20185, 1.12", "1.32288, -33.9369, 4.01952, 0.98", "1.34901, -34.5061, 3.91398, 0.84", "1.42619, -35.7029, 3.70994, 0.7", "1.44581, -35.9911, 3.6739, 0.56", "1.47085, -36.5695, 3.64798, 0.56", "1.49434, -37.2197, 3.62426, 0.7", "1.50579, -37.7784, 3.51452, 0.84", "1.51479, -38.9057, 3.14849, 0.98", "1.52101, -39.2854, 2.98926, 0.56", "1.52377, -39.8966, 2.7651, 0.7", "1.52832, -40.45, 2.63051, 0.84", "1.56974, -41.6669, 2.52907, 0.84", "1.60427, -42.2428, 2.58307, 0.98", "1.65783, -42.8044, 2.72751, 1.12", "1.8029, -43.8507, 3.07334, 0.56", "1.99333, -44.938, 3.50901, 0.42", "2.097, -45.4579, 3.74287, 0.42", "2.21622, -45.9812, 3.9688, 0.56", "2.27964, -46.2507, 4.04966, 0.7", "2.34981, -46.5323, 4.07285, 1.12", "2.49586, -47.0762, 3.97005, 1.26", "2.63481, -47.6086, 3.78831, 1.12", "2.90345, -48.6186, 3.54039, 1.12", "2.90345, -48.6186, 3.54039, 1.12", "2.95748, -48.9019, 3.53775, 1.12", "3.03306, -49.4774, 3.58532, 0.98", "3.08306, -50.0469, 3.67987, 1.12", "3.15661, -51.1681, 4.04607, 1.12", "3.19429, -51.7664, 4.30483, 1.26", "3.23422, -52.3603, 4.56879, 1.26", "3.26149, -52.7276, 4.73148, 1.4", "3.27759, -52.989, 4.85226, 1.4", "3.33338, -53.9651, 5.29728, 1.26", "3.37301, -54.5051, 5.50353, 1.26", "3.45103, -55.03, 5.74338, 1.26", "3.56796, -55.5334, 6.00558, 1.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.96618, -28.8002, 6.24567, 2.24", "0.637943, -29.137, 5.26549, 2.24", "0.378461, -29.4901, 4.27193, 2.38", "0.118672, -29.8436, 3.27718, 2.52", "0.0549293, -29.9303, 3.03311, 2.38", "-0.211384, -30.2926, 2.01339, 2.24", "-0.45544, -30.6247, 1.07889, 2.1", "-0.630081, -30.9864, 0.180496, 1.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.79606, -38.7552, -0.00613543, 0.28", "-2.51991, -53.7378, -0.00613543, 0.28", "-3.24376, -68.7203, -0.00613543, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-5.78291, 29.1063, -1.6822, 0.28", "-5.61946, 30.3016, -2.14057, 0.28", "-5.65392, 31.5639, -2.37139, 0.42", "-5.71826, 32.1913, -2.42843, 0.56", "-5.81551, 32.8138, -2.44393, 0.56", "-5.8743, 33.1249, -2.43939, 0.56", "-6.13503, 34.3864, -2.3932, 0.56", "-6.31077, 34.9848, -2.28336, 0.7", "-6.31077, 34.9848, -2.28336, 0.7", "-6.47103, 35.5696, -2.15713, 0.56", "-6.56964, 36.1903, -2.0795, 0.42", "-6.60522, 36.8192, -2.05887, 0.28", "-6.58447, 37.5259, -2.09648, 0.14", "-6.52483, 38.1369, -2.17875, 0.1", "-6.44375, 38.7511, -2.29383, 0.1", "-6.19401, 39.8928, -2.60855, 0.14", "-6.03094, 40.4714, -2.80778, 0.84", "-5.85239, 41.0338, -3.02915, 0.7", "-5.46486, 42.1508, -3.53315, 0.56", "-5.25888, 42.6854, -3.79567, 0.7", "-4.81052, 43.7969, -4.37186, 0.84", "-4.81052, 43.7969, -4.37186, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-5.78291, 29.1063, -1.6822, 0.56", "-5.67447, 29.3268, -2.54811, 0.56", "-5.56479, 29.5427, -3.32881, 0.42", "-5.31992, 29.9597, -4.80483, 0.28", "-5.17804, 30.1835, -5.58068, 0.14", "-4.91394, 30.6313, -7.04373, 0.28", "-4.783, 30.8762, -7.78467, 0.42", "-4.63424, 31.17, -8.58946, 0.56", "-4.37361, 31.7698, -9.98189, 0.42", "-4.2447, 32.1342, -10.6724, 0.56", "-4.1696, 32.3786, -11.072, 0.84", "-4.11876, 32.6394, -11.4088, 0.7", "-4.09493, 32.9248, -11.7253, 0.56", "-4.10112, 33.2233, -12.0333, 0.42", "-4.18507, 33.8045, -12.5629, 0.56", "-4.20595, 33.9494, -12.7169, 0.7", "-4.24591, 34.2358, -13.093, 1.12", "-4.33233, 34.6984, -13.857, 0.98", "-4.40072, 35.0175, -14.6091, 0.84", "-4.45354, 35.1618, -15.058, 0.7", "-4.56403, 35.3536, -15.8177, 0.84", "-4.61566, 35.4199, -16.1022, 0.56", "-4.70521, 35.5051, -16.567, 0.42", "-4.92153, 35.6707, -17.3977, 0.56", "-5.10667, 35.8155, -17.9537, 0.28", "-5.39604, 36.076, -18.6752, 0.14", "-5.6493, 36.3319, -19.1552, 0.1", "-6.00689, 36.7736, -19.746, 0.14", "-6.21761, 37.0809, -20.0488, 0.28", "-6.35952, 37.291, -20.2153, 0.14", "-6.57829, 37.6342, -20.4592, 0.1", "-6.72945, 37.8691, -20.5775, 0.14", "-6.93419, 38.2188, -20.7117, 0.84", "-7.08961, 38.4767, -20.7479, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-1.08565, 19.3603, -0.638721, 1.4", "-1.14177, 20.3748, -0.631178, 1.4", "-1.23225, 20.8972, -0.680418, 1.4", "-1.37704, 21.3998, -0.824606, 1.26", "-1.52402, 21.8354, -0.97546, 1.12", "-1.60108, 22.0495, -1.05046, 0.98", "-1.92763, 22.9322, -1.3444, 0.84", "-2.10365, 23.3379, -1.51289, 0.7", "-2.49507, 24.2037, -1.87051, 0.56", "-2.67235, 24.6211, -2.0323, 0.56", "-2.82374, 25.0565, -2.17917, 0.42", "-2.9356, 25.501, -2.29707, 0.56", "-2.96619, 25.7378, -2.33567, 0.7", "-2.98932, 26.2174, -2.39566, 0.56", "-2.97111, 26.7581, -2.43661, 0.56", "-2.89728, 27.2851, -2.45618, 0.7", "-2.82482, 27.6237, -2.45832, 0.56", "-2.68891, 28.1385, -2.45088, 0.56", "-2.54157, 28.6604, -2.43435, 0.56", "-2.44224, 28.9797, -2.42275, 0.42", "-2.11958, 30.0294, -2.43785, 0.56", "-1.97222, 30.5415, -2.47442, 0.7", "-1.88146, 30.8681, -2.5207, 0.56", "-1.74302, 31.3701, -2.63229, 0.42", "-1.62952, 31.8638, -2.82646, 0.28", "-1.48751, 32.639, -3.24527, 0.14", "-1.42461, 33.076, -3.54303, 0.56", "-1.34078, 33.5268, -3.8301, 0.42", "-1.27523, 33.8157, -3.99457, 0.56", "-0.975942, 34.7935, -4.38242, 0.7", "-0.856406, 35.108, -4.4447, 0.56", "-0.72443, 35.4236, -4.44802, 0.42", "-0.333353, 36.3534, -4.37204, 0.98", "-0.217496, 36.6742, -4.34527, 0.98", "0.0994131, 37.6311, -4.27003, 0.84", "0.188631, 37.9657, -4.26698, 0.84", "0.280049, 38.4935, -4.34229, 0.98", "0.329898, 39.012, -4.4604, 0.84", "0.384055, 39.994, -4.71226, 0.7", "0.408456, 40.3245, -4.7584, 0.56", "0.515817, 41.3336, -4.80911, 0.7", "0.515817, 41.3336, -4.80911, 0.84", "0.795765, 42.2079, -4.44938, 0.84", "1.14148, 43.0414, -3.9921, 0.7", "1.49746, 43.7126, -3.52369, 0.56", "1.60474, 43.8886, -3.397, 0.56", "1.88014, 44.2593, -3.11533, 0.98", "2.18106, 44.6336, -2.88163, 0.84", "2.33286, 44.8056, -2.80473, 0.98", "2.96088, 45.4527, -2.61277, 0.42", "3.33514, 45.8353, -2.53407, 0.56", "4.02135, 46.5644, -2.38589, 0.7", "4.37356, 46.96, -2.31003, 0.56", "4.51726, 47.1527, -2.28242, 0.7", "4.73802, 47.582, -2.24969, 0.84", "4.85738, 48.0399, -2.25277, 0.56", "4.9073, 48.5211, -2.26047, 0.42", "4.89934, 49.002, -2.28439, 0.28", "4.86876, 49.5418, -2.30003, 0.42", "4.82493, 50.0107, -2.3462, 0.56", "4.77394, 50.4855, -2.4241, 0.7", "4.75698, 50.7201, -2.48097, 0.56", "4.73977, 51.2384, -2.64018, 0.84", "4.75215, 51.7385, -2.82273, 0.84", "4.8337, 52.5915, -3.17463, 0.7", "4.91857, 53.0699, -3.39247, 0.56", "5.02352, 53.5527, -3.61278, 0.7", "5.09338, 53.8586, -3.74071, 0.7", "5.22012, 54.3515, -3.92418, 0.84", "5.34143, 54.8375, -4.11245, 0.7", "5.39631, 55.0652, -4.17288, 0.56", "5.49543, 55.5345, -4.23667, 0.42", "5.57258, 56.063, -4.23308, 0.28", "5.6113, 56.5982, -4.16409, 0.14", "5.6034, 57.4976, -3.95486, 0.28", "5.55278, 58.4758, -3.67507, 0.1", "5.49751, 59.4144, -3.39592, 0.1", "5.47833, 59.8786, -3.26067, 0.1", "5.47103, 60.1098, -3.19822, 0.14", "5.45998, 60.58, -3.0847, 0.84", "5.46325, 61.1125, -2.98125, 0.7", "5.46312, 61.6448, -2.96458, 0.7", "5.46345, 62.1864, -2.99633, 0.56", "5.47072, 62.7177, -3.03107, 0.56", "5.47517, 62.959, -3.04745, 0.7", "5.48077, 63.2003, -3.06441, 0.84", "5.47831, 63.681, -3.09116, 0.56", "5.46681, 64.2128, -3.11621, 0.42", "5.45656, 64.6937, -3.13894, 0.56", "5.45023, 65.2338, -3.16716, 0.42", "5.44311, 65.7672, -3.19457, 0.28", "5.42786, 66.2504, -3.21484, 0.42", "5.40522, 66.7921, -3.2347, 0.28", "5.38691, 67.126, -3.24469, 0.42", "5.34841, 67.6671, -3.25631, 0.56", "5.30163, 68.1486, -3.26017, 0.56", "5.23452, 68.617, -3.25273, 0.42", "5.14543, 69.0922, -3.23431, 0.56", "5.01423, 69.6173, -3.197, 0.7", "4.85831, 70.0753, -3.18676, 0.84", "4.85831, 70.0753, -3.18676, 0.7", "4.64859, 70.566, -3.22639, 0.28", "4.46564, 71.0079, -3.28164, 0.14", "4.29031, 71.4453, -3.34614, 0.1", "3.91008, 72.3316, -3.54552, 0.14", "3.72635, 72.7637, -3.66254, 0.28", "3.52257, 73.2347, -3.83856, 0.42", "3.33831, 73.6998, -4.02102, 0.56", "3.17924, 74.1254, -4.18033, 0.56", "2.87126, 75.0177, -4.46507, 0.56", "2.7318, 75.4678, -4.56374, 0.56", "2.46317, 76.3056, -4.71053, 0.7", "2.12012, 77.2127, -4.88814, 1.12", "1.93129, 77.6486, -4.96665, 0.98", "1.73493, 78.0869, -5.0259, 0.84", "1.53017, 78.5223, -5.04367, 0.7", "1.31093, 78.9415, -5.05256, 0.56", "0.868108, 79.6754, -5.11052, 0.42", "0.55788, 80.1157, -5.20737, 0.28", "0.290076, 80.4996, -5.2774, 0.14", "-0.00159303, 80.9587, -5.33741, 0.1", "-0.205652, 81.3856, -5.33041, 0.1", "-0.470315, 82.3225, -5.1818, 0.14", "-0.470315, 82.3225, -5.1818, 0.28", "-0.484326, 83.271, -4.91291, 0.28", "-0.446993, 83.7914, -4.76405, 0.42", "-0.311766, 84.7588, -4.50427, 0.56", "-0.221225, 85.2779, -4.3753, 0.56", "-0.180026, 85.5102, -4.32147, 0.7", "-0.108679, 86.0325, -4.24676, 0.7", "-0.0673908, 86.573, -4.22376, 0.56", "-0.0615275, 87.1045, -4.25596, 0.42", "-0.0971641, 87.6387, -4.34386, 0.28", "-0.150932, 88.1109, -4.43456, 0.42", "-0.249738, 88.6174, -4.57232, 0.28", "-0.368038, 89.062, -4.72201, 0.14", "-0.639376, 89.8915, -5.0323, 0.1", "-0.7878, 90.3122, -5.19726, 0.1", "-0.935227, 90.7391, -5.36411, 0.14", "-1.22217, 91.625, -5.68825, 0.28", "-1.36644, 92.1237, -5.84588, 0.14", "-1.475, 92.5735, -5.95581, 0.28", "-1.57172, 93.1012, -6.03656, 0.42", "-1.64925, 93.6324, -6.10355, 0.42", "-1.69669, 94.1015, -6.14371, 0.28", "-1.72439, 94.6415, -6.16085, 0.42", "-1.74368, 95.1222, -6.17889, 0.56", "-1.75269, 95.654, -6.20523, 0.56", "-1.75742, 95.8933, -6.21673, 0.7", "-1.77222, 96.4335, -6.24056, 0.56", "-1.79268, 96.9668, -6.26107, 0.42", "-1.84662, 97.5031, -6.30706, 0.56", "-1.9293, 98.0269, -6.37094, 0.7", "-2.03214, 98.4949, -6.43789, 0.84", "-2.15022, 98.9558, -6.51212, 0.7", "-2.2895, 99.4121, -6.59296, 0.84", "-2.59298, 100.332, -6.7685, 0.7", "-2.73819, 100.785, -6.85908, 0.56", "-2.80053, 101.011, -6.90675, 0.56", "-2.88273, 101.525, -7.02058, 0.7", "-2.88273, 101.525, -7.02058, 0.56", "-2.84977, 102.064, -7.06708, 0.14", "-2.76993, 102.59, -7.04466, 0.1", "-2.72049, 102.927, -7.00897, 0.1", "-2.65032, 103.595, -6.89803, 0.1", "-2.64054, 103.831, -6.84538, 0.14", "-2.70154, 104.797, -6.66563, 0.28", "-2.74484, 105.032, -6.62844, 0.42", "-2.91968, 105.538, -6.61231, 0.56", "-3.13407, 105.964, -6.69203, 0.7", "-3.36596, 106.359, -6.81275, 0.56", "-3.83558, 107.161, -7.14235, 0.42", "-4.05413, 107.539, -7.34486, 0.28", "-4.47325, 108.321, -7.77403, 0.42", "-4.82999, 109.074, -8.1763, 0.56", "-5.18153, 109.913, -8.55171, 0.56", "-5.38059, 110.376, -8.72426, 0.42", "-5.47077, 110.595, -8.77297, 0.28", "-5.68327, 111.081, -8.84664, 0.1", "-5.87945, 111.522, -8.87339, 0.1", "-6.08926, 111.955, -8.89402, 0.1", "-6.59289, 112.828, -9.01723, 0.1", "-6.85402, 113.229, -9.07292, 0.1", "-7.11993, 113.62, -9.12111, 0.14", "-7.38211, 114.021, -9.16733, 0.28", "-7.51803, 114.218, -9.20282, 0.42", "-7.77725, 114.607, -9.27676, 0.56", "-8.04562, 115.066, -9.34258, 0.84", "-8.28264, 115.472, -9.40972, 0.7", "-8.51485, 115.889, -9.47455, 0.56", "-8.96885, 116.756, -9.58661, 0.42", "-9.18196, 117.188, -9.63153, 0.28", "-9.37131, 117.631, -9.6393, 0.14", "-9.52683, 118.088, -9.61645, 0.28", "-9.64218, 118.544, -9.56029, 0.42", "-9.71564, 119.014, -9.47248, 0.56", "-9.73394, 119.246, -9.41517, 0.56", "-9.76326, 120.206, -9.19364, 0.56", "-9.75567, 120.738, -9.08829, 0.42", "-9.74572, 121.269, -9.04057, 0.56", "-9.73654, 121.811, -9.04326, 0.42", "-9.72696, 122.286, -9.07199, 0.28", "-9.72622, 122.624, -9.12006, 0.14", "-9.75019, 123.145, -9.27054, 0.14", "-9.82536, 124.097, -9.60307, 0.28", "-9.82536, 124.097, -9.60307, 0.42" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.08565, 19.3603, -0.638721, 1.26", "-0.489727, 19.9049, -1.40784, 1.26", "-0.287978, 20.0645, -1.68133, 1.4", "-0.012986, 20.3136, -2.13652, 1.54", "0.223778, 20.5512, -2.54478, 1.4", "0.676536, 21.0044, -3.28563, 1.26", "1.17779, 21.5431, -4.0772, 1.12", "1.41659, 21.8043, -4.47305, 0.98", "1.93431, 22.4145, -5.36746, 0.84", "2.09285, 22.6148, -5.64264, 0.7", "2.31259, 22.9312, -6.00427, 0.56", "2.57037, 23.3339, -6.35617, 0.7", "2.82556, 23.7781, -6.6573, 0.56", "3.28732, 24.642, -7.18078, 0.7", "3.40215, 24.8525, -7.29489, 0.7", "3.64795, 25.3229, -7.56073, 0.1", "3.78751, 25.6184, -7.72824, 0.1", "4.07963, 26.2281, -8.06534, 0.1", "4.07963, 26.2281, -8.06534, 0.14", "4.34176, 26.9299, -8.16273, 0.1", "4.46519, 27.2726, -8.2092, 0.1", "4.60323, 27.6182, -8.25928, 0.1", "4.71185, 27.8574, -8.29703, 0.1", "4.95834, 28.3659, -8.47912, 0.7", "5.11871, 28.6631, -8.62332, 0.56", "5.48183, 29.243, -8.94364, 0.42", "5.66513, 29.52, -9.10016, 0.28", "5.97393, 29.9613, -9.34977, 0.42", "6.50737, 30.6742, -9.75617, 0.98", "6.86319, 31.0798, -10.0038, 0.84", "7.19532, 31.4309, -10.2173, 0.7", "7.4422, 31.676, -10.3586, 0.56", "7.8385, 32.0641, -10.5514, 0.42", "8.23708, 32.4657, -10.7086, 0.28", "8.59776, 32.8412, -10.8128, 0.42", "8.84813, 33.1113, -10.8857, 0.28", "9.23958, 33.534, -10.9996, 0.14", "9.64957, 33.9477, -11.1174, 0.28", "9.91321, 34.2042, -11.1927, 0.14", "10.3299, 34.6007, -11.3112, 0.1", "10.7494, 35.0033, -11.4307, 0.14", "11.1266, 35.3576, -11.5378, 0.28", "11.5073, 35.7077, -11.6455, 0.42", "11.9172, 36.1067, -11.8046, 0.28", "12.2838, 36.5035, -12.0347, 0.14", "12.4679, 36.7511, -12.2487, 0.1", "12.6219, 37.0752, -12.7135, 0.1", "12.6641, 37.2066, -12.9403, 0.14", "12.7827, 37.7239, -13.9153, 0.84", "12.8744, 38.1812, -14.8166, 0.98", "12.9708, 38.6387, -15.7172, 0.84", "13.1807, 39.5273, -17.4073, 0.84", "13.2574, 39.8112, -17.9231, 0.7", "13.3238, 39.9989, -18.2316, 0.56", "13.513, 40.3388, -18.6891, 0.42", "13.8035, 40.7079, -19.0416, 0.28", "14.0558, 40.9456, -19.1858, 0.14", "14.2559, 41.0967, -19.2651, 0.28", "14.4595, 41.2348, -19.365, 0.7", "14.8618, 41.4935, -19.5894, 0.56", "15.2524, 41.7459, -19.8265, 0.42", "15.6379, 42.0105, -20.0725, 0.28", "16.3677, 42.5746, -20.6382, 0.28", "16.5973, 42.7794, -20.8386, 0.56", "16.9255, 43.1209, -21.1965, 0.42", "17.2204, 43.4712, -21.5642, 0.28", "17.3985, 43.7072, -21.803, 0.42", "17.908, 44.4265, -22.4787, 0.56", "18.1872, 44.8223, -22.8108, 0.56", "18.7219, 45.5766, -23.4324, 0.56", "19.0142, 45.9747, -23.7502, 0.56", "19.2062, 46.2374, -23.9375, 0.7", "19.5191, 46.6655, -24.1898, 0.56", "19.8298, 47.1193, -24.4149, 0.42", "20.0148, 47.4141, -24.5558, 0.28", "20.256, 47.8316, -24.7781, 0.28", "20.4977, 48.2786, -25.0667, 0.1", "20.6359, 48.5458, -25.2913, 0.1", "21.0283, 49.3571, -26.0881, 0.14", "21.1456, 49.6009, -26.3485, 0.28", "21.5132, 50.2962, -27.1329, 0.42", "21.7154, 50.6365, -27.5666, 0.28", "22.1054, 51.1528, -28.3019, 0.28", "22.2802, 51.3379, -28.5779, 0.56", "22.6104, 51.6089, -28.9808, 0.42", "22.9453, 51.8379, -29.3193, 0.28", "23.7068, 52.321, -29.9173, 0.14", "24.0926, 52.5673, -30.1811, 0.28", "24.4937, 52.8359, -30.4023, 0.14", "24.8833, 53.1142, -30.6035, 0.1", "25.2591, 53.4206, -30.8198, 0.14", "25.7548, 53.8937, -31.1179, 0.28", "25.9966, 54.1453, -31.2563, 0.14", "26.3556, 54.5494, -31.486, 0.1", "26.5819, 54.8074, -31.6382, 0.1", "27.2555, 55.5645, -32.0929, 0.14", "27.628, 55.9501, -32.3326, 0.28", "27.9864, 56.2806, -32.5428, 0.42", "28.3991, 56.6388, -32.758, 0.56", "28.7843, 56.9552, -32.9331, 0.42", "29.2186, 57.3046, -33.1374, 0.28", "29.6053, 57.6194, -33.3122, 0.14", "30.0046, 57.9738, -33.5717, 0.28", "30.3629, 58.3289, -33.8723, 0.42", "30.508, 58.4946, -34.0206, 0.56", "31.0584, 59.2153, -34.662, 0.7", "31.333, 59.6016, -35.0087, 0.84", "31.7816, 60.2923, -35.6045, 0.7", "32.0458, 60.6955, -35.9399, 0.7", "32.3349, 61.1066, -36.2559, 0.56", "32.6602, 61.5141, -36.526, 0.42", "32.8347, 61.6921, -36.6175, 0.28", "33.1068, 61.9276, -36.7245, 0.1", "33.5246, 62.2302, -36.8386, 0.1", "33.9625, 62.5017, -36.9558, 0.1", "34.4215, 62.7568, -37.0344, 0.1", "34.8807, 63.0138, -37.082, 0.14", "35.3962, 63.3066, -37.1131, 0.28", "35.8576, 63.5632, -37.0911, 0.28", "36.3179, 63.8212, -37.0328, 0.28", "37.2785, 64.353, -36.8646, 0.28", "37.7835, 64.6354, -36.7642, 0.42", "38.2362, 64.8961, -36.6691, 0.28", "39.148, 65.4394, -36.4905, 0.14", "39.5898, 65.7259, -36.4226, 0.1", "40.0204, 66.0305, -36.391, 0.14", "40.4839, 66.3904, -36.4131, 0.28", "40.7671, 66.6352, -36.4423, 0.42", "41.1866, 67.0489, -36.5198, 0.28", "41.5675, 67.4768, -36.6756, 0.28", "41.926, 67.9043, -36.859, 0.42", "42.1526, 68.1722, -36.9925, 0.56", "42.5071, 68.5801, -37.2222, 0.7", "42.865, 68.9777, -37.4646, 0.7", "43.5464, 69.7217, -37.9372, 0.84", "43.7093, 69.8961, -38.0475, 0.98", "44.0449, 70.2488, -38.2595, 0.7", "44.2926, 70.4947, -38.398, 0.56", "44.6984, 70.8728, -38.5907, 0.42", "45.127, 71.2405, -38.7521, 0.28", "45.5909, 71.6126, -38.836, 0.14", "46.0479, 71.9778, -38.8869, 0.1", "46.4646, 72.3019, -38.9097, 0.14", "46.8765, 72.6225, -38.9136, 0.28", "47.2868, 72.955, -38.8986, 0.42", "48.1244, 73.6894, -38.918, 0.56", "48.3877, 73.9507, -38.9453, 0.56", "48.5469, 74.1417, -39.0077, 0.56", "48.8603, 74.5788, -39.2407, 0.56", "49.0393, 74.8499, -39.429, 0.42", "49.5516, 75.6052, -40.0621, 0.28", "49.7272, 75.8453, -40.2912, 0.14", "50.3052, 76.5305, -40.9533, 0.1", "50.6069, 76.8383, -41.2476, 0.1", "50.9924, 77.1598, -41.5524, 0.14", "51.3927, 77.4407, -41.7591, 0.28", "51.885, 77.7332, -41.8894, 0.42", "52.3497, 77.9758, -41.9561, 0.56", "52.8254, 78.2111, -41.9707, 0.42", "53.2948, 78.451, -42.007, 0.28", "54.2418, 78.9591, -42.1325, 0.14", "54.6789, 79.2266, -42.2613, 0.28", "55.076, 79.5083, -42.4493, 0.42", "55.3277, 79.7243, -42.6175, 0.56", "56.0001, 80.4049, -43.1885, 0.42", "56.3045, 80.7579, -43.5456, 0.28", "56.8059, 81.4163, -44.2864, 0.14", "56.9676, 81.6439, -44.5375, 0.1", "57.2237, 82.0096, -44.919, 0.1", "57.5043, 82.3898, -45.2784, 0.1", "58.0068, 83.0532, -45.7935, 0.14", "58.1973, 83.3077, -45.9932, 0.1", "58.4959, 83.7273, -46.2897, 0.1", "58.7855, 84.1521, -46.5865, 0.1", "59.0444, 84.5722, -46.9049, 0.1", "59.1942, 84.8487, -47.1101, 0.14", "59.6239, 85.694, -47.6884, 0.28", "59.8172, 86.1395, -48.0328, 0.14", "59.9767, 86.5765, -48.3912, 0.1", "60.2095, 87.3421, -49.0154, 0.1", "60.3259, 87.7763, -49.3887, 0.1", "60.436, 88.2238, -49.7638, 0.1", "60.6387, 89.0895, -50.4352, 0.14", "60.7025, 89.3745, -50.6711, 0.28", "60.7974, 89.8218, -51.0379, 0.42", "61.0051, 90.6963, -51.696, 0.28", "61.1221, 91.1563, -52.037, 0.14", "61.2008, 91.4441, -52.2649, 0.1", "61.4915, 92.3648, -52.9826, 0.14", "61.5854, 92.6484, -53.2099, 0.28", "61.78, 93.2161, -53.6475, 0.42", "61.8908, 93.5181, -53.8498, 0.56", "62.2015, 94.3364, -54.3606, 0.56", "62.3905, 94.8344, -54.6266, 0.84", "62.5178, 95.148, -54.7891, 0.7", "62.7321, 95.6186, -55.0614, 0.56", "62.981, 96.0766, -55.3466, 0.42", "63.2629, 96.5199, -55.6232, 0.56", "63.4692, 96.7894, -55.7837, 0.7", "64.1545, 97.4665, -56.2735, 0.7", "64.5273, 97.7535, -56.514, 0.7", "64.9376, 97.9964, -56.7475, 0.84", "65.1444, 98.1044, -56.8743, 1.26", "65.5565, 98.2958, -57.1257, 1.12", "65.9797, 98.4993, -57.3736, 0.98", "66.3999, 98.7265, -57.5994, 0.84", "66.8096, 98.9671, -57.8305, 0.7", "67.6536, 99.5103, -58.3143, 0.56", "68.0458, 99.7865, -58.5357, 0.42", "68.4795, 100.114, -58.7752, 0.28", "68.9087, 100.443, -59.0024, 0.14", "69.2907, 100.757, -59.1884, 0.1", "69.7032, 101.127, -59.4016, 0.1", "70.0703, 101.514, -59.6471, 0.14", "70.2012, 101.695, -59.7908, 0.28", "70.3007, 101.88, -59.9534, 0.42", "70.4688, 102.297, -60.3266, 0.7", "70.6784, 103.02, -61.0069, 0.56", "70.8684, 103.818, -61.7627, 0.56", "70.9348, 104.082, -62.009, 0.42", "71.0988, 104.63, -62.4893, 0.28", "71.2038, 104.912, -62.7147, 0.14", "71.6307, 105.82, -63.3724, 0.1", "71.7987, 106.111, -63.5395, 0.1", "72.0681, 106.522, -63.7336, 0.1", "72.3818, 106.984, -63.9356, 0.1", "72.7069, 107.44, -64.1125, 0.1", "72.926, 107.736, -64.2065, 0.14", "73.2633, 108.195, -64.3506, 0.28", "73.6712, 108.775, -64.5703, 0.14", "73.872, 109.066, -64.6965, 0.1", "74.1891, 109.51, -64.9133, 0.14", "74.5214, 109.953, -65.1468, 0.1", "75.1026, 110.678, -65.5467, 0.1", "75.4572, 111.091, -65.7841, 0.1", "75.7905, 111.443, -65.9945, 0.1", "76.1728, 111.829, -66.2169, 0.1", "76.5703, 112.221, -66.4189, 0.1", "76.9759, 112.613, -66.5829, 0.14", "77.164, 112.792, -66.6365, 0.28", "77.3472, 112.977, -66.6891, 0.42", "77.592, 113.241, -66.7603, 0.56", "77.9559, 113.682, -66.9194, 0.42", "78.2836, 114.131, -67.1091, 0.28", "78.5785, 114.595, -67.3167, 0.14", "78.748, 114.906, -67.4541, 0.1", "78.9851, 115.399, -67.6677, 0.1", "79.3862, 116.358, -68.0673, 0.1", "79.4975, 116.685, -68.1924, 0.1", "79.6887, 117.357, -68.4796, 0.1", "79.8321, 117.871, -68.7177, 0.1", "79.9372, 118.195, -68.8765, 0.1", "80.1126, 118.677, -69.1595, 0.1", "80.3014, 119.122, -69.5052, 0.1", "80.5757, 119.729, -70.2226, 0.1", "80.6991, 119.985, -70.6683, 0.1", "80.8209, 120.208, -71.1344, 0.1", "81.0687, 120.598, -72.0345, 0.1", "81.3456, 120.974, -72.9356, 0.14", "81.693, 121.389, -73.9055, 0.1", "82.0592, 121.808, -74.7114, 0.1", "82.3188, 122.086, -75.1679, 0.1", "82.626, 122.363, -75.4865, 0.1", "83.0915, 122.69, -75.6322, 0.1", "83.5412, 122.972, -75.6207, 0.1", "84.4871, 123.527, -75.4454, 0.1", "84.9374, 123.781, -75.3346, 0.1", "85.8733, 124.277, -75.1149, 0.1", "86.1026, 124.395, -75.0644, 0.1", "86.6251, 124.654, -74.9517, 0.1", "87.0938, 124.884, -74.8715, 0.1", "87.5735, 125.112, -74.8617, 0.1", "88.0473, 125.344, -74.8866, 0.1", "88.0473, 125.344, -74.8866, 0.14" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.56796, -55.5334, 6.00558, 0.98", "3.85716, -56.1194, 5.94922, 0.98", "4.16096, -56.7894, 5.89056, 0.84", "4.41861, -57.403, 5.84127, 0.98", "4.68746, -58.0884, 5.79029, 1.12", "4.80321, -58.4005, 5.76851, 1.68", "5.02419, -59.0253, 5.72723, 1.54", "5.21573, -59.6602, 5.69238, 1.4", "5.37653, -60.3072, 5.66428, 1.26", "5.51849, -60.9554, 5.64024, 1.12", "5.6411, -61.6107, 5.6694, 1.26", "5.75626, -62.2496, 5.73536, 1.12", "5.89355, -62.9651, 5.89613, 0.98", "6.02065, -63.5866, 6.09241, 0.84", "6.1518, -64.1959, 6.33071, 0.7", "6.43625, -65.44, 6.89415, 0.84", "6.58009, -66.0249, 7.18129, 0.84", "6.88731, -67.2356, 7.71479, 0.7", "7.04965, -67.8437, 7.92646, 0.84", "7.04965, -67.8437, 7.92646, 0.98", "7.13739, -68.1538, 7.92732, 1.12", "7.33254, -68.7891, 7.86797, 0.98", "7.73978, -70.0789, 7.7439, 0.84", "7.93911, -70.7085, 7.67483, 0.7", "8.18555, -71.4116, 7.63687, 0.56", "8.40748, -72.0353, 7.58567, 0.7", "8.81881, -73.2914, 7.26599, 0.84", "9.01372, -73.897, 7.07597, 0.98", "9.21664, -74.5032, 6.92879, 0.84", "9.45123, -75.202, 6.80914, 0.98", "9.82684, -76.3659, 6.70044, 1.12", "10.5739, -78.6378, 6.63194, 0.98", "10.9418, -79.807, 6.52043, 0.84", "11.3875, -81.0778, 6.69697, 0.84", "11.8463, -82.1546, 7.38903, 0.98", "12.059, -82.5978, 7.83543, 0.84", "12.2716, -83.0209, 8.30553, 0.98" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.56796, -55.5334, 6.00558, 1.82", "3.02866, -56.2676, 6.30491, 1.82", "2.76195, -56.6659, 6.47011, 1.68", "2.6003, -56.9121, 6.60545, 1.54", "2.29661, -57.4075, 6.88573, 1.4", "2.1884, -57.5851, 6.98202, 1.26", "1.71332, -58.3258, 7.36321, 0.1", "1.45849, -58.73, 7.54851, 0.1", "0.997219, -59.4077, 7.86181, 0.1", "0.718772, -59.7921, 8.03278, 0.14", "0.413092, -60.1683, 8.18132, 0.28", "0.105161, -60.4961, 8.27003, 0.42", "-0.129696, -60.7189, 8.28691, 0.28", "-0.484907, -61.0049, 8.27628, 0.14", "-0.671348, -61.1379, 8.26709, 0.28", "-1.04905, -61.3804, 8.34858, 0.56", "-1.39283, -61.6318, 8.51817, 0.56", "-1.39283, -61.6318, 8.51817, 0.56", "-1.39283, -61.6318, 8.51817, 0.56", "-1.90861, -62.1705, 9.12088, 0.56", "-2.3563, -62.6823, 9.67338, 0.42", "-2.59061, -63.0033, 9.98657, 0.28", "-3.00178, -63.6736, 10.5405, 0.42", "-3.1306, -63.9169, 10.6977, 0.28", "-3.21501, -64.1096, 10.7887, 0.42", "-3.31587, -64.4112, 10.8695, 0.7", "-3.44591, -64.8885, 10.9685, 0.56", "-3.54428, -65.3811, 11.0777, 0.42", "-3.59415, -65.8604, 11.2271, 0.28", "-3.60364, -66.0693, 11.3208, 0.14", "-3.60364, -66.0693, 11.3208, 0.28", "-3.54532, -66.7984, 11.744, 0.1", "-3.48077, -67.1868, 11.9788, 0.14", "-3.29814, -67.9727, 12.4474, 0.1", "-3.18028, -68.3616, 12.6595, 0.1", "-3.04383, -68.7582, 12.8391, 0.1", "-2.88342, -69.1562, 12.9764, 0.1", "-2.67364, -69.6142, 13.0739, 0.1", "-2.56948, -69.816, 13.1049, 0.28", "-2.3231, -70.2578, 13.1385, 0.14", "-2.09567, -70.6429, 13.1698, 0.1", "-1.82982, -71.0866, 13.2064, 0.1", "-1.59734, -71.4686, 13.2385, 0.1", "-1.32102, -71.9073, 13.2401, 0.14", "-1.0838, -72.2871, 13.2174, 0.1", "-0.831551, -72.7238, 13.1658, 0.14", "-0.617071, -73.1238, 13.101, 0.1", "-0.410474, -73.5782, 13.0122, 0.1", "-0.0665605, -74.4606, 12.8267, 0.1", "0.0291702, -74.7605, 12.7638, 0.28", "0.16141, -75.2451, 12.6617, 0.14", "0.254876, -75.6822, 12.5706, 0.1", "0.33767, -76.1722, 12.4836, 0.1", "0.388638, -76.6226, 12.4325, 0.1", "0.433101, -77.0789, 12.434, 0.14", "0.471722, -77.3048, 12.4374, 0.28", "0.523726, -77.5279, 12.4429, 0.28", "0.641475, -77.9708, 12.4562, 0.42", "0.706573, -78.1881, 12.4638, 0.42", "0.835746, -78.6196, 12.4791, 0.28", "0.955136, -79.0596, 12.4926, 0.14", "1.06885, -79.5035, 12.5052, 0.1", "1.1689, -79.9485, 12.5157, 0.14", "1.25902, -80.3979, 12.5245, 0.1", "1.33818, -80.8464, 12.4994, 0.1", "1.41687, -81.3414, 12.4416, 0.1", "1.48389, -81.7868, 12.3693, 0.1", "1.55903, -82.286, 12.2727, 0.1", "1.61568, -82.7277, 12.204, 0.1", "1.71018, -83.6798, 12.0973, 0.1", "1.74137, -84.1362, 12.068, 0.1", "1.75853, -84.592, 12.0621, 0.1", "1.75433, -85.0423, 12.0784, 0.14", "1.72217, -85.9144, 12.1555, 0.1", "1.69136, -86.4226, 12.2267, 0.1", "1.64373, -86.908, 12.3556, 0.14", "1.58658, -87.398, 12.4999, 0.1", "1.52287, -87.8664, 12.6762, 0.1", "1.49795, -88.0747, 12.763, 0.14", "1.46953, -88.4971, 12.939, 0.28", "1.44249, -89.2868, 13.3172, 0.1", "1.43923, -89.6826, 13.5278, 0.1", "1.46111, -90.5242, 13.9932, 0.1", "1.48642, -90.9266, 14.2064, 0.1", "1.52134, -91.3361, 14.4044, 0.1", "1.54418, -91.5412, 14.5042, 0.14", "1.54418, -91.5412, 14.5042, 0.28", "1.61523, -91.9327, 14.7155, 0.28", "1.69644, -92.3198, 14.9429, 0.28", "1.69644, -92.3198, 14.9429, 0.42", "1.85627, -92.9815, 15.4446, 0.1", "1.93974, -93.3306, 15.7261, 0.1", "2.10614, -94.0302, 16.3224, 0.1", "2.18296, -94.3569, 16.6314, 0.1", "2.23755, -94.5831, 16.8569, 0.1", "2.23755, -94.5831, 16.8569, 0.1" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.630081, -30.9864, 0.180496, 0.56", "-0.764591, -31.1947, -0.162343, 0.56", "-0.928121, -31.4198, -0.547703, 0.42", "-1.09566, -31.6267, -0.935298, 0.28", "-1.42723, -31.9795, -1.68134, 0.7", "-1.7251, -32.2132, -2.4003, 0.84", "-1.99793, -32.2815, -3.16261, 0.98", "-2.16276, -32.152, -4.00326, 1.12", "-2.23346, -32.0221, -4.45644, 1.26", "-2.30235, -31.8757, -4.84959, 1.12", "-2.48252, -31.5667, -5.54755, 0.98", "-2.73832, -31.2797, -6.3495, 0.84", "-2.96349, -31.1044, -7.04837, 0.7", "-3.09476, -31.0398, -7.44755, 0.56", "-3.23279, -30.9961, -7.84509, 0.56", "-3.36834, -30.948, -8.23748, 0.56", "-3.61235, -30.8056, -8.9982, 0.7", "-3.65581, -30.7587, -9.19882, 0.84", "-3.7484, -30.6302, -9.64749, 1.26", "-3.90206, -30.3889, -10.4616, 1.12", "-4.0596, -30.1272, -11.3, 0.98", "-4.20521, -29.8898, -12.031, 1.12", "-4.39357, -29.6635, -12.7261, 0.98", "-4.65585, -29.474, -13.5249, 0.84", "-5.02111, -29.6419, -13.7795, 0.7", "-5.74952, -30.0887, -14.0357, 0.56", "-5.9774, -30.2235, -14.1635, 0.42", "-6.20859, -30.2898, -14.5735, 0.56", "-6.26347, -30.2871, -14.7788, 0.56", "-6.43063, -30.2406, -15.6539, 0.56", "-6.50714, -30.1621, -16.4579, 0.42", "-6.52597, -30.0643, -17.2644, 0.28", "-6.50876, -29.9573, -18.0672, 0.14", "-6.48273, -29.8568, -18.8149, 0.1", "-6.46173, -29.7578, -19.6211, 0.84", "-6.43765, -29.6184, -21.1392, 0.7", "-6.45386, -29.5159, -22.6603, 0.56", "-6.48549, -29.4931, -23.4142, 0.7", "-6.51506, -29.4939, -23.829, 0.56", "-6.57051, -29.5026, -24.2504, 0.56", "-6.75893, -29.537, -25.0943, 0.42", "-6.93208, -29.5541, -25.4822, 0.28", "-7.41856, -29.5119, -26.1286, 0.42", "-7.54806, -29.4568, -26.2853, 0.56", "-7.81016, -29.2533, -26.6262, 0.28", "-8.06473, -28.999, -26.9368, 0.14", "-8.31723, -28.7349, -27.2328, 0.28", "-8.58287, -28.4876, -27.5398, 0.42", "-9.07943, -28.1207, -28.1461, 0.56", "-9.07943, -28.1207, -28.1461, 0.7", "-9.29699, -28.1093, -28.5112, 2.1", "-9.69333, -28.2424, -29.2689, 1.96", "-9.85119, -28.3718, -29.6335, 1.82", "-10.1303, -28.6669, -30.3038, 1.68", "-10.3005, -28.8785, -30.7007, 0.7", "-10.5885, -29.2834, -31.4368, 0.56", "-10.6674, -29.4298, -31.6872, 0.56", "-10.8537, -29.9261, -32.4008, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.630081, -30.9864, 0.180496, 0.7", "-0.635792, -31.3483, 0.179544, 0.7", "-0.639931, -31.6018, 0.178877, 0.56", "-0.638506, -32.0064, 0.177801, 0.42", "-0.630991, -32.3646, 0.141833, 0.28", "-0.616602, -32.7616, 0.112811, 0.14", "-0.596413, -33.1211, 0.12026, 0.1", "-0.560679, -33.5221, 0.161087, 0.1", "-0.519027, -33.8686, 0.22027, 0.1", "-0.426536, -34.513, 0.368159, 0.14", "-0.325524, -35.1502, 0.539565, 0.42", "-0.19636, -35.8467, 0.741806, 0.28", "-0.135956, -36.1877, 0.840686, 0.14", "-0.0675572, -36.5661, 0.944324, 0.1", "-0.00683199, -36.9161, 1.00339, 0.14", "0.0535884, -37.273, 1.00684, 0.1", "0.105452, -37.6189, 0.921085, 0.1", "0.147989, -37.9832, 0.765805, 0.1", "0.179472, -38.3038, 0.604819, 0.1", "0.228068, -38.9507, 0.253979, 0.1", "0.252694, -39.5108, -0.0600401, 0.14", "0.256883, -39.7327, -0.187441, 0.56", "0.261603, -40.0839, -0.377788, 0.42", "0.268069, -40.4084, -0.533757, 0.28", "0.273751, -40.7916, -0.663538, 0.42", "0.281724, -40.9714, -0.683134, 0.56", "0.281724, -40.9714, -0.683134, 0.42", "0.344782, -41.3196, -0.68414, 0.84", "0.344782, -41.3196, -0.68414, 0.7", "0.397043, -41.4915, -0.7059, 0.28", "0.515249, -41.8245, -0.775745, 0.14", "0.636787, -42.1546, -0.860602, 0.1", "0.75919, -42.4807, -0.95204, 0.1", "0.882929, -42.807, -1.04799, 0.1", "1.14087, -43.4916, -1.24297, 0.14", "1.20096, -43.6519, -1.30161, 0.28", "1.25907, -43.8072, -1.36968, 0.1", "1.37385, -44.1184, -1.49817, 0.1", "1.49567, -44.4392, -1.60762, 0.1", "1.62173, -44.7711, -1.67752, 0.1", "1.87006, -45.3898, -1.70369, 0.14", "1.87006, -45.3898, -1.70369, 0.1", "2.13942, -46.0001, -1.67977, 0.28", "2.29844, -46.3662, -1.64926, 0.14", "2.43675, -46.6982, -1.60939, 0.1", "2.58077, -47.0679, -1.55632, 0.1", "2.63737, -47.2378, -1.53041, 0.14", "2.70158, -47.4848, -1.51137, 0.28", "2.77085, -47.8319, -1.51238, 0.14", "2.81556, -48.1911, -1.51339, 0.1", "2.84018, -48.5503, -1.51438, 0.14", "2.84647, -48.9549, -1.51546, 0.1", "2.84675, -49.3544, -1.51652, 0.1", "2.84933, -49.7163, -1.51748, 0.1", "2.84847, -50.1215, -1.4944, 0.1", "2.85165, -50.5169, -1.44657, 0.1", "2.8696, -50.9155, -1.37287, 0.14", "2.88963, -51.0903, -1.33058, 0.28", "2.92081, -51.262, -1.28268, 0.42", "3.0672, -51.8872, -1.10177, 0.56", "3.16774, -52.2295, -1.04079, 0.42", "3.27739, -52.5654, -1.02043, 0.28", "3.38971, -52.9059, -1.06961, 0.14", "3.49546, -53.2437, -1.13637, 0.28", "3.59661, -53.5863, -1.19425, 0.14", "3.80267, -54.2834, -1.31383, 0.1", "3.9115, -54.6268, -1.34806, 0.1", "4.14488, -55.3222, -1.36234, 0.1", "4.36557, -55.9511, -1.3237, 0.1", "4.61385, -56.6378, -1.22694, 0.1", "4.74306, -56.9683, -1.15596, 0.1", "4.88026, -57.3214, -1.0267, 0.14", "5.00028, -57.6356, -0.897818, 0.28", "5.11739, -57.9512, -0.76489, 0.14", "5.23375, -58.2776, -0.666823, 0.1", "5.35243, -58.6538, -0.576687, 0.14", "5.53054, -59.302, -0.417995, 0.1", "5.61133, -59.6455, -0.337407, 0.1", "5.68074, -59.9913, -0.264769, 0.1", "5.74215, -60.3428, -0.204131, 0.1", "5.80396, -60.7345, -0.155878, 0.14", "5.85048, -61.0927, -0.133099, 0.1", "5.89895, -61.4496, -0.134109, 0.1", "5.94982, -61.85, -0.16169, 0.1", "5.99381, -62.1985, -0.20578, 0.14", "6.04207, -62.5498, -0.268405, 0.28", "6.10596, -62.94, -0.35444, 0.28", "6.1671, -63.2845, -0.439909, 0.14", "6.29539, -63.9185, -0.604896, 0.28", "6.33444, -64.0836, -0.647048, 0.56", "6.42653, -64.4151, -0.753287, 0.42", "6.53052, -64.7424, -0.867757, 0.28", "6.64494, -65.0651, -0.979242, 0.14", "6.76355, -65.3919, -1.07991, 0.1", "6.88396, -65.7215, -1.1609, 0.1", "7.13839, -66.412, -1.33872, 0.14", "7.26074, -66.741, -1.42695, 0.28", "7.3799, -67.0634, -1.51132, 0.14", "7.5052, -67.3867, -1.61518, 0.28", "7.63106, -67.7054, -1.72582, 0.42", "7.63106, -67.7054, -1.72582, 0.56", "7.69346, -67.8577, -1.80113, 0.56", "7.8142, -68.1488, -1.9755, 0.42", "8.06168, -68.7518, -2.36499, 0.28", "8.17635, -69.0395, -2.54885, 0.14", "8.38348, -69.5855, -2.9195, 0.1", "8.45861, -69.779, -3.06913, 0.56", "8.5638, -70.0498, -3.2714, 0.42", "8.67173, -70.3347, -3.46349, 0.56", "8.78027, -70.6408, -3.62314, 0.7", "9.01764, -71.258, -3.94771, 0.56", "9.26025, -71.8188, -4.2719, 0.42", "9.51261, -72.3308, -4.61798, 0.42", "9.63924, -72.5911, -4.83223, 0.56", "9.75886, -72.8459, -5.05692, 0.56", "9.98785, -73.3957, -5.528, 0.42", "10.1974, -73.9746, -5.96862, 0.28", "10.2421, -74.1181, -6.06937, 0.98", "10.4151, -74.7222, -6.49079, 0.84", "10.4932, -75.0248, -6.67334, 0.7", "10.5753, -75.3865, -6.83811, 0.56", "10.6429, -75.7307, -6.92706, 0.42", "10.7046, -76.0786, -6.94801, 0.28", "10.7714, -76.4337, -6.92796, 0.14", "10.8435, -76.7815, -6.86801, 0.28", "10.9178, -77.1285, -6.79695, 0.14", "10.9961, -77.4714, -6.71993, 0.1", "11.159, -78.1908, -6.55392, 0.1", "11.2436, -78.5323, -6.47687, 0.1", "11.3419, -78.8714, -6.40608, 0.1", "11.4534, -79.2101, -6.3442, 0.1", "11.5709, -79.5472, -6.2961, 0.1", "11.6941, -79.8798, -6.26927, 0.1", "11.8421, -80.2568, -6.27047, 0.1", "11.9856, -80.6305, -6.27165, 0.1", "12.0483, -80.8003, -6.27218, 0.1", "12.1359, -81.0347, -6.27291, 0.84", "12.2604, -81.3726, -6.27398, 0.7", "12.3889, -81.711, -6.27504, 0.56", "12.5164, -82.0478, -6.2761, 0.42", "12.6458, -82.3791, -6.27715, 0.28", "12.7934, -82.7551, -6.30795, 0.14", "12.9136, -83.0794, -6.38308, 0.1", "13.0206, -83.4385, -6.54788, 0.14", "13.0506, -83.5844, -6.63939, 0.7", "13.0792, -83.8624, -6.86654, 0.56", "13.0926, -84.3928, -7.41067, 0.42", "13.0689, -84.8954, -7.97494, 0.28", "13.0255, -85.3331, -8.5088, 0.14", "12.9906, -85.5912, -8.81998, 0.1", "12.9249, -86.0873, -9.38669, 0.1", "12.8689, -86.5553, -9.85948, 0.1", "12.8476, -86.8812, -10.1003, 0.14", "12.8422, -87.5807, -10.387, 0.28", "12.8764, -88.2319, -10.5277, 0.1", "12.9114, -88.5847, -10.6004, 0.1", "13.0076, -89.294, -10.7746, 0.1", "13.0618, -89.6335, -10.8876, 0.1", "13.122, -89.9871, -11.0635, 0.14", "13.229, -90.6085, -11.4461, 0.28", "13.3268, -91.1983, -11.8764, 0.42", "13.4015, -91.722, -12.2836, 0.56", "13.42, -91.8617, -12.3943, 0.7", "13.4478, -92.0677, -12.5338, 0.28", "13.4958, -92.3793, -12.7116, 0.14", "13.5389, -92.7122, -12.8419, 0.1", "13.5773, -93.0943, -12.9477, 0.1", "13.6022, -93.4447, -13.027, 0.1", "13.6165, -93.7967, -13.1098, 0.1", "13.6221, -94.5003, -13.3278, 0.14", "13.6165, -94.7411, -13.4142, 0.1", "13.6022, -95.1132, -13.5589, 0.1", "13.583, -95.4895, -13.7066, 0.1", "13.5608, -95.8638, -13.8444, 0.1", "13.5161, -96.5706, -14.1185, 0.1", "13.5026, -96.9086, -14.242, 0.14", "13.5038, -97.0715, -14.3054, 0.1", "13.524, -97.4486, -14.4538, 0.1", "13.5503, -97.7786, -14.6001, 0.1", "13.623, -98.4656, -14.9087, 0.1", "13.6614, -98.787, -15.0706, 0.14", "13.699, -99.0949, -15.2536, 0.28", "13.7467, -99.3961, -15.4486, 0.28", "13.874, -100.014, -15.8664, 0.14", "13.9437, -100.301, -16.0765, 0.1", "14.0912, -100.809, -16.4409, 0.14", "14.1313, -100.951, -16.5431, 0.56", "14.2234, -101.278, -16.7627, 0.56", "14.3031, -101.584, -16.9349, 0.42", "14.4538, -102.253, -17.2047, 0.56", "14.5149, -102.591, -17.313, 0.42", "14.565, -102.978, -17.3973, 0.28", "14.596, -103.331, -17.4615, 0.14", "14.6143, -103.731, -17.5174, 0.1", "14.6297, -104.129, -17.5493, 0.1", "14.6418, -104.309, -17.5498, 0.1", "14.6881, -104.712, -17.5509, 0.1", "14.7598, -105.067, -17.5519, 0.14", "14.8073, -105.24, -17.5525, 0.56", "14.9254, -105.576, -17.5535, 0.42", "15.0735, -105.946, -17.5859, 0.28", "15.2057, -106.279, -17.6356, 0.14", "15.3511, -106.645, -17.7089, 0.1", "15.466, -106.977, -17.786, 0.1", "15.5664, -107.315, -17.8692, 0.1", "15.7343, -107.996, -18.0946, 0.1", "15.7813, -108.231, -18.1846, 0.84", "15.8397, -108.556, -18.3167, 0.7", "15.9007, -108.928, -18.4663, 0.56", "15.9598, -109.263, -18.5912, 0.42", "16.1085, -109.95, -18.8108, 0.28", "16.1959, -110.284, -18.8901, 0.14", "16.2999, -110.622, -18.9633, 0.1", "16.4186, -110.957, -19.0252, 0.1", "16.5527, -111.29, -19.073, 0.1", "16.702, -111.66, -19.1042, 0.1", "16.8359, -111.996, -19.1053, 0.1", "16.9587, -112.334, -19.1063, 0.1", "17.0819, -112.715, -19.1075, 0.14", "17.1309, -112.889, -19.1228, 0.28", "17.1887, -113.129, -19.1609, 0.28", "17.258, -113.475, -19.2347, 0.14", "17.3314, -113.861, -19.3313, 0.1", "17.3954, -114.203, -19.4228, 0.1", "17.5227, -114.9, -19.6173, 0.14", "17.5545, -115.07, -19.6647, 0.28", "17.625, -115.413, -19.7563, 0.1", "17.6965, -115.756, -19.8375, 0.1", "17.7724, -116.097, -19.932, 0.14", "17.7724, -116.097, -19.932, 0.28", "17.8118, -116.341, -19.9902, 0.28", "17.8643, -116.687, -20.0841, 0.28", "17.9146, -117.019, -20.2131, 0.42", "18.0224, -117.684, -20.5127, 0.42", "18.0681, -117.903, -20.6365, 0.1", "18.1408, -118.198, -20.8192, 0.1", "18.2252, -118.491, -21.0107, 0.1", "18.4211, -119.085, -21.4012, 0.1", "18.5294, -119.378, -21.5808, 0.1", "18.8002, -120.007, -21.908, 0.1", "18.8712, -120.156, -21.9783, 0.1", "19.0245, -120.451, -22.1214, 0.1", "19.2021, -120.779, -22.2673, 0.14", "19.3675, -121.082, -22.3748, 0.1", "19.5433, -121.416, -22.5096, 0.1", "19.6939, -121.718, -22.6336, 0.1", "20.0093, -122.343, -22.9277, 0.1", "20.1606, -122.634, -23.0779, 0.1", "20.3134, -122.917, -23.2293, 0.1", "20.6536, -123.493, -23.5372, 0.14", "20.7441, -123.634, -23.6062, 0.28", "20.8777, -123.823, -23.7015, 0.1", "21.1053, -124.128, -23.8398, 0.1", "21.3452, -124.423, -23.9791, 0.1", "21.5043, -124.606, -24.0593, 0.1", "21.7626, -124.895, -24.1594, 0.1", "22.1962, -125.375, -24.3265, 0.1", "22.3107, -125.508, -24.3705, 0.1", "22.555, -125.812, -24.4604, 0.1", "22.7874, -126.129, -24.5356, 0.1", "23.0078, -126.464, -24.5905, 0.1", "23.1376, -126.678, -24.5905, 0.14", "23.3125, -126.991, -24.543, 0.56", "23.4701, -127.308, -24.4788, 0.42", "23.5997, -127.637, -24.401, 0.28", "23.705, -127.971, -24.3169, 0.14", "23.8704, -128.607, -24.2062, 0.1", "23.9513, -128.957, -24.2007, 0.1", "24.0219, -129.309, -24.2472, 0.1", "24.0829, -129.697, -24.3505, 0.1", "24.1256, -130.028, -24.473, 0.1", "24.1895, -130.7, -24.7684, 0.1", "24.2418, -131.361, -25.0886, 0.1", "24.2536, -131.588, -25.2079, 0.56", "24.2691, -131.939, -25.3947, 0.42", "24.2863, -132.261, -25.5549, 0.28", "24.3078, -132.634, -25.7114, 0.14", "24.3284, -132.984, -25.7929, 0.1", "24.3869, -133.733, -25.8739, 0.14", "24.4205, -134.091, -25.8936, 0.28", "24.4586, -134.449, -25.8946, 0.14", "24.4925, -134.809, -25.8768, 0.1", "24.5513, -135.563, -25.8509, 0.1", "24.5652, -135.925, -25.8387, 0.1", "24.5725, -136.33, -25.8199, 0.1", "24.5635, -136.685, -25.8288, 0.1", "24.5372, -137.088, -25.8682, 0.1", "24.4663, -137.766, -25.9846, 0.14", "24.4348, -138.008, -26.0431, 0.28", "24.3711, -138.354, -26.1185, 0.14", "24.2913, -138.744, -26.1909, 0.28", "24.2044, -139.131, -26.2433, 0.42", "24.1535, -139.381, -26.2616, 0.28", "24.0819, -139.772, -26.2625, 0.14", "24.0028, -140.281, -26.2638, 0.1", "23.9793, -140.454, -26.2642, 0.1", "23.9424, -140.857, -26.2652, 0.1", "23.9313, -141.217, -26.2661, 0.1", "23.947, -141.615, -26.2672, 0.1", "23.9871, -141.973, -26.2682, 0.1", "24.0153, -142.152, -26.2687, 0.1", "24.0454, -142.329, -26.2692, 0.1", "24.1144, -142.684, -26.2703, 0.1", "24.1783, -143.037, -26.3006, 0.14", "24.2418, -143.39, -26.3533, 0.28", "24.3075, -143.777, -26.4272, 0.14", "24.3663, -144.126, -26.5019, 0.1", "24.4236, -144.472, -26.5836, 0.1", "24.5323, -145.206, -26.7283, 0.1", "24.5817, -145.559, -26.7792, 0.1", "24.6333, -145.916, -26.8058, 0.1", "24.6839, -146.273, -26.8023, 0.1", "24.6839, -146.273, -26.8023, 0.1", "24.7553, -146.948, -26.6804, 0.1", "24.7916, -147.295, -26.5939, 0.1", "24.8254, -147.648, -26.5174, 0.1", "24.858, -148.05, -26.4806, 0.1", "24.8878, -148.405, -26.4885, 0.14", "24.9282, -148.806, -26.5343, 0.28", "24.9717, -149.158, -26.6065, 0.42", "25.0123, -149.507, -26.6845, 0.28", "25.1025, -150.239, -26.8527, 0.14", "25.1526, -150.587, -26.9311, 0.1", "25.207, -150.935, -27.0034, 0.1", "25.2699, -151.286, -27.0656, 0.1", "25.3358, -151.677, -27.1185, 0.1", "25.396, -152.032, -27.1461, 0.14", "25.4603, -152.387, -27.1471, 0.1", "25.5174, -152.744, -27.1481, 0.14", "25.5708, -153.1, -27.1491, 0.28", "25.6082, -153.348, -27.1498, 0.1", "25.6669, -153.703, -27.1508, 0.1", "25.7261, -154.06, -27.1519, 0.1", "25.7947, -154.454, -27.153, 0.1", "25.8626, -154.809, -27.154, 0.1", "25.9311, -155.163, -27.1551, 0.1", "26.0044, -155.517, -27.1561, 0.1", "26.0707, -155.871, -27.1571, 0.1", "26.1338, -156.226, -27.1581, 0.1", "26.1966, -156.575, -27.1838, 0.1", "26.2637, -156.972, -27.2359, 0.1", "26.3222, -157.323, -27.2978, 0.1", "26.3879, -157.709, -27.378, 0.1", "26.4509, -158.057, -27.4571, 0.1", "26.5873, -158.76, -27.6295, 0.1", "26.661, -159.103, -27.7175, 0.1", "26.7457, -159.442, -27.8034, 0.1", "26.8357, -159.778, -27.8795, 0.1", "26.9344, -160.113, -27.9689, 0.1", "26.9344, -160.113, -27.9689, 0.1", "26.9843, -160.282, -28.0082, 0.1", "27.0825, -160.617, -28.0982, 0.1", "27.1701, -160.946, -28.2213, 0.1", "27.3331, -161.606, -28.5043, 0.1", "27.4093, -161.928, -28.647, 0.1", "27.4834, -162.247, -28.7841, 0.1", "27.5578, -162.574, -28.917, 0.1", "27.7155, -163.27, -29.1748, 0.1", "27.7921, -163.607, -29.2777, 0.1", "27.8714, -163.946, -29.3496, 0.1", "27.9551, -164.291, -29.4118, 0.1", "28.0441, -164.639, -29.4588, 0.1", "28.1389, -164.985, -29.4849, 0.1", "28.2407, -165.33, -29.486, 0.1", "28.343, -165.678, -29.487, 0.1", "28.4428, -166.017, -29.4881, 0.1", "28.545, -166.364, -29.4891, 0.1", "28.6466, -166.71, -29.4902, 0.1", "28.7489, -167.057, -29.4912, 0.1", "28.8508, -167.402, -29.4923, 0.14", "28.9522, -167.747, -29.5187, 0.1", "29.0589, -168.083, -29.5678, 0.14", "29.1723, -168.418, -29.6363, 0.1", "29.2313, -168.584, -29.6774, 0.1", "29.2916, -168.748, -29.7221, 0.1", "29.5408, -169.417, -29.907, 0.1", "29.6865, -169.781, -30.0037, 0.1", "29.8213, -170.106, -30.0828, 0.14", "29.9591, -170.432, -30.1495, 0.1", "30.0952, -170.757, -30.1985, 0.1", "30.2311, -171.089, -30.2267, 0.1", "30.3784, -171.465, -30.258, 0.14", "30.4394, -171.631, -30.283, 0.56", "30.5598, -171.966, -30.3502, 0.42", "30.6657, -172.294, -30.4545, 0.28", "30.7596, -172.619, -30.5832, 0.28", "30.9292, -173.276, -30.871, 0.42", "30.9985, -173.601, -30.9961, 0.42", "31.0639, -173.939, -31.104, 0.28", "31.1941, -174.665, -31.2845, 0.14", "31.2477, -175.016, -31.3406, 0.1", "31.2962, -175.373, -31.3606, 0.1", "31.3798, -176.123, -31.319, 0.14", "31.4093, -176.48, -31.2859, 0.28", "31.4347, -176.838, -31.2396, 0.14", "31.4648, -177.231, -31.1745, 0.28", "31.4857, -177.59, -31.131, 0.14", "31.5086, -177.994, -31.1046, 0.1", "31.5369, -178.392, -31.1057, 0.1", "31.566, -178.751, -31.1067, 0.1", "31.6035, -179.11, -31.1077, 0.1", "31.6524, -179.507, -31.1088, 0.1", "31.7005, -179.866, -31.1098, 0.1", "31.7512, -180.222, -31.1108, 0.1", "31.8026, -180.579, -31.1118, 0.1", "31.8519, -180.937, -31.1128, 0.1", "31.9, -181.334, -31.114, 0.1", "31.9219, -181.513, -31.1145, 0.1", "31.9672, -181.916, -31.1156, 0.1", "32.0086, -182.273, -31.1166, 0.1", "32.0475, -182.627, -31.1176, 0.1", "32.0954, -183.03, -31.1187, 0.1", "32.1465, -183.388, -31.1197, 0.1", "32.2022, -183.744, -31.1207, 0.1", "32.2581, -184.093, -31.1463, 0.1", "32.3184, -184.489, -31.1981, 0.1", "32.3709, -184.84, -31.2615, 0.1", "32.4198, -185.19, -31.3412, 0.1", "32.4602, -185.535, -31.433, 0.1", "32.5372, -186.258, -31.6415, 0.1", "32.5565, -186.429, -31.6914, 0.1", "32.5565, -186.429, -31.6914, 0.1", "32.5933, -186.676, -31.747, 0.1", "32.6533, -187.023, -31.8017, 0.1", "32.7259, -187.374, -31.8298, 0.1", "32.8028, -187.727, -31.7998, 0.1", "32.8784, -188.075, -31.7501, 0.1", "32.9556, -188.421, -31.6883, 0.1", "33.0356, -188.767, -31.6149, 0.1", "33.1042, -189.104, -31.5325, 0.1", "33.2202, -189.83, -31.342, 0.1", "33.2641, -190.181, -31.2742, 0.1", "33.2922, -190.54, -31.2376, 0.1", "33.2922, -190.54, -31.2376, 0.1", "33.3022, -190.788, -31.2882, 0.1", "33.3206, -191.167, -31.4297, 0.1", "33.351, -191.823, -31.7617, 0.1", "33.3669, -192.175, -31.9475, 0.1", "33.38, -192.496, -32.1111, 0.1", "33.4197, -193.164, -32.4204, 0.14", "33.4311, -193.327, -32.4985, 0.1", "33.4434, -193.558, -32.6033, 0.1", "33.4559, -193.896, -32.7321, 0.1", "33.4644, -194.277, -32.8691, 0.1", "33.4606, -194.623, -32.9753, 0.1", "33.4467, -195.36, -33.1484, 0.1", "33.4357, -195.755, -33.2369, 0.1", "33.4291, -196.107, -33.3097, 0.1", "33.4236, -196.499, -33.3799, 0.1", "33.4195, -196.901, -33.4361, 0.1", "33.4185, -197.256, -33.4648, 0.14", "33.4262, -197.511, -33.4655, 0.1", "33.4419, -197.871, -33.4665, 0.1", "33.4626, -198.231, -33.4674, 0.14", "33.4854, -198.48, -33.4681, 0.1", "33.5261, -198.84, -33.4691, 0.1", "33.5634, -199.198, -33.4701, 0.1", "33.6009, -199.601, -33.4713, 0.1", "33.6182, -199.954, -33.4722, 0.1", "33.6186, -200.314, -33.4732, 0.1", "33.6186, -200.314, -33.4732, 0.14", "33.5912, -200.568, -33.4506, 0.84", "33.5298, -200.956, -33.3881, 0.7", "33.4648, -201.349, -33.3063, 0.56", "33.4213, -201.594, -33.2496, 0.42", "33.3613, -201.977, -33.1591, 0.28", "33.2787, -202.714, -32.9911, 0.14", "33.2572, -203.103, -32.906, 0.1", "33.2517, -203.456, -32.8355, 0.1", "33.2545, -203.854, -32.767, 0.1", "33.261, -204.205, -32.7219, 0.1", "33.2723, -204.565, -32.6966, 0.1", "33.2826, -204.926, -32.6976, 0.1", "33.2913, -205.331, -32.7266, 0.1", "33.2887, -205.579, -32.7596, 0.1", "33.2731, -205.977, -32.8336, 0.1", "33.2436, -206.327, -32.9117, 0.1", "33.1979, -206.711, -33.005, 0.1", "33.1204, -207.355, -33.1643, 0.1", "33.0937, -207.602, -33.2227, 0.1", "33.051, -207.99, -33.3055, 0.1", "33.0082, -208.387, -33.3772, 0.1", "32.9646, -208.774, -33.4582, 0.1", "32.9349, -209.125, -33.5322, 0.1", "32.9095, -209.523, -33.6047, 0.1", "32.9003, -209.767, -33.6572, 0.1", "32.8952, -210.115, -33.7504, 0.1", "32.903, -210.722, -33.9611, 0.1", "32.9154, -211.048, -34.1134, 0.56", "32.9154, -211.048, -34.1134, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-4.81052, 43.7969, -4.37186, 0.84", "-5.14166, 44.8539, -4.16878, 0.84", "-5.27355, 45.3694, -4.07434, 0.7", "-5.39739, 45.8991, -3.97675, 0.56", "-5.51076, 46.429, -3.88357, 0.42", "-5.60478, 46.9652, -3.78859, 0.28", "-5.68584, 47.5014, -3.69726, 0.42", "-5.70434, 47.8804, -3.65213, 0.56", "-5.7078, 48.1446, -3.61389, 0.7", "-5.70399, 48.681, -3.52844, 0.84", "-5.7252, 49.2785, -3.36567, 0.7", "-5.75766, 49.7976, -3.17897, 0.56", "-5.77515, 50.0495, -3.0736, 0.7", "-5.80715, 50.5482, -2.844, 0.56", "-5.83509, 51.0457, -2.6052, 0.7", "-5.84176, 52.1115, -2.14621, 0.84", "-5.79713, 52.6976, -1.98986, 0.7", "-5.73758, 53.0869, -1.95332, 0.56", "-5.68032, 53.357, -1.96352, 0.7", "-5.5269, 53.8731, -2.03524, 0.98", "-5.20681, 54.9368, -2.21197, 0.98", "-4.89895, 56.0024, -2.40652, 0.84", "-4.79897, 56.5427, -2.42816, 0.84", "-4.76648, 56.9281, -2.37288, 0.7", "-4.76225, 57.2892, -2.24776, 0.56", "-4.86029, 58.2711, -1.70797, 0.7", "-4.97805, 58.7717, -1.36561, 0.84", "-5.25549, 59.7116, -0.753684, 0.98", "-5.36481, 60.0483, -0.588216, 0.84", "-5.4562, 60.3003, -0.533296, 0.7", "-5.67341, 61.0359, -0.661777, 0.1", "-5.79034, 61.5903, -0.9081, 0.14", "-5.97749, 62.5905, -1.4565, 0.28", "-6.02941, 62.922, -1.65683, 0.42", "-6.13319, 63.4541, -1.93893, 0.56", "-6.34869, 64.4723, -2.369, 0.56", "-6.45255, 64.9932, -2.51128, 0.42", "-6.57292, 65.5261, -2.57426, 0.56", "-6.64445, 65.7928, -2.56496, 0.56", "-6.95475, 66.8711, -2.46972, 0.56", "-7.11762, 67.3817, -2.40044, 0.56", "-7.30195, 67.8925, -2.31393, 0.56", "-7.4808, 68.4108, -2.24492, 0.7", "-7.6468, 68.9329, -2.19798, 0.84", "-7.81406, 69.5272, -2.17342, 0.98", "-7.94027, 70.0624, -2.18166, 1.12", "-8.05869, 70.6021, -2.18359, 0.98", "-8.17491, 71.1396, -2.18429, 0.84", "-8.28486, 71.6687, -2.18176, 0.7", "-8.38812, 72.2115, -2.17232, 0.84", "-8.4711, 72.7546, -2.14826, 0.7", "-8.51054, 73.0277, -2.1345, 0.84" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-4.81052, 43.7969, -4.37186, 0.7", "-4.33488, 43.9694, -5.28457, 0.7", "-3.44761, 44.3069, -6.97532, 0.56", "-2.53236, 44.6506, -8.69377, 0.42", "-1.64252, 44.9968, -10.3814, 0.28", "-0.75391, 45.3546, -12.0673, 0.14", "0.153318, 45.7314, -13.7812, 0.1", "1.06529, 46.1082, -15.4725, 0.1", "1.96307, 46.4952, -17.147, 0.1", "2.44849, 46.7098, -18.0476, 0.1", "3.35147, 47.1326, -19.731, 0.1", "4.25674, 47.5721, -21.4108, 0.1", "5.16265, 48.0161, -23.0667, 0.1", "6.08791, 48.4835, -24.7513, 0.1", "7.00812, 48.9628, -26.4105, 0.1", "7.48799, 49.2068, -27.2609, 0.1", "8.40123, 49.7023, -28.9207, 0.1", "9.28552, 50.2301, -30.5862, 0.1", "9.71904, 50.526, -31.445, 0.1", "10.5205, 51.1494, -33.1193, 0.14", "10.6192, 51.2439, -33.3557, 0.28", "11.0063, 51.6999, -34.4446, 0.1", "11.1058, 51.848, -34.7774, 0.1", "10.0747, 52.347, -34.7533, 0.1", "9.52259, 52.5826, -34.6875, 0.1", "8.961, 52.7994, -34.5757, 0.14", "8.961, 52.7994, -34.5757, 0.28" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-7.08961, 38.4767, -20.7479, 0.7", "-7.34941, 39.1446, -21.4103, 0.7", "-7.79539, 40.2031, -22.3181, 0.56", "-7.95082, 40.5654, -22.5964, 0.42", "-8.43556, 41.6854, -23.4051, 0.28", "-8.68944, 42.2209, -23.7668, 0.14", "-8.9642, 42.8179, -24.1871, 0.1", "-9.23007, 43.422, -24.587, 0.1", "-9.36566, 43.7014, -24.7458, 0.14", "-9.36566, 43.7014, -24.7458, 0.28", "-9.72292, 44.5083, -25.1764, 0.42", "-10.1286, 45.5488, -25.8162, 0.42", "-10.3289, 46.1782, -26.2153, 0.28", "-10.4991, 46.8218, -26.6056, 0.14", "-10.6391, 47.4074, -26.9582, 0.14", "-10.8864, 48.6079, -27.6638, 0.28", "-10.8864, 48.6079, -27.6638, 0.42", "-11.0142, 49.2396, -27.9312, 0.56", "-11.1239, 49.8797, -28.1769, 0.42", "-11.3013, 50.5194, -28.3802, 0.28", "-11.4446, 50.8294, -28.4516, 0.42", "-11.8497, 51.4891, -28.5539, 0.28", "-12.2277, 52.0526, -28.6541, 0.28", "-12.6333, 52.6048, -28.7664, 0.42", "-13.189, 53.3798, -29.0003, 0.42", "-13.6118, 53.996, -29.2241, 0.28", "-13.8676, 54.3734, -29.382, 0.14", "-14.2456, 54.9635, -29.7248, 0.1", "-14.4661, 55.3122, -29.9751, 0.1", "-14.9267, 56.1664, -30.7452, 0.1", "-15.147, 56.7023, -31.2674, 0.28", "-15.3231, 57.2262, -31.806, 0.42", "-15.6215, 58.2354, -32.8244, 0.28", "-15.7155, 58.5881, -33.1563, 0.14", "-15.9451, 59.5371, -33.9949, 0.28", "-16.0753, 60.0685, -34.4027, 1.12", "-16.0753, 60.0685, -34.4027, 0.98", "-16.2522, 60.7418, -34.7744, 0.1", "-16.4479, 61.3594, -34.9888, 0.1", "-16.9156, 62.7058, -35.3248, 0.1", "-17.1537, 63.3378, -35.4446, 0.1", "-17.4078, 64.0511, -35.5932, 0.1", "-17.8242, 65.3836, -35.8632, 0.14", "-17.8818, 65.709, -35.9643, 0.28", "-17.9024, 66.0292, -36.0924, 0.42", "-17.9325, 67.3808, -36.6542, 0.28", "-17.9233, 68.0014, -36.973, 0.28", "-17.8799, 68.5937, -37.3327, 0.14", "-17.7681, 69.7633, -38.1305, 0.1", "-17.7378, 70.3529, -38.5024, 0.1", "-17.746, 71.031, -38.8707, 0.1", "-17.7836, 71.3512, -39.0038, 0.1" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-7.08961, 38.4767, -20.7479, 0.84", "-6.40841, 38.753, -21.4381, 0.84", "-4.98345, 39.2498, -22.6968, 0.98", "-3.44702, 39.6951, -23.8382, 0.84", "-3.22251, 39.759, -23.9817, 0.28", "-2.71049, 39.9163, -24.2827, 0.14", "-2.21493, 40.0793, -24.5854, 0.1", "-1.88068, 40.1795, -24.7538, 0.1", "-1.32398, 40.3385, -24.9595, 0.14", "-0.293238, 40.6784, -25.3391, 0.28", "0.590093, 41.021, -25.778, 0.42", "2.11384, 41.7467, -26.7846, 0.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-9.82536, 124.097, -9.60307, 0.1", "-10.2966, 125.288, -9.06179, 0.1", "-10.5441, 125.853, -8.82337, 0.1", "-10.854, 126.479, -8.57043, 0.1", "-11.1423, 127.035, -8.35626, 0.14", "-11.4392, 127.59, -8.14355, 0.28", "-11.4392, 127.59, -8.14355, 0.42", "-11.8355, 128.184, -7.96896, 0.1", "-12.2801, 128.758, -7.855, 0.14", "-12.4969, 129.009, -7.82792, 0.28", "-12.7306, 129.244, -7.84981, 0.42", "-13.2647, 129.747, -7.96752, 0.56", "-13.7756, 130.264, -8.07794, 0.42", "-14.6498, 131.274, -8.29579, 0.28", "-15.0758, 131.872, -8.41022, 0.14", "-15.6904, 133.074, -8.49187, 0.28", "-15.6904, 133.074, -8.49187, 0.42", "-15.8174, 134.414, -8.33482, 0.1", "-15.7602, 135.144, -8.19627, 0.1", "-15.6167, 135.837, -8.00969, 0.1", "-15.2444, 137.124, -7.61836, 0.1", "-15.0991, 137.534, -7.46995, 0.1", "-14.8596, 138.204, -7.25662, 0.14", "-14.7034, 138.634, -7.16874, 0.28", "-14.5857, 138.921, -7.09987, 0.42" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-9.82536, 124.097, -9.60307, 0.28", "-9.44982, 125.462, -9.41844, 0.28", "-9.30642, 126.193, -9.34444, 0.14", "-9.24844, 126.675, -9.30591, 0.1", "-9.19919, 127.623, -9.24322, 0.14", "-9.1916, 128.103, -9.21845, 0.1", "-9.19247, 128.78, -9.19241, 0.1", "-9.23629, 129.458, -9.21008, 0.14", "-9.30204, 130.12, -9.22305, 0.1", "-9.39524, 130.794, -9.23139, 0.1", "-9.51307, 131.547, -9.23818, 0.1", "-9.61185, 132.289, -9.24808, 0.1", "-9.67002, 132.964, -9.26292, 0.1", "-9.70123, 133.723, -9.28601, 0.1", "-9.69632, 134.388, -9.31219, 0.14", "-9.67199, 135.147, -9.34557, 0.1", "-9.65889, 135.633, -9.36648, 0.1", "-9.65003, 136.381, -9.39655, 0.14", "-9.65826, 137.143, -9.424, 0.28", "-9.68402, 137.466, -9.45877, 0.28", "-9.78365, 138.126, -9.56898, 0.1", "-9.93873, 138.772, -9.70142, 0.1", "-10.1383, 139.406, -9.84308, 0.1", "-10.3691, 140.026, -9.98604, 0.1", "-10.8592, 141.291, -10.2705, 0.14", "-11.083, 141.904, -10.3988, 0.28", "-11.2819, 142.542, -10.5266, 0.14", "-11.4407, 143.19, -10.642, 0.1", "-11.5652, 143.849, -10.734, 0.1", "-11.6748, 144.599, -10.7978, 0.1", "-11.7473, 145.346, -10.8128, 0.1", "-11.7781, 145.824, -10.8576, 0.1", "-11.8065, 146.569, -10.9234, 0.1", "-11.8174, 147.244, -10.9773, 0.1", "-11.8195, 147.922, -11.0235, 0.1", "-11.837, 148.672, -11.0606, 0.1", "-11.8781, 149.925, -11.1015, 0.1", "-11.9479, 151.309, -11.1225, 0.14", "-11.9983, 152.07, -11.1211, 0.1", "-12.0599, 152.816, -11.1078, 0.1", "-12.151, 153.486, -11.0807, 0.1", "-12.3054, 154.219, -11.0832, 0.1", "-12.5083, 154.86, -11.1571, 0.1", "-12.7724, 155.44, -11.3959, 0.1", "-13.0834, 155.93, -11.7449, 0.14", "-13.4496, 156.409, -12.194, 0.1", "-14.0867, 157.144, -12.9872, 0.1", "-14.8328, 157.937, -13.9026, 0.1", "-15.564, 158.672, -14.8226, 0.1", "-16.3169, 159.416, -15.7734, 0.14", "-16.4939, 159.602, -15.9967, 0.28", "-16.8656, 160.068, -16.4555, 0.42", "-17.1705, 160.593, -16.763, 0.56", "-17.2847, 160.902, -16.8458, 0.7", "-17.4473, 161.557, -16.8977, 0.84", "-17.5814, 162.294, -16.9008, 0.7", "-17.7233, 163.04, -16.9681, 0.56", "-17.8684, 163.766, -17.0775, 0.42", "-18.0206, 164.415, -17.1973, 0.28", "-18.1905, 165.05, -17.3725, 0.14", "-18.3779, 165.663, -17.5889, 0.1", "-18.8114, 166.845, -18.1675, 0.1", "-19.0384, 167.396, -18.4896, 0.1", "-19.269, 167.904, -18.8573, 0.14", "-19.7562, 168.908, -19.7489, 0.28", "-19.9874, 169.368, -20.1941, 0.28", "-20.4013, 170.215, -21.0201, 0.14", "-20.6163, 170.706, -21.4392, 0.1", "-21.0213, 171.734, -22.2646, 0.1", "-21.3837, 172.837, -23.0214, 0.1", "-21.5245, 173.435, -23.3053, 0.1", "-21.6129, 174.154, -23.537, 0.14", "-21.6234, 175.564, -23.7205, 0.28", "-21.595, 175.903, -23.7287, 0.42", "-21.4829, 176.641, -23.6695, 0.14", "-21.348, 177.386, -23.5829, 0.1", "-21.2651, 177.859, -23.5507, 0.1", "-21.1576, 178.6, -23.5443, 0.1", "-21.0878, 179.358, -23.5861, 0.1", "-21.0561, 180.101, -23.6752, 0.1", "-21.0575, 180.433, -23.7327, 0.1", "-21.0986, 181.162, -23.9453, 0.1", "-21.1584, 181.861, -24.2114, 0.1", "-21.2184, 182.479, -24.4884, 0.1", "-21.3401, 183.76, -25.1092, 0.1", "-21.3993, 184.358, -25.4032, 0.1", "-21.5348, 185.643, -26.011, 0.1", "-21.5897, 186.081, -26.2028, 0.1", "-21.69, 186.776, -26.4617, 0.1", "-21.7906, 187.505, -26.6616, 0.1", "-21.8782, 188.173, -26.7585, 0.1", "-21.9655, 188.83, -26.8153, 0.1", "-22.0566, 189.5, -26.8239, 0.1", "-22.1605, 190.173, -26.8302, 0.1", "-22.2874, 190.925, -26.8352, 0.1", "-22.3941, 191.664, -26.7875, 0.1", "-22.4336, 191.999, -26.7467, 0.1", "-22.5162, 192.747, -26.6215, 0.1", "-22.5753, 193.4, -26.4892, 0.1", "-22.6468, 194.042, -26.2864, 0.1", "-22.8793, 195.284, -25.6213, 0.14", "-23.0446, 195.808, -25.2197, 0.1", "-23.273, 196.256, -24.7674, 0.1", "-23.4202, 196.441, -24.5269, 0.14", "-24.2074, 197.125, -23.5507, 0.1", "-25.1793, 197.711, -22.6856, 0.1", "-25.8111, 197.99, -22.3916, 0.14", "-26.5235, 198.25, -22.3307, 0.14", "-26.9598, 198.405, -22.4123, 0.1", "-28.1947, 198.856, -22.9679, 0.1", "-28.5682, 198.998, -23.2275, 0.1", "-29.613, 199.411, -24.1078, 0.1", "-30.5933, 199.82, -25.0514, 0.1", "-31.0895, 200.034, -25.5865, 0.1", "-31.8533, 200.351, -26.4665, 0.1", "-32.1547, 200.465, -26.8235, 0.14" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.2716, -83.0209, 8.30553, 1.12", "12.3377, -83.4589, 8.29781, 1.12", "12.4187, -83.9588, 8.28868, 1.26", "12.4979, -84.4024, 8.28016, 1.4", "12.6019, -84.8432, 8.27023, 1.54", "12.6605, -85.0597, 8.26492, 1.4", "12.6605, -85.0597, 8.26492, 1.26", "12.7361, -85.2599, 8.21936, 1.12", "12.9061, -85.6607, 8.10261, 0.98", "13.101, -86.0899, 7.91723, 0.84", "13.2728, -86.4623, 7.73025, 0.7", "13.6282, -87.2444, 7.32366, 0.84", "13.7997, -87.6149, 7.1324, 0.98", "13.9768, -87.9922, 6.96086, 1.12", "14.3703, -88.7973, 6.64401, 1.12", "14.5543, -89.1823, 6.49881, 1.12", "14.7459, -89.5734, 6.37421, 0.98", "14.9645, -90.0189, 6.30512, 1.12", "15.3529, -90.7556, 6.23802, 0.98", "15.5064, -91.0273, 6.2657, 1.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.2716, -83.0209, 8.30553, 0.28", "12.5993, -83.1887, 8.1356, 0.28", "13.1301, -83.4575, 7.86023, 0.42", "13.487, -83.6265, 7.73378, 0.56", "14.0492, -83.9053, 7.57529, 0.42", "14.409, -84.0904, 7.48471, 0.28", "15.1162, -84.48, 7.31446, 0.14", "15.6672, -84.8152, 7.19713, 0.28", "16.5843, -85.4286, 7.02065, 0.28", "17.1104, -85.8054, 6.91593, 0.14", "17.4315, -86.0522, 6.84747, 0.1", "17.9284, -86.4613, 6.72354, 0.1", "18.3858, -86.8854, 6.54606, 0.1", "18.6514, -87.1649, 6.39347, 0.1", "19.1509, -87.7129, 6.04307, 0.1", "19.4139, -87.9759, 5.86899, 0.1", "19.8846, -88.377, 5.65162, 0.14", "20.7302, -88.9384, 5.41964, 0.28", "20.7302, -88.9384, 5.41964, 0.42", "21.7489, -89.3907, 5.34279, 0.42", "22.3589, -89.6262, 5.39023, 0.56", "23.3957, -90.03, 5.53874, 0.42", "23.9802, -90.2812, 5.64708, 0.28", "24.563, -90.567, 5.75138, 0.14", "24.9139, -90.7665, 5.79019, 0.28", "25.8118, -91.3694, 5.79775, 0.56", "26.3264, -91.7627, 5.76502, 0.7", "26.7769, -92.1364, 5.73008, 0.56", "27.3851, -92.6864, 5.71857, 0.42", "27.6785, -92.9794, 5.72076, 0.28", "27.9508, -93.2798, 5.71886, 0.14", "28.4806, -93.9231, 5.68019, 0.14", "29.1442, -94.7757, 5.65101, 0.28", "29.4852, -95.2402, 5.63519, 0.14", "29.8117, -95.7234, 5.6165, 0.14", "30.1393, -96.2096, 5.62265, 0.1", "30.5023, -96.7468, 5.638, 0.1", "30.8684, -97.2821, 5.64227, 0.1", "31.2676, -97.802, 5.65406, 0.1", "31.5409, -98.1072, 5.68185, 0.1", "32.2871, -98.882, 5.79517, 0.1", "32.7406, -99.3386, 5.87475, 0.1", "33.2001, -99.7986, 5.96005, 0.1", "34.0635, -100.642, 6.17975, 0.1", "34.3492, -100.931, 6.26246, 0.1", "34.7337, -101.356, 6.37234, 0.14", "35.1555, -101.841, 6.50051, 0.28", "35.4124, -102.14, 6.59497, 0.42", "36.0931, -102.941, 6.84868, 0.1", "36.4565, -103.384, 6.9612, 0.1", "36.8183, -103.832, 7.06967, 0.14", "37.5637, -104.786, 7.26851, 0.1", "37.9405, -105.307, 7.35431, 0.1", "38.1646, -105.654, 7.38503, 0.1", "38.4822, -106.219, 7.37497, 0.14", "38.7405, -106.741, 7.30702, 0.28", "38.9732, -107.269, 7.21638, 0.28", "39.0681, -107.54, 7.15764, 0.42", "39.2745, -108.083, 7.09988, 0.28", "39.4964, -108.625, 7.09386, 0.14", "40.0135, -109.608, 7.24219, 0.1", "40.5886, -110.496, 7.46322, 0.28", "40.9279, -110.955, 7.59773, 0.14", "41.6649, -111.889, 7.8959, 0.1", "42.0278, -112.324, 8.03644, 0.1", "42.8144, -113.228, 8.31696, 0.1", "43.2319, -113.697, 8.4786, 0.1", "43.6546, -114.185, 8.59014, 0.1", "43.8452, -114.401, 8.6287, 0.1", "44.2589, -114.909, 8.6359, 0.1", "44.5184, -115.22, 8.61364, 0.1" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.8537, -29.9261, -32.4008, 0.28", "-10.9859, -30.4071, -32.4427, 0.28", "-11.2271, -31.3643, -32.5228, 0.14", "-11.3478, -31.8486, -32.563, 0.28", "-11.5245, -32.6075, -32.6241, 0.14", "-11.6867, -33.38, -32.6835, 0.1", "-11.7723, -33.8783, -32.7187, 0.1", "-11.8314, -34.6541, -32.7615, 0.14", "-11.8098, -35.154, -32.7795, 0.28", "-11.7488, -35.4993, -32.7845, 0.42", "-11.6448, -35.8377, -32.7823, 0.98", "-11.3783, -36.4805, -32.7669, 0.84", "-11.0157, -37.1846, -32.7387, 0.7", "-10.6696, -37.7836, -32.7086, 0.56", "-10.2584, -38.4699, -32.6717, 0.42", "-9.9166, -39.067, -32.5929, 0.28", "-9.58457, -39.6814, -32.4765, 0.14", "-9.24037, -40.3666, -32.3173, 0.1", "-8.95544, -40.9906, -32.1565, 0.1", "-8.68503, -41.6221, -31.9849, 0.1", "-8.17198, -42.9201, -31.6256, 0.1", "-7.92737, -43.5602, -31.4474, 0.1", "-7.70804, -44.1962, -31.2833, 0.1", "-7.50454, -44.8588, -31.1386, 0.1", "-7.31875, -45.5299, -31.0312, 0.14", "-7.23111, -45.8717, -31.0023, 0.28", "-7.14629, -46.212, -31.0032, 0.7", "-6.96879, -46.9708, -31.0071, 0.56", "-6.81097, -47.6574, -31.0112, 0.42", "-6.64819, -48.4321, -31.0182, 0.28", "-6.50658, -49.1223, -31.025, 0.14", "-6.35784, -49.8146, -31.0308, 0.1", "-6.28045, -50.1441, -31.0324, 0.1", "-6.11321, -50.8321, -31.035, 0.1", "-6.00661, -51.3213, -31.0388, 0.1", "-5.86085, -52.0107, -31.0449, 0.1", "-5.73835, -52.708, -31.0551, 0.1", "-5.62961, -53.3918, -31.0669, 0.1", "-5.5196, -54.1756, -31.0829, 0.1", "-5.42751, -54.9639, -31.1019, 0.1", "-5.36061, -55.6565, -31.1208, 0.1", "-5.30176, -56.4478, -31.1453, 0.1", "-5.25604, -57.1506, -31.1681, 0.1", "-5.19691, -57.9272, -31.192, 0.14", "-5.11122, -58.714, -31.2119, 0.28", "-5.01844, -59.4898, -31.2303, 0.42", "-4.94132, -60.19, -31.2479, 0.56", "-4.89709, -60.5411, -31.2559, 0.42", "-4.78953, -61.2376, -31.3243, 0.42", "-4.65374, -61.9202, -31.4343, 0.56", "-4.54194, -62.3864, -31.5338, 0.1", "-4.34009, -63.1315, -31.7194, 0.1", "-4.15197, -63.7913, -31.8947, 0.1", "-3.74381, -65.128, -32.2461, 0.1", "-3.64316, -65.4566, -32.3313, 0.1", "-3.4385, -66.1005, -32.4832, 0.7", "-3.21508, -66.7601, -32.6111, 0.56", "-2.9884, -67.4209, -32.7031, 0.42", "-2.77048, -68.0929, -32.7509, 0.42", "-2.63186, -68.5607, -32.7099, 0.56", "-2.43792, -69.2306, -32.6095, 0.56", "-2.24886, -69.8992, -32.4925, 0.42", "-2.06307, -70.5682, -32.3536, 0.28", "-1.87935, -71.2282, -32.1888, 0.14", "-1.49471, -72.5588, -31.7846, 0.1", "-1.29514, -73.1809, -31.5549, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.8537, -29.9261, -32.4008, 0.1", "-11.2635, -28.948, -32.34, 0.1", "-11.4823, -28.4925, -32.3418, 0.1", "-11.7204, -28.0545, -32.3662, 0.1", "-12.0036, -27.5634, -32.4066, 0.1", "-12.2621, -27.1392, -32.4551, 0.1", "-12.2621, -27.1392, -32.4551, 0.1", "-12.6127, -26.535, -32.6058, 0.1", "-12.7943, -26.235, -32.683, 0.1", "-12.7943, -26.235, -32.683, 0.1", "-13.0455, -25.7454, -32.7951, 0.1", "-13.2571, -25.2969, -32.892, 0.1", "-13.4443, -24.8336, -32.9826, 0.1", "-13.6136, -24.3057, -33.0723, 0.1", "-13.7473, -23.8217, -33.1479, 0.1", "-13.8437, -23.346, -33.2532, 0.1", "-13.8437, -23.346, -33.2532, 0.1", "-13.8733, -22.864, -33.402, 0.1", "-13.8763, -22.3813, -33.5594, 0.1", "-13.8503, -21.9006, -33.7132, 0.1", "-13.7741, -20.8855, -34.0276, 0.1", "-13.737, -20.4099, -34.1658, 0.1", "-13.6777, -19.8736, -34.3423, 0.1", "-13.615, -19.401, -34.5097, 0.1", "-13.5451, -18.879, -34.6968, 0.1", "-13.4922, -18.4032, -34.8585, 0.1", "-13.4519, -17.917, -34.9994, 0.1", "-13.3795, -16.9883, -35.2774, 0.1", "-13.3533, -16.5109, -35.4207, 0.1", "-13.3365, -16.0251, -35.5585, 0.1", "-13.3156, -15.5426, -35.7154, 0.1", "-13.289, -15.0033, -35.8961, 0.1", "-13.2712, -14.5283, -36.0486, 0.1", "-13.2584, -14.0418, -36.1845, 0.1", "-13.2372, -13.555, -36.3273, 0.1", "-13.1891, -12.5342, -36.632, 0.1", "-13.1713, -12.0558, -36.7734, 0.1", "-13.1458, -11.5791, -36.9388, 0.1", "-13.1088, -11.046, -37.1355, 0.1", "-13.0766, -10.5707, -37.3113, 0.1", "-13.0449, -10.0935, -37.4745, 0.1", "-13.0241, -9.61497, -37.6149, 0.1", "-12.9765, -8.59424, -37.9197, 0.1", "-12.9587, -8.10759, -38.0636, 0.1", "-12.9339, -7.63084, -38.2293, 0.1", "-12.8981, -7.10774, -38.4226, 0.1", "-12.8664, -6.63479, -38.5977, 0.1", "-12.8312, -6.15687, -38.7657, 0.1", "-12.8041, -5.67448, -38.9136, 0.1", "-12.7365, -4.66607, -39.2357, 0.1", "-12.7072, -4.18583, -39.3901, 0.1", "-12.6895, -3.70363, -39.5402, 0.1", "-12.685, -3.45908, -39.6083, 0.1", "-12.6916, -2.9728, -39.7207, 0.1", "-12.7213, -2.47571, -39.8064, 0.1", "-12.7557, -1.97698, -39.8955, 0.1", "-12.7795, -1.48591, -40.0122, 0.1", "-12.7997, -0.997199, -40.1486, 0.1", "-12.8209, -0.514664, -40.2971, 0.1", "-12.8351, -0.0406316, -40.4528, 0.1", "-12.86, 0.969257, -40.7943, 0.1", "-12.8727, 1.44825, -40.9547, 0.1", "-12.8808, 1.93303, -41.1056, 0.1", "-12.8854, 2.16946, -41.1707, 0.1", "-12.8914, 2.66244, -41.2815, 0.1", "-12.9015, 3.16373, -41.3618, 0.1", "-12.9242, 3.6667, -41.4047, 0.1", "-12.9439, 4.23382, -41.4514, 0.1", "-12.9502, 4.73152, -41.4889, 0.1", "-12.9515, 5.08964, -41.5149, 0.1", "-12.9525, 5.59363, -41.5513, 0.1", "-12.9584, 6.09997, -41.5894, 0.1", "-12.9627, 6.5952, -41.6261, 0.1", "-12.9742, 7.1611, -41.6702, 0.1", "-12.9863, 7.66469, -41.7099, 0.1", "-13.0067, 8.16782, -41.7522, 0.1", "-13.0167, 8.66895, -41.8335, 0.1", "-13.0194, 8.91385, -41.8907, 0.1", "-13.0277, 9.39884, -42.0323, 0.1", "-13.0447, 9.88002, -42.1936, 0.1", "-13.0646, 10.356, -42.362, 0.1", "-13.1191, 11.3294, -42.709, 0.1", "-13.1548, 11.7976, -42.8707, 0.1", "-13.1928, 12.2685, -43.0568, 0.1", "-13.2268, 12.733, -43.2527, 0.1", "-13.2608, 13.1976, -43.4485, 0.1", "-13.2988, 13.6685, -43.6347, 0.1", "-13.3444, 14.1446, -43.7977, 0.1", "-13.4356, 15.114, -44.1352, 0.1", "-13.4811, 15.5902, -44.2982, 0.1", "-13.5192, 16.0611, -44.4843, 0.1", "-13.5524, 16.5249, -44.6822, 0.1", "-13.5848, 16.9879, -44.882, 0.1", "-13.6207, 17.4569, -45.0732, 0.1", "-13.6638, 17.9234, -45.2379, 0.1", "-13.7071, 18.8723, -45.6484, 0.1", "-13.7098, 19.0988, -45.7577, 0.1", "-13.695, 19.5364, -46.0148, 0.1", "-13.6697, 19.9608, -46.2878, 0.1", "-13.6227, 20.3693, -46.5859, 0.1", "-13.4959, 21.2004, -47.2342, 0.1", "-13.4453, 21.597, -47.5472, 0.1", "-13.3748, 22.3893, -48.2071, 0.1", "-13.3616, 22.771, -48.5417, 0.1", "-13.4288, 23.5637, -49.2448, 0.1", "-13.4288, 23.5637, -49.2448, 0.1", "-13.6519, 24.0636, -49.704, 0.1", "-13.8826, 24.443, -50.0579, 0.1", "-14.0609, 24.6729, -50.2546, 0.1", "-14.4408, 25.1117, -50.6774, 0.1", "-14.9863, 25.6808, -51.2384, 0.1", "-15.3016, 26.0189, -51.5793, 0.1", "-15.4897, 26.2246, -51.7928, 0.1", "-15.802, 26.5566, -52.1313, 0.1", "-16.3221, 27.1129, -52.7281, 0.1", "-16.7099, 27.5323, -53.1705, 0.1", "-17.0252, 27.8631, -53.497, 0.1", "-17.226, 28.0704, -53.7106, 0.1", "-17.6172, 28.4921, -54.1272, 0.1", "-18.1418, 29.1009, -54.666, 0.1", "-18.4433, 29.5031, -54.9439, 0.1", "-18.602, 29.7718, -55.1049, 0.1", "-18.602, 29.7718, -55.1049, 0.1", "-18.7741, 30.2179, -55.2759, 0.1", "-18.9176, 30.678, -55.3958, 0.1", "-19.0547, 31.1609, -55.4724, 0.1", "-19.1732, 31.6381, -55.5889, 0.1", "-19.2277, 31.8753, -55.6613, 0.1", "-19.3319, 32.381, -55.8821, 0.1", "-19.4311, 32.8115, -56.1324, 0.1", "-19.5371, 33.1862, -56.4545, 0.1", "-19.753, 33.8039, -57.2912, 0.1", "-19.8684, 34.0389, -57.7263, 0.1", "-20.1218, 34.3954, -58.5546, 0.1", "-20.278, 34.5517, -59.0022, 0.1", "-20.6483, 34.8154, -59.9304, 0.1", "-21.042, 35.0312, -60.7525, 0.1", "-21.4063, 35.21, -61.3354, 0.1", "-21.7379, 35.3876, -61.7627, 0.1", "-21.9749, 35.5418, -61.9841, 0.1", "-21.9749, 35.5418, -61.9841, 0.1", "-22.3501, 35.9158, -62.1704, 0.1", "-22.7189, 36.315, -62.312, 0.1", "-23.0845, 36.7257, -62.4535, 0.1", "-23.3177, 36.9787, -62.5432, 0.1", "-23.7133, 37.3579, -62.6916, 0.1", "-24.126, 37.7075, -62.8432, 0.1", "-24.126, 37.7075, -62.8432, 0.1", "-24.5914, 37.9889, -63.006, 0.1", "-25.0593, 38.2513, -63.1683, 0.1", "-25.5361, 38.5117, -63.3331, 0.1", "-25.8295, 38.6758, -63.4348, 0.1", "-26.0275, 38.8014, -63.5256, 0.1", "-26.5505, 39.1841, -63.8161, 0.1", "-26.9172, 39.5041, -64.1085, 0.1", "-27.1209, 39.7048, -64.3123, 0.1", "-27.4056, 40.026, -64.6939, 0.1", "-27.8814, 40.614, -65.4397, 0.1", "-28.032, 40.8116, -65.699, 0.1", "-28.4926, 41.44, -66.5417, 0.1", "-28.6257, 41.6283, -66.817, 0.1", "-29.0203, 42.1815, -67.638, 0.1", "-29.2388, 42.4788, -68.0615, 0.1", "-29.3942, 42.6797, -68.3152, 0.1", "-29.6582, 43.0076, -68.687, 0.1", "-30.1048, 43.5399, -69.2615, 0.1", "-30.4696, 43.9622, -69.7135, 0.1", "-30.7855, 44.29, -70.0537, 0.1", "-30.9898, 44.4944, -70.2668, 0.1", "-31.4075, 44.9006, -70.6729, 0.1", "-31.9714, 45.4512, -71.2392, 0.1", "-32.3074, 45.7697, -71.5571, 0.1", "-32.6339, 46.0843, -71.8867, 0.1", "-32.9653, 46.4, -72.2225, 0.1", "-33.1594, 46.5915, -72.4438, 0.1", "-33.725, 47.1768, -73.1314, 0.1", "-34.024, 47.4973, -73.4807, 0.1", "-34.3125, 47.8282, -73.8407, 0.1", "-34.4705, 48.0365, -74.0752, 0.1", "-34.8436, 48.5898, -74.6815, 0.1", "-35.044, 48.9393, -75.0814, 0.1", "-35.2061, 49.305, -75.4756, 0.1", "-35.3146, 49.6847, -75.875, 0.1", "-35.4689, 50.4334, -76.6223, 0.1", "-35.5254, 50.8047, -76.9472, 0.1", "-35.618, 51.5343, -77.4688, 0.1", "-35.6505, 52.0118, -77.774, 0.1", "-35.6615, 52.3312, -77.9472, 0.1", "-35.68, 52.8573, -78.1597, 0.1", "-35.7165, 53.347, -78.279, 0.1", "-35.7723, 53.8351, -78.3674, 0.1", "-35.8492, 54.331, -78.4265, 0.1", "-35.8939, 54.5789, -78.458, 0.1", "-35.9949, 55.0696, -78.5241, 0.1", "-36.0924, 55.5561, -78.6318, 0.1", "-36.1951, 56.0291, -78.7771, 0.1", "-36.2952, 56.4689, -78.9909, 0.1", "-36.2952, 56.4689, -78.9909, 0.1", "-36.3962, 56.9033, -79.3431, 0.1", "-36.5888, 57.6566, -80.0668, 0.1", "-36.6756, 57.9791, -80.4378, 0.1", "-36.8552, 58.6421, -81.2526, 0.1", "-36.9371, 58.9527, -81.6314, 0.1", "-37.074, 59.5494, -82.3865, 0.1", "-37.1475, 59.8932, -82.8246, 0.1", "-37.2965, 60.5758, -83.6289, 0.1", "-37.3696, 60.9118, -83.9992, 0.1", "-37.4438, 61.2638, -84.3575, 0.1", "-37.5721, 61.908, -84.9752, 0.1", "-37.6507, 62.3397, -85.3257, 0.1", "-37.7155, 62.7368, -85.6168, 0.1", "-37.7842, 63.1483, -85.9063, 0.1", "-37.93, 64.0053, -86.5167, 0.1", "-38.0023, 64.4229, -86.7964, 0.1", "-38.0752, 64.8382, -87.0748, 0.1", "-38.1392, 65.2482, -87.3675, 0.1", "-38.2725, 66.103, -87.9838, 0.1", "-38.3369, 66.5166, -88.267, 0.1", "-38.3933, 66.9347, -88.5496, 0.1", "-38.4939, 67.7891, -89.1725, 0.1", "-38.5437, 68.1939, -89.4751, 0.1", "-38.5958, 68.596, -89.7619, 0.1", "-38.6547, 69.0235, -90.0248, 0.1", "-38.8031, 69.9076, -90.5415, 0.1", "-38.8031, 69.9076, -90.5415, 0.1", "-38.9282, 70.4161, -90.7443, 0.1", "-39.0589, 70.877, -90.9129, 0.1", "-39.1982, 71.3266, -91.0966, 0.1", "-39.3595, 71.8243, -91.3009, 0.1", "-39.5084, 72.2785, -91.4723, 0.1", "-39.6697, 72.7778, -91.6724, 0.1", "-39.8088, 73.2285, -91.8606, 0.1", "-40.0965, 74.1677, -92.2648, 0.1", "-40.2279, 74.6169, -92.4554, 0.1", "-40.3492, 75.0752, -92.6372, 0.1", "-40.4779, 75.5901, -92.8207, 0.1", "-40.5839, 76.058, -92.9586, 0.1", "-40.6376, 76.2975, -93.0135, 0.1", "-40.7539, 76.7867, -93.0842, 0.1", "-40.8828, 77.2696, -93.1583, 0.1", "-41.0304, 77.7489, -93.2379, 0.1", "-41.1981, 78.218, -93.3229, 0.1", "-41.1981, 78.218, -93.3229, 0.1", "-41.4505, 78.7069, -93.4352, 0.1", "-41.7363, 79.1821, -93.5569, 0.1", "-42.0336, 79.6421, -93.681, 0.1", "-42.3436, 80.1003, -93.8088, 0.1", "-42.654, 80.5506, -93.9363, 0.1", "-42.8456, 80.8436, -94.016, 0.1", "-43.1294, 81.3208, -94.1372, 0.1", "-43.3493, 81.7435, -94.2775, 0.1", "-43.3493, 81.7435, -94.2775, 0.1", "-43.5085, 82.2318, -94.5344, 0.1", "-43.6074, 82.6477, -94.7871, 0.1", "-43.6674, 83.0536, -95.0863, 0.1", "-43.7409, 83.8705, -95.7613, 0.1", "-43.7564, 84.2546, -96.0892, 0.1", "-43.7295, 85.049, -96.7518, 0.1", "-43.68, 85.4391, -97.0692, 0.1", "-43.4972, 86.2532, -97.6812, 0.1", "-43.4294, 86.4582, -97.8101, 0.1", "-43.2151, 86.9324, -98.0138, 0.1", "-42.9668, 87.4147, -98.1594, 0.1", "-42.8038, 87.727, -98.229, 0.1", "-42.568, 88.2294, -98.3512, 0.1", "-42.4633, 88.5503, -98.4736, 0.1", "-42.4255, 88.7653, -98.6032, 0.1", "-42.4356, 89.2142, -98.9506, 0.1", "-42.5934, 90.0181, -99.6268, 0.1", "-42.7145, 90.4143, -100.006, 0.1", "-43.0057, 91.1391, -100.73, 0.1", "-43.0781, 91.3006, -100.909, 0.1", "-43.2504, 91.659, -101.314, 0.1", "-43.4131, 92.0017, -101.728, 0.1", "-43.7223, 92.663, -102.504, 0.1", "-43.8859, 93.0134, -102.921, 0.1", "-44.1731, 93.6316, -103.612, 0.1", "-44.3212, 93.9776, -104.029, 0.1", "-44.5853, 94.6515, -104.806, 0.1", "-44.7087, 94.9974, -105.157, 0.1", "-44.7976, 95.2679, -105.362, 0.1", "-44.9091, 95.7007, -105.603, 0.1", "-45.0844, 96.5438, -105.87, 0.1", "-45.2454, 97.5455, -106.068, 0.1", "-45.3274, 98.0448, -106.11, 0.1", "-45.4181, 98.5316, -106.148, 0.1", "-45.5415, 99.0841, -106.191, 0.1", "-45.6828, 99.5674, -106.233, 0.1", "-45.7645, 99.8068, -106.255, 0.1", "-45.9569, 100.325, -106.352, 0.1", "-46.1766, 100.832, -106.455, 0.1", "-46.4175, 101.334, -106.565, 0.1", "-46.6655, 101.825, -106.676, 0.1", "-46.8801, 102.275, -106.774, 0.1", "-46.8801, 102.275, -106.774, 0.1", "-47.0753, 102.792, -106.871, 0.1", "-47.2238, 103.269, -106.951, 0.1", "-47.3482, 103.756, -107.024, 0.1", "-47.4546, 104.245, -107.091, 0.1", "-47.4546, 104.245, -107.091, 0.1", "-47.5435, 104.732, -107.154, 0.1", "-47.6232, 105.228, -107.213, 0.1", "-47.6924, 105.725, -107.27, 0.1", "-47.7538, 106.226, -107.325, 0.1", "-47.8098, 106.725, -107.378, 0.1", "-47.8631, 107.228, -107.43, 0.1", "-47.9122, 107.719, -107.48, 0.1", "-47.9645, 108.282, -107.537, 0.1", "-48.0072, 108.783, -107.586, 0.1", "-48.0458, 109.287, -107.634, 0.1", "-48.0801, 109.78, -107.679, 0.1", "-48.097, 110.033, -107.703, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "32.9154, -211.048, -34.1134, 0.1", "32.9019, -211.396, -34.2037, 0.1", "32.8818, -211.89, -34.3235, 0.1", "32.8587, -212.439, -34.4375, 0.1", "32.8472, -212.939, -34.5296, 0.1", "32.8328, -213.995, -34.6937, 0.1", "32.8351, -214.49, -34.7615, 0.1", "32.8269, -215.052, -34.8608, 0.1", "32.8088, -215.601, -34.9695, 0.1", "32.7906, -216.096, -35.0691, 0.1", "32.7669, -216.656, -35.1652, 0.1", "32.7603, -217.158, -35.2314, 0.1", "32.7494, -218.21, -35.382, 0.1", "32.7539, -218.459, -35.4208, 0.14", "32.7742, -219.021, -35.5021, 0.14", "32.8084, -219.578, -35.5696, 0.1", "32.8552, -220.082, -35.6124, 0.1", "32.9201, -220.584, -35.6313, 0.1", "33.0132, -221.084, -35.6263, 0.1", "33.1255, -221.634, -35.6263, 0.1", "33.2406, -222.129, -35.6339, 0.1", "33.3894, -222.68, -35.6538, 0.1", "33.5218, -223.161, -35.6723, 0.1", "33.661, -223.648, -35.6942, 0.1", "33.8091, -224.131, -35.7212, 0.1", "33.9434, -224.617, -35.7832, 0.1", "34.0722, -225.156, -35.8806, 0.1", "34.1467, -225.5, -35.9582, 0.1", "34.2376, -225.983, -36.0778, 0.1", "34.3295, -226.466, -36.1671, 0.1", "34.5382, -227.506, -36.2964, 0.1", "34.6378, -228.004, -36.325, 0.14", "34.7418, -228.499, -36.3251, 0.1", "34.8537, -228.986, -36.3017, 0.1", "35.088, -230.022, -36.1886, 0.1", "35.2031, -230.51, -36.1077, 0.1", "35.3333, -231.044, -35.9891, 0.1", "35.4349, -231.532, -35.8887, 0.1", "35.526, -232.086, -35.791, 0.1", "35.5991, -232.637, -35.7227, 0.14", "35.6279, -232.887, -35.7104, 0.1", "35.6928, -233.451, -35.6828, 0.1", "35.7434, -233.954, -35.6542, 0.1", "35.7829, -234.511, -35.6135, 0.1", "35.7998, -235.017, -35.6066, 0.1", "35.8123, -235.525, -35.6042, 0.14", "35.8157, -236.087, -35.6043, 0.28", "35.8033, -236.806, -35.6139, 0.14", "35.7802, -237.157, -35.6213, 0.1", "35.663, -238.184, -35.669, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "32.9154, -211.048, -34.1134, 0.1", "32.5771, -211.287, -34.1079, 0.1", "32.2856, -211.512, -34.0423, 0.1", "31.9641, -211.758, -33.9457, 0.1", "31.6409, -212.007, -33.8425, 0.1", "31.4467, -212.159, -33.7589, 0.1", "31.1358, -212.4, -33.6107, 0.1", "30.5761, -212.864, -33.3029, 0.1", "30.3201, -213.082, -33.1494, 0.1", "30.0291, -213.33, -32.972, 0.1", "29.4931, -213.809, -32.6513, 0.1", "29.3666, -213.933, -32.5895, 0.1", "29.0895, -214.219, -32.4689, 0.1", "28.9157, -214.415, -32.4214, 0.1", "28.6616, -214.74, -32.3661, 0.1", "28.423, -215.086, -32.3615, 0.1", "28.05, -215.733, -32.5311, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-8.51054, 73.0277, -2.1345, 0.28", "-9.39874, 73.6032, -2.13196, 0.28", "-9.812, 73.9096, -2.14741, 0.14", "-10.0705, 74.1136, -2.16453, 0.28", "-10.5672, 74.5338, -2.20828, 0.42", "-10.8112, 74.7541, -2.23384, 0.42", "-11.1869, 75.1136, -2.27797, 0.28", "-11.5238, 75.4978, -2.34721, 0.14", "-11.7271, 75.7542, -2.38669, 0.1", "-12.0264, 76.1707, -2.44112, 0.1", "-12.3108, 76.6049, -2.48921, 0.14", "-12.5822, 77.0411, -2.53306, 0.28", "-12.8325, 77.4323, -2.57457, 0.14", "-13.0105, 77.6994, -2.60509, 0.1", "-13.2834, 78.0742, -2.65518, 0.14", "-13.6075, 78.4701, -2.71933, 0.28", "-13.9408, 78.8493, -2.8244, 0.42", "-14.2984, 79.2147, -2.93334, 0.56", "-14.5283, 79.431, -2.99951, 0.42", "-14.9031, 79.7793, -3.099, 0.28", "-15.1448, 80.0019, -3.15762, 0.28", "-15.7279, 80.5763, -3.28147, 0.42", "-16.3812, 81.2912, -3.39712, 0.1", "-16.7023, 81.6923, -3.44098, 0.1", "-17.0039, 82.1165, -3.47002, 0.1", "-17.2828, 82.5499, -3.48604, 0.1", "-17.5445, 82.9919, -3.53176, 0.14", "-17.6599, 83.1921, -3.56252, 0.28", "-17.9023, 83.6288, -3.69063, 0.42", "-18.1255, 84.0155, -3.82521, 0.56", "-18.3756, 84.4345, -3.99195, 0.7", "-18.8641, 85.212, -4.32948, 0.56", "-19.0319, 85.4632, -4.44223, 0.42", "-19.3948, 85.9719, -4.665, 0.42", "-19.5744, 86.2207, -4.76387, 0.56", "-19.5744, 86.2207, -4.76387, 0.7", "-19.8729, 86.6371, -4.8602, 0.56", "-20.1463, 87.0653, -4.94861, 0.42", "-20.3895, 87.5067, -5.05777, 0.28", "-20.586, 87.914, -5.1715, 0.14", "-20.7933, 88.366, -5.3077, 0.1", "-20.9914, 88.821, -5.44793, 0.1", "-21.3032, 89.6568, -5.77516, 0.14", "-21.3032, 89.6568, -5.77516, 0.28", "-21.495, 90.1051, -5.9428, 0.56", "-21.7394, 90.5443, -6.05812, 0.42", "-22.0039, 90.9254, -6.10513, 0.56", "-22.5631, 91.5787, -6.09014, 0.7", "-23.318, 92.3101, -5.98542, 0.14", "-23.5635, 92.5273, -5.95029, 0.1", "-24.3794, 93.179, -5.80802, 0.1", "-24.6383, 93.3657, -5.76226, 0.14", "-24.9112, 93.5526, -5.71799, 0.28", "-25.4395, 93.9271, -5.64127, 0.42", "-25.6963, 94.1339, -5.6424, 0.56", "-25.9403, 94.3546, -5.66329, 0.42", "-26.3887, 94.8285, -5.75898, 0.7", "-26.7106, 95.2222, -5.87585, 0.56", "-27.0052, 95.6198, -6.02103, 0.42", "-27.0052, 95.6198, -6.02103, 0.28", "-27.2608, 96.0217, -6.23284, 0.1", "-27.5275, 96.411, -6.44079, 0.1", "-28.0867, 97.1297, -6.79005, 0.1", "-28.3153, 97.3557, -6.86338, 0.1", "-28.7249, 97.6665, -6.90258, 0.14", "-29.4773, 98.1414, -6.85311, 0.28", "-30.3222, 98.5529, -6.57826, 0.84", "-31.114, 98.8792, -6.11434, 0.7", "-31.8563, 99.1912, -5.55733, 0.84", "-32.0202, 99.2668, -5.40982, 0.98", "-32.1726, 99.3407, -5.24955, 1.12", "-32.7716, 99.6545, -4.54676, 0.56", "-33.3557, 100.024, -3.85868, 0.42", "-33.6326, 100.231, -3.54544, 0.28", "-34.2216, 100.709, -2.93275, 0.28", "-34.7803, 101.179, -2.42186, 0.42", "-34.7803, 101.179, -2.42186, 0.56", "-35.2266, 101.604, -2.19744, 0.7", "-35.574, 101.972, -2.09892, 0.56", "-35.7853, 102.224, -2.07053, 0.42", "-36.0761, 102.649, -2.08608, 0.28", "-36.3424, 103.097, -2.08803, 0.14", "-36.5636, 103.504, -2.05803, 0.1", "-36.7878, 103.956, -1.95212, 0.1", "-36.9739, 104.359, -1.80878, 0.1", "-37.1469, 104.751, -1.63005, 0.1", "-37.4852, 105.519, -1.18558, 0.14", "-37.5646, 105.699, -1.06026, 0.28", "-37.9049, 106.358, -0.473903, 0.42", "-38.073, 106.661, -0.165533, 0.56", "-38.1675, 106.798, -0.00559306, 0.56", "-38.3727, 107.069, 0.313853, 0.7", "-38.5964, 107.336, 0.623696, 0.98", "-39.0938, 107.901, 1.24373, 0.84", "-39.3368, 108.187, 1.51655, 0.7", "-39.8703, 108.782, 2.08062, 0.56", "-40.0013, 108.927, 2.20833, 0.42", "-40.5696, 109.54, 2.71075, 0.1", "-40.8962, 109.866, 2.95431, 0.1", "-41.1983, 110.158, 3.13733, 0.14", "-41.9396, 110.846, 3.44282, 0.1", "-42.1763, 111.073, 3.47142, 0.1", "-42.4114, 111.294, 3.47441, 0.1", "-42.8803, 111.74, 3.36429, 0.14", "-42.8803, 111.74, 3.36429, 0.28", "-43.5444, 112.365, 2.82794, 0.84", "-43.8984, 112.798, 2.21758, 0.84" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-8.51054, 73.0277, -2.1345, 0.84", "-8.51428, 73.5506, -2.03916, 0.84", "-8.52612, 74.129, -1.94083, 0.98", "-8.53406, 74.7142, -1.8376, 0.84", "-8.54423, 75.2266, -1.75019, 0.84", "-8.56024, 75.7512, -1.66586, 0.84", "-8.58522, 76.3401, -1.57765, 0.7", "-8.61666, 76.866, -1.50729, 0.56", "-8.66477, 77.4472, -1.4419, 0.56", "-8.714, 77.9737, -1.38785, 0.56", "-8.76287, 78.4976, -1.33396, 0.7", "-8.816, 79.0215, -1.28401, 0.84", "-8.88455, 79.5474, -1.2479, 0.84", "-8.88455, 79.5474, -1.2479, 0.98" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-17.7836, 71.3512, -39.0038, 1.12", "-17.7021, 71.8115, -38.8701, 1.12", "-17.5943, 72.3327, -38.7098, 0.98", "-17.4632, 72.8375, -38.5391, 0.84", "-17.3699, 73.1567, -38.425, 0.7", "-17.2036, 73.652, -38.2356, 0.56", "-17.0203, 74.1317, -38.0391, 0.7", "-16.8026, 74.5982, -37.8252, 0.1", "-16.5621, 75.0397, -37.6027, 0.14", "-16.382, 75.314, -37.4765, 0.1", "-16.0806, 75.7405, -37.3045, 0.1", "-15.7644, 76.1642, -37.1537, 0.1", "-15.5597, 76.4423, -37.0678, 0.1", "-15.2429, 76.8749, -36.946, 0.1", "-14.6678, 77.7173, -36.7274, 0.14", "-14.3782, 78.1671, -36.613, 0.42", "-14.2025, 78.4624, -36.5387, 0.28", "-13.8756, 79.0592, -36.376, 0.14", "-13.7217, 79.3611, -36.2826, 0.1", "-13.4437, 79.961, -36.0676, 0.1", "-13.3118, 80.2635, -35.9343, 0.1", "-13.1839, 80.5553, -35.8052, 0.1", "-12.9417, 81.1559, -35.552, 0.1", "-12.8183, 81.4715, -35.4585, 0.14", "-12.6981, 81.8009, -35.3982, 0.28", "-12.6222, 82.0343, -35.3789, 0.42", "-12.4585, 82.5005, -35.4033, 0.1", "-12.2767, 83.0125, -35.4682, 0.14", "-11.9261, 83.9827, -35.6281, 0.1", "-11.7441, 84.4925, -35.7077, 0.1", "-11.6589, 84.7219, -35.7352, 0.1", "-11.2379, 85.7558, -35.8628, 0.14", "-11.0086, 86.2589, -35.9199, 0.1", "-10.8554, 86.5793, -35.9424, 0.1", "-10.6172, 87.0719, -35.9396, 0.1", "-10.3615, 87.5648, -35.916, 0.1", "-9.88511, 88.4833, -35.817, 0.1", "-9.72676, 88.7913, -35.7569, 0.14", "-9.40337, 89.3915, -35.6206, 0.28", "-9.23894, 89.6961, -35.538, 0.42", "-8.98831, 90.1614, -35.3864, 0.56", "-8.74923, 90.6296, -35.2059, 0.42", "-8.52613, 91.0839, -34.9911, 0.28", "-8.38836, 91.3777, -34.856, 0.14", "-8.12349, 91.9687, -34.5913, 0.1", "-7.99017, 92.2676, -34.486, 0.1", "-7.85272, 92.5796, -34.4004, 0.1", "-7.55774, 93.208, -34.3136, 0.1", "-7.31907, 93.7098, -34.2975, 0.1", "-7.16746, 94.0182, -34.3054, 0.1", "-6.69851, 94.9489, -34.3672, 0.1", "-6.53872, 95.2614, -34.3865, 0.1", "-6.06165, 96.1828, -34.43, 0.1", "-5.90045, 96.5, -34.4354, 0.1", "-5.58455, 97.1184, -34.3994, 0.1", "-5.43477, 97.4327, -34.3511, 0.1", "-5.14228, 98.0549, -34.2217, 0.1", "-4.99044, 98.3649, -34.1549, 0.1", "-4.76198, 98.8486, -34.0403, 0.1", "-4.53467, 99.3476, -33.9495, 0.1", "-4.30565, 99.8456, -33.9223, 0.1", "-3.90707, 100.707, -33.9468, 0.1", "-3.80118, 100.927, -33.9827, 0.1", "-3.59149, 101.364, -34.0821, 0.1", "-3.3517, 101.85, -34.2023, 0.1", "-2.93699, 102.788, -34.3732, 0.1", "-2.80458, 103.112, -34.4014, 0.1", "-2.49105, 104.102, -34.3014, 0.1", "-2.35408, 104.619, -34.1786, 0.1", "-2.23351, 105.115, -33.9747, 0.1", "-2.04461, 106.031, -33.512, 0.1", "-1.99811, 106.327, -33.3287, 0.1", "-1.85453, 107.191, -32.7685, 0.1", "-1.79561, 107.471, -32.565, 0.14", "-1.72546, 107.671, -32.435, 0.14", "-1.30501, 108.481, -32.0061, 0.28", "-1.1057, 108.745, -31.8885, 0.28", "-0.757359, 109.131, -31.7092, 0.14", "-0.420535, 109.462, -31.5541, 0.1", "-0.046406, 109.812, -31.3539, 0.1", "0.328078, 110.139, -31.12, 0.1", "0.662284, 110.414, -30.8744, 0.1", "1.0389, 110.706, -30.6008, 0.1", "1.28024, 110.892, -30.4257, 0.14", "1.45201, 111.022, -30.3015, 0.28", "1.8177, 111.28, -30.0908, 0.7", "2.09106, 111.46, -29.9619, 0.56", "2.48376, 111.714, -29.8014, 0.42", "2.93091, 111.987, -29.6342, 0.28", "3.34115, 112.227, -29.4875, 0.14", "4.20354, 112.727, -29.1922, 0.1", "4.61075, 112.978, -29.056, 0.1", "5.0533, 113.265, -28.9014, 0.1", "5.44649, 113.549, -28.7917, 0.1", "5.63593, 113.699, -28.7454, 0.1", "5.63593, 113.699, -28.7454, 0.1", "6.02165, 114.098, -28.7217, 0.1", "6.37185, 114.522, -28.7409, 0.1", "6.92254, 115.293, -28.8087, 0.1", "7.21865, 115.762, -28.851, 0.1", "7.71041, 116.57, -28.9461, 0.14", "7.98967, 117.037, -29.0011, 0.1", "8.27182, 117.511, -29.0815, 0.1", "8.5369, 117.982, -29.1658, 0.14", "8.70388, 118.289, -29.2056, 0.28", "9.24146, 119.272, -29.3218, 0.14", "9.41211, 119.579, -29.3378, 0.1", "9.95291, 120.465, -29.3563, 0.1", "10.1457, 120.764, -29.3485, 0.1", "10.4396, 121.227, -29.3046, 0.1", "10.6171, 121.525, -29.249, 0.1", "10.9327, 122.115, -29.0593, 0.1", "11.1661, 122.594, -28.8793, 0.1", "11.2944, 122.885, -28.7501, 0.1", "11.5035, 123.372, -28.5825, 0.1", "11.6309, 123.69, -28.5011, 0.1", "11.8821, 124.33, -28.3743, 0.1", "12.0699, 124.839, -28.3002, 0.1", "12.1825, 125.17, -28.2627, 0.1", "12.5211, 126.152, -28.1606, 0.1", "12.6895, 126.666, -28.0786, 0.1", "12.7936, 126.997, -27.9998, 0.1", "12.9522, 127.491, -27.8253, 0.1", "13.1225, 127.964, -27.5845, 0.1", "13.1958, 128.154, -27.4586, 0.14", "13.495, 128.845, -26.881, 0.28", "13.7032, 129.22, -26.5368, 0.14", "13.9039, 129.581, -26.165, 0.1", "14.0636, 129.918, -25.7608, 0.1", "14.1266, 130.118, -25.4783, 0.1", "14.1778, 130.431, -25.0294, 0.1", "14.172, 130.707, -24.6161, 0.14", "14.074, 131.243, -23.7682, 0.1", "13.9389, 131.821, -22.9107, 0.1", "13.8, 132.377, -22.1527, 0.1", "13.7154, 132.714, -21.728, 0.1", "13.4855, 133.318, -20.9093, 0.1", "13.6696, 133.56, -21.0792, 0.14", "14.5996, 134.85, -21.8847, 0.28", "15.1048, 135.516, -22.3362, 0.14", "15.6188, 136.18, -22.7819, 0.28", "15.7577, 136.35, -22.8983, 0.42", "16.0638, 136.734, -23.1384, 0.14", "16.3577, 137.176, -23.3098, 0.1", "16.5106, 137.483, -23.3375, 0.1", "16.7705, 138.14, -23.3227, 0.1", "17.0641, 139.038, -23.252, 0.1", "17.2354, 139.567, -23.2412, 0.1", "17.404, 140.089, -23.2521, 0.1", "17.4762, 140.327, -23.2611, 0.1", "17.6311, 140.86, -23.2801, 0.1", "17.7658, 141.392, -23.2919, 0.1", "17.9858, 142.411, -23.2612, 0.1", "18.0944, 142.949, -23.2478, 0.1", "18.1943, 143.495, -23.2277, 0.1", "18.2339, 143.74, -23.2115, 0.1", "18.2886, 144.23, -23.1667, 0.1", "18.3208, 144.771, -23.0938, 0.1", "18.3253, 145.257, -23.0001, 0.1", "18.3217, 145.795, -22.9013, 0.1", "18.3054, 146.344, -22.8078, 0.1", "18.2782, 146.835, -22.7317, 0.1", "18.2477, 147.376, -22.6479, 0.1", "18.2151, 147.925, -22.5641, 0.1", "18.2044, 148.168, -22.5248, 0.1", "18.2058, 148.662, -22.4742, 0.14", "18.2243, 149.156, -22.4495, 0.1", "18.2665, 149.701, -22.4389, 0.1", "18.3142, 150.257, -22.4452, 0.1", "18.3479, 150.599, -22.4519, 0.1", "18.4514, 151.636, -22.471, 0.1", "18.5015, 152.129, -22.4749, 0.1", "18.5516, 152.673, -22.4694, 0.1", "18.5817, 153.167, -22.4579, 0.1", "18.6178, 153.722, -22.4601, 0.1", "18.6423, 154.207, -22.4659, 0.1", "18.6566, 154.764, -22.4643, 0.1", "18.673, 155.311, -22.4824, 0.1", "18.6717, 155.56, -22.4821, 0.1", "18.6437, 156.602, -22.4292, 0.1", "18.6101, 157.096, -22.3844, 0.1", "18.5713, 157.584, -22.3151, 0.1", "18.516, 158.061, -22.2241, 0.14", "18.3602, 159.064, -21.9787, 0.1", "18.2792, 159.6, -21.8574, 0.1", "18.1997, 160.069, -21.7554, 0.1", "18.1795, 160.419, -21.7411, 0.1", "18.2012, 160.913, -21.796, 0.1", "18.2778, 161.383, -21.9316, 0.1", "18.4841, 162.303, -22.3017, 0.1", "18.5939, 162.747, -22.4888, 0.1", "18.837, 163.686, -22.8612, 0.1", "18.955, 164.206, -23.0233, 0.1", "19.1831, 165.196, -23.2379, 0.1", "19.2308, 165.437, -23.2593, 0.1", "19.2832, 165.984, -23.174, 0.1", "19.2869, 166.502, -22.9937, 0.1", "19.1883, 167.427, -22.5218, 0.1", "19.1313, 167.708, -22.3319, 0.1", "19.0318, 168.081, -22.0227, 0.1", "18.7975, 168.852, -21.3605, 0.1", "18.6563, 169.256, -21.0173, 0.1", "18.5258, 169.647, -20.7396, 0.1", "18.2911, 170.478, -20.3377, 0.14", "18.2416, 170.704, -20.2839, 0.28", "18.1685, 171.255, -20.3008, 0.1", "18.1832, 171.701, -20.4936, 0.1", "18.2667, 172.568, -21.0106, 0.1", "18.3275, 172.977, -21.2828, 0.1", "18.4658, 173.801, -21.8561, 0.1", "18.5371, 174.209, -22.1267, 0.14", "18.8312, 175.75, -23.076, 0.28", "18.9071, 176.174, -23.3021, 0.28", "18.9546, 176.495, -23.4375, 0.14", "19.0098, 176.962, -23.5894, 0.1", "19.0392, 177.503, -23.6692, 0.1", "19.0467, 177.997, -23.6715, 0.1", "19.0165, 178.546, -23.5863, 0.1", "19.0165, 178.546, -23.5863, 0.1", "18.9881, 179.034, -23.5113, 0.1", "18.9668, 179.573, -23.4225, 0.1", "18.9436, 180.123, -23.3329, 0.1" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-17.7836, 71.3512, -39.0038, 0.7", "-18.3183, 71.7677, -39.435, 0.7", "-18.7302, 72.1262, -39.7726, 0.56", "-18.99, 72.3603, -39.9715, 0.42", "-19.409, 72.7416, -40.2736, 0.28", "-20.1953, 73.4778, -40.8056, 0.14", "-20.4605, 73.735, -40.974, 0.1", "-20.8707, 74.1605, -41.2267, 0.1", "-21.3793, 74.7248, -41.514, 0.14", "-21.6277, 75.0101, -41.635, 0.1", "-22.0158, 75.4814, -41.8337, 0.1", "-22.3933, 75.9577, -42.0182, 0.1", "-22.6208, 76.2735, -42.1505, 0.1", "-22.95, 76.7706, -42.3693, 0.1", "-23.2581, 77.2793, -42.5923, 0.1", "-23.7822, 78.1623, -42.98, 0.1", "-24.0407, 78.6139, -43.2163, 0.14", "-24.3129, 79.1159, -43.5099, 0.28", "-24.5699, 79.6103, -43.8148, 0.14", "-24.8171, 80.1081, -44.1222, 0.1", "-24.9777, 80.4326, -44.3061, 0.14", "-25.4265, 81.3479, -44.7179, 0.28", "-25.5733, 81.6855, -44.9007, 0.42", "-25.7605, 82.2161, -45.1955, 0.7", "-25.9038, 82.7097, -45.4518, 0.56", "-26.034, 83.2543, -45.7515, 0.42", "-26.1407, 83.7539, -46.0137, 0.28", "-26.3641, 84.8215, -46.5173, 0.14", "-26.4601, 85.3179, -46.7839, 0.1", "-26.5389, 85.81, -47.0692, 0.1", "-26.6869, 86.8363, -47.6758, 0.1", "-26.7587, 87.3306, -47.9592, 0.1", "-26.8397, 87.8292, -48.2265, 0.1", "-27.0551, 88.9044, -48.7173, 0.1", "-27.1726, 89.4185, -48.9445, 0.1", "-27.3152, 89.934, -49.1459, 0.1", "-27.5069, 90.5238, -49.3123, 0.1", "-27.5998, 90.7852, -49.3749, 0.1", "-27.8215, 91.3798, -49.473, 0.1", "-27.8215, 91.3798, -49.473, 0.1", "-28.0182, 91.9683, -49.6086, 0.1", "-28.1577, 92.489, -49.7984, 0.1", "-28.2787, 92.987, -50.0351, 0.1", "-28.404, 93.4763, -50.3024, 0.1", "-28.6816, 94.4806, -50.9078, 0.14", "-28.817, 94.9338, -51.2285, 0.28", "-29.0756, 95.7067, -51.8413, 0.42", "-29.289, 96.2747, -52.3751, 0.1", "-29.4736, 96.7077, -52.8118, 0.1", "-29.5954, 96.9587, -53.0945, 0.1", "-29.9625, 97.6855, -53.9828, 0.1", "-30.1548, 98.053, -54.4638, 0.1", "-30.4978, 98.6961, -55.2845, 0.1", "-30.688, 99.068, -55.7629, 0.1", "-31.0661, 99.7889, -56.6528, 0.14", "-31.4808, 100.533, -57.4995, 0.1", "-31.6294, 100.792, -57.7744, 0.1", "-31.8749, 101.207, -58.1882, 0.1", "-32.1283, 101.63, -58.5891, 0.1", "-32.3609, 102.052, -59.0243, 0.1", "-32.5002, 102.313, -59.2897, 0.14", "-32.8436, 102.965, -60.0507, 0.28", "-33.0831, 103.431, -60.6594, 0.28", "-33.4142, 104.028, -61.5186, 0.14", "-33.7967, 104.666, -62.4616, 0.1", "-33.9446, 104.882, -62.7788, 0.1", "-34.4883, 105.572, -63.7343, 0.1", "-34.6815, 105.793, -64.0154, 0.1", "-35.0, 106.149, -64.4317, 0.1", "-35.3625, 106.527, -64.8032, 0.14", "-35.7422, 106.914, -65.1283, 0.1", "-35.9702, 107.172, -65.343, 0.1", "-36.5639, 107.967, -66.0284, 0.1", "-36.8335, 108.391, -66.4279, 0.14", "-36.9777, 108.657, -66.6854, 0.1", "-37.193, 109.092, -67.1058, 0.1", "-37.5647, 109.943, -67.8673, 0.14", "-37.9462, 110.831, -68.5811, 0.28", "-37.9462, 110.831, -68.5811, 0.42", "-38.143, 111.341, -68.9183, 0.28", "-38.3258, 111.862, -69.2314, 0.14", "-38.4864, 112.352, -69.4785, 0.1", "-38.6712, 112.929, -69.6909, 0.1", "-38.8273, 113.457, -69.8449, 0.1", "-39.1404, 114.577, -70.1586, 0.1", "-39.2755, 115.114, -70.2997, 0.1", "-39.3876, 115.651, -70.4618, 0.1", "-39.4876, 116.188, -70.6369, 0.1", "-39.5832, 116.724, -70.8125, 0.1", "-39.7089, 117.324, -71.0019, 0.1", "-39.8201, 117.855, -71.1833, 0.1", "-40.055, 118.905, -71.6276, 0.1", "-40.1138, 119.159, -71.747, 0.1", "-40.2383, 119.708, -72.0565, 0.1", "-40.3671, 120.244, -72.3862, 0.1", "-40.6038, 121.208, -72.9944, 0.1", "-40.7576, 121.746, -73.3255, 0.1", "-40.9176, 122.216, -73.5877, 0.1", "-41.3078, 123.214, -74.1307, 0.1", "-41.5468, 123.749, -74.4102, 0.1", "-41.6666, 123.976, -74.5163, 0.1", "-41.9977, 124.489, -74.7156, 0.1", "-42.3519, 124.986, -74.8935, 0.1", "-42.8178, 125.604, -75.138, 0.1", "-43.053, 125.902, -75.255, 0.1", "-43.426, 126.378, -75.4712, 0.1", "-43.6417, 126.672, -75.6415, 0.1", "-43.9645, 127.121, -75.9532, 0.1", "-44.5378, 127.963, -76.5968, 0.1", "-44.7103, 128.24, -76.8243, 0.1", "-44.984, 128.681, -77.2023, 0.14", "-45.5223, 129.479, -77.9208, 0.1", "-45.8354, 129.898, -78.2965, 0.1", "-45.9976, 130.073, -78.4508, 0.14", "-46.276, 130.302, -78.6296, 0.28", "-46.8437, 130.723, -79.0215, 0.7", "-47.3157, 131.02, -79.3393, 0.56", "-47.627, 131.191, -79.5287, 0.42", "-48.1241, 131.449, -79.8426, 0.28", "-48.6183, 131.695, -80.154, 0.14", "-49.4805, 132.117, -80.6867, 0.14", "-49.9898, 132.353, -80.9985, 0.1", "-50.4947, 132.597, -81.2937, 0.1", "-51.0144, 132.85, -81.5732, 0.1", "-51.3404, 133.014, -81.7297, 0.1", "-51.8747, 133.302, -81.9457, 0.14", "-52.3859, 133.611, -82.1515, 0.28", "-52.8727, 133.957, -82.387, 0.14", "-53.297, 134.328, -82.6775, 0.1", "-53.5419, 134.568, -82.8947, 0.14", "-53.9029, 134.928, -83.2733, 0.14", "-54.5646, 135.563, -84.0556, 0.1", "-54.7901, 135.747, -84.3332, 0.1", "-55.4639, 136.124, -85.0548, 0.14", "-55.8924, 136.242, -85.4141, 0.1", "-56.391, 136.227, -85.6929, 0.1", "-56.9086, 136.095, -85.8758, 0.1", "-57.4369, 135.887, -85.939, 0.1", "-58.5331, 135.387, -85.9588, 0.1", "-59.111, 135.115, -85.8878, 0.1", "-59.6725, 134.837, -85.7836, 0.1", "-60.0296, 134.659, -85.708, 0.1", "-61.0928, 134.144, -85.4892, 0.1", "-61.6065, 133.902, -85.4034, 0.1", "-62.6762, 133.44, -85.3091, 0.1", "-63.2698, 133.196, -85.3135, 0.1", "-63.798, 132.989, -85.3846, 0.1", "-64.3062, 132.801, -85.5322, 0.1", "-64.8536, 132.591, -85.7937, 0.1", "-65.3199, 132.403, -86.0654, 0.1", "-66.2604, 132.022, -86.7152, 0.14", "-66.7071, 131.841, -87.0223, 0.1", "-67.1576, 131.656, -87.3214, 0.1", "-67.648, 131.446, -87.6787, 0.1", "-67.8631, 131.349, -87.8422, 0.1", "-68.2951, 131.148, -88.1583, 0.1", "-68.7933, 130.92, -88.4794, 0.1", "-69.2261, 130.704, -88.7888, 0.1", "-70.0876, 130.241, -89.4868, 0.14", "-70.363, 130.09, -89.7443, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "2.11384, 41.7467, -26.7846, 1.12", "2.25869, 42.5286, -28.2751, 1.12", "2.28779, 42.6322, -28.475, 1.12", "2.39573, 42.9183, -29.0318, 0.14", "2.53522, 43.3296, -29.7851, 0.1", "2.6744, 43.7565, -30.525, 0.1", "2.84584, 44.2812, -31.3957, 0.1", "3.03008, 44.7203, -32.1184, 0.1", "3.2098, 45.1657, -32.8433, 0.1", "3.29487, 45.3991, -33.2116, 0.1", "3.41876, 45.9141, -34.0076, 0.1", "3.4728, 46.4487, -34.7911, 0.1", "3.4728, 46.4487, -34.7911, 0.14", "3.44112, 46.8245, -35.3024, 0.1", "3.42501, 47.0175, -35.5585, 0.1", "3.37505, 47.6392, -36.377, 0.1", "3.33676, 47.9283, -36.7252, 0.1", "3.27582, 48.5028, -37.3696, 0.1", "3.25147, 48.818, -37.6958, 0.14", "3.24475, 49.4168, -38.2787, 0.28", "3.23913, 49.7934, -38.6201, 0.7", "3.23759, 50.1322, -38.9075, 0.56", "3.27208, 50.8606, -39.5259, 0.42", "3.29312, 51.2027, -39.8085, 0.28", "3.33954, 51.9223, -40.4272, 0.14", "3.34679, 52.26, -40.7308, 0.1", "3.35548, 52.9261, -41.3718, 0.1", "3.32732, 53.5654, -42.0405, 0.14", "3.32732, 53.5654, -42.0405, 0.28", "3.26139, 53.9666, -42.5286, 0.1", "3.20263, 54.2669, -42.9357, 0.1", "3.16364, 54.4402, -43.1947, 0.1", "3.10245, 54.608, -43.4617, 0.14", "3.05093, 54.7277, -43.6477, 0.28", "2.84921, 55.2123, -44.339, 0.84", "2.68967, 55.7696, -45.0918, 0.7", "2.61945, 56.0724, -45.4864, 0.56", "2.56794, 56.2695, -45.7398, 0.42", "2.48924, 56.5737, -46.1317, 0.28", "2.42126, 56.8742, -46.5354, 0.14", "2.34856, 57.3871, -47.2286, 0.28", "2.34856, 57.3871, -47.2286, 0.42", "2.37138, 57.6865, -47.6382, 0.1", "2.43743, 58.2665, -48.3878, 0.1", "2.53721, 58.8254, -49.0445, 0.1", "2.65719, 59.4896, -49.7177, 0.1", "2.65719, 59.4896, -49.7177, 0.14", "2.70187, 59.8504, -49.9728, 0.1", "2.75249, 60.2445, -50.193, 0.1", "2.86255, 61.1211, -50.5525, 0.14", "2.92384, 61.5932, -50.7049, 0.1", "2.98199, 62.0248, -50.8257, 0.1", "3.10324, 62.9349, -51.081, 0.1", "3.15151, 63.2309, -51.1744, 0.1", "3.28411, 64.1252, -51.4784, 0.14", "3.28411, 64.1252, -51.4784, 0.28", "3.33876, 64.5419, -51.6506, 0.28", "3.37885, 64.9525, -51.8152, 0.14", "3.45054, 65.8089, -52.156, 0.1", "3.48631, 66.2319, -52.3175, 0.1", "3.54644, 67.1363, -52.6144, 0.14", "3.57668, 67.5731, -52.7353, 0.1", "3.6155, 68.0617, -52.8408, 0.1", "3.66733, 68.9206, -52.9555, 0.14", "3.66591, 69.42, -52.9756, 0.1", "3.63839, 69.9286, -52.9728, 0.1", "3.59271, 70.4263, -52.9679, 0.1", "3.5642, 70.7462, -52.9714, 0.14", "3.53778, 71.2536, -53.0067, 0.28", "3.54664, 71.6928, -53.0723, 0.42", "3.60124, 72.1326, -53.1719, 0.56", "3.78823, 72.9136, -53.4105, 0.42", "3.95265, 73.3617, -53.588, 0.14", "4.29293, 74.0848, -53.9204, 0.1", "4.70913, 74.8518, -54.3053, 0.1", "4.85285, 75.102, -54.4294, 0.1", "5.28377, 75.8745, -54.7842, 0.14", "5.60617, 76.5654, -55.047, 0.28", "5.68647, 76.7661, -55.1166, 0.42", "5.79889, 77.1909, -55.2314, 1.26", "5.8981, 77.6764, -55.349, 1.12", "6.00842, 78.1473, -55.4753, 0.98", "6.13673, 78.6212, -55.6107, 0.84", "6.43501, 79.4768, -55.8921, 0.7", "6.52294, 79.6693, -55.9682, 0.84", "6.95983, 80.4379, -56.3241, 1.12", "7.37535, 81.1138, -56.6699, 0.98", "7.83686, 81.8529, -57.0577, 0.84", "8.24312, 82.5307, -57.4107, 0.7", "8.62718, 83.2283, -57.7562, 0.56", "9.02803, 84.0097, -58.1281, 0.42", "9.18812, 84.3916, -58.2953, 0.28", "9.32212, 84.8515, -58.468, 0.14", "9.38782, 85.2827, -58.5947, 0.1", "9.39522, 86.2143, -58.7785, 0.1", "9.39522, 86.2143, -58.7785, 0.14", "9.324, 86.6628, -58.7865, 0.56", "9.2669, 87.1687, -58.8006, 0.42", "9.21338, 87.6653, -58.8215, 0.28", "9.14851, 88.17, -58.8426, 0.14", "9.08838, 88.6643, -58.886, 0.1", "9.06331, 88.9814, -58.9303, 0.1", "9.08278, 89.8839, -59.1298, 0.1", "9.14268, 90.3102, -59.2674, 0.1", "9.25455, 90.7172, -59.4351, 0.1", "9.4999, 91.4423, -59.7706, 0.14", "9.66783, 91.8699, -59.9905, 0.28", "9.98891, 92.5774, -60.3776, 0.14", "10.3537, 93.3475, -60.7966, 0.1", "10.6872, 94.0502, -61.182, 0.1", "10.8499, 94.4236, -61.3829, 0.14", "11.1189, 95.2083, -61.7825, 0.1", "11.3065, 95.9658, -62.1626, 0.1", "11.3477, 96.375, -62.3501, 0.1", "11.3223, 96.7953, -62.5202, 0.1", "11.2564, 97.2128, -62.6804, 0.1", "11.1702, 97.6239, -62.8318, 0.1", "11.0403, 98.0353, -62.9664, 0.1", "11.0403, 98.0353, -62.9664, 0.14", "10.8954, 98.4415, -63.1018, 0.1", "10.6008, 99.2735, -63.3802, 0.1", "10.4865, 99.6858, -63.526, 0.1", "10.3883, 100.104, -63.6751, 0.1", "10.3007, 100.517, -63.8116, 0.1", "10.208, 100.943, -63.9381, 0.1", "10.1116, 101.372, -64.0414, 0.1", "9.95485, 102.209, -64.2097, 0.1", "9.90209, 102.65, -64.2918, 0.1", "9.88914, 103.139, -64.3961, 0.1", "9.9025, 103.581, -64.4916, 0.1", "9.95269, 104.065, -64.6068, 0.1", "10.0754, 104.985, -64.8234, 0.1", "10.1625, 105.471, -64.9447, 0.1", "10.3569, 106.257, -65.1522, 0.1", "10.5015, 106.726, -65.285, 0.1", "10.8201, 107.583, -65.5563, 0.1", "10.9947, 108.029, -65.7035, 0.1", "11.2893, 108.811, -65.9387, 0.1", "11.3919, 109.098, -66.0157, 0.14", "11.4517, 109.313, -66.0552, 0.28", "11.6553, 110.207, -66.1722, 0.7", "11.711, 110.712, -66.1853, 0.56", "11.7454, 111.024, -66.183, 0.42", "11.805, 111.53, -66.1907, 0.28", "11.8966, 112.026, -66.2477, 0.14", "11.9735, 112.324, -66.3084, 0.1", "12.1125, 112.798, -66.4329, 0.1", "12.3816, 113.663, -66.7217, 0.14", "12.6435, 114.493, -67.0319, 0.28", "12.8945, 115.318, -67.3672, 0.14", "13.1191, 116.168, -67.7282, 0.1", "13.2097, 116.576, -67.9054, 0.1", "13.2697, 116.989, -68.0794, 0.1", "13.2768, 117.289, -68.1917, 0.1", "13.2355, 117.712, -68.3299, 0.1", "13.1628, 118.13, -68.4859, 0.14", "12.9676, 118.972, -68.8888, 0.28", "12.9018, 119.346, -69.1378, 0.42", "12.9018, 119.346, -69.1378, 0.56", "12.9089, 119.784, -69.5979, 0.28", "13.0099, 120.396, -70.3215, 0.14", "13.0758, 120.582, -70.5658, 0.1", "13.3423, 121.118, -71.3076, 0.1", "13.6579, 121.64, -72.0402, 0.1", "13.9458, 122.095, -72.6792, 0.1", "14.2474, 122.549, -73.3151, 0.1", "14.8239, 123.464, -74.6169, 0.14", "15.0844, 123.916, -75.2691, 0.28", "15.0844, 123.916, -75.2691, 0.42", "15.1827, 124.244, -75.8174, 0.7", "15.1898, 124.38, -76.1003, 0.56", "15.1627, 124.599, -76.7035, 0.42", "15.1558, 124.675, -77.0123, 0.56", "15.1679, 124.72, -77.2346, 0.7", "15.3041, 124.9, -78.1604, 1.68", "15.5109, 125.058, -79.0436, 1.54", "15.7512, 125.191, -79.8352, 1.4", "16.0788, 125.325, -80.6892, 1.26", "16.0788, 125.325, -80.6892, 1.12", "16.1747, 125.358, -80.8923, 0.98" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.11384, 41.7467, -26.7846, 1.4", "2.72476, 42.3807, -27.3627, 1.4", "3.30329, 42.9548, -27.9178, 1.26", "3.95722, 43.564, -28.5345, 1.12", "4.56694, 44.1022, -29.1003, 0.98", "5.19982, 44.6035, -29.6664, 0.84", "5.86104, 45.0608, -30.2425, 0.7", "7.24257, 45.7893, -31.3659, 0.56", "7.95873, 46.09, -31.9208, 0.56", "8.16131, 46.1571, -32.0672, 0.1", "9.03682, 46.4105, -32.6513, 0.1", "9.90842, 46.6538, -33.1928, 0.1", "10.83, 46.9125, -33.6984, 0.14", "11.1474, 47.017, -33.8474, 0.84", "12.066, 47.4198, -34.2642, 0.7", "12.9461, 47.9238, -34.652, 0.56", "13.6934, 48.4892, -34.959, 0.42", "14.0586, 48.8302, -35.0938, 0.28", "14.7683, 49.6004, -35.3677, 0.14", "15.4031, 50.3126, -35.6283, 0.28", "15.7398, 50.7487, -35.7726, 0.42", "16.0397, 51.2182, -35.9348, 0.28", "16.2001, 51.5146, -36.0554, 0.14", "16.5529, 52.316, -36.4356, 0.1", "16.6385, 52.5316, -36.5502, 0.14", "16.8018, 52.9608, -36.7832, 0.1", "17.1862, 53.8119, -37.2731, 0.1", "17.6327, 54.661, -37.7835, 0.1", "17.8717, 55.0455, -38.0156, 0.14", "18.3878, 55.7702, -38.4476, 0.28", "18.72, 56.1763, -38.6955, 1.4", "19.397, 56.8864, -39.1529, 1.26", "20.0639, 57.4946, -39.5573, 1.12", "20.8149, 58.1084, -39.9681, 0.98", "21.5546, 58.6519, -40.3363, 1.12", "22.3967, 59.224, -40.7043, 0.98", "23.2008, 59.7061, -41.0244, 0.84", "24.0778, 60.2005, -41.3191, 0.7", "24.5186, 60.4396, -41.4366, 0.56", "24.8328, 60.6114, -41.5116, 0.42", "25.2769, 60.8571, -41.6127, 0.28", "26.1037, 61.3437, -41.8411, 0.42", "26.397, 61.532, -41.9403, 0.56", "27.2422, 62.1343, -42.2595, 0.42", "27.9844, 62.7093, -42.5611, 0.28", "28.7754, 63.3692, -42.8938, 0.14", "29.4798, 63.9977, -43.1887, 0.1", "30.2332, 64.7261, -43.4602, 0.1", "30.6311, 65.1266, -43.587, 0.1", "30.8754, 65.3883, -43.6433, 0.1", "31.5711, 66.2168, -43.7364, 0.1", "31.7834, 66.5041, -43.758, 0.1", "32.0995, 66.9853, -43.8153, 0.1", "32.7081, 67.957, -44.0465, 0.14", "32.8343, 68.1709, -44.1193, 0.14", "33.0808, 68.5881, -44.2936, 0.1", "33.5663, 69.4704, -44.6866, 0.1", "34.0435, 70.3105, -45.1062, 0.1", "34.4926, 71.0823, -45.5314, 0.1", "34.7299, 71.468, -45.7574, 0.1", "35.2561, 72.287, -46.2384, 0.14", "35.5461, 72.7104, -46.4854, 0.28", "36.0586, 73.4481, -46.9033, 0.14", "36.6109, 74.2711, -47.3468, 0.1", "37.097, 75.0249, -47.7565, 0.1", "37.2703, 75.3072, -47.912, 0.1", "37.7498, 76.1614, -48.3715, 0.1", "38.2153, 77.0339, -48.8199, 0.1", "38.4271, 77.462, -49.0124, 0.1", "38.8845, 78.3649, -49.3919, 0.14", "39.1234, 78.7865, -49.5665, 0.14", "39.2591, 78.9911, -49.6481, 0.28", "39.4685, 79.268, -49.7353, 0.56", "40.1743, 80.0738, -49.9125, 0.42", "40.868, 80.7674, -50.0131, 0.28", "41.6696, 81.4986, -50.0558, 0.14", "42.069, 81.8222, -50.0858, 0.28", "42.5342, 82.1578, -50.1616, 0.14", "42.9744, 82.3907, -50.2927, 0.28", "43.198, 82.449, -50.4091, 0.42", "43.198, 82.449, -50.4091, 0.56", "43.9911, 82.4171, -50.9991, 0.84", "44.7894, 82.3872, -51.5823, 0.7", "45.6591, 82.3475, -52.1675, 0.56", "46.4804, 82.3448, -52.654, 0.42", "46.7103, 82.3601, -52.7662, 0.56", "47.2401, 82.4278, -52.964, 0.42", "48.2417, 82.6376, -53.2136, 0.28", "48.7881, 82.7889, -53.3291, 0.14", "49.7663, 83.1288, -53.5214, 0.1", "50.7237, 83.5054, -53.7327, 0.1", "50.9545, 83.6028, -53.7975, 0.1", "51.8691, 84.0159, -54.1176, 0.1", "52.6455, 84.4067, -54.4155, 0.14", "52.9429, 84.5752, -54.5461, 0.28", "53.7605, 85.1063, -54.9447, 0.14", "54.5398, 85.6735, -55.3694, 0.1", "55.2177, 86.2079, -55.777, 0.1", "55.6168, 86.5387, -56.0339, 0.42", "56.275, 87.1253, -56.4793, 0.42", "56.9611, 87.7945, -56.9898, 0.28", "57.5273, 88.4517, -57.4648, 0.14", "58.0428, 89.1434, -57.9459, 0.28", "58.5002, 89.8302, -58.4212, 0.42", "58.7321, 90.2007, -58.6934, 0.1", "58.9428, 90.575, -58.9775, 0.1", "59.1294, 90.9396, -59.2792, 0.1", "59.4588, 91.6362, -59.8992, 0.14", "59.7677, 92.373, -60.5857, 0.7", "60.0677, 93.0903, -61.2981, 0.56", "60.3469, 93.7081, -61.9692, 0.42", "60.6673, 94.3877, -62.7531, 0.28", "60.9706, 95.0345, -63.5271, 0.14", "61.13, 95.3855, -63.9502, 0.1", "61.4178, 95.9691, -64.6487, 0.1", "61.799, 96.6342, -65.413, 0.1", "62.2444, 97.2751, -66.1222, 0.1", "62.2444, 97.2751, -66.1222, 0.14", "62.8255, 97.841, -66.6829, 0.56", "63.4581, 98.4029, -67.195, 0.42", "64.196, 99.0251, -67.6932, 0.28", "64.8772, 99.5793, -68.0675, 0.14", "65.6715, 100.207, -68.4509, 0.1", "66.4778, 100.842, -68.8041, 0.1", "66.7436, 101.06, -68.9036, 0.1", "67.5431, 101.758, -69.1351, 0.1", "67.9549, 102.145, -69.2237, 0.1", "68.6148, 102.83, -69.3041, 0.14", "68.7848, 103.022, -69.3061, 0.28", "69.1615, 103.461, -69.2929, 0.7", "69.5401, 103.899, -69.2717, 0.56", "70.2406, 104.724, -69.1869, 0.42", "70.479, 104.988, -69.1484, 0.28", "70.8931, 105.385, -69.0729, 0.14", "71.744, 106.042, -68.9439, 0.1", "71.9708, 106.165, -68.9233, 0.1", "72.204, 106.27, -68.9078, 0.1", "72.7294, 106.483, -68.8548, 0.1", "73.7343, 106.894, -68.8103, 0.1", "74.0684, 107.043, -68.8008, 0.1", "75.023, 107.551, -68.7968, 0.1", "75.5041, 107.858, -68.8112, 0.56", "75.9624, 108.211, -68.824, 0.42", "76.6853, 108.88, -68.8715, 0.28", "77.0813, 109.302, -68.8908, 0.14", "77.7895, 110.12, -68.9223, 0.1", "78.0249, 110.4, -68.9347, 0.1", "78.4243, 110.816, -68.9824, 0.1", "79.1286, 111.495, -69.1287, 0.1", "79.3183, 111.66, -69.178, 0.14", "79.5939, 111.88, -69.276, 0.28", "80.4203, 112.486, -69.6257, 0.14", "81.2195, 113.065, -69.9974, 0.1", "81.9522, 113.617, -70.3583, 0.14", "82.7216, 114.233, -70.7334, 0.1", "83.4159, 114.843, -71.0779, 0.14", "84.0652, 115.473, -71.3818, 0.28", "84.4232, 115.901, -71.5347, 0.1", "84.7348, 116.368, -71.639, 0.1", "84.9249, 116.678, -71.6825, 0.1", "85.2349, 117.153, -71.7478, 0.1", "85.6184, 117.577, -71.8375, 0.1", "86.4675, 118.188, -72.1104, 0.1", "86.6864, 118.298, -72.1943, 0.14", "87.5481, 118.641, -72.537, 0.56", "88.4145, 118.95, -72.8926, 0.42", "89.3667, 119.274, -73.3044, 0.28", "90.2248, 119.58, -73.6895, 0.14", "91.128, 119.923, -74.0979, 0.28", "91.3474, 120.017, -74.1981, 0.42", "92.2554, 120.462, -74.5839, 0.28", "93.0796, 120.917, -74.8935, 0.14", "93.9741, 121.45, -75.1885, 0.1", "94.7681, 121.941, -75.3885, 0.1", "94.9871, 122.074, -75.4242, 0.42", "95.4254, 122.323, -75.4662, 0.28", "95.8838, 122.563, -75.4579, 0.14", "96.8116, 123.052, -75.3577, 0.1", "97.2569, 123.312, -75.3137, 0.1", "97.6755, 123.611, -75.2982, 0.1", "98.436, 124.314, -75.4927, 0.14", "98.5695, 124.5, -75.5927, 0.28", "98.7561, 124.935, -75.9148, 0.1", "98.9705, 125.738, -76.6078, 0.1", "99.05, 126.169, -76.9959, 0.1", "99.1713, 126.875, -77.6737, 0.1", "99.2269, 127.251, -78.0246, 0.1", "99.3696, 128.03, -78.7131, 0.1", "99.565, 128.821, -79.3823, 0.1", "99.6842, 129.209, -79.6989, 0.1", "99.9413, 129.888, -80.2627, 0.14", "100.136, 130.29, -80.6301, 0.14", "100.272, 130.525, -80.8702, 0.1", "100.706, 131.192, -81.6094, 0.1", "101.118, 131.732, -82.279, 0.1", "101.583, 132.31, -83.0285, 0.1", "102.402, 133.306, -84.3631, 0.1", "102.877, 133.842, -85.1353, 0.1", "103.316, 134.311, -85.8413, 0.1", "104.211, 135.205, -87.1992, 0.1" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "15.5064, -91.0273, 6.2657, 0.84", "15.5079, -91.9944, 6.74827, 0.84", "15.5043, -92.5043, 6.96976, 0.98", "15.5083, -93.0306, 7.16898, 1.12", "15.5113, -93.5688, 7.34237, 0.98", "15.5303, -94.7128, 7.66066, 0.84", "15.5391, -95.2603, 7.79028, 0.7", "15.5637, -95.8753, 7.88284, 0.7", "15.5863, -96.4368, 7.91142, 0.84", "15.6219, -97.0574, 7.8809, 0.84", "15.6724, -97.612, 7.79968, 0.84", "15.7472, -98.2223, 7.65247, 0.84", "15.8075, -98.7629, 7.50821, 0.7", "15.9565, -99.8696, 7.12384, 0.56", "16.0164, -100.399, 6.94108, 0.7", "16.0646, -100.935, 6.76607, 0.84", "16.0908, -101.534, 6.5916, 0.7", "16.0962, -101.922, 6.49831, 0.84", "16.0813, -103.057, 6.30222, 0.98", "16.0087, -104.132, 6.21967, 0.98", "15.9361, -104.748, 6.1759, 0.84", "15.8612, -105.371, 6.08538, 0.98", "15.8295, -105.651, 6.05506, 0.84", "15.8045, -105.932, 6.03788, 0.84", "15.7665, -106.556, 6.032, 0.98", "15.7902, -107.188, 5.98257, 1.12", "15.8945, -108.225, 5.94129, 1.26", "16.015, -109.261, 5.92297, 1.12", "16.0704, -109.811, 5.91824, 0.98", "16.1287, -110.374, 5.91977, 1.12", "16.1952, -110.932, 5.93042, 0.98", "16.2561, -111.494, 5.94613, 1.12", "16.2941, -111.897, 5.9593, 1.12", "16.3349, -112.518, 5.93003, 0.98", "16.3426, -113.079, 5.89615, 1.12", "16.329, -113.695, 5.80727, 0.98", "16.2996, -114.244, 5.68792, 0.84", "16.261, -114.788, 5.53821, 0.98", "16.221, -115.381, 5.34436, 0.7", "16.1794, -115.97, 5.11213, 0.84", "16.0665, -116.938, 4.6457, 0.98", "15.9817, -117.478, 4.3443, 0.84", "15.9817, -117.478, 4.3443, 0.98", "15.8293, -117.985, 4.01301, 0.84", "15.7705, -118.217, 3.86249, 0.84", "15.5792, -118.746, 3.5893, 0.98", "15.3047, -119.308, 3.48426, 0.84", "15.1328, -119.653, 3.41889, 0.7", "15.0297, -119.903, 3.37699, 0.7", "14.858, -120.506, 3.29523, 0.84", "14.7936, -120.894, 3.25421, 0.7", "14.757, -121.516, 3.31704, 0.7", "14.7359, -122.128, 3.4361, 0.84", "14.7267, -122.743, 3.5803, 0.7", "14.7303, -123.29, 3.71258, 0.7", "14.7433, -123.838, 3.84149, 0.56", "14.8243, -124.952, 4.10599, 0.7", "14.8243, -124.952, 4.10599, 0.84", "14.8674, -125.211, 4.21032, 0.84", "14.9637, -125.735, 4.39225, 0.98", "15.0624, -126.277, 4.50508, 0.84", "15.1763, -126.817, 4.38177, 0.84", "15.4025, -127.538, 3.51309, 0.98", "15.4959, -127.821, 3.03236, 0.98", "15.6414, -128.302, 2.07951, 0.84", "15.7664, -128.741, 1.14145, 0.7", "16.0007, -129.582, -0.68914, 0.56", "16.1212, -130.011, -1.63134, 0.56", "16.1689, -130.174, -1.98376, 0.84", "16.2527, -130.48, -2.53047, 0.84", "16.3493, -130.87, -2.92491, 0.84", "16.4513, -131.376, -3.13084, 0.98", "16.4993, -131.651, -3.15888, 1.12", "16.5487, -131.929, -3.16416, 0.98", "16.6635, -132.483, -3.17053, 0.98", "16.774, -133.034, -3.17786, 0.98", "16.8839, -133.649, -3.18932, 0.84", "16.9653, -134.208, -3.20447, 0.84", "17.037, -134.766, -3.22197, 0.84", "17.0643, -135.047, -3.23303, 0.98", "17.0919, -135.446, -3.25149, 0.84", "17.1103, -135.998, -3.28205, 0.84", "17.1207, -136.622, -3.37878, 0.98", "17.1357, -137.151, -3.57029, 1.12", "17.1373, -137.512, -3.72117, 0.98", "17.1373, -137.512, -3.72117, 1.12", "17.143, -137.879, -3.87957, 0.84", "17.1627, -138.977, -4.33252, 0.84", "17.2129, -140.054, -4.7247, 0.84", "17.243, -141.112, -4.94651, 0.56", "17.2633, -141.673, -4.98466, 0.56", "17.2902, -142.294, -4.95659, 0.56", "17.3228, -142.849, -4.87177, 0.56", "17.339, -143.386, -4.70345, 0.7", "17.3642, -144.496, -4.28548, 0.84", "17.3838, -145.028, -4.10354, 0.98", "17.3976, -145.552, -3.91593, 1.12", "17.4131, -146.08, -3.72299, 1.12", "17.465, -147.219, -3.3949, 1.12", "17.5305, -147.774, -3.32979, 0.98", "17.67, -148.376, -3.40221, 0.84", "17.7493, -148.636, -3.47152, 0.7", "17.8528, -148.872, -3.58771, 0.56", "18.3252, -149.785, -4.10882, 0.7", "18.851, -150.686, -4.66694, 0.84", "19.1104, -151.132, -4.89183, 0.98", "19.3748, -151.605, -5.05362, 0.84", "19.8494, -152.674, -5.22534, 0.84", "20.1803, -153.661, -5.29334, 0.98", "20.3121, -154.198, -5.30741, 0.98", "20.4881, -155.336, -5.26604, 0.98", "20.552, -155.896, -5.26058, 0.98", "20.6188, -156.683, -5.27389, 0.98", "20.7079, -157.76, -5.31173, 0.84", "20.8799, -158.776, -5.46825, 0.98", "21.1508, -159.769, -5.63959, 0.84", "21.3503, -160.287, -5.73306, 0.84", "21.5994, -160.783, -5.76256, 0.84", "21.8059, -161.13, -5.73953, 1.12", "22.1354, -161.654, -5.64895, 0.98", "22.491, -162.166, -5.59794, 0.84", "22.837, -162.608, -5.66646, 0.98", "23.0775, -162.91, -5.72668, 1.12", "23.4123, -163.361, -5.79252, 0.98", "23.7541, -163.883, -5.84096, 0.84", "24.3627, -164.897, -5.8743, 0.84", "24.9142, -165.908, -5.84479, 0.98", "25.3777, -166.839, -5.76137, 0.84", "25.8347, -167.885, -5.61613, 0.84", "26.0349, -168.394, -5.51671, 0.84", "26.2197, -168.975, -5.37439, 0.98", "26.3468, -169.502, -5.22323, 1.12", "26.4503, -170.043, -5.09679, 0.98", "26.5582, -170.595, -5.09923, 0.98", "26.6074, -170.87, -5.14595, 0.98", "26.6527, -171.255, -5.24426, 0.98", "26.6897, -171.847, -5.43832, 1.12", "26.7202, -172.439, -5.6575, 1.26", "26.7824, -173.412, -6.02552, 1.12", "26.7824, -173.412, -6.02552, 0.98", "26.8188, -173.773, -6.17286, 0.56", "26.904, -174.267, -6.43362, 0.7", "26.9819, -174.743, -6.72409, 0.84", "27.0323, -175.19, -7.06721, 0.84", "27.0429, -175.637, -7.50267, 0.98", "27.0239, -176.401, -8.40996, 0.84", "26.9922, -177.086, -9.33499, 0.98", "26.9603, -177.385, -9.81066, 1.12", "26.8632, -177.921, -10.8246, 1.26", "26.7312, -178.394, -11.9048, 1.12", "26.7312, -178.394, -11.9048, 0.98" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "15.5064, -91.0273, 6.2657, 0.98", "15.9467, -91.9924, 5.68661, 0.98", "16.2022, -92.4832, 5.33581, 1.12", "16.4793, -92.9643, 4.99416, 1.26", "16.8123, -93.4995, 4.63685, 1.12", "17.4694, -94.4808, 4.01409, 0.98", "18.1832, -95.4883, 3.41959, 1.12", "18.4363, -95.8155, 3.21089, 0.98", "18.8667, -96.314, 2.90877, 0.84", "19.3309, -96.8082, 2.65321, 0.7", "19.6453, -97.1279, 2.53683, 0.56", "20.1653, -97.625, 2.4501, 0.42", "20.7016, -98.1352, 2.41466, 0.28", "21.0271, -98.4496, 2.39311, 0.42", "21.5522, -98.9591, 2.35832, 0.28", "22.0809, -99.4534, 2.32346, 0.14", "22.4215, -99.7666, 2.30105, 0.1", "22.9636, -100.246, 2.26555, 0.1", "23.5078, -100.724, 2.22996, 0.1", "24.0585, -101.205, 2.19394, 0.14", "24.6081, -101.674, 2.15811, 0.1", "25.1699, -102.143, 2.12157, 0.14", "25.5181, -102.431, 2.09894, 0.28", "25.7758, -102.633, 2.0823, 0.42" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.29514, -73.1809, -31.5549, 0.1", "-1.21779, -73.8901, -31.5671, 0.1", "-1.1793, -74.5194, -31.4911, 0.1", "-1.14146, -75.2088, -31.3622, 0.1", "-1.12934, -75.8141, -31.1706, 0.1", "-1.1173, -76.4835, -30.9239, 0.1", "-1.11016, -77.0777, -30.6999, 0.1", "-1.10256, -78.1969, -30.2242, 0.1", "-1.10646, -78.7729, -29.9569, 0.1", "-1.12373, -79.9403, -29.3012, 0.1", "-1.13135, -80.471, -28.9727, 0.1", "-1.12012, -81.0734, -28.5904, 0.1", "-1.10335, -81.3462, -28.4317, 0.1", "-1.10335, -81.3462, -28.4317, 0.1", "-0.868746, -82.4147, -27.9969, 0.1", "-0.684305, -82.9985, -27.8167, 0.1", "-0.479175, -83.5662, -27.6582, 0.1", "-0.234694, -84.1463, -27.574, 0.1", "0.025609, -84.7288, -27.5604, 0.1", "0.321742, -85.3676, -27.6098, 0.1", "0.594161, -85.9361, -27.7093, 0.1", "0.852495, -86.5051, -27.8222, 0.1", "1.35461, -87.6797, -28.0664, 0.1", "1.57462, -88.2631, -28.1871, 0.1", "1.76656, -88.8463, -28.2992, 0.1", "1.93841, -89.4528, -28.3989, 0.1", "2.11361, -90.1336, -28.5322, 0.1", "2.25842, -90.7433, -28.6531, 0.1", "2.40991, -91.4212, -28.7704, 0.14", "2.53985, -92.0332, -28.8967, 0.28", "2.66901, -92.6398, -29.0331, 0.42", "2.95356, -93.909, -29.3253, 0.28", "3.10682, -94.4999, -29.5003, 0.14", "3.25913, -95.0855, -29.7033, 0.1", "3.43586, -95.7356, -29.9446, 0.1", "3.58889, -96.3067, -30.1544, 0.1", "3.74786, -96.8908, -30.3462, 0.1", "4.06031, -97.992, -30.6213, 0.1", "4.18489, -98.4136, -30.723, 0.1", "4.37058, -99.0075, -30.8499, 0.1", "4.57947, -99.5878, -30.9458, 0.1", "4.80515, -100.182, -31.0079, 0.1", "5.03906, -100.772, -31.0282, 0.1", "5.28023, -101.362, -31.0051, 0.1", "5.53288, -101.944, -30.9794, 0.1", "5.81517, -102.591, -30.9506, 0.1", "6.06936, -103.176, -30.9247, 0.14", "6.29953, -103.764, -30.8587, 0.28", "6.49334, -104.353, -30.7635, 0.14", "6.6591, -104.954, -30.645, 0.1", "6.79842, -105.562, -30.5097, 0.1", "6.90935, -106.17, -30.3618, 0.1", "7.1123, -107.443, -30.0244, 0.1", "7.22454, -108.124, -29.8337, 0.14", "7.34905, -108.726, -29.6618, 0.28", "7.42842, -109.021, -29.5827, 0.42", "7.42842, -109.021, -29.5827, 0.56", "7.55574, -109.311, -29.5397, 0.56", "7.88262, -109.935, -29.5016, 0.56", "8.23216, -110.557, -29.5256, 0.7", "8.53795, -111.11, -29.5875, 0.56", "8.83503, -111.668, -29.6735, 0.42", "9.11305, -112.218, -29.7713, 0.28", "9.38317, -112.781, -29.887, 0.14", "9.87886, -113.952, -30.1626, 0.1", "10.0991, -114.53, -30.3063, 0.1", "10.3111, -115.115, -30.4466, 0.1", "10.5125, -115.705, -30.5694, 0.14", "10.5125, -115.705, -30.5694, 0.28", "10.6407, -116.126, -30.6008, 0.56", "10.8176, -116.736, -30.5905, 0.56", "11.0008, -117.347, -30.579, 0.42", "11.19, -117.953, -30.5662, 0.28", "11.3855, -118.549, -30.5519, 0.14", "11.6033, -119.145, -30.5333, 0.28", "11.8232, -119.741, -30.472, 0.28", "12.0195, -120.327, -30.3255, 0.14", "12.1798, -120.903, -30.1103, 0.1", "12.2956, -121.45, -29.803, 0.1", "12.3568, -121.819, -29.5513, 0.1", "12.4718, -122.797, -28.8336, 0.84", "12.5737, -123.855, -28.0852, 0.7", "12.6234, -124.463, -27.7108, 0.56", "12.704, -125.624, -27.1306, 0.42", "12.7912, -125.913, -27.6769, 0.28", "12.8878, -126.198, -28.3242, 0.14", "13.0469, -126.619, -29.4109, 0.1", "13.358, -127.353, -31.5797, 0.1", "13.698, -128.016, -33.7653, 0.1", "13.8887, -128.348, -34.9233, 0.1", "14.0806, -128.658, -35.9962, 0.14", "14.0806, -128.658, -35.9962, 0.28", "14.1544, -128.79, -36.2768, 0.84", "14.3777, -129.313, -36.6952, 0.7", "14.5628, -129.909, -36.8124, 0.56", "14.721, -130.527, -36.8447, 0.42", "14.8407, -131.139, -36.8452, 0.28", "14.94, -131.846, -36.8532, 0.14", "14.994, -132.548, -36.8696, 0.1", "15.0187, -133.257, -36.9408, 0.1", "15.0165, -133.572, -36.9718, 0.1", "14.9856, -134.271, -37.0372, 0.1", "14.9401, -134.983, -37.0422, 0.1", "14.8909, -135.694, -36.9874, 0.1", "14.824, -136.854, -36.8157, 0.14", "14.7839, -138.049, -36.5746, 0.56", "14.7828, -138.746, -36.4104, 0.42", "14.8429, -140.001, -36.0758, 0.28", "14.923, -140.674, -35.8831, 0.14", "15.0346, -141.275, -35.7106, 0.28", "15.179, -141.875, -35.549, 0.42", "15.3729, -142.472, -35.453, 0.28", "15.5936, -143.055, -35.3863, 0.28", "15.866, -143.706, -35.3595, 0.28", "16.1263, -144.288, -35.3324, 0.42", "16.3837, -144.868, -35.3057, 0.28", "16.6357, -145.45, -35.2802, 0.42", "16.6357, -145.45, -35.2802, 0.56", "16.7535, -145.744, -35.2394, 0.56", "16.9765, -146.329, -35.1136, 0.42", "17.1985, -146.903, -34.9584, 0.28", "17.4169, -147.463, -34.791, 0.14", "17.6402, -148.035, -34.6168, 0.1", "18.1295, -149.225, -34.2608, 0.1", "18.3717, -149.792, -34.0962, 0.1", "18.6195, -150.356, -33.9423, 0.1", "18.8842, -150.92, -33.8042, 0.1", "19.1688, -151.483, -33.7293, 0.1", "19.4828, -152.113, -33.6809, 0.1", "19.7603, -152.688, -33.6817, 0.1", "20.0133, -153.259, -33.6787, 0.14", "20.2812, -153.929, -33.6701, 0.28", "20.673, -155.035, -33.6468, 0.42", "21.0335, -156.2, -33.6126, 0.84", "21.1988, -156.816, -33.5896, 0.7", "21.3737, -157.497, -33.5559, 0.56", "21.5157, -158.115, -33.5211, 0.42", "21.6488, -158.738, -33.4815, 0.28", "21.7899, -159.355, -33.4353, 0.14", "21.9543, -159.972, -33.4275, 0.1", "22.1318, -160.581, -33.4618, 0.14", "22.3451, -161.246, -33.5365, 0.1", "22.5368, -161.846, -33.6184, 0.1", "22.7288, -162.446, -33.7191, 0.1", "22.9215, -163.038, -33.8429, 0.1", "23.3251, -164.226, -34.1581, 0.14", "23.4321, -164.51, -34.2562, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.29514, -73.1809, -31.5549, 0.1", "-1.229, -73.2506, -31.7381, 0.1", "-1.10016, -73.3546, -32.115, 0.1", "-0.848644, -73.5184, -32.9028, 0.1", "-0.72671, -73.5865, -33.2901, 0.1", "-0.296071, -73.8157, -34.7065, 0.1", "-0.0762582, -73.9286, -35.455, 0.1", "0.132926, -74.0301, -36.1814, 0.1", "0.557159, -74.2355, -37.6477, 0.1", "0.78189, -74.3539, -38.394, 0.14", "1.00565, -74.4892, -39.1109, 0.1", "1.49377, -74.8746, -40.5184, 0.14", "1.63383, -75.0135, -40.8821, 0.1", "1.78854, -75.1983, -41.2159, 0.1", "1.96972, -75.4404, -41.4877, 0.1", "2.07823, -75.5823, -41.5882, 0.1", "2.33699, -75.8847, -41.7011, 0.1", "2.63193, -76.1705, -41.7298, 0.1", "3.32029, -76.6978, -41.7704, 0.14", "3.99001, -77.105, -41.8547, 0.1", "4.38115, -77.2975, -42.0133, 0.1", "4.61249, -77.3937, -42.1514, 0.1", "5.04429, -77.5523, -42.513, 0.1", "5.24482, -77.6215, -42.7104, 0.1", "5.74448, -77.8032, -43.2956, 0.1", "6.65464, -78.1524, -44.4862, 0.1", "6.81977, -78.2188, -44.7183, 0.1", "7.30947, -78.4011, -45.4082, 0.1", "7.47366, -78.4568, -45.6438, 0.1", "7.98754, -78.6012, -46.3251, 0.1", "8.17881, -78.6405, -46.5477, 0.1", "8.83353, -78.729, -47.2094, 0.1", "9.13067, -78.7532, -47.4934, 0.1", "9.73787, -78.7685, -47.9996, 0.1", "10.0684, -78.7681, -48.2484, 0.1", "10.8064, -78.7492, -48.6991, 0.14", "11.0676, -78.7427, -48.8306, 0.28", "11.4872, -78.7393, -49.0109, 0.14", "11.9167, -78.7539, -49.182, 0.1", "12.1892, -78.7673, -49.2682, 0.1", "12.6326, -78.8024, -49.3999, 0.1", "13.082, -78.8418, -49.5021, 0.1", "13.8395, -78.9031, -49.7114, 0.1", "14.1168, -78.9287, -49.8122, 0.14" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-43.8984, 112.798, 2.21758, 0.1", "-44.164, 113.544, 3.07741, 0.1", "-44.4467, 114.338, 3.88978, 0.1", "-44.5871, 114.746, 4.24927, 0.1", "-44.9076, 115.648, 4.9198, 0.1", "-45.092, 116.17, 5.24517, 0.1", "-45.092, 116.17, 5.24517, 0.1", "-45.2864, 116.719, 5.49886, 0.1", "-45.4649, 117.231, 5.68642, 0.1", "-45.6528, 117.807, 5.87886, 0.1", "-45.7982, 118.342, 6.02618, 0.1", "-46.0282, 119.462, 6.27014, 0.1", "-46.0657, 119.73, 6.33247, 0.14", "-46.1053, 120.284, 6.46607, 0.1", "-46.1235, 120.91, 6.60823, 0.1", "-46.1068, 121.531, 6.73237, 0.1", "-46.0323, 122.613, 6.90103, 0.14", "-45.928, 123.772, 7.01502, 0.28", "-45.8719, 124.34, 7.07939, 0.14", "-45.8426, 124.89, 7.18589, 0.1", "-45.8493, 125.512, 7.34717, 0.1", "-45.8908, 126.126, 7.53745, 0.1", "-45.9588, 126.642, 7.75582, 0.14", "-46.0226, 126.997, 7.94072, 0.1", "-46.2594, 127.991, 8.5727, 0.1", "-46.3914, 128.444, 8.89568, 0.1", "-46.5428, 128.888, 9.22697, 0.1", "-46.8541, 129.794, 9.8967, 0.1", "-47.1374, 130.709, 10.561, 0.1", "-47.2735, 131.158, 10.8871, 0.1", "-47.3373, 131.391, 11.042, 0.1", "-47.4699, 131.86, 11.3407, 0.1", "-47.647, 132.403, 11.6327, 0.1", "-47.7415, 132.655, 11.7262, 0.1", "-48.2311, 133.713, 12.0153, 0.28", "-48.5613, 134.258, 12.1417, 0.14", "-48.8934, 134.695, 12.2609, 0.28", "-49.4146, 135.288, 12.4332, 0.14", "-49.6906, 135.567, 12.5386, 0.1", "-49.9654, 135.843, 12.6518, 0.1", "-50.494, 136.409, 12.8841, 0.1", "-51.2535, 137.243, 13.2965, 0.1", "-51.4321, 137.438, 13.4083, 0.1", "-52.1311, 138.253, 13.9468, 0.1", "-52.4451, 138.644, 14.2276, 0.1", "-52.7273, 139.028, 14.525, 0.14", "-52.7273, 139.028, 14.525, 0.28" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-43.8984, 112.798, 2.21758, 0.1", "-44.734, 112.721, 2.35854, 0.1", "-45.1793, 112.668, 2.44573, 0.1", "-45.5705, 112.602, 2.53792, 0.1", "-46.3631, 112.453, 2.71505, 0.1", "-47.1625, 112.296, 2.87003, 0.1", "-47.5566, 112.218, 2.93618, 0.1", "-48.3589, 112.034, 3.0373, 0.14", "-49.1856, 111.832, 3.115, 0.28", "-49.5781, 111.731, 3.12701, 0.14", "-49.9731, 111.634, 3.10409, 0.1", "-50.1688, 111.593, 3.0773, 0.1", "-50.5623, 111.533, 3.03308, 0.14", "-50.9617, 111.496, 2.97449, 0.28", "-51.2497, 111.483, 2.93147, 0.42", "-52.0951, 111.469, 2.82913, 0.1", "-52.5473, 111.471, 2.77482, 0.1", "-53.3958, 111.489, 2.70378, 0.14", "-53.8018, 111.503, 2.67381, 0.1", "-54.2048, 111.526, 2.63661, 0.1", "-54.6475, 111.558, 2.57351, 0.1", "-55.0422, 111.585, 2.48523, 0.1", "-55.8706, 111.633, 2.28032, 0.1", "-56.2565, 111.67, 2.1618, 0.14", "-56.6821, 111.734, 2.03636, 0.1", "-57.0603, 111.825, 1.9217, 0.14", "-57.2439, 111.887, 1.86, 0.1", "-57.4163, 111.971, 1.79034, 0.1", "-57.8661, 112.231, 1.55667, 0.1", "-58.1081, 112.364, 1.46274, 0.1", "-58.5959, 112.617, 1.31365, 0.1", "-58.8472, 112.742, 1.24742, 0.1", "-59.2462, 112.925, 1.15054, 0.1", "-59.6137, 113.077, 1.06203, 0.1", "-60.3982, 113.363, 0.876366, 0.1", "-60.659, 113.446, 0.809937, 0.1", "-61.0832, 113.563, 0.692031, 0.14", "-61.0832, 113.563, 0.692031, 0.28", "-61.4934, 113.651, 0.530454, 0.28", "-61.8965, 113.725, 0.331881, 0.14", "-62.2388, 113.769, 0.119121, 0.1", "-62.4103, 113.778, 0.00972115, 0.14", "-62.7502, 113.778, -0.211266, 0.1", "-63.0985, 113.751, -0.407038, 0.1", "-63.4583, 113.699, -0.586063, 0.1", "-63.8244, 113.63, -0.751215, 0.1", "-64.1919, 113.557, -0.905822, 0.14", "-64.5678, 113.471, -1.03052, 0.28", "-65.3692, 113.269, -1.24827, 0.42", "-65.7491, 113.161, -1.34003, 0.28", "-66.1209, 113.041, -1.42789, 0.14", "-66.491, 112.905, -1.5222, 0.1", "-67.2564, 112.597, -1.73579, 0.1", "-67.6211, 112.444, -1.83247, 0.1", "-68.0188, 112.268, -1.95045, 0.1", "-68.4197, 112.083, -2.06194, 0.1", "-68.8164, 111.888, -2.17412, 0.14", "-68.8164, 111.888, -2.17412, 0.28", "-69.4987, 111.518, -2.45563, 0.1", "-69.873, 111.3, -2.61291, 0.1", "-70.1908, 111.107, -2.75618, 0.14", "-70.416, 110.962, -2.87114, 0.28", "-70.7534, 110.739, -3.06967, 0.14", "-71.0799, 110.514, -3.29349, 0.1", "-71.2695, 110.375, -3.44824, 0.14", "-71.5802, 110.156, -3.69954, 0.1", "-71.8937, 109.951, -3.94967, 0.1", "-72.1859, 109.786, -4.17693, 0.1", "-72.5248, 109.623, -4.43398, 0.1", "-72.8698, 109.486, -4.68923, 0.1", "-73.1899, 109.39, -4.91887, 0.1", "-73.5185, 109.318, -5.14871, 0.1", "-73.8503, 109.268, -5.37591, 0.1", "-74.1881, 109.24, -5.60183, 0.1", "-74.5218, 109.236, -5.81953, 0.1", "-74.9048, 109.25, -6.06548, 0.1", "-75.0749, 109.263, -6.17319, 0.1", "-75.4189, 109.306, -6.38696, 0.1", "-75.7986, 109.367, -6.62011, 0.1", "-76.1422, 109.435, -6.82827, 0.14", "-76.1422, 109.435, -6.82827, 0.28", "-76.5259, 109.534, -7.05542, 0.1", "-76.9017, 109.639, -7.27594, 0.1", "-77.2405, 109.743, -7.4727, 0.1", "-77.6204, 109.865, -7.69209, 0.1", "-77.9942, 109.995, -7.90582, 0.1", "-78.3734, 110.122, -8.12362, 0.1", "-78.5431, 110.179, -8.2213, 0.1", "-78.917, 110.307, -8.43536, 0.1", "-79.2944, 110.446, -8.64947, 0.1", "-79.6679, 110.577, -8.86273, 0.1", "-80.0067, 110.693, -9.0567, 0.1", "-80.3862, 110.826, -9.2736, 0.1", "-80.6201, 110.908, -9.40696, 0.1", "-80.9998, 111.04, -9.62409, 0.1", "-81.3385, 111.157, -9.81804, 0.14", "-81.7121, 111.287, -10.0314, 0.28", "-81.8787, 111.352, -10.1252, 0.14" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-8.88455, 79.5474, -1.2479, 0.98", "-8.74475, 80.5369, -0.787147, 0.98", "-8.66646, 81.0783, -0.56998, 0.84", "-8.59881, 81.6234, -0.38068, 0.7", "-8.55641, 81.9762, -0.26987, 0.56", "-8.49851, 82.5308, -0.112546, 0.7", "-8.44773, 83.0347, 0.0209396, 0.56", "-8.39013, 83.611, 0.12539, 0.42", "-8.35534, 84.1267, 0.209975, 0.28", "-8.36518, 84.695, 0.322098, 0.14", "-8.41459, 85.2039, 0.43579, 0.1", "-8.50816, 85.768, 0.57491, 0.14", "-8.62381, 86.2542, 0.698371, 0.28", "-8.69932, 86.4991, 0.758447, 0.14", "-9.05575, 87.514, 0.993849, 0.1", "-9.24163, 87.9964, 1.09271, 0.1", "-9.4201, 88.4805, 1.1828, 0.1", "-9.59806, 89.0275, 1.27277, 0.1", "-9.70664, 89.5404, 1.3191, 0.1", "-9.75276, 90.062, 1.33273, 0.1", "-9.74674, 90.5883, 1.33859, 0.1", "-9.74014, 91.165, 1.40971, 0.1", "-9.74071, 91.7375, 1.54606, 0.14", "-9.76301, 92.6871, 1.86806, 0.28", "-9.7822, 92.9304, 1.96659, 0.42", "-9.94213, 93.9034, 2.38558, 0.1", "-10.1815, 94.8653, 2.79545, 0.14", "-10.3335, 95.3316, 2.97946, 0.1", "-10.5052, 95.7876, 3.14547, 0.1", "-10.6915, 96.256, 3.29713, 0.1", "-10.8833, 96.7946, 3.4067, 0.1", "-11.025, 97.3004, 3.44155, 0.1", "-11.1458, 97.81, 3.44275, 0.1", "-11.2003, 98.0675, 3.44683, 0.14", "-11.3226, 98.5748, 3.49202, 0.7", "-11.4542, 99.0783, 3.57092, 0.7", "-11.5864, 99.565, 3.67417, 0.84", "-11.7304, 100.057, 3.79315, 0.98", "-11.837, 100.407, 3.88243, 0.98", "-12.1332, 101.436, 4.1524, 0.84", "-12.2661, 101.926, 4.28004, 0.84", "-12.3907, 102.423, 4.40093, 0.7", "-12.5113, 102.913, 4.54383, 0.56", "-12.6154, 103.393, 4.69683, 0.56", "-12.7093, 103.945, 4.87721, 0.56", "-12.7494, 104.441, 5.04007, 0.42", "-12.7753, 104.933, 5.22649, 0.42", "-12.8814, 105.885, 5.76911, 0.56", "-12.9626, 106.354, 6.11447, 0.56", "-13.0214, 106.626, 6.34864, 0.7", "-13.122, 107.053, 6.74407, 0.7", "-13.122, 107.053, 6.74407, 0.84", "-13.2829, 108.522, 8.00354, 1.12", "-13.281, 108.735, 8.15373, 1.12", "-13.2522, 109.232, 8.44966, 0.98", "-13.2042, 109.774, 8.67973, 0.84", "-13.1586, 110.125, 8.76229, 0.84", "-13.0003, 111.308, 8.83486, 0.84", "-12.9658, 111.565, 8.80837, 0.7", "-12.9336, 112.141, 8.73602, 0.56", "-12.9656, 112.73, 8.65164, 0.42", "-13.0481, 113.233, 8.58405, 0.28", "-13.1773, 113.799, 8.53492, 0.14", "-13.3202, 114.305, 8.52396, 0.28", "-13.3202, 114.305, 8.52396, 0.42", "-13.3996, 114.823, 8.54811, 0.1", "-13.4528, 115.345, 8.58681, 0.1", "-13.4975, 115.931, 8.63823, 0.1", "-13.5167, 116.445, 8.69395, 0.1", "-13.5205, 117.031, 8.76702, 0.14", "-13.5243, 117.546, 8.87473, 0.28", "-13.5226, 117.796, 8.94932, 0.42", "-13.5086, 118.279, 9.13409, 0.56", "-13.4813, 118.817, 9.37558, 0.56", "-13.4594, 119.051, 9.49269, 0.42", "-13.3117, 120.046, 9.9376, 0.56", "-13.1811, 120.592, 10.1211, 0.42", "-13.0962, 120.924, 10.2431, 0.28", "-12.9442, 121.456, 10.4441, 0.42", "-12.794, 121.998, 10.6226, 0.56", "-12.5688, 122.918, 10.8225, 0.7", "-12.3495, 123.827, 10.8368, 0.7", "-12.1753, 125.697, 11.0124, 0.56", "-12.2097, 125.935, 11.1201, 0.7", "-12.303, 126.361, 11.3977, 0.7", "-12.4083, 126.749, 11.7339, 0.7", "-12.5021, 127.127, 12.0881, 0.56", "-12.6031, 127.567, 12.4679, 0.42", "-12.7476, 128.473, 13.0739, 0.28", "-12.8061, 128.784, 13.2706, 0.14", "-13.0049, 129.708, 13.8344, 0.1", "-13.0878, 130.027, 14.0066, 0.14", "-13.2524, 130.543, 14.22, 0.56", "-13.4295, 131.024, 14.339, 0.42", "-13.6517, 131.556, 14.4219, 0.28", "-13.8735, 132.029, 14.4842, 0.14", "-14.1185, 132.555, 14.5373, 0.1", "-14.3489, 133.082, 14.6228, 0.1", "-14.5212, 133.565, 14.7431, 0.1", "-14.7567, 134.553, 15.0849, 0.14", "-14.7567, 134.553, 15.0849, 0.28", "-14.7002, 135.064, 15.3514, 0.84", "-14.5564, 135.553, 15.6447, 0.7", "-14.4265, 135.847, 15.8258, 0.56", "-14.1821, 136.316, 16.0834, 0.42", "-13.9298, 136.8, 16.2793, 0.56", "-13.8348, 137.032, 16.3595, 0.56", "-13.7608, 137.274, 16.4299, 0.7", "-13.6584, 137.777, 16.5487, 0.84", "-13.5981, 138.288, 16.6462, 0.7", "-13.5911, 138.807, 16.7164, 0.56", "-13.6158, 139.382, 16.7771, 0.7", "-13.6158, 139.382, 16.7771, 0.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-8.88455, 79.5474, -1.2479, 0.84", "-8.818, 79.8924, -1.64687, 0.84", "-8.69174, 80.5469, -2.40379, 0.7", "-8.56926, 81.1818, -3.13803, 0.56", "-8.45425, 81.7779, -3.82747, 0.42", "-8.3877, 82.1229, -4.22644, 0.56", "-8.32782, 82.4333, -4.58541, 0.42" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "18.9436, 180.123, -23.3329, 0.14", "18.9928, 180.973, -23.0097, 0.14", "19.0047, 181.373, -22.8412, 0.28", "19.0201, 181.821, -22.6518, 0.42", "19.0298, 182.021, -22.57, 0.42", "19.0661, 182.869, -22.2391, 0.28", "19.0878, 183.326, -22.0685, 0.14", "19.0998, 183.72, -21.9, 0.1", "19.1211, 184.174, -21.72, 0.1", "19.14, 184.634, -21.5614, 0.1", "19.1468, 185.036, -21.4194, 0.1", "19.1385, 185.499, -21.267, 0.1", "19.1288, 185.703, -21.1902, 0.1", "19.1056, 186.147, -21.0067, 0.1", "19.0844, 186.544, -20.8323, 0.1", "19.0575, 187.353, -20.4659, 0.1", "19.0671, 187.759, -20.3137, 0.1", "19.1009, 188.218, -20.1794, 0.1", "19.1653, 188.691, -20.075, 0.1", "19.2241, 188.991, -20.0312, 0.1", "19.344, 189.454, -19.9937, 0.14", "19.6093, 190.33, -19.9754, 0.14", "19.7486, 190.786, -19.9302, 0.1", "19.8309, 191.079, -19.881, 0.1", "19.9446, 191.533, -19.7691, 0.1", "20.0345, 191.977, -19.5871, 0.1", "20.0953, 192.399, -19.3481, 0.1", "20.1659, 193.144, -18.8303, 0.1", "20.1748, 193.32, -18.7053, 0.1", "20.1757, 193.721, -18.4279, 0.1", "20.1582, 194.483, -17.9278, 0.1", "20.1405, 194.858, -17.707, 0.1", "20.1111, 195.29, -17.4964, 0.1", "20.0879, 195.698, -17.3449, 0.1", "20.0667, 196.109, -17.207, 0.1", "20.0327, 196.568, -17.0493, 0.1", "20.0051, 196.98, -16.916, 0.1", "19.9857, 197.378, -16.7568, 0.1", "19.9706, 197.661, -16.6274, 0.1", "19.9665, 197.855, -16.5319, 0.1", "19.9753, 198.648, -16.1345, 0.1", "19.9927, 199.08, -15.9263, 0.1", "20.0218, 199.524, -15.7247, 0.1", "20.056, 199.927, -15.5609, 0.1", "20.0903, 200.38, -15.4035, 0.1", "20.1382, 200.854, -15.3007, 0.1", "20.2116, 201.33, -15.2937, 0.1", "20.2458, 201.544, -15.3136, 0.1", "20.3266, 202.02, -15.3914, 0.1", "20.4007, 202.44, -15.4811, 0.1", "20.5745, 203.298, -15.7363, 0.14", "20.7659, 204.145, -16.0221, 0.28", "20.8671, 204.543, -16.1609, 0.14", "20.9908, 204.984, -16.3038, 0.1", "21.0512, 205.186, -16.3597, 0.1", "21.3446, 206.114, -16.5311, 0.1", "21.4853, 206.58, -16.5575, 0.1", "21.5727, 206.875, -16.5474, 0.1", "21.7228, 207.331, -16.5198, 0.1", "21.8706, 207.793, -16.4742, 0.14", "22.0067, 208.249, -16.4007, 0.1", "22.0541, 208.456, -16.3501, 0.1", "22.1478, 208.922, -16.2389, 0.1", "22.1986, 209.212, -16.1717, 0.1", "22.2705, 209.621, -16.0766, 0.1", "22.3645, 210.095, -16.0095, 0.1", "22.4606, 210.516, -15.9761, 0.1", "22.5774, 210.981, -15.9565, 0.1", "22.6919, 211.457, -15.9498, 0.1", "22.7547, 211.751, -15.9493, 0.1", "22.9357, 212.649, -15.9577, 0.1", "22.9907, 212.952, -15.9644, 0.1", "23.0652, 213.426, -15.9757, 0.14", "23.1204, 213.856, -15.9898, 0.1", "23.1563, 214.29, -15.9999, 0.1", "23.1625, 214.724, -15.9881, 0.1", "23.1625, 214.724, -15.9881, 0.14", "23.1278, 214.936, -15.9554, 0.56" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "18.9436, 180.123, -23.3329, 0.1", "17.8492, 178.979, -23.6949, 0.1", "17.2862, 178.376, -23.9253, 0.1", "16.9584, 177.99, -24.1495, 0.1", "16.5029, 177.393, -24.5595, 0.1", "16.0842, 176.785, -24.9933, 0.1", "15.8425, 176.382, -25.2739, 0.1", "15.5393, 175.716, -25.7191, 0.1", "15.1184, 174.46, -26.3775, 0.1", "14.9171, 173.456, -26.7482, 0.1", "14.8637, 173.076, -26.8027, 0.1", "14.7745, 172.312, -26.7829, 0.1", "14.5779, 170.76, -26.5793, 0.1", "14.4598, 170.012, -26.437, 0.1", "14.2933, 169.187, -26.2361, 0.14", "13.9667, 167.65, -25.8452, 0.84", "13.7688, 166.825, -25.6622, 0.7", "13.6481, 166.311, -25.5769, 0.56", "13.4654, 165.226, -25.5228, 0.42", "13.4654, 165.226, -25.5228, 0.28", "13.5118, 164.842, -25.5224, 0.42", "13.6369, 164.475, -25.5291, 0.56", "13.9719, 163.688, -25.5115, 0.42", "14.2939, 162.984, -25.4845, 0.28", "14.6531, 162.208, -25.4529, 0.42", "14.994, 161.513, -25.476, 0.28", "15.3113, 160.826, -25.4976, 0.14", "15.6256, 160.119, -25.5161, 0.1", "15.9334, 159.413, -25.527, 0.1", "16.2419, 158.708, -25.5248, 0.1", "16.7978, 157.393, -25.5035, 0.1", "17.2913, 156.063, -25.3385, 0.28", "17.5227, 155.343, -25.1915, 0.14", "17.7055, 154.541, -24.9231, 0.1", "17.8205, 153.835, -24.6382, 0.1", "17.9058, 153.127, -24.3357, 0.1", "18.0409, 151.681, -23.726, 0.1", "18.1361, 150.963, -23.492, 0.1", "18.3997, 149.456, -23.1148, 0.1", "18.653, 148.729, -23.1327, 0.1", "19.0734, 148.167, -23.4591, 0.1", "19.5432, 147.722, -23.8771, 0.1", "20.4666, 147.026, -24.7144, 0.1", "21.4726, 146.384, -25.589, 0.1", "23.5332, 145.24, -27.2423, 0.1", "23.5332, 145.24, -27.2423, 0.14", "24.758, 144.584, -27.7499, 0.42", "25.1912, 144.274, -27.7005, 0.28", "25.7365, 143.7, -27.3498, 0.14", "26.5666, 142.576, -26.5341, 0.1", "26.9891, 141.959, -26.0979, 0.1", "27.294, 141.569, -25.8943, 0.1", "27.8761, 140.961, -25.6948, 0.1", "28.5129, 140.385, -25.5641, 0.14", "28.8066, 140.138, -25.515, 0.1", "29.8862, 139.162, -25.2758, 0.1", "30.4321, 138.553, -24.9848, 0.1", "30.8135, 137.98, -24.6312, 0.1", "31.0172, 137.57, -24.3541, 0.1", "31.4597, 136.437, -23.6063, 0.1", "31.835, 135.115, -22.8324, 0.1", "31.9678, 134.437, -22.491, 0.1", "32.0799, 133.722, -22.2284, 0.14", "32.2164, 132.975, -22.0779, 0.1", "32.3852, 132.237, -22.054, 0.1", "32.5967, 131.502, -22.1735, 0.1", "32.8057, 130.792, -22.387, 0.1", "32.9575, 130.061, -22.5896, 0.1", "33.1395, 128.685, -22.9222, 0.1", "33.1785, 128.162, -23.0257, 0.1", "33.2091, 127.306, -23.1515, 0.1", "33.2069, 126.456, -23.2385, 0.1", "33.1763, 124.835, -23.3279, 0.1", "33.158, 124.065, -23.3324, 0.1", "33.1496, 123.291, -23.2974, 0.1", "33.1862, 122.523, -23.2658, 0.1", "33.2783, 121.676, -23.2461, 0.1", "33.3834, 120.914, -23.205, 0.1", "33.4477, 120.533, -23.1846, 0.1", "33.5655, 119.776, -23.1084, 0.1", "33.6792, 119.03, -23.0076, 0.1", "33.7966, 118.279, -22.8858, 0.1", "34.0281, 116.743, -22.6181, 0.1", "34.1323, 115.986, -22.4936, 0.1", "34.221, 115.228, -22.3941, 0.1", "34.2881, 114.459, -22.333, 0.1", "34.3166, 114.077, -22.3269, 0.1", "34.3493, 113.544, -22.3624, 0.7", "34.3874, 112.78, -22.4853, 0.56", "34.4097, 111.926, -22.6329, 0.42", "34.4408, 111.101, -22.8432, 0.28", "34.4825, 110.366, -23.0719, 0.14", "34.5146, 109.549, -23.3104, 0.1", "34.5337, 108.712, -23.5381, 0.1", "34.5003, 107.952, -23.6824, 0.1", "34.3412, 106.351, -23.8546, 0.1", "34.2791, 105.969, -23.8717, 0.1", "33.9793, 104.521, -23.8593, 0.1", "33.7878, 103.676, -23.8051, 0.1", "33.3743, 102.125, -23.611, 0.1", "33.1145, 101.312, -23.4539, 0.1", "32.9391, 100.825, -23.3159, 0.1", "32.6936, 100.116, -23.142, 0.1", "32.6003, 99.7432, -23.0987, 0.14" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "26.7312, -178.394, -11.9048, 0.98", "26.6301, -178.785, -11.3955, 0.98", "26.595, -178.978, -11.1763, 1.12", "26.5042, -179.75, -10.4211, 1.82", "26.4571, -180.662, -9.64799, 1.68", "26.4782, -181.642, -8.96138, 1.54", "26.5437, -182.17, -8.71117, 1.4", "26.6996, -182.714, -8.61299, 1.26", "27.1241, -183.696, -8.7942, 1.12", "27.6413, -184.538, -9.32829, 1.12", "27.7799, -184.719, -9.50972, 1.12", "28.3517, -185.34, -10.3596, 1.12", "28.8889, -185.839, -11.2107, 1.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "26.7312, -178.394, -11.9048, 0.98", "26.2479, -178.76, -11.6371, 0.98", "26.0368, -178.924, -11.5014, 1.12", "25.1604, -179.585, -10.9645, 1.4", "24.689, -179.962, -10.6898, 1.26", "23.7963, -180.706, -10.2192, 1.12", "23.3209, -181.12, -9.99068, 0.98", "22.5207, -181.864, -9.65061, 0.84", "22.1153, -182.271, -9.51892, 0.7", "21.6892, -182.765, -9.40797, 0.56", "21.2757, -183.282, -9.30427, 0.1", "21.0293, -183.613, -9.2657, 0.1", "20.5413, -184.299, -9.20098, 0.1", "20.3033, -184.649, -9.21884, 0.1", "19.563, -185.778, -9.33868, 0.14", "19.563, -185.778, -9.33868, 0.28", "19.2661, -186.33, -9.57456, 0.28", "19.1209, -186.669, -9.76454, 0.14", "18.8279, -187.691, -10.445, 0.1", "18.778, -188.028, -10.6808, 0.1", "18.7641, -189.06, -11.3999, 0.14", "18.7841, -189.317, -11.547, 0.56", "18.9041, -189.84, -11.816, 0.42", "19.0727, -190.356, -12.0367, 0.28", "19.2728, -190.894, -12.2101, 0.14", "19.4733, -191.434, -12.3656, 0.1", "19.6557, -191.99, -12.4964, 0.14", "19.9737, -193.167, -12.7908, 0.28", "20.0984, -193.731, -12.9385, 0.42", "20.1694, -194.135, -13.0444, 0.1", "20.2549, -194.771, -13.1981, 0.1", "20.3338, -195.427, -13.3256, 0.1", "20.4071, -196.077, -13.4065, 0.1", "20.4477, -196.374, -13.4152, 0.1", "20.5117, -196.664, -13.4167, 0.84", "20.7016, -197.233, -13.401, 0.7", "20.9609, -197.842, -13.3681, 0.56", "21.222, -198.377, -13.3297, 0.42", "21.527, -198.972, -13.2827, 0.28", "21.8029, -199.499, -13.2394, 0.14", "22.1114, -200.092, -13.1913, 0.28", "22.2444, -200.357, -13.1711, 0.28", "22.4978, -200.899, -13.1354, 0.14", "22.7347, -201.435, -13.1039, 0.1", "22.9893, -202.063, -13.0737, 0.1", "23.1994, -202.609, -13.0507, 0.1", "23.3996, -203.171, -13.0316, 0.14", "23.6067, -203.733, -13.054, 0.28", "23.814, -204.29, -13.1112, 0.28", "24.0198, -204.846, -13.1962, 0.14", "24.2158, -205.389, -13.3029, 0.1", "24.4108, -205.941, -13.4322, 0.1", "24.7724, -207.067, -13.73, 0.14", "24.9313, -207.622, -13.8833, 0.28", "25.0736, -208.184, -14.034, 0.42", "25.0736, -208.184, -14.034, 0.56", "25.1519, -208.585, -14.1061, 0.56", "25.2672, -209.244, -14.1757, 0.56", "25.3645, -209.835, -14.1883, 0.56", "25.4731, -210.422, -14.1973, 0.7", "25.6069, -210.996, -14.1982, 0.56", "25.7664, -211.57, -14.1917, 0.42", "25.961, -212.134, -14.1744, 0.56", "26.1802, -212.692, -14.1495, 0.42", "26.4072, -213.243, -14.1219, 0.28", "26.6815, -213.854, -14.1308, 0.14", "26.9393, -214.391, -14.1686, 0.1", "27.2278, -214.983, -14.2457, 0.1", "27.4728, -215.52, -14.35, 0.1", "27.6928, -216.058, -14.4836, 0.1", "28.016, -217.072, -14.776, 0.1", "28.016, -217.072, -14.776, 0.1", "28.046, -217.492, -14.824, 0.1", "28.0314, -218.164, -14.8419, 0.1", "27.9991, -218.751, -14.8107, 0.1", "27.9478, -219.417, -14.7375, 0.1", "27.8278, -220.656, -14.55, 0.14", "27.7714, -221.234, -14.4725, 0.1", "27.7068, -221.897, -14.3975, 0.14", "27.6421, -222.488, -14.3513, 0.1", "27.5655, -223.143, -14.3288, 0.14", "27.5263, -223.565, -14.3365, 0.28", "27.4726, -224.222, -14.397, 0.14", "27.4179, -224.887, -14.4584, 0.1", "27.3822, -225.556, -14.5147, 0.14", "27.3589, -225.855, -14.5168, 0.28", "27.3082, -226.438, -14.4828, 0.42", "27.2644, -226.858, -14.4401, 0.1", "27.1869, -227.444, -14.3639, 0.1", "27.1037, -228.032, -14.2784, 0.1", "26.9102, -229.358, -14.0772, 0.14", "26.8039, -229.997, -13.941, 0.1", "26.7373, -230.402, -13.8352, 0.14", "26.6545, -231.043, -13.649, 0.28", "26.6039, -231.605, -13.4816, 0.42", "26.6056, -231.893, -13.3986, 0.56", "26.7331, -232.96, -13.1409, 0.56", "26.8337, -233.535, -13.0004, 0.42", "26.9459, -234.107, -12.8756, 0.28", "27.0543, -234.688, -12.776, 0.14", "27.1644, -235.338, -12.7039, 0.1", "27.2714, -235.99, -12.6712, 0.1", "27.3583, -236.583, -12.6463, 0.1", "27.4336, -237.248, -12.5825, 0.1", "27.4931, -237.898, -12.4892, 0.1", "27.515, -238.476, -12.3425, 0.1", "27.5172, -238.76, -12.2468, 0.1", "27.5181, -239.79, -11.8428, 0.1", "27.5069, -240.343, -11.6185, 0.14", "27.4884, -240.901, -11.4007, 0.1", "27.4232, -242.086, -10.9972, 0.14", "27.3805, -242.662, -10.8373, 0.1", "27.3252, -243.32, -10.7119, 0.1", "27.2771, -243.978, -10.6987, 0.1", "27.2241, -244.646, -10.7588, 0.1", "27.1853, -245.292, -10.8839, 0.1", "27.1765, -245.577, -10.967, 0.1", "27.1516, -246.216, -11.1699, 0.1", "27.1078, -247.406, -11.56, 0.14", "27.0806, -248.043, -11.766, 0.1", "27.0472, -248.623, -11.9022, 0.14", "27.0062, -249.275, -11.9926, 0.1", "26.9808, -249.698, -12.0106, 0.1", "26.9421, -250.358, -11.9733, 0.1", "26.8929, -251.019, -11.8768, 0.1", "26.8391, -252.233, -11.7582, 0.14", "26.8101, -252.831, -11.7379, 0.28", "26.7829, -253.416, -11.7567, 0.42", "26.7354, -254.08, -11.8345, 0.56", "26.6957, -254.49, -11.9581, 0.42", "26.5765, -255.586, -12.4718, 0.28", "26.5164, -256.161, -12.811, 0.42", "26.4754, -256.514, -13.0244, 0.28", "26.4037, -257.25, -13.4497, 0.14", "26.381, -258.234, -14.0299, 0.1", "26.3923, -258.754, -14.3222, 0.1", "26.4248, -259.291, -14.5866, 0.1", "26.5111, -259.896, -14.8671, 0.1", "26.5973, -260.446, -15.0605, 0.1", "26.7697, -261.625, -15.3245, 0.1", "26.8066, -262.045, -15.3644, 0.1", "26.8361, -262.64, -15.3921, 0.1", "26.8426, -263.23, -15.3925, 0.1", "26.8376, -264.487, -15.3321, 0.1", "26.8107, -265.154, -15.2738, 0.1", "26.7744, -265.81, -15.1884, 0.1", "26.7469, -266.405, -15.1287, 0.1", "26.7104, -267.076, -15.0937, 0.1", "26.6792, -267.664, -15.0985, 0.1", "26.6628, -268.087, -15.1322, 0.1", "26.6392, -268.676, -15.2228, 0.1", "26.6052, -269.319, -15.3651, 0.1", "26.5678, -269.967, -15.5404, 0.1", "26.5324, -270.598, -15.7314, 0.1", "26.4912, -271.237, -15.9361, 0.1", "26.4158, -272.323, -16.2926, 0.1", "26.3603, -272.949, -16.4993, 0.1", "26.3185, -273.507, -16.7146, 0.1", "26.2717, -274.125, -16.9746, 0.1", "26.2345, -274.713, -17.2722, 0.14", "26.2019, -275.082, -17.4781, 0.28", "26.1335, -275.657, -17.7983, 0.14", "25.9954, -276.721, -18.4555, 0.14", "25.9425, -277.064, -18.6821, 0.28", "25.7766, -278.104, -19.3722, 0.14", "25.6845, -278.661, -19.7194, 0.1", "25.612, -279.229, -20.0689, 0.14", "25.5776, -279.484, -20.2173, 0.28", "25.5205, -279.855, -20.3919, 0.1", "25.438, -280.468, -20.652, 0.1", "25.3555, -281.105, -20.8476, 0.1", "25.3048, -282.254, -21.241, 0.14" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "25.7758, -102.633, 2.0823, 0.84", "25.5013, -103.183, 1.12737, 0.84", "25.2011, -103.784, 0.0827386, 0.98", "24.9363, -104.315, -0.838931, 0.84", "24.635, -104.918, -1.88732, 0.7", "24.5638, -105.061, -2.13477, 0.84", "24.5638, -105.061, -2.13477, 0.98" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "25.7758, -102.633, 2.0823, 0.56", "25.9915, -102.878, 1.87214, 0.56", "26.9375, -103.925, 1.0679, 0.7", "27.4424, -104.459, 0.622627, 0.56", "27.8972, -104.942, 0.219027, 0.42", "28.8642, -105.953, -0.605823, 0.28", "29.1993, -106.295, -0.874677, 0.14", "29.7558, -106.803, -1.30812, 0.1", "30.8582, -107.711, -2.09264, 0.1", "31.1215, -107.903, -2.29692, 0.14", "31.507, -108.162, -2.58986, 0.28", "31.9016, -108.427, -2.86458, 0.14", "33.071, -109.234, -3.64685, 0.1", "33.4745, -109.522, -3.89905, 0.14", "34.65, -110.445, -4.53422, 0.28", "35.2484, -110.979, -4.84228, 0.14", "35.8103, -111.583, -5.11162, 0.1", "36.2986, -112.26, -5.31493, 0.1", "36.4838, -112.592, -5.39287, 0.28", "36.8003, -113.278, -5.5573, 0.14", "37.0641, -113.992, -5.70995, 0.1", "37.2844, -114.689, -5.96, 0.14", "37.4964, -115.441, -6.30599, 0.1", "37.8332, -116.626, -7.0356, 0.1", "37.927, -116.935, -7.25127, 0.1", "38.121, -117.539, -7.69897, 0.14", "38.5328, -118.768, -8.60293, 0.1", "38.7406, -119.362, -9.02911, 0.1", "39.1742, -120.58, -9.941, 0.14", "39.352, -121.129, -10.455, 0.28", "39.4966, -121.588, -11.0644, 0.42", "39.6124, -121.972, -11.7251, 0.56", "39.6124, -121.972, -11.7251, 0.56", "39.7906, -122.499, -13.0439, 0.56", "40.2027, -123.461, -15.6534, 0.42", "40.4716, -123.907, -16.9879, 0.56", "40.4716, -123.907, -16.9879, 0.56", "40.5858, -124.043, -17.3332, 0.28", "41.1998, -124.752, -18.6592, 0.42", "41.6354, -125.257, -19.2008, 0.28", "42.5333, -126.317, -19.7229, 0.14", "43.0662, -126.967, -19.9008, 0.1", "43.5431, -127.572, -19.9974, 0.14", "44.507, -128.871, -20.1445, 0.1", "44.9259, -129.52, -20.1538, 0.1", "45.2087, -129.985, -20.2283, 0.1", "45.2087, -129.985, -20.2283, 0.1", "45.3805, -130.303, -20.3707, 0.1", "46.0389, -131.559, -21.0688, 0.1", "46.3402, -132.171, -21.4403, 0.14", "46.9248, -133.538, -22.0936, 0.28", "47.1749, -134.231, -22.3264, 0.42", "47.4067, -134.958, -22.4713, 0.56", "47.6146, -135.701, -22.5207, 0.42", "47.791, -136.441, -22.4606, 0.28", "48.1211, -138.02, -22.2262, 0.42", "48.257, -138.769, -22.0681, 0.56", "48.3984, -139.514, -21.9233, 0.42", "48.4747, -139.89, -21.8623, 0.42", "48.6391, -140.627, -21.7773, 0.56", "48.827, -141.379, -21.7364, 0.42", "49.0365, -142.123, -21.7501, 0.28", "49.2547, -142.867, -21.7078, 0.14", "49.4776, -143.601, -21.6197, 0.28", "49.7184, -144.325, -21.4931, 0.42", "49.9855, -145.022, -21.3348, 0.42", "50.2795, -145.713, -21.153, 0.28", "50.9051, -147.008, -20.7851, 0.14", "51.0927, -147.341, -20.7182, 0.84", "51.543, -148.068, -20.6434, 0.7", "52.0326, -148.786, -20.6382, 0.56", "52.4843, -149.399, -20.6933, 0.42", "53.0066, -150.07, -20.8129, 0.28", "54.0083, -151.323, -21.1293, 0.14", "54.4723, -151.894, -21.3173, 0.1", "54.8056, -152.309, -21.4779, 0.1", "55.3006, -152.956, -21.7503, 0.1", "55.7732, -153.617, -22.0276, 0.1", "56.1873, -154.307, -22.3529, 0.1", "56.8255, -155.619, -22.9615, 0.1", "56.9581, -155.945, -23.1265, 0.14", "57.0964, -156.407, -23.3618, 0.1", "57.2442, -157.089, -23.6947, 0.1", "57.4928, -158.518, -24.4364, 0.14", "57.5978, -159.2, -24.7846, 0.1", "57.7093, -159.884, -25.0954, 0.1", "57.8565, -160.666, -25.4421, 0.14", "58.0143, -161.345, -25.7745, 0.1", "58.3626, -162.76, -26.392, 0.1", "58.4611, -163.103, -26.5085, 0.56", "58.6999, -163.805, -26.7234, 0.56", "58.9886, -164.501, -26.895, 0.42", "59.6396, -165.922, -27.1431, 0.56", "60.2395, -167.219, -27.2489, 0.56", "60.5829, -168.004, -27.3023, 0.42", "60.9096, -168.792, -27.4022, 0.28", "61.22, -169.591, -27.5385, 0.14", "61.4051, -170.094, -27.6851, 0.1", "61.6409, -170.785, -27.9512, 0.1", "62.089, -172.173, -28.664, 0.1", "62.2632, -172.823, -29.0512, 0.1", "62.4026, -173.45, -29.4815, 0.1", "62.6302, -174.563, -30.3541, 0.1", "62.6302, -174.563, -30.3541, 0.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "23.4321, -164.51, -34.2562, 0.84", "23.5753, -164.904, -33.5181, 0.84", "23.627, -165.047, -33.2515, 0.7", "23.7839, -165.478, -32.4424, 0.56", "23.8357, -165.621, -32.1758, 0.42", "23.8886, -165.766, -31.9032, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "23.4321, -164.51, -34.2562, 0.56", "23.3889, -164.873, -34.1533, 0.56", "23.3269, -165.385, -34.0161, 0.42", "23.2711, -165.955, -33.8743, 0.28", "23.2364, -166.474, -33.7548, 0.14", "23.1969, -167.573, -33.5196, 0.1", "23.1935, -168.096, -33.4152, 0.1", "23.2137, -168.675, -33.3015, 0.1", "23.2425, -169.2, -33.2111, 0.1", "23.2826, -169.73, -33.1406, 0.1", "23.3327, -170.259, -33.0978, 0.14", "23.3943, -170.792, -33.0919, 0.1", "23.4469, -171.314, -33.0897, 0.1", "23.5058, -171.91, -33.0878, 0.1", "23.5481, -172.501, -33.0935, 0.1", "23.5587, -172.768, -33.1, 0.1", "23.5743, -173.369, -33.1186, 0.1", "23.6062, -173.902, -33.1694, 0.14", "23.6617, -174.427, -33.2428, 0.28", "23.7545, -175.003, -33.3375, 0.42", "23.8736, -175.583, -33.4405, 0.28", "23.9834, -176.089, -33.5354, 0.14", "24.2299, -177.133, -33.7366, 0.1", "24.3406, -177.654, -33.8045, 0.1", "24.4436, -178.176, -33.8322, 0.1", "24.5527, -178.699, -33.8419, 0.1", "24.6675, -179.277, -33.8198, 0.1", "24.704, -179.54, -33.7852, 0.1", "24.7507, -180.585, -33.4736, 0.1", "24.7484, -181.088, -33.2881, 0.14" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-13.6158, 139.382, 16.7771, 0.42", "-13.5295, 139.906, 17.3944, 0.42", "-13.4908, 140.084, 17.5909, 0.28", "-13.3807, 140.454, 17.98, 0.14", "-13.1924, 140.965, 18.4791, 0.1", "-13.0343, 141.349, 18.8333, 0.1", "-12.9446, 141.542, 19.0056, 0.1", "-12.8304, 141.735, 19.1629, 0.14", "-12.6402, 142.036, 19.4023, 0.28", "-12.374, 142.416, 19.6882, 0.14", "-12.2206, 142.606, 19.8126, 0.1", "-11.9915, 142.889, 20.0398, 0.14", "-11.897, 143.007, 20.1611, 0.28", "-11.7096, 143.241, 20.4673, 0.56", "-11.7096, 143.241, 20.4673, 0.42", "-11.6316, 143.333, 20.6164, 0.56", "-11.3079, 143.705, 21.1692, 0.56", "-11.1054, 143.932, 21.4714, 0.42", "-10.9073, 144.151, 21.7886, 0.28", "-10.7038, 144.357, 22.105, 0.14", "-10.568, 144.482, 22.3074, 0.1", "-10.3458, 144.684, 22.6208, 0.1", "-10.1095, 144.885, 22.9167, 0.1", "-9.68758, 145.256, 23.4673, 0.14", "-9.50249, 145.434, 23.7549, 0.28", "-9.41926, 145.528, 23.9028, 0.42", "-9.24, 145.742, 24.2357, 0.56", "-9.07258, 145.96, 24.5646, 0.42", "-8.96921, 146.109, 24.7703, 0.56", "-8.65835, 146.602, 25.3341, 0.42", "-8.51837, 146.868, 25.638, 0.28", "-8.40674, 147.101, 25.9185, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-13.6158, 139.382, 16.7771, 0.98", "-13.8481, 140.192, 16.9512, 0.98", "-13.9534, 140.595, 17.0202, 0.84", "-14.0158, 141.01, 17.0397, 0.7", "-14.0553, 141.423, 17.0324, 0.56", "-14.085, 141.842, 17.0124, 0.42", "-14.111, 142.262, 16.9864, 0.28", "-14.1181, 142.679, 16.9319, 0.42", "-14.1291, 143.554, 16.8138, 0.28", "-14.1363, 143.973, 16.7591, 0.14", "-14.1418, 144.386, 16.6821, 0.1", "-14.1512, 144.798, 16.5911, 0.1", "-14.1689, 145.207, 16.4958, 0.1", "-14.2008, 145.618, 16.4034, 0.1", "-14.2573, 146.023, 16.3483, 0.1", "-14.3889, 146.896, 16.2702, 0.1", "-14.4488, 147.307, 16.2542, 0.1", "-14.5305, 147.717, 16.2892, 0.1", "-14.6343, 148.116, 16.3806, 0.1", "-14.8809, 148.841, 16.6375, 0.1", "-15.0264, 149.2, 16.8004, 0.1", "-15.1037, 149.372, 16.8904, 0.1", "-15.4442, 150.1, 17.2562, 0.1", "-15.6145, 150.447, 17.4273, 0.1", "-15.8104, 150.836, 17.5956, 0.1", "-15.9898, 151.204, 17.6982, 0.1", "-16.1751, 151.571, 17.7885, 0.1", "-16.1751, 151.571, 17.7885, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-8.32782, 82.4333, -4.58541, 0.28", "-9.07533, 82.9969, -3.81885, 0.28", "-9.66024, 83.625, -3.13834, 0.42", "-9.66024, 83.625, -3.13834, 0.56", "-10.1611, 84.5128, -2.49828, 0.28", "-10.3846, 85.0628, -2.20113, 0.28", "-10.5594, 85.6488, -1.96514, 0.14", "-10.5749, 86.3064, -1.87607, 0.1", "-10.5125, 86.894, -1.88304, 0.1", "-10.4166, 87.4775, -1.93677, 0.1", "-10.1171, 88.6155, -2.18961, 0.1", "-9.95208, 89.1581, -2.35557, 0.1", "-9.62216, 90.2993, -2.73087, 0.1", "-9.47521, 90.8458, -2.90092, 0.1", "-9.40792, 91.1271, -2.96794, 0.14", "-9.20037, 92.3054, -3.09931, 0.1", "-9.20037, 92.3054, -3.09931, 0.1", "-9.16197, 93.4972, -2.89363, 0.1", "-9.19199, 94.1371, -2.71242, 0.1", "-9.2281, 94.7585, -2.51331, 0.1", "-9.26979, 95.3858, -2.29431, 0.1", "-9.32438, 95.9979, -2.07193, 0.14", "-9.34064, 96.2732, -1.9932, 0.28", "-9.34526, 96.8447, -1.87478, 0.28", "-9.36957, 97.4265, -1.77452, 0.14", "-9.41734, 98.0822, -1.68257, 0.1", "-9.43169, 98.6714, -1.63966, 0.1", "-9.4267, 99.2548, -1.62392, 0.1", "-9.40744, 99.9203, -1.62305, 0.1", "-9.37959, 100.513, -1.63675, 0.14", "-9.35029, 101.102, -1.66425, 0.28", "-9.34564, 102.344, -1.67925, 0.42", "-9.36915, 102.937, -1.66022, 0.28", "-9.42358, 103.524, -1.61846, 0.14", "-9.51426, 104.107, -1.55772, 0.1", "-9.62466, 104.67, -1.46767, 0.14", "-9.8548, 105.88, -1.27855, 0.1", "-9.94852, 106.459, -1.20778, 0.1", "-9.98758, 107.051, -1.17946, 0.1", "-9.9625, 107.64, -1.2086, 0.1", "-9.87063, 108.28, -1.30765, 0.1", "-9.62012, 109.427, -1.59473, 0.1", "-9.36673, 110.4, -1.91261, 0.14", "-9.36673, 110.4, -1.91261, 0.28", "-9.32995, 110.98, -2.01629, 0.7", "-9.39021, 111.57, -2.05004, 0.56", "-9.5356, 112.131, -2.01788, 0.42", "-9.73488, 112.684, -1.93463, 0.28", "-10.169, 113.794, -1.73557, 0.14", "-10.3763, 114.343, -1.64419, 0.28", "-10.5757, 114.893, -1.56028, 0.14", "-10.7631, 115.449, -1.48845, 0.1", "-10.931, 116.005, -1.43476, 0.1", "-11.0779, 116.577, -1.40363, 0.1", "-11.1746, 117.162, -1.43775, 0.1", "-11.2525, 117.744, -1.50164, 0.1", "-11.3166, 118.328, -1.58885, 0.1", "-11.3694, 118.907, -1.69289, 0.1", "-11.4104, 119.477, -1.81271, 0.14", "-11.4799, 120.684, -2.09497, 0.28", "-11.4682, 121.253, -2.25329, 0.42", "-11.4218, 121.82, -2.42431, 0.28", "-11.3884, 122.1, -2.50809, 0.42", "-11.3544, 122.38, -2.59107, 0.56", "-11.343, 122.957, -2.71872, 0.84", "-11.5194, 124.18, -2.87417, 0.7", "-11.6514, 124.742, -2.94147, 0.56", "-11.8782, 125.29, -2.95679, 0.56", "-12.0759, 125.65, -2.93647, 0.42", "-12.7277, 126.706, -2.78839, 0.28", "-13.0984, 127.235, -2.66984, 0.14", "-13.0984, 127.235, -2.66984, 0.14", "-13.7007, 128.246, -2.41871, 0.1", "-13.9235, 128.787, -2.31562, 0.1", "-14.0628, 129.432, -2.22536, 0.1", "-14.0985, 130.023, -2.18083, 0.1", "-14.0918, 130.602, -2.14313, 0.1", "-14.0027, 131.843, -2.08044, 0.1", "-13.9137, 132.427, -2.07037, 0.1", "-13.8104, 133.073, -2.05876, 0.14", "-13.7294, 133.658, -2.04917, 0.14", "-13.674, 134.319, -2.03445, 0.1", "-13.6798, 134.616, -2.02506, 0.14", "-13.7051, 134.912, -2.03517, 0.28", "-13.734, 135.563, -2.11149, 0.84", "-13.7408, 136.15, -2.20222, 0.7", "-13.7246, 136.8, -2.29341, 0.56", "-13.7009, 137.378, -2.3715, 0.42", "-13.6439, 138.578, -2.50559, 0.28", "-13.6051, 139.241, -2.55572, 0.14", "-13.5546, 139.892, -2.5777, 0.1", "-13.5019, 140.553, -2.56782, 0.1", "-13.5019, 140.553, -2.56782, 0.14", "-13.4767, 141.137, -2.48257, 0.1", "-13.4421, 141.72, -2.38752, 0.1", "-13.384, 142.297, -2.32233, 0.1", "-13.3104, 142.957, -2.28385, 0.1", "-13.237, 143.617, -2.27108, 0.1", "-13.2079, 144.272, -2.25093, 0.1", "-13.2303, 145.405, -2.20801, 0.14", "-13.2874, 145.996, -2.18419, 0.28", "-13.4015, 146.642, -2.15948, 0.42", "-13.5584, 147.211, -2.14206, 0.28", "-13.9852, 148.381, -2.09919, 0.14", "-14.2157, 148.913, -2.06825, 0.1", "-14.4345, 149.464, -2.03724, 0.1", "-14.4345, 149.464, -2.03724, 0.1", "-14.5201, 150.049, -2.05153, 0.1", "-14.5501, 150.64, -2.09523, 0.1", "-14.5353, 151.227, -2.16126, 0.1", "-14.5068, 152.461, -2.29914, 0.1", "-14.4951, 153.051, -2.36418, 0.1", "-14.4938, 153.639, -2.42376, 0.14", "-14.5067, 154.23, -2.47668, 0.28", "-14.5023, 154.818, -2.53795, 0.14", "-14.4971, 155.398, -2.59889, 0.1", "-14.4971, 155.398, -2.59889, 0.14", "-14.4729, 155.987, -2.64396, 0.84", "-14.4665, 156.58, -2.65807, 0.7", "-14.5007, 157.826, -2.62694, 0.56", "-14.5256, 158.415, -2.58271, 0.42", "-14.6069, 159.053, -2.46816, 0.28", "-14.7316, 159.61, -2.3154, 0.14", "-15.0924, 160.692, -1.91199, 0.1", "-15.3123, 161.193, -1.68856, 0.14", "-15.4921, 161.53, -1.52469, 0.28", "-16.0199, 162.519, -1.07251, 0.56", "-16.2885, 163.003, -0.856988, 0.7", "-16.5456, 163.495, -0.65446, 0.56", "-16.7662, 164.02, -0.498476, 0.42", "-16.9866, 164.555, -0.362155, 0.28", "-17.0864, 164.82, -0.318104, 0.14" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-8.32782, 82.4333, -4.58541, 0.1", "-8.63839, 82.3326, -4.75053, 0.1", "-8.94743, 82.2325, -4.91484, 0.14", "-9.10271, 82.1821, -4.9974, 0.28" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "28.8889, -185.839, -11.2107, 1.12", "28.5622, -186.619, -10.7626, 1.12", "28.4515, -186.896, -10.6353, 0.98", "28.385, -187.108, -10.5785, 0.84", "28.2443, -187.973, -10.5575, 1.12", "28.2004, -188.475, -10.5698, 0.98", "28.1703, -188.985, -10.5437, 0.84", "28.1846, -189.306, -10.5441, 0.84", "28.3086, -190.23, -10.509, 0.7", "28.5017, -191.167, -10.4592, 0.84", "28.7223, -191.982, -10.4215, 0.84", "28.9823, -192.869, -10.303, 0.84", "29.1089, -193.3, -10.213, 0.7", "29.2384, -193.773, -10.0889, 0.56", "29.2825, -193.989, -10.0251, 0.7", "29.3343, -194.293, -9.95403, 0.56", "29.4027, -194.743, -9.92789, 0.7", "29.449, -195.196, -9.94591, 0.84", "29.4797, -195.649, -10.0044, 0.84", "29.492, -196.152, -10.1085, 0.98", "29.5009, -196.588, -10.2211, 0.84", "29.5214, -197.212, -10.4051, 0.84", "29.5253, -197.52, -10.4815, 0.98", "29.5359, -198.35, -10.6365, 0.84", "29.552, -198.672, -10.6729, 1.12", "29.6048, -199.124, -10.6807, 1.12", "29.6825, -199.566, -10.647, 0.98", "29.9001, -200.461, -10.5028, 0.84", "30.0057, -200.895, -10.4114, 0.7", "30.0762, -201.201, -10.334, 0.56", "30.195, -201.639, -10.2702, 0.98", "30.3034, -202.08, -10.2276, 0.98", "30.3919, -202.524, -10.1768, 0.98", "30.4442, -202.835, -10.1444, 0.84", "30.4976, -203.284, -10.0713, 0.7", "30.574, -204.194, -9.88491, 0.84", "30.6621, -205.052, -9.74069, 0.84", "30.7858, -205.969, -9.62422, 0.98", "30.8774, -206.41, -9.62678, 0.98", "30.9392, -206.626, -9.65397, 0.98", "31.0824, -207.05, -9.75131, 0.84", "31.42, -207.883, -9.99864, 0.98", "31.6049, -208.273, -10.1529, 0.98", "31.9943, -209.049, -10.4919, 0.84", "32.1828, -209.43, -10.6395, 0.84", "32.3779, -209.824, -10.7607, 0.84", "32.5898, -210.279, -10.828, 0.84", "32.7733, -210.698, -10.8051, 0.84", "32.9569, -211.108, -10.7292, 0.98", "33.1425, -211.507, -10.6035, 0.84", "33.3685, -211.943, -10.4792, 0.98", "33.7585, -212.672, -10.3021, 0.56", "34.0058, -213.112, -10.26, 0.7", "34.2678, -213.551, -10.2896, 0.84", "34.5155, -213.981, -10.3895, 0.7", "34.887, -214.714, -10.5843, 0.84", "35.006, -215.007, -10.6703, 0.84", "35.2813, -215.874, -10.88, 0.7", "35.3531, -216.314, -10.9206, 0.84", "35.3688, -216.825, -10.892, 0.84", "35.3552, -217.753, -10.8034, 0.7", "35.3315, -218.251, -10.7308, 0.56", "35.2924, -219.086, -10.6098, 0.42", "35.261, -219.591, -10.5317, 0.42", "35.2307, -220.091, -10.4756, 0.56", "35.2052, -221.023, -10.4625, 0.56", "35.213, -221.341, -10.5236, 0.84", "35.2488, -221.772, -10.6654, 0.84", "35.2784, -221.973, -10.7711, 0.98" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "28.8889, -185.839, -11.2107, 0.14", "29.1419, -186.11, -11.0775, 0.14", "29.5567, -186.54, -10.8574, 0.28", "29.7821, -186.811, -10.6831, 0.42", "30.1136, -187.257, -10.3717, 0.28", "30.4211, -187.718, -10.0568, 0.14", "30.6087, -188.015, -9.86086, 0.14", "30.7807, -188.314, -9.67047, 0.28", "31.2263, -189.118, -9.16217, 0.28", "31.4941, -189.605, -8.86664, 0.14", "31.7534, -190.038, -8.60196, 0.1", "32.0644, -190.509, -8.32219, 0.1", "32.403, -190.97, -8.05952, 0.14", "32.6415, -191.255, -7.90367, 0.28", "33.0557, -191.674, -7.68276, 0.14", "33.4913, -192.077, -7.44577, 0.1", "33.937, -192.446, -7.19818, 0.1", "34.2439, -192.668, -7.06152, 0.1", "34.567, -192.878, -6.94473, 0.1", "34.8965, -193.079, -6.8442, 0.1", "35.2364, -193.275, -6.75398, 0.1", "35.9122, -193.662, -6.58621, 0.14", "36.8418, -194.178, -6.35353, 0.28", "37.5211, -194.561, -6.16907, 0.14", "37.8602, -194.754, -6.07097, 0.1", "38.1892, -194.945, -5.96859, 0.1", "38.8519, -195.35, -5.73863, 0.14", "39.1566, -195.565, -5.61162, 0.28", "39.7048, -196.059, -5.31187, 0.14", "39.7048, -196.059, -5.31187, 0.28", "39.7048, -196.059, -5.31187, 0.42", "39.8469, -196.297, -5.24747, 0.56", "40.0807, -196.808, -5.15576, 0.42", "40.2997, -197.324, -5.07443, 0.28", "40.4049, -197.586, -5.03708, 0.28", "40.4049, -197.586, -5.03708, 0.28", "40.528, -197.835, -4.98638, 0.28", "40.83, -198.38, -4.85406, 0.14", "41.1432, -198.907, -4.71236, 0.1", "41.4315, -199.38, -4.58039, 0.1", "41.7454, -199.907, -4.43814, 0.1", "42.0482, -200.443, -4.3043, 0.14", "42.3385, -200.996, -4.18064, 0.28", "42.456, -201.248, -4.134, 0.42", "42.5756, -201.506, -4.11437, 0.28", "42.8178, -202.021, -4.11845, 0.14", "43.0479, -202.526, -4.16579, 0.1", "43.2748, -203.039, -4.24759, 0.1", "43.4985, -203.553, -4.34755, 0.1", "43.9541, -204.599, -4.55126, 0.14", "43.9541, -204.599, -4.55126, 0.28", "44.0763, -204.854, -4.58235, 0.56", "44.333, -205.359, -4.60511, 0.42", "44.5922, -205.855, -4.59075, 0.28", "44.8488, -206.357, -4.54087, 0.14", "45.1173, -206.925, -4.43325, 0.1", "45.3925, -207.488, -4.32084, 0.14", "45.6773, -208.037, -4.20022, 0.1", "45.6773, -208.037, -4.20022, 0.14", "46.0678, -208.527, -4.13761, 0.1", "46.5029, -208.99, -4.18923, 0.14", "46.5029, -208.99, -4.18923, 0.28", "46.6924, -209.196, -4.22205, 0.56", "47.1022, -209.681, -4.27066, 0.42", "47.9108, -210.55, -4.40972, 0.28", "48.296, -210.946, -4.48112, 0.14", "48.7391, -211.395, -4.56422, 0.1", "49.1794, -211.848, -4.65216, 0.1", "49.5566, -212.253, -4.731, 0.1", "50.2157, -213.058, -4.87006, 0.1", "50.2157, -213.058, -4.87006, 0.1", "50.371, -213.294, -4.87952, 0.1", "50.6535, -213.777, -4.88131, 0.1", "50.9218, -214.275, -4.85001, 0.1", "51.1822, -214.776, -4.77928, 0.1", "51.4617, -215.329, -4.66268, 0.1", "51.7596, -215.868, -4.53236, 0.14", "52.0494, -216.34, -4.3993, 0.1", "52.4166, -216.834, -4.26801, 0.1", "52.8276, -217.296, -4.14776, 0.1", "53.1226, -217.567, -4.074, 0.1", "53.6204, -217.936, -3.96097, 0.1", "53.9705, -218.13, -3.9151, 0.14", "54.9689, -218.555, -3.83545, 0.28", "55.237, -218.65, -3.82301, 0.7", "55.8377, -218.833, -3.79369, 0.56", "56.4489, -219.004, -3.74317, 0.42", "57.4902, -219.284, -3.60651, 0.28", "57.8694, -219.393, -3.52583, 0.7", "58.2357, -219.509, -3.40509, 0.7", "58.7955, -219.7, -3.19812, 0.56", "59.3732, -219.889, -3.00326, 0.42", "59.7296, -220.005, -2.88278, 0.28", "60.2966, -220.191, -2.65545, 0.14", "60.8605, -220.366, -2.44523, 0.1", "61.2284, -220.475, -2.32282, 0.1", "62.3407, -220.797, -2.02464, 0.1", "62.7144, -220.899, -1.95406, 0.14" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "62.6302, -174.563, -30.3541, 0.1", "62.8713, -175.296, -30.1809, 0.1", "63.0044, -175.694, -30.1074, 0.1", "63.1514, -176.141, -30.0428, 0.1", "63.282, -176.547, -29.9966, 0.1", "63.4327, -176.994, -29.9489, 0.1", "63.5692, -177.391, -29.9094, 0.1", "63.721, -177.789, -29.8967, 0.1", "63.8688, -178.192, -29.8869, 0.1", "64.0061, -178.596, -29.8831, 0.1", "64.1052, -178.881, -29.9075, 0.1", "64.1732, -179.079, -29.9418, 0.7", "64.3117, -179.475, -30.0336, 0.7", "64.4479, -179.865, -30.1398, 0.56", "64.5806, -180.256, -30.2547, 0.7", "64.847, -181.075, -30.5042, 0.56", "64.967, -181.469, -30.6226, 0.42", "65.0851, -181.865, -30.7321, 0.28", "65.2012, -182.266, -30.8299, 0.14", "65.3183, -182.662, -30.9023, 0.28", "65.3784, -182.866, -30.9242, 0.28", "65.4954, -183.277, -30.9326, 0.28", "65.6237, -183.686, -30.9346, 0.14", "65.7588, -184.091, -30.9321, 0.1", "65.9138, -184.539, -30.9265, 0.1", "66.0767, -184.935, -30.9426, 0.1", "66.2531, -185.322, -30.9761, 0.1", "66.4649, -185.749, -31.03, 0.1", "66.6616, -186.123, -31.0919, 0.14", "66.8572, -186.486, -31.1658, 0.28", "67.266, -187.267, -31.3494, 0.42", "67.463, -187.635, -31.4349, 0.84", "67.463, -187.635, -31.4349, 0.7", "67.5495, -187.831, -31.4519, 0.28", "67.6861, -188.23, -31.3878, 0.14", "67.7604, -188.615, -31.2143, 0.1", "67.7839, -189.0, -30.9383, 0.1", "67.7897, -189.332, -30.6667, 0.1", "67.7605, -189.991, -30.0593, 0.1", "67.7154, -190.627, -29.4277, 0.1", "67.6854, -191.183, -28.8664, 0.1", "67.6707, -191.827, -28.2421, 0.1", "67.6767, -192.145, -27.9547, 0.1", "67.7726, -192.786, -27.5, 0.1", "68.0422, -193.173, -27.5448, 0.1", "68.6368, -193.738, -27.9078, 0.1", "69.2297, -194.231, -28.3196, 0.1", "69.7922, -194.659, -28.7295, 0.1", "70.0933, -194.88, -28.9403, 0.1", "70.6666, -195.312, -29.3301, 0.1", "70.8173, -195.432, -29.425, 0.1", "71.1529, -195.713, -29.6071, 0.1", "71.4897, -196.015, -29.7661, 0.1", "71.821, -196.311, -29.9316, 0.1", "72.1187, -196.574, -30.0929, 0.1", "72.6801, -197.062, -30.431, 0.1", "73.2972, -197.577, -30.8429, 0.1", "73.5775, -197.801, -31.0602, 0.1", "74.1692, -198.244, -31.5684, 0.1", "74.4485, -198.449, -31.8211, 0.14", "75.0333, -198.887, -32.3417, 0.28", "75.1701, -199.002, -32.4599, 0.14", "75.7244, -199.505, -32.9092, 0.1", "76.3066, -200.026, -33.355, 0.1", "76.4425, -200.158, -33.451, 0.1", "76.7458, -200.479, -33.6377, 0.1", "76.9972, -200.81, -33.7351, 0.1", "77.2444, -201.214, -33.7595, 0.1", "77.6155, -202.02, -33.6115, 0.14", "77.7547, -202.407, -33.496, 0.28", "78.0169, -203.129, -33.3083, 0.84", "78.327, -203.962, -33.1911, 0.7", "78.4818, -204.362, -33.1785, 0.56", "78.6622, -204.792, -33.2663, 0.42", "78.8277, -205.157, -33.4175, 0.28", "79.1809, -205.799, -33.8923, 0.14", "79.5411, -206.403, -34.4475, 0.1", "79.626, -206.533, -34.5922, 0.1", "79.9797, -207.073, -35.2195, 0.1", "80.1376, -207.333, -35.5182, 0.1", "80.4566, -207.912, -36.123, 0.1", "80.5995, -208.218, -36.3841, 0.1", "80.8838, -208.893, -36.8607, 0.1", "81.0186, -209.238, -37.0724, 0.1", "81.1583, -209.647, -37.2614, 0.1", "81.2765, -210.033, -37.4012, 0.1", "81.3948, -210.426, -37.5176, 0.1", "81.4562, -210.623, -37.5759, 0.1", "81.5099, -210.827, -37.6136, 0.56", "81.6189, -211.235, -37.6744, 0.42", "81.7382, -211.637, -37.7118, 0.28", "81.9626, -212.395, -37.7489, 0.14", "82.0824, -212.806, -37.7534, 0.1", "82.3125, -213.563, -37.7299, 0.1", "82.4381, -213.97, -37.7035, 0.1", "82.585, -214.418, -37.6559, 0.1", "82.7197, -214.822, -37.6011, 0.1", "82.8521, -215.222, -37.5392, 0.1", "83.0144, -215.671, -37.4935, 0.1", "83.1684, -216.069, -37.4794, 0.1", "83.3327, -216.514, -37.468, 0.14", "83.4782, -216.917, -37.4596, 0.28", "83.6207, -217.311, -37.4512, 0.14", "83.7624, -217.716, -37.4451, 0.1", "83.8951, -218.122, -37.444, 0.1", "84.026, -218.53, -37.4445, 0.1", "84.1132, -218.813, -37.4468, 0.1", "84.2427, -219.222, -37.4481, 0.84", "84.3752, -219.628, -37.4472, 0.7", "84.5108, -220.033, -37.4444, 0.56", "84.5108, -220.033, -37.4444, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "62.6302, -174.563, -30.3541, 0.28", "63.3604, -174.981, -28.3668, 0.28", "63.7532, -175.206, -27.3251, 0.14", "64.1677, -175.443, -26.2907, 0.1", "64.5829, -175.68, -25.2547, 0.1", "65.0732, -175.96, -24.0314, 0.1", "65.4865, -176.196, -23.0002, 0.14", "65.9428, -176.455, -21.9891, 0.28", "66.1196, -176.555, -21.614, 0.42" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "24.7484, -181.088, -33.2881, 0.14", "25.2402, -181.188, -33.5078, 0.14", "26.0477, -181.341, -33.845, 0.28", "27.4476, -181.591, -34.3514, 0.14", "28.2791, -181.743, -34.6156, 0.1", "28.8079, -181.842, -34.7719, 0.1", "30.374, -182.158, -35.2087, 0.1", "31.2113, -182.353, -35.4214, 0.1", "32.034, -182.604, -35.5803, 0.1", "32.5558, -182.804, -35.6186, 0.1", "32.5558, -182.804, -35.6186, 0.1", "32.8907, -183.014, -35.5986, 0.1", "33.582, -183.54, -35.483, 0.1", "34.2387, -184.087, -35.2906, 0.1", "34.6452, -184.44, -35.1356, 0.1", "35.2872, -184.985, -34.8591, 0.1", "35.9308, -185.519, -34.5673, 0.1", "36.3304, -185.844, -34.3805, 0.1", "37.6404, -186.892, -33.7533, 0.1", "38.2895, -187.411, -33.4477, 0.1", "38.6988, -187.737, -33.2642, 0.1", "39.3551, -188.255, -32.9712, 0.1", "40.0083, -188.77, -32.6962, 0.1", "40.4296, -189.109, -32.5497, 0.1", "41.106, -189.655, -32.4377, 0.1", "41.5405, -190.001, -32.3656, 0.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "24.7484, -181.088, -33.2881, 0.1", "24.9978, -182.323, -33.0025, 0.1", "25.1438, -182.959, -32.8824, 0.1", "25.3035, -183.602, -32.7786, 0.1", "25.4726, -184.249, -32.6872, 0.1", "25.6325, -184.897, -32.6102, 0.1", "25.7779, -185.552, -32.5464, 0.1", "25.9309, -186.206, -32.527, 0.1", "26.0684, -186.851, -32.512, 0.1", "26.2002, -187.513, -32.4993, 0.1", "26.3433, -188.255, -32.4866, 0.1", "26.4839, -188.984, -32.4741, 0.1", "26.6151, -189.643, -32.4615, 0.1", "26.7438, -190.305, -32.4497, 0.1", "26.8751, -190.963, -32.4371, 0.1", "27.0168, -191.623, -32.4214, 0.1", "27.1709, -192.264, -32.4011, 0.14", "27.31, -192.918, -32.3374, 0.28", "27.4388, -193.653, -32.2271, 0.14", "27.5053, -194.299, -32.0572, 0.1", "27.5391, -194.935, -31.835, 0.1", "27.5467, -195.237, -31.7119, 0.1", "27.5691, -196.532, -31.1382, 0.1", "27.5857, -197.145, -30.8578, 0.1", "27.6545, -198.429, -30.278, 0.1", "27.7041, -199.061, -30.0563, 0.1", "27.7717, -199.717, -29.9108, 0.1", "27.8657, -200.379, -29.8527, 0.1", "27.9953, -201.04, -29.8959, 0.14", "28.1338, -201.677, -29.9951, 0.1", "28.4721, -203.011, -30.3266, 0.14", "28.6492, -203.724, -30.5076, 0.1", "28.7284, -204.043, -30.5834, 0.14", "28.8135, -204.345, -30.6698, 0.28", "28.9103, -204.652, -30.7601, 0.28", "29.1253, -205.271, -30.9231, 0.14", "29.3578, -205.889, -31.0457, 0.1", "29.6045, -206.504, -31.1695, 0.1", "30.1033, -207.761, -31.41, 0.1", "30.3537, -208.366, -31.5165, 0.1", "30.6135, -208.978, -31.6096, 0.1", "30.8785, -209.589, -31.6886, 0.1", "31.127, -210.217, -31.7065, 0.1", "31.3301, -210.853, -31.6414, 0.1", "31.417, -211.296, -31.4875, 0.1", "31.4722, -211.905, -31.2096, 1.12", "31.4722, -211.905, -31.2096, 0.98", "31.4494, -213.037, -30.6014, 0.28", "31.4275, -213.706, -30.2531, 0.14", "31.3982, -214.945, -29.6618, 0.1", "31.3943, -215.629, -29.3725, 0.1", "31.4343, -216.258, -29.1414, 0.1", "31.5415, -216.897, -28.9533, 0.1", "31.7336, -217.527, -28.8223, 0.1", "31.9576, -218.142, -28.6727, 0.1", "32.0765, -218.45, -28.6013, 0.1", "32.3204, -219.136, -28.4043, 0.1", "32.5119, -219.824, -28.1888, 0.1", "32.6015, -220.26, -28.0496, 0.1", "32.7796, -221.482, -27.6776, 0.1", "32.853, -222.195, -27.484, 0.1", "32.9111, -222.931, -27.3175, 0.1", "32.9394, -223.389, -27.2375, 0.1", "32.9932, -224.057, -27.1557, 0.1", "33.0803, -224.721, -27.107, 0.1", "33.1918, -225.381, -27.0506, 0.1", "33.3116, -226.037, -26.9485, 0.1", "33.4044, -226.677, -26.7689, 0.1", "33.4725, -227.296, -26.5418, 0.1", "33.5166, -227.913, -26.28, 0.1", "33.5242, -229.056, -25.6835, 0.1", "33.5072, -229.638, -25.3485, 0.1", "33.4342, -230.852, -24.6367, 0.1", "33.386, -231.436, -24.3093, 0.1", "33.3342, -232.033, -23.9987, 0.1", "33.2328, -233.321, -23.4321, 0.1", "33.2083, -233.962, -23.2246, 0.1", "33.1812, -234.683, -22.9948, 0.1", "33.1757, -235.398, -22.7945, 0.1", "33.1773, -235.722, -22.7017, 0.1", "33.2061, -236.451, -22.5039, 0.1", "33.2707, -237.102, -22.3514, 0.1", "33.4453, -238.425, -22.0191, 0.1", "33.5559, -239.054, -21.853, 0.1", "33.6922, -239.694, -21.6881, 0.1", "33.8334, -240.334, -21.5447, 0.1", "33.9878, -240.98, -21.428, 0.1", "34.1336, -241.632, -21.3577, 0.1", "34.2058, -241.961, -21.3494, 0.1", "34.3228, -242.611, -21.3407, 0.1", "34.4373, -243.356, -21.3368, 0.1", "34.5176, -244.023, -21.3399, 0.1", "34.5937, -244.762, -21.3472, 0.1", "34.6611, -245.43, -21.3542, 0.1", "34.7316, -246.18, -21.3638, 0.1", "34.7973, -246.849, -21.3713, 0.1", "34.8958, -247.583, -21.4218, 0.14", "34.9987, -248.242, -21.5015, 0.1", "35.1242, -248.895, -21.6116, 0.1", "35.2824, -249.607, -21.7634, 0.1", "35.4527, -250.238, -21.917, 0.1", "35.8012, -251.395, -22.215, 0.14", "35.8012, -251.395, -22.215, 0.28", "35.9085, -251.7, -22.3126, 0.28", "36.1256, -252.3, -22.5196, 0.14", "36.3482, -252.906, -22.716, 0.1", "36.5669, -253.49, -22.9312, 0.1", "36.7635, -254.095, -23.156, 0.1", "37.1239, -255.363, -23.6764, 0.1", "37.2651, -255.965, -23.9464, 0.1", "37.3688, -256.565, -24.229, 0.1", "37.5211, -257.799, -24.7992, 0.1", "37.5901, -258.489, -25.0961, 0.1", "37.65, -259.186, -25.3443, 0.1", "37.6984, -259.649, -25.4486, 0.1", "37.8027, -260.377, -25.5648, 0.1", "37.9327, -261.038, -25.61, 0.1", "38.0495, -261.489, -25.5932, 0.1", "38.2575, -262.13, -25.5567, 0.1", "38.5058, -262.832, -25.5105, 0.1", "38.7233, -263.47, -25.471, 0.1", "38.926, -264.109, -25.436, 0.1", "39.0882, -264.756, -25.3662, 0.1", "39.2241, -265.478, -25.2568, 0.1", "39.317, -266.118, -25.0759, 0.1", "39.3962, -266.817, -24.8034, 0.1", "39.4315, -267.12, -24.6593, 0.1", "39.571, -268.167, -24.0031, 0.1", "39.6579, -268.701, -23.6192, 0.1", "39.8831, -269.813, -22.7724, 0.1", "40.0037, -270.335, -22.3812, 0.1", "40.1472, -270.873, -22.0065, 0.1", "40.4852, -272.054, -21.31, 0.1", "40.6695, -272.645, -21.0433, 0.1", "40.8735, -273.258, -20.8594, 0.1", "41.0978, -273.89, -20.7844, 0.1", "41.3193, -274.524, -20.776, 0.1", "41.5375, -275.156, -20.8317, 0.1", "41.7479, -275.774, -20.9468, 0.1", "42.1756, -277.051, -21.2159, 0.14", "42.3712, -277.68, -21.3618, 0.28", "42.5729, -278.39, -21.5287, 0.14", "42.7343, -279.019, -21.6635, 0.1", "42.8085, -279.341, -21.7162, 0.14", "42.8085, -279.341, -21.7162, 0.28", "42.8741, -279.805, -21.627, 0.1", "42.9889, -280.447, -21.4571, 0.1", "43.1287, -281.075, -21.2629, 0.1", "43.2806, -281.689, -21.0658, 0.1", "43.6246, -282.958, -20.6681, 0.1", "43.8072, -283.577, -20.4833, 0.1", "44.0303, -284.271, -20.2874, 0.1", "44.2348, -284.891, -20.1322, 0.1", "44.4473, -285.519, -20.0047, 0.1", "44.654, -286.152, -19.9194, 0.1", "44.859, -286.793, -19.8838, 0.1", "45.0317, -287.43, -19.8577, 0.1", "45.1666, -288.087, -19.844, 0.1", "45.2669, -288.754, -19.841, 0.1", "45.3494, -289.506, -19.847, 0.14", "45.4053, -290.167, -19.8572, 0.1", "45.4405, -290.643, -19.8661, 0.1", "45.4851, -291.398, -19.8836, 0.1", "45.5314, -292.139, -19.9001, 0.1", "45.5866, -292.808, -19.9109, 0.1", "45.6551, -293.479, -19.9177, 0.1", "45.7348, -294.146, -19.921, 0.1", "45.8478, -294.882, -19.9171, 0.1", "45.9558, -295.548, -19.9118, 0.14", "46.0656, -296.21, -19.9059, 0.1", "46.1835, -296.943, -19.9003, 0.14", "46.2816, -297.607, -19.898, 0.1", "46.3683, -298.277, -19.8993, 0.1", "46.4622, -299.027, -19.9017, 0.1", "46.5377, -299.686, -19.9059, 0.1", "46.6011, -300.353, -19.8679, 0.1", "46.6699, -301.099, -19.7774, 0.1", "46.7327, -301.83, -19.6497, 0.1", "46.7643, -302.158, -19.5774, 0.1", "46.8457, -302.804, -19.4115, 0.14", "47.0212, -303.993, -19.0883, 0.42", "47.1383, -304.63, -18.9136, 0.28", "47.2854, -305.267, -18.7463, 0.14", "47.4377, -305.894, -18.6065, 0.1", "47.5948, -306.541, -18.4977, 0.1", "47.756, -307.189, -18.4291, 0.1", "47.9266, -307.841, -18.4044, 0.1", "48.0929, -308.491, -18.3808, 0.1", "48.2755, -309.21, -18.3552, 0.1", "48.4162, -309.864, -18.293, 0.1", "48.537, -310.517, -18.196, 0.1", "48.6331, -311.174, -18.0733, 1.26", "48.7126, -311.825, -17.9326, 1.12", "48.7738, -312.481, -17.7832, 0.98", "48.8787, -313.729, -17.4938, 0.84", "48.913, -314.385, -17.3548, 0.7", "48.9425, -315.126, -17.2178, 0.56", "48.9717, -315.778, -17.1199, 0.42", "49.0229, -316.528, -17.0382, 0.28", "49.1068, -317.196, -16.9935, 0.14", "49.2508, -317.927, -16.98, 0.1", "49.431, -318.576, -17.0008, 0.1", "49.6456, -319.213, -17.0041, 0.1", "49.8857, -319.843, -16.992, 0.1", "50.1628, -320.531, -16.9089, 0.1", "50.4092, -321.146, -16.7808, 0.1", "50.9139, -322.414, -16.4236, 0.1", "51.3248, -323.531, -16.0574, 0.56", "51.5274, -324.134, -15.8435, 0.42", "51.8355, -325.358, -15.3159, 0.28", "51.9259, -325.943, -14.9931, 0.14", "51.9836, -326.511, -14.64, 0.1", "52.0215, -327.077, -14.2742, 0.1", "52.0683, -327.655, -13.9362, 0.1", "52.171, -328.88, -13.2457, 0.1", "52.2968, -330.101, -12.6299, 0.1", "52.354, -330.707, -12.3387, 0.14", "52.4164, -331.32, -12.0736, 0.28", "52.4483, -331.629, -11.9421, 0.98", "52.5271, -332.253, -11.7063, 1.12", "52.6052, -332.873, -11.4836, 0.98", "52.6775, -333.579, -11.2218, 0.84", "52.7097, -334.182, -10.9207, 0.7", "52.7446, -335.371, -10.2355, 0.56", "52.7366, -335.919, -9.8675, 0.42", "52.6935, -337.062, -9.03281, 0.28", "52.6725, -337.598, -8.62955, 0.14", "52.6501, -338.703, -7.81123, 0.1", "52.6471, -339.245, -7.43505, 0.1", "52.6577, -340.436, -6.67048, 0.14", "52.667, -341.003, -6.31115, 0.1", "52.7035, -341.591, -5.98253, 0.1", "52.7389, -342.173, -5.67276, 0.14", "52.7721, -342.487, -5.55482, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-9.10271, 82.1821, -4.9974, 0.28", "-9.144, 81.8689, -4.91088, 0.28", "-9.15555, 81.3904, -4.75372, 0.14", "-9.12091, 80.9611, -4.60559, 0.1", "-9.08478, 80.7475, -4.53161, 0.1", "-8.9182, 79.963, -4.26755, 0.1", "-8.81833, 79.4927, -4.10923, 0.1", "-8.69387, 79.0355, -3.93098, 0.1", "-8.54255, 78.5885, -3.73299, 0.1", "-8.37103, 78.1548, -3.53623, 0.1", "-8.27901, 77.9603, -3.45829, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.10271, 82.1821, -4.9974, 0.1", "-9.43874, 82.7425, -5.63749, 0.1", "-9.5938, 83.0274, -5.95368, 0.1", "-9.93068, 83.6142, -6.56912, 0.1", "-10.3972, 84.4263, -7.37013, 0.1", "-10.7104, 84.9244, -7.7905, 0.1", "-11.322, 85.8084, -8.39322, 0.1", "-11.7146, 86.3561, -8.67779, 0.1", "-12.2741, 87.0397, -8.87257, 0.1", "-12.4958, 87.2751, -8.87352, 0.1", "-13.4763, 88.1885, -8.68696, 0.1", "-14.3678, 88.9528, -8.47661, 0.1", "-14.3678, 88.9528, -8.47661, 0.1", "-15.0621, 89.5185, -8.34933, 0.1", "-15.5948, 89.9959, -8.35694, 0.1", "-15.9132, 90.3185, -8.45061, 0.1", "-16.4706, 90.9439, -8.792, 0.1", "-16.7353, 91.2568, -8.99494, 0.1", "-17.139, 91.7462, -9.3252, 0.1", "-17.7982, 92.592, -9.9442, 0.1", "-18.1592, 93.0715, -10.3334, 0.1", "-18.4913, 93.5565, -10.7545, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "35.2784, -221.973, -10.7711, 0.84", "35.4157, -222.261, -10.6128, 0.84", "35.6987, -222.827, -10.3213, 0.98", "35.9909, -223.413, -10.0514, 0.84", "36.6844, -224.67, -9.635, 0.7", "37.0579, -225.345, -9.47696, 0.56", "37.4385, -226.046, -9.36775, 0.42", "37.6003, -226.345, -9.34875, 0.56", "37.9317, -226.975, -9.37463, 0.7", "38.538, -228.175, -9.56115, 0.56", "38.7393, -228.627, -9.65202, 0.84", "38.9927, -229.289, -9.72173, 0.84", "39.2188, -229.961, -9.71061, 0.84", "39.4491, -230.624, -9.61423, 0.84", "39.4491, -230.624, -9.61423, 0.98", "39.9069, -231.784, -9.20115, 0.1", "40.2045, -232.479, -8.95035, 0.14", "40.4689, -233.089, -8.74384, 0.1", "40.7724, -233.798, -8.54148, 0.14", "41.0711, -234.52, -8.38941, 0.28", "41.1992, -234.846, -8.34796, 0.42", "41.3821, -235.303, -8.32952, 0.84", "41.6294, -235.97, -8.3078, 0.84", "41.8679, -236.637, -8.28834, 0.84", "42.0923, -237.309, -8.27287, 0.7", "42.3316, -237.98, -8.25343, 0.56", "42.5171, -238.448, -8.23503, 0.56", "42.6563, -238.771, -8.21946, 0.84", "42.9621, -239.401, -8.23997, 0.84", "43.2898, -240.026, -8.30184, 0.7", "43.6755, -240.705, -8.40148, 0.84", "44.0296, -241.314, -8.51001, 0.7", "44.3882, -241.914, -8.62329, 0.84", "45.1619, -243.171, -8.8579, 0.7", "45.347, -243.47, -8.88617, 0.84", "45.7562, -244.153, -8.88664, 0.7", "46.0982, -244.771, -8.83201, 0.84", "46.4581, -245.471, -8.71051, 0.7", "46.7501, -246.097, -8.55371, 0.56", "47.2989, -247.409, -8.10904, 0.7", "47.5511, -248.036, -7.88356, 0.84", "47.7801, -248.662, -7.64294, 0.98", "47.9983, -249.288, -7.38444, 0.84", "48.0925, -249.603, -7.25542, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "35.2784, -221.973, -10.7711, 1.26", "35.0698, -222.623, -10.8494, 1.26", "34.8918, -223.292, -10.9226, 1.12", "34.8081, -223.711, -10.9628, 0.98", "34.714, -224.396, -11.0198, 0.84", "34.6498, -225.076, -11.0705, 0.7", "34.6174, -225.514, -11.0693, 0.56", "34.6205, -226.129, -11.0152, 0.1", "34.674, -226.739, -10.9141, 0.1", "34.7721, -227.324, -10.7834, 0.1", "34.8483, -227.614, -10.7043, 0.1", "35.1982, -228.658, -10.389, 0.1", "35.3845, -229.207, -10.1763, 0.1", "35.5783, -229.81, -9.91109, 0.1", "35.7325, -230.359, -9.66726, 0.1", "35.8863, -230.979, -9.41406, 0.1", "35.9448, -231.268, -9.31727, 0.1", "36.1371, -232.406, -9.04383, 0.28", "36.199, -232.997, -8.91873, 0.14", "36.2385, -233.68, -8.80118, 0.28", "36.2643, -234.291, -8.71934, 0.42", "36.2899, -234.971, -8.6593, 0.56", "36.3448, -235.586, -8.63476, 0.42", "36.466, -236.269, -8.64794, 0.28", "36.6226, -236.867, -8.64918, 0.14", "36.733, -237.157, -8.64281, 0.28", "36.8566, -237.43, -8.63279, 0.98", "37.1662, -238.051, -8.60427, 0.84", "37.4753, -238.663, -8.57536, 0.7", "37.7703, -239.291, -8.55017, 0.56", "37.9197, -239.693, -8.54209, 0.42", "38.0228, -240.118, -8.50754, 0.1", "38.0938, -240.793, -8.42545, 0.14", "38.0837, -241.403, -8.33318, 0.28", "38.0215, -242.084, -8.21008, 0.42", "37.9192, -242.748, -8.07488, 0.28", "37.7421, -243.907, -7.89968, 0.14", "37.6775, -244.587, -7.83626, 0.1", "37.6775, -244.587, -7.83626, 0.14", "37.6716, -244.884, -7.75995, 0.14", "37.6817, -245.266, -7.56295, 0.14", "37.7187, -246.239, -6.75677, 0.28", "37.7338, -246.696, -6.34066, 0.28", "37.7506, -247.651, -5.51365, 0.42", "37.7644, -248.558, -4.81569, 0.56", "37.7725, -249.587, -4.08897, 0.42", "37.7931, -250.54, -3.4565, 0.28", "37.8073, -251.138, -3.1035, 0.14", "37.9218, -252.398, -2.81582, 0.1", "38.122, -253.475, -3.14736, 0.14", "38.185, -253.746, -3.28515, 0.56", "38.3266, -254.24, -3.62776, 0.42", "38.4815, -254.718, -3.99313, 0.28", "38.6406, -255.199, -4.34555, 0.28", "38.9713, -256.266, -5.00445, 0.14", "39.1098, -256.795, -5.29222, 0.1", "39.3699, -257.888, -5.86964, 0.1", "39.4218, -258.169, -5.98973, 0.14", "39.479, -258.588, -6.10887, 0.28", "39.5267, -259.189, -6.17641, 0.14", "39.5574, -259.882, -6.13611, 0.1", "39.5755, -260.494, -6.0562, 0.14", "39.6155, -261.766, -5.81133, 0.1", "39.6523, -262.373, -5.69965, 0.1", "39.7205, -263.054, -5.58297, 0.1", "39.7965, -263.649, -5.49269, 0.1", "39.8885, -264.259, -5.42089, 0.1", "39.992, -264.867, -5.38357, 0.1", "40.1053, -265.477, -5.39431, 0.1", "40.2111, -266.085, -5.40647, 0.1", "40.2577, -266.392, -5.41398, 0.14", "40.3096, -266.818, -5.42701, 0.1", "40.361, -267.433, -5.4506, 0.14", "40.4066, -268.127, -5.47974, 0.1", "40.4465, -268.746, -5.50588, 0.1", "40.5105, -269.424, -5.5815, 0.1", "40.5886, -270.032, -5.67939, 0.1", "40.6807, -270.704, -5.77289, 0.1", "40.7655, -271.315, -5.84491, 0.1", "40.8489, -271.924, -5.90158, 0.1", "41.0092, -273.176, -5.98398, 0.14", "41.0441, -273.481, -5.99536, 0.28", "41.1313, -274.664, -6.01185, 0.7", "41.1652, -275.273, -6.00448, 0.56", "41.1765, -275.969, -5.98376, 0.42", "41.1765, -276.589, -5.9536, 0.28", "41.1783, -277.273, -5.90698, 0.14", "41.1999, -277.966, -5.89343, 0.1", "41.2468, -278.582, -5.91797, 0.1", "41.3147, -279.261, -5.94176, 0.1", "41.4012, -279.872, -5.95801, 0.1", "41.5084, -280.481, -5.96989, 0.1", "41.5825, -280.782, -5.9715, 0.56", "41.7604, -281.376, -5.96826, 0.42", "41.941, -281.956, -5.96365, 0.28", "42.1214, -282.547, -5.95969, 0.14", "42.2878, -283.145, -5.95898, 0.14", "42.4419, -283.814, -5.96467, 0.28", "42.501, -284.118, -5.96953, 0.42", "42.5711, -284.552, -5.97925, 0.1", "42.6635, -285.23, -5.99804, 0.1", "42.7376, -285.846, -6.01708, 0.1", "42.8176, -286.537, -6.03905, 0.1", "42.9075, -287.151, -6.05475, 0.1", "42.9682, -287.442, -6.0585, 0.14", "43.0511, -287.741, -6.05821, 0.56", "43.2338, -288.331, -6.00109, 0.42", "43.4192, -288.912, -5.90268, 0.28", "43.6304, -289.55, -5.76184, 0.14", "43.8147, -290.126, -5.62066, 0.1", "43.9807, -290.691, -5.43427, 0.1", "44.2892, -291.834, -4.99002, 0.14", "44.424, -292.378, -4.75718, 0.1", "44.5505, -292.935, -4.51273, 0.1", "44.6568, -293.496, -4.2787, 0.1", "44.8475, -294.554, -3.88321, 0.56", "44.9631, -295.144, -3.74398, 0.7", "45.0851, -295.746, -3.65525, 0.56", "45.2058, -296.347, -3.57963, 0.42", "45.3433, -297.014, -3.51986, 0.28", "45.4636, -297.619, -3.49798, 0.14", "45.7129, -298.857, -3.52908, 0.28", "45.9249, -299.978, -3.63402, 0.7", "46.0354, -300.572, -3.7207, 0.56", "46.1502, -301.169, -3.8286, 0.42", "46.2967, -301.822, -4.01168, 0.28", "46.4135, -302.406, -4.17477, 0.14", "46.6168, -303.646, -4.50087, 0.1", "46.6983, -304.234, -4.68248, 0.1", "46.7621, -304.824, -4.85374, 0.1", "46.8669, -306.042, -5.17751, 0.1", "46.9314, -307.195, -5.43049, 0.1", "46.9406, -307.885, -5.52557, 0.1", "46.9178, -308.567, -5.54151, 0.1", "46.9008, -308.874, -5.54399, 0.1", "46.9008, -308.874, -5.54399, 0.1", "46.8962, -309.308, -5.61125, 0.1", "46.9375, -309.905, -5.77578, 0.1", "47.0165, -310.558, -5.96852, 0.1", "47.0957, -311.147, -6.14714, 0.1", "47.2733, -312.387, -6.50886, 0.1", "47.3679, -312.976, -6.66795, 0.1", "47.4762, -313.559, -6.81025, 0.1", "47.5942, -314.153, -6.93421, 0.1", "47.688, -314.577, -6.9999, 0.1", "47.8256, -315.18, -7.05285, 0.1", "47.982, -315.777, -7.05414, 0.1", "48.1298, -316.364, -7.0123, 0.1", "48.2774, -316.962, -6.93176, 0.14", "48.4251, -317.552, -6.82266, 0.28", "48.5778, -318.139, -6.69367, 0.28", "48.7276, -318.792, -6.54083, 0.42", "48.9623, -319.924, -6.27391, 0.56", "49.0742, -320.506, -6.14349, 0.42", "49.1843, -321.105, -6.02412, 0.28", "49.2924, -321.705, -5.92396, 0.14", "49.3778, -322.382, -5.79934, 0.1", "49.4185, -322.979, -5.69683, 0.1", "49.4268, -323.586, -5.56642, 0.1", "49.3792, -324.174, -5.38525, 0.14", "49.3328, -324.462, -5.27979, 0.28", "49.0599, -325.641, -4.80806, 0.1", "48.8897, -326.263, -4.54541, 0.1", "48.5636, -327.313, -4.10097, 0.1", "48.3747, -327.924, -3.85908, 0.1", "48.2173, -328.576, -3.67397, 0.1", "48.1742, -329.0, -3.62642, 0.1", "48.2033, -329.308, -3.65648, 0.14", "48.2692, -329.602, -3.71602, 0.56", "48.4519, -330.172, -3.88022, 0.42", "48.8784, -331.348, -4.22769, 0.28", "49.0787, -331.91, -4.38738, 0.14", "49.2547, -332.487, -4.53526, 0.1", "49.4038, -333.059, -4.7122, 0.14", "49.4657, -333.348, -4.80922, 0.28", "49.5317, -333.75, -4.94403, 0.7", "49.6084, -334.414, -5.13792, 0.56", "49.7194, -335.037, -5.39415, 0.42", "49.9638, -336.045, -5.88036, 0.28", "50.0443, -336.309, -6.01433, 0.1", "50.2349, -336.84, -6.27363, 0.1", "50.4643, -337.364, -6.50767, 0.1", "50.9817, -338.499, -6.88245, 0.1", "51.2161, -339.06, -6.98699, 0.1", "51.4079, -339.647, -7.00909, 0.1", "51.5515, -340.24, -6.99608, 0.1", "51.6629, -340.915, -6.94084, 0.14", "51.7781, -342.084, -6.77611, 0.1", "51.804, -342.764, -6.63939, 0.1", "51.8333, -343.437, -6.51159, 0.1", "51.877, -344.12, -6.4001, 0.1", "51.9518, -344.729, -6.32439, 0.1", "52.0098, -345.022, -6.30423, 0.1", "52.1112, -345.312, -6.32462, 0.1", "52.41, -345.942, -6.40462, 0.1", "52.7003, -346.466, -6.50289, 0.1", "53.0472, -347.05, -6.64402, 0.1", "53.3462, -347.571, -6.78836, 0.1", "53.8846, -348.588, -7.07655, 0.1", "53.8846, -348.588, -7.07655, 0.14", "54.0456, -348.99, -7.17659, 0.28", "54.2486, -349.565, -7.29083, 0.28", "54.4264, -350.151, -7.37029, 0.14", "54.5948, -350.748, -7.40958, 0.1", "54.7499, -351.334, -7.41053, 0.1", "54.8973, -351.936, -7.3705, 0.1", "55.0266, -352.536, -7.29848, 0.1", "55.1317, -353.14, -7.20147, 0.1", "55.206, -353.743, -7.09025, 0.1", "55.2587, -354.347, -6.97149, 0.1", "55.3358, -355.505, -6.74223, 0.1", "55.3764, -356.185, -6.61367, 0.1", "55.4169, -356.793, -6.51067, 0.1", "55.4736, -357.472, -6.46628, 0.1", "55.5449, -358.085, -6.49044, 0.1", "55.6434, -358.692, -6.57395, 0.1", "55.7712, -359.282, -6.70565, 0.1", "55.9169, -359.844, -6.88398, 0.1", "56.2222, -361.045, -7.28584, 0.1", "56.3682, -361.614, -7.47633, 0.1", "56.5064, -362.191, -7.65825, 0.1", "56.6379, -362.774, -7.8153, 0.1", "56.8434, -363.836, -8.02548, 0.1", "57.0418, -364.996, -8.14367, 0.1", "57.1404, -365.606, -8.13926, 0.1", "57.2236, -366.221, -8.12968, 0.1", "57.2872, -366.835, -8.11765, 0.1", "57.339, -367.513, -8.04857, 0.1", "57.3822, -368.121, -7.95177, 0.1", "57.4372, -368.734, -7.86838, 0.1", "57.4949, -369.407, -7.75624, 0.1", "57.5548, -370.086, -7.62671, 0.1", "57.6576, -371.32, -7.37267, 0.1", "57.7049, -371.926, -7.24692, 0.1", "57.735, -372.522, -7.13596, 0.1", "57.7474, -373.135, -7.04262, 0.1", "57.757, -373.442, -7.03415, 0.1", "57.7571, -373.881, -7.05082, 0.1", "57.7393, -374.559, -7.13044, 0.1", "57.7083, -375.251, -7.20316, 0.1", "57.6849, -375.689, -7.20356, 0.1", "57.6437, -376.941, -7.09025, 0.1", "57.64, -378.091, -6.79924, 0.1", "57.6652, -378.672, -6.5809, 0.1", "57.7125, -379.231, -6.32246, 0.1", "57.8486, -380.351, -5.75379, 0.1", "57.9176, -380.888, -5.47223, 0.1", "58.0416, -382.005, -4.89435, 0.1", "58.1044, -382.578, -4.66559, 0.1", "58.1412, -383.163, -4.47173, 0.1", "58.1583, -383.776, -4.37582, 0.14", "58.147, -384.211, -4.36706, 0.1", "58.0991, -384.903, -4.39597, 0.1", "58.0419, -385.581, -4.47181, 0.1", "58.0035, -386.016, -4.51448, 0.1", "57.9188, -387.312, -4.61629, 0.1", "57.8992, -388.493, -4.67973, 0.1", "57.95, -389.106, -4.73827, 0.1", "58.0347, -389.716, -4.77382, 0.1", "58.1527, -390.326, -4.78416, 0.1", "58.2706, -390.929, -4.72176, 0.1", "58.3821, -391.516, -4.59924, 0.1", "58.5832, -392.664, -4.3847, 0.1", "58.7495, -393.801, -4.10499, 0.28", "58.8235, -394.393, -3.93255, 0.28", "58.9651, -395.627, -3.53971, 0.14", "59.0305, -396.217, -3.39757, 0.1", "59.1134, -396.9, -3.29365, 0.14", "59.1574, -397.207, -3.27436, 0.7", "59.2976, -397.796, -3.39588, 0.56", "59.4476, -398.361, -3.60585, 0.56", "59.7555, -399.49, -4.16671, 0.42", "59.8797, -400.03, -4.44598, 0.28", "59.9776, -400.572, -4.72597, 0.14", "60.0986, -401.705, -5.275, 0.1", "60.1142, -402.106, -5.45214, 0.1", "60.0952, -402.75, -5.68621, 0.1", "60.0336, -403.42, -5.85634, 0.1", "59.9703, -403.84, -5.94788, 0.14", "59.8552, -404.506, -6.10498, 0.1", "59.7327, -405.164, -6.2505, 0.1", "59.6089, -405.822, -6.43296, 0.14", "59.4772, -406.459, -6.6479, 0.14", "59.3789, -406.859, -6.8015, 0.28", "59.1106, -407.847, -7.31315, 0.42", "59.1106, -407.847, -7.31315, 0.56", "58.9344, -408.402, -7.67717, 0.56", "58.8157, -408.756, -7.90771, 0.42", "58.5792, -409.475, -8.34412, 0.28", "58.2332, -410.479, -8.8728, 0.42", "58.0205, -411.078, -9.12218, 0.28", "57.8321, -411.688, -9.40063, 0.14", "57.7403, -412.076, -9.58268, 0.1", "57.6919, -412.356, -9.70863, 0.14", "57.6216, -412.987, -9.96962, 0.7", "57.5522, -413.63, -10.1954, 0.56", "57.3964, -414.843, -10.6438, 0.42", "57.3078, -415.416, -10.8576, 0.28", "57.2037, -415.973, -11.1033, 0.14", "57.1405, -416.246, -11.2353, 0.28", "56.9873, -416.847, -11.5296, 0.28", "56.7953, -417.442, -11.8148, 0.14", "56.65, -417.823, -11.9766, 0.1", "56.1269, -419.019, -12.5, 0.1", "55.9586, -419.392, -12.6577, 0.1", "55.71, -419.985, -12.889, 0.1", "55.5643, -420.381, -13.0291, 0.1", "55.3533, -421.012, -13.224, 0.1", "55.1439, -421.648, -13.3759, 0.1", "54.935, -422.296, -13.4541, 0.14", "54.8466, -422.592, -13.4885, 0.28", "54.8466, -422.592, -13.4885, 0.84", "54.8466, -422.592, -13.4885, 0.84", "54.7617, -423.02, -13.5294, 0.28", "54.6528, -423.705, -13.5894, 0.14", "54.5475, -424.378, -13.648, 0.1", "54.4255, -425.06, -13.7106, 0.14", "54.2954, -425.727, -13.7739, 0.1", "54.2311, -426.03, -13.8037, 0.1", "54.0672, -426.702, -13.8742, 0.14", "53.8797, -427.355, -13.9484, 0.28", "53.6, -428.176, -14.0507, 0.14", "53.4418, -428.582, -14.1053, 0.1", "53.273, -428.983, -14.1617, 0.1", "52.9226, -429.769, -14.2764, 0.1", "52.7425, -430.171, -14.3352, 0.1", "52.4045, -430.963, -14.4477, 0.1", "52.2493, -431.37, -14.5017, 0.1", "52.023, -432.011, -14.5832, 0.1", "51.8907, -432.427, -14.6331, 0.1", "51.7007, -433.079, -14.7077, 0.1", "51.5205, -433.747, -14.7813, 0.1", "51.3574, -434.407, -14.8509, 0.1", "51.2559, -434.837, -14.8954, 0.1", "51.1018, -435.51, -14.9639, 0.1", "51.0139, -435.928, -15.0049, 0.1", "50.8787, -436.608, -15.07, 0.1", "50.7553, -437.277, -15.1321, 0.14", "50.6502, -437.956, -15.2426, 0.1", "50.591, -438.623, -15.3772, 0.1", "50.5733, -438.926, -15.4441, 0.1", "50.5414, -439.603, -15.601, 0.1", "50.5116, -440.267, -15.7591, 0.1", "50.4468, -441.532, -16.0649, 0.1", "50.2961, -444.006, -16.6563, 0.1", "50.2345, -444.667, -16.8139, 0.1", "50.1729, -445.096, -16.9138, 0.1", "50.0345, -445.749, -17.0593, 0.1", "49.9035, -446.16, -17.1415, 0.14", "49.6175, -446.78, -17.2775, 0.14", "49.2936, -447.274, -17.4565, 0.28", "48.9156, -447.804, -17.6738, 0.14", "48.5218, -448.323, -17.9128, 0.1", "48.1162, -448.811, -18.1754, 0.1", "47.4135, -449.624, -18.6781, 0.1", "47.233, -449.827, -18.8288, 0.1" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-18.4913, 93.5565, -10.7545, 0.14", "-19.4558, 94.0445, -10.2652, 0.14", "-19.96, 94.2589, -9.95969, 0.1", "-20.2861, 94.4067, -9.7683, 0.14", "-20.79, 94.6631, -9.49645, 0.28", "-21.6579, 95.1599, -9.07819, 0.14", "-23.2883, 96.2018, -8.38973, 0.1", "-23.2883, 96.2018, -8.38973, 0.14", "-23.7828, 96.5358, -8.19614, 0.28", "-24.2684, 96.9121, -8.06932, 0.14", "-24.7188, 97.3551, -8.12412, 0.1", "-24.9335, 97.7686, -8.55528, 0.1", "-24.9695, 97.961, -8.90532, 0.1", "-24.9189, 98.1711, -9.49424, 0.14", "-24.8131, 98.4508, -10.4969, 0.1", "-24.6859, 98.6912, -11.6188, 0.1", "-24.4057, 99.0237, -13.6058, 0.1", "-24.2119, 99.1591, -14.625, 0.1", "-23.6799, 99.3967, -16.5721, 0.1", "-22.7593, 99.6795, -18.4298, 0.1", "-23.6199, 99.4274, -17.8175, 0.1", "-25.4889, 98.8968, -17.0494, 0.14", "-25.744, 98.8255, -16.9561, 0.28", "-26.3103, 98.6802, -16.732, 0.84", "-26.8201, 98.5667, -16.5106, 0.7", "-27.383, 98.576, -16.5506, 0.56", "-28.0752, 99.0957, -17.1382, 0.42", "-28.1825, 99.2764, -17.3287, 0.28", "-28.4073, 99.7486, -17.6751, 0.1", "-28.6202, 100.243, -17.8547, 0.1", "-28.9116, 100.797, -17.8303, 0.1", "-29.2182, 101.229, -17.6351, 0.1", "-29.8403, 101.842, -17.1335, 0.14", "-30.6363, 102.475, -16.515, 0.56", "-31.4467, 102.983, -15.8691, 0.42", "-32.2955, 103.426, -15.23, 0.28", "-33.1014, 103.791, -14.6723, 0.42", "-34.0669, 104.166, -14.0848, 0.56", "-34.7418, 104.396, -13.737, 0.42", "-35.728, 104.71, -13.414, 0.56", "-36.329, 104.88, -13.372, 0.7", "-36.9302, 105.03, -13.5074, 0.84", "-37.4023, 105.14, -13.7963, 0.7", "-37.7987, 105.218, -14.1943, 0.84", "-38.4015, 105.302, -15.0897, 0.7", "-38.6663, 105.329, -15.5906, 0.56", "-38.8788, 105.333, -16.1134, 0.42", "-39.2668, 105.326, -17.2022, 0.28", "-39.4375, 105.322, -17.7401, 0.14", "-39.7616, 105.297, -18.8444, 0.1", "-39.927, 105.264, -19.3831, 0.1", "-40.1749, 105.208, -20.4368, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-18.4913, 93.5565, -10.7545, 0.1", "-18.6638, 93.3405, -8.58429, 0.1", "-18.6961, 93.2082, -7.35011, 0.1", "-18.6721, 93.0716, -6.23341, 0.1", "-18.5135, 92.7265, -3.99425, 0.1", "-18.4436, 92.6175, -3.41186, 0.1", "-18.389, 92.549, -3.11969, 0.1", "-18.129, 92.3298, -2.52619, 0.1", "-17.9017, 92.1527, -2.21804, 0.28", "-17.431, 91.811, -1.86184, 0.14", "-17.1094, 91.5713, -1.73119, 0.1", "-16.4804, 91.0263, -1.4848, 0.1", "-16.4804, 91.0263, -1.4848, 0.14", "-16.4804, 91.0263, -1.4848, 0.28", "-16.1915, 90.7388, -1.37604, 0.14", "-15.707, 90.2968, -1.18885, 0.1", "-15.3804, 90.0441, -1.10234, 0.1", "-14.8132, 89.683, -0.988075, 0.1", "-14.2179, 89.3722, -0.938812, 0.1", "-13.6065, 89.0734, -0.892682, 0.1", "-13.0723, 88.8105, -0.821559, 0.1", "-11.9835, 88.2037, -0.525752, 0.1", "-11.5315, 87.8674, -0.299581, 0.1", "-10.8388, 87.1457, 0.292325, 0.1", "-10.3414, 86.3764, 0.945889, 0.1", "-9.83024, 85.454, 1.67131, 0.1", "-9.3734, 84.5036, 2.32699, 0.1", "-9.11419, 83.9661, 2.64168, 0.1", "-8.93187, 83.6177, 2.81911, 0.1", "-8.58153, 83.0958, 3.06421, 0.1", "-7.78871, 82.2974, 3.36961, 0.1", "-7.25027, 81.9214, 3.52425, 0.1", "-6.29803, 81.4484, 4.00738, 0.1", "-5.49638, 81.1287, 4.72947, 0.1", "-5.11153, 80.9862, 5.18081, 0.1", "-4.38992, 80.7328, 6.15254, 0.1", "-4.04912, 80.6084, 6.64298, 0.1", "-3.3435, 80.3467, 7.63057, 0.1", "-2.84683, 80.1357, 8.29146, 0.1", "-2.57649, 80.006, 8.60887, 0.1", "-2.14768, 79.7814, 9.08936, 0.1", "-1.69356, 79.5434, 9.52592, 0.1", "-1.39485, 79.3955, 9.7997, 0.14", "-1.08267, 79.2715, 10.055, 0.28", "-0.248763, 79.0059, 10.7623, 0.28", "0.20199, 78.8838, 11.1501, 0.14", "0.711987, 78.771, 11.5887, 0.1", "1.17964, 78.6995, 11.9691, 0.1", "1.66374, 78.6604, 12.3208, 0.1", "2.03512, 78.6518, 12.5503, 0.14", "2.03512, 78.6518, 12.5503, 0.28", "2.30886, 78.6419, 12.6845, 0.28", "2.85357, 78.6247, 12.9519, 0.28", "3.40113, 78.5906, 13.2186, 0.14", "3.93665, 78.5563, 13.4794, 0.1", "4.54884, 78.5229, 13.7782, 0.1", "5.16278, 78.481, 14.0769, 0.1", "5.70071, 78.4294, 14.3368, 0.1", "6.31302, 78.3441, 14.6295, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "48.0925, -249.603, -7.25542, 0.84", "47.7614, -250.673, -6.79006, 0.84", "47.4623, -251.863, -6.36863, 0.84", "47.3561, -252.538, -6.16457, 0.98", "47.3053, -253.215, -5.99179, 0.84", "47.3057, -253.659, -5.88749, 0.7", "47.3335, -254.28, -5.74839, 0.7", "47.3994, -254.58, -5.73879, 0.56", "47.6718, -255.221, -5.8865, 0.56", "48.0048, -255.617, -6.23271, 0.7", "48.2602, -255.865, -6.51763, 0.84", "48.2602, -255.865, -6.51763, 0.98", "48.913, -256.513, -7.24685, 1.12", "49.5432, -257.196, -7.95909, 0.98", "50.7414, -258.521, -9.48346, 0.84", "50.6479, -259.516, -8.86759, 0.84", "50.4787, -260.624, -8.21783, 0.7", "50.2894, -261.738, -7.58311, 0.56", "50.2357, -262.006, -7.42044, 0.42", "50.0067, -263.006, -6.77378, 0.1", "49.8725, -263.602, -6.40781, 0.14", "49.8102, -264.281, -6.19822, 0.28", "49.8547, -264.902, -6.22081, 0.42", "49.9246, -265.197, -6.31634, 0.56", "50.0233, -265.47, -6.447, 0.84", "50.5405, -266.44, -7.13369, 0.84", "50.8235, -266.878, -7.49816, 0.84", "51.3509, -267.62, -8.16779, 0.84", "51.5008, -267.819, -8.36626, 0.84", "51.8, -268.203, -8.77187, 0.84", "52.4092, -268.984, -9.59824, 0.7", "52.5573, -269.195, -9.78514, 0.56", "53.1545, -270.079, -10.521, 0.56", "53.407, -270.548, -10.8492, 0.7", "53.6427, -271.025, -11.1924, 0.84", "53.6427, -271.025, -11.1924, 0.84", "53.747, -271.296, -11.3228, 0.98", "53.9661, -271.817, -11.6088, 1.12", "54.4202, -272.917, -12.205, 0.98", "54.6374, -273.446, -12.4838, 0.84", "54.8537, -273.976, -12.7556, 0.84", "55.0733, -274.504, -13.0348, 0.7", "55.4865, -275.461, -13.5741, 0.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "48.0925, -249.603, -7.25542, 1.26", "48.4483, -249.683, -7.4165, 1.26", "49.5041, -249.921, -7.89449, 1.4", "49.8521, -249.999, -8.05203, 1.26", "50.9088, -250.237, -8.53041, 1.12", "51.2567, -250.315, -8.68795, 0.7", "51.6125, -250.395, -8.84902, 0.84" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "47.233, -449.827, -18.8288, 0.1", "46.5611, -449.082, -18.5304, 0.1", "45.9478, -448.249, -18.3699, 0.1", "45.6605, -447.859, -18.2948, 0.1", "45.3335, -447.414, -18.2092, 0.1", "45.0477, -447.026, -18.1344, 0.1", "44.7554, -446.629, -18.058, 0.1", "44.3639, -445.802, -18.1523, 0.1" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "47.233, -449.827, -18.8288, 0.1", "47.1331, -450.402, -19.177, 0.1", "47.0253, -450.996, -19.4867, 0.1", "46.8358, -452.038, -19.9542, 0.1", "46.7003, -452.655, -20.2083, 0.1", "46.5554, -453.266, -20.4377, 0.1", "46.4726, -453.654, -20.601, 0.1", "46.3579, -454.261, -20.8627, 0.1", "46.2381, -454.877, -21.122, 0.1", "46.1151, -455.495, -21.3525, 0.1", "45.9816, -456.132, -21.5542, 0.1", "45.7447, -457.191, -21.8316, 0.1", "45.6526, -457.593, -21.9114, 0.1", "45.4731, -458.249, -21.9502, 0.1", "45.2637, -458.893, -21.9087, 0.1", "44.8473, -460.079, -21.7248, 0.14", "44.6976, -460.471, -21.6368, 0.28", "44.4666, -461.078, -21.4698, 0.14", "44.096, -462.139, -21.1793, 0.1", "43.8256, -462.929, -21.0227, 0.1", "43.6312, -463.578, -20.9532, 0.1", "43.5628, -463.874, -20.9441, 0.14", "43.4606, -464.462, -20.9506, 0.28", "43.4172, -464.759, -20.9602, 0.42", "43.2067, -466.555, -21.0471, 0.83", "43.0009, -468.896, -21.1107, 0.28", "42.908, -470.409, -21.1309, 0.55", "42.689, -474.289, -21.1403, 0.55", "42.6129, -475.899, -21.1115, 0.28", "42.5774, -477.423, -21.0574, 0.55", "42.6043, -479.591, -20.9899, 0.28", "42.6805, -481.081, -20.9584, 0.55", "42.7945, -482.394, -20.9528, 0.28", "43.0414, -484.323, -20.9671, 0.55", "43.3595, -486.693, -21.0065, 0.55", "43.6114, -488.821, -21.0763, 0.28", "43.9097, -491.215, -21.1996, 0.55", "44.1738, -493.392, -21.3338, 0.28", "44.4474, -495.784, -21.5104, 0.55", "44.5442, -497.015, -21.6193, 0.28", "44.5638, -499.669, -21.8547, 0.55", "44.4291, -501.316, -21.9727, 0.28", "44.2108, -502.771, -22.1443, 0.55", "43.9233, -503.997, -22.337, 0.28", "43.6489, -505.029, -22.5286, 0.55", "43.2409, -506.48, -22.8291, 0.28", "42.1975, -509.767, -23.5532, 0.55", "40.7828, -513.793, -24.4727, 0.55", "40.0384, -516.04, -24.9932, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "55.4865, -275.461, -13.5741, 0.7", "55.2572, -276.083, -13.6034, 0.7", "55.1249, -276.486, -13.6215, 0.84", "54.9158, -277.298, -13.6545, 0.7", "54.8376, -277.7, -13.7179, 0.56", "54.7546, -278.277, -13.8469, 0.7", "54.7293, -278.567, -13.9211, 0.56", "54.7466, -278.973, -14.0425, 0.56", "54.8299, -279.516, -14.2754, 0.56", "55.0589, -280.471, -14.7866, 0.7", "55.1215, -280.72, -14.914, 0.84", "55.2378, -281.255, -15.1583, 0.7", "55.3456, -281.808, -15.3574, 0.56", "55.5318, -282.983, -15.6402, 0.42", "55.5318, -282.983, -15.6402, 0.56", "55.6326, -284.125, -15.6267, 0.56", "55.666, -284.781, -15.5417, 0.7", "55.6703, -285.363, -15.4101, 0.56", "55.667, -286.007, -15.2223, 0.7", "55.6589, -286.564, -15.0399, 0.84", "55.6515, -287.143, -14.8823, 0.84", "55.6575, -288.267, -14.6531, 0.84", "55.6686, -288.916, -14.5241, 0.7", "55.6852, -289.506, -14.4181, 0.56", "55.7235, -290.171, -14.3193, 0.56", "55.7786, -290.825, -14.2509, 0.56", "55.8528, -291.417, -14.2218, 0.56", "55.9573, -292.007, -14.1896, 0.7", "56.0664, -292.583, -14.0803, 0.84", "56.1744, -293.145, -13.9087, 0.7", "56.2755, -293.684, -13.693, 0.56", "56.3686, -294.219, -13.4444, 0.56", "56.5107, -295.308, -12.9069, 0.42", "56.6132, -296.332, -12.4005, 0.56", "56.648, -296.873, -12.1503, 0.7", "56.6579, -297.258, -11.9974, 0.56", "56.6518, -297.83, -11.8272, 0.42", "56.6219, -298.49, -11.7098, 0.56", "56.5835, -299.075, -11.731, 0.7", "56.5326, -299.735, -11.8376, 0.56", "56.4643, -300.381, -11.9701, 0.56", "56.3923, -301.03, -12.1234, 0.56", "56.3423, -301.437, -12.2311, 0.7", "56.1971, -302.652, -12.5072, 0.56", "56.1285, -303.309, -12.6214, 0.7", "56.1069, -303.971, -12.632, 0.56", "56.126, -304.266, -12.5785, 0.7", "56.1788, -304.543, -12.4779, 0.7", "56.4803, -305.5, -12.0131, 0.56", "56.6801, -305.991, -11.7321, 0.56", "57.1816, -307.03, -11.2382, 0.42", "57.4461, -307.536, -11.0642, 0.56", "57.7539, -308.12, -10.9442, 0.56", "58.0425, -308.717, -10.9102, 0.56", "58.273, -309.267, -10.9709, 0.42", "58.6314, -310.411, -11.2038, 0.56", "58.737, -310.985, -11.332, 0.42", "58.7493, -311.272, -11.3696, 0.56", "58.6983, -311.94, -11.3878, 0.56", "58.6435, -312.351, -11.3591, 0.7", "58.5462, -313.008, -11.2522, 0.56", "58.3917, -314.109, -10.9751, 0.56", "58.3319, -314.748, -10.8171, 0.42", "58.3242, -315.33, -10.686, 0.28", "58.3793, -315.917, -10.5745, 0.28", "58.4291, -316.207, -10.5347, 0.42", "58.4987, -316.498, -10.5146, 0.56", "58.664, -317.072, -10.5196, 0.56", "58.8394, -317.635, -10.5238, 0.56", "59.0175, -318.205, -10.528, 0.56", "59.1963, -318.777, -10.5322, 0.7", "59.3743, -319.347, -10.5364, 0.56", "59.553, -319.92, -10.5407, 0.56", "59.7399, -320.475, -10.583, 0.7", "59.9303, -321.038, -10.6608, 0.7", "60.1067, -321.588, -10.813, 0.7", "60.2687, -322.122, -11.0239, 0.56", "60.4197, -322.646, -11.2741, 0.56", "60.6906, -323.63, -11.7903, 0.56", "60.7885, -324.004, -11.9646, 0.84", "61.0744, -325.143, -12.4008, 0.84", "61.2087, -325.701, -12.5681, 0.7", "61.3434, -326.276, -12.6708, 0.7", "61.4789, -326.857, -12.6888, 0.7", "61.7605, -328.04, -12.5582, 0.84", "61.9146, -328.598, -12.4624, 0.7", "61.9146, -328.598, -12.4624, 0.84", "62.0799, -329.157, -12.3348, 0.56", "62.2625, -329.72, -12.234, 0.56", "62.4613, -330.28, -12.1789, 0.42", "62.6901, -330.834, -12.1797, 0.56", "62.6901, -330.834, -12.1797, 0.56", "62.8156, -331.102, -12.1538, 0.56", "63.1035, -331.698, -12.0414, 0.56", "63.3565, -332.221, -11.9065, 0.56", "63.6156, -332.816, -11.7345, 0.56", "63.7203, -333.082, -11.6546, 0.7", "64.0974, -334.077, -11.3587, 0.7", "64.3031, -334.615, -11.2023, 0.56", "64.5171, -335.155, -11.0514, 0.42", "64.792, -335.751, -10.9051, 0.28", "64.9259, -336.015, -10.8555, 0.14", "65.1268, -336.386, -10.8143, 0.7", "65.439, -336.971, -10.811, 0.7", "65.6219, -337.354, -10.8101, 0.56", "65.8623, -337.973, -10.8119, 0.42", "65.9396, -338.263, -10.8148, 0.56", "65.9873, -338.684, -10.8229, 0.84", "65.9707, -339.345, -10.7789, 0.7", "65.9039, -340.007, -10.6964, 0.7", "65.8482, -340.427, -10.6285, 0.7", "65.7742, -341.072, -10.5051, 0.56", "65.738, -341.729, -10.3664, 0.7", "65.7792, -342.949, -10.0839, 0.84", "65.8487, -343.525, -9.94097, 0.7", "65.9086, -343.81, -9.86911, 0.56", "66.1096, -344.426, -9.72597, 0.42", "66.3606, -344.961, -9.62458, 0.28", "66.5869, -345.32, -9.61977, 0.28", "66.7686, -345.551, -9.66439, 1.12", "66.957, -345.781, -9.70272, 0.7", "67.3671, -346.298, -9.76782, 0.56", "67.7478, -346.849, -9.81416, 0.42", "68.3314, -347.831, -9.85122, 0.28", "68.5166, -348.213, -9.85009, 0.42", "68.9251, -349.283, -9.8131, 0.56", "69.0919, -349.856, -9.77888, 0.56", "69.2317, -350.501, -9.78, 0.42", "69.3153, -351.092, -9.75776, 0.42", "69.3654, -351.688, -9.71544, 0.28", "69.395, -352.36, -9.70199, 0.28", "69.4227, -352.959, -9.72765, 0.28", "69.4638, -354.061, -9.75962, 0.42", "69.5201, -355.206, -9.77538, 0.42", "69.5451, -355.876, -9.77555, 0.28", "69.5755, -356.538, -9.76661, 0.42", "69.6082, -357.136, -9.7511, 0.28", "69.6455, -357.732, -9.72949, 0.42", "69.6948, -358.326, -9.70098, 0.56", "69.7619, -358.983, -9.71389, 0.56", "69.8292, -359.576, -9.72516, 0.42", "69.8963, -360.243, -9.73834, 0.28", "69.9439, -360.828, -9.75056, 0.28", "69.9678, -361.127, -9.75683, 0.14", "70.0082, -361.549, -9.76529, 0.56", "70.0849, -362.141, -9.77597, 0.42", "70.1857, -362.794, -9.78681, 0.56", "70.2851, -363.382, -9.79609, 0.56", "70.376, -363.975, -9.80597, 0.42", "70.4666, -364.565, -9.8158, 0.28", "70.5654, -365.155, -9.86468, 0.14", "70.6617, -365.738, -9.94648, 0.1", "70.7701, -366.384, -10.0305, 0.14", "70.8727, -367.045, -10.1052, 0.1", "70.9612, -367.623, -10.1561, 0.1", "71.1409, -368.713, -10.2158, 0.1", "71.1409, -368.713, -10.2158, 0.14", "71.3915, -369.79, -10.1874, 0.1", "71.5533, -370.364, -10.1505, 0.14", "71.7281, -370.936, -10.0974, 0.1", "71.9008, -371.504, -10.0346, 0.14", "72.0734, -372.074, -9.96311, 0.28", "72.2347, -372.637, -9.92559, 0.42", "72.3816, -373.218, -9.9319, 0.28", "72.4968, -373.804, -9.94019, 0.28", "72.5725, -374.396, -9.95094, 0.42", "72.5947, -374.695, -9.95732, 0.56", "72.6057, -375.11, -9.96729, 0.42", "72.5845, -375.782, -9.98577, 0.28", "72.5382, -376.451, -10.0056, 0.14", "72.4813, -377.11, -10.0259, 0.1", "72.4562, -377.409, -10.0084, 0.14", "72.4562, -377.409, -10.0084, 0.28", "72.4694, -377.822, -9.91259, 0.56", "72.5112, -378.381, -9.74182, 0.56", "72.5448, -378.659, -9.63228, 0.7", "72.7022, -379.644, -9.15411, 0.56", "72.7902, -380.163, -8.87276, 0.42", "72.8401, -380.418, -8.72142, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "55.4865, -275.461, -13.5741, 2.38", "55.6513, -275.498, -13.5551, 2.38", "56.0178, -275.595, -13.5342, 2.24", "56.3752, -275.726, -13.527, 2.1", "56.7097, -275.893, -13.5214, 1.96", "57.2343, -276.236, -13.512, 1.82", "57.2343, -276.236, -13.512, 1.68", "57.3593, -276.346, -13.5334, 0.1", "57.5882, -276.591, -13.5892, 0.1", "57.8243, -276.878, -13.6456, 0.1", "58.0318, -277.144, -13.6809, 0.1", "58.4689, -277.704, -13.7001, 0.1", "58.7085, -277.993, -13.6997, 0.1", "58.9332, -278.248, -13.6871, 0.1", "59.1906, -278.52, -13.6563, 0.1", "59.3566, -278.69, -13.6229, 0.14", "59.5179, -278.853, -13.5724, 0.28", "59.6871, -279.02, -13.5186, 0.7", "59.959, -279.271, -13.4571, 0.56", "60.1403, -279.429, -13.4485, 0.42", "60.4322, -279.659, -13.5009, 0.28", "60.726, -279.88, -13.5976, 0.14", "61.2652, -280.292, -13.8085, 0.1", "61.3901, -280.392, -13.8647, 0.14", "61.8894, -280.803, -14.1085, 0.1", "62.348, -281.195, -14.3482, 0.14", "62.348, -281.195, -14.3482, 0.28", "62.7649, -281.627, -14.5293, 0.28", "62.9714, -281.89, -14.5781, 0.42", "63.116, -282.081, -14.5944, 0.56", "63.116, -282.081, -14.5944, 0.7", "63.2253, -282.206, -14.6209, 0.84", "63.4849, -282.471, -14.703, 0.7", "63.9797, -282.92, -14.8797, 0.56", "64.2614, -283.15, -14.9903, 0.42", "64.8069, -283.557, -15.1925, 0.28", "64.9411, -283.653, -15.2348, 0.42", "65.1334, -283.774, -15.2942, 0.7", "65.3392, -283.892, -15.3473, 0.56", "65.9576, -284.226, -15.4499, 0.42", "66.293, -284.401, -15.4857, 0.28", "66.6263, -284.574, -15.4931, 0.14", "67.1995, -284.879, -15.4829, 0.28", "67.6187, -285.106, -15.4519, 0.42", "67.825, -285.225, -15.4205, 0.28", "68.2186, -285.47, -15.3159, 0.14", "68.4166, -285.596, -15.2529, 0.28", "68.7027, -285.795, -15.1127, 0.42", "68.9591, -286.002, -14.9359, 0.28", "69.2065, -286.217, -14.7437, 0.14", "69.3567, -286.352, -14.6186, 0.28", "69.5905, -286.57, -14.4131, 0.14", "70.0315, -286.967, -14.0227, 0.14", "70.2737, -287.17, -13.8116, 0.1", "70.4273, -287.292, -13.6826, 0.1", "70.7557, -287.537, -13.426, 0.1", "70.9216, -287.655, -13.3089, 0.14", "71.2042, -287.844, -13.1374, 0.1", "71.4986, -288.021, -12.9898, 0.14", "71.6869, -288.136, -12.8956, 0.28", "71.9761, -288.329, -12.7528, 0.14", "72.1573, -288.46, -12.6645, 0.1", "72.4902, -288.74, -12.467, 0.14", "72.643, -288.892, -12.3609, 0.14", "72.8663, -289.139, -12.1861, 0.28", "73.0822, -289.392, -12.0033, 0.14", "73.2126, -289.553, -11.8869, 0.1", "73.6018, -290.037, -11.5361, 0.14", "73.791, -290.29, -11.3335, 0.28", "73.905, -290.454, -11.1997, 0.14", "74.0624, -290.705, -10.969, 0.1", "74.2077, -290.955, -10.7292, 0.1", "74.3342, -291.206, -10.4725, 0.1", "74.5556, -291.676, -9.98721, 0.14", "74.6503, -291.897, -9.74761, 0.28", "74.8233, -292.321, -9.29016, 0.28", "74.9267, -292.573, -9.02503, 0.14", "75.1361, -293.051, -8.54348, 0.1", "75.2652, -293.314, -8.3078, 0.1", "75.3712, -293.485, -8.17647, 0.14", "75.5623, -293.75, -7.99116, 0.28", "75.7836, -294.022, -7.8346, 0.14", "75.9251, -294.19, -7.75093, 0.1", "76.1679, -294.462, -7.64415, 0.1", "76.3854, -294.743, -7.5232, 0.1", "76.5014, -294.936, -7.43786, 0.1", "76.5014, -294.936, -7.43786, 0.14", "76.5782, -295.24, -7.31295, 0.84", "76.5782, -295.24, -7.31295, 0.7", "76.6211, -295.855, -7.10798, 0.1", "76.6357, -296.174, -7.01682, 0.1", "76.657, -296.504, -6.93916, 0.1", "76.701, -296.832, -6.8711, 0.1", "76.7368, -296.995, -6.84026, 0.1", "76.7891, -297.154, -6.81324, 0.56", "76.9309, -297.458, -6.76815, 0.42", "77.0872, -297.752, -6.71361, 0.28", "77.2735, -298.076, -6.64539, 0.28", "77.3911, -298.275, -6.60164, 0.56", "77.5784, -298.598, -6.53282, 0.42", "77.6941, -298.798, -6.49032, 0.28", "77.7765, -298.943, -6.46038, 0.56", "77.9341, -299.239, -6.40526, 0.42", "78.0822, -299.539, -6.35607, 0.28", "78.2275, -299.841, -6.30868, 0.42", "78.3881, -300.181, -6.25719, 0.56", "78.4614, -300.33, -6.23298, 0.7", "78.5413, -300.478, -6.2047, 0.84", "78.7346, -300.796, -6.13184, 0.7", "78.9436, -301.097, -6.04789, 0.56", "79.1357, -301.364, -5.96951, 0.42", "79.3486, -301.666, -5.88352, 0.28", "79.4773, -301.856, -5.83235, 0.14", "79.676, -302.171, -5.75596, 0.1", "79.9225, -302.573, -5.70445, 0.1", "80.0449, -302.78, -5.69806, 0.84", "80.2131, -303.073, -5.71251, 0.7", "80.3856, -303.36, -5.77023, 0.56", "80.5565, -303.638, -5.856, 0.42", "80.9121, -304.191, -6.0609, 0.28", "81.0009, -304.326, -6.11361, 0.42", "81.093, -304.463, -6.15213, 0.56", "81.473, -305.056, -6.25196, 0.42", "81.644, -305.349, -6.2639, 0.28", "81.8123, -305.683, -6.23437, 0.14", "81.9454, -305.987, -6.16888, 0.1", "82.2076, -306.628, -6.00129, 0.1", "82.3191, -306.934, -5.9089, 0.1", "82.4131, -307.243, -5.80337, 0.1", "82.5074, -307.553, -5.7093, 0.1", "82.5787, -307.776, -5.65358, 0.1", "82.635, -307.933, -5.62402, 0.56", "82.7508, -308.25, -5.5953, 0.42", "82.8613, -308.568, -5.56987, 0.28", "82.9647, -308.885, -5.54835, 0.14", "83.0799, -309.242, -5.52479, 0.1", "83.1867, -309.563, -5.50185, 0.1", "83.313, -309.921, -5.47212, 0.14", "83.4475, -310.233, -5.46029, 0.1", "83.5228, -310.383, -5.46118, 0.1", "83.7071, -310.715, -5.47768, 0.1", "83.8974, -311.038, -5.50606, 0.1", "84.0813, -311.32, -5.53138, 0.1", "84.4466, -311.855, -5.57465, 0.1", "84.537, -311.999, -5.57239, 0.56", "84.7041, -312.291, -5.53902, 0.42", "84.8508, -312.585, -5.48181, 0.28", "85.0033, -312.921, -5.38849, 0.42", "85.1308, -313.209, -5.2831, 0.28", "85.3926, -313.816, -5.01711, 0.14", "85.5456, -314.131, -4.86925, 0.1", "85.6982, -314.396, -4.73427, 0.1", "85.9064, -314.684, -4.59938, 0.1", "86.0557, -314.86, -4.53276, 0.42", "86.3111, -315.126, -4.46334, 0.28", "86.4771, -315.296, -4.42757, 0.14", "86.7743, -315.649, -4.31328, 0.1", "87.0945, -316.147, -4.05019, 0.1", "87.2122, -316.408, -3.8782, 0.14", "87.2981, -316.669, -3.68157, 0.28", "87.3992, -317.189, -3.20407, 0.28", "87.4582, -317.672, -2.71283, 0.14", "87.4984, -318.152, -2.19075, 0.1", "87.5086, -318.263, -2.06252, 0.14", "87.5259, -318.414, -1.87626, 0.28", "87.571, -318.812, -1.36676, 0.7", "87.5914, -319.049, -1.07073, 0.56", "87.6082, -319.291, -0.783808, 0.42", "87.6156, -319.45, -0.60357, 0.56", "87.6303, -319.866, -0.135988, 0.1", "87.6211, -320.325, 0.382027, 0.1", "87.602, -320.797, 0.886856, 0.1", "87.5901, -321.026, 1.1289, 0.1", "87.5858, -321.197, 1.29492, 0.14", "87.5981, -321.38, 1.44949, 0.28", "87.7077, -321.893, 1.7929, 0.28", "87.7797, -322.177, 1.96058, 0.14", "87.8605, -322.505, 2.13419, 0.1", "87.9012, -322.795, 2.30281, 0.1", "87.9237, -323.121, 2.48829, 0.14", "87.9287, -323.27, 2.56946, 0.28", "87.9351, -323.85, 2.85698, 0.1", "87.9328, -324.159, 2.99366, 0.1", "87.9362, -324.817, 3.20833, 0.1", "87.9299, -325.139, 3.31139, 0.1", "87.9248, -325.303, 3.35601, 0.1", "87.9372, -325.535, 3.3898, 0.1", "88.1363, -326.178, 3.23052, 0.1", "88.3913, -326.638, 2.89012, 0.1" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "72.8401, -380.418, -8.72142, 0.28", "74.1007, -380.364, -8.49432, 0.28", "74.8551, -380.333, -8.35842, 0.14", "75.5385, -380.304, -8.23531, 0.1", "76.3049, -380.271, -8.09726, 0.1", "76.6466, -380.257, -8.0357, 0.1" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "72.8401, -380.418, -8.72142, 0.42", "72.9242, -381.034, -8.51115, 0.42", "72.9698, -381.659, -8.30439, 0.28", "72.9818, -382.287, -8.1098, 0.14", "72.9683, -382.912, -7.9364, 0.1", "72.9046, -384.136, -7.63933, 0.14", "72.8466, -384.858, -7.48288, 0.14", "72.7462, -385.564, -7.34539, 0.28", "72.6591, -386.023, -7.2734, 0.28", "72.4927, -386.718, -7.14588, 0.14", "72.3009, -387.421, -7.01739, 0.1", "72.1803, -387.857, -6.95003, 0.14", "71.9929, -388.558, -6.8188, 0.28", "71.8191, -389.262, -6.67102, 0.28", "71.4911, -390.683, -6.35511, 0.14", "71.4023, -391.12, -6.25598, 0.28", "71.2804, -391.834, -6.10423, 0.42", "71.2048, -392.479, -5.9881, 0.56", "71.1873, -392.803, -5.94538, 0.7", "71.198, -393.259, -5.91626, 0.56", "71.2669, -393.915, -5.92705, 0.42", "71.3794, -394.647, -5.93834, 0.56", "71.5031, -395.295, -5.94785, 0.42", "71.6375, -395.926, -5.95683, 0.28", "71.7916, -396.565, -5.96554, 0.28", "71.9661, -397.201, -5.9738, 0.42", "72.1494, -397.832, -5.98177, 0.56", "72.3461, -398.462, -5.98945, 0.56", "72.5415, -399.089, -5.99711, 0.56", "72.7348, -399.709, -6.00466, 0.56", "72.9306, -400.336, -6.0123, 0.56", "73.1264, -400.963, -6.01995, 0.56", "73.3232, -401.593, -6.02763, 0.7", "73.5191, -402.22, -6.03527, 0.56", "73.716, -402.85, -6.04294, 0.56", "73.9083, -403.466, -6.05046, 0.42", "74.1052, -404.096, -6.05814, 0.56", "74.3011, -404.723, -6.06578, 0.42", "74.4978, -405.353, -6.07346, 0.56", "74.6936, -405.98, -6.08111, 0.7", "74.889, -406.607, -6.08875, 0.7", "75.0819, -407.227, -6.09632, 0.56", "75.2769, -407.854, -6.10398, 0.7" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "75.2769, -407.854, -6.10398, 1.12", "75.743, -407.705, -6.22152, 1.12", "76.1681, -407.605, -6.47682, 0.98", "76.1681, -407.605, -6.47682, 0.84", "76.527, -407.553, -6.82591, 0.28", "76.527, -407.553, -6.82591, 0.28", "76.725, -407.5, -6.97398, 0.28", "77.6064, -407.212, -7.48235, 0.14", "78.5375, -406.86, -7.85074, 0.1", "79.3967, -406.482, -8.06911, 0.42", "79.9017, -406.238, -8.14247, 0.28", "80.3499, -406.011, -8.17292, 0.14", "81.2845, -405.509, -8.14385, 0.1", "81.7156, -405.26, -8.07011, 0.1", "82.1855, -404.979, -7.95585, 0.1", "82.6233, -404.731, -7.90137, 0.1", "82.8443, -404.612, -7.87108, 0.1" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "75.2769, -407.854, -6.10398, 0.56", "75.4735, -408.73, -5.94448, 0.56", "75.5515, -409.196, -5.87967, 0.56", "75.6222, -409.663, -5.82892, 0.7", "75.6797, -410.124, -5.78765, 0.56", "75.7356, -410.597, -5.7527, 0.56", "75.8006, -411.127, -5.72031, 0.56", "75.8564, -411.649, -5.72198, 0.56", "75.9007, -412.122, -5.72251, 0.56", "75.9411, -412.654, -5.7216, 0.56", "75.9674, -413.12, -5.71937, 0.42", "75.9941, -413.596, -5.71706, 0.28", "76.0268, -414.129, -5.74976, 0.42", "76.0584, -414.602, -5.80675, 0.56", "76.0921, -415.12, -5.89476, 0.56", "76.1298, -415.644, -5.98425, 0.56", "76.1589, -416.111, -6.06567, 0.42", "76.2156, -416.975, -6.22214, 0.56", "76.265, -417.432, -6.3033, 0.7", "76.3095, -417.664, -6.33608, 0.84", "76.6237, -418.582, -6.38813, 0.84", "76.6237, -418.582, -6.38813, 0.84", "76.7369, -418.788, -6.36749, 0.84", "76.9795, -419.196, -6.32036, 0.7", "77.2599, -419.643, -6.30725, 0.7", "77.5097, -420.047, -6.32009, 0.56", "77.7816, -420.504, -6.35688, 0.56", "78.0194, -420.914, -6.38891, 0.7", "78.2864, -421.37, -6.45795, 0.56", "78.5454, -421.826, -6.52232, 0.7", "78.7706, -422.243, -6.54127, 0.84", "78.9798, -422.671, -6.51696, 0.7", "79.1606, -423.096, -6.40414, 0.84", "79.4528, -423.859, -6.07658, 0.98", "79.7117, -424.631, -5.66737, 0.84", "79.9444, -425.442, -5.18686, 0.7", "80.0613, -425.879, -4.92002, 0.7", "80.2489, -426.722, -4.47624, 0.56", "80.3302, -427.157, -4.2963, 0.7", "80.3954, -427.609, -4.16855, 0.84", "80.4326, -427.937, -4.15501, 0.56", "80.4715, -428.412, -4.16782, 0.56", "80.5512, -429.411, -4.20012, 0.56", "80.5909, -429.875, -4.18752, 0.7", "80.6725, -430.397, -4.11484, 0.56", "80.7573, -430.856, -4.02547, 0.56", "80.9602, -431.808, -3.80962, 0.56", "81.058, -432.257, -3.69278, 0.56", "81.2577, -433.172, -3.42992, 0.7", "81.6569, -435.196, -2.89295, 0.56", "81.752, -435.708, -2.77539, 0.7", "81.8236, -436.17, -2.69288, 0.7", "81.8616, -436.496, -2.65918, 0.56", "81.9019, -437.026, -2.62287, 0.42", "81.9194, -437.553, -2.61842, 0.28", "81.9211, -438.028, -2.58015, 0.42", "81.9469, -438.558, -2.50965, 0.56", "81.995, -439.073, -2.42018, 0.7", "82.0663, -439.534, -2.32871, 0.56", "82.1689, -439.986, -2.22892, 0.7", "82.4075, -440.811, -2.03463, 0.84", "82.5444, -441.262, -1.96065, 0.7", "82.692, -441.712, -1.92956, 0.56", "82.837, -442.155, -1.94632, 0.42", "82.9343, -442.48, -1.99194, 0.56", "82.9939, -442.696, -2.0427, 0.7", "83.2084, -443.63, -2.33507, 0.56", "83.2883, -444.081, -2.46973, 0.56", "83.3511, -444.536, -2.59039, 0.56", "83.392, -445.0, -2.69101, 0.56", "83.4051, -445.226, -2.72572, 0.56", "83.4153, -445.558, -2.78095, 0.98", "83.4291, -446.086, -2.85927, 0.84", "83.4211, -446.534, -2.98828, 0.84", "83.4105, -446.847, -3.11443, 0.28", "83.4009, -447.275, -3.31998, 0.28", "83.3992, -448.152, -3.79373, 0.28", "83.4103, -448.557, -4.04058, 0.28", "83.4871, -449.306, -4.42846, 0.42", "83.561, -449.755, -4.57213, 0.84", "83.6445, -450.216, -4.65262, 0.84", "83.6445, -450.216, -4.65262, 0.7", "83.6445, -450.216, -4.65262, 0.84", "83.9783, -452.275, -4.7424, 0.55", "84.318, -454.371, -4.77477, 0.83", "84.6847, -456.739, -4.80898, 0.83", "84.7617, -457.257, -4.81601, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "84.7617, -457.257, -4.81601, 0.55", "84.0838, -459.041, -4.24704, 0.55", "83.4575, -460.541, -3.83381, 0.83", "82.7877, -462.128, -3.52516, 0.83", "81.8366, -464.381, -3.08682, 0.55", "81.2531, -465.763, -2.81792, 0.28", "80.5291, -467.478, -2.48428, 0.55", "79.9869, -468.888, -2.35243, 0.28", "79.3624, -470.344, -2.34752, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "84.7617, -457.257, -4.81601, 0.83", "84.8996, -459.055, -4.70493, 0.83", "85.0502, -460.334, -4.61609, 0.55", "85.1826, -461.427, -4.53911, 0.83", "85.2853, -462.099, -4.4817, 0.55", "85.5342, -463.558, -4.35223, 0.83", "85.7777, -465.042, -4.22474, 0.83", "86.0512, -466.552, -4.0882, 0.83", "86.4359, -468.59, -3.90489, 0.83", "86.6783, -469.897, -3.77056, 0.83", "86.9056, -471.197, -3.64384, 0.83", "87.4949, -474.401, -3.32031, 0.83", "87.7154, -475.481, -3.22171, 0.55", "88.0995, -477.146, -3.10075, 0.83", "88.3547, -478.103, -3.04169, 0.83", "88.7661, -479.505, -2.9828, 0.55", "89.4125, -481.45, -2.93037, 0.55", "90.0617, -483.143, -2.91301, 0.55", "90.4517, -484.176, -2.94528, 0.55", "90.7464, -484.971, -2.99751, 0.55", "91.2786, -486.524, -3.13131, 0.83", "91.768, -488.126, -3.27966, 0.55", "92.152, -489.576, -3.44434, 0.55", "92.5117, -491.053, -3.61792, 0.55", "93.1145, -493.766, -3.94794, 0.55", "93.2964, -494.623, -4.06118, 0.55", "93.5215, -495.738, -4.21413, 0.55", "94.0206, -498.139, -4.55309, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "94.0206, -498.139, -4.55309, 0.28", "93.9866, -498.584, -5.34123, 0.28", "93.6317, -499.264, -6.51725, 0.55", "93.4412, -499.551, -7.08546, 0.28", "93.2026, -499.925, -7.89336, 0.55", "92.2832, -501.392, -11.2112, 0.28", "92.0432, -501.825, -12.1891, 0.55", "91.1508, -503.059, -15.119, 0.28", "90.7821, -503.459, -16.143, 0.55", "90.3756, -503.843, -17.22, 0.55", "89.9941, -504.176, -18.2602, 0.28", "89.7514, -504.581, -19.4133, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "94.0206, -498.139, -4.55309, 0.55", "94.5434, -500.198, -4.77921, 0.55", "95.4331, -503.703, -5.16401, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_66", "dend_66", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_BTC_070d4f32f0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_51
create dend_61
public dend_61
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_63
create dend_75
public dend_75
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_64
create dend_72
public dend_72
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_65
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.49999994045921775)
    connect dend_0(0), soma_0(0.49999994045921775)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.465097, 8.04727, -0.0175891, 2.59198 ) }
    soma_0 { pt3dadd( 0.424424, 7.2054, -0.0170165, 4.38773 ) }
    soma_0 { pt3dadd( 0.383751, 6.36352, -0.0164438, 5.44399 ) }
    soma_0 { pt3dadd( 0.343077, 5.52165, -0.0158711, 6.50025 ) }
    soma_0 { pt3dadd( 0.302404, 4.67978, -0.0152984, 7.50099 ) }
    soma_0 { pt3dadd( 0.261731, 3.83791, -0.0147257, 8.3937 ) }
    soma_0 { pt3dadd( 0.221058, 2.99604, -0.014153, 9.3444 ) }
    soma_0 { pt3dadd( 0.180384, 2.15416, -0.0135803, 10.2953 ) }
    soma_0 { pt3dadd( 0.139711, 1.31229, -0.0130077, 10.7907 ) }
    soma_0 { pt3dadd( 0.0990378, 0.470419, -0.012435, 10.75 ) }
    soma_0 { pt3dadd( 0.0583646, -0.371454, -0.0118623, 10.6053 ) }
    soma_0 { pt3dadd( 0.0176913, -1.21333, -0.0112896, 10.4607 ) }
    soma_0 { pt3dadd( -0.0229819, -2.0552, -0.0107169, 10.316 ) }
    soma_0 { pt3dadd( -0.0636552, -2.89707, -0.0101442, 9.78436 ) }
    soma_0 { pt3dadd( -0.104328, -3.73894, -0.00957155, 9.07182 ) }
    soma_0 { pt3dadd( -0.145002, -4.58081, -0.00899886, 8.12082 ) }
    soma_0 { pt3dadd( -0.185675, -5.42269, -0.00842618, 7.10426 ) }
    soma_0 { pt3dadd( -0.226348, -6.26456, -0.00785349, 5.9023 ) }
    soma_0 { pt3dadd( -0.267021, -7.10643, -0.0072808, 4.68096 ) }
    soma_0 { pt3dadd( -0.307695, -7.9483, -0.00670812, 3.08046 ) }
    soma_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 1.81235 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.46257, 6.73541, -0.101719, 1.82 ) }
    dend_45 { pt3dadd( -1.57852, 7.33384, 0.980729, 1.82 ) }
    dend_45 { pt3dadd( -1.65692, 7.63789, 1.47923, 1.82 ) }
    dend_45 { pt3dadd( -1.8599, 8.33981, 2.48434, 1.68 ) }
    dend_45 { pt3dadd( -2.07515, 9.04815, 3.42895, 1.82 ) }
    dend_45 { pt3dadd( -2.07515, 9.04815, 3.42895, 1.96 ) }
    dend_45 { pt3dadd( -2.2987, 9.7838, 4.40996, 1.4 ) }
    dend_45 { pt3dadd( -2.44499, 10.1304, 4.8501, 1.26 ) }
    dend_45 { pt3dadd( -2.62925, 10.4868, 5.28551, 1.4 ) }
    dend_45 { pt3dadd( -2.62925, 10.4868, 5.28551, 1.26 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.682563, -8.18459, 0.898281, 2.1 ) }
    dend_0 { pt3dadd( -0.315067, -8.8965, 1.46521, 2.1 ) }
    dend_0 { pt3dadd( 0.0285246, -9.81589, 1.99006, 1.96 ) }
    dend_0 { pt3dadd( 0.186581, -10.3439, 2.21402, 2.1 ) }
    dend_0 { pt3dadd( 0.250779, -10.5853, 2.29775, 1.96 ) }
    dend_0 { pt3dadd( 0.349461, -11.0875, 2.44338, 1.82 ) }
    dend_0 { pt3dadd( 0.425835, -11.6526, 2.58388, 1.68 ) }
    dend_0 { pt3dadd( 0.452058, -12.2449, 2.63339, 1.54 ) }
    dend_0 { pt3dadd( 0.436838, -12.7741, 2.63339, 1.4 ) }
    dend_0 { pt3dadd( 0.422551, -13.0307, 2.63339, 1.4 ) }
    dend_0 { pt3dadd( 0.383928, -13.6243, 2.63339, 2.38 ) }
    dend_0 { pt3dadd( 0.360904, -13.9916, 2.63339, 2.24 ) }
    dend_0 { pt3dadd( 0.347655, -14.5209, 2.63339, 2.38 ) }
    dend_0 { pt3dadd( 0.357433, -15.0529, 2.63339, 2.24 ) }
    dend_0 { pt3dadd( 0.373346, -15.5821, 2.63339, 2.1 ) }
    dend_0 { pt3dadd( 0.398758, -15.9575, 2.63339, 1.96 ) }
    dend_0 { pt3dadd( 0.431842, -16.2214, 2.63339, 1.82 ) }
    dend_0 { pt3dadd( 0.495731, -16.7379, 2.63339, 1.54 ) }
    dend_0 { pt3dadd( 0.553955, -17.2641, 2.63339, 1.68 ) }
    dend_0 { pt3dadd( 0.587333, -17.6375, 2.66574, 1.82 ) }
    dend_0 { pt3dadd( 0.621489, -18.1626, 2.74437, 1.68 ) }
    dend_0 { pt3dadd( 0.652015, -18.6728, 2.84206, 1.68 ) }
    dend_0 { pt3dadd( 0.665853, -19.2426, 3.01231, 1.82 ) }
    dend_0 { pt3dadd( 0.667716, -19.7368, 3.20239, 1.82 ) }
    dend_0 { pt3dadd( 0.651263, -20.7218, 3.71716, 1.82 ) }
    dend_0 { pt3dadd( 0.645191, -21.2322, 4.02602, 1.68 ) }
    dend_0 { pt3dadd( 0.641145, -21.4534, 4.17372, 1.68 ) }
    dend_0 { pt3dadd( 0.627039, -22.276, 4.76626, 1.12 ) }
    dend_0 { pt3dadd( 0.612636, -22.7014, 5.08105, 0.98 ) }
    dend_0 { pt3dadd( 0.55011, -23.6193, 5.71345, 1.12 ) }
    dend_0 { pt3dadd( 0.505945, -24.078, 5.97427, 0.98 ) }
    dend_0 { pt3dadd( 0.479084, -24.3157, 6.09076, 1.12 ) }
    dend_0 { pt3dadd( 0.479084, -24.3157, 6.09076, 1.26 ) }
    dend_0 { pt3dadd( 0.426387, -24.893, 6.19146, 1.26 ) }
    dend_0 { pt3dadd( 0.387055, -25.4859, 6.24567, 1.12 ) }
    dend_0 { pt3dadd( 0.382682, -25.8538, 6.24567, 0.98 ) }
    dend_0 { pt3dadd( 0.410062, -26.3826, 6.24567, 1.12 ) }
    dend_0 { pt3dadd( 0.469193, -26.9114, 6.24567, 1.26 ) }
    dend_0 { pt3dadd( 0.552048, -27.4343, 6.24567, 1.4 ) }
    dend_0 { pt3dadd( 0.677373, -27.9421, 6.24567, 1.26 ) }
    dend_0 { pt3dadd( 0.835879, -28.4473, 6.24567, 1.4 ) }
    dend_0 { pt3dadd( 0.96618, -28.8002, 6.24567, 1.4 ) }
    dend_0 { pt3dadd( 0.96618, -28.8002, 6.24567, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.07222, -23.7727, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.62925, 10.4868, 5.28551, 0.84 ) }
    dend_51 { pt3dadd( -2.64942, 10.986, 4.9324, 0.84 ) }
    dend_51 { pt3dadd( -2.70185, 11.9487, 4.35072, 0.7 ) }
    dend_51 { pt3dadd( -2.7347, 12.4396, 4.09777, 0.84 ) }
    dend_51 { pt3dadd( -2.78664, 13.4592, 3.62278, 0.98 ) }
    dend_51 { pt3dadd( -2.81964, 13.9685, 3.40956, 1.12 ) }
    dend_51 { pt3dadd( -2.8501, 14.4632, 3.19245, 1.26 ) }
    dend_51 { pt3dadd( -2.88584, 14.9736, 2.98232, 1.4 ) }
    dend_51 { pt3dadd( -2.94357, 15.4924, 2.80734, 1.54 ) }
    dend_51 { pt3dadd( -2.98417, 15.7585, 2.7436, 1.68 ) }
    dend_51 { pt3dadd( -3.11463, 16.3625, 2.71896, 1.68 ) }
    dend_51 { pt3dadd( -3.39304, 17.4497, 2.81014, 1.54 ) }
    dend_51 { pt3dadd( -3.56183, 18.0268, 2.92321, 1.4 ) }
    dend_51 { pt3dadd( -3.73547, 18.5308, 3.07106, 1.4 ) }
    dend_51 { pt3dadd( -4.12635, 19.5471, 3.35789, 1.26 ) }
    dend_51 { pt3dadd( -4.50795, 20.4787, 3.5086, 1.12 ) }
    dend_51 { pt3dadd( -4.71621, 20.9866, 3.46837, 0.98 ) }
    dend_51 { pt3dadd( -4.71621, 20.9866, 3.46837, 0.98 ) }
    dend_51 { pt3dadd( -4.81198, 21.3073, 2.94822, 0.7 ) }
    dend_51 { pt3dadd( -4.93617, 21.8434, 2.04706, 0.56 ) }
    dend_51 { pt3dadd( -5.03071, 22.4439, 1.05826, 0.42 ) }
    dend_51 { pt3dadd( -5.07808, 23.0089, 0.169594, 0.56 ) }
    dend_51 { pt3dadd( -5.06562, 24.1144, -1.50068, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( -5.03225, 24.4325, -1.9487, 1.26 ) }
    dend_51 { pt3dadd( -4.97262, 24.8124, -2.42074, 1.12 ) }
    dend_51 { pt3dadd( -4.8952, 25.2645, -2.83831, 0.98 ) }
    dend_51 { pt3dadd( -4.81519, 25.8063, -3.12562, 0.84 ) }
    dend_51 { pt3dadd( -4.78386, 26.8585, -3.18125, 0.7 ) }
    dend_51 { pt3dadd( -4.80737, 27.1225, -3.10236, 0.84 ) }
    dend_51 { pt3dadd( -5.09085, 28.2177, -2.56983, 0.1 ) }
    dend_51 { pt3dadd( -5.56791, 28.9231, -1.94017, 0.1 ) }
    dend_51 { pt3dadd( -5.78291, 29.1063, -1.6822, 0.14 ) }
    dend_51 { pt3dadd( -5.78291, 29.1063, -1.6822, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 10/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.62925, 10.4868, 5.28551, 3.22 ) }
    dend_46 { pt3dadd( -2.47454, 10.7581, 5.0312, 3.22 ) }
    dend_46 { pt3dadd( -2.27446, 11.2136, 4.63275, 3.08 ) }
    dend_46 { pt3dadd( -1.95267, 12.1225, 3.92679, 2.94 ) }
    dend_46 { pt3dadd( -1.8663, 12.4395, 3.70959, 2.8 ) }
    dend_46 { pt3dadd( -1.7497, 12.9401, 3.3454, 2.66 ) }
    dend_46 { pt3dadd( -1.555, 13.8983, 2.65676, 2.52 ) }
    dend_46 { pt3dadd( -1.49067, 14.3651, 2.33689, 2.38 ) }
    dend_46 { pt3dadd( -1.44646, 14.8976, 2.00552, 2.24 ) }
    dend_46 { pt3dadd( -1.41806, 15.4043, 1.74717, 2.1 ) }
    dend_46 { pt3dadd( -1.38769, 16.3218, 1.2363, 1.96 ) }
    dend_46 { pt3dadd( -1.37502, 16.8717, 0.911794, 0.28 ) }
    dend_46 { pt3dadd( -1.34299, 17.4193, 0.608449, 0.42 ) }
    dend_46 { pt3dadd( -1.31029, 17.7603, 0.396707, 0.56 ) }
    dend_46 { pt3dadd( -1.25068, 18.2779, 0.0449053, 0.7 ) }
    dend_46 { pt3dadd( -1.11998, 19.1075, -0.518413, 0.84 ) }
    dend_46 { pt3dadd( -1.08565, 19.3603, -0.638721, 0.84 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 27/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.96618, -28.8002, 6.24567, 1.4 ) }
    dend_14 { pt3dadd( 1.04255, -29.0812, 6.2426, 1.4 ) }
    dend_14 { pt3dadd( 1.16506, -29.6475, 6.23779, 1.54 ) }
    dend_14 { pt3dadd( 1.23801, -30.1912, 6.05092, 1.68 ) }
    dend_14 { pt3dadd( 1.25711, -30.4107, 5.8606, 1.54 ) }
    dend_14 { pt3dadd( 1.27473, -30.8459, 5.47839, 1.4 ) }
    dend_14 { pt3dadd( 1.27473, -30.8459, 5.47839, 1.54 ) }
    dend_14 { pt3dadd( 1.28044, -31.1921, 5.24644, 1.4 ) }
    dend_14 { pt3dadd( 1.28551, -32.2265, 4.66489, 1.26 ) }
    dend_14 { pt3dadd( 1.30643, -33.3121, 4.20185, 1.12 ) }
    dend_14 { pt3dadd( 1.32288, -33.9369, 4.01952, 0.98 ) }
    dend_14 { pt3dadd( 1.34901, -34.5061, 3.91398, 0.84 ) }
    dend_14 { pt3dadd( 1.42619, -35.7029, 3.70994, 0.7 ) }
    dend_14 { pt3dadd( 1.44581, -35.9911, 3.6739, 0.56 ) }
    dend_14 { pt3dadd( 1.47085, -36.5695, 3.64798, 0.56 ) }
    dend_14 { pt3dadd( 1.49434, -37.2197, 3.62426, 0.7 ) }
    dend_14 { pt3dadd( 1.50579, -37.7784, 3.51452, 0.84 ) }
    dend_14 { pt3dadd( 1.51479, -38.9057, 3.14849, 0.98 ) }
    dend_14 { pt3dadd( 1.52101, -39.2854, 2.98926, 0.56 ) }
    dend_14 { pt3dadd( 1.52377, -39.8966, 2.7651, 0.7 ) }
    dend_14 { pt3dadd( 1.52832, -40.45, 2.63051, 0.84 ) }
    dend_14 { pt3dadd( 1.56974, -41.6669, 2.52907, 0.84 ) }
    dend_14 { pt3dadd( 1.60427, -42.2428, 2.58307, 0.98 ) }
    dend_14 { pt3dadd( 1.65783, -42.8044, 2.72751, 1.12 ) }
    dend_14 { pt3dadd( 1.8029, -43.8507, 3.07334, 0.56 ) }
    dend_14 { pt3dadd( 1.99333, -44.938, 3.50901, 0.42 ) }
    dend_14 { pt3dadd( 2.097, -45.4579, 3.74287, 0.42 ) }
    dend_14 { pt3dadd( 2.21622, -45.9812, 3.9688, 0.56 ) }
    dend_14 { pt3dadd( 2.27964, -46.2507, 4.04966, 0.7 ) }
    dend_14 { pt3dadd( 2.34981, -46.5323, 4.07285, 1.12 ) }
    dend_14 { pt3dadd( 2.49586, -47.0762, 3.97005, 1.26 ) }
    dend_14 { pt3dadd( 2.63481, -47.6086, 3.78831, 1.12 ) }
    dend_14 { pt3dadd( 2.90345, -48.6186, 3.54039, 1.12 ) }
    dend_14 { pt3dadd( 2.90345, -48.6186, 3.54039, 1.12 ) }
    dend_14 { pt3dadd( 2.95748, -48.9019, 3.53775, 1.12 ) }
    dend_14 { pt3dadd( 3.03306, -49.4774, 3.58532, 0.98 ) }
    dend_14 { pt3dadd( 3.08306, -50.0469, 3.67987, 1.12 ) }
    dend_14 { pt3dadd( 3.15661, -51.1681, 4.04607, 1.12 ) }
    dend_14 { pt3dadd( 3.19429, -51.7664, 4.30483, 1.26 ) }
    dend_14 { pt3dadd( 3.23422, -52.3603, 4.56879, 1.26 ) }
    dend_14 { pt3dadd( 3.26149, -52.7276, 4.73148, 1.4 ) }
    dend_14 { pt3dadd( 3.27759, -52.989, 4.85226, 1.4 ) }
    dend_14 { pt3dadd( 3.33338, -53.9651, 5.29728, 1.26 ) }
    dend_14 { pt3dadd( 3.37301, -54.5051, 5.50353, 1.26 ) }
    dend_14 { pt3dadd( 3.45103, -55.03, 5.74338, 1.26 ) }
    dend_14 { pt3dadd( 3.56796, -55.5334, 6.00558, 1.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.96618, -28.8002, 6.24567, 2.24 ) }
    dend_1 { pt3dadd( 0.637943, -29.137, 5.26549, 2.24 ) }
    dend_1 { pt3dadd( 0.378461, -29.4901, 4.27193, 2.38 ) }
    dend_1 { pt3dadd( 0.118672, -29.8436, 3.27718, 2.52 ) }
    dend_1 { pt3dadd( 0.0549293, -29.9303, 3.03311, 2.38 ) }
    dend_1 { pt3dadd( -0.211384, -30.2926, 2.01339, 2.24 ) }
    dend_1 { pt3dadd( -0.45544, -30.6247, 1.07889, 2.1 ) }
    dend_1 { pt3dadd( -0.630081, -30.9864, 0.180496, 1.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -2.51991, -53.7378, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -3.24376, -68.7203, -0.00613543, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_51 (entry count 84/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -5.78291, 29.1063, -1.6822, 0.28 ) }
    dend_61 { pt3dadd( -5.61946, 30.3016, -2.14057, 0.28 ) }
    dend_61 { pt3dadd( -5.65392, 31.5639, -2.37139, 0.42 ) }
    dend_61 { pt3dadd( -5.71826, 32.1913, -2.42843, 0.56 ) }
    dend_61 { pt3dadd( -5.81551, 32.8138, -2.44393, 0.56 ) }
    dend_61 { pt3dadd( -5.8743, 33.1249, -2.43939, 0.56 ) }
    dend_61 { pt3dadd( -6.13503, 34.3864, -2.3932, 0.56 ) }
    dend_61 { pt3dadd( -6.31077, 34.9848, -2.28336, 0.7 ) }
    dend_61 { pt3dadd( -6.31077, 34.9848, -2.28336, 0.7 ) }
    dend_61 { pt3dadd( -6.47103, 35.5696, -2.15713, 0.56 ) }
    dend_61 { pt3dadd( -6.56964, 36.1903, -2.0795, 0.42 ) }
    dend_61 { pt3dadd( -6.60522, 36.8192, -2.05887, 0.28 ) }
    dend_61 { pt3dadd( -6.58447, 37.5259, -2.09648, 0.14 ) }
    dend_61 { pt3dadd( -6.52483, 38.1369, -2.17875, 0.1 ) }
    dend_61 { pt3dadd( -6.44375, 38.7511, -2.29383, 0.1 ) }
    dend_61 { pt3dadd( -6.19401, 39.8928, -2.60855, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -6.03094, 40.4714, -2.80778, 0.84 ) }
    dend_61 { pt3dadd( -5.85239, 41.0338, -3.02915, 0.7 ) }
    dend_61 { pt3dadd( -5.46486, 42.1508, -3.53315, 0.56 ) }
    dend_61 { pt3dadd( -5.25888, 42.6854, -3.79567, 0.7 ) }
    dend_61 { pt3dadd( -4.81052, 43.7969, -4.37186, 0.84 ) }
    dend_61 { pt3dadd( -4.81052, 43.7969, -4.37186, 0.98 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 6/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -5.78291, 29.1063, -1.6822, 0.56 ) }
    dend_52 { pt3dadd( -5.67447, 29.3268, -2.54811, 0.56 ) }
    dend_52 { pt3dadd( -5.56479, 29.5427, -3.32881, 0.42 ) }
    dend_52 { pt3dadd( -5.31992, 29.9597, -4.80483, 0.28 ) }
    dend_52 { pt3dadd( -5.17804, 30.1835, -5.58068, 0.14 ) }
    dend_52 { pt3dadd( -4.91394, 30.6313, -7.04373, 0.28 ) }
    dend_52 { pt3dadd( -4.783, 30.8762, -7.78467, 0.42 ) }
    dend_52 { pt3dadd( -4.63424, 31.17, -8.58946, 0.56 ) }
    dend_52 { pt3dadd( -4.37361, 31.7698, -9.98189, 0.42 ) }
    dend_52 { pt3dadd( -4.2447, 32.1342, -10.6724, 0.56 ) }
    dend_52 { pt3dadd( -4.1696, 32.3786, -11.072, 0.84 ) }
    dend_52 { pt3dadd( -4.11876, 32.6394, -11.4088, 0.7 ) }
    dend_52 { pt3dadd( -4.09493, 32.9248, -11.7253, 0.56 ) }
    dend_52 { pt3dadd( -4.10112, 33.2233, -12.0333, 0.42 ) }
    dend_52 { pt3dadd( -4.18507, 33.8045, -12.5629, 0.56 ) }
    dend_52 { pt3dadd( -4.20595, 33.9494, -12.7169, 0.7 ) }
    dend_52 { pt3dadd( -4.24591, 34.2358, -13.093, 1.12 ) }
    dend_52 { pt3dadd( -4.33233, 34.6984, -13.857, 0.98 ) }
    dend_52 { pt3dadd( -4.40072, 35.0175, -14.6091, 0.84 ) }
    dend_52 { pt3dadd( -4.45354, 35.1618, -15.058, 0.7 ) }
    dend_52 { pt3dadd( -4.56403, 35.3536, -15.8177, 0.84 ) }
    dend_52 { pt3dadd( -4.61566, 35.4199, -16.1022, 0.56 ) }
    dend_52 { pt3dadd( -4.70521, 35.5051, -16.567, 0.42 ) }
    dend_52 { pt3dadd( -4.92153, 35.6707, -17.3977, 0.56 ) }
    dend_52 { pt3dadd( -5.10667, 35.8155, -17.9537, 0.28 ) }
    dend_52 { pt3dadd( -5.39604, 36.076, -18.6752, 0.14 ) }
    dend_52 { pt3dadd( -5.6493, 36.3319, -19.1552, 0.1 ) }
    dend_52 { pt3dadd( -6.00689, 36.7736, -19.746, 0.14 ) }
    dend_52 { pt3dadd( -6.21761, 37.0809, -20.0488, 0.28 ) }
    dend_52 { pt3dadd( -6.35952, 37.291, -20.2153, 0.14 ) }
    dend_52 { pt3dadd( -6.57829, 37.6342, -20.4592, 0.1 ) }
    dend_52 { pt3dadd( -6.72945, 37.8691, -20.5775, 0.14 ) }
    dend_52 { pt3dadd( -6.93419, 38.2188, -20.7117, 0.84 ) }
    dend_52 { pt3dadd( -7.08961, 38.4767, -20.7479, 0.98 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -1.08565, 19.3603, -0.638721, 1.4 ) }
    dend_48 { pt3dadd( -1.14177, 20.3748, -0.631178, 1.4 ) }
    dend_48 { pt3dadd( -1.23225, 20.8972, -0.680418, 1.4 ) }
    dend_48 { pt3dadd( -1.37704, 21.3998, -0.824606, 1.26 ) }
    dend_48 { pt3dadd( -1.52402, 21.8354, -0.97546, 1.12 ) }
    dend_48 { pt3dadd( -1.60108, 22.0495, -1.05046, 0.98 ) }
    dend_48 { pt3dadd( -1.92763, 22.9322, -1.3444, 0.84 ) }
    dend_48 { pt3dadd( -2.10365, 23.3379, -1.51289, 0.7 ) }
    dend_48 { pt3dadd( -2.49507, 24.2037, -1.87051, 0.56 ) }
    dend_48 { pt3dadd( -2.67235, 24.6211, -2.0323, 0.56 ) }
    dend_48 { pt3dadd( -2.82374, 25.0565, -2.17917, 0.42 ) }
    dend_48 { pt3dadd( -2.9356, 25.501, -2.29707, 0.56 ) }
    dend_48 { pt3dadd( -2.96619, 25.7378, -2.33567, 0.7 ) }
    dend_48 { pt3dadd( -2.98932, 26.2174, -2.39566, 0.56 ) }
    dend_48 { pt3dadd( -2.97111, 26.7581, -2.43661, 0.56 ) }
    dend_48 { pt3dadd( -2.89728, 27.2851, -2.45618, 0.7 ) }
    dend_48 { pt3dadd( -2.82482, 27.6237, -2.45832, 0.56 ) }
    dend_48 { pt3dadd( -2.68891, 28.1385, -2.45088, 0.56 ) }
    dend_48 { pt3dadd( -2.54157, 28.6604, -2.43435, 0.56 ) }
    dend_48 { pt3dadd( -2.44224, 28.9797, -2.42275, 0.42 ) }
    dend_48 { pt3dadd( -2.11958, 30.0294, -2.43785, 0.56 ) }
    dend_48 { pt3dadd( -1.97222, 30.5415, -2.47442, 0.7 ) }
    dend_48 { pt3dadd( -1.88146, 30.8681, -2.5207, 0.56 ) }
    dend_48 { pt3dadd( -1.74302, 31.3701, -2.63229, 0.42 ) }
    dend_48 { pt3dadd( -1.62952, 31.8638, -2.82646, 0.28 ) }
    dend_48 { pt3dadd( -1.48751, 32.639, -3.24527, 0.14 ) }
    dend_48 { pt3dadd( -1.42461, 33.076, -3.54303, 0.56 ) }
    dend_48 { pt3dadd( -1.34078, 33.5268, -3.8301, 0.42 ) }
    dend_48 { pt3dadd( -1.27523, 33.8157, -3.99457, 0.56 ) }
    dend_48 { pt3dadd( -0.975942, 34.7935, -4.38242, 0.7 ) }
    dend_48 { pt3dadd( -0.856406, 35.108, -4.4447, 0.56 ) }
    dend_48 { pt3dadd( -0.72443, 35.4236, -4.44802, 0.42 ) }
    dend_48 { pt3dadd( -0.333353, 36.3534, -4.37204, 0.98 ) }
    dend_48 { pt3dadd( -0.217496, 36.6742, -4.34527, 0.98 ) }
    dend_48 { pt3dadd( 0.0994131, 37.6311, -4.27003, 0.84 ) }
    dend_48 { pt3dadd( 0.188631, 37.9657, -4.26698, 0.84 ) }
    dend_48 { pt3dadd( 0.280049, 38.4935, -4.34229, 0.98 ) }
    dend_48 { pt3dadd( 0.329898, 39.012, -4.4604, 0.84 ) }
    dend_48 { pt3dadd( 0.384055, 39.994, -4.71226, 0.7 ) }
    dend_48 { pt3dadd( 0.408456, 40.3245, -4.7584, 0.56 ) }
    dend_48 { pt3dadd( 0.515817, 41.3336, -4.80911, 0.7 ) }
    dend_48 { pt3dadd( 0.515817, 41.3336, -4.80911, 0.84 ) }
    dend_48 { pt3dadd( 0.795765, 42.2079, -4.44938, 0.84 ) }
    dend_48 { pt3dadd( 1.14148, 43.0414, -3.9921, 0.7 ) }
    dend_48 { pt3dadd( 1.49746, 43.7126, -3.52369, 0.56 ) }
    dend_48 { pt3dadd( 1.60474, 43.8886, -3.397, 0.56 ) }
    dend_48 { pt3dadd( 1.88014, 44.2593, -3.11533, 0.98 ) }
    dend_48 { pt3dadd( 2.18106, 44.6336, -2.88163, 0.84 ) }
    dend_48 { pt3dadd( 2.33286, 44.8056, -2.80473, 0.98 ) }
    dend_48 { pt3dadd( 2.96088, 45.4527, -2.61277, 0.42 ) }
    dend_48 { pt3dadd( 3.33514, 45.8353, -2.53407, 0.56 ) }
    dend_48 { pt3dadd( 4.02135, 46.5644, -2.38589, 0.7 ) }
    dend_48 { pt3dadd( 4.37356, 46.96, -2.31003, 0.56 ) }
    dend_48 { pt3dadd( 4.51726, 47.1527, -2.28242, 0.7 ) }
    dend_48 { pt3dadd( 4.73802, 47.582, -2.24969, 0.84 ) }
    dend_48 { pt3dadd( 4.85738, 48.0399, -2.25277, 0.56 ) }
    dend_48 { pt3dadd( 4.9073, 48.5211, -2.26047, 0.42 ) }
    dend_48 { pt3dadd( 4.89934, 49.002, -2.28439, 0.28 ) }
    dend_48 { pt3dadd( 4.86876, 49.5418, -2.30003, 0.42 ) }
    dend_48 { pt3dadd( 4.82493, 50.0107, -2.3462, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_48 { pt3dadd( 4.77394, 50.4855, -2.4241, 0.7 ) }
    dend_48 { pt3dadd( 4.75698, 50.7201, -2.48097, 0.56 ) }
    dend_48 { pt3dadd( 4.73977, 51.2384, -2.64018, 0.84 ) }
    dend_48 { pt3dadd( 4.75215, 51.7385, -2.82273, 0.84 ) }
    dend_48 { pt3dadd( 4.8337, 52.5915, -3.17463, 0.7 ) }
    dend_48 { pt3dadd( 4.91857, 53.0699, -3.39247, 0.56 ) }
    dend_48 { pt3dadd( 5.02352, 53.5527, -3.61278, 0.7 ) }
    dend_48 { pt3dadd( 5.09338, 53.8586, -3.74071, 0.7 ) }
    dend_48 { pt3dadd( 5.22012, 54.3515, -3.92418, 0.84 ) }
    dend_48 { pt3dadd( 5.34143, 54.8375, -4.11245, 0.7 ) }
    dend_48 { pt3dadd( 5.39631, 55.0652, -4.17288, 0.56 ) }
    dend_48 { pt3dadd( 5.49543, 55.5345, -4.23667, 0.42 ) }
    dend_48 { pt3dadd( 5.57258, 56.063, -4.23308, 0.28 ) }
    dend_48 { pt3dadd( 5.6113, 56.5982, -4.16409, 0.14 ) }
    dend_48 { pt3dadd( 5.6034, 57.4976, -3.95486, 0.28 ) }
    dend_48 { pt3dadd( 5.55278, 58.4758, -3.67507, 0.1 ) }
    dend_48 { pt3dadd( 5.49751, 59.4144, -3.39592, 0.1 ) }
    dend_48 { pt3dadd( 5.47833, 59.8786, -3.26067, 0.1 ) }
    dend_48 { pt3dadd( 5.47103, 60.1098, -3.19822, 0.14 ) }
    dend_48 { pt3dadd( 5.45998, 60.58, -3.0847, 0.84 ) }
    dend_48 { pt3dadd( 5.46325, 61.1125, -2.98125, 0.7 ) }
    dend_48 { pt3dadd( 5.46312, 61.6448, -2.96458, 0.7 ) }
    dend_48 { pt3dadd( 5.46345, 62.1864, -2.99633, 0.56 ) }
    dend_48 { pt3dadd( 5.47072, 62.7177, -3.03107, 0.56 ) }
    dend_48 { pt3dadd( 5.47517, 62.959, -3.04745, 0.7 ) }
    dend_48 { pt3dadd( 5.48077, 63.2003, -3.06441, 0.84 ) }
    dend_48 { pt3dadd( 5.47831, 63.681, -3.09116, 0.56 ) }
    dend_48 { pt3dadd( 5.46681, 64.2128, -3.11621, 0.42 ) }
    dend_48 { pt3dadd( 5.45656, 64.6937, -3.13894, 0.56 ) }
    dend_48 { pt3dadd( 5.45023, 65.2338, -3.16716, 0.42 ) }
    dend_48 { pt3dadd( 5.44311, 65.7672, -3.19457, 0.28 ) }
    dend_48 { pt3dadd( 5.42786, 66.2504, -3.21484, 0.42 ) }
    dend_48 { pt3dadd( 5.40522, 66.7921, -3.2347, 0.28 ) }
    dend_48 { pt3dadd( 5.38691, 67.126, -3.24469, 0.42 ) }
    dend_48 { pt3dadd( 5.34841, 67.6671, -3.25631, 0.56 ) }
    dend_48 { pt3dadd( 5.30163, 68.1486, -3.26017, 0.56 ) }
    dend_48 { pt3dadd( 5.23452, 68.617, -3.25273, 0.42 ) }
    dend_48 { pt3dadd( 5.14543, 69.0922, -3.23431, 0.56 ) }
    dend_48 { pt3dadd( 5.01423, 69.6173, -3.197, 0.7 ) }
    dend_48 { pt3dadd( 4.85831, 70.0753, -3.18676, 0.84 ) }
    dend_48 { pt3dadd( 4.85831, 70.0753, -3.18676, 0.7 ) }
    dend_48 { pt3dadd( 4.64859, 70.566, -3.22639, 0.28 ) }
    dend_48 { pt3dadd( 4.46564, 71.0079, -3.28164, 0.14 ) }
    dend_48 { pt3dadd( 4.29031, 71.4453, -3.34614, 0.1 ) }
    dend_48 { pt3dadd( 3.91008, 72.3316, -3.54552, 0.14 ) }
    dend_48 { pt3dadd( 3.72635, 72.7637, -3.66254, 0.28 ) }
    dend_48 { pt3dadd( 3.52257, 73.2347, -3.83856, 0.42 ) }
    dend_48 { pt3dadd( 3.33831, 73.6998, -4.02102, 0.56 ) }
    dend_48 { pt3dadd( 3.17924, 74.1254, -4.18033, 0.56 ) }
    dend_48 { pt3dadd( 2.87126, 75.0177, -4.46507, 0.56 ) }
    dend_48 { pt3dadd( 2.7318, 75.4678, -4.56374, 0.56 ) }
    dend_48 { pt3dadd( 2.46317, 76.3056, -4.71053, 0.7 ) }
    dend_48 { pt3dadd( 2.12012, 77.2127, -4.88814, 1.12 ) }
    dend_48 { pt3dadd( 1.93129, 77.6486, -4.96665, 0.98 ) }
    dend_48 { pt3dadd( 1.73493, 78.0869, -5.0259, 0.84 ) }
    dend_48 { pt3dadd( 1.53017, 78.5223, -5.04367, 0.7 ) }
    dend_48 { pt3dadd( 1.31093, 78.9415, -5.05256, 0.56 ) }
    dend_48 { pt3dadd( 0.868108, 79.6754, -5.11052, 0.42 ) }
    dend_48 { pt3dadd( 0.55788, 80.1157, -5.20737, 0.28 ) }
    dend_48 { pt3dadd( 0.290076, 80.4996, -5.2774, 0.14 ) }
    dend_48 { pt3dadd( -0.00159303, 80.9587, -5.33741, 0.1 ) }
    dend_48 { pt3dadd( -0.205652, 81.3856, -5.33041, 0.1 ) }
    dend_48 { pt3dadd( -0.470315, 82.3225, -5.1818, 0.14 ) }
    dend_48 { pt3dadd( -0.470315, 82.3225, -5.1818, 0.28 ) }
    dend_48 { pt3dadd( -0.484326, 83.271, -4.91291, 0.28 ) }
    dend_48 { pt3dadd( -0.446993, 83.7914, -4.76405, 0.42 ) }
    dend_48 { pt3dadd( -0.311766, 84.7588, -4.50427, 0.56 ) }
    dend_48 { pt3dadd( -0.221225, 85.2779, -4.3753, 0.56 ) }
    dend_48 { pt3dadd( -0.180026, 85.5102, -4.32147, 0.7 ) }
    dend_48 { pt3dadd( -0.108679, 86.0325, -4.24676, 0.7 ) }
    dend_48 { pt3dadd( -0.0673908, 86.573, -4.22376, 0.56 ) }
    dend_48 { pt3dadd( -0.0615275, 87.1045, -4.25596, 0.42 ) }
    dend_48 { pt3dadd( -0.0971641, 87.6387, -4.34386, 0.28 ) }
    dend_48 { pt3dadd( -0.150932, 88.1109, -4.43456, 0.42 ) }
    dend_48 { pt3dadd( -0.249738, 88.6174, -4.57232, 0.28 ) }
    dend_48 { pt3dadd( -0.368038, 89.062, -4.72201, 0.14 ) }
    dend_48 { pt3dadd( -0.639376, 89.8915, -5.0323, 0.1 ) }
    dend_48 { pt3dadd( -0.7878, 90.3122, -5.19726, 0.1 ) }
    dend_48 { pt3dadd( -0.935227, 90.7391, -5.36411, 0.14 ) }
    dend_48 { pt3dadd( -1.22217, 91.625, -5.68825, 0.28 ) }
    dend_48 { pt3dadd( -1.36644, 92.1237, -5.84588, 0.14 ) }
    dend_48 { pt3dadd( -1.475, 92.5735, -5.95581, 0.28 ) }
    dend_48 { pt3dadd( -1.57172, 93.1012, -6.03656, 0.42 ) }
    dend_48 { pt3dadd( -1.64925, 93.6324, -6.10355, 0.42 ) }
    dend_48 { pt3dadd( -1.69669, 94.1015, -6.14371, 0.28 ) }
    dend_48 { pt3dadd( -1.72439, 94.6415, -6.16085, 0.42 ) }
    dend_48 { pt3dadd( -1.74368, 95.1222, -6.17889, 0.56 ) }
    dend_48 { pt3dadd( -1.75269, 95.654, -6.20523, 0.56 ) }
    dend_48 { pt3dadd( -1.75742, 95.8933, -6.21673, 0.7 ) }
    dend_48 { pt3dadd( -1.77222, 96.4335, -6.24056, 0.56 ) }
    dend_48 { pt3dadd( -1.79268, 96.9668, -6.26107, 0.42 ) }
    dend_48 { pt3dadd( -1.84662, 97.5031, -6.30706, 0.56 ) }
    dend_48 { pt3dadd( -1.9293, 98.0269, -6.37094, 0.7 ) }
    dend_48 { pt3dadd( -2.03214, 98.4949, -6.43789, 0.84 ) }
    dend_48 { pt3dadd( -2.15022, 98.9558, -6.51212, 0.7 ) }
    dend_48 { pt3dadd( -2.2895, 99.4121, -6.59296, 0.84 ) }
    dend_48 { pt3dadd( -2.59298, 100.332, -6.7685, 0.7 ) }
    dend_48 { pt3dadd( -2.73819, 100.785, -6.85908, 0.56 ) }
    dend_48 { pt3dadd( -2.80053, 101.011, -6.90675, 0.56 ) }
    dend_48 { pt3dadd( -2.88273, 101.525, -7.02058, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -2.88273, 101.525, -7.02058, 0.56 ) }
    dend_48 { pt3dadd( -2.84977, 102.064, -7.06708, 0.14 ) }
    dend_48 { pt3dadd( -2.76993, 102.59, -7.04466, 0.1 ) }
    dend_48 { pt3dadd( -2.72049, 102.927, -7.00897, 0.1 ) }
    dend_48 { pt3dadd( -2.65032, 103.595, -6.89803, 0.1 ) }
    dend_48 { pt3dadd( -2.64054, 103.831, -6.84538, 0.14 ) }
    dend_48 { pt3dadd( -2.70154, 104.797, -6.66563, 0.28 ) }
    dend_48 { pt3dadd( -2.74484, 105.032, -6.62844, 0.42 ) }
    dend_48 { pt3dadd( -2.91968, 105.538, -6.61231, 0.56 ) }
    dend_48 { pt3dadd( -3.13407, 105.964, -6.69203, 0.7 ) }
    dend_48 { pt3dadd( -3.36596, 106.359, -6.81275, 0.56 ) }
    dend_48 { pt3dadd( -3.83558, 107.161, -7.14235, 0.42 ) }
    dend_48 { pt3dadd( -4.05413, 107.539, -7.34486, 0.28 ) }
    dend_48 { pt3dadd( -4.47325, 108.321, -7.77403, 0.42 ) }
    dend_48 { pt3dadd( -4.82999, 109.074, -8.1763, 0.56 ) }
    dend_48 { pt3dadd( -5.18153, 109.913, -8.55171, 0.56 ) }
    dend_48 { pt3dadd( -5.38059, 110.376, -8.72426, 0.42 ) }
    dend_48 { pt3dadd( -5.47077, 110.595, -8.77297, 0.28 ) }
    dend_48 { pt3dadd( -5.68327, 111.081, -8.84664, 0.1 ) }
    dend_48 { pt3dadd( -5.87945, 111.522, -8.87339, 0.1 ) }
    dend_48 { pt3dadd( -6.08926, 111.955, -8.89402, 0.1 ) }
    dend_48 { pt3dadd( -6.59289, 112.828, -9.01723, 0.1 ) }
    dend_48 { pt3dadd( -6.85402, 113.229, -9.07292, 0.1 ) }
    dend_48 { pt3dadd( -7.11993, 113.62, -9.12111, 0.14 ) }
    dend_48 { pt3dadd( -7.38211, 114.021, -9.16733, 0.28 ) }
    dend_48 { pt3dadd( -7.51803, 114.218, -9.20282, 0.42 ) }
    dend_48 { pt3dadd( -7.77725, 114.607, -9.27676, 0.56 ) }
    dend_48 { pt3dadd( -8.04562, 115.066, -9.34258, 0.84 ) }
    dend_48 { pt3dadd( -8.28264, 115.472, -9.40972, 0.7 ) }
    dend_48 { pt3dadd( -8.51485, 115.889, -9.47455, 0.56 ) }
    dend_48 { pt3dadd( -8.96885, 116.756, -9.58661, 0.42 ) }
    dend_48 { pt3dadd( -9.18196, 117.188, -9.63153, 0.28 ) }
    dend_48 { pt3dadd( -9.37131, 117.631, -9.6393, 0.14 ) }
    dend_48 { pt3dadd( -9.52683, 118.088, -9.61645, 0.28 ) }
    dend_48 { pt3dadd( -9.64218, 118.544, -9.56029, 0.42 ) }
    dend_48 { pt3dadd( -9.71564, 119.014, -9.47248, 0.56 ) }
    dend_48 { pt3dadd( -9.73394, 119.246, -9.41517, 0.56 ) }
    dend_48 { pt3dadd( -9.76326, 120.206, -9.19364, 0.56 ) }
    dend_48 { pt3dadd( -9.75567, 120.738, -9.08829, 0.42 ) }
    dend_48 { pt3dadd( -9.74572, 121.269, -9.04057, 0.56 ) }
    dend_48 { pt3dadd( -9.73654, 121.811, -9.04326, 0.42 ) }
    dend_48 { pt3dadd( -9.72696, 122.286, -9.07199, 0.28 ) }
    dend_48 { pt3dadd( -9.72622, 122.624, -9.12006, 0.14 ) }
    dend_48 { pt3dadd( -9.75019, 123.145, -9.27054, 0.14 ) }
    dend_48 { pt3dadd( -9.82536, 124.097, -9.60307, 0.28 ) }
    dend_48 { pt3dadd( -9.82536, 124.097, -9.60307, 0.42 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 46/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.08565, 19.3603, -0.638721, 1.26 ) }
    dend_47 { pt3dadd( -0.489727, 19.9049, -1.40784, 1.26 ) }
    dend_47 { pt3dadd( -0.287978, 20.0645, -1.68133, 1.4 ) }
    dend_47 { pt3dadd( -0.012986, 20.3136, -2.13652, 1.54 ) }
    dend_47 { pt3dadd( 0.223778, 20.5512, -2.54478, 1.4 ) }
    dend_47 { pt3dadd( 0.676536, 21.0044, -3.28563, 1.26 ) }
    dend_47 { pt3dadd( 1.17779, 21.5431, -4.0772, 1.12 ) }
    dend_47 { pt3dadd( 1.41659, 21.8043, -4.47305, 0.98 ) }
    dend_47 { pt3dadd( 1.93431, 22.4145, -5.36746, 0.84 ) }
    dend_47 { pt3dadd( 2.09285, 22.6148, -5.64264, 0.7 ) }
    dend_47 { pt3dadd( 2.31259, 22.9312, -6.00427, 0.56 ) }
    dend_47 { pt3dadd( 2.57037, 23.3339, -6.35617, 0.7 ) }
    dend_47 { pt3dadd( 2.82556, 23.7781, -6.6573, 0.56 ) }
    dend_47 { pt3dadd( 3.28732, 24.642, -7.18078, 0.7 ) }
    dend_47 { pt3dadd( 3.40215, 24.8525, -7.29489, 0.7 ) }
    dend_47 { pt3dadd( 3.64795, 25.3229, -7.56073, 0.1 ) }
    dend_47 { pt3dadd( 3.78751, 25.6184, -7.72824, 0.1 ) }
    dend_47 { pt3dadd( 4.07963, 26.2281, -8.06534, 0.1 ) }
    dend_47 { pt3dadd( 4.07963, 26.2281, -8.06534, 0.14 ) }
    dend_47 { pt3dadd( 4.34176, 26.9299, -8.16273, 0.1 ) }
    dend_47 { pt3dadd( 4.46519, 27.2726, -8.2092, 0.1 ) }
    dend_47 { pt3dadd( 4.60323, 27.6182, -8.25928, 0.1 ) }
    dend_47 { pt3dadd( 4.71185, 27.8574, -8.29703, 0.1 ) }
    dend_47 { pt3dadd( 4.95834, 28.3659, -8.47912, 0.7 ) }
    dend_47 { pt3dadd( 5.11871, 28.6631, -8.62332, 0.56 ) }
    dend_47 { pt3dadd( 5.48183, 29.243, -8.94364, 0.42 ) }
    dend_47 { pt3dadd( 5.66513, 29.52, -9.10016, 0.28 ) }
    dend_47 { pt3dadd( 5.97393, 29.9613, -9.34977, 0.42 ) }
    dend_47 { pt3dadd( 6.50737, 30.6742, -9.75617, 0.98 ) }
    dend_47 { pt3dadd( 6.86319, 31.0798, -10.0038, 0.84 ) }
    dend_47 { pt3dadd( 7.19532, 31.4309, -10.2173, 0.7 ) }
    dend_47 { pt3dadd( 7.4422, 31.676, -10.3586, 0.56 ) }
    dend_47 { pt3dadd( 7.8385, 32.0641, -10.5514, 0.42 ) }
    dend_47 { pt3dadd( 8.23708, 32.4657, -10.7086, 0.28 ) }
    dend_47 { pt3dadd( 8.59776, 32.8412, -10.8128, 0.42 ) }
    dend_47 { pt3dadd( 8.84813, 33.1113, -10.8857, 0.28 ) }
    dend_47 { pt3dadd( 9.23958, 33.534, -10.9996, 0.14 ) }
    dend_47 { pt3dadd( 9.64957, 33.9477, -11.1174, 0.28 ) }
    dend_47 { pt3dadd( 9.91321, 34.2042, -11.1927, 0.14 ) }
    dend_47 { pt3dadd( 10.3299, 34.6007, -11.3112, 0.1 ) }
    dend_47 { pt3dadd( 10.7494, 35.0033, -11.4307, 0.14 ) }
    dend_47 { pt3dadd( 11.1266, 35.3576, -11.5378, 0.28 ) }
    dend_47 { pt3dadd( 11.5073, 35.7077, -11.6455, 0.42 ) }
    dend_47 { pt3dadd( 11.9172, 36.1067, -11.8046, 0.28 ) }
    dend_47 { pt3dadd( 12.2838, 36.5035, -12.0347, 0.14 ) }
    dend_47 { pt3dadd( 12.4679, 36.7511, -12.2487, 0.1 ) }
    dend_47 { pt3dadd( 12.6219, 37.0752, -12.7135, 0.1 ) }
    dend_47 { pt3dadd( 12.6641, 37.2066, -12.9403, 0.14 ) }
    dend_47 { pt3dadd( 12.7827, 37.7239, -13.9153, 0.84 ) }
    dend_47 { pt3dadd( 12.8744, 38.1812, -14.8166, 0.98 ) }
    dend_47 { pt3dadd( 12.9708, 38.6387, -15.7172, 0.84 ) }
    dend_47 { pt3dadd( 13.1807, 39.5273, -17.4073, 0.84 ) }
    dend_47 { pt3dadd( 13.2574, 39.8112, -17.9231, 0.7 ) }
    dend_47 { pt3dadd( 13.3238, 39.9989, -18.2316, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( 13.513, 40.3388, -18.6891, 0.42 ) }
    dend_47 { pt3dadd( 13.8035, 40.7079, -19.0416, 0.28 ) }
    dend_47 { pt3dadd( 14.0558, 40.9456, -19.1858, 0.14 ) }
    dend_47 { pt3dadd( 14.2559, 41.0967, -19.2651, 0.28 ) }
    dend_47 { pt3dadd( 14.4595, 41.2348, -19.365, 0.7 ) }
    dend_47 { pt3dadd( 14.8618, 41.4935, -19.5894, 0.56 ) }
    dend_47 { pt3dadd( 15.2524, 41.7459, -19.8265, 0.42 ) }
    dend_47 { pt3dadd( 15.6379, 42.0105, -20.0725, 0.28 ) }
    dend_47 { pt3dadd( 16.3677, 42.5746, -20.6382, 0.28 ) }
    dend_47 { pt3dadd( 16.5973, 42.7794, -20.8386, 0.56 ) }
    dend_47 { pt3dadd( 16.9255, 43.1209, -21.1965, 0.42 ) }
    dend_47 { pt3dadd( 17.2204, 43.4712, -21.5642, 0.28 ) }
    dend_47 { pt3dadd( 17.3985, 43.7072, -21.803, 0.42 ) }
    dend_47 { pt3dadd( 17.908, 44.4265, -22.4787, 0.56 ) }
    dend_47 { pt3dadd( 18.1872, 44.8223, -22.8108, 0.56 ) }
    dend_47 { pt3dadd( 18.7219, 45.5766, -23.4324, 0.56 ) }
    dend_47 { pt3dadd( 19.0142, 45.9747, -23.7502, 0.56 ) }
    dend_47 { pt3dadd( 19.2062, 46.2374, -23.9375, 0.7 ) }
    dend_47 { pt3dadd( 19.5191, 46.6655, -24.1898, 0.56 ) }
    dend_47 { pt3dadd( 19.8298, 47.1193, -24.4149, 0.42 ) }
    dend_47 { pt3dadd( 20.0148, 47.4141, -24.5558, 0.28 ) }
    dend_47 { pt3dadd( 20.256, 47.8316, -24.7781, 0.28 ) }
    dend_47 { pt3dadd( 20.4977, 48.2786, -25.0667, 0.1 ) }
    dend_47 { pt3dadd( 20.6359, 48.5458, -25.2913, 0.1 ) }
    dend_47 { pt3dadd( 21.0283, 49.3571, -26.0881, 0.14 ) }
    dend_47 { pt3dadd( 21.1456, 49.6009, -26.3485, 0.28 ) }
    dend_47 { pt3dadd( 21.5132, 50.2962, -27.1329, 0.42 ) }
    dend_47 { pt3dadd( 21.7154, 50.6365, -27.5666, 0.28 ) }
    dend_47 { pt3dadd( 22.1054, 51.1528, -28.3019, 0.28 ) }
    dend_47 { pt3dadd( 22.2802, 51.3379, -28.5779, 0.56 ) }
    dend_47 { pt3dadd( 22.6104, 51.6089, -28.9808, 0.42 ) }
    dend_47 { pt3dadd( 22.9453, 51.8379, -29.3193, 0.28 ) }
    dend_47 { pt3dadd( 23.7068, 52.321, -29.9173, 0.14 ) }
    dend_47 { pt3dadd( 24.0926, 52.5673, -30.1811, 0.28 ) }
    dend_47 { pt3dadd( 24.4937, 52.8359, -30.4023, 0.14 ) }
    dend_47 { pt3dadd( 24.8833, 53.1142, -30.6035, 0.1 ) }
    dend_47 { pt3dadd( 25.2591, 53.4206, -30.8198, 0.14 ) }
    dend_47 { pt3dadd( 25.7548, 53.8937, -31.1179, 0.28 ) }
    dend_47 { pt3dadd( 25.9966, 54.1453, -31.2563, 0.14 ) }
    dend_47 { pt3dadd( 26.3556, 54.5494, -31.486, 0.1 ) }
    dend_47 { pt3dadd( 26.5819, 54.8074, -31.6382, 0.1 ) }
    dend_47 { pt3dadd( 27.2555, 55.5645, -32.0929, 0.14 ) }
    dend_47 { pt3dadd( 27.628, 55.9501, -32.3326, 0.28 ) }
    dend_47 { pt3dadd( 27.9864, 56.2806, -32.5428, 0.42 ) }
    dend_47 { pt3dadd( 28.3991, 56.6388, -32.758, 0.56 ) }
    dend_47 { pt3dadd( 28.7843, 56.9552, -32.9331, 0.42 ) }
    dend_47 { pt3dadd( 29.2186, 57.3046, -33.1374, 0.28 ) }
    dend_47 { pt3dadd( 29.6053, 57.6194, -33.3122, 0.14 ) }
    dend_47 { pt3dadd( 30.0046, 57.9738, -33.5717, 0.28 ) }
    dend_47 { pt3dadd( 30.3629, 58.3289, -33.8723, 0.42 ) }
    dend_47 { pt3dadd( 30.508, 58.4946, -34.0206, 0.56 ) }
    dend_47 { pt3dadd( 31.0584, 59.2153, -34.662, 0.7 ) }
    dend_47 { pt3dadd( 31.333, 59.6016, -35.0087, 0.84 ) }
    dend_47 { pt3dadd( 31.7816, 60.2923, -35.6045, 0.7 ) }
    dend_47 { pt3dadd( 32.0458, 60.6955, -35.9399, 0.7 ) }
    dend_47 { pt3dadd( 32.3349, 61.1066, -36.2559, 0.56 ) }
    dend_47 { pt3dadd( 32.6602, 61.5141, -36.526, 0.42 ) }
    dend_47 { pt3dadd( 32.8347, 61.6921, -36.6175, 0.28 ) }
    dend_47 { pt3dadd( 33.1068, 61.9276, -36.7245, 0.1 ) }
    dend_47 { pt3dadd( 33.5246, 62.2302, -36.8386, 0.1 ) }
    dend_47 { pt3dadd( 33.9625, 62.5017, -36.9558, 0.1 ) }
    dend_47 { pt3dadd( 34.4215, 62.7568, -37.0344, 0.1 ) }
    dend_47 { pt3dadd( 34.8807, 63.0138, -37.082, 0.14 ) }
    dend_47 { pt3dadd( 35.3962, 63.3066, -37.1131, 0.28 ) }
    dend_47 { pt3dadd( 35.8576, 63.5632, -37.0911, 0.28 ) }
    dend_47 { pt3dadd( 36.3179, 63.8212, -37.0328, 0.28 ) }
    dend_47 { pt3dadd( 37.2785, 64.353, -36.8646, 0.28 ) }
    dend_47 { pt3dadd( 37.7835, 64.6354, -36.7642, 0.42 ) }
    dend_47 { pt3dadd( 38.2362, 64.8961, -36.6691, 0.28 ) }
    dend_47 { pt3dadd( 39.148, 65.4394, -36.4905, 0.14 ) }
    dend_47 { pt3dadd( 39.5898, 65.7259, -36.4226, 0.1 ) }
    dend_47 { pt3dadd( 40.0204, 66.0305, -36.391, 0.14 ) }
    dend_47 { pt3dadd( 40.4839, 66.3904, -36.4131, 0.28 ) }
    dend_47 { pt3dadd( 40.7671, 66.6352, -36.4423, 0.42 ) }
    dend_47 { pt3dadd( 41.1866, 67.0489, -36.5198, 0.28 ) }
    dend_47 { pt3dadd( 41.5675, 67.4768, -36.6756, 0.28 ) }
    dend_47 { pt3dadd( 41.926, 67.9043, -36.859, 0.42 ) }
    dend_47 { pt3dadd( 42.1526, 68.1722, -36.9925, 0.56 ) }
    dend_47 { pt3dadd( 42.5071, 68.5801, -37.2222, 0.7 ) }
    dend_47 { pt3dadd( 42.865, 68.9777, -37.4646, 0.7 ) }
    dend_47 { pt3dadd( 43.5464, 69.7217, -37.9372, 0.84 ) }
    dend_47 { pt3dadd( 43.7093, 69.8961, -38.0475, 0.98 ) }
    dend_47 { pt3dadd( 44.0449, 70.2488, -38.2595, 0.7 ) }
    dend_47 { pt3dadd( 44.2926, 70.4947, -38.398, 0.56 ) }
    dend_47 { pt3dadd( 44.6984, 70.8728, -38.5907, 0.42 ) }
    dend_47 { pt3dadd( 45.127, 71.2405, -38.7521, 0.28 ) }
    dend_47 { pt3dadd( 45.5909, 71.6126, -38.836, 0.14 ) }
    dend_47 { pt3dadd( 46.0479, 71.9778, -38.8869, 0.1 ) }
    dend_47 { pt3dadd( 46.4646, 72.3019, -38.9097, 0.14 ) }
    dend_47 { pt3dadd( 46.8765, 72.6225, -38.9136, 0.28 ) }
    dend_47 { pt3dadd( 47.2868, 72.955, -38.8986, 0.42 ) }
    dend_47 { pt3dadd( 48.1244, 73.6894, -38.918, 0.56 ) }
    dend_47 { pt3dadd( 48.3877, 73.9507, -38.9453, 0.56 ) }
    dend_47 { pt3dadd( 48.5469, 74.1417, -39.0077, 0.56 ) }
    dend_47 { pt3dadd( 48.8603, 74.5788, -39.2407, 0.56 ) }
    dend_47 { pt3dadd( 49.0393, 74.8499, -39.429, 0.42 ) }
    dend_47 { pt3dadd( 49.5516, 75.6052, -40.0621, 0.28 ) }
    dend_47 { pt3dadd( 49.7272, 75.8453, -40.2912, 0.14 ) }
    dend_47 { pt3dadd( 50.3052, 76.5305, -40.9533, 0.1 ) }
    dend_47 { pt3dadd( 50.6069, 76.8383, -41.2476, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 50.9924, 77.1598, -41.5524, 0.14 ) }
    dend_47 { pt3dadd( 51.3927, 77.4407, -41.7591, 0.28 ) }
    dend_47 { pt3dadd( 51.885, 77.7332, -41.8894, 0.42 ) }
    dend_47 { pt3dadd( 52.3497, 77.9758, -41.9561, 0.56 ) }
    dend_47 { pt3dadd( 52.8254, 78.2111, -41.9707, 0.42 ) }
    dend_47 { pt3dadd( 53.2948, 78.451, -42.007, 0.28 ) }
    dend_47 { pt3dadd( 54.2418, 78.9591, -42.1325, 0.14 ) }
    dend_47 { pt3dadd( 54.6789, 79.2266, -42.2613, 0.28 ) }
    dend_47 { pt3dadd( 55.076, 79.5083, -42.4493, 0.42 ) }
    dend_47 { pt3dadd( 55.3277, 79.7243, -42.6175, 0.56 ) }
    dend_47 { pt3dadd( 56.0001, 80.4049, -43.1885, 0.42 ) }
    dend_47 { pt3dadd( 56.3045, 80.7579, -43.5456, 0.28 ) }
    dend_47 { pt3dadd( 56.8059, 81.4163, -44.2864, 0.14 ) }
    dend_47 { pt3dadd( 56.9676, 81.6439, -44.5375, 0.1 ) }
    dend_47 { pt3dadd( 57.2237, 82.0096, -44.919, 0.1 ) }
    dend_47 { pt3dadd( 57.5043, 82.3898, -45.2784, 0.1 ) }
    dend_47 { pt3dadd( 58.0068, 83.0532, -45.7935, 0.14 ) }
    dend_47 { pt3dadd( 58.1973, 83.3077, -45.9932, 0.1 ) }
    dend_47 { pt3dadd( 58.4959, 83.7273, -46.2897, 0.1 ) }
    dend_47 { pt3dadd( 58.7855, 84.1521, -46.5865, 0.1 ) }
    dend_47 { pt3dadd( 59.0444, 84.5722, -46.9049, 0.1 ) }
    dend_47 { pt3dadd( 59.1942, 84.8487, -47.1101, 0.14 ) }
    dend_47 { pt3dadd( 59.6239, 85.694, -47.6884, 0.28 ) }
    dend_47 { pt3dadd( 59.8172, 86.1395, -48.0328, 0.14 ) }
    dend_47 { pt3dadd( 59.9767, 86.5765, -48.3912, 0.1 ) }
    dend_47 { pt3dadd( 60.2095, 87.3421, -49.0154, 0.1 ) }
    dend_47 { pt3dadd( 60.3259, 87.7763, -49.3887, 0.1 ) }
    dend_47 { pt3dadd( 60.436, 88.2238, -49.7638, 0.1 ) }
    dend_47 { pt3dadd( 60.6387, 89.0895, -50.4352, 0.14 ) }
    dend_47 { pt3dadd( 60.7025, 89.3745, -50.6711, 0.28 ) }
    dend_47 { pt3dadd( 60.7974, 89.8218, -51.0379, 0.42 ) }
    dend_47 { pt3dadd( 61.0051, 90.6963, -51.696, 0.28 ) }
    dend_47 { pt3dadd( 61.1221, 91.1563, -52.037, 0.14 ) }
    dend_47 { pt3dadd( 61.2008, 91.4441, -52.2649, 0.1 ) }
    dend_47 { pt3dadd( 61.4915, 92.3648, -52.9826, 0.14 ) }
    dend_47 { pt3dadd( 61.5854, 92.6484, -53.2099, 0.28 ) }
    dend_47 { pt3dadd( 61.78, 93.2161, -53.6475, 0.42 ) }
    dend_47 { pt3dadd( 61.8908, 93.5181, -53.8498, 0.56 ) }
    dend_47 { pt3dadd( 62.2015, 94.3364, -54.3606, 0.56 ) }
    dend_47 { pt3dadd( 62.3905, 94.8344, -54.6266, 0.84 ) }
    dend_47 { pt3dadd( 62.5178, 95.148, -54.7891, 0.7 ) }
    dend_47 { pt3dadd( 62.7321, 95.6186, -55.0614, 0.56 ) }
    dend_47 { pt3dadd( 62.981, 96.0766, -55.3466, 0.42 ) }
    dend_47 { pt3dadd( 63.2629, 96.5199, -55.6232, 0.56 ) }
    dend_47 { pt3dadd( 63.4692, 96.7894, -55.7837, 0.7 ) }
    dend_47 { pt3dadd( 64.1545, 97.4665, -56.2735, 0.7 ) }
    dend_47 { pt3dadd( 64.5273, 97.7535, -56.514, 0.7 ) }
    dend_47 { pt3dadd( 64.9376, 97.9964, -56.7475, 0.84 ) }
    dend_47 { pt3dadd( 65.1444, 98.1044, -56.8743, 1.26 ) }
    dend_47 { pt3dadd( 65.5565, 98.2958, -57.1257, 1.12 ) }
    dend_47 { pt3dadd( 65.9797, 98.4993, -57.3736, 0.98 ) }
    dend_47 { pt3dadd( 66.3999, 98.7265, -57.5994, 0.84 ) }
    dend_47 { pt3dadd( 66.8096, 98.9671, -57.8305, 0.7 ) }
    dend_47 { pt3dadd( 67.6536, 99.5103, -58.3143, 0.56 ) }
    dend_47 { pt3dadd( 68.0458, 99.7865, -58.5357, 0.42 ) }
    dend_47 { pt3dadd( 68.4795, 100.114, -58.7752, 0.28 ) }
    dend_47 { pt3dadd( 68.9087, 100.443, -59.0024, 0.14 ) }
    dend_47 { pt3dadd( 69.2907, 100.757, -59.1884, 0.1 ) }
    dend_47 { pt3dadd( 69.7032, 101.127, -59.4016, 0.1 ) }
    dend_47 { pt3dadd( 70.0703, 101.514, -59.6471, 0.14 ) }
    dend_47 { pt3dadd( 70.2012, 101.695, -59.7908, 0.28 ) }
    dend_47 { pt3dadd( 70.3007, 101.88, -59.9534, 0.42 ) }
    dend_47 { pt3dadd( 70.4688, 102.297, -60.3266, 0.7 ) }
    dend_47 { pt3dadd( 70.6784, 103.02, -61.0069, 0.56 ) }
    dend_47 { pt3dadd( 70.8684, 103.818, -61.7627, 0.56 ) }
    dend_47 { pt3dadd( 70.9348, 104.082, -62.009, 0.42 ) }
    dend_47 { pt3dadd( 71.0988, 104.63, -62.4893, 0.28 ) }
    dend_47 { pt3dadd( 71.2038, 104.912, -62.7147, 0.14 ) }
    dend_47 { pt3dadd( 71.6307, 105.82, -63.3724, 0.1 ) }
    dend_47 { pt3dadd( 71.7987, 106.111, -63.5395, 0.1 ) }
    dend_47 { pt3dadd( 72.0681, 106.522, -63.7336, 0.1 ) }
    dend_47 { pt3dadd( 72.3818, 106.984, -63.9356, 0.1 ) }
    dend_47 { pt3dadd( 72.7069, 107.44, -64.1125, 0.1 ) }
    dend_47 { pt3dadd( 72.926, 107.736, -64.2065, 0.14 ) }
    dend_47 { pt3dadd( 73.2633, 108.195, -64.3506, 0.28 ) }
    dend_47 { pt3dadd( 73.6712, 108.775, -64.5703, 0.14 ) }
    dend_47 { pt3dadd( 73.872, 109.066, -64.6965, 0.1 ) }
    dend_47 { pt3dadd( 74.1891, 109.51, -64.9133, 0.14 ) }
    dend_47 { pt3dadd( 74.5214, 109.953, -65.1468, 0.1 ) }
    dend_47 { pt3dadd( 75.1026, 110.678, -65.5467, 0.1 ) }
    dend_47 { pt3dadd( 75.4572, 111.091, -65.7841, 0.1 ) }
    dend_47 { pt3dadd( 75.7905, 111.443, -65.9945, 0.1 ) }
    dend_47 { pt3dadd( 76.1728, 111.829, -66.2169, 0.1 ) }
    dend_47 { pt3dadd( 76.5703, 112.221, -66.4189, 0.1 ) }
    dend_47 { pt3dadd( 76.9759, 112.613, -66.5829, 0.14 ) }
    dend_47 { pt3dadd( 77.164, 112.792, -66.6365, 0.28 ) }
    dend_47 { pt3dadd( 77.3472, 112.977, -66.6891, 0.42 ) }
    dend_47 { pt3dadd( 77.592, 113.241, -66.7603, 0.56 ) }
    dend_47 { pt3dadd( 77.9559, 113.682, -66.9194, 0.42 ) }
    dend_47 { pt3dadd( 78.2836, 114.131, -67.1091, 0.28 ) }
    dend_47 { pt3dadd( 78.5785, 114.595, -67.3167, 0.14 ) }
    dend_47 { pt3dadd( 78.748, 114.906, -67.4541, 0.1 ) }
    dend_47 { pt3dadd( 78.9851, 115.399, -67.6677, 0.1 ) }
    dend_47 { pt3dadd( 79.3862, 116.358, -68.0673, 0.1 ) }
    dend_47 { pt3dadd( 79.4975, 116.685, -68.1924, 0.1 ) }
    dend_47 { pt3dadd( 79.6887, 117.357, -68.4796, 0.1 ) }
    dend_47 { pt3dadd( 79.8321, 117.871, -68.7177, 0.1 ) }
    dend_47 { pt3dadd( 79.9372, 118.195, -68.8765, 0.1 ) }
    dend_47 { pt3dadd( 80.1126, 118.677, -69.1595, 0.1 ) }
    dend_47 { pt3dadd( 80.3014, 119.122, -69.5052, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_47 { pt3dadd( 80.5757, 119.729, -70.2226, 0.1 ) }
    dend_47 { pt3dadd( 80.6991, 119.985, -70.6683, 0.1 ) }
    dend_47 { pt3dadd( 80.8209, 120.208, -71.1344, 0.1 ) }
    dend_47 { pt3dadd( 81.0687, 120.598, -72.0345, 0.1 ) }
    dend_47 { pt3dadd( 81.3456, 120.974, -72.9356, 0.14 ) }
    dend_47 { pt3dadd( 81.693, 121.389, -73.9055, 0.1 ) }
    dend_47 { pt3dadd( 82.0592, 121.808, -74.7114, 0.1 ) }
    dend_47 { pt3dadd( 82.3188, 122.086, -75.1679, 0.1 ) }
    dend_47 { pt3dadd( 82.626, 122.363, -75.4865, 0.1 ) }
    dend_47 { pt3dadd( 83.0915, 122.69, -75.6322, 0.1 ) }
    dend_47 { pt3dadd( 83.5412, 122.972, -75.6207, 0.1 ) }
    dend_47 { pt3dadd( 84.4871, 123.527, -75.4454, 0.1 ) }
    dend_47 { pt3dadd( 84.9374, 123.781, -75.3346, 0.1 ) }
    dend_47 { pt3dadd( 85.8733, 124.277, -75.1149, 0.1 ) }
    dend_47 { pt3dadd( 86.1026, 124.395, -75.0644, 0.1 ) }
    dend_47 { pt3dadd( 86.6251, 124.654, -74.9517, 0.1 ) }
    dend_47 { pt3dadd( 87.0938, 124.884, -74.8715, 0.1 ) }
    dend_47 { pt3dadd( 87.5735, 125.112, -74.8617, 0.1 ) }
    dend_47 { pt3dadd( 88.0473, 125.344, -74.8866, 0.1 ) }
    dend_47 { pt3dadd( 88.0473, 125.344, -74.8866, 0.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.56796, -55.5334, 6.00558, 0.98 ) }
    dend_16 { pt3dadd( 3.85716, -56.1194, 5.94922, 0.98 ) }
    dend_16 { pt3dadd( 4.16096, -56.7894, 5.89056, 0.84 ) }
    dend_16 { pt3dadd( 4.41861, -57.403, 5.84127, 0.98 ) }
    dend_16 { pt3dadd( 4.68746, -58.0884, 5.79029, 1.12 ) }
    dend_16 { pt3dadd( 4.80321, -58.4005, 5.76851, 1.68 ) }
    dend_16 { pt3dadd( 5.02419, -59.0253, 5.72723, 1.54 ) }
    dend_16 { pt3dadd( 5.21573, -59.6602, 5.69238, 1.4 ) }
    dend_16 { pt3dadd( 5.37653, -60.3072, 5.66428, 1.26 ) }
    dend_16 { pt3dadd( 5.51849, -60.9554, 5.64024, 1.12 ) }
    dend_16 { pt3dadd( 5.6411, -61.6107, 5.6694, 1.26 ) }
    dend_16 { pt3dadd( 5.75626, -62.2496, 5.73536, 1.12 ) }
    dend_16 { pt3dadd( 5.89355, -62.9651, 5.89613, 0.98 ) }
    dend_16 { pt3dadd( 6.02065, -63.5866, 6.09241, 0.84 ) }
    dend_16 { pt3dadd( 6.1518, -64.1959, 6.33071, 0.7 ) }
    dend_16 { pt3dadd( 6.43625, -65.44, 6.89415, 0.84 ) }
    dend_16 { pt3dadd( 6.58009, -66.0249, 7.18129, 0.84 ) }
    dend_16 { pt3dadd( 6.88731, -67.2356, 7.71479, 0.7 ) }
    dend_16 { pt3dadd( 7.04965, -67.8437, 7.92646, 0.84 ) }
    dend_16 { pt3dadd( 7.04965, -67.8437, 7.92646, 0.98 ) }
    dend_16 { pt3dadd( 7.13739, -68.1538, 7.92732, 1.12 ) }
    dend_16 { pt3dadd( 7.33254, -68.7891, 7.86797, 0.98 ) }
    dend_16 { pt3dadd( 7.73978, -70.0789, 7.7439, 0.84 ) }
    dend_16 { pt3dadd( 7.93911, -70.7085, 7.67483, 0.7 ) }
    dend_16 { pt3dadd( 8.18555, -71.4116, 7.63687, 0.56 ) }
    dend_16 { pt3dadd( 8.40748, -72.0353, 7.58567, 0.7 ) }
    dend_16 { pt3dadd( 8.81881, -73.2914, 7.26599, 0.84 ) }
    dend_16 { pt3dadd( 9.01372, -73.897, 7.07597, 0.98 ) }
    dend_16 { pt3dadd( 9.21664, -74.5032, 6.92879, 0.84 ) }
    dend_16 { pt3dadd( 9.45123, -75.202, 6.80914, 0.98 ) }
    dend_16 { pt3dadd( 9.82684, -76.3659, 6.70044, 1.12 ) }
    dend_16 { pt3dadd( 10.5739, -78.6378, 6.63194, 0.98 ) }
    dend_16 { pt3dadd( 10.9418, -79.807, 6.52043, 0.84 ) }
    dend_16 { pt3dadd( 11.3875, -81.0778, 6.69697, 0.84 ) }
    dend_16 { pt3dadd( 11.8463, -82.1546, 7.38903, 0.98 ) }
    dend_16 { pt3dadd( 12.059, -82.5978, 7.83543, 0.84 ) }
    dend_16 { pt3dadd( 12.2716, -83.0209, 8.30553, 0.98 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 57/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.56796, -55.5334, 6.00558, 1.82 ) }
    dend_15 { pt3dadd( 3.02866, -56.2676, 6.30491, 1.82 ) }
    dend_15 { pt3dadd( 2.76195, -56.6659, 6.47011, 1.68 ) }
    dend_15 { pt3dadd( 2.6003, -56.9121, 6.60545, 1.54 ) }
    dend_15 { pt3dadd( 2.29661, -57.4075, 6.88573, 1.4 ) }
    dend_15 { pt3dadd( 2.1884, -57.5851, 6.98202, 1.26 ) }
    dend_15 { pt3dadd( 1.71332, -58.3258, 7.36321, 0.1 ) }
    dend_15 { pt3dadd( 1.45849, -58.73, 7.54851, 0.1 ) }
    dend_15 { pt3dadd( 0.997219, -59.4077, 7.86181, 0.1 ) }
    dend_15 { pt3dadd( 0.718772, -59.7921, 8.03278, 0.14 ) }
    dend_15 { pt3dadd( 0.413092, -60.1683, 8.18132, 0.28 ) }
    dend_15 { pt3dadd( 0.105161, -60.4961, 8.27003, 0.42 ) }
    dend_15 { pt3dadd( -0.129696, -60.7189, 8.28691, 0.28 ) }
    dend_15 { pt3dadd( -0.484907, -61.0049, 8.27628, 0.14 ) }
    dend_15 { pt3dadd( -0.671348, -61.1379, 8.26709, 0.28 ) }
    dend_15 { pt3dadd( -1.04905, -61.3804, 8.34858, 0.56 ) }
    dend_15 { pt3dadd( -1.39283, -61.6318, 8.51817, 0.56 ) }
    dend_15 { pt3dadd( -1.39283, -61.6318, 8.51817, 0.56 ) }
    dend_15 { pt3dadd( -1.39283, -61.6318, 8.51817, 0.56 ) }
    dend_15 { pt3dadd( -1.90861, -62.1705, 9.12088, 0.56 ) }
    dend_15 { pt3dadd( -2.3563, -62.6823, 9.67338, 0.42 ) }
    dend_15 { pt3dadd( -2.59061, -63.0033, 9.98657, 0.28 ) }
    dend_15 { pt3dadd( -3.00178, -63.6736, 10.5405, 0.42 ) }
    dend_15 { pt3dadd( -3.1306, -63.9169, 10.6977, 0.28 ) }
    dend_15 { pt3dadd( -3.21501, -64.1096, 10.7887, 0.42 ) }
    dend_15 { pt3dadd( -3.31587, -64.4112, 10.8695, 0.7 ) }
    dend_15 { pt3dadd( -3.44591, -64.8885, 10.9685, 0.56 ) }
    dend_15 { pt3dadd( -3.54428, -65.3811, 11.0777, 0.42 ) }
    dend_15 { pt3dadd( -3.59415, -65.8604, 11.2271, 0.28 ) }
    dend_15 { pt3dadd( -3.60364, -66.0693, 11.3208, 0.14 ) }
    dend_15 { pt3dadd( -3.60364, -66.0693, 11.3208, 0.28 ) }
    dend_15 { pt3dadd( -3.54532, -66.7984, 11.744, 0.1 ) }
    dend_15 { pt3dadd( -3.48077, -67.1868, 11.9788, 0.14 ) }
    dend_15 { pt3dadd( -3.29814, -67.9727, 12.4474, 0.1 ) }
    dend_15 { pt3dadd( -3.18028, -68.3616, 12.6595, 0.1 ) }
    dend_15 { pt3dadd( -3.04383, -68.7582, 12.8391, 0.1 ) }
    dend_15 { pt3dadd( -2.88342, -69.1562, 12.9764, 0.1 ) }
    dend_15 { pt3dadd( -2.67364, -69.6142, 13.0739, 0.1 ) }
    dend_15 { pt3dadd( -2.56948, -69.816, 13.1049, 0.28 ) }
    dend_15 { pt3dadd( -2.3231, -70.2578, 13.1385, 0.14 ) }
    dend_15 { pt3dadd( -2.09567, -70.6429, 13.1698, 0.1 ) }
    dend_15 { pt3dadd( -1.82982, -71.0866, 13.2064, 0.1 ) }
    dend_15 { pt3dadd( -1.59734, -71.4686, 13.2385, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( -1.32102, -71.9073, 13.2401, 0.14 ) }
    dend_15 { pt3dadd( -1.0838, -72.2871, 13.2174, 0.1 ) }
    dend_15 { pt3dadd( -0.831551, -72.7238, 13.1658, 0.14 ) }
    dend_15 { pt3dadd( -0.617071, -73.1238, 13.101, 0.1 ) }
    dend_15 { pt3dadd( -0.410474, -73.5782, 13.0122, 0.1 ) }
    dend_15 { pt3dadd( -0.0665605, -74.4606, 12.8267, 0.1 ) }
    dend_15 { pt3dadd( 0.0291702, -74.7605, 12.7638, 0.28 ) }
    dend_15 { pt3dadd( 0.16141, -75.2451, 12.6617, 0.14 ) }
    dend_15 { pt3dadd( 0.254876, -75.6822, 12.5706, 0.1 ) }
    dend_15 { pt3dadd( 0.33767, -76.1722, 12.4836, 0.1 ) }
    dend_15 { pt3dadd( 0.388638, -76.6226, 12.4325, 0.1 ) }
    dend_15 { pt3dadd( 0.433101, -77.0789, 12.434, 0.14 ) }
    dend_15 { pt3dadd( 0.471722, -77.3048, 12.4374, 0.28 ) }
    dend_15 { pt3dadd( 0.523726, -77.5279, 12.4429, 0.28 ) }
    dend_15 { pt3dadd( 0.641475, -77.9708, 12.4562, 0.42 ) }
    dend_15 { pt3dadd( 0.706573, -78.1881, 12.4638, 0.42 ) }
    dend_15 { pt3dadd( 0.835746, -78.6196, 12.4791, 0.28 ) }
    dend_15 { pt3dadd( 0.955136, -79.0596, 12.4926, 0.14 ) }
    dend_15 { pt3dadd( 1.06885, -79.5035, 12.5052, 0.1 ) }
    dend_15 { pt3dadd( 1.1689, -79.9485, 12.5157, 0.14 ) }
    dend_15 { pt3dadd( 1.25902, -80.3979, 12.5245, 0.1 ) }
    dend_15 { pt3dadd( 1.33818, -80.8464, 12.4994, 0.1 ) }
    dend_15 { pt3dadd( 1.41687, -81.3414, 12.4416, 0.1 ) }
    dend_15 { pt3dadd( 1.48389, -81.7868, 12.3693, 0.1 ) }
    dend_15 { pt3dadd( 1.55903, -82.286, 12.2727, 0.1 ) }
    dend_15 { pt3dadd( 1.61568, -82.7277, 12.204, 0.1 ) }
    dend_15 { pt3dadd( 1.71018, -83.6798, 12.0973, 0.1 ) }
    dend_15 { pt3dadd( 1.74137, -84.1362, 12.068, 0.1 ) }
    dend_15 { pt3dadd( 1.75853, -84.592, 12.0621, 0.1 ) }
    dend_15 { pt3dadd( 1.75433, -85.0423, 12.0784, 0.14 ) }
    dend_15 { pt3dadd( 1.72217, -85.9144, 12.1555, 0.1 ) }
    dend_15 { pt3dadd( 1.69136, -86.4226, 12.2267, 0.1 ) }
    dend_15 { pt3dadd( 1.64373, -86.908, 12.3556, 0.14 ) }
    dend_15 { pt3dadd( 1.58658, -87.398, 12.4999, 0.1 ) }
    dend_15 { pt3dadd( 1.52287, -87.8664, 12.6762, 0.1 ) }
    dend_15 { pt3dadd( 1.49795, -88.0747, 12.763, 0.14 ) }
    dend_15 { pt3dadd( 1.46953, -88.4971, 12.939, 0.28 ) }
    dend_15 { pt3dadd( 1.44249, -89.2868, 13.3172, 0.1 ) }
    dend_15 { pt3dadd( 1.43923, -89.6826, 13.5278, 0.1 ) }
    dend_15 { pt3dadd( 1.46111, -90.5242, 13.9932, 0.1 ) }
    dend_15 { pt3dadd( 1.48642, -90.9266, 14.2064, 0.1 ) }
    dend_15 { pt3dadd( 1.52134, -91.3361, 14.4044, 0.1 ) }
    dend_15 { pt3dadd( 1.54418, -91.5412, 14.5042, 0.14 ) }
    dend_15 { pt3dadd( 1.54418, -91.5412, 14.5042, 0.28 ) }
    dend_15 { pt3dadd( 1.61523, -91.9327, 14.7155, 0.28 ) }
    dend_15 { pt3dadd( 1.69644, -92.3198, 14.9429, 0.28 ) }
    dend_15 { pt3dadd( 1.69644, -92.3198, 14.9429, 0.42 ) }
    dend_15 { pt3dadd( 1.85627, -92.9815, 15.4446, 0.1 ) }
    dend_15 { pt3dadd( 1.93974, -93.3306, 15.7261, 0.1 ) }
    dend_15 { pt3dadd( 2.10614, -94.0302, 16.3224, 0.1 ) }
    dend_15 { pt3dadd( 2.18296, -94.3569, 16.6314, 0.1 ) }
    dend_15 { pt3dadd( 2.23755, -94.5831, 16.8569, 0.1 ) }
    dend_15 { pt3dadd( 2.23755, -94.5831, 16.8569, 0.1 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.630081, -30.9864, 0.180496, 0.56 ) }
    dend_5 { pt3dadd( -0.764591, -31.1947, -0.162343, 0.56 ) }
    dend_5 { pt3dadd( -0.928121, -31.4198, -0.547703, 0.42 ) }
    dend_5 { pt3dadd( -1.09566, -31.6267, -0.935298, 0.28 ) }
    dend_5 { pt3dadd( -1.42723, -31.9795, -1.68134, 0.7 ) }
    dend_5 { pt3dadd( -1.7251, -32.2132, -2.4003, 0.84 ) }
    dend_5 { pt3dadd( -1.99793, -32.2815, -3.16261, 0.98 ) }
    dend_5 { pt3dadd( -2.16276, -32.152, -4.00326, 1.12 ) }
    dend_5 { pt3dadd( -2.23346, -32.0221, -4.45644, 1.26 ) }
    dend_5 { pt3dadd( -2.30235, -31.8757, -4.84959, 1.12 ) }
    dend_5 { pt3dadd( -2.48252, -31.5667, -5.54755, 0.98 ) }
    dend_5 { pt3dadd( -2.73832, -31.2797, -6.3495, 0.84 ) }
    dend_5 { pt3dadd( -2.96349, -31.1044, -7.04837, 0.7 ) }
    dend_5 { pt3dadd( -3.09476, -31.0398, -7.44755, 0.56 ) }
    dend_5 { pt3dadd( -3.23279, -30.9961, -7.84509, 0.56 ) }
    dend_5 { pt3dadd( -3.36834, -30.948, -8.23748, 0.56 ) }
    dend_5 { pt3dadd( -3.61235, -30.8056, -8.9982, 0.7 ) }
    dend_5 { pt3dadd( -3.65581, -30.7587, -9.19882, 0.84 ) }
    dend_5 { pt3dadd( -3.7484, -30.6302, -9.64749, 1.26 ) }
    dend_5 { pt3dadd( -3.90206, -30.3889, -10.4616, 1.12 ) }
    dend_5 { pt3dadd( -4.0596, -30.1272, -11.3, 0.98 ) }
    dend_5 { pt3dadd( -4.20521, -29.8898, -12.031, 1.12 ) }
    dend_5 { pt3dadd( -4.39357, -29.6635, -12.7261, 0.98 ) }
    dend_5 { pt3dadd( -4.65585, -29.474, -13.5249, 0.84 ) }
    dend_5 { pt3dadd( -5.02111, -29.6419, -13.7795, 0.7 ) }
    dend_5 { pt3dadd( -5.74952, -30.0887, -14.0357, 0.56 ) }
    dend_5 { pt3dadd( -5.9774, -30.2235, -14.1635, 0.42 ) }
    dend_5 { pt3dadd( -6.20859, -30.2898, -14.5735, 0.56 ) }
    dend_5 { pt3dadd( -6.26347, -30.2871, -14.7788, 0.56 ) }
    dend_5 { pt3dadd( -6.43063, -30.2406, -15.6539, 0.56 ) }
    dend_5 { pt3dadd( -6.50714, -30.1621, -16.4579, 0.42 ) }
    dend_5 { pt3dadd( -6.52597, -30.0643, -17.2644, 0.28 ) }
    dend_5 { pt3dadd( -6.50876, -29.9573, -18.0672, 0.14 ) }
    dend_5 { pt3dadd( -6.48273, -29.8568, -18.8149, 0.1 ) }
    dend_5 { pt3dadd( -6.46173, -29.7578, -19.6211, 0.84 ) }
    dend_5 { pt3dadd( -6.43765, -29.6184, -21.1392, 0.7 ) }
    dend_5 { pt3dadd( -6.45386, -29.5159, -22.6603, 0.56 ) }
    dend_5 { pt3dadd( -6.48549, -29.4931, -23.4142, 0.7 ) }
    dend_5 { pt3dadd( -6.51506, -29.4939, -23.829, 0.56 ) }
    dend_5 { pt3dadd( -6.57051, -29.5026, -24.2504, 0.56 ) }
    dend_5 { pt3dadd( -6.75893, -29.537, -25.0943, 0.42 ) }
    dend_5 { pt3dadd( -6.93208, -29.5541, -25.4822, 0.28 ) }
    dend_5 { pt3dadd( -7.41856, -29.5119, -26.1286, 0.42 ) }
    dend_5 { pt3dadd( -7.54806, -29.4568, -26.2853, 0.56 ) }
    dend_5 { pt3dadd( -7.81016, -29.2533, -26.6262, 0.28 ) }
    dend_5 { pt3dadd( -8.06473, -28.999, -26.9368, 0.14 ) }
    dend_5 { pt3dadd( -8.31723, -28.7349, -27.2328, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -8.58287, -28.4876, -27.5398, 0.42 ) }
    dend_5 { pt3dadd( -9.07943, -28.1207, -28.1461, 0.56 ) }
    dend_5 { pt3dadd( -9.07943, -28.1207, -28.1461, 0.7 ) }
    dend_5 { pt3dadd( -9.29699, -28.1093, -28.5112, 2.1 ) }
    dend_5 { pt3dadd( -9.69333, -28.2424, -29.2689, 1.96 ) }
    dend_5 { pt3dadd( -9.85119, -28.3718, -29.6335, 1.82 ) }
    dend_5 { pt3dadd( -10.1303, -28.6669, -30.3038, 1.68 ) }
    dend_5 { pt3dadd( -10.3005, -28.8785, -30.7007, 0.7 ) }
    dend_5 { pt3dadd( -10.5885, -29.2834, -31.4368, 0.56 ) }
    dend_5 { pt3dadd( -10.6674, -29.4298, -31.6872, 0.56 ) }
    dend_5 { pt3dadd( -10.8537, -29.9261, -32.4008, 0.42 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.630081, -30.9864, 0.180496, 0.7 ) }
    dend_2 { pt3dadd( -0.635792, -31.3483, 0.179544, 0.7 ) }
    dend_2 { pt3dadd( -0.639931, -31.6018, 0.178877, 0.56 ) }
    dend_2 { pt3dadd( -0.638506, -32.0064, 0.177801, 0.42 ) }
    dend_2 { pt3dadd( -0.630991, -32.3646, 0.141833, 0.28 ) }
    dend_2 { pt3dadd( -0.616602, -32.7616, 0.112811, 0.14 ) }
    dend_2 { pt3dadd( -0.596413, -33.1211, 0.12026, 0.1 ) }
    dend_2 { pt3dadd( -0.560679, -33.5221, 0.161087, 0.1 ) }
    dend_2 { pt3dadd( -0.519027, -33.8686, 0.22027, 0.1 ) }
    dend_2 { pt3dadd( -0.426536, -34.513, 0.368159, 0.14 ) }
    dend_2 { pt3dadd( -0.325524, -35.1502, 0.539565, 0.42 ) }
    dend_2 { pt3dadd( -0.19636, -35.8467, 0.741806, 0.28 ) }
    dend_2 { pt3dadd( -0.135956, -36.1877, 0.840686, 0.14 ) }
    dend_2 { pt3dadd( -0.0675572, -36.5661, 0.944324, 0.1 ) }
    dend_2 { pt3dadd( -0.00683199, -36.9161, 1.00339, 0.14 ) }
    dend_2 { pt3dadd( 0.0535884, -37.273, 1.00684, 0.1 ) }
    dend_2 { pt3dadd( 0.105452, -37.6189, 0.921085, 0.1 ) }
    dend_2 { pt3dadd( 0.147989, -37.9832, 0.765805, 0.1 ) }
    dend_2 { pt3dadd( 0.179472, -38.3038, 0.604819, 0.1 ) }
    dend_2 { pt3dadd( 0.228068, -38.9507, 0.253979, 0.1 ) }
    dend_2 { pt3dadd( 0.252694, -39.5108, -0.0600401, 0.14 ) }
    dend_2 { pt3dadd( 0.256883, -39.7327, -0.187441, 0.56 ) }
    dend_2 { pt3dadd( 0.261603, -40.0839, -0.377788, 0.42 ) }
    dend_2 { pt3dadd( 0.268069, -40.4084, -0.533757, 0.28 ) }
    dend_2 { pt3dadd( 0.273751, -40.7916, -0.663538, 0.42 ) }
    dend_2 { pt3dadd( 0.281724, -40.9714, -0.683134, 0.56 ) }
    dend_2 { pt3dadd( 0.281724, -40.9714, -0.683134, 0.42 ) }
    dend_2 { pt3dadd( 0.344782, -41.3196, -0.68414, 0.84 ) }
    dend_2 { pt3dadd( 0.344782, -41.3196, -0.68414, 0.7 ) }
    dend_2 { pt3dadd( 0.397043, -41.4915, -0.7059, 0.28 ) }
    dend_2 { pt3dadd( 0.515249, -41.8245, -0.775745, 0.14 ) }
    dend_2 { pt3dadd( 0.636787, -42.1546, -0.860602, 0.1 ) }
    dend_2 { pt3dadd( 0.75919, -42.4807, -0.95204, 0.1 ) }
    dend_2 { pt3dadd( 0.882929, -42.807, -1.04799, 0.1 ) }
    dend_2 { pt3dadd( 1.14087, -43.4916, -1.24297, 0.14 ) }
    dend_2 { pt3dadd( 1.20096, -43.6519, -1.30161, 0.28 ) }
    dend_2 { pt3dadd( 1.25907, -43.8072, -1.36968, 0.1 ) }
    dend_2 { pt3dadd( 1.37385, -44.1184, -1.49817, 0.1 ) }
    dend_2 { pt3dadd( 1.49567, -44.4392, -1.60762, 0.1 ) }
    dend_2 { pt3dadd( 1.62173, -44.7711, -1.67752, 0.1 ) }
    dend_2 { pt3dadd( 1.87006, -45.3898, -1.70369, 0.14 ) }
    dend_2 { pt3dadd( 1.87006, -45.3898, -1.70369, 0.1 ) }
    dend_2 { pt3dadd( 2.13942, -46.0001, -1.67977, 0.28 ) }
    dend_2 { pt3dadd( 2.29844, -46.3662, -1.64926, 0.14 ) }
    dend_2 { pt3dadd( 2.43675, -46.6982, -1.60939, 0.1 ) }
    dend_2 { pt3dadd( 2.58077, -47.0679, -1.55632, 0.1 ) }
    dend_2 { pt3dadd( 2.63737, -47.2378, -1.53041, 0.14 ) }
    dend_2 { pt3dadd( 2.70158, -47.4848, -1.51137, 0.28 ) }
    dend_2 { pt3dadd( 2.77085, -47.8319, -1.51238, 0.14 ) }
    dend_2 { pt3dadd( 2.81556, -48.1911, -1.51339, 0.1 ) }
    dend_2 { pt3dadd( 2.84018, -48.5503, -1.51438, 0.14 ) }
    dend_2 { pt3dadd( 2.84647, -48.9549, -1.51546, 0.1 ) }
    dend_2 { pt3dadd( 2.84675, -49.3544, -1.51652, 0.1 ) }
    dend_2 { pt3dadd( 2.84933, -49.7163, -1.51748, 0.1 ) }
    dend_2 { pt3dadd( 2.84847, -50.1215, -1.4944, 0.1 ) }
    dend_2 { pt3dadd( 2.85165, -50.5169, -1.44657, 0.1 ) }
    dend_2 { pt3dadd( 2.8696, -50.9155, -1.37287, 0.14 ) }
    dend_2 { pt3dadd( 2.88963, -51.0903, -1.33058, 0.28 ) }
    dend_2 { pt3dadd( 2.92081, -51.262, -1.28268, 0.42 ) }
    dend_2 { pt3dadd( 3.0672, -51.8872, -1.10177, 0.56 ) }
    dend_2 { pt3dadd( 3.16774, -52.2295, -1.04079, 0.42 ) }
    dend_2 { pt3dadd( 3.27739, -52.5654, -1.02043, 0.28 ) }
    dend_2 { pt3dadd( 3.38971, -52.9059, -1.06961, 0.14 ) }
    dend_2 { pt3dadd( 3.49546, -53.2437, -1.13637, 0.28 ) }
    dend_2 { pt3dadd( 3.59661, -53.5863, -1.19425, 0.14 ) }
    dend_2 { pt3dadd( 3.80267, -54.2834, -1.31383, 0.1 ) }
    dend_2 { pt3dadd( 3.9115, -54.6268, -1.34806, 0.1 ) }
    dend_2 { pt3dadd( 4.14488, -55.3222, -1.36234, 0.1 ) }
    dend_2 { pt3dadd( 4.36557, -55.9511, -1.3237, 0.1 ) }
    dend_2 { pt3dadd( 4.61385, -56.6378, -1.22694, 0.1 ) }
    dend_2 { pt3dadd( 4.74306, -56.9683, -1.15596, 0.1 ) }
    dend_2 { pt3dadd( 4.88026, -57.3214, -1.0267, 0.14 ) }
    dend_2 { pt3dadd( 5.00028, -57.6356, -0.897818, 0.28 ) }
    dend_2 { pt3dadd( 5.11739, -57.9512, -0.76489, 0.14 ) }
    dend_2 { pt3dadd( 5.23375, -58.2776, -0.666823, 0.1 ) }
    dend_2 { pt3dadd( 5.35243, -58.6538, -0.576687, 0.14 ) }
    dend_2 { pt3dadd( 5.53054, -59.302, -0.417995, 0.1 ) }
    dend_2 { pt3dadd( 5.61133, -59.6455, -0.337407, 0.1 ) }
    dend_2 { pt3dadd( 5.68074, -59.9913, -0.264769, 0.1 ) }
    dend_2 { pt3dadd( 5.74215, -60.3428, -0.204131, 0.1 ) }
    dend_2 { pt3dadd( 5.80396, -60.7345, -0.155878, 0.14 ) }
    dend_2 { pt3dadd( 5.85048, -61.0927, -0.133099, 0.1 ) }
    dend_2 { pt3dadd( 5.89895, -61.4496, -0.134109, 0.1 ) }
    dend_2 { pt3dadd( 5.94982, -61.85, -0.16169, 0.1 ) }
    dend_2 { pt3dadd( 5.99381, -62.1985, -0.20578, 0.14 ) }
    dend_2 { pt3dadd( 6.04207, -62.5498, -0.268405, 0.28 ) }
    dend_2 { pt3dadd( 6.10596, -62.94, -0.35444, 0.28 ) }
    dend_2 { pt3dadd( 6.1671, -63.2845, -0.439909, 0.14 ) }
    dend_2 { pt3dadd( 6.29539, -63.9185, -0.604896, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_2 { pt3dadd( 6.33444, -64.0836, -0.647048, 0.56 ) }
    dend_2 { pt3dadd( 6.42653, -64.4151, -0.753287, 0.42 ) }
    dend_2 { pt3dadd( 6.53052, -64.7424, -0.867757, 0.28 ) }
    dend_2 { pt3dadd( 6.64494, -65.0651, -0.979242, 0.14 ) }
    dend_2 { pt3dadd( 6.76355, -65.3919, -1.07991, 0.1 ) }
    dend_2 { pt3dadd( 6.88396, -65.7215, -1.1609, 0.1 ) }
    dend_2 { pt3dadd( 7.13839, -66.412, -1.33872, 0.14 ) }
    dend_2 { pt3dadd( 7.26074, -66.741, -1.42695, 0.28 ) }
    dend_2 { pt3dadd( 7.3799, -67.0634, -1.51132, 0.14 ) }
    dend_2 { pt3dadd( 7.5052, -67.3867, -1.61518, 0.28 ) }
    dend_2 { pt3dadd( 7.63106, -67.7054, -1.72582, 0.42 ) }
    dend_2 { pt3dadd( 7.63106, -67.7054, -1.72582, 0.56 ) }
    dend_2 { pt3dadd( 7.69346, -67.8577, -1.80113, 0.56 ) }
    dend_2 { pt3dadd( 7.8142, -68.1488, -1.9755, 0.42 ) }
    dend_2 { pt3dadd( 8.06168, -68.7518, -2.36499, 0.28 ) }
    dend_2 { pt3dadd( 8.17635, -69.0395, -2.54885, 0.14 ) }
    dend_2 { pt3dadd( 8.38348, -69.5855, -2.9195, 0.1 ) }
    dend_2 { pt3dadd( 8.45861, -69.779, -3.06913, 0.56 ) }
    dend_2 { pt3dadd( 8.5638, -70.0498, -3.2714, 0.42 ) }
    dend_2 { pt3dadd( 8.67173, -70.3347, -3.46349, 0.56 ) }
    dend_2 { pt3dadd( 8.78027, -70.6408, -3.62314, 0.7 ) }
    dend_2 { pt3dadd( 9.01764, -71.258, -3.94771, 0.56 ) }
    dend_2 { pt3dadd( 9.26025, -71.8188, -4.2719, 0.42 ) }
    dend_2 { pt3dadd( 9.51261, -72.3308, -4.61798, 0.42 ) }
    dend_2 { pt3dadd( 9.63924, -72.5911, -4.83223, 0.56 ) }
    dend_2 { pt3dadd( 9.75886, -72.8459, -5.05692, 0.56 ) }
    dend_2 { pt3dadd( 9.98785, -73.3957, -5.528, 0.42 ) }
    dend_2 { pt3dadd( 10.1974, -73.9746, -5.96862, 0.28 ) }
    dend_2 { pt3dadd( 10.2421, -74.1181, -6.06937, 0.98 ) }
    dend_2 { pt3dadd( 10.4151, -74.7222, -6.49079, 0.84 ) }
    dend_2 { pt3dadd( 10.4932, -75.0248, -6.67334, 0.7 ) }
    dend_2 { pt3dadd( 10.5753, -75.3865, -6.83811, 0.56 ) }
    dend_2 { pt3dadd( 10.6429, -75.7307, -6.92706, 0.42 ) }
    dend_2 { pt3dadd( 10.7046, -76.0786, -6.94801, 0.28 ) }
    dend_2 { pt3dadd( 10.7714, -76.4337, -6.92796, 0.14 ) }
    dend_2 { pt3dadd( 10.8435, -76.7815, -6.86801, 0.28 ) }
    dend_2 { pt3dadd( 10.9178, -77.1285, -6.79695, 0.14 ) }
    dend_2 { pt3dadd( 10.9961, -77.4714, -6.71993, 0.1 ) }
    dend_2 { pt3dadd( 11.159, -78.1908, -6.55392, 0.1 ) }
    dend_2 { pt3dadd( 11.2436, -78.5323, -6.47687, 0.1 ) }
    dend_2 { pt3dadd( 11.3419, -78.8714, -6.40608, 0.1 ) }
    dend_2 { pt3dadd( 11.4534, -79.2101, -6.3442, 0.1 ) }
    dend_2 { pt3dadd( 11.5709, -79.5472, -6.2961, 0.1 ) }
    dend_2 { pt3dadd( 11.6941, -79.8798, -6.26927, 0.1 ) }
    dend_2 { pt3dadd( 11.8421, -80.2568, -6.27047, 0.1 ) }
    dend_2 { pt3dadd( 11.9856, -80.6305, -6.27165, 0.1 ) }
    dend_2 { pt3dadd( 12.0483, -80.8003, -6.27218, 0.1 ) }
    dend_2 { pt3dadd( 12.1359, -81.0347, -6.27291, 0.84 ) }
    dend_2 { pt3dadd( 12.2604, -81.3726, -6.27398, 0.7 ) }
    dend_2 { pt3dadd( 12.3889, -81.711, -6.27504, 0.56 ) }
    dend_2 { pt3dadd( 12.5164, -82.0478, -6.2761, 0.42 ) }
    dend_2 { pt3dadd( 12.6458, -82.3791, -6.27715, 0.28 ) }
    dend_2 { pt3dadd( 12.7934, -82.7551, -6.30795, 0.14 ) }
    dend_2 { pt3dadd( 12.9136, -83.0794, -6.38308, 0.1 ) }
    dend_2 { pt3dadd( 13.0206, -83.4385, -6.54788, 0.14 ) }
    dend_2 { pt3dadd( 13.0506, -83.5844, -6.63939, 0.7 ) }
    dend_2 { pt3dadd( 13.0792, -83.8624, -6.86654, 0.56 ) }
    dend_2 { pt3dadd( 13.0926, -84.3928, -7.41067, 0.42 ) }
    dend_2 { pt3dadd( 13.0689, -84.8954, -7.97494, 0.28 ) }
    dend_2 { pt3dadd( 13.0255, -85.3331, -8.5088, 0.14 ) }
    dend_2 { pt3dadd( 12.9906, -85.5912, -8.81998, 0.1 ) }
    dend_2 { pt3dadd( 12.9249, -86.0873, -9.38669, 0.1 ) }
    dend_2 { pt3dadd( 12.8689, -86.5553, -9.85948, 0.1 ) }
    dend_2 { pt3dadd( 12.8476, -86.8812, -10.1003, 0.14 ) }
    dend_2 { pt3dadd( 12.8422, -87.5807, -10.387, 0.28 ) }
    dend_2 { pt3dadd( 12.8764, -88.2319, -10.5277, 0.1 ) }
    dend_2 { pt3dadd( 12.9114, -88.5847, -10.6004, 0.1 ) }
    dend_2 { pt3dadd( 13.0076, -89.294, -10.7746, 0.1 ) }
    dend_2 { pt3dadd( 13.0618, -89.6335, -10.8876, 0.1 ) }
    dend_2 { pt3dadd( 13.122, -89.9871, -11.0635, 0.14 ) }
    dend_2 { pt3dadd( 13.229, -90.6085, -11.4461, 0.28 ) }
    dend_2 { pt3dadd( 13.3268, -91.1983, -11.8764, 0.42 ) }
    dend_2 { pt3dadd( 13.4015, -91.722, -12.2836, 0.56 ) }
    dend_2 { pt3dadd( 13.42, -91.8617, -12.3943, 0.7 ) }
    dend_2 { pt3dadd( 13.4478, -92.0677, -12.5338, 0.28 ) }
    dend_2 { pt3dadd( 13.4958, -92.3793, -12.7116, 0.14 ) }
    dend_2 { pt3dadd( 13.5389, -92.7122, -12.8419, 0.1 ) }
    dend_2 { pt3dadd( 13.5773, -93.0943, -12.9477, 0.1 ) }
    dend_2 { pt3dadd( 13.6022, -93.4447, -13.027, 0.1 ) }
    dend_2 { pt3dadd( 13.6165, -93.7967, -13.1098, 0.1 ) }
    dend_2 { pt3dadd( 13.6221, -94.5003, -13.3278, 0.14 ) }
    dend_2 { pt3dadd( 13.6165, -94.7411, -13.4142, 0.1 ) }
    dend_2 { pt3dadd( 13.6022, -95.1132, -13.5589, 0.1 ) }
    dend_2 { pt3dadd( 13.583, -95.4895, -13.7066, 0.1 ) }
    dend_2 { pt3dadd( 13.5608, -95.8638, -13.8444, 0.1 ) }
    dend_2 { pt3dadd( 13.5161, -96.5706, -14.1185, 0.1 ) }
    dend_2 { pt3dadd( 13.5026, -96.9086, -14.242, 0.14 ) }
    dend_2 { pt3dadd( 13.5038, -97.0715, -14.3054, 0.1 ) }
    dend_2 { pt3dadd( 13.524, -97.4486, -14.4538, 0.1 ) }
    dend_2 { pt3dadd( 13.5503, -97.7786, -14.6001, 0.1 ) }
    dend_2 { pt3dadd( 13.623, -98.4656, -14.9087, 0.1 ) }
    dend_2 { pt3dadd( 13.6614, -98.787, -15.0706, 0.14 ) }
    dend_2 { pt3dadd( 13.699, -99.0949, -15.2536, 0.28 ) }
    dend_2 { pt3dadd( 13.7467, -99.3961, -15.4486, 0.28 ) }
    dend_2 { pt3dadd( 13.874, -100.014, -15.8664, 0.14 ) }
    dend_2 { pt3dadd( 13.9437, -100.301, -16.0765, 0.1 ) }
    dend_2 { pt3dadd( 14.0912, -100.809, -16.4409, 0.14 ) }
    dend_2 { pt3dadd( 14.1313, -100.951, -16.5431, 0.56 ) }
    dend_2 { pt3dadd( 14.2234, -101.278, -16.7627, 0.56 ) }
    dend_2 { pt3dadd( 14.3031, -101.584, -16.9349, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 14.4538, -102.253, -17.2047, 0.56 ) }
    dend_2 { pt3dadd( 14.5149, -102.591, -17.313, 0.42 ) }
    dend_2 { pt3dadd( 14.565, -102.978, -17.3973, 0.28 ) }
    dend_2 { pt3dadd( 14.596, -103.331, -17.4615, 0.14 ) }
    dend_2 { pt3dadd( 14.6143, -103.731, -17.5174, 0.1 ) }
    dend_2 { pt3dadd( 14.6297, -104.129, -17.5493, 0.1 ) }
    dend_2 { pt3dadd( 14.6418, -104.309, -17.5498, 0.1 ) }
    dend_2 { pt3dadd( 14.6881, -104.712, -17.5509, 0.1 ) }
    dend_2 { pt3dadd( 14.7598, -105.067, -17.5519, 0.14 ) }
    dend_2 { pt3dadd( 14.8073, -105.24, -17.5525, 0.56 ) }
    dend_2 { pt3dadd( 14.9254, -105.576, -17.5535, 0.42 ) }
    dend_2 { pt3dadd( 15.0735, -105.946, -17.5859, 0.28 ) }
    dend_2 { pt3dadd( 15.2057, -106.279, -17.6356, 0.14 ) }
    dend_2 { pt3dadd( 15.3511, -106.645, -17.7089, 0.1 ) }
    dend_2 { pt3dadd( 15.466, -106.977, -17.786, 0.1 ) }
    dend_2 { pt3dadd( 15.5664, -107.315, -17.8692, 0.1 ) }
    dend_2 { pt3dadd( 15.7343, -107.996, -18.0946, 0.1 ) }
    dend_2 { pt3dadd( 15.7813, -108.231, -18.1846, 0.84 ) }
    dend_2 { pt3dadd( 15.8397, -108.556, -18.3167, 0.7 ) }
    dend_2 { pt3dadd( 15.9007, -108.928, -18.4663, 0.56 ) }
    dend_2 { pt3dadd( 15.9598, -109.263, -18.5912, 0.42 ) }
    dend_2 { pt3dadd( 16.1085, -109.95, -18.8108, 0.28 ) }
    dend_2 { pt3dadd( 16.1959, -110.284, -18.8901, 0.14 ) }
    dend_2 { pt3dadd( 16.2999, -110.622, -18.9633, 0.1 ) }
    dend_2 { pt3dadd( 16.4186, -110.957, -19.0252, 0.1 ) }
    dend_2 { pt3dadd( 16.5527, -111.29, -19.073, 0.1 ) }
    dend_2 { pt3dadd( 16.702, -111.66, -19.1042, 0.1 ) }
    dend_2 { pt3dadd( 16.8359, -111.996, -19.1053, 0.1 ) }
    dend_2 { pt3dadd( 16.9587, -112.334, -19.1063, 0.1 ) }
    dend_2 { pt3dadd( 17.0819, -112.715, -19.1075, 0.14 ) }
    dend_2 { pt3dadd( 17.1309, -112.889, -19.1228, 0.28 ) }
    dend_2 { pt3dadd( 17.1887, -113.129, -19.1609, 0.28 ) }
    dend_2 { pt3dadd( 17.258, -113.475, -19.2347, 0.14 ) }
    dend_2 { pt3dadd( 17.3314, -113.861, -19.3313, 0.1 ) }
    dend_2 { pt3dadd( 17.3954, -114.203, -19.4228, 0.1 ) }
    dend_2 { pt3dadd( 17.5227, -114.9, -19.6173, 0.14 ) }
    dend_2 { pt3dadd( 17.5545, -115.07, -19.6647, 0.28 ) }
    dend_2 { pt3dadd( 17.625, -115.413, -19.7563, 0.1 ) }
    dend_2 { pt3dadd( 17.6965, -115.756, -19.8375, 0.1 ) }
    dend_2 { pt3dadd( 17.7724, -116.097, -19.932, 0.14 ) }
    dend_2 { pt3dadd( 17.7724, -116.097, -19.932, 0.28 ) }
    dend_2 { pt3dadd( 17.8118, -116.341, -19.9902, 0.28 ) }
    dend_2 { pt3dadd( 17.8643, -116.687, -20.0841, 0.28 ) }
    dend_2 { pt3dadd( 17.9146, -117.019, -20.2131, 0.42 ) }
    dend_2 { pt3dadd( 18.0224, -117.684, -20.5127, 0.42 ) }
    dend_2 { pt3dadd( 18.0681, -117.903, -20.6365, 0.1 ) }
    dend_2 { pt3dadd( 18.1408, -118.198, -20.8192, 0.1 ) }
    dend_2 { pt3dadd( 18.2252, -118.491, -21.0107, 0.1 ) }
    dend_2 { pt3dadd( 18.4211, -119.085, -21.4012, 0.1 ) }
    dend_2 { pt3dadd( 18.5294, -119.378, -21.5808, 0.1 ) }
    dend_2 { pt3dadd( 18.8002, -120.007, -21.908, 0.1 ) }
    dend_2 { pt3dadd( 18.8712, -120.156, -21.9783, 0.1 ) }
    dend_2 { pt3dadd( 19.0245, -120.451, -22.1214, 0.1 ) }
    dend_2 { pt3dadd( 19.2021, -120.779, -22.2673, 0.14 ) }
    dend_2 { pt3dadd( 19.3675, -121.082, -22.3748, 0.1 ) }
    dend_2 { pt3dadd( 19.5433, -121.416, -22.5096, 0.1 ) }
    dend_2 { pt3dadd( 19.6939, -121.718, -22.6336, 0.1 ) }
    dend_2 { pt3dadd( 20.0093, -122.343, -22.9277, 0.1 ) }
    dend_2 { pt3dadd( 20.1606, -122.634, -23.0779, 0.1 ) }
    dend_2 { pt3dadd( 20.3134, -122.917, -23.2293, 0.1 ) }
    dend_2 { pt3dadd( 20.6536, -123.493, -23.5372, 0.14 ) }
    dend_2 { pt3dadd( 20.7441, -123.634, -23.6062, 0.28 ) }
    dend_2 { pt3dadd( 20.8777, -123.823, -23.7015, 0.1 ) }
    dend_2 { pt3dadd( 21.1053, -124.128, -23.8398, 0.1 ) }
    dend_2 { pt3dadd( 21.3452, -124.423, -23.9791, 0.1 ) }
    dend_2 { pt3dadd( 21.5043, -124.606, -24.0593, 0.1 ) }
    dend_2 { pt3dadd( 21.7626, -124.895, -24.1594, 0.1 ) }
    dend_2 { pt3dadd( 22.1962, -125.375, -24.3265, 0.1 ) }
    dend_2 { pt3dadd( 22.3107, -125.508, -24.3705, 0.1 ) }
    dend_2 { pt3dadd( 22.555, -125.812, -24.4604, 0.1 ) }
    dend_2 { pt3dadd( 22.7874, -126.129, -24.5356, 0.1 ) }
    dend_2 { pt3dadd( 23.0078, -126.464, -24.5905, 0.1 ) }
    dend_2 { pt3dadd( 23.1376, -126.678, -24.5905, 0.14 ) }
    dend_2 { pt3dadd( 23.3125, -126.991, -24.543, 0.56 ) }
    dend_2 { pt3dadd( 23.4701, -127.308, -24.4788, 0.42 ) }
    dend_2 { pt3dadd( 23.5997, -127.637, -24.401, 0.28 ) }
    dend_2 { pt3dadd( 23.705, -127.971, -24.3169, 0.14 ) }
    dend_2 { pt3dadd( 23.8704, -128.607, -24.2062, 0.1 ) }
    dend_2 { pt3dadd( 23.9513, -128.957, -24.2007, 0.1 ) }
    dend_2 { pt3dadd( 24.0219, -129.309, -24.2472, 0.1 ) }
    dend_2 { pt3dadd( 24.0829, -129.697, -24.3505, 0.1 ) }
    dend_2 { pt3dadd( 24.1256, -130.028, -24.473, 0.1 ) }
    dend_2 { pt3dadd( 24.1895, -130.7, -24.7684, 0.1 ) }
    dend_2 { pt3dadd( 24.2418, -131.361, -25.0886, 0.1 ) }
    dend_2 { pt3dadd( 24.2536, -131.588, -25.2079, 0.56 ) }
    dend_2 { pt3dadd( 24.2691, -131.939, -25.3947, 0.42 ) }
    dend_2 { pt3dadd( 24.2863, -132.261, -25.5549, 0.28 ) }
    dend_2 { pt3dadd( 24.3078, -132.634, -25.7114, 0.14 ) }
    dend_2 { pt3dadd( 24.3284, -132.984, -25.7929, 0.1 ) }
    dend_2 { pt3dadd( 24.3869, -133.733, -25.8739, 0.14 ) }
    dend_2 { pt3dadd( 24.4205, -134.091, -25.8936, 0.28 ) }
    dend_2 { pt3dadd( 24.4586, -134.449, -25.8946, 0.14 ) }
    dend_2 { pt3dadd( 24.4925, -134.809, -25.8768, 0.1 ) }
    dend_2 { pt3dadd( 24.5513, -135.563, -25.8509, 0.1 ) }
    dend_2 { pt3dadd( 24.5652, -135.925, -25.8387, 0.1 ) }
    dend_2 { pt3dadd( 24.5725, -136.33, -25.8199, 0.1 ) }
    dend_2 { pt3dadd( 24.5635, -136.685, -25.8288, 0.1 ) }
    dend_2 { pt3dadd( 24.5372, -137.088, -25.8682, 0.1 ) }
    dend_2 { pt3dadd( 24.4663, -137.766, -25.9846, 0.14 ) }
    dend_2 { pt3dadd( 24.4348, -138.008, -26.0431, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 24.3711, -138.354, -26.1185, 0.14 ) }
    dend_2 { pt3dadd( 24.2913, -138.744, -26.1909, 0.28 ) }
    dend_2 { pt3dadd( 24.2044, -139.131, -26.2433, 0.42 ) }
    dend_2 { pt3dadd( 24.1535, -139.381, -26.2616, 0.28 ) }
    dend_2 { pt3dadd( 24.0819, -139.772, -26.2625, 0.14 ) }
    dend_2 { pt3dadd( 24.0028, -140.281, -26.2638, 0.1 ) }
    dend_2 { pt3dadd( 23.9793, -140.454, -26.2642, 0.1 ) }
    dend_2 { pt3dadd( 23.9424, -140.857, -26.2652, 0.1 ) }
    dend_2 { pt3dadd( 23.9313, -141.217, -26.2661, 0.1 ) }
    dend_2 { pt3dadd( 23.947, -141.615, -26.2672, 0.1 ) }
    dend_2 { pt3dadd( 23.9871, -141.973, -26.2682, 0.1 ) }
    dend_2 { pt3dadd( 24.0153, -142.152, -26.2687, 0.1 ) }
    dend_2 { pt3dadd( 24.0454, -142.329, -26.2692, 0.1 ) }
    dend_2 { pt3dadd( 24.1144, -142.684, -26.2703, 0.1 ) }
    dend_2 { pt3dadd( 24.1783, -143.037, -26.3006, 0.14 ) }
    dend_2 { pt3dadd( 24.2418, -143.39, -26.3533, 0.28 ) }
    dend_2 { pt3dadd( 24.3075, -143.777, -26.4272, 0.14 ) }
    dend_2 { pt3dadd( 24.3663, -144.126, -26.5019, 0.1 ) }
    dend_2 { pt3dadd( 24.4236, -144.472, -26.5836, 0.1 ) }
    dend_2 { pt3dadd( 24.5323, -145.206, -26.7283, 0.1 ) }
    dend_2 { pt3dadd( 24.5817, -145.559, -26.7792, 0.1 ) }
    dend_2 { pt3dadd( 24.6333, -145.916, -26.8058, 0.1 ) }
    dend_2 { pt3dadd( 24.6839, -146.273, -26.8023, 0.1 ) }
    dend_2 { pt3dadd( 24.6839, -146.273, -26.8023, 0.1 ) }
    dend_2 { pt3dadd( 24.7553, -146.948, -26.6804, 0.1 ) }
    dend_2 { pt3dadd( 24.7916, -147.295, -26.5939, 0.1 ) }
    dend_2 { pt3dadd( 24.8254, -147.648, -26.5174, 0.1 ) }
    dend_2 { pt3dadd( 24.858, -148.05, -26.4806, 0.1 ) }
    dend_2 { pt3dadd( 24.8878, -148.405, -26.4885, 0.14 ) }
    dend_2 { pt3dadd( 24.9282, -148.806, -26.5343, 0.28 ) }
    dend_2 { pt3dadd( 24.9717, -149.158, -26.6065, 0.42 ) }
    dend_2 { pt3dadd( 25.0123, -149.507, -26.6845, 0.28 ) }
    dend_2 { pt3dadd( 25.1025, -150.239, -26.8527, 0.14 ) }
    dend_2 { pt3dadd( 25.1526, -150.587, -26.9311, 0.1 ) }
    dend_2 { pt3dadd( 25.207, -150.935, -27.0034, 0.1 ) }
    dend_2 { pt3dadd( 25.2699, -151.286, -27.0656, 0.1 ) }
    dend_2 { pt3dadd( 25.3358, -151.677, -27.1185, 0.1 ) }
    dend_2 { pt3dadd( 25.396, -152.032, -27.1461, 0.14 ) }
    dend_2 { pt3dadd( 25.4603, -152.387, -27.1471, 0.1 ) }
    dend_2 { pt3dadd( 25.5174, -152.744, -27.1481, 0.14 ) }
    dend_2 { pt3dadd( 25.5708, -153.1, -27.1491, 0.28 ) }
    dend_2 { pt3dadd( 25.6082, -153.348, -27.1498, 0.1 ) }
    dend_2 { pt3dadd( 25.6669, -153.703, -27.1508, 0.1 ) }
    dend_2 { pt3dadd( 25.7261, -154.06, -27.1519, 0.1 ) }
    dend_2 { pt3dadd( 25.7947, -154.454, -27.153, 0.1 ) }
    dend_2 { pt3dadd( 25.8626, -154.809, -27.154, 0.1 ) }
    dend_2 { pt3dadd( 25.9311, -155.163, -27.1551, 0.1 ) }
    dend_2 { pt3dadd( 26.0044, -155.517, -27.1561, 0.1 ) }
    dend_2 { pt3dadd( 26.0707, -155.871, -27.1571, 0.1 ) }
    dend_2 { pt3dadd( 26.1338, -156.226, -27.1581, 0.1 ) }
    dend_2 { pt3dadd( 26.1966, -156.575, -27.1838, 0.1 ) }
    dend_2 { pt3dadd( 26.2637, -156.972, -27.2359, 0.1 ) }
    dend_2 { pt3dadd( 26.3222, -157.323, -27.2978, 0.1 ) }
    dend_2 { pt3dadd( 26.3879, -157.709, -27.378, 0.1 ) }
    dend_2 { pt3dadd( 26.4509, -158.057, -27.4571, 0.1 ) }
    dend_2 { pt3dadd( 26.5873, -158.76, -27.6295, 0.1 ) }
    dend_2 { pt3dadd( 26.661, -159.103, -27.7175, 0.1 ) }
    dend_2 { pt3dadd( 26.7457, -159.442, -27.8034, 0.1 ) }
    dend_2 { pt3dadd( 26.8357, -159.778, -27.8795, 0.1 ) }
    dend_2 { pt3dadd( 26.9344, -160.113, -27.9689, 0.1 ) }
    dend_2 { pt3dadd( 26.9344, -160.113, -27.9689, 0.1 ) }
    dend_2 { pt3dadd( 26.9843, -160.282, -28.0082, 0.1 ) }
    dend_2 { pt3dadd( 27.0825, -160.617, -28.0982, 0.1 ) }
    dend_2 { pt3dadd( 27.1701, -160.946, -28.2213, 0.1 ) }
    dend_2 { pt3dadd( 27.3331, -161.606, -28.5043, 0.1 ) }
    dend_2 { pt3dadd( 27.4093, -161.928, -28.647, 0.1 ) }
    dend_2 { pt3dadd( 27.4834, -162.247, -28.7841, 0.1 ) }
    dend_2 { pt3dadd( 27.5578, -162.574, -28.917, 0.1 ) }
    dend_2 { pt3dadd( 27.7155, -163.27, -29.1748, 0.1 ) }
    dend_2 { pt3dadd( 27.7921, -163.607, -29.2777, 0.1 ) }
    dend_2 { pt3dadd( 27.8714, -163.946, -29.3496, 0.1 ) }
    dend_2 { pt3dadd( 27.9551, -164.291, -29.4118, 0.1 ) }
    dend_2 { pt3dadd( 28.0441, -164.639, -29.4588, 0.1 ) }
    dend_2 { pt3dadd( 28.1389, -164.985, -29.4849, 0.1 ) }
    dend_2 { pt3dadd( 28.2407, -165.33, -29.486, 0.1 ) }
    dend_2 { pt3dadd( 28.343, -165.678, -29.487, 0.1 ) }
    dend_2 { pt3dadd( 28.4428, -166.017, -29.4881, 0.1 ) }
    dend_2 { pt3dadd( 28.545, -166.364, -29.4891, 0.1 ) }
    dend_2 { pt3dadd( 28.6466, -166.71, -29.4902, 0.1 ) }
    dend_2 { pt3dadd( 28.7489, -167.057, -29.4912, 0.1 ) }
    dend_2 { pt3dadd( 28.8508, -167.402, -29.4923, 0.14 ) }
    dend_2 { pt3dadd( 28.9522, -167.747, -29.5187, 0.1 ) }
    dend_2 { pt3dadd( 29.0589, -168.083, -29.5678, 0.14 ) }
    dend_2 { pt3dadd( 29.1723, -168.418, -29.6363, 0.1 ) }
    dend_2 { pt3dadd( 29.2313, -168.584, -29.6774, 0.1 ) }
    dend_2 { pt3dadd( 29.2916, -168.748, -29.7221, 0.1 ) }
    dend_2 { pt3dadd( 29.5408, -169.417, -29.907, 0.1 ) }
    dend_2 { pt3dadd( 29.6865, -169.781, -30.0037, 0.1 ) }
    dend_2 { pt3dadd( 29.8213, -170.106, -30.0828, 0.14 ) }
    dend_2 { pt3dadd( 29.9591, -170.432, -30.1495, 0.1 ) }
    dend_2 { pt3dadd( 30.0952, -170.757, -30.1985, 0.1 ) }
    dend_2 { pt3dadd( 30.2311, -171.089, -30.2267, 0.1 ) }
    dend_2 { pt3dadd( 30.3784, -171.465, -30.258, 0.14 ) }
    dend_2 { pt3dadd( 30.4394, -171.631, -30.283, 0.56 ) }
    dend_2 { pt3dadd( 30.5598, -171.966, -30.3502, 0.42 ) }
    dend_2 { pt3dadd( 30.6657, -172.294, -30.4545, 0.28 ) }
    dend_2 { pt3dadd( 30.7596, -172.619, -30.5832, 0.28 ) }
    dend_2 { pt3dadd( 30.9292, -173.276, -30.871, 0.42 ) }
    dend_2 { pt3dadd( 30.9985, -173.601, -30.9961, 0.42 ) }
    dend_2 { pt3dadd( 31.0639, -173.939, -31.104, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 31.1941, -174.665, -31.2845, 0.14 ) }
    dend_2 { pt3dadd( 31.2477, -175.016, -31.3406, 0.1 ) }
    dend_2 { pt3dadd( 31.2962, -175.373, -31.3606, 0.1 ) }
    dend_2 { pt3dadd( 31.3798, -176.123, -31.319, 0.14 ) }
    dend_2 { pt3dadd( 31.4093, -176.48, -31.2859, 0.28 ) }
    dend_2 { pt3dadd( 31.4347, -176.838, -31.2396, 0.14 ) }
    dend_2 { pt3dadd( 31.4648, -177.231, -31.1745, 0.28 ) }
    dend_2 { pt3dadd( 31.4857, -177.59, -31.131, 0.14 ) }
    dend_2 { pt3dadd( 31.5086, -177.994, -31.1046, 0.1 ) }
    dend_2 { pt3dadd( 31.5369, -178.392, -31.1057, 0.1 ) }
    dend_2 { pt3dadd( 31.566, -178.751, -31.1067, 0.1 ) }
    dend_2 { pt3dadd( 31.6035, -179.11, -31.1077, 0.1 ) }
    dend_2 { pt3dadd( 31.6524, -179.507, -31.1088, 0.1 ) }
    dend_2 { pt3dadd( 31.7005, -179.866, -31.1098, 0.1 ) }
    dend_2 { pt3dadd( 31.7512, -180.222, -31.1108, 0.1 ) }
    dend_2 { pt3dadd( 31.8026, -180.579, -31.1118, 0.1 ) }
    dend_2 { pt3dadd( 31.8519, -180.937, -31.1128, 0.1 ) }
    dend_2 { pt3dadd( 31.9, -181.334, -31.114, 0.1 ) }
    dend_2 { pt3dadd( 31.9219, -181.513, -31.1145, 0.1 ) }
    dend_2 { pt3dadd( 31.9672, -181.916, -31.1156, 0.1 ) }
    dend_2 { pt3dadd( 32.0086, -182.273, -31.1166, 0.1 ) }
    dend_2 { pt3dadd( 32.0475, -182.627, -31.1176, 0.1 ) }
    dend_2 { pt3dadd( 32.0954, -183.03, -31.1187, 0.1 ) }
    dend_2 { pt3dadd( 32.1465, -183.388, -31.1197, 0.1 ) }
    dend_2 { pt3dadd( 32.2022, -183.744, -31.1207, 0.1 ) }
    dend_2 { pt3dadd( 32.2581, -184.093, -31.1463, 0.1 ) }
    dend_2 { pt3dadd( 32.3184, -184.489, -31.1981, 0.1 ) }
    dend_2 { pt3dadd( 32.3709, -184.84, -31.2615, 0.1 ) }
    dend_2 { pt3dadd( 32.4198, -185.19, -31.3412, 0.1 ) }
    dend_2 { pt3dadd( 32.4602, -185.535, -31.433, 0.1 ) }
    dend_2 { pt3dadd( 32.5372, -186.258, -31.6415, 0.1 ) }
    dend_2 { pt3dadd( 32.5565, -186.429, -31.6914, 0.1 ) }
    dend_2 { pt3dadd( 32.5565, -186.429, -31.6914, 0.1 ) }
    dend_2 { pt3dadd( 32.5933, -186.676, -31.747, 0.1 ) }
    dend_2 { pt3dadd( 32.6533, -187.023, -31.8017, 0.1 ) }
    dend_2 { pt3dadd( 32.7259, -187.374, -31.8298, 0.1 ) }
    dend_2 { pt3dadd( 32.8028, -187.727, -31.7998, 0.1 ) }
    dend_2 { pt3dadd( 32.8784, -188.075, -31.7501, 0.1 ) }
    dend_2 { pt3dadd( 32.9556, -188.421, -31.6883, 0.1 ) }
    dend_2 { pt3dadd( 33.0356, -188.767, -31.6149, 0.1 ) }
    dend_2 { pt3dadd( 33.1042, -189.104, -31.5325, 0.1 ) }
    dend_2 { pt3dadd( 33.2202, -189.83, -31.342, 0.1 ) }
    dend_2 { pt3dadd( 33.2641, -190.181, -31.2742, 0.1 ) }
    dend_2 { pt3dadd( 33.2922, -190.54, -31.2376, 0.1 ) }
    dend_2 { pt3dadd( 33.2922, -190.54, -31.2376, 0.1 ) }
    dend_2 { pt3dadd( 33.3022, -190.788, -31.2882, 0.1 ) }
    dend_2 { pt3dadd( 33.3206, -191.167, -31.4297, 0.1 ) }
    dend_2 { pt3dadd( 33.351, -191.823, -31.7617, 0.1 ) }
    dend_2 { pt3dadd( 33.3669, -192.175, -31.9475, 0.1 ) }
    dend_2 { pt3dadd( 33.38, -192.496, -32.1111, 0.1 ) }
    dend_2 { pt3dadd( 33.4197, -193.164, -32.4204, 0.14 ) }
    dend_2 { pt3dadd( 33.4311, -193.327, -32.4985, 0.1 ) }
    dend_2 { pt3dadd( 33.4434, -193.558, -32.6033, 0.1 ) }
    dend_2 { pt3dadd( 33.4559, -193.896, -32.7321, 0.1 ) }
    dend_2 { pt3dadd( 33.4644, -194.277, -32.8691, 0.1 ) }
    dend_2 { pt3dadd( 33.4606, -194.623, -32.9753, 0.1 ) }
    dend_2 { pt3dadd( 33.4467, -195.36, -33.1484, 0.1 ) }
    dend_2 { pt3dadd( 33.4357, -195.755, -33.2369, 0.1 ) }
    dend_2 { pt3dadd( 33.4291, -196.107, -33.3097, 0.1 ) }
    dend_2 { pt3dadd( 33.4236, -196.499, -33.3799, 0.1 ) }
    dend_2 { pt3dadd( 33.4195, -196.901, -33.4361, 0.1 ) }
    dend_2 { pt3dadd( 33.4185, -197.256, -33.4648, 0.14 ) }
    dend_2 { pt3dadd( 33.4262, -197.511, -33.4655, 0.1 ) }
    dend_2 { pt3dadd( 33.4419, -197.871, -33.4665, 0.1 ) }
    dend_2 { pt3dadd( 33.4626, -198.231, -33.4674, 0.14 ) }
    dend_2 { pt3dadd( 33.4854, -198.48, -33.4681, 0.1 ) }
    dend_2 { pt3dadd( 33.5261, -198.84, -33.4691, 0.1 ) }
    dend_2 { pt3dadd( 33.5634, -199.198, -33.4701, 0.1 ) }
    dend_2 { pt3dadd( 33.6009, -199.601, -33.4713, 0.1 ) }
    dend_2 { pt3dadd( 33.6182, -199.954, -33.4722, 0.1 ) }
    dend_2 { pt3dadd( 33.6186, -200.314, -33.4732, 0.1 ) }
    dend_2 { pt3dadd( 33.6186, -200.314, -33.4732, 0.14 ) }
    dend_2 { pt3dadd( 33.5912, -200.568, -33.4506, 0.84 ) }
    dend_2 { pt3dadd( 33.5298, -200.956, -33.3881, 0.7 ) }
    dend_2 { pt3dadd( 33.4648, -201.349, -33.3063, 0.56 ) }
    dend_2 { pt3dadd( 33.4213, -201.594, -33.2496, 0.42 ) }
    dend_2 { pt3dadd( 33.3613, -201.977, -33.1591, 0.28 ) }
    dend_2 { pt3dadd( 33.2787, -202.714, -32.9911, 0.14 ) }
    dend_2 { pt3dadd( 33.2572, -203.103, -32.906, 0.1 ) }
    dend_2 { pt3dadd( 33.2517, -203.456, -32.8355, 0.1 ) }
    dend_2 { pt3dadd( 33.2545, -203.854, -32.767, 0.1 ) }
    dend_2 { pt3dadd( 33.261, -204.205, -32.7219, 0.1 ) }
    dend_2 { pt3dadd( 33.2723, -204.565, -32.6966, 0.1 ) }
    dend_2 { pt3dadd( 33.2826, -204.926, -32.6976, 0.1 ) }
    dend_2 { pt3dadd( 33.2913, -205.331, -32.7266, 0.1 ) }
    dend_2 { pt3dadd( 33.2887, -205.579, -32.7596, 0.1 ) }
    dend_2 { pt3dadd( 33.2731, -205.977, -32.8336, 0.1 ) }
    dend_2 { pt3dadd( 33.2436, -206.327, -32.9117, 0.1 ) }
    dend_2 { pt3dadd( 33.1979, -206.711, -33.005, 0.1 ) }
    dend_2 { pt3dadd( 33.1204, -207.355, -33.1643, 0.1 ) }
    dend_2 { pt3dadd( 33.0937, -207.602, -33.2227, 0.1 ) }
    dend_2 { pt3dadd( 33.051, -207.99, -33.3055, 0.1 ) }
    dend_2 { pt3dadd( 33.0082, -208.387, -33.3772, 0.1 ) }
    dend_2 { pt3dadd( 32.9646, -208.774, -33.4582, 0.1 ) }
    dend_2 { pt3dadd( 32.9349, -209.125, -33.5322, 0.1 ) }
    dend_2 { pt3dadd( 32.9095, -209.523, -33.6047, 0.1 ) }
    dend_2 { pt3dadd( 32.9003, -209.767, -33.6572, 0.1 ) }
    dend_2 { pt3dadd( 32.8952, -210.115, -33.7504, 0.1 ) }
    dend_2 { pt3dadd( 32.903, -210.722, -33.9611, 0.1 ) }
    dend_2 { pt3dadd( 32.9154, -211.048, -34.1134, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 32.9154, -211.048, -34.1134, 0.42 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 1/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -4.81052, 43.7969, -4.37186, 0.84 ) }
    dend_63 { pt3dadd( -5.14166, 44.8539, -4.16878, 0.84 ) }
    dend_63 { pt3dadd( -5.27355, 45.3694, -4.07434, 0.7 ) }
    dend_63 { pt3dadd( -5.39739, 45.8991, -3.97675, 0.56 ) }
    dend_63 { pt3dadd( -5.51076, 46.429, -3.88357, 0.42 ) }
    dend_63 { pt3dadd( -5.60478, 46.9652, -3.78859, 0.28 ) }
    dend_63 { pt3dadd( -5.68584, 47.5014, -3.69726, 0.42 ) }
    dend_63 { pt3dadd( -5.70434, 47.8804, -3.65213, 0.56 ) }
    dend_63 { pt3dadd( -5.7078, 48.1446, -3.61389, 0.7 ) }
    dend_63 { pt3dadd( -5.70399, 48.681, -3.52844, 0.84 ) }
    dend_63 { pt3dadd( -5.7252, 49.2785, -3.36567, 0.7 ) }
    dend_63 { pt3dadd( -5.75766, 49.7976, -3.17897, 0.56 ) }
    dend_63 { pt3dadd( -5.77515, 50.0495, -3.0736, 0.7 ) }
    dend_63 { pt3dadd( -5.80715, 50.5482, -2.844, 0.56 ) }
    dend_63 { pt3dadd( -5.83509, 51.0457, -2.6052, 0.7 ) }
    dend_63 { pt3dadd( -5.84176, 52.1115, -2.14621, 0.84 ) }
    dend_63 { pt3dadd( -5.79713, 52.6976, -1.98986, 0.7 ) }
    dend_63 { pt3dadd( -5.73758, 53.0869, -1.95332, 0.56 ) }
    dend_63 { pt3dadd( -5.68032, 53.357, -1.96352, 0.7 ) }
    dend_63 { pt3dadd( -5.5269, 53.8731, -2.03524, 0.98 ) }
    dend_63 { pt3dadd( -5.20681, 54.9368, -2.21197, 0.98 ) }
    dend_63 { pt3dadd( -4.89895, 56.0024, -2.40652, 0.84 ) }
    dend_63 { pt3dadd( -4.79897, 56.5427, -2.42816, 0.84 ) }
    dend_63 { pt3dadd( -4.76648, 56.9281, -2.37288, 0.7 ) }
    dend_63 { pt3dadd( -4.76225, 57.2892, -2.24776, 0.56 ) }
    dend_63 { pt3dadd( -4.86029, 58.2711, -1.70797, 0.7 ) }
    dend_63 { pt3dadd( -4.97805, 58.7717, -1.36561, 0.84 ) }
    dend_63 { pt3dadd( -5.25549, 59.7116, -0.753684, 0.98 ) }
    dend_63 { pt3dadd( -5.36481, 60.0483, -0.588216, 0.84 ) }
    dend_63 { pt3dadd( -5.4562, 60.3003, -0.533296, 0.7 ) }
    dend_63 { pt3dadd( -5.67341, 61.0359, -0.661777, 0.1 ) }
    dend_63 { pt3dadd( -5.79034, 61.5903, -0.9081, 0.14 ) }
    dend_63 { pt3dadd( -5.97749, 62.5905, -1.4565, 0.28 ) }
    dend_63 { pt3dadd( -6.02941, 62.922, -1.65683, 0.42 ) }
    dend_63 { pt3dadd( -6.13319, 63.4541, -1.93893, 0.56 ) }
    dend_63 { pt3dadd( -6.34869, 64.4723, -2.369, 0.56 ) }
    dend_63 { pt3dadd( -6.45255, 64.9932, -2.51128, 0.42 ) }
    dend_63 { pt3dadd( -6.57292, 65.5261, -2.57426, 0.56 ) }
    dend_63 { pt3dadd( -6.64445, 65.7928, -2.56496, 0.56 ) }
    dend_63 { pt3dadd( -6.95475, 66.8711, -2.46972, 0.56 ) }
    dend_63 { pt3dadd( -7.11762, 67.3817, -2.40044, 0.56 ) }
    dend_63 { pt3dadd( -7.30195, 67.8925, -2.31393, 0.56 ) }
    dend_63 { pt3dadd( -7.4808, 68.4108, -2.24492, 0.7 ) }
    dend_63 { pt3dadd( -7.6468, 68.9329, -2.19798, 0.84 ) }
    dend_63 { pt3dadd( -7.81406, 69.5272, -2.17342, 0.98 ) }
    dend_63 { pt3dadd( -7.94027, 70.0624, -2.18166, 1.12 ) }
    dend_63 { pt3dadd( -8.05869, 70.6021, -2.18359, 0.98 ) }
    dend_63 { pt3dadd( -8.17491, 71.1396, -2.18429, 0.84 ) }
    dend_63 { pt3dadd( -8.28486, 71.6687, -2.18176, 0.7 ) }
    dend_63 { pt3dadd( -8.38812, 72.2115, -2.17232, 0.84 ) }
    dend_63 { pt3dadd( -8.4711, 72.7546, -2.14826, 0.7 ) }
    dend_63 { pt3dadd( -8.51054, 73.0277, -2.1345, 0.84 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 53/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -4.81052, 43.7969, -4.37186, 0.7 ) }
    dend_62 { pt3dadd( -4.33488, 43.9694, -5.28457, 0.7 ) }
    dend_62 { pt3dadd( -3.44761, 44.3069, -6.97532, 0.56 ) }
    dend_62 { pt3dadd( -2.53236, 44.6506, -8.69377, 0.42 ) }
    dend_62 { pt3dadd( -1.64252, 44.9968, -10.3814, 0.28 ) }
    dend_62 { pt3dadd( -0.75391, 45.3546, -12.0673, 0.14 ) }
    dend_62 { pt3dadd( 0.153318, 45.7314, -13.7812, 0.1 ) }
    dend_62 { pt3dadd( 1.06529, 46.1082, -15.4725, 0.1 ) }
    dend_62 { pt3dadd( 1.96307, 46.4952, -17.147, 0.1 ) }
    dend_62 { pt3dadd( 2.44849, 46.7098, -18.0476, 0.1 ) }
    dend_62 { pt3dadd( 3.35147, 47.1326, -19.731, 0.1 ) }
    dend_62 { pt3dadd( 4.25674, 47.5721, -21.4108, 0.1 ) }
    dend_62 { pt3dadd( 5.16265, 48.0161, -23.0667, 0.1 ) }
    dend_62 { pt3dadd( 6.08791, 48.4835, -24.7513, 0.1 ) }
    dend_62 { pt3dadd( 7.00812, 48.9628, -26.4105, 0.1 ) }
    dend_62 { pt3dadd( 7.48799, 49.2068, -27.2609, 0.1 ) }
    dend_62 { pt3dadd( 8.40123, 49.7023, -28.9207, 0.1 ) }
    dend_62 { pt3dadd( 9.28552, 50.2301, -30.5862, 0.1 ) }
    dend_62 { pt3dadd( 9.71904, 50.526, -31.445, 0.1 ) }
    dend_62 { pt3dadd( 10.5205, 51.1494, -33.1193, 0.14 ) }
    dend_62 { pt3dadd( 10.6192, 51.2439, -33.3557, 0.28 ) }
    dend_62 { pt3dadd( 11.0063, 51.6999, -34.4446, 0.1 ) }
    dend_62 { pt3dadd( 11.1058, 51.848, -34.7774, 0.1 ) }
    dend_62 { pt3dadd( 10.0747, 52.347, -34.7533, 0.1 ) }
    dend_62 { pt3dadd( 9.52259, 52.5826, -34.6875, 0.1 ) }
    dend_62 { pt3dadd( 8.961, 52.7994, -34.5757, 0.14 ) }
    dend_62 { pt3dadd( 8.961, 52.7994, -34.5757, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 80/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -7.08961, 38.4767, -20.7479, 0.7 ) }
    dend_56 { pt3dadd( -7.34941, 39.1446, -21.4103, 0.7 ) }
    dend_56 { pt3dadd( -7.79539, 40.2031, -22.3181, 0.56 ) }
    dend_56 { pt3dadd( -7.95082, 40.5654, -22.5964, 0.42 ) }
    dend_56 { pt3dadd( -8.43556, 41.6854, -23.4051, 0.28 ) }
    dend_56 { pt3dadd( -8.68944, 42.2209, -23.7668, 0.14 ) }
    dend_56 { pt3dadd( -8.9642, 42.8179, -24.1871, 0.1 ) }
    dend_56 { pt3dadd( -9.23007, 43.422, -24.587, 0.1 ) }
    dend_56 { pt3dadd( -9.36566, 43.7014, -24.7458, 0.14 ) }
    dend_56 { pt3dadd( -9.36566, 43.7014, -24.7458, 0.28 ) }
    dend_56 { pt3dadd( -9.72292, 44.5083, -25.1764, 0.42 ) }
    dend_56 { pt3dadd( -10.1286, 45.5488, -25.8162, 0.42 ) }
    dend_56 { pt3dadd( -10.3289, 46.1782, -26.2153, 0.28 ) }
    dend_56 { pt3dadd( -10.4991, 46.8218, -26.6056, 0.14 ) }
    dend_56 { pt3dadd( -10.6391, 47.4074, -26.9582, 0.14 ) }
    dend_56 { pt3dadd( -10.8864, 48.6079, -27.6638, 0.28 ) }
    dend_56 { pt3dadd( -10.8864, 48.6079, -27.6638, 0.42 ) }
    dend_56 { pt3dadd( -11.0142, 49.2396, -27.9312, 0.56 ) }
    dend_56 { pt3dadd( -11.1239, 49.8797, -28.1769, 0.42 ) }
    dend_56 { pt3dadd( -11.3013, 50.5194, -28.3802, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_56 { pt3dadd( -11.4446, 50.8294, -28.4516, 0.42 ) }
    dend_56 { pt3dadd( -11.8497, 51.4891, -28.5539, 0.28 ) }
    dend_56 { pt3dadd( -12.2277, 52.0526, -28.6541, 0.28 ) }
    dend_56 { pt3dadd( -12.6333, 52.6048, -28.7664, 0.42 ) }
    dend_56 { pt3dadd( -13.189, 53.3798, -29.0003, 0.42 ) }
    dend_56 { pt3dadd( -13.6118, 53.996, -29.2241, 0.28 ) }
    dend_56 { pt3dadd( -13.8676, 54.3734, -29.382, 0.14 ) }
    dend_56 { pt3dadd( -14.2456, 54.9635, -29.7248, 0.1 ) }
    dend_56 { pt3dadd( -14.4661, 55.3122, -29.9751, 0.1 ) }
    dend_56 { pt3dadd( -14.9267, 56.1664, -30.7452, 0.1 ) }
    dend_56 { pt3dadd( -15.147, 56.7023, -31.2674, 0.28 ) }
    dend_56 { pt3dadd( -15.3231, 57.2262, -31.806, 0.42 ) }
    dend_56 { pt3dadd( -15.6215, 58.2354, -32.8244, 0.28 ) }
    dend_56 { pt3dadd( -15.7155, 58.5881, -33.1563, 0.14 ) }
    dend_56 { pt3dadd( -15.9451, 59.5371, -33.9949, 0.28 ) }
    dend_56 { pt3dadd( -16.0753, 60.0685, -34.4027, 1.12 ) }
    dend_56 { pt3dadd( -16.0753, 60.0685, -34.4027, 0.98 ) }
    dend_56 { pt3dadd( -16.2522, 60.7418, -34.7744, 0.1 ) }
    dend_56 { pt3dadd( -16.4479, 61.3594, -34.9888, 0.1 ) }
    dend_56 { pt3dadd( -16.9156, 62.7058, -35.3248, 0.1 ) }
    dend_56 { pt3dadd( -17.1537, 63.3378, -35.4446, 0.1 ) }
    dend_56 { pt3dadd( -17.4078, 64.0511, -35.5932, 0.1 ) }
    dend_56 { pt3dadd( -17.8242, 65.3836, -35.8632, 0.14 ) }
    dend_56 { pt3dadd( -17.8818, 65.709, -35.9643, 0.28 ) }
    dend_56 { pt3dadd( -17.9024, 66.0292, -36.0924, 0.42 ) }
    dend_56 { pt3dadd( -17.9325, 67.3808, -36.6542, 0.28 ) }
    dend_56 { pt3dadd( -17.9233, 68.0014, -36.973, 0.28 ) }
    dend_56 { pt3dadd( -17.8799, 68.5937, -37.3327, 0.14 ) }
    dend_56 { pt3dadd( -17.7681, 69.7633, -38.1305, 0.1 ) }
    dend_56 { pt3dadd( -17.7378, 70.3529, -38.5024, 0.1 ) }
    dend_56 { pt3dadd( -17.746, 71.031, -38.8707, 0.1 ) }
    dend_56 { pt3dadd( -17.7836, 71.3512, -39.0038, 0.1 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -7.08961, 38.4767, -20.7479, 0.84 ) }
    dend_53 { pt3dadd( -6.40841, 38.753, -21.4381, 0.84 ) }
    dend_53 { pt3dadd( -4.98345, 39.2498, -22.6968, 0.98 ) }
    dend_53 { pt3dadd( -3.44702, 39.6951, -23.8382, 0.84 ) }
    dend_53 { pt3dadd( -3.22251, 39.759, -23.9817, 0.28 ) }
    dend_53 { pt3dadd( -2.71049, 39.9163, -24.2827, 0.14 ) }
    dend_53 { pt3dadd( -2.21493, 40.0793, -24.5854, 0.1 ) }
    dend_53 { pt3dadd( -1.88068, 40.1795, -24.7538, 0.1 ) }
    dend_53 { pt3dadd( -1.32398, 40.3385, -24.9595, 0.14 ) }
    dend_53 { pt3dadd( -0.293238, 40.6784, -25.3391, 0.28 ) }
    dend_53 { pt3dadd( 0.590093, 41.021, -25.778, 0.42 ) }
    dend_53 { pt3dadd( 2.11384, 41.7467, -26.7846, 0.56 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 44/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -9.82536, 124.097, -9.60307, 0.1 ) }
    dend_50 { pt3dadd( -10.2966, 125.288, -9.06179, 0.1 ) }
    dend_50 { pt3dadd( -10.5441, 125.853, -8.82337, 0.1 ) }
    dend_50 { pt3dadd( -10.854, 126.479, -8.57043, 0.1 ) }
    dend_50 { pt3dadd( -11.1423, 127.035, -8.35626, 0.14 ) }
    dend_50 { pt3dadd( -11.4392, 127.59, -8.14355, 0.28 ) }
    dend_50 { pt3dadd( -11.4392, 127.59, -8.14355, 0.42 ) }
    dend_50 { pt3dadd( -11.8355, 128.184, -7.96896, 0.1 ) }
    dend_50 { pt3dadd( -12.2801, 128.758, -7.855, 0.14 ) }
    dend_50 { pt3dadd( -12.4969, 129.009, -7.82792, 0.28 ) }
    dend_50 { pt3dadd( -12.7306, 129.244, -7.84981, 0.42 ) }
    dend_50 { pt3dadd( -13.2647, 129.747, -7.96752, 0.56 ) }
    dend_50 { pt3dadd( -13.7756, 130.264, -8.07794, 0.42 ) }
    dend_50 { pt3dadd( -14.6498, 131.274, -8.29579, 0.28 ) }
    dend_50 { pt3dadd( -15.0758, 131.872, -8.41022, 0.14 ) }
    dend_50 { pt3dadd( -15.6904, 133.074, -8.49187, 0.28 ) }
    dend_50 { pt3dadd( -15.6904, 133.074, -8.49187, 0.42 ) }
    dend_50 { pt3dadd( -15.8174, 134.414, -8.33482, 0.1 ) }
    dend_50 { pt3dadd( -15.7602, 135.144, -8.19627, 0.1 ) }
    dend_50 { pt3dadd( -15.6167, 135.837, -8.00969, 0.1 ) }
    dend_50 { pt3dadd( -15.2444, 137.124, -7.61836, 0.1 ) }
    dend_50 { pt3dadd( -15.0991, 137.534, -7.46995, 0.1 ) }
    dend_50 { pt3dadd( -14.8596, 138.204, -7.25662, 0.14 ) }
    dend_50 { pt3dadd( -14.7034, 138.634, -7.16874, 0.28 ) }
    dend_50 { pt3dadd( -14.5857, 138.921, -7.09987, 0.42 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 69/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -9.82536, 124.097, -9.60307, 0.28 ) }
    dend_49 { pt3dadd( -9.44982, 125.462, -9.41844, 0.28 ) }
    dend_49 { pt3dadd( -9.30642, 126.193, -9.34444, 0.14 ) }
    dend_49 { pt3dadd( -9.24844, 126.675, -9.30591, 0.1 ) }
    dend_49 { pt3dadd( -9.19919, 127.623, -9.24322, 0.14 ) }
    dend_49 { pt3dadd( -9.1916, 128.103, -9.21845, 0.1 ) }
    dend_49 { pt3dadd( -9.19247, 128.78, -9.19241, 0.1 ) }
    dend_49 { pt3dadd( -9.23629, 129.458, -9.21008, 0.14 ) }
    dend_49 { pt3dadd( -9.30204, 130.12, -9.22305, 0.1 ) }
    dend_49 { pt3dadd( -9.39524, 130.794, -9.23139, 0.1 ) }
    dend_49 { pt3dadd( -9.51307, 131.547, -9.23818, 0.1 ) }
    dend_49 { pt3dadd( -9.61185, 132.289, -9.24808, 0.1 ) }
    dend_49 { pt3dadd( -9.67002, 132.964, -9.26292, 0.1 ) }
    dend_49 { pt3dadd( -9.70123, 133.723, -9.28601, 0.1 ) }
    dend_49 { pt3dadd( -9.69632, 134.388, -9.31219, 0.14 ) }
    dend_49 { pt3dadd( -9.67199, 135.147, -9.34557, 0.1 ) }
    dend_49 { pt3dadd( -9.65889, 135.633, -9.36648, 0.1 ) }
    dend_49 { pt3dadd( -9.65003, 136.381, -9.39655, 0.14 ) }
    dend_49 { pt3dadd( -9.65826, 137.143, -9.424, 0.28 ) }
    dend_49 { pt3dadd( -9.68402, 137.466, -9.45877, 0.28 ) }
    dend_49 { pt3dadd( -9.78365, 138.126, -9.56898, 0.1 ) }
    dend_49 { pt3dadd( -9.93873, 138.772, -9.70142, 0.1 ) }
    dend_49 { pt3dadd( -10.1383, 139.406, -9.84308, 0.1 ) }
    dend_49 { pt3dadd( -10.3691, 140.026, -9.98604, 0.1 ) }
    dend_49 { pt3dadd( -10.8592, 141.291, -10.2705, 0.14 ) }
    dend_49 { pt3dadd( -11.083, 141.904, -10.3988, 0.28 ) }
    dend_49 { pt3dadd( -11.2819, 142.542, -10.5266, 0.14 ) }
    dend_49 { pt3dadd( -11.4407, 143.19, -10.642, 0.1 ) }
    dend_49 { pt3dadd( -11.5652, 143.849, -10.734, 0.1 ) }
    dend_49 { pt3dadd( -11.6748, 144.599, -10.7978, 0.1 ) }
    dend_49 { pt3dadd( -11.7473, 145.346, -10.8128, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_49 { pt3dadd( -11.7781, 145.824, -10.8576, 0.1 ) }
    dend_49 { pt3dadd( -11.8065, 146.569, -10.9234, 0.1 ) }
    dend_49 { pt3dadd( -11.8174, 147.244, -10.9773, 0.1 ) }
    dend_49 { pt3dadd( -11.8195, 147.922, -11.0235, 0.1 ) }
    dend_49 { pt3dadd( -11.837, 148.672, -11.0606, 0.1 ) }
    dend_49 { pt3dadd( -11.8781, 149.925, -11.1015, 0.1 ) }
    dend_49 { pt3dadd( -11.9479, 151.309, -11.1225, 0.14 ) }
    dend_49 { pt3dadd( -11.9983, 152.07, -11.1211, 0.1 ) }
    dend_49 { pt3dadd( -12.0599, 152.816, -11.1078, 0.1 ) }
    dend_49 { pt3dadd( -12.151, 153.486, -11.0807, 0.1 ) }
    dend_49 { pt3dadd( -12.3054, 154.219, -11.0832, 0.1 ) }
    dend_49 { pt3dadd( -12.5083, 154.86, -11.1571, 0.1 ) }
    dend_49 { pt3dadd( -12.7724, 155.44, -11.3959, 0.1 ) }
    dend_49 { pt3dadd( -13.0834, 155.93, -11.7449, 0.14 ) }
    dend_49 { pt3dadd( -13.4496, 156.409, -12.194, 0.1 ) }
    dend_49 { pt3dadd( -14.0867, 157.144, -12.9872, 0.1 ) }
    dend_49 { pt3dadd( -14.8328, 157.937, -13.9026, 0.1 ) }
    dend_49 { pt3dadd( -15.564, 158.672, -14.8226, 0.1 ) }
    dend_49 { pt3dadd( -16.3169, 159.416, -15.7734, 0.14 ) }
    dend_49 { pt3dadd( -16.4939, 159.602, -15.9967, 0.28 ) }
    dend_49 { pt3dadd( -16.8656, 160.068, -16.4555, 0.42 ) }
    dend_49 { pt3dadd( -17.1705, 160.593, -16.763, 0.56 ) }
    dend_49 { pt3dadd( -17.2847, 160.902, -16.8458, 0.7 ) }
    dend_49 { pt3dadd( -17.4473, 161.557, -16.8977, 0.84 ) }
    dend_49 { pt3dadd( -17.5814, 162.294, -16.9008, 0.7 ) }
    dend_49 { pt3dadd( -17.7233, 163.04, -16.9681, 0.56 ) }
    dend_49 { pt3dadd( -17.8684, 163.766, -17.0775, 0.42 ) }
    dend_49 { pt3dadd( -18.0206, 164.415, -17.1973, 0.28 ) }
    dend_49 { pt3dadd( -18.1905, 165.05, -17.3725, 0.14 ) }
    dend_49 { pt3dadd( -18.3779, 165.663, -17.5889, 0.1 ) }
    dend_49 { pt3dadd( -18.8114, 166.845, -18.1675, 0.1 ) }
    dend_49 { pt3dadd( -19.0384, 167.396, -18.4896, 0.1 ) }
    dend_49 { pt3dadd( -19.269, 167.904, -18.8573, 0.14 ) }
    dend_49 { pt3dadd( -19.7562, 168.908, -19.7489, 0.28 ) }
    dend_49 { pt3dadd( -19.9874, 169.368, -20.1941, 0.28 ) }
    dend_49 { pt3dadd( -20.4013, 170.215, -21.0201, 0.14 ) }
    dend_49 { pt3dadd( -20.6163, 170.706, -21.4392, 0.1 ) }
    dend_49 { pt3dadd( -21.0213, 171.734, -22.2646, 0.1 ) }
    dend_49 { pt3dadd( -21.3837, 172.837, -23.0214, 0.1 ) }
    dend_49 { pt3dadd( -21.5245, 173.435, -23.3053, 0.1 ) }
    dend_49 { pt3dadd( -21.6129, 174.154, -23.537, 0.14 ) }
    dend_49 { pt3dadd( -21.6234, 175.564, -23.7205, 0.28 ) }
    dend_49 { pt3dadd( -21.595, 175.903, -23.7287, 0.42 ) }
    dend_49 { pt3dadd( -21.4829, 176.641, -23.6695, 0.14 ) }
    dend_49 { pt3dadd( -21.348, 177.386, -23.5829, 0.1 ) }
    dend_49 { pt3dadd( -21.2651, 177.859, -23.5507, 0.1 ) }
    dend_49 { pt3dadd( -21.1576, 178.6, -23.5443, 0.1 ) }
    dend_49 { pt3dadd( -21.0878, 179.358, -23.5861, 0.1 ) }
    dend_49 { pt3dadd( -21.0561, 180.101, -23.6752, 0.1 ) }
    dend_49 { pt3dadd( -21.0575, 180.433, -23.7327, 0.1 ) }
    dend_49 { pt3dadd( -21.0986, 181.162, -23.9453, 0.1 ) }
    dend_49 { pt3dadd( -21.1584, 181.861, -24.2114, 0.1 ) }
    dend_49 { pt3dadd( -21.2184, 182.479, -24.4884, 0.1 ) }
    dend_49 { pt3dadd( -21.3401, 183.76, -25.1092, 0.1 ) }
    dend_49 { pt3dadd( -21.3993, 184.358, -25.4032, 0.1 ) }
    dend_49 { pt3dadd( -21.5348, 185.643, -26.011, 0.1 ) }
    dend_49 { pt3dadd( -21.5897, 186.081, -26.2028, 0.1 ) }
    dend_49 { pt3dadd( -21.69, 186.776, -26.4617, 0.1 ) }
    dend_49 { pt3dadd( -21.7906, 187.505, -26.6616, 0.1 ) }
    dend_49 { pt3dadd( -21.8782, 188.173, -26.7585, 0.1 ) }
    dend_49 { pt3dadd( -21.9655, 188.83, -26.8153, 0.1 ) }
    dend_49 { pt3dadd( -22.0566, 189.5, -26.8239, 0.1 ) }
    dend_49 { pt3dadd( -22.1605, 190.173, -26.8302, 0.1 ) }
    dend_49 { pt3dadd( -22.2874, 190.925, -26.8352, 0.1 ) }
    dend_49 { pt3dadd( -22.3941, 191.664, -26.7875, 0.1 ) }
    dend_49 { pt3dadd( -22.4336, 191.999, -26.7467, 0.1 ) }
    dend_49 { pt3dadd( -22.5162, 192.747, -26.6215, 0.1 ) }
    dend_49 { pt3dadd( -22.5753, 193.4, -26.4892, 0.1 ) }
    dend_49 { pt3dadd( -22.6468, 194.042, -26.2864, 0.1 ) }
    dend_49 { pt3dadd( -22.8793, 195.284, -25.6213, 0.14 ) }
    dend_49 { pt3dadd( -23.0446, 195.808, -25.2197, 0.1 ) }
    dend_49 { pt3dadd( -23.273, 196.256, -24.7674, 0.1 ) }
    dend_49 { pt3dadd( -23.4202, 196.441, -24.5269, 0.14 ) }
    dend_49 { pt3dadd( -24.2074, 197.125, -23.5507, 0.1 ) }
    dend_49 { pt3dadd( -25.1793, 197.711, -22.6856, 0.1 ) }
    dend_49 { pt3dadd( -25.8111, 197.99, -22.3916, 0.14 ) }
    dend_49 { pt3dadd( -26.5235, 198.25, -22.3307, 0.14 ) }
    dend_49 { pt3dadd( -26.9598, 198.405, -22.4123, 0.1 ) }
    dend_49 { pt3dadd( -28.1947, 198.856, -22.9679, 0.1 ) }
    dend_49 { pt3dadd( -28.5682, 198.998, -23.2275, 0.1 ) }
    dend_49 { pt3dadd( -29.613, 199.411, -24.1078, 0.1 ) }
    dend_49 { pt3dadd( -30.5933, 199.82, -25.0514, 0.1 ) }
    dend_49 { pt3dadd( -31.0895, 200.034, -25.5865, 0.1 ) }
    dend_49 { pt3dadd( -31.8533, 200.351, -26.4665, 0.1 ) }
    dend_49 { pt3dadd( -32.1547, 200.465, -26.8235, 0.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 85/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.2716, -83.0209, 8.30553, 1.12 ) }
    dend_18 { pt3dadd( 12.3377, -83.4589, 8.29781, 1.12 ) }
    dend_18 { pt3dadd( 12.4187, -83.9588, 8.28868, 1.26 ) }
    dend_18 { pt3dadd( 12.4979, -84.4024, 8.28016, 1.4 ) }
    dend_18 { pt3dadd( 12.6019, -84.8432, 8.27023, 1.54 ) }
    dend_18 { pt3dadd( 12.6605, -85.0597, 8.26492, 1.4 ) }
    dend_18 { pt3dadd( 12.6605, -85.0597, 8.26492, 1.26 ) }
    dend_18 { pt3dadd( 12.7361, -85.2599, 8.21936, 1.12 ) }
    dend_18 { pt3dadd( 12.9061, -85.6607, 8.10261, 0.98 ) }
    dend_18 { pt3dadd( 13.101, -86.0899, 7.91723, 0.84 ) }
    dend_18 { pt3dadd( 13.2728, -86.4623, 7.73025, 0.7 ) }
    dend_18 { pt3dadd( 13.6282, -87.2444, 7.32366, 0.84 ) }
    dend_18 { pt3dadd( 13.7997, -87.6149, 7.1324, 0.98 ) }
    dend_18 { pt3dadd( 13.9768, -87.9922, 6.96086, 1.12 ) }
    dend_18 { pt3dadd( 14.3703, -88.7973, 6.64401, 1.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_18 { pt3dadd( 14.5543, -89.1823, 6.49881, 1.12 ) }
    dend_18 { pt3dadd( 14.7459, -89.5734, 6.37421, 0.98 ) }
    dend_18 { pt3dadd( 14.9645, -90.0189, 6.30512, 1.12 ) }
    dend_18 { pt3dadd( 15.3529, -90.7556, 6.23802, 0.98 ) }
    dend_18 { pt3dadd( 15.5064, -91.0273, 6.2657, 1.12 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.2716, -83.0209, 8.30553, 0.28 ) }
    dend_17 { pt3dadd( 12.5993, -83.1887, 8.1356, 0.28 ) }
    dend_17 { pt3dadd( 13.1301, -83.4575, 7.86023, 0.42 ) }
    dend_17 { pt3dadd( 13.487, -83.6265, 7.73378, 0.56 ) }
    dend_17 { pt3dadd( 14.0492, -83.9053, 7.57529, 0.42 ) }
    dend_17 { pt3dadd( 14.409, -84.0904, 7.48471, 0.28 ) }
    dend_17 { pt3dadd( 15.1162, -84.48, 7.31446, 0.14 ) }
    dend_17 { pt3dadd( 15.6672, -84.8152, 7.19713, 0.28 ) }
    dend_17 { pt3dadd( 16.5843, -85.4286, 7.02065, 0.28 ) }
    dend_17 { pt3dadd( 17.1104, -85.8054, 6.91593, 0.14 ) }
    dend_17 { pt3dadd( 17.4315, -86.0522, 6.84747, 0.1 ) }
    dend_17 { pt3dadd( 17.9284, -86.4613, 6.72354, 0.1 ) }
    dend_17 { pt3dadd( 18.3858, -86.8854, 6.54606, 0.1 ) }
    dend_17 { pt3dadd( 18.6514, -87.1649, 6.39347, 0.1 ) }
    dend_17 { pt3dadd( 19.1509, -87.7129, 6.04307, 0.1 ) }
    dend_17 { pt3dadd( 19.4139, -87.9759, 5.86899, 0.1 ) }
    dend_17 { pt3dadd( 19.8846, -88.377, 5.65162, 0.14 ) }
    dend_17 { pt3dadd( 20.7302, -88.9384, 5.41964, 0.28 ) }
    dend_17 { pt3dadd( 20.7302, -88.9384, 5.41964, 0.42 ) }
    dend_17 { pt3dadd( 21.7489, -89.3907, 5.34279, 0.42 ) }
    dend_17 { pt3dadd( 22.3589, -89.6262, 5.39023, 0.56 ) }
    dend_17 { pt3dadd( 23.3957, -90.03, 5.53874, 0.42 ) }
    dend_17 { pt3dadd( 23.9802, -90.2812, 5.64708, 0.28 ) }
    dend_17 { pt3dadd( 24.563, -90.567, 5.75138, 0.14 ) }
    dend_17 { pt3dadd( 24.9139, -90.7665, 5.79019, 0.28 ) }
    dend_17 { pt3dadd( 25.8118, -91.3694, 5.79775, 0.56 ) }
    dend_17 { pt3dadd( 26.3264, -91.7627, 5.76502, 0.7 ) }
    dend_17 { pt3dadd( 26.7769, -92.1364, 5.73008, 0.56 ) }
    dend_17 { pt3dadd( 27.3851, -92.6864, 5.71857, 0.42 ) }
    dend_17 { pt3dadd( 27.6785, -92.9794, 5.72076, 0.28 ) }
    dend_17 { pt3dadd( 27.9508, -93.2798, 5.71886, 0.14 ) }
    dend_17 { pt3dadd( 28.4806, -93.9231, 5.68019, 0.14 ) }
    dend_17 { pt3dadd( 29.1442, -94.7757, 5.65101, 0.28 ) }
    dend_17 { pt3dadd( 29.4852, -95.2402, 5.63519, 0.14 ) }
    dend_17 { pt3dadd( 29.8117, -95.7234, 5.6165, 0.14 ) }
    dend_17 { pt3dadd( 30.1393, -96.2096, 5.62265, 0.1 ) }
    dend_17 { pt3dadd( 30.5023, -96.7468, 5.638, 0.1 ) }
    dend_17 { pt3dadd( 30.8684, -97.2821, 5.64227, 0.1 ) }
    dend_17 { pt3dadd( 31.2676, -97.802, 5.65406, 0.1 ) }
    dend_17 { pt3dadd( 31.5409, -98.1072, 5.68185, 0.1 ) }
    dend_17 { pt3dadd( 32.2871, -98.882, 5.79517, 0.1 ) }
    dend_17 { pt3dadd( 32.7406, -99.3386, 5.87475, 0.1 ) }
    dend_17 { pt3dadd( 33.2001, -99.7986, 5.96005, 0.1 ) }
    dend_17 { pt3dadd( 34.0635, -100.642, 6.17975, 0.1 ) }
    dend_17 { pt3dadd( 34.3492, -100.931, 6.26246, 0.1 ) }
    dend_17 { pt3dadd( 34.7337, -101.356, 6.37234, 0.14 ) }
    dend_17 { pt3dadd( 35.1555, -101.841, 6.50051, 0.28 ) }
    dend_17 { pt3dadd( 35.4124, -102.14, 6.59497, 0.42 ) }
    dend_17 { pt3dadd( 36.0931, -102.941, 6.84868, 0.1 ) }
    dend_17 { pt3dadd( 36.4565, -103.384, 6.9612, 0.1 ) }
    dend_17 { pt3dadd( 36.8183, -103.832, 7.06967, 0.14 ) }
    dend_17 { pt3dadd( 37.5637, -104.786, 7.26851, 0.1 ) }
    dend_17 { pt3dadd( 37.9405, -105.307, 7.35431, 0.1 ) }
    dend_17 { pt3dadd( 38.1646, -105.654, 7.38503, 0.1 ) }
    dend_17 { pt3dadd( 38.4822, -106.219, 7.37497, 0.14 ) }
    dend_17 { pt3dadd( 38.7405, -106.741, 7.30702, 0.28 ) }
    dend_17 { pt3dadd( 38.9732, -107.269, 7.21638, 0.28 ) }
    dend_17 { pt3dadd( 39.0681, -107.54, 7.15764, 0.42 ) }
    dend_17 { pt3dadd( 39.2745, -108.083, 7.09988, 0.28 ) }
    dend_17 { pt3dadd( 39.4964, -108.625, 7.09386, 0.14 ) }
    dend_17 { pt3dadd( 40.0135, -109.608, 7.24219, 0.1 ) }
    dend_17 { pt3dadd( 40.5886, -110.496, 7.46322, 0.28 ) }
    dend_17 { pt3dadd( 40.9279, -110.955, 7.59773, 0.14 ) }
    dend_17 { pt3dadd( 41.6649, -111.889, 7.8959, 0.1 ) }
    dend_17 { pt3dadd( 42.0278, -112.324, 8.03644, 0.1 ) }
    dend_17 { pt3dadd( 42.8144, -113.228, 8.31696, 0.1 ) }
    dend_17 { pt3dadd( 43.2319, -113.697, 8.4786, 0.1 ) }
    dend_17 { pt3dadd( 43.6546, -114.185, 8.59014, 0.1 ) }
    dend_17 { pt3dadd( 43.8452, -114.401, 8.6287, 0.1 ) }
    dend_17 { pt3dadd( 44.2589, -114.909, 8.6359, 0.1 ) }
    dend_17 { pt3dadd( 44.5184, -115.22, 8.61364, 0.1 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.8537, -29.9261, -32.4008, 0.28 ) }
    dend_7 { pt3dadd( -10.9859, -30.4071, -32.4427, 0.28 ) }
    dend_7 { pt3dadd( -11.2271, -31.3643, -32.5228, 0.14 ) }
    dend_7 { pt3dadd( -11.3478, -31.8486, -32.563, 0.28 ) }
    dend_7 { pt3dadd( -11.5245, -32.6075, -32.6241, 0.14 ) }
    dend_7 { pt3dadd( -11.6867, -33.38, -32.6835, 0.1 ) }
    dend_7 { pt3dadd( -11.7723, -33.8783, -32.7187, 0.1 ) }
    dend_7 { pt3dadd( -11.8314, -34.6541, -32.7615, 0.14 ) }
    dend_7 { pt3dadd( -11.8098, -35.154, -32.7795, 0.28 ) }
    dend_7 { pt3dadd( -11.7488, -35.4993, -32.7845, 0.42 ) }
    dend_7 { pt3dadd( -11.6448, -35.8377, -32.7823, 0.98 ) }
    dend_7 { pt3dadd( -11.3783, -36.4805, -32.7669, 0.84 ) }
    dend_7 { pt3dadd( -11.0157, -37.1846, -32.7387, 0.7 ) }
    dend_7 { pt3dadd( -10.6696, -37.7836, -32.7086, 0.56 ) }
    dend_7 { pt3dadd( -10.2584, -38.4699, -32.6717, 0.42 ) }
    dend_7 { pt3dadd( -9.9166, -39.067, -32.5929, 0.28 ) }
    dend_7 { pt3dadd( -9.58457, -39.6814, -32.4765, 0.14 ) }
    dend_7 { pt3dadd( -9.24037, -40.3666, -32.3173, 0.1 ) }
    dend_7 { pt3dadd( -8.95544, -40.9906, -32.1565, 0.1 ) }
    dend_7 { pt3dadd( -8.68503, -41.6221, -31.9849, 0.1 ) }
    dend_7 { pt3dadd( -8.17198, -42.9201, -31.6256, 0.1 ) }
    dend_7 { pt3dadd( -7.92737, -43.5602, -31.4474, 0.1 ) }
    dend_7 { pt3dadd( -7.70804, -44.1962, -31.2833, 0.1 ) }
    dend_7 { pt3dadd( -7.50454, -44.8588, -31.1386, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( -7.31875, -45.5299, -31.0312, 0.14 ) }
    dend_7 { pt3dadd( -7.23111, -45.8717, -31.0023, 0.28 ) }
    dend_7 { pt3dadd( -7.14629, -46.212, -31.0032, 0.7 ) }
    dend_7 { pt3dadd( -6.96879, -46.9708, -31.0071, 0.56 ) }
    dend_7 { pt3dadd( -6.81097, -47.6574, -31.0112, 0.42 ) }
    dend_7 { pt3dadd( -6.64819, -48.4321, -31.0182, 0.28 ) }
    dend_7 { pt3dadd( -6.50658, -49.1223, -31.025, 0.14 ) }
    dend_7 { pt3dadd( -6.35784, -49.8146, -31.0308, 0.1 ) }
    dend_7 { pt3dadd( -6.28045, -50.1441, -31.0324, 0.1 ) }
    dend_7 { pt3dadd( -6.11321, -50.8321, -31.035, 0.1 ) }
    dend_7 { pt3dadd( -6.00661, -51.3213, -31.0388, 0.1 ) }
    dend_7 { pt3dadd( -5.86085, -52.0107, -31.0449, 0.1 ) }
    dend_7 { pt3dadd( -5.73835, -52.708, -31.0551, 0.1 ) }
    dend_7 { pt3dadd( -5.62961, -53.3918, -31.0669, 0.1 ) }
    dend_7 { pt3dadd( -5.5196, -54.1756, -31.0829, 0.1 ) }
    dend_7 { pt3dadd( -5.42751, -54.9639, -31.1019, 0.1 ) }
    dend_7 { pt3dadd( -5.36061, -55.6565, -31.1208, 0.1 ) }
    dend_7 { pt3dadd( -5.30176, -56.4478, -31.1453, 0.1 ) }
    dend_7 { pt3dadd( -5.25604, -57.1506, -31.1681, 0.1 ) }
    dend_7 { pt3dadd( -5.19691, -57.9272, -31.192, 0.14 ) }
    dend_7 { pt3dadd( -5.11122, -58.714, -31.2119, 0.28 ) }
    dend_7 { pt3dadd( -5.01844, -59.4898, -31.2303, 0.42 ) }
    dend_7 { pt3dadd( -4.94132, -60.19, -31.2479, 0.56 ) }
    dend_7 { pt3dadd( -4.89709, -60.5411, -31.2559, 0.42 ) }
    dend_7 { pt3dadd( -4.78953, -61.2376, -31.3243, 0.42 ) }
    dend_7 { pt3dadd( -4.65374, -61.9202, -31.4343, 0.56 ) }
    dend_7 { pt3dadd( -4.54194, -62.3864, -31.5338, 0.1 ) }
    dend_7 { pt3dadd( -4.34009, -63.1315, -31.7194, 0.1 ) }
    dend_7 { pt3dadd( -4.15197, -63.7913, -31.8947, 0.1 ) }
    dend_7 { pt3dadd( -3.74381, -65.128, -32.2461, 0.1 ) }
    dend_7 { pt3dadd( -3.64316, -65.4566, -32.3313, 0.1 ) }
    dend_7 { pt3dadd( -3.4385, -66.1005, -32.4832, 0.7 ) }
    dend_7 { pt3dadd( -3.21508, -66.7601, -32.6111, 0.56 ) }
    dend_7 { pt3dadd( -2.9884, -67.4209, -32.7031, 0.42 ) }
    dend_7 { pt3dadd( -2.77048, -68.0929, -32.7509, 0.42 ) }
    dend_7 { pt3dadd( -2.63186, -68.5607, -32.7099, 0.56 ) }
    dend_7 { pt3dadd( -2.43792, -69.2306, -32.6095, 0.56 ) }
    dend_7 { pt3dadd( -2.24886, -69.8992, -32.4925, 0.42 ) }
    dend_7 { pt3dadd( -2.06307, -70.5682, -32.3536, 0.28 ) }
    dend_7 { pt3dadd( -1.87935, -71.2282, -32.1888, 0.14 ) }
    dend_7 { pt3dadd( -1.49471, -72.5588, -31.7846, 0.1 ) }
    dend_7 { pt3dadd( -1.29514, -73.1809, -31.5549, 0.1 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 42/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.8537, -29.9261, -32.4008, 0.1 ) }
    dend_6 { pt3dadd( -11.2635, -28.948, -32.34, 0.1 ) }
    dend_6 { pt3dadd( -11.4823, -28.4925, -32.3418, 0.1 ) }
    dend_6 { pt3dadd( -11.7204, -28.0545, -32.3662, 0.1 ) }
    dend_6 { pt3dadd( -12.0036, -27.5634, -32.4066, 0.1 ) }
    dend_6 { pt3dadd( -12.2621, -27.1392, -32.4551, 0.1 ) }
    dend_6 { pt3dadd( -12.2621, -27.1392, -32.4551, 0.1 ) }
    dend_6 { pt3dadd( -12.6127, -26.535, -32.6058, 0.1 ) }
    dend_6 { pt3dadd( -12.7943, -26.235, -32.683, 0.1 ) }
    dend_6 { pt3dadd( -12.7943, -26.235, -32.683, 0.1 ) }
    dend_6 { pt3dadd( -13.0455, -25.7454, -32.7951, 0.1 ) }
    dend_6 { pt3dadd( -13.2571, -25.2969, -32.892, 0.1 ) }
    dend_6 { pt3dadd( -13.4443, -24.8336, -32.9826, 0.1 ) }
    dend_6 { pt3dadd( -13.6136, -24.3057, -33.0723, 0.1 ) }
    dend_6 { pt3dadd( -13.7473, -23.8217, -33.1479, 0.1 ) }
    dend_6 { pt3dadd( -13.8437, -23.346, -33.2532, 0.1 ) }
    dend_6 { pt3dadd( -13.8437, -23.346, -33.2532, 0.1 ) }
    dend_6 { pt3dadd( -13.8733, -22.864, -33.402, 0.1 ) }
    dend_6 { pt3dadd( -13.8763, -22.3813, -33.5594, 0.1 ) }
    dend_6 { pt3dadd( -13.8503, -21.9006, -33.7132, 0.1 ) }
    dend_6 { pt3dadd( -13.7741, -20.8855, -34.0276, 0.1 ) }
    dend_6 { pt3dadd( -13.737, -20.4099, -34.1658, 0.1 ) }
    dend_6 { pt3dadd( -13.6777, -19.8736, -34.3423, 0.1 ) }
    dend_6 { pt3dadd( -13.615, -19.401, -34.5097, 0.1 ) }
    dend_6 { pt3dadd( -13.5451, -18.879, -34.6968, 0.1 ) }
    dend_6 { pt3dadd( -13.4922, -18.4032, -34.8585, 0.1 ) }
    dend_6 { pt3dadd( -13.4519, -17.917, -34.9994, 0.1 ) }
    dend_6 { pt3dadd( -13.3795, -16.9883, -35.2774, 0.1 ) }
    dend_6 { pt3dadd( -13.3533, -16.5109, -35.4207, 0.1 ) }
    dend_6 { pt3dadd( -13.3365, -16.0251, -35.5585, 0.1 ) }
    dend_6 { pt3dadd( -13.3156, -15.5426, -35.7154, 0.1 ) }
    dend_6 { pt3dadd( -13.289, -15.0033, -35.8961, 0.1 ) }
    dend_6 { pt3dadd( -13.2712, -14.5283, -36.0486, 0.1 ) }
    dend_6 { pt3dadd( -13.2584, -14.0418, -36.1845, 0.1 ) }
    dend_6 { pt3dadd( -13.2372, -13.555, -36.3273, 0.1 ) }
    dend_6 { pt3dadd( -13.1891, -12.5342, -36.632, 0.1 ) }
    dend_6 { pt3dadd( -13.1713, -12.0558, -36.7734, 0.1 ) }
    dend_6 { pt3dadd( -13.1458, -11.5791, -36.9388, 0.1 ) }
    dend_6 { pt3dadd( -13.1088, -11.046, -37.1355, 0.1 ) }
    dend_6 { pt3dadd( -13.0766, -10.5707, -37.3113, 0.1 ) }
    dend_6 { pt3dadd( -13.0449, -10.0935, -37.4745, 0.1 ) }
    dend_6 { pt3dadd( -13.0241, -9.61497, -37.6149, 0.1 ) }
    dend_6 { pt3dadd( -12.9765, -8.59424, -37.9197, 0.1 ) }
    dend_6 { pt3dadd( -12.9587, -8.10759, -38.0636, 0.1 ) }
    dend_6 { pt3dadd( -12.9339, -7.63084, -38.2293, 0.1 ) }
    dend_6 { pt3dadd( -12.8981, -7.10774, -38.4226, 0.1 ) }
    dend_6 { pt3dadd( -12.8664, -6.63479, -38.5977, 0.1 ) }
    dend_6 { pt3dadd( -12.8312, -6.15687, -38.7657, 0.1 ) }
    dend_6 { pt3dadd( -12.8041, -5.67448, -38.9136, 0.1 ) }
    dend_6 { pt3dadd( -12.7365, -4.66607, -39.2357, 0.1 ) }
    dend_6 { pt3dadd( -12.7072, -4.18583, -39.3901, 0.1 ) }
    dend_6 { pt3dadd( -12.6895, -3.70363, -39.5402, 0.1 ) }
    dend_6 { pt3dadd( -12.685, -3.45908, -39.6083, 0.1 ) }
    dend_6 { pt3dadd( -12.6916, -2.9728, -39.7207, 0.1 ) }
    dend_6 { pt3dadd( -12.7213, -2.47571, -39.8064, 0.1 ) }
    dend_6 { pt3dadd( -12.7557, -1.97698, -39.8955, 0.1 ) }
    dend_6 { pt3dadd( -12.7795, -1.48591, -40.0122, 0.1 ) }
    dend_6 { pt3dadd( -12.7997, -0.997199, -40.1486, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( -12.8209, -0.514664, -40.2971, 0.1 ) }
    dend_6 { pt3dadd( -12.8351, -0.0406316, -40.4528, 0.1 ) }
    dend_6 { pt3dadd( -12.86, 0.969257, -40.7943, 0.1 ) }
    dend_6 { pt3dadd( -12.8727, 1.44825, -40.9547, 0.1 ) }
    dend_6 { pt3dadd( -12.8808, 1.93303, -41.1056, 0.1 ) }
    dend_6 { pt3dadd( -12.8854, 2.16946, -41.1707, 0.1 ) }
    dend_6 { pt3dadd( -12.8914, 2.66244, -41.2815, 0.1 ) }
    dend_6 { pt3dadd( -12.9015, 3.16373, -41.3618, 0.1 ) }
    dend_6 { pt3dadd( -12.9242, 3.6667, -41.4047, 0.1 ) }
    dend_6 { pt3dadd( -12.9439, 4.23382, -41.4514, 0.1 ) }
    dend_6 { pt3dadd( -12.9502, 4.73152, -41.4889, 0.1 ) }
    dend_6 { pt3dadd( -12.9515, 5.08964, -41.5149, 0.1 ) }
    dend_6 { pt3dadd( -12.9525, 5.59363, -41.5513, 0.1 ) }
    dend_6 { pt3dadd( -12.9584, 6.09997, -41.5894, 0.1 ) }
    dend_6 { pt3dadd( -12.9627, 6.5952, -41.6261, 0.1 ) }
    dend_6 { pt3dadd( -12.9742, 7.1611, -41.6702, 0.1 ) }
    dend_6 { pt3dadd( -12.9863, 7.66469, -41.7099, 0.1 ) }
    dend_6 { pt3dadd( -13.0067, 8.16782, -41.7522, 0.1 ) }
    dend_6 { pt3dadd( -13.0167, 8.66895, -41.8335, 0.1 ) }
    dend_6 { pt3dadd( -13.0194, 8.91385, -41.8907, 0.1 ) }
    dend_6 { pt3dadd( -13.0277, 9.39884, -42.0323, 0.1 ) }
    dend_6 { pt3dadd( -13.0447, 9.88002, -42.1936, 0.1 ) }
    dend_6 { pt3dadd( -13.0646, 10.356, -42.362, 0.1 ) }
    dend_6 { pt3dadd( -13.1191, 11.3294, -42.709, 0.1 ) }
    dend_6 { pt3dadd( -13.1548, 11.7976, -42.8707, 0.1 ) }
    dend_6 { pt3dadd( -13.1928, 12.2685, -43.0568, 0.1 ) }
    dend_6 { pt3dadd( -13.2268, 12.733, -43.2527, 0.1 ) }
    dend_6 { pt3dadd( -13.2608, 13.1976, -43.4485, 0.1 ) }
    dend_6 { pt3dadd( -13.2988, 13.6685, -43.6347, 0.1 ) }
    dend_6 { pt3dadd( -13.3444, 14.1446, -43.7977, 0.1 ) }
    dend_6 { pt3dadd( -13.4356, 15.114, -44.1352, 0.1 ) }
    dend_6 { pt3dadd( -13.4811, 15.5902, -44.2982, 0.1 ) }
    dend_6 { pt3dadd( -13.5192, 16.0611, -44.4843, 0.1 ) }
    dend_6 { pt3dadd( -13.5524, 16.5249, -44.6822, 0.1 ) }
    dend_6 { pt3dadd( -13.5848, 16.9879, -44.882, 0.1 ) }
    dend_6 { pt3dadd( -13.6207, 17.4569, -45.0732, 0.1 ) }
    dend_6 { pt3dadd( -13.6638, 17.9234, -45.2379, 0.1 ) }
    dend_6 { pt3dadd( -13.7071, 18.8723, -45.6484, 0.1 ) }
    dend_6 { pt3dadd( -13.7098, 19.0988, -45.7577, 0.1 ) }
    dend_6 { pt3dadd( -13.695, 19.5364, -46.0148, 0.1 ) }
    dend_6 { pt3dadd( -13.6697, 19.9608, -46.2878, 0.1 ) }
    dend_6 { pt3dadd( -13.6227, 20.3693, -46.5859, 0.1 ) }
    dend_6 { pt3dadd( -13.4959, 21.2004, -47.2342, 0.1 ) }
    dend_6 { pt3dadd( -13.4453, 21.597, -47.5472, 0.1 ) }
    dend_6 { pt3dadd( -13.3748, 22.3893, -48.2071, 0.1 ) }
    dend_6 { pt3dadd( -13.3616, 22.771, -48.5417, 0.1 ) }
    dend_6 { pt3dadd( -13.4288, 23.5637, -49.2448, 0.1 ) }
    dend_6 { pt3dadd( -13.4288, 23.5637, -49.2448, 0.1 ) }
    dend_6 { pt3dadd( -13.6519, 24.0636, -49.704, 0.1 ) }
    dend_6 { pt3dadd( -13.8826, 24.443, -50.0579, 0.1 ) }
    dend_6 { pt3dadd( -14.0609, 24.6729, -50.2546, 0.1 ) }
    dend_6 { pt3dadd( -14.4408, 25.1117, -50.6774, 0.1 ) }
    dend_6 { pt3dadd( -14.9863, 25.6808, -51.2384, 0.1 ) }
    dend_6 { pt3dadd( -15.3016, 26.0189, -51.5793, 0.1 ) }
    dend_6 { pt3dadd( -15.4897, 26.2246, -51.7928, 0.1 ) }
    dend_6 { pt3dadd( -15.802, 26.5566, -52.1313, 0.1 ) }
    dend_6 { pt3dadd( -16.3221, 27.1129, -52.7281, 0.1 ) }
    dend_6 { pt3dadd( -16.7099, 27.5323, -53.1705, 0.1 ) }
    dend_6 { pt3dadd( -17.0252, 27.8631, -53.497, 0.1 ) }
    dend_6 { pt3dadd( -17.226, 28.0704, -53.7106, 0.1 ) }
    dend_6 { pt3dadd( -17.6172, 28.4921, -54.1272, 0.1 ) }
    dend_6 { pt3dadd( -18.1418, 29.1009, -54.666, 0.1 ) }
    dend_6 { pt3dadd( -18.4433, 29.5031, -54.9439, 0.1 ) }
    dend_6 { pt3dadd( -18.602, 29.7718, -55.1049, 0.1 ) }
    dend_6 { pt3dadd( -18.602, 29.7718, -55.1049, 0.1 ) }
    dend_6 { pt3dadd( -18.7741, 30.2179, -55.2759, 0.1 ) }
    dend_6 { pt3dadd( -18.9176, 30.678, -55.3958, 0.1 ) }
    dend_6 { pt3dadd( -19.0547, 31.1609, -55.4724, 0.1 ) }
    dend_6 { pt3dadd( -19.1732, 31.6381, -55.5889, 0.1 ) }
    dend_6 { pt3dadd( -19.2277, 31.8753, -55.6613, 0.1 ) }
    dend_6 { pt3dadd( -19.3319, 32.381, -55.8821, 0.1 ) }
    dend_6 { pt3dadd( -19.4311, 32.8115, -56.1324, 0.1 ) }
    dend_6 { pt3dadd( -19.5371, 33.1862, -56.4545, 0.1 ) }
    dend_6 { pt3dadd( -19.753, 33.8039, -57.2912, 0.1 ) }
    dend_6 { pt3dadd( -19.8684, 34.0389, -57.7263, 0.1 ) }
    dend_6 { pt3dadd( -20.1218, 34.3954, -58.5546, 0.1 ) }
    dend_6 { pt3dadd( -20.278, 34.5517, -59.0022, 0.1 ) }
    dend_6 { pt3dadd( -20.6483, 34.8154, -59.9304, 0.1 ) }
    dend_6 { pt3dadd( -21.042, 35.0312, -60.7525, 0.1 ) }
    dend_6 { pt3dadd( -21.4063, 35.21, -61.3354, 0.1 ) }
    dend_6 { pt3dadd( -21.7379, 35.3876, -61.7627, 0.1 ) }
    dend_6 { pt3dadd( -21.9749, 35.5418, -61.9841, 0.1 ) }
    dend_6 { pt3dadd( -21.9749, 35.5418, -61.9841, 0.1 ) }
    dend_6 { pt3dadd( -22.3501, 35.9158, -62.1704, 0.1 ) }
    dend_6 { pt3dadd( -22.7189, 36.315, -62.312, 0.1 ) }
    dend_6 { pt3dadd( -23.0845, 36.7257, -62.4535, 0.1 ) }
    dend_6 { pt3dadd( -23.3177, 36.9787, -62.5432, 0.1 ) }
    dend_6 { pt3dadd( -23.7133, 37.3579, -62.6916, 0.1 ) }
    dend_6 { pt3dadd( -24.126, 37.7075, -62.8432, 0.1 ) }
    dend_6 { pt3dadd( -24.126, 37.7075, -62.8432, 0.1 ) }
    dend_6 { pt3dadd( -24.5914, 37.9889, -63.006, 0.1 ) }
    dend_6 { pt3dadd( -25.0593, 38.2513, -63.1683, 0.1 ) }
    dend_6 { pt3dadd( -25.5361, 38.5117, -63.3331, 0.1 ) }
    dend_6 { pt3dadd( -25.8295, 38.6758, -63.4348, 0.1 ) }
    dend_6 { pt3dadd( -26.0275, 38.8014, -63.5256, 0.1 ) }
    dend_6 { pt3dadd( -26.5505, 39.1841, -63.8161, 0.1 ) }
    dend_6 { pt3dadd( -26.9172, 39.5041, -64.1085, 0.1 ) }
    dend_6 { pt3dadd( -27.1209, 39.7048, -64.3123, 0.1 ) }
    dend_6 { pt3dadd( -27.4056, 40.026, -64.6939, 0.1 ) }
    dend_6 { pt3dadd( -27.8814, 40.614, -65.4397, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -28.032, 40.8116, -65.699, 0.1 ) }
    dend_6 { pt3dadd( -28.4926, 41.44, -66.5417, 0.1 ) }
    dend_6 { pt3dadd( -28.6257, 41.6283, -66.817, 0.1 ) }
    dend_6 { pt3dadd( -29.0203, 42.1815, -67.638, 0.1 ) }
    dend_6 { pt3dadd( -29.2388, 42.4788, -68.0615, 0.1 ) }
    dend_6 { pt3dadd( -29.3942, 42.6797, -68.3152, 0.1 ) }
    dend_6 { pt3dadd( -29.6582, 43.0076, -68.687, 0.1 ) }
    dend_6 { pt3dadd( -30.1048, 43.5399, -69.2615, 0.1 ) }
    dend_6 { pt3dadd( -30.4696, 43.9622, -69.7135, 0.1 ) }
    dend_6 { pt3dadd( -30.7855, 44.29, -70.0537, 0.1 ) }
    dend_6 { pt3dadd( -30.9898, 44.4944, -70.2668, 0.1 ) }
    dend_6 { pt3dadd( -31.4075, 44.9006, -70.6729, 0.1 ) }
    dend_6 { pt3dadd( -31.9714, 45.4512, -71.2392, 0.1 ) }
    dend_6 { pt3dadd( -32.3074, 45.7697, -71.5571, 0.1 ) }
    dend_6 { pt3dadd( -32.6339, 46.0843, -71.8867, 0.1 ) }
    dend_6 { pt3dadd( -32.9653, 46.4, -72.2225, 0.1 ) }
    dend_6 { pt3dadd( -33.1594, 46.5915, -72.4438, 0.1 ) }
    dend_6 { pt3dadd( -33.725, 47.1768, -73.1314, 0.1 ) }
    dend_6 { pt3dadd( -34.024, 47.4973, -73.4807, 0.1 ) }
    dend_6 { pt3dadd( -34.3125, 47.8282, -73.8407, 0.1 ) }
    dend_6 { pt3dadd( -34.4705, 48.0365, -74.0752, 0.1 ) }
    dend_6 { pt3dadd( -34.8436, 48.5898, -74.6815, 0.1 ) }
    dend_6 { pt3dadd( -35.044, 48.9393, -75.0814, 0.1 ) }
    dend_6 { pt3dadd( -35.2061, 49.305, -75.4756, 0.1 ) }
    dend_6 { pt3dadd( -35.3146, 49.6847, -75.875, 0.1 ) }
    dend_6 { pt3dadd( -35.4689, 50.4334, -76.6223, 0.1 ) }
    dend_6 { pt3dadd( -35.5254, 50.8047, -76.9472, 0.1 ) }
    dend_6 { pt3dadd( -35.618, 51.5343, -77.4688, 0.1 ) }
    dend_6 { pt3dadd( -35.6505, 52.0118, -77.774, 0.1 ) }
    dend_6 { pt3dadd( -35.6615, 52.3312, -77.9472, 0.1 ) }
    dend_6 { pt3dadd( -35.68, 52.8573, -78.1597, 0.1 ) }
    dend_6 { pt3dadd( -35.7165, 53.347, -78.279, 0.1 ) }
    dend_6 { pt3dadd( -35.7723, 53.8351, -78.3674, 0.1 ) }
    dend_6 { pt3dadd( -35.8492, 54.331, -78.4265, 0.1 ) }
    dend_6 { pt3dadd( -35.8939, 54.5789, -78.458, 0.1 ) }
    dend_6 { pt3dadd( -35.9949, 55.0696, -78.5241, 0.1 ) }
    dend_6 { pt3dadd( -36.0924, 55.5561, -78.6318, 0.1 ) }
    dend_6 { pt3dadd( -36.1951, 56.0291, -78.7771, 0.1 ) }
    dend_6 { pt3dadd( -36.2952, 56.4689, -78.9909, 0.1 ) }
    dend_6 { pt3dadd( -36.2952, 56.4689, -78.9909, 0.1 ) }
    dend_6 { pt3dadd( -36.3962, 56.9033, -79.3431, 0.1 ) }
    dend_6 { pt3dadd( -36.5888, 57.6566, -80.0668, 0.1 ) }
    dend_6 { pt3dadd( -36.6756, 57.9791, -80.4378, 0.1 ) }
    dend_6 { pt3dadd( -36.8552, 58.6421, -81.2526, 0.1 ) }
    dend_6 { pt3dadd( -36.9371, 58.9527, -81.6314, 0.1 ) }
    dend_6 { pt3dadd( -37.074, 59.5494, -82.3865, 0.1 ) }
    dend_6 { pt3dadd( -37.1475, 59.8932, -82.8246, 0.1 ) }
    dend_6 { pt3dadd( -37.2965, 60.5758, -83.6289, 0.1 ) }
    dend_6 { pt3dadd( -37.3696, 60.9118, -83.9992, 0.1 ) }
    dend_6 { pt3dadd( -37.4438, 61.2638, -84.3575, 0.1 ) }
    dend_6 { pt3dadd( -37.5721, 61.908, -84.9752, 0.1 ) }
    dend_6 { pt3dadd( -37.6507, 62.3397, -85.3257, 0.1 ) }
    dend_6 { pt3dadd( -37.7155, 62.7368, -85.6168, 0.1 ) }
    dend_6 { pt3dadd( -37.7842, 63.1483, -85.9063, 0.1 ) }
    dend_6 { pt3dadd( -37.93, 64.0053, -86.5167, 0.1 ) }
    dend_6 { pt3dadd( -38.0023, 64.4229, -86.7964, 0.1 ) }
    dend_6 { pt3dadd( -38.0752, 64.8382, -87.0748, 0.1 ) }
    dend_6 { pt3dadd( -38.1392, 65.2482, -87.3675, 0.1 ) }
    dend_6 { pt3dadd( -38.2725, 66.103, -87.9838, 0.1 ) }
    dend_6 { pt3dadd( -38.3369, 66.5166, -88.267, 0.1 ) }
    dend_6 { pt3dadd( -38.3933, 66.9347, -88.5496, 0.1 ) }
    dend_6 { pt3dadd( -38.4939, 67.7891, -89.1725, 0.1 ) }
    dend_6 { pt3dadd( -38.5437, 68.1939, -89.4751, 0.1 ) }
    dend_6 { pt3dadd( -38.5958, 68.596, -89.7619, 0.1 ) }
    dend_6 { pt3dadd( -38.6547, 69.0235, -90.0248, 0.1 ) }
    dend_6 { pt3dadd( -38.8031, 69.9076, -90.5415, 0.1 ) }
    dend_6 { pt3dadd( -38.8031, 69.9076, -90.5415, 0.1 ) }
    dend_6 { pt3dadd( -38.9282, 70.4161, -90.7443, 0.1 ) }
    dend_6 { pt3dadd( -39.0589, 70.877, -90.9129, 0.1 ) }
    dend_6 { pt3dadd( -39.1982, 71.3266, -91.0966, 0.1 ) }
    dend_6 { pt3dadd( -39.3595, 71.8243, -91.3009, 0.1 ) }
    dend_6 { pt3dadd( -39.5084, 72.2785, -91.4723, 0.1 ) }
    dend_6 { pt3dadd( -39.6697, 72.7778, -91.6724, 0.1 ) }
    dend_6 { pt3dadd( -39.8088, 73.2285, -91.8606, 0.1 ) }
    dend_6 { pt3dadd( -40.0965, 74.1677, -92.2648, 0.1 ) }
    dend_6 { pt3dadd( -40.2279, 74.6169, -92.4554, 0.1 ) }
    dend_6 { pt3dadd( -40.3492, 75.0752, -92.6372, 0.1 ) }
    dend_6 { pt3dadd( -40.4779, 75.5901, -92.8207, 0.1 ) }
    dend_6 { pt3dadd( -40.5839, 76.058, -92.9586, 0.1 ) }
    dend_6 { pt3dadd( -40.6376, 76.2975, -93.0135, 0.1 ) }
    dend_6 { pt3dadd( -40.7539, 76.7867, -93.0842, 0.1 ) }
    dend_6 { pt3dadd( -40.8828, 77.2696, -93.1583, 0.1 ) }
    dend_6 { pt3dadd( -41.0304, 77.7489, -93.2379, 0.1 ) }
    dend_6 { pt3dadd( -41.1981, 78.218, -93.3229, 0.1 ) }
    dend_6 { pt3dadd( -41.1981, 78.218, -93.3229, 0.1 ) }
    dend_6 { pt3dadd( -41.4505, 78.7069, -93.4352, 0.1 ) }
    dend_6 { pt3dadd( -41.7363, 79.1821, -93.5569, 0.1 ) }
    dend_6 { pt3dadd( -42.0336, 79.6421, -93.681, 0.1 ) }
    dend_6 { pt3dadd( -42.3436, 80.1003, -93.8088, 0.1 ) }
    dend_6 { pt3dadd( -42.654, 80.5506, -93.9363, 0.1 ) }
    dend_6 { pt3dadd( -42.8456, 80.8436, -94.016, 0.1 ) }
    dend_6 { pt3dadd( -43.1294, 81.3208, -94.1372, 0.1 ) }
    dend_6 { pt3dadd( -43.3493, 81.7435, -94.2775, 0.1 ) }
    dend_6 { pt3dadd( -43.3493, 81.7435, -94.2775, 0.1 ) }
    dend_6 { pt3dadd( -43.5085, 82.2318, -94.5344, 0.1 ) }
    dend_6 { pt3dadd( -43.6074, 82.6477, -94.7871, 0.1 ) }
    dend_6 { pt3dadd( -43.6674, 83.0536, -95.0863, 0.1 ) }
    dend_6 { pt3dadd( -43.7409, 83.8705, -95.7613, 0.1 ) }
    dend_6 { pt3dadd( -43.7564, 84.2546, -96.0892, 0.1 ) }
    dend_6 { pt3dadd( -43.7295, 85.049, -96.7518, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -43.68, 85.4391, -97.0692, 0.1 ) }
    dend_6 { pt3dadd( -43.4972, 86.2532, -97.6812, 0.1 ) }
    dend_6 { pt3dadd( -43.4294, 86.4582, -97.8101, 0.1 ) }
    dend_6 { pt3dadd( -43.2151, 86.9324, -98.0138, 0.1 ) }
    dend_6 { pt3dadd( -42.9668, 87.4147, -98.1594, 0.1 ) }
    dend_6 { pt3dadd( -42.8038, 87.727, -98.229, 0.1 ) }
    dend_6 { pt3dadd( -42.568, 88.2294, -98.3512, 0.1 ) }
    dend_6 { pt3dadd( -42.4633, 88.5503, -98.4736, 0.1 ) }
    dend_6 { pt3dadd( -42.4255, 88.7653, -98.6032, 0.1 ) }
    dend_6 { pt3dadd( -42.4356, 89.2142, -98.9506, 0.1 ) }
    dend_6 { pt3dadd( -42.5934, 90.0181, -99.6268, 0.1 ) }
    dend_6 { pt3dadd( -42.7145, 90.4143, -100.006, 0.1 ) }
    dend_6 { pt3dadd( -43.0057, 91.1391, -100.73, 0.1 ) }
    dend_6 { pt3dadd( -43.0781, 91.3006, -100.909, 0.1 ) }
    dend_6 { pt3dadd( -43.2504, 91.659, -101.314, 0.1 ) }
    dend_6 { pt3dadd( -43.4131, 92.0017, -101.728, 0.1 ) }
    dend_6 { pt3dadd( -43.7223, 92.663, -102.504, 0.1 ) }
    dend_6 { pt3dadd( -43.8859, 93.0134, -102.921, 0.1 ) }
    dend_6 { pt3dadd( -44.1731, 93.6316, -103.612, 0.1 ) }
    dend_6 { pt3dadd( -44.3212, 93.9776, -104.029, 0.1 ) }
    dend_6 { pt3dadd( -44.5853, 94.6515, -104.806, 0.1 ) }
    dend_6 { pt3dadd( -44.7087, 94.9974, -105.157, 0.1 ) }
    dend_6 { pt3dadd( -44.7976, 95.2679, -105.362, 0.1 ) }
    dend_6 { pt3dadd( -44.9091, 95.7007, -105.603, 0.1 ) }
    dend_6 { pt3dadd( -45.0844, 96.5438, -105.87, 0.1 ) }
    dend_6 { pt3dadd( -45.2454, 97.5455, -106.068, 0.1 ) }
    dend_6 { pt3dadd( -45.3274, 98.0448, -106.11, 0.1 ) }
    dend_6 { pt3dadd( -45.4181, 98.5316, -106.148, 0.1 ) }
    dend_6 { pt3dadd( -45.5415, 99.0841, -106.191, 0.1 ) }
    dend_6 { pt3dadd( -45.6828, 99.5674, -106.233, 0.1 ) }
    dend_6 { pt3dadd( -45.7645, 99.8068, -106.255, 0.1 ) }
    dend_6 { pt3dadd( -45.9569, 100.325, -106.352, 0.1 ) }
    dend_6 { pt3dadd( -46.1766, 100.832, -106.455, 0.1 ) }
    dend_6 { pt3dadd( -46.4175, 101.334, -106.565, 0.1 ) }
    dend_6 { pt3dadd( -46.6655, 101.825, -106.676, 0.1 ) }
    dend_6 { pt3dadd( -46.8801, 102.275, -106.774, 0.1 ) }
    dend_6 { pt3dadd( -46.8801, 102.275, -106.774, 0.1 ) }
    dend_6 { pt3dadd( -47.0753, 102.792, -106.871, 0.1 ) }
    dend_6 { pt3dadd( -47.2238, 103.269, -106.951, 0.1 ) }
    dend_6 { pt3dadd( -47.3482, 103.756, -107.024, 0.1 ) }
    dend_6 { pt3dadd( -47.4546, 104.245, -107.091, 0.1 ) }
    dend_6 { pt3dadd( -47.4546, 104.245, -107.091, 0.1 ) }
    dend_6 { pt3dadd( -47.5435, 104.732, -107.154, 0.1 ) }
    dend_6 { pt3dadd( -47.6232, 105.228, -107.213, 0.1 ) }
    dend_6 { pt3dadd( -47.6924, 105.725, -107.27, 0.1 ) }
    dend_6 { pt3dadd( -47.7538, 106.226, -107.325, 0.1 ) }
    dend_6 { pt3dadd( -47.8098, 106.725, -107.378, 0.1 ) }
    dend_6 { pt3dadd( -47.8631, 107.228, -107.43, 0.1 ) }
    dend_6 { pt3dadd( -47.9122, 107.719, -107.48, 0.1 ) }
    dend_6 { pt3dadd( -47.9645, 108.282, -107.537, 0.1 ) }
    dend_6 { pt3dadd( -48.0072, 108.783, -107.586, 0.1 ) }
    dend_6 { pt3dadd( -48.0458, 109.287, -107.634, 0.1 ) }
    dend_6 { pt3dadd( -48.0801, 109.78, -107.679, 0.1 ) }
    dend_6 { pt3dadd( -48.097, 110.033, -107.703, 0.1 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 32.9154, -211.048, -34.1134, 0.1 ) }
    dend_4 { pt3dadd( 32.9019, -211.396, -34.2037, 0.1 ) }
    dend_4 { pt3dadd( 32.8818, -211.89, -34.3235, 0.1 ) }
    dend_4 { pt3dadd( 32.8587, -212.439, -34.4375, 0.1 ) }
    dend_4 { pt3dadd( 32.8472, -212.939, -34.5296, 0.1 ) }
    dend_4 { pt3dadd( 32.8328, -213.995, -34.6937, 0.1 ) }
    dend_4 { pt3dadd( 32.8351, -214.49, -34.7615, 0.1 ) }
    dend_4 { pt3dadd( 32.8269, -215.052, -34.8608, 0.1 ) }
    dend_4 { pt3dadd( 32.8088, -215.601, -34.9695, 0.1 ) }
    dend_4 { pt3dadd( 32.7906, -216.096, -35.0691, 0.1 ) }
    dend_4 { pt3dadd( 32.7669, -216.656, -35.1652, 0.1 ) }
    dend_4 { pt3dadd( 32.7603, -217.158, -35.2314, 0.1 ) }
    dend_4 { pt3dadd( 32.7494, -218.21, -35.382, 0.1 ) }
    dend_4 { pt3dadd( 32.7539, -218.459, -35.4208, 0.14 ) }
    dend_4 { pt3dadd( 32.7742, -219.021, -35.5021, 0.14 ) }
    dend_4 { pt3dadd( 32.8084, -219.578, -35.5696, 0.1 ) }
    dend_4 { pt3dadd( 32.8552, -220.082, -35.6124, 0.1 ) }
    dend_4 { pt3dadd( 32.9201, -220.584, -35.6313, 0.1 ) }
    dend_4 { pt3dadd( 33.0132, -221.084, -35.6263, 0.1 ) }
    dend_4 { pt3dadd( 33.1255, -221.634, -35.6263, 0.1 ) }
    dend_4 { pt3dadd( 33.2406, -222.129, -35.6339, 0.1 ) }
    dend_4 { pt3dadd( 33.3894, -222.68, -35.6538, 0.1 ) }
    dend_4 { pt3dadd( 33.5218, -223.161, -35.6723, 0.1 ) }
    dend_4 { pt3dadd( 33.661, -223.648, -35.6942, 0.1 ) }
    dend_4 { pt3dadd( 33.8091, -224.131, -35.7212, 0.1 ) }
    dend_4 { pt3dadd( 33.9434, -224.617, -35.7832, 0.1 ) }
    dend_4 { pt3dadd( 34.0722, -225.156, -35.8806, 0.1 ) }
    dend_4 { pt3dadd( 34.1467, -225.5, -35.9582, 0.1 ) }
    dend_4 { pt3dadd( 34.2376, -225.983, -36.0778, 0.1 ) }
    dend_4 { pt3dadd( 34.3295, -226.466, -36.1671, 0.1 ) }
    dend_4 { pt3dadd( 34.5382, -227.506, -36.2964, 0.1 ) }
    dend_4 { pt3dadd( 34.6378, -228.004, -36.325, 0.14 ) }
    dend_4 { pt3dadd( 34.7418, -228.499, -36.3251, 0.1 ) }
    dend_4 { pt3dadd( 34.8537, -228.986, -36.3017, 0.1 ) }
    dend_4 { pt3dadd( 35.088, -230.022, -36.1886, 0.1 ) }
    dend_4 { pt3dadd( 35.2031, -230.51, -36.1077, 0.1 ) }
    dend_4 { pt3dadd( 35.3333, -231.044, -35.9891, 0.1 ) }
    dend_4 { pt3dadd( 35.4349, -231.532, -35.8887, 0.1 ) }
    dend_4 { pt3dadd( 35.526, -232.086, -35.791, 0.1 ) }
    dend_4 { pt3dadd( 35.5991, -232.637, -35.7227, 0.14 ) }
    dend_4 { pt3dadd( 35.6279, -232.887, -35.7104, 0.1 ) }
    dend_4 { pt3dadd( 35.6928, -233.451, -35.6828, 0.1 ) }
    dend_4 { pt3dadd( 35.7434, -233.954, -35.6542, 0.1 ) }
    dend_4 { pt3dadd( 35.7829, -234.511, -35.6135, 0.1 ) }
    dend_4 { pt3dadd( 35.7998, -235.017, -35.6066, 0.1 ) }
    dend_4 { pt3dadd( 35.8123, -235.525, -35.6042, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_4 { pt3dadd( 35.8157, -236.087, -35.6043, 0.28 ) }
    dend_4 { pt3dadd( 35.8033, -236.806, -35.6139, 0.14 ) }
    dend_4 { pt3dadd( 35.7802, -237.157, -35.6213, 0.1 ) }
    dend_4 { pt3dadd( 35.663, -238.184, -35.669, 0.1 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 32.9154, -211.048, -34.1134, 0.1 ) }
    dend_3 { pt3dadd( 32.5771, -211.287, -34.1079, 0.1 ) }
    dend_3 { pt3dadd( 32.2856, -211.512, -34.0423, 0.1 ) }
    dend_3 { pt3dadd( 31.9641, -211.758, -33.9457, 0.1 ) }
    dend_3 { pt3dadd( 31.6409, -212.007, -33.8425, 0.1 ) }
    dend_3 { pt3dadd( 31.4467, -212.159, -33.7589, 0.1 ) }
    dend_3 { pt3dadd( 31.1358, -212.4, -33.6107, 0.1 ) }
    dend_3 { pt3dadd( 30.5761, -212.864, -33.3029, 0.1 ) }
    dend_3 { pt3dadd( 30.3201, -213.082, -33.1494, 0.1 ) }
    dend_3 { pt3dadd( 30.0291, -213.33, -32.972, 0.1 ) }
    dend_3 { pt3dadd( 29.4931, -213.809, -32.6513, 0.1 ) }
    dend_3 { pt3dadd( 29.3666, -213.933, -32.5895, 0.1 ) }
    dend_3 { pt3dadd( 29.0895, -214.219, -32.4689, 0.1 ) }
    dend_3 { pt3dadd( 28.9157, -214.415, -32.4214, 0.1 ) }
    dend_3 { pt3dadd( 28.6616, -214.74, -32.3661, 0.1 ) }
    dend_3 { pt3dadd( 28.423, -215.086, -32.3615, 0.1 ) }
    dend_3 { pt3dadd( 28.05, -215.733, -32.5311, 0.1 ) }
    // Section: dend_75, id: dend_75, parent: dend_63 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -8.51054, 73.0277, -2.1345, 0.28 ) }
    dend_75 { pt3dadd( -9.39874, 73.6032, -2.13196, 0.28 ) }
    dend_75 { pt3dadd( -9.812, 73.9096, -2.14741, 0.14 ) }
    dend_75 { pt3dadd( -10.0705, 74.1136, -2.16453, 0.28 ) }
    dend_75 { pt3dadd( -10.5672, 74.5338, -2.20828, 0.42 ) }
    dend_75 { pt3dadd( -10.8112, 74.7541, -2.23384, 0.42 ) }
    dend_75 { pt3dadd( -11.1869, 75.1136, -2.27797, 0.28 ) }
    dend_75 { pt3dadd( -11.5238, 75.4978, -2.34721, 0.14 ) }
    dend_75 { pt3dadd( -11.7271, 75.7542, -2.38669, 0.1 ) }
    dend_75 { pt3dadd( -12.0264, 76.1707, -2.44112, 0.1 ) }
    dend_75 { pt3dadd( -12.3108, 76.6049, -2.48921, 0.14 ) }
    dend_75 { pt3dadd( -12.5822, 77.0411, -2.53306, 0.28 ) }
    dend_75 { pt3dadd( -12.8325, 77.4323, -2.57457, 0.14 ) }
    dend_75 { pt3dadd( -13.0105, 77.6994, -2.60509, 0.1 ) }
    dend_75 { pt3dadd( -13.2834, 78.0742, -2.65518, 0.14 ) }
    dend_75 { pt3dadd( -13.6075, 78.4701, -2.71933, 0.28 ) }
    dend_75 { pt3dadd( -13.9408, 78.8493, -2.8244, 0.42 ) }
    dend_75 { pt3dadd( -14.2984, 79.2147, -2.93334, 0.56 ) }
    dend_75 { pt3dadd( -14.5283, 79.431, -2.99951, 0.42 ) }
    dend_75 { pt3dadd( -14.9031, 79.7793, -3.099, 0.28 ) }
    dend_75 { pt3dadd( -15.1448, 80.0019, -3.15762, 0.28 ) }
    dend_75 { pt3dadd( -15.7279, 80.5763, -3.28147, 0.42 ) }
    dend_75 { pt3dadd( -16.3812, 81.2912, -3.39712, 0.1 ) }
    dend_75 { pt3dadd( -16.7023, 81.6923, -3.44098, 0.1 ) }
    dend_75 { pt3dadd( -17.0039, 82.1165, -3.47002, 0.1 ) }
    dend_75 { pt3dadd( -17.2828, 82.5499, -3.48604, 0.1 ) }
    dend_75 { pt3dadd( -17.5445, 82.9919, -3.53176, 0.14 ) }
    dend_75 { pt3dadd( -17.6599, 83.1921, -3.56252, 0.28 ) }
    dend_75 { pt3dadd( -17.9023, 83.6288, -3.69063, 0.42 ) }
    dend_75 { pt3dadd( -18.1255, 84.0155, -3.82521, 0.56 ) }
    dend_75 { pt3dadd( -18.3756, 84.4345, -3.99195, 0.7 ) }
    dend_75 { pt3dadd( -18.8641, 85.212, -4.32948, 0.56 ) }
    dend_75 { pt3dadd( -19.0319, 85.4632, -4.44223, 0.42 ) }
    dend_75 { pt3dadd( -19.3948, 85.9719, -4.665, 0.42 ) }
    dend_75 { pt3dadd( -19.5744, 86.2207, -4.76387, 0.56 ) }
    dend_75 { pt3dadd( -19.5744, 86.2207, -4.76387, 0.7 ) }
    dend_75 { pt3dadd( -19.8729, 86.6371, -4.8602, 0.56 ) }
    dend_75 { pt3dadd( -20.1463, 87.0653, -4.94861, 0.42 ) }
    dend_75 { pt3dadd( -20.3895, 87.5067, -5.05777, 0.28 ) }
    dend_75 { pt3dadd( -20.586, 87.914, -5.1715, 0.14 ) }
    dend_75 { pt3dadd( -20.7933, 88.366, -5.3077, 0.1 ) }
    dend_75 { pt3dadd( -20.9914, 88.821, -5.44793, 0.1 ) }
    dend_75 { pt3dadd( -21.3032, 89.6568, -5.77516, 0.14 ) }
    dend_75 { pt3dadd( -21.3032, 89.6568, -5.77516, 0.28 ) }
    dend_75 { pt3dadd( -21.495, 90.1051, -5.9428, 0.56 ) }
    dend_75 { pt3dadd( -21.7394, 90.5443, -6.05812, 0.42 ) }
    dend_75 { pt3dadd( -22.0039, 90.9254, -6.10513, 0.56 ) }
    dend_75 { pt3dadd( -22.5631, 91.5787, -6.09014, 0.7 ) }
    dend_75 { pt3dadd( -23.318, 92.3101, -5.98542, 0.14 ) }
    dend_75 { pt3dadd( -23.5635, 92.5273, -5.95029, 0.1 ) }
    dend_75 { pt3dadd( -24.3794, 93.179, -5.80802, 0.1 ) }
    dend_75 { pt3dadd( -24.6383, 93.3657, -5.76226, 0.14 ) }
    dend_75 { pt3dadd( -24.9112, 93.5526, -5.71799, 0.28 ) }
    dend_75 { pt3dadd( -25.4395, 93.9271, -5.64127, 0.42 ) }
    dend_75 { pt3dadd( -25.6963, 94.1339, -5.6424, 0.56 ) }
    dend_75 { pt3dadd( -25.9403, 94.3546, -5.66329, 0.42 ) }
    dend_75 { pt3dadd( -26.3887, 94.8285, -5.75898, 0.7 ) }
    dend_75 { pt3dadd( -26.7106, 95.2222, -5.87585, 0.56 ) }
    dend_75 { pt3dadd( -27.0052, 95.6198, -6.02103, 0.42 ) }
    dend_75 { pt3dadd( -27.0052, 95.6198, -6.02103, 0.28 ) }
    dend_75 { pt3dadd( -27.2608, 96.0217, -6.23284, 0.1 ) }
    dend_75 { pt3dadd( -27.5275, 96.411, -6.44079, 0.1 ) }
    dend_75 { pt3dadd( -28.0867, 97.1297, -6.79005, 0.1 ) }
    dend_75 { pt3dadd( -28.3153, 97.3557, -6.86338, 0.1 ) }
    dend_75 { pt3dadd( -28.7249, 97.6665, -6.90258, 0.14 ) }
    dend_75 { pt3dadd( -29.4773, 98.1414, -6.85311, 0.28 ) }
    dend_75 { pt3dadd( -30.3222, 98.5529, -6.57826, 0.84 ) }
    dend_75 { pt3dadd( -31.114, 98.8792, -6.11434, 0.7 ) }
    dend_75 { pt3dadd( -31.8563, 99.1912, -5.55733, 0.84 ) }
    dend_75 { pt3dadd( -32.0202, 99.2668, -5.40982, 0.98 ) }
    dend_75 { pt3dadd( -32.1726, 99.3407, -5.24955, 1.12 ) }
    dend_75 { pt3dadd( -32.7716, 99.6545, -4.54676, 0.56 ) }
    dend_75 { pt3dadd( -33.3557, 100.024, -3.85868, 0.42 ) }
    dend_75 { pt3dadd( -33.6326, 100.231, -3.54544, 0.28 ) }
    dend_75 { pt3dadd( -34.2216, 100.709, -2.93275, 0.28 ) }
    dend_75 { pt3dadd( -34.7803, 101.179, -2.42186, 0.42 ) }
    dend_75 { pt3dadd( -34.7803, 101.179, -2.42186, 0.56 ) }
    dend_75 { pt3dadd( -35.2266, 101.604, -2.19744, 0.7 ) }
    dend_75 { pt3dadd( -35.574, 101.972, -2.09892, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( -35.7853, 102.224, -2.07053, 0.42 ) }
    dend_75 { pt3dadd( -36.0761, 102.649, -2.08608, 0.28 ) }
    dend_75 { pt3dadd( -36.3424, 103.097, -2.08803, 0.14 ) }
    dend_75 { pt3dadd( -36.5636, 103.504, -2.05803, 0.1 ) }
    dend_75 { pt3dadd( -36.7878, 103.956, -1.95212, 0.1 ) }
    dend_75 { pt3dadd( -36.9739, 104.359, -1.80878, 0.1 ) }
    dend_75 { pt3dadd( -37.1469, 104.751, -1.63005, 0.1 ) }
    dend_75 { pt3dadd( -37.4852, 105.519, -1.18558, 0.14 ) }
    dend_75 { pt3dadd( -37.5646, 105.699, -1.06026, 0.28 ) }
    dend_75 { pt3dadd( -37.9049, 106.358, -0.473903, 0.42 ) }
    dend_75 { pt3dadd( -38.073, 106.661, -0.165533, 0.56 ) }
    dend_75 { pt3dadd( -38.1675, 106.798, -0.00559306, 0.56 ) }
    dend_75 { pt3dadd( -38.3727, 107.069, 0.313853, 0.7 ) }
    dend_75 { pt3dadd( -38.5964, 107.336, 0.623696, 0.98 ) }
    dend_75 { pt3dadd( -39.0938, 107.901, 1.24373, 0.84 ) }
    dend_75 { pt3dadd( -39.3368, 108.187, 1.51655, 0.7 ) }
    dend_75 { pt3dadd( -39.8703, 108.782, 2.08062, 0.56 ) }
    dend_75 { pt3dadd( -40.0013, 108.927, 2.20833, 0.42 ) }
    dend_75 { pt3dadd( -40.5696, 109.54, 2.71075, 0.1 ) }
    dend_75 { pt3dadd( -40.8962, 109.866, 2.95431, 0.1 ) }
    dend_75 { pt3dadd( -41.1983, 110.158, 3.13733, 0.14 ) }
    dend_75 { pt3dadd( -41.9396, 110.846, 3.44282, 0.1 ) }
    dend_75 { pt3dadd( -42.1763, 111.073, 3.47142, 0.1 ) }
    dend_75 { pt3dadd( -42.4114, 111.294, 3.47441, 0.1 ) }
    dend_75 { pt3dadd( -42.8803, 111.74, 3.36429, 0.14 ) }
    dend_75 { pt3dadd( -42.8803, 111.74, 3.36429, 0.28 ) }
    dend_75 { pt3dadd( -43.5444, 112.365, 2.82794, 0.84 ) }
    dend_75 { pt3dadd( -43.8984, 112.798, 2.21758, 0.84 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 28/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -8.51054, 73.0277, -2.1345, 0.84 ) }
    dend_64 { pt3dadd( -8.51428, 73.5506, -2.03916, 0.84 ) }
    dend_64 { pt3dadd( -8.52612, 74.129, -1.94083, 0.98 ) }
    dend_64 { pt3dadd( -8.53406, 74.7142, -1.8376, 0.84 ) }
    dend_64 { pt3dadd( -8.54423, 75.2266, -1.75019, 0.84 ) }
    dend_64 { pt3dadd( -8.56024, 75.7512, -1.66586, 0.84 ) }
    dend_64 { pt3dadd( -8.58522, 76.3401, -1.57765, 0.7 ) }
    dend_64 { pt3dadd( -8.61666, 76.866, -1.50729, 0.56 ) }
    dend_64 { pt3dadd( -8.66477, 77.4472, -1.4419, 0.56 ) }
    dend_64 { pt3dadd( -8.714, 77.9737, -1.38785, 0.56 ) }
    dend_64 { pt3dadd( -8.76287, 78.4976, -1.33396, 0.7 ) }
    dend_64 { pt3dadd( -8.816, 79.0215, -1.28401, 0.84 ) }
    dend_64 { pt3dadd( -8.88455, 79.5474, -1.2479, 0.84 ) }
    dend_64 { pt3dadd( -8.88455, 79.5474, -1.2479, 0.98 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 42/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -17.7836, 71.3512, -39.0038, 1.12 ) }
    dend_58 { pt3dadd( -17.7021, 71.8115, -38.8701, 1.12 ) }
    dend_58 { pt3dadd( -17.5943, 72.3327, -38.7098, 0.98 ) }
    dend_58 { pt3dadd( -17.4632, 72.8375, -38.5391, 0.84 ) }
    dend_58 { pt3dadd( -17.3699, 73.1567, -38.425, 0.7 ) }
    dend_58 { pt3dadd( -17.2036, 73.652, -38.2356, 0.56 ) }
    dend_58 { pt3dadd( -17.0203, 74.1317, -38.0391, 0.7 ) }
    dend_58 { pt3dadd( -16.8026, 74.5982, -37.8252, 0.1 ) }
    dend_58 { pt3dadd( -16.5621, 75.0397, -37.6027, 0.14 ) }
    dend_58 { pt3dadd( -16.382, 75.314, -37.4765, 0.1 ) }
    dend_58 { pt3dadd( -16.0806, 75.7405, -37.3045, 0.1 ) }
    dend_58 { pt3dadd( -15.7644, 76.1642, -37.1537, 0.1 ) }
    dend_58 { pt3dadd( -15.5597, 76.4423, -37.0678, 0.1 ) }
    dend_58 { pt3dadd( -15.2429, 76.8749, -36.946, 0.1 ) }
    dend_58 { pt3dadd( -14.6678, 77.7173, -36.7274, 0.14 ) }
    dend_58 { pt3dadd( -14.3782, 78.1671, -36.613, 0.42 ) }
    dend_58 { pt3dadd( -14.2025, 78.4624, -36.5387, 0.28 ) }
    dend_58 { pt3dadd( -13.8756, 79.0592, -36.376, 0.14 ) }
    dend_58 { pt3dadd( -13.7217, 79.3611, -36.2826, 0.1 ) }
    dend_58 { pt3dadd( -13.4437, 79.961, -36.0676, 0.1 ) }
    dend_58 { pt3dadd( -13.3118, 80.2635, -35.9343, 0.1 ) }
    dend_58 { pt3dadd( -13.1839, 80.5553, -35.8052, 0.1 ) }
    dend_58 { pt3dadd( -12.9417, 81.1559, -35.552, 0.1 ) }
    dend_58 { pt3dadd( -12.8183, 81.4715, -35.4585, 0.14 ) }
    dend_58 { pt3dadd( -12.6981, 81.8009, -35.3982, 0.28 ) }
    dend_58 { pt3dadd( -12.6222, 82.0343, -35.3789, 0.42 ) }
    dend_58 { pt3dadd( -12.4585, 82.5005, -35.4033, 0.1 ) }
    dend_58 { pt3dadd( -12.2767, 83.0125, -35.4682, 0.14 ) }
    dend_58 { pt3dadd( -11.9261, 83.9827, -35.6281, 0.1 ) }
    dend_58 { pt3dadd( -11.7441, 84.4925, -35.7077, 0.1 ) }
    dend_58 { pt3dadd( -11.6589, 84.7219, -35.7352, 0.1 ) }
    dend_58 { pt3dadd( -11.2379, 85.7558, -35.8628, 0.14 ) }
    dend_58 { pt3dadd( -11.0086, 86.2589, -35.9199, 0.1 ) }
    dend_58 { pt3dadd( -10.8554, 86.5793, -35.9424, 0.1 ) }
    dend_58 { pt3dadd( -10.6172, 87.0719, -35.9396, 0.1 ) }
    dend_58 { pt3dadd( -10.3615, 87.5648, -35.916, 0.1 ) }
    dend_58 { pt3dadd( -9.88511, 88.4833, -35.817, 0.1 ) }
    dend_58 { pt3dadd( -9.72676, 88.7913, -35.7569, 0.14 ) }
    dend_58 { pt3dadd( -9.40337, 89.3915, -35.6206, 0.28 ) }
    dend_58 { pt3dadd( -9.23894, 89.6961, -35.538, 0.42 ) }
    dend_58 { pt3dadd( -8.98831, 90.1614, -35.3864, 0.56 ) }
    dend_58 { pt3dadd( -8.74923, 90.6296, -35.2059, 0.42 ) }
    dend_58 { pt3dadd( -8.52613, 91.0839, -34.9911, 0.28 ) }
    dend_58 { pt3dadd( -8.38836, 91.3777, -34.856, 0.14 ) }
    dend_58 { pt3dadd( -8.12349, 91.9687, -34.5913, 0.1 ) }
    dend_58 { pt3dadd( -7.99017, 92.2676, -34.486, 0.1 ) }
    dend_58 { pt3dadd( -7.85272, 92.5796, -34.4004, 0.1 ) }
    dend_58 { pt3dadd( -7.55774, 93.208, -34.3136, 0.1 ) }
    dend_58 { pt3dadd( -7.31907, 93.7098, -34.2975, 0.1 ) }
    dend_58 { pt3dadd( -7.16746, 94.0182, -34.3054, 0.1 ) }
    dend_58 { pt3dadd( -6.69851, 94.9489, -34.3672, 0.1 ) }
    dend_58 { pt3dadd( -6.53872, 95.2614, -34.3865, 0.1 ) }
    dend_58 { pt3dadd( -6.06165, 96.1828, -34.43, 0.1 ) }
    dend_58 { pt3dadd( -5.90045, 96.5, -34.4354, 0.1 ) }
    dend_58 { pt3dadd( -5.58455, 97.1184, -34.3994, 0.1 ) }
    dend_58 { pt3dadd( -5.43477, 97.4327, -34.3511, 0.1 ) }
    dend_58 { pt3dadd( -5.14228, 98.0549, -34.2217, 0.1 ) }
    dend_58 { pt3dadd( -4.99044, 98.3649, -34.1549, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_58 { pt3dadd( -4.76198, 98.8486, -34.0403, 0.1 ) }
    dend_58 { pt3dadd( -4.53467, 99.3476, -33.9495, 0.1 ) }
    dend_58 { pt3dadd( -4.30565, 99.8456, -33.9223, 0.1 ) }
    dend_58 { pt3dadd( -3.90707, 100.707, -33.9468, 0.1 ) }
    dend_58 { pt3dadd( -3.80118, 100.927, -33.9827, 0.1 ) }
    dend_58 { pt3dadd( -3.59149, 101.364, -34.0821, 0.1 ) }
    dend_58 { pt3dadd( -3.3517, 101.85, -34.2023, 0.1 ) }
    dend_58 { pt3dadd( -2.93699, 102.788, -34.3732, 0.1 ) }
    dend_58 { pt3dadd( -2.80458, 103.112, -34.4014, 0.1 ) }
    dend_58 { pt3dadd( -2.49105, 104.102, -34.3014, 0.1 ) }
    dend_58 { pt3dadd( -2.35408, 104.619, -34.1786, 0.1 ) }
    dend_58 { pt3dadd( -2.23351, 105.115, -33.9747, 0.1 ) }
    dend_58 { pt3dadd( -2.04461, 106.031, -33.512, 0.1 ) }
    dend_58 { pt3dadd( -1.99811, 106.327, -33.3287, 0.1 ) }
    dend_58 { pt3dadd( -1.85453, 107.191, -32.7685, 0.1 ) }
    dend_58 { pt3dadd( -1.79561, 107.471, -32.565, 0.14 ) }
    dend_58 { pt3dadd( -1.72546, 107.671, -32.435, 0.14 ) }
    dend_58 { pt3dadd( -1.30501, 108.481, -32.0061, 0.28 ) }
    dend_58 { pt3dadd( -1.1057, 108.745, -31.8885, 0.28 ) }
    dend_58 { pt3dadd( -0.757359, 109.131, -31.7092, 0.14 ) }
    dend_58 { pt3dadd( -0.420535, 109.462, -31.5541, 0.1 ) }
    dend_58 { pt3dadd( -0.046406, 109.812, -31.3539, 0.1 ) }
    dend_58 { pt3dadd( 0.328078, 110.139, -31.12, 0.1 ) }
    dend_58 { pt3dadd( 0.662284, 110.414, -30.8744, 0.1 ) }
    dend_58 { pt3dadd( 1.0389, 110.706, -30.6008, 0.1 ) }
    dend_58 { pt3dadd( 1.28024, 110.892, -30.4257, 0.14 ) }
    dend_58 { pt3dadd( 1.45201, 111.022, -30.3015, 0.28 ) }
    dend_58 { pt3dadd( 1.8177, 111.28, -30.0908, 0.7 ) }
    dend_58 { pt3dadd( 2.09106, 111.46, -29.9619, 0.56 ) }
    dend_58 { pt3dadd( 2.48376, 111.714, -29.8014, 0.42 ) }
    dend_58 { pt3dadd( 2.93091, 111.987, -29.6342, 0.28 ) }
    dend_58 { pt3dadd( 3.34115, 112.227, -29.4875, 0.14 ) }
    dend_58 { pt3dadd( 4.20354, 112.727, -29.1922, 0.1 ) }
    dend_58 { pt3dadd( 4.61075, 112.978, -29.056, 0.1 ) }
    dend_58 { pt3dadd( 5.0533, 113.265, -28.9014, 0.1 ) }
    dend_58 { pt3dadd( 5.44649, 113.549, -28.7917, 0.1 ) }
    dend_58 { pt3dadd( 5.63593, 113.699, -28.7454, 0.1 ) }
    dend_58 { pt3dadd( 5.63593, 113.699, -28.7454, 0.1 ) }
    dend_58 { pt3dadd( 6.02165, 114.098, -28.7217, 0.1 ) }
    dend_58 { pt3dadd( 6.37185, 114.522, -28.7409, 0.1 ) }
    dend_58 { pt3dadd( 6.92254, 115.293, -28.8087, 0.1 ) }
    dend_58 { pt3dadd( 7.21865, 115.762, -28.851, 0.1 ) }
    dend_58 { pt3dadd( 7.71041, 116.57, -28.9461, 0.14 ) }
    dend_58 { pt3dadd( 7.98967, 117.037, -29.0011, 0.1 ) }
    dend_58 { pt3dadd( 8.27182, 117.511, -29.0815, 0.1 ) }
    dend_58 { pt3dadd( 8.5369, 117.982, -29.1658, 0.14 ) }
    dend_58 { pt3dadd( 8.70388, 118.289, -29.2056, 0.28 ) }
    dend_58 { pt3dadd( 9.24146, 119.272, -29.3218, 0.14 ) }
    dend_58 { pt3dadd( 9.41211, 119.579, -29.3378, 0.1 ) }
    dend_58 { pt3dadd( 9.95291, 120.465, -29.3563, 0.1 ) }
    dend_58 { pt3dadd( 10.1457, 120.764, -29.3485, 0.1 ) }
    dend_58 { pt3dadd( 10.4396, 121.227, -29.3046, 0.1 ) }
    dend_58 { pt3dadd( 10.6171, 121.525, -29.249, 0.1 ) }
    dend_58 { pt3dadd( 10.9327, 122.115, -29.0593, 0.1 ) }
    dend_58 { pt3dadd( 11.1661, 122.594, -28.8793, 0.1 ) }
    dend_58 { pt3dadd( 11.2944, 122.885, -28.7501, 0.1 ) }
    dend_58 { pt3dadd( 11.5035, 123.372, -28.5825, 0.1 ) }
    dend_58 { pt3dadd( 11.6309, 123.69, -28.5011, 0.1 ) }
    dend_58 { pt3dadd( 11.8821, 124.33, -28.3743, 0.1 ) }
    dend_58 { pt3dadd( 12.0699, 124.839, -28.3002, 0.1 ) }
    dend_58 { pt3dadd( 12.1825, 125.17, -28.2627, 0.1 ) }
    dend_58 { pt3dadd( 12.5211, 126.152, -28.1606, 0.1 ) }
    dend_58 { pt3dadd( 12.6895, 126.666, -28.0786, 0.1 ) }
    dend_58 { pt3dadd( 12.7936, 126.997, -27.9998, 0.1 ) }
    dend_58 { pt3dadd( 12.9522, 127.491, -27.8253, 0.1 ) }
    dend_58 { pt3dadd( 13.1225, 127.964, -27.5845, 0.1 ) }
    dend_58 { pt3dadd( 13.1958, 128.154, -27.4586, 0.14 ) }
    dend_58 { pt3dadd( 13.495, 128.845, -26.881, 0.28 ) }
    dend_58 { pt3dadd( 13.7032, 129.22, -26.5368, 0.14 ) }
    dend_58 { pt3dadd( 13.9039, 129.581, -26.165, 0.1 ) }
    dend_58 { pt3dadd( 14.0636, 129.918, -25.7608, 0.1 ) }
    dend_58 { pt3dadd( 14.1266, 130.118, -25.4783, 0.1 ) }
    dend_58 { pt3dadd( 14.1778, 130.431, -25.0294, 0.1 ) }
    dend_58 { pt3dadd( 14.172, 130.707, -24.6161, 0.14 ) }
    dend_58 { pt3dadd( 14.074, 131.243, -23.7682, 0.1 ) }
    dend_58 { pt3dadd( 13.9389, 131.821, -22.9107, 0.1 ) }
    dend_58 { pt3dadd( 13.8, 132.377, -22.1527, 0.1 ) }
    dend_58 { pt3dadd( 13.7154, 132.714, -21.728, 0.1 ) }
    dend_58 { pt3dadd( 13.4855, 133.318, -20.9093, 0.1 ) }
    dend_58 { pt3dadd( 13.6696, 133.56, -21.0792, 0.14 ) }
    dend_58 { pt3dadd( 14.5996, 134.85, -21.8847, 0.28 ) }
    dend_58 { pt3dadd( 15.1048, 135.516, -22.3362, 0.14 ) }
    dend_58 { pt3dadd( 15.6188, 136.18, -22.7819, 0.28 ) }
    dend_58 { pt3dadd( 15.7577, 136.35, -22.8983, 0.42 ) }
    dend_58 { pt3dadd( 16.0638, 136.734, -23.1384, 0.14 ) }
    dend_58 { pt3dadd( 16.3577, 137.176, -23.3098, 0.1 ) }
    dend_58 { pt3dadd( 16.5106, 137.483, -23.3375, 0.1 ) }
    dend_58 { pt3dadd( 16.7705, 138.14, -23.3227, 0.1 ) }
    dend_58 { pt3dadd( 17.0641, 139.038, -23.252, 0.1 ) }
    dend_58 { pt3dadd( 17.2354, 139.567, -23.2412, 0.1 ) }
    dend_58 { pt3dadd( 17.404, 140.089, -23.2521, 0.1 ) }
    dend_58 { pt3dadd( 17.4762, 140.327, -23.2611, 0.1 ) }
    dend_58 { pt3dadd( 17.6311, 140.86, -23.2801, 0.1 ) }
    dend_58 { pt3dadd( 17.7658, 141.392, -23.2919, 0.1 ) }
    dend_58 { pt3dadd( 17.9858, 142.411, -23.2612, 0.1 ) }
    dend_58 { pt3dadd( 18.0944, 142.949, -23.2478, 0.1 ) }
    dend_58 { pt3dadd( 18.1943, 143.495, -23.2277, 0.1 ) }
    dend_58 { pt3dadd( 18.2339, 143.74, -23.2115, 0.1 ) }
    dend_58 { pt3dadd( 18.2886, 144.23, -23.1667, 0.1 ) }
    dend_58 { pt3dadd( 18.3208, 144.771, -23.0938, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_58 { pt3dadd( 18.3253, 145.257, -23.0001, 0.1 ) }
    dend_58 { pt3dadd( 18.3217, 145.795, -22.9013, 0.1 ) }
    dend_58 { pt3dadd( 18.3054, 146.344, -22.8078, 0.1 ) }
    dend_58 { pt3dadd( 18.2782, 146.835, -22.7317, 0.1 ) }
    dend_58 { pt3dadd( 18.2477, 147.376, -22.6479, 0.1 ) }
    dend_58 { pt3dadd( 18.2151, 147.925, -22.5641, 0.1 ) }
    dend_58 { pt3dadd( 18.2044, 148.168, -22.5248, 0.1 ) }
    dend_58 { pt3dadd( 18.2058, 148.662, -22.4742, 0.14 ) }
    dend_58 { pt3dadd( 18.2243, 149.156, -22.4495, 0.1 ) }
    dend_58 { pt3dadd( 18.2665, 149.701, -22.4389, 0.1 ) }
    dend_58 { pt3dadd( 18.3142, 150.257, -22.4452, 0.1 ) }
    dend_58 { pt3dadd( 18.3479, 150.599, -22.4519, 0.1 ) }
    dend_58 { pt3dadd( 18.4514, 151.636, -22.471, 0.1 ) }
    dend_58 { pt3dadd( 18.5015, 152.129, -22.4749, 0.1 ) }
    dend_58 { pt3dadd( 18.5516, 152.673, -22.4694, 0.1 ) }
    dend_58 { pt3dadd( 18.5817, 153.167, -22.4579, 0.1 ) }
    dend_58 { pt3dadd( 18.6178, 153.722, -22.4601, 0.1 ) }
    dend_58 { pt3dadd( 18.6423, 154.207, -22.4659, 0.1 ) }
    dend_58 { pt3dadd( 18.6566, 154.764, -22.4643, 0.1 ) }
    dend_58 { pt3dadd( 18.673, 155.311, -22.4824, 0.1 ) }
    dend_58 { pt3dadd( 18.6717, 155.56, -22.4821, 0.1 ) }
    dend_58 { pt3dadd( 18.6437, 156.602, -22.4292, 0.1 ) }
    dend_58 { pt3dadd( 18.6101, 157.096, -22.3844, 0.1 ) }
    dend_58 { pt3dadd( 18.5713, 157.584, -22.3151, 0.1 ) }
    dend_58 { pt3dadd( 18.516, 158.061, -22.2241, 0.14 ) }
    dend_58 { pt3dadd( 18.3602, 159.064, -21.9787, 0.1 ) }
    dend_58 { pt3dadd( 18.2792, 159.6, -21.8574, 0.1 ) }
    dend_58 { pt3dadd( 18.1997, 160.069, -21.7554, 0.1 ) }
    dend_58 { pt3dadd( 18.1795, 160.419, -21.7411, 0.1 ) }
    dend_58 { pt3dadd( 18.2012, 160.913, -21.796, 0.1 ) }
    dend_58 { pt3dadd( 18.2778, 161.383, -21.9316, 0.1 ) }
    dend_58 { pt3dadd( 18.4841, 162.303, -22.3017, 0.1 ) }
    dend_58 { pt3dadd( 18.5939, 162.747, -22.4888, 0.1 ) }
    dend_58 { pt3dadd( 18.837, 163.686, -22.8612, 0.1 ) }
    dend_58 { pt3dadd( 18.955, 164.206, -23.0233, 0.1 ) }
    dend_58 { pt3dadd( 19.1831, 165.196, -23.2379, 0.1 ) }
    dend_58 { pt3dadd( 19.2308, 165.437, -23.2593, 0.1 ) }
    dend_58 { pt3dadd( 19.2832, 165.984, -23.174, 0.1 ) }
    dend_58 { pt3dadd( 19.2869, 166.502, -22.9937, 0.1 ) }
    dend_58 { pt3dadd( 19.1883, 167.427, -22.5218, 0.1 ) }
    dend_58 { pt3dadd( 19.1313, 167.708, -22.3319, 0.1 ) }
    dend_58 { pt3dadd( 19.0318, 168.081, -22.0227, 0.1 ) }
    dend_58 { pt3dadd( 18.7975, 168.852, -21.3605, 0.1 ) }
    dend_58 { pt3dadd( 18.6563, 169.256, -21.0173, 0.1 ) }
    dend_58 { pt3dadd( 18.5258, 169.647, -20.7396, 0.1 ) }
    dend_58 { pt3dadd( 18.2911, 170.478, -20.3377, 0.14 ) }
    dend_58 { pt3dadd( 18.2416, 170.704, -20.2839, 0.28 ) }
    dend_58 { pt3dadd( 18.1685, 171.255, -20.3008, 0.1 ) }
    dend_58 { pt3dadd( 18.1832, 171.701, -20.4936, 0.1 ) }
    dend_58 { pt3dadd( 18.2667, 172.568, -21.0106, 0.1 ) }
    dend_58 { pt3dadd( 18.3275, 172.977, -21.2828, 0.1 ) }
    dend_58 { pt3dadd( 18.4658, 173.801, -21.8561, 0.1 ) }
    dend_58 { pt3dadd( 18.5371, 174.209, -22.1267, 0.14 ) }
    dend_58 { pt3dadd( 18.8312, 175.75, -23.076, 0.28 ) }
    dend_58 { pt3dadd( 18.9071, 176.174, -23.3021, 0.28 ) }
    dend_58 { pt3dadd( 18.9546, 176.495, -23.4375, 0.14 ) }
    dend_58 { pt3dadd( 19.0098, 176.962, -23.5894, 0.1 ) }
    dend_58 { pt3dadd( 19.0392, 177.503, -23.6692, 0.1 ) }
    dend_58 { pt3dadd( 19.0467, 177.997, -23.6715, 0.1 ) }
    dend_58 { pt3dadd( 19.0165, 178.546, -23.5863, 0.1 ) }
    dend_58 { pt3dadd( 19.0165, 178.546, -23.5863, 0.1 ) }
    dend_58 { pt3dadd( 18.9881, 179.034, -23.5113, 0.1 ) }
    dend_58 { pt3dadd( 18.9668, 179.573, -23.4225, 0.1 ) }
    dend_58 { pt3dadd( 18.9436, 180.123, -23.3329, 0.1 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 64/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -17.7836, 71.3512, -39.0038, 0.7 ) }
    dend_57 { pt3dadd( -18.3183, 71.7677, -39.435, 0.7 ) }
    dend_57 { pt3dadd( -18.7302, 72.1262, -39.7726, 0.56 ) }
    dend_57 { pt3dadd( -18.99, 72.3603, -39.9715, 0.42 ) }
    dend_57 { pt3dadd( -19.409, 72.7416, -40.2736, 0.28 ) }
    dend_57 { pt3dadd( -20.1953, 73.4778, -40.8056, 0.14 ) }
    dend_57 { pt3dadd( -20.4605, 73.735, -40.974, 0.1 ) }
    dend_57 { pt3dadd( -20.8707, 74.1605, -41.2267, 0.1 ) }
    dend_57 { pt3dadd( -21.3793, 74.7248, -41.514, 0.14 ) }
    dend_57 { pt3dadd( -21.6277, 75.0101, -41.635, 0.1 ) }
    dend_57 { pt3dadd( -22.0158, 75.4814, -41.8337, 0.1 ) }
    dend_57 { pt3dadd( -22.3933, 75.9577, -42.0182, 0.1 ) }
    dend_57 { pt3dadd( -22.6208, 76.2735, -42.1505, 0.1 ) }
    dend_57 { pt3dadd( -22.95, 76.7706, -42.3693, 0.1 ) }
    dend_57 { pt3dadd( -23.2581, 77.2793, -42.5923, 0.1 ) }
    dend_57 { pt3dadd( -23.7822, 78.1623, -42.98, 0.1 ) }
    dend_57 { pt3dadd( -24.0407, 78.6139, -43.2163, 0.14 ) }
    dend_57 { pt3dadd( -24.3129, 79.1159, -43.5099, 0.28 ) }
    dend_57 { pt3dadd( -24.5699, 79.6103, -43.8148, 0.14 ) }
    dend_57 { pt3dadd( -24.8171, 80.1081, -44.1222, 0.1 ) }
    dend_57 { pt3dadd( -24.9777, 80.4326, -44.3061, 0.14 ) }
    dend_57 { pt3dadd( -25.4265, 81.3479, -44.7179, 0.28 ) }
    dend_57 { pt3dadd( -25.5733, 81.6855, -44.9007, 0.42 ) }
    dend_57 { pt3dadd( -25.7605, 82.2161, -45.1955, 0.7 ) }
    dend_57 { pt3dadd( -25.9038, 82.7097, -45.4518, 0.56 ) }
    dend_57 { pt3dadd( -26.034, 83.2543, -45.7515, 0.42 ) }
    dend_57 { pt3dadd( -26.1407, 83.7539, -46.0137, 0.28 ) }
    dend_57 { pt3dadd( -26.3641, 84.8215, -46.5173, 0.14 ) }
    dend_57 { pt3dadd( -26.4601, 85.3179, -46.7839, 0.1 ) }
    dend_57 { pt3dadd( -26.5389, 85.81, -47.0692, 0.1 ) }
    dend_57 { pt3dadd( -26.6869, 86.8363, -47.6758, 0.1 ) }
    dend_57 { pt3dadd( -26.7587, 87.3306, -47.9592, 0.1 ) }
    dend_57 { pt3dadd( -26.8397, 87.8292, -48.2265, 0.1 ) }
    dend_57 { pt3dadd( -27.0551, 88.9044, -48.7173, 0.1 ) }
    dend_57 { pt3dadd( -27.1726, 89.4185, -48.9445, 0.1 ) }
    dend_57 { pt3dadd( -27.3152, 89.934, -49.1459, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_57 { pt3dadd( -27.5069, 90.5238, -49.3123, 0.1 ) }
    dend_57 { pt3dadd( -27.5998, 90.7852, -49.3749, 0.1 ) }
    dend_57 { pt3dadd( -27.8215, 91.3798, -49.473, 0.1 ) }
    dend_57 { pt3dadd( -27.8215, 91.3798, -49.473, 0.1 ) }
    dend_57 { pt3dadd( -28.0182, 91.9683, -49.6086, 0.1 ) }
    dend_57 { pt3dadd( -28.1577, 92.489, -49.7984, 0.1 ) }
    dend_57 { pt3dadd( -28.2787, 92.987, -50.0351, 0.1 ) }
    dend_57 { pt3dadd( -28.404, 93.4763, -50.3024, 0.1 ) }
    dend_57 { pt3dadd( -28.6816, 94.4806, -50.9078, 0.14 ) }
    dend_57 { pt3dadd( -28.817, 94.9338, -51.2285, 0.28 ) }
    dend_57 { pt3dadd( -29.0756, 95.7067, -51.8413, 0.42 ) }
    dend_57 { pt3dadd( -29.289, 96.2747, -52.3751, 0.1 ) }
    dend_57 { pt3dadd( -29.4736, 96.7077, -52.8118, 0.1 ) }
    dend_57 { pt3dadd( -29.5954, 96.9587, -53.0945, 0.1 ) }
    dend_57 { pt3dadd( -29.9625, 97.6855, -53.9828, 0.1 ) }
    dend_57 { pt3dadd( -30.1548, 98.053, -54.4638, 0.1 ) }
    dend_57 { pt3dadd( -30.4978, 98.6961, -55.2845, 0.1 ) }
    dend_57 { pt3dadd( -30.688, 99.068, -55.7629, 0.1 ) }
    dend_57 { pt3dadd( -31.0661, 99.7889, -56.6528, 0.14 ) }
    dend_57 { pt3dadd( -31.4808, 100.533, -57.4995, 0.1 ) }
    dend_57 { pt3dadd( -31.6294, 100.792, -57.7744, 0.1 ) }
    dend_57 { pt3dadd( -31.8749, 101.207, -58.1882, 0.1 ) }
    dend_57 { pt3dadd( -32.1283, 101.63, -58.5891, 0.1 ) }
    dend_57 { pt3dadd( -32.3609, 102.052, -59.0243, 0.1 ) }
    dend_57 { pt3dadd( -32.5002, 102.313, -59.2897, 0.14 ) }
    dend_57 { pt3dadd( -32.8436, 102.965, -60.0507, 0.28 ) }
    dend_57 { pt3dadd( -33.0831, 103.431, -60.6594, 0.28 ) }
    dend_57 { pt3dadd( -33.4142, 104.028, -61.5186, 0.14 ) }
    dend_57 { pt3dadd( -33.7967, 104.666, -62.4616, 0.1 ) }
    dend_57 { pt3dadd( -33.9446, 104.882, -62.7788, 0.1 ) }
    dend_57 { pt3dadd( -34.4883, 105.572, -63.7343, 0.1 ) }
    dend_57 { pt3dadd( -34.6815, 105.793, -64.0154, 0.1 ) }
    dend_57 { pt3dadd( -35.0, 106.149, -64.4317, 0.1 ) }
    dend_57 { pt3dadd( -35.3625, 106.527, -64.8032, 0.14 ) }
    dend_57 { pt3dadd( -35.7422, 106.914, -65.1283, 0.1 ) }
    dend_57 { pt3dadd( -35.9702, 107.172, -65.343, 0.1 ) }
    dend_57 { pt3dadd( -36.5639, 107.967, -66.0284, 0.1 ) }
    dend_57 { pt3dadd( -36.8335, 108.391, -66.4279, 0.14 ) }
    dend_57 { pt3dadd( -36.9777, 108.657, -66.6854, 0.1 ) }
    dend_57 { pt3dadd( -37.193, 109.092, -67.1058, 0.1 ) }
    dend_57 { pt3dadd( -37.5647, 109.943, -67.8673, 0.14 ) }
    dend_57 { pt3dadd( -37.9462, 110.831, -68.5811, 0.28 ) }
    dend_57 { pt3dadd( -37.9462, 110.831, -68.5811, 0.42 ) }
    dend_57 { pt3dadd( -38.143, 111.341, -68.9183, 0.28 ) }
    dend_57 { pt3dadd( -38.3258, 111.862, -69.2314, 0.14 ) }
    dend_57 { pt3dadd( -38.4864, 112.352, -69.4785, 0.1 ) }
    dend_57 { pt3dadd( -38.6712, 112.929, -69.6909, 0.1 ) }
    dend_57 { pt3dadd( -38.8273, 113.457, -69.8449, 0.1 ) }
    dend_57 { pt3dadd( -39.1404, 114.577, -70.1586, 0.1 ) }
    dend_57 { pt3dadd( -39.2755, 115.114, -70.2997, 0.1 ) }
    dend_57 { pt3dadd( -39.3876, 115.651, -70.4618, 0.1 ) }
    dend_57 { pt3dadd( -39.4876, 116.188, -70.6369, 0.1 ) }
    dend_57 { pt3dadd( -39.5832, 116.724, -70.8125, 0.1 ) }
    dend_57 { pt3dadd( -39.7089, 117.324, -71.0019, 0.1 ) }
    dend_57 { pt3dadd( -39.8201, 117.855, -71.1833, 0.1 ) }
    dend_57 { pt3dadd( -40.055, 118.905, -71.6276, 0.1 ) }
    dend_57 { pt3dadd( -40.1138, 119.159, -71.747, 0.1 ) }
    dend_57 { pt3dadd( -40.2383, 119.708, -72.0565, 0.1 ) }
    dend_57 { pt3dadd( -40.3671, 120.244, -72.3862, 0.1 ) }
    dend_57 { pt3dadd( -40.6038, 121.208, -72.9944, 0.1 ) }
    dend_57 { pt3dadd( -40.7576, 121.746, -73.3255, 0.1 ) }
    dend_57 { pt3dadd( -40.9176, 122.216, -73.5877, 0.1 ) }
    dend_57 { pt3dadd( -41.3078, 123.214, -74.1307, 0.1 ) }
    dend_57 { pt3dadd( -41.5468, 123.749, -74.4102, 0.1 ) }
    dend_57 { pt3dadd( -41.6666, 123.976, -74.5163, 0.1 ) }
    dend_57 { pt3dadd( -41.9977, 124.489, -74.7156, 0.1 ) }
    dend_57 { pt3dadd( -42.3519, 124.986, -74.8935, 0.1 ) }
    dend_57 { pt3dadd( -42.8178, 125.604, -75.138, 0.1 ) }
    dend_57 { pt3dadd( -43.053, 125.902, -75.255, 0.1 ) }
    dend_57 { pt3dadd( -43.426, 126.378, -75.4712, 0.1 ) }
    dend_57 { pt3dadd( -43.6417, 126.672, -75.6415, 0.1 ) }
    dend_57 { pt3dadd( -43.9645, 127.121, -75.9532, 0.1 ) }
    dend_57 { pt3dadd( -44.5378, 127.963, -76.5968, 0.1 ) }
    dend_57 { pt3dadd( -44.7103, 128.24, -76.8243, 0.1 ) }
    dend_57 { pt3dadd( -44.984, 128.681, -77.2023, 0.14 ) }
    dend_57 { pt3dadd( -45.5223, 129.479, -77.9208, 0.1 ) }
    dend_57 { pt3dadd( -45.8354, 129.898, -78.2965, 0.1 ) }
    dend_57 { pt3dadd( -45.9976, 130.073, -78.4508, 0.14 ) }
    dend_57 { pt3dadd( -46.276, 130.302, -78.6296, 0.28 ) }
    dend_57 { pt3dadd( -46.8437, 130.723, -79.0215, 0.7 ) }
    dend_57 { pt3dadd( -47.3157, 131.02, -79.3393, 0.56 ) }
    dend_57 { pt3dadd( -47.627, 131.191, -79.5287, 0.42 ) }
    dend_57 { pt3dadd( -48.1241, 131.449, -79.8426, 0.28 ) }
    dend_57 { pt3dadd( -48.6183, 131.695, -80.154, 0.14 ) }
    dend_57 { pt3dadd( -49.4805, 132.117, -80.6867, 0.14 ) }
    dend_57 { pt3dadd( -49.9898, 132.353, -80.9985, 0.1 ) }
    dend_57 { pt3dadd( -50.4947, 132.597, -81.2937, 0.1 ) }
    dend_57 { pt3dadd( -51.0144, 132.85, -81.5732, 0.1 ) }
    dend_57 { pt3dadd( -51.3404, 133.014, -81.7297, 0.1 ) }
    dend_57 { pt3dadd( -51.8747, 133.302, -81.9457, 0.14 ) }
    dend_57 { pt3dadd( -52.3859, 133.611, -82.1515, 0.28 ) }
    dend_57 { pt3dadd( -52.8727, 133.957, -82.387, 0.14 ) }
    dend_57 { pt3dadd( -53.297, 134.328, -82.6775, 0.1 ) }
    dend_57 { pt3dadd( -53.5419, 134.568, -82.8947, 0.14 ) }
    dend_57 { pt3dadd( -53.9029, 134.928, -83.2733, 0.14 ) }
    dend_57 { pt3dadd( -54.5646, 135.563, -84.0556, 0.1 ) }
    dend_57 { pt3dadd( -54.7901, 135.747, -84.3332, 0.1 ) }
    dend_57 { pt3dadd( -55.4639, 136.124, -85.0548, 0.14 ) }
    dend_57 { pt3dadd( -55.8924, 136.242, -85.4141, 0.1 ) }
    dend_57 { pt3dadd( -56.391, 136.227, -85.6929, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_57 { pt3dadd( -56.9086, 136.095, -85.8758, 0.1 ) }
    dend_57 { pt3dadd( -57.4369, 135.887, -85.939, 0.1 ) }
    dend_57 { pt3dadd( -58.5331, 135.387, -85.9588, 0.1 ) }
    dend_57 { pt3dadd( -59.111, 135.115, -85.8878, 0.1 ) }
    dend_57 { pt3dadd( -59.6725, 134.837, -85.7836, 0.1 ) }
    dend_57 { pt3dadd( -60.0296, 134.659, -85.708, 0.1 ) }
    dend_57 { pt3dadd( -61.0928, 134.144, -85.4892, 0.1 ) }
    dend_57 { pt3dadd( -61.6065, 133.902, -85.4034, 0.1 ) }
    dend_57 { pt3dadd( -62.6762, 133.44, -85.3091, 0.1 ) }
    dend_57 { pt3dadd( -63.2698, 133.196, -85.3135, 0.1 ) }
    dend_57 { pt3dadd( -63.798, 132.989, -85.3846, 0.1 ) }
    dend_57 { pt3dadd( -64.3062, 132.801, -85.5322, 0.1 ) }
    dend_57 { pt3dadd( -64.8536, 132.591, -85.7937, 0.1 ) }
    dend_57 { pt3dadd( -65.3199, 132.403, -86.0654, 0.1 ) }
    dend_57 { pt3dadd( -66.2604, 132.022, -86.7152, 0.14 ) }
    dend_57 { pt3dadd( -66.7071, 131.841, -87.0223, 0.1 ) }
    dend_57 { pt3dadd( -67.1576, 131.656, -87.3214, 0.1 ) }
    dend_57 { pt3dadd( -67.648, 131.446, -87.6787, 0.1 ) }
    dend_57 { pt3dadd( -67.8631, 131.349, -87.8422, 0.1 ) }
    dend_57 { pt3dadd( -68.2951, 131.148, -88.1583, 0.1 ) }
    dend_57 { pt3dadd( -68.7933, 130.92, -88.4794, 0.1 ) }
    dend_57 { pt3dadd( -69.2261, 130.704, -88.7888, 0.1 ) }
    dend_57 { pt3dadd( -70.0876, 130.241, -89.4868, 0.14 ) }
    dend_57 { pt3dadd( -70.363, 130.09, -89.7443, 0.28 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 24/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 2.11384, 41.7467, -26.7846, 1.12 ) }
    dend_55 { pt3dadd( 2.25869, 42.5286, -28.2751, 1.12 ) }
    dend_55 { pt3dadd( 2.28779, 42.6322, -28.475, 1.12 ) }
    dend_55 { pt3dadd( 2.39573, 42.9183, -29.0318, 0.14 ) }
    dend_55 { pt3dadd( 2.53522, 43.3296, -29.7851, 0.1 ) }
    dend_55 { pt3dadd( 2.6744, 43.7565, -30.525, 0.1 ) }
    dend_55 { pt3dadd( 2.84584, 44.2812, -31.3957, 0.1 ) }
    dend_55 { pt3dadd( 3.03008, 44.7203, -32.1184, 0.1 ) }
    dend_55 { pt3dadd( 3.2098, 45.1657, -32.8433, 0.1 ) }
    dend_55 { pt3dadd( 3.29487, 45.3991, -33.2116, 0.1 ) }
    dend_55 { pt3dadd( 3.41876, 45.9141, -34.0076, 0.1 ) }
    dend_55 { pt3dadd( 3.4728, 46.4487, -34.7911, 0.1 ) }
    dend_55 { pt3dadd( 3.4728, 46.4487, -34.7911, 0.14 ) }
    dend_55 { pt3dadd( 3.44112, 46.8245, -35.3024, 0.1 ) }
    dend_55 { pt3dadd( 3.42501, 47.0175, -35.5585, 0.1 ) }
    dend_55 { pt3dadd( 3.37505, 47.6392, -36.377, 0.1 ) }
    dend_55 { pt3dadd( 3.33676, 47.9283, -36.7252, 0.1 ) }
    dend_55 { pt3dadd( 3.27582, 48.5028, -37.3696, 0.1 ) }
    dend_55 { pt3dadd( 3.25147, 48.818, -37.6958, 0.14 ) }
    dend_55 { pt3dadd( 3.24475, 49.4168, -38.2787, 0.28 ) }
    dend_55 { pt3dadd( 3.23913, 49.7934, -38.6201, 0.7 ) }
    dend_55 { pt3dadd( 3.23759, 50.1322, -38.9075, 0.56 ) }
    dend_55 { pt3dadd( 3.27208, 50.8606, -39.5259, 0.42 ) }
    dend_55 { pt3dadd( 3.29312, 51.2027, -39.8085, 0.28 ) }
    dend_55 { pt3dadd( 3.33954, 51.9223, -40.4272, 0.14 ) }
    dend_55 { pt3dadd( 3.34679, 52.26, -40.7308, 0.1 ) }
    dend_55 { pt3dadd( 3.35548, 52.9261, -41.3718, 0.1 ) }
    dend_55 { pt3dadd( 3.32732, 53.5654, -42.0405, 0.14 ) }
    dend_55 { pt3dadd( 3.32732, 53.5654, -42.0405, 0.28 ) }
    dend_55 { pt3dadd( 3.26139, 53.9666, -42.5286, 0.1 ) }
    dend_55 { pt3dadd( 3.20263, 54.2669, -42.9357, 0.1 ) }
    dend_55 { pt3dadd( 3.16364, 54.4402, -43.1947, 0.1 ) }
    dend_55 { pt3dadd( 3.10245, 54.608, -43.4617, 0.14 ) }
    dend_55 { pt3dadd( 3.05093, 54.7277, -43.6477, 0.28 ) }
    dend_55 { pt3dadd( 2.84921, 55.2123, -44.339, 0.84 ) }
    dend_55 { pt3dadd( 2.68967, 55.7696, -45.0918, 0.7 ) }
    dend_55 { pt3dadd( 2.61945, 56.0724, -45.4864, 0.56 ) }
    dend_55 { pt3dadd( 2.56794, 56.2695, -45.7398, 0.42 ) }
    dend_55 { pt3dadd( 2.48924, 56.5737, -46.1317, 0.28 ) }
    dend_55 { pt3dadd( 2.42126, 56.8742, -46.5354, 0.14 ) }
    dend_55 { pt3dadd( 2.34856, 57.3871, -47.2286, 0.28 ) }
    dend_55 { pt3dadd( 2.34856, 57.3871, -47.2286, 0.42 ) }
    dend_55 { pt3dadd( 2.37138, 57.6865, -47.6382, 0.1 ) }
    dend_55 { pt3dadd( 2.43743, 58.2665, -48.3878, 0.1 ) }
    dend_55 { pt3dadd( 2.53721, 58.8254, -49.0445, 0.1 ) }
    dend_55 { pt3dadd( 2.65719, 59.4896, -49.7177, 0.1 ) }
    dend_55 { pt3dadd( 2.65719, 59.4896, -49.7177, 0.14 ) }
    dend_55 { pt3dadd( 2.70187, 59.8504, -49.9728, 0.1 ) }
    dend_55 { pt3dadd( 2.75249, 60.2445, -50.193, 0.1 ) }
    dend_55 { pt3dadd( 2.86255, 61.1211, -50.5525, 0.14 ) }
    dend_55 { pt3dadd( 2.92384, 61.5932, -50.7049, 0.1 ) }
    dend_55 { pt3dadd( 2.98199, 62.0248, -50.8257, 0.1 ) }
    dend_55 { pt3dadd( 3.10324, 62.9349, -51.081, 0.1 ) }
    dend_55 { pt3dadd( 3.15151, 63.2309, -51.1744, 0.1 ) }
    dend_55 { pt3dadd( 3.28411, 64.1252, -51.4784, 0.14 ) }
    dend_55 { pt3dadd( 3.28411, 64.1252, -51.4784, 0.28 ) }
    dend_55 { pt3dadd( 3.33876, 64.5419, -51.6506, 0.28 ) }
    dend_55 { pt3dadd( 3.37885, 64.9525, -51.8152, 0.14 ) }
    dend_55 { pt3dadd( 3.45054, 65.8089, -52.156, 0.1 ) }
    dend_55 { pt3dadd( 3.48631, 66.2319, -52.3175, 0.1 ) }
    dend_55 { pt3dadd( 3.54644, 67.1363, -52.6144, 0.14 ) }
    dend_55 { pt3dadd( 3.57668, 67.5731, -52.7353, 0.1 ) }
    dend_55 { pt3dadd( 3.6155, 68.0617, -52.8408, 0.1 ) }
    dend_55 { pt3dadd( 3.66733, 68.9206, -52.9555, 0.14 ) }
    dend_55 { pt3dadd( 3.66591, 69.42, -52.9756, 0.1 ) }
    dend_55 { pt3dadd( 3.63839, 69.9286, -52.9728, 0.1 ) }
    dend_55 { pt3dadd( 3.59271, 70.4263, -52.9679, 0.1 ) }
    dend_55 { pt3dadd( 3.5642, 70.7462, -52.9714, 0.14 ) }
    dend_55 { pt3dadd( 3.53778, 71.2536, -53.0067, 0.28 ) }
    dend_55 { pt3dadd( 3.54664, 71.6928, -53.0723, 0.42 ) }
    dend_55 { pt3dadd( 3.60124, 72.1326, -53.1719, 0.56 ) }
    dend_55 { pt3dadd( 3.78823, 72.9136, -53.4105, 0.42 ) }
    dend_55 { pt3dadd( 3.95265, 73.3617, -53.588, 0.14 ) }
    dend_55 { pt3dadd( 4.29293, 74.0848, -53.9204, 0.1 ) }
    dend_55 { pt3dadd( 4.70913, 74.8518, -54.3053, 0.1 ) }
    dend_55 { pt3dadd( 4.85285, 75.102, -54.4294, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_55 { pt3dadd( 5.28377, 75.8745, -54.7842, 0.14 ) }
    dend_55 { pt3dadd( 5.60617, 76.5654, -55.047, 0.28 ) }
    dend_55 { pt3dadd( 5.68647, 76.7661, -55.1166, 0.42 ) }
    dend_55 { pt3dadd( 5.79889, 77.1909, -55.2314, 1.26 ) }
    dend_55 { pt3dadd( 5.8981, 77.6764, -55.349, 1.12 ) }
    dend_55 { pt3dadd( 6.00842, 78.1473, -55.4753, 0.98 ) }
    dend_55 { pt3dadd( 6.13673, 78.6212, -55.6107, 0.84 ) }
    dend_55 { pt3dadd( 6.43501, 79.4768, -55.8921, 0.7 ) }
    dend_55 { pt3dadd( 6.52294, 79.6693, -55.9682, 0.84 ) }
    dend_55 { pt3dadd( 6.95983, 80.4379, -56.3241, 1.12 ) }
    dend_55 { pt3dadd( 7.37535, 81.1138, -56.6699, 0.98 ) }
    dend_55 { pt3dadd( 7.83686, 81.8529, -57.0577, 0.84 ) }
    dend_55 { pt3dadd( 8.24312, 82.5307, -57.4107, 0.7 ) }
    dend_55 { pt3dadd( 8.62718, 83.2283, -57.7562, 0.56 ) }
    dend_55 { pt3dadd( 9.02803, 84.0097, -58.1281, 0.42 ) }
    dend_55 { pt3dadd( 9.18812, 84.3916, -58.2953, 0.28 ) }
    dend_55 { pt3dadd( 9.32212, 84.8515, -58.468, 0.14 ) }
    dend_55 { pt3dadd( 9.38782, 85.2827, -58.5947, 0.1 ) }
    dend_55 { pt3dadd( 9.39522, 86.2143, -58.7785, 0.1 ) }
    dend_55 { pt3dadd( 9.39522, 86.2143, -58.7785, 0.14 ) }
    dend_55 { pt3dadd( 9.324, 86.6628, -58.7865, 0.56 ) }
    dend_55 { pt3dadd( 9.2669, 87.1687, -58.8006, 0.42 ) }
    dend_55 { pt3dadd( 9.21338, 87.6653, -58.8215, 0.28 ) }
    dend_55 { pt3dadd( 9.14851, 88.17, -58.8426, 0.14 ) }
    dend_55 { pt3dadd( 9.08838, 88.6643, -58.886, 0.1 ) }
    dend_55 { pt3dadd( 9.06331, 88.9814, -58.9303, 0.1 ) }
    dend_55 { pt3dadd( 9.08278, 89.8839, -59.1298, 0.1 ) }
    dend_55 { pt3dadd( 9.14268, 90.3102, -59.2674, 0.1 ) }
    dend_55 { pt3dadd( 9.25455, 90.7172, -59.4351, 0.1 ) }
    dend_55 { pt3dadd( 9.4999, 91.4423, -59.7706, 0.14 ) }
    dend_55 { pt3dadd( 9.66783, 91.8699, -59.9905, 0.28 ) }
    dend_55 { pt3dadd( 9.98891, 92.5774, -60.3776, 0.14 ) }
    dend_55 { pt3dadd( 10.3537, 93.3475, -60.7966, 0.1 ) }
    dend_55 { pt3dadd( 10.6872, 94.0502, -61.182, 0.1 ) }
    dend_55 { pt3dadd( 10.8499, 94.4236, -61.3829, 0.14 ) }
    dend_55 { pt3dadd( 11.1189, 95.2083, -61.7825, 0.1 ) }
    dend_55 { pt3dadd( 11.3065, 95.9658, -62.1626, 0.1 ) }
    dend_55 { pt3dadd( 11.3477, 96.375, -62.3501, 0.1 ) }
    dend_55 { pt3dadd( 11.3223, 96.7953, -62.5202, 0.1 ) }
    dend_55 { pt3dadd( 11.2564, 97.2128, -62.6804, 0.1 ) }
    dend_55 { pt3dadd( 11.1702, 97.6239, -62.8318, 0.1 ) }
    dend_55 { pt3dadd( 11.0403, 98.0353, -62.9664, 0.1 ) }
    dend_55 { pt3dadd( 11.0403, 98.0353, -62.9664, 0.14 ) }
    dend_55 { pt3dadd( 10.8954, 98.4415, -63.1018, 0.1 ) }
    dend_55 { pt3dadd( 10.6008, 99.2735, -63.3802, 0.1 ) }
    dend_55 { pt3dadd( 10.4865, 99.6858, -63.526, 0.1 ) }
    dend_55 { pt3dadd( 10.3883, 100.104, -63.6751, 0.1 ) }
    dend_55 { pt3dadd( 10.3007, 100.517, -63.8116, 0.1 ) }
    dend_55 { pt3dadd( 10.208, 100.943, -63.9381, 0.1 ) }
    dend_55 { pt3dadd( 10.1116, 101.372, -64.0414, 0.1 ) }
    dend_55 { pt3dadd( 9.95485, 102.209, -64.2097, 0.1 ) }
    dend_55 { pt3dadd( 9.90209, 102.65, -64.2918, 0.1 ) }
    dend_55 { pt3dadd( 9.88914, 103.139, -64.3961, 0.1 ) }
    dend_55 { pt3dadd( 9.9025, 103.581, -64.4916, 0.1 ) }
    dend_55 { pt3dadd( 9.95269, 104.065, -64.6068, 0.1 ) }
    dend_55 { pt3dadd( 10.0754, 104.985, -64.8234, 0.1 ) }
    dend_55 { pt3dadd( 10.1625, 105.471, -64.9447, 0.1 ) }
    dend_55 { pt3dadd( 10.3569, 106.257, -65.1522, 0.1 ) }
    dend_55 { pt3dadd( 10.5015, 106.726, -65.285, 0.1 ) }
    dend_55 { pt3dadd( 10.8201, 107.583, -65.5563, 0.1 ) }
    dend_55 { pt3dadd( 10.9947, 108.029, -65.7035, 0.1 ) }
    dend_55 { pt3dadd( 11.2893, 108.811, -65.9387, 0.1 ) }
    dend_55 { pt3dadd( 11.3919, 109.098, -66.0157, 0.14 ) }
    dend_55 { pt3dadd( 11.4517, 109.313, -66.0552, 0.28 ) }
    dend_55 { pt3dadd( 11.6553, 110.207, -66.1722, 0.7 ) }
    dend_55 { pt3dadd( 11.711, 110.712, -66.1853, 0.56 ) }
    dend_55 { pt3dadd( 11.7454, 111.024, -66.183, 0.42 ) }
    dend_55 { pt3dadd( 11.805, 111.53, -66.1907, 0.28 ) }
    dend_55 { pt3dadd( 11.8966, 112.026, -66.2477, 0.14 ) }
    dend_55 { pt3dadd( 11.9735, 112.324, -66.3084, 0.1 ) }
    dend_55 { pt3dadd( 12.1125, 112.798, -66.4329, 0.1 ) }
    dend_55 { pt3dadd( 12.3816, 113.663, -66.7217, 0.14 ) }
    dend_55 { pt3dadd( 12.6435, 114.493, -67.0319, 0.28 ) }
    dend_55 { pt3dadd( 12.8945, 115.318, -67.3672, 0.14 ) }
    dend_55 { pt3dadd( 13.1191, 116.168, -67.7282, 0.1 ) }
    dend_55 { pt3dadd( 13.2097, 116.576, -67.9054, 0.1 ) }
    dend_55 { pt3dadd( 13.2697, 116.989, -68.0794, 0.1 ) }
    dend_55 { pt3dadd( 13.2768, 117.289, -68.1917, 0.1 ) }
    dend_55 { pt3dadd( 13.2355, 117.712, -68.3299, 0.1 ) }
    dend_55 { pt3dadd( 13.1628, 118.13, -68.4859, 0.14 ) }
    dend_55 { pt3dadd( 12.9676, 118.972, -68.8888, 0.28 ) }
    dend_55 { pt3dadd( 12.9018, 119.346, -69.1378, 0.42 ) }
    dend_55 { pt3dadd( 12.9018, 119.346, -69.1378, 0.56 ) }
    dend_55 { pt3dadd( 12.9089, 119.784, -69.5979, 0.28 ) }
    dend_55 { pt3dadd( 13.0099, 120.396, -70.3215, 0.14 ) }
    dend_55 { pt3dadd( 13.0758, 120.582, -70.5658, 0.1 ) }
    dend_55 { pt3dadd( 13.3423, 121.118, -71.3076, 0.1 ) }
    dend_55 { pt3dadd( 13.6579, 121.64, -72.0402, 0.1 ) }
    dend_55 { pt3dadd( 13.9458, 122.095, -72.6792, 0.1 ) }
    dend_55 { pt3dadd( 14.2474, 122.549, -73.3151, 0.1 ) }
    dend_55 { pt3dadd( 14.8239, 123.464, -74.6169, 0.14 ) }
    dend_55 { pt3dadd( 15.0844, 123.916, -75.2691, 0.28 ) }
    dend_55 { pt3dadd( 15.0844, 123.916, -75.2691, 0.42 ) }
    dend_55 { pt3dadd( 15.1827, 124.244, -75.8174, 0.7 ) }
    dend_55 { pt3dadd( 15.1898, 124.38, -76.1003, 0.56 ) }
    dend_55 { pt3dadd( 15.1627, 124.599, -76.7035, 0.42 ) }
    dend_55 { pt3dadd( 15.1558, 124.675, -77.0123, 0.56 ) }
    dend_55 { pt3dadd( 15.1679, 124.72, -77.2346, 0.7 ) }
    dend_55 { pt3dadd( 15.3041, 124.9, -78.1604, 1.68 ) }
    dend_55 { pt3dadd( 15.5109, 125.058, -79.0436, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_55 { pt3dadd( 15.7512, 125.191, -79.8352, 1.4 ) }
    dend_55 { pt3dadd( 16.0788, 125.325, -80.6892, 1.26 ) }
    dend_55 { pt3dadd( 16.0788, 125.325, -80.6892, 1.12 ) }
    dend_55 { pt3dadd( 16.1747, 125.358, -80.8923, 0.98 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.11384, 41.7467, -26.7846, 1.4 ) }
    dend_54 { pt3dadd( 2.72476, 42.3807, -27.3627, 1.4 ) }
    dend_54 { pt3dadd( 3.30329, 42.9548, -27.9178, 1.26 ) }
    dend_54 { pt3dadd( 3.95722, 43.564, -28.5345, 1.12 ) }
    dend_54 { pt3dadd( 4.56694, 44.1022, -29.1003, 0.98 ) }
    dend_54 { pt3dadd( 5.19982, 44.6035, -29.6664, 0.84 ) }
    dend_54 { pt3dadd( 5.86104, 45.0608, -30.2425, 0.7 ) }
    dend_54 { pt3dadd( 7.24257, 45.7893, -31.3659, 0.56 ) }
    dend_54 { pt3dadd( 7.95873, 46.09, -31.9208, 0.56 ) }
    dend_54 { pt3dadd( 8.16131, 46.1571, -32.0672, 0.1 ) }
    dend_54 { pt3dadd( 9.03682, 46.4105, -32.6513, 0.1 ) }
    dend_54 { pt3dadd( 9.90842, 46.6538, -33.1928, 0.1 ) }
    dend_54 { pt3dadd( 10.83, 46.9125, -33.6984, 0.14 ) }
    dend_54 { pt3dadd( 11.1474, 47.017, -33.8474, 0.84 ) }
    dend_54 { pt3dadd( 12.066, 47.4198, -34.2642, 0.7 ) }
    dend_54 { pt3dadd( 12.9461, 47.9238, -34.652, 0.56 ) }
    dend_54 { pt3dadd( 13.6934, 48.4892, -34.959, 0.42 ) }
    dend_54 { pt3dadd( 14.0586, 48.8302, -35.0938, 0.28 ) }
    dend_54 { pt3dadd( 14.7683, 49.6004, -35.3677, 0.14 ) }
    dend_54 { pt3dadd( 15.4031, 50.3126, -35.6283, 0.28 ) }
    dend_54 { pt3dadd( 15.7398, 50.7487, -35.7726, 0.42 ) }
    dend_54 { pt3dadd( 16.0397, 51.2182, -35.9348, 0.28 ) }
    dend_54 { pt3dadd( 16.2001, 51.5146, -36.0554, 0.14 ) }
    dend_54 { pt3dadd( 16.5529, 52.316, -36.4356, 0.1 ) }
    dend_54 { pt3dadd( 16.6385, 52.5316, -36.5502, 0.14 ) }
    dend_54 { pt3dadd( 16.8018, 52.9608, -36.7832, 0.1 ) }
    dend_54 { pt3dadd( 17.1862, 53.8119, -37.2731, 0.1 ) }
    dend_54 { pt3dadd( 17.6327, 54.661, -37.7835, 0.1 ) }
    dend_54 { pt3dadd( 17.8717, 55.0455, -38.0156, 0.14 ) }
    dend_54 { pt3dadd( 18.3878, 55.7702, -38.4476, 0.28 ) }
    dend_54 { pt3dadd( 18.72, 56.1763, -38.6955, 1.4 ) }
    dend_54 { pt3dadd( 19.397, 56.8864, -39.1529, 1.26 ) }
    dend_54 { pt3dadd( 20.0639, 57.4946, -39.5573, 1.12 ) }
    dend_54 { pt3dadd( 20.8149, 58.1084, -39.9681, 0.98 ) }
    dend_54 { pt3dadd( 21.5546, 58.6519, -40.3363, 1.12 ) }
    dend_54 { pt3dadd( 22.3967, 59.224, -40.7043, 0.98 ) }
    dend_54 { pt3dadd( 23.2008, 59.7061, -41.0244, 0.84 ) }
    dend_54 { pt3dadd( 24.0778, 60.2005, -41.3191, 0.7 ) }
    dend_54 { pt3dadd( 24.5186, 60.4396, -41.4366, 0.56 ) }
    dend_54 { pt3dadd( 24.8328, 60.6114, -41.5116, 0.42 ) }
    dend_54 { pt3dadd( 25.2769, 60.8571, -41.6127, 0.28 ) }
    dend_54 { pt3dadd( 26.1037, 61.3437, -41.8411, 0.42 ) }
    dend_54 { pt3dadd( 26.397, 61.532, -41.9403, 0.56 ) }
    dend_54 { pt3dadd( 27.2422, 62.1343, -42.2595, 0.42 ) }
    dend_54 { pt3dadd( 27.9844, 62.7093, -42.5611, 0.28 ) }
    dend_54 { pt3dadd( 28.7754, 63.3692, -42.8938, 0.14 ) }
    dend_54 { pt3dadd( 29.4798, 63.9977, -43.1887, 0.1 ) }
    dend_54 { pt3dadd( 30.2332, 64.7261, -43.4602, 0.1 ) }
    dend_54 { pt3dadd( 30.6311, 65.1266, -43.587, 0.1 ) }
    dend_54 { pt3dadd( 30.8754, 65.3883, -43.6433, 0.1 ) }
    dend_54 { pt3dadd( 31.5711, 66.2168, -43.7364, 0.1 ) }
    dend_54 { pt3dadd( 31.7834, 66.5041, -43.758, 0.1 ) }
    dend_54 { pt3dadd( 32.0995, 66.9853, -43.8153, 0.1 ) }
    dend_54 { pt3dadd( 32.7081, 67.957, -44.0465, 0.14 ) }
    dend_54 { pt3dadd( 32.8343, 68.1709, -44.1193, 0.14 ) }
    dend_54 { pt3dadd( 33.0808, 68.5881, -44.2936, 0.1 ) }
    dend_54 { pt3dadd( 33.5663, 69.4704, -44.6866, 0.1 ) }
    dend_54 { pt3dadd( 34.0435, 70.3105, -45.1062, 0.1 ) }
    dend_54 { pt3dadd( 34.4926, 71.0823, -45.5314, 0.1 ) }
    dend_54 { pt3dadd( 34.7299, 71.468, -45.7574, 0.1 ) }
    dend_54 { pt3dadd( 35.2561, 72.287, -46.2384, 0.14 ) }
    dend_54 { pt3dadd( 35.5461, 72.7104, -46.4854, 0.28 ) }
    dend_54 { pt3dadd( 36.0586, 73.4481, -46.9033, 0.14 ) }
    dend_54 { pt3dadd( 36.6109, 74.2711, -47.3468, 0.1 ) }
    dend_54 { pt3dadd( 37.097, 75.0249, -47.7565, 0.1 ) }
    dend_54 { pt3dadd( 37.2703, 75.3072, -47.912, 0.1 ) }
    dend_54 { pt3dadd( 37.7498, 76.1614, -48.3715, 0.1 ) }
    dend_54 { pt3dadd( 38.2153, 77.0339, -48.8199, 0.1 ) }
    dend_54 { pt3dadd( 38.4271, 77.462, -49.0124, 0.1 ) }
    dend_54 { pt3dadd( 38.8845, 78.3649, -49.3919, 0.14 ) }
    dend_54 { pt3dadd( 39.1234, 78.7865, -49.5665, 0.14 ) }
    dend_54 { pt3dadd( 39.2591, 78.9911, -49.6481, 0.28 ) }
    dend_54 { pt3dadd( 39.4685, 79.268, -49.7353, 0.56 ) }
    dend_54 { pt3dadd( 40.1743, 80.0738, -49.9125, 0.42 ) }
    dend_54 { pt3dadd( 40.868, 80.7674, -50.0131, 0.28 ) }
    dend_54 { pt3dadd( 41.6696, 81.4986, -50.0558, 0.14 ) }
    dend_54 { pt3dadd( 42.069, 81.8222, -50.0858, 0.28 ) }
    dend_54 { pt3dadd( 42.5342, 82.1578, -50.1616, 0.14 ) }
    dend_54 { pt3dadd( 42.9744, 82.3907, -50.2927, 0.28 ) }
    dend_54 { pt3dadd( 43.198, 82.449, -50.4091, 0.42 ) }
    dend_54 { pt3dadd( 43.198, 82.449, -50.4091, 0.56 ) }
    dend_54 { pt3dadd( 43.9911, 82.4171, -50.9991, 0.84 ) }
    dend_54 { pt3dadd( 44.7894, 82.3872, -51.5823, 0.7 ) }
    dend_54 { pt3dadd( 45.6591, 82.3475, -52.1675, 0.56 ) }
    dend_54 { pt3dadd( 46.4804, 82.3448, -52.654, 0.42 ) }
    dend_54 { pt3dadd( 46.7103, 82.3601, -52.7662, 0.56 ) }
    dend_54 { pt3dadd( 47.2401, 82.4278, -52.964, 0.42 ) }
    dend_54 { pt3dadd( 48.2417, 82.6376, -53.2136, 0.28 ) }
    dend_54 { pt3dadd( 48.7881, 82.7889, -53.3291, 0.14 ) }
    dend_54 { pt3dadd( 49.7663, 83.1288, -53.5214, 0.1 ) }
    dend_54 { pt3dadd( 50.7237, 83.5054, -53.7327, 0.1 ) }
    dend_54 { pt3dadd( 50.9545, 83.6028, -53.7975, 0.1 ) }
    dend_54 { pt3dadd( 51.8691, 84.0159, -54.1176, 0.1 ) }
    dend_54 { pt3dadd( 52.6455, 84.4067, -54.4155, 0.14 ) }
    dend_54 { pt3dadd( 52.9429, 84.5752, -54.5461, 0.28 ) }
    dend_54 { pt3dadd( 53.7605, 85.1063, -54.9447, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_54 { pt3dadd( 54.5398, 85.6735, -55.3694, 0.1 ) }
    dend_54 { pt3dadd( 55.2177, 86.2079, -55.777, 0.1 ) }
    dend_54 { pt3dadd( 55.6168, 86.5387, -56.0339, 0.42 ) }
    dend_54 { pt3dadd( 56.275, 87.1253, -56.4793, 0.42 ) }
    dend_54 { pt3dadd( 56.9611, 87.7945, -56.9898, 0.28 ) }
    dend_54 { pt3dadd( 57.5273, 88.4517, -57.4648, 0.14 ) }
    dend_54 { pt3dadd( 58.0428, 89.1434, -57.9459, 0.28 ) }
    dend_54 { pt3dadd( 58.5002, 89.8302, -58.4212, 0.42 ) }
    dend_54 { pt3dadd( 58.7321, 90.2007, -58.6934, 0.1 ) }
    dend_54 { pt3dadd( 58.9428, 90.575, -58.9775, 0.1 ) }
    dend_54 { pt3dadd( 59.1294, 90.9396, -59.2792, 0.1 ) }
    dend_54 { pt3dadd( 59.4588, 91.6362, -59.8992, 0.14 ) }
    dend_54 { pt3dadd( 59.7677, 92.373, -60.5857, 0.7 ) }
    dend_54 { pt3dadd( 60.0677, 93.0903, -61.2981, 0.56 ) }
    dend_54 { pt3dadd( 60.3469, 93.7081, -61.9692, 0.42 ) }
    dend_54 { pt3dadd( 60.6673, 94.3877, -62.7531, 0.28 ) }
    dend_54 { pt3dadd( 60.9706, 95.0345, -63.5271, 0.14 ) }
    dend_54 { pt3dadd( 61.13, 95.3855, -63.9502, 0.1 ) }
    dend_54 { pt3dadd( 61.4178, 95.9691, -64.6487, 0.1 ) }
    dend_54 { pt3dadd( 61.799, 96.6342, -65.413, 0.1 ) }
    dend_54 { pt3dadd( 62.2444, 97.2751, -66.1222, 0.1 ) }
    dend_54 { pt3dadd( 62.2444, 97.2751, -66.1222, 0.14 ) }
    dend_54 { pt3dadd( 62.8255, 97.841, -66.6829, 0.56 ) }
    dend_54 { pt3dadd( 63.4581, 98.4029, -67.195, 0.42 ) }
    dend_54 { pt3dadd( 64.196, 99.0251, -67.6932, 0.28 ) }
    dend_54 { pt3dadd( 64.8772, 99.5793, -68.0675, 0.14 ) }
    dend_54 { pt3dadd( 65.6715, 100.207, -68.4509, 0.1 ) }
    dend_54 { pt3dadd( 66.4778, 100.842, -68.8041, 0.1 ) }
    dend_54 { pt3dadd( 66.7436, 101.06, -68.9036, 0.1 ) }
    dend_54 { pt3dadd( 67.5431, 101.758, -69.1351, 0.1 ) }
    dend_54 { pt3dadd( 67.9549, 102.145, -69.2237, 0.1 ) }
    dend_54 { pt3dadd( 68.6148, 102.83, -69.3041, 0.14 ) }
    dend_54 { pt3dadd( 68.7848, 103.022, -69.3061, 0.28 ) }
    dend_54 { pt3dadd( 69.1615, 103.461, -69.2929, 0.7 ) }
    dend_54 { pt3dadd( 69.5401, 103.899, -69.2717, 0.56 ) }
    dend_54 { pt3dadd( 70.2406, 104.724, -69.1869, 0.42 ) }
    dend_54 { pt3dadd( 70.479, 104.988, -69.1484, 0.28 ) }
    dend_54 { pt3dadd( 70.8931, 105.385, -69.0729, 0.14 ) }
    dend_54 { pt3dadd( 71.744, 106.042, -68.9439, 0.1 ) }
    dend_54 { pt3dadd( 71.9708, 106.165, -68.9233, 0.1 ) }
    dend_54 { pt3dadd( 72.204, 106.27, -68.9078, 0.1 ) }
    dend_54 { pt3dadd( 72.7294, 106.483, -68.8548, 0.1 ) }
    dend_54 { pt3dadd( 73.7343, 106.894, -68.8103, 0.1 ) }
    dend_54 { pt3dadd( 74.0684, 107.043, -68.8008, 0.1 ) }
    dend_54 { pt3dadd( 75.023, 107.551, -68.7968, 0.1 ) }
    dend_54 { pt3dadd( 75.5041, 107.858, -68.8112, 0.56 ) }
    dend_54 { pt3dadd( 75.9624, 108.211, -68.824, 0.42 ) }
    dend_54 { pt3dadd( 76.6853, 108.88, -68.8715, 0.28 ) }
    dend_54 { pt3dadd( 77.0813, 109.302, -68.8908, 0.14 ) }
    dend_54 { pt3dadd( 77.7895, 110.12, -68.9223, 0.1 ) }
    dend_54 { pt3dadd( 78.0249, 110.4, -68.9347, 0.1 ) }
    dend_54 { pt3dadd( 78.4243, 110.816, -68.9824, 0.1 ) }
    dend_54 { pt3dadd( 79.1286, 111.495, -69.1287, 0.1 ) }
    dend_54 { pt3dadd( 79.3183, 111.66, -69.178, 0.14 ) }
    dend_54 { pt3dadd( 79.5939, 111.88, -69.276, 0.28 ) }
    dend_54 { pt3dadd( 80.4203, 112.486, -69.6257, 0.14 ) }
    dend_54 { pt3dadd( 81.2195, 113.065, -69.9974, 0.1 ) }
    dend_54 { pt3dadd( 81.9522, 113.617, -70.3583, 0.14 ) }
    dend_54 { pt3dadd( 82.7216, 114.233, -70.7334, 0.1 ) }
    dend_54 { pt3dadd( 83.4159, 114.843, -71.0779, 0.14 ) }
    dend_54 { pt3dadd( 84.0652, 115.473, -71.3818, 0.28 ) }
    dend_54 { pt3dadd( 84.4232, 115.901, -71.5347, 0.1 ) }
    dend_54 { pt3dadd( 84.7348, 116.368, -71.639, 0.1 ) }
    dend_54 { pt3dadd( 84.9249, 116.678, -71.6825, 0.1 ) }
    dend_54 { pt3dadd( 85.2349, 117.153, -71.7478, 0.1 ) }
    dend_54 { pt3dadd( 85.6184, 117.577, -71.8375, 0.1 ) }
    dend_54 { pt3dadd( 86.4675, 118.188, -72.1104, 0.1 ) }
    dend_54 { pt3dadd( 86.6864, 118.298, -72.1943, 0.14 ) }
    dend_54 { pt3dadd( 87.5481, 118.641, -72.537, 0.56 ) }
    dend_54 { pt3dadd( 88.4145, 118.95, -72.8926, 0.42 ) }
    dend_54 { pt3dadd( 89.3667, 119.274, -73.3044, 0.28 ) }
    dend_54 { pt3dadd( 90.2248, 119.58, -73.6895, 0.14 ) }
    dend_54 { pt3dadd( 91.128, 119.923, -74.0979, 0.28 ) }
    dend_54 { pt3dadd( 91.3474, 120.017, -74.1981, 0.42 ) }
    dend_54 { pt3dadd( 92.2554, 120.462, -74.5839, 0.28 ) }
    dend_54 { pt3dadd( 93.0796, 120.917, -74.8935, 0.14 ) }
    dend_54 { pt3dadd( 93.9741, 121.45, -75.1885, 0.1 ) }
    dend_54 { pt3dadd( 94.7681, 121.941, -75.3885, 0.1 ) }
    dend_54 { pt3dadd( 94.9871, 122.074, -75.4242, 0.42 ) }
    dend_54 { pt3dadd( 95.4254, 122.323, -75.4662, 0.28 ) }
    dend_54 { pt3dadd( 95.8838, 122.563, -75.4579, 0.14 ) }
    dend_54 { pt3dadd( 96.8116, 123.052, -75.3577, 0.1 ) }
    dend_54 { pt3dadd( 97.2569, 123.312, -75.3137, 0.1 ) }
    dend_54 { pt3dadd( 97.6755, 123.611, -75.2982, 0.1 ) }
    dend_54 { pt3dadd( 98.436, 124.314, -75.4927, 0.14 ) }
    dend_54 { pt3dadd( 98.5695, 124.5, -75.5927, 0.28 ) }
    dend_54 { pt3dadd( 98.7561, 124.935, -75.9148, 0.1 ) }
    dend_54 { pt3dadd( 98.9705, 125.738, -76.6078, 0.1 ) }
    dend_54 { pt3dadd( 99.05, 126.169, -76.9959, 0.1 ) }
    dend_54 { pt3dadd( 99.1713, 126.875, -77.6737, 0.1 ) }
    dend_54 { pt3dadd( 99.2269, 127.251, -78.0246, 0.1 ) }
    dend_54 { pt3dadd( 99.3696, 128.03, -78.7131, 0.1 ) }
    dend_54 { pt3dadd( 99.565, 128.821, -79.3823, 0.1 ) }
    dend_54 { pt3dadd( 99.6842, 129.209, -79.6989, 0.1 ) }
    dend_54 { pt3dadd( 99.9413, 129.888, -80.2627, 0.14 ) }
    dend_54 { pt3dadd( 100.136, 130.29, -80.6301, 0.14 ) }
    dend_54 { pt3dadd( 100.272, 130.525, -80.8702, 0.1 ) }
    dend_54 { pt3dadd( 100.706, 131.192, -81.6094, 0.1 ) }
    dend_54 { pt3dadd( 101.118, 131.732, -82.279, 0.1 ) }
    dend_54 { pt3dadd( 101.583, 132.31, -83.0285, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( 102.402, 133.306, -84.3631, 0.1 ) }
    dend_54 { pt3dadd( 102.877, 133.842, -85.1353, 0.1 ) }
    dend_54 { pt3dadd( 103.316, 134.311, -85.8413, 0.1 ) }
    dend_54 { pt3dadd( 104.211, 135.205, -87.1992, 0.1 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 15.5064, -91.0273, 6.2657, 0.84 ) }
    dend_24 { pt3dadd( 15.5079, -91.9944, 6.74827, 0.84 ) }
    dend_24 { pt3dadd( 15.5043, -92.5043, 6.96976, 0.98 ) }
    dend_24 { pt3dadd( 15.5083, -93.0306, 7.16898, 1.12 ) }
    dend_24 { pt3dadd( 15.5113, -93.5688, 7.34237, 0.98 ) }
    dend_24 { pt3dadd( 15.5303, -94.7128, 7.66066, 0.84 ) }
    dend_24 { pt3dadd( 15.5391, -95.2603, 7.79028, 0.7 ) }
    dend_24 { pt3dadd( 15.5637, -95.8753, 7.88284, 0.7 ) }
    dend_24 { pt3dadd( 15.5863, -96.4368, 7.91142, 0.84 ) }
    dend_24 { pt3dadd( 15.6219, -97.0574, 7.8809, 0.84 ) }
    dend_24 { pt3dadd( 15.6724, -97.612, 7.79968, 0.84 ) }
    dend_24 { pt3dadd( 15.7472, -98.2223, 7.65247, 0.84 ) }
    dend_24 { pt3dadd( 15.8075, -98.7629, 7.50821, 0.7 ) }
    dend_24 { pt3dadd( 15.9565, -99.8696, 7.12384, 0.56 ) }
    dend_24 { pt3dadd( 16.0164, -100.399, 6.94108, 0.7 ) }
    dend_24 { pt3dadd( 16.0646, -100.935, 6.76607, 0.84 ) }
    dend_24 { pt3dadd( 16.0908, -101.534, 6.5916, 0.7 ) }
    dend_24 { pt3dadd( 16.0962, -101.922, 6.49831, 0.84 ) }
    dend_24 { pt3dadd( 16.0813, -103.057, 6.30222, 0.98 ) }
    dend_24 { pt3dadd( 16.0087, -104.132, 6.21967, 0.98 ) }
    dend_24 { pt3dadd( 15.9361, -104.748, 6.1759, 0.84 ) }
    dend_24 { pt3dadd( 15.8612, -105.371, 6.08538, 0.98 ) }
    dend_24 { pt3dadd( 15.8295, -105.651, 6.05506, 0.84 ) }
    dend_24 { pt3dadd( 15.8045, -105.932, 6.03788, 0.84 ) }
    dend_24 { pt3dadd( 15.7665, -106.556, 6.032, 0.98 ) }
    dend_24 { pt3dadd( 15.7902, -107.188, 5.98257, 1.12 ) }
    dend_24 { pt3dadd( 15.8945, -108.225, 5.94129, 1.26 ) }
    dend_24 { pt3dadd( 16.015, -109.261, 5.92297, 1.12 ) }
    dend_24 { pt3dadd( 16.0704, -109.811, 5.91824, 0.98 ) }
    dend_24 { pt3dadd( 16.1287, -110.374, 5.91977, 1.12 ) }
    dend_24 { pt3dadd( 16.1952, -110.932, 5.93042, 0.98 ) }
    dend_24 { pt3dadd( 16.2561, -111.494, 5.94613, 1.12 ) }
    dend_24 { pt3dadd( 16.2941, -111.897, 5.9593, 1.12 ) }
    dend_24 { pt3dadd( 16.3349, -112.518, 5.93003, 0.98 ) }
    dend_24 { pt3dadd( 16.3426, -113.079, 5.89615, 1.12 ) }
    dend_24 { pt3dadd( 16.329, -113.695, 5.80727, 0.98 ) }
    dend_24 { pt3dadd( 16.2996, -114.244, 5.68792, 0.84 ) }
    dend_24 { pt3dadd( 16.261, -114.788, 5.53821, 0.98 ) }
    dend_24 { pt3dadd( 16.221, -115.381, 5.34436, 0.7 ) }
    dend_24 { pt3dadd( 16.1794, -115.97, 5.11213, 0.84 ) }
    dend_24 { pt3dadd( 16.0665, -116.938, 4.6457, 0.98 ) }
    dend_24 { pt3dadd( 15.9817, -117.478, 4.3443, 0.84 ) }
    dend_24 { pt3dadd( 15.9817, -117.478, 4.3443, 0.98 ) }
    dend_24 { pt3dadd( 15.8293, -117.985, 4.01301, 0.84 ) }
    dend_24 { pt3dadd( 15.7705, -118.217, 3.86249, 0.84 ) }
    dend_24 { pt3dadd( 15.5792, -118.746, 3.5893, 0.98 ) }
    dend_24 { pt3dadd( 15.3047, -119.308, 3.48426, 0.84 ) }
    dend_24 { pt3dadd( 15.1328, -119.653, 3.41889, 0.7 ) }
    dend_24 { pt3dadd( 15.0297, -119.903, 3.37699, 0.7 ) }
    dend_24 { pt3dadd( 14.858, -120.506, 3.29523, 0.84 ) }
    dend_24 { pt3dadd( 14.7936, -120.894, 3.25421, 0.7 ) }
    dend_24 { pt3dadd( 14.757, -121.516, 3.31704, 0.7 ) }
    dend_24 { pt3dadd( 14.7359, -122.128, 3.4361, 0.84 ) }
    dend_24 { pt3dadd( 14.7267, -122.743, 3.5803, 0.7 ) }
    dend_24 { pt3dadd( 14.7303, -123.29, 3.71258, 0.7 ) }
    dend_24 { pt3dadd( 14.7433, -123.838, 3.84149, 0.56 ) }
    dend_24 { pt3dadd( 14.8243, -124.952, 4.10599, 0.7 ) }
    dend_24 { pt3dadd( 14.8243, -124.952, 4.10599, 0.84 ) }
    dend_24 { pt3dadd( 14.8674, -125.211, 4.21032, 0.84 ) }
    dend_24 { pt3dadd( 14.9637, -125.735, 4.39225, 0.98 ) }
    dend_24 { pt3dadd( 15.0624, -126.277, 4.50508, 0.84 ) }
    dend_24 { pt3dadd( 15.1763, -126.817, 4.38177, 0.84 ) }
    dend_24 { pt3dadd( 15.4025, -127.538, 3.51309, 0.98 ) }
    dend_24 { pt3dadd( 15.4959, -127.821, 3.03236, 0.98 ) }
    dend_24 { pt3dadd( 15.6414, -128.302, 2.07951, 0.84 ) }
    dend_24 { pt3dadd( 15.7664, -128.741, 1.14145, 0.7 ) }
    dend_24 { pt3dadd( 16.0007, -129.582, -0.68914, 0.56 ) }
    dend_24 { pt3dadd( 16.1212, -130.011, -1.63134, 0.56 ) }
    dend_24 { pt3dadd( 16.1689, -130.174, -1.98376, 0.84 ) }
    dend_24 { pt3dadd( 16.2527, -130.48, -2.53047, 0.84 ) }
    dend_24 { pt3dadd( 16.3493, -130.87, -2.92491, 0.84 ) }
    dend_24 { pt3dadd( 16.4513, -131.376, -3.13084, 0.98 ) }
    dend_24 { pt3dadd( 16.4993, -131.651, -3.15888, 1.12 ) }
    dend_24 { pt3dadd( 16.5487, -131.929, -3.16416, 0.98 ) }
    dend_24 { pt3dadd( 16.6635, -132.483, -3.17053, 0.98 ) }
    dend_24 { pt3dadd( 16.774, -133.034, -3.17786, 0.98 ) }
    dend_24 { pt3dadd( 16.8839, -133.649, -3.18932, 0.84 ) }
    dend_24 { pt3dadd( 16.9653, -134.208, -3.20447, 0.84 ) }
    dend_24 { pt3dadd( 17.037, -134.766, -3.22197, 0.84 ) }
    dend_24 { pt3dadd( 17.0643, -135.047, -3.23303, 0.98 ) }
    dend_24 { pt3dadd( 17.0919, -135.446, -3.25149, 0.84 ) }
    dend_24 { pt3dadd( 17.1103, -135.998, -3.28205, 0.84 ) }
    dend_24 { pt3dadd( 17.1207, -136.622, -3.37878, 0.98 ) }
    dend_24 { pt3dadd( 17.1357, -137.151, -3.57029, 1.12 ) }
    dend_24 { pt3dadd( 17.1373, -137.512, -3.72117, 0.98 ) }
    dend_24 { pt3dadd( 17.1373, -137.512, -3.72117, 1.12 ) }
    dend_24 { pt3dadd( 17.143, -137.879, -3.87957, 0.84 ) }
    dend_24 { pt3dadd( 17.1627, -138.977, -4.33252, 0.84 ) }
    dend_24 { pt3dadd( 17.2129, -140.054, -4.7247, 0.84 ) }
    dend_24 { pt3dadd( 17.243, -141.112, -4.94651, 0.56 ) }
    dend_24 { pt3dadd( 17.2633, -141.673, -4.98466, 0.56 ) }
    dend_24 { pt3dadd( 17.2902, -142.294, -4.95659, 0.56 ) }
    dend_24 { pt3dadd( 17.3228, -142.849, -4.87177, 0.56 ) }
    dend_24 { pt3dadd( 17.339, -143.386, -4.70345, 0.7 ) }
    dend_24 { pt3dadd( 17.3642, -144.496, -4.28548, 0.84 ) }
    dend_24 { pt3dadd( 17.3838, -145.028, -4.10354, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_24 { pt3dadd( 17.3976, -145.552, -3.91593, 1.12 ) }
    dend_24 { pt3dadd( 17.4131, -146.08, -3.72299, 1.12 ) }
    dend_24 { pt3dadd( 17.465, -147.219, -3.3949, 1.12 ) }
    dend_24 { pt3dadd( 17.5305, -147.774, -3.32979, 0.98 ) }
    dend_24 { pt3dadd( 17.67, -148.376, -3.40221, 0.84 ) }
    dend_24 { pt3dadd( 17.7493, -148.636, -3.47152, 0.7 ) }
    dend_24 { pt3dadd( 17.8528, -148.872, -3.58771, 0.56 ) }
    dend_24 { pt3dadd( 18.3252, -149.785, -4.10882, 0.7 ) }
    dend_24 { pt3dadd( 18.851, -150.686, -4.66694, 0.84 ) }
    dend_24 { pt3dadd( 19.1104, -151.132, -4.89183, 0.98 ) }
    dend_24 { pt3dadd( 19.3748, -151.605, -5.05362, 0.84 ) }
    dend_24 { pt3dadd( 19.8494, -152.674, -5.22534, 0.84 ) }
    dend_24 { pt3dadd( 20.1803, -153.661, -5.29334, 0.98 ) }
    dend_24 { pt3dadd( 20.3121, -154.198, -5.30741, 0.98 ) }
    dend_24 { pt3dadd( 20.4881, -155.336, -5.26604, 0.98 ) }
    dend_24 { pt3dadd( 20.552, -155.896, -5.26058, 0.98 ) }
    dend_24 { pt3dadd( 20.6188, -156.683, -5.27389, 0.98 ) }
    dend_24 { pt3dadd( 20.7079, -157.76, -5.31173, 0.84 ) }
    dend_24 { pt3dadd( 20.8799, -158.776, -5.46825, 0.98 ) }
    dend_24 { pt3dadd( 21.1508, -159.769, -5.63959, 0.84 ) }
    dend_24 { pt3dadd( 21.3503, -160.287, -5.73306, 0.84 ) }
    dend_24 { pt3dadd( 21.5994, -160.783, -5.76256, 0.84 ) }
    dend_24 { pt3dadd( 21.8059, -161.13, -5.73953, 1.12 ) }
    dend_24 { pt3dadd( 22.1354, -161.654, -5.64895, 0.98 ) }
    dend_24 { pt3dadd( 22.491, -162.166, -5.59794, 0.84 ) }
    dend_24 { pt3dadd( 22.837, -162.608, -5.66646, 0.98 ) }
    dend_24 { pt3dadd( 23.0775, -162.91, -5.72668, 1.12 ) }
    dend_24 { pt3dadd( 23.4123, -163.361, -5.79252, 0.98 ) }
    dend_24 { pt3dadd( 23.7541, -163.883, -5.84096, 0.84 ) }
    dend_24 { pt3dadd( 24.3627, -164.897, -5.8743, 0.84 ) }
    dend_24 { pt3dadd( 24.9142, -165.908, -5.84479, 0.98 ) }
    dend_24 { pt3dadd( 25.3777, -166.839, -5.76137, 0.84 ) }
    dend_24 { pt3dadd( 25.8347, -167.885, -5.61613, 0.84 ) }
    dend_24 { pt3dadd( 26.0349, -168.394, -5.51671, 0.84 ) }
    dend_24 { pt3dadd( 26.2197, -168.975, -5.37439, 0.98 ) }
    dend_24 { pt3dadd( 26.3468, -169.502, -5.22323, 1.12 ) }
    dend_24 { pt3dadd( 26.4503, -170.043, -5.09679, 0.98 ) }
    dend_24 { pt3dadd( 26.5582, -170.595, -5.09923, 0.98 ) }
    dend_24 { pt3dadd( 26.6074, -170.87, -5.14595, 0.98 ) }
    dend_24 { pt3dadd( 26.6527, -171.255, -5.24426, 0.98 ) }
    dend_24 { pt3dadd( 26.6897, -171.847, -5.43832, 1.12 ) }
    dend_24 { pt3dadd( 26.7202, -172.439, -5.6575, 1.26 ) }
    dend_24 { pt3dadd( 26.7824, -173.412, -6.02552, 1.12 ) }
    dend_24 { pt3dadd( 26.7824, -173.412, -6.02552, 0.98 ) }
    dend_24 { pt3dadd( 26.8188, -173.773, -6.17286, 0.56 ) }
    dend_24 { pt3dadd( 26.904, -174.267, -6.43362, 0.7 ) }
    dend_24 { pt3dadd( 26.9819, -174.743, -6.72409, 0.84 ) }
    dend_24 { pt3dadd( 27.0323, -175.19, -7.06721, 0.84 ) }
    dend_24 { pt3dadd( 27.0429, -175.637, -7.50267, 0.98 ) }
    dend_24 { pt3dadd( 27.0239, -176.401, -8.40996, 0.84 ) }
    dend_24 { pt3dadd( 26.9922, -177.086, -9.33499, 0.98 ) }
    dend_24 { pt3dadd( 26.9603, -177.385, -9.81066, 1.12 ) }
    dend_24 { pt3dadd( 26.8632, -177.921, -10.8246, 1.26 ) }
    dend_24 { pt3dadd( 26.7312, -178.394, -11.9048, 1.12 ) }
    dend_24 { pt3dadd( 26.7312, -178.394, -11.9048, 0.98 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 55/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 15.5064, -91.0273, 6.2657, 0.98 ) }
    dend_19 { pt3dadd( 15.9467, -91.9924, 5.68661, 0.98 ) }
    dend_19 { pt3dadd( 16.2022, -92.4832, 5.33581, 1.12 ) }
    dend_19 { pt3dadd( 16.4793, -92.9643, 4.99416, 1.26 ) }
    dend_19 { pt3dadd( 16.8123, -93.4995, 4.63685, 1.12 ) }
    dend_19 { pt3dadd( 17.4694, -94.4808, 4.01409, 0.98 ) }
    dend_19 { pt3dadd( 18.1832, -95.4883, 3.41959, 1.12 ) }
    dend_19 { pt3dadd( 18.4363, -95.8155, 3.21089, 0.98 ) }
    dend_19 { pt3dadd( 18.8667, -96.314, 2.90877, 0.84 ) }
    dend_19 { pt3dadd( 19.3309, -96.8082, 2.65321, 0.7 ) }
    dend_19 { pt3dadd( 19.6453, -97.1279, 2.53683, 0.56 ) }
    dend_19 { pt3dadd( 20.1653, -97.625, 2.4501, 0.42 ) }
    dend_19 { pt3dadd( 20.7016, -98.1352, 2.41466, 0.28 ) }
    dend_19 { pt3dadd( 21.0271, -98.4496, 2.39311, 0.42 ) }
    dend_19 { pt3dadd( 21.5522, -98.9591, 2.35832, 0.28 ) }
    dend_19 { pt3dadd( 22.0809, -99.4534, 2.32346, 0.14 ) }
    dend_19 { pt3dadd( 22.4215, -99.7666, 2.30105, 0.1 ) }
    dend_19 { pt3dadd( 22.9636, -100.246, 2.26555, 0.1 ) }
    dend_19 { pt3dadd( 23.5078, -100.724, 2.22996, 0.1 ) }
    dend_19 { pt3dadd( 24.0585, -101.205, 2.19394, 0.14 ) }
    dend_19 { pt3dadd( 24.6081, -101.674, 2.15811, 0.1 ) }
    dend_19 { pt3dadd( 25.1699, -102.143, 2.12157, 0.14 ) }
    dend_19 { pt3dadd( 25.5181, -102.431, 2.09894, 0.28 ) }
    dend_19 { pt3dadd( 25.7758, -102.633, 2.0823, 0.42 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.29514, -73.1809, -31.5549, 0.1 ) }
    dend_9 { pt3dadd( -1.21779, -73.8901, -31.5671, 0.1 ) }
    dend_9 { pt3dadd( -1.1793, -74.5194, -31.4911, 0.1 ) }
    dend_9 { pt3dadd( -1.14146, -75.2088, -31.3622, 0.1 ) }
    dend_9 { pt3dadd( -1.12934, -75.8141, -31.1706, 0.1 ) }
    dend_9 { pt3dadd( -1.1173, -76.4835, -30.9239, 0.1 ) }
    dend_9 { pt3dadd( -1.11016, -77.0777, -30.6999, 0.1 ) }
    dend_9 { pt3dadd( -1.10256, -78.1969, -30.2242, 0.1 ) }
    dend_9 { pt3dadd( -1.10646, -78.7729, -29.9569, 0.1 ) }
    dend_9 { pt3dadd( -1.12373, -79.9403, -29.3012, 0.1 ) }
    dend_9 { pt3dadd( -1.13135, -80.471, -28.9727, 0.1 ) }
    dend_9 { pt3dadd( -1.12012, -81.0734, -28.5904, 0.1 ) }
    dend_9 { pt3dadd( -1.10335, -81.3462, -28.4317, 0.1 ) }
    dend_9 { pt3dadd( -1.10335, -81.3462, -28.4317, 0.1 ) }
    dend_9 { pt3dadd( -0.868746, -82.4147, -27.9969, 0.1 ) }
    dend_9 { pt3dadd( -0.684305, -82.9985, -27.8167, 0.1 ) }
    dend_9 { pt3dadd( -0.479175, -83.5662, -27.6582, 0.1 ) }
    dend_9 { pt3dadd( -0.234694, -84.1463, -27.574, 0.1 ) }
    dend_9 { pt3dadd( 0.025609, -84.7288, -27.5604, 0.1 ) }
    dend_9 { pt3dadd( 0.321742, -85.3676, -27.6098, 0.1 ) }
    dend_9 { pt3dadd( 0.594161, -85.9361, -27.7093, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( 0.852495, -86.5051, -27.8222, 0.1 ) }
    dend_9 { pt3dadd( 1.35461, -87.6797, -28.0664, 0.1 ) }
    dend_9 { pt3dadd( 1.57462, -88.2631, -28.1871, 0.1 ) }
    dend_9 { pt3dadd( 1.76656, -88.8463, -28.2992, 0.1 ) }
    dend_9 { pt3dadd( 1.93841, -89.4528, -28.3989, 0.1 ) }
    dend_9 { pt3dadd( 2.11361, -90.1336, -28.5322, 0.1 ) }
    dend_9 { pt3dadd( 2.25842, -90.7433, -28.6531, 0.1 ) }
    dend_9 { pt3dadd( 2.40991, -91.4212, -28.7704, 0.14 ) }
    dend_9 { pt3dadd( 2.53985, -92.0332, -28.8967, 0.28 ) }
    dend_9 { pt3dadd( 2.66901, -92.6398, -29.0331, 0.42 ) }
    dend_9 { pt3dadd( 2.95356, -93.909, -29.3253, 0.28 ) }
    dend_9 { pt3dadd( 3.10682, -94.4999, -29.5003, 0.14 ) }
    dend_9 { pt3dadd( 3.25913, -95.0855, -29.7033, 0.1 ) }
    dend_9 { pt3dadd( 3.43586, -95.7356, -29.9446, 0.1 ) }
    dend_9 { pt3dadd( 3.58889, -96.3067, -30.1544, 0.1 ) }
    dend_9 { pt3dadd( 3.74786, -96.8908, -30.3462, 0.1 ) }
    dend_9 { pt3dadd( 4.06031, -97.992, -30.6213, 0.1 ) }
    dend_9 { pt3dadd( 4.18489, -98.4136, -30.723, 0.1 ) }
    dend_9 { pt3dadd( 4.37058, -99.0075, -30.8499, 0.1 ) }
    dend_9 { pt3dadd( 4.57947, -99.5878, -30.9458, 0.1 ) }
    dend_9 { pt3dadd( 4.80515, -100.182, -31.0079, 0.1 ) }
    dend_9 { pt3dadd( 5.03906, -100.772, -31.0282, 0.1 ) }
    dend_9 { pt3dadd( 5.28023, -101.362, -31.0051, 0.1 ) }
    dend_9 { pt3dadd( 5.53288, -101.944, -30.9794, 0.1 ) }
    dend_9 { pt3dadd( 5.81517, -102.591, -30.9506, 0.1 ) }
    dend_9 { pt3dadd( 6.06936, -103.176, -30.9247, 0.14 ) }
    dend_9 { pt3dadd( 6.29953, -103.764, -30.8587, 0.28 ) }
    dend_9 { pt3dadd( 6.49334, -104.353, -30.7635, 0.14 ) }
    dend_9 { pt3dadd( 6.6591, -104.954, -30.645, 0.1 ) }
    dend_9 { pt3dadd( 6.79842, -105.562, -30.5097, 0.1 ) }
    dend_9 { pt3dadd( 6.90935, -106.17, -30.3618, 0.1 ) }
    dend_9 { pt3dadd( 7.1123, -107.443, -30.0244, 0.1 ) }
    dend_9 { pt3dadd( 7.22454, -108.124, -29.8337, 0.14 ) }
    dend_9 { pt3dadd( 7.34905, -108.726, -29.6618, 0.28 ) }
    dend_9 { pt3dadd( 7.42842, -109.021, -29.5827, 0.42 ) }
    dend_9 { pt3dadd( 7.42842, -109.021, -29.5827, 0.56 ) }
    dend_9 { pt3dadd( 7.55574, -109.311, -29.5397, 0.56 ) }
    dend_9 { pt3dadd( 7.88262, -109.935, -29.5016, 0.56 ) }
    dend_9 { pt3dadd( 8.23216, -110.557, -29.5256, 0.7 ) }
    dend_9 { pt3dadd( 8.53795, -111.11, -29.5875, 0.56 ) }
    dend_9 { pt3dadd( 8.83503, -111.668, -29.6735, 0.42 ) }
    dend_9 { pt3dadd( 9.11305, -112.218, -29.7713, 0.28 ) }
    dend_9 { pt3dadd( 9.38317, -112.781, -29.887, 0.14 ) }
    dend_9 { pt3dadd( 9.87886, -113.952, -30.1626, 0.1 ) }
    dend_9 { pt3dadd( 10.0991, -114.53, -30.3063, 0.1 ) }
    dend_9 { pt3dadd( 10.3111, -115.115, -30.4466, 0.1 ) }
    dend_9 { pt3dadd( 10.5125, -115.705, -30.5694, 0.14 ) }
    dend_9 { pt3dadd( 10.5125, -115.705, -30.5694, 0.28 ) }
    dend_9 { pt3dadd( 10.6407, -116.126, -30.6008, 0.56 ) }
    dend_9 { pt3dadd( 10.8176, -116.736, -30.5905, 0.56 ) }
    dend_9 { pt3dadd( 11.0008, -117.347, -30.579, 0.42 ) }
    dend_9 { pt3dadd( 11.19, -117.953, -30.5662, 0.28 ) }
    dend_9 { pt3dadd( 11.3855, -118.549, -30.5519, 0.14 ) }
    dend_9 { pt3dadd( 11.6033, -119.145, -30.5333, 0.28 ) }
    dend_9 { pt3dadd( 11.8232, -119.741, -30.472, 0.28 ) }
    dend_9 { pt3dadd( 12.0195, -120.327, -30.3255, 0.14 ) }
    dend_9 { pt3dadd( 12.1798, -120.903, -30.1103, 0.1 ) }
    dend_9 { pt3dadd( 12.2956, -121.45, -29.803, 0.1 ) }
    dend_9 { pt3dadd( 12.3568, -121.819, -29.5513, 0.1 ) }
    dend_9 { pt3dadd( 12.4718, -122.797, -28.8336, 0.84 ) }
    dend_9 { pt3dadd( 12.5737, -123.855, -28.0852, 0.7 ) }
    dend_9 { pt3dadd( 12.6234, -124.463, -27.7108, 0.56 ) }
    dend_9 { pt3dadd( 12.704, -125.624, -27.1306, 0.42 ) }
    dend_9 { pt3dadd( 12.7912, -125.913, -27.6769, 0.28 ) }
    dend_9 { pt3dadd( 12.8878, -126.198, -28.3242, 0.14 ) }
    dend_9 { pt3dadd( 13.0469, -126.619, -29.4109, 0.1 ) }
    dend_9 { pt3dadd( 13.358, -127.353, -31.5797, 0.1 ) }
    dend_9 { pt3dadd( 13.698, -128.016, -33.7653, 0.1 ) }
    dend_9 { pt3dadd( 13.8887, -128.348, -34.9233, 0.1 ) }
    dend_9 { pt3dadd( 14.0806, -128.658, -35.9962, 0.14 ) }
    dend_9 { pt3dadd( 14.0806, -128.658, -35.9962, 0.28 ) }
    dend_9 { pt3dadd( 14.1544, -128.79, -36.2768, 0.84 ) }
    dend_9 { pt3dadd( 14.3777, -129.313, -36.6952, 0.7 ) }
    dend_9 { pt3dadd( 14.5628, -129.909, -36.8124, 0.56 ) }
    dend_9 { pt3dadd( 14.721, -130.527, -36.8447, 0.42 ) }
    dend_9 { pt3dadd( 14.8407, -131.139, -36.8452, 0.28 ) }
    dend_9 { pt3dadd( 14.94, -131.846, -36.8532, 0.14 ) }
    dend_9 { pt3dadd( 14.994, -132.548, -36.8696, 0.1 ) }
    dend_9 { pt3dadd( 15.0187, -133.257, -36.9408, 0.1 ) }
    dend_9 { pt3dadd( 15.0165, -133.572, -36.9718, 0.1 ) }
    dend_9 { pt3dadd( 14.9856, -134.271, -37.0372, 0.1 ) }
    dend_9 { pt3dadd( 14.9401, -134.983, -37.0422, 0.1 ) }
    dend_9 { pt3dadd( 14.8909, -135.694, -36.9874, 0.1 ) }
    dend_9 { pt3dadd( 14.824, -136.854, -36.8157, 0.14 ) }
    dend_9 { pt3dadd( 14.7839, -138.049, -36.5746, 0.56 ) }
    dend_9 { pt3dadd( 14.7828, -138.746, -36.4104, 0.42 ) }
    dend_9 { pt3dadd( 14.8429, -140.001, -36.0758, 0.28 ) }
    dend_9 { pt3dadd( 14.923, -140.674, -35.8831, 0.14 ) }
    dend_9 { pt3dadd( 15.0346, -141.275, -35.7106, 0.28 ) }
    dend_9 { pt3dadd( 15.179, -141.875, -35.549, 0.42 ) }
    dend_9 { pt3dadd( 15.3729, -142.472, -35.453, 0.28 ) }
    dend_9 { pt3dadd( 15.5936, -143.055, -35.3863, 0.28 ) }
    dend_9 { pt3dadd( 15.866, -143.706, -35.3595, 0.28 ) }
    dend_9 { pt3dadd( 16.1263, -144.288, -35.3324, 0.42 ) }
    dend_9 { pt3dadd( 16.3837, -144.868, -35.3057, 0.28 ) }
    dend_9 { pt3dadd( 16.6357, -145.45, -35.2802, 0.42 ) }
    dend_9 { pt3dadd( 16.6357, -145.45, -35.2802, 0.56 ) }
    dend_9 { pt3dadd( 16.7535, -145.744, -35.2394, 0.56 ) }
    dend_9 { pt3dadd( 16.9765, -146.329, -35.1136, 0.42 ) }
    dend_9 { pt3dadd( 17.1985, -146.903, -34.9584, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_9 { pt3dadd( 17.4169, -147.463, -34.791, 0.14 ) }
    dend_9 { pt3dadd( 17.6402, -148.035, -34.6168, 0.1 ) }
    dend_9 { pt3dadd( 18.1295, -149.225, -34.2608, 0.1 ) }
    dend_9 { pt3dadd( 18.3717, -149.792, -34.0962, 0.1 ) }
    dend_9 { pt3dadd( 18.6195, -150.356, -33.9423, 0.1 ) }
    dend_9 { pt3dadd( 18.8842, -150.92, -33.8042, 0.1 ) }
    dend_9 { pt3dadd( 19.1688, -151.483, -33.7293, 0.1 ) }
    dend_9 { pt3dadd( 19.4828, -152.113, -33.6809, 0.1 ) }
    dend_9 { pt3dadd( 19.7603, -152.688, -33.6817, 0.1 ) }
    dend_9 { pt3dadd( 20.0133, -153.259, -33.6787, 0.14 ) }
    dend_9 { pt3dadd( 20.2812, -153.929, -33.6701, 0.28 ) }
    dend_9 { pt3dadd( 20.673, -155.035, -33.6468, 0.42 ) }
    dend_9 { pt3dadd( 21.0335, -156.2, -33.6126, 0.84 ) }
    dend_9 { pt3dadd( 21.1988, -156.816, -33.5896, 0.7 ) }
    dend_9 { pt3dadd( 21.3737, -157.497, -33.5559, 0.56 ) }
    dend_9 { pt3dadd( 21.5157, -158.115, -33.5211, 0.42 ) }
    dend_9 { pt3dadd( 21.6488, -158.738, -33.4815, 0.28 ) }
    dend_9 { pt3dadd( 21.7899, -159.355, -33.4353, 0.14 ) }
    dend_9 { pt3dadd( 21.9543, -159.972, -33.4275, 0.1 ) }
    dend_9 { pt3dadd( 22.1318, -160.581, -33.4618, 0.14 ) }
    dend_9 { pt3dadd( 22.3451, -161.246, -33.5365, 0.1 ) }
    dend_9 { pt3dadd( 22.5368, -161.846, -33.6184, 0.1 ) }
    dend_9 { pt3dadd( 22.7288, -162.446, -33.7191, 0.1 ) }
    dend_9 { pt3dadd( 22.9215, -163.038, -33.8429, 0.1 ) }
    dend_9 { pt3dadd( 23.3251, -164.226, -34.1581, 0.14 ) }
    dend_9 { pt3dadd( 23.4321, -164.51, -34.2562, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.29514, -73.1809, -31.5549, 0.1 ) }
    dend_8 { pt3dadd( -1.229, -73.2506, -31.7381, 0.1 ) }
    dend_8 { pt3dadd( -1.10016, -73.3546, -32.115, 0.1 ) }
    dend_8 { pt3dadd( -0.848644, -73.5184, -32.9028, 0.1 ) }
    dend_8 { pt3dadd( -0.72671, -73.5865, -33.2901, 0.1 ) }
    dend_8 { pt3dadd( -0.296071, -73.8157, -34.7065, 0.1 ) }
    dend_8 { pt3dadd( -0.0762582, -73.9286, -35.455, 0.1 ) }
    dend_8 { pt3dadd( 0.132926, -74.0301, -36.1814, 0.1 ) }
    dend_8 { pt3dadd( 0.557159, -74.2355, -37.6477, 0.1 ) }
    dend_8 { pt3dadd( 0.78189, -74.3539, -38.394, 0.14 ) }
    dend_8 { pt3dadd( 1.00565, -74.4892, -39.1109, 0.1 ) }
    dend_8 { pt3dadd( 1.49377, -74.8746, -40.5184, 0.14 ) }
    dend_8 { pt3dadd( 1.63383, -75.0135, -40.8821, 0.1 ) }
    dend_8 { pt3dadd( 1.78854, -75.1983, -41.2159, 0.1 ) }
    dend_8 { pt3dadd( 1.96972, -75.4404, -41.4877, 0.1 ) }
    dend_8 { pt3dadd( 2.07823, -75.5823, -41.5882, 0.1 ) }
    dend_8 { pt3dadd( 2.33699, -75.8847, -41.7011, 0.1 ) }
    dend_8 { pt3dadd( 2.63193, -76.1705, -41.7298, 0.1 ) }
    dend_8 { pt3dadd( 3.32029, -76.6978, -41.7704, 0.14 ) }
    dend_8 { pt3dadd( 3.99001, -77.105, -41.8547, 0.1 ) }
    dend_8 { pt3dadd( 4.38115, -77.2975, -42.0133, 0.1 ) }
    dend_8 { pt3dadd( 4.61249, -77.3937, -42.1514, 0.1 ) }
    dend_8 { pt3dadd( 5.04429, -77.5523, -42.513, 0.1 ) }
    dend_8 { pt3dadd( 5.24482, -77.6215, -42.7104, 0.1 ) }
    dend_8 { pt3dadd( 5.74448, -77.8032, -43.2956, 0.1 ) }
    dend_8 { pt3dadd( 6.65464, -78.1524, -44.4862, 0.1 ) }
    dend_8 { pt3dadd( 6.81977, -78.2188, -44.7183, 0.1 ) }
    dend_8 { pt3dadd( 7.30947, -78.4011, -45.4082, 0.1 ) }
    dend_8 { pt3dadd( 7.47366, -78.4568, -45.6438, 0.1 ) }
    dend_8 { pt3dadd( 7.98754, -78.6012, -46.3251, 0.1 ) }
    dend_8 { pt3dadd( 8.17881, -78.6405, -46.5477, 0.1 ) }
    dend_8 { pt3dadd( 8.83353, -78.729, -47.2094, 0.1 ) }
    dend_8 { pt3dadd( 9.13067, -78.7532, -47.4934, 0.1 ) }
    dend_8 { pt3dadd( 9.73787, -78.7685, -47.9996, 0.1 ) }
    dend_8 { pt3dadd( 10.0684, -78.7681, -48.2484, 0.1 ) }
    dend_8 { pt3dadd( 10.8064, -78.7492, -48.6991, 0.14 ) }
    dend_8 { pt3dadd( 11.0676, -78.7427, -48.8306, 0.28 ) }
    dend_8 { pt3dadd( 11.4872, -78.7393, -49.0109, 0.14 ) }
    dend_8 { pt3dadd( 11.9167, -78.7539, -49.182, 0.1 ) }
    dend_8 { pt3dadd( 12.1892, -78.7673, -49.2682, 0.1 ) }
    dend_8 { pt3dadd( 12.6326, -78.8024, -49.3999, 0.1 ) }
    dend_8 { pt3dadd( 13.082, -78.8418, -49.5021, 0.1 ) }
    dend_8 { pt3dadd( 13.8395, -78.9031, -49.7114, 0.1 ) }
    dend_8 { pt3dadd( 14.1168, -78.9287, -49.8122, 0.14 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 70/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -43.8984, 112.798, 2.21758, 0.1 ) }
    dend_77 { pt3dadd( -44.164, 113.544, 3.07741, 0.1 ) }
    dend_77 { pt3dadd( -44.4467, 114.338, 3.88978, 0.1 ) }
    dend_77 { pt3dadd( -44.5871, 114.746, 4.24927, 0.1 ) }
    dend_77 { pt3dadd( -44.9076, 115.648, 4.9198, 0.1 ) }
    dend_77 { pt3dadd( -45.092, 116.17, 5.24517, 0.1 ) }
    dend_77 { pt3dadd( -45.092, 116.17, 5.24517, 0.1 ) }
    dend_77 { pt3dadd( -45.2864, 116.719, 5.49886, 0.1 ) }
    dend_77 { pt3dadd( -45.4649, 117.231, 5.68642, 0.1 ) }
    dend_77 { pt3dadd( -45.6528, 117.807, 5.87886, 0.1 ) }
    dend_77 { pt3dadd( -45.7982, 118.342, 6.02618, 0.1 ) }
    dend_77 { pt3dadd( -46.0282, 119.462, 6.27014, 0.1 ) }
    dend_77 { pt3dadd( -46.0657, 119.73, 6.33247, 0.14 ) }
    dend_77 { pt3dadd( -46.1053, 120.284, 6.46607, 0.1 ) }
    dend_77 { pt3dadd( -46.1235, 120.91, 6.60823, 0.1 ) }
    dend_77 { pt3dadd( -46.1068, 121.531, 6.73237, 0.1 ) }
    dend_77 { pt3dadd( -46.0323, 122.613, 6.90103, 0.14 ) }
    dend_77 { pt3dadd( -45.928, 123.772, 7.01502, 0.28 ) }
    dend_77 { pt3dadd( -45.8719, 124.34, 7.07939, 0.14 ) }
    dend_77 { pt3dadd( -45.8426, 124.89, 7.18589, 0.1 ) }
    dend_77 { pt3dadd( -45.8493, 125.512, 7.34717, 0.1 ) }
    dend_77 { pt3dadd( -45.8908, 126.126, 7.53745, 0.1 ) }
    dend_77 { pt3dadd( -45.9588, 126.642, 7.75582, 0.14 ) }
    dend_77 { pt3dadd( -46.0226, 126.997, 7.94072, 0.1 ) }
    dend_77 { pt3dadd( -46.2594, 127.991, 8.5727, 0.1 ) }
    dend_77 { pt3dadd( -46.3914, 128.444, 8.89568, 0.1 ) }
    dend_77 { pt3dadd( -46.5428, 128.888, 9.22697, 0.1 ) }
    dend_77 { pt3dadd( -46.8541, 129.794, 9.8967, 0.1 ) }
    dend_77 { pt3dadd( -47.1374, 130.709, 10.561, 0.1 ) }
    dend_77 { pt3dadd( -47.2735, 131.158, 10.8871, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_77 { pt3dadd( -47.3373, 131.391, 11.042, 0.1 ) }
    dend_77 { pt3dadd( -47.4699, 131.86, 11.3407, 0.1 ) }
    dend_77 { pt3dadd( -47.647, 132.403, 11.6327, 0.1 ) }
    dend_77 { pt3dadd( -47.7415, 132.655, 11.7262, 0.1 ) }
    dend_77 { pt3dadd( -48.2311, 133.713, 12.0153, 0.28 ) }
    dend_77 { pt3dadd( -48.5613, 134.258, 12.1417, 0.14 ) }
    dend_77 { pt3dadd( -48.8934, 134.695, 12.2609, 0.28 ) }
    dend_77 { pt3dadd( -49.4146, 135.288, 12.4332, 0.14 ) }
    dend_77 { pt3dadd( -49.6906, 135.567, 12.5386, 0.1 ) }
    dend_77 { pt3dadd( -49.9654, 135.843, 12.6518, 0.1 ) }
    dend_77 { pt3dadd( -50.494, 136.409, 12.8841, 0.1 ) }
    dend_77 { pt3dadd( -51.2535, 137.243, 13.2965, 0.1 ) }
    dend_77 { pt3dadd( -51.4321, 137.438, 13.4083, 0.1 ) }
    dend_77 { pt3dadd( -52.1311, 138.253, 13.9468, 0.1 ) }
    dend_77 { pt3dadd( -52.4451, 138.644, 14.2276, 0.1 ) }
    dend_77 { pt3dadd( -52.7273, 139.028, 14.525, 0.14 ) }
    dend_77 { pt3dadd( -52.7273, 139.028, 14.525, 0.28 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 17/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -43.8984, 112.798, 2.21758, 0.1 ) }
    dend_76 { pt3dadd( -44.734, 112.721, 2.35854, 0.1 ) }
    dend_76 { pt3dadd( -45.1793, 112.668, 2.44573, 0.1 ) }
    dend_76 { pt3dadd( -45.5705, 112.602, 2.53792, 0.1 ) }
    dend_76 { pt3dadd( -46.3631, 112.453, 2.71505, 0.1 ) }
    dend_76 { pt3dadd( -47.1625, 112.296, 2.87003, 0.1 ) }
    dend_76 { pt3dadd( -47.5566, 112.218, 2.93618, 0.1 ) }
    dend_76 { pt3dadd( -48.3589, 112.034, 3.0373, 0.14 ) }
    dend_76 { pt3dadd( -49.1856, 111.832, 3.115, 0.28 ) }
    dend_76 { pt3dadd( -49.5781, 111.731, 3.12701, 0.14 ) }
    dend_76 { pt3dadd( -49.9731, 111.634, 3.10409, 0.1 ) }
    dend_76 { pt3dadd( -50.1688, 111.593, 3.0773, 0.1 ) }
    dend_76 { pt3dadd( -50.5623, 111.533, 3.03308, 0.14 ) }
    dend_76 { pt3dadd( -50.9617, 111.496, 2.97449, 0.28 ) }
    dend_76 { pt3dadd( -51.2497, 111.483, 2.93147, 0.42 ) }
    dend_76 { pt3dadd( -52.0951, 111.469, 2.82913, 0.1 ) }
    dend_76 { pt3dadd( -52.5473, 111.471, 2.77482, 0.1 ) }
    dend_76 { pt3dadd( -53.3958, 111.489, 2.70378, 0.14 ) }
    dend_76 { pt3dadd( -53.8018, 111.503, 2.67381, 0.1 ) }
    dend_76 { pt3dadd( -54.2048, 111.526, 2.63661, 0.1 ) }
    dend_76 { pt3dadd( -54.6475, 111.558, 2.57351, 0.1 ) }
    dend_76 { pt3dadd( -55.0422, 111.585, 2.48523, 0.1 ) }
    dend_76 { pt3dadd( -55.8706, 111.633, 2.28032, 0.1 ) }
    dend_76 { pt3dadd( -56.2565, 111.67, 2.1618, 0.14 ) }
    dend_76 { pt3dadd( -56.6821, 111.734, 2.03636, 0.1 ) }
    dend_76 { pt3dadd( -57.0603, 111.825, 1.9217, 0.14 ) }
    dend_76 { pt3dadd( -57.2439, 111.887, 1.86, 0.1 ) }
    dend_76 { pt3dadd( -57.4163, 111.971, 1.79034, 0.1 ) }
    dend_76 { pt3dadd( -57.8661, 112.231, 1.55667, 0.1 ) }
    dend_76 { pt3dadd( -58.1081, 112.364, 1.46274, 0.1 ) }
    dend_76 { pt3dadd( -58.5959, 112.617, 1.31365, 0.1 ) }
    dend_76 { pt3dadd( -58.8472, 112.742, 1.24742, 0.1 ) }
    dend_76 { pt3dadd( -59.2462, 112.925, 1.15054, 0.1 ) }
    dend_76 { pt3dadd( -59.6137, 113.077, 1.06203, 0.1 ) }
    dend_76 { pt3dadd( -60.3982, 113.363, 0.876366, 0.1 ) }
    dend_76 { pt3dadd( -60.659, 113.446, 0.809937, 0.1 ) }
    dend_76 { pt3dadd( -61.0832, 113.563, 0.692031, 0.14 ) }
    dend_76 { pt3dadd( -61.0832, 113.563, 0.692031, 0.28 ) }
    dend_76 { pt3dadd( -61.4934, 113.651, 0.530454, 0.28 ) }
    dend_76 { pt3dadd( -61.8965, 113.725, 0.331881, 0.14 ) }
    dend_76 { pt3dadd( -62.2388, 113.769, 0.119121, 0.1 ) }
    dend_76 { pt3dadd( -62.4103, 113.778, 0.00972115, 0.14 ) }
    dend_76 { pt3dadd( -62.7502, 113.778, -0.211266, 0.1 ) }
    dend_76 { pt3dadd( -63.0985, 113.751, -0.407038, 0.1 ) }
    dend_76 { pt3dadd( -63.4583, 113.699, -0.586063, 0.1 ) }
    dend_76 { pt3dadd( -63.8244, 113.63, -0.751215, 0.1 ) }
    dend_76 { pt3dadd( -64.1919, 113.557, -0.905822, 0.14 ) }
    dend_76 { pt3dadd( -64.5678, 113.471, -1.03052, 0.28 ) }
    dend_76 { pt3dadd( -65.3692, 113.269, -1.24827, 0.42 ) }
    dend_76 { pt3dadd( -65.7491, 113.161, -1.34003, 0.28 ) }
    dend_76 { pt3dadd( -66.1209, 113.041, -1.42789, 0.14 ) }
    dend_76 { pt3dadd( -66.491, 112.905, -1.5222, 0.1 ) }
    dend_76 { pt3dadd( -67.2564, 112.597, -1.73579, 0.1 ) }
    dend_76 { pt3dadd( -67.6211, 112.444, -1.83247, 0.1 ) }
    dend_76 { pt3dadd( -68.0188, 112.268, -1.95045, 0.1 ) }
    dend_76 { pt3dadd( -68.4197, 112.083, -2.06194, 0.1 ) }
    dend_76 { pt3dadd( -68.8164, 111.888, -2.17412, 0.14 ) }
    dend_76 { pt3dadd( -68.8164, 111.888, -2.17412, 0.28 ) }
    dend_76 { pt3dadd( -69.4987, 111.518, -2.45563, 0.1 ) }
    dend_76 { pt3dadd( -69.873, 111.3, -2.61291, 0.1 ) }
    dend_76 { pt3dadd( -70.1908, 111.107, -2.75618, 0.14 ) }
    dend_76 { pt3dadd( -70.416, 110.962, -2.87114, 0.28 ) }
    dend_76 { pt3dadd( -70.7534, 110.739, -3.06967, 0.14 ) }
    dend_76 { pt3dadd( -71.0799, 110.514, -3.29349, 0.1 ) }
    dend_76 { pt3dadd( -71.2695, 110.375, -3.44824, 0.14 ) }
    dend_76 { pt3dadd( -71.5802, 110.156, -3.69954, 0.1 ) }
    dend_76 { pt3dadd( -71.8937, 109.951, -3.94967, 0.1 ) }
    dend_76 { pt3dadd( -72.1859, 109.786, -4.17693, 0.1 ) }
    dend_76 { pt3dadd( -72.5248, 109.623, -4.43398, 0.1 ) }
    dend_76 { pt3dadd( -72.8698, 109.486, -4.68923, 0.1 ) }
    dend_76 { pt3dadd( -73.1899, 109.39, -4.91887, 0.1 ) }
    dend_76 { pt3dadd( -73.5185, 109.318, -5.14871, 0.1 ) }
    dend_76 { pt3dadd( -73.8503, 109.268, -5.37591, 0.1 ) }
    dend_76 { pt3dadd( -74.1881, 109.24, -5.60183, 0.1 ) }
    dend_76 { pt3dadd( -74.5218, 109.236, -5.81953, 0.1 ) }
    dend_76 { pt3dadd( -74.9048, 109.25, -6.06548, 0.1 ) }
    dend_76 { pt3dadd( -75.0749, 109.263, -6.17319, 0.1 ) }
    dend_76 { pt3dadd( -75.4189, 109.306, -6.38696, 0.1 ) }
    dend_76 { pt3dadd( -75.7986, 109.367, -6.62011, 0.1 ) }
    dend_76 { pt3dadd( -76.1422, 109.435, -6.82827, 0.14 ) }
    dend_76 { pt3dadd( -76.1422, 109.435, -6.82827, 0.28 ) }
    dend_76 { pt3dadd( -76.5259, 109.534, -7.05542, 0.1 ) }
    dend_76 { pt3dadd( -76.9017, 109.639, -7.27594, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_76 { pt3dadd( -77.2405, 109.743, -7.4727, 0.1 ) }
    dend_76 { pt3dadd( -77.6204, 109.865, -7.69209, 0.1 ) }
    dend_76 { pt3dadd( -77.9942, 109.995, -7.90582, 0.1 ) }
    dend_76 { pt3dadd( -78.3734, 110.122, -8.12362, 0.1 ) }
    dend_76 { pt3dadd( -78.5431, 110.179, -8.2213, 0.1 ) }
    dend_76 { pt3dadd( -78.917, 110.307, -8.43536, 0.1 ) }
    dend_76 { pt3dadd( -79.2944, 110.446, -8.64947, 0.1 ) }
    dend_76 { pt3dadd( -79.6679, 110.577, -8.86273, 0.1 ) }
    dend_76 { pt3dadd( -80.0067, 110.693, -9.0567, 0.1 ) }
    dend_76 { pt3dadd( -80.3862, 110.826, -9.2736, 0.1 ) }
    dend_76 { pt3dadd( -80.6201, 110.908, -9.40696, 0.1 ) }
    dend_76 { pt3dadd( -80.9998, 111.04, -9.62409, 0.1 ) }
    dend_76 { pt3dadd( -81.3385, 111.157, -9.81804, 0.14 ) }
    dend_76 { pt3dadd( -81.7121, 111.287, -10.0314, 0.28 ) }
    dend_76 { pt3dadd( -81.8787, 111.352, -10.1252, 0.14 ) }
    // Section: dend_72, id: dend_72, parent: dend_64 (entry count 15/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -8.88455, 79.5474, -1.2479, 0.98 ) }
    dend_72 { pt3dadd( -8.74475, 80.5369, -0.787147, 0.98 ) }
    dend_72 { pt3dadd( -8.66646, 81.0783, -0.56998, 0.84 ) }
    dend_72 { pt3dadd( -8.59881, 81.6234, -0.38068, 0.7 ) }
    dend_72 { pt3dadd( -8.55641, 81.9762, -0.26987, 0.56 ) }
    dend_72 { pt3dadd( -8.49851, 82.5308, -0.112546, 0.7 ) }
    dend_72 { pt3dadd( -8.44773, 83.0347, 0.0209396, 0.56 ) }
    dend_72 { pt3dadd( -8.39013, 83.611, 0.12539, 0.42 ) }
    dend_72 { pt3dadd( -8.35534, 84.1267, 0.209975, 0.28 ) }
    dend_72 { pt3dadd( -8.36518, 84.695, 0.322098, 0.14 ) }
    dend_72 { pt3dadd( -8.41459, 85.2039, 0.43579, 0.1 ) }
    dend_72 { pt3dadd( -8.50816, 85.768, 0.57491, 0.14 ) }
    dend_72 { pt3dadd( -8.62381, 86.2542, 0.698371, 0.28 ) }
    dend_72 { pt3dadd( -8.69932, 86.4991, 0.758447, 0.14 ) }
    dend_72 { pt3dadd( -9.05575, 87.514, 0.993849, 0.1 ) }
    dend_72 { pt3dadd( -9.24163, 87.9964, 1.09271, 0.1 ) }
    dend_72 { pt3dadd( -9.4201, 88.4805, 1.1828, 0.1 ) }
    dend_72 { pt3dadd( -9.59806, 89.0275, 1.27277, 0.1 ) }
    dend_72 { pt3dadd( -9.70664, 89.5404, 1.3191, 0.1 ) }
    dend_72 { pt3dadd( -9.75276, 90.062, 1.33273, 0.1 ) }
    dend_72 { pt3dadd( -9.74674, 90.5883, 1.33859, 0.1 ) }
    dend_72 { pt3dadd( -9.74014, 91.165, 1.40971, 0.1 ) }
    dend_72 { pt3dadd( -9.74071, 91.7375, 1.54606, 0.14 ) }
    dend_72 { pt3dadd( -9.76301, 92.6871, 1.86806, 0.28 ) }
    dend_72 { pt3dadd( -9.7822, 92.9304, 1.96659, 0.42 ) }
    dend_72 { pt3dadd( -9.94213, 93.9034, 2.38558, 0.1 ) }
    dend_72 { pt3dadd( -10.1815, 94.8653, 2.79545, 0.14 ) }
    dend_72 { pt3dadd( -10.3335, 95.3316, 2.97946, 0.1 ) }
    dend_72 { pt3dadd( -10.5052, 95.7876, 3.14547, 0.1 ) }
    dend_72 { pt3dadd( -10.6915, 96.256, 3.29713, 0.1 ) }
    dend_72 { pt3dadd( -10.8833, 96.7946, 3.4067, 0.1 ) }
    dend_72 { pt3dadd( -11.025, 97.3004, 3.44155, 0.1 ) }
    dend_72 { pt3dadd( -11.1458, 97.81, 3.44275, 0.1 ) }
    dend_72 { pt3dadd( -11.2003, 98.0675, 3.44683, 0.14 ) }
    dend_72 { pt3dadd( -11.3226, 98.5748, 3.49202, 0.7 ) }
    dend_72 { pt3dadd( -11.4542, 99.0783, 3.57092, 0.7 ) }
    dend_72 { pt3dadd( -11.5864, 99.565, 3.67417, 0.84 ) }
    dend_72 { pt3dadd( -11.7304, 100.057, 3.79315, 0.98 ) }
    dend_72 { pt3dadd( -11.837, 100.407, 3.88243, 0.98 ) }
    dend_72 { pt3dadd( -12.1332, 101.436, 4.1524, 0.84 ) }
    dend_72 { pt3dadd( -12.2661, 101.926, 4.28004, 0.84 ) }
    dend_72 { pt3dadd( -12.3907, 102.423, 4.40093, 0.7 ) }
    dend_72 { pt3dadd( -12.5113, 102.913, 4.54383, 0.56 ) }
    dend_72 { pt3dadd( -12.6154, 103.393, 4.69683, 0.56 ) }
    dend_72 { pt3dadd( -12.7093, 103.945, 4.87721, 0.56 ) }
    dend_72 { pt3dadd( -12.7494, 104.441, 5.04007, 0.42 ) }
    dend_72 { pt3dadd( -12.7753, 104.933, 5.22649, 0.42 ) }
    dend_72 { pt3dadd( -12.8814, 105.885, 5.76911, 0.56 ) }
    dend_72 { pt3dadd( -12.9626, 106.354, 6.11447, 0.56 ) }
    dend_72 { pt3dadd( -13.0214, 106.626, 6.34864, 0.7 ) }
    dend_72 { pt3dadd( -13.122, 107.053, 6.74407, 0.7 ) }
    dend_72 { pt3dadd( -13.122, 107.053, 6.74407, 0.84 ) }
    dend_72 { pt3dadd( -13.2829, 108.522, 8.00354, 1.12 ) }
    dend_72 { pt3dadd( -13.281, 108.735, 8.15373, 1.12 ) }
    dend_72 { pt3dadd( -13.2522, 109.232, 8.44966, 0.98 ) }
    dend_72 { pt3dadd( -13.2042, 109.774, 8.67973, 0.84 ) }
    dend_72 { pt3dadd( -13.1586, 110.125, 8.76229, 0.84 ) }
    dend_72 { pt3dadd( -13.0003, 111.308, 8.83486, 0.84 ) }
    dend_72 { pt3dadd( -12.9658, 111.565, 8.80837, 0.7 ) }
    dend_72 { pt3dadd( -12.9336, 112.141, 8.73602, 0.56 ) }
    dend_72 { pt3dadd( -12.9656, 112.73, 8.65164, 0.42 ) }
    dend_72 { pt3dadd( -13.0481, 113.233, 8.58405, 0.28 ) }
    dend_72 { pt3dadd( -13.1773, 113.799, 8.53492, 0.14 ) }
    dend_72 { pt3dadd( -13.3202, 114.305, 8.52396, 0.28 ) }
    dend_72 { pt3dadd( -13.3202, 114.305, 8.52396, 0.42 ) }
    dend_72 { pt3dadd( -13.3996, 114.823, 8.54811, 0.1 ) }
    dend_72 { pt3dadd( -13.4528, 115.345, 8.58681, 0.1 ) }
    dend_72 { pt3dadd( -13.4975, 115.931, 8.63823, 0.1 ) }
    dend_72 { pt3dadd( -13.5167, 116.445, 8.69395, 0.1 ) }
    dend_72 { pt3dadd( -13.5205, 117.031, 8.76702, 0.14 ) }
    dend_72 { pt3dadd( -13.5243, 117.546, 8.87473, 0.28 ) }
    dend_72 { pt3dadd( -13.5226, 117.796, 8.94932, 0.42 ) }
    dend_72 { pt3dadd( -13.5086, 118.279, 9.13409, 0.56 ) }
    dend_72 { pt3dadd( -13.4813, 118.817, 9.37558, 0.56 ) }
    dend_72 { pt3dadd( -13.4594, 119.051, 9.49269, 0.42 ) }
    dend_72 { pt3dadd( -13.3117, 120.046, 9.9376, 0.56 ) }
    dend_72 { pt3dadd( -13.1811, 120.592, 10.1211, 0.42 ) }
    dend_72 { pt3dadd( -13.0962, 120.924, 10.2431, 0.28 ) }
    dend_72 { pt3dadd( -12.9442, 121.456, 10.4441, 0.42 ) }
    dend_72 { pt3dadd( -12.794, 121.998, 10.6226, 0.56 ) }
    dend_72 { pt3dadd( -12.5688, 122.918, 10.8225, 0.7 ) }
    dend_72 { pt3dadd( -12.3495, 123.827, 10.8368, 0.7 ) }
    dend_72 { pt3dadd( -12.1753, 125.697, 11.0124, 0.56 ) }
    dend_72 { pt3dadd( -12.2097, 125.935, 11.1201, 0.7 ) }
    dend_72 { pt3dadd( -12.303, 126.361, 11.3977, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_72 { pt3dadd( -12.4083, 126.749, 11.7339, 0.7 ) }
    dend_72 { pt3dadd( -12.5021, 127.127, 12.0881, 0.56 ) }
    dend_72 { pt3dadd( -12.6031, 127.567, 12.4679, 0.42 ) }
    dend_72 { pt3dadd( -12.7476, 128.473, 13.0739, 0.28 ) }
    dend_72 { pt3dadd( -12.8061, 128.784, 13.2706, 0.14 ) }
    dend_72 { pt3dadd( -13.0049, 129.708, 13.8344, 0.1 ) }
    dend_72 { pt3dadd( -13.0878, 130.027, 14.0066, 0.14 ) }
    dend_72 { pt3dadd( -13.2524, 130.543, 14.22, 0.56 ) }
    dend_72 { pt3dadd( -13.4295, 131.024, 14.339, 0.42 ) }
    dend_72 { pt3dadd( -13.6517, 131.556, 14.4219, 0.28 ) }
    dend_72 { pt3dadd( -13.8735, 132.029, 14.4842, 0.14 ) }
    dend_72 { pt3dadd( -14.1185, 132.555, 14.5373, 0.1 ) }
    dend_72 { pt3dadd( -14.3489, 133.082, 14.6228, 0.1 ) }
    dend_72 { pt3dadd( -14.5212, 133.565, 14.7431, 0.1 ) }
    dend_72 { pt3dadd( -14.7567, 134.553, 15.0849, 0.14 ) }
    dend_72 { pt3dadd( -14.7567, 134.553, 15.0849, 0.28 ) }
    dend_72 { pt3dadd( -14.7002, 135.064, 15.3514, 0.84 ) }
    dend_72 { pt3dadd( -14.5564, 135.553, 15.6447, 0.7 ) }
    dend_72 { pt3dadd( -14.4265, 135.847, 15.8258, 0.56 ) }
    dend_72 { pt3dadd( -14.1821, 136.316, 16.0834, 0.42 ) }
    dend_72 { pt3dadd( -13.9298, 136.8, 16.2793, 0.56 ) }
    dend_72 { pt3dadd( -13.8348, 137.032, 16.3595, 0.56 ) }
    dend_72 { pt3dadd( -13.7608, 137.274, 16.4299, 0.7 ) }
    dend_72 { pt3dadd( -13.6584, 137.777, 16.5487, 0.84 ) }
    dend_72 { pt3dadd( -13.5981, 138.288, 16.6462, 0.7 ) }
    dend_72 { pt3dadd( -13.5911, 138.807, 16.7164, 0.56 ) }
    dend_72 { pt3dadd( -13.6158, 139.382, 16.7771, 0.7 ) }
    dend_72 { pt3dadd( -13.6158, 139.382, 16.7771, 0.84 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 28/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -8.88455, 79.5474, -1.2479, 0.84 ) }
    dend_65 { pt3dadd( -8.818, 79.8924, -1.64687, 0.84 ) }
    dend_65 { pt3dadd( -8.69174, 80.5469, -2.40379, 0.7 ) }
    dend_65 { pt3dadd( -8.56926, 81.1818, -3.13803, 0.56 ) }
    dend_65 { pt3dadd( -8.45425, 81.7779, -3.82747, 0.42 ) }
    dend_65 { pt3dadd( -8.3877, 82.1229, -4.22644, 0.56 ) }
    dend_65 { pt3dadd( -8.32782, 82.4333, -4.58541, 0.42 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 18.9436, 180.123, -23.3329, 0.14 ) }
    dend_60 { pt3dadd( 18.9928, 180.973, -23.0097, 0.14 ) }
    dend_60 { pt3dadd( 19.0047, 181.373, -22.8412, 0.28 ) }
    dend_60 { pt3dadd( 19.0201, 181.821, -22.6518, 0.42 ) }
    dend_60 { pt3dadd( 19.0298, 182.021, -22.57, 0.42 ) }
    dend_60 { pt3dadd( 19.0661, 182.869, -22.2391, 0.28 ) }
    dend_60 { pt3dadd( 19.0878, 183.326, -22.0685, 0.14 ) }
    dend_60 { pt3dadd( 19.0998, 183.72, -21.9, 0.1 ) }
    dend_60 { pt3dadd( 19.1211, 184.174, -21.72, 0.1 ) }
    dend_60 { pt3dadd( 19.14, 184.634, -21.5614, 0.1 ) }
    dend_60 { pt3dadd( 19.1468, 185.036, -21.4194, 0.1 ) }
    dend_60 { pt3dadd( 19.1385, 185.499, -21.267, 0.1 ) }
    dend_60 { pt3dadd( 19.1288, 185.703, -21.1902, 0.1 ) }
    dend_60 { pt3dadd( 19.1056, 186.147, -21.0067, 0.1 ) }
    dend_60 { pt3dadd( 19.0844, 186.544, -20.8323, 0.1 ) }
    dend_60 { pt3dadd( 19.0575, 187.353, -20.4659, 0.1 ) }
    dend_60 { pt3dadd( 19.0671, 187.759, -20.3137, 0.1 ) }
    dend_60 { pt3dadd( 19.1009, 188.218, -20.1794, 0.1 ) }
    dend_60 { pt3dadd( 19.1653, 188.691, -20.075, 0.1 ) }
    dend_60 { pt3dadd( 19.2241, 188.991, -20.0312, 0.1 ) }
    dend_60 { pt3dadd( 19.344, 189.454, -19.9937, 0.14 ) }
    dend_60 { pt3dadd( 19.6093, 190.33, -19.9754, 0.14 ) }
    dend_60 { pt3dadd( 19.7486, 190.786, -19.9302, 0.1 ) }
    dend_60 { pt3dadd( 19.8309, 191.079, -19.881, 0.1 ) }
    dend_60 { pt3dadd( 19.9446, 191.533, -19.7691, 0.1 ) }
    dend_60 { pt3dadd( 20.0345, 191.977, -19.5871, 0.1 ) }
    dend_60 { pt3dadd( 20.0953, 192.399, -19.3481, 0.1 ) }
    dend_60 { pt3dadd( 20.1659, 193.144, -18.8303, 0.1 ) }
    dend_60 { pt3dadd( 20.1748, 193.32, -18.7053, 0.1 ) }
    dend_60 { pt3dadd( 20.1757, 193.721, -18.4279, 0.1 ) }
    dend_60 { pt3dadd( 20.1582, 194.483, -17.9278, 0.1 ) }
    dend_60 { pt3dadd( 20.1405, 194.858, -17.707, 0.1 ) }
    dend_60 { pt3dadd( 20.1111, 195.29, -17.4964, 0.1 ) }
    dend_60 { pt3dadd( 20.0879, 195.698, -17.3449, 0.1 ) }
    dend_60 { pt3dadd( 20.0667, 196.109, -17.207, 0.1 ) }
    dend_60 { pt3dadd( 20.0327, 196.568, -17.0493, 0.1 ) }
    dend_60 { pt3dadd( 20.0051, 196.98, -16.916, 0.1 ) }
    dend_60 { pt3dadd( 19.9857, 197.378, -16.7568, 0.1 ) }
    dend_60 { pt3dadd( 19.9706, 197.661, -16.6274, 0.1 ) }
    dend_60 { pt3dadd( 19.9665, 197.855, -16.5319, 0.1 ) }
    dend_60 { pt3dadd( 19.9753, 198.648, -16.1345, 0.1 ) }
    dend_60 { pt3dadd( 19.9927, 199.08, -15.9263, 0.1 ) }
    dend_60 { pt3dadd( 20.0218, 199.524, -15.7247, 0.1 ) }
    dend_60 { pt3dadd( 20.056, 199.927, -15.5609, 0.1 ) }
    dend_60 { pt3dadd( 20.0903, 200.38, -15.4035, 0.1 ) }
    dend_60 { pt3dadd( 20.1382, 200.854, -15.3007, 0.1 ) }
    dend_60 { pt3dadd( 20.2116, 201.33, -15.2937, 0.1 ) }
    dend_60 { pt3dadd( 20.2458, 201.544, -15.3136, 0.1 ) }
    dend_60 { pt3dadd( 20.3266, 202.02, -15.3914, 0.1 ) }
    dend_60 { pt3dadd( 20.4007, 202.44, -15.4811, 0.1 ) }
    dend_60 { pt3dadd( 20.5745, 203.298, -15.7363, 0.14 ) }
    dend_60 { pt3dadd( 20.7659, 204.145, -16.0221, 0.28 ) }
    dend_60 { pt3dadd( 20.8671, 204.543, -16.1609, 0.14 ) }
    dend_60 { pt3dadd( 20.9908, 204.984, -16.3038, 0.1 ) }
    dend_60 { pt3dadd( 21.0512, 205.186, -16.3597, 0.1 ) }
    dend_60 { pt3dadd( 21.3446, 206.114, -16.5311, 0.1 ) }
    dend_60 { pt3dadd( 21.4853, 206.58, -16.5575, 0.1 ) }
    dend_60 { pt3dadd( 21.5727, 206.875, -16.5474, 0.1 ) }
    dend_60 { pt3dadd( 21.7228, 207.331, -16.5198, 0.1 ) }
    dend_60 { pt3dadd( 21.8706, 207.793, -16.4742, 0.14 ) }
    dend_60 { pt3dadd( 22.0067, 208.249, -16.4007, 0.1 ) }
    dend_60 { pt3dadd( 22.0541, 208.456, -16.3501, 0.1 ) }
    dend_60 { pt3dadd( 22.1478, 208.922, -16.2389, 0.1 ) }
    dend_60 { pt3dadd( 22.1986, 209.212, -16.1717, 0.1 ) }
    dend_60 { pt3dadd( 22.2705, 209.621, -16.0766, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_60 { pt3dadd( 22.3645, 210.095, -16.0095, 0.1 ) }
    dend_60 { pt3dadd( 22.4606, 210.516, -15.9761, 0.1 ) }
    dend_60 { pt3dadd( 22.5774, 210.981, -15.9565, 0.1 ) }
    dend_60 { pt3dadd( 22.6919, 211.457, -15.9498, 0.1 ) }
    dend_60 { pt3dadd( 22.7547, 211.751, -15.9493, 0.1 ) }
    dend_60 { pt3dadd( 22.9357, 212.649, -15.9577, 0.1 ) }
    dend_60 { pt3dadd( 22.9907, 212.952, -15.9644, 0.1 ) }
    dend_60 { pt3dadd( 23.0652, 213.426, -15.9757, 0.14 ) }
    dend_60 { pt3dadd( 23.1204, 213.856, -15.9898, 0.1 ) }
    dend_60 { pt3dadd( 23.1563, 214.29, -15.9999, 0.1 ) }
    dend_60 { pt3dadd( 23.1625, 214.724, -15.9881, 0.1 ) }
    dend_60 { pt3dadd( 23.1625, 214.724, -15.9881, 0.14 ) }
    dend_60 { pt3dadd( 23.1278, 214.936, -15.9554, 0.56 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 13/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 18.9436, 180.123, -23.3329, 0.1 ) }
    dend_59 { pt3dadd( 17.8492, 178.979, -23.6949, 0.1 ) }
    dend_59 { pt3dadd( 17.2862, 178.376, -23.9253, 0.1 ) }
    dend_59 { pt3dadd( 16.9584, 177.99, -24.1495, 0.1 ) }
    dend_59 { pt3dadd( 16.5029, 177.393, -24.5595, 0.1 ) }
    dend_59 { pt3dadd( 16.0842, 176.785, -24.9933, 0.1 ) }
    dend_59 { pt3dadd( 15.8425, 176.382, -25.2739, 0.1 ) }
    dend_59 { pt3dadd( 15.5393, 175.716, -25.7191, 0.1 ) }
    dend_59 { pt3dadd( 15.1184, 174.46, -26.3775, 0.1 ) }
    dend_59 { pt3dadd( 14.9171, 173.456, -26.7482, 0.1 ) }
    dend_59 { pt3dadd( 14.8637, 173.076, -26.8027, 0.1 ) }
    dend_59 { pt3dadd( 14.7745, 172.312, -26.7829, 0.1 ) }
    dend_59 { pt3dadd( 14.5779, 170.76, -26.5793, 0.1 ) }
    dend_59 { pt3dadd( 14.4598, 170.012, -26.437, 0.1 ) }
    dend_59 { pt3dadd( 14.2933, 169.187, -26.2361, 0.14 ) }
    dend_59 { pt3dadd( 13.9667, 167.65, -25.8452, 0.84 ) }
    dend_59 { pt3dadd( 13.7688, 166.825, -25.6622, 0.7 ) }
    dend_59 { pt3dadd( 13.6481, 166.311, -25.5769, 0.56 ) }
    dend_59 { pt3dadd( 13.4654, 165.226, -25.5228, 0.42 ) }
    dend_59 { pt3dadd( 13.4654, 165.226, -25.5228, 0.28 ) }
    dend_59 { pt3dadd( 13.5118, 164.842, -25.5224, 0.42 ) }
    dend_59 { pt3dadd( 13.6369, 164.475, -25.5291, 0.56 ) }
    dend_59 { pt3dadd( 13.9719, 163.688, -25.5115, 0.42 ) }
    dend_59 { pt3dadd( 14.2939, 162.984, -25.4845, 0.28 ) }
    dend_59 { pt3dadd( 14.6531, 162.208, -25.4529, 0.42 ) }
    dend_59 { pt3dadd( 14.994, 161.513, -25.476, 0.28 ) }
    dend_59 { pt3dadd( 15.3113, 160.826, -25.4976, 0.14 ) }
    dend_59 { pt3dadd( 15.6256, 160.119, -25.5161, 0.1 ) }
    dend_59 { pt3dadd( 15.9334, 159.413, -25.527, 0.1 ) }
    dend_59 { pt3dadd( 16.2419, 158.708, -25.5248, 0.1 ) }
    dend_59 { pt3dadd( 16.7978, 157.393, -25.5035, 0.1 ) }
    dend_59 { pt3dadd( 17.2913, 156.063, -25.3385, 0.28 ) }
    dend_59 { pt3dadd( 17.5227, 155.343, -25.1915, 0.14 ) }
    dend_59 { pt3dadd( 17.7055, 154.541, -24.9231, 0.1 ) }
    dend_59 { pt3dadd( 17.8205, 153.835, -24.6382, 0.1 ) }
    dend_59 { pt3dadd( 17.9058, 153.127, -24.3357, 0.1 ) }
    dend_59 { pt3dadd( 18.0409, 151.681, -23.726, 0.1 ) }
    dend_59 { pt3dadd( 18.1361, 150.963, -23.492, 0.1 ) }
    dend_59 { pt3dadd( 18.3997, 149.456, -23.1148, 0.1 ) }
    dend_59 { pt3dadd( 18.653, 148.729, -23.1327, 0.1 ) }
    dend_59 { pt3dadd( 19.0734, 148.167, -23.4591, 0.1 ) }
    dend_59 { pt3dadd( 19.5432, 147.722, -23.8771, 0.1 ) }
    dend_59 { pt3dadd( 20.4666, 147.026, -24.7144, 0.1 ) }
    dend_59 { pt3dadd( 21.4726, 146.384, -25.589, 0.1 ) }
    dend_59 { pt3dadd( 23.5332, 145.24, -27.2423, 0.1 ) }
    dend_59 { pt3dadd( 23.5332, 145.24, -27.2423, 0.14 ) }
    dend_59 { pt3dadd( 24.758, 144.584, -27.7499, 0.42 ) }
    dend_59 { pt3dadd( 25.1912, 144.274, -27.7005, 0.28 ) }
    dend_59 { pt3dadd( 25.7365, 143.7, -27.3498, 0.14 ) }
    dend_59 { pt3dadd( 26.5666, 142.576, -26.5341, 0.1 ) }
    dend_59 { pt3dadd( 26.9891, 141.959, -26.0979, 0.1 ) }
    dend_59 { pt3dadd( 27.294, 141.569, -25.8943, 0.1 ) }
    dend_59 { pt3dadd( 27.8761, 140.961, -25.6948, 0.1 ) }
    dend_59 { pt3dadd( 28.5129, 140.385, -25.5641, 0.14 ) }
    dend_59 { pt3dadd( 28.8066, 140.138, -25.515, 0.1 ) }
    dend_59 { pt3dadd( 29.8862, 139.162, -25.2758, 0.1 ) }
    dend_59 { pt3dadd( 30.4321, 138.553, -24.9848, 0.1 ) }
    dend_59 { pt3dadd( 30.8135, 137.98, -24.6312, 0.1 ) }
    dend_59 { pt3dadd( 31.0172, 137.57, -24.3541, 0.1 ) }
    dend_59 { pt3dadd( 31.4597, 136.437, -23.6063, 0.1 ) }
    dend_59 { pt3dadd( 31.835, 135.115, -22.8324, 0.1 ) }
    dend_59 { pt3dadd( 31.9678, 134.437, -22.491, 0.1 ) }
    dend_59 { pt3dadd( 32.0799, 133.722, -22.2284, 0.14 ) }
    dend_59 { pt3dadd( 32.2164, 132.975, -22.0779, 0.1 ) }
    dend_59 { pt3dadd( 32.3852, 132.237, -22.054, 0.1 ) }
    dend_59 { pt3dadd( 32.5967, 131.502, -22.1735, 0.1 ) }
    dend_59 { pt3dadd( 32.8057, 130.792, -22.387, 0.1 ) }
    dend_59 { pt3dadd( 32.9575, 130.061, -22.5896, 0.1 ) }
    dend_59 { pt3dadd( 33.1395, 128.685, -22.9222, 0.1 ) }
    dend_59 { pt3dadd( 33.1785, 128.162, -23.0257, 0.1 ) }
    dend_59 { pt3dadd( 33.2091, 127.306, -23.1515, 0.1 ) }
    dend_59 { pt3dadd( 33.2069, 126.456, -23.2385, 0.1 ) }
    dend_59 { pt3dadd( 33.1763, 124.835, -23.3279, 0.1 ) }
    dend_59 { pt3dadd( 33.158, 124.065, -23.3324, 0.1 ) }
    dend_59 { pt3dadd( 33.1496, 123.291, -23.2974, 0.1 ) }
    dend_59 { pt3dadd( 33.1862, 122.523, -23.2658, 0.1 ) }
    dend_59 { pt3dadd( 33.2783, 121.676, -23.2461, 0.1 ) }
    dend_59 { pt3dadd( 33.3834, 120.914, -23.205, 0.1 ) }
    dend_59 { pt3dadd( 33.4477, 120.533, -23.1846, 0.1 ) }
    dend_59 { pt3dadd( 33.5655, 119.776, -23.1084, 0.1 ) }
    dend_59 { pt3dadd( 33.6792, 119.03, -23.0076, 0.1 ) }
    dend_59 { pt3dadd( 33.7966, 118.279, -22.8858, 0.1 ) }
    dend_59 { pt3dadd( 34.0281, 116.743, -22.6181, 0.1 ) }
    dend_59 { pt3dadd( 34.1323, 115.986, -22.4936, 0.1 ) }
    dend_59 { pt3dadd( 34.221, 115.228, -22.3941, 0.1 ) }
    dend_59 { pt3dadd( 34.2881, 114.459, -22.333, 0.1 ) }
    dend_59 { pt3dadd( 34.3166, 114.077, -22.3269, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_59 { pt3dadd( 34.3493, 113.544, -22.3624, 0.7 ) }
    dend_59 { pt3dadd( 34.3874, 112.78, -22.4853, 0.56 ) }
    dend_59 { pt3dadd( 34.4097, 111.926, -22.6329, 0.42 ) }
    dend_59 { pt3dadd( 34.4408, 111.101, -22.8432, 0.28 ) }
    dend_59 { pt3dadd( 34.4825, 110.366, -23.0719, 0.14 ) }
    dend_59 { pt3dadd( 34.5146, 109.549, -23.3104, 0.1 ) }
    dend_59 { pt3dadd( 34.5337, 108.712, -23.5381, 0.1 ) }
    dend_59 { pt3dadd( 34.5003, 107.952, -23.6824, 0.1 ) }
    dend_59 { pt3dadd( 34.3412, 106.351, -23.8546, 0.1 ) }
    dend_59 { pt3dadd( 34.2791, 105.969, -23.8717, 0.1 ) }
    dend_59 { pt3dadd( 33.9793, 104.521, -23.8593, 0.1 ) }
    dend_59 { pt3dadd( 33.7878, 103.676, -23.8051, 0.1 ) }
    dend_59 { pt3dadd( 33.3743, 102.125, -23.611, 0.1 ) }
    dend_59 { pt3dadd( 33.1145, 101.312, -23.4539, 0.1 ) }
    dend_59 { pt3dadd( 32.9391, 100.825, -23.3159, 0.1 ) }
    dend_59 { pt3dadd( 32.6936, 100.116, -23.142, 0.1 ) }
    dend_59 { pt3dadd( 32.6003, 99.7432, -23.0987, 0.14 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 26.7312, -178.394, -11.9048, 0.98 ) }
    dend_26 { pt3dadd( 26.6301, -178.785, -11.3955, 0.98 ) }
    dend_26 { pt3dadd( 26.595, -178.978, -11.1763, 1.12 ) }
    dend_26 { pt3dadd( 26.5042, -179.75, -10.4211, 1.82 ) }
    dend_26 { pt3dadd( 26.4571, -180.662, -9.64799, 1.68 ) }
    dend_26 { pt3dadd( 26.4782, -181.642, -8.96138, 1.54 ) }
    dend_26 { pt3dadd( 26.5437, -182.17, -8.71117, 1.4 ) }
    dend_26 { pt3dadd( 26.6996, -182.714, -8.61299, 1.26 ) }
    dend_26 { pt3dadd( 27.1241, -183.696, -8.7942, 1.12 ) }
    dend_26 { pt3dadd( 27.6413, -184.538, -9.32829, 1.12 ) }
    dend_26 { pt3dadd( 27.7799, -184.719, -9.50972, 1.12 ) }
    dend_26 { pt3dadd( 28.3517, -185.34, -10.3596, 1.12 ) }
    dend_26 { pt3dadd( 28.8889, -185.839, -11.2107, 1.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 26.7312, -178.394, -11.9048, 0.98 ) }
    dend_25 { pt3dadd( 26.2479, -178.76, -11.6371, 0.98 ) }
    dend_25 { pt3dadd( 26.0368, -178.924, -11.5014, 1.12 ) }
    dend_25 { pt3dadd( 25.1604, -179.585, -10.9645, 1.4 ) }
    dend_25 { pt3dadd( 24.689, -179.962, -10.6898, 1.26 ) }
    dend_25 { pt3dadd( 23.7963, -180.706, -10.2192, 1.12 ) }
    dend_25 { pt3dadd( 23.3209, -181.12, -9.99068, 0.98 ) }
    dend_25 { pt3dadd( 22.5207, -181.864, -9.65061, 0.84 ) }
    dend_25 { pt3dadd( 22.1153, -182.271, -9.51892, 0.7 ) }
    dend_25 { pt3dadd( 21.6892, -182.765, -9.40797, 0.56 ) }
    dend_25 { pt3dadd( 21.2757, -183.282, -9.30427, 0.1 ) }
    dend_25 { pt3dadd( 21.0293, -183.613, -9.2657, 0.1 ) }
    dend_25 { pt3dadd( 20.5413, -184.299, -9.20098, 0.1 ) }
    dend_25 { pt3dadd( 20.3033, -184.649, -9.21884, 0.1 ) }
    dend_25 { pt3dadd( 19.563, -185.778, -9.33868, 0.14 ) }
    dend_25 { pt3dadd( 19.563, -185.778, -9.33868, 0.28 ) }
    dend_25 { pt3dadd( 19.2661, -186.33, -9.57456, 0.28 ) }
    dend_25 { pt3dadd( 19.1209, -186.669, -9.76454, 0.14 ) }
    dend_25 { pt3dadd( 18.8279, -187.691, -10.445, 0.1 ) }
    dend_25 { pt3dadd( 18.778, -188.028, -10.6808, 0.1 ) }
    dend_25 { pt3dadd( 18.7641, -189.06, -11.3999, 0.14 ) }
    dend_25 { pt3dadd( 18.7841, -189.317, -11.547, 0.56 ) }
    dend_25 { pt3dadd( 18.9041, -189.84, -11.816, 0.42 ) }
    dend_25 { pt3dadd( 19.0727, -190.356, -12.0367, 0.28 ) }
    dend_25 { pt3dadd( 19.2728, -190.894, -12.2101, 0.14 ) }
    dend_25 { pt3dadd( 19.4733, -191.434, -12.3656, 0.1 ) }
    dend_25 { pt3dadd( 19.6557, -191.99, -12.4964, 0.14 ) }
    dend_25 { pt3dadd( 19.9737, -193.167, -12.7908, 0.28 ) }
    dend_25 { pt3dadd( 20.0984, -193.731, -12.9385, 0.42 ) }
    dend_25 { pt3dadd( 20.1694, -194.135, -13.0444, 0.1 ) }
    dend_25 { pt3dadd( 20.2549, -194.771, -13.1981, 0.1 ) }
    dend_25 { pt3dadd( 20.3338, -195.427, -13.3256, 0.1 ) }
    dend_25 { pt3dadd( 20.4071, -196.077, -13.4065, 0.1 ) }
    dend_25 { pt3dadd( 20.4477, -196.374, -13.4152, 0.1 ) }
    dend_25 { pt3dadd( 20.5117, -196.664, -13.4167, 0.84 ) }
    dend_25 { pt3dadd( 20.7016, -197.233, -13.401, 0.7 ) }
    dend_25 { pt3dadd( 20.9609, -197.842, -13.3681, 0.56 ) }
    dend_25 { pt3dadd( 21.222, -198.377, -13.3297, 0.42 ) }
    dend_25 { pt3dadd( 21.527, -198.972, -13.2827, 0.28 ) }
    dend_25 { pt3dadd( 21.8029, -199.499, -13.2394, 0.14 ) }
    dend_25 { pt3dadd( 22.1114, -200.092, -13.1913, 0.28 ) }
    dend_25 { pt3dadd( 22.2444, -200.357, -13.1711, 0.28 ) }
    dend_25 { pt3dadd( 22.4978, -200.899, -13.1354, 0.14 ) }
    dend_25 { pt3dadd( 22.7347, -201.435, -13.1039, 0.1 ) }
    dend_25 { pt3dadd( 22.9893, -202.063, -13.0737, 0.1 ) }
    dend_25 { pt3dadd( 23.1994, -202.609, -13.0507, 0.1 ) }
    dend_25 { pt3dadd( 23.3996, -203.171, -13.0316, 0.14 ) }
    dend_25 { pt3dadd( 23.6067, -203.733, -13.054, 0.28 ) }
    dend_25 { pt3dadd( 23.814, -204.29, -13.1112, 0.28 ) }
    dend_25 { pt3dadd( 24.0198, -204.846, -13.1962, 0.14 ) }
    dend_25 { pt3dadd( 24.2158, -205.389, -13.3029, 0.1 ) }
    dend_25 { pt3dadd( 24.4108, -205.941, -13.4322, 0.1 ) }
    dend_25 { pt3dadd( 24.7724, -207.067, -13.73, 0.14 ) }
    dend_25 { pt3dadd( 24.9313, -207.622, -13.8833, 0.28 ) }
    dend_25 { pt3dadd( 25.0736, -208.184, -14.034, 0.42 ) }
    dend_25 { pt3dadd( 25.0736, -208.184, -14.034, 0.56 ) }
    dend_25 { pt3dadd( 25.1519, -208.585, -14.1061, 0.56 ) }
    dend_25 { pt3dadd( 25.2672, -209.244, -14.1757, 0.56 ) }
    dend_25 { pt3dadd( 25.3645, -209.835, -14.1883, 0.56 ) }
    dend_25 { pt3dadd( 25.4731, -210.422, -14.1973, 0.7 ) }
    dend_25 { pt3dadd( 25.6069, -210.996, -14.1982, 0.56 ) }
    dend_25 { pt3dadd( 25.7664, -211.57, -14.1917, 0.42 ) }
    dend_25 { pt3dadd( 25.961, -212.134, -14.1744, 0.56 ) }
    dend_25 { pt3dadd( 26.1802, -212.692, -14.1495, 0.42 ) }
    dend_25 { pt3dadd( 26.4072, -213.243, -14.1219, 0.28 ) }
    dend_25 { pt3dadd( 26.6815, -213.854, -14.1308, 0.14 ) }
    dend_25 { pt3dadd( 26.9393, -214.391, -14.1686, 0.1 ) }
    dend_25 { pt3dadd( 27.2278, -214.983, -14.2457, 0.1 ) }
    dend_25 { pt3dadd( 27.4728, -215.52, -14.35, 0.1 ) }
    dend_25 { pt3dadd( 27.6928, -216.058, -14.4836, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_25 { pt3dadd( 28.016, -217.072, -14.776, 0.1 ) }
    dend_25 { pt3dadd( 28.016, -217.072, -14.776, 0.1 ) }
    dend_25 { pt3dadd( 28.046, -217.492, -14.824, 0.1 ) }
    dend_25 { pt3dadd( 28.0314, -218.164, -14.8419, 0.1 ) }
    dend_25 { pt3dadd( 27.9991, -218.751, -14.8107, 0.1 ) }
    dend_25 { pt3dadd( 27.9478, -219.417, -14.7375, 0.1 ) }
    dend_25 { pt3dadd( 27.8278, -220.656, -14.55, 0.14 ) }
    dend_25 { pt3dadd( 27.7714, -221.234, -14.4725, 0.1 ) }
    dend_25 { pt3dadd( 27.7068, -221.897, -14.3975, 0.14 ) }
    dend_25 { pt3dadd( 27.6421, -222.488, -14.3513, 0.1 ) }
    dend_25 { pt3dadd( 27.5655, -223.143, -14.3288, 0.14 ) }
    dend_25 { pt3dadd( 27.5263, -223.565, -14.3365, 0.28 ) }
    dend_25 { pt3dadd( 27.4726, -224.222, -14.397, 0.14 ) }
    dend_25 { pt3dadd( 27.4179, -224.887, -14.4584, 0.1 ) }
    dend_25 { pt3dadd( 27.3822, -225.556, -14.5147, 0.14 ) }
    dend_25 { pt3dadd( 27.3589, -225.855, -14.5168, 0.28 ) }
    dend_25 { pt3dadd( 27.3082, -226.438, -14.4828, 0.42 ) }
    dend_25 { pt3dadd( 27.2644, -226.858, -14.4401, 0.1 ) }
    dend_25 { pt3dadd( 27.1869, -227.444, -14.3639, 0.1 ) }
    dend_25 { pt3dadd( 27.1037, -228.032, -14.2784, 0.1 ) }
    dend_25 { pt3dadd( 26.9102, -229.358, -14.0772, 0.14 ) }
    dend_25 { pt3dadd( 26.8039, -229.997, -13.941, 0.1 ) }
    dend_25 { pt3dadd( 26.7373, -230.402, -13.8352, 0.14 ) }
    dend_25 { pt3dadd( 26.6545, -231.043, -13.649, 0.28 ) }
    dend_25 { pt3dadd( 26.6039, -231.605, -13.4816, 0.42 ) }
    dend_25 { pt3dadd( 26.6056, -231.893, -13.3986, 0.56 ) }
    dend_25 { pt3dadd( 26.7331, -232.96, -13.1409, 0.56 ) }
    dend_25 { pt3dadd( 26.8337, -233.535, -13.0004, 0.42 ) }
    dend_25 { pt3dadd( 26.9459, -234.107, -12.8756, 0.28 ) }
    dend_25 { pt3dadd( 27.0543, -234.688, -12.776, 0.14 ) }
    dend_25 { pt3dadd( 27.1644, -235.338, -12.7039, 0.1 ) }
    dend_25 { pt3dadd( 27.2714, -235.99, -12.6712, 0.1 ) }
    dend_25 { pt3dadd( 27.3583, -236.583, -12.6463, 0.1 ) }
    dend_25 { pt3dadd( 27.4336, -237.248, -12.5825, 0.1 ) }
    dend_25 { pt3dadd( 27.4931, -237.898, -12.4892, 0.1 ) }
    dend_25 { pt3dadd( 27.515, -238.476, -12.3425, 0.1 ) }
    dend_25 { pt3dadd( 27.5172, -238.76, -12.2468, 0.1 ) }
    dend_25 { pt3dadd( 27.5181, -239.79, -11.8428, 0.1 ) }
    dend_25 { pt3dadd( 27.5069, -240.343, -11.6185, 0.14 ) }
    dend_25 { pt3dadd( 27.4884, -240.901, -11.4007, 0.1 ) }
    dend_25 { pt3dadd( 27.4232, -242.086, -10.9972, 0.14 ) }
    dend_25 { pt3dadd( 27.3805, -242.662, -10.8373, 0.1 ) }
    dend_25 { pt3dadd( 27.3252, -243.32, -10.7119, 0.1 ) }
    dend_25 { pt3dadd( 27.2771, -243.978, -10.6987, 0.1 ) }
    dend_25 { pt3dadd( 27.2241, -244.646, -10.7588, 0.1 ) }
    dend_25 { pt3dadd( 27.1853, -245.292, -10.8839, 0.1 ) }
    dend_25 { pt3dadd( 27.1765, -245.577, -10.967, 0.1 ) }
    dend_25 { pt3dadd( 27.1516, -246.216, -11.1699, 0.1 ) }
    dend_25 { pt3dadd( 27.1078, -247.406, -11.56, 0.14 ) }
    dend_25 { pt3dadd( 27.0806, -248.043, -11.766, 0.1 ) }
    dend_25 { pt3dadd( 27.0472, -248.623, -11.9022, 0.14 ) }
    dend_25 { pt3dadd( 27.0062, -249.275, -11.9926, 0.1 ) }
    dend_25 { pt3dadd( 26.9808, -249.698, -12.0106, 0.1 ) }
    dend_25 { pt3dadd( 26.9421, -250.358, -11.9733, 0.1 ) }
    dend_25 { pt3dadd( 26.8929, -251.019, -11.8768, 0.1 ) }
    dend_25 { pt3dadd( 26.8391, -252.233, -11.7582, 0.14 ) }
    dend_25 { pt3dadd( 26.8101, -252.831, -11.7379, 0.28 ) }
    dend_25 { pt3dadd( 26.7829, -253.416, -11.7567, 0.42 ) }
    dend_25 { pt3dadd( 26.7354, -254.08, -11.8345, 0.56 ) }
    dend_25 { pt3dadd( 26.6957, -254.49, -11.9581, 0.42 ) }
    dend_25 { pt3dadd( 26.5765, -255.586, -12.4718, 0.28 ) }
    dend_25 { pt3dadd( 26.5164, -256.161, -12.811, 0.42 ) }
    dend_25 { pt3dadd( 26.4754, -256.514, -13.0244, 0.28 ) }
    dend_25 { pt3dadd( 26.4037, -257.25, -13.4497, 0.14 ) }
    dend_25 { pt3dadd( 26.381, -258.234, -14.0299, 0.1 ) }
    dend_25 { pt3dadd( 26.3923, -258.754, -14.3222, 0.1 ) }
    dend_25 { pt3dadd( 26.4248, -259.291, -14.5866, 0.1 ) }
    dend_25 { pt3dadd( 26.5111, -259.896, -14.8671, 0.1 ) }
    dend_25 { pt3dadd( 26.5973, -260.446, -15.0605, 0.1 ) }
    dend_25 { pt3dadd( 26.7697, -261.625, -15.3245, 0.1 ) }
    dend_25 { pt3dadd( 26.8066, -262.045, -15.3644, 0.1 ) }
    dend_25 { pt3dadd( 26.8361, -262.64, -15.3921, 0.1 ) }
    dend_25 { pt3dadd( 26.8426, -263.23, -15.3925, 0.1 ) }
    dend_25 { pt3dadd( 26.8376, -264.487, -15.3321, 0.1 ) }
    dend_25 { pt3dadd( 26.8107, -265.154, -15.2738, 0.1 ) }
    dend_25 { pt3dadd( 26.7744, -265.81, -15.1884, 0.1 ) }
    dend_25 { pt3dadd( 26.7469, -266.405, -15.1287, 0.1 ) }
    dend_25 { pt3dadd( 26.7104, -267.076, -15.0937, 0.1 ) }
    dend_25 { pt3dadd( 26.6792, -267.664, -15.0985, 0.1 ) }
    dend_25 { pt3dadd( 26.6628, -268.087, -15.1322, 0.1 ) }
    dend_25 { pt3dadd( 26.6392, -268.676, -15.2228, 0.1 ) }
    dend_25 { pt3dadd( 26.6052, -269.319, -15.3651, 0.1 ) }
    dend_25 { pt3dadd( 26.5678, -269.967, -15.5404, 0.1 ) }
    dend_25 { pt3dadd( 26.5324, -270.598, -15.7314, 0.1 ) }
    dend_25 { pt3dadd( 26.4912, -271.237, -15.9361, 0.1 ) }
    dend_25 { pt3dadd( 26.4158, -272.323, -16.2926, 0.1 ) }
    dend_25 { pt3dadd( 26.3603, -272.949, -16.4993, 0.1 ) }
    dend_25 { pt3dadd( 26.3185, -273.507, -16.7146, 0.1 ) }
    dend_25 { pt3dadd( 26.2717, -274.125, -16.9746, 0.1 ) }
    dend_25 { pt3dadd( 26.2345, -274.713, -17.2722, 0.14 ) }
    dend_25 { pt3dadd( 26.2019, -275.082, -17.4781, 0.28 ) }
    dend_25 { pt3dadd( 26.1335, -275.657, -17.7983, 0.14 ) }
    dend_25 { pt3dadd( 25.9954, -276.721, -18.4555, 0.14 ) }
    dend_25 { pt3dadd( 25.9425, -277.064, -18.6821, 0.28 ) }
    dend_25 { pt3dadd( 25.7766, -278.104, -19.3722, 0.14 ) }
    dend_25 { pt3dadd( 25.6845, -278.661, -19.7194, 0.1 ) }
    dend_25 { pt3dadd( 25.612, -279.229, -20.0689, 0.14 ) }
    dend_25 { pt3dadd( 25.5776, -279.484, -20.2173, 0.28 ) }
    dend_25 { pt3dadd( 25.5205, -279.855, -20.3919, 0.1 ) }
    dend_25 { pt3dadd( 25.438, -280.468, -20.652, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_25 { pt3dadd( 25.3555, -281.105, -20.8476, 0.1 ) }
    dend_25 { pt3dadd( 25.3048, -282.254, -21.241, 0.14 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 25.7758, -102.633, 2.0823, 0.84 ) }
    dend_23 { pt3dadd( 25.5013, -103.183, 1.12737, 0.84 ) }
    dend_23 { pt3dadd( 25.2011, -103.784, 0.0827386, 0.98 ) }
    dend_23 { pt3dadd( 24.9363, -104.315, -0.838931, 0.84 ) }
    dend_23 { pt3dadd( 24.635, -104.918, -1.88732, 0.7 ) }
    dend_23 { pt3dadd( 24.5638, -105.061, -2.13477, 0.84 ) }
    dend_23 { pt3dadd( 24.5638, -105.061, -2.13477, 0.98 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 25.7758, -102.633, 2.0823, 0.56 ) }
    dend_20 { pt3dadd( 25.9915, -102.878, 1.87214, 0.56 ) }
    dend_20 { pt3dadd( 26.9375, -103.925, 1.0679, 0.7 ) }
    dend_20 { pt3dadd( 27.4424, -104.459, 0.622627, 0.56 ) }
    dend_20 { pt3dadd( 27.8972, -104.942, 0.219027, 0.42 ) }
    dend_20 { pt3dadd( 28.8642, -105.953, -0.605823, 0.28 ) }
    dend_20 { pt3dadd( 29.1993, -106.295, -0.874677, 0.14 ) }
    dend_20 { pt3dadd( 29.7558, -106.803, -1.30812, 0.1 ) }
    dend_20 { pt3dadd( 30.8582, -107.711, -2.09264, 0.1 ) }
    dend_20 { pt3dadd( 31.1215, -107.903, -2.29692, 0.14 ) }
    dend_20 { pt3dadd( 31.507, -108.162, -2.58986, 0.28 ) }
    dend_20 { pt3dadd( 31.9016, -108.427, -2.86458, 0.14 ) }
    dend_20 { pt3dadd( 33.071, -109.234, -3.64685, 0.1 ) }
    dend_20 { pt3dadd( 33.4745, -109.522, -3.89905, 0.14 ) }
    dend_20 { pt3dadd( 34.65, -110.445, -4.53422, 0.28 ) }
    dend_20 { pt3dadd( 35.2484, -110.979, -4.84228, 0.14 ) }
    dend_20 { pt3dadd( 35.8103, -111.583, -5.11162, 0.1 ) }
    dend_20 { pt3dadd( 36.2986, -112.26, -5.31493, 0.1 ) }
    dend_20 { pt3dadd( 36.4838, -112.592, -5.39287, 0.28 ) }
    dend_20 { pt3dadd( 36.8003, -113.278, -5.5573, 0.14 ) }
    dend_20 { pt3dadd( 37.0641, -113.992, -5.70995, 0.1 ) }
    dend_20 { pt3dadd( 37.2844, -114.689, -5.96, 0.14 ) }
    dend_20 { pt3dadd( 37.4964, -115.441, -6.30599, 0.1 ) }
    dend_20 { pt3dadd( 37.8332, -116.626, -7.0356, 0.1 ) }
    dend_20 { pt3dadd( 37.927, -116.935, -7.25127, 0.1 ) }
    dend_20 { pt3dadd( 38.121, -117.539, -7.69897, 0.14 ) }
    dend_20 { pt3dadd( 38.5328, -118.768, -8.60293, 0.1 ) }
    dend_20 { pt3dadd( 38.7406, -119.362, -9.02911, 0.1 ) }
    dend_20 { pt3dadd( 39.1742, -120.58, -9.941, 0.14 ) }
    dend_20 { pt3dadd( 39.352, -121.129, -10.455, 0.28 ) }
    dend_20 { pt3dadd( 39.4966, -121.588, -11.0644, 0.42 ) }
    dend_20 { pt3dadd( 39.6124, -121.972, -11.7251, 0.56 ) }
    dend_20 { pt3dadd( 39.6124, -121.972, -11.7251, 0.56 ) }
    dend_20 { pt3dadd( 39.7906, -122.499, -13.0439, 0.56 ) }
    dend_20 { pt3dadd( 40.2027, -123.461, -15.6534, 0.42 ) }
    dend_20 { pt3dadd( 40.4716, -123.907, -16.9879, 0.56 ) }
    dend_20 { pt3dadd( 40.4716, -123.907, -16.9879, 0.56 ) }
    dend_20 { pt3dadd( 40.5858, -124.043, -17.3332, 0.28 ) }
    dend_20 { pt3dadd( 41.1998, -124.752, -18.6592, 0.42 ) }
    dend_20 { pt3dadd( 41.6354, -125.257, -19.2008, 0.28 ) }
    dend_20 { pt3dadd( 42.5333, -126.317, -19.7229, 0.14 ) }
    dend_20 { pt3dadd( 43.0662, -126.967, -19.9008, 0.1 ) }
    dend_20 { pt3dadd( 43.5431, -127.572, -19.9974, 0.14 ) }
    dend_20 { pt3dadd( 44.507, -128.871, -20.1445, 0.1 ) }
    dend_20 { pt3dadd( 44.9259, -129.52, -20.1538, 0.1 ) }
    dend_20 { pt3dadd( 45.2087, -129.985, -20.2283, 0.1 ) }
    dend_20 { pt3dadd( 45.2087, -129.985, -20.2283, 0.1 ) }
    dend_20 { pt3dadd( 45.3805, -130.303, -20.3707, 0.1 ) }
    dend_20 { pt3dadd( 46.0389, -131.559, -21.0688, 0.1 ) }
    dend_20 { pt3dadd( 46.3402, -132.171, -21.4403, 0.14 ) }
    dend_20 { pt3dadd( 46.9248, -133.538, -22.0936, 0.28 ) }
    dend_20 { pt3dadd( 47.1749, -134.231, -22.3264, 0.42 ) }
    dend_20 { pt3dadd( 47.4067, -134.958, -22.4713, 0.56 ) }
    dend_20 { pt3dadd( 47.6146, -135.701, -22.5207, 0.42 ) }
    dend_20 { pt3dadd( 47.791, -136.441, -22.4606, 0.28 ) }
    dend_20 { pt3dadd( 48.1211, -138.02, -22.2262, 0.42 ) }
    dend_20 { pt3dadd( 48.257, -138.769, -22.0681, 0.56 ) }
    dend_20 { pt3dadd( 48.3984, -139.514, -21.9233, 0.42 ) }
    dend_20 { pt3dadd( 48.4747, -139.89, -21.8623, 0.42 ) }
    dend_20 { pt3dadd( 48.6391, -140.627, -21.7773, 0.56 ) }
    dend_20 { pt3dadd( 48.827, -141.379, -21.7364, 0.42 ) }
    dend_20 { pt3dadd( 49.0365, -142.123, -21.7501, 0.28 ) }
    dend_20 { pt3dadd( 49.2547, -142.867, -21.7078, 0.14 ) }
    dend_20 { pt3dadd( 49.4776, -143.601, -21.6197, 0.28 ) }
    dend_20 { pt3dadd( 49.7184, -144.325, -21.4931, 0.42 ) }
    dend_20 { pt3dadd( 49.9855, -145.022, -21.3348, 0.42 ) }
    dend_20 { pt3dadd( 50.2795, -145.713, -21.153, 0.28 ) }
    dend_20 { pt3dadd( 50.9051, -147.008, -20.7851, 0.14 ) }
    dend_20 { pt3dadd( 51.0927, -147.341, -20.7182, 0.84 ) }
    dend_20 { pt3dadd( 51.543, -148.068, -20.6434, 0.7 ) }
    dend_20 { pt3dadd( 52.0326, -148.786, -20.6382, 0.56 ) }
    dend_20 { pt3dadd( 52.4843, -149.399, -20.6933, 0.42 ) }
    dend_20 { pt3dadd( 53.0066, -150.07, -20.8129, 0.28 ) }
    dend_20 { pt3dadd( 54.0083, -151.323, -21.1293, 0.14 ) }
    dend_20 { pt3dadd( 54.4723, -151.894, -21.3173, 0.1 ) }
    dend_20 { pt3dadd( 54.8056, -152.309, -21.4779, 0.1 ) }
    dend_20 { pt3dadd( 55.3006, -152.956, -21.7503, 0.1 ) }
    dend_20 { pt3dadd( 55.7732, -153.617, -22.0276, 0.1 ) }
    dend_20 { pt3dadd( 56.1873, -154.307, -22.3529, 0.1 ) }
    dend_20 { pt3dadd( 56.8255, -155.619, -22.9615, 0.1 ) }
    dend_20 { pt3dadd( 56.9581, -155.945, -23.1265, 0.14 ) }
    dend_20 { pt3dadd( 57.0964, -156.407, -23.3618, 0.1 ) }
    dend_20 { pt3dadd( 57.2442, -157.089, -23.6947, 0.1 ) }
    dend_20 { pt3dadd( 57.4928, -158.518, -24.4364, 0.14 ) }
    dend_20 { pt3dadd( 57.5978, -159.2, -24.7846, 0.1 ) }
    dend_20 { pt3dadd( 57.7093, -159.884, -25.0954, 0.1 ) }
    dend_20 { pt3dadd( 57.8565, -160.666, -25.4421, 0.14 ) }
    dend_20 { pt3dadd( 58.0143, -161.345, -25.7745, 0.1 ) }
    dend_20 { pt3dadd( 58.3626, -162.76, -26.392, 0.1 ) }
    dend_20 { pt3dadd( 58.4611, -163.103, -26.5085, 0.56 ) }
    dend_20 { pt3dadd( 58.6999, -163.805, -26.7234, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( 58.9886, -164.501, -26.895, 0.42 ) }
    dend_20 { pt3dadd( 59.6396, -165.922, -27.1431, 0.56 ) }
    dend_20 { pt3dadd( 60.2395, -167.219, -27.2489, 0.56 ) }
    dend_20 { pt3dadd( 60.5829, -168.004, -27.3023, 0.42 ) }
    dend_20 { pt3dadd( 60.9096, -168.792, -27.4022, 0.28 ) }
    dend_20 { pt3dadd( 61.22, -169.591, -27.5385, 0.14 ) }
    dend_20 { pt3dadd( 61.4051, -170.094, -27.6851, 0.1 ) }
    dend_20 { pt3dadd( 61.6409, -170.785, -27.9512, 0.1 ) }
    dend_20 { pt3dadd( 62.089, -172.173, -28.664, 0.1 ) }
    dend_20 { pt3dadd( 62.2632, -172.823, -29.0512, 0.1 ) }
    dend_20 { pt3dadd( 62.4026, -173.45, -29.4815, 0.1 ) }
    dend_20 { pt3dadd( 62.6302, -174.563, -30.3541, 0.1 ) }
    dend_20 { pt3dadd( 62.6302, -174.563, -30.3541, 0.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 23.4321, -164.51, -34.2562, 0.84 ) }
    dend_13 { pt3dadd( 23.5753, -164.904, -33.5181, 0.84 ) }
    dend_13 { pt3dadd( 23.627, -165.047, -33.2515, 0.7 ) }
    dend_13 { pt3dadd( 23.7839, -165.478, -32.4424, 0.56 ) }
    dend_13 { pt3dadd( 23.8357, -165.621, -32.1758, 0.42 ) }
    dend_13 { pt3dadd( 23.8886, -165.766, -31.9032, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 19/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 23.4321, -164.51, -34.2562, 0.56 ) }
    dend_10 { pt3dadd( 23.3889, -164.873, -34.1533, 0.56 ) }
    dend_10 { pt3dadd( 23.3269, -165.385, -34.0161, 0.42 ) }
    dend_10 { pt3dadd( 23.2711, -165.955, -33.8743, 0.28 ) }
    dend_10 { pt3dadd( 23.2364, -166.474, -33.7548, 0.14 ) }
    dend_10 { pt3dadd( 23.1969, -167.573, -33.5196, 0.1 ) }
    dend_10 { pt3dadd( 23.1935, -168.096, -33.4152, 0.1 ) }
    dend_10 { pt3dadd( 23.2137, -168.675, -33.3015, 0.1 ) }
    dend_10 { pt3dadd( 23.2425, -169.2, -33.2111, 0.1 ) }
    dend_10 { pt3dadd( 23.2826, -169.73, -33.1406, 0.1 ) }
    dend_10 { pt3dadd( 23.3327, -170.259, -33.0978, 0.14 ) }
    dend_10 { pt3dadd( 23.3943, -170.792, -33.0919, 0.1 ) }
    dend_10 { pt3dadd( 23.4469, -171.314, -33.0897, 0.1 ) }
    dend_10 { pt3dadd( 23.5058, -171.91, -33.0878, 0.1 ) }
    dend_10 { pt3dadd( 23.5481, -172.501, -33.0935, 0.1 ) }
    dend_10 { pt3dadd( 23.5587, -172.768, -33.1, 0.1 ) }
    dend_10 { pt3dadd( 23.5743, -173.369, -33.1186, 0.1 ) }
    dend_10 { pt3dadd( 23.6062, -173.902, -33.1694, 0.14 ) }
    dend_10 { pt3dadd( 23.6617, -174.427, -33.2428, 0.28 ) }
    dend_10 { pt3dadd( 23.7545, -175.003, -33.3375, 0.42 ) }
    dend_10 { pt3dadd( 23.8736, -175.583, -33.4405, 0.28 ) }
    dend_10 { pt3dadd( 23.9834, -176.089, -33.5354, 0.14 ) }
    dend_10 { pt3dadd( 24.2299, -177.133, -33.7366, 0.1 ) }
    dend_10 { pt3dadd( 24.3406, -177.654, -33.8045, 0.1 ) }
    dend_10 { pt3dadd( 24.4436, -178.176, -33.8322, 0.1 ) }
    dend_10 { pt3dadd( 24.5527, -178.699, -33.8419, 0.1 ) }
    dend_10 { pt3dadd( 24.6675, -179.277, -33.8198, 0.1 ) }
    dend_10 { pt3dadd( 24.704, -179.54, -33.7852, 0.1 ) }
    dend_10 { pt3dadd( 24.7507, -180.585, -33.4736, 0.1 ) }
    dend_10 { pt3dadd( 24.7484, -181.088, -33.2881, 0.14 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 49/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -13.6158, 139.382, 16.7771, 0.42 ) }
    dend_74 { pt3dadd( -13.5295, 139.906, 17.3944, 0.42 ) }
    dend_74 { pt3dadd( -13.4908, 140.084, 17.5909, 0.28 ) }
    dend_74 { pt3dadd( -13.3807, 140.454, 17.98, 0.14 ) }
    dend_74 { pt3dadd( -13.1924, 140.965, 18.4791, 0.1 ) }
    dend_74 { pt3dadd( -13.0343, 141.349, 18.8333, 0.1 ) }
    dend_74 { pt3dadd( -12.9446, 141.542, 19.0056, 0.1 ) }
    dend_74 { pt3dadd( -12.8304, 141.735, 19.1629, 0.14 ) }
    dend_74 { pt3dadd( -12.6402, 142.036, 19.4023, 0.28 ) }
    dend_74 { pt3dadd( -12.374, 142.416, 19.6882, 0.14 ) }
    dend_74 { pt3dadd( -12.2206, 142.606, 19.8126, 0.1 ) }
    dend_74 { pt3dadd( -11.9915, 142.889, 20.0398, 0.14 ) }
    dend_74 { pt3dadd( -11.897, 143.007, 20.1611, 0.28 ) }
    dend_74 { pt3dadd( -11.7096, 143.241, 20.4673, 0.56 ) }
    dend_74 { pt3dadd( -11.7096, 143.241, 20.4673, 0.42 ) }
    dend_74 { pt3dadd( -11.6316, 143.333, 20.6164, 0.56 ) }
    dend_74 { pt3dadd( -11.3079, 143.705, 21.1692, 0.56 ) }
    dend_74 { pt3dadd( -11.1054, 143.932, 21.4714, 0.42 ) }
    dend_74 { pt3dadd( -10.9073, 144.151, 21.7886, 0.28 ) }
    dend_74 { pt3dadd( -10.7038, 144.357, 22.105, 0.14 ) }
    dend_74 { pt3dadd( -10.568, 144.482, 22.3074, 0.1 ) }
    dend_74 { pt3dadd( -10.3458, 144.684, 22.6208, 0.1 ) }
    dend_74 { pt3dadd( -10.1095, 144.885, 22.9167, 0.1 ) }
    dend_74 { pt3dadd( -9.68758, 145.256, 23.4673, 0.14 ) }
    dend_74 { pt3dadd( -9.50249, 145.434, 23.7549, 0.28 ) }
    dend_74 { pt3dadd( -9.41926, 145.528, 23.9028, 0.42 ) }
    dend_74 { pt3dadd( -9.24, 145.742, 24.2357, 0.56 ) }
    dend_74 { pt3dadd( -9.07258, 145.96, 24.5646, 0.42 ) }
    dend_74 { pt3dadd( -8.96921, 146.109, 24.7703, 0.56 ) }
    dend_74 { pt3dadd( -8.65835, 146.602, 25.3341, 0.42 ) }
    dend_74 { pt3dadd( -8.51837, 146.868, 25.638, 0.28 ) }
    dend_74 { pt3dadd( -8.40674, 147.101, 25.9185, 0.14 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -13.6158, 139.382, 16.7771, 0.98 ) }
    dend_73 { pt3dadd( -13.8481, 140.192, 16.9512, 0.98 ) }
    dend_73 { pt3dadd( -13.9534, 140.595, 17.0202, 0.84 ) }
    dend_73 { pt3dadd( -14.0158, 141.01, 17.0397, 0.7 ) }
    dend_73 { pt3dadd( -14.0553, 141.423, 17.0324, 0.56 ) }
    dend_73 { pt3dadd( -14.085, 141.842, 17.0124, 0.42 ) }
    dend_73 { pt3dadd( -14.111, 142.262, 16.9864, 0.28 ) }
    dend_73 { pt3dadd( -14.1181, 142.679, 16.9319, 0.42 ) }
    dend_73 { pt3dadd( -14.1291, 143.554, 16.8138, 0.28 ) }
    dend_73 { pt3dadd( -14.1363, 143.973, 16.7591, 0.14 ) }
    dend_73 { pt3dadd( -14.1418, 144.386, 16.6821, 0.1 ) }
    dend_73 { pt3dadd( -14.1512, 144.798, 16.5911, 0.1 ) }
    dend_73 { pt3dadd( -14.1689, 145.207, 16.4958, 0.1 ) }
    dend_73 { pt3dadd( -14.2008, 145.618, 16.4034, 0.1 ) }
    dend_73 { pt3dadd( -14.2573, 146.023, 16.3483, 0.1 ) }
    dend_73 { pt3dadd( -14.3889, 146.896, 16.2702, 0.1 ) }
    dend_73 { pt3dadd( -14.4488, 147.307, 16.2542, 0.1 ) }
    dend_73 { pt3dadd( -14.5305, 147.717, 16.2892, 0.1 ) }
    dend_73 { pt3dadd( -14.6343, 148.116, 16.3806, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_73 { pt3dadd( -14.8809, 148.841, 16.6375, 0.1 ) }
    dend_73 { pt3dadd( -15.0264, 149.2, 16.8004, 0.1 ) }
    dend_73 { pt3dadd( -15.1037, 149.372, 16.8904, 0.1 ) }
    dend_73 { pt3dadd( -15.4442, 150.1, 17.2562, 0.1 ) }
    dend_73 { pt3dadd( -15.6145, 150.447, 17.4273, 0.1 ) }
    dend_73 { pt3dadd( -15.8104, 150.836, 17.5956, 0.1 ) }
    dend_73 { pt3dadd( -15.9898, 151.204, 17.6982, 0.1 ) }
    dend_73 { pt3dadd( -16.1751, 151.571, 17.7885, 0.1 ) }
    dend_73 { pt3dadd( -16.1751, 151.571, 17.7885, 0.14 ) }
    // Section: dend_71, id: dend_71, parent: dend_65 (entry count 9/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -8.32782, 82.4333, -4.58541, 0.28 ) }
    dend_71 { pt3dadd( -9.07533, 82.9969, -3.81885, 0.28 ) }
    dend_71 { pt3dadd( -9.66024, 83.625, -3.13834, 0.42 ) }
    dend_71 { pt3dadd( -9.66024, 83.625, -3.13834, 0.56 ) }
    dend_71 { pt3dadd( -10.1611, 84.5128, -2.49828, 0.28 ) }
    dend_71 { pt3dadd( -10.3846, 85.0628, -2.20113, 0.28 ) }
    dend_71 { pt3dadd( -10.5594, 85.6488, -1.96514, 0.14 ) }
    dend_71 { pt3dadd( -10.5749, 86.3064, -1.87607, 0.1 ) }
    dend_71 { pt3dadd( -10.5125, 86.894, -1.88304, 0.1 ) }
    dend_71 { pt3dadd( -10.4166, 87.4775, -1.93677, 0.1 ) }
    dend_71 { pt3dadd( -10.1171, 88.6155, -2.18961, 0.1 ) }
    dend_71 { pt3dadd( -9.95208, 89.1581, -2.35557, 0.1 ) }
    dend_71 { pt3dadd( -9.62216, 90.2993, -2.73087, 0.1 ) }
    dend_71 { pt3dadd( -9.47521, 90.8458, -2.90092, 0.1 ) }
    dend_71 { pt3dadd( -9.40792, 91.1271, -2.96794, 0.14 ) }
    dend_71 { pt3dadd( -9.20037, 92.3054, -3.09931, 0.1 ) }
    dend_71 { pt3dadd( -9.20037, 92.3054, -3.09931, 0.1 ) }
    dend_71 { pt3dadd( -9.16197, 93.4972, -2.89363, 0.1 ) }
    dend_71 { pt3dadd( -9.19199, 94.1371, -2.71242, 0.1 ) }
    dend_71 { pt3dadd( -9.2281, 94.7585, -2.51331, 0.1 ) }
    dend_71 { pt3dadd( -9.26979, 95.3858, -2.29431, 0.1 ) }
    dend_71 { pt3dadd( -9.32438, 95.9979, -2.07193, 0.14 ) }
    dend_71 { pt3dadd( -9.34064, 96.2732, -1.9932, 0.28 ) }
    dend_71 { pt3dadd( -9.34526, 96.8447, -1.87478, 0.28 ) }
    dend_71 { pt3dadd( -9.36957, 97.4265, -1.77452, 0.14 ) }
    dend_71 { pt3dadd( -9.41734, 98.0822, -1.68257, 0.1 ) }
    dend_71 { pt3dadd( -9.43169, 98.6714, -1.63966, 0.1 ) }
    dend_71 { pt3dadd( -9.4267, 99.2548, -1.62392, 0.1 ) }
    dend_71 { pt3dadd( -9.40744, 99.9203, -1.62305, 0.1 ) }
    dend_71 { pt3dadd( -9.37959, 100.513, -1.63675, 0.14 ) }
    dend_71 { pt3dadd( -9.35029, 101.102, -1.66425, 0.28 ) }
    dend_71 { pt3dadd( -9.34564, 102.344, -1.67925, 0.42 ) }
    dend_71 { pt3dadd( -9.36915, 102.937, -1.66022, 0.28 ) }
    dend_71 { pt3dadd( -9.42358, 103.524, -1.61846, 0.14 ) }
    dend_71 { pt3dadd( -9.51426, 104.107, -1.55772, 0.1 ) }
    dend_71 { pt3dadd( -9.62466, 104.67, -1.46767, 0.14 ) }
    dend_71 { pt3dadd( -9.8548, 105.88, -1.27855, 0.1 ) }
    dend_71 { pt3dadd( -9.94852, 106.459, -1.20778, 0.1 ) }
    dend_71 { pt3dadd( -9.98758, 107.051, -1.17946, 0.1 ) }
    dend_71 { pt3dadd( -9.9625, 107.64, -1.2086, 0.1 ) }
    dend_71 { pt3dadd( -9.87063, 108.28, -1.30765, 0.1 ) }
    dend_71 { pt3dadd( -9.62012, 109.427, -1.59473, 0.1 ) }
    dend_71 { pt3dadd( -9.36673, 110.4, -1.91261, 0.14 ) }
    dend_71 { pt3dadd( -9.36673, 110.4, -1.91261, 0.28 ) }
    dend_71 { pt3dadd( -9.32995, 110.98, -2.01629, 0.7 ) }
    dend_71 { pt3dadd( -9.39021, 111.57, -2.05004, 0.56 ) }
    dend_71 { pt3dadd( -9.5356, 112.131, -2.01788, 0.42 ) }
    dend_71 { pt3dadd( -9.73488, 112.684, -1.93463, 0.28 ) }
    dend_71 { pt3dadd( -10.169, 113.794, -1.73557, 0.14 ) }
    dend_71 { pt3dadd( -10.3763, 114.343, -1.64419, 0.28 ) }
    dend_71 { pt3dadd( -10.5757, 114.893, -1.56028, 0.14 ) }
    dend_71 { pt3dadd( -10.7631, 115.449, -1.48845, 0.1 ) }
    dend_71 { pt3dadd( -10.931, 116.005, -1.43476, 0.1 ) }
    dend_71 { pt3dadd( -11.0779, 116.577, -1.40363, 0.1 ) }
    dend_71 { pt3dadd( -11.1746, 117.162, -1.43775, 0.1 ) }
    dend_71 { pt3dadd( -11.2525, 117.744, -1.50164, 0.1 ) }
    dend_71 { pt3dadd( -11.3166, 118.328, -1.58885, 0.1 ) }
    dend_71 { pt3dadd( -11.3694, 118.907, -1.69289, 0.1 ) }
    dend_71 { pt3dadd( -11.4104, 119.477, -1.81271, 0.14 ) }
    dend_71 { pt3dadd( -11.4799, 120.684, -2.09497, 0.28 ) }
    dend_71 { pt3dadd( -11.4682, 121.253, -2.25329, 0.42 ) }
    dend_71 { pt3dadd( -11.4218, 121.82, -2.42431, 0.28 ) }
    dend_71 { pt3dadd( -11.3884, 122.1, -2.50809, 0.42 ) }
    dend_71 { pt3dadd( -11.3544, 122.38, -2.59107, 0.56 ) }
    dend_71 { pt3dadd( -11.343, 122.957, -2.71872, 0.84 ) }
    dend_71 { pt3dadd( -11.5194, 124.18, -2.87417, 0.7 ) }
    dend_71 { pt3dadd( -11.6514, 124.742, -2.94147, 0.56 ) }
    dend_71 { pt3dadd( -11.8782, 125.29, -2.95679, 0.56 ) }
    dend_71 { pt3dadd( -12.0759, 125.65, -2.93647, 0.42 ) }
    dend_71 { pt3dadd( -12.7277, 126.706, -2.78839, 0.28 ) }
    dend_71 { pt3dadd( -13.0984, 127.235, -2.66984, 0.14 ) }
    dend_71 { pt3dadd( -13.0984, 127.235, -2.66984, 0.14 ) }
    dend_71 { pt3dadd( -13.7007, 128.246, -2.41871, 0.1 ) }
    dend_71 { pt3dadd( -13.9235, 128.787, -2.31562, 0.1 ) }
    dend_71 { pt3dadd( -14.0628, 129.432, -2.22536, 0.1 ) }
    dend_71 { pt3dadd( -14.0985, 130.023, -2.18083, 0.1 ) }
    dend_71 { pt3dadd( -14.0918, 130.602, -2.14313, 0.1 ) }
    dend_71 { pt3dadd( -14.0027, 131.843, -2.08044, 0.1 ) }
    dend_71 { pt3dadd( -13.9137, 132.427, -2.07037, 0.1 ) }
    dend_71 { pt3dadd( -13.8104, 133.073, -2.05876, 0.14 ) }
    dend_71 { pt3dadd( -13.7294, 133.658, -2.04917, 0.14 ) }
    dend_71 { pt3dadd( -13.674, 134.319, -2.03445, 0.1 ) }
    dend_71 { pt3dadd( -13.6798, 134.616, -2.02506, 0.14 ) }
    dend_71 { pt3dadd( -13.7051, 134.912, -2.03517, 0.28 ) }
    dend_71 { pt3dadd( -13.734, 135.563, -2.11149, 0.84 ) }
    dend_71 { pt3dadd( -13.7408, 136.15, -2.20222, 0.7 ) }
    dend_71 { pt3dadd( -13.7246, 136.8, -2.29341, 0.56 ) }
    dend_71 { pt3dadd( -13.7009, 137.378, -2.3715, 0.42 ) }
    dend_71 { pt3dadd( -13.6439, 138.578, -2.50559, 0.28 ) }
    dend_71 { pt3dadd( -13.6051, 139.241, -2.55572, 0.14 ) }
    dend_71 { pt3dadd( -13.5546, 139.892, -2.5777, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_71 { pt3dadd( -13.5019, 140.553, -2.56782, 0.1 ) }
    dend_71 { pt3dadd( -13.5019, 140.553, -2.56782, 0.14 ) }
    dend_71 { pt3dadd( -13.4767, 141.137, -2.48257, 0.1 ) }
    dend_71 { pt3dadd( -13.4421, 141.72, -2.38752, 0.1 ) }
    dend_71 { pt3dadd( -13.384, 142.297, -2.32233, 0.1 ) }
    dend_71 { pt3dadd( -13.3104, 142.957, -2.28385, 0.1 ) }
    dend_71 { pt3dadd( -13.237, 143.617, -2.27108, 0.1 ) }
    dend_71 { pt3dadd( -13.2079, 144.272, -2.25093, 0.1 ) }
    dend_71 { pt3dadd( -13.2303, 145.405, -2.20801, 0.14 ) }
    dend_71 { pt3dadd( -13.2874, 145.996, -2.18419, 0.28 ) }
    dend_71 { pt3dadd( -13.4015, 146.642, -2.15948, 0.42 ) }
    dend_71 { pt3dadd( -13.5584, 147.211, -2.14206, 0.28 ) }
    dend_71 { pt3dadd( -13.9852, 148.381, -2.09919, 0.14 ) }
    dend_71 { pt3dadd( -14.2157, 148.913, -2.06825, 0.1 ) }
    dend_71 { pt3dadd( -14.4345, 149.464, -2.03724, 0.1 ) }
    dend_71 { pt3dadd( -14.4345, 149.464, -2.03724, 0.1 ) }
    dend_71 { pt3dadd( -14.5201, 150.049, -2.05153, 0.1 ) }
    dend_71 { pt3dadd( -14.5501, 150.64, -2.09523, 0.1 ) }
    dend_71 { pt3dadd( -14.5353, 151.227, -2.16126, 0.1 ) }
    dend_71 { pt3dadd( -14.5068, 152.461, -2.29914, 0.1 ) }
    dend_71 { pt3dadd( -14.4951, 153.051, -2.36418, 0.1 ) }
    dend_71 { pt3dadd( -14.4938, 153.639, -2.42376, 0.14 ) }
    dend_71 { pt3dadd( -14.5067, 154.23, -2.47668, 0.28 ) }
    dend_71 { pt3dadd( -14.5023, 154.818, -2.53795, 0.14 ) }
    dend_71 { pt3dadd( -14.4971, 155.398, -2.59889, 0.1 ) }
    dend_71 { pt3dadd( -14.4971, 155.398, -2.59889, 0.14 ) }
    dend_71 { pt3dadd( -14.4729, 155.987, -2.64396, 0.84 ) }
    dend_71 { pt3dadd( -14.4665, 156.58, -2.65807, 0.7 ) }
    dend_71 { pt3dadd( -14.5007, 157.826, -2.62694, 0.56 ) }
    dend_71 { pt3dadd( -14.5256, 158.415, -2.58271, 0.42 ) }
    dend_71 { pt3dadd( -14.6069, 159.053, -2.46816, 0.28 ) }
    dend_71 { pt3dadd( -14.7316, 159.61, -2.3154, 0.14 ) }
    dend_71 { pt3dadd( -15.0924, 160.692, -1.91199, 0.1 ) }
    dend_71 { pt3dadd( -15.3123, 161.193, -1.68856, 0.14 ) }
    dend_71 { pt3dadd( -15.4921, 161.53, -1.52469, 0.28 ) }
    dend_71 { pt3dadd( -16.0199, 162.519, -1.07251, 0.56 ) }
    dend_71 { pt3dadd( -16.2885, 163.003, -0.856988, 0.7 ) }
    dend_71 { pt3dadd( -16.5456, 163.495, -0.65446, 0.56 ) }
    dend_71 { pt3dadd( -16.7662, 164.02, -0.498476, 0.42 ) }
    dend_71 { pt3dadd( -16.9866, 164.555, -0.362155, 0.28 ) }
    dend_71 { pt3dadd( -17.0864, 164.82, -0.318104, 0.14 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 41/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -8.32782, 82.4333, -4.58541, 0.1 ) }
    dend_66 { pt3dadd( -8.63839, 82.3326, -4.75053, 0.1 ) }
    dend_66 { pt3dadd( -8.94743, 82.2325, -4.91484, 0.14 ) }
    dend_66 { pt3dadd( -9.10271, 82.1821, -4.9974, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 45/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 28.8889, -185.839, -11.2107, 1.12 ) }
    dend_28 { pt3dadd( 28.5622, -186.619, -10.7626, 1.12 ) }
    dend_28 { pt3dadd( 28.4515, -186.896, -10.6353, 0.98 ) }
    dend_28 { pt3dadd( 28.385, -187.108, -10.5785, 0.84 ) }
    dend_28 { pt3dadd( 28.2443, -187.973, -10.5575, 1.12 ) }
    dend_28 { pt3dadd( 28.2004, -188.475, -10.5698, 0.98 ) }
    dend_28 { pt3dadd( 28.1703, -188.985, -10.5437, 0.84 ) }
    dend_28 { pt3dadd( 28.1846, -189.306, -10.5441, 0.84 ) }
    dend_28 { pt3dadd( 28.3086, -190.23, -10.509, 0.7 ) }
    dend_28 { pt3dadd( 28.5017, -191.167, -10.4592, 0.84 ) }
    dend_28 { pt3dadd( 28.7223, -191.982, -10.4215, 0.84 ) }
    dend_28 { pt3dadd( 28.9823, -192.869, -10.303, 0.84 ) }
    dend_28 { pt3dadd( 29.1089, -193.3, -10.213, 0.7 ) }
    dend_28 { pt3dadd( 29.2384, -193.773, -10.0889, 0.56 ) }
    dend_28 { pt3dadd( 29.2825, -193.989, -10.0251, 0.7 ) }
    dend_28 { pt3dadd( 29.3343, -194.293, -9.95403, 0.56 ) }
    dend_28 { pt3dadd( 29.4027, -194.743, -9.92789, 0.7 ) }
    dend_28 { pt3dadd( 29.449, -195.196, -9.94591, 0.84 ) }
    dend_28 { pt3dadd( 29.4797, -195.649, -10.0044, 0.84 ) }
    dend_28 { pt3dadd( 29.492, -196.152, -10.1085, 0.98 ) }
    dend_28 { pt3dadd( 29.5009, -196.588, -10.2211, 0.84 ) }
    dend_28 { pt3dadd( 29.5214, -197.212, -10.4051, 0.84 ) }
    dend_28 { pt3dadd( 29.5253, -197.52, -10.4815, 0.98 ) }
    dend_28 { pt3dadd( 29.5359, -198.35, -10.6365, 0.84 ) }
    dend_28 { pt3dadd( 29.552, -198.672, -10.6729, 1.12 ) }
    dend_28 { pt3dadd( 29.6048, -199.124, -10.6807, 1.12 ) }
    dend_28 { pt3dadd( 29.6825, -199.566, -10.647, 0.98 ) }
    dend_28 { pt3dadd( 29.9001, -200.461, -10.5028, 0.84 ) }
    dend_28 { pt3dadd( 30.0057, -200.895, -10.4114, 0.7 ) }
    dend_28 { pt3dadd( 30.0762, -201.201, -10.334, 0.56 ) }
    dend_28 { pt3dadd( 30.195, -201.639, -10.2702, 0.98 ) }
    dend_28 { pt3dadd( 30.3034, -202.08, -10.2276, 0.98 ) }
    dend_28 { pt3dadd( 30.3919, -202.524, -10.1768, 0.98 ) }
    dend_28 { pt3dadd( 30.4442, -202.835, -10.1444, 0.84 ) }
    dend_28 { pt3dadd( 30.4976, -203.284, -10.0713, 0.7 ) }
    dend_28 { pt3dadd( 30.574, -204.194, -9.88491, 0.84 ) }
    dend_28 { pt3dadd( 30.6621, -205.052, -9.74069, 0.84 ) }
    dend_28 { pt3dadd( 30.7858, -205.969, -9.62422, 0.98 ) }
    dend_28 { pt3dadd( 30.8774, -206.41, -9.62678, 0.98 ) }
    dend_28 { pt3dadd( 30.9392, -206.626, -9.65397, 0.98 ) }
    dend_28 { pt3dadd( 31.0824, -207.05, -9.75131, 0.84 ) }
    dend_28 { pt3dadd( 31.42, -207.883, -9.99864, 0.98 ) }
    dend_28 { pt3dadd( 31.6049, -208.273, -10.1529, 0.98 ) }
    dend_28 { pt3dadd( 31.9943, -209.049, -10.4919, 0.84 ) }
    dend_28 { pt3dadd( 32.1828, -209.43, -10.6395, 0.84 ) }
    dend_28 { pt3dadd( 32.3779, -209.824, -10.7607, 0.84 ) }
    dend_28 { pt3dadd( 32.5898, -210.279, -10.828, 0.84 ) }
    dend_28 { pt3dadd( 32.7733, -210.698, -10.8051, 0.84 ) }
    dend_28 { pt3dadd( 32.9569, -211.108, -10.7292, 0.98 ) }
    dend_28 { pt3dadd( 33.1425, -211.507, -10.6035, 0.84 ) }
    dend_28 { pt3dadd( 33.3685, -211.943, -10.4792, 0.98 ) }
    dend_28 { pt3dadd( 33.7585, -212.672, -10.3021, 0.56 ) }
    dend_28 { pt3dadd( 34.0058, -213.112, -10.26, 0.7 ) }
    dend_28 { pt3dadd( 34.2678, -213.551, -10.2896, 0.84 ) }
    dend_28 { pt3dadd( 34.5155, -213.981, -10.3895, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_28 { pt3dadd( 34.887, -214.714, -10.5843, 0.84 ) }
    dend_28 { pt3dadd( 35.006, -215.007, -10.6703, 0.84 ) }
    dend_28 { pt3dadd( 35.2813, -215.874, -10.88, 0.7 ) }
    dend_28 { pt3dadd( 35.3531, -216.314, -10.9206, 0.84 ) }
    dend_28 { pt3dadd( 35.3688, -216.825, -10.892, 0.84 ) }
    dend_28 { pt3dadd( 35.3552, -217.753, -10.8034, 0.7 ) }
    dend_28 { pt3dadd( 35.3315, -218.251, -10.7308, 0.56 ) }
    dend_28 { pt3dadd( 35.2924, -219.086, -10.6098, 0.42 ) }
    dend_28 { pt3dadd( 35.261, -219.591, -10.5317, 0.42 ) }
    dend_28 { pt3dadd( 35.2307, -220.091, -10.4756, 0.56 ) }
    dend_28 { pt3dadd( 35.2052, -221.023, -10.4625, 0.56 ) }
    dend_28 { pt3dadd( 35.213, -221.341, -10.5236, 0.84 ) }
    dend_28 { pt3dadd( 35.2488, -221.772, -10.6654, 0.84 ) }
    dend_28 { pt3dadd( 35.2784, -221.973, -10.7711, 0.98 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 28.8889, -185.839, -11.2107, 0.14 ) }
    dend_27 { pt3dadd( 29.1419, -186.11, -11.0775, 0.14 ) }
    dend_27 { pt3dadd( 29.5567, -186.54, -10.8574, 0.28 ) }
    dend_27 { pt3dadd( 29.7821, -186.811, -10.6831, 0.42 ) }
    dend_27 { pt3dadd( 30.1136, -187.257, -10.3717, 0.28 ) }
    dend_27 { pt3dadd( 30.4211, -187.718, -10.0568, 0.14 ) }
    dend_27 { pt3dadd( 30.6087, -188.015, -9.86086, 0.14 ) }
    dend_27 { pt3dadd( 30.7807, -188.314, -9.67047, 0.28 ) }
    dend_27 { pt3dadd( 31.2263, -189.118, -9.16217, 0.28 ) }
    dend_27 { pt3dadd( 31.4941, -189.605, -8.86664, 0.14 ) }
    dend_27 { pt3dadd( 31.7534, -190.038, -8.60196, 0.1 ) }
    dend_27 { pt3dadd( 32.0644, -190.509, -8.32219, 0.1 ) }
    dend_27 { pt3dadd( 32.403, -190.97, -8.05952, 0.14 ) }
    dend_27 { pt3dadd( 32.6415, -191.255, -7.90367, 0.28 ) }
    dend_27 { pt3dadd( 33.0557, -191.674, -7.68276, 0.14 ) }
    dend_27 { pt3dadd( 33.4913, -192.077, -7.44577, 0.1 ) }
    dend_27 { pt3dadd( 33.937, -192.446, -7.19818, 0.1 ) }
    dend_27 { pt3dadd( 34.2439, -192.668, -7.06152, 0.1 ) }
    dend_27 { pt3dadd( 34.567, -192.878, -6.94473, 0.1 ) }
    dend_27 { pt3dadd( 34.8965, -193.079, -6.8442, 0.1 ) }
    dend_27 { pt3dadd( 35.2364, -193.275, -6.75398, 0.1 ) }
    dend_27 { pt3dadd( 35.9122, -193.662, -6.58621, 0.14 ) }
    dend_27 { pt3dadd( 36.8418, -194.178, -6.35353, 0.28 ) }
    dend_27 { pt3dadd( 37.5211, -194.561, -6.16907, 0.14 ) }
    dend_27 { pt3dadd( 37.8602, -194.754, -6.07097, 0.1 ) }
    dend_27 { pt3dadd( 38.1892, -194.945, -5.96859, 0.1 ) }
    dend_27 { pt3dadd( 38.8519, -195.35, -5.73863, 0.14 ) }
    dend_27 { pt3dadd( 39.1566, -195.565, -5.61162, 0.28 ) }
    dend_27 { pt3dadd( 39.7048, -196.059, -5.31187, 0.14 ) }
    dend_27 { pt3dadd( 39.7048, -196.059, -5.31187, 0.28 ) }
    dend_27 { pt3dadd( 39.7048, -196.059, -5.31187, 0.42 ) }
    dend_27 { pt3dadd( 39.8469, -196.297, -5.24747, 0.56 ) }
    dend_27 { pt3dadd( 40.0807, -196.808, -5.15576, 0.42 ) }
    dend_27 { pt3dadd( 40.2997, -197.324, -5.07443, 0.28 ) }
    dend_27 { pt3dadd( 40.4049, -197.586, -5.03708, 0.28 ) }
    dend_27 { pt3dadd( 40.4049, -197.586, -5.03708, 0.28 ) }
    dend_27 { pt3dadd( 40.528, -197.835, -4.98638, 0.28 ) }
    dend_27 { pt3dadd( 40.83, -198.38, -4.85406, 0.14 ) }
    dend_27 { pt3dadd( 41.1432, -198.907, -4.71236, 0.1 ) }
    dend_27 { pt3dadd( 41.4315, -199.38, -4.58039, 0.1 ) }
    dend_27 { pt3dadd( 41.7454, -199.907, -4.43814, 0.1 ) }
    dend_27 { pt3dadd( 42.0482, -200.443, -4.3043, 0.14 ) }
    dend_27 { pt3dadd( 42.3385, -200.996, -4.18064, 0.28 ) }
    dend_27 { pt3dadd( 42.456, -201.248, -4.134, 0.42 ) }
    dend_27 { pt3dadd( 42.5756, -201.506, -4.11437, 0.28 ) }
    dend_27 { pt3dadd( 42.8178, -202.021, -4.11845, 0.14 ) }
    dend_27 { pt3dadd( 43.0479, -202.526, -4.16579, 0.1 ) }
    dend_27 { pt3dadd( 43.2748, -203.039, -4.24759, 0.1 ) }
    dend_27 { pt3dadd( 43.4985, -203.553, -4.34755, 0.1 ) }
    dend_27 { pt3dadd( 43.9541, -204.599, -4.55126, 0.14 ) }
    dend_27 { pt3dadd( 43.9541, -204.599, -4.55126, 0.28 ) }
    dend_27 { pt3dadd( 44.0763, -204.854, -4.58235, 0.56 ) }
    dend_27 { pt3dadd( 44.333, -205.359, -4.60511, 0.42 ) }
    dend_27 { pt3dadd( 44.5922, -205.855, -4.59075, 0.28 ) }
    dend_27 { pt3dadd( 44.8488, -206.357, -4.54087, 0.14 ) }
    dend_27 { pt3dadd( 45.1173, -206.925, -4.43325, 0.1 ) }
    dend_27 { pt3dadd( 45.3925, -207.488, -4.32084, 0.14 ) }
    dend_27 { pt3dadd( 45.6773, -208.037, -4.20022, 0.1 ) }
    dend_27 { pt3dadd( 45.6773, -208.037, -4.20022, 0.14 ) }
    dend_27 { pt3dadd( 46.0678, -208.527, -4.13761, 0.1 ) }
    dend_27 { pt3dadd( 46.5029, -208.99, -4.18923, 0.14 ) }
    dend_27 { pt3dadd( 46.5029, -208.99, -4.18923, 0.28 ) }
    dend_27 { pt3dadd( 46.6924, -209.196, -4.22205, 0.56 ) }
    dend_27 { pt3dadd( 47.1022, -209.681, -4.27066, 0.42 ) }
    dend_27 { pt3dadd( 47.9108, -210.55, -4.40972, 0.28 ) }
    dend_27 { pt3dadd( 48.296, -210.946, -4.48112, 0.14 ) }
    dend_27 { pt3dadd( 48.7391, -211.395, -4.56422, 0.1 ) }
    dend_27 { pt3dadd( 49.1794, -211.848, -4.65216, 0.1 ) }
    dend_27 { pt3dadd( 49.5566, -212.253, -4.731, 0.1 ) }
    dend_27 { pt3dadd( 50.2157, -213.058, -4.87006, 0.1 ) }
    dend_27 { pt3dadd( 50.2157, -213.058, -4.87006, 0.1 ) }
    dend_27 { pt3dadd( 50.371, -213.294, -4.87952, 0.1 ) }
    dend_27 { pt3dadd( 50.6535, -213.777, -4.88131, 0.1 ) }
    dend_27 { pt3dadd( 50.9218, -214.275, -4.85001, 0.1 ) }
    dend_27 { pt3dadd( 51.1822, -214.776, -4.77928, 0.1 ) }
    dend_27 { pt3dadd( 51.4617, -215.329, -4.66268, 0.1 ) }
    dend_27 { pt3dadd( 51.7596, -215.868, -4.53236, 0.14 ) }
    dend_27 { pt3dadd( 52.0494, -216.34, -4.3993, 0.1 ) }
    dend_27 { pt3dadd( 52.4166, -216.834, -4.26801, 0.1 ) }
    dend_27 { pt3dadd( 52.8276, -217.296, -4.14776, 0.1 ) }
    dend_27 { pt3dadd( 53.1226, -217.567, -4.074, 0.1 ) }
    dend_27 { pt3dadd( 53.6204, -217.936, -3.96097, 0.1 ) }
    dend_27 { pt3dadd( 53.9705, -218.13, -3.9151, 0.14 ) }
    dend_27 { pt3dadd( 54.9689, -218.555, -3.83545, 0.28 ) }
    dend_27 { pt3dadd( 55.237, -218.65, -3.82301, 0.7 ) }
    dend_27 { pt3dadd( 55.8377, -218.833, -3.79369, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_27 { pt3dadd( 56.4489, -219.004, -3.74317, 0.42 ) }
    dend_27 { pt3dadd( 57.4902, -219.284, -3.60651, 0.28 ) }
    dend_27 { pt3dadd( 57.8694, -219.393, -3.52583, 0.7 ) }
    dend_27 { pt3dadd( 58.2357, -219.509, -3.40509, 0.7 ) }
    dend_27 { pt3dadd( 58.7955, -219.7, -3.19812, 0.56 ) }
    dend_27 { pt3dadd( 59.3732, -219.889, -3.00326, 0.42 ) }
    dend_27 { pt3dadd( 59.7296, -220.005, -2.88278, 0.28 ) }
    dend_27 { pt3dadd( 60.2966, -220.191, -2.65545, 0.14 ) }
    dend_27 { pt3dadd( 60.8605, -220.366, -2.44523, 0.1 ) }
    dend_27 { pt3dadd( 61.2284, -220.475, -2.32282, 0.1 ) }
    dend_27 { pt3dadd( 62.3407, -220.797, -2.02464, 0.1 ) }
    dend_27 { pt3dadd( 62.7144, -220.899, -1.95406, 0.14 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 62.6302, -174.563, -30.3541, 0.1 ) }
    dend_22 { pt3dadd( 62.8713, -175.296, -30.1809, 0.1 ) }
    dend_22 { pt3dadd( 63.0044, -175.694, -30.1074, 0.1 ) }
    dend_22 { pt3dadd( 63.1514, -176.141, -30.0428, 0.1 ) }
    dend_22 { pt3dadd( 63.282, -176.547, -29.9966, 0.1 ) }
    dend_22 { pt3dadd( 63.4327, -176.994, -29.9489, 0.1 ) }
    dend_22 { pt3dadd( 63.5692, -177.391, -29.9094, 0.1 ) }
    dend_22 { pt3dadd( 63.721, -177.789, -29.8967, 0.1 ) }
    dend_22 { pt3dadd( 63.8688, -178.192, -29.8869, 0.1 ) }
    dend_22 { pt3dadd( 64.0061, -178.596, -29.8831, 0.1 ) }
    dend_22 { pt3dadd( 64.1052, -178.881, -29.9075, 0.1 ) }
    dend_22 { pt3dadd( 64.1732, -179.079, -29.9418, 0.7 ) }
    dend_22 { pt3dadd( 64.3117, -179.475, -30.0336, 0.7 ) }
    dend_22 { pt3dadd( 64.4479, -179.865, -30.1398, 0.56 ) }
    dend_22 { pt3dadd( 64.5806, -180.256, -30.2547, 0.7 ) }
    dend_22 { pt3dadd( 64.847, -181.075, -30.5042, 0.56 ) }
    dend_22 { pt3dadd( 64.967, -181.469, -30.6226, 0.42 ) }
    dend_22 { pt3dadd( 65.0851, -181.865, -30.7321, 0.28 ) }
    dend_22 { pt3dadd( 65.2012, -182.266, -30.8299, 0.14 ) }
    dend_22 { pt3dadd( 65.3183, -182.662, -30.9023, 0.28 ) }
    dend_22 { pt3dadd( 65.3784, -182.866, -30.9242, 0.28 ) }
    dend_22 { pt3dadd( 65.4954, -183.277, -30.9326, 0.28 ) }
    dend_22 { pt3dadd( 65.6237, -183.686, -30.9346, 0.14 ) }
    dend_22 { pt3dadd( 65.7588, -184.091, -30.9321, 0.1 ) }
    dend_22 { pt3dadd( 65.9138, -184.539, -30.9265, 0.1 ) }
    dend_22 { pt3dadd( 66.0767, -184.935, -30.9426, 0.1 ) }
    dend_22 { pt3dadd( 66.2531, -185.322, -30.9761, 0.1 ) }
    dend_22 { pt3dadd( 66.4649, -185.749, -31.03, 0.1 ) }
    dend_22 { pt3dadd( 66.6616, -186.123, -31.0919, 0.14 ) }
    dend_22 { pt3dadd( 66.8572, -186.486, -31.1658, 0.28 ) }
    dend_22 { pt3dadd( 67.266, -187.267, -31.3494, 0.42 ) }
    dend_22 { pt3dadd( 67.463, -187.635, -31.4349, 0.84 ) }
    dend_22 { pt3dadd( 67.463, -187.635, -31.4349, 0.7 ) }
    dend_22 { pt3dadd( 67.5495, -187.831, -31.4519, 0.28 ) }
    dend_22 { pt3dadd( 67.6861, -188.23, -31.3878, 0.14 ) }
    dend_22 { pt3dadd( 67.7604, -188.615, -31.2143, 0.1 ) }
    dend_22 { pt3dadd( 67.7839, -189.0, -30.9383, 0.1 ) }
    dend_22 { pt3dadd( 67.7897, -189.332, -30.6667, 0.1 ) }
    dend_22 { pt3dadd( 67.7605, -189.991, -30.0593, 0.1 ) }
    dend_22 { pt3dadd( 67.7154, -190.627, -29.4277, 0.1 ) }
    dend_22 { pt3dadd( 67.6854, -191.183, -28.8664, 0.1 ) }
    dend_22 { pt3dadd( 67.6707, -191.827, -28.2421, 0.1 ) }
    dend_22 { pt3dadd( 67.6767, -192.145, -27.9547, 0.1 ) }
    dend_22 { pt3dadd( 67.7726, -192.786, -27.5, 0.1 ) }
    dend_22 { pt3dadd( 68.0422, -193.173, -27.5448, 0.1 ) }
    dend_22 { pt3dadd( 68.6368, -193.738, -27.9078, 0.1 ) }
    dend_22 { pt3dadd( 69.2297, -194.231, -28.3196, 0.1 ) }
    dend_22 { pt3dadd( 69.7922, -194.659, -28.7295, 0.1 ) }
    dend_22 { pt3dadd( 70.0933, -194.88, -28.9403, 0.1 ) }
    dend_22 { pt3dadd( 70.6666, -195.312, -29.3301, 0.1 ) }
    dend_22 { pt3dadd( 70.8173, -195.432, -29.425, 0.1 ) }
    dend_22 { pt3dadd( 71.1529, -195.713, -29.6071, 0.1 ) }
    dend_22 { pt3dadd( 71.4897, -196.015, -29.7661, 0.1 ) }
    dend_22 { pt3dadd( 71.821, -196.311, -29.9316, 0.1 ) }
    dend_22 { pt3dadd( 72.1187, -196.574, -30.0929, 0.1 ) }
    dend_22 { pt3dadd( 72.6801, -197.062, -30.431, 0.1 ) }
    dend_22 { pt3dadd( 73.2972, -197.577, -30.8429, 0.1 ) }
    dend_22 { pt3dadd( 73.5775, -197.801, -31.0602, 0.1 ) }
    dend_22 { pt3dadd( 74.1692, -198.244, -31.5684, 0.1 ) }
    dend_22 { pt3dadd( 74.4485, -198.449, -31.8211, 0.14 ) }
    dend_22 { pt3dadd( 75.0333, -198.887, -32.3417, 0.28 ) }
    dend_22 { pt3dadd( 75.1701, -199.002, -32.4599, 0.14 ) }
    dend_22 { pt3dadd( 75.7244, -199.505, -32.9092, 0.1 ) }
    dend_22 { pt3dadd( 76.3066, -200.026, -33.355, 0.1 ) }
    dend_22 { pt3dadd( 76.4425, -200.158, -33.451, 0.1 ) }
    dend_22 { pt3dadd( 76.7458, -200.479, -33.6377, 0.1 ) }
    dend_22 { pt3dadd( 76.9972, -200.81, -33.7351, 0.1 ) }
    dend_22 { pt3dadd( 77.2444, -201.214, -33.7595, 0.1 ) }
    dend_22 { pt3dadd( 77.6155, -202.02, -33.6115, 0.14 ) }
    dend_22 { pt3dadd( 77.7547, -202.407, -33.496, 0.28 ) }
    dend_22 { pt3dadd( 78.0169, -203.129, -33.3083, 0.84 ) }
    dend_22 { pt3dadd( 78.327, -203.962, -33.1911, 0.7 ) }
    dend_22 { pt3dadd( 78.4818, -204.362, -33.1785, 0.56 ) }
    dend_22 { pt3dadd( 78.6622, -204.792, -33.2663, 0.42 ) }
    dend_22 { pt3dadd( 78.8277, -205.157, -33.4175, 0.28 ) }
    dend_22 { pt3dadd( 79.1809, -205.799, -33.8923, 0.14 ) }
    dend_22 { pt3dadd( 79.5411, -206.403, -34.4475, 0.1 ) }
    dend_22 { pt3dadd( 79.626, -206.533, -34.5922, 0.1 ) }
    dend_22 { pt3dadd( 79.9797, -207.073, -35.2195, 0.1 ) }
    dend_22 { pt3dadd( 80.1376, -207.333, -35.5182, 0.1 ) }
    dend_22 { pt3dadd( 80.4566, -207.912, -36.123, 0.1 ) }
    dend_22 { pt3dadd( 80.5995, -208.218, -36.3841, 0.1 ) }
    dend_22 { pt3dadd( 80.8838, -208.893, -36.8607, 0.1 ) }
    dend_22 { pt3dadd( 81.0186, -209.238, -37.0724, 0.1 ) }
    dend_22 { pt3dadd( 81.1583, -209.647, -37.2614, 0.1 ) }
    dend_22 { pt3dadd( 81.2765, -210.033, -37.4012, 0.1 ) }
    dend_22 { pt3dadd( 81.3948, -210.426, -37.5176, 0.1 ) }
    dend_22 { pt3dadd( 81.4562, -210.623, -37.5759, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_22 { pt3dadd( 81.5099, -210.827, -37.6136, 0.56 ) }
    dend_22 { pt3dadd( 81.6189, -211.235, -37.6744, 0.42 ) }
    dend_22 { pt3dadd( 81.7382, -211.637, -37.7118, 0.28 ) }
    dend_22 { pt3dadd( 81.9626, -212.395, -37.7489, 0.14 ) }
    dend_22 { pt3dadd( 82.0824, -212.806, -37.7534, 0.1 ) }
    dend_22 { pt3dadd( 82.3125, -213.563, -37.7299, 0.1 ) }
    dend_22 { pt3dadd( 82.4381, -213.97, -37.7035, 0.1 ) }
    dend_22 { pt3dadd( 82.585, -214.418, -37.6559, 0.1 ) }
    dend_22 { pt3dadd( 82.7197, -214.822, -37.6011, 0.1 ) }
    dend_22 { pt3dadd( 82.8521, -215.222, -37.5392, 0.1 ) }
    dend_22 { pt3dadd( 83.0144, -215.671, -37.4935, 0.1 ) }
    dend_22 { pt3dadd( 83.1684, -216.069, -37.4794, 0.1 ) }
    dend_22 { pt3dadd( 83.3327, -216.514, -37.468, 0.14 ) }
    dend_22 { pt3dadd( 83.4782, -216.917, -37.4596, 0.28 ) }
    dend_22 { pt3dadd( 83.6207, -217.311, -37.4512, 0.14 ) }
    dend_22 { pt3dadd( 83.7624, -217.716, -37.4451, 0.1 ) }
    dend_22 { pt3dadd( 83.8951, -218.122, -37.444, 0.1 ) }
    dend_22 { pt3dadd( 84.026, -218.53, -37.4445, 0.1 ) }
    dend_22 { pt3dadd( 84.1132, -218.813, -37.4468, 0.1 ) }
    dend_22 { pt3dadd( 84.2427, -219.222, -37.4481, 0.84 ) }
    dend_22 { pt3dadd( 84.3752, -219.628, -37.4472, 0.7 ) }
    dend_22 { pt3dadd( 84.5108, -220.033, -37.4444, 0.56 ) }
    dend_22 { pt3dadd( 84.5108, -220.033, -37.4444, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 23/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 62.6302, -174.563, -30.3541, 0.28 ) }
    dend_21 { pt3dadd( 63.3604, -174.981, -28.3668, 0.28 ) }
    dend_21 { pt3dadd( 63.7532, -175.206, -27.3251, 0.14 ) }
    dend_21 { pt3dadd( 64.1677, -175.443, -26.2907, 0.1 ) }
    dend_21 { pt3dadd( 64.5829, -175.68, -25.2547, 0.1 ) }
    dend_21 { pt3dadd( 65.0732, -175.96, -24.0314, 0.1 ) }
    dend_21 { pt3dadd( 65.4865, -176.196, -23.0002, 0.14 ) }
    dend_21 { pt3dadd( 65.9428, -176.455, -21.9891, 0.28 ) }
    dend_21 { pt3dadd( 66.1196, -176.555, -21.614, 0.42 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 32/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 24.7484, -181.088, -33.2881, 0.14 ) }
    dend_12 { pt3dadd( 25.2402, -181.188, -33.5078, 0.14 ) }
    dend_12 { pt3dadd( 26.0477, -181.341, -33.845, 0.28 ) }
    dend_12 { pt3dadd( 27.4476, -181.591, -34.3514, 0.14 ) }
    dend_12 { pt3dadd( 28.2791, -181.743, -34.6156, 0.1 ) }
    dend_12 { pt3dadd( 28.8079, -181.842, -34.7719, 0.1 ) }
    dend_12 { pt3dadd( 30.374, -182.158, -35.2087, 0.1 ) }
    dend_12 { pt3dadd( 31.2113, -182.353, -35.4214, 0.1 ) }
    dend_12 { pt3dadd( 32.034, -182.604, -35.5803, 0.1 ) }
    dend_12 { pt3dadd( 32.5558, -182.804, -35.6186, 0.1 ) }
    dend_12 { pt3dadd( 32.5558, -182.804, -35.6186, 0.1 ) }
    dend_12 { pt3dadd( 32.8907, -183.014, -35.5986, 0.1 ) }
    dend_12 { pt3dadd( 33.582, -183.54, -35.483, 0.1 ) }
    dend_12 { pt3dadd( 34.2387, -184.087, -35.2906, 0.1 ) }
    dend_12 { pt3dadd( 34.6452, -184.44, -35.1356, 0.1 ) }
    dend_12 { pt3dadd( 35.2872, -184.985, -34.8591, 0.1 ) }
    dend_12 { pt3dadd( 35.9308, -185.519, -34.5673, 0.1 ) }
    dend_12 { pt3dadd( 36.3304, -185.844, -34.3805, 0.1 ) }
    dend_12 { pt3dadd( 37.6404, -186.892, -33.7533, 0.1 ) }
    dend_12 { pt3dadd( 38.2895, -187.411, -33.4477, 0.1 ) }
    dend_12 { pt3dadd( 38.6988, -187.737, -33.2642, 0.1 ) }
    dend_12 { pt3dadd( 39.3551, -188.255, -32.9712, 0.1 ) }
    dend_12 { pt3dadd( 40.0083, -188.77, -32.6962, 0.1 ) }
    dend_12 { pt3dadd( 40.4296, -189.109, -32.5497, 0.1 ) }
    dend_12 { pt3dadd( 41.106, -189.655, -32.4377, 0.1 ) }
    dend_12 { pt3dadd( 41.5405, -190.001, -32.3656, 0.1 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 24.7484, -181.088, -33.2881, 0.1 ) }
    dend_11 { pt3dadd( 24.9978, -182.323, -33.0025, 0.1 ) }
    dend_11 { pt3dadd( 25.1438, -182.959, -32.8824, 0.1 ) }
    dend_11 { pt3dadd( 25.3035, -183.602, -32.7786, 0.1 ) }
    dend_11 { pt3dadd( 25.4726, -184.249, -32.6872, 0.1 ) }
    dend_11 { pt3dadd( 25.6325, -184.897, -32.6102, 0.1 ) }
    dend_11 { pt3dadd( 25.7779, -185.552, -32.5464, 0.1 ) }
    dend_11 { pt3dadd( 25.9309, -186.206, -32.527, 0.1 ) }
    dend_11 { pt3dadd( 26.0684, -186.851, -32.512, 0.1 ) }
    dend_11 { pt3dadd( 26.2002, -187.513, -32.4993, 0.1 ) }
    dend_11 { pt3dadd( 26.3433, -188.255, -32.4866, 0.1 ) }
    dend_11 { pt3dadd( 26.4839, -188.984, -32.4741, 0.1 ) }
    dend_11 { pt3dadd( 26.6151, -189.643, -32.4615, 0.1 ) }
    dend_11 { pt3dadd( 26.7438, -190.305, -32.4497, 0.1 ) }
    dend_11 { pt3dadd( 26.8751, -190.963, -32.4371, 0.1 ) }
    dend_11 { pt3dadd( 27.0168, -191.623, -32.4214, 0.1 ) }
    dend_11 { pt3dadd( 27.1709, -192.264, -32.4011, 0.14 ) }
    dend_11 { pt3dadd( 27.31, -192.918, -32.3374, 0.28 ) }
    dend_11 { pt3dadd( 27.4388, -193.653, -32.2271, 0.14 ) }
    dend_11 { pt3dadd( 27.5053, -194.299, -32.0572, 0.1 ) }
    dend_11 { pt3dadd( 27.5391, -194.935, -31.835, 0.1 ) }
    dend_11 { pt3dadd( 27.5467, -195.237, -31.7119, 0.1 ) }
    dend_11 { pt3dadd( 27.5691, -196.532, -31.1382, 0.1 ) }
    dend_11 { pt3dadd( 27.5857, -197.145, -30.8578, 0.1 ) }
    dend_11 { pt3dadd( 27.6545, -198.429, -30.278, 0.1 ) }
    dend_11 { pt3dadd( 27.7041, -199.061, -30.0563, 0.1 ) }
    dend_11 { pt3dadd( 27.7717, -199.717, -29.9108, 0.1 ) }
    dend_11 { pt3dadd( 27.8657, -200.379, -29.8527, 0.1 ) }
    dend_11 { pt3dadd( 27.9953, -201.04, -29.8959, 0.14 ) }
    dend_11 { pt3dadd( 28.1338, -201.677, -29.9951, 0.1 ) }
    dend_11 { pt3dadd( 28.4721, -203.011, -30.3266, 0.14 ) }
    dend_11 { pt3dadd( 28.6492, -203.724, -30.5076, 0.1 ) }
    dend_11 { pt3dadd( 28.7284, -204.043, -30.5834, 0.14 ) }
    dend_11 { pt3dadd( 28.8135, -204.345, -30.6698, 0.28 ) }
    dend_11 { pt3dadd( 28.9103, -204.652, -30.7601, 0.28 ) }
    dend_11 { pt3dadd( 29.1253, -205.271, -30.9231, 0.14 ) }
    dend_11 { pt3dadd( 29.3578, -205.889, -31.0457, 0.1 ) }
    dend_11 { pt3dadd( 29.6045, -206.504, -31.1695, 0.1 ) }
    dend_11 { pt3dadd( 30.1033, -207.761, -31.41, 0.1 ) }
    dend_11 { pt3dadd( 30.3537, -208.366, -31.5165, 0.1 ) }
    dend_11 { pt3dadd( 30.6135, -208.978, -31.6096, 0.1 ) }
    dend_11 { pt3dadd( 30.8785, -209.589, -31.6886, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_11 { pt3dadd( 31.127, -210.217, -31.7065, 0.1 ) }
    dend_11 { pt3dadd( 31.3301, -210.853, -31.6414, 0.1 ) }
    dend_11 { pt3dadd( 31.417, -211.296, -31.4875, 0.1 ) }
    dend_11 { pt3dadd( 31.4722, -211.905, -31.2096, 1.12 ) }
    dend_11 { pt3dadd( 31.4722, -211.905, -31.2096, 0.98 ) }
    dend_11 { pt3dadd( 31.4494, -213.037, -30.6014, 0.28 ) }
    dend_11 { pt3dadd( 31.4275, -213.706, -30.2531, 0.14 ) }
    dend_11 { pt3dadd( 31.3982, -214.945, -29.6618, 0.1 ) }
    dend_11 { pt3dadd( 31.3943, -215.629, -29.3725, 0.1 ) }
    dend_11 { pt3dadd( 31.4343, -216.258, -29.1414, 0.1 ) }
    dend_11 { pt3dadd( 31.5415, -216.897, -28.9533, 0.1 ) }
    dend_11 { pt3dadd( 31.7336, -217.527, -28.8223, 0.1 ) }
    dend_11 { pt3dadd( 31.9576, -218.142, -28.6727, 0.1 ) }
    dend_11 { pt3dadd( 32.0765, -218.45, -28.6013, 0.1 ) }
    dend_11 { pt3dadd( 32.3204, -219.136, -28.4043, 0.1 ) }
    dend_11 { pt3dadd( 32.5119, -219.824, -28.1888, 0.1 ) }
    dend_11 { pt3dadd( 32.6015, -220.26, -28.0496, 0.1 ) }
    dend_11 { pt3dadd( 32.7796, -221.482, -27.6776, 0.1 ) }
    dend_11 { pt3dadd( 32.853, -222.195, -27.484, 0.1 ) }
    dend_11 { pt3dadd( 32.9111, -222.931, -27.3175, 0.1 ) }
    dend_11 { pt3dadd( 32.9394, -223.389, -27.2375, 0.1 ) }
    dend_11 { pt3dadd( 32.9932, -224.057, -27.1557, 0.1 ) }
    dend_11 { pt3dadd( 33.0803, -224.721, -27.107, 0.1 ) }
    dend_11 { pt3dadd( 33.1918, -225.381, -27.0506, 0.1 ) }
    dend_11 { pt3dadd( 33.3116, -226.037, -26.9485, 0.1 ) }
    dend_11 { pt3dadd( 33.4044, -226.677, -26.7689, 0.1 ) }
    dend_11 { pt3dadd( 33.4725, -227.296, -26.5418, 0.1 ) }
    dend_11 { pt3dadd( 33.5166, -227.913, -26.28, 0.1 ) }
    dend_11 { pt3dadd( 33.5242, -229.056, -25.6835, 0.1 ) }
    dend_11 { pt3dadd( 33.5072, -229.638, -25.3485, 0.1 ) }
    dend_11 { pt3dadd( 33.4342, -230.852, -24.6367, 0.1 ) }
    dend_11 { pt3dadd( 33.386, -231.436, -24.3093, 0.1 ) }
    dend_11 { pt3dadd( 33.3342, -232.033, -23.9987, 0.1 ) }
    dend_11 { pt3dadd( 33.2328, -233.321, -23.4321, 0.1 ) }
    dend_11 { pt3dadd( 33.2083, -233.962, -23.2246, 0.1 ) }
    dend_11 { pt3dadd( 33.1812, -234.683, -22.9948, 0.1 ) }
    dend_11 { pt3dadd( 33.1757, -235.398, -22.7945, 0.1 ) }
    dend_11 { pt3dadd( 33.1773, -235.722, -22.7017, 0.1 ) }
    dend_11 { pt3dadd( 33.2061, -236.451, -22.5039, 0.1 ) }
    dend_11 { pt3dadd( 33.2707, -237.102, -22.3514, 0.1 ) }
    dend_11 { pt3dadd( 33.4453, -238.425, -22.0191, 0.1 ) }
    dend_11 { pt3dadd( 33.5559, -239.054, -21.853, 0.1 ) }
    dend_11 { pt3dadd( 33.6922, -239.694, -21.6881, 0.1 ) }
    dend_11 { pt3dadd( 33.8334, -240.334, -21.5447, 0.1 ) }
    dend_11 { pt3dadd( 33.9878, -240.98, -21.428, 0.1 ) }
    dend_11 { pt3dadd( 34.1336, -241.632, -21.3577, 0.1 ) }
    dend_11 { pt3dadd( 34.2058, -241.961, -21.3494, 0.1 ) }
    dend_11 { pt3dadd( 34.3228, -242.611, -21.3407, 0.1 ) }
    dend_11 { pt3dadd( 34.4373, -243.356, -21.3368, 0.1 ) }
    dend_11 { pt3dadd( 34.5176, -244.023, -21.3399, 0.1 ) }
    dend_11 { pt3dadd( 34.5937, -244.762, -21.3472, 0.1 ) }
    dend_11 { pt3dadd( 34.6611, -245.43, -21.3542, 0.1 ) }
    dend_11 { pt3dadd( 34.7316, -246.18, -21.3638, 0.1 ) }
    dend_11 { pt3dadd( 34.7973, -246.849, -21.3713, 0.1 ) }
    dend_11 { pt3dadd( 34.8958, -247.583, -21.4218, 0.14 ) }
    dend_11 { pt3dadd( 34.9987, -248.242, -21.5015, 0.1 ) }
    dend_11 { pt3dadd( 35.1242, -248.895, -21.6116, 0.1 ) }
    dend_11 { pt3dadd( 35.2824, -249.607, -21.7634, 0.1 ) }
    dend_11 { pt3dadd( 35.4527, -250.238, -21.917, 0.1 ) }
    dend_11 { pt3dadd( 35.8012, -251.395, -22.215, 0.14 ) }
    dend_11 { pt3dadd( 35.8012, -251.395, -22.215, 0.28 ) }
    dend_11 { pt3dadd( 35.9085, -251.7, -22.3126, 0.28 ) }
    dend_11 { pt3dadd( 36.1256, -252.3, -22.5196, 0.14 ) }
    dend_11 { pt3dadd( 36.3482, -252.906, -22.716, 0.1 ) }
    dend_11 { pt3dadd( 36.5669, -253.49, -22.9312, 0.1 ) }
    dend_11 { pt3dadd( 36.7635, -254.095, -23.156, 0.1 ) }
    dend_11 { pt3dadd( 37.1239, -255.363, -23.6764, 0.1 ) }
    dend_11 { pt3dadd( 37.2651, -255.965, -23.9464, 0.1 ) }
    dend_11 { pt3dadd( 37.3688, -256.565, -24.229, 0.1 ) }
    dend_11 { pt3dadd( 37.5211, -257.799, -24.7992, 0.1 ) }
    dend_11 { pt3dadd( 37.5901, -258.489, -25.0961, 0.1 ) }
    dend_11 { pt3dadd( 37.65, -259.186, -25.3443, 0.1 ) }
    dend_11 { pt3dadd( 37.6984, -259.649, -25.4486, 0.1 ) }
    dend_11 { pt3dadd( 37.8027, -260.377, -25.5648, 0.1 ) }
    dend_11 { pt3dadd( 37.9327, -261.038, -25.61, 0.1 ) }
    dend_11 { pt3dadd( 38.0495, -261.489, -25.5932, 0.1 ) }
    dend_11 { pt3dadd( 38.2575, -262.13, -25.5567, 0.1 ) }
    dend_11 { pt3dadd( 38.5058, -262.832, -25.5105, 0.1 ) }
    dend_11 { pt3dadd( 38.7233, -263.47, -25.471, 0.1 ) }
    dend_11 { pt3dadd( 38.926, -264.109, -25.436, 0.1 ) }
    dend_11 { pt3dadd( 39.0882, -264.756, -25.3662, 0.1 ) }
    dend_11 { pt3dadd( 39.2241, -265.478, -25.2568, 0.1 ) }
    dend_11 { pt3dadd( 39.317, -266.118, -25.0759, 0.1 ) }
    dend_11 { pt3dadd( 39.3962, -266.817, -24.8034, 0.1 ) }
    dend_11 { pt3dadd( 39.4315, -267.12, -24.6593, 0.1 ) }
    dend_11 { pt3dadd( 39.571, -268.167, -24.0031, 0.1 ) }
    dend_11 { pt3dadd( 39.6579, -268.701, -23.6192, 0.1 ) }
    dend_11 { pt3dadd( 39.8831, -269.813, -22.7724, 0.1 ) }
    dend_11 { pt3dadd( 40.0037, -270.335, -22.3812, 0.1 ) }
    dend_11 { pt3dadd( 40.1472, -270.873, -22.0065, 0.1 ) }
    dend_11 { pt3dadd( 40.4852, -272.054, -21.31, 0.1 ) }
    dend_11 { pt3dadd( 40.6695, -272.645, -21.0433, 0.1 ) }
    dend_11 { pt3dadd( 40.8735, -273.258, -20.8594, 0.1 ) }
    dend_11 { pt3dadd( 41.0978, -273.89, -20.7844, 0.1 ) }
    dend_11 { pt3dadd( 41.3193, -274.524, -20.776, 0.1 ) }
    dend_11 { pt3dadd( 41.5375, -275.156, -20.8317, 0.1 ) }
    dend_11 { pt3dadd( 41.7479, -275.774, -20.9468, 0.1 ) }
    dend_11 { pt3dadd( 42.1756, -277.051, -21.2159, 0.14 ) }
    dend_11 { pt3dadd( 42.3712, -277.68, -21.3618, 0.28 ) }
    dend_11 { pt3dadd( 42.5729, -278.39, -21.5287, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_11 { pt3dadd( 42.7343, -279.019, -21.6635, 0.1 ) }
    dend_11 { pt3dadd( 42.8085, -279.341, -21.7162, 0.14 ) }
    dend_11 { pt3dadd( 42.8085, -279.341, -21.7162, 0.28 ) }
    dend_11 { pt3dadd( 42.8741, -279.805, -21.627, 0.1 ) }
    dend_11 { pt3dadd( 42.9889, -280.447, -21.4571, 0.1 ) }
    dend_11 { pt3dadd( 43.1287, -281.075, -21.2629, 0.1 ) }
    dend_11 { pt3dadd( 43.2806, -281.689, -21.0658, 0.1 ) }
    dend_11 { pt3dadd( 43.6246, -282.958, -20.6681, 0.1 ) }
    dend_11 { pt3dadd( 43.8072, -283.577, -20.4833, 0.1 ) }
    dend_11 { pt3dadd( 44.0303, -284.271, -20.2874, 0.1 ) }
    dend_11 { pt3dadd( 44.2348, -284.891, -20.1322, 0.1 ) }
    dend_11 { pt3dadd( 44.4473, -285.519, -20.0047, 0.1 ) }
    dend_11 { pt3dadd( 44.654, -286.152, -19.9194, 0.1 ) }
    dend_11 { pt3dadd( 44.859, -286.793, -19.8838, 0.1 ) }
    dend_11 { pt3dadd( 45.0317, -287.43, -19.8577, 0.1 ) }
    dend_11 { pt3dadd( 45.1666, -288.087, -19.844, 0.1 ) }
    dend_11 { pt3dadd( 45.2669, -288.754, -19.841, 0.1 ) }
    dend_11 { pt3dadd( 45.3494, -289.506, -19.847, 0.14 ) }
    dend_11 { pt3dadd( 45.4053, -290.167, -19.8572, 0.1 ) }
    dend_11 { pt3dadd( 45.4405, -290.643, -19.8661, 0.1 ) }
    dend_11 { pt3dadd( 45.4851, -291.398, -19.8836, 0.1 ) }
    dend_11 { pt3dadd( 45.5314, -292.139, -19.9001, 0.1 ) }
    dend_11 { pt3dadd( 45.5866, -292.808, -19.9109, 0.1 ) }
    dend_11 { pt3dadd( 45.6551, -293.479, -19.9177, 0.1 ) }
    dend_11 { pt3dadd( 45.7348, -294.146, -19.921, 0.1 ) }
    dend_11 { pt3dadd( 45.8478, -294.882, -19.9171, 0.1 ) }
    dend_11 { pt3dadd( 45.9558, -295.548, -19.9118, 0.14 ) }
    dend_11 { pt3dadd( 46.0656, -296.21, -19.9059, 0.1 ) }
    dend_11 { pt3dadd( 46.1835, -296.943, -19.9003, 0.14 ) }
    dend_11 { pt3dadd( 46.2816, -297.607, -19.898, 0.1 ) }
    dend_11 { pt3dadd( 46.3683, -298.277, -19.8993, 0.1 ) }
    dend_11 { pt3dadd( 46.4622, -299.027, -19.9017, 0.1 ) }
    dend_11 { pt3dadd( 46.5377, -299.686, -19.9059, 0.1 ) }
    dend_11 { pt3dadd( 46.6011, -300.353, -19.8679, 0.1 ) }
    dend_11 { pt3dadd( 46.6699, -301.099, -19.7774, 0.1 ) }
    dend_11 { pt3dadd( 46.7327, -301.83, -19.6497, 0.1 ) }
    dend_11 { pt3dadd( 46.7643, -302.158, -19.5774, 0.1 ) }
    dend_11 { pt3dadd( 46.8457, -302.804, -19.4115, 0.14 ) }
    dend_11 { pt3dadd( 47.0212, -303.993, -19.0883, 0.42 ) }
    dend_11 { pt3dadd( 47.1383, -304.63, -18.9136, 0.28 ) }
    dend_11 { pt3dadd( 47.2854, -305.267, -18.7463, 0.14 ) }
    dend_11 { pt3dadd( 47.4377, -305.894, -18.6065, 0.1 ) }
    dend_11 { pt3dadd( 47.5948, -306.541, -18.4977, 0.1 ) }
    dend_11 { pt3dadd( 47.756, -307.189, -18.4291, 0.1 ) }
    dend_11 { pt3dadd( 47.9266, -307.841, -18.4044, 0.1 ) }
    dend_11 { pt3dadd( 48.0929, -308.491, -18.3808, 0.1 ) }
    dend_11 { pt3dadd( 48.2755, -309.21, -18.3552, 0.1 ) }
    dend_11 { pt3dadd( 48.4162, -309.864, -18.293, 0.1 ) }
    dend_11 { pt3dadd( 48.537, -310.517, -18.196, 0.1 ) }
    dend_11 { pt3dadd( 48.6331, -311.174, -18.0733, 1.26 ) }
    dend_11 { pt3dadd( 48.7126, -311.825, -17.9326, 1.12 ) }
    dend_11 { pt3dadd( 48.7738, -312.481, -17.7832, 0.98 ) }
    dend_11 { pt3dadd( 48.8787, -313.729, -17.4938, 0.84 ) }
    dend_11 { pt3dadd( 48.913, -314.385, -17.3548, 0.7 ) }
    dend_11 { pt3dadd( 48.9425, -315.126, -17.2178, 0.56 ) }
    dend_11 { pt3dadd( 48.9717, -315.778, -17.1199, 0.42 ) }
    dend_11 { pt3dadd( 49.0229, -316.528, -17.0382, 0.28 ) }
    dend_11 { pt3dadd( 49.1068, -317.196, -16.9935, 0.14 ) }
    dend_11 { pt3dadd( 49.2508, -317.927, -16.98, 0.1 ) }
    dend_11 { pt3dadd( 49.431, -318.576, -17.0008, 0.1 ) }
    dend_11 { pt3dadd( 49.6456, -319.213, -17.0041, 0.1 ) }
    dend_11 { pt3dadd( 49.8857, -319.843, -16.992, 0.1 ) }
    dend_11 { pt3dadd( 50.1628, -320.531, -16.9089, 0.1 ) }
    dend_11 { pt3dadd( 50.4092, -321.146, -16.7808, 0.1 ) }
    dend_11 { pt3dadd( 50.9139, -322.414, -16.4236, 0.1 ) }
    dend_11 { pt3dadd( 51.3248, -323.531, -16.0574, 0.56 ) }
    dend_11 { pt3dadd( 51.5274, -324.134, -15.8435, 0.42 ) }
    dend_11 { pt3dadd( 51.8355, -325.358, -15.3159, 0.28 ) }
    dend_11 { pt3dadd( 51.9259, -325.943, -14.9931, 0.14 ) }
    dend_11 { pt3dadd( 51.9836, -326.511, -14.64, 0.1 ) }
    dend_11 { pt3dadd( 52.0215, -327.077, -14.2742, 0.1 ) }
    dend_11 { pt3dadd( 52.0683, -327.655, -13.9362, 0.1 ) }
    dend_11 { pt3dadd( 52.171, -328.88, -13.2457, 0.1 ) }
    dend_11 { pt3dadd( 52.2968, -330.101, -12.6299, 0.1 ) }
    dend_11 { pt3dadd( 52.354, -330.707, -12.3387, 0.14 ) }
    dend_11 { pt3dadd( 52.4164, -331.32, -12.0736, 0.28 ) }
    dend_11 { pt3dadd( 52.4483, -331.629, -11.9421, 0.98 ) }
    dend_11 { pt3dadd( 52.5271, -332.253, -11.7063, 1.12 ) }
    dend_11 { pt3dadd( 52.6052, -332.873, -11.4836, 0.98 ) }
    dend_11 { pt3dadd( 52.6775, -333.579, -11.2218, 0.84 ) }
    dend_11 { pt3dadd( 52.7097, -334.182, -10.9207, 0.7 ) }
    dend_11 { pt3dadd( 52.7446, -335.371, -10.2355, 0.56 ) }
    dend_11 { pt3dadd( 52.7366, -335.919, -9.8675, 0.42 ) }
    dend_11 { pt3dadd( 52.6935, -337.062, -9.03281, 0.28 ) }
    dend_11 { pt3dadd( 52.6725, -337.598, -8.62955, 0.14 ) }
    dend_11 { pt3dadd( 52.6501, -338.703, -7.81123, 0.1 ) }
    dend_11 { pt3dadd( 52.6471, -339.245, -7.43505, 0.1 ) }
    dend_11 { pt3dadd( 52.6577, -340.436, -6.67048, 0.14 ) }
    dend_11 { pt3dadd( 52.667, -341.003, -6.31115, 0.1 ) }
    dend_11 { pt3dadd( 52.7035, -341.591, -5.98253, 0.1 ) }
    dend_11 { pt3dadd( 52.7389, -342.173, -5.67276, 0.14 ) }
    dend_11 { pt3dadd( 52.7721, -342.487, -5.55482, 0.28 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 92/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -9.10271, 82.1821, -4.9974, 0.28 ) }
    dend_70 { pt3dadd( -9.144, 81.8689, -4.91088, 0.28 ) }
    dend_70 { pt3dadd( -9.15555, 81.3904, -4.75372, 0.14 ) }
    dend_70 { pt3dadd( -9.12091, 80.9611, -4.60559, 0.1 ) }
    dend_70 { pt3dadd( -9.08478, 80.7475, -4.53161, 0.1 ) }
    dend_70 { pt3dadd( -8.9182, 79.963, -4.26755, 0.1 ) }
    dend_70 { pt3dadd( -8.81833, 79.4927, -4.10923, 0.1 ) }
    dend_70 { pt3dadd( -8.69387, 79.0355, -3.93098, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_70 { pt3dadd( -8.54255, 78.5885, -3.73299, 0.1 ) }
    dend_70 { pt3dadd( -8.37103, 78.1548, -3.53623, 0.1 ) }
    dend_70 { pt3dadd( -8.27901, 77.9603, -3.45829, 0.1 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 3/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.10271, 82.1821, -4.9974, 0.1 ) }
    dend_67 { pt3dadd( -9.43874, 82.7425, -5.63749, 0.1 ) }
    dend_67 { pt3dadd( -9.5938, 83.0274, -5.95368, 0.1 ) }
    dend_67 { pt3dadd( -9.93068, 83.6142, -6.56912, 0.1 ) }
    dend_67 { pt3dadd( -10.3972, 84.4263, -7.37013, 0.1 ) }
    dend_67 { pt3dadd( -10.7104, 84.9244, -7.7905, 0.1 ) }
    dend_67 { pt3dadd( -11.322, 85.8084, -8.39322, 0.1 ) }
    dend_67 { pt3dadd( -11.7146, 86.3561, -8.67779, 0.1 ) }
    dend_67 { pt3dadd( -12.2741, 87.0397, -8.87257, 0.1 ) }
    dend_67 { pt3dadd( -12.4958, 87.2751, -8.87352, 0.1 ) }
    dend_67 { pt3dadd( -13.4763, 88.1885, -8.68696, 0.1 ) }
    dend_67 { pt3dadd( -14.3678, 88.9528, -8.47661, 0.1 ) }
    dend_67 { pt3dadd( -14.3678, 88.9528, -8.47661, 0.1 ) }
    dend_67 { pt3dadd( -15.0621, 89.5185, -8.34933, 0.1 ) }
    dend_67 { pt3dadd( -15.5948, 89.9959, -8.35694, 0.1 ) }
    dend_67 { pt3dadd( -15.9132, 90.3185, -8.45061, 0.1 ) }
    dend_67 { pt3dadd( -16.4706, 90.9439, -8.792, 0.1 ) }
    dend_67 { pt3dadd( -16.7353, 91.2568, -8.99494, 0.1 ) }
    dend_67 { pt3dadd( -17.139, 91.7462, -9.3252, 0.1 ) }
    dend_67 { pt3dadd( -17.7982, 92.592, -9.9442, 0.1 ) }
    dend_67 { pt3dadd( -18.1592, 93.0715, -10.3334, 0.1 ) }
    dend_67 { pt3dadd( -18.4913, 93.5565, -10.7545, 0.1 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 35.2784, -221.973, -10.7711, 0.84 ) }
    dend_32 { pt3dadd( 35.4157, -222.261, -10.6128, 0.84 ) }
    dend_32 { pt3dadd( 35.6987, -222.827, -10.3213, 0.98 ) }
    dend_32 { pt3dadd( 35.9909, -223.413, -10.0514, 0.84 ) }
    dend_32 { pt3dadd( 36.6844, -224.67, -9.635, 0.7 ) }
    dend_32 { pt3dadd( 37.0579, -225.345, -9.47696, 0.56 ) }
    dend_32 { pt3dadd( 37.4385, -226.046, -9.36775, 0.42 ) }
    dend_32 { pt3dadd( 37.6003, -226.345, -9.34875, 0.56 ) }
    dend_32 { pt3dadd( 37.9317, -226.975, -9.37463, 0.7 ) }
    dend_32 { pt3dadd( 38.538, -228.175, -9.56115, 0.56 ) }
    dend_32 { pt3dadd( 38.7393, -228.627, -9.65202, 0.84 ) }
    dend_32 { pt3dadd( 38.9927, -229.289, -9.72173, 0.84 ) }
    dend_32 { pt3dadd( 39.2188, -229.961, -9.71061, 0.84 ) }
    dend_32 { pt3dadd( 39.4491, -230.624, -9.61423, 0.84 ) }
    dend_32 { pt3dadd( 39.4491, -230.624, -9.61423, 0.98 ) }
    dend_32 { pt3dadd( 39.9069, -231.784, -9.20115, 0.1 ) }
    dend_32 { pt3dadd( 40.2045, -232.479, -8.95035, 0.14 ) }
    dend_32 { pt3dadd( 40.4689, -233.089, -8.74384, 0.1 ) }
    dend_32 { pt3dadd( 40.7724, -233.798, -8.54148, 0.14 ) }
    dend_32 { pt3dadd( 41.0711, -234.52, -8.38941, 0.28 ) }
    dend_32 { pt3dadd( 41.1992, -234.846, -8.34796, 0.42 ) }
    dend_32 { pt3dadd( 41.3821, -235.303, -8.32952, 0.84 ) }
    dend_32 { pt3dadd( 41.6294, -235.97, -8.3078, 0.84 ) }
    dend_32 { pt3dadd( 41.8679, -236.637, -8.28834, 0.84 ) }
    dend_32 { pt3dadd( 42.0923, -237.309, -8.27287, 0.7 ) }
    dend_32 { pt3dadd( 42.3316, -237.98, -8.25343, 0.56 ) }
    dend_32 { pt3dadd( 42.5171, -238.448, -8.23503, 0.56 ) }
    dend_32 { pt3dadd( 42.6563, -238.771, -8.21946, 0.84 ) }
    dend_32 { pt3dadd( 42.9621, -239.401, -8.23997, 0.84 ) }
    dend_32 { pt3dadd( 43.2898, -240.026, -8.30184, 0.7 ) }
    dend_32 { pt3dadd( 43.6755, -240.705, -8.40148, 0.84 ) }
    dend_32 { pt3dadd( 44.0296, -241.314, -8.51001, 0.7 ) }
    dend_32 { pt3dadd( 44.3882, -241.914, -8.62329, 0.84 ) }
    dend_32 { pt3dadd( 45.1619, -243.171, -8.8579, 0.7 ) }
    dend_32 { pt3dadd( 45.347, -243.47, -8.88617, 0.84 ) }
    dend_32 { pt3dadd( 45.7562, -244.153, -8.88664, 0.7 ) }
    dend_32 { pt3dadd( 46.0982, -244.771, -8.83201, 0.84 ) }
    dend_32 { pt3dadd( 46.4581, -245.471, -8.71051, 0.7 ) }
    dend_32 { pt3dadd( 46.7501, -246.097, -8.55371, 0.56 ) }
    dend_32 { pt3dadd( 47.2989, -247.409, -8.10904, 0.7 ) }
    dend_32 { pt3dadd( 47.5511, -248.036, -7.88356, 0.84 ) }
    dend_32 { pt3dadd( 47.7801, -248.662, -7.64294, 0.98 ) }
    dend_32 { pt3dadd( 47.9983, -249.288, -7.38444, 0.84 ) }
    dend_32 { pt3dadd( 48.0925, -249.603, -7.25542, 0.84 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 35.2784, -221.973, -10.7711, 1.26 ) }
    dend_29 { pt3dadd( 35.0698, -222.623, -10.8494, 1.26 ) }
    dend_29 { pt3dadd( 34.8918, -223.292, -10.9226, 1.12 ) }
    dend_29 { pt3dadd( 34.8081, -223.711, -10.9628, 0.98 ) }
    dend_29 { pt3dadd( 34.714, -224.396, -11.0198, 0.84 ) }
    dend_29 { pt3dadd( 34.6498, -225.076, -11.0705, 0.7 ) }
    dend_29 { pt3dadd( 34.6174, -225.514, -11.0693, 0.56 ) }
    dend_29 { pt3dadd( 34.6205, -226.129, -11.0152, 0.1 ) }
    dend_29 { pt3dadd( 34.674, -226.739, -10.9141, 0.1 ) }
    dend_29 { pt3dadd( 34.7721, -227.324, -10.7834, 0.1 ) }
    dend_29 { pt3dadd( 34.8483, -227.614, -10.7043, 0.1 ) }
    dend_29 { pt3dadd( 35.1982, -228.658, -10.389, 0.1 ) }
    dend_29 { pt3dadd( 35.3845, -229.207, -10.1763, 0.1 ) }
    dend_29 { pt3dadd( 35.5783, -229.81, -9.91109, 0.1 ) }
    dend_29 { pt3dadd( 35.7325, -230.359, -9.66726, 0.1 ) }
    dend_29 { pt3dadd( 35.8863, -230.979, -9.41406, 0.1 ) }
    dend_29 { pt3dadd( 35.9448, -231.268, -9.31727, 0.1 ) }
    dend_29 { pt3dadd( 36.1371, -232.406, -9.04383, 0.28 ) }
    dend_29 { pt3dadd( 36.199, -232.997, -8.91873, 0.14 ) }
    dend_29 { pt3dadd( 36.2385, -233.68, -8.80118, 0.28 ) }
    dend_29 { pt3dadd( 36.2643, -234.291, -8.71934, 0.42 ) }
    dend_29 { pt3dadd( 36.2899, -234.971, -8.6593, 0.56 ) }
    dend_29 { pt3dadd( 36.3448, -235.586, -8.63476, 0.42 ) }
    dend_29 { pt3dadd( 36.466, -236.269, -8.64794, 0.28 ) }
    dend_29 { pt3dadd( 36.6226, -236.867, -8.64918, 0.14 ) }
    dend_29 { pt3dadd( 36.733, -237.157, -8.64281, 0.28 ) }
    dend_29 { pt3dadd( 36.8566, -237.43, -8.63279, 0.98 ) }
    dend_29 { pt3dadd( 37.1662, -238.051, -8.60427, 0.84 ) }
    dend_29 { pt3dadd( 37.4753, -238.663, -8.57536, 0.7 ) }
    dend_29 { pt3dadd( 37.7703, -239.291, -8.55017, 0.56 ) }
    dend_29 { pt3dadd( 37.9197, -239.693, -8.54209, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_29 { pt3dadd( 38.0228, -240.118, -8.50754, 0.1 ) }
    dend_29 { pt3dadd( 38.0938, -240.793, -8.42545, 0.14 ) }
    dend_29 { pt3dadd( 38.0837, -241.403, -8.33318, 0.28 ) }
    dend_29 { pt3dadd( 38.0215, -242.084, -8.21008, 0.42 ) }
    dend_29 { pt3dadd( 37.9192, -242.748, -8.07488, 0.28 ) }
    dend_29 { pt3dadd( 37.7421, -243.907, -7.89968, 0.14 ) }
    dend_29 { pt3dadd( 37.6775, -244.587, -7.83626, 0.1 ) }
    dend_29 { pt3dadd( 37.6775, -244.587, -7.83626, 0.14 ) }
    dend_29 { pt3dadd( 37.6716, -244.884, -7.75995, 0.14 ) }
    dend_29 { pt3dadd( 37.6817, -245.266, -7.56295, 0.14 ) }
    dend_29 { pt3dadd( 37.7187, -246.239, -6.75677, 0.28 ) }
    dend_29 { pt3dadd( 37.7338, -246.696, -6.34066, 0.28 ) }
    dend_29 { pt3dadd( 37.7506, -247.651, -5.51365, 0.42 ) }
    dend_29 { pt3dadd( 37.7644, -248.558, -4.81569, 0.56 ) }
    dend_29 { pt3dadd( 37.7725, -249.587, -4.08897, 0.42 ) }
    dend_29 { pt3dadd( 37.7931, -250.54, -3.4565, 0.28 ) }
    dend_29 { pt3dadd( 37.8073, -251.138, -3.1035, 0.14 ) }
    dend_29 { pt3dadd( 37.9218, -252.398, -2.81582, 0.1 ) }
    dend_29 { pt3dadd( 38.122, -253.475, -3.14736, 0.14 ) }
    dend_29 { pt3dadd( 38.185, -253.746, -3.28515, 0.56 ) }
    dend_29 { pt3dadd( 38.3266, -254.24, -3.62776, 0.42 ) }
    dend_29 { pt3dadd( 38.4815, -254.718, -3.99313, 0.28 ) }
    dend_29 { pt3dadd( 38.6406, -255.199, -4.34555, 0.28 ) }
    dend_29 { pt3dadd( 38.9713, -256.266, -5.00445, 0.14 ) }
    dend_29 { pt3dadd( 39.1098, -256.795, -5.29222, 0.1 ) }
    dend_29 { pt3dadd( 39.3699, -257.888, -5.86964, 0.1 ) }
    dend_29 { pt3dadd( 39.4218, -258.169, -5.98973, 0.14 ) }
    dend_29 { pt3dadd( 39.479, -258.588, -6.10887, 0.28 ) }
    dend_29 { pt3dadd( 39.5267, -259.189, -6.17641, 0.14 ) }
    dend_29 { pt3dadd( 39.5574, -259.882, -6.13611, 0.1 ) }
    dend_29 { pt3dadd( 39.5755, -260.494, -6.0562, 0.14 ) }
    dend_29 { pt3dadd( 39.6155, -261.766, -5.81133, 0.1 ) }
    dend_29 { pt3dadd( 39.6523, -262.373, -5.69965, 0.1 ) }
    dend_29 { pt3dadd( 39.7205, -263.054, -5.58297, 0.1 ) }
    dend_29 { pt3dadd( 39.7965, -263.649, -5.49269, 0.1 ) }
    dend_29 { pt3dadd( 39.8885, -264.259, -5.42089, 0.1 ) }
    dend_29 { pt3dadd( 39.992, -264.867, -5.38357, 0.1 ) }
    dend_29 { pt3dadd( 40.1053, -265.477, -5.39431, 0.1 ) }
    dend_29 { pt3dadd( 40.2111, -266.085, -5.40647, 0.1 ) }
    dend_29 { pt3dadd( 40.2577, -266.392, -5.41398, 0.14 ) }
    dend_29 { pt3dadd( 40.3096, -266.818, -5.42701, 0.1 ) }
    dend_29 { pt3dadd( 40.361, -267.433, -5.4506, 0.14 ) }
    dend_29 { pt3dadd( 40.4066, -268.127, -5.47974, 0.1 ) }
    dend_29 { pt3dadd( 40.4465, -268.746, -5.50588, 0.1 ) }
    dend_29 { pt3dadd( 40.5105, -269.424, -5.5815, 0.1 ) }
    dend_29 { pt3dadd( 40.5886, -270.032, -5.67939, 0.1 ) }
    dend_29 { pt3dadd( 40.6807, -270.704, -5.77289, 0.1 ) }
    dend_29 { pt3dadd( 40.7655, -271.315, -5.84491, 0.1 ) }
    dend_29 { pt3dadd( 40.8489, -271.924, -5.90158, 0.1 ) }
    dend_29 { pt3dadd( 41.0092, -273.176, -5.98398, 0.14 ) }
    dend_29 { pt3dadd( 41.0441, -273.481, -5.99536, 0.28 ) }
    dend_29 { pt3dadd( 41.1313, -274.664, -6.01185, 0.7 ) }
    dend_29 { pt3dadd( 41.1652, -275.273, -6.00448, 0.56 ) }
    dend_29 { pt3dadd( 41.1765, -275.969, -5.98376, 0.42 ) }
    dend_29 { pt3dadd( 41.1765, -276.589, -5.9536, 0.28 ) }
    dend_29 { pt3dadd( 41.1783, -277.273, -5.90698, 0.14 ) }
    dend_29 { pt3dadd( 41.1999, -277.966, -5.89343, 0.1 ) }
    dend_29 { pt3dadd( 41.2468, -278.582, -5.91797, 0.1 ) }
    dend_29 { pt3dadd( 41.3147, -279.261, -5.94176, 0.1 ) }
    dend_29 { pt3dadd( 41.4012, -279.872, -5.95801, 0.1 ) }
    dend_29 { pt3dadd( 41.5084, -280.481, -5.96989, 0.1 ) }
    dend_29 { pt3dadd( 41.5825, -280.782, -5.9715, 0.56 ) }
    dend_29 { pt3dadd( 41.7604, -281.376, -5.96826, 0.42 ) }
    dend_29 { pt3dadd( 41.941, -281.956, -5.96365, 0.28 ) }
    dend_29 { pt3dadd( 42.1214, -282.547, -5.95969, 0.14 ) }
    dend_29 { pt3dadd( 42.2878, -283.145, -5.95898, 0.14 ) }
    dend_29 { pt3dadd( 42.4419, -283.814, -5.96467, 0.28 ) }
    dend_29 { pt3dadd( 42.501, -284.118, -5.96953, 0.42 ) }
    dend_29 { pt3dadd( 42.5711, -284.552, -5.97925, 0.1 ) }
    dend_29 { pt3dadd( 42.6635, -285.23, -5.99804, 0.1 ) }
    dend_29 { pt3dadd( 42.7376, -285.846, -6.01708, 0.1 ) }
    dend_29 { pt3dadd( 42.8176, -286.537, -6.03905, 0.1 ) }
    dend_29 { pt3dadd( 42.9075, -287.151, -6.05475, 0.1 ) }
    dend_29 { pt3dadd( 42.9682, -287.442, -6.0585, 0.14 ) }
    dend_29 { pt3dadd( 43.0511, -287.741, -6.05821, 0.56 ) }
    dend_29 { pt3dadd( 43.2338, -288.331, -6.00109, 0.42 ) }
    dend_29 { pt3dadd( 43.4192, -288.912, -5.90268, 0.28 ) }
    dend_29 { pt3dadd( 43.6304, -289.55, -5.76184, 0.14 ) }
    dend_29 { pt3dadd( 43.8147, -290.126, -5.62066, 0.1 ) }
    dend_29 { pt3dadd( 43.9807, -290.691, -5.43427, 0.1 ) }
    dend_29 { pt3dadd( 44.2892, -291.834, -4.99002, 0.14 ) }
    dend_29 { pt3dadd( 44.424, -292.378, -4.75718, 0.1 ) }
    dend_29 { pt3dadd( 44.5505, -292.935, -4.51273, 0.1 ) }
    dend_29 { pt3dadd( 44.6568, -293.496, -4.2787, 0.1 ) }
    dend_29 { pt3dadd( 44.8475, -294.554, -3.88321, 0.56 ) }
    dend_29 { pt3dadd( 44.9631, -295.144, -3.74398, 0.7 ) }
    dend_29 { pt3dadd( 45.0851, -295.746, -3.65525, 0.56 ) }
    dend_29 { pt3dadd( 45.2058, -296.347, -3.57963, 0.42 ) }
    dend_29 { pt3dadd( 45.3433, -297.014, -3.51986, 0.28 ) }
    dend_29 { pt3dadd( 45.4636, -297.619, -3.49798, 0.14 ) }
    dend_29 { pt3dadd( 45.7129, -298.857, -3.52908, 0.28 ) }
    dend_29 { pt3dadd( 45.9249, -299.978, -3.63402, 0.7 ) }
    dend_29 { pt3dadd( 46.0354, -300.572, -3.7207, 0.56 ) }
    dend_29 { pt3dadd( 46.1502, -301.169, -3.8286, 0.42 ) }
    dend_29 { pt3dadd( 46.2967, -301.822, -4.01168, 0.28 ) }
    dend_29 { pt3dadd( 46.4135, -302.406, -4.17477, 0.14 ) }
    dend_29 { pt3dadd( 46.6168, -303.646, -4.50087, 0.1 ) }
    dend_29 { pt3dadd( 46.6983, -304.234, -4.68248, 0.1 ) }
    dend_29 { pt3dadd( 46.7621, -304.824, -4.85374, 0.1 ) }
    dend_29 { pt3dadd( 46.8669, -306.042, -5.17751, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_29 { pt3dadd( 46.9314, -307.195, -5.43049, 0.1 ) }
    dend_29 { pt3dadd( 46.9406, -307.885, -5.52557, 0.1 ) }
    dend_29 { pt3dadd( 46.9178, -308.567, -5.54151, 0.1 ) }
    dend_29 { pt3dadd( 46.9008, -308.874, -5.54399, 0.1 ) }
    dend_29 { pt3dadd( 46.9008, -308.874, -5.54399, 0.1 ) }
    dend_29 { pt3dadd( 46.8962, -309.308, -5.61125, 0.1 ) }
    dend_29 { pt3dadd( 46.9375, -309.905, -5.77578, 0.1 ) }
    dend_29 { pt3dadd( 47.0165, -310.558, -5.96852, 0.1 ) }
    dend_29 { pt3dadd( 47.0957, -311.147, -6.14714, 0.1 ) }
    dend_29 { pt3dadd( 47.2733, -312.387, -6.50886, 0.1 ) }
    dend_29 { pt3dadd( 47.3679, -312.976, -6.66795, 0.1 ) }
    dend_29 { pt3dadd( 47.4762, -313.559, -6.81025, 0.1 ) }
    dend_29 { pt3dadd( 47.5942, -314.153, -6.93421, 0.1 ) }
    dend_29 { pt3dadd( 47.688, -314.577, -6.9999, 0.1 ) }
    dend_29 { pt3dadd( 47.8256, -315.18, -7.05285, 0.1 ) }
    dend_29 { pt3dadd( 47.982, -315.777, -7.05414, 0.1 ) }
    dend_29 { pt3dadd( 48.1298, -316.364, -7.0123, 0.1 ) }
    dend_29 { pt3dadd( 48.2774, -316.962, -6.93176, 0.14 ) }
    dend_29 { pt3dadd( 48.4251, -317.552, -6.82266, 0.28 ) }
    dend_29 { pt3dadd( 48.5778, -318.139, -6.69367, 0.28 ) }
    dend_29 { pt3dadd( 48.7276, -318.792, -6.54083, 0.42 ) }
    dend_29 { pt3dadd( 48.9623, -319.924, -6.27391, 0.56 ) }
    dend_29 { pt3dadd( 49.0742, -320.506, -6.14349, 0.42 ) }
    dend_29 { pt3dadd( 49.1843, -321.105, -6.02412, 0.28 ) }
    dend_29 { pt3dadd( 49.2924, -321.705, -5.92396, 0.14 ) }
    dend_29 { pt3dadd( 49.3778, -322.382, -5.79934, 0.1 ) }
    dend_29 { pt3dadd( 49.4185, -322.979, -5.69683, 0.1 ) }
    dend_29 { pt3dadd( 49.4268, -323.586, -5.56642, 0.1 ) }
    dend_29 { pt3dadd( 49.3792, -324.174, -5.38525, 0.14 ) }
    dend_29 { pt3dadd( 49.3328, -324.462, -5.27979, 0.28 ) }
    dend_29 { pt3dadd( 49.0599, -325.641, -4.80806, 0.1 ) }
    dend_29 { pt3dadd( 48.8897, -326.263, -4.54541, 0.1 ) }
    dend_29 { pt3dadd( 48.5636, -327.313, -4.10097, 0.1 ) }
    dend_29 { pt3dadd( 48.3747, -327.924, -3.85908, 0.1 ) }
    dend_29 { pt3dadd( 48.2173, -328.576, -3.67397, 0.1 ) }
    dend_29 { pt3dadd( 48.1742, -329.0, -3.62642, 0.1 ) }
    dend_29 { pt3dadd( 48.2033, -329.308, -3.65648, 0.14 ) }
    dend_29 { pt3dadd( 48.2692, -329.602, -3.71602, 0.56 ) }
    dend_29 { pt3dadd( 48.4519, -330.172, -3.88022, 0.42 ) }
    dend_29 { pt3dadd( 48.8784, -331.348, -4.22769, 0.28 ) }
    dend_29 { pt3dadd( 49.0787, -331.91, -4.38738, 0.14 ) }
    dend_29 { pt3dadd( 49.2547, -332.487, -4.53526, 0.1 ) }
    dend_29 { pt3dadd( 49.4038, -333.059, -4.7122, 0.14 ) }
    dend_29 { pt3dadd( 49.4657, -333.348, -4.80922, 0.28 ) }
    dend_29 { pt3dadd( 49.5317, -333.75, -4.94403, 0.7 ) }
    dend_29 { pt3dadd( 49.6084, -334.414, -5.13792, 0.56 ) }
    dend_29 { pt3dadd( 49.7194, -335.037, -5.39415, 0.42 ) }
    dend_29 { pt3dadd( 49.9638, -336.045, -5.88036, 0.28 ) }
    dend_29 { pt3dadd( 50.0443, -336.309, -6.01433, 0.1 ) }
    dend_29 { pt3dadd( 50.2349, -336.84, -6.27363, 0.1 ) }
    dend_29 { pt3dadd( 50.4643, -337.364, -6.50767, 0.1 ) }
    dend_29 { pt3dadd( 50.9817, -338.499, -6.88245, 0.1 ) }
    dend_29 { pt3dadd( 51.2161, -339.06, -6.98699, 0.1 ) }
    dend_29 { pt3dadd( 51.4079, -339.647, -7.00909, 0.1 ) }
    dend_29 { pt3dadd( 51.5515, -340.24, -6.99608, 0.1 ) }
    dend_29 { pt3dadd( 51.6629, -340.915, -6.94084, 0.14 ) }
    dend_29 { pt3dadd( 51.7781, -342.084, -6.77611, 0.1 ) }
    dend_29 { pt3dadd( 51.804, -342.764, -6.63939, 0.1 ) }
    dend_29 { pt3dadd( 51.8333, -343.437, -6.51159, 0.1 ) }
    dend_29 { pt3dadd( 51.877, -344.12, -6.4001, 0.1 ) }
    dend_29 { pt3dadd( 51.9518, -344.729, -6.32439, 0.1 ) }
    dend_29 { pt3dadd( 52.0098, -345.022, -6.30423, 0.1 ) }
    dend_29 { pt3dadd( 52.1112, -345.312, -6.32462, 0.1 ) }
    dend_29 { pt3dadd( 52.41, -345.942, -6.40462, 0.1 ) }
    dend_29 { pt3dadd( 52.7003, -346.466, -6.50289, 0.1 ) }
    dend_29 { pt3dadd( 53.0472, -347.05, -6.64402, 0.1 ) }
    dend_29 { pt3dadd( 53.3462, -347.571, -6.78836, 0.1 ) }
    dend_29 { pt3dadd( 53.8846, -348.588, -7.07655, 0.1 ) }
    dend_29 { pt3dadd( 53.8846, -348.588, -7.07655, 0.14 ) }
    dend_29 { pt3dadd( 54.0456, -348.99, -7.17659, 0.28 ) }
    dend_29 { pt3dadd( 54.2486, -349.565, -7.29083, 0.28 ) }
    dend_29 { pt3dadd( 54.4264, -350.151, -7.37029, 0.14 ) }
    dend_29 { pt3dadd( 54.5948, -350.748, -7.40958, 0.1 ) }
    dend_29 { pt3dadd( 54.7499, -351.334, -7.41053, 0.1 ) }
    dend_29 { pt3dadd( 54.8973, -351.936, -7.3705, 0.1 ) }
    dend_29 { pt3dadd( 55.0266, -352.536, -7.29848, 0.1 ) }
    dend_29 { pt3dadd( 55.1317, -353.14, -7.20147, 0.1 ) }
    dend_29 { pt3dadd( 55.206, -353.743, -7.09025, 0.1 ) }
    dend_29 { pt3dadd( 55.2587, -354.347, -6.97149, 0.1 ) }
    dend_29 { pt3dadd( 55.3358, -355.505, -6.74223, 0.1 ) }
    dend_29 { pt3dadd( 55.3764, -356.185, -6.61367, 0.1 ) }
    dend_29 { pt3dadd( 55.4169, -356.793, -6.51067, 0.1 ) }
    dend_29 { pt3dadd( 55.4736, -357.472, -6.46628, 0.1 ) }
    dend_29 { pt3dadd( 55.5449, -358.085, -6.49044, 0.1 ) }
    dend_29 { pt3dadd( 55.6434, -358.692, -6.57395, 0.1 ) }
    dend_29 { pt3dadd( 55.7712, -359.282, -6.70565, 0.1 ) }
    dend_29 { pt3dadd( 55.9169, -359.844, -6.88398, 0.1 ) }
    dend_29 { pt3dadd( 56.2222, -361.045, -7.28584, 0.1 ) }
    dend_29 { pt3dadd( 56.3682, -361.614, -7.47633, 0.1 ) }
    dend_29 { pt3dadd( 56.5064, -362.191, -7.65825, 0.1 ) }
    dend_29 { pt3dadd( 56.6379, -362.774, -7.8153, 0.1 ) }
    dend_29 { pt3dadd( 56.8434, -363.836, -8.02548, 0.1 ) }
    dend_29 { pt3dadd( 57.0418, -364.996, -8.14367, 0.1 ) }
    dend_29 { pt3dadd( 57.1404, -365.606, -8.13926, 0.1 ) }
    dend_29 { pt3dadd( 57.2236, -366.221, -8.12968, 0.1 ) }
    dend_29 { pt3dadd( 57.2872, -366.835, -8.11765, 0.1 ) }
    dend_29 { pt3dadd( 57.339, -367.513, -8.04857, 0.1 ) }
    dend_29 { pt3dadd( 57.3822, -368.121, -7.95177, 0.1 ) }
    dend_29 { pt3dadd( 57.4372, -368.734, -7.86838, 0.1 ) }
    dend_29 { pt3dadd( 57.4949, -369.407, -7.75624, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_29 { pt3dadd( 57.5548, -370.086, -7.62671, 0.1 ) }
    dend_29 { pt3dadd( 57.6576, -371.32, -7.37267, 0.1 ) }
    dend_29 { pt3dadd( 57.7049, -371.926, -7.24692, 0.1 ) }
    dend_29 { pt3dadd( 57.735, -372.522, -7.13596, 0.1 ) }
    dend_29 { pt3dadd( 57.7474, -373.135, -7.04262, 0.1 ) }
    dend_29 { pt3dadd( 57.757, -373.442, -7.03415, 0.1 ) }
    dend_29 { pt3dadd( 57.7571, -373.881, -7.05082, 0.1 ) }
    dend_29 { pt3dadd( 57.7393, -374.559, -7.13044, 0.1 ) }
    dend_29 { pt3dadd( 57.7083, -375.251, -7.20316, 0.1 ) }
    dend_29 { pt3dadd( 57.6849, -375.689, -7.20356, 0.1 ) }
    dend_29 { pt3dadd( 57.6437, -376.941, -7.09025, 0.1 ) }
    dend_29 { pt3dadd( 57.64, -378.091, -6.79924, 0.1 ) }
    dend_29 { pt3dadd( 57.6652, -378.672, -6.5809, 0.1 ) }
    dend_29 { pt3dadd( 57.7125, -379.231, -6.32246, 0.1 ) }
    dend_29 { pt3dadd( 57.8486, -380.351, -5.75379, 0.1 ) }
    dend_29 { pt3dadd( 57.9176, -380.888, -5.47223, 0.1 ) }
    dend_29 { pt3dadd( 58.0416, -382.005, -4.89435, 0.1 ) }
    dend_29 { pt3dadd( 58.1044, -382.578, -4.66559, 0.1 ) }
    dend_29 { pt3dadd( 58.1412, -383.163, -4.47173, 0.1 ) }
    dend_29 { pt3dadd( 58.1583, -383.776, -4.37582, 0.14 ) }
    dend_29 { pt3dadd( 58.147, -384.211, -4.36706, 0.1 ) }
    dend_29 { pt3dadd( 58.0991, -384.903, -4.39597, 0.1 ) }
    dend_29 { pt3dadd( 58.0419, -385.581, -4.47181, 0.1 ) }
    dend_29 { pt3dadd( 58.0035, -386.016, -4.51448, 0.1 ) }
    dend_29 { pt3dadd( 57.9188, -387.312, -4.61629, 0.1 ) }
    dend_29 { pt3dadd( 57.8992, -388.493, -4.67973, 0.1 ) }
    dend_29 { pt3dadd( 57.95, -389.106, -4.73827, 0.1 ) }
    dend_29 { pt3dadd( 58.0347, -389.716, -4.77382, 0.1 ) }
    dend_29 { pt3dadd( 58.1527, -390.326, -4.78416, 0.1 ) }
    dend_29 { pt3dadd( 58.2706, -390.929, -4.72176, 0.1 ) }
    dend_29 { pt3dadd( 58.3821, -391.516, -4.59924, 0.1 ) }
    dend_29 { pt3dadd( 58.5832, -392.664, -4.3847, 0.1 ) }
    dend_29 { pt3dadd( 58.7495, -393.801, -4.10499, 0.28 ) }
    dend_29 { pt3dadd( 58.8235, -394.393, -3.93255, 0.28 ) }
    dend_29 { pt3dadd( 58.9651, -395.627, -3.53971, 0.14 ) }
    dend_29 { pt3dadd( 59.0305, -396.217, -3.39757, 0.1 ) }
    dend_29 { pt3dadd( 59.1134, -396.9, -3.29365, 0.14 ) }
    dend_29 { pt3dadd( 59.1574, -397.207, -3.27436, 0.7 ) }
    dend_29 { pt3dadd( 59.2976, -397.796, -3.39588, 0.56 ) }
    dend_29 { pt3dadd( 59.4476, -398.361, -3.60585, 0.56 ) }
    dend_29 { pt3dadd( 59.7555, -399.49, -4.16671, 0.42 ) }
    dend_29 { pt3dadd( 59.8797, -400.03, -4.44598, 0.28 ) }
    dend_29 { pt3dadd( 59.9776, -400.572, -4.72597, 0.14 ) }
    dend_29 { pt3dadd( 60.0986, -401.705, -5.275, 0.1 ) }
    dend_29 { pt3dadd( 60.1142, -402.106, -5.45214, 0.1 ) }
    dend_29 { pt3dadd( 60.0952, -402.75, -5.68621, 0.1 ) }
    dend_29 { pt3dadd( 60.0336, -403.42, -5.85634, 0.1 ) }
    dend_29 { pt3dadd( 59.9703, -403.84, -5.94788, 0.14 ) }
    dend_29 { pt3dadd( 59.8552, -404.506, -6.10498, 0.1 ) }
    dend_29 { pt3dadd( 59.7327, -405.164, -6.2505, 0.1 ) }
    dend_29 { pt3dadd( 59.6089, -405.822, -6.43296, 0.14 ) }
    dend_29 { pt3dadd( 59.4772, -406.459, -6.6479, 0.14 ) }
    dend_29 { pt3dadd( 59.3789, -406.859, -6.8015, 0.28 ) }
    dend_29 { pt3dadd( 59.1106, -407.847, -7.31315, 0.42 ) }
    dend_29 { pt3dadd( 59.1106, -407.847, -7.31315, 0.56 ) }
    dend_29 { pt3dadd( 58.9344, -408.402, -7.67717, 0.56 ) }
    dend_29 { pt3dadd( 58.8157, -408.756, -7.90771, 0.42 ) }
    dend_29 { pt3dadd( 58.5792, -409.475, -8.34412, 0.28 ) }
    dend_29 { pt3dadd( 58.2332, -410.479, -8.8728, 0.42 ) }
    dend_29 { pt3dadd( 58.0205, -411.078, -9.12218, 0.28 ) }
    dend_29 { pt3dadd( 57.8321, -411.688, -9.40063, 0.14 ) }
    dend_29 { pt3dadd( 57.7403, -412.076, -9.58268, 0.1 ) }
    dend_29 { pt3dadd( 57.6919, -412.356, -9.70863, 0.14 ) }
    dend_29 { pt3dadd( 57.6216, -412.987, -9.96962, 0.7 ) }
    dend_29 { pt3dadd( 57.5522, -413.63, -10.1954, 0.56 ) }
    dend_29 { pt3dadd( 57.3964, -414.843, -10.6438, 0.42 ) }
    dend_29 { pt3dadd( 57.3078, -415.416, -10.8576, 0.28 ) }
    dend_29 { pt3dadd( 57.2037, -415.973, -11.1033, 0.14 ) }
    dend_29 { pt3dadd( 57.1405, -416.246, -11.2353, 0.28 ) }
    dend_29 { pt3dadd( 56.9873, -416.847, -11.5296, 0.28 ) }
    dend_29 { pt3dadd( 56.7953, -417.442, -11.8148, 0.14 ) }
    dend_29 { pt3dadd( 56.65, -417.823, -11.9766, 0.1 ) }
    dend_29 { pt3dadd( 56.1269, -419.019, -12.5, 0.1 ) }
    dend_29 { pt3dadd( 55.9586, -419.392, -12.6577, 0.1 ) }
    dend_29 { pt3dadd( 55.71, -419.985, -12.889, 0.1 ) }
    dend_29 { pt3dadd( 55.5643, -420.381, -13.0291, 0.1 ) }
    dend_29 { pt3dadd( 55.3533, -421.012, -13.224, 0.1 ) }
    dend_29 { pt3dadd( 55.1439, -421.648, -13.3759, 0.1 ) }
    dend_29 { pt3dadd( 54.935, -422.296, -13.4541, 0.14 ) }
    dend_29 { pt3dadd( 54.8466, -422.592, -13.4885, 0.28 ) }
    dend_29 { pt3dadd( 54.8466, -422.592, -13.4885, 0.84 ) }
    dend_29 { pt3dadd( 54.8466, -422.592, -13.4885, 0.84 ) }
    dend_29 { pt3dadd( 54.7617, -423.02, -13.5294, 0.28 ) }
    dend_29 { pt3dadd( 54.6528, -423.705, -13.5894, 0.14 ) }
    dend_29 { pt3dadd( 54.5475, -424.378, -13.648, 0.1 ) }
    dend_29 { pt3dadd( 54.4255, -425.06, -13.7106, 0.14 ) }
    dend_29 { pt3dadd( 54.2954, -425.727, -13.7739, 0.1 ) }
    dend_29 { pt3dadd( 54.2311, -426.03, -13.8037, 0.1 ) }
    dend_29 { pt3dadd( 54.0672, -426.702, -13.8742, 0.14 ) }
    dend_29 { pt3dadd( 53.8797, -427.355, -13.9484, 0.28 ) }
    dend_29 { pt3dadd( 53.6, -428.176, -14.0507, 0.14 ) }
    dend_29 { pt3dadd( 53.4418, -428.582, -14.1053, 0.1 ) }
    dend_29 { pt3dadd( 53.273, -428.983, -14.1617, 0.1 ) }
    dend_29 { pt3dadd( 52.9226, -429.769, -14.2764, 0.1 ) }
    dend_29 { pt3dadd( 52.7425, -430.171, -14.3352, 0.1 ) }
    dend_29 { pt3dadd( 52.4045, -430.963, -14.4477, 0.1 ) }
    dend_29 { pt3dadd( 52.2493, -431.37, -14.5017, 0.1 ) }
    dend_29 { pt3dadd( 52.023, -432.011, -14.5832, 0.1 ) }
    dend_29 { pt3dadd( 51.8907, -432.427, -14.6331, 0.1 ) }
    dend_29 { pt3dadd( 51.7007, -433.079, -14.7077, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_29 { pt3dadd( 51.5205, -433.747, -14.7813, 0.1 ) }
    dend_29 { pt3dadd( 51.3574, -434.407, -14.8509, 0.1 ) }
    dend_29 { pt3dadd( 51.2559, -434.837, -14.8954, 0.1 ) }
    dend_29 { pt3dadd( 51.1018, -435.51, -14.9639, 0.1 ) }
    dend_29 { pt3dadd( 51.0139, -435.928, -15.0049, 0.1 ) }
    dend_29 { pt3dadd( 50.8787, -436.608, -15.07, 0.1 ) }
    dend_29 { pt3dadd( 50.7553, -437.277, -15.1321, 0.14 ) }
    dend_29 { pt3dadd( 50.6502, -437.956, -15.2426, 0.1 ) }
    dend_29 { pt3dadd( 50.591, -438.623, -15.3772, 0.1 ) }
    dend_29 { pt3dadd( 50.5733, -438.926, -15.4441, 0.1 ) }
    dend_29 { pt3dadd( 50.5414, -439.603, -15.601, 0.1 ) }
    dend_29 { pt3dadd( 50.5116, -440.267, -15.7591, 0.1 ) }
    dend_29 { pt3dadd( 50.4468, -441.532, -16.0649, 0.1 ) }
    dend_29 { pt3dadd( 50.2961, -444.006, -16.6563, 0.1 ) }
    dend_29 { pt3dadd( 50.2345, -444.667, -16.8139, 0.1 ) }
    dend_29 { pt3dadd( 50.1729, -445.096, -16.9138, 0.1 ) }
    dend_29 { pt3dadd( 50.0345, -445.749, -17.0593, 0.1 ) }
    dend_29 { pt3dadd( 49.9035, -446.16, -17.1415, 0.14 ) }
    dend_29 { pt3dadd( 49.6175, -446.78, -17.2775, 0.14 ) }
    dend_29 { pt3dadd( 49.2936, -447.274, -17.4565, 0.28 ) }
    dend_29 { pt3dadd( 48.9156, -447.804, -17.6738, 0.14 ) }
    dend_29 { pt3dadd( 48.5218, -448.323, -17.9128, 0.1 ) }
    dend_29 { pt3dadd( 48.1162, -448.811, -18.1754, 0.1 ) }
    dend_29 { pt3dadd( 47.4135, -449.624, -18.6781, 0.1 ) }
    dend_29 { pt3dadd( 47.233, -449.827, -18.8288, 0.1 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 25/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -18.4913, 93.5565, -10.7545, 0.14 ) }
    dend_69 { pt3dadd( -19.4558, 94.0445, -10.2652, 0.14 ) }
    dend_69 { pt3dadd( -19.96, 94.2589, -9.95969, 0.1 ) }
    dend_69 { pt3dadd( -20.2861, 94.4067, -9.7683, 0.14 ) }
    dend_69 { pt3dadd( -20.79, 94.6631, -9.49645, 0.28 ) }
    dend_69 { pt3dadd( -21.6579, 95.1599, -9.07819, 0.14 ) }
    dend_69 { pt3dadd( -23.2883, 96.2018, -8.38973, 0.1 ) }
    dend_69 { pt3dadd( -23.2883, 96.2018, -8.38973, 0.14 ) }
    dend_69 { pt3dadd( -23.7828, 96.5358, -8.19614, 0.28 ) }
    dend_69 { pt3dadd( -24.2684, 96.9121, -8.06932, 0.14 ) }
    dend_69 { pt3dadd( -24.7188, 97.3551, -8.12412, 0.1 ) }
    dend_69 { pt3dadd( -24.9335, 97.7686, -8.55528, 0.1 ) }
    dend_69 { pt3dadd( -24.9695, 97.961, -8.90532, 0.1 ) }
    dend_69 { pt3dadd( -24.9189, 98.1711, -9.49424, 0.14 ) }
    dend_69 { pt3dadd( -24.8131, 98.4508, -10.4969, 0.1 ) }
    dend_69 { pt3dadd( -24.6859, 98.6912, -11.6188, 0.1 ) }
    dend_69 { pt3dadd( -24.4057, 99.0237, -13.6058, 0.1 ) }
    dend_69 { pt3dadd( -24.2119, 99.1591, -14.625, 0.1 ) }
    dend_69 { pt3dadd( -23.6799, 99.3967, -16.5721, 0.1 ) }
    dend_69 { pt3dadd( -22.7593, 99.6795, -18.4298, 0.1 ) }
    dend_69 { pt3dadd( -23.6199, 99.4274, -17.8175, 0.1 ) }
    dend_69 { pt3dadd( -25.4889, 98.8968, -17.0494, 0.14 ) }
    dend_69 { pt3dadd( -25.744, 98.8255, -16.9561, 0.28 ) }
    dend_69 { pt3dadd( -26.3103, 98.6802, -16.732, 0.84 ) }
    dend_69 { pt3dadd( -26.8201, 98.5667, -16.5106, 0.7 ) }
    dend_69 { pt3dadd( -27.383, 98.576, -16.5506, 0.56 ) }
    dend_69 { pt3dadd( -28.0752, 99.0957, -17.1382, 0.42 ) }
    dend_69 { pt3dadd( -28.1825, 99.2764, -17.3287, 0.28 ) }
    dend_69 { pt3dadd( -28.4073, 99.7486, -17.6751, 0.1 ) }
    dend_69 { pt3dadd( -28.6202, 100.243, -17.8547, 0.1 ) }
    dend_69 { pt3dadd( -28.9116, 100.797, -17.8303, 0.1 ) }
    dend_69 { pt3dadd( -29.2182, 101.229, -17.6351, 0.1 ) }
    dend_69 { pt3dadd( -29.8403, 101.842, -17.1335, 0.14 ) }
    dend_69 { pt3dadd( -30.6363, 102.475, -16.515, 0.56 ) }
    dend_69 { pt3dadd( -31.4467, 102.983, -15.8691, 0.42 ) }
    dend_69 { pt3dadd( -32.2955, 103.426, -15.23, 0.28 ) }
    dend_69 { pt3dadd( -33.1014, 103.791, -14.6723, 0.42 ) }
    dend_69 { pt3dadd( -34.0669, 104.166, -14.0848, 0.56 ) }
    dend_69 { pt3dadd( -34.7418, 104.396, -13.737, 0.42 ) }
    dend_69 { pt3dadd( -35.728, 104.71, -13.414, 0.56 ) }
    dend_69 { pt3dadd( -36.329, 104.88, -13.372, 0.7 ) }
    dend_69 { pt3dadd( -36.9302, 105.03, -13.5074, 0.84 ) }
    dend_69 { pt3dadd( -37.4023, 105.14, -13.7963, 0.7 ) }
    dend_69 { pt3dadd( -37.7987, 105.218, -14.1943, 0.84 ) }
    dend_69 { pt3dadd( -38.4015, 105.302, -15.0897, 0.7 ) }
    dend_69 { pt3dadd( -38.6663, 105.329, -15.5906, 0.56 ) }
    dend_69 { pt3dadd( -38.8788, 105.333, -16.1134, 0.42 ) }
    dend_69 { pt3dadd( -39.2668, 105.326, -17.2022, 0.28 ) }
    dend_69 { pt3dadd( -39.4375, 105.322, -17.7401, 0.14 ) }
    dend_69 { pt3dadd( -39.7616, 105.297, -18.8444, 0.1 ) }
    dend_69 { pt3dadd( -39.927, 105.264, -19.3831, 0.1 ) }
    dend_69 { pt3dadd( -40.1749, 105.208, -20.4368, 0.14 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 77/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -18.4913, 93.5565, -10.7545, 0.1 ) }
    dend_68 { pt3dadd( -18.6638, 93.3405, -8.58429, 0.1 ) }
    dend_68 { pt3dadd( -18.6961, 93.2082, -7.35011, 0.1 ) }
    dend_68 { pt3dadd( -18.6721, 93.0716, -6.23341, 0.1 ) }
    dend_68 { pt3dadd( -18.5135, 92.7265, -3.99425, 0.1 ) }
    dend_68 { pt3dadd( -18.4436, 92.6175, -3.41186, 0.1 ) }
    dend_68 { pt3dadd( -18.389, 92.549, -3.11969, 0.1 ) }
    dend_68 { pt3dadd( -18.129, 92.3298, -2.52619, 0.1 ) }
    dend_68 { pt3dadd( -17.9017, 92.1527, -2.21804, 0.28 ) }
    dend_68 { pt3dadd( -17.431, 91.811, -1.86184, 0.14 ) }
    dend_68 { pt3dadd( -17.1094, 91.5713, -1.73119, 0.1 ) }
    dend_68 { pt3dadd( -16.4804, 91.0263, -1.4848, 0.1 ) }
    dend_68 { pt3dadd( -16.4804, 91.0263, -1.4848, 0.14 ) }
    dend_68 { pt3dadd( -16.4804, 91.0263, -1.4848, 0.28 ) }
    dend_68 { pt3dadd( -16.1915, 90.7388, -1.37604, 0.14 ) }
    dend_68 { pt3dadd( -15.707, 90.2968, -1.18885, 0.1 ) }
    dend_68 { pt3dadd( -15.3804, 90.0441, -1.10234, 0.1 ) }
    dend_68 { pt3dadd( -14.8132, 89.683, -0.988075, 0.1 ) }
    dend_68 { pt3dadd( -14.2179, 89.3722, -0.938812, 0.1 ) }
    dend_68 { pt3dadd( -13.6065, 89.0734, -0.892682, 0.1 ) }
    dend_68 { pt3dadd( -13.0723, 88.8105, -0.821559, 0.1 ) }
    dend_68 { pt3dadd( -11.9835, 88.2037, -0.525752, 0.1 ) }
    dend_68 { pt3dadd( -11.5315, 87.8674, -0.299581, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_68 { pt3dadd( -10.8388, 87.1457, 0.292325, 0.1 ) }
    dend_68 { pt3dadd( -10.3414, 86.3764, 0.945889, 0.1 ) }
    dend_68 { pt3dadd( -9.83024, 85.454, 1.67131, 0.1 ) }
    dend_68 { pt3dadd( -9.3734, 84.5036, 2.32699, 0.1 ) }
    dend_68 { pt3dadd( -9.11419, 83.9661, 2.64168, 0.1 ) }
    dend_68 { pt3dadd( -8.93187, 83.6177, 2.81911, 0.1 ) }
    dend_68 { pt3dadd( -8.58153, 83.0958, 3.06421, 0.1 ) }
    dend_68 { pt3dadd( -7.78871, 82.2974, 3.36961, 0.1 ) }
    dend_68 { pt3dadd( -7.25027, 81.9214, 3.52425, 0.1 ) }
    dend_68 { pt3dadd( -6.29803, 81.4484, 4.00738, 0.1 ) }
    dend_68 { pt3dadd( -5.49638, 81.1287, 4.72947, 0.1 ) }
    dend_68 { pt3dadd( -5.11153, 80.9862, 5.18081, 0.1 ) }
    dend_68 { pt3dadd( -4.38992, 80.7328, 6.15254, 0.1 ) }
    dend_68 { pt3dadd( -4.04912, 80.6084, 6.64298, 0.1 ) }
    dend_68 { pt3dadd( -3.3435, 80.3467, 7.63057, 0.1 ) }
    dend_68 { pt3dadd( -2.84683, 80.1357, 8.29146, 0.1 ) }
    dend_68 { pt3dadd( -2.57649, 80.006, 8.60887, 0.1 ) }
    dend_68 { pt3dadd( -2.14768, 79.7814, 9.08936, 0.1 ) }
    dend_68 { pt3dadd( -1.69356, 79.5434, 9.52592, 0.1 ) }
    dend_68 { pt3dadd( -1.39485, 79.3955, 9.7997, 0.14 ) }
    dend_68 { pt3dadd( -1.08267, 79.2715, 10.055, 0.28 ) }
    dend_68 { pt3dadd( -0.248763, 79.0059, 10.7623, 0.28 ) }
    dend_68 { pt3dadd( 0.20199, 78.8838, 11.1501, 0.14 ) }
    dend_68 { pt3dadd( 0.711987, 78.771, 11.5887, 0.1 ) }
    dend_68 { pt3dadd( 1.17964, 78.6995, 11.9691, 0.1 ) }
    dend_68 { pt3dadd( 1.66374, 78.6604, 12.3208, 0.1 ) }
    dend_68 { pt3dadd( 2.03512, 78.6518, 12.5503, 0.14 ) }
    dend_68 { pt3dadd( 2.03512, 78.6518, 12.5503, 0.28 ) }
    dend_68 { pt3dadd( 2.30886, 78.6419, 12.6845, 0.28 ) }
    dend_68 { pt3dadd( 2.85357, 78.6247, 12.9519, 0.28 ) }
    dend_68 { pt3dadd( 3.40113, 78.5906, 13.2186, 0.14 ) }
    dend_68 { pt3dadd( 3.93665, 78.5563, 13.4794, 0.1 ) }
    dend_68 { pt3dadd( 4.54884, 78.5229, 13.7782, 0.1 ) }
    dend_68 { pt3dadd( 5.16278, 78.481, 14.0769, 0.1 ) }
    dend_68 { pt3dadd( 5.70071, 78.4294, 14.3368, 0.1 ) }
    dend_68 { pt3dadd( 6.31302, 78.3441, 14.6295, 0.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 48.0925, -249.603, -7.25542, 0.84 ) }
    dend_34 { pt3dadd( 47.7614, -250.673, -6.79006, 0.84 ) }
    dend_34 { pt3dadd( 47.4623, -251.863, -6.36863, 0.84 ) }
    dend_34 { pt3dadd( 47.3561, -252.538, -6.16457, 0.98 ) }
    dend_34 { pt3dadd( 47.3053, -253.215, -5.99179, 0.84 ) }
    dend_34 { pt3dadd( 47.3057, -253.659, -5.88749, 0.7 ) }
    dend_34 { pt3dadd( 47.3335, -254.28, -5.74839, 0.7 ) }
    dend_34 { pt3dadd( 47.3994, -254.58, -5.73879, 0.56 ) }
    dend_34 { pt3dadd( 47.6718, -255.221, -5.8865, 0.56 ) }
    dend_34 { pt3dadd( 48.0048, -255.617, -6.23271, 0.7 ) }
    dend_34 { pt3dadd( 48.2602, -255.865, -6.51763, 0.84 ) }
    dend_34 { pt3dadd( 48.2602, -255.865, -6.51763, 0.98 ) }
    dend_34 { pt3dadd( 48.913, -256.513, -7.24685, 1.12 ) }
    dend_34 { pt3dadd( 49.5432, -257.196, -7.95909, 0.98 ) }
    dend_34 { pt3dadd( 50.7414, -258.521, -9.48346, 0.84 ) }
    dend_34 { pt3dadd( 50.6479, -259.516, -8.86759, 0.84 ) }
    dend_34 { pt3dadd( 50.4787, -260.624, -8.21783, 0.7 ) }
    dend_34 { pt3dadd( 50.2894, -261.738, -7.58311, 0.56 ) }
    dend_34 { pt3dadd( 50.2357, -262.006, -7.42044, 0.42 ) }
    dend_34 { pt3dadd( 50.0067, -263.006, -6.77378, 0.1 ) }
    dend_34 { pt3dadd( 49.8725, -263.602, -6.40781, 0.14 ) }
    dend_34 { pt3dadd( 49.8102, -264.281, -6.19822, 0.28 ) }
    dend_34 { pt3dadd( 49.8547, -264.902, -6.22081, 0.42 ) }
    dend_34 { pt3dadd( 49.9246, -265.197, -6.31634, 0.56 ) }
    dend_34 { pt3dadd( 50.0233, -265.47, -6.447, 0.84 ) }
    dend_34 { pt3dadd( 50.5405, -266.44, -7.13369, 0.84 ) }
    dend_34 { pt3dadd( 50.8235, -266.878, -7.49816, 0.84 ) }
    dend_34 { pt3dadd( 51.3509, -267.62, -8.16779, 0.84 ) }
    dend_34 { pt3dadd( 51.5008, -267.819, -8.36626, 0.84 ) }
    dend_34 { pt3dadd( 51.8, -268.203, -8.77187, 0.84 ) }
    dend_34 { pt3dadd( 52.4092, -268.984, -9.59824, 0.7 ) }
    dend_34 { pt3dadd( 52.5573, -269.195, -9.78514, 0.56 ) }
    dend_34 { pt3dadd( 53.1545, -270.079, -10.521, 0.56 ) }
    dend_34 { pt3dadd( 53.407, -270.548, -10.8492, 0.7 ) }
    dend_34 { pt3dadd( 53.6427, -271.025, -11.1924, 0.84 ) }
    dend_34 { pt3dadd( 53.6427, -271.025, -11.1924, 0.84 ) }
    dend_34 { pt3dadd( 53.747, -271.296, -11.3228, 0.98 ) }
    dend_34 { pt3dadd( 53.9661, -271.817, -11.6088, 1.12 ) }
    dend_34 { pt3dadd( 54.4202, -272.917, -12.205, 0.98 ) }
    dend_34 { pt3dadd( 54.6374, -273.446, -12.4838, 0.84 ) }
    dend_34 { pt3dadd( 54.8537, -273.976, -12.7556, 0.84 ) }
    dend_34 { pt3dadd( 55.0733, -274.504, -13.0348, 0.7 ) }
    dend_34 { pt3dadd( 55.4865, -275.461, -13.5741, 0.56 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 48.0925, -249.603, -7.25542, 1.26 ) }
    dend_33 { pt3dadd( 48.4483, -249.683, -7.4165, 1.26 ) }
    dend_33 { pt3dadd( 49.5041, -249.921, -7.89449, 1.4 ) }
    dend_33 { pt3dadd( 49.8521, -249.999, -8.05203, 1.26 ) }
    dend_33 { pt3dadd( 50.9088, -250.237, -8.53041, 1.12 ) }
    dend_33 { pt3dadd( 51.2567, -250.315, -8.68795, 0.7 ) }
    dend_33 { pt3dadd( 51.6125, -250.395, -8.84902, 0.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 47.233, -449.827, -18.8288, 0.1 ) }
    dend_31 { pt3dadd( 46.5611, -449.082, -18.5304, 0.1 ) }
    dend_31 { pt3dadd( 45.9478, -448.249, -18.3699, 0.1 ) }
    dend_31 { pt3dadd( 45.6605, -447.859, -18.2948, 0.1 ) }
    dend_31 { pt3dadd( 45.3335, -447.414, -18.2092, 0.1 ) }
    dend_31 { pt3dadd( 45.0477, -447.026, -18.1344, 0.1 ) }
    dend_31 { pt3dadd( 44.7554, -446.629, -18.058, 0.1 ) }
    dend_31 { pt3dadd( 44.3639, -445.802, -18.1523, 0.1 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 94/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 47.233, -449.827, -18.8288, 0.1 ) }
    dend_30 { pt3dadd( 47.1331, -450.402, -19.177, 0.1 ) }
    dend_30 { pt3dadd( 47.0253, -450.996, -19.4867, 0.1 ) }
    dend_30 { pt3dadd( 46.8358, -452.038, -19.9542, 0.1 ) }
    dend_30 { pt3dadd( 46.7003, -452.655, -20.2083, 0.1 ) }
    dend_30 { pt3dadd( 46.5554, -453.266, -20.4377, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_30 { pt3dadd( 46.4726, -453.654, -20.601, 0.1 ) }
    dend_30 { pt3dadd( 46.3579, -454.261, -20.8627, 0.1 ) }
    dend_30 { pt3dadd( 46.2381, -454.877, -21.122, 0.1 ) }
    dend_30 { pt3dadd( 46.1151, -455.495, -21.3525, 0.1 ) }
    dend_30 { pt3dadd( 45.9816, -456.132, -21.5542, 0.1 ) }
    dend_30 { pt3dadd( 45.7447, -457.191, -21.8316, 0.1 ) }
    dend_30 { pt3dadd( 45.6526, -457.593, -21.9114, 0.1 ) }
    dend_30 { pt3dadd( 45.4731, -458.249, -21.9502, 0.1 ) }
    dend_30 { pt3dadd( 45.2637, -458.893, -21.9087, 0.1 ) }
    dend_30 { pt3dadd( 44.8473, -460.079, -21.7248, 0.14 ) }
    dend_30 { pt3dadd( 44.6976, -460.471, -21.6368, 0.28 ) }
    dend_30 { pt3dadd( 44.4666, -461.078, -21.4698, 0.14 ) }
    dend_30 { pt3dadd( 44.096, -462.139, -21.1793, 0.1 ) }
    dend_30 { pt3dadd( 43.8256, -462.929, -21.0227, 0.1 ) }
    dend_30 { pt3dadd( 43.6312, -463.578, -20.9532, 0.1 ) }
    dend_30 { pt3dadd( 43.5628, -463.874, -20.9441, 0.14 ) }
    dend_30 { pt3dadd( 43.4606, -464.462, -20.9506, 0.28 ) }
    dend_30 { pt3dadd( 43.4172, -464.759, -20.9602, 0.42 ) }
    dend_30 { pt3dadd( 43.2067, -466.555, -21.0471, 0.83 ) }
    dend_30 { pt3dadd( 43.0009, -468.896, -21.1107, 0.28 ) }
    dend_30 { pt3dadd( 42.908, -470.409, -21.1309, 0.55 ) }
    dend_30 { pt3dadd( 42.689, -474.289, -21.1403, 0.55 ) }
    dend_30 { pt3dadd( 42.6129, -475.899, -21.1115, 0.28 ) }
    dend_30 { pt3dadd( 42.5774, -477.423, -21.0574, 0.55 ) }
    dend_30 { pt3dadd( 42.6043, -479.591, -20.9899, 0.28 ) }
    dend_30 { pt3dadd( 42.6805, -481.081, -20.9584, 0.55 ) }
    dend_30 { pt3dadd( 42.7945, -482.394, -20.9528, 0.28 ) }
    dend_30 { pt3dadd( 43.0414, -484.323, -20.9671, 0.55 ) }
    dend_30 { pt3dadd( 43.3595, -486.693, -21.0065, 0.55 ) }
    dend_30 { pt3dadd( 43.6114, -488.821, -21.0763, 0.28 ) }
    dend_30 { pt3dadd( 43.9097, -491.215, -21.1996, 0.55 ) }
    dend_30 { pt3dadd( 44.1738, -493.392, -21.3338, 0.28 ) }
    dend_30 { pt3dadd( 44.4474, -495.784, -21.5104, 0.55 ) }
    dend_30 { pt3dadd( 44.5442, -497.015, -21.6193, 0.28 ) }
    dend_30 { pt3dadd( 44.5638, -499.669, -21.8547, 0.55 ) }
    dend_30 { pt3dadd( 44.4291, -501.316, -21.9727, 0.28 ) }
    dend_30 { pt3dadd( 44.2108, -502.771, -22.1443, 0.55 ) }
    dend_30 { pt3dadd( 43.9233, -503.997, -22.337, 0.28 ) }
    dend_30 { pt3dadd( 43.6489, -505.029, -22.5286, 0.55 ) }
    dend_30 { pt3dadd( 43.2409, -506.48, -22.8291, 0.28 ) }
    dend_30 { pt3dadd( 42.1975, -509.767, -23.5532, 0.55 ) }
    dend_30 { pt3dadd( 40.7828, -513.793, -24.4727, 0.55 ) }
    dend_30 { pt3dadd( 40.0384, -516.04, -24.9932, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 55.4865, -275.461, -13.5741, 0.7 ) }
    dend_36 { pt3dadd( 55.2572, -276.083, -13.6034, 0.7 ) }
    dend_36 { pt3dadd( 55.1249, -276.486, -13.6215, 0.84 ) }
    dend_36 { pt3dadd( 54.9158, -277.298, -13.6545, 0.7 ) }
    dend_36 { pt3dadd( 54.8376, -277.7, -13.7179, 0.56 ) }
    dend_36 { pt3dadd( 54.7546, -278.277, -13.8469, 0.7 ) }
    dend_36 { pt3dadd( 54.7293, -278.567, -13.9211, 0.56 ) }
    dend_36 { pt3dadd( 54.7466, -278.973, -14.0425, 0.56 ) }
    dend_36 { pt3dadd( 54.8299, -279.516, -14.2754, 0.56 ) }
    dend_36 { pt3dadd( 55.0589, -280.471, -14.7866, 0.7 ) }
    dend_36 { pt3dadd( 55.1215, -280.72, -14.914, 0.84 ) }
    dend_36 { pt3dadd( 55.2378, -281.255, -15.1583, 0.7 ) }
    dend_36 { pt3dadd( 55.3456, -281.808, -15.3574, 0.56 ) }
    dend_36 { pt3dadd( 55.5318, -282.983, -15.6402, 0.42 ) }
    dend_36 { pt3dadd( 55.5318, -282.983, -15.6402, 0.56 ) }
    dend_36 { pt3dadd( 55.6326, -284.125, -15.6267, 0.56 ) }
    dend_36 { pt3dadd( 55.666, -284.781, -15.5417, 0.7 ) }
    dend_36 { pt3dadd( 55.6703, -285.363, -15.4101, 0.56 ) }
    dend_36 { pt3dadd( 55.667, -286.007, -15.2223, 0.7 ) }
    dend_36 { pt3dadd( 55.6589, -286.564, -15.0399, 0.84 ) }
    dend_36 { pt3dadd( 55.6515, -287.143, -14.8823, 0.84 ) }
    dend_36 { pt3dadd( 55.6575, -288.267, -14.6531, 0.84 ) }
    dend_36 { pt3dadd( 55.6686, -288.916, -14.5241, 0.7 ) }
    dend_36 { pt3dadd( 55.6852, -289.506, -14.4181, 0.56 ) }
    dend_36 { pt3dadd( 55.7235, -290.171, -14.3193, 0.56 ) }
    dend_36 { pt3dadd( 55.7786, -290.825, -14.2509, 0.56 ) }
    dend_36 { pt3dadd( 55.8528, -291.417, -14.2218, 0.56 ) }
    dend_36 { pt3dadd( 55.9573, -292.007, -14.1896, 0.7 ) }
    dend_36 { pt3dadd( 56.0664, -292.583, -14.0803, 0.84 ) }
    dend_36 { pt3dadd( 56.1744, -293.145, -13.9087, 0.7 ) }
    dend_36 { pt3dadd( 56.2755, -293.684, -13.693, 0.56 ) }
    dend_36 { pt3dadd( 56.3686, -294.219, -13.4444, 0.56 ) }
    dend_36 { pt3dadd( 56.5107, -295.308, -12.9069, 0.42 ) }
    dend_36 { pt3dadd( 56.6132, -296.332, -12.4005, 0.56 ) }
    dend_36 { pt3dadd( 56.648, -296.873, -12.1503, 0.7 ) }
    dend_36 { pt3dadd( 56.6579, -297.258, -11.9974, 0.56 ) }
    dend_36 { pt3dadd( 56.6518, -297.83, -11.8272, 0.42 ) }
    dend_36 { pt3dadd( 56.6219, -298.49, -11.7098, 0.56 ) }
    dend_36 { pt3dadd( 56.5835, -299.075, -11.731, 0.7 ) }
    dend_36 { pt3dadd( 56.5326, -299.735, -11.8376, 0.56 ) }
    dend_36 { pt3dadd( 56.4643, -300.381, -11.9701, 0.56 ) }
    dend_36 { pt3dadd( 56.3923, -301.03, -12.1234, 0.56 ) }
    dend_36 { pt3dadd( 56.3423, -301.437, -12.2311, 0.7 ) }
    dend_36 { pt3dadd( 56.1971, -302.652, -12.5072, 0.56 ) }
    dend_36 { pt3dadd( 56.1285, -303.309, -12.6214, 0.7 ) }
    dend_36 { pt3dadd( 56.1069, -303.971, -12.632, 0.56 ) }
    dend_36 { pt3dadd( 56.126, -304.266, -12.5785, 0.7 ) }
    dend_36 { pt3dadd( 56.1788, -304.543, -12.4779, 0.7 ) }
    dend_36 { pt3dadd( 56.4803, -305.5, -12.0131, 0.56 ) }
    dend_36 { pt3dadd( 56.6801, -305.991, -11.7321, 0.56 ) }
    dend_36 { pt3dadd( 57.1816, -307.03, -11.2382, 0.42 ) }
    dend_36 { pt3dadd( 57.4461, -307.536, -11.0642, 0.56 ) }
    dend_36 { pt3dadd( 57.7539, -308.12, -10.9442, 0.56 ) }
    dend_36 { pt3dadd( 58.0425, -308.717, -10.9102, 0.56 ) }
    dend_36 { pt3dadd( 58.273, -309.267, -10.9709, 0.42 ) }
    dend_36 { pt3dadd( 58.6314, -310.411, -11.2038, 0.56 ) }
    dend_36 { pt3dadd( 58.737, -310.985, -11.332, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_36 { pt3dadd( 58.7493, -311.272, -11.3696, 0.56 ) }
    dend_36 { pt3dadd( 58.6983, -311.94, -11.3878, 0.56 ) }
    dend_36 { pt3dadd( 58.6435, -312.351, -11.3591, 0.7 ) }
    dend_36 { pt3dadd( 58.5462, -313.008, -11.2522, 0.56 ) }
    dend_36 { pt3dadd( 58.3917, -314.109, -10.9751, 0.56 ) }
    dend_36 { pt3dadd( 58.3319, -314.748, -10.8171, 0.42 ) }
    dend_36 { pt3dadd( 58.3242, -315.33, -10.686, 0.28 ) }
    dend_36 { pt3dadd( 58.3793, -315.917, -10.5745, 0.28 ) }
    dend_36 { pt3dadd( 58.4291, -316.207, -10.5347, 0.42 ) }
    dend_36 { pt3dadd( 58.4987, -316.498, -10.5146, 0.56 ) }
    dend_36 { pt3dadd( 58.664, -317.072, -10.5196, 0.56 ) }
    dend_36 { pt3dadd( 58.8394, -317.635, -10.5238, 0.56 ) }
    dend_36 { pt3dadd( 59.0175, -318.205, -10.528, 0.56 ) }
    dend_36 { pt3dadd( 59.1963, -318.777, -10.5322, 0.7 ) }
    dend_36 { pt3dadd( 59.3743, -319.347, -10.5364, 0.56 ) }
    dend_36 { pt3dadd( 59.553, -319.92, -10.5407, 0.56 ) }
    dend_36 { pt3dadd( 59.7399, -320.475, -10.583, 0.7 ) }
    dend_36 { pt3dadd( 59.9303, -321.038, -10.6608, 0.7 ) }
    dend_36 { pt3dadd( 60.1067, -321.588, -10.813, 0.7 ) }
    dend_36 { pt3dadd( 60.2687, -322.122, -11.0239, 0.56 ) }
    dend_36 { pt3dadd( 60.4197, -322.646, -11.2741, 0.56 ) }
    dend_36 { pt3dadd( 60.6906, -323.63, -11.7903, 0.56 ) }
    dend_36 { pt3dadd( 60.7885, -324.004, -11.9646, 0.84 ) }
    dend_36 { pt3dadd( 61.0744, -325.143, -12.4008, 0.84 ) }
    dend_36 { pt3dadd( 61.2087, -325.701, -12.5681, 0.7 ) }
    dend_36 { pt3dadd( 61.3434, -326.276, -12.6708, 0.7 ) }
    dend_36 { pt3dadd( 61.4789, -326.857, -12.6888, 0.7 ) }
    dend_36 { pt3dadd( 61.7605, -328.04, -12.5582, 0.84 ) }
    dend_36 { pt3dadd( 61.9146, -328.598, -12.4624, 0.7 ) }
    dend_36 { pt3dadd( 61.9146, -328.598, -12.4624, 0.84 ) }
    dend_36 { pt3dadd( 62.0799, -329.157, -12.3348, 0.56 ) }
    dend_36 { pt3dadd( 62.2625, -329.72, -12.234, 0.56 ) }
    dend_36 { pt3dadd( 62.4613, -330.28, -12.1789, 0.42 ) }
    dend_36 { pt3dadd( 62.6901, -330.834, -12.1797, 0.56 ) }
    dend_36 { pt3dadd( 62.6901, -330.834, -12.1797, 0.56 ) }
    dend_36 { pt3dadd( 62.8156, -331.102, -12.1538, 0.56 ) }
    dend_36 { pt3dadd( 63.1035, -331.698, -12.0414, 0.56 ) }
    dend_36 { pt3dadd( 63.3565, -332.221, -11.9065, 0.56 ) }
    dend_36 { pt3dadd( 63.6156, -332.816, -11.7345, 0.56 ) }
    dend_36 { pt3dadd( 63.7203, -333.082, -11.6546, 0.7 ) }
    dend_36 { pt3dadd( 64.0974, -334.077, -11.3587, 0.7 ) }
    dend_36 { pt3dadd( 64.3031, -334.615, -11.2023, 0.56 ) }
    dend_36 { pt3dadd( 64.5171, -335.155, -11.0514, 0.42 ) }
    dend_36 { pt3dadd( 64.792, -335.751, -10.9051, 0.28 ) }
    dend_36 { pt3dadd( 64.9259, -336.015, -10.8555, 0.14 ) }
    dend_36 { pt3dadd( 65.1268, -336.386, -10.8143, 0.7 ) }
    dend_36 { pt3dadd( 65.439, -336.971, -10.811, 0.7 ) }
    dend_36 { pt3dadd( 65.6219, -337.354, -10.8101, 0.56 ) }
    dend_36 { pt3dadd( 65.8623, -337.973, -10.8119, 0.42 ) }
    dend_36 { pt3dadd( 65.9396, -338.263, -10.8148, 0.56 ) }
    dend_36 { pt3dadd( 65.9873, -338.684, -10.8229, 0.84 ) }
    dend_36 { pt3dadd( 65.9707, -339.345, -10.7789, 0.7 ) }
    dend_36 { pt3dadd( 65.9039, -340.007, -10.6964, 0.7 ) }
    dend_36 { pt3dadd( 65.8482, -340.427, -10.6285, 0.7 ) }
    dend_36 { pt3dadd( 65.7742, -341.072, -10.5051, 0.56 ) }
    dend_36 { pt3dadd( 65.738, -341.729, -10.3664, 0.7 ) }
    dend_36 { pt3dadd( 65.7792, -342.949, -10.0839, 0.84 ) }
    dend_36 { pt3dadd( 65.8487, -343.525, -9.94097, 0.7 ) }
    dend_36 { pt3dadd( 65.9086, -343.81, -9.86911, 0.56 ) }
    dend_36 { pt3dadd( 66.1096, -344.426, -9.72597, 0.42 ) }
    dend_36 { pt3dadd( 66.3606, -344.961, -9.62458, 0.28 ) }
    dend_36 { pt3dadd( 66.5869, -345.32, -9.61977, 0.28 ) }
    dend_36 { pt3dadd( 66.7686, -345.551, -9.66439, 1.12 ) }
    dend_36 { pt3dadd( 66.957, -345.781, -9.70272, 0.7 ) }
    dend_36 { pt3dadd( 67.3671, -346.298, -9.76782, 0.56 ) }
    dend_36 { pt3dadd( 67.7478, -346.849, -9.81416, 0.42 ) }
    dend_36 { pt3dadd( 68.3314, -347.831, -9.85122, 0.28 ) }
    dend_36 { pt3dadd( 68.5166, -348.213, -9.85009, 0.42 ) }
    dend_36 { pt3dadd( 68.9251, -349.283, -9.8131, 0.56 ) }
    dend_36 { pt3dadd( 69.0919, -349.856, -9.77888, 0.56 ) }
    dend_36 { pt3dadd( 69.2317, -350.501, -9.78, 0.42 ) }
    dend_36 { pt3dadd( 69.3153, -351.092, -9.75776, 0.42 ) }
    dend_36 { pt3dadd( 69.3654, -351.688, -9.71544, 0.28 ) }
    dend_36 { pt3dadd( 69.395, -352.36, -9.70199, 0.28 ) }
    dend_36 { pt3dadd( 69.4227, -352.959, -9.72765, 0.28 ) }
    dend_36 { pt3dadd( 69.4638, -354.061, -9.75962, 0.42 ) }
    dend_36 { pt3dadd( 69.5201, -355.206, -9.77538, 0.42 ) }
    dend_36 { pt3dadd( 69.5451, -355.876, -9.77555, 0.28 ) }
    dend_36 { pt3dadd( 69.5755, -356.538, -9.76661, 0.42 ) }
    dend_36 { pt3dadd( 69.6082, -357.136, -9.7511, 0.28 ) }
    dend_36 { pt3dadd( 69.6455, -357.732, -9.72949, 0.42 ) }
    dend_36 { pt3dadd( 69.6948, -358.326, -9.70098, 0.56 ) }
    dend_36 { pt3dadd( 69.7619, -358.983, -9.71389, 0.56 ) }
    dend_36 { pt3dadd( 69.8292, -359.576, -9.72516, 0.42 ) }
    dend_36 { pt3dadd( 69.8963, -360.243, -9.73834, 0.28 ) }
    dend_36 { pt3dadd( 69.9439, -360.828, -9.75056, 0.28 ) }
    dend_36 { pt3dadd( 69.9678, -361.127, -9.75683, 0.14 ) }
    dend_36 { pt3dadd( 70.0082, -361.549, -9.76529, 0.56 ) }
    dend_36 { pt3dadd( 70.0849, -362.141, -9.77597, 0.42 ) }
    dend_36 { pt3dadd( 70.1857, -362.794, -9.78681, 0.56 ) }
    dend_36 { pt3dadd( 70.2851, -363.382, -9.79609, 0.56 ) }
    dend_36 { pt3dadd( 70.376, -363.975, -9.80597, 0.42 ) }
    dend_36 { pt3dadd( 70.4666, -364.565, -9.8158, 0.28 ) }
    dend_36 { pt3dadd( 70.5654, -365.155, -9.86468, 0.14 ) }
    dend_36 { pt3dadd( 70.6617, -365.738, -9.94648, 0.1 ) }
    dend_36 { pt3dadd( 70.7701, -366.384, -10.0305, 0.14 ) }
    dend_36 { pt3dadd( 70.8727, -367.045, -10.1052, 0.1 ) }
    dend_36 { pt3dadd( 70.9612, -367.623, -10.1561, 0.1 ) }
    dend_36 { pt3dadd( 71.1409, -368.713, -10.2158, 0.1 ) }
    dend_36 { pt3dadd( 71.1409, -368.713, -10.2158, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_36 { pt3dadd( 71.3915, -369.79, -10.1874, 0.1 ) }
    dend_36 { pt3dadd( 71.5533, -370.364, -10.1505, 0.14 ) }
    dend_36 { pt3dadd( 71.7281, -370.936, -10.0974, 0.1 ) }
    dend_36 { pt3dadd( 71.9008, -371.504, -10.0346, 0.14 ) }
    dend_36 { pt3dadd( 72.0734, -372.074, -9.96311, 0.28 ) }
    dend_36 { pt3dadd( 72.2347, -372.637, -9.92559, 0.42 ) }
    dend_36 { pt3dadd( 72.3816, -373.218, -9.9319, 0.28 ) }
    dend_36 { pt3dadd( 72.4968, -373.804, -9.94019, 0.28 ) }
    dend_36 { pt3dadd( 72.5725, -374.396, -9.95094, 0.42 ) }
    dend_36 { pt3dadd( 72.5947, -374.695, -9.95732, 0.56 ) }
    dend_36 { pt3dadd( 72.6057, -375.11, -9.96729, 0.42 ) }
    dend_36 { pt3dadd( 72.5845, -375.782, -9.98577, 0.28 ) }
    dend_36 { pt3dadd( 72.5382, -376.451, -10.0056, 0.14 ) }
    dend_36 { pt3dadd( 72.4813, -377.11, -10.0259, 0.1 ) }
    dend_36 { pt3dadd( 72.4562, -377.409, -10.0084, 0.14 ) }
    dend_36 { pt3dadd( 72.4562, -377.409, -10.0084, 0.28 ) }
    dend_36 { pt3dadd( 72.4694, -377.822, -9.91259, 0.56 ) }
    dend_36 { pt3dadd( 72.5112, -378.381, -9.74182, 0.56 ) }
    dend_36 { pt3dadd( 72.5448, -378.659, -9.63228, 0.7 ) }
    dend_36 { pt3dadd( 72.7022, -379.644, -9.15411, 0.56 ) }
    dend_36 { pt3dadd( 72.7902, -380.163, -8.87276, 0.42 ) }
    dend_36 { pt3dadd( 72.8401, -380.418, -8.72142, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 22/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 55.4865, -275.461, -13.5741, 2.38 ) }
    dend_35 { pt3dadd( 55.6513, -275.498, -13.5551, 2.38 ) }
    dend_35 { pt3dadd( 56.0178, -275.595, -13.5342, 2.24 ) }
    dend_35 { pt3dadd( 56.3752, -275.726, -13.527, 2.1 ) }
    dend_35 { pt3dadd( 56.7097, -275.893, -13.5214, 1.96 ) }
    dend_35 { pt3dadd( 57.2343, -276.236, -13.512, 1.82 ) }
    dend_35 { pt3dadd( 57.2343, -276.236, -13.512, 1.68 ) }
    dend_35 { pt3dadd( 57.3593, -276.346, -13.5334, 0.1 ) }
    dend_35 { pt3dadd( 57.5882, -276.591, -13.5892, 0.1 ) }
    dend_35 { pt3dadd( 57.8243, -276.878, -13.6456, 0.1 ) }
    dend_35 { pt3dadd( 58.0318, -277.144, -13.6809, 0.1 ) }
    dend_35 { pt3dadd( 58.4689, -277.704, -13.7001, 0.1 ) }
    dend_35 { pt3dadd( 58.7085, -277.993, -13.6997, 0.1 ) }
    dend_35 { pt3dadd( 58.9332, -278.248, -13.6871, 0.1 ) }
    dend_35 { pt3dadd( 59.1906, -278.52, -13.6563, 0.1 ) }
    dend_35 { pt3dadd( 59.3566, -278.69, -13.6229, 0.14 ) }
    dend_35 { pt3dadd( 59.5179, -278.853, -13.5724, 0.28 ) }
    dend_35 { pt3dadd( 59.6871, -279.02, -13.5186, 0.7 ) }
    dend_35 { pt3dadd( 59.959, -279.271, -13.4571, 0.56 ) }
    dend_35 { pt3dadd( 60.1403, -279.429, -13.4485, 0.42 ) }
    dend_35 { pt3dadd( 60.4322, -279.659, -13.5009, 0.28 ) }
    dend_35 { pt3dadd( 60.726, -279.88, -13.5976, 0.14 ) }
    dend_35 { pt3dadd( 61.2652, -280.292, -13.8085, 0.1 ) }
    dend_35 { pt3dadd( 61.3901, -280.392, -13.8647, 0.14 ) }
    dend_35 { pt3dadd( 61.8894, -280.803, -14.1085, 0.1 ) }
    dend_35 { pt3dadd( 62.348, -281.195, -14.3482, 0.14 ) }
    dend_35 { pt3dadd( 62.348, -281.195, -14.3482, 0.28 ) }
    dend_35 { pt3dadd( 62.7649, -281.627, -14.5293, 0.28 ) }
    dend_35 { pt3dadd( 62.9714, -281.89, -14.5781, 0.42 ) }
    dend_35 { pt3dadd( 63.116, -282.081, -14.5944, 0.56 ) }
    dend_35 { pt3dadd( 63.116, -282.081, -14.5944, 0.7 ) }
    dend_35 { pt3dadd( 63.2253, -282.206, -14.6209, 0.84 ) }
    dend_35 { pt3dadd( 63.4849, -282.471, -14.703, 0.7 ) }
    dend_35 { pt3dadd( 63.9797, -282.92, -14.8797, 0.56 ) }
    dend_35 { pt3dadd( 64.2614, -283.15, -14.9903, 0.42 ) }
    dend_35 { pt3dadd( 64.8069, -283.557, -15.1925, 0.28 ) }
    dend_35 { pt3dadd( 64.9411, -283.653, -15.2348, 0.42 ) }
    dend_35 { pt3dadd( 65.1334, -283.774, -15.2942, 0.7 ) }
    dend_35 { pt3dadd( 65.3392, -283.892, -15.3473, 0.56 ) }
    dend_35 { pt3dadd( 65.9576, -284.226, -15.4499, 0.42 ) }
    dend_35 { pt3dadd( 66.293, -284.401, -15.4857, 0.28 ) }
    dend_35 { pt3dadd( 66.6263, -284.574, -15.4931, 0.14 ) }
    dend_35 { pt3dadd( 67.1995, -284.879, -15.4829, 0.28 ) }
    dend_35 { pt3dadd( 67.6187, -285.106, -15.4519, 0.42 ) }
    dend_35 { pt3dadd( 67.825, -285.225, -15.4205, 0.28 ) }
    dend_35 { pt3dadd( 68.2186, -285.47, -15.3159, 0.14 ) }
    dend_35 { pt3dadd( 68.4166, -285.596, -15.2529, 0.28 ) }
    dend_35 { pt3dadd( 68.7027, -285.795, -15.1127, 0.42 ) }
    dend_35 { pt3dadd( 68.9591, -286.002, -14.9359, 0.28 ) }
    dend_35 { pt3dadd( 69.2065, -286.217, -14.7437, 0.14 ) }
    dend_35 { pt3dadd( 69.3567, -286.352, -14.6186, 0.28 ) }
    dend_35 { pt3dadd( 69.5905, -286.57, -14.4131, 0.14 ) }
    dend_35 { pt3dadd( 70.0315, -286.967, -14.0227, 0.14 ) }
    dend_35 { pt3dadd( 70.2737, -287.17, -13.8116, 0.1 ) }
    dend_35 { pt3dadd( 70.4273, -287.292, -13.6826, 0.1 ) }
    dend_35 { pt3dadd( 70.7557, -287.537, -13.426, 0.1 ) }
    dend_35 { pt3dadd( 70.9216, -287.655, -13.3089, 0.14 ) }
    dend_35 { pt3dadd( 71.2042, -287.844, -13.1374, 0.1 ) }
    dend_35 { pt3dadd( 71.4986, -288.021, -12.9898, 0.14 ) }
    dend_35 { pt3dadd( 71.6869, -288.136, -12.8956, 0.28 ) }
    dend_35 { pt3dadd( 71.9761, -288.329, -12.7528, 0.14 ) }
    dend_35 { pt3dadd( 72.1573, -288.46, -12.6645, 0.1 ) }
    dend_35 { pt3dadd( 72.4902, -288.74, -12.467, 0.14 ) }
    dend_35 { pt3dadd( 72.643, -288.892, -12.3609, 0.14 ) }
    dend_35 { pt3dadd( 72.8663, -289.139, -12.1861, 0.28 ) }
    dend_35 { pt3dadd( 73.0822, -289.392, -12.0033, 0.14 ) }
    dend_35 { pt3dadd( 73.2126, -289.553, -11.8869, 0.1 ) }
    dend_35 { pt3dadd( 73.6018, -290.037, -11.5361, 0.14 ) }
    dend_35 { pt3dadd( 73.791, -290.29, -11.3335, 0.28 ) }
    dend_35 { pt3dadd( 73.905, -290.454, -11.1997, 0.14 ) }
    dend_35 { pt3dadd( 74.0624, -290.705, -10.969, 0.1 ) }
    dend_35 { pt3dadd( 74.2077, -290.955, -10.7292, 0.1 ) }
    dend_35 { pt3dadd( 74.3342, -291.206, -10.4725, 0.1 ) }
    dend_35 { pt3dadd( 74.5556, -291.676, -9.98721, 0.14 ) }
    dend_35 { pt3dadd( 74.6503, -291.897, -9.74761, 0.28 ) }
    dend_35 { pt3dadd( 74.8233, -292.321, -9.29016, 0.28 ) }
    dend_35 { pt3dadd( 74.9267, -292.573, -9.02503, 0.14 ) }
    dend_35 { pt3dadd( 75.1361, -293.051, -8.54348, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_35 { pt3dadd( 75.2652, -293.314, -8.3078, 0.1 ) }
    dend_35 { pt3dadd( 75.3712, -293.485, -8.17647, 0.14 ) }
    dend_35 { pt3dadd( 75.5623, -293.75, -7.99116, 0.28 ) }
    dend_35 { pt3dadd( 75.7836, -294.022, -7.8346, 0.14 ) }
    dend_35 { pt3dadd( 75.9251, -294.19, -7.75093, 0.1 ) }
    dend_35 { pt3dadd( 76.1679, -294.462, -7.64415, 0.1 ) }
    dend_35 { pt3dadd( 76.3854, -294.743, -7.5232, 0.1 ) }
    dend_35 { pt3dadd( 76.5014, -294.936, -7.43786, 0.1 ) }
    dend_35 { pt3dadd( 76.5014, -294.936, -7.43786, 0.14 ) }
    dend_35 { pt3dadd( 76.5782, -295.24, -7.31295, 0.84 ) }
    dend_35 { pt3dadd( 76.5782, -295.24, -7.31295, 0.7 ) }
    dend_35 { pt3dadd( 76.6211, -295.855, -7.10798, 0.1 ) }
    dend_35 { pt3dadd( 76.6357, -296.174, -7.01682, 0.1 ) }
    dend_35 { pt3dadd( 76.657, -296.504, -6.93916, 0.1 ) }
    dend_35 { pt3dadd( 76.701, -296.832, -6.8711, 0.1 ) }
    dend_35 { pt3dadd( 76.7368, -296.995, -6.84026, 0.1 ) }
    dend_35 { pt3dadd( 76.7891, -297.154, -6.81324, 0.56 ) }
    dend_35 { pt3dadd( 76.9309, -297.458, -6.76815, 0.42 ) }
    dend_35 { pt3dadd( 77.0872, -297.752, -6.71361, 0.28 ) }
    dend_35 { pt3dadd( 77.2735, -298.076, -6.64539, 0.28 ) }
    dend_35 { pt3dadd( 77.3911, -298.275, -6.60164, 0.56 ) }
    dend_35 { pt3dadd( 77.5784, -298.598, -6.53282, 0.42 ) }
    dend_35 { pt3dadd( 77.6941, -298.798, -6.49032, 0.28 ) }
    dend_35 { pt3dadd( 77.7765, -298.943, -6.46038, 0.56 ) }
    dend_35 { pt3dadd( 77.9341, -299.239, -6.40526, 0.42 ) }
    dend_35 { pt3dadd( 78.0822, -299.539, -6.35607, 0.28 ) }
    dend_35 { pt3dadd( 78.2275, -299.841, -6.30868, 0.42 ) }
    dend_35 { pt3dadd( 78.3881, -300.181, -6.25719, 0.56 ) }
    dend_35 { pt3dadd( 78.4614, -300.33, -6.23298, 0.7 ) }
    dend_35 { pt3dadd( 78.5413, -300.478, -6.2047, 0.84 ) }
    dend_35 { pt3dadd( 78.7346, -300.796, -6.13184, 0.7 ) }
    dend_35 { pt3dadd( 78.9436, -301.097, -6.04789, 0.56 ) }
    dend_35 { pt3dadd( 79.1357, -301.364, -5.96951, 0.42 ) }
    dend_35 { pt3dadd( 79.3486, -301.666, -5.88352, 0.28 ) }
    dend_35 { pt3dadd( 79.4773, -301.856, -5.83235, 0.14 ) }
    dend_35 { pt3dadd( 79.676, -302.171, -5.75596, 0.1 ) }
    dend_35 { pt3dadd( 79.9225, -302.573, -5.70445, 0.1 ) }
    dend_35 { pt3dadd( 80.0449, -302.78, -5.69806, 0.84 ) }
    dend_35 { pt3dadd( 80.2131, -303.073, -5.71251, 0.7 ) }
    dend_35 { pt3dadd( 80.3856, -303.36, -5.77023, 0.56 ) }
    dend_35 { pt3dadd( 80.5565, -303.638, -5.856, 0.42 ) }
    dend_35 { pt3dadd( 80.9121, -304.191, -6.0609, 0.28 ) }
    dend_35 { pt3dadd( 81.0009, -304.326, -6.11361, 0.42 ) }
    dend_35 { pt3dadd( 81.093, -304.463, -6.15213, 0.56 ) }
    dend_35 { pt3dadd( 81.473, -305.056, -6.25196, 0.42 ) }
    dend_35 { pt3dadd( 81.644, -305.349, -6.2639, 0.28 ) }
    dend_35 { pt3dadd( 81.8123, -305.683, -6.23437, 0.14 ) }
    dend_35 { pt3dadd( 81.9454, -305.987, -6.16888, 0.1 ) }
    dend_35 { pt3dadd( 82.2076, -306.628, -6.00129, 0.1 ) }
    dend_35 { pt3dadd( 82.3191, -306.934, -5.9089, 0.1 ) }
    dend_35 { pt3dadd( 82.4131, -307.243, -5.80337, 0.1 ) }
    dend_35 { pt3dadd( 82.5074, -307.553, -5.7093, 0.1 ) }
    dend_35 { pt3dadd( 82.5787, -307.776, -5.65358, 0.1 ) }
    dend_35 { pt3dadd( 82.635, -307.933, -5.62402, 0.56 ) }
    dend_35 { pt3dadd( 82.7508, -308.25, -5.5953, 0.42 ) }
    dend_35 { pt3dadd( 82.8613, -308.568, -5.56987, 0.28 ) }
    dend_35 { pt3dadd( 82.9647, -308.885, -5.54835, 0.14 ) }
    dend_35 { pt3dadd( 83.0799, -309.242, -5.52479, 0.1 ) }
    dend_35 { pt3dadd( 83.1867, -309.563, -5.50185, 0.1 ) }
    dend_35 { pt3dadd( 83.313, -309.921, -5.47212, 0.14 ) }
    dend_35 { pt3dadd( 83.4475, -310.233, -5.46029, 0.1 ) }
    dend_35 { pt3dadd( 83.5228, -310.383, -5.46118, 0.1 ) }
    dend_35 { pt3dadd( 83.7071, -310.715, -5.47768, 0.1 ) }
    dend_35 { pt3dadd( 83.8974, -311.038, -5.50606, 0.1 ) }
    dend_35 { pt3dadd( 84.0813, -311.32, -5.53138, 0.1 ) }
    dend_35 { pt3dadd( 84.4466, -311.855, -5.57465, 0.1 ) }
    dend_35 { pt3dadd( 84.537, -311.999, -5.57239, 0.56 ) }
    dend_35 { pt3dadd( 84.7041, -312.291, -5.53902, 0.42 ) }
    dend_35 { pt3dadd( 84.8508, -312.585, -5.48181, 0.28 ) }
    dend_35 { pt3dadd( 85.0033, -312.921, -5.38849, 0.42 ) }
    dend_35 { pt3dadd( 85.1308, -313.209, -5.2831, 0.28 ) }
    dend_35 { pt3dadd( 85.3926, -313.816, -5.01711, 0.14 ) }
    dend_35 { pt3dadd( 85.5456, -314.131, -4.86925, 0.1 ) }
    dend_35 { pt3dadd( 85.6982, -314.396, -4.73427, 0.1 ) }
    dend_35 { pt3dadd( 85.9064, -314.684, -4.59938, 0.1 ) }
    dend_35 { pt3dadd( 86.0557, -314.86, -4.53276, 0.42 ) }
    dend_35 { pt3dadd( 86.3111, -315.126, -4.46334, 0.28 ) }
    dend_35 { pt3dadd( 86.4771, -315.296, -4.42757, 0.14 ) }
    dend_35 { pt3dadd( 86.7743, -315.649, -4.31328, 0.1 ) }
    dend_35 { pt3dadd( 87.0945, -316.147, -4.05019, 0.1 ) }
    dend_35 { pt3dadd( 87.2122, -316.408, -3.8782, 0.14 ) }
    dend_35 { pt3dadd( 87.2981, -316.669, -3.68157, 0.28 ) }
    dend_35 { pt3dadd( 87.3992, -317.189, -3.20407, 0.28 ) }
    dend_35 { pt3dadd( 87.4582, -317.672, -2.71283, 0.14 ) }
    dend_35 { pt3dadd( 87.4984, -318.152, -2.19075, 0.1 ) }
    dend_35 { pt3dadd( 87.5086, -318.263, -2.06252, 0.14 ) }
    dend_35 { pt3dadd( 87.5259, -318.414, -1.87626, 0.28 ) }
    dend_35 { pt3dadd( 87.571, -318.812, -1.36676, 0.7 ) }
    dend_35 { pt3dadd( 87.5914, -319.049, -1.07073, 0.56 ) }
    dend_35 { pt3dadd( 87.6082, -319.291, -0.783808, 0.42 ) }
    dend_35 { pt3dadd( 87.6156, -319.45, -0.60357, 0.56 ) }
    dend_35 { pt3dadd( 87.6303, -319.866, -0.135988, 0.1 ) }
    dend_35 { pt3dadd( 87.6211, -320.325, 0.382027, 0.1 ) }
    dend_35 { pt3dadd( 87.602, -320.797, 0.886856, 0.1 ) }
    dend_35 { pt3dadd( 87.5901, -321.026, 1.1289, 0.1 ) }
    dend_35 { pt3dadd( 87.5858, -321.197, 1.29492, 0.14 ) }
    dend_35 { pt3dadd( 87.5981, -321.38, 1.44949, 0.28 ) }
    dend_35 { pt3dadd( 87.7077, -321.893, 1.7929, 0.28 ) }
    dend_35 { pt3dadd( 87.7797, -322.177, 1.96058, 0.14 ) }
    dend_35 { pt3dadd( 87.8605, -322.505, 2.13419, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_35 { pt3dadd( 87.9012, -322.795, 2.30281, 0.1 ) }
    dend_35 { pt3dadd( 87.9237, -323.121, 2.48829, 0.14 ) }
    dend_35 { pt3dadd( 87.9287, -323.27, 2.56946, 0.28 ) }
    dend_35 { pt3dadd( 87.9351, -323.85, 2.85698, 0.1 ) }
    dend_35 { pt3dadd( 87.9328, -324.159, 2.99366, 0.1 ) }
    dend_35 { pt3dadd( 87.9362, -324.817, 3.20833, 0.1 ) }
    dend_35 { pt3dadd( 87.9299, -325.139, 3.31139, 0.1 ) }
    dend_35 { pt3dadd( 87.9248, -325.303, 3.35601, 0.1 ) }
    dend_35 { pt3dadd( 87.9372, -325.535, 3.3898, 0.1 ) }
    dend_35 { pt3dadd( 88.1363, -326.178, 3.23052, 0.1 ) }
    dend_35 { pt3dadd( 88.3913, -326.638, 2.89012, 0.1 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 11/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 72.8401, -380.418, -8.72142, 0.28 ) }
    dend_44 { pt3dadd( 74.1007, -380.364, -8.49432, 0.28 ) }
    dend_44 { pt3dadd( 74.8551, -380.333, -8.35842, 0.14 ) }
    dend_44 { pt3dadd( 75.5385, -380.304, -8.23531, 0.1 ) }
    dend_44 { pt3dadd( 76.3049, -380.271, -8.09726, 0.1 ) }
    dend_44 { pt3dadd( 76.6466, -380.257, -8.0357, 0.1 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 17/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 72.8401, -380.418, -8.72142, 0.42 ) }
    dend_37 { pt3dadd( 72.9242, -381.034, -8.51115, 0.42 ) }
    dend_37 { pt3dadd( 72.9698, -381.659, -8.30439, 0.28 ) }
    dend_37 { pt3dadd( 72.9818, -382.287, -8.1098, 0.14 ) }
    dend_37 { pt3dadd( 72.9683, -382.912, -7.9364, 0.1 ) }
    dend_37 { pt3dadd( 72.9046, -384.136, -7.63933, 0.14 ) }
    dend_37 { pt3dadd( 72.8466, -384.858, -7.48288, 0.14 ) }
    dend_37 { pt3dadd( 72.7462, -385.564, -7.34539, 0.28 ) }
    dend_37 { pt3dadd( 72.6591, -386.023, -7.2734, 0.28 ) }
    dend_37 { pt3dadd( 72.4927, -386.718, -7.14588, 0.14 ) }
    dend_37 { pt3dadd( 72.3009, -387.421, -7.01739, 0.1 ) }
    dend_37 { pt3dadd( 72.1803, -387.857, -6.95003, 0.14 ) }
    dend_37 { pt3dadd( 71.9929, -388.558, -6.8188, 0.28 ) }
    dend_37 { pt3dadd( 71.8191, -389.262, -6.67102, 0.28 ) }
    dend_37 { pt3dadd( 71.4911, -390.683, -6.35511, 0.14 ) }
    dend_37 { pt3dadd( 71.4023, -391.12, -6.25598, 0.28 ) }
    dend_37 { pt3dadd( 71.2804, -391.834, -6.10423, 0.42 ) }
    dend_37 { pt3dadd( 71.2048, -392.479, -5.9881, 0.56 ) }
    dend_37 { pt3dadd( 71.1873, -392.803, -5.94538, 0.7 ) }
    dend_37 { pt3dadd( 71.198, -393.259, -5.91626, 0.56 ) }
    dend_37 { pt3dadd( 71.2669, -393.915, -5.92705, 0.42 ) }
    dend_37 { pt3dadd( 71.3794, -394.647, -5.93834, 0.56 ) }
    dend_37 { pt3dadd( 71.5031, -395.295, -5.94785, 0.42 ) }
    dend_37 { pt3dadd( 71.6375, -395.926, -5.95683, 0.28 ) }
    dend_37 { pt3dadd( 71.7916, -396.565, -5.96554, 0.28 ) }
    dend_37 { pt3dadd( 71.9661, -397.201, -5.9738, 0.42 ) }
    dend_37 { pt3dadd( 72.1494, -397.832, -5.98177, 0.56 ) }
    dend_37 { pt3dadd( 72.3461, -398.462, -5.98945, 0.56 ) }
    dend_37 { pt3dadd( 72.5415, -399.089, -5.99711, 0.56 ) }
    dend_37 { pt3dadd( 72.7348, -399.709, -6.00466, 0.56 ) }
    dend_37 { pt3dadd( 72.9306, -400.336, -6.0123, 0.56 ) }
    dend_37 { pt3dadd( 73.1264, -400.963, -6.01995, 0.56 ) }
    dend_37 { pt3dadd( 73.3232, -401.593, -6.02763, 0.7 ) }
    dend_37 { pt3dadd( 73.5191, -402.22, -6.03527, 0.56 ) }
    dend_37 { pt3dadd( 73.716, -402.85, -6.04294, 0.56 ) }
    dend_37 { pt3dadd( 73.9083, -403.466, -6.05046, 0.42 ) }
    dend_37 { pt3dadd( 74.1052, -404.096, -6.05814, 0.56 ) }
    dend_37 { pt3dadd( 74.3011, -404.723, -6.06578, 0.42 ) }
    dend_37 { pt3dadd( 74.4978, -405.353, -6.07346, 0.56 ) }
    dend_37 { pt3dadd( 74.6936, -405.98, -6.08111, 0.7 ) }
    dend_37 { pt3dadd( 74.889, -406.607, -6.08875, 0.7 ) }
    dend_37 { pt3dadd( 75.0819, -407.227, -6.09632, 0.56 ) }
    dend_37 { pt3dadd( 75.2769, -407.854, -6.10398, 0.7 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 60/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 75.2769, -407.854, -6.10398, 1.12 ) }
    dend_43 { pt3dadd( 75.743, -407.705, -6.22152, 1.12 ) }
    dend_43 { pt3dadd( 76.1681, -407.605, -6.47682, 0.98 ) }
    dend_43 { pt3dadd( 76.1681, -407.605, -6.47682, 0.84 ) }
    dend_43 { pt3dadd( 76.527, -407.553, -6.82591, 0.28 ) }
    dend_43 { pt3dadd( 76.527, -407.553, -6.82591, 0.28 ) }
    dend_43 { pt3dadd( 76.725, -407.5, -6.97398, 0.28 ) }
    dend_43 { pt3dadd( 77.6064, -407.212, -7.48235, 0.14 ) }
    dend_43 { pt3dadd( 78.5375, -406.86, -7.85074, 0.1 ) }
    dend_43 { pt3dadd( 79.3967, -406.482, -8.06911, 0.42 ) }
    dend_43 { pt3dadd( 79.9017, -406.238, -8.14247, 0.28 ) }
    dend_43 { pt3dadd( 80.3499, -406.011, -8.17292, 0.14 ) }
    dend_43 { pt3dadd( 81.2845, -405.509, -8.14385, 0.1 ) }
    dend_43 { pt3dadd( 81.7156, -405.26, -8.07011, 0.1 ) }
    dend_43 { pt3dadd( 82.1855, -404.979, -7.95585, 0.1 ) }
    dend_43 { pt3dadd( 82.6233, -404.731, -7.90137, 0.1 ) }
    dend_43 { pt3dadd( 82.8443, -404.612, -7.87108, 0.1 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 77/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 75.2769, -407.854, -6.10398, 0.56 ) }
    dend_38 { pt3dadd( 75.4735, -408.73, -5.94448, 0.56 ) }
    dend_38 { pt3dadd( 75.5515, -409.196, -5.87967, 0.56 ) }
    dend_38 { pt3dadd( 75.6222, -409.663, -5.82892, 0.7 ) }
    dend_38 { pt3dadd( 75.6797, -410.124, -5.78765, 0.56 ) }
    dend_38 { pt3dadd( 75.7356, -410.597, -5.7527, 0.56 ) }
    dend_38 { pt3dadd( 75.8006, -411.127, -5.72031, 0.56 ) }
    dend_38 { pt3dadd( 75.8564, -411.649, -5.72198, 0.56 ) }
    dend_38 { pt3dadd( 75.9007, -412.122, -5.72251, 0.56 ) }
    dend_38 { pt3dadd( 75.9411, -412.654, -5.7216, 0.56 ) }
    dend_38 { pt3dadd( 75.9674, -413.12, -5.71937, 0.42 ) }
    dend_38 { pt3dadd( 75.9941, -413.596, -5.71706, 0.28 ) }
    dend_38 { pt3dadd( 76.0268, -414.129, -5.74976, 0.42 ) }
    dend_38 { pt3dadd( 76.0584, -414.602, -5.80675, 0.56 ) }
    dend_38 { pt3dadd( 76.0921, -415.12, -5.89476, 0.56 ) }
    dend_38 { pt3dadd( 76.1298, -415.644, -5.98425, 0.56 ) }
    dend_38 { pt3dadd( 76.1589, -416.111, -6.06567, 0.42 ) }
    dend_38 { pt3dadd( 76.2156, -416.975, -6.22214, 0.56 ) }
    dend_38 { pt3dadd( 76.265, -417.432, -6.3033, 0.7 ) }
    dend_38 { pt3dadd( 76.3095, -417.664, -6.33608, 0.84 ) }
    dend_38 { pt3dadd( 76.6237, -418.582, -6.38813, 0.84 ) }
    dend_38 { pt3dadd( 76.6237, -418.582, -6.38813, 0.84 ) }
    dend_38 { pt3dadd( 76.7369, -418.788, -6.36749, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_38 { pt3dadd( 76.9795, -419.196, -6.32036, 0.7 ) }
    dend_38 { pt3dadd( 77.2599, -419.643, -6.30725, 0.7 ) }
    dend_38 { pt3dadd( 77.5097, -420.047, -6.32009, 0.56 ) }
    dend_38 { pt3dadd( 77.7816, -420.504, -6.35688, 0.56 ) }
    dend_38 { pt3dadd( 78.0194, -420.914, -6.38891, 0.7 ) }
    dend_38 { pt3dadd( 78.2864, -421.37, -6.45795, 0.56 ) }
    dend_38 { pt3dadd( 78.5454, -421.826, -6.52232, 0.7 ) }
    dend_38 { pt3dadd( 78.7706, -422.243, -6.54127, 0.84 ) }
    dend_38 { pt3dadd( 78.9798, -422.671, -6.51696, 0.7 ) }
    dend_38 { pt3dadd( 79.1606, -423.096, -6.40414, 0.84 ) }
    dend_38 { pt3dadd( 79.4528, -423.859, -6.07658, 0.98 ) }
    dend_38 { pt3dadd( 79.7117, -424.631, -5.66737, 0.84 ) }
    dend_38 { pt3dadd( 79.9444, -425.442, -5.18686, 0.7 ) }
    dend_38 { pt3dadd( 80.0613, -425.879, -4.92002, 0.7 ) }
    dend_38 { pt3dadd( 80.2489, -426.722, -4.47624, 0.56 ) }
    dend_38 { pt3dadd( 80.3302, -427.157, -4.2963, 0.7 ) }
    dend_38 { pt3dadd( 80.3954, -427.609, -4.16855, 0.84 ) }
    dend_38 { pt3dadd( 80.4326, -427.937, -4.15501, 0.56 ) }
    dend_38 { pt3dadd( 80.4715, -428.412, -4.16782, 0.56 ) }
    dend_38 { pt3dadd( 80.5512, -429.411, -4.20012, 0.56 ) }
    dend_38 { pt3dadd( 80.5909, -429.875, -4.18752, 0.7 ) }
    dend_38 { pt3dadd( 80.6725, -430.397, -4.11484, 0.56 ) }
    dend_38 { pt3dadd( 80.7573, -430.856, -4.02547, 0.56 ) }
    dend_38 { pt3dadd( 80.9602, -431.808, -3.80962, 0.56 ) }
    dend_38 { pt3dadd( 81.058, -432.257, -3.69278, 0.56 ) }
    dend_38 { pt3dadd( 81.2577, -433.172, -3.42992, 0.7 ) }
    dend_38 { pt3dadd( 81.6569, -435.196, -2.89295, 0.56 ) }
    dend_38 { pt3dadd( 81.752, -435.708, -2.77539, 0.7 ) }
    dend_38 { pt3dadd( 81.8236, -436.17, -2.69288, 0.7 ) }
    dend_38 { pt3dadd( 81.8616, -436.496, -2.65918, 0.56 ) }
    dend_38 { pt3dadd( 81.9019, -437.026, -2.62287, 0.42 ) }
    dend_38 { pt3dadd( 81.9194, -437.553, -2.61842, 0.28 ) }
    dend_38 { pt3dadd( 81.9211, -438.028, -2.58015, 0.42 ) }
    dend_38 { pt3dadd( 81.9469, -438.558, -2.50965, 0.56 ) }
    dend_38 { pt3dadd( 81.995, -439.073, -2.42018, 0.7 ) }
    dend_38 { pt3dadd( 82.0663, -439.534, -2.32871, 0.56 ) }
    dend_38 { pt3dadd( 82.1689, -439.986, -2.22892, 0.7 ) }
    dend_38 { pt3dadd( 82.4075, -440.811, -2.03463, 0.84 ) }
    dend_38 { pt3dadd( 82.5444, -441.262, -1.96065, 0.7 ) }
    dend_38 { pt3dadd( 82.692, -441.712, -1.92956, 0.56 ) }
    dend_38 { pt3dadd( 82.837, -442.155, -1.94632, 0.42 ) }
    dend_38 { pt3dadd( 82.9343, -442.48, -1.99194, 0.56 ) }
    dend_38 { pt3dadd( 82.9939, -442.696, -2.0427, 0.7 ) }
    dend_38 { pt3dadd( 83.2084, -443.63, -2.33507, 0.56 ) }
    dend_38 { pt3dadd( 83.2883, -444.081, -2.46973, 0.56 ) }
    dend_38 { pt3dadd( 83.3511, -444.536, -2.59039, 0.56 ) }
    dend_38 { pt3dadd( 83.392, -445.0, -2.69101, 0.56 ) }
    dend_38 { pt3dadd( 83.4051, -445.226, -2.72572, 0.56 ) }
    dend_38 { pt3dadd( 83.4153, -445.558, -2.78095, 0.98 ) }
    dend_38 { pt3dadd( 83.4291, -446.086, -2.85927, 0.84 ) }
    dend_38 { pt3dadd( 83.4211, -446.534, -2.98828, 0.84 ) }
    dend_38 { pt3dadd( 83.4105, -446.847, -3.11443, 0.28 ) }
    dend_38 { pt3dadd( 83.4009, -447.275, -3.31998, 0.28 ) }
    dend_38 { pt3dadd( 83.3992, -448.152, -3.79373, 0.28 ) }
    dend_38 { pt3dadd( 83.4103, -448.557, -4.04058, 0.28 ) }
    dend_38 { pt3dadd( 83.4871, -449.306, -4.42846, 0.42 ) }
    dend_38 { pt3dadd( 83.561, -449.755, -4.57213, 0.84 ) }
    dend_38 { pt3dadd( 83.6445, -450.216, -4.65262, 0.84 ) }
    dend_38 { pt3dadd( 83.6445, -450.216, -4.65262, 0.7 ) }
    dend_38 { pt3dadd( 83.6445, -450.216, -4.65262, 0.84 ) }
    dend_38 { pt3dadd( 83.9783, -452.275, -4.7424, 0.55 ) }
    dend_38 { pt3dadd( 84.318, -454.371, -4.77477, 0.83 ) }
    dend_38 { pt3dadd( 84.6847, -456.739, -4.80898, 0.83 ) }
    dend_38 { pt3dadd( 84.7617, -457.257, -4.81601, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 64/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 84.7617, -457.257, -4.81601, 0.55 ) }
    dend_42 { pt3dadd( 84.0838, -459.041, -4.24704, 0.55 ) }
    dend_42 { pt3dadd( 83.4575, -460.541, -3.83381, 0.83 ) }
    dend_42 { pt3dadd( 82.7877, -462.128, -3.52516, 0.83 ) }
    dend_42 { pt3dadd( 81.8366, -464.381, -3.08682, 0.55 ) }
    dend_42 { pt3dadd( 81.2531, -465.763, -2.81792, 0.28 ) }
    dend_42 { pt3dadd( 80.5291, -467.478, -2.48428, 0.55 ) }
    dend_42 { pt3dadd( 79.9869, -468.888, -2.35243, 0.28 ) }
    dend_42 { pt3dadd( 79.3624, -470.344, -2.34752, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 84.7617, -457.257, -4.81601, 0.83 ) }
    dend_39 { pt3dadd( 84.8996, -459.055, -4.70493, 0.83 ) }
    dend_39 { pt3dadd( 85.0502, -460.334, -4.61609, 0.55 ) }
    dend_39 { pt3dadd( 85.1826, -461.427, -4.53911, 0.83 ) }
    dend_39 { pt3dadd( 85.2853, -462.099, -4.4817, 0.55 ) }
    dend_39 { pt3dadd( 85.5342, -463.558, -4.35223, 0.83 ) }
    dend_39 { pt3dadd( 85.7777, -465.042, -4.22474, 0.83 ) }
    dend_39 { pt3dadd( 86.0512, -466.552, -4.0882, 0.83 ) }
    dend_39 { pt3dadd( 86.4359, -468.59, -3.90489, 0.83 ) }
    dend_39 { pt3dadd( 86.6783, -469.897, -3.77056, 0.83 ) }
    dend_39 { pt3dadd( 86.9056, -471.197, -3.64384, 0.83 ) }
    dend_39 { pt3dadd( 87.4949, -474.401, -3.32031, 0.83 ) }
    dend_39 { pt3dadd( 87.7154, -475.481, -3.22171, 0.55 ) }
    dend_39 { pt3dadd( 88.0995, -477.146, -3.10075, 0.83 ) }
    dend_39 { pt3dadd( 88.3547, -478.103, -3.04169, 0.83 ) }
    dend_39 { pt3dadd( 88.7661, -479.505, -2.9828, 0.55 ) }
    dend_39 { pt3dadd( 89.4125, -481.45, -2.93037, 0.55 ) }
    dend_39 { pt3dadd( 90.0617, -483.143, -2.91301, 0.55 ) }
    dend_39 { pt3dadd( 90.4517, -484.176, -2.94528, 0.55 ) }
    dend_39 { pt3dadd( 90.7464, -484.971, -2.99751, 0.55 ) }
    dend_39 { pt3dadd( 91.2786, -486.524, -3.13131, 0.83 ) }
    dend_39 { pt3dadd( 91.768, -488.126, -3.27966, 0.55 ) }
    dend_39 { pt3dadd( 92.152, -489.576, -3.44434, 0.55 ) }
    dend_39 { pt3dadd( 92.5117, -491.053, -3.61792, 0.55 ) }
    dend_39 { pt3dadd( 93.1145, -493.766, -3.94794, 0.55 ) }
    dend_39 { pt3dadd( 93.2964, -494.623, -4.06118, 0.55 ) }
    dend_39 { pt3dadd( 93.5215, -495.738, -4.21413, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_39 { pt3dadd( 94.0206, -498.139, -4.55309, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 94.0206, -498.139, -4.55309, 0.28 ) }
    dend_41 { pt3dadd( 93.9866, -498.584, -5.34123, 0.28 ) }
    dend_41 { pt3dadd( 93.6317, -499.264, -6.51725, 0.55 ) }
    dend_41 { pt3dadd( 93.4412, -499.551, -7.08546, 0.28 ) }
    dend_41 { pt3dadd( 93.2026, -499.925, -7.89336, 0.55 ) }
    dend_41 { pt3dadd( 92.2832, -501.392, -11.2112, 0.28 ) }
    dend_41 { pt3dadd( 92.0432, -501.825, -12.1891, 0.55 ) }
    dend_41 { pt3dadd( 91.1508, -503.059, -15.119, 0.28 ) }
    dend_41 { pt3dadd( 90.7821, -503.459, -16.143, 0.55 ) }
    dend_41 { pt3dadd( 90.3756, -503.843, -17.22, 0.55 ) }
    dend_41 { pt3dadd( 89.9941, -504.176, -18.2602, 0.28 ) }
    dend_41 { pt3dadd( 89.7514, -504.581, -19.4133, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 94.0206, -498.139, -4.55309, 0.55 ) }
    dend_40 { pt3dadd( 94.5434, -500.198, -4.77921, 0.55 ) }
    dend_40 { pt3dadd( 95.4331, -503.703, -5.16401, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_7 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_75 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_58 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_57 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_55 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_24 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_76 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_72 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_59 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_71 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_27 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_29 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_68 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_36 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_35 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_38 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_39 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_51 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_61 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_14 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_53 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_63 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_62 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_64 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_65 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_66 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_18 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_70 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_67 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_23 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_50 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_73 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_74 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_77 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_26 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_21 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_60 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_32 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_33 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_34 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_44 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_37 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_43 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_31 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_42 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_40 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_41 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 5
    dend_47 nseg = 9
    dend_15 nseg = 3
    dend_2 nseg = 9
    dend_56 nseg = 3
    dend_49 nseg = 5
    dend_17 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 9
    dend_75 nseg = 3
    dend_58 nseg = 7
    dend_57 nseg = 5
    dend_55 nseg = 5
    dend_54 nseg = 9
    dend_24 nseg = 5
    dend_9 nseg = 5
    dend_76 nseg = 3
    dend_72 nseg = 3
    dend_59 nseg = 5
    dend_25 nseg = 5
    dend_20 nseg = 5
    dend_71 nseg = 5
    dend_27 nseg = 3
    dend_22 nseg = 3
    dend_11 nseg = 9
    dend_29 nseg = 13
    dend_69 nseg = 3
    dend_68 nseg = 3
    dend_30 nseg = 3
    dend_36 nseg = 5
    dend_35 nseg = 3
    dend_38 nseg = 3
    dend_39 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_BTC_070d4f32f0_0_0


