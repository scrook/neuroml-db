// Cell: dSTUT214_L5_BP_0cbab2a2ce_0_0
/*
{
  "id" : "dSTUT214_L5_BP_0cbab2a2ce_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-2.99937, 7.79633, 2.82318, 0.83", "-5.7213, 9.80056, 3.23369, 1.11", "-7.32617, 10.9815, 3.44723, 0.83", "-8.88536, 12.1189, 3.63855, 0.83", "-9.80852, 12.7674, 3.7434, 1.11", "-12.6995, 14.794, 4.07941, 1.11", "-17.8701, 18.2637, 4.6734, 0.83", "-19.7329, 19.466, 4.86954, 0.83", "-21.2081, 20.3898, 4.99138, 0.83", "-22.6466, 21.3054, 5.09684, 0.83", "-23.8176, 22.06, 5.15374, 0.55", "-24.6977, 22.5709, 5.21149, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "4.7785, 6.01083, -6.27633, 0.55", "7.70683, 6.61262, -6.93028, 0.55", "9.40604, 6.76453, -7.79559, 0.83", "12.0953, 6.92619, -9.40297, 0.55", "13.3935, 7.00423, -10.1789, 1.38", "16.5854, 7.19611, -12.0867, 0.55", "17.9449, 7.13114, -12.9969, 0.83", "24.9773, 5.93951, -18.1115, 0.55", "25.6576, 5.77927, -18.6742, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.674948, -9.18382, 2.94233, 1.11", "-0.705845, -11.7736, 3.91963, 1.11", "-0.718428, -12.8283, 4.31765, 0.83", "-0.735146, -14.2296, 4.84644, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.995344, 10.2146, -1.36953, 1.11", "1.20028, 12.8414, -1.29507, 1.11", "1.55595, 17.1217, -1.00945, 1.38", "1.58093, 17.3598, -0.99, 1.38", "2.08021, 20.2999, -0.756136, 0.83", "2.77428, 23.399, -0.363243, 0.83", "3.9592, 26.8737, 0.457306, 0.83", "4.61443, 28.1807, 0.903508, 0.83", "5.24387, 29.1199, 1.29996, 1.11", "7.03697, 31.3984, 2.28284, 0.55", "9.12231, 33.7652, 3.45634, 0.83", "11.7801, 36.1808, 4.71731, 0.55", "13.1089, 37.1761, 5.25892, 0.83", "14.9907, 38.5171, 6.1373, 0.55", "17.352, 40.2207, 7.36285, 0.55", "20.7001, 42.7888, 9.29003, 0.55", "24.3943, 45.7308, 11.4224, 0.55", "26.792, 47.6319, 13.0831, 0.55", "29.8116, 50.0268, 15.4963, 0.55", "30.45, 50.5039, 16.0515, 0.83", "32.1601, 51.7604, 17.6342, 0.55", "33.5751, 52.7375, 18.8607, 0.83", "36.8679, 55.4384, 21.7965, 0.55", "38.047, 56.433, 22.6146, 0.83", "39.0908, 57.1632, 23.1188, 0.55", "40.0915, 57.791, 23.4649, 0.83", "42.2594, 58.9508, 24.0162, 0.83", "45.079, 60.5415, 24.5151, 0.83", "46.775, 61.6045, 24.651, 0.55", "48.0733, 62.53, 24.765, 0.55", "51.4653, 64.9214, 25.0147, 0.83", "53.6381, 66.4575, 25.0926, 0.55", "56.907, 68.7086, 25.0815, 0.55", "59.8719, 70.592, 24.9516, 0.55", "62.5062, 72.1857, 24.7639, 0.55", "65.7988, 74.051, 24.3758, 0.55", "67.7898, 74.9559, 24.0675, 0.55", "69.11, 75.4637, 23.6937, 0.55", "70.8212, 75.8303, 23.0382, 0.55", "73.3147, 75.969, 21.8312, 0.55", "74.8493, 75.8556, 21.0091, 0.55", "77.1265, 75.6205, 19.9741, 0.55", "81.5579, 75.2986, 18.4154, 0.55", "85.0958, 75.1976, 17.4525, 0.55", "88.9007, 75.2578, 16.6642, 0.55", "91.385, 75.3703, 16.3536, 0.55", "97.9476, 76.2036, 15.9804, 0.55", "101.902, 76.9664, 16.0503, 0.55", "104.929, 77.7075, 16.3715, 0.55", "106.792, 78.4308, 16.6415, 0.55", "108.957, 79.5292, 16.9527, 0.55", "112.567, 81.7278, 17.19, 0.55", "113.373, 82.2625, 17.1387, 0.55", "115.649, 83.693, 16.8425, 0.55", "117.745, 85.2263, 16.5694, 0.83", "118.886, 86.078, 16.4033, 0.55", "120.586, 87.5491, 16.0946, 0.83", "130.045, 95.3236, 16.7743, 0.83", "138.208, 104.35, 16.8327, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-24.6977, 22.5709, 5.21149, 0.55", "-27.0059, 23.5244, 4.17693, 0.55", "-29.5158, 24.5612, 3.05195, 0.55", "-32.5448, 25.8125, 1.69434, 0.55", "-35.0459, 26.8456, 0.573322, 0.83", "-37.1418, 27.7114, -0.366087, 0.55", "-41.0321, 29.3185, -2.10977, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.6977, 22.5709, 5.21149, 0.55", "-26.7976, 23.1228, 4.6808, 0.55", "-29.0735, 23.5952, 4.32544, 0.55", "-31.6653, 24.1137, 3.98383, 0.55", "-35.4803, 24.7549, 3.81986, 0.55", "-38.7138, 25.1585, 3.88411, 0.55", "-42.1307, 25.5045, 4.07992, 0.55", "-45.4983, 25.563, 4.56429, 0.55", "-48.4492, 25.3046, 5.1895, 0.55", "-52.1954, 24.679, 6.2823, 0.55", "-53.8628, 24.2602, 6.94039, 0.55", "-55.6765, 23.7771, 7.71632, 0.55", "-58.8573, 22.7477, 8.91427, 0.55", "-60.5082, 22.2538, 9.31786, 0.55", "-62.2367, 21.6923, 9.7216, 0.55", "-64.2584, 21.0869, 10.0183, 0.55", "-66.4448, 20.481, 10.294, 0.55", "-69.5541, 19.6227, 10.6233, 0.55", "-73.6405, 18.7962, 10.7705, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "25.6576, 5.77927, -18.6742, 0.55", "30.3827, 6.81368, -19.6738, 0.55", "33.0947, 7.28909, -20.6433, 0.55", "35.7661, 7.64741, -21.6483, 0.55", "37.5883, 7.82294, -22.3402, 0.55", "40.2492, 8.01906, -23.3357, 0.55", "45.7627, 8.33795, -25.5824, 0.55", "52.0105, 8.69516, -28.5531, 0.55", "55.0296, 8.70438, -30.2198, 0.55", "56.6436, 8.67966, -31.2227, 0.55", "58.4127, 8.66657, -32.3944, 0.55", "61.5662, 8.55752, -34.4798, 0.55", "62.7081, 8.45625, -35.2811, 0.55", "67.5426, 8.17418, -39.0435, 0.55", "70.9637, 8.04785, -41.9599, 0.55", "72.9342, 8.0165, -43.691, 0.55", "74.8988, 7.96836, -45.4174, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "25.6576, 5.77927, -18.6742, 0.83", "27.8865, 7.06073, -18.6917, 0.83", "29.1605, 7.79335, -18.7601, 0.55", "31.0361, 8.91455, -19.0203, 0.83", "32.2974, 9.69999, -19.2331, 0.55", "34.0369, 10.8271, -19.5, 0.83", "36.1289, 12.2198, -19.7428, 0.55", "37.1811, 12.8454, -19.8225, 0.55", "39.6013, 13.9677, -19.8396, 0.83", "41.7971, 14.728, -19.5721, 0.55", "43.0244, 15.1383, -19.3045, 0.83", "44.8658, 15.7887, -18.7073, 0.55", "47.5104, 16.761, -17.5081, 0.55", "51.1819, 17.9264, -15.6557, 0.55", "54.6819, 18.9124, -13.6473, 0.55", "57.4545, 19.6642, -12.0064, 0.55", "62.0256, 20.9236, -9.27667, 0.55", "65.37, 21.9354, -7.20375, 0.55", "67.3895, 22.7068, -5.87453, 0.55", "71.1089, 24.4913, -3.38557, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.735146, -14.2296, 4.84644, 0.83", "-1.04312, -16.2839, 4.77942, 0.83", "-1.34318, -18.2854, 4.71412, 0.83", "-1.67819, -20.52, 4.64121, 0.83", "-1.85314, -21.6869, 4.60314, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.735146, -14.2296, 4.84644, 0.55", "-0.236621, -15.5007, 5.75387, 0.55", "0.21304, -17.0557, 6.94181, 0.55", "0.47795, -19.0906, 8.59565, 0.55", "0.523291, -19.881, 9.26311, 0.83", "0.452191, -21.8967, 11.2163, 0.55", "0.326035, -22.9368, 12.2491, 0.55", "0.0385535, -24.9591, 14.3499, 0.83", "-0.263067, -26.46, 16.0139, 0.55", "-0.629076, -27.6969, 17.3704, 0.55", "-1.37972, -30.0388, 19.8964, 0.55", "-1.9768, -31.9053, 21.8865, 0.55", "-2.42249, -33.402, 23.5029, 0.55", "-2.80473, -34.992, 25.1627, 0.28", "-2.90591, -35.6548, 25.8251, 0.55", "-3.06166, -36.8792, 26.9737, 0.28", "-3.04054, -38.7929, 28.4432, 0.55", "-4.5772, -45.1438, 33.7527, 0.55", "-6.26376, -51.0105, 39.6059, 0.55", "-7.51333, -55.8369, 46.5253, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-41.0321, 29.3185, -2.10977, 0.55", "-43.0095, 29.1286, -1.68609, 0.55", "-43.8608, 28.9765, -1.43974, 0.83", "-44.8814, 28.714, -1.06289, 0.55", "-45.6775, 28.4888, -0.719922, 0.83", "-47.7654, 27.9601, 0.187589, 0.55", "-48.5583, 27.7676, 0.539976, 0.28", "-49.9047, 27.4204, 1.21637, 0.55", "-51.7104, 26.9651, 2.12086, 0.55", "-53.0685, 26.6402, 2.76097, 0.55", "-54.8708, 26.2251, 3.5725, 0.28", "-55.3277, 26.1387, 3.74174, 0.55", "-56.2664, 25.9803, 4.06786, 0.28", "-56.8923, 25.906, 4.24789, 0.55", "-58.1452, 25.7861, 4.52446, 0.28", "-58.8689, 25.6971, 4.6425, 0.55", "-60.1405, 25.4609, 4.82827, 0.28", "-60.9873, 25.3086, 4.92637, 0.55", "-66.6382, 23.2033, 7.29746, 0.55", "-71.9115, 20.4381, 9.83109, 0.55", "-76.9585, 17.1531, 12.1597, 0.55", "-81.8327, 13.3514, 13.9362, 0.55", "-86.2256, 9.48588, 16.6281, 0.55", "-91.0326, 5.93464, 19.0513, 0.55", "-96.0705, 3.19906, 22.06, 0.55", "-101.016, 0.0605756, 24.794, 0.55", "-105.935, -2.78556, 27.8915, 0.55", "-110.61, -5.79419, 31.2033, 0.55", "-114.659, -9.51853, 34.5764, 0.55", "-118.852, -12.7754, 38.2701, 0.55", "-123.011, -16.4986, 41.5059, 0.55", "-126.493, -20.5774, 45.0756, 0.55", "-129.103, -24.4819, 49.5056, 0.55", "-131.452, -29.2319, 53.1163, 0.55", "-132.917, -34.1259, 56.9822, 0.55", "-134.764, -38.8234, 60.9475, 0.55", "-137.337, -43.1385, 64.9722, 0.55", "-141.247, -46.4954, 68.8803, 0.55", "-144.564, -50.4951, 72.6977, 0.55", "-146.961, -53.8089, 77.7158, 0.55", "-150.343, -56.6174, 82.4763, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-41.0321, 29.3185, -2.10977, 0.55", "-42.4093, 30.1889, -4.02127, 0.55", "-43.4065, 31.1633, -6.09293, 0.55", "-44.3169, 32.3287, -8.25114, 0.55", "-44.8871, 33.0584, -9.60258, 0.55", "-45.9271, 34.3895, -12.0678, 0.83", "-46.6879, 35.3633, -13.8713, 0.55", "-47.4993, 36.721, -16.4987, 0.83", "-47.7493, 37.6078, -17.9353, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-73.6405, 18.7962, 10.7705, 0.28", "-74.7355, 16.9018, 10.0161, 0.28", "-75.2514, 16.0967, 9.60972, 0.28", "-75.9137, 14.962, 8.99798, 0.55", "-76.4588, 13.9625, 8.47504, 0.28", "-77.2639, 12.4369, 7.70336, 0.55", "-79.5058, 7.94115, 5.53439, 0.28", "-80.2163, 6.37817, 4.64497, 0.55", "-81.2799, 3.98044, 3.18864, 0.28", "-81.8792, 2.55339, 2.25025, 0.55", "-82.2899, 1.57281, 1.57714, 0.28", "-82.7589, 0.446176, 0.815338, 0.55", "-84.1684, -3.32872, -1.60072, 0.28", "-84.6086, -4.46533, -2.37891, 0.55", "-85.3685, -6.17908, -3.78427, 0.28", "-86.0042, -7.26088, -4.81527, 0.28", "-86.5932, -7.97581, -5.55947, 0.55", "-88.7005, -9.97752, -7.64947, 0.28", "-89.6936, -10.7863, -8.49618, 0.55", "-92.1184, -12.6088, -10.5851, 0.28", "-94.5594, -14.2086, -12.5258, 0.28", "-97.2246, -15.7152, -14.5236, 0.28", "-98.4584, -16.2757, -15.3181, 0.55", "-104.273, -22.9659, -20.7023, 0.55", "-111.042, -29.9657, -24.2696, 0.55", "-117.467, -36.397, -29.3092, 0.55", "-123.952, -42.0962, -35.1742, 0.55", "-130.407, -46.9665, -41.8429, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-73.6405, 18.7962, 10.7705, 0.55", "-74.6541, 18.7435, 10.736, 0.55", "-77.5708, 18.5397, 10.9978, 0.55", "-78.6765, 18.4284, 11.1476, 0.55", "-81.2843, 18.0895, 11.526, 0.55", "-85.2647, 17.6345, 11.9318, 0.55", "-87.3263, 17.4615, 12.1173, 0.28", "-90.5263, 17.1383, 12.3361, 0.55", "-92.8907, 16.8668, 12.4104, 0.55", "-93.8896, 16.7458, 12.4428, 0.28", "-99.8803, 16.018, 12.6293, 0.55", "-102.656, 15.5858, 12.5343, 0.28", "-106.367, 15.0238, 12.1926, 0.28", "-109.536, 14.6127, 11.7229, 0.55", "-122.286, 14.2903, 12.7963, 0.55", "-134.832, 13.437, 15.1803, 0.55", "-146.915, 11.1373, 18.6764, 0.55", "-158.769, 10.6842, 23.4812, 0.55", "-169.385, 9.42257, 30.5206, 0.55", "-178.414, 8.47459, 39.5397, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "74.8988, 7.96836, -45.4174, 0.55", "77.3564, 8.61207, -47.5423, 0.55", "78.1348, 8.77679, -48.2603, 0.55", "79.1109, 8.9532, -49.1436, 0.55", "80.8824, 9.24619, -50.8508, 0.55", "82.7354, 9.47274, -52.671, 0.55", "83.6452, 9.51584, -53.5302, 0.83", "84.3966, 9.49486, -54.2893, 0.55", "84.9609, 9.42773, -54.9096, 0.83", "86.3304, 9.0718, -56.4799, 0.55", "87.4635, 8.6768, -57.7698, 0.55", "88.7674, 8.22138, -59.1883, 0.55", "90.217, 7.75072, -60.8016, 0.55", "91.1903, 7.41027, -61.9054, 0.55", "92.2885, 7.01894, -63.1855, 0.55", "93.2356, 6.70531, -64.3614, 0.55", "93.8284, 6.55114, -65.1864, 0.55", "94.5794, 6.24774, -66.847, 0.55", "94.9905, 6.02392, -67.8816, 0.55", "95.3488, 5.65914, -69.2483, 0.55", "95.8456, 4.96938, -71.55, 0.55", "95.9484, 4.79439, -72.0667, 0.28", "97.2764, 2.60279, -78.3415, 0.28", "97.7221, 1.97482, -80.1852, 0.83", "99.4775, -0.35703, -86.7121, 0.83", "100.383, -1.55397, -89.7303, 0.83", "100.818, -2.08394, -90.947, 0.55", "101.315, -2.60194, -92.1326, 0.55", "102.677, -3.59058, -94.3254, 0.55", "104.131, -4.46585, -96.2502, 0.28", "104.567, -4.5908, -96.3532, 0.55", "105.526, -4.76282, -96.2486, 0.28", "106.117, -4.81962, -96.1034, 0.55", "106.734, -4.88049, -95.899, 0.28", "107.473, -4.91469, -95.6241, 0.55", "108.575, -4.92436, -95.336, 0.28", "109.462, -4.96129, -95.1304, 0.55", "110.44, -4.94968, -94.9877, 0.28", "111.769, -4.94345, -94.9116, 0.55", "113.257, -4.91421, -94.9193, 0.55", "114.566, -4.88393, -95.0144, 0.28", "116.376, -4.83798, -95.2477, 0.55", "119.5, -4.71544, -95.9928, 0.55", "120.877, -4.61281, -96.4966, 0.55", "121.468, -4.55266, -96.7793, 0.83", "122.592, -4.44261, -97.4228, 0.55", "123.371, -4.3417, -97.922, 0.83", "125.464, -4.02001, -99.2953, 0.55", "126.746, -3.91223, -100.158, 0.28", "127.288, -3.89188, -100.457, 0.55", "128.778, -3.94788, -101.094, 0.28", "129.302, -4.00907, -101.277, 0.55", "130.386, -4.17968, -101.483, 0.28", "131.494, -4.432, -101.492, 0.55", "133.739, -5.00855, -101.109, 0.28", "134.777, -5.30426, -100.82, 0.55", "136.323, -5.81711, -100.299, 0.28", "138.277, -6.44974, -99.5723, 0.55", "139.69, -6.88666, -99.0275, 0.55", "142.132, -7.56742, -98.0522, 0.28", "143.132, -7.81318, -97.7379, 0.55", "144.852, -8.16689, -97.3926, 0.28", "146.559, -8.41045, -97.18, 0.55", "147.491, -8.45965, -97.2038, 0.28", "148.327, -8.40487, -97.303, 0.55", "150.68, -8.14275, -97.8213, 0.28", "152.355, -7.84778, -98.2314, 0.28", "153.807, -7.4922, -98.621, 0.55", "155.406, -7.06637, -99.1384, 0.28", "155.808, -6.93312, -99.2577, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "74.8988, 7.96836, -45.4174, 0.55", "75.4708, 5.68977, -47.4601, 0.55", "75.7609, 3.74407, -49.0299, 0.28", "76.0271, 1.93823, -50.2966, 0.55", "76.8106, -1.8885, -53.0274, 0.28", "76.852, -2.12404, -53.2368, 0.55", "77.1059, -3.34291, -54.4505, 0.28", "77.2059, -4.32376, -55.6358, 0.55", "77.2388, -5.32724, -57.0099, 0.28", "77.2336, -6.68447, -58.9597, 0.55", "77.219, -10.1032, -63.7769, 0.55", "77.1609, -13.2091, -68.2338, 0.55", "77.0842, -15.6903, -71.7995, 0.55", "76.9548, -18.1355, -75.25, 0.55", "76.9193, -18.7717, -76.1087, 0.28", "76.906, -19.4612, -76.9579, 0.55", "76.9962, -20.433, -78.0316, 0.28", "77.3689, -22.2055, -79.775, 0.55", "78.4261, -25.6919, -82.5055, 0.55", "79.0159, -27.5928, -83.7868, 0.28", "79.4904, -29.5096, -85.179, 0.55", "79.9346, -32.1737, -87.2349, 0.28", "80.1381, -34.3125, -88.9464, 0.55", "80.2887, -37.5057, -91.5083, 0.28", "80.4733, -40.826, -94.0449, 0.55", "80.669, -45.6386, -97.7734, 0.28", "80.7102, -48.2012, -99.7686, 0.55", "80.7035, -50.8119, -101.878, 0.28", "80.6679, -53.0884, -103.895, 0.28", "80.7304, -55.9016, -106.699, 0.55", "80.9977, -58.5247, -109.23, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "71.1089, 24.4913, -3.38557, 0.55", "73.4564, 24.0796, -3.05482, 0.55", "75.1565, 23.7434, -2.98398, 0.55", "78.866, 22.9979, -3.02848, 0.55", "80.5246, 22.6536, -3.20174, 0.55", "82.3307, 22.3295, -3.47724, 0.55", "84.7473, 21.9628, -4.01328, 0.55", "87.2799, 21.5502, -4.83274, 0.55", "88.5995, 21.3415, -5.41957, 0.55", "91.259, 20.9769, -6.98674, 0.55", "92.4818, 20.8254, -7.74711, 0.55", "95.3404, 20.4285, -9.61418, 0.55", "97.2744, 20.0798, -10.8744, 0.55", "98.7015, 19.8035, -11.7358, 0.83", "100.98, 19.2735, -13.0987, 0.55", "103.213, 18.6319, -14.3605, 0.83", "105.108, 17.9896, -15.3747, 0.55", "106.801, 17.4276, -16.1815, 0.55", "107.769, 17.1409, -16.5786, 0.83", "110.037, 16.4586, -17.3818, 0.28", "111.172, 16.1533, -17.7005, 0.28", "112.263, 15.7992, -18.0775, 0.28", "113.443, 15.4483, -18.4856, 0.28", "115.331, 14.928, -19.1732, 0.28", "116.093, 14.7241, -19.4251, 0.55", "117.927, 14.2253, -19.8423, 0.55", "121.236, 13.2693, -20.4291, 0.55", "122.154, 12.9747, -20.5545, 0.55", "122.974, 12.6801, -20.635, 0.83", "124.768, 12.0696, -20.656, 0.55", "126.329, 11.5378, -20.6487, 0.55", "127.805, 11.0402, -20.6339, 0.55", "128.945, 10.641, -20.658, 0.55", "130.742, 9.90118, -20.8049, 0.55", "132.843, 8.86806, -21.1262, 0.55", "136.076, 6.94182, -21.9181, 0.55", "137.83, 5.64534, -22.5119, 0.55", "139.333, 4.27462, -23.1496, 0.28", "139.774, 3.77056, -23.3839, 0.55", "140.73, 2.36132, -24.007, 0.28", "141.528, 0.779961, -24.6532, 0.55", "142.257, -1.21543, -25.2734, 0.55", "142.756, -2.53769, -25.6162, 0.28", "142.941, -3.00876, -25.7138, 0.55", "143.425, -4.1819, -25.9412, 0.28", "144.093, -5.71477, -26.2012, 0.55", "145.855, -9.42548, -26.7424, 0.55", "146.78, -11.3023, -26.977, 0.55", "147.64, -13.0251, -27.1771, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "71.1089, 24.4913, -3.38557, 0.55", "72.5305, 25.4405, -2.06637, 0.55", "72.9928, 25.7292, -1.66843, 0.55", "74.735, 26.6813, -0.217178, 0.55", "76.6724, 27.7977, 1.41176, 0.55", "79.1391, 29.2593, 3.56988, 0.55", "79.8216, 29.6612, 4.16088, 0.55", "81.0498, 30.3289, 5.23428, 0.55", "82.4085, 31.0637, 6.34218, 0.55", "84.0049, 31.923, 7.53468, 0.55", "85.5075, 32.7563, 8.65258, 0.55", "86.3407, 33.2295, 9.20763, 0.55", "87.3187, 33.8114, 9.84289, 0.55", "88.5332, 34.5534, 10.5888, 0.83", "90.5724, 35.6544, 11.6068, 0.55", "91.9387, 36.3, 12.2453, 0.83", "93.8521, 37.0825, 13.1132, 0.55", "94.4422, 37.2891, 13.3876, 0.55", "96.2829, 37.8278, 14.2478, 0.55", "99.6095, 38.5449, 15.7614, 0.55", "102.061, 38.9205, 16.8837, 0.55", "103.992, 39.1596, 17.8577, 0.55", "105.947, 39.3435, 18.9635, 0.55", "106.358, 39.3732, 19.2035, 0.28", "107.193, 39.4022, 19.7045, 0.83", "110.615, 39.4857, 21.8049, 0.55", "113.02, 39.5235, 23.2294, 0.55", "114.981, 39.6244, 24.4206, 0.55", "116.151, 39.6871, 25.1445, 0.83", "117.071, 39.7495, 25.7095, 0.28", "117.908, 39.8034, 26.2139, 0.55", "124.191, 42.1408, 30.2504, 0.55", "131.176, 42.8954, 33.7137, 0.55", "138.043, 44.6082, 37.0616, 0.55", "143.813, 46.0632, 42.155, 0.55", "149.07, 46.7451, 47.9112, 0.55", "155.34, 45.5568, 52.3867, 0.55", "161.765, 43.1571, 56.0204, 0.55", "168.937, 41.7596, 58.7679, 0.55", "175.926, 40.492, 62.0041, 0.55", "183.303, 39.7351, 64.4932, 0.55", "190.446, 39.7191, 67.6967, 0.55", "197.047, 38.7349, 71.7437, 0.55", "203.67, 39.2657, 75.888, 0.55", "209.758, 41.2228, 80.4074, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.85314, -21.6869, 4.60314, 1.38", "0.503384, -24.1842, 3.90913, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.85314, -21.6869, 4.60314, 0.55", "-3.72802, -23.7988, 4.51794, 0.55", "-5.80526, -26.5113, 4.42528, 0.55", "-7.42029, -28.3035, 4.37099, 0.55", "-8.76565, -29.802, 4.11043, 0.55", "-11.6787, -32.9047, 3.25839, 0.55", "-13.7164, -34.9755, 2.60237, 0.55", "-15.5232, -36.8325, 1.94834, 0.55", "-20.1629, -41.349, 0.272412, 0.55", "-25.739, -46.5753, -1.69554, 0.55", "-30.0509, -50.5326, -3.29714, 0.55", "-32.8006, -53.1323, -4.36059, 0.55", "-35.9576, -56.2537, -5.57078, 0.55", "-39.972, -60.7379, -7.05136, 0.55", "-42.3304, -63.9265, -7.8662, 0.55", "-45.2657, -68.5197, -8.60864, 0.55", "-47.6205, -72.8298, -9.10615, 0.55", "-50.0153, -78.2171, -9.5676, 0.55", "-52.2951, -84.5505, -9.90505, 0.55", "-53.5464, -89.3992, -10.0025, 0.55", "-54.0087, -91.8141, -9.87194, 0.55", "-54.7611, -97.4931, -9.21253, 0.55", "-55.3764, -102.808, -8.44194, 0.55", "-55.7379, -108.164, -7.22744, 0.55", "-55.992, -111.236, -6.35714, 0.55", "-56.744, -120.734, -3.29505, 0.55", "-56.8052, -121.433, -3.05706, 0.55", "-57.1035, -125.716, -1.48288, 0.55", "-58.0262, -133.368, 1.49285, 0.55", "-58.3386, -135.927, 2.32691, 0.55", "-58.8775, -139.929, 2.90189, 0.55", "-59.0109, -141.418, 2.76101, 0.55", "-59.1551, -146.466, 1.30879, 0.55", "-59.0041, -149.741, -0.339572, 0.55", "-58.5322, -154.966, -4.06269, 0.55", "-57.6464, -161.364, -9.11355, 0.28", "-57.385, -162.947, -10.5833, 0.55", "-56.9642, -165.348, -13.0316, 0.28", "-56.9028, -165.71, -13.4209, 0.55", "-56.5926, -167.69, -15.3764, 0.28", "-56.5472, -168.361, -15.8824, 0.55", "-56.4458, -171.846, -17.815, 0.28", "-56.4604, -173.031, -18.4605, 0.55", "-56.5628, -176.456, -20.1266, 0.28", "-56.5903, -177.534, -20.6465, 0.55", "-56.7219, -181.254, -22.3796, 0.28", "-56.7723, -182.966, -23.1852, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.51333, -55.8369, 46.5253, 0.55", "-10.6741, -61.8561, 52.9434, 0.55", "-14.7077, -67.0381, 59.6689, 0.55", "-18.544, -72.8228, 65.9493, 0.55", "-22.555, -78.6295, 72.0944, 0.55", "-25.6701, -85.4989, 77.5067, 0.55", "-28.6467, -92.0857, 83.371, 0.55", "-30.7537, -100.122, 87.2948, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.51333, -55.8369, 46.5253, 0.55", "-6.69955, -61.8749, 52.3764, 0.55", "-5.73741, -68.8209, 56.9536, 0.55", "-6.16342, -75.7269, 61.6561, 0.55", "-7.19739, -82.9783, 65.6201, 0.55", "-7.86878, -90.2253, 69.6767, 0.55", "-8.3953, -97.193, 74.2653, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-47.7493, 37.6078, -17.9353, 0.83", "-47.2801, 39.4764, -19.657, 0.83", "-46.2872, 43.9543, -23.4816, 0.55", "-45.8691, 45.873, -24.975, 0.83", "-45.4254, 47.9148, -26.4349, 0.55", "-44.9932, 49.9915, -27.6444, 0.55", "-44.7786, 51.0243, -28.118, 0.28", "-44.6929, 51.6925, -28.2626, 0.55", "-44.3761, 53.8866, -28.2529, 0.28", "-44.2202, 54.8223, -28.198, 0.55", "-43.7301, 58.0616, -27.8722, 0.28", "-43.4176, 60.6176, -27.528, 0.55", "-43.1389, 64.5885, -26.8743, 0.28", "-43.0277, 68.0663, -26.2377, 0.28", "-43.087, 70.0033, -25.8495, 0.55", "-43.3068, 72.2917, -25.3983, 0.28", "-43.4891, 73.378, -25.1718, 0.55", "-44.0578, 75.9351, -24.7732, 0.28", "-44.5509, 77.6405, -24.6111, 0.28", "-45.0691, 79.3179, -24.5092, 0.28", "-45.3067, 80.2066, -24.4566, 0.55", "-46.0578, 83.8226, -24.3192, 0.28", "-46.7921, 88.1224, -24.2293, 0.55", "-47.0225, 89.6095, -24.2027, 0.55", "-47.2808, 91.0959, -24.1441, 0.55", "-48.0008, 94.2467, -24.0861, 0.55", "-48.6098, 96.3097, -24.1053, 0.28", "-48.9346, 97.085, -24.1305, 0.55", "-49.9742, 99.1692, -24.1626, 0.28", "-51.1709, 101.389, -24.2982, 0.55", "-53.1988, 104.569, -24.6498, 0.28", "-54.1958, 105.889, -24.8542, 0.28", "-55.8219, 107.723, -25.3563, 0.55", "-57.6454, 109.633, -25.9992, 0.28", "-57.979, 109.931, -26.12, 0.55", "-59.1851, 110.872, -26.5585, 0.28", "-63.355, 113.867, -28.0113, 0.55", "-69.1502, 117.551, -30.2949, 0.28", "-70.2182, 118.171, -30.7875, 0.55", "-73.1493, 119.767, -32.1997, 0.28", "-74.3784, 120.423, -32.8281, 0.28", "-75.4442, 120.971, -33.429, 0.55", "-78.5555, 122.23, -35.4643, 0.28", "-80.7615, 122.89, -36.8297, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-47.7493, 37.6078, -17.9353, 0.55", "-47.9556, 38.6988, -17.936, 0.55", "-48.1011, 39.3325, -17.8762, 0.28", "-48.3134, 39.763, -17.7278, 0.55", "-48.8009, 40.7515, -17.387, 0.28", "-49.1432, 41.4459, -17.1476, 0.55", "-49.7745, 42.7259, -16.7064, 0.28", "-50.2043, 43.3878, -16.3465, 0.55", "-51.84, 44.8362, -14.9097, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-130.407, -46.9665, -41.8429, 0.55", "-134.993, -52.24, -46.3713, 0.55", "-138.168, -57.9502, -51.4456, 0.55", "-140.494, -62.633, -57.9093, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-130.407, -46.9665, -41.8429, 0.55", "-137.324, -55.1733, -48.0479, 0.55", "-142.711, -63.6553, -55.2935, 0.55", "-147.558, -72.35, -62.6446, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-178.414, 8.47459, 39.5397, 0.55", "-183.39, 8.30287, 41.9438, 0.55", "-188.552, 8.83028, 43.8369, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-178.414, 8.47459, 39.5397, 0.55", "-188.08, 7.20041, 41.3157, 0.55", "-197.785, 7.46667, 43.3285, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "80.9977, -58.5247, -109.23, 0.28", "86.7329, -60.9717, -119.027, 0.28", "87.2855, -61.2742, -119.909, 0.55", "88.2185, -61.785, -121.397, 0.28", "89.0041, -62.2151, -122.65, 0.28", "90.0441, -62.7844, -124.309, 0.55", "91.4152, -63.5349, -126.496, 0.55", "93.0488, -65.1489, -127.745, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "80.9977, -58.5247, -109.23, 0.55", "81.5047, -59.38, -110.345, 0.55", "81.6484, -59.7623, -110.84, 0.28", "81.8527, -60.4149, -111.704, 0.55", "82.3028, -61.8527, -113.609, 0.28", "82.6147, -62.8491, -114.929, 0.55", "83.1432, -64.5373, -117.165, 0.28", "83.7152, -66.5791, -120.093, 0.28", "83.9288, -67.5146, -121.461, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "147.64, -13.0251, -27.1771, 0.28", "149.691, -15.5967, -26.4358, 0.28", "152.296, -18.9828, -25.1385, 0.28", "153.948, -21.1767, -24.1955, 0.55", "154.949, -22.3826, -23.6096, 0.28", "155.481, -23.0316, -23.2868, 0.28", "158.117, -26.2386, -21.75, 0.55", "158.729, -26.9458, -21.3027, 0.28", "160.184, -28.8064, -19.9749, 0.55", "161.422, -30.4288, -18.8976, 0.28", "162.501, -31.7476, -18.0528, 0.55", "163.76, -33.3318, -17.1552, 0.55", "165.75, -35.8681, -16.0919, 0.55", "166.228, -36.4921, -15.8563, 0.55", "167.938, -38.8256, -15.0043, 0.28", "168.598, -39.7816, -14.6838, 0.55", "169.521, -41.0009, -14.2812, 0.28", "170.82, -42.7372, -13.7985, 0.55", "172.955, -45.4962, -13.4857, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "147.64, -13.0251, -27.1771, 0.55", "144.258, -12.6078, -27.1877, 0.55", "141.512, -12.269, -27.1963, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.503384, -24.1842, 3.90913, 0.83", "0.634701, -24.4345, 3.90287, 0.83", "2.12808, -26.6445, 4.03391, 0.83", "3.45287, -28.5804, 4.01151, 0.55", "4.50977, -30.1248, 3.99365, 0.55", "6.75625, -33.4076, 3.95567, 0.83", "9.48108, -37.3893, 3.90961, 0.55", "10.9607, -39.4724, 3.93642, 0.83", "13.5569, -42.782, 4.16754, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.503384, -24.1842, 3.90913, 0.55", "-1.41754, -25.3536, 0.633078, 0.55", "-3.47941, -26.6089, -2.88336, 0.55", "-5.91347, -28.0908, -7.03456, 0.55", "-8.8692, -29.8903, -12.0754, 0.55", "-10.5465, -30.9115, -14.936, 0.55", "-10.8835, -31.1166, -15.5106, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.3953, -97.193, 74.2653, 0.55", "-8.25212, -103.776, 78.8063, 0.55", "-7.46761, -110.949, 82.1792, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.3953, -97.193, 74.2653, 0.55", "-8.84004, -103.987, 78.3444, 0.55", "-9.63288, -110.607, 82.6823, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-51.84, 44.8362, -14.9097, 0.28", "-53.0193, 45.8785, -13.5831, 0.28", "-53.466, 46.2676, -13.0194, 0.55", "-54.7449, 47.3929, -11.3537, 0.28", "-55.3784, 47.958, -10.6058, 0.55", "-57.1067, 49.4935, -8.65476, 0.28", "-58.8633, 51.0542, -6.67177, 0.55", "-61.7664, 53.47, -3.37525, 0.28", "-62.3846, 53.9897, -2.67207, 0.55", "-63.7452, 55.2283, -1.17231, 0.28", "-64.2764, 55.747, -0.580009, 0.55", "-70.17, 58.9582, 4.318, 0.55", "-76.5852, 63.1608, 7.38193, 0.55", "-82.1931, 67.5186, 11.5789, 0.55", "-86.74, 72.8999, 15.7413, 0.55", "-92.1152, 77.9855, 19.2821, 0.55", "-98.1688, 81.765, 23.4833, 0.55", "-103.71, 84.8633, 28.8505, 0.55", "-108.503, 87.1111, 35.3035, 0.55", "-113.317, 89.8313, 41.5333, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-51.84, 44.8362, -14.9097, 0.55", "-55.1406, 43.5006, -13.8918, 0.55", "-56.8527, 42.7523, -13.3717, 0.28", "-58.1268, 42.1955, -12.9847, 0.55", "-59.1887, 41.7314, -12.6621, 0.28", "-59.9325, 41.4063, -12.4361, 0.55", "-61.9834, 40.5099, -11.8131, 0.28", "-63.3309, 39.8206, -11.5836, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-140.494, -62.633, -57.9093, 0.55", "-144.234, -70.5191, -63.5504, 0.55", "-147.702, -79.1083, -68.2208, 0.55", "-150.432, -86.8034, -74.6151, 0.55", "-154.203, -95.064, -79.6577, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-140.494, -62.633, -57.9093, 0.55", "-144.363, -64.4822, -66.1434, 0.55", "-147.816, -64.9166, -74.809, 0.55", "-152.025, -66.657, -82.9086, 0.55", "-158.149, -67.386, -89.942, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-147.558, -72.35, -62.6446, 0.55", "-150.981, -75.4083, -70.2717, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-147.558, -72.35, -62.6446, 0.55", "-150.999, -80.5583, -64.9585, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "93.0488, -65.1489, -127.745, 0.28", "95.4072, -66.4979, -129.228, 0.28", "96.5027, -67.1245, -129.917, 0.55", "98.5918, -68.3195, -131.23, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "93.0488, -65.1489, -127.745, 0.55", "92.6658, -65.1545, -129.601, 0.55", "91.8996, -65.1657, -133.312, 0.28", "91.65, -65.1693, -134.521, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "83.9288, -67.5146, -121.461, 0.28", "84.7749, -70.244, -125.706, 0.28", "85.1939, -71.5954, -127.808, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "83.9288, -67.5146, -121.461, 0.55", "81.5583, -68.1052, -120.762, 0.55", "74.948, -69.752, -118.813, 0.28", "73.3776, -70.1432, -118.35, 0.55", "69.0819, -71.2133, -117.084, 0.28", "66.313, -71.9031, -116.267, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.5569, -42.782, 4.16754, 0.83", "13.5986, -43.0036, 4.14078, 0.83", "14.1679, -45.9045, 3.88529, 0.83", "14.3629, -48.0884, 3.78426, 0.83", "14.3406, -50.2079, 3.86873, 0.83", "14.1515, -53.0374, 4.17038, 0.83", "13.8098, -56.3033, 4.61545, 0.83", "13.392, -59.9542, 5.31023, 0.83", "12.9429, -63.5046, 6.15099, 0.83", "12.1319, -67.8702, 7.00394, 0.83", "11.6789, -69.8767, 7.25081, 0.83", "11.358, -71.3835, 7.33872, 0.83", "10.6968, -74.275, 7.4287, 0.83", "10.205, -76.8594, 7.38102, 0.83", "9.62656, -82.3464, 6.73679, 0.83", "9.4525, -85.3368, 5.9951, 0.83", "9.34538, -88.0874, 5.10533, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.5569, -42.782, 4.16754, 0.55", "12.7809, -44.6186, 3.93761, 0.55", "12.1648, -45.955, 3.86307, 0.55", "11.7642, -46.8112, 3.90779, 0.55", "11.1561, -48.1529, 4.12755, 0.55", "9.96218, -50.8121, 4.75409, 0.55", "8.96769, -52.8312, 5.4403, 0.55", "8.11423, -54.4542, 6.16005, 0.55", "7.17448, -56.0976, 6.98719, 0.55", "6.36031, -57.4627, 7.7388, 0.28", "5.62518, -58.5828, 8.5065, 0.55", "4.14705, -60.6296, 10.1657, 0.55", "3.12998, -61.8895, 11.291, 0.55", "2.555, -62.5954, 11.9121, 0.55", "1.85062, -63.428, 12.5887, 0.83", "-0.20502, -65.8934, 14.4282, 0.28", "-0.877206, -66.7087, 15.0157, 0.55", "-2.03048, -68.1782, 16.045, 0.28", "-2.39651, -68.632, 16.3944, 0.55", "-3.19151, -69.6955, 17.2144, 0.28", "-3.62492, -70.2991, 17.6388, 0.55", "-4.97854, -72.2533, 18.4647, 0.55", "-8.02174, -77.537, 23.1473, 0.55", "-10.8225, -82.5781, 28.2569, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.8835, -31.1166, -15.5106, 0.55", "-12.9928, -32.5559, -20.2689, 0.55", "-13.6279, -32.8925, -21.6301, 0.55", "-15.2646, -33.7312, -24.9532, 0.55", "-18.9312, -35.379, -32.0052, 0.28", "-19.4972, -35.6009, -33.005, 0.55", "-21.9229, -36.6136, -37.0396, 0.55", "-25.4325, -37.9699, -42.123, 0.55", "-26.7882, -38.4293, -44.0285, 0.28", "-28.0032, -38.7189, -45.6164, 0.28", "-30.2169, -39.135, -47.9817, 0.55", "-32.8577, -39.5002, -50.9931, 0.28", "-35.2501, -39.5886, -53.8536, 0.55", "-37.1013, -39.4642, -56.0318, 0.55", "-38.3459, -39.2501, -57.5877, 0.55", "-41.9313, -38.422, -62.3071, 0.55", "-45.7143, -37.2124, -67.2011, 0.55", "-47.2877, -36.598, -69.1794, 0.28", "-48.7715, -36.0471, -71.0925, 0.55", "-51.8197, -35.1776, -74.9218, 0.28", "-52.8539, -34.9216, -76.1956, 0.83", "-54.8486, -34.4032, -78.4128, 0.28", "-56.3866, -34.1458, -79.778, 0.55", "-58.6475, -33.8578, -81.7051, 0.28", "-59.5598, -33.7277, -82.4402, 0.55", "-61.2922, -33.515, -83.7007, 0.55", "-63.9257, -32.9016, -85.5116, 0.55", "-65.6747, -32.3791, -86.5966, 0.28", "-67.1117, -31.7649, -87.3618, 0.55", "-68.783, -30.8258, -88.2822, 0.28", "-69.0524, -30.6489, -88.4447, 0.55", "-71.3704, -28.9878, -90.4109, 0.28", "-72.9761, -27.7574, -92.0469, 0.55", "-74.9534, -25.9893, -94.5671, 0.83", "-76.4929, -24.5008, -96.8827, 0.28", "-76.8714, -24.1238, -97.5346, 0.55", "-79.6959, -21.3106, -102.766, 0.28", "-80.1648, -20.8354, -103.754, 0.55", "-81.4842, -19.2957, -106.811, 0.28", "-81.8233, -18.8999, -107.604, 0.55", "-82.7296, -17.863, -109.542, 0.28", "-83.3948, -17.1121, -110.85, 0.55", "-85.0105, -15.4118, -113.427, 0.28", "-86.0, -14.4953, -114.9, 0.55", "-88.1906, -12.7118, -117.881, 0.28", "-88.8535, -12.2275, -118.753, 0.55", "-89.9233, -11.5703, -120.066, 0.28", "-90.8509, -11.013, -121.122, 0.55", "-92.8343, -9.87832, -123.168, 0.28", "-93.4422, -9.55128, -123.76, 0.55", "-98.039, -6.9993, -127.91, 0.28", "-99.6954, -5.95944, -129.205, 0.55", "-102.707, -3.92797, -131.304, 0.28", "-104.075, -2.94902, -132.205, 0.55", "-107.28, -0.716447, -134.068, 0.28", "-108.482, 0.0496456, -134.692, 0.55", "-112.957, 2.42042, -136.68, 0.28", "-114.856, 3.16703, -137.48, 0.55", "-117.627, 3.77984, -138.568, 0.55", "-119.356, 4.05111, -139.191, 0.55", "-122.974, 4.53089, -140.183, 0.28", "-126.599, 4.98197, -140.935, 0.28", "-129.641, 5.37339, -141.476, 0.55", "-133.428, 6.17854, -141.752, 0.28", "-135.333, 6.80761, -141.655, 0.55", "-139.88, 8.99643, -141.017, 0.28", "-142.265, 10.5744, -140.168, 0.55", "-143.825, 11.8286, -139.303, 0.28", "-145.62, 13.2622, -137.924, 0.55", "-147.878, 15.1408, -135.94, 0.28", "-148.742, 15.8093, -135.197, 0.55", "-153.25, 18.8532, -131.851, 0.28", "-154.78, 19.8229, -130.737, 0.55", "-158.44, 22.0018, -127.993, 0.28", "-160.432, 23.1631, -126.503, 0.55", "-162.071, 24.1151, -125.282, 0.55", "-164.031, 25.2365, -123.872, 0.28", "-165.052, 25.8024, -123.304, 0.55", "-168.461, 27.7953, -121.612, 0.28", "-170.219, 29.0327, -120.696, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.8835, -31.1166, -15.5106, 0.55", "-10.2616, -31.326, -16.3353, 0.55", "-9.59957, -31.4305, -17.1495, 0.55", "-8.71478, -31.4799, -18.1232, 0.55", "-7.95258, -31.444, -18.8867, 0.55", "-2.54477, -30.5716, -23.5265, 0.55", "-1.3143, -30.2187, -24.5917, 0.55", "0.499823, -29.5497, -26.2057, 0.55", "1.78494, -29.0278, -27.3572, 0.55", "3.06043, -28.4377, -28.4511, 0.28", "5.08525, -27.4087, -30.0371, 0.55", "8.1906, -25.7798, -32.232, 0.28", "8.42809, -25.6933, -32.4898, 0.55", "9.54702, -25.5034, -34.5553, 0.28", "10.0612, -25.4538, -36.0687, 0.55", "10.4565, -25.5049, -37.7574, 0.55", "11.1123, -25.7423, -40.7986, 0.55", "12.4124, -26.2497, -46.7618, 0.55", "13.3528, -26.6353, -50.7484, 0.55", "13.713, -26.7826, -52.1145, 0.55", "16.2971, -27.6939, -61.0335, 0.55", "17.1011, -27.9122, -63.4177, 0.55", "17.6528, -28.0405, -64.7203, 0.55", "19.1977, -28.4296, -67.6399, 0.55", "23.2876, -29.7563, -74.4117, 0.55", "24.4619, -30.1976, -76.1846, 0.28", "25.2042, -30.5017, -77.14, 0.55", "26.3265, -31.021, -78.5321, 0.28", "26.8262, -31.304, -79.0654, 0.55", "28.652, -32.4519, -80.2083, 0.28", "30.1076, -33.8172, -80.1296, 0.55", "30.9615, -34.7683, -80.0109, 0.28", "31.7171, -35.7941, -79.7823, 0.55", "32.3503, -36.8911, -79.4997, 0.28", "32.6164, -37.452, -79.3854, 0.55", "33.208, -38.9089, -79.0435, 0.28", "33.3617, -39.345, -79.0172, 0.55", "34.2518, -41.8518, -79.0128, 0.28", "34.718, -43.0221, -79.1593, 0.55", "35.8449, -45.5439, -79.746, 0.28", "36.3134, -46.481, -80.0613, 0.55", "37.9992, -49.5764, -81.2694, 0.28", "38.4182, -50.3309, -81.5946, 0.55", "39.6902, -52.72, -82.7194, 0.28", "39.95, -53.2753, -82.9444, 0.55", "40.5857, -54.7385, -83.5326, 0.28", "40.9736, -55.5923, -83.9558, 0.55", "41.3925, -56.4361, -84.4346, 0.55", "42.2277, -58.1192, -85.3771, 0.28", "42.8573, -59.1735, -86.0681, 0.55", "45.02, -61.8727, -88.3234, 0.28", "45.8984, -62.7695, -89.2493, 0.55", "46.5212, -63.3452, -89.8752, 0.28", "47.1704, -63.8786, -90.4983, 0.55", "49.2241, -65.3953, -92.3761, 0.28", "50.7864, -66.5663, -93.7494, 0.55", "53.4596, -68.7511, -95.8563, 0.28", "54.304, -69.432, -96.5151, 0.55", "55.9563, -70.6876, -97.6241, 0.28", "56.514, -71.0992, -97.9452, 0.55", "57.4376, -71.7536, -98.2914, 0.28", "58.2606, -72.3069, -98.5237, 0.55", "60.5185, -73.6889, -98.9159, 0.28", "63.1266, -75.1724, -99.3247, 0.28", "64.4569, -75.8636, -99.4374, 0.28", "65.8046, -76.5239, -99.6347, 0.55", "67.788, -77.4038, -99.9339, 0.28", "68.6724, -77.7821, -100.049, 0.83", "70.9235, -78.7717, -100.253, 0.28", "71.8969, -79.2235, -100.396, 0.55", "76.1495, -81.3683, -101.221, 0.28", "78.2694, -82.4703, -101.806, 0.28", "79.8078, -83.2747, -102.335, 0.55", "80.6966, -83.7645, -102.746, 0.55", "83.0383, -85.1009, -104.027, 0.28", "85.204, -86.4485, -105.314, 0.55", "87.1657, -87.7357, -106.484, 0.28", "88.9272, -88.9279, -107.641, 0.55", "90.3874, -89.8959, -108.588, 0.28", "91.6041, -90.6013, -109.298, 0.55", "94.5812, -92.1377, -110.875, 0.28", "96.0965, -92.9125, -111.61, 0.55", "98.3789, -94.0799, -112.627, 0.28", "100.26, -94.9822, -113.417, 0.55", "104.693, -96.9109, -115.279, 0.28", "106.505, -97.6031, -116.162, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.46761, -110.949, 82.1792, 0.55", "-7.93281, -119.677, 86.1884, 0.55", "-8.48194, -129.09, 87.7588, 0.55", "-9.00506, -138.165, 90.8002, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.46761, -110.949, 82.1792, 0.55", "-6.41686, -118.381, 87.129, 0.55", "-6.01803, -124.658, 93.6516, 0.55", "-5.02144, -129.584, 101.3, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.63288, -110.607, 82.6823, 0.55", "-9.10206, -122.515, 89.7684, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.63288, -110.607, 82.6823, 0.55", "-10.9739, -118.552, 87.6882, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.34538, -88.0874, 5.10533, 0.83", "9.9074, -90.5261, 5.60442, 0.83", "10.4275, -92.5806, 6.20761, 0.83", "10.9446, -94.6228, 6.80719, 0.83", "11.4357, -96.5623, 7.37661, 0.83", "12.1924, -99.5511, 8.25411, 0.83", "12.9437, -102.518, 9.12527, 0.83", "13.5188, -104.481, 10.0068, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "9.34538, -88.0874, 5.10533, 0.55", "10.6956, -89.8359, 4.98769, 0.55", "11.7076, -91.2031, 4.64789, 0.55", "12.3963, -92.2156, 4.29614, 0.55", "12.9976, -93.4068, 3.74533, 0.83", "13.5687, -94.7624, 2.95632, 0.55", "14.1273, -96.0883, 2.18457, 0.83", "14.6332, -97.5286, 1.21622, 0.55", "14.9166, -98.365, 0.572864, 0.83", "15.691, -101.074, -1.71847, 0.55", "16.1001, -103.205, -3.63826, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.8225, -82.5781, 28.2569, 0.55", "-15.0931, -89.9871, 33.338, 0.55", "-20.5817, -96.3291, 38.8235, 0.55", "-26.6006, -101.727, 44.8453, 0.55", "-33.3002, -105.924, 51.1976, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.8225, -82.5781, 28.2569, 0.55", "-13.4518, -88.4129, 33.1635, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "13.5188, -104.481, 10.0068, 0.55", "13.6582, -106.386, 10.5679, 0.55", "13.9051, -108.816, 11.3508, 0.55", "14.1393, -111.11, 12.0765, 0.55", "14.2865, -112.742, 12.5655, 0.55", "14.5157, -115.655, 13.3895, 0.55", "15.2972, -123.847, 15.4872, 0.55", "15.6367, -126.63, 16.0738, 0.55", "15.8864, -128.594, 16.383, 0.55", "16.1954, -130.84, 16.5459, 0.55", "16.4067, -132.581, 16.5082, 0.55", "17.0319, -136.648, 16.2452, 0.55", "17.3927, -139.739, 16.0391, 0.55", "17.686, -141.766, 15.9679, 0.55", "18.4218, -147.017, 16.0676, 0.55", "18.8898, -150.546, 16.2998, 0.55", "19.5114, -155.089, 16.8704, 0.55", "20.2808, -160.236, 17.9396, 0.55", "20.9553, -163.666, 18.8814, 0.55", "21.4051, -165.69, 19.4963, 0.55", "21.783, -167.557, 20.057, 0.55", "22.3059, -169.923, 20.6489, 0.55", "23.5006, -175.634, 21.6637, 0.55", "24.0436, -177.844, 21.9702, 0.55", "24.5861, -180.307, 22.2928, 0.55", "25.3687, -184.006, 22.7567, 0.55", "25.8293, -186.852, 23.1406, 0.55", "26.1012, -189.561, 23.4664, 0.55", "26.2387, -192.146, 23.7762, 0.55", "26.3265, -194.668, 24.1168, 0.55", "26.4009, -196.464, 24.3404, 0.55", "26.5437, -199.403, 24.5988, 0.55", "26.6677, -202.938, 24.6234, 0.55", "26.7775, -204.656, 24.499, 0.55", "26.8935, -206.167, 24.2688, 0.55", "27.2543, -209.016, 23.6567, 0.55", "27.4646, -210.824, 23.2151, 0.55", "27.7487, -213.05, 22.7605, 0.55", "27.8838, -214.614, 22.5409, 0.55", "28.1542, -218.681, 22.1379, 0.55", "28.2728, -221.723, 22.0668, 0.55", "28.3649, -226.429, 22.3652, 0.55", "28.4877, -229.458, 22.8629, 0.55", "28.5883, -232.638, 23.4952, 0.28", "28.5939, -233.916, 23.8049, 0.28", "28.5855, -237.013, 24.8561, 0.28", "28.5443, -239.871, 26.0691, 0.28", "28.852, -243.633, 28.0945, 0.28", "30.7782, -252.108, 30.3515, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.5188, -104.481, 10.0068, 0.55", "14.3501, -104.886, 11.0713, 0.55", "15.9402, -105.937, 13.3959, 0.55", "17.2543, -106.978, 15.4702, 0.28", "18.6175, -108.167, 17.7475, 0.55", "19.306, -108.932, 19.2648, 0.28", "20.3381, -110.318, 22.0643, 0.55", "20.5602, -111.063, 23.4482, 0.28", "20.5888, -111.335, 23.9988, 0.28", "20.6289, -111.724, 24.9582, 0.55", "20.947, -112.997, 28.5595, 0.28", "21.1192, -113.493, 30.0623, 0.55", "21.968, -114.917, 34.3382, 0.28", "22.5392, -115.614, 36.5696, 0.28", "23.3661, -116.504, 39.2557, 0.55", "24.8462, -117.875, 43.042, 0.28", "25.0868, -118.055, 43.5191, 0.55", "26.3939, -118.926, 45.7567, 0.28", "26.5303, -119.006, 45.9431, 0.55", "27.7003, -119.967, 47.6261, 0.28", "28.2189, -120.495, 48.4654, 0.55", "32.4183, -124.394, 55.4216, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-33.3002, -105.924, 51.1976, 0.55", "-38.0521, -109.899, 58.6414, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-33.3002, -105.924, 51.1976, 0.55", "-38.4411, -111.358, 54.6966, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_BP_0cbab2a2ce_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.99937, 7.79633, 2.82318, 0.83 ) }
    dend_43 { pt3dadd( -5.7213, 9.80056, 3.23369, 1.11 ) }
    dend_43 { pt3dadd( -7.32617, 10.9815, 3.44723, 0.83 ) }
    dend_43 { pt3dadd( -8.88536, 12.1189, 3.63855, 0.83 ) }
    dend_43 { pt3dadd( -9.80852, 12.7674, 3.7434, 1.11 ) }
    dend_43 { pt3dadd( -12.6995, 14.794, 4.07941, 1.11 ) }
    dend_43 { pt3dadd( -17.8701, 18.2637, 4.6734, 0.83 ) }
    dend_43 { pt3dadd( -19.7329, 19.466, 4.86954, 0.83 ) }
    dend_43 { pt3dadd( -21.2081, 20.3898, 4.99138, 0.83 ) }
    dend_43 { pt3dadd( -22.6466, 21.3054, 5.09684, 0.83 ) }
    dend_43 { pt3dadd( -23.8176, 22.06, 5.15374, 0.55 ) }
    dend_43 { pt3dadd( -24.6977, 22.5709, 5.21149, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.7785, 6.01083, -6.27633, 0.55 ) }
    dend_28 { pt3dadd( 7.70683, 6.61262, -6.93028, 0.55 ) }
    dend_28 { pt3dadd( 9.40604, 6.76453, -7.79559, 0.83 ) }
    dend_28 { pt3dadd( 12.0953, 6.92619, -9.40297, 0.55 ) }
    dend_28 { pt3dadd( 13.3935, 7.00423, -10.1789, 1.38 ) }
    dend_28 { pt3dadd( 16.5854, 7.19611, -12.0867, 0.55 ) }
    dend_28 { pt3dadd( 17.9449, 7.13114, -12.9969, 0.83 ) }
    dend_28 { pt3dadd( 24.9773, 5.93951, -18.1115, 0.55 ) }
    dend_28 { pt3dadd( 25.6576, 5.77927, -18.6742, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.674948, -9.18382, 2.94233, 1.11 ) }
    dend_1 { pt3dadd( -0.705845, -11.7736, 3.91963, 1.11 ) }
    dend_1 { pt3dadd( -0.718428, -12.8283, 4.31765, 0.83 ) }
    dend_1 { pt3dadd( -0.735146, -14.2296, 4.84644, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.995344, 10.2146, -1.36953, 1.11 ) }
    dend_0 { pt3dadd( 1.20028, 12.8414, -1.29507, 1.11 ) }
    dend_0 { pt3dadd( 1.55595, 17.1217, -1.00945, 1.38 ) }
    dend_0 { pt3dadd( 1.58093, 17.3598, -0.99, 1.38 ) }
    dend_0 { pt3dadd( 2.08021, 20.2999, -0.756136, 0.83 ) }
    dend_0 { pt3dadd( 2.77428, 23.399, -0.363243, 0.83 ) }
    dend_0 { pt3dadd( 3.9592, 26.8737, 0.457306, 0.83 ) }
    dend_0 { pt3dadd( 4.61443, 28.1807, 0.903508, 0.83 ) }
    dend_0 { pt3dadd( 5.24387, 29.1199, 1.29996, 1.11 ) }
    dend_0 { pt3dadd( 7.03697, 31.3984, 2.28284, 0.55 ) }
    dend_0 { pt3dadd( 9.12231, 33.7652, 3.45634, 0.83 ) }
    dend_0 { pt3dadd( 11.7801, 36.1808, 4.71731, 0.55 ) }
    dend_0 { pt3dadd( 13.1089, 37.1761, 5.25892, 0.83 ) }
    dend_0 { pt3dadd( 14.9907, 38.5171, 6.1373, 0.55 ) }
    dend_0 { pt3dadd( 17.352, 40.2207, 7.36285, 0.55 ) }
    dend_0 { pt3dadd( 20.7001, 42.7888, 9.29003, 0.55 ) }
    dend_0 { pt3dadd( 24.3943, 45.7308, 11.4224, 0.55 ) }
    dend_0 { pt3dadd( 26.792, 47.6319, 13.0831, 0.55 ) }
    dend_0 { pt3dadd( 29.8116, 50.0268, 15.4963, 0.55 ) }
    dend_0 { pt3dadd( 30.45, 50.5039, 16.0515, 0.83 ) }
    dend_0 { pt3dadd( 32.1601, 51.7604, 17.6342, 0.55 ) }
    dend_0 { pt3dadd( 33.5751, 52.7375, 18.8607, 0.83 ) }
    dend_0 { pt3dadd( 36.8679, 55.4384, 21.7965, 0.55 ) }
    dend_0 { pt3dadd( 38.047, 56.433, 22.6146, 0.83 ) }
    dend_0 { pt3dadd( 39.0908, 57.1632, 23.1188, 0.55 ) }
    dend_0 { pt3dadd( 40.0915, 57.791, 23.4649, 0.83 ) }
    dend_0 { pt3dadd( 42.2594, 58.9508, 24.0162, 0.83 ) }
    dend_0 { pt3dadd( 45.079, 60.5415, 24.5151, 0.83 ) }
    dend_0 { pt3dadd( 46.775, 61.6045, 24.651, 0.55 ) }
    dend_0 { pt3dadd( 48.0733, 62.53, 24.765, 0.55 ) }
    dend_0 { pt3dadd( 51.4653, 64.9214, 25.0147, 0.83 ) }
    dend_0 { pt3dadd( 53.6381, 66.4575, 25.0926, 0.55 ) }
    dend_0 { pt3dadd( 56.907, 68.7086, 25.0815, 0.55 ) }
    dend_0 { pt3dadd( 59.8719, 70.592, 24.9516, 0.55 ) }
    dend_0 { pt3dadd( 62.5062, 72.1857, 24.7639, 0.55 ) }
    dend_0 { pt3dadd( 65.7988, 74.051, 24.3758, 0.55 ) }
    dend_0 { pt3dadd( 67.7898, 74.9559, 24.0675, 0.55 ) }
    dend_0 { pt3dadd( 69.11, 75.4637, 23.6937, 0.55 ) }
    dend_0 { pt3dadd( 70.8212, 75.8303, 23.0382, 0.55 ) }
    dend_0 { pt3dadd( 73.3147, 75.969, 21.8312, 0.55 ) }
    dend_0 { pt3dadd( 74.8493, 75.8556, 21.0091, 0.55 ) }
    dend_0 { pt3dadd( 77.1265, 75.6205, 19.9741, 0.55 ) }
    dend_0 { pt3dadd( 81.5579, 75.2986, 18.4154, 0.55 ) }
    dend_0 { pt3dadd( 85.0958, 75.1976, 17.4525, 0.55 ) }
    dend_0 { pt3dadd( 88.9007, 75.2578, 16.6642, 0.55 ) }
    dend_0 { pt3dadd( 91.385, 75.3703, 16.3536, 0.55 ) }
    dend_0 { pt3dadd( 97.9476, 76.2036, 15.9804, 0.55 ) }
    dend_0 { pt3dadd( 101.902, 76.9664, 16.0503, 0.55 ) }
    dend_0 { pt3dadd( 104.929, 77.7075, 16.3715, 0.55 ) }
    dend_0 { pt3dadd( 106.792, 78.4308, 16.6415, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 108.957, 79.5292, 16.9527, 0.55 ) }
    dend_0 { pt3dadd( 112.567, 81.7278, 17.19, 0.55 ) }
    dend_0 { pt3dadd( 113.373, 82.2625, 17.1387, 0.55 ) }
    dend_0 { pt3dadd( 115.649, 83.693, 16.8425, 0.55 ) }
    dend_0 { pt3dadd( 117.745, 85.2263, 16.5694, 0.83 ) }
    dend_0 { pt3dadd( 118.886, 86.078, 16.4033, 0.55 ) }
    dend_0 { pt3dadd( 120.586, 87.5491, 16.0946, 0.83 ) }
    dend_0 { pt3dadd( 130.045, 95.3236, 16.7743, 0.83 ) }
    dend_0 { pt3dadd( 138.208, 104.35, 16.8327, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -24.6977, 22.5709, 5.21149, 0.55 ) }
    dend_55 { pt3dadd( -27.0059, 23.5244, 4.17693, 0.55 ) }
    dend_55 { pt3dadd( -29.5158, 24.5612, 3.05195, 0.55 ) }
    dend_55 { pt3dadd( -32.5448, 25.8125, 1.69434, 0.55 ) }
    dend_55 { pt3dadd( -35.0459, 26.8456, 0.573322, 0.83 ) }
    dend_55 { pt3dadd( -37.1418, 27.7114, -0.366087, 0.55 ) }
    dend_55 { pt3dadd( -41.0321, 29.3185, -2.10977, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.6977, 22.5709, 5.21149, 0.55 ) }
    dend_44 { pt3dadd( -26.7976, 23.1228, 4.6808, 0.55 ) }
    dend_44 { pt3dadd( -29.0735, 23.5952, 4.32544, 0.55 ) }
    dend_44 { pt3dadd( -31.6653, 24.1137, 3.98383, 0.55 ) }
    dend_44 { pt3dadd( -35.4803, 24.7549, 3.81986, 0.55 ) }
    dend_44 { pt3dadd( -38.7138, 25.1585, 3.88411, 0.55 ) }
    dend_44 { pt3dadd( -42.1307, 25.5045, 4.07992, 0.55 ) }
    dend_44 { pt3dadd( -45.4983, 25.563, 4.56429, 0.55 ) }
    dend_44 { pt3dadd( -48.4492, 25.3046, 5.1895, 0.55 ) }
    dend_44 { pt3dadd( -52.1954, 24.679, 6.2823, 0.55 ) }
    dend_44 { pt3dadd( -53.8628, 24.2602, 6.94039, 0.55 ) }
    dend_44 { pt3dadd( -55.6765, 23.7771, 7.71632, 0.55 ) }
    dend_44 { pt3dadd( -58.8573, 22.7477, 8.91427, 0.55 ) }
    dend_44 { pt3dadd( -60.5082, 22.2538, 9.31786, 0.55 ) }
    dend_44 { pt3dadd( -62.2367, 21.6923, 9.7216, 0.55 ) }
    dend_44 { pt3dadd( -64.2584, 21.0869, 10.0183, 0.55 ) }
    dend_44 { pt3dadd( -66.4448, 20.481, 10.294, 0.55 ) }
    dend_44 { pt3dadd( -69.5541, 19.6227, 10.6233, 0.55 ) }
    dend_44 { pt3dadd( -73.6405, 18.7962, 10.7705, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 25.6576, 5.77927, -18.6742, 0.55 ) }
    dend_34 { pt3dadd( 30.3827, 6.81368, -19.6738, 0.55 ) }
    dend_34 { pt3dadd( 33.0947, 7.28909, -20.6433, 0.55 ) }
    dend_34 { pt3dadd( 35.7661, 7.64741, -21.6483, 0.55 ) }
    dend_34 { pt3dadd( 37.5883, 7.82294, -22.3402, 0.55 ) }
    dend_34 { pt3dadd( 40.2492, 8.01906, -23.3357, 0.55 ) }
    dend_34 { pt3dadd( 45.7627, 8.33795, -25.5824, 0.55 ) }
    dend_34 { pt3dadd( 52.0105, 8.69516, -28.5531, 0.55 ) }
    dend_34 { pt3dadd( 55.0296, 8.70438, -30.2198, 0.55 ) }
    dend_34 { pt3dadd( 56.6436, 8.67966, -31.2227, 0.55 ) }
    dend_34 { pt3dadd( 58.4127, 8.66657, -32.3944, 0.55 ) }
    dend_34 { pt3dadd( 61.5662, 8.55752, -34.4798, 0.55 ) }
    dend_34 { pt3dadd( 62.7081, 8.45625, -35.2811, 0.55 ) }
    dend_34 { pt3dadd( 67.5426, 8.17418, -39.0435, 0.55 ) }
    dend_34 { pt3dadd( 70.9637, 8.04785, -41.9599, 0.55 ) }
    dend_34 { pt3dadd( 72.9342, 8.0165, -43.691, 0.55 ) }
    dend_34 { pt3dadd( 74.8988, 7.96836, -45.4174, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 25.6576, 5.77927, -18.6742, 0.83 ) }
    dend_29 { pt3dadd( 27.8865, 7.06073, -18.6917, 0.83 ) }
    dend_29 { pt3dadd( 29.1605, 7.79335, -18.7601, 0.55 ) }
    dend_29 { pt3dadd( 31.0361, 8.91455, -19.0203, 0.83 ) }
    dend_29 { pt3dadd( 32.2974, 9.69999, -19.2331, 0.55 ) }
    dend_29 { pt3dadd( 34.0369, 10.8271, -19.5, 0.83 ) }
    dend_29 { pt3dadd( 36.1289, 12.2198, -19.7428, 0.55 ) }
    dend_29 { pt3dadd( 37.1811, 12.8454, -19.8225, 0.55 ) }
    dend_29 { pt3dadd( 39.6013, 13.9677, -19.8396, 0.83 ) }
    dend_29 { pt3dadd( 41.7971, 14.728, -19.5721, 0.55 ) }
    dend_29 { pt3dadd( 43.0244, 15.1383, -19.3045, 0.83 ) }
    dend_29 { pt3dadd( 44.8658, 15.7887, -18.7073, 0.55 ) }
    dend_29 { pt3dadd( 47.5104, 16.761, -17.5081, 0.55 ) }
    dend_29 { pt3dadd( 51.1819, 17.9264, -15.6557, 0.55 ) }
    dend_29 { pt3dadd( 54.6819, 18.9124, -13.6473, 0.55 ) }
    dend_29 { pt3dadd( 57.4545, 19.6642, -12.0064, 0.55 ) }
    dend_29 { pt3dadd( 62.0256, 20.9236, -9.27667, 0.55 ) }
    dend_29 { pt3dadd( 65.37, 21.9354, -7.20375, 0.55 ) }
    dend_29 { pt3dadd( 67.3895, 22.7068, -5.87453, 0.55 ) }
    dend_29 { pt3dadd( 71.1089, 24.4913, -3.38557, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.735146, -14.2296, 4.84644, 0.83 ) }
    dend_11 { pt3dadd( -1.04312, -16.2839, 4.77942, 0.83 ) }
    dend_11 { pt3dadd( -1.34318, -18.2854, 4.71412, 0.83 ) }
    dend_11 { pt3dadd( -1.67819, -20.52, 4.64121, 0.83 ) }
    dend_11 { pt3dadd( -1.85314, -21.6869, 4.60314, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.735146, -14.2296, 4.84644, 0.55 ) }
    dend_2 { pt3dadd( -0.236621, -15.5007, 5.75387, 0.55 ) }
    dend_2 { pt3dadd( 0.21304, -17.0557, 6.94181, 0.55 ) }
    dend_2 { pt3dadd( 0.47795, -19.0906, 8.59565, 0.55 ) }
    dend_2 { pt3dadd( 0.523291, -19.881, 9.26311, 0.83 ) }
    dend_2 { pt3dadd( 0.452191, -21.8967, 11.2163, 0.55 ) }
    dend_2 { pt3dadd( 0.326035, -22.9368, 12.2491, 0.55 ) }
    dend_2 { pt3dadd( 0.0385535, -24.9591, 14.3499, 0.83 ) }
    dend_2 { pt3dadd( -0.263067, -26.46, 16.0139, 0.55 ) }
    dend_2 { pt3dadd( -0.629076, -27.6969, 17.3704, 0.55 ) }
    dend_2 { pt3dadd( -1.37972, -30.0388, 19.8964, 0.55 ) }
    dend_2 { pt3dadd( -1.9768, -31.9053, 21.8865, 0.55 ) }
    dend_2 { pt3dadd( -2.42249, -33.402, 23.5029, 0.55 ) }
    dend_2 { pt3dadd( -2.80473, -34.992, 25.1627, 0.28 ) }
    dend_2 { pt3dadd( -2.90591, -35.6548, 25.8251, 0.55 ) }
    dend_2 { pt3dadd( -3.06166, -36.8792, 26.9737, 0.28 ) }
    dend_2 { pt3dadd( -3.04054, -38.7929, 28.4432, 0.55 ) }
    dend_2 { pt3dadd( -4.5772, -45.1438, 33.7527, 0.55 ) }
    dend_2 { pt3dadd( -6.26376, -51.0105, 39.6059, 0.55 ) }
    dend_2 { pt3dadd( -7.51333, -55.8369, 46.5253, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -41.0321, 29.3185, -2.10977, 0.55 ) }
    dend_61 { pt3dadd( -43.0095, 29.1286, -1.68609, 0.55 ) }
    dend_61 { pt3dadd( -43.8608, 28.9765, -1.43974, 0.83 ) }
    dend_61 { pt3dadd( -44.8814, 28.714, -1.06289, 0.55 ) }
    dend_61 { pt3dadd( -45.6775, 28.4888, -0.719922, 0.83 ) }
    dend_61 { pt3dadd( -47.7654, 27.9601, 0.187589, 0.55 ) }
    dend_61 { pt3dadd( -48.5583, 27.7676, 0.539976, 0.28 ) }
    dend_61 { pt3dadd( -49.9047, 27.4204, 1.21637, 0.55 ) }
    dend_61 { pt3dadd( -51.7104, 26.9651, 2.12086, 0.55 ) }
    dend_61 { pt3dadd( -53.0685, 26.6402, 2.76097, 0.55 ) }
    dend_61 { pt3dadd( -54.8708, 26.2251, 3.5725, 0.28 ) }
    dend_61 { pt3dadd( -55.3277, 26.1387, 3.74174, 0.55 ) }
    dend_61 { pt3dadd( -56.2664, 25.9803, 4.06786, 0.28 ) }
    dend_61 { pt3dadd( -56.8923, 25.906, 4.24789, 0.55 ) }
    dend_61 { pt3dadd( -58.1452, 25.7861, 4.52446, 0.28 ) }
    dend_61 { pt3dadd( -58.8689, 25.6971, 4.6425, 0.55 ) }
    dend_61 { pt3dadd( -60.1405, 25.4609, 4.82827, 0.28 ) }
    dend_61 { pt3dadd( -60.9873, 25.3086, 4.92637, 0.55 ) }
    dend_61 { pt3dadd( -66.6382, 23.2033, 7.29746, 0.55 ) }
    dend_61 { pt3dadd( -71.9115, 20.4381, 9.83109, 0.55 ) }
    dend_61 { pt3dadd( -76.9585, 17.1531, 12.1597, 0.55 ) }
    dend_61 { pt3dadd( -81.8327, 13.3514, 13.9362, 0.55 ) }
    dend_61 { pt3dadd( -86.2256, 9.48588, 16.6281, 0.55 ) }
    dend_61 { pt3dadd( -91.0326, 5.93464, 19.0513, 0.55 ) }
    dend_61 { pt3dadd( -96.0705, 3.19906, 22.06, 0.55 ) }
    dend_61 { pt3dadd( -101.016, 0.0605756, 24.794, 0.55 ) }
    dend_61 { pt3dadd( -105.935, -2.78556, 27.8915, 0.55 ) }
    dend_61 { pt3dadd( -110.61, -5.79419, 31.2033, 0.55 ) }
    dend_61 { pt3dadd( -114.659, -9.51853, 34.5764, 0.55 ) }
    dend_61 { pt3dadd( -118.852, -12.7754, 38.2701, 0.55 ) }
    dend_61 { pt3dadd( -123.011, -16.4986, 41.5059, 0.55 ) }
    dend_61 { pt3dadd( -126.493, -20.5774, 45.0756, 0.55 ) }
    dend_61 { pt3dadd( -129.103, -24.4819, 49.5056, 0.55 ) }
    dend_61 { pt3dadd( -131.452, -29.2319, 53.1163, 0.55 ) }
    dend_61 { pt3dadd( -132.917, -34.1259, 56.9822, 0.55 ) }
    dend_61 { pt3dadd( -134.764, -38.8234, 60.9475, 0.55 ) }
    dend_61 { pt3dadd( -137.337, -43.1385, 64.9722, 0.55 ) }
    dend_61 { pt3dadd( -141.247, -46.4954, 68.8803, 0.55 ) }
    dend_61 { pt3dadd( -144.564, -50.4951, 72.6977, 0.55 ) }
    dend_61 { pt3dadd( -146.961, -53.8089, 77.7158, 0.55 ) }
    dend_61 { pt3dadd( -150.343, -56.6174, 82.4763, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -41.0321, 29.3185, -2.10977, 0.55 ) }
    dend_56 { pt3dadd( -42.4093, 30.1889, -4.02127, 0.55 ) }
    dend_56 { pt3dadd( -43.4065, 31.1633, -6.09293, 0.55 ) }
    dend_56 { pt3dadd( -44.3169, 32.3287, -8.25114, 0.55 ) }
    dend_56 { pt3dadd( -44.8871, 33.0584, -9.60258, 0.55 ) }
    dend_56 { pt3dadd( -45.9271, 34.3895, -12.0678, 0.83 ) }
    dend_56 { pt3dadd( -46.6879, 35.3633, -13.8713, 0.55 ) }
    dend_56 { pt3dadd( -47.4993, 36.721, -16.4987, 0.83 ) }
    dend_56 { pt3dadd( -47.7493, 37.6078, -17.9353, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -73.6405, 18.7962, 10.7705, 0.28 ) }
    dend_48 { pt3dadd( -74.7355, 16.9018, 10.0161, 0.28 ) }
    dend_48 { pt3dadd( -75.2514, 16.0967, 9.60972, 0.28 ) }
    dend_48 { pt3dadd( -75.9137, 14.962, 8.99798, 0.55 ) }
    dend_48 { pt3dadd( -76.4588, 13.9625, 8.47504, 0.28 ) }
    dend_48 { pt3dadd( -77.2639, 12.4369, 7.70336, 0.55 ) }
    dend_48 { pt3dadd( -79.5058, 7.94115, 5.53439, 0.28 ) }
    dend_48 { pt3dadd( -80.2163, 6.37817, 4.64497, 0.55 ) }
    dend_48 { pt3dadd( -81.2799, 3.98044, 3.18864, 0.28 ) }
    dend_48 { pt3dadd( -81.8792, 2.55339, 2.25025, 0.55 ) }
    dend_48 { pt3dadd( -82.2899, 1.57281, 1.57714, 0.28 ) }
    dend_48 { pt3dadd( -82.7589, 0.446176, 0.815338, 0.55 ) }
    dend_48 { pt3dadd( -84.1684, -3.32872, -1.60072, 0.28 ) }
    dend_48 { pt3dadd( -84.6086, -4.46533, -2.37891, 0.55 ) }
    dend_48 { pt3dadd( -85.3685, -6.17908, -3.78427, 0.28 ) }
    dend_48 { pt3dadd( -86.0042, -7.26088, -4.81527, 0.28 ) }
    dend_48 { pt3dadd( -86.5932, -7.97581, -5.55947, 0.55 ) }
    dend_48 { pt3dadd( -88.7005, -9.97752, -7.64947, 0.28 ) }
    dend_48 { pt3dadd( -89.6936, -10.7863, -8.49618, 0.55 ) }
    dend_48 { pt3dadd( -92.1184, -12.6088, -10.5851, 0.28 ) }
    dend_48 { pt3dadd( -94.5594, -14.2086, -12.5258, 0.28 ) }
    dend_48 { pt3dadd( -97.2246, -15.7152, -14.5236, 0.28 ) }
    dend_48 { pt3dadd( -98.4584, -16.2757, -15.3181, 0.55 ) }
    dend_48 { pt3dadd( -104.273, -22.9659, -20.7023, 0.55 ) }
    dend_48 { pt3dadd( -111.042, -29.9657, -24.2696, 0.55 ) }
    dend_48 { pt3dadd( -117.467, -36.397, -29.3092, 0.55 ) }
    dend_48 { pt3dadd( -123.952, -42.0962, -35.1742, 0.55 ) }
    dend_48 { pt3dadd( -130.407, -46.9665, -41.8429, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -73.6405, 18.7962, 10.7705, 0.55 ) }
    dend_45 { pt3dadd( -74.6541, 18.7435, 10.736, 0.55 ) }
    dend_45 { pt3dadd( -77.5708, 18.5397, 10.9978, 0.55 ) }
    dend_45 { pt3dadd( -78.6765, 18.4284, 11.1476, 0.55 ) }
    dend_45 { pt3dadd( -81.2843, 18.0895, 11.526, 0.55 ) }
    dend_45 { pt3dadd( -85.2647, 17.6345, 11.9318, 0.55 ) }
    dend_45 { pt3dadd( -87.3263, 17.4615, 12.1173, 0.28 ) }
    dend_45 { pt3dadd( -90.5263, 17.1383, 12.3361, 0.55 ) }
    dend_45 { pt3dadd( -92.8907, 16.8668, 12.4104, 0.55 ) }
    dend_45 { pt3dadd( -93.8896, 16.7458, 12.4428, 0.28 ) }
    dend_45 { pt3dadd( -99.8803, 16.018, 12.6293, 0.55 ) }
    dend_45 { pt3dadd( -102.656, 15.5858, 12.5343, 0.28 ) }
    dend_45 { pt3dadd( -106.367, 15.0238, 12.1926, 0.28 ) }
    dend_45 { pt3dadd( -109.536, 14.6127, 11.7229, 0.55 ) }
    dend_45 { pt3dadd( -122.286, 14.2903, 12.7963, 0.55 ) }
    dend_45 { pt3dadd( -134.832, 13.437, 15.1803, 0.55 ) }
    dend_45 { pt3dadd( -146.915, 11.1373, 18.6764, 0.55 ) }
    dend_45 { pt3dadd( -158.769, 10.6842, 23.4812, 0.55 ) }
    dend_45 { pt3dadd( -169.385, 9.42257, 30.5206, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -178.414, 8.47459, 39.5397, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 74.8988, 7.96836, -45.4174, 0.55 ) }
    dend_42 { pt3dadd( 77.3564, 8.61207, -47.5423, 0.55 ) }
    dend_42 { pt3dadd( 78.1348, 8.77679, -48.2603, 0.55 ) }
    dend_42 { pt3dadd( 79.1109, 8.9532, -49.1436, 0.55 ) }
    dend_42 { pt3dadd( 80.8824, 9.24619, -50.8508, 0.55 ) }
    dend_42 { pt3dadd( 82.7354, 9.47274, -52.671, 0.55 ) }
    dend_42 { pt3dadd( 83.6452, 9.51584, -53.5302, 0.83 ) }
    dend_42 { pt3dadd( 84.3966, 9.49486, -54.2893, 0.55 ) }
    dend_42 { pt3dadd( 84.9609, 9.42773, -54.9096, 0.83 ) }
    dend_42 { pt3dadd( 86.3304, 9.0718, -56.4799, 0.55 ) }
    dend_42 { pt3dadd( 87.4635, 8.6768, -57.7698, 0.55 ) }
    dend_42 { pt3dadd( 88.7674, 8.22138, -59.1883, 0.55 ) }
    dend_42 { pt3dadd( 90.217, 7.75072, -60.8016, 0.55 ) }
    dend_42 { pt3dadd( 91.1903, 7.41027, -61.9054, 0.55 ) }
    dend_42 { pt3dadd( 92.2885, 7.01894, -63.1855, 0.55 ) }
    dend_42 { pt3dadd( 93.2356, 6.70531, -64.3614, 0.55 ) }
    dend_42 { pt3dadd( 93.8284, 6.55114, -65.1864, 0.55 ) }
    dend_42 { pt3dadd( 94.5794, 6.24774, -66.847, 0.55 ) }
    dend_42 { pt3dadd( 94.9905, 6.02392, -67.8816, 0.55 ) }
    dend_42 { pt3dadd( 95.3488, 5.65914, -69.2483, 0.55 ) }
    dend_42 { pt3dadd( 95.8456, 4.96938, -71.55, 0.55 ) }
    dend_42 { pt3dadd( 95.9484, 4.79439, -72.0667, 0.28 ) }
    dend_42 { pt3dadd( 97.2764, 2.60279, -78.3415, 0.28 ) }
    dend_42 { pt3dadd( 97.7221, 1.97482, -80.1852, 0.83 ) }
    dend_42 { pt3dadd( 99.4775, -0.35703, -86.7121, 0.83 ) }
    dend_42 { pt3dadd( 100.383, -1.55397, -89.7303, 0.83 ) }
    dend_42 { pt3dadd( 100.818, -2.08394, -90.947, 0.55 ) }
    dend_42 { pt3dadd( 101.315, -2.60194, -92.1326, 0.55 ) }
    dend_42 { pt3dadd( 102.677, -3.59058, -94.3254, 0.55 ) }
    dend_42 { pt3dadd( 104.131, -4.46585, -96.2502, 0.28 ) }
    dend_42 { pt3dadd( 104.567, -4.5908, -96.3532, 0.55 ) }
    dend_42 { pt3dadd( 105.526, -4.76282, -96.2486, 0.28 ) }
    dend_42 { pt3dadd( 106.117, -4.81962, -96.1034, 0.55 ) }
    dend_42 { pt3dadd( 106.734, -4.88049, -95.899, 0.28 ) }
    dend_42 { pt3dadd( 107.473, -4.91469, -95.6241, 0.55 ) }
    dend_42 { pt3dadd( 108.575, -4.92436, -95.336, 0.28 ) }
    dend_42 { pt3dadd( 109.462, -4.96129, -95.1304, 0.55 ) }
    dend_42 { pt3dadd( 110.44, -4.94968, -94.9877, 0.28 ) }
    dend_42 { pt3dadd( 111.769, -4.94345, -94.9116, 0.55 ) }
    dend_42 { pt3dadd( 113.257, -4.91421, -94.9193, 0.55 ) }
    dend_42 { pt3dadd( 114.566, -4.88393, -95.0144, 0.28 ) }
    dend_42 { pt3dadd( 116.376, -4.83798, -95.2477, 0.55 ) }
    dend_42 { pt3dadd( 119.5, -4.71544, -95.9928, 0.55 ) }
    dend_42 { pt3dadd( 120.877, -4.61281, -96.4966, 0.55 ) }
    dend_42 { pt3dadd( 121.468, -4.55266, -96.7793, 0.83 ) }
    dend_42 { pt3dadd( 122.592, -4.44261, -97.4228, 0.55 ) }
    dend_42 { pt3dadd( 123.371, -4.3417, -97.922, 0.83 ) }
    dend_42 { pt3dadd( 125.464, -4.02001, -99.2953, 0.55 ) }
    dend_42 { pt3dadd( 126.746, -3.91223, -100.158, 0.28 ) }
    dend_42 { pt3dadd( 127.288, -3.89188, -100.457, 0.55 ) }
    dend_42 { pt3dadd( 128.778, -3.94788, -101.094, 0.28 ) }
    dend_42 { pt3dadd( 129.302, -4.00907, -101.277, 0.55 ) }
    dend_42 { pt3dadd( 130.386, -4.17968, -101.483, 0.28 ) }
    dend_42 { pt3dadd( 131.494, -4.432, -101.492, 0.55 ) }
    dend_42 { pt3dadd( 133.739, -5.00855, -101.109, 0.28 ) }
    dend_42 { pt3dadd( 134.777, -5.30426, -100.82, 0.55 ) }
    dend_42 { pt3dadd( 136.323, -5.81711, -100.299, 0.28 ) }
    dend_42 { pt3dadd( 138.277, -6.44974, -99.5723, 0.55 ) }
    dend_42 { pt3dadd( 139.69, -6.88666, -99.0275, 0.55 ) }
    dend_42 { pt3dadd( 142.132, -7.56742, -98.0522, 0.28 ) }
    dend_42 { pt3dadd( 143.132, -7.81318, -97.7379, 0.55 ) }
    dend_42 { pt3dadd( 144.852, -8.16689, -97.3926, 0.28 ) }
    dend_42 { pt3dadd( 146.559, -8.41045, -97.18, 0.55 ) }
    dend_42 { pt3dadd( 147.491, -8.45965, -97.2038, 0.28 ) }
    dend_42 { pt3dadd( 148.327, -8.40487, -97.303, 0.55 ) }
    dend_42 { pt3dadd( 150.68, -8.14275, -97.8213, 0.28 ) }
    dend_42 { pt3dadd( 152.355, -7.84778, -98.2314, 0.28 ) }
    dend_42 { pt3dadd( 153.807, -7.4922, -98.621, 0.55 ) }
    dend_42 { pt3dadd( 155.406, -7.06637, -99.1384, 0.28 ) }
    dend_42 { pt3dadd( 155.808, -6.93312, -99.2577, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 74.8988, 7.96836, -45.4174, 0.55 ) }
    dend_35 { pt3dadd( 75.4708, 5.68977, -47.4601, 0.55 ) }
    dend_35 { pt3dadd( 75.7609, 3.74407, -49.0299, 0.28 ) }
    dend_35 { pt3dadd( 76.0271, 1.93823, -50.2966, 0.55 ) }
    dend_35 { pt3dadd( 76.8106, -1.8885, -53.0274, 0.28 ) }
    dend_35 { pt3dadd( 76.852, -2.12404, -53.2368, 0.55 ) }
    dend_35 { pt3dadd( 77.1059, -3.34291, -54.4505, 0.28 ) }
    dend_35 { pt3dadd( 77.2059, -4.32376, -55.6358, 0.55 ) }
    dend_35 { pt3dadd( 77.2388, -5.32724, -57.0099, 0.28 ) }
    dend_35 { pt3dadd( 77.2336, -6.68447, -58.9597, 0.55 ) }
    dend_35 { pt3dadd( 77.219, -10.1032, -63.7769, 0.55 ) }
    dend_35 { pt3dadd( 77.1609, -13.2091, -68.2338, 0.55 ) }
    dend_35 { pt3dadd( 77.0842, -15.6903, -71.7995, 0.55 ) }
    dend_35 { pt3dadd( 76.9548, -18.1355, -75.25, 0.55 ) }
    dend_35 { pt3dadd( 76.9193, -18.7717, -76.1087, 0.28 ) }
    dend_35 { pt3dadd( 76.906, -19.4612, -76.9579, 0.55 ) }
    dend_35 { pt3dadd( 76.9962, -20.433, -78.0316, 0.28 ) }
    dend_35 { pt3dadd( 77.3689, -22.2055, -79.775, 0.55 ) }
    dend_35 { pt3dadd( 78.4261, -25.6919, -82.5055, 0.55 ) }
    dend_35 { pt3dadd( 79.0159, -27.5928, -83.7868, 0.28 ) }
    dend_35 { pt3dadd( 79.4904, -29.5096, -85.179, 0.55 ) }
    dend_35 { pt3dadd( 79.9346, -32.1737, -87.2349, 0.28 ) }
    dend_35 { pt3dadd( 80.1381, -34.3125, -88.9464, 0.55 ) }
    dend_35 { pt3dadd( 80.2887, -37.5057, -91.5083, 0.28 ) }
    dend_35 { pt3dadd( 80.4733, -40.826, -94.0449, 0.55 ) }
    dend_35 { pt3dadd( 80.669, -45.6386, -97.7734, 0.28 ) }
    dend_35 { pt3dadd( 80.7102, -48.2012, -99.7686, 0.55 ) }
    dend_35 { pt3dadd( 80.7035, -50.8119, -101.878, 0.28 ) }
    dend_35 { pt3dadd( 80.6679, -53.0884, -103.895, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 80.7304, -55.9016, -106.699, 0.55 ) }
    dend_35 { pt3dadd( 80.9977, -58.5247, -109.23, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 71.1089, 24.4913, -3.38557, 0.55 ) }
    dend_31 { pt3dadd( 73.4564, 24.0796, -3.05482, 0.55 ) }
    dend_31 { pt3dadd( 75.1565, 23.7434, -2.98398, 0.55 ) }
    dend_31 { pt3dadd( 78.866, 22.9979, -3.02848, 0.55 ) }
    dend_31 { pt3dadd( 80.5246, 22.6536, -3.20174, 0.55 ) }
    dend_31 { pt3dadd( 82.3307, 22.3295, -3.47724, 0.55 ) }
    dend_31 { pt3dadd( 84.7473, 21.9628, -4.01328, 0.55 ) }
    dend_31 { pt3dadd( 87.2799, 21.5502, -4.83274, 0.55 ) }
    dend_31 { pt3dadd( 88.5995, 21.3415, -5.41957, 0.55 ) }
    dend_31 { pt3dadd( 91.259, 20.9769, -6.98674, 0.55 ) }
    dend_31 { pt3dadd( 92.4818, 20.8254, -7.74711, 0.55 ) }
    dend_31 { pt3dadd( 95.3404, 20.4285, -9.61418, 0.55 ) }
    dend_31 { pt3dadd( 97.2744, 20.0798, -10.8744, 0.55 ) }
    dend_31 { pt3dadd( 98.7015, 19.8035, -11.7358, 0.83 ) }
    dend_31 { pt3dadd( 100.98, 19.2735, -13.0987, 0.55 ) }
    dend_31 { pt3dadd( 103.213, 18.6319, -14.3605, 0.83 ) }
    dend_31 { pt3dadd( 105.108, 17.9896, -15.3747, 0.55 ) }
    dend_31 { pt3dadd( 106.801, 17.4276, -16.1815, 0.55 ) }
    dend_31 { pt3dadd( 107.769, 17.1409, -16.5786, 0.83 ) }
    dend_31 { pt3dadd( 110.037, 16.4586, -17.3818, 0.28 ) }
    dend_31 { pt3dadd( 111.172, 16.1533, -17.7005, 0.28 ) }
    dend_31 { pt3dadd( 112.263, 15.7992, -18.0775, 0.28 ) }
    dend_31 { pt3dadd( 113.443, 15.4483, -18.4856, 0.28 ) }
    dend_31 { pt3dadd( 115.331, 14.928, -19.1732, 0.28 ) }
    dend_31 { pt3dadd( 116.093, 14.7241, -19.4251, 0.55 ) }
    dend_31 { pt3dadd( 117.927, 14.2253, -19.8423, 0.55 ) }
    dend_31 { pt3dadd( 121.236, 13.2693, -20.4291, 0.55 ) }
    dend_31 { pt3dadd( 122.154, 12.9747, -20.5545, 0.55 ) }
    dend_31 { pt3dadd( 122.974, 12.6801, -20.635, 0.83 ) }
    dend_31 { pt3dadd( 124.768, 12.0696, -20.656, 0.55 ) }
    dend_31 { pt3dadd( 126.329, 11.5378, -20.6487, 0.55 ) }
    dend_31 { pt3dadd( 127.805, 11.0402, -20.6339, 0.55 ) }
    dend_31 { pt3dadd( 128.945, 10.641, -20.658, 0.55 ) }
    dend_31 { pt3dadd( 130.742, 9.90118, -20.8049, 0.55 ) }
    dend_31 { pt3dadd( 132.843, 8.86806, -21.1262, 0.55 ) }
    dend_31 { pt3dadd( 136.076, 6.94182, -21.9181, 0.55 ) }
    dend_31 { pt3dadd( 137.83, 5.64534, -22.5119, 0.55 ) }
    dend_31 { pt3dadd( 139.333, 4.27462, -23.1496, 0.28 ) }
    dend_31 { pt3dadd( 139.774, 3.77056, -23.3839, 0.55 ) }
    dend_31 { pt3dadd( 140.73, 2.36132, -24.007, 0.28 ) }
    dend_31 { pt3dadd( 141.528, 0.779961, -24.6532, 0.55 ) }
    dend_31 { pt3dadd( 142.257, -1.21543, -25.2734, 0.55 ) }
    dend_31 { pt3dadd( 142.756, -2.53769, -25.6162, 0.28 ) }
    dend_31 { pt3dadd( 142.941, -3.00876, -25.7138, 0.55 ) }
    dend_31 { pt3dadd( 143.425, -4.1819, -25.9412, 0.28 ) }
    dend_31 { pt3dadd( 144.093, -5.71477, -26.2012, 0.55 ) }
    dend_31 { pt3dadd( 145.855, -9.42548, -26.7424, 0.55 ) }
    dend_31 { pt3dadd( 146.78, -11.3023, -26.977, 0.55 ) }
    dend_31 { pt3dadd( 147.64, -13.0251, -27.1771, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 71.1089, 24.4913, -3.38557, 0.55 ) }
    dend_30 { pt3dadd( 72.5305, 25.4405, -2.06637, 0.55 ) }
    dend_30 { pt3dadd( 72.9928, 25.7292, -1.66843, 0.55 ) }
    dend_30 { pt3dadd( 74.735, 26.6813, -0.217178, 0.55 ) }
    dend_30 { pt3dadd( 76.6724, 27.7977, 1.41176, 0.55 ) }
    dend_30 { pt3dadd( 79.1391, 29.2593, 3.56988, 0.55 ) }
    dend_30 { pt3dadd( 79.8216, 29.6612, 4.16088, 0.55 ) }
    dend_30 { pt3dadd( 81.0498, 30.3289, 5.23428, 0.55 ) }
    dend_30 { pt3dadd( 82.4085, 31.0637, 6.34218, 0.55 ) }
    dend_30 { pt3dadd( 84.0049, 31.923, 7.53468, 0.55 ) }
    dend_30 { pt3dadd( 85.5075, 32.7563, 8.65258, 0.55 ) }
    dend_30 { pt3dadd( 86.3407, 33.2295, 9.20763, 0.55 ) }
    dend_30 { pt3dadd( 87.3187, 33.8114, 9.84289, 0.55 ) }
    dend_30 { pt3dadd( 88.5332, 34.5534, 10.5888, 0.83 ) }
    dend_30 { pt3dadd( 90.5724, 35.6544, 11.6068, 0.55 ) }
    dend_30 { pt3dadd( 91.9387, 36.3, 12.2453, 0.83 ) }
    dend_30 { pt3dadd( 93.8521, 37.0825, 13.1132, 0.55 ) }
    dend_30 { pt3dadd( 94.4422, 37.2891, 13.3876, 0.55 ) }
    dend_30 { pt3dadd( 96.2829, 37.8278, 14.2478, 0.55 ) }
    dend_30 { pt3dadd( 99.6095, 38.5449, 15.7614, 0.55 ) }
    dend_30 { pt3dadd( 102.061, 38.9205, 16.8837, 0.55 ) }
    dend_30 { pt3dadd( 103.992, 39.1596, 17.8577, 0.55 ) }
    dend_30 { pt3dadd( 105.947, 39.3435, 18.9635, 0.55 ) }
    dend_30 { pt3dadd( 106.358, 39.3732, 19.2035, 0.28 ) }
    dend_30 { pt3dadd( 107.193, 39.4022, 19.7045, 0.83 ) }
    dend_30 { pt3dadd( 110.615, 39.4857, 21.8049, 0.55 ) }
    dend_30 { pt3dadd( 113.02, 39.5235, 23.2294, 0.55 ) }
    dend_30 { pt3dadd( 114.981, 39.6244, 24.4206, 0.55 ) }
    dend_30 { pt3dadd( 116.151, 39.6871, 25.1445, 0.83 ) }
    dend_30 { pt3dadd( 117.071, 39.7495, 25.7095, 0.28 ) }
    dend_30 { pt3dadd( 117.908, 39.8034, 26.2139, 0.55 ) }
    dend_30 { pt3dadd( 124.191, 42.1408, 30.2504, 0.55 ) }
    dend_30 { pt3dadd( 131.176, 42.8954, 33.7137, 0.55 ) }
    dend_30 { pt3dadd( 138.043, 44.6082, 37.0616, 0.55 ) }
    dend_30 { pt3dadd( 143.813, 46.0632, 42.155, 0.55 ) }
    dend_30 { pt3dadd( 149.07, 46.7451, 47.9112, 0.55 ) }
    dend_30 { pt3dadd( 155.34, 45.5568, 52.3867, 0.55 ) }
    dend_30 { pt3dadd( 161.765, 43.1571, 56.0204, 0.55 ) }
    dend_30 { pt3dadd( 168.937, 41.7596, 58.7679, 0.55 ) }
    dend_30 { pt3dadd( 175.926, 40.492, 62.0041, 0.55 ) }
    dend_30 { pt3dadd( 183.303, 39.7351, 64.4932, 0.55 ) }
    dend_30 { pt3dadd( 190.446, 39.7191, 67.6967, 0.55 ) }
    dend_30 { pt3dadd( 197.047, 38.7349, 71.7437, 0.55 ) }
    dend_30 { pt3dadd( 203.67, 39.2657, 75.888, 0.55 ) }
    dend_30 { pt3dadd( 209.758, 41.2228, 80.4074, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.85314, -21.6869, 4.60314, 1.38 ) }
    dend_13 { pt3dadd( 0.503384, -24.1842, 3.90913, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.85314, -21.6869, 4.60314, 0.55 ) }
    dend_12 { pt3dadd( -3.72802, -23.7988, 4.51794, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.80526, -26.5113, 4.42528, 0.55 ) }
    dend_12 { pt3dadd( -7.42029, -28.3035, 4.37099, 0.55 ) }
    dend_12 { pt3dadd( -8.76565, -29.802, 4.11043, 0.55 ) }
    dend_12 { pt3dadd( -11.6787, -32.9047, 3.25839, 0.55 ) }
    dend_12 { pt3dadd( -13.7164, -34.9755, 2.60237, 0.55 ) }
    dend_12 { pt3dadd( -15.5232, -36.8325, 1.94834, 0.55 ) }
    dend_12 { pt3dadd( -20.1629, -41.349, 0.272412, 0.55 ) }
    dend_12 { pt3dadd( -25.739, -46.5753, -1.69554, 0.55 ) }
    dend_12 { pt3dadd( -30.0509, -50.5326, -3.29714, 0.55 ) }
    dend_12 { pt3dadd( -32.8006, -53.1323, -4.36059, 0.55 ) }
    dend_12 { pt3dadd( -35.9576, -56.2537, -5.57078, 0.55 ) }
    dend_12 { pt3dadd( -39.972, -60.7379, -7.05136, 0.55 ) }
    dend_12 { pt3dadd( -42.3304, -63.9265, -7.8662, 0.55 ) }
    dend_12 { pt3dadd( -45.2657, -68.5197, -8.60864, 0.55 ) }
    dend_12 { pt3dadd( -47.6205, -72.8298, -9.10615, 0.55 ) }
    dend_12 { pt3dadd( -50.0153, -78.2171, -9.5676, 0.55 ) }
    dend_12 { pt3dadd( -52.2951, -84.5505, -9.90505, 0.55 ) }
    dend_12 { pt3dadd( -53.5464, -89.3992, -10.0025, 0.55 ) }
    dend_12 { pt3dadd( -54.0087, -91.8141, -9.87194, 0.55 ) }
    dend_12 { pt3dadd( -54.7611, -97.4931, -9.21253, 0.55 ) }
    dend_12 { pt3dadd( -55.3764, -102.808, -8.44194, 0.55 ) }
    dend_12 { pt3dadd( -55.7379, -108.164, -7.22744, 0.55 ) }
    dend_12 { pt3dadd( -55.992, -111.236, -6.35714, 0.55 ) }
    dend_12 { pt3dadd( -56.744, -120.734, -3.29505, 0.55 ) }
    dend_12 { pt3dadd( -56.8052, -121.433, -3.05706, 0.55 ) }
    dend_12 { pt3dadd( -57.1035, -125.716, -1.48288, 0.55 ) }
    dend_12 { pt3dadd( -58.0262, -133.368, 1.49285, 0.55 ) }
    dend_12 { pt3dadd( -58.3386, -135.927, 2.32691, 0.55 ) }
    dend_12 { pt3dadd( -58.8775, -139.929, 2.90189, 0.55 ) }
    dend_12 { pt3dadd( -59.0109, -141.418, 2.76101, 0.55 ) }
    dend_12 { pt3dadd( -59.1551, -146.466, 1.30879, 0.55 ) }
    dend_12 { pt3dadd( -59.0041, -149.741, -0.339572, 0.55 ) }
    dend_12 { pt3dadd( -58.5322, -154.966, -4.06269, 0.55 ) }
    dend_12 { pt3dadd( -57.6464, -161.364, -9.11355, 0.28 ) }
    dend_12 { pt3dadd( -57.385, -162.947, -10.5833, 0.55 ) }
    dend_12 { pt3dadd( -56.9642, -165.348, -13.0316, 0.28 ) }
    dend_12 { pt3dadd( -56.9028, -165.71, -13.4209, 0.55 ) }
    dend_12 { pt3dadd( -56.5926, -167.69, -15.3764, 0.28 ) }
    dend_12 { pt3dadd( -56.5472, -168.361, -15.8824, 0.55 ) }
    dend_12 { pt3dadd( -56.4458, -171.846, -17.815, 0.28 ) }
    dend_12 { pt3dadd( -56.4604, -173.031, -18.4605, 0.55 ) }
    dend_12 { pt3dadd( -56.5628, -176.456, -20.1266, 0.28 ) }
    dend_12 { pt3dadd( -56.5903, -177.534, -20.6465, 0.55 ) }
    dend_12 { pt3dadd( -56.7219, -181.254, -22.3796, 0.28 ) }
    dend_12 { pt3dadd( -56.7723, -182.966, -23.1852, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.51333, -55.8369, 46.5253, 0.55 ) }
    dend_10 { pt3dadd( -10.6741, -61.8561, 52.9434, 0.55 ) }
    dend_10 { pt3dadd( -14.7077, -67.0381, 59.6689, 0.55 ) }
    dend_10 { pt3dadd( -18.544, -72.8228, 65.9493, 0.55 ) }
    dend_10 { pt3dadd( -22.555, -78.6295, 72.0944, 0.55 ) }
    dend_10 { pt3dadd( -25.6701, -85.4989, 77.5067, 0.55 ) }
    dend_10 { pt3dadd( -28.6467, -92.0857, 83.371, 0.55 ) }
    dend_10 { pt3dadd( -30.7537, -100.122, 87.2948, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.51333, -55.8369, 46.5253, 0.55 ) }
    dend_3 { pt3dadd( -6.69955, -61.8749, 52.3764, 0.55 ) }
    dend_3 { pt3dadd( -5.73741, -68.8209, 56.9536, 0.55 ) }
    dend_3 { pt3dadd( -6.16342, -75.7269, 61.6561, 0.55 ) }
    dend_3 { pt3dadd( -7.19739, -82.9783, 65.6201, 0.55 ) }
    dend_3 { pt3dadd( -7.86878, -90.2253, 69.6767, 0.55 ) }
    dend_3 { pt3dadd( -8.3953, -97.193, 74.2653, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -47.7493, 37.6078, -17.9353, 0.83 ) }
    dend_60 { pt3dadd( -47.2801, 39.4764, -19.657, 0.83 ) }
    dend_60 { pt3dadd( -46.2872, 43.9543, -23.4816, 0.55 ) }
    dend_60 { pt3dadd( -45.8691, 45.873, -24.975, 0.83 ) }
    dend_60 { pt3dadd( -45.4254, 47.9148, -26.4349, 0.55 ) }
    dend_60 { pt3dadd( -44.9932, 49.9915, -27.6444, 0.55 ) }
    dend_60 { pt3dadd( -44.7786, 51.0243, -28.118, 0.28 ) }
    dend_60 { pt3dadd( -44.6929, 51.6925, -28.2626, 0.55 ) }
    dend_60 { pt3dadd( -44.3761, 53.8866, -28.2529, 0.28 ) }
    dend_60 { pt3dadd( -44.2202, 54.8223, -28.198, 0.55 ) }
    dend_60 { pt3dadd( -43.7301, 58.0616, -27.8722, 0.28 ) }
    dend_60 { pt3dadd( -43.4176, 60.6176, -27.528, 0.55 ) }
    dend_60 { pt3dadd( -43.1389, 64.5885, -26.8743, 0.28 ) }
    dend_60 { pt3dadd( -43.0277, 68.0663, -26.2377, 0.28 ) }
    dend_60 { pt3dadd( -43.087, 70.0033, -25.8495, 0.55 ) }
    dend_60 { pt3dadd( -43.3068, 72.2917, -25.3983, 0.28 ) }
    dend_60 { pt3dadd( -43.4891, 73.378, -25.1718, 0.55 ) }
    dend_60 { pt3dadd( -44.0578, 75.9351, -24.7732, 0.28 ) }
    dend_60 { pt3dadd( -44.5509, 77.6405, -24.6111, 0.28 ) }
    dend_60 { pt3dadd( -45.0691, 79.3179, -24.5092, 0.28 ) }
    dend_60 { pt3dadd( -45.3067, 80.2066, -24.4566, 0.55 ) }
    dend_60 { pt3dadd( -46.0578, 83.8226, -24.3192, 0.28 ) }
    dend_60 { pt3dadd( -46.7921, 88.1224, -24.2293, 0.55 ) }
    dend_60 { pt3dadd( -47.0225, 89.6095, -24.2027, 0.55 ) }
    dend_60 { pt3dadd( -47.2808, 91.0959, -24.1441, 0.55 ) }
    dend_60 { pt3dadd( -48.0008, 94.2467, -24.0861, 0.55 ) }
    dend_60 { pt3dadd( -48.6098, 96.3097, -24.1053, 0.28 ) }
    dend_60 { pt3dadd( -48.9346, 97.085, -24.1305, 0.55 ) }
    dend_60 { pt3dadd( -49.9742, 99.1692, -24.1626, 0.28 ) }
    dend_60 { pt3dadd( -51.1709, 101.389, -24.2982, 0.55 ) }
    dend_60 { pt3dadd( -53.1988, 104.569, -24.6498, 0.28 ) }
    dend_60 { pt3dadd( -54.1958, 105.889, -24.8542, 0.28 ) }
    dend_60 { pt3dadd( -55.8219, 107.723, -25.3563, 0.55 ) }
    dend_60 { pt3dadd( -57.6454, 109.633, -25.9992, 0.28 ) }
    dend_60 { pt3dadd( -57.979, 109.931, -26.12, 0.55 ) }
    dend_60 { pt3dadd( -59.1851, 110.872, -26.5585, 0.28 ) }
    dend_60 { pt3dadd( -63.355, 113.867, -28.0113, 0.55 ) }
    dend_60 { pt3dadd( -69.1502, 117.551, -30.2949, 0.28 ) }
    dend_60 { pt3dadd( -70.2182, 118.171, -30.7875, 0.55 ) }
    dend_60 { pt3dadd( -73.1493, 119.767, -32.1997, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -74.3784, 120.423, -32.8281, 0.28 ) }
    dend_60 { pt3dadd( -75.4442, 120.971, -33.429, 0.55 ) }
    dend_60 { pt3dadd( -78.5555, 122.23, -35.4643, 0.28 ) }
    dend_60 { pt3dadd( -80.7615, 122.89, -36.8297, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -47.7493, 37.6078, -17.9353, 0.55 ) }
    dend_57 { pt3dadd( -47.9556, 38.6988, -17.936, 0.55 ) }
    dend_57 { pt3dadd( -48.1011, 39.3325, -17.8762, 0.28 ) }
    dend_57 { pt3dadd( -48.3134, 39.763, -17.7278, 0.55 ) }
    dend_57 { pt3dadd( -48.8009, 40.7515, -17.387, 0.28 ) }
    dend_57 { pt3dadd( -49.1432, 41.4459, -17.1476, 0.55 ) }
    dend_57 { pt3dadd( -49.7745, 42.7259, -16.7064, 0.28 ) }
    dend_57 { pt3dadd( -50.2043, 43.3878, -16.3465, 0.55 ) }
    dend_57 { pt3dadd( -51.84, 44.8362, -14.9097, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -130.407, -46.9665, -41.8429, 0.55 ) }
    dend_52 { pt3dadd( -134.993, -52.24, -46.3713, 0.55 ) }
    dend_52 { pt3dadd( -138.168, -57.9502, -51.4456, 0.55 ) }
    dend_52 { pt3dadd( -140.494, -62.633, -57.9093, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -130.407, -46.9665, -41.8429, 0.55 ) }
    dend_49 { pt3dadd( -137.324, -55.1733, -48.0479, 0.55 ) }
    dend_49 { pt3dadd( -142.711, -63.6553, -55.2935, 0.55 ) }
    dend_49 { pt3dadd( -147.558, -72.35, -62.6446, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -178.414, 8.47459, 39.5397, 0.55 ) }
    dend_47 { pt3dadd( -183.39, 8.30287, 41.9438, 0.55 ) }
    dend_47 { pt3dadd( -188.552, 8.83028, 43.8369, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -178.414, 8.47459, 39.5397, 0.55 ) }
    dend_46 { pt3dadd( -188.08, 7.20041, 41.3157, 0.55 ) }
    dend_46 { pt3dadd( -197.785, 7.46667, 43.3285, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 80.9977, -58.5247, -109.23, 0.28 ) }
    dend_39 { pt3dadd( 86.7329, -60.9717, -119.027, 0.28 ) }
    dend_39 { pt3dadd( 87.2855, -61.2742, -119.909, 0.55 ) }
    dend_39 { pt3dadd( 88.2185, -61.785, -121.397, 0.28 ) }
    dend_39 { pt3dadd( 89.0041, -62.2151, -122.65, 0.28 ) }
    dend_39 { pt3dadd( 90.0441, -62.7844, -124.309, 0.55 ) }
    dend_39 { pt3dadd( 91.4152, -63.5349, -126.496, 0.55 ) }
    dend_39 { pt3dadd( 93.0488, -65.1489, -127.745, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 80.9977, -58.5247, -109.23, 0.55 ) }
    dend_36 { pt3dadd( 81.5047, -59.38, -110.345, 0.55 ) }
    dend_36 { pt3dadd( 81.6484, -59.7623, -110.84, 0.28 ) }
    dend_36 { pt3dadd( 81.8527, -60.4149, -111.704, 0.55 ) }
    dend_36 { pt3dadd( 82.3028, -61.8527, -113.609, 0.28 ) }
    dend_36 { pt3dadd( 82.6147, -62.8491, -114.929, 0.55 ) }
    dend_36 { pt3dadd( 83.1432, -64.5373, -117.165, 0.28 ) }
    dend_36 { pt3dadd( 83.7152, -66.5791, -120.093, 0.28 ) }
    dend_36 { pt3dadd( 83.9288, -67.5146, -121.461, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 147.64, -13.0251, -27.1771, 0.28 ) }
    dend_33 { pt3dadd( 149.691, -15.5967, -26.4358, 0.28 ) }
    dend_33 { pt3dadd( 152.296, -18.9828, -25.1385, 0.28 ) }
    dend_33 { pt3dadd( 153.948, -21.1767, -24.1955, 0.55 ) }
    dend_33 { pt3dadd( 154.949, -22.3826, -23.6096, 0.28 ) }
    dend_33 { pt3dadd( 155.481, -23.0316, -23.2868, 0.28 ) }
    dend_33 { pt3dadd( 158.117, -26.2386, -21.75, 0.55 ) }
    dend_33 { pt3dadd( 158.729, -26.9458, -21.3027, 0.28 ) }
    dend_33 { pt3dadd( 160.184, -28.8064, -19.9749, 0.55 ) }
    dend_33 { pt3dadd( 161.422, -30.4288, -18.8976, 0.28 ) }
    dend_33 { pt3dadd( 162.501, -31.7476, -18.0528, 0.55 ) }
    dend_33 { pt3dadd( 163.76, -33.3318, -17.1552, 0.55 ) }
    dend_33 { pt3dadd( 165.75, -35.8681, -16.0919, 0.55 ) }
    dend_33 { pt3dadd( 166.228, -36.4921, -15.8563, 0.55 ) }
    dend_33 { pt3dadd( 167.938, -38.8256, -15.0043, 0.28 ) }
    dend_33 { pt3dadd( 168.598, -39.7816, -14.6838, 0.55 ) }
    dend_33 { pt3dadd( 169.521, -41.0009, -14.2812, 0.28 ) }
    dend_33 { pt3dadd( 170.82, -42.7372, -13.7985, 0.55 ) }
    dend_33 { pt3dadd( 172.955, -45.4962, -13.4857, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 147.64, -13.0251, -27.1771, 0.55 ) }
    dend_32 { pt3dadd( 144.258, -12.6078, -27.1877, 0.55 ) }
    dend_32 { pt3dadd( 141.512, -12.269, -27.1963, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.503384, -24.1842, 3.90913, 0.83 ) }
    dend_17 { pt3dadd( 0.634701, -24.4345, 3.90287, 0.83 ) }
    dend_17 { pt3dadd( 2.12808, -26.6445, 4.03391, 0.83 ) }
    dend_17 { pt3dadd( 3.45287, -28.5804, 4.01151, 0.55 ) }
    dend_17 { pt3dadd( 4.50977, -30.1248, 3.99365, 0.55 ) }
    dend_17 { pt3dadd( 6.75625, -33.4076, 3.95567, 0.83 ) }
    dend_17 { pt3dadd( 9.48108, -37.3893, 3.90961, 0.55 ) }
    dend_17 { pt3dadd( 10.9607, -39.4724, 3.93642, 0.83 ) }
    dend_17 { pt3dadd( 13.5569, -42.782, 4.16754, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.503384, -24.1842, 3.90913, 0.55 ) }
    dend_14 { pt3dadd( -1.41754, -25.3536, 0.633078, 0.55 ) }
    dend_14 { pt3dadd( -3.47941, -26.6089, -2.88336, 0.55 ) }
    dend_14 { pt3dadd( -5.91347, -28.0908, -7.03456, 0.55 ) }
    dend_14 { pt3dadd( -8.8692, -29.8903, -12.0754, 0.55 ) }
    dend_14 { pt3dadd( -10.5465, -30.9115, -14.936, 0.55 ) }
    dend_14 { pt3dadd( -10.8835, -31.1166, -15.5106, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.3953, -97.193, 74.2653, 0.55 ) }
    dend_7 { pt3dadd( -8.25212, -103.776, 78.8063, 0.55 ) }
    dend_7 { pt3dadd( -7.46761, -110.949, 82.1792, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.3953, -97.193, 74.2653, 0.55 ) }
    dend_4 { pt3dadd( -8.84004, -103.987, 78.3444, 0.55 ) }
    dend_4 { pt3dadd( -9.63288, -110.607, 82.6823, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -51.84, 44.8362, -14.9097, 0.28 ) }
    dend_59 { pt3dadd( -53.0193, 45.8785, -13.5831, 0.28 ) }
    dend_59 { pt3dadd( -53.466, 46.2676, -13.0194, 0.55 ) }
    dend_59 { pt3dadd( -54.7449, 47.3929, -11.3537, 0.28 ) }
    dend_59 { pt3dadd( -55.3784, 47.958, -10.6058, 0.55 ) }
    dend_59 { pt3dadd( -57.1067, 49.4935, -8.65476, 0.28 ) }
    dend_59 { pt3dadd( -58.8633, 51.0542, -6.67177, 0.55 ) }
    dend_59 { pt3dadd( -61.7664, 53.47, -3.37525, 0.28 ) }
    dend_59 { pt3dadd( -62.3846, 53.9897, -2.67207, 0.55 ) }
    dend_59 { pt3dadd( -63.7452, 55.2283, -1.17231, 0.28 ) }
    dend_59 { pt3dadd( -64.2764, 55.747, -0.580009, 0.55 ) }
    dend_59 { pt3dadd( -70.17, 58.9582, 4.318, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -76.5852, 63.1608, 7.38193, 0.55 ) }
    dend_59 { pt3dadd( -82.1931, 67.5186, 11.5789, 0.55 ) }
    dend_59 { pt3dadd( -86.74, 72.8999, 15.7413, 0.55 ) }
    dend_59 { pt3dadd( -92.1152, 77.9855, 19.2821, 0.55 ) }
    dend_59 { pt3dadd( -98.1688, 81.765, 23.4833, 0.55 ) }
    dend_59 { pt3dadd( -103.71, 84.8633, 28.8505, 0.55 ) }
    dend_59 { pt3dadd( -108.503, 87.1111, 35.3035, 0.55 ) }
    dend_59 { pt3dadd( -113.317, 89.8313, 41.5333, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -51.84, 44.8362, -14.9097, 0.55 ) }
    dend_58 { pt3dadd( -55.1406, 43.5006, -13.8918, 0.55 ) }
    dend_58 { pt3dadd( -56.8527, 42.7523, -13.3717, 0.28 ) }
    dend_58 { pt3dadd( -58.1268, 42.1955, -12.9847, 0.55 ) }
    dend_58 { pt3dadd( -59.1887, 41.7314, -12.6621, 0.28 ) }
    dend_58 { pt3dadd( -59.9325, 41.4063, -12.4361, 0.55 ) }
    dend_58 { pt3dadd( -61.9834, 40.5099, -11.8131, 0.28 ) }
    dend_58 { pt3dadd( -63.3309, 39.8206, -11.5836, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -140.494, -62.633, -57.9093, 0.55 ) }
    dend_54 { pt3dadd( -144.234, -70.5191, -63.5504, 0.55 ) }
    dend_54 { pt3dadd( -147.702, -79.1083, -68.2208, 0.55 ) }
    dend_54 { pt3dadd( -150.432, -86.8034, -74.6151, 0.55 ) }
    dend_54 { pt3dadd( -154.203, -95.064, -79.6577, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -140.494, -62.633, -57.9093, 0.55 ) }
    dend_53 { pt3dadd( -144.363, -64.4822, -66.1434, 0.55 ) }
    dend_53 { pt3dadd( -147.816, -64.9166, -74.809, 0.55 ) }
    dend_53 { pt3dadd( -152.025, -66.657, -82.9086, 0.55 ) }
    dend_53 { pt3dadd( -158.149, -67.386, -89.942, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -147.558, -72.35, -62.6446, 0.55 ) }
    dend_51 { pt3dadd( -150.981, -75.4083, -70.2717, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -147.558, -72.35, -62.6446, 0.55 ) }
    dend_50 { pt3dadd( -150.999, -80.5583, -64.9585, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 93.0488, -65.1489, -127.745, 0.28 ) }
    dend_41 { pt3dadd( 95.4072, -66.4979, -129.228, 0.28 ) }
    dend_41 { pt3dadd( 96.5027, -67.1245, -129.917, 0.55 ) }
    dend_41 { pt3dadd( 98.5918, -68.3195, -131.23, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 93.0488, -65.1489, -127.745, 0.55 ) }
    dend_40 { pt3dadd( 92.6658, -65.1545, -129.601, 0.55 ) }
    dend_40 { pt3dadd( 91.8996, -65.1657, -133.312, 0.28 ) }
    dend_40 { pt3dadd( 91.65, -65.1693, -134.521, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 83.9288, -67.5146, -121.461, 0.28 ) }
    dend_38 { pt3dadd( 84.7749, -70.244, -125.706, 0.28 ) }
    dend_38 { pt3dadd( 85.1939, -71.5954, -127.808, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 83.9288, -67.5146, -121.461, 0.55 ) }
    dend_37 { pt3dadd( 81.5583, -68.1052, -120.762, 0.55 ) }
    dend_37 { pt3dadd( 74.948, -69.752, -118.813, 0.28 ) }
    dend_37 { pt3dadd( 73.3776, -70.1432, -118.35, 0.55 ) }
    dend_37 { pt3dadd( 69.0819, -71.2133, -117.084, 0.28 ) }
    dend_37 { pt3dadd( 66.313, -71.9031, -116.267, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.5569, -42.782, 4.16754, 0.83 ) }
    dend_23 { pt3dadd( 13.5986, -43.0036, 4.14078, 0.83 ) }
    dend_23 { pt3dadd( 14.1679, -45.9045, 3.88529, 0.83 ) }
    dend_23 { pt3dadd( 14.3629, -48.0884, 3.78426, 0.83 ) }
    dend_23 { pt3dadd( 14.3406, -50.2079, 3.86873, 0.83 ) }
    dend_23 { pt3dadd( 14.1515, -53.0374, 4.17038, 0.83 ) }
    dend_23 { pt3dadd( 13.8098, -56.3033, 4.61545, 0.83 ) }
    dend_23 { pt3dadd( 13.392, -59.9542, 5.31023, 0.83 ) }
    dend_23 { pt3dadd( 12.9429, -63.5046, 6.15099, 0.83 ) }
    dend_23 { pt3dadd( 12.1319, -67.8702, 7.00394, 0.83 ) }
    dend_23 { pt3dadd( 11.6789, -69.8767, 7.25081, 0.83 ) }
    dend_23 { pt3dadd( 11.358, -71.3835, 7.33872, 0.83 ) }
    dend_23 { pt3dadd( 10.6968, -74.275, 7.4287, 0.83 ) }
    dend_23 { pt3dadd( 10.205, -76.8594, 7.38102, 0.83 ) }
    dend_23 { pt3dadd( 9.62656, -82.3464, 6.73679, 0.83 ) }
    dend_23 { pt3dadd( 9.4525, -85.3368, 5.9951, 0.83 ) }
    dend_23 { pt3dadd( 9.34538, -88.0874, 5.10533, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.5569, -42.782, 4.16754, 0.55 ) }
    dend_18 { pt3dadd( 12.7809, -44.6186, 3.93761, 0.55 ) }
    dend_18 { pt3dadd( 12.1648, -45.955, 3.86307, 0.55 ) }
    dend_18 { pt3dadd( 11.7642, -46.8112, 3.90779, 0.55 ) }
    dend_18 { pt3dadd( 11.1561, -48.1529, 4.12755, 0.55 ) }
    dend_18 { pt3dadd( 9.96218, -50.8121, 4.75409, 0.55 ) }
    dend_18 { pt3dadd( 8.96769, -52.8312, 5.4403, 0.55 ) }
    dend_18 { pt3dadd( 8.11423, -54.4542, 6.16005, 0.55 ) }
    dend_18 { pt3dadd( 7.17448, -56.0976, 6.98719, 0.55 ) }
    dend_18 { pt3dadd( 6.36031, -57.4627, 7.7388, 0.28 ) }
    dend_18 { pt3dadd( 5.62518, -58.5828, 8.5065, 0.55 ) }
    dend_18 { pt3dadd( 4.14705, -60.6296, 10.1657, 0.55 ) }
    dend_18 { pt3dadd( 3.12998, -61.8895, 11.291, 0.55 ) }
    dend_18 { pt3dadd( 2.555, -62.5954, 11.9121, 0.55 ) }
    dend_18 { pt3dadd( 1.85062, -63.428, 12.5887, 0.83 ) }
    dend_18 { pt3dadd( -0.20502, -65.8934, 14.4282, 0.28 ) }
    dend_18 { pt3dadd( -0.877206, -66.7087, 15.0157, 0.55 ) }
    dend_18 { pt3dadd( -2.03048, -68.1782, 16.045, 0.28 ) }
    dend_18 { pt3dadd( -2.39651, -68.632, 16.3944, 0.55 ) }
    dend_18 { pt3dadd( -3.19151, -69.6955, 17.2144, 0.28 ) }
    dend_18 { pt3dadd( -3.62492, -70.2991, 17.6388, 0.55 ) }
    dend_18 { pt3dadd( -4.97854, -72.2533, 18.4647, 0.55 ) }
    dend_18 { pt3dadd( -8.02174, -77.537, 23.1473, 0.55 ) }
    dend_18 { pt3dadd( -10.8225, -82.5781, 28.2569, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.8835, -31.1166, -15.5106, 0.55 ) }
    dend_16 { pt3dadd( -12.9928, -32.5559, -20.2689, 0.55 ) }
    dend_16 { pt3dadd( -13.6279, -32.8925, -21.6301, 0.55 ) }
    dend_16 { pt3dadd( -15.2646, -33.7312, -24.9532, 0.55 ) }
    dend_16 { pt3dadd( -18.9312, -35.379, -32.0052, 0.28 ) }
    dend_16 { pt3dadd( -19.4972, -35.6009, -33.005, 0.55 ) }
    dend_16 { pt3dadd( -21.9229, -36.6136, -37.0396, 0.55 ) }
    dend_16 { pt3dadd( -25.4325, -37.9699, -42.123, 0.55 ) }
    dend_16 { pt3dadd( -26.7882, -38.4293, -44.0285, 0.28 ) }
    dend_16 { pt3dadd( -28.0032, -38.7189, -45.6164, 0.28 ) }
    dend_16 { pt3dadd( -30.2169, -39.135, -47.9817, 0.55 ) }
    dend_16 { pt3dadd( -32.8577, -39.5002, -50.9931, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -35.2501, -39.5886, -53.8536, 0.55 ) }
    dend_16 { pt3dadd( -37.1013, -39.4642, -56.0318, 0.55 ) }
    dend_16 { pt3dadd( -38.3459, -39.2501, -57.5877, 0.55 ) }
    dend_16 { pt3dadd( -41.9313, -38.422, -62.3071, 0.55 ) }
    dend_16 { pt3dadd( -45.7143, -37.2124, -67.2011, 0.55 ) }
    dend_16 { pt3dadd( -47.2877, -36.598, -69.1794, 0.28 ) }
    dend_16 { pt3dadd( -48.7715, -36.0471, -71.0925, 0.55 ) }
    dend_16 { pt3dadd( -51.8197, -35.1776, -74.9218, 0.28 ) }
    dend_16 { pt3dadd( -52.8539, -34.9216, -76.1956, 0.83 ) }
    dend_16 { pt3dadd( -54.8486, -34.4032, -78.4128, 0.28 ) }
    dend_16 { pt3dadd( -56.3866, -34.1458, -79.778, 0.55 ) }
    dend_16 { pt3dadd( -58.6475, -33.8578, -81.7051, 0.28 ) }
    dend_16 { pt3dadd( -59.5598, -33.7277, -82.4402, 0.55 ) }
    dend_16 { pt3dadd( -61.2922, -33.515, -83.7007, 0.55 ) }
    dend_16 { pt3dadd( -63.9257, -32.9016, -85.5116, 0.55 ) }
    dend_16 { pt3dadd( -65.6747, -32.3791, -86.5966, 0.28 ) }
    dend_16 { pt3dadd( -67.1117, -31.7649, -87.3618, 0.55 ) }
    dend_16 { pt3dadd( -68.783, -30.8258, -88.2822, 0.28 ) }
    dend_16 { pt3dadd( -69.0524, -30.6489, -88.4447, 0.55 ) }
    dend_16 { pt3dadd( -71.3704, -28.9878, -90.4109, 0.28 ) }
    dend_16 { pt3dadd( -72.9761, -27.7574, -92.0469, 0.55 ) }
    dend_16 { pt3dadd( -74.9534, -25.9893, -94.5671, 0.83 ) }
    dend_16 { pt3dadd( -76.4929, -24.5008, -96.8827, 0.28 ) }
    dend_16 { pt3dadd( -76.8714, -24.1238, -97.5346, 0.55 ) }
    dend_16 { pt3dadd( -79.6959, -21.3106, -102.766, 0.28 ) }
    dend_16 { pt3dadd( -80.1648, -20.8354, -103.754, 0.55 ) }
    dend_16 { pt3dadd( -81.4842, -19.2957, -106.811, 0.28 ) }
    dend_16 { pt3dadd( -81.8233, -18.8999, -107.604, 0.55 ) }
    dend_16 { pt3dadd( -82.7296, -17.863, -109.542, 0.28 ) }
    dend_16 { pt3dadd( -83.3948, -17.1121, -110.85, 0.55 ) }
    dend_16 { pt3dadd( -85.0105, -15.4118, -113.427, 0.28 ) }
    dend_16 { pt3dadd( -86.0, -14.4953, -114.9, 0.55 ) }
    dend_16 { pt3dadd( -88.1906, -12.7118, -117.881, 0.28 ) }
    dend_16 { pt3dadd( -88.8535, -12.2275, -118.753, 0.55 ) }
    dend_16 { pt3dadd( -89.9233, -11.5703, -120.066, 0.28 ) }
    dend_16 { pt3dadd( -90.8509, -11.013, -121.122, 0.55 ) }
    dend_16 { pt3dadd( -92.8343, -9.87832, -123.168, 0.28 ) }
    dend_16 { pt3dadd( -93.4422, -9.55128, -123.76, 0.55 ) }
    dend_16 { pt3dadd( -98.039, -6.9993, -127.91, 0.28 ) }
    dend_16 { pt3dadd( -99.6954, -5.95944, -129.205, 0.55 ) }
    dend_16 { pt3dadd( -102.707, -3.92797, -131.304, 0.28 ) }
    dend_16 { pt3dadd( -104.075, -2.94902, -132.205, 0.55 ) }
    dend_16 { pt3dadd( -107.28, -0.716447, -134.068, 0.28 ) }
    dend_16 { pt3dadd( -108.482, 0.0496456, -134.692, 0.55 ) }
    dend_16 { pt3dadd( -112.957, 2.42042, -136.68, 0.28 ) }
    dend_16 { pt3dadd( -114.856, 3.16703, -137.48, 0.55 ) }
    dend_16 { pt3dadd( -117.627, 3.77984, -138.568, 0.55 ) }
    dend_16 { pt3dadd( -119.356, 4.05111, -139.191, 0.55 ) }
    dend_16 { pt3dadd( -122.974, 4.53089, -140.183, 0.28 ) }
    dend_16 { pt3dadd( -126.599, 4.98197, -140.935, 0.28 ) }
    dend_16 { pt3dadd( -129.641, 5.37339, -141.476, 0.55 ) }
    dend_16 { pt3dadd( -133.428, 6.17854, -141.752, 0.28 ) }
    dend_16 { pt3dadd( -135.333, 6.80761, -141.655, 0.55 ) }
    dend_16 { pt3dadd( -139.88, 8.99643, -141.017, 0.28 ) }
    dend_16 { pt3dadd( -142.265, 10.5744, -140.168, 0.55 ) }
    dend_16 { pt3dadd( -143.825, 11.8286, -139.303, 0.28 ) }
    dend_16 { pt3dadd( -145.62, 13.2622, -137.924, 0.55 ) }
    dend_16 { pt3dadd( -147.878, 15.1408, -135.94, 0.28 ) }
    dend_16 { pt3dadd( -148.742, 15.8093, -135.197, 0.55 ) }
    dend_16 { pt3dadd( -153.25, 18.8532, -131.851, 0.28 ) }
    dend_16 { pt3dadd( -154.78, 19.8229, -130.737, 0.55 ) }
    dend_16 { pt3dadd( -158.44, 22.0018, -127.993, 0.28 ) }
    dend_16 { pt3dadd( -160.432, 23.1631, -126.503, 0.55 ) }
    dend_16 { pt3dadd( -162.071, 24.1151, -125.282, 0.55 ) }
    dend_16 { pt3dadd( -164.031, 25.2365, -123.872, 0.28 ) }
    dend_16 { pt3dadd( -165.052, 25.8024, -123.304, 0.55 ) }
    dend_16 { pt3dadd( -168.461, 27.7953, -121.612, 0.28 ) }
    dend_16 { pt3dadd( -170.219, 29.0327, -120.696, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.8835, -31.1166, -15.5106, 0.55 ) }
    dend_15 { pt3dadd( -10.2616, -31.326, -16.3353, 0.55 ) }
    dend_15 { pt3dadd( -9.59957, -31.4305, -17.1495, 0.55 ) }
    dend_15 { pt3dadd( -8.71478, -31.4799, -18.1232, 0.55 ) }
    dend_15 { pt3dadd( -7.95258, -31.444, -18.8867, 0.55 ) }
    dend_15 { pt3dadd( -2.54477, -30.5716, -23.5265, 0.55 ) }
    dend_15 { pt3dadd( -1.3143, -30.2187, -24.5917, 0.55 ) }
    dend_15 { pt3dadd( 0.499823, -29.5497, -26.2057, 0.55 ) }
    dend_15 { pt3dadd( 1.78494, -29.0278, -27.3572, 0.55 ) }
    dend_15 { pt3dadd( 3.06043, -28.4377, -28.4511, 0.28 ) }
    dend_15 { pt3dadd( 5.08525, -27.4087, -30.0371, 0.55 ) }
    dend_15 { pt3dadd( 8.1906, -25.7798, -32.232, 0.28 ) }
    dend_15 { pt3dadd( 8.42809, -25.6933, -32.4898, 0.55 ) }
    dend_15 { pt3dadd( 9.54702, -25.5034, -34.5553, 0.28 ) }
    dend_15 { pt3dadd( 10.0612, -25.4538, -36.0687, 0.55 ) }
    dend_15 { pt3dadd( 10.4565, -25.5049, -37.7574, 0.55 ) }
    dend_15 { pt3dadd( 11.1123, -25.7423, -40.7986, 0.55 ) }
    dend_15 { pt3dadd( 12.4124, -26.2497, -46.7618, 0.55 ) }
    dend_15 { pt3dadd( 13.3528, -26.6353, -50.7484, 0.55 ) }
    dend_15 { pt3dadd( 13.713, -26.7826, -52.1145, 0.55 ) }
    dend_15 { pt3dadd( 16.2971, -27.6939, -61.0335, 0.55 ) }
    dend_15 { pt3dadd( 17.1011, -27.9122, -63.4177, 0.55 ) }
    dend_15 { pt3dadd( 17.6528, -28.0405, -64.7203, 0.55 ) }
    dend_15 { pt3dadd( 19.1977, -28.4296, -67.6399, 0.55 ) }
    dend_15 { pt3dadd( 23.2876, -29.7563, -74.4117, 0.55 ) }
    dend_15 { pt3dadd( 24.4619, -30.1976, -76.1846, 0.28 ) }
    dend_15 { pt3dadd( 25.2042, -30.5017, -77.14, 0.55 ) }
    dend_15 { pt3dadd( 26.3265, -31.021, -78.5321, 0.28 ) }
    dend_15 { pt3dadd( 26.8262, -31.304, -79.0654, 0.55 ) }
    dend_15 { pt3dadd( 28.652, -32.4519, -80.2083, 0.28 ) }
    dend_15 { pt3dadd( 30.1076, -33.8172, -80.1296, 0.55 ) }
    dend_15 { pt3dadd( 30.9615, -34.7683, -80.0109, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 31.7171, -35.7941, -79.7823, 0.55 ) }
    dend_15 { pt3dadd( 32.3503, -36.8911, -79.4997, 0.28 ) }
    dend_15 { pt3dadd( 32.6164, -37.452, -79.3854, 0.55 ) }
    dend_15 { pt3dadd( 33.208, -38.9089, -79.0435, 0.28 ) }
    dend_15 { pt3dadd( 33.3617, -39.345, -79.0172, 0.55 ) }
    dend_15 { pt3dadd( 34.2518, -41.8518, -79.0128, 0.28 ) }
    dend_15 { pt3dadd( 34.718, -43.0221, -79.1593, 0.55 ) }
    dend_15 { pt3dadd( 35.8449, -45.5439, -79.746, 0.28 ) }
    dend_15 { pt3dadd( 36.3134, -46.481, -80.0613, 0.55 ) }
    dend_15 { pt3dadd( 37.9992, -49.5764, -81.2694, 0.28 ) }
    dend_15 { pt3dadd( 38.4182, -50.3309, -81.5946, 0.55 ) }
    dend_15 { pt3dadd( 39.6902, -52.72, -82.7194, 0.28 ) }
    dend_15 { pt3dadd( 39.95, -53.2753, -82.9444, 0.55 ) }
    dend_15 { pt3dadd( 40.5857, -54.7385, -83.5326, 0.28 ) }
    dend_15 { pt3dadd( 40.9736, -55.5923, -83.9558, 0.55 ) }
    dend_15 { pt3dadd( 41.3925, -56.4361, -84.4346, 0.55 ) }
    dend_15 { pt3dadd( 42.2277, -58.1192, -85.3771, 0.28 ) }
    dend_15 { pt3dadd( 42.8573, -59.1735, -86.0681, 0.55 ) }
    dend_15 { pt3dadd( 45.02, -61.8727, -88.3234, 0.28 ) }
    dend_15 { pt3dadd( 45.8984, -62.7695, -89.2493, 0.55 ) }
    dend_15 { pt3dadd( 46.5212, -63.3452, -89.8752, 0.28 ) }
    dend_15 { pt3dadd( 47.1704, -63.8786, -90.4983, 0.55 ) }
    dend_15 { pt3dadd( 49.2241, -65.3953, -92.3761, 0.28 ) }
    dend_15 { pt3dadd( 50.7864, -66.5663, -93.7494, 0.55 ) }
    dend_15 { pt3dadd( 53.4596, -68.7511, -95.8563, 0.28 ) }
    dend_15 { pt3dadd( 54.304, -69.432, -96.5151, 0.55 ) }
    dend_15 { pt3dadd( 55.9563, -70.6876, -97.6241, 0.28 ) }
    dend_15 { pt3dadd( 56.514, -71.0992, -97.9452, 0.55 ) }
    dend_15 { pt3dadd( 57.4376, -71.7536, -98.2914, 0.28 ) }
    dend_15 { pt3dadd( 58.2606, -72.3069, -98.5237, 0.55 ) }
    dend_15 { pt3dadd( 60.5185, -73.6889, -98.9159, 0.28 ) }
    dend_15 { pt3dadd( 63.1266, -75.1724, -99.3247, 0.28 ) }
    dend_15 { pt3dadd( 64.4569, -75.8636, -99.4374, 0.28 ) }
    dend_15 { pt3dadd( 65.8046, -76.5239, -99.6347, 0.55 ) }
    dend_15 { pt3dadd( 67.788, -77.4038, -99.9339, 0.28 ) }
    dend_15 { pt3dadd( 68.6724, -77.7821, -100.049, 0.83 ) }
    dend_15 { pt3dadd( 70.9235, -78.7717, -100.253, 0.28 ) }
    dend_15 { pt3dadd( 71.8969, -79.2235, -100.396, 0.55 ) }
    dend_15 { pt3dadd( 76.1495, -81.3683, -101.221, 0.28 ) }
    dend_15 { pt3dadd( 78.2694, -82.4703, -101.806, 0.28 ) }
    dend_15 { pt3dadd( 79.8078, -83.2747, -102.335, 0.55 ) }
    dend_15 { pt3dadd( 80.6966, -83.7645, -102.746, 0.55 ) }
    dend_15 { pt3dadd( 83.0383, -85.1009, -104.027, 0.28 ) }
    dend_15 { pt3dadd( 85.204, -86.4485, -105.314, 0.55 ) }
    dend_15 { pt3dadd( 87.1657, -87.7357, -106.484, 0.28 ) }
    dend_15 { pt3dadd( 88.9272, -88.9279, -107.641, 0.55 ) }
    dend_15 { pt3dadd( 90.3874, -89.8959, -108.588, 0.28 ) }
    dend_15 { pt3dadd( 91.6041, -90.6013, -109.298, 0.55 ) }
    dend_15 { pt3dadd( 94.5812, -92.1377, -110.875, 0.28 ) }
    dend_15 { pt3dadd( 96.0965, -92.9125, -111.61, 0.55 ) }
    dend_15 { pt3dadd( 98.3789, -94.0799, -112.627, 0.28 ) }
    dend_15 { pt3dadd( 100.26, -94.9822, -113.417, 0.55 ) }
    dend_15 { pt3dadd( 104.693, -96.9109, -115.279, 0.28 ) }
    dend_15 { pt3dadd( 106.505, -97.6031, -116.162, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.46761, -110.949, 82.1792, 0.55 ) }
    dend_9 { pt3dadd( -7.93281, -119.677, 86.1884, 0.55 ) }
    dend_9 { pt3dadd( -8.48194, -129.09, 87.7588, 0.55 ) }
    dend_9 { pt3dadd( -9.00506, -138.165, 90.8002, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.46761, -110.949, 82.1792, 0.55 ) }
    dend_8 { pt3dadd( -6.41686, -118.381, 87.129, 0.55 ) }
    dend_8 { pt3dadd( -6.01803, -124.658, 93.6516, 0.55 ) }
    dend_8 { pt3dadd( -5.02144, -129.584, 101.3, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.63288, -110.607, 82.6823, 0.55 ) }
    dend_6 { pt3dadd( -9.10206, -122.515, 89.7684, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.63288, -110.607, 82.6823, 0.55 ) }
    dend_5 { pt3dadd( -10.9739, -118.552, 87.6882, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.34538, -88.0874, 5.10533, 0.83 ) }
    dend_25 { pt3dadd( 9.9074, -90.5261, 5.60442, 0.83 ) }
    dend_25 { pt3dadd( 10.4275, -92.5806, 6.20761, 0.83 ) }
    dend_25 { pt3dadd( 10.9446, -94.6228, 6.80719, 0.83 ) }
    dend_25 { pt3dadd( 11.4357, -96.5623, 7.37661, 0.83 ) }
    dend_25 { pt3dadd( 12.1924, -99.5511, 8.25411, 0.83 ) }
    dend_25 { pt3dadd( 12.9437, -102.518, 9.12527, 0.83 ) }
    dend_25 { pt3dadd( 13.5188, -104.481, 10.0068, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 9.34538, -88.0874, 5.10533, 0.55 ) }
    dend_24 { pt3dadd( 10.6956, -89.8359, 4.98769, 0.55 ) }
    dend_24 { pt3dadd( 11.7076, -91.2031, 4.64789, 0.55 ) }
    dend_24 { pt3dadd( 12.3963, -92.2156, 4.29614, 0.55 ) }
    dend_24 { pt3dadd( 12.9976, -93.4068, 3.74533, 0.83 ) }
    dend_24 { pt3dadd( 13.5687, -94.7624, 2.95632, 0.55 ) }
    dend_24 { pt3dadd( 14.1273, -96.0883, 2.18457, 0.83 ) }
    dend_24 { pt3dadd( 14.6332, -97.5286, 1.21622, 0.55 ) }
    dend_24 { pt3dadd( 14.9166, -98.365, 0.572864, 0.83 ) }
    dend_24 { pt3dadd( 15.691, -101.074, -1.71847, 0.55 ) }
    dend_24 { pt3dadd( 16.1001, -103.205, -3.63826, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.8225, -82.5781, 28.2569, 0.55 ) }
    dend_20 { pt3dadd( -15.0931, -89.9871, 33.338, 0.55 ) }
    dend_20 { pt3dadd( -20.5817, -96.3291, 38.8235, 0.55 ) }
    dend_20 { pt3dadd( -26.6006, -101.727, 44.8453, 0.55 ) }
    dend_20 { pt3dadd( -33.3002, -105.924, 51.1976, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.8225, -82.5781, 28.2569, 0.55 ) }
    dend_19 { pt3dadd( -13.4518, -88.4129, 33.1635, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 13.5188, -104.481, 10.0068, 0.55 ) }
    dend_27 { pt3dadd( 13.6582, -106.386, 10.5679, 0.55 ) }
    dend_27 { pt3dadd( 13.9051, -108.816, 11.3508, 0.55 ) }
    dend_27 { pt3dadd( 14.1393, -111.11, 12.0765, 0.55 ) }
    dend_27 { pt3dadd( 14.2865, -112.742, 12.5655, 0.55 ) }
    dend_27 { pt3dadd( 14.5157, -115.655, 13.3895, 0.55 ) }
    dend_27 { pt3dadd( 15.2972, -123.847, 15.4872, 0.55 ) }
    dend_27 { pt3dadd( 15.6367, -126.63, 16.0738, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 15.8864, -128.594, 16.383, 0.55 ) }
    dend_27 { pt3dadd( 16.1954, -130.84, 16.5459, 0.55 ) }
    dend_27 { pt3dadd( 16.4067, -132.581, 16.5082, 0.55 ) }
    dend_27 { pt3dadd( 17.0319, -136.648, 16.2452, 0.55 ) }
    dend_27 { pt3dadd( 17.3927, -139.739, 16.0391, 0.55 ) }
    dend_27 { pt3dadd( 17.686, -141.766, 15.9679, 0.55 ) }
    dend_27 { pt3dadd( 18.4218, -147.017, 16.0676, 0.55 ) }
    dend_27 { pt3dadd( 18.8898, -150.546, 16.2998, 0.55 ) }
    dend_27 { pt3dadd( 19.5114, -155.089, 16.8704, 0.55 ) }
    dend_27 { pt3dadd( 20.2808, -160.236, 17.9396, 0.55 ) }
    dend_27 { pt3dadd( 20.9553, -163.666, 18.8814, 0.55 ) }
    dend_27 { pt3dadd( 21.4051, -165.69, 19.4963, 0.55 ) }
    dend_27 { pt3dadd( 21.783, -167.557, 20.057, 0.55 ) }
    dend_27 { pt3dadd( 22.3059, -169.923, 20.6489, 0.55 ) }
    dend_27 { pt3dadd( 23.5006, -175.634, 21.6637, 0.55 ) }
    dend_27 { pt3dadd( 24.0436, -177.844, 21.9702, 0.55 ) }
    dend_27 { pt3dadd( 24.5861, -180.307, 22.2928, 0.55 ) }
    dend_27 { pt3dadd( 25.3687, -184.006, 22.7567, 0.55 ) }
    dend_27 { pt3dadd( 25.8293, -186.852, 23.1406, 0.55 ) }
    dend_27 { pt3dadd( 26.1012, -189.561, 23.4664, 0.55 ) }
    dend_27 { pt3dadd( 26.2387, -192.146, 23.7762, 0.55 ) }
    dend_27 { pt3dadd( 26.3265, -194.668, 24.1168, 0.55 ) }
    dend_27 { pt3dadd( 26.4009, -196.464, 24.3404, 0.55 ) }
    dend_27 { pt3dadd( 26.5437, -199.403, 24.5988, 0.55 ) }
    dend_27 { pt3dadd( 26.6677, -202.938, 24.6234, 0.55 ) }
    dend_27 { pt3dadd( 26.7775, -204.656, 24.499, 0.55 ) }
    dend_27 { pt3dadd( 26.8935, -206.167, 24.2688, 0.55 ) }
    dend_27 { pt3dadd( 27.2543, -209.016, 23.6567, 0.55 ) }
    dend_27 { pt3dadd( 27.4646, -210.824, 23.2151, 0.55 ) }
    dend_27 { pt3dadd( 27.7487, -213.05, 22.7605, 0.55 ) }
    dend_27 { pt3dadd( 27.8838, -214.614, 22.5409, 0.55 ) }
    dend_27 { pt3dadd( 28.1542, -218.681, 22.1379, 0.55 ) }
    dend_27 { pt3dadd( 28.2728, -221.723, 22.0668, 0.55 ) }
    dend_27 { pt3dadd( 28.3649, -226.429, 22.3652, 0.55 ) }
    dend_27 { pt3dadd( 28.4877, -229.458, 22.8629, 0.55 ) }
    dend_27 { pt3dadd( 28.5883, -232.638, 23.4952, 0.28 ) }
    dend_27 { pt3dadd( 28.5939, -233.916, 23.8049, 0.28 ) }
    dend_27 { pt3dadd( 28.5855, -237.013, 24.8561, 0.28 ) }
    dend_27 { pt3dadd( 28.5443, -239.871, 26.0691, 0.28 ) }
    dend_27 { pt3dadd( 28.852, -243.633, 28.0945, 0.28 ) }
    dend_27 { pt3dadd( 30.7782, -252.108, 30.3515, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.5188, -104.481, 10.0068, 0.55 ) }
    dend_26 { pt3dadd( 14.3501, -104.886, 11.0713, 0.55 ) }
    dend_26 { pt3dadd( 15.9402, -105.937, 13.3959, 0.55 ) }
    dend_26 { pt3dadd( 17.2543, -106.978, 15.4702, 0.28 ) }
    dend_26 { pt3dadd( 18.6175, -108.167, 17.7475, 0.55 ) }
    dend_26 { pt3dadd( 19.306, -108.932, 19.2648, 0.28 ) }
    dend_26 { pt3dadd( 20.3381, -110.318, 22.0643, 0.55 ) }
    dend_26 { pt3dadd( 20.5602, -111.063, 23.4482, 0.28 ) }
    dend_26 { pt3dadd( 20.5888, -111.335, 23.9988, 0.28 ) }
    dend_26 { pt3dadd( 20.6289, -111.724, 24.9582, 0.55 ) }
    dend_26 { pt3dadd( 20.947, -112.997, 28.5595, 0.28 ) }
    dend_26 { pt3dadd( 21.1192, -113.493, 30.0623, 0.55 ) }
    dend_26 { pt3dadd( 21.968, -114.917, 34.3382, 0.28 ) }
    dend_26 { pt3dadd( 22.5392, -115.614, 36.5696, 0.28 ) }
    dend_26 { pt3dadd( 23.3661, -116.504, 39.2557, 0.55 ) }
    dend_26 { pt3dadd( 24.8462, -117.875, 43.042, 0.28 ) }
    dend_26 { pt3dadd( 25.0868, -118.055, 43.5191, 0.55 ) }
    dend_26 { pt3dadd( 26.3939, -118.926, 45.7567, 0.28 ) }
    dend_26 { pt3dadd( 26.5303, -119.006, 45.9431, 0.55 ) }
    dend_26 { pt3dadd( 27.7003, -119.967, 47.6261, 0.28 ) }
    dend_26 { pt3dadd( 28.2189, -120.495, 48.4654, 0.55 ) }
    dend_26 { pt3dadd( 32.4183, -124.394, 55.4216, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -33.3002, -105.924, 51.1976, 0.55 ) }
    dend_22 { pt3dadd( -38.0521, -109.899, 58.6414, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -33.3002, -105.924, 51.1976, 0.55 ) }
    dend_21 { pt3dadd( -38.4411, -111.358, 54.6966, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 9
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 5
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 13
    dend_15 nseg = 9
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_BP_0cbab2a2ce_0_0


