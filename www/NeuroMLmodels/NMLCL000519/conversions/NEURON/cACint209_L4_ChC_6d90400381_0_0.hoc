// Cell: cACint209_L4_ChC_6d90400381_0_0
/*
{
  "id" : "cACint209_L4_ChC_6d90400381_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 10.8306, -3.45834, 0.37", "-0.192916, 12.7753, -3.60225, 0.37", "-0.285217, 13.3036, -3.7062, 0.74", "-0.225738, 13.7199, -3.86569, 0.74", "0.274885, 14.9984, -4.47236, 0.37", "0.767356, 16.0206, -4.92334, 0.66", "1.34295, 17.0755, -5.40508, 1.33", "1.88513, 17.8621, -5.78081, 1.33", "2.79756, 19.1615, -6.41206, 0.74", "3.47912, 20.2001, -6.88744, 0.74", "4.51773, 21.9172, -7.6718, 1.25", "5.17224, 23.2978, -8.27556, 2.06", "5.50426, 24.3285, -8.67883, 2.06", "5.73298, 25.7243, -9.17717, 1.4", "5.64615, 27.3363, -9.73214, 0.74", "5.26342, 28.3936, -10.0994, 1.11", "4.59746, 29.2039, -10.3838, 1.11", "3.63729, 29.8963, -10.609, 0.81", "2.37274, 30.4812, -10.9193, 0.81", "0.827512, 30.9566, -11.3274, 0.81", "-0.679049, 31.305, -11.7685, 0.96", "-1.92283, 31.5913, -12.1473, 1.11", "-3.04018, 31.8816, -12.5513, 1.11", "-5.46743, 32.667, -13.6114, 1.11", "-6.1846, 32.9899, -14.0013, 1.11", "-7.34145, 33.8484, -14.8023, 0.59", "-8.02507, 34.7691, -15.3812, 0.96", "-8.4294, 35.6192, -15.7643, 1.25", "-8.71477, 36.3858, -16.0268, 1.55", "-8.88788, 36.8687, -16.1397, 1.55", "-9.50609, 38.3516, -16.4545, 0.74", "-10.4773, 40.1449, -16.8295, 0.96", "-11.2817, 41.232, -17.1, 0.66", "-11.9493, 41.916, -17.3109, 0.66", "-13.0213, 42.7659, -17.6453, 0.81", "-13.9111, 43.3243, -17.9319, 0.96", "-15.0818, 43.924, -18.3393, 1.47", "-16.1605, 44.4417, -18.7356, 1.62", "-17.1791, 45.006, -19.1208, 1.47", "-18.1272, 45.639, -19.4983, 1.11", "-19.1983, 46.5095, -19.9557, 0.81", "-20.4593, 47.8055, -20.5752, 0.66", "-21.137, 48.6998, -20.9515, 0.81", "-22.0084, 50.2089, -21.5144, 1.03", "-22.3453, 50.9953, -21.7987, 1.25", "-22.5852, 51.727, -22.0757, 1.25", "-23.0187, 53.3065, -22.7328, 0.96", "-23.3417, 54.5255, -23.3124, 0.81", "-23.7921, 56.0296, -24.1246, 0.59", "-24.1633, 57.0745, -24.7278, 0.59", "-24.674, 58.3127, -25.451, 0.59", "-25.2351, 59.5282, -26.1361, 0.59", "-25.7787, 60.6663, -26.6677, 0.44", "-26.2938, 61.8545, -27.0752, 0.66", "-26.6931, 63.1239, -27.2985, 0.74", "-26.8224, 63.9207, -27.3379, 0.96", "-26.8346, 64.8121, -27.3084, 0.96", "-26.6348, 66.7907, -27.2691, 0.52", "-26.3585, 68.3951, -27.292, 0.59", "-25.9927, 70.2147, -27.3908, 0.59", "-25.8042, 71.2314, -27.4934, 0.96", "-25.6594, 72.4044, -27.6722, 0.96", "-25.614, 74.4873, -28.1235, 0.66", "-25.8438, 75.9192, -28.5881, 0.66", "-26.3504, 77.0789, -29.0716, 0.96", "-26.9363, 77.7822, -29.3929, 1.03", "-27.6841, 78.3501, -29.6979, 1.03", "-28.6783, 78.8667, -30.0646, 1.03", "-30.0181, 79.352, -30.5962, 0.74", "-31.0725, 79.6507, -31.1205, 0.74", "-31.776, 79.8113, -31.5472, 0.52", "-33.3323, 80.0993, -32.6966, 0.52", "-34.6494, 80.2922, -33.7868, 0.52", "-35.9924, 80.4452, -34.9507, 1.11", "-36.7227, 80.5108, -35.5629, 1.4", "-37.5521, 80.5622, -36.1854, 1.4", "-38.9696, 80.5984, -37.0693, 0.81", "-39.8437, 80.6165, -37.4267, 0.59", "-41.1598, 80.6791, -37.7078, 0.44", "-42.482, 80.8013, -37.7841, 0.44", "-43.8228, 81.0063, -37.7449, 0.74", "-45.1041, 81.3483, -37.6446, 1.33", "-46.6624, 82.0219, -37.5541, 0.88", "-47.3531, 82.4724, -37.6507, 0.59", "-47.7809, 82.8674, -37.8258, 0.59", "-48.383, 83.5666, -38.266, 0.74", "-49.1278, 84.5469, -39.0363, 0.96", "-50.0894, 85.823, -40.2151, 0.59", "-51.0845, 87.0689, -41.5257, 0.59", "-51.6022, 87.6947, -42.18, 0.81", "-52.2561, 88.4106, -42.8971, 0.96", "-52.8829, 88.9914, -43.4339, 1.03", "-53.9444, 89.8745, -44.1141, 0.66", "-54.2695, 90.1544, -44.2829, 0.66", "-55.1428, 91.0349, -44.7034, 0.81", "-55.9133, 91.9881, -45.157, 0.81", "-56.4991, 92.972, -45.6028, 0.66", "-56.9764, 94.0197, -46.058, 0.66", "-57.5705, 95.6494, -46.753, 0.52", "-57.9104, 96.6669, -47.201, 0.81", "-58.1604, 97.4256, -47.5494, 0.74", "-58.765, 99.0535, -48.2882, 0.59", "-59.134, 99.8492, -48.6192, 0.74", "-59.627, 100.637, -48.9056, 0.96", "-60.3884, 101.583, -49.1324, 0.96", "-61.0547, 102.313, -49.2417, 0.74", "-61.9771, 103.262, -49.3172, 1.03", "-62.6428, 103.927, -49.2577, 1.25", "-63.1098, 104.43, -49.1621, 0.81", "-64.1006, 105.618, -48.8549, 0.59", "-64.7044, 106.424, -48.6007, 0.66", "-65.2054, 107.154, -48.346, 0.66", "-66.5047, 109.177, -47.588, 0.88", "-67.1635, 110.213, -47.1694, 1.11", "-67.6163, 110.921, -46.8543, 1.03", "-68.1673, 111.777, -46.4622, 1.25", "-68.373, 112.095, -46.3032, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.67164, -4.39834, 1.11", "4.96263, 10.4291, -4.88699, 1.11", "5.56607, 11.034, -5.28967, 1.11", "6.52883, 12.0457, -5.93148, 1.11", "7.18918, 12.7744, -6.41465, 0.96", "8.28295, 13.8564, -7.12861, 1.55", "9.23425, 14.7213, -7.70322, 1.62", "9.79448, 15.1758, -8.01695, 1.62", "10.6603, 15.8062, -8.39808, 1.25", "12.1117, 16.754, -8.84365, 0.96", "14.3291, 18.0563, -9.24797, 0.88", "15.3699, 18.5855, -9.31114, 1.55", "16.5064, 19.0837, -9.28371, 1.84", "18.2109, 19.753, -9.15018, 1.11", "19.1057, 20.0891, -9.03304, 1.03", "20.107, 20.5039, -8.83803, 1.25", "21.0755, 21.0244, -8.63503, 0.88", "21.9687, 21.6199, -8.44861, 0.88", "22.8051, 22.2702, -8.27644, 0.88", "23.7872, 23.0795, -8.06753, 0.88", "24.6269, 23.8163, -7.79706, 0.96", "25.4959, 24.6416, -7.47237, 0.96", "26.2888, 25.4772, -7.11881, 0.81", "27.4557, 26.7824, -6.49577, 1.11", "28.2209, 27.6096, -6.01148, 1.4", "29.1025, 28.4394, -5.35642, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.33214, 2.16166, 1.62", "4.69448, 8.8656, 2.90288, 1.62", "5.82123, 9.50444, 3.91761, 1.25", "7.87104, 10.3961, 5.97555, 1.25", "8.95499, 10.8016, 7.13683, 1.25", "10.086, 11.0895, 8.49343, 1.92", "10.5646, 11.1685, 9.10292, 2.5", "11.6054, 11.1954, 10.5436, 2.5", "13.7582, 10.9428, 13.7473, 1.77", "15.2513, 10.4994, 15.9645, 0.96", "17.3581, 9.65548, 19.0852, 0.88", "17.9604, 9.38202, 19.9915, 0.88", "18.4356, 9.17473, 20.685, 1.4", "18.9052, 9.0044, 21.2912, 1.4", "20.6184, 8.638, 23.0263, 0.66", "21.3451, 8.67892, 23.606, 0.66", "23.0706, 9.33265, 24.6275, 0.88", "24.1549, 9.91291, 25.1814, 0.88", "25.5165, 10.7793, 25.7208, 0.74", "26.5315, 11.5128, 26.0249, 1.4", "27.6997, 12.4296, 26.2376, 2.06", "28.8501, 13.304, 26.327, 1.84", "30.2296, 14.304, 26.2485, 1.18", "31.6649, 15.2693, 26.205, 1.18", "32.2477, 15.6116, 26.2875, 1.03", "33.2219, 16.0712, 26.692, 1.03", "33.8666, 16.3203, 27.342, 0.59", "34.4651, 16.584, 28.3006, 0.59", "35.6379, 17.1943, 30.6893, 0.88", "37.0021, 18.0217, 33.8313, 1.62", "37.5883, 18.4273, 35.1976, 1.62", "38.9524, 19.45, 38.3576, 0.88", "39.5878, 19.9251, 39.7346, 0.88", "40.1739, 20.3781, 40.8734, 1.47", "40.5858, 20.7007, 41.5266, 1.47", "41.6451, 21.4669, 42.8, 0.81", "42.236, 21.8185, 43.3702, 0.59", "42.868, 22.1036, 43.8681, 0.59", "44.4096, 22.7227, 45.0967, 1.25", "46.834, 23.7292, 47.1183, 0.74", "47.5935, 24.1165, 47.8269, 0.29", "48.2693, 24.4912, 48.5429, 0.29", "48.6563, 24.7064, 49.01, 0.59", "49.6811, 25.2964, 50.2731, 1.11", "50.1989, 25.558, 50.8926, 1.11", "51.3102, 26.4903, 52.2231, 1.11", "51.938, 27.3386, 53.2806, 0.59", "51.9552, 24.9059, 53.4547, 0.59", "52.1702, 22.3975, 54.1022, 0.52", "52.3189, 20.6455, 54.5499, 0.59", "61.8726, 23.554, 63.0657, 0.59", "71.8922, 27.5778, 70.4708, 0.59", "80.1728, 33.4019, 78.657, 0.59", "88.3767, 40.4036, 85.8363, 0.59", "97.9159, 47.9168, 90.2662, 0.59", "106.51, 55.8245, 95.7456, 0.59", "115.578, 62.339, 102.373, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.11864, 1.60166, 1.69", "-3.56761, 6.11864, 1.60166, 1.69", "-4.04997, 6.41645, 1.96216, 1.69", "-4.63826, 6.71784, 2.44718, 1.4", "-5.04733, 6.91776, 2.88607, 1.03", "-5.60257, 7.20924, 3.55351, 0.88", "-5.98343, 7.42893, 4.04197, 0.88", "-6.45698, 7.69311, 4.74024, 0.59", "-6.88217, 7.93214, 5.44003, 0.44", "-7.65784, 8.37269, 6.81574, 0.37", "-7.92376, 8.52714, 7.30746, 0.37", "-8.35545, 8.78563, 8.12777, 0.37", "-9.36739, 9.43187, 10.1571, 1.03", "-9.59641, 9.59448, 10.6343, 1.62", "-16.1274, 10.4942, 16.6591, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.13936, -14.5883, 0.74", "-5.41236, -2.12503, -14.578, 0.74", "-7.21749, -3.23865, -14.5683, 1.03", "-8.79636, -4.19354, -14.5924, 1.25", "-10.0589, -4.96846, -14.6256, 1.62", "-11.0934, -5.59276, -14.6581, 1.84", "-12.4501, -6.3632, -14.6671, 1.84", "-13.6517, -6.96524, -14.6126, 1.99", "-14.9144, -7.51039, -14.4923, 2.21", "-16.3897, -8.03915, -14.2789, 2.65", "-17.4362, -8.35267, -14.1112, 2.5", "-19.2045, -8.81603, -13.8425, 1.77", "-21.0774, -9.28358, -13.6183, 1.33", "-22.3507, -9.60993, -13.5581, 1.18", "-23.8604, -10.0119, -13.654, 1.11", "-24.9332, -10.3339, -13.9572, 1.11", "-26.0385, -10.7123, -14.6323, 1.11", "-27.0944, -11.1041, -15.6682, 1.4", "-28.1454, -11.4725, -17.0073, 1.03", "-29.0305, -11.7475, -18.3048, 0.88", "-30.3477, -12.0628, -20.4303, 0.88", "-31.771, -12.2818, -22.9407, 1.47", "-32.8477, -12.3795, -24.9315, 1.77", "-34.0529, -12.3987, -27.2477, 1.84", "-34.4792, -12.3742, -28.0883, 2.06", "-35.2513, -12.2814, -29.6521, 1.77", "-36.4407, -12.042, -32.0017, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.90886, 9.10166, 2.06", "-5.36761, -1.90886, 9.10166, 2.06", "-6.30056, -1.82028, 9.59513, 2.06", "-7.00195, -1.78524, 9.93785, 2.06", "-8.82192, -1.81154, 10.7842, 1.84", "-9.83513, -1.90035, 11.2417, 1.84", "-10.6102, -2.02371, 11.5879, 1.99", "-12.005, -2.35666, 12.2093, 1.55", "-13.1398, -2.75228, 12.7021, 1.03", "-14.0572, -3.17605, 13.0698, 0.88", "-14.9479, -3.70657, 13.3281, 1.18", "-15.6677, -4.18992, 13.4853, 1.18", "-16.2195, -4.59466, 13.5766, 1.47", "-17.0384, -5.2561, 13.648, 1.25", "-17.8447, -5.93469, 13.7544, 1.03", "-18.5717, -6.5393, 13.9172, 1.62", "-19.3, -7.1311, 14.1877, 1.69", "-19.8615, -7.56021, 14.4767, 1.33", "-20.8645, -8.26588, 15.1592, 1.03", "-22.0998, -8.99362, 16.2339, 0.88", "-22.9636, -9.38039, 17.1909, 1.11", "-23.712, -9.57334, 18.1737, 1.33", "-24.1786, -9.59292, 18.8644, 1.33", "-24.6387, -9.4794, 19.5779, 1.18", "-25.1862, -9.17997, 20.4026, 0.88", "-25.9647, -8.62408, 21.4089, 1.18", "-26.4503, -8.28924, 21.9553, 1.33", "-26.8783, -8.06997, 22.3816, 1.33", "-27.6162, -7.86556, 23.0727, 0.59", "-28.6283, -7.91651, 23.9329, 0.52", "-29.1418, -8.21307, 24.3083, 0.59", "-29.8577, -9.13691, 24.8735, 0.59", "-30.5472, -10.4073, 25.5609, 0.59", "-30.9047, -11.1648, 25.9624, 1.03", "-31.3139, -12.1106, 26.5098, 1.03", "-31.6523, -12.8973, 27.0109, 1.03", "-32.2902, -14.2116, 28.0329, 1.03", "-32.8948, -15.0787, 29.0006, 0.66", "-33.4042, -15.4788, 29.745, 0.66", "-34.3018, -15.81, 30.9245, 0.74", "-34.9364, -15.915, 31.7028, 0.81", "-35.5267, -15.9539, 32.3998, 0.52", "-36.5966, -15.9687, 33.5636, 0.52", "-37.0549, -16.0003, 34.067, 0.44", "-37.7219, -16.2789, 34.9541, 0.37", "-38.0427, -16.7104, 35.4742, 0.37", "-38.3403, -17.3651, 36.0058, 1.11", "-38.5943, -18.0367, 36.4212, 1.4", "-38.839, -18.9211, 36.869, 1.4", "-39.1396, -20.2639, 37.4863, 0.81", "-39.3421, -21.2751, 37.8996, 0.29", "-39.5226, -21.9438, 38.1843, 0.29", "-39.7358, -22.4806, 38.4277, 0.29", "-45.6049, -26.2439, 44.9546, 0.29", "-52.7075, -30.1012, 50.0343, 0.29", "-59.2057, -33.95, 55.8737, 0.29", "-65.2359, -36.6071, 62.8415, 0.29", "-71.2806, -39.3822, 69.7456, 0.29", "-78.2352, -43.503, 74.8008, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.47136, 6.85166, 1.77", "-2.19761, -5.47136, 6.85166, 1.77", "-2.18175, -6.422, 6.97568, 1.77", "-2.15651, -8.05181, 7.17936, 1.47", "-2.1426, -9.69202, 7.36366, 1.25", "-2.16636, -10.945, 7.48818, 1.62", "-2.21384, -12.0022, 7.58201, 1.92", "-2.27894, -12.9244, 7.66507, 2.14", "-2.39688, -14.0725, 7.76647, 2.14", "-2.64003, -15.6663, 7.90731, 1.55", "-2.94954, -17.1652, 8.03055, 1.33", "-3.22983, -18.3009, 8.13433, 1.55", "-3.438, -19.0182, 8.20234, 1.92", "-3.7338, -19.8882, 8.31623, 2.21", "-3.95535, -20.4616, 8.40857, 2.5", "-4.2144, -21.1383, 8.54115, 2.5", "-4.45253, -21.8848, 8.69948, 2.36", "-4.7087, -22.9089, 8.92281, 1.69", "-4.95494, -24.2518, 9.20407, 1.25", "-5.08019, -25.5066, 9.45761, 1.4", "-5.08549, -26.62, 9.65519, 1.62", "-4.95672, -27.9791, 9.86424, 2.06", "-4.79995, -28.8167, 9.98322, 2.36", "-4.64137, -29.3597, 10.0503, 2.36", "-4.25014, -30.3946, 10.158, 2.14", "-3.61308, -31.8469, 10.2967, 1.62", "-3.05092, -33.0701, 10.3995, 1.25", "-2.4743, -34.332, 10.5193, 1.03", "-1.85883, -35.7509, 10.6833, 1.03", "-1.40037, -36.9391, 10.8513, 1.03", "-0.901241, -38.4771, 11.1255, 1.03", "-0.683593, -39.393, 11.3253, 0.96", "-0.61757, -40.1167, 11.5085, 0.96", "-0.707176, -40.7618, 11.6916, 0.96", "-1.11922, -41.6113, 11.9963, 0.96", "-1.5222, -42.073, 12.188, 0.88", "-1.94495, -42.4142, 12.3381, 1.18", "-2.6274, -42.888, 12.5296, 1.18", "-3.28848, -43.3209, 12.6992, 1.33", "-4.04966, -43.8119, 12.9108, 1.33", "-4.70409, -44.24, 13.1158, 1.4", "-5.40565, -44.7283, 13.3692, 1.55", "-6.07765, -45.2454, 13.6675, 1.55", "-6.83827, -45.9519, 14.0959, 1.84", "-7.29888, -46.4678, 14.3997, 2.14", "-7.75003, -47.0897, 14.7257, 1.99", "-8.37925, -48.2131, 15.2468, 0.88", "-8.80892, -49.2505, 15.6564, 0.88", "-9.17116, -50.476, 16.0651, 0.81", "-9.3739, -51.5594, 16.3425, 0.74", "-9.5621, -52.9273, 16.6471, 0.74", "-9.65434, -54.2052, 16.89, 1.03", "-9.65074, -55.3534, 17.046, 1.4", "-9.60964, -56.0678, 17.1032, 1.69", "-9.5246, -56.8687, 17.1258, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.49936, -2.20834, 3.39", "1.44239, -9.49936, -2.20834, 3.39", "1.84328, -10.6931, -2.32159, 3.39", "2.16698, -11.6561, -2.46011, 3.02", "2.49474, -12.6312, -2.60037, 3.02", "2.92572, -13.9134, -2.7848, 3.02", "3.38868, -15.2907, -2.98292, 3.24", "3.73781, -16.3063, -3.14461, 3.54", "4.13418, -17.4006, -3.35963, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-68.373, 112.095, -46.3032, 0.44", "-69.7012, 113.347, -47.1744, 0.44", "-70.3011, 113.962, -47.5534, 0.37", "-70.574, 114.308, -47.6877, 0.66", "-70.997, 114.942, -47.8582, 0.66", "-71.4031, 115.661, -47.9949, 0.59", "-71.6535, 116.204, -48.0728, 0.81", "-71.8519, 116.887, -48.0763, 0.81", "-72.0401, 118.461, -48.0407, 0.52", "-71.9907, 119.205, -48.0246, 0.52", "-71.6982, 120.347, -48.0366, 0.44", "-71.2199, 121.425, -48.1152, 0.44", "-70.5647, 122.454, -48.27, 0.74", "-69.979, 123.167, -48.4236, 0.74", "-69.0052, 124.143, -48.7245, 0.44", "-68.2635, 124.821, -48.927, 0.59", "-67.5168, 125.484, -49.1354, 0.59", "-66.7681, 126.172, -49.3735, 0.59", "-66.1831, 126.779, -49.6053, 0.37", "-65.7572, 127.263, -49.8032, 0.37", "-65.1155, 128.028, -50.1299, 0.59", "-64.482, 128.76, -50.4631, 0.37", "-63.9092, 129.391, -50.7615, 0.81", "-63.3093, 130.028, -51.0793, 0.81", "-62.2123, 131.199, -51.6979, 0.44", "-61.3696, 132.122, -52.1944, 0.44", "-60.7764, 132.76, -52.5742, 0.81", "-60.175, 133.413, -52.9728, 0.44", "-59.8493, 133.787, -53.212, 0.59", "-59.0742, 134.744, -53.867, 0.59", "-58.6154, 135.429, -54.4218, 0.44", "-58.1436, 136.383, -55.2493, 0.44", "-57.8563, 137.198, -56.0705, 0.96", "-57.7681, 137.579, -56.5184, 1.18", "-57.7326, 137.928, -56.9821, 1.18", "-57.8093, 138.837, -58.65, 0.44", "-57.981, 139.477, -59.9982, 0.37", "-58.177, 139.977, -61.3993, 0.66", "-58.275, 140.18, -62.059, 0.66", "-58.4406, 140.478, -63.1148, 0.66", "-59.0189, 141.565, -67.3284, 0.44", "-59.1104, 141.741, -68.0801, 0.44", "-59.5515, 142.652, -72.0796, 0.29", "-59.6435, 142.868, -72.9277, 0.29", "-59.7404, 143.147, -73.892, 0.29", "-59.9323, 143.84, -75.9303, 0.74", "-60.1394, 144.839, -78.2249, 0.44", "-60.1774, 145.104, -78.7217, 0.44", "-60.263, 145.787, -79.6296, 0.37", "-60.3486, 146.511, -80.4314, 0.88", "-60.5169, 147.738, -81.4398, 0.29", "-60.623, 148.245, -81.7337, 0.52", "-60.8854, 149.172, -82.1685, 0.15", "-61.1649, 149.987, -82.5753, 0.22", "-61.6445, 151.26, -83.2198, 0.22", "-62.1227, 152.367, -83.7534, 0.22", "-62.5816, 153.407, -84.2209, 0.22", "-63.2961, 154.928, -84.9635, 1.47", "-63.8391, 156.042, -85.5699, 0.66", "-64.1717, 156.757, -85.9765, 0.96", "-64.6737, 157.944, -86.6418, 0.22", "-64.9899, 158.748, -87.0309, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-68.373, 112.095, -46.3032, 0.37", "-68.1703, 113.604, -46.0873, 0.37", "-67.9974, 114.346, -46.0598, 0.37", "-67.8443, 115.052, -45.9612, 0.37", "-67.6888, 116.118, -45.7152, 0.74", "-67.6401, 117.024, -45.459, 0.29", "-67.6986, 118.096, -45.1226, 0.29", "-67.7477, 118.6, -44.954, 0.52", "-67.9314, 119.722, -44.3933, 0.44", "-68.0801, 120.441, -43.9546, 0.29", "-68.2085, 121.07, -43.5439, 0.29", "-68.3266, 121.769, -43.0625, 0.29", "-68.4448, 122.944, -42.2867, 0.44", "-68.4826, 123.894, -41.6812, 0.44", "-68.4128, 125.094, -41.0068, 0.52", "-68.2475, 126.045, -40.4985, 0.37", "-68.0305, 126.801, -40.1073, 0.37", "-67.7079, 127.609, -39.7289, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "29.1025, 28.4394, -5.35642, 0.29", "29.6168, 28.4909, -4.056, 0.29", "30.1303, 28.5448, -2.97149, 0.59", "30.6598, 28.5743, -2.01295, 0.74", "30.9581, 28.5878, -1.5208, 0.37", "31.4061, 28.6346, -0.727525, 0.37", "31.6479, 28.6748, -0.262909, 0.66", "31.8233, 28.7363, 0.0928912, 0.96", "32.0387, 28.8895, 0.735723, 1.25", "32.3032, 29.2341, 1.91238, 0.37", "32.4987, 29.6657, 3.1141, 0.37", "32.5558, 29.8355, 3.5284, 0.37", "32.6957, 30.2076, 4.37063, 0.74", "33.0057, 30.8039, 5.66501, 0.66", "33.3124, 31.2341, 6.5538, 0.52", "33.6062, 31.4853, 7.08183, 0.66", "34.0205, 31.6959, 7.56847, 0.66", "34.6239, 31.9061, 8.11245, 0.37", "35.3585, 32.0652, 8.6335, 0.52", "35.7794, 32.1137, 8.89013, 0.52", "36.5204, 32.1663, 9.32384, 0.66", "36.9386, 32.18, 9.56382, 0.88", "37.4992, 32.1976, 9.8692, 0.88", "38.1415, 32.2477, 10.2488, 0.66", "38.9405, 32.3581, 10.7295, 0.29", "39.6404, 32.4968, 11.136, 0.29", "40.701, 32.8007, 11.7157, 0.88", "40.9947, 32.8982, 11.8717, 0.88", "42.1747, 33.3294, 12.4676, 0.29", "43.0902, 33.6931, 12.8932, 0.29", "43.9709, 34.0667, 13.2677, 0.96", "45.0224, 34.534, 13.6873, 0.29", "45.7878, 34.8785, 13.9876, 0.29", "46.5009, 35.1794, 14.2518, 0.81", "47.0699, 35.3962, 14.429, 0.81", "47.5758, 35.5794, 14.5842, 0.81", "48.3438, 35.8389, 14.8192, 0.59", "49.2381, 36.1059, 15.1019, 0.29", "50.0238, 36.3714, 15.3557, 0.81", "50.7979, 36.6376, 15.6129, 0.22", "51.4855, 36.8605, 15.843, 0.22", "51.924, 36.9824, 15.9841, 0.52", "52.5386, 37.1167, 16.1471, 0.22", "58.0302, 39.4686, 21.1773, 0.22", "62.9137, 42.1138, 26.6626, 0.22", "68.9652, 43.321, 31.4655, 0.22", "75.0357, 43.2073, 36.3775, 0.22", "80.9987, 44.0576, 41.3634, 0.22", "85.4868, 44.2339, 47.7528, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "29.1025, 28.4394, -5.35642, 0.81", "30.4131, 28.543, -4.92905, 0.81", "31.0341, 28.5259, -4.76263, 1.03", "32.6831, 28.411, -4.48101, 0.96", "33.5864, 28.3567, -4.37574, 0.96", "34.6396, 28.3389, -4.28745, 0.59", "35.3723, 28.3641, -4.24321, 0.66", "36.3547, 28.4045, -4.21627, 0.66", "37.5251, 28.5479, -4.25549, 0.59", "38.1379, 28.72, -4.34712, 0.81", "38.9123, 29.0711, -4.48612, 0.96", "39.6249, 29.4822, -4.61999, 1.25", "40.1401, 29.7923, -4.70989, 1.4", "40.7883, 30.1686, -4.79363, 1.4", "41.8486, 30.6856, -4.86988, 0.59", "42.2806, 30.8237, -4.89007, 0.59", "43.1809, 30.9427, -4.90973, 0.59", "44.1658, 30.9302, -4.90935, 1.03", "44.8662, 30.8519, -4.89536, 1.18", "45.4763, 30.7355, -4.84786, 1.18", "46.4629, 30.4904, -4.71283, 0.74", "47.4127, 30.2326, -4.51926, 0.66", "47.8643, 30.1119, -4.40768, 0.96", "48.4536, 29.9793, -4.25795, 0.96", "49.5107, 29.7907, -3.99888, 1.03", "50.0098, 29.7327, -3.87847, 1.03", "51.3974, 29.7205, -3.56889, 0.59", "52.1495, 29.7939, -3.42285, 0.59", "53.4907, 30.0216, -3.21075, 0.59", "54.1465, 30.177, -3.13478, 0.81", "54.7585, 30.375, -3.09897, 0.81", "56.004, 30.8714, -3.09779, 0.37", "56.787, 31.2084, -3.1462, 0.66", "57.4818, 31.4829, -3.19526, 0.74", "57.9176, 31.6283, -3.23528, 0.74", "58.7695, 31.8265, -3.33035, 0.74", "59.6827, 31.92, -3.44529, 0.52", "60.9529, 31.8906, -3.61645, 0.74", "61.9098, 31.8116, -3.72396, 0.88", "62.4347, 31.7598, -3.75397, 0.96", "62.9569, 31.7142, -3.75082, 1.18", "63.7519, 31.6697, -3.68909, 1.18", "64.3573, 31.6868, -3.58382, 0.66", "65.4327, 31.8905, -3.27439, 0.59", "66.1413, 32.128, -2.94393, 0.59", "66.6118, 32.3315, -2.66561, 0.74", "66.9803, 32.5243, -2.40763, 0.74", "67.3441, 32.7369, -2.11978, 0.74", "68.0392, 33.1693, -1.50819, 0.59", "68.9619, 33.7734, -0.613023, 0.96", "69.4016, 34.0541, -0.181662, 1.25", "69.6408, 34.1998, 0.0698397, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "115.578, 62.339, 102.373, 0.29", "120.212, 65.16, 107.291, 0.29", "125.603, 67.5866, 111.608, 0.29", "131.387, 70.2602, 115.162, 0.29", "136.233, 73.1649, 119.806, 0.29", "141.029, 76.7781, 123.917, 0.29", "144.913, 81.1817, 128.18, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "115.578, 62.339, 102.373, 0.29", "121.334, 64.9518, 107.321, 0.29", "126.357, 69.0632, 111.939, 0.29", "130.476, 73.8894, 116.712, 0.29", "134.875, 77.535, 122.317, 0.29", "139.092, 81.6138, 127.734, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-36.4407, -12.042, -32.0017, 0.74", "-38.088, -13.4263, -32.5202, 0.74", "-38.9944, -14.0029, -32.7362, 0.74", "-39.7752, -14.3906, -32.9146, 0.74", "-41.045, -14.7676, -33.317, 0.66", "-41.9894, -14.904, -33.6881, 0.66", "-43.0018, -14.9713, -34.1276, 0.59", "-43.7168, -14.8945, -34.4201, 1.25", "-44.3057, -14.7788, -34.6874, 1.25", "-46.1093, -14.388, -35.5842, 0.66", "-47.0033, -14.2211, -36.0587, 0.66", "-47.4781, -14.1947, -36.335, 0.96", "-48.1655, -14.2902, -36.7624, 0.96", "-48.6348, -14.465, -37.1899, 0.96", "-49.3323, -14.9623, -38.2829, 0.74", "-49.6928, -15.3626, -39.1401, 0.52", "-50.0485, -15.8488, -40.2172, 0.81", "-50.2756, -16.2017, -41.0166, 1.03", "-51.0963, -17.6028, -44.2874, 1.25", "-51.6527, -18.5828, -46.6597, 0.66", "-51.9313, -19.0492, -47.8306, 0.66", "-52.1115, -19.2866, -48.4421, 1.11", "-52.2807, -19.4358, -48.8055, 1.33", "-52.5349, -19.6048, -49.1119, 1.18", "-52.9479, -19.8506, -49.2881, 1.18", "-53.8967, -20.4125, -49.547, 0.59", "-54.8663, -21.0551, -49.8553, 0.52", "-55.6227, -21.6296, -50.1783, 0.52", "-56.2413, -22.1753, -50.5787, 0.81", "-56.8374, -22.7953, -51.1509, 0.66", "-57.3912, -23.4299, -51.8145, 0.66", "-57.7874, -23.9238, -52.3922, 1.33", "-58.0518, -24.2689, -52.811, 1.33", "-58.8766, -25.3489, -54.1402, 0.66", "-59.6056, -26.2714, -55.2694, 0.52", "-59.9544, -26.6761, -55.7724, 0.52", "-60.4143, -27.143, -56.2799, 0.96", "-60.747, -27.4515, -56.5464, 1.18", "-60.9873, -27.6699, -56.6641, 1.18", "-61.4852, -28.1589, -56.7587, 0.81", "-62.158, -28.8926, -56.7627, 0.74", "-62.9803, -29.8932, -56.6804, 0.59", "-63.3923, -30.3949, -56.6002, 0.74", "-63.9445, -31.0418, -56.4535, 0.74", "-64.5453, -31.6784, -56.2753, 0.59", "-65.1162, -32.2497, -56.0914, 0.44", "-65.7567, -32.8843, -55.8754, 0.44", "-66.3758, -33.4862, -55.6989, 0.44", "-67.0231, -34.172, -55.5264, 0.44", "-68.0736, -35.409, -55.2702, 0.44", "-68.3283, -35.7731, -55.2098, 0.96", "-68.7707, -36.6369, -55.1441, 1.18", "-69.0271, -37.3974, -55.1466, 0.81", "-69.2688, -38.6363, -55.2805, 0.59", "-69.3371, -39.1707, -55.4023, 0.74", "-69.4399, -40.028, -55.6612, 0.66", "-69.6094, -40.8667, -55.9516, 0.66", "-69.7972, -41.4868, -56.1897, 0.81", "-70.2454, -42.6283, -56.6263, 0.59", "-70.7011, -43.6319, -56.9912, 0.52", "-71.1237, -44.6069, -57.316, 0.81", "-71.4842, -45.5559, -57.5903, 1.4", "-71.6314, -46.1214, -57.6858, 1.69", "-71.787, -47.2301, -57.7428, 0.52", "-71.8744, -48.1455, -57.7951, 0.44", "-71.9345, -49.0663, -57.9785, 0.44", "-71.989, -49.7097, -58.2496, 0.29", "-72.1808, -50.9027, -58.949, 1.4", "-72.2398, -51.1407, -59.1094, 1.4", "-72.9767, -53.24, -60.8306, 0.52", "-73.485, -54.3977, -61.876, 0.52", "-73.7837, -54.9967, -62.4383, 0.52", "-74.2381, -55.8894, -63.2735, 0.74", "-74.5353, -56.4886, -63.8146, 0.88", "-75.1413, -57.8589, -64.8753, 0.44", "-75.4053, -58.5521, -65.2854, 0.59", "-75.7188, -59.3307, -65.7072, 0.59", "-76.0893, -60.1214, -66.166, 0.37", "-76.3272, -60.5983, -66.4586, 0.59", "-76.7837, -61.4491, -66.9699, 0.81", "-77.2383, -62.2289, -67.366, 1.18", "-77.5395, -62.7087, -67.6149, 1.18", "-78.3921, -63.902, -68.31, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-36.4407, -12.042, -32.0017, 0.81", "-37.0015, -10.6925, -31.8691, 0.81", "-37.2707, -10.2103, -31.7728, 0.81", "-37.693, -9.65104, -31.6134, 0.81", "-38.1532, -9.2377, -31.462, 0.88", "-38.7129, -8.9409, -31.3365, 0.66", "-39.7534, -8.57363, -31.1819, 0.59", "-40.488, -8.54054, -31.1398, 0.59", "-41.1519, -8.60867, -31.2347, 0.59", "-42.0349, -8.79319, -31.5218, 0.74", "-42.9851, -9.05221, -32.0249, 1.03", "-43.3181, -9.14886, -32.2395, 1.62", "-43.7706, -9.27199, -32.5671, 1.92", "-45.204, -9.61699, -33.5774, 0.88", "-45.755, -9.7333, -33.9554, 0.66", "-46.563, -9.90018, -34.483, 0.66", "-47.6521, -10.1245, -35.1536, 0.66", "-48.136, -10.2141, -35.4358, 0.66", "-49.1894, -10.3549, -35.9815, 0.66", "-49.8605, -10.4022, -36.2869, 0.44", "-50.7082, -10.4072, -36.6906, 0.44", "-51.3293, -10.3703, -37.0152, 0.44", "-52.0617, -10.2778, -37.4736, 0.66", "-52.5733, -10.1925, -37.8194, 0.66", "-53.1787, -10.0536, -38.2301, 0.66", "-53.7011, -9.90948, -38.5433, 0.66", "-54.2971, -9.70037, -38.8518, 0.44", "-54.712, -9.53265, -39.0524, 0.74", "-55.3295, -9.26768, -39.3328, 0.74", "-55.8795, -9.0261, -39.5784, 0.74", "-56.3475, -8.82161, -39.7761, 0.74", "-56.8832, -8.5937, -39.9913, 0.37", "-57.6776, -8.34397, -40.3444, 0.37", "-58.0196, -8.30649, -40.5249, 0.37", "-58.38, -8.34777, -40.7622, 0.88", "-58.8595, -8.46598, -41.1052, 1.18", "-59.2499, -8.58427, -41.4203, 1.33", "-60.2445, -8.9143, -42.2947, 0.44", "-60.9581, -9.12371, -42.9733, 0.44", "-61.5277, -9.22766, -43.5823, 0.44", "-62.041, -9.22744, -44.1701, 0.88", "-62.5909, -9.08839, -44.8088, 1.03", "-62.8155, -8.96171, -45.053, 1.03", "-63.3969, -8.45192, -45.5495, 0.44", "-63.7473, -8.11423, -45.8089, 0.44", "-64.1626, -7.75559, -46.0448, 0.44", "-64.506, -7.52508, -46.2217, 0.59", "-65.0761, -7.25225, -46.4736, 0.59", "-65.6583, -7.08202, -46.729, 0.74", "-66.724, -6.97235, -47.1895, 0.37", "-67.3915, -7.00257, -47.5052, 0.37", "-68.376, -7.17862, -48.0143, 0.59", "-68.7602, -7.29289, -48.2343, 0.88", "-69.497, -7.60162, -48.7176, 0.66", "-69.9915, -7.84835, -49.0664, 0.74", "-70.5172, -8.14356, -49.4398, 0.59", "-70.9685, -8.41196, -49.7844, 0.52", "-71.3909, -8.66038, -50.1067, 0.88", "-72.1703, -9.05747, -50.7124, 0.59", "-72.6268, -9.24234, -51.0672, 0.44", "-73.1353, -9.39694, -51.4634, 1.03", "-73.4927, -9.47227, -51.7341, 1.33", "-73.7154, -9.50011, -51.8916, 1.4", "-74.6599, -9.57158, -52.4945, 0.44", "-75.0431, -9.59496, -52.7229, 0.44", "-75.6106, -9.61972, -53.0376, 0.44", "-76.2103, -9.63149, -53.3415, 0.44", "-77.1831, -9.64371, -53.829, 0.59", "-77.854, -9.64656, -54.2163, 0.88", "-78.4652, -9.61923, -54.6615, 1.11", "-79.2495, -9.54937, -55.3205, 0.52", "-79.8097, -9.46362, -55.8372, 0.52", "-80.2751, -9.36968, -56.2905, 1.03", "-81.3073, -9.13619, -57.3637, 1.25", "-82.5289, -8.90281, -58.6364, 0.52", "-82.9487, -8.83951, -59.0657, 0.59", "-83.512, -8.78068, -59.6129, 0.59", "-84.4056, -8.70246, -60.3753, 0.44", "-85.0239, -8.65275, -60.8044, 0.44", "-85.9385, -8.55362, -61.3154, 0.44", "-86.4273, -8.47641, -61.5734, 0.44", "-87.0923, -8.28833, -62.0251, 0.66", "-87.5572, -8.07762, -62.4282, 0.88", "-87.7998, -7.91443, -62.6731, 0.88", "-88.4884, -7.31372, -63.4259, 0.52", "-88.9024, -6.86947, -63.9145, 0.52", "-89.4702, -6.15856, -64.6869, 0.81", "-89.856, -5.59788, -65.2707, 0.44", "-90.0713, -5.24832, -65.6307, 0.44", "-90.304, -4.79097, -66.0766, 0.74", "-90.4361, -4.4455, -66.3729, 0.96", "-90.6636, -3.5536, -66.9957, 0.66", "-90.7807, -2.99511, -67.3649, 0.44", "-90.9197, -2.38569, -67.7982, 0.44", "-91.1043, -1.80845, -68.2718, 0.44", "-91.2054, -1.61209, -68.4619, 0.44", "-91.5691, -1.21671, -68.9138, 0.96", "-92.4366, -0.817486, -69.5791, 0.66", "-93.0196, -0.666556, -69.9493, 0.96", "-93.302, -0.613973, -70.0953, 1.25", "-93.6359, -0.56192, -70.2491, 1.25", "-94.1661, -0.466644, -70.4815, 1.25", "-95.08, -0.218831, -70.8783, 0.37", "-95.627, 0.0388184, -71.0902, 0.37", "-95.9861, 0.268515, -71.2521, 0.66", "-96.2613, 0.459356, -71.3719, 0.81", "-96.6911, 0.76068, -71.534, 0.81", "-97.3583, 1.22214, -71.7156, 0.44", "-97.8186, 1.50877, -71.7785, 0.44", "-98.6644, 1.95349, -71.8247, 0.44", "-99.6036, 2.40977, -71.823, 0.44", "-100.318, 2.7502, -71.7868, 0.66", "-101.062, 3.09805, -71.7137, 0.96", "-101.814, 3.43967, -71.5901, 0.59", "-102.453, 3.741, -71.4609, 0.44", "-103.112, 4.05953, -71.3211, 0.44", "-103.752, 4.36991, -71.2234, 0.44", "-104.311, 4.6069, -71.2068, 0.44", "-104.962, 4.81121, -71.2879, 0.74", "-105.286, 4.88111, -71.3718, 0.74", "-106.217, 5.00064, -71.6692, 0.52", "-106.642, 5.03547, -71.8284, 0.59", "-107.431, 5.08804, -72.154, 0.44", "-108.02, 5.15042, -72.4065, 0.44", "-108.756, 5.29529, -72.753, 0.37", "-109.492, 5.50674, -73.0938, 0.52", "-110.073, 5.73181, -73.3626, 1.11", "-110.525, 5.94455, -73.5982, 1.25", "-111.057, 6.22976, -73.925, 0.37", "-111.817, 6.65375, -74.4728, 0.37", "-112.331, 6.92527, -74.8936, 0.29", "-112.74, 7.12679, -75.2732, 0.29", "-113.473, 7.48123, -76.0026, 0.59", "-114.052, 7.77644, -76.6039, 0.59", "-114.38, 7.95392, -76.9457, 0.29", "-114.639, 8.10905, -77.1891, 0.37", "-115.05, 8.39494, -77.5403, 0.37", "-115.615, 8.81976, -77.9251, 0.44", "-116.091, 9.19305, -78.1511, 0.44", "-116.545, 9.54652, -78.3061, 0.44", "-117.094, 9.93792, -78.4702, 0.37", "-117.318, 10.0748, -78.5289, 0.37", "-117.894, 10.3555, -78.6501, 0.88", "-118.229, 10.4866, -78.7117, 1.11", "-118.831, 10.6993, -78.8188, 1.11", "-119.778, 11.0524, -78.9781, 0.37", "-120.511, 11.36, -79.0926, 0.37", "-120.93, 11.573, -79.1488, 0.66", "-121.557, 12.0019, -79.2476, 0.66", "-122.045, 12.438, -79.3428, 0.37", "-122.452, 12.9072, -79.4458, 0.52", "-122.6, 13.1164, -79.4924, 0.66", "-122.815, 13.4588, -79.5649, 0.66", "-123.399, 14.405, -79.7536, 0.37", "-123.676, 14.8122, -79.8132, 0.37", "-123.988, 15.1464, -79.8164, 0.37", "-124.322, 15.4013, -79.765, 0.88", "-124.866, 15.7185, -79.6335, 0.81", "-125.136, 15.8442, -79.5557, 0.81", "-125.818, 16.1179, -79.3352, 0.29", "-126.712, 16.4601, -79.0398, 0.29", "-127.267, 16.6967, -78.8115, 0.52", "-127.936, 17.0218, -78.5183, 0.44", "-128.263, 17.1929, -78.3736, 0.44", "-128.691, 17.4371, -78.164, 0.81", "-129.193, 17.7694, -77.8953, 0.81", "-130.124, 18.5049, -77.3423, 0.29", "-130.495, 18.8225, -77.1102, 0.44", "-130.843, 19.1273, -76.8689, 0.29", "-131.231, 19.4497, -76.61, 0.29", "-131.744, 19.8478, -76.2996, 0.29", "-132.141, 20.1353, -76.0937, 0.29", "-132.615, 20.447, -75.8864, 0.59", "-133.528, 21.0282, -75.4762, 0.22", "-134.116, 21.3956, -75.2139, 0.22", "-134.431, 21.5721, -75.0741, 0.52", "-134.723, 21.7073, -74.939, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-78.2352, -43.503, 74.8008, 0.29", "-85.7663, -48.1385, 81.7029, 0.29", "-92.2709, -54.7036, 87.8979, 0.29", "-98.3484, -61.3765, 94.4119, 0.29", "-104.066, -68.7155, 100.446, 0.29", "-108.399, -77.0165, 106.308, 0.29", "-113.633, -84.884, 112.052, 0.29", "-118.906, -92.7483, 117.762, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-78.2352, -43.503, 74.8008, 0.29", "-86.1119, -47.6498, 81.6736, 0.29", "-94.0504, -52.9917, 87.4699, 0.29", "-101.206, -59.0182, 93.5421, 0.29", "-107.349, -65.4886, 100.201, 0.29", "-113.011, -72.6313, 106.518, 0.29", "-117.643, -80.9162, 112.091, 0.29", "-123.017, -88.2468, 118.424, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.5246, -56.8687, 17.1258, 0.66", "-10.5358, -59.575, 16.0454, 0.66", "-10.7932, -60.2939, 15.7867, 1.03", "-11.0493, -61.0473, 15.6128, 1.03", "-11.5161, -62.4895, 15.4236, 1.03", "-11.8284, -63.5843, 15.3628, 1.03", "-12.1563, -64.9243, 15.3722, 0.81", "-12.364, -66.1281, 15.6007, 0.81", "-12.4857, -67.9, 16.0855, 1.4", "-12.4727, -68.6616, 16.3482, 1.62", "-12.3595, -69.8011, 16.8469, 1.4", "-12.2265, -70.5536, 17.2016, 1.92", "-11.9734, -71.5766, 17.6949, 1.4", "-11.496, -73.1267, 18.4507, 1.69", "-11.1411, -74.1626, 18.9005, 1.11", "-10.6669, -75.5524, 19.4661, 0.81", "-10.4582, -76.2088, 19.713, 1.11", "-10.2387, -76.9926, 19.9777, 1.25", "-9.84241, -78.7381, 20.5102, 0.96", "-9.72083, -79.6222, 20.74, 0.74", "-9.69388, -80.4684, 20.9217, 0.81", "-9.85447, -81.7539, 21.1089, 0.52", "-10.0987, -82.6737, 21.1824, 0.88", "-10.4009, -83.4503, 21.1585, 0.88", "-10.8164, -84.3036, 20.9952, 0.88", "-11.2019, -85.0611, 20.7761, 0.66", "-11.5761, -85.8746, 20.4395, 0.66", "-11.9929, -87.0237, 19.767, 0.88", "-12.1992, -87.7917, 19.2226, 1.33", "-12.3094, -88.3817, 18.7792, 1.47", "-12.3894, -88.9376, 18.3617, 1.62", "-12.5492, -90.0721, 17.566, 0.74", "-12.7492, -91.361, 16.8282, 0.74", "-12.9632, -92.3645, 16.4224, 0.74", "-13.1701, -93.1632, 16.2481, 0.74", "-13.4684, -94.2666, 16.1811, 0.66", "-13.7416, -95.4151, 16.2839, 0.66", "-14.0431, -97.0764, 16.6661, 0.96", "-14.1259, -97.9335, 16.9427, 0.88", "-14.1198, -98.7037, 17.2117, 0.88", "-13.9617, -100.143, 17.6988, 0.52", "-13.6961, -101.47, 18.1245, 1.18", "-13.544, -102.119, 18.2878, 1.62", "-13.3839, -102.852, 18.409, 1.62", "-13.1976, -103.885, 18.5505, 0.96", "-13.0957, -104.686, 18.6466, 0.96", "-13.0321, -105.895, 18.7727, 0.66", "-13.1178, -107.483, 18.8982, 0.52", "-13.3102, -108.909, 19.038, 0.59", "-13.6726, -110.547, 19.2313, 0.74", "-13.8048, -110.973, 19.2946, 1.11", "-14.1455, -111.785, 19.4756, 1.25", "-14.8573, -113.086, 19.8648, 0.88", "-15.3202, -113.733, 20.1352, 0.66", "-15.8191, -114.304, 20.424, 0.66", "-16.3132, -114.808, 20.6892, 0.59", "-17.2965, -115.824, 21.1706, 0.59", "-17.8491, -116.409, 21.401, 0.44", "-18.5119, -117.169, 21.6099, 0.44", "-19.062, -117.876, 21.709, 0.74", "-19.5066, -118.532, 21.7448, 0.74", "-19.8899, -119.158, 21.7339, 0.66", "-20.3855, -120.074, 21.6441, 1.03", "-20.7577, -120.803, 21.576, 1.4", "-21.1571, -121.622, 21.5067, 1.4", "-21.508, -122.333, 21.4536, 1.47", "-22.0644, -123.457, 21.3908, 0.74", "-22.496, -124.332, 21.3331, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.5246, -56.8687, 17.1258, 0.44", "-8.70213, -57.5665, 17.7593, 0.44", "-8.2229, -58.1659, 18.202, 0.44", "-7.89757, -58.9371, 18.6361, 0.37", "-7.56508, -60.4359, 19.2766, 0.59", "-7.52388, -61.0189, 19.4691, 0.52", "-7.55129, -61.7669, 19.6791, 0.44", "-7.81337, -62.9676, 20.0136, 0.44", "-8.18421, -63.9758, 20.3306, 0.44", "-8.49891, -64.5858, 20.5718, 0.59", "-8.97472, -65.2836, 20.9773, 0.59", "-9.47364, -65.8757, 21.6021, 0.37", "-10.1187, -66.5364, 22.6668, 0.59", "-10.6649, -67.0529, 23.7605, 0.88", "-11.0057, -67.3435, 24.4822, 0.81", "-11.6985, -67.8987, 25.9398, 1.03", "-12.4028, -68.4538, 27.3799, 0.88", "-13.0571, -68.9837, 28.5786, 0.44", "-13.611, -69.4956, 29.4363, 0.44", "-13.9828, -69.8964, 29.9175, 0.66", "-14.5175, -70.4859, 30.4286, 0.66", "-15.0247, -71.0075, 30.7158, 0.66", "-15.7904, -71.739, 30.9545, 0.66", "-16.4618, -72.3654, 31.1102, 1.33", "-16.7638, -72.6608, 31.1579, 1.47", "-17.3514, -73.2455, 31.2409, 1.03", "-18.0876, -73.998, 31.3507, 0.81", "-18.7078, -74.6337, 31.4585, 0.74", "-19.4447, -75.3968, 31.6142, 0.52", "-19.9619, -75.962, 31.7439, 0.44", "-23.0613, -82.891, 37.2766, 0.44", "-25.0495, -90.4089, 42.4595, 0.44", "-27.8979, -97.8543, 47.3459, 0.44", "-32.7909, -104.709, 51.5117, 0.44", "-37.5118, -110.519, 57.316, 0.44", "-41.2676, -116.434, 63.6835, 0.44", "-45.2872, -122.555, 69.661, 0.44", "-51.1377, -128.138, 74.6196, 0.44", "-58.6419, -132.885, 78.0902, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.13418, -17.4006, -3.35963, 1.47", "3.61862, -18.8218, -3.81795, 1.47", "3.07999, -20.6562, -4.24565, 1.33", "2.71788, -22.1218, -4.46753, 1.55", "2.4706, -23.3137, -4.54112, 1.55", "2.24434, -24.5532, -4.45902, 1.77", "1.9642, -26.1433, -4.1804, 1.77", "1.81633, -27.127, -3.86522, 2.14", "1.68826, -27.9498, -3.50829, 2.58", "1.50957, -29.0025, -3.02243, 2.36", "1.14835, -30.9332, -2.23089, 1.77", "0.814413, -32.5965, -1.73134, 1.47", "0.547696, -33.9897, -1.50612, 1.18", "0.301668, -35.4686, -1.42747, 1.11", "0.12873, -36.7828, -1.49832, 1.33", "-0.0238278, -38.5738, -1.79544, 1.25", "-0.0536182, -40.1403, -2.19728, 1.47", "0.00591895, -41.5441, -2.59963, 1.62", "0.0891353, -42.598, -2.90368, 2.14", "0.141413, -43.3255, -3.09907, 2.58", "0.167271, -44.3716, -3.33978, 2.43", "0.0990911, -46.0554, -3.66604, 2.14", "-0.0551964, -47.4143, -3.9082, 1.92", "-0.32178, -48.7612, -4.13472, 1.47", "-0.798858, -50.4235, -4.41698, 1.25", "-1.30327, -51.7942, -4.60756, 1.11", "-1.76467, -52.8194, -4.70481, 1.4", "-2.10125, -53.4785, -4.74459, 1.55", "-2.6325, -54.4858, -4.75821, 1.18", "-3.13842, -55.5163, -4.70144, 0.88", "-3.59078, -56.6015, -4.63637, 1.18", "-3.94443, -57.6645, -4.57352, 1.03", "-4.23491, -58.6659, -4.50558, 1.03", "-4.59074, -60.1515, -4.4185, 1.47", "-4.75001, -61.0958, -4.38185, 1.77", "-4.90132, -62.582, -4.38305, 1.77", "-4.97321, -63.7247, -4.47517, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.13418, -17.4006, -3.35963, 1.77", "4.82736, -20.2784, -4.07821, 1.77", "5.13689, -21.7188, -4.41554, 1.99", "5.49281, -23.3751, -4.80344, 1.99", "5.97844, -25.6349, -5.33269, 3.17", "6.1972, -26.6529, -5.5711, 3.76", "6.57153, -28.3948, -5.97905, 4.2", "6.77808, -29.9359, -6.27574, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205293", "5.97663, 56.3268, -0.359339, 0.205293", "7.46769, 71.2525, -0.359339, 0.205293" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-67.7079, 127.609, -39.7289, 0.29", "-67.854, 128.288, -39.8842, 0.29", "-68.0699, 129.272, -40.3483, 0.29", "-68.2216, 130.142, -40.8311, 0.29", "-68.3381, 131.067, -41.4051, 0.29", "-68.4022, 131.724, -41.852, 0.29", "-68.49, 132.802, -42.5932, 0.29", "-68.6177, 134.714, -44.0572, 0.29", "-68.655, 135.298, -44.5349, 0.37", "-68.7134, 136.0, -45.1287, 0.37", "-68.8135, 136.862, -45.8837, 0.37", "-68.8939, 137.571, -46.5111, 0.22", "-68.982, 138.313, -47.1436, 0.22", "-69.1229, 139.141, -47.7015, 1.03", "-69.1684, 139.292, -47.7986, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-67.7079, 127.609, -39.7289, 0.52", "-69.2745, 129.453, -38.8697, 0.52", "-69.9714, 130.425, -38.4316, 0.52", "-70.6491, 131.543, -37.9921, 0.44", "-70.942, 132.111, -37.8045, 0.59", "-71.2435, 132.795, -37.6108, 0.59", "-71.7822, 134.108, -37.242, 0.37", "-72.4027, 135.802, -36.8935, 0.37", "-72.7584, 136.897, -36.6607, 0.37", "-73.1173, 138.002, -36.4144, 0.37", "-73.5154, 139.213, -36.1116, 0.29", "-73.8937, 140.301, -35.8161, 0.29", "-74.3537, 141.445, -35.4715, 0.81", "-74.5887, 141.903, -35.3225, 0.81", "-75.0119, 142.598, -35.0728, 0.74", "-75.6322, 143.473, -34.7915, 0.74", "-76.224, 144.157, -34.6448, 0.96", "-76.8685, 144.789, -34.6043, 0.96", "-77.3214, 145.206, -34.6475, 0.59", "-78.2299, 146.065, -34.8812, 0.29", "-79.0954, 146.932, -35.2682, 0.29", "-80.0471, 147.944, -35.8254, 0.29", "-80.7141, 148.706, -36.2539, 0.22", "-81.7101, 149.894, -36.921, 0.22", "-82.4861, 150.869, -37.4612, 0.74", "-83.3465, 152.036, -38.0361, 0.37", "-84.0122, 153.067, -38.4498, 0.37", "-84.6053, 154.089, -38.808, 0.81", "-85.0304, 154.78, -39.0479, 1.18", "-85.4435, 155.325, -39.2198, 1.18", "-86.5286, 156.489, -39.6032, 0.29", "-87.686, 157.649, -39.9772, 0.29", "-88.4349, 158.342, -40.2332, 0.29", "-89.2125, 159.003, -40.516, 0.29", "-90.374, 159.909, -40.9173, 0.74", "-91.2278, 160.443, -41.1841, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "85.4868, 44.2339, 47.7528, 0.29", "91.5502, 45.9463, 53.4704, 0.29", "97.3743, 47.4964, 59.4772, 0.29", "103.513, 49.8656, 64.8592, 0.29", "109.03, 53.214, 70.3581, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "85.4868, 44.2339, 47.7528, 0.29", "94.3575, 46.4366, 55.812, 0.29", "103.331, 50.4691, 62.9622, 0.29", "113.612, 54.3819, 68.1374, 0.29", "122.534, 60.0442, 74.0487, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "69.6408, 34.1998, 0.0698397, 0.44", "70.5087, 34.1645, -0.177222, 0.44", "70.8364, 34.194, -0.320341, 0.37", "71.421, 34.3025, -0.610978, 0.59", "71.7392, 34.3766, -0.774495, 0.74", "72.5543, 34.5923, -1.18289, 0.37", "73.3929, 34.8372, -1.58435, 0.29", "73.8911, 35.0407, -1.84879, 0.29", "74.246, 35.2154, -2.02247, 0.88", "74.3761, 35.2908, -2.08562, 1.11", "74.6968, 35.4906, -2.22381, 1.11", "74.9938, 35.6781, -2.29405, 1.18", "75.5353, 35.9536, -2.3176, 0.74", "75.9022, 36.1325, -2.31445, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "69.6408, 34.1998, 0.0698397, 0.29", "70.2187, 34.8413, 0.30502, 0.29", "70.4887, 35.1465, 0.42824, 0.29", "70.8345, 35.5375, 0.586066, 0.66", "71.2078, 35.9595, 0.75645, 0.29", "71.4873, 36.2755, 0.88402, 0.29", "72.0474, 36.9089, 1.1397, 0.29", "72.3628, 37.2514, 1.32777, 0.29", "77.262, 42.2501, 2.83191, 0.29", "81.342, 47.7468, 4.83568, 0.29", "84.5772, 53.9124, 6.03778, 0.29", "88.5134, 59.6245, 7.59157, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-78.3921, -63.902, -68.31, 0.81", "-78.7964, -65.6154, -69.9055, 0.81", "-78.8804, -65.829, -70.1212, 0.81", "-80.0688, -67.9491, -72.3186, 0.37", "-80.4445, -68.4908, -72.8592, 0.52", "-80.8121, -69.0024, -73.3564, 0.66", "-81.2381, -69.6089, -73.9209, 0.66", "-82.2139, -70.7852, -75.0046, 0.37", "-82.8268, -71.5183, -75.7065, 0.37", "-83.7774, -72.6039, -76.7651, 0.37", "-84.3541, -73.2753, -77.4429, 0.66", "-85.2799, -74.3319, -78.5149, 1.11", "-85.7226, -74.8054, -78.9894, 1.25", "-87.1807, -76.2916, -80.6569, 0.22", "-87.7714, -76.8234, -81.3582, 0.29", "-88.2771, -77.2125, -81.9632, 0.59", "-88.8544, -77.6017, -82.6138, 0.81", "-89.4647, -78.0244, -83.3134, 0.81", "-91.0768, -79.2926, -85.0786, 0.37", "-91.5665, -79.7262, -85.5664, 0.37", "-92.3831, -80.6405, -86.3926, 0.59", "-92.6932, -81.0479, -86.6925, 0.81", "-93.8459, -82.7281, -87.6823, 0.44", "-94.6711, -83.9975, -88.2452, 0.44", "-95.3607, -85.0669, -88.5894, 0.37", "-96.2055, -86.3993, -88.9678, 0.37", "-96.8345, -87.3769, -89.2456, 0.66", "-97.3325, -88.0982, -89.4888, 0.81", "-97.826, -88.7536, -89.7039, 0.81", "-98.7388, -89.9049, -90.1222, 0.29", "-99.2717, -90.528, -90.3467, 0.96", "-100.589, -91.9557, -90.7931, 0.29", "-101.442, -92.8795, -91.0374, 0.29", "-102.305, -93.787, -91.2151, 0.44", "-102.797, -94.283, -91.3023, 0.44", "-103.607, -95.0613, -91.3917, 0.29", "-104.048, -95.5041, -91.4665, 0.59", "-104.728, -96.2459, -91.5867, 0.59", "-105.358, -97.0125, -91.7417, 0.52", "-106.334, -98.1769, -92.0712, 0.37", "-106.95, -98.9102, -92.318, 0.88", "-108.094, -100.286, -92.8224, 0.44", "-108.736, -101.08, -93.1033, 0.59", "-109.262, -101.733, -93.3244, 0.59", "-109.903, -102.515, -93.5471, 0.59", "-110.582, -103.29, -93.7016, 0.37", "-111.128, -103.817, -93.7741, 0.37", "-112.039, -104.528, -93.7947, 0.29", "-112.386, -104.757, -93.7755, 0.29", "-113.289, -105.306, -93.6523, 0.88", "-113.91, -105.67, -93.5165, 1.18", "-114.952, -106.203, -93.2669, 0.29", "-115.713, -106.554, -93.0961, 0.29", "-116.838, -107.094, -92.9097, 0.29", "-117.35, -107.367, -92.8436, 0.88", "-117.845, -107.663, -92.8058, 0.88", "-119.445, -108.709, -92.8206, 0.22", "-119.975, -109.087, -92.8841, 0.22", "-121.126, -109.911, -93.1049, 0.59", "-121.378, -110.094, -93.1712, 0.59", "-122.392, -110.83, -93.4618, 0.22", "-122.971, -111.264, -93.6437, 0.44", "-123.782, -111.954, -93.9282, 0.22", "-124.902, -112.891, -94.3078, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-78.3921, -63.902, -68.31, 0.29", "-79.7564, -63.9325, -68.3812, 0.29", "-80.6053, -63.9936, -68.3856, 0.29", "-81.4393, -64.0881, -68.3954, 0.66", "-81.8382, -64.1548, -68.4026, 0.66", "-83.2457, -64.4329, -68.4163, 0.29", "-83.8528, -64.5644, -68.4271, 0.29", "-84.3078, -64.6849, -68.3923, 0.66", "-84.7418, -64.818, -68.3505, 0.66", "-86.229, -65.3054, -68.2027, 0.29", "-86.7547, -65.4603, -68.1616, 0.52", "-87.256, -65.5829, -68.1409, 0.52", "-88.6384, -65.8201, -68.0839, 0.22", "-89.28, -65.89, -68.0555, 0.59", "-89.6926, -65.9136, -68.0233, 0.74", "-90.4926, -65.9155, -67.9598, 0.29", "-90.8955, -65.9021, -67.9341, 0.29", "-91.4207, -65.8611, -67.906, 0.96", "-91.9286, -65.7836, -67.924, 0.96", "-93.3183, -65.5493, -67.9311, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-22.496, -124.332, 21.3331, 0.29", "-22.6081, -124.295, 21.8062, 0.29", "-22.8193, -124.239, 22.8494, 0.29", "-22.9689, -124.227, 23.5951, 0.59", "-23.1913, -124.278, 24.6303, 0.66", "-23.4891, -124.454, 26.0884, 0.59", "-23.661, -124.673, 27.0557, 0.29", "-23.7152, -124.918, 27.6492, 0.52", "-23.6753, -125.251, 27.9042, 0.66", "-23.495, -126.024, 28.105, 0.37", "-23.2104, -127.03, 28.2296, 0.29", "-22.9654, -127.833, 28.27, 0.29", "-22.7135, -128.634, 28.2665, 0.29", "-22.4701, -129.362, 28.2576, 0.29", "-22.1421, -130.217, 28.2617, 0.29", "-21.8272, -130.944, 28.2842, 0.29", "-21.2408, -135.095, 33.7271, 0.29", "-21.5187, -138.381, 39.8179, 0.29", "-20.0458, -141.76, 45.6692, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.496, -124.332, 21.3331, 0.74", "-22.988, -125.033, 20.9698, 0.74", "-23.4142, -125.753, 20.6583, 0.52", "-23.738, -126.362, 20.4321, 0.52", "-24.2422, -127.47, 20.0981, 0.59", "-24.4474, -128.03, 19.9962, 0.96", "-24.5983, -128.636, 19.9282, 1.18", "-24.6261, -129.148, 19.8641, 1.18", "-24.5729, -129.631, 19.8208, 0.96", "-24.3863, -130.336, 19.7334, 0.66", "-23.9556, -131.336, 19.4662, 0.52", "-23.4821, -132.23, 19.1749, 0.52", "-22.8788, -133.175, 18.7886, 0.29", "-22.6078, -133.53, 18.6062, 0.37", "-21.8526, -134.352, 18.041, 0.29", "-21.0079, -135.095, 17.2824, 0.29", "-20.6501, -143.152, 15.7582, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-4.97321, -63.7247, -4.47517, 0.37", "-6.82658, -64.5688, -3.69025, 0.37", "-7.60311, -65.0072, -3.02966, 0.37", "-8.14618, -65.3484, -2.45532, 0.37", "-8.51181, -65.5862, -2.05704, 0.37", "-8.96475, -65.8938, -1.53248, 0.59", "-9.4016, -66.2001, -1.01856, 0.74", "-9.70917, -66.4362, -0.54131, 0.52", "-9.9403, -66.6179, -0.177353, 0.59", "-10.1527, -66.81, 0.126403, 0.74", "-10.5401, -67.1415, 0.587423, 0.52", "-10.7978, -67.3419, 0.838717, 0.52", "-11.0508, -67.5144, 1.04462, 0.74", "-11.3403, -67.6971, 1.26093, 0.74", "-11.619, -67.8764, 1.46109, 0.52", "-12.0251, -68.1336, 1.74484, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-4.97321, -63.7247, -4.47517, 0.88", "-5.25215, -64.9899, -4.5925, 0.88", "-5.8033, -66.5795, -4.61213, 0.66", "-6.39097, -67.6963, -4.36058, 0.74", "-6.89874, -68.4376, -4.10667, 0.88", "-7.78249, -69.5585, -3.69206, 0.88", "-8.34356, -70.236, -3.44823, 1.03", "-9.03251, -70.9753, -3.12543, 1.03", "-10.6053, -72.6982, -2.34248, 1.03", "-11.4998, -73.7825, -1.89098, 1.03", "-12.2345, -74.8794, -1.51061, 0.88", "-12.6458, -75.8228, -1.27824, 0.88", "-12.7929, -76.7061, -1.11115, 0.88", "-12.6048, -78.4266, -0.936411, 1.25", "-12.4226, -79.054, -0.892329, 1.55", "-12.062, -79.9383, -0.77273, 1.55", "-11.4731, -81.1669, -0.461258, 1.55", "-11.0633, -81.9339, -0.155217, 1.55", "-10.288, -83.264, 0.594035, 1.03", "-9.66953, -84.2173, 1.33363, 1.03", "-9.14617, -84.9694, 2.02753, 0.81", "-8.30126, -86.0881, 3.24367, 0.81", "-7.69856, -86.823, 4.13555, 1.03", "-7.09633, -87.4655, 4.96329, 1.03", "-6.38676, -88.1331, 5.83213, 1.03", "-5.77989, -88.6794, 6.45041, 0.88", "-4.82649, -89.5781, 7.28904, 0.88", "-4.33755, -90.0601, 7.64878, 0.96", "-3.76906, -90.6816, 8.02622, 0.96", "-2.99304, -91.6266, 8.50525, 1.33", "-2.57898, -92.1936, 8.73224, 1.62", "-2.23591, -92.7072, 8.91921, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.77808, -29.9359, -6.27574, 0.66", "7.22411, -31.8939, -4.56203, 0.66", "7.3075, -32.5399, -4.06422, 0.88", "7.44812, -33.8268, -3.19879, 1.03", "7.52911, -34.4409, -2.82423, 1.03", "7.62204, -34.9817, -2.51088, 1.03", "7.77032, -35.6483, -2.13396, 0.37", "7.91702, -36.3689, -1.81577, 0.37", "8.17287, -37.0847, -1.5305, 0.59", "8.5982, -37.6926, -1.32908, 0.81", "8.9591, -38.0304, -1.19433, 0.81", "9.37845, -38.3223, -1.03008, 0.52", "9.77419, -38.5549, -0.858789, 0.81", "10.3602, -38.8882, -0.576421, 1.25", "10.5955, -39.0572, -0.434831, 1.69", "10.8737, -39.3645, -0.209168, 1.69", "11.202, -40.1248, 0.230111, 0.96", "11.2838, -40.6271, 0.456433, 0.66", "11.3055, -41.0218, 0.612538, 0.81", "11.3276, -41.8502, 0.930151, 0.44", "11.3823, -42.5066, 1.19001, 0.44", "11.4714, -43.0224, 1.39989, 0.44", "11.6374, -43.4813, 1.63752, 0.88", "12.0157, -44.0679, 2.08398, 1.25", "12.5035, -44.6058, 2.60687, 0.66", "12.9541, -45.0093, 3.04916, 0.52", "13.2303, -45.2446, 3.30883, 0.52", "13.9027, -45.8552, 3.95452, 0.74", "14.4457, -46.405, 4.47118, 1.25", "14.6545, -46.6437, 4.6516, 1.25", "14.9821, -47.059, 4.89244, 0.52", "15.375, -47.6021, 5.10818, 0.44", "15.8758, -48.3267, 5.28865, 0.37", "16.1745, -48.7566, 5.32891, 0.37", "16.4888, -49.189, 5.33106, 0.96", "16.7337, -49.5104, 5.32313, 1.33", "17.47, -50.3821, 5.2831, 0.29", "17.7429, -50.6623, 5.26315, 0.29", "18.0206, -50.9136, 5.23457, 0.29", "18.1243, -51.0068, 5.22474, 0.44", "21.2377, -56.1951, 7.26729, 0.44", "25.1407, -61.1063, 8.58779, 0.44", "28.3929, -66.5231, 9.38479, 0.44", "31.9687, -71.7095, 10.4438, 0.44", "35.3005, -76.9323, 11.9855, 0.44", "38.4003, -82.3851, 13.064, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.77808, -29.9359, -6.27574, 1.03", "6.78117, -31.525, -6.437, 1.03", "6.95641, -33.0967, -6.61704, 1.03", "7.21349, -34.2276, -6.76584, 0.96", "7.54778, -35.2914, -6.91969, 0.96", "7.95715, -36.3155, -7.08095, 0.96", "8.29617, -37.0008, -7.17006, 1.18", "9.02298, -37.907, -7.23454, 1.47", "9.7871, -38.6124, -7.22904, 2.21", "10.1206, -38.8855, -7.19808, 2.21", "10.6528, -39.3297, -7.08547, 1.99", "11.6044, -40.2135, -6.76454, 1.33", "12.4836, -41.2123, -6.34853, 0.88", "13.043, -42.0313, -5.98089, 0.74", "13.4076, -42.8213, -5.6377, 0.74", "13.6881, -43.7848, -5.25464, 1.33", "13.7867, -44.3782, -5.04964, 1.62", "13.8399, -45.0334, -4.86591, 1.92", "13.8705, -45.7396, -4.72531, 1.69", "13.976, -47.084, -4.56024, 1.33", "14.1717, -48.4415, -4.49432, 1.03", "14.3791, -49.3709, -4.5146, 0.88", "14.6522, -50.2239, -4.58117, 1.03", "15.0994, -51.3318, -4.72173, 1.03", "15.6285, -52.4364, -4.92285, 1.03", "16.116, -53.373, -5.15566, 1.33", "16.4638, -54.0798, -5.37668, 1.69", "16.8222, -54.9443, -5.68174, 1.47", "17.009, -55.5555, -5.9165, 1.03", "17.188, -56.4951, -6.28879, 0.96", "17.2649, -57.3591, -6.65029, 0.96", "17.2779, -58.4231, -7.09649, 1.4", "17.2425, -59.5554, -7.55188, 1.4", "17.2065, -60.5442, -7.93998, 1.55", "17.2157, -61.0798, -8.13656, 1.77", "17.3089, -62.1025, -8.47448, 0.96", "17.4918, -63.0123, -8.72537, 0.66", "17.7941, -63.8558, -8.87506, 0.66", "18.2441, -64.6539, -8.94691, 0.96", "18.8461, -65.4293, -8.97167, 1.11", "19.1705, -65.7627, -8.97784, 1.4", "19.467, -66.0238, -8.98638, 1.4", "20.0892, -66.5661, -9.00746, 1.4", "20.8222, -67.2797, -9.05161, 0.66", "21.1409, -67.6683, -9.09765, 0.52", "21.4946, -68.23, -9.18433, 0.52", "21.957, -69.1566, -9.30219, 0.81", "22.3828, -70.197, -9.36721, 1.03", "22.5997, -70.8872, -9.38802, 1.03", "22.8179, -71.8213, -9.36954, 1.03", "22.97, -72.7563, -9.38151, 1.03", "23.0828, -73.7317, -9.42096, 0.88", "23.1934, -74.9272, -9.55343, 1.03", "23.2974, -75.9947, -9.74619, 0.52", "23.4139, -77.0058, -10.0157, 0.52", "23.5843, -78.483, -10.5676, 0.88", "23.6521, -79.0875, -10.856, 1.11", "23.7458, -80.0476, -11.3858, 0.59", "23.7831, -80.4545, -11.6088, 0.59", "23.8753, -81.365, -11.9805, 0.52", "23.9578, -82.3299, -12.1648, 0.52", "23.9824, -83.1076, -12.06, 1.11", "23.9479, -83.763, -11.8353, 1.25", "23.835, -84.751, -11.3398, 1.18", "23.7022, -85.7147, -10.7817, 0.52", "23.6199, -86.382, -10.3388, 0.52", "23.5497, -87.2955, -9.75512, 0.52", "23.5358, -87.6406, -9.57431, 0.81", "23.5337, -88.2762, -9.34472, 0.74", "23.5264, -89.1002, -9.18725, 0.74", "23.4908, -89.9219, -9.11679, 1.03", "23.3747, -91.015, -9.10532, 0.66", "23.2395, -91.7389, -9.12619, 0.52", "22.9843, -92.5797, -9.16919, 1.11", "22.6816, -93.2883, -9.2624, 1.11", "22.1713, -94.2976, -9.46678, 0.81", "21.5987, -95.3543, -9.75824, 0.66", "21.2016, -96.0953, -9.98883, 0.88", "20.7121, -97.1056, -10.3661, 0.66", "20.1157, -98.4404, -11.0083, 0.59", "19.7652, -99.3151, -11.5148, 0.88", "19.4899, -100.08, -12.0099, 1.18", "19.3017, -100.634, -12.3767, 0.96", "19.0618, -101.365, -12.8659, 0.96", "18.6479, -102.698, -13.6837, 0.52", "18.5111, -103.136, -13.9142, 0.81", "18.2549, -103.991, -14.3115, 0.66", "18.091, -104.639, -14.516, 0.66", "17.9434, -105.434, -14.6304, 0.96", "17.8868, -106.396, -14.4606, 0.88", "17.9304, -107.228, -14.1343, 0.88", "17.9908, -107.952, -13.8022, 0.37", "18.1485, -109.27, -13.1587, 1.03", "18.2247, -109.966, -12.8368, 1.03", "18.3186, -111.508, -12.1559, 0.44", "18.3342, -112.635, -11.7847, 0.44", "18.3208, -113.297, -11.7249, 0.74", "18.3026, -113.989, -11.9006, 0.74", "18.2891, -114.955, -12.4032, 0.44", "18.3046, -115.731, -12.9029, 0.66", "18.3654, -116.85, -13.7195, 0.44", "18.4951, -118.45, -14.9076, 0.88", "18.682, -120.201, -16.1501, 0.52", "18.7966, -121.092, -16.7683, 0.74", "18.9816, -122.286, -17.5705, 1.33", "19.088, -122.964, -17.9914, 1.33", "19.265, -124.357, -18.7187, 0.74", "19.3492, -125.242, -19.0659, 0.66", "19.3963, -126.498, -19.431, 0.66", "19.3548, -127.373, -19.6516, 0.81", "19.2144, -128.269, -19.862, 0.59", "19.0599, -128.871, -19.9725, 1.18", "18.9598, -129.151, -20.0147, 1.18", "18.5578, -130.144, -20.1364, 0.44", "18.2214, -131.005, -20.1618, 0.44", "17.9844, -131.727, -20.1442, 1.03", "17.8858, -132.239, -20.1012, 1.4", "17.8877, -133.313, -19.8717, 0.52", "17.9687, -134.035, -19.6877, 0.52", "18.2393, -134.978, -19.3733, 0.74", "18.3883, -135.315, -19.2162, 0.74", "18.7651, -135.983, -18.772, 0.59", "19.2968, -136.729, -18.112, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.77808, -29.9359, -6.27574, 0.88", "10.6055, -29.8898, -9.40244, 0.88", "11.7066, -29.8371, -10.1741, 0.88", "12.8136, -29.7758, -10.8285, 1.03", "13.566, -29.7317, -11.2046, 1.33", "14.2601, -29.6959, -11.5181, 1.62", "15.2639, -29.6595, -11.9403, 1.84", "16.1281, -29.5801, -12.1842, 1.47", "17.1493, -29.4967, -12.617, 1.18", "17.874, -29.4187, -13.2726, 0.81", "18.6127, -29.312, -14.2417, 0.81", "19.0699, -29.2577, -14.9389, 1.11", "20.0219, -29.2128, -16.5576, 1.33", "21.0122, -29.2163, -18.3386, 1.77", "23.2589, -29.3387, -22.4558, 1.47", "23.9868, -29.4056, -23.7441, 1.11", "24.7403, -29.4848, -24.9769, 1.11", "25.7755, -29.5903, -26.4392, 0.81", "26.4231, -29.6592, -27.1616, 0.96", "27.4818, -29.7293, -28.0047, 0.88", "28.3658, -29.6586, -28.5441, 0.74", "29.0414, -29.4649, -28.998, 0.59", "29.904, -29.0301, -29.7082, 1.03", "30.5435, -28.6197, -30.2699, 1.55", "31.131, -28.2163, -30.7977, 1.69", "32.8823, -26.9971, -32.4395, 1.69", "33.4216, -26.6373, -32.9677, 1.69", "34.7748, -25.8091, -34.2781, 0.88", "35.5467, -25.4118, -34.9741, 0.81", "36.4802, -25.0443, -35.6983, 1.11", "37.7097, -24.7192, -36.5003, 1.18", "38.8405, -24.5912, -37.0675, 0.59", "39.3478, -24.6028, -37.2954, 0.59", "40.5893, -24.8365, -37.7351, 0.96", "41.4776, -25.1518, -38.0259, 1.18", "42.2347, -25.5355, -38.2296, 1.18", "43.0093, -26.0042, -38.3691, 1.4", "43.9021, -26.5902, -38.4866, 1.4", "44.7322, -27.1147, -38.5813, 1.11", "45.3209, -27.4334, -38.6321, 1.11", "46.0489, -27.7156, -38.6831, 1.03", "47.0052, -27.9522, -38.7337, 1.03", "47.8411, -28.0576, -38.7638, 1.03", "48.807, -28.0894, -38.7839, 0.96", "50.1397, -28.0326, -38.8087, 0.88", "51.5923, -27.8944, -38.8005, 0.88", "52.5568, -27.7542, -38.775, 1.03", "53.3139, -27.6215, -38.7647, 1.11", "53.9347, -27.5094, -38.7814, 1.18", "54.492, -27.4339, -38.8663, 1.18", "55.5975, -27.3977, -39.2695, 0.81", "56.3761, -27.4863, -39.7291, 0.74", "57.3833, -27.7067, -40.4616, 1.18", "58.1469, -27.9175, -41.0768, 1.4", "59.6912, -28.3829, -42.4345, 1.18", "60.8739, -28.7309, -43.543, 0.88", "61.7525, -28.9541, -44.4367, 0.74", "62.6431, -29.1223, -45.3321, 0.74", "63.4607, -29.1879, -46.0966, 1.11", "64.3379, -29.1556, -46.8736, 1.4", "65.2142, -29.0677, -47.6122, 1.4", "66.4336, -28.9518, -48.6589, 1.11", "67.1473, -28.9167, -49.3072, 0.74", "68.0424, -28.9693, -50.1673, 0.66", "69.1057, -29.1978, -51.2366, 0.81", "70.181, -29.6039, -52.2657, 0.74", "71.0782, -30.0422, -53.1077, 1.25", "71.5777, -30.3081, -53.5475, 1.69", "72.2314, -30.6269, -54.0858, 1.69", "72.9181, -30.865, -54.5515, 1.4", "73.9935, -31.018, -55.1045, 0.88", "75.5687, -30.9258, -55.7476, 0.81", "76.2853, -30.8175, -56.0, 0.81", "77.2856, -30.6538, -56.2946, 0.81", "78.572, -30.451, -56.5836, 0.81", "79.3752, -30.3546, -56.7095, 0.81", "80.5084, -30.3043, -56.8272, 0.81", "81.2675, -30.374, -56.8507, 0.96", "82.4268, -30.6738, -56.9196, 0.96", "83.2069, -31.0057, -57.0441, 1.18", "83.8971, -31.3864, -57.2498, 1.47", "84.5995, -31.8132, -57.5169, 1.47", "85.6219, -32.4426, -57.9517, 0.74", "86.8124, -33.1268, -58.4877, 0.74", "88.2737, -33.8658, -59.1845, 0.66", "89.6385, -34.4729, -59.8842, 0.74", "90.4922, -34.7846, -60.3272, 0.81", "91.4735, -35.0431, -60.8193, 0.81", "91.9741, -35.1166, -61.0516, 1.11", "93.179, -35.1478, -61.5777, 1.25", "93.7102, -35.1009, -61.8449, 1.62", "94.2936, -34.9915, -62.24, 1.62", "95.428, -34.7243, -63.1519, 0.59", "96.1328, -34.5483, -63.7823, 0.59", "97.1912, -34.2975, -64.7591, 0.88", "98.6117, -33.9954, -66.08, 1.4", "100.047, -33.7471, -67.3671, 0.74", "100.895, -33.6409, -68.0925, 0.59", "101.618, -33.594, -68.6493, 0.81", "102.265, -33.6023, -69.0255, 0.81", "102.887, -33.6529, -69.2355, 0.96", "103.529, -33.7101, -69.3402, 0.96", "104.296, -33.7615, -69.4196, 0.59", "105.491, -33.7851, -69.5637, 0.59", "106.647, -33.7454, -69.7056, 0.66", "107.318, -33.6859, -69.8467, 1.03", "108.414, -33.5521, -70.1449, 1.03", "109.494, -33.3404, -70.7284, 0.59", "110.031, -33.1902, -71.1343, 0.59", "110.733, -32.9597, -71.771, 0.59", "111.797, -32.6382, -72.8231, 1.11", "112.274, -32.529, -73.2997, 1.33", "114.955, -32.0815, -75.8613, 1.03", "115.44, -32.0143, -76.2848, 1.4", "116.403, -31.8936, -77.0323, 0.81", "117.38, -31.7752, -77.6802, 0.74", "118.625, -31.6256, -78.3301, 0.59", "119.455, -31.5235, -78.6708, 0.59", "120.791, -31.3645, -79.0143, 0.59", "122.375, -31.1109, -79.4169, 0.88", "122.938, -30.9652, -79.5528, 1.25", "123.438, -30.7839, -79.6677, 1.55", "124.181, -30.4638, -79.8491, 1.55", "124.782, -30.1941, -80.0129, 1.33", "125.525, -29.8588, -80.2214, 0.66", "126.476, -29.4492, -80.4841, 0.66", "127.109, -29.2014, -80.7197, 0.66", "128.264, -28.7647, -81.2925, 0.66", "128.771, -28.6341, -81.7587, 0.66", "129.078, -28.5847, -82.1219, 0.96", "129.442, -28.5536, -82.599, 0.96", "130.535, -28.5481, -84.0693, 0.74", "131.19, -28.5764, -84.9415, 1.62", "133.81, -28.7481, -88.2763, 0.66", "134.208, -28.7642, -88.7576, 0.66", "134.82, -28.7708, -89.4242, 1.11", "135.624, -28.764, -90.1915, 1.11", "136.448, -28.7225, -90.8178, 0.52", "137.266, -28.6271, -91.2851, 0.52", "138.309, -28.3913, -91.7131, 1.25", "139.113, -28.1743, -92.0498, 0.88", "140.646, -27.6704, -92.6938, 0.44", "141.522, -27.3271, -93.0468, 0.44", "142.82, -26.7527, -93.5466, 0.52", "143.68, -26.3367, -93.8638, 0.88", "144.107, -26.1203, -94.0113, 1.11", "144.471, -25.9106, -94.1831, 1.11", "144.766, -25.7144, -94.374, 1.11", "145.729, -25.0063, -95.2649, 0.52", "146.114, -24.7221, -95.7612, 0.52", "146.648, -24.3432, -96.5451, 0.81", "147.902, -23.521, -98.4335, 0.81", "148.496, -23.1537, -99.3037, 1.11", "148.759, -23.005, -99.6468, 1.92", "150.299, -22.2464, -101.301, 0.59", "150.496, -22.1665, -101.461, 0.59", "151.223, -21.947, -101.825, 0.88", "152.162, -21.7458, -102.066, 0.44", "153.7, -21.4885, -102.37, 0.44", "154.913, -21.3245, -102.573, 0.74", "155.598, -21.2621, -102.71, 0.74", "156.62, -21.2351, -103.085, 0.52", "157.232, -21.2693, -103.447, 0.52", "158.152, -21.3865, -104.184, 0.59", "158.502, -21.4338, -104.509, 0.59", "160.032, -21.5809, -106.023, 0.59", "161.041, -21.6127, -107.021, 0.81", "161.989, -21.569, -107.959, 1.4", "162.495, -21.4843, -108.42, 1.55", "163.664, -21.0891, -109.309, 0.44", "164.163, -20.8272, -109.595, 0.88", "164.777, -20.427, -109.801, 0.88", "165.446, -19.9865, -110.006, 0.59", "166.479, -19.3495, -110.336, 0.59", "167.178, -18.9961, -110.657, 0.81", "167.975, -18.6904, -111.118, 0.81", "169.033, -18.3628, -111.863, 0.52", "170.234, -18.0286, -112.87, 0.74", "170.628, -17.9145, -113.345, 0.74", "171.473, -17.581, -114.848, 0.37", "171.815, -17.3746, -115.67, 0.37", "172.249, -16.9822, -117.008, 0.37", "172.56, -16.5653, -118.195, 0.59", "173.378, -15.2665, -121.448, 0.88", "173.769, -14.6417, -122.927, 0.52", "173.925, -14.4401, -123.448, 0.52", "174.306, -14.0973, -124.584, 0.52", "174.654, -13.8771, -125.417, 0.81", "175.152, -13.6411, -126.373, 0.59", "175.613, -13.4774, -127.1, 0.59", "177.174, -13.0624, -129.428, 1.18", "179.018, -12.6744, -132.338, 0.74", "179.461, -12.6025, -133.105, 0.74", "179.862, -12.5477, -133.878, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-69.1684, 139.292, -47.7986, 0.29", "-71.0721, 139.117, -48.1859, 0.29", "-72.6009, 139.186, -48.5519, 0.29", "-73.3812, 139.409, -48.8806, 0.59", "-74.2558, 139.852, -49.3489, 0.59", "-74.9637, 140.307, -49.7463, 0.59", "-75.7194, 140.862, -50.1583, 0.44", "-76.2916, 141.506, -50.5277, 0.59", "-77.3161, 142.797, -51.3614, 0.37", "-77.8164, 143.414, -51.8116, 0.29", "-78.3343, 143.978, -52.2497, 0.59", "-78.9067, 144.548, -52.7055, 0.59", "-80.1586, 145.751, -53.6747, 0.29", "-81.3162, 146.904, -54.6232, 0.29", "-81.8506, 147.458, -55.1148, 0.29", "-82.8668, 148.515, -56.2301, 0.29", "-83.5068, 149.17, -57.0761, 0.29", "-84.1812, 149.85, -58.0676, 0.52", "-84.7923, 150.479, -59.0197, 0.66", "-85.6829, 151.48, -60.4954, 0.44", "-86.3819, 152.288, -61.798, 0.59", "-87.2359, 153.212, -63.6171, 0.96", "-87.5796, 153.483, -64.2932, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-69.1684, 139.292, -47.7986, 0.66", "-68.4221, 139.196, -48.2716, 0.66", "-67.8259, 139.121, -48.6494, 0.29", "-67.3931, 139.065, -48.9237, 0.44", "-66.8595, 138.997, -49.2619, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-91.2278, 160.443, -41.1841, 0.29", "-91.689, 160.938, -41.6694, 0.29", "-92.2801, 161.51, -42.2876, 0.59", "-92.6677, 161.888, -42.7019, 0.44", "-93.226, 162.472, -43.3109, 0.88", "-93.4739, 162.769, -43.6048, 1.03", "-94.0266, 163.527, -44.3088, 0.52", "-94.2053, 163.804, -44.5632, 0.44", "-94.5514, 164.404, -45.0528, 0.66", "-94.8105, 164.895, -45.4235, 0.88", "-95.2988, 165.857, -46.0735, 0.59", "-95.6228, 166.494, -46.4708, 0.74", "-95.9528, 167.141, -46.8417, 0.74", "-96.4199, 167.995, -47.3247, 0.37", "-96.6398, 168.354, -47.5271, 0.37", "-97.1675, 169.11, -47.9422, 0.66", "-97.5425, 169.561, -48.1767, 0.66", "-97.9431, 169.961, -48.3782, 0.52", "-98.5317, 170.452, -48.6098, 0.88", "-98.9384, 170.738, -48.7308, 0.88", "-99.5428, 171.096, -48.8505, 0.52", "-100.275, 171.476, -48.9381, 0.52", "-101.184, 171.934, -49.0031, 0.88", "-101.771, 172.242, -49.0274, 0.88", "-102.501, 172.638, -49.0368, 0.52", "-103.124, 172.987, -49.0381, 0.44", "-103.832, 173.393, -49.0416, 0.37", "-104.525, 173.825, -49.0439, 0.37", "-105.213, 174.299, -49.0546, 0.29", "-106.33, 175.133, -49.0943, 0.29", "-106.851, 175.535, -49.1196, 0.29", "-107.452, 175.986, -49.1498, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-91.2278, 160.443, -41.1841, 0.29", "-92.5963, 159.703, -39.2179, 0.29", "-93.341, 159.301, -38.1479, 0.29", "-93.8687, 159.016, -37.3898, 0.22", "-94.5419, 158.652, -36.4226, 0.22", "-95.2909, 158.247, -35.3464, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "109.03, 53.214, 70.3581, 0.29", "109.293, 60.2345, 77.3703, 0.29", "110.16, 66.4424, 85.1419, 0.29", "112.133, 72.3502, 92.9729, 0.29", "113.159, 76.934, 101.876, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "109.03, 53.214, 70.3581, 0.29", "117.545, 52.6187, 75.1461, 0.29", "125.752, 53.7395, 80.3922, 0.29", "133.026, 56.3485, 86.4115, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "75.9022, 36.1325, -2.31445, 0.37", "76.1129, 36.9299, -2.3242, 0.37", "76.3754, 38.1313, -2.29842, 0.37", "76.5655, 39.0015, -2.27974, 0.22", "76.9654, 40.8313, -2.24047, 0.22", "77.2701, 42.2258, -2.21055, 0.66", "77.6372, 43.9053, -2.1745, 1.11", "77.7096, 44.3321, -2.14403, 1.11", "80.5723, 54.3273, -3.13168, 1.11", "84.0389, 64.1335, -4.17075, 1.11", "88.0057, 73.8618, -4.17277, 1.11", "91.796, 83.6425, -2.98409, 1.11", "96.9859, 92.7875, -3.39125, 1.11", "102.34, 101.871, -3.4256, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "75.9022, 36.1325, -2.31445, 0.44", "76.987, 36.3602, -2.25353, 0.44", "78.1483, 36.5507, -2.17628, 0.44", "79.3951, 36.7298, -2.00666, 0.74", "80.154, 36.8292, -1.87369, 1.03", "80.8653, 36.9173, -1.72667, 1.03", "81.4271, 36.9812, -1.62851, 1.03", "82.3755, 37.0785, -1.552, 0.66", "83.6817, 37.2444, -1.58531, 0.66", "84.142, 37.3361, -1.66885, 0.81", "84.8409, 37.5455, -1.88274, 0.44", "86.2612, 38.113, -2.45219, 0.44", "87.9483, 38.9346, -3.22622, 0.37", "88.5396, 39.2577, -3.53769, 0.37", "89.4525, 39.7788, -4.05229, 0.37", "90.5502, 40.4341, -4.64109, 0.66", "91.1916, 40.8369, -4.9493, 0.66", "92.0947, 41.415, -5.2592, 0.37", "92.6371, 41.7436, -5.37574, 0.37", "93.326, 42.1493, -5.50727, 0.59", "93.9383, 42.5141, -5.6432, 0.59", "94.5304, 42.8601, -5.87972, 0.44", "95.5311, 43.366, -6.34711, 0.66", "95.7134, 43.4437, -6.43542, 0.96", "96.41, 43.6708, -6.74353, 0.96", "97.4274, 43.8954, -7.16389, 1.11", "99.7722, 44.2553, -8.00962, 0.44", "101.087, 44.4084, -8.41483, 0.44", "102.112, 44.5136, -8.67733, 0.37", "103.373, 44.6564, -8.99202, 0.37", "104.141, 44.763, -9.16428, 0.29", "105.205, 44.9891, -9.38282, 0.22", "105.928, 45.2851, -9.5756, 0.59", "106.307, 45.5665, -9.76201, 0.59", "107.4, 46.5095, -10.5395, 0.29", "107.862, 46.9131, -10.9036, 0.37", "108.41, 47.3548, -11.3335, 0.52", "109.01, 47.7248, -11.7807, 0.74", "109.853, 48.0999, -12.5017, 0.96", "111.35, 48.6249, -14.0019, 0.29", "111.923, 48.8155, -14.6814, 0.52", "112.177, 48.908, -15.0417, 0.81", "113.002, 49.283, -16.4132, 1.11", "114.482, 50.1042, -19.2419, 0.81", "115.118, 50.5571, -20.6161, 0.96", "115.783, 51.1669, -22.1908, 0.66", "116.28, 51.6796, -23.3723, 0.52", "116.786, 52.2289, -24.4316, 0.52", "117.012, 52.4761, -24.7715, 0.74", "117.624, 52.9676, -25.1925, 0.74", "118.034, 53.2069, -25.3575, 0.96", "118.679, 53.4722, -25.5504, 0.96", "119.732, 53.8333, -25.9423, 0.74", "120.767, 54.1971, -26.4268, 0.44", "121.899, 54.6821, -27.175, 0.44", "122.326, 54.9135, -27.5423, 0.96", "123.085, 55.447, -28.4333, 1.18", "124.124, 56.3695, -30.0057, 0.66", "124.492, 56.7686, -30.7106, 0.66", "125.141, 57.5784, -32.2133, 0.59", "125.38, 57.9078, -32.7792, 0.52", "126.06, 58.8312, -34.2338, 0.52", "126.251, 59.1151, -34.6095, 0.96", "126.665, 59.7246, -35.299, 0.96", "127.454, 60.9104, -36.4576, 0.59", "128.136, 62.0035, -37.3268, 0.59", "128.57, 62.73, -37.8392, 0.88", "129.2, 63.8186, -38.473, 0.74", "129.766, 64.6971, -38.9449, 0.74", "130.441, 65.5893, -39.3537, 0.88", "130.876, 66.0195, -39.5462, 0.88", "131.702, 66.5984, -39.9065, 0.37", "132.577, 67.0748, -40.2937, 0.37", "133.96, 67.661, -40.9032, 0.37", "134.93, 68.0213, -41.3728, 0.37", "136.062, 68.4077, -41.9746, 0.37", "136.745, 68.659, -42.3483, 0.59", "137.593, 69.0029, -42.8079, 0.74", "138.163, 69.2667, -43.13, 0.74", "139.238, 69.8528, -43.7936, 0.44", "139.811, 70.1712, -44.1356, 0.37", "141.494, 70.9991, -44.9341, 0.37", "142.296, 71.3179, -45.237, 0.74", "142.721, 71.4484, -45.3659, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "88.5134, 59.6245, 7.59157, 0.29", "95.4883, 68.0257, 11.0257, 0.29", "102.912, 76.6467, 12.0451, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "88.5134, 59.6245, 7.59157, 0.29", "95.5311, 70.0596, 9.2075, 0.29", "102.321, 80.3698, 12.3398, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-20.6501, -143.152, 15.7582, 0.29", "-17.6651, -152.743, 13.5307, 0.29", "-15.9772, -162.815, 12.8137, 0.29", "-14.8308, -172.753, 10.5584, 0.29", "-14.9456, -182.943, 9.6846, 0.29", "-16.0004, -193.086, 8.83365, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-20.6501, -143.152, 15.7582, 0.29", "-22.4597, -152.023, 10.8593, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.23591, -92.7072, 8.91921, 0.37", "-2.93858, -93.9985, 7.42156, 0.37", "-3.41028, -94.6781, 6.63294, 0.37", "-3.89909, -95.264, 5.91619, 0.44", "-4.51201, -95.8971, 5.11669, 0.74", "-5.14598, -96.477, 4.37316, 0.59", "-5.83099, -97.0147, 3.65729, 0.59", "-6.27908, -97.2282, 3.31595, 0.74", "-7.05506, -97.4521, 2.82581, 0.88", "-7.56256, -97.5338, 2.56419, 1.18", "-8.08867, -97.5686, 2.33412, 0.59", "-8.89791, -97.5762, 2.00614, 0.44", "-9.69892, -97.5696, 1.67714, 0.52", "-10.0658, -97.5805, 1.51433, 0.74", "-10.691, -97.682, 1.23635, 0.74", "-11.1312, -97.8418, 1.01269, 0.59", "-11.5711, -98.111, 0.766484, 0.59", "-12.135, -98.6196, 0.430587, 0.59", "-12.7258, -99.3247, 0.0805791, 0.44", "-13.395, -100.266, -0.295184, 0.37", "-13.7792, -100.901, -0.496213, 1.03", "-14.032, -101.382, -0.62789, 1.03", "-14.2311, -101.825, -0.730803, 0.96", "-14.5639, -102.748, -0.893726, 0.66", "-14.8108, -103.579, -1.01445, 0.66", "-15.039, -104.531, -1.15093, 0.88", "-15.1528, -105.116, -1.22964, 1.03", "-15.2727, -105.948, -1.34438, 0.88", "-15.3804, -107.019, -1.50264, 0.52", "-15.433, -107.857, -1.63787, 0.52", "-15.458, -108.493, -1.75482, 0.96", "-15.475, -108.908, -1.84087, 0.96", "-15.5521, -109.927, -2.09086, 0.59", "-15.6592, -110.735, -2.32284, 0.66", "-15.7901, -111.338, -2.52808, 0.81", "-15.9946, -112.069, -2.81574, 0.81", "-16.1362, -112.475, -2.99915, 0.81", "-16.3974, -113.215, -3.402, 0.44", "-16.5255, -113.601, -3.64116, 0.81", "-16.6685, -114.16, -4.01301, 0.81", "-16.7939, -114.96, -4.54653, 0.52", "-16.812, -115.611, -4.96409, 0.52", "-16.7092, -116.807, -5.68658, 0.74", "-16.6145, -117.392, -6.01626, 1.11", "-16.5272, -117.933, -6.29588, 1.11", "-16.44, -118.62, -6.61347, 0.96", "-16.3994, -119.391, -6.93651, 0.59", "-16.4456, -120.34, -7.30708, 0.44", "-16.6637, -121.386, -7.69941, 0.44", "-16.9245, -122.167, -8.00438, 0.44", "-17.2314, -122.897, -8.28225, 0.74", "-17.468, -123.433, -8.47704, 0.74", "-17.7025, -123.951, -8.64824, 0.74", "-18.1201, -124.878, -8.92016, 0.66", "-18.424, -125.57, -9.09944, 0.44", "-18.8098, -126.464, -9.31952, 0.44", "-19.4229, -127.709, -9.61026, 0.44", "-19.7774, -128.284, -9.73796, 0.88", "-20.1984, -128.817, -9.84978, 1.18", "-20.5326, -129.16, -9.91009, 1.18", "-20.9566, -129.529, -9.96927, 1.03", "-22.1675, -130.425, -10.1238, 0.66", "-23.2868, -131.136, -10.2491, 0.66", "-24.2382, -131.718, -10.3518, 1.25", "-24.744, -132.031, -10.4043, 1.55", "-25.3551, -132.418, -10.4679, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.23591, -92.7072, 8.91921, 0.74", "-2.62714, -93.7378, 8.02687, 0.74", "-3.0874, -94.9195, 6.9821, 0.74", "-3.33456, -95.6276, 6.45344, 0.74", "-3.57164, -96.4223, 5.94237, 0.81", "-4.01084, -98.2501, 4.97836, 0.52", "-4.27162, -99.7089, 4.35214, 0.74", "-4.3559, -100.487, 4.10596, 0.74", "-4.20917, -102.224, 3.99494, 0.74", "-3.92324, -103.091, 4.13899, 0.81", "-3.35071, -104.146, 4.52746, 0.66", "-2.99385, -104.668, 4.79352, 1.11", "-2.61361, -105.178, 5.04755, 1.11", "-2.11358, -105.826, 5.29786, 0.81", "-1.45748, -106.704, 5.47381, 0.81", "-0.86003, -107.559, 5.57357, 0.96", "-0.3296, -108.354, 5.63448, 0.88", "0.298406, -109.332, 5.7127, 0.96", "0.733899, -110.06, 5.74936, 1.11", "1.21784, -110.967, 5.73847, 1.11", "1.61237, -111.815, 5.67554, 0.74", "2.11574, -113.137, 5.51522, 0.66", "2.33317, -113.827, 5.41252, 0.66", "2.71061, -115.423, 5.16381, 0.66", "2.94787, -117.097, 4.88611, 0.59", "2.99549, -118.065, 4.7028, 0.96", "2.95599, -119.268, 4.44719, 1.18", "2.85457, -120.164, 4.25315, 1.03", "2.68942, -121.216, 4.03625, 0.88", "2.46629, -122.581, 3.80842, 0.74", "2.30129, -123.77, 3.7322, 0.59", "2.17529, -124.776, 3.74636, 0.59", "2.05601, -125.612, 3.82998, 1.4", "1.93496, -126.227, 3.93975, 1.4", "1.58642, -127.801, 4.36267, 0.88", "1.16134, -129.651, 5.09836, 0.66", "0.967961, -130.426, 5.46842, 0.88", "0.706003, -131.411, 5.97137, 0.88", "0.267766, -132.944, 6.75672, 0.59", "-0.0496031, -133.922, 7.23362, 0.81", "-0.638243, -135.537, 7.94639, 0.81", "-0.940877, -136.37, 8.22331, 1.11", "-1.17063, -137.055, 8.40729, 1.11", "-1.44963, -138.039, 8.58032, 0.52", "-1.65701, -138.971, 8.68502, 0.74", "-1.81687, -139.803, 8.73217, 1.03", "-1.89616, -140.499, 8.73324, 1.25", "-1.91613, -141.186, 8.79092, 1.33", "-1.87319, -142.314, 9.06185, 1.03", "-1.71962, -143.371, 9.47037, 0.74", "-1.49515, -144.229, 9.90333, 0.44", "-1.19889, -145.008, 10.3771, 0.29", "-0.633848, -146.08, 11.1589, 0.29", "0.187367, -147.258, 12.1865, 0.29", "0.692514, -147.786, 12.749, 0.29", "1.19681, -148.158, 13.2143, 0.88", "1.62867, -148.422, 13.5762, 0.88", "2.35724, -148.828, 14.1404, 0.52", "2.7052, -149.011, 14.3526, 0.52", "3.33961, -149.375, 14.7202, 0.52", "3.80884, -149.773, 15.0595, 0.52", "4.41746, -150.512, 15.4942, 0.52", "4.70792, -150.983, 15.6782, 0.88", "5.02716, -151.567, 15.8282, 0.88", "5.44145, -152.283, 15.9321, 1.11", "5.88772, -152.949, 16.0105, 0.66", "6.78334, -154.012, 16.1093, 0.66", "7.22383, -154.393, 16.1614, 0.66", "8.00049, -154.936, 16.2919, 0.66", "8.62672, -155.322, 16.4258, 0.52", "9.69655, -155.977, 16.6392, 0.66", "10.0316, -156.192, 16.7421, 0.66", "10.7303, -156.674, 17.101, 0.44", "11.2827, -157.095, 17.5006, 0.44", "12.0124, -157.732, 18.1931, 0.52", "12.8345, -158.551, 19.1854, 0.66", "13.5151, -159.299, 20.1171, 0.44", "14.2277, -160.116, 21.1779, 0.81", "14.8991, -160.875, 22.1424, 0.52", "15.3532, -161.374, 22.7378, 0.74", "15.9267, -161.981, 23.3897, 0.29", "16.2528, -162.314, 23.663, 0.52", "16.7903, -162.836, 23.8901, 0.59", "17.8479, -163.879, 24.2061, 0.37", "18.6345, -164.643, 24.352, 0.66", "19.0891, -165.074, 24.4103, 1.03", "19.8254, -165.76, 24.4746, 1.03", "20.6281, -166.52, 24.5852, 0.74", "21.8901, -167.737, 24.8944, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.2968, -136.729, -18.112, 0.44", "19.2218, -138.187, -17.9679, 0.44", "19.1591, -139.205, -17.8667, 0.81", "19.0979, -139.987, -17.7904, 1.18", "19.0053, -141.034, -17.6938, 0.74", "18.9061, -142.122, -17.5996, 0.44", "18.8165, -143.08, -17.5211, 0.96", "18.7193, -144.071, -17.4464, 0.96", "18.6208, -145.014, -17.3825, 1.18", "18.4173, -146.42, -17.2936, 0.74", "18.1451, -147.695, -17.255, 0.66", "17.844, -148.732, -17.2622, 0.66", "17.3921, -150.032, -17.3422, 0.66", "17.1415, -150.674, -17.4159, 1.03", "16.7633, -151.563, -17.5618, 0.81", "16.1794, -152.98, -17.9164, 0.52", "15.9029, -153.831, -18.1426, 0.44", "15.6937, -154.904, -18.3889, 0.37", "15.6516, -155.517, -18.4889, 0.66", "15.6459, -156.191, -18.5394, 0.66", "15.7138, -157.955, -18.603, 0.44", "15.784, -159.726, -18.5797, 0.44", "15.7786, -161.141, -18.5186, 0.66", "15.6864, -162.388, -18.4356, 0.81", "15.4608, -163.744, -18.3614, 0.96", "15.0271, -165.172, -18.2948, 1.11", "14.5408, -166.281, -18.2536, 0.81", "14.0418, -167.259, -18.282, 0.88", "13.6501, -168.02, -18.3453, 0.66", "13.0996, -169.092, -18.4732, 0.29", "12.4123, -170.466, -18.656, 0.29", "12.0127, -171.262, -18.7462, 0.52", "11.3876, -172.496, -18.8994, 0.52", "10.8657, -173.511, -19.0213, 0.37", "10.3677, -174.424, -19.1226, 0.29", "9.87425, -175.22, -19.1856, 0.29", "9.65319, -175.509, -19.2133, 0.88", "9.12128, -175.998, -19.2784, 1.11", "8.44691, -176.426, -19.3467, 0.44", "7.58109, -176.847, -19.4231, 0.37", "6.73789, -177.187, -19.5072, 0.59", "5.9778, -177.448, -19.5963, 0.74", "4.97368, -177.769, -19.726, 0.44", "4.10183, -178.05, -19.8345, 0.37", "3.52531, -178.257, -19.8988, 0.88", "2.86757, -178.544, -19.9537, 1.11", "2.39995, -178.788, -19.9712, 1.11", "1.92353, -179.05, -19.9624, 1.11", "0.750402, -179.725, -19.9015, 0.29", "-0.0213718, -180.188, -19.8576, 0.59", "-0.532242, -180.503, -19.8241, 0.59", "-1.77915, -181.338, -19.7215, 0.29", "-2.53286, -181.901, -19.6406, 0.29", "-3.11744, -182.396, -19.5676, 0.52", "-3.79489, -183.032, -19.4775, 0.52", "-4.15142, -183.384, -19.428, 0.81", "-4.74789, -184.077, -19.3418, 0.81", "-5.32495, -184.953, -19.2516, 0.29", "-5.97545, -186.133, -19.1345, 0.29", "-6.32812, -186.821, -19.058, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.2968, -136.729, -18.112, 0.22", "20.5185, -137.28, -18.4706, 0.22", "21.8068, -137.861, -18.8486, 0.22", "23.3621, -138.563, -19.3051, 0.22", "24.4327, -139.046, -19.6192, 0.22", "25.5687, -139.558, -19.9526, 0.22", "26.7374, -140.085, -20.2956, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "179.862, -12.5477, -133.878, 0.74", "182.253, -14.2032, -135.532, 0.74", "182.898, -14.7574, -135.88, 0.44", "183.377, -15.166, -136.082, 0.74", "184.142, -15.7668, -136.333, 0.52", "185.195, -16.5019, -136.586, 0.52", "186.345, -17.2038, -136.839, 0.52", "187.218, -17.6983, -136.883, 0.52", "188.136, -18.1334, -136.928, 0.52", "189.315, -18.5272, -137.044, 0.52", "190.315, -18.7062, -137.179, 0.74", "191.368, -18.7536, -137.363, 1.03", "191.76, -18.7386, -137.446, 1.4", "192.149, -18.71, -137.541, 1.4", "193.706, -18.5977, -137.986, 0.44", "194.301, -18.5796, -138.107, 0.74", "195.191, -18.6081, -138.171, 0.74", "195.805, -18.6608, -138.12, 0.96", "196.387, -18.7476, -137.977, 0.96", "197.15, -18.9271, -137.693, 0.96", "198.946, -19.5656, -136.775, 0.66", "199.678, -19.9156, -136.332, 0.81", "200.106, -20.1765, -136.026, 0.81", "201.131, -20.8878, -135.236, 0.52", "201.893, -21.4494, -134.647, 0.52", "202.728, -22.0785, -134.054, 0.52", "203.546, -22.6653, -133.601, 0.52", "204.602, -23.374, -133.108, 0.44", "205.187, -23.7141, -132.92, 0.96", "205.825, -24.0049, -132.886, 1.11", "206.739, -24.3317, -133.052, 0.44", "207.544, -24.5993, -133.414, 0.37", "208.108, -24.8104, -133.822, 0.37", "208.992, -25.1781, -134.686, 0.66", "209.953, -25.6063, -135.816, 0.74", "210.356, -25.7839, -136.345, 0.81", "210.937, -26.0185, -137.18, 0.81", "211.688, -26.2799, -138.299, 0.66", "212.389, -26.4785, -139.278, 0.66", "213.066, -26.648, -140.134, 0.29", "213.543, -26.7646, -140.683, 0.59", "214.061, -26.8812, -141.232, 0.74", "214.554, -26.9788, -141.744, 0.44", "215.209, -27.0973, -142.384, 0.37", "215.882, -27.2376, -143.027, 0.37", "216.539, -27.4044, -143.632, 0.59", "217.057, -27.5646, -144.101, 0.59", "218.356, -28.0479, -145.485, 0.29", "219.166, -28.4252, -146.488, 0.29", "219.568, -28.6518, -147.064, 0.29", "219.91, -28.8696, -147.576, 0.74", "220.244, -29.1046, -148.102, 0.74", "221.526, -30.2374, -150.302, 0.37", "221.885, -30.667, -150.999, 0.52", "222.136, -31.0545, -151.613, 0.81", "222.39, -31.4795, -152.335, 0.37", "222.614, -31.8391, -153.031, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "179.862, -12.5477, -133.878, 0.88", "180.568, -12.1331, -135.143, 0.88", "180.855, -12.0549, -135.72, 1.25", "181.11, -12.0358, -136.32, 1.25", "181.436, -12.0171, -137.178, 0.59", "182.305, -11.9673, -139.472, 0.59", "183.179, -11.9173, -141.776, 0.96", "183.629, -11.9645, -143.03, 1.11", "184.385, -12.1419, -145.346, 1.25", "184.82, -12.3125, -146.833, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-107.452, 175.986, -49.1498, 0.22", "-107.366, 174.835, -48.4065, 0.22", "-107.313, 174.118, -47.9434, 0.22", "-107.193, 172.513, -46.9065, 0.22", "-107.12, 171.534, -46.2738, 0.22", "-107.057, 170.693, -45.7301, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-107.452, 175.986, -49.1498, 0.22", "-108.514, 176.68, -48.8054, 0.22", "-109.446, 177.321, -48.5079, 0.22", "-110.332, 177.931, -48.2249, 0.22", "-111.181, 178.514, -47.9541, 0.22", "-112.457, 179.393, -47.5465, 0.22", "-113.109, 179.841, -47.3386, 0.37", "-113.751, 180.344, -47.1, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "113.159, 76.934, 101.876, 0.29", "115.646, 86.5467, 110.656, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "113.159, 76.934, 101.876, 0.29", "114.074, 83.258, 107.75, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "133.026, 56.3485, 86.4115, 0.29", "137.399, 55.1161, 78.404, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "133.026, 56.3485, 86.4115, 0.29", "124.249, 55.2709, 87.3101, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "142.721, 71.4484, -45.3659, 0.37", "142.186, 71.3346, -46.0938, 0.37", "141.595, 71.0011, -47.2881, 0.66", "141.356, 70.6317, -48.2196, 0.29", "141.2, 70.272, -49.0692, 0.29", "141.025, 69.8299, -50.1412, 0.29", "140.655, 68.9173, -52.4848, 0.29", "140.503, 68.4572, -53.565, 0.81", "140.128, 66.9852, -56.8, 0.44", "140.037, 66.4491, -57.933, 0.96", "140.002, 66.0046, -58.9133, 1.18", "140.012, 65.451, -60.2069, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "142.721, 71.4484, -45.3659, 0.37", "143.98, 71.617, -45.3837, 0.37", "145.446, 72.0224, -45.398, 0.29", "145.987, 72.2159, -45.3992, 0.66", "146.517, 72.4389, -45.3864, 0.66", "147.175, 72.7839, -45.3762, 0.37", "148.091, 73.3002, -45.3756, 0.37", "149.08, 73.9577, -45.3827, 0.81", "149.487, 74.2585, -45.3563, 1.11", "150.054, 74.6973, -45.2858, 1.33", "151.192, 75.6591, -45.066, 0.44", "151.853, 76.2772, -44.8603, 0.52", "152.704, 77.1673, -44.491, 1.03", "153.6, 78.2306, -43.9967, 0.52", "154.015, 78.7693, -43.7122, 0.66", "154.427, 79.3707, -43.3595, 0.66", "154.993, 80.3574, -42.724, 0.44", "155.23, 80.9222, -42.4047, 0.29", "155.488, 81.6423, -42.0683, 0.44", "155.825, 82.4822, -41.7802, 0.66", "156.163, 83.1848, -41.5863, 0.37", "156.59, 84.0004, -41.4185, 0.37", "157.282, 85.3402, -41.222, 0.29", "157.711, 86.2068, -41.0987, 0.29", "158.331, 87.6789, -40.8966, 0.29", "158.674, 88.692, -40.7169, 0.29", "158.865, 89.4823, -40.5288, 1.55", "158.948, 90.1376, -40.3269, 1.18", "158.911, 90.8328, -40.007, 0.96", "158.608, 91.9569, -39.3619, 0.52", "157.965, 93.2524, -38.4849, 0.29", "157.416, 94.0491, -37.8986, 0.29", "157.118, 94.4233, -37.6171, 0.29", "156.282, 95.4457, -36.8873, 0.22", "156.027, 95.7648, -36.6857, 0.66", "155.721, 96.1732, -36.4606, 0.66", "155.223, 96.9562, -36.1401, 0.37", "154.887, 97.7462, -35.8825, 0.29", "154.69, 98.5459, -35.7087, 0.22", "154.601, 99.2643, -35.5532, 0.22", "154.566, 100.363, -35.2462, 0.22", "154.601, 100.855, -35.0855, 0.29", "154.722, 101.586, -34.8072, 0.29", "154.967, 102.671, -34.3519, 0.29", "155.375, 104.072, -33.7604, 0.29", "155.658, 104.94, -33.3781, 0.29", "155.929, 105.635, -33.063, 0.29", "156.307, 106.54, -32.6316, 0.29", "156.938, 107.9, -31.9531, 0.29", "157.493, 108.943, -31.4364, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-16.0004, -193.086, 8.83365, 0.29", "-15.8832, -204.927, 6.54949, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.0004, -193.086, 8.83365, 0.29", "-8.08477, -190.068, 15.0736, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-25.3551, -132.418, -10.4679, 0.37", "-25.553, -133.003, -10.7028, 0.37", "-25.6475, -133.282, -10.815, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-25.3551, -132.418, -10.4679, 0.29", "-27.6217, -132.086, -13.8608, 0.29", "-28.3035, -131.988, -14.8293, 0.22", "-29.249, -131.947, -16.0641, 0.22", "-29.8359, -131.983, -16.7595, 1.47", "-30.2712, -132.01, -17.2751, 1.69", "-30.687, -132.036, -17.7677, 1.69", "-32.0235, -132.067, -18.8197, 0.96", "-32.9415, -132.201, -19.6492, 0.29", "-33.6925, -132.467, -20.4195, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "21.8901, -167.737, 24.8944, 0.29", "21.999, -168.626, 23.5291, 0.29", "22.0939, -169.4, 22.3383, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "21.8901, -167.737, 24.8944, 0.29", "22.3725, -165.985, 23.9887, 0.29", "22.8915, -164.909, 22.9212, 0.29", "23.3135, -164.452, 21.9723, 0.29", "23.7229, -164.009, 21.0516, 0.52", "24.881, -162.755, 18.4475, 0.44", "25.2696, -162.335, 17.5737, 0.29", "25.8723, -162.512, 16.0837, 0.29", "26.0827, -162.689, 15.5438, 0.29", "28.7654, -158.216, 7.50836, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.32812, -186.821, -19.058, 0.22", "-6.32004, -188.125, -18.8274, 0.22", "-6.2651, -189.62, -18.4823, 0.22", "-6.13909, -191.559, -18.034, 0.22", "-6.01398, -193.15, -17.6699, 0.22", "-5.81713, -195.198, -17.2245, 0.22", "-5.66096, -196.823, -16.8711, 0.22", "-5.47459, -198.72, -16.4816, 0.22", "-5.31276, -199.92, -16.2506, 0.37", "-5.23119, -200.332, -16.1681, 0.37", "-4.95572, -201.482, -15.915, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.32812, -186.821, -19.058, 1.55", "-7.05764, -187.212, -19.2082, 1.55", "-7.48303, -187.495, -19.3089, 1.55", "-8.32561, -188.079, -19.5062, 0.29", "-9.56062, -188.931, -19.7638, 0.44", "-9.87144, -189.123, -19.8527, 0.44", "-11.1719, -189.795, -20.3003, 0.29", "-11.9866, -190.158, -20.6144, 0.29", "-12.7979, -190.471, -20.924, 0.29", "-13.7014, -190.751, -21.2453, 0.29", "-15.5052, -191.138, -21.7837, 0.29", "-17.1075, -191.318, -22.2056, 0.29", "-18.123, -191.315, -22.4397, 0.22", "-19.1456, -191.245, -22.6431, 0.22", "-19.9462, -191.165, -22.7784, 0.22", "-20.826, -191.055, -22.8868, 0.22", "-21.9291, -190.921, -22.8995, 0.22", "-22.7562, -190.777, -22.8786, 0.22", "-23.3303, -190.629, -22.8828, 0.52", "-23.8372, -190.457, -22.9071, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "184.82, -12.3125, -146.833, 0.81", "186.764, -12.2248, -148.0, 0.81", "188.25, -12.233, -148.83, 0.88", "189.425, -12.299, -149.511, 0.37", "189.766, -12.3176, -149.704, 0.37", "190.51, -12.3582, -150.127, 0.66", "190.994, -12.3846, -150.402, 0.74", "191.159, -12.394, -150.524, 0.74", "192.089, -12.5321, -151.001, 0.37", "192.552, -12.6395, -151.239, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "184.82, -12.3125, -146.833, 0.44", "185.971, -11.4673, -148.378, 0.44", "186.785, -10.8705, -149.468, 0.44", "187.234, -10.5406, -150.071, 0.44", "188.117, -9.89263, -151.255, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "140.012, 65.451, -60.2069, 0.96", "139.41, 64.2569, -64.7808, 0.96", "138.51, 62.9695, -69.3685, 0.59", "138.284, 62.6686, -70.4685, 0.59", "138.092, 62.4028, -71.5193, 0.37", "137.717, 61.864, -73.9711, 0.29", "137.495, 61.5556, -75.5604, 0.29", "137.328, 61.4503, -76.6078, 0.66", "137.097, 61.5046, -78.599, 0.22", "137.033, 61.5389, -79.8059, 0.22", "136.969, 61.5535, -81.346, 0.88", "136.912, 61.5611, -82.2834, 0.88", "136.633, 61.5411, -84.8413, 0.37", "136.442, 61.4392, -86.027, 0.96", "136.217, 61.2449, -87.1952, 1.11", "135.809, 60.7765, -89.4101, 0.44", "135.602, 60.4751, -90.7604, 0.37", "135.475, 60.2464, -91.8297, 0.52", "135.016, 59.3361, -96.4021, 0.37", "134.921, 58.9706, -98.5758, 0.96", "134.904, 58.7649, -100.272, 0.96", "134.922, 58.5881, -101.998, 0.52", "134.959, 58.4184, -103.282, 1.33", "135.002, 58.1666, -104.828, 1.33", "135.017, 57.0601, -111.17, 0.52", "135.007, 56.9283, -111.884, 0.52", "134.965, 56.621, -113.411, 0.52", "134.685, 55.1766, -119.846, 0.44", "134.474, 54.5035, -122.772, 0.59", "134.296, 54.1416, -124.517, 0.59", "134.025, 53.8757, -126.179, 0.88", "133.908, 53.8217, -126.752, 1.25", "133.614, 53.851, -127.755, 1.47", "132.699, 54.323, -129.759, 0.29", "131.803, 54.8996, -131.526, 0.29", "131.429, 55.1525, -132.223, 0.29", "130.759, 55.6321, -133.39, 0.29", "130.339, 55.9678, -134.145, 0.29", "129.337, 56.8451, -135.962, 0.29", "128.941, 57.1813, -136.676, 0.29", "128.384, 57.5353, -137.587, 0.96", "128.029, 57.7694, -138.232, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "140.012, 65.451, -60.2069, 0.15", "140.389, 66.5321, -60.5094, 0.15", "140.595, 67.1245, -60.6752, 0.15", "140.761, 67.6005, -60.8084, 0.81", "140.904, 68.0137, -60.9241, 1.03", "141.094, 68.5583, -61.0765, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-25.6475, -133.282, -10.815, 0.52", "-25.7785, -133.887, -11.2434, 0.52", "-25.9677, -134.868, -11.8119, 0.52", "-26.2591, -136.117, -12.3908, 0.37", "-26.3982, -136.693, -12.6462, 0.52", "-26.5922, -137.466, -12.978, 0.44", "-26.8205, -138.324, -13.3533, 0.37", "-27.0772, -139.195, -13.6979, 0.29", "-27.3745, -140.114, -14.0012, 0.29", "-27.7434, -141.311, -14.3525, 1.03", "-27.8504, -141.647, -14.4545, 1.18", "-28.1849, -142.602, -14.775, 0.88", "-28.4212, -143.287, -15.021, 0.44", "-28.6736, -144.178, -15.3532, 0.37", "-28.7519, -144.702, -15.5497, 0.59", "-28.7608, -145.194, -15.7201, 0.44", "-28.6439, -146.196, -16.0545, 0.44", "-28.4815, -146.908, -16.2791, 0.44", "-28.1799, -147.999, -16.6086, 0.52", "-27.9091, -149.014, -16.9047, 0.66", "-27.7458, -149.854, -17.093, 0.88", "-27.7008, -150.439, -17.167, 0.88", "-27.7892, -151.334, -17.1633, 0.52", "-28.0692, -152.105, -17.0719, 0.29", "-28.6195, -153.023, -16.8773, 0.29", "-29.3819, -154.065, -16.6781, 0.29", "-29.9328, -154.75, -16.603, 0.96", "-30.2787, -155.207, -16.6165, 1.18", "-30.6153, -155.714, -16.6693, 1.18", "-31.0936, -156.67, -16.8564, 0.59", "-31.4217, -157.681, -17.0654, 0.52", "-31.6398, -158.667, -17.2556, 0.52", "-31.8548, -159.942, -17.5199, 0.66", "-31.9679, -160.788, -17.6837, 0.66", "-32.0515, -161.7, -17.8356, 0.81", "-32.0957, -163.023, -17.9511, 0.81", "-32.0925, -163.978, -17.862, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-25.6475, -133.282, -10.815, 0.37", "-26.5043, -133.099, -10.6293, 0.37", "-27.6407, -132.909, -10.4367, 0.37", "-28.1817, -132.821, -10.3691, 0.37", "-29.3763, -132.618, -10.2713, 0.29", "-30.0837, -132.481, -10.2383, 0.29", "-30.9223, -132.319, -10.1992, 0.29", "-31.7337, -132.181, -10.1551, 0.37", "-32.1343, -132.133, -10.1718, 0.37", "-32.525, -132.101, -10.2258, 0.29", "-32.938, -132.054, -10.3533, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.0939, -169.4, 22.3383, 0.22", "21.0362, -170.562, 22.2198, 0.22", "19.5122, -172.236, 22.049, 0.22", "18.646, -173.187, 21.9519, 0.29", "18.1738, -173.706, 21.899, 0.29", "16.9503, -175.05, 21.7619, 0.22", "16.1509, -175.928, 21.6723, 0.22", "9.47481, -187.339, 20.0863, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "22.0939, -169.4, 22.3383, 0.37", "21.7808, -170.765, 22.9766, 0.37", "21.3964, -172.003, 23.3368, 0.96", "20.819, -173.547, 23.5513, 0.59", "20.3551, -174.728, 23.5577, 0.59", "19.8632, -175.98, 23.5644, 0.22", "19.3947, -177.173, 23.5709, 0.22", "18.7858, -178.448, 23.4192, 0.22", "18.2243, -179.529, 23.0985, 0.22", "17.5601, -180.64, 22.5639, 0.22", "14.7712, -191.757, 24.2822, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "188.117, -9.89263, -151.255, 0.37", "190.498, -10.967, -160.95, 0.37", "190.882, -11.1064, -162.604, 0.66", "191.141, -11.1597, -163.906, 0.66", "191.253, -11.1632, -164.533, 0.96", "191.524, -11.0784, -166.139, 1.11", "191.844, -10.8687, -168.007, 1.11", "192.306, -10.0442, -170.241, 0.81", "192.671, -9.24299, -171.844, 1.4", "192.793, -8.93379, -172.323, 1.4", "193.294, -7.59437, -173.887, 0.37", "193.677, -6.54483, -174.744, 0.37", "194.193, -5.19961, -175.487, 0.37", "194.626, -4.07275, -175.901, 0.66", "194.961, -3.12945, -176.165, 0.66", "195.298, -1.78045, -176.541, 0.29", "195.425, -0.735369, -176.823, 0.52", "195.442, 0.0227032, -177.046, 0.52", "195.416, 1.28666, -177.487, 0.29", "195.397, 2.58648, -178.009, 1.03", "195.421, 4.51044, -178.922, 0.66", "195.462, 5.72634, -179.555, 0.44", "195.485, 6.1596, -179.787, 0.66", "195.561, 7.49315, -180.527, 0.37", "195.621, 8.17056, -180.883, 0.52", "195.792, 9.49407, -181.498, 0.37", "195.962, 10.4201, -181.83, 0.37", "196.156, 11.4084, -182.172, 0.37", "196.303, 12.5177, -182.547, 0.37", "196.378, 13.5889, -182.882, 0.96", "196.41, 14.0403, -183.019, 0.96", "196.591, 15.8548, -183.524, 0.29", "196.773, 17.3249, -183.948, 0.29", "196.972, 18.6888, -184.359, 0.29", "197.148, 19.8287, -184.716, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "188.117, -9.89263, -151.255, 0.52", "186.537, -8.03391, -154.892, 0.52", "186.401, -7.87259, -155.179, 0.52", "185.728, -7.08919, -156.472, 0.37", "185.54, -6.86992, -156.835, 0.29", "184.97, -6.2066, -157.93, 0.29", "184.485, -5.64268, -158.862, 0.29", "183.978, -4.9264, -159.499, 0.29", "183.756, -4.62419, -159.783, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "128.029, 57.7694, -138.232, 0.29", "127.309, 58.6425, -141.051, 0.29", "127.115, 58.701, -141.924, 0.29", "126.866, 58.6672, -143.155, 0.29", "126.438, 58.5989, -145.381, 0.29", "126.271, 58.6024, -146.224, 0.44", "126.045, 58.607, -147.368, 0.44", "125.321, 58.4625, -150.722, 0.29", "125.0, 58.3212, -152.33, 0.29", "124.843, 58.2062, -153.282, 0.29", "124.614, 58.0238, -154.736, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "128.029, 57.7694, -138.232, 0.22", "127.183, 57.2919, -137.739, 0.22", "126.493, 56.9595, -137.336, 0.22", "125.641, 56.6146, -136.817, 1.4", "124.685, 56.2276, -136.235, 0.22", "123.619, 55.7959, -135.585, 1.84", "122.685, 55.4178, -135.016, 0.22", "121.888, 55.1556, -134.473, 0.22", "121.149, 54.9535, -133.943, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "141.094, 68.5583, -61.0765, 0.74", "140.767, 69.1825, -61.4165, 0.74", "140.191, 70.1703, -61.943, 0.22", "139.795, 70.7397, -62.2687, 0.22", "138.926, 71.822, -62.9067, 0.22", "138.1, 72.7956, -63.4157, 1.33", "137.684, 73.2938, -63.6373, 1.33", "136.787, 74.3298, -64.0053, 0.22", "136.105, 75.0664, -64.2155, 0.22", "135.646, 75.5211, -64.3323, 0.22", "134.612, 76.4653, -64.6119, 0.22", "133.848, 77.2109, -64.765, 0.22", "133.404, 77.7371, -64.8569, 0.37", "133.017, 78.317, -64.9505, 0.37", "132.664, 79.0325, -65.044, 0.37", "132.447, 79.5952, -65.1367, 0.15", "131.867, 81.104, -65.4978, 0.22", "131.391, 82.3233, -65.843, 0.22", "131.038, 83.1778, -66.0786, 0.22", "130.327, 84.6736, -66.544, 0.22", "129.753, 85.6796, -66.8718, 0.22", "128.949, 86.9181, -67.2738, 0.22", "128.631, 87.3564, -67.422, 0.74", "127.232, 89.1018, -67.9941, 0.29", "126.362, 90.1153, -68.3451, 0.29", "125.507, 91.0922, -68.7083, 0.29", "124.889, 91.8344, -68.9311, 0.29", "124.18, 92.8027, -69.1164, 0.52", "123.548, 93.7132, -69.2359, 0.37", "122.748, 94.9419, -69.3565, 0.29", "122.555, 95.2502, -69.3768, 0.37", "121.804, 96.4548, -69.4546, 0.37", "120.769, 98.0438, -69.5464, 0.37", "119.941, 99.2636, -69.5931, 0.22", "119.488, 99.9438, -69.5954, 0.22", "118.997, 100.676, -69.5921, 0.74", "118.719, 101.073, -69.605, 0.88", "117.838, 102.265, -69.7544, 0.59", "116.785, 103.553, -70.0883, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "141.094, 68.5583, -61.0765, 0.29", "142.453, 68.9173, -61.4636, 0.29", "143.788, 69.0217, -61.8049, 0.29", "145.162, 69.0212, -62.1322, 1.03", "145.821, 68.9958, -62.2868, 1.03", "147.451, 68.9256, -62.6011, 0.44", "148.676, 68.8899, -62.7945, 0.29", "150.314, 68.7842, -62.9623, 0.96", "150.863, 68.7482, -62.9938, 0.96", "152.438, 68.7166, -63.0384, 0.22", "153.618, 68.7622, -63.071, 0.22", "154.788, 68.9313, -63.0912, 0.22", "156.027, 69.2051, -63.1351, 0.22", "157.429, 69.6171, -63.2326, 0.22", "158.294, 69.9145, -63.3282, 0.52", "158.986, 70.2163, -63.4564, 0.29", "159.826, 70.6952, -63.7129, 1.03", "160.327, 71.1213, -63.9275, 1.03", "160.709, 71.622, -64.1888, 0.88", "161.044, 72.2091, -64.4693, 0.66", "161.409, 73.0202, -64.8388, 0.37", "161.718, 73.9355, -65.233, 0.59", "162.006, 75.119, -65.7239, 0.29", "162.208, 76.2117, -66.1288, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-32.0925, -163.978, -17.862, 0.74", "-32.5781, -164.727, -17.7332, 0.74", "-33.4152, -165.827, -17.5594, 0.66", "-34.0807, -166.545, -17.4741, 0.52", "-35.0217, -167.408, -17.4243, 0.37", "-35.5558, -167.88, -17.4179, 0.74", "-36.0035, -168.282, -17.3982, 1.03", "-36.6179, -168.813, -17.372, 0.74", "-37.4925, -169.581, -17.3376, 0.52", "-38.3592, -170.443, -17.2889, 0.52", "-38.9269, -171.141, -17.2486, 0.66", "-39.6985, -172.371, -17.1742, 0.88", "-39.915, -172.813, -17.1509, 1.18", "-40.1884, -173.529, -17.1153, 0.81", "-40.4837, -174.551, -17.073, 0.52", "-40.6931, -175.418, -17.0802, 0.52", "-40.9414, -176.449, -17.152, 0.52", "-41.0636, -176.941, -17.2257, 0.52", "-41.3193, -177.907, -17.3909, 0.52", "-41.5973, -178.862, -17.5715, 0.52", "-41.8483, -179.664, -17.7536, 1.03", "-42.0479, -180.247, -17.8976, 1.25", "-42.3435, -180.969, -18.1059, 0.66", "-42.6865, -181.67, -18.3482, 0.29", "-43.1946, -182.351, -18.6892, 0.29", "-43.5499, -182.242, -18.881, 0.52", "-44.4531, -181.569, -19.3393, 0.29", "-45.1498, -180.942, -19.6958, 0.29", "-45.877, -180.171, -20.0664, 0.22", "-46.0114, -180.007, -20.1369, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-32.0925, -163.978, -17.862, 0.22", "-32.0303, -165.638, -18.301, 0.22", "-31.9969, -166.302, -18.4769, 0.22", "-31.9216, -167.625, -18.7732, 0.22", "-31.843, -169.12, -19.0609, 0.22", "-31.7793, -170.331, -19.2939, 0.22", "-31.6556, -172.683, -19.7464, 0.22", "-31.6423, -173.688, -19.9448, 0.22", "-31.5775, -175.674, -20.3373, 0.22", "-31.4941, -176.784, -20.5285, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "197.148, 19.8287, -184.716, 0.29", "198.097, 19.5231, -184.789, 0.29", "198.642, 19.3473, -184.831, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "197.148, 19.8287, -184.716, 0.37", "197.186, 20.5529, -184.932, 0.37", "197.23, 21.4056, -185.187, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "axon_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "axon_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_ChC_6d90400381_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, axon_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, axon_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 10.8306, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.192916, 12.7753, -3.60225, 0.37 ) }
    dend_78 { pt3dadd( -0.285217, 13.3036, -3.7062, 0.74 ) }
    dend_78 { pt3dadd( -0.225738, 13.7199, -3.86569, 0.74 ) }
    dend_78 { pt3dadd( 0.274885, 14.9984, -4.47236, 0.37 ) }
    dend_78 { pt3dadd( 0.767356, 16.0206, -4.92334, 0.66 ) }
    dend_78 { pt3dadd( 1.34295, 17.0755, -5.40508, 1.33 ) }
    dend_78 { pt3dadd( 1.88513, 17.8621, -5.78081, 1.33 ) }
    dend_78 { pt3dadd( 2.79756, 19.1615, -6.41206, 0.74 ) }
    dend_78 { pt3dadd( 3.47912, 20.2001, -6.88744, 0.74 ) }
    dend_78 { pt3dadd( 4.51773, 21.9172, -7.6718, 1.25 ) }
    dend_78 { pt3dadd( 5.17224, 23.2978, -8.27556, 2.06 ) }
    dend_78 { pt3dadd( 5.50426, 24.3285, -8.67883, 2.06 ) }
    dend_78 { pt3dadd( 5.73298, 25.7243, -9.17717, 1.4 ) }
    dend_78 { pt3dadd( 5.64615, 27.3363, -9.73214, 0.74 ) }
    dend_78 { pt3dadd( 5.26342, 28.3936, -10.0994, 1.11 ) }
    dend_78 { pt3dadd( 4.59746, 29.2039, -10.3838, 1.11 ) }
    dend_78 { pt3dadd( 3.63729, 29.8963, -10.609, 0.81 ) }
    dend_78 { pt3dadd( 2.37274, 30.4812, -10.9193, 0.81 ) }
    dend_78 { pt3dadd( 0.827512, 30.9566, -11.3274, 0.81 ) }
    dend_78 { pt3dadd( -0.679049, 31.305, -11.7685, 0.96 ) }
    dend_78 { pt3dadd( -1.92283, 31.5913, -12.1473, 1.11 ) }
    dend_78 { pt3dadd( -3.04018, 31.8816, -12.5513, 1.11 ) }
    dend_78 { pt3dadd( -5.46743, 32.667, -13.6114, 1.11 ) }
    dend_78 { pt3dadd( -6.1846, 32.9899, -14.0013, 1.11 ) }
    dend_78 { pt3dadd( -7.34145, 33.8484, -14.8023, 0.59 ) }
    dend_78 { pt3dadd( -8.02507, 34.7691, -15.3812, 0.96 ) }
    dend_78 { pt3dadd( -8.4294, 35.6192, -15.7643, 1.25 ) }
    dend_78 { pt3dadd( -8.71477, 36.3858, -16.0268, 1.55 ) }
    dend_78 { pt3dadd( -8.88788, 36.8687, -16.1397, 1.55 ) }
    dend_78 { pt3dadd( -9.50609, 38.3516, -16.4545, 0.74 ) }
    dend_78 { pt3dadd( -10.4773, 40.1449, -16.8295, 0.96 ) }
    dend_78 { pt3dadd( -11.2817, 41.232, -17.1, 0.66 ) }
    dend_78 { pt3dadd( -11.9493, 41.916, -17.3109, 0.66 ) }
    dend_78 { pt3dadd( -13.0213, 42.7659, -17.6453, 0.81 ) }
    dend_78 { pt3dadd( -13.9111, 43.3243, -17.9319, 0.96 ) }
    dend_78 { pt3dadd( -15.0818, 43.924, -18.3393, 1.47 ) }
    dend_78 { pt3dadd( -16.1605, 44.4417, -18.7356, 1.62 ) }
    dend_78 { pt3dadd( -17.1791, 45.006, -19.1208, 1.47 ) }
    dend_78 { pt3dadd( -18.1272, 45.639, -19.4983, 1.11 ) }
    dend_78 { pt3dadd( -19.1983, 46.5095, -19.9557, 0.81 ) }
    dend_78 { pt3dadd( -20.4593, 47.8055, -20.5752, 0.66 ) }
    dend_78 { pt3dadd( -21.137, 48.6998, -20.9515, 0.81 ) }
    dend_78 { pt3dadd( -22.0084, 50.2089, -21.5144, 1.03 ) }
    dend_78 { pt3dadd( -22.3453, 50.9953, -21.7987, 1.25 ) }
    dend_78 { pt3dadd( -22.5852, 51.727, -22.0757, 1.25 ) }
    dend_78 { pt3dadd( -23.0187, 53.3065, -22.7328, 0.96 ) }
    dend_78 { pt3dadd( -23.3417, 54.5255, -23.3124, 0.81 ) }
    dend_78 { pt3dadd( -23.7921, 56.0296, -24.1246, 0.59 ) }
    dend_78 { pt3dadd( -24.1633, 57.0745, -24.7278, 0.59 ) }
    dend_78 { pt3dadd( -24.674, 58.3127, -25.451, 0.59 ) }
    dend_78 { pt3dadd( -25.2351, 59.5282, -26.1361, 0.59 ) }
    dend_78 { pt3dadd( -25.7787, 60.6663, -26.6677, 0.44 ) }
    dend_78 { pt3dadd( -26.2938, 61.8545, -27.0752, 0.66 ) }
    dend_78 { pt3dadd( -26.6931, 63.1239, -27.2985, 0.74 ) }
    dend_78 { pt3dadd( -26.8224, 63.9207, -27.3379, 0.96 ) }
    dend_78 { pt3dadd( -26.8346, 64.8121, -27.3084, 0.96 ) }
    dend_78 { pt3dadd( -26.6348, 66.7907, -27.2691, 0.52 ) }
    dend_78 { pt3dadd( -26.3585, 68.3951, -27.292, 0.59 ) }
    dend_78 { pt3dadd( -25.9927, 70.2147, -27.3908, 0.59 ) }
    dend_78 { pt3dadd( -25.8042, 71.2314, -27.4934, 0.96 ) }
    dend_78 { pt3dadd( -25.6594, 72.4044, -27.6722, 0.96 ) }
    dend_78 { pt3dadd( -25.614, 74.4873, -28.1235, 0.66 ) }
    dend_78 { pt3dadd( -25.8438, 75.9192, -28.5881, 0.66 ) }
    dend_78 { pt3dadd( -26.3504, 77.0789, -29.0716, 0.96 ) }
    dend_78 { pt3dadd( -26.9363, 77.7822, -29.3929, 1.03 ) }
    dend_78 { pt3dadd( -27.6841, 78.3501, -29.6979, 1.03 ) }
    dend_78 { pt3dadd( -28.6783, 78.8667, -30.0646, 1.03 ) }
    dend_78 { pt3dadd( -30.0181, 79.352, -30.5962, 0.74 ) }
    dend_78 { pt3dadd( -31.0725, 79.6507, -31.1205, 0.74 ) }
    dend_78 { pt3dadd( -31.776, 79.8113, -31.5472, 0.52 ) }
    dend_78 { pt3dadd( -33.3323, 80.0993, -32.6966, 0.52 ) }
    dend_78 { pt3dadd( -34.6494, 80.2922, -33.7868, 0.52 ) }
    dend_78 { pt3dadd( -35.9924, 80.4452, -34.9507, 1.11 ) }
    dend_78 { pt3dadd( -36.7227, 80.5108, -35.5629, 1.4 ) }
    dend_78 { pt3dadd( -37.5521, 80.5622, -36.1854, 1.4 ) }
    dend_78 { pt3dadd( -38.9696, 80.5984, -37.0693, 0.81 ) }
    dend_78 { pt3dadd( -39.8437, 80.6165, -37.4267, 0.59 ) }
    dend_78 { pt3dadd( -41.1598, 80.6791, -37.7078, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -42.482, 80.8013, -37.7841, 0.44 ) }
    dend_78 { pt3dadd( -43.8228, 81.0063, -37.7449, 0.74 ) }
    dend_78 { pt3dadd( -45.1041, 81.3483, -37.6446, 1.33 ) }
    dend_78 { pt3dadd( -46.6624, 82.0219, -37.5541, 0.88 ) }
    dend_78 { pt3dadd( -47.3531, 82.4724, -37.6507, 0.59 ) }
    dend_78 { pt3dadd( -47.7809, 82.8674, -37.8258, 0.59 ) }
    dend_78 { pt3dadd( -48.383, 83.5666, -38.266, 0.74 ) }
    dend_78 { pt3dadd( -49.1278, 84.5469, -39.0363, 0.96 ) }
    dend_78 { pt3dadd( -50.0894, 85.823, -40.2151, 0.59 ) }
    dend_78 { pt3dadd( -51.0845, 87.0689, -41.5257, 0.59 ) }
    dend_78 { pt3dadd( -51.6022, 87.6947, -42.18, 0.81 ) }
    dend_78 { pt3dadd( -52.2561, 88.4106, -42.8971, 0.96 ) }
    dend_78 { pt3dadd( -52.8829, 88.9914, -43.4339, 1.03 ) }
    dend_78 { pt3dadd( -53.9444, 89.8745, -44.1141, 0.66 ) }
    dend_78 { pt3dadd( -54.2695, 90.1544, -44.2829, 0.66 ) }
    dend_78 { pt3dadd( -55.1428, 91.0349, -44.7034, 0.81 ) }
    dend_78 { pt3dadd( -55.9133, 91.9881, -45.157, 0.81 ) }
    dend_78 { pt3dadd( -56.4991, 92.972, -45.6028, 0.66 ) }
    dend_78 { pt3dadd( -56.9764, 94.0197, -46.058, 0.66 ) }
    dend_78 { pt3dadd( -57.5705, 95.6494, -46.753, 0.52 ) }
    dend_78 { pt3dadd( -57.9104, 96.6669, -47.201, 0.81 ) }
    dend_78 { pt3dadd( -58.1604, 97.4256, -47.5494, 0.74 ) }
    dend_78 { pt3dadd( -58.765, 99.0535, -48.2882, 0.59 ) }
    dend_78 { pt3dadd( -59.134, 99.8492, -48.6192, 0.74 ) }
    dend_78 { pt3dadd( -59.627, 100.637, -48.9056, 0.96 ) }
    dend_78 { pt3dadd( -60.3884, 101.583, -49.1324, 0.96 ) }
    dend_78 { pt3dadd( -61.0547, 102.313, -49.2417, 0.74 ) }
    dend_78 { pt3dadd( -61.9771, 103.262, -49.3172, 1.03 ) }
    dend_78 { pt3dadd( -62.6428, 103.927, -49.2577, 1.25 ) }
    dend_78 { pt3dadd( -63.1098, 104.43, -49.1621, 0.81 ) }
    dend_78 { pt3dadd( -64.1006, 105.618, -48.8549, 0.59 ) }
    dend_78 { pt3dadd( -64.7044, 106.424, -48.6007, 0.66 ) }
    dend_78 { pt3dadd( -65.2054, 107.154, -48.346, 0.66 ) }
    dend_78 { pt3dadd( -66.5047, 109.177, -47.588, 0.88 ) }
    dend_78 { pt3dadd( -67.1635, 110.213, -47.1694, 1.11 ) }
    dend_78 { pt3dadd( -67.6163, 110.921, -46.8543, 1.03 ) }
    dend_78 { pt3dadd( -68.1673, 111.777, -46.4622, 1.25 ) }
    dend_78 { pt3dadd( -68.373, 112.095, -46.3032, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.67164, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.96263, 10.4291, -4.88699, 1.11 ) }
    dend_53 { pt3dadd( 5.56607, 11.034, -5.28967, 1.11 ) }
    dend_53 { pt3dadd( 6.52883, 12.0457, -5.93148, 1.11 ) }
    dend_53 { pt3dadd( 7.18918, 12.7744, -6.41465, 0.96 ) }
    dend_53 { pt3dadd( 8.28295, 13.8564, -7.12861, 1.55 ) }
    dend_53 { pt3dadd( 9.23425, 14.7213, -7.70322, 1.62 ) }
    dend_53 { pt3dadd( 9.79448, 15.1758, -8.01695, 1.62 ) }
    dend_53 { pt3dadd( 10.6603, 15.8062, -8.39808, 1.25 ) }
    dend_53 { pt3dadd( 12.1117, 16.754, -8.84365, 0.96 ) }
    dend_53 { pt3dadd( 14.3291, 18.0563, -9.24797, 0.88 ) }
    dend_53 { pt3dadd( 15.3699, 18.5855, -9.31114, 1.55 ) }
    dend_53 { pt3dadd( 16.5064, 19.0837, -9.28371, 1.84 ) }
    dend_53 { pt3dadd( 18.2109, 19.753, -9.15018, 1.11 ) }
    dend_53 { pt3dadd( 19.1057, 20.0891, -9.03304, 1.03 ) }
    dend_53 { pt3dadd( 20.107, 20.5039, -8.83803, 1.25 ) }
    dend_53 { pt3dadd( 21.0755, 21.0244, -8.63503, 0.88 ) }
    dend_53 { pt3dadd( 21.9687, 21.6199, -8.44861, 0.88 ) }
    dend_53 { pt3dadd( 22.8051, 22.2702, -8.27644, 0.88 ) }
    dend_53 { pt3dadd( 23.7872, 23.0795, -8.06753, 0.88 ) }
    dend_53 { pt3dadd( 24.6269, 23.8163, -7.79706, 0.96 ) }
    dend_53 { pt3dadd( 25.4959, 24.6416, -7.47237, 0.96 ) }
    dend_53 { pt3dadd( 26.2888, 25.4772, -7.11881, 0.81 ) }
    dend_53 { pt3dadd( 27.4557, 26.7824, -6.49577, 1.11 ) }
    dend_53 { pt3dadd( 28.2209, 27.6096, -6.01148, 1.4 ) }
    dend_53 { pt3dadd( 29.1025, 28.4394, -5.35642, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.33214, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.69448, 8.8656, 2.90288, 1.62 ) }
    dend_50 { pt3dadd( 5.82123, 9.50444, 3.91761, 1.25 ) }
    dend_50 { pt3dadd( 7.87104, 10.3961, 5.97555, 1.25 ) }
    dend_50 { pt3dadd( 8.95499, 10.8016, 7.13683, 1.25 ) }
    dend_50 { pt3dadd( 10.086, 11.0895, 8.49343, 1.92 ) }
    dend_50 { pt3dadd( 10.5646, 11.1685, 9.10292, 2.5 ) }
    dend_50 { pt3dadd( 11.6054, 11.1954, 10.5436, 2.5 ) }
    dend_50 { pt3dadd( 13.7582, 10.9428, 13.7473, 1.77 ) }
    dend_50 { pt3dadd( 15.2513, 10.4994, 15.9645, 0.96 ) }
    dend_50 { pt3dadd( 17.3581, 9.65548, 19.0852, 0.88 ) }
    dend_50 { pt3dadd( 17.9604, 9.38202, 19.9915, 0.88 ) }
    dend_50 { pt3dadd( 18.4356, 9.17473, 20.685, 1.4 ) }
    dend_50 { pt3dadd( 18.9052, 9.0044, 21.2912, 1.4 ) }
    dend_50 { pt3dadd( 20.6184, 8.638, 23.0263, 0.66 ) }
    dend_50 { pt3dadd( 21.3451, 8.67892, 23.606, 0.66 ) }
    dend_50 { pt3dadd( 23.0706, 9.33265, 24.6275, 0.88 ) }
    dend_50 { pt3dadd( 24.1549, 9.91291, 25.1814, 0.88 ) }
    dend_50 { pt3dadd( 25.5165, 10.7793, 25.7208, 0.74 ) }
    dend_50 { pt3dadd( 26.5315, 11.5128, 26.0249, 1.4 ) }
    dend_50 { pt3dadd( 27.6997, 12.4296, 26.2376, 2.06 ) }
    dend_50 { pt3dadd( 28.8501, 13.304, 26.327, 1.84 ) }
    dend_50 { pt3dadd( 30.2296, 14.304, 26.2485, 1.18 ) }
    dend_50 { pt3dadd( 31.6649, 15.2693, 26.205, 1.18 ) }
    dend_50 { pt3dadd( 32.2477, 15.6116, 26.2875, 1.03 ) }
    dend_50 { pt3dadd( 33.2219, 16.0712, 26.692, 1.03 ) }
    dend_50 { pt3dadd( 33.8666, 16.3203, 27.342, 0.59 ) }
    dend_50 { pt3dadd( 34.4651, 16.584, 28.3006, 0.59 ) }
    dend_50 { pt3dadd( 35.6379, 17.1943, 30.6893, 0.88 ) }
    dend_50 { pt3dadd( 37.0021, 18.0217, 33.8313, 1.62 ) }
    dend_50 { pt3dadd( 37.5883, 18.4273, 35.1976, 1.62 ) }
    dend_50 { pt3dadd( 38.9524, 19.45, 38.3576, 0.88 ) }
    dend_50 { pt3dadd( 39.5878, 19.9251, 39.7346, 0.88 ) }
    dend_50 { pt3dadd( 40.1739, 20.3781, 40.8734, 1.47 ) }
    dend_50 { pt3dadd( 40.5858, 20.7007, 41.5266, 1.47 ) }
    dend_50 { pt3dadd( 41.6451, 21.4669, 42.8, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 42.236, 21.8185, 43.3702, 0.59 ) }
    dend_50 { pt3dadd( 42.868, 22.1036, 43.8681, 0.59 ) }
    dend_50 { pt3dadd( 44.4096, 22.7227, 45.0967, 1.25 ) }
    dend_50 { pt3dadd( 46.834, 23.7292, 47.1183, 0.74 ) }
    dend_50 { pt3dadd( 47.5935, 24.1165, 47.8269, 0.29 ) }
    dend_50 { pt3dadd( 48.2693, 24.4912, 48.5429, 0.29 ) }
    dend_50 { pt3dadd( 48.6563, 24.7064, 49.01, 0.59 ) }
    dend_50 { pt3dadd( 49.6811, 25.2964, 50.2731, 1.11 ) }
    dend_50 { pt3dadd( 50.1989, 25.558, 50.8926, 1.11 ) }
    dend_50 { pt3dadd( 51.3102, 26.4903, 52.2231, 1.11 ) }
    dend_50 { pt3dadd( 51.938, 27.3386, 53.2806, 0.59 ) }
    dend_50 { pt3dadd( 51.9552, 24.9059, 53.4547, 0.59 ) }
    dend_50 { pt3dadd( 52.1702, 22.3975, 54.1022, 0.52 ) }
    dend_50 { pt3dadd( 52.3189, 20.6455, 54.5499, 0.59 ) }
    dend_50 { pt3dadd( 61.8726, 23.554, 63.0657, 0.59 ) }
    dend_50 { pt3dadd( 71.8922, 27.5778, 70.4708, 0.59 ) }
    dend_50 { pt3dadd( 80.1728, 33.4019, 78.657, 0.59 ) }
    dend_50 { pt3dadd( 88.3767, 40.4036, 85.8363, 0.59 ) }
    dend_50 { pt3dadd( 97.9159, 47.9168, 90.2662, 0.59 ) }
    dend_50 { pt3dadd( 106.51, 55.8245, 95.7456, 0.59 ) }
    dend_50 { pt3dadd( 115.578, 62.339, 102.373, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.04997, 6.41645, 1.96216, 1.69 ) }
    dend_49 { pt3dadd( -4.63826, 6.71784, 2.44718, 1.4 ) }
    dend_49 { pt3dadd( -5.04733, 6.91776, 2.88607, 1.03 ) }
    dend_49 { pt3dadd( -5.60257, 7.20924, 3.55351, 0.88 ) }
    dend_49 { pt3dadd( -5.98343, 7.42893, 4.04197, 0.88 ) }
    dend_49 { pt3dadd( -6.45698, 7.69311, 4.74024, 0.59 ) }
    dend_49 { pt3dadd( -6.88217, 7.93214, 5.44003, 0.44 ) }
    dend_49 { pt3dadd( -7.65784, 8.37269, 6.81574, 0.37 ) }
    dend_49 { pt3dadd( -7.92376, 8.52714, 7.30746, 0.37 ) }
    dend_49 { pt3dadd( -8.35545, 8.78563, 8.12777, 0.37 ) }
    dend_49 { pt3dadd( -9.36739, 9.43187, 10.1571, 1.03 ) }
    dend_49 { pt3dadd( -9.59641, 9.59448, 10.6343, 1.62 ) }
    dend_49 { pt3dadd( -16.1274, 10.4942, 16.6591, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.13936, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -5.41236, -2.12503, -14.578, 0.74 ) }
    dend_44 { pt3dadd( -7.21749, -3.23865, -14.5683, 1.03 ) }
    dend_44 { pt3dadd( -8.79636, -4.19354, -14.5924, 1.25 ) }
    dend_44 { pt3dadd( -10.0589, -4.96846, -14.6256, 1.62 ) }
    dend_44 { pt3dadd( -11.0934, -5.59276, -14.6581, 1.84 ) }
    dend_44 { pt3dadd( -12.4501, -6.3632, -14.6671, 1.84 ) }
    dend_44 { pt3dadd( -13.6517, -6.96524, -14.6126, 1.99 ) }
    dend_44 { pt3dadd( -14.9144, -7.51039, -14.4923, 2.21 ) }
    dend_44 { pt3dadd( -16.3897, -8.03915, -14.2789, 2.65 ) }
    dend_44 { pt3dadd( -17.4362, -8.35267, -14.1112, 2.5 ) }
    dend_44 { pt3dadd( -19.2045, -8.81603, -13.8425, 1.77 ) }
    dend_44 { pt3dadd( -21.0774, -9.28358, -13.6183, 1.33 ) }
    dend_44 { pt3dadd( -22.3507, -9.60993, -13.5581, 1.18 ) }
    dend_44 { pt3dadd( -23.8604, -10.0119, -13.654, 1.11 ) }
    dend_44 { pt3dadd( -24.9332, -10.3339, -13.9572, 1.11 ) }
    dend_44 { pt3dadd( -26.0385, -10.7123, -14.6323, 1.11 ) }
    dend_44 { pt3dadd( -27.0944, -11.1041, -15.6682, 1.4 ) }
    dend_44 { pt3dadd( -28.1454, -11.4725, -17.0073, 1.03 ) }
    dend_44 { pt3dadd( -29.0305, -11.7475, -18.3048, 0.88 ) }
    dend_44 { pt3dadd( -30.3477, -12.0628, -20.4303, 0.88 ) }
    dend_44 { pt3dadd( -31.771, -12.2818, -22.9407, 1.47 ) }
    dend_44 { pt3dadd( -32.8477, -12.3795, -24.9315, 1.77 ) }
    dend_44 { pt3dadd( -34.0529, -12.3987, -27.2477, 1.84 ) }
    dend_44 { pt3dadd( -34.4792, -12.3742, -28.0883, 2.06 ) }
    dend_44 { pt3dadd( -35.2513, -12.2814, -29.6521, 1.77 ) }
    dend_44 { pt3dadd( -36.4407, -12.042, -32.0017, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.30056, -1.82028, 9.59513, 2.06 ) }
    dend_41 { pt3dadd( -7.00195, -1.78524, 9.93785, 2.06 ) }
    dend_41 { pt3dadd( -8.82192, -1.81154, 10.7842, 1.84 ) }
    dend_41 { pt3dadd( -9.83513, -1.90035, 11.2417, 1.84 ) }
    dend_41 { pt3dadd( -10.6102, -2.02371, 11.5879, 1.99 ) }
    dend_41 { pt3dadd( -12.005, -2.35666, 12.2093, 1.55 ) }
    dend_41 { pt3dadd( -13.1398, -2.75228, 12.7021, 1.03 ) }
    dend_41 { pt3dadd( -14.0572, -3.17605, 13.0698, 0.88 ) }
    dend_41 { pt3dadd( -14.9479, -3.70657, 13.3281, 1.18 ) }
    dend_41 { pt3dadd( -15.6677, -4.18992, 13.4853, 1.18 ) }
    dend_41 { pt3dadd( -16.2195, -4.59466, 13.5766, 1.47 ) }
    dend_41 { pt3dadd( -17.0384, -5.2561, 13.648, 1.25 ) }
    dend_41 { pt3dadd( -17.8447, -5.93469, 13.7544, 1.03 ) }
    dend_41 { pt3dadd( -18.5717, -6.5393, 13.9172, 1.62 ) }
    dend_41 { pt3dadd( -19.3, -7.1311, 14.1877, 1.69 ) }
    dend_41 { pt3dadd( -19.8615, -7.56021, 14.4767, 1.33 ) }
    dend_41 { pt3dadd( -20.8645, -8.26588, 15.1592, 1.03 ) }
    dend_41 { pt3dadd( -22.0998, -8.99362, 16.2339, 0.88 ) }
    dend_41 { pt3dadd( -22.9636, -9.38039, 17.1909, 1.11 ) }
    dend_41 { pt3dadd( -23.712, -9.57334, 18.1737, 1.33 ) }
    dend_41 { pt3dadd( -24.1786, -9.59292, 18.8644, 1.33 ) }
    dend_41 { pt3dadd( -24.6387, -9.4794, 19.5779, 1.18 ) }
    dend_41 { pt3dadd( -25.1862, -9.17997, 20.4026, 0.88 ) }
    dend_41 { pt3dadd( -25.9647, -8.62408, 21.4089, 1.18 ) }
    dend_41 { pt3dadd( -26.4503, -8.28924, 21.9553, 1.33 ) }
    dend_41 { pt3dadd( -26.8783, -8.06997, 22.3816, 1.33 ) }
    dend_41 { pt3dadd( -27.6162, -7.86556, 23.0727, 0.59 ) }
    dend_41 { pt3dadd( -28.6283, -7.91651, 23.9329, 0.52 ) }
    dend_41 { pt3dadd( -29.1418, -8.21307, 24.3083, 0.59 ) }
    dend_41 { pt3dadd( -29.8577, -9.13691, 24.8735, 0.59 ) }
    dend_41 { pt3dadd( -30.5472, -10.4073, 25.5609, 0.59 ) }
    dend_41 { pt3dadd( -30.9047, -11.1648, 25.9624, 1.03 ) }
    dend_41 { pt3dadd( -31.3139, -12.1106, 26.5098, 1.03 ) }
    dend_41 { pt3dadd( -31.6523, -12.8973, 27.0109, 1.03 ) }
    dend_41 { pt3dadd( -32.2902, -14.2116, 28.0329, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -32.8948, -15.0787, 29.0006, 0.66 ) }
    dend_41 { pt3dadd( -33.4042, -15.4788, 29.745, 0.66 ) }
    dend_41 { pt3dadd( -34.3018, -15.81, 30.9245, 0.74 ) }
    dend_41 { pt3dadd( -34.9364, -15.915, 31.7028, 0.81 ) }
    dend_41 { pt3dadd( -35.5267, -15.9539, 32.3998, 0.52 ) }
    dend_41 { pt3dadd( -36.5966, -15.9687, 33.5636, 0.52 ) }
    dend_41 { pt3dadd( -37.0549, -16.0003, 34.067, 0.44 ) }
    dend_41 { pt3dadd( -37.7219, -16.2789, 34.9541, 0.37 ) }
    dend_41 { pt3dadd( -38.0427, -16.7104, 35.4742, 0.37 ) }
    dend_41 { pt3dadd( -38.3403, -17.3651, 36.0058, 1.11 ) }
    dend_41 { pt3dadd( -38.5943, -18.0367, 36.4212, 1.4 ) }
    dend_41 { pt3dadd( -38.839, -18.9211, 36.869, 1.4 ) }
    dend_41 { pt3dadd( -39.1396, -20.2639, 37.4863, 0.81 ) }
    dend_41 { pt3dadd( -39.3421, -21.2751, 37.8996, 0.29 ) }
    dend_41 { pt3dadd( -39.5226, -21.9438, 38.1843, 0.29 ) }
    dend_41 { pt3dadd( -39.7358, -22.4806, 38.4277, 0.29 ) }
    dend_41 { pt3dadd( -45.6049, -26.2439, 44.9546, 0.29 ) }
    dend_41 { pt3dadd( -52.7075, -30.1012, 50.0343, 0.29 ) }
    dend_41 { pt3dadd( -59.2057, -33.95, 55.8737, 0.29 ) }
    dend_41 { pt3dadd( -65.2359, -36.6071, 62.8415, 0.29 ) }
    dend_41 { pt3dadd( -71.2806, -39.3822, 69.7456, 0.29 ) }
    dend_41 { pt3dadd( -78.2352, -43.503, 74.8008, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.18175, -6.422, 6.97568, 1.77 ) }
    dend_32 { pt3dadd( -2.15651, -8.05181, 7.17936, 1.47 ) }
    dend_32 { pt3dadd( -2.1426, -9.69202, 7.36366, 1.25 ) }
    dend_32 { pt3dadd( -2.16636, -10.945, 7.48818, 1.62 ) }
    dend_32 { pt3dadd( -2.21384, -12.0022, 7.58201, 1.92 ) }
    dend_32 { pt3dadd( -2.27894, -12.9244, 7.66507, 2.14 ) }
    dend_32 { pt3dadd( -2.39688, -14.0725, 7.76647, 2.14 ) }
    dend_32 { pt3dadd( -2.64003, -15.6663, 7.90731, 1.55 ) }
    dend_32 { pt3dadd( -2.94954, -17.1652, 8.03055, 1.33 ) }
    dend_32 { pt3dadd( -3.22983, -18.3009, 8.13433, 1.55 ) }
    dend_32 { pt3dadd( -3.438, -19.0182, 8.20234, 1.92 ) }
    dend_32 { pt3dadd( -3.7338, -19.8882, 8.31623, 2.21 ) }
    dend_32 { pt3dadd( -3.95535, -20.4616, 8.40857, 2.5 ) }
    dend_32 { pt3dadd( -4.2144, -21.1383, 8.54115, 2.5 ) }
    dend_32 { pt3dadd( -4.45253, -21.8848, 8.69948, 2.36 ) }
    dend_32 { pt3dadd( -4.7087, -22.9089, 8.92281, 1.69 ) }
    dend_32 { pt3dadd( -4.95494, -24.2518, 9.20407, 1.25 ) }
    dend_32 { pt3dadd( -5.08019, -25.5066, 9.45761, 1.4 ) }
    dend_32 { pt3dadd( -5.08549, -26.62, 9.65519, 1.62 ) }
    dend_32 { pt3dadd( -4.95672, -27.9791, 9.86424, 2.06 ) }
    dend_32 { pt3dadd( -4.79995, -28.8167, 9.98322, 2.36 ) }
    dend_32 { pt3dadd( -4.64137, -29.3597, 10.0503, 2.36 ) }
    dend_32 { pt3dadd( -4.25014, -30.3946, 10.158, 2.14 ) }
    dend_32 { pt3dadd( -3.61308, -31.8469, 10.2967, 1.62 ) }
    dend_32 { pt3dadd( -3.05092, -33.0701, 10.3995, 1.25 ) }
    dend_32 { pt3dadd( -2.4743, -34.332, 10.5193, 1.03 ) }
    dend_32 { pt3dadd( -1.85883, -35.7509, 10.6833, 1.03 ) }
    dend_32 { pt3dadd( -1.40037, -36.9391, 10.8513, 1.03 ) }
    dend_32 { pt3dadd( -0.901241, -38.4771, 11.1255, 1.03 ) }
    dend_32 { pt3dadd( -0.683593, -39.393, 11.3253, 0.96 ) }
    dend_32 { pt3dadd( -0.61757, -40.1167, 11.5085, 0.96 ) }
    dend_32 { pt3dadd( -0.707176, -40.7618, 11.6916, 0.96 ) }
    dend_32 { pt3dadd( -1.11922, -41.6113, 11.9963, 0.96 ) }
    dend_32 { pt3dadd( -1.5222, -42.073, 12.188, 0.88 ) }
    dend_32 { pt3dadd( -1.94495, -42.4142, 12.3381, 1.18 ) }
    dend_32 { pt3dadd( -2.6274, -42.888, 12.5296, 1.18 ) }
    dend_32 { pt3dadd( -3.28848, -43.3209, 12.6992, 1.33 ) }
    dend_32 { pt3dadd( -4.04966, -43.8119, 12.9108, 1.33 ) }
    dend_32 { pt3dadd( -4.70409, -44.24, 13.1158, 1.4 ) }
    dend_32 { pt3dadd( -5.40565, -44.7283, 13.3692, 1.55 ) }
    dend_32 { pt3dadd( -6.07765, -45.2454, 13.6675, 1.55 ) }
    dend_32 { pt3dadd( -6.83827, -45.9519, 14.0959, 1.84 ) }
    dend_32 { pt3dadd( -7.29888, -46.4678, 14.3997, 2.14 ) }
    dend_32 { pt3dadd( -7.75003, -47.0897, 14.7257, 1.99 ) }
    dend_32 { pt3dadd( -8.37925, -48.2131, 15.2468, 0.88 ) }
    dend_32 { pt3dadd( -8.80892, -49.2505, 15.6564, 0.88 ) }
    dend_32 { pt3dadd( -9.17116, -50.476, 16.0651, 0.81 ) }
    dend_32 { pt3dadd( -9.3739, -51.5594, 16.3425, 0.74 ) }
    dend_32 { pt3dadd( -9.5621, -52.9273, 16.6471, 0.74 ) }
    dend_32 { pt3dadd( -9.65434, -54.2052, 16.89, 1.03 ) }
    dend_32 { pt3dadd( -9.65074, -55.3534, 17.046, 1.4 ) }
    dend_32 { pt3dadd( -9.60964, -56.0678, 17.1032, 1.69 ) }
    dend_32 { pt3dadd( -9.5246, -56.8687, 17.1258, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.84328, -10.6931, -2.32159, 3.39 ) }
    dend_0 { pt3dadd( 2.16698, -11.6561, -2.46011, 3.02 ) }
    dend_0 { pt3dadd( 2.49474, -12.6312, -2.60037, 3.02 ) }
    dend_0 { pt3dadd( 2.92572, -13.9134, -2.7848, 3.02 ) }
    dend_0 { pt3dadd( 3.38868, -15.2907, -2.98292, 3.24 ) }
    dend_0 { pt3dadd( 3.73781, -16.3063, -3.14461, 3.54 ) }
    dend_0 { pt3dadd( 4.13418, -17.4006, -3.35963, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -68.373, 112.095, -46.3032, 0.44 ) }
    dend_88 { pt3dadd( -69.7012, 113.347, -47.1744, 0.44 ) }
    dend_88 { pt3dadd( -70.3011, 113.962, -47.5534, 0.37 ) }
    dend_88 { pt3dadd( -70.574, 114.308, -47.6877, 0.66 ) }
    dend_88 { pt3dadd( -70.997, 114.942, -47.8582, 0.66 ) }
    dend_88 { pt3dadd( -71.4031, 115.661, -47.9949, 0.59 ) }
    dend_88 { pt3dadd( -71.6535, 116.204, -48.0728, 0.81 ) }
    dend_88 { pt3dadd( -71.8519, 116.887, -48.0763, 0.81 ) }
    dend_88 { pt3dadd( -72.0401, 118.461, -48.0407, 0.52 ) }
    dend_88 { pt3dadd( -71.9907, 119.205, -48.0246, 0.52 ) }
    dend_88 { pt3dadd( -71.6982, 120.347, -48.0366, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -71.2199, 121.425, -48.1152, 0.44 ) }
    dend_88 { pt3dadd( -70.5647, 122.454, -48.27, 0.74 ) }
    dend_88 { pt3dadd( -69.979, 123.167, -48.4236, 0.74 ) }
    dend_88 { pt3dadd( -69.0052, 124.143, -48.7245, 0.44 ) }
    dend_88 { pt3dadd( -68.2635, 124.821, -48.927, 0.59 ) }
    dend_88 { pt3dadd( -67.5168, 125.484, -49.1354, 0.59 ) }
    dend_88 { pt3dadd( -66.7681, 126.172, -49.3735, 0.59 ) }
    dend_88 { pt3dadd( -66.1831, 126.779, -49.6053, 0.37 ) }
    dend_88 { pt3dadd( -65.7572, 127.263, -49.8032, 0.37 ) }
    dend_88 { pt3dadd( -65.1155, 128.028, -50.1299, 0.59 ) }
    dend_88 { pt3dadd( -64.482, 128.76, -50.4631, 0.37 ) }
    dend_88 { pt3dadd( -63.9092, 129.391, -50.7615, 0.81 ) }
    dend_88 { pt3dadd( -63.3093, 130.028, -51.0793, 0.81 ) }
    dend_88 { pt3dadd( -62.2123, 131.199, -51.6979, 0.44 ) }
    dend_88 { pt3dadd( -61.3696, 132.122, -52.1944, 0.44 ) }
    dend_88 { pt3dadd( -60.7764, 132.76, -52.5742, 0.81 ) }
    dend_88 { pt3dadd( -60.175, 133.413, -52.9728, 0.44 ) }
    dend_88 { pt3dadd( -59.8493, 133.787, -53.212, 0.59 ) }
    dend_88 { pt3dadd( -59.0742, 134.744, -53.867, 0.59 ) }
    dend_88 { pt3dadd( -58.6154, 135.429, -54.4218, 0.44 ) }
    dend_88 { pt3dadd( -58.1436, 136.383, -55.2493, 0.44 ) }
    dend_88 { pt3dadd( -57.8563, 137.198, -56.0705, 0.96 ) }
    dend_88 { pt3dadd( -57.7681, 137.579, -56.5184, 1.18 ) }
    dend_88 { pt3dadd( -57.7326, 137.928, -56.9821, 1.18 ) }
    dend_88 { pt3dadd( -57.8093, 138.837, -58.65, 0.44 ) }
    dend_88 { pt3dadd( -57.981, 139.477, -59.9982, 0.37 ) }
    dend_88 { pt3dadd( -58.177, 139.977, -61.3993, 0.66 ) }
    dend_88 { pt3dadd( -58.275, 140.18, -62.059, 0.66 ) }
    dend_88 { pt3dadd( -58.4406, 140.478, -63.1148, 0.66 ) }
    dend_88 { pt3dadd( -59.0189, 141.565, -67.3284, 0.44 ) }
    dend_88 { pt3dadd( -59.1104, 141.741, -68.0801, 0.44 ) }
    dend_88 { pt3dadd( -59.5515, 142.652, -72.0796, 0.29 ) }
    dend_88 { pt3dadd( -59.6435, 142.868, -72.9277, 0.29 ) }
    dend_88 { pt3dadd( -59.7404, 143.147, -73.892, 0.29 ) }
    dend_88 { pt3dadd( -59.9323, 143.84, -75.9303, 0.74 ) }
    dend_88 { pt3dadd( -60.1394, 144.839, -78.2249, 0.44 ) }
    dend_88 { pt3dadd( -60.1774, 145.104, -78.7217, 0.44 ) }
    dend_88 { pt3dadd( -60.263, 145.787, -79.6296, 0.37 ) }
    dend_88 { pt3dadd( -60.3486, 146.511, -80.4314, 0.88 ) }
    dend_88 { pt3dadd( -60.5169, 147.738, -81.4398, 0.29 ) }
    dend_88 { pt3dadd( -60.623, 148.245, -81.7337, 0.52 ) }
    dend_88 { pt3dadd( -60.8854, 149.172, -82.1685, 0.15 ) }
    dend_88 { pt3dadd( -61.1649, 149.987, -82.5753, 0.22 ) }
    dend_88 { pt3dadd( -61.6445, 151.26, -83.2198, 0.22 ) }
    dend_88 { pt3dadd( -62.1227, 152.367, -83.7534, 0.22 ) }
    dend_88 { pt3dadd( -62.5816, 153.407, -84.2209, 0.22 ) }
    dend_88 { pt3dadd( -63.2961, 154.928, -84.9635, 1.47 ) }
    dend_88 { pt3dadd( -63.8391, 156.042, -85.5699, 0.66 ) }
    dend_88 { pt3dadd( -64.1717, 156.757, -85.9765, 0.96 ) }
    dend_88 { pt3dadd( -64.6737, 157.944, -86.6418, 0.22 ) }
    dend_88 { pt3dadd( -64.9899, 158.748, -87.0309, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -68.373, 112.095, -46.3032, 0.37 ) }
    dend_79 { pt3dadd( -68.1703, 113.604, -46.0873, 0.37 ) }
    dend_79 { pt3dadd( -67.9974, 114.346, -46.0598, 0.37 ) }
    dend_79 { pt3dadd( -67.8443, 115.052, -45.9612, 0.37 ) }
    dend_79 { pt3dadd( -67.6888, 116.118, -45.7152, 0.74 ) }
    dend_79 { pt3dadd( -67.6401, 117.024, -45.459, 0.29 ) }
    dend_79 { pt3dadd( -67.6986, 118.096, -45.1226, 0.29 ) }
    dend_79 { pt3dadd( -67.7477, 118.6, -44.954, 0.52 ) }
    dend_79 { pt3dadd( -67.9314, 119.722, -44.3933, 0.44 ) }
    dend_79 { pt3dadd( -68.0801, 120.441, -43.9546, 0.29 ) }
    dend_79 { pt3dadd( -68.2085, 121.07, -43.5439, 0.29 ) }
    dend_79 { pt3dadd( -68.3266, 121.769, -43.0625, 0.29 ) }
    dend_79 { pt3dadd( -68.4448, 122.944, -42.2867, 0.44 ) }
    dend_79 { pt3dadd( -68.4826, 123.894, -41.6812, 0.44 ) }
    dend_79 { pt3dadd( -68.4128, 125.094, -41.0068, 0.52 ) }
    dend_79 { pt3dadd( -68.2475, 126.045, -40.4985, 0.37 ) }
    dend_79 { pt3dadd( -68.0305, 126.801, -40.1073, 0.37 ) }
    dend_79 { pt3dadd( -67.7079, 127.609, -39.7289, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 29.1025, 28.4394, -5.35642, 0.29 ) }
    dend_69 { pt3dadd( 29.6168, 28.4909, -4.056, 0.29 ) }
    dend_69 { pt3dadd( 30.1303, 28.5448, -2.97149, 0.59 ) }
    dend_69 { pt3dadd( 30.6598, 28.5743, -2.01295, 0.74 ) }
    dend_69 { pt3dadd( 30.9581, 28.5878, -1.5208, 0.37 ) }
    dend_69 { pt3dadd( 31.4061, 28.6346, -0.727525, 0.37 ) }
    dend_69 { pt3dadd( 31.6479, 28.6748, -0.262909, 0.66 ) }
    dend_69 { pt3dadd( 31.8233, 28.7363, 0.0928912, 0.96 ) }
    dend_69 { pt3dadd( 32.0387, 28.8895, 0.735723, 1.25 ) }
    dend_69 { pt3dadd( 32.3032, 29.2341, 1.91238, 0.37 ) }
    dend_69 { pt3dadd( 32.4987, 29.6657, 3.1141, 0.37 ) }
    dend_69 { pt3dadd( 32.5558, 29.8355, 3.5284, 0.37 ) }
    dend_69 { pt3dadd( 32.6957, 30.2076, 4.37063, 0.74 ) }
    dend_69 { pt3dadd( 33.0057, 30.8039, 5.66501, 0.66 ) }
    dend_69 { pt3dadd( 33.3124, 31.2341, 6.5538, 0.52 ) }
    dend_69 { pt3dadd( 33.6062, 31.4853, 7.08183, 0.66 ) }
    dend_69 { pt3dadd( 34.0205, 31.6959, 7.56847, 0.66 ) }
    dend_69 { pt3dadd( 34.6239, 31.9061, 8.11245, 0.37 ) }
    dend_69 { pt3dadd( 35.3585, 32.0652, 8.6335, 0.52 ) }
    dend_69 { pt3dadd( 35.7794, 32.1137, 8.89013, 0.52 ) }
    dend_69 { pt3dadd( 36.5204, 32.1663, 9.32384, 0.66 ) }
    dend_69 { pt3dadd( 36.9386, 32.18, 9.56382, 0.88 ) }
    dend_69 { pt3dadd( 37.4992, 32.1976, 9.8692, 0.88 ) }
    dend_69 { pt3dadd( 38.1415, 32.2477, 10.2488, 0.66 ) }
    dend_69 { pt3dadd( 38.9405, 32.3581, 10.7295, 0.29 ) }
    dend_69 { pt3dadd( 39.6404, 32.4968, 11.136, 0.29 ) }
    dend_69 { pt3dadd( 40.701, 32.8007, 11.7157, 0.88 ) }
    dend_69 { pt3dadd( 40.9947, 32.8982, 11.8717, 0.88 ) }
    dend_69 { pt3dadd( 42.1747, 33.3294, 12.4676, 0.29 ) }
    dend_69 { pt3dadd( 43.0902, 33.6931, 12.8932, 0.29 ) }
    dend_69 { pt3dadd( 43.9709, 34.0667, 13.2677, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 45.0224, 34.534, 13.6873, 0.29 ) }
    dend_69 { pt3dadd( 45.7878, 34.8785, 13.9876, 0.29 ) }
    dend_69 { pt3dadd( 46.5009, 35.1794, 14.2518, 0.81 ) }
    dend_69 { pt3dadd( 47.0699, 35.3962, 14.429, 0.81 ) }
    dend_69 { pt3dadd( 47.5758, 35.5794, 14.5842, 0.81 ) }
    dend_69 { pt3dadd( 48.3438, 35.8389, 14.8192, 0.59 ) }
    dend_69 { pt3dadd( 49.2381, 36.1059, 15.1019, 0.29 ) }
    dend_69 { pt3dadd( 50.0238, 36.3714, 15.3557, 0.81 ) }
    dend_69 { pt3dadd( 50.7979, 36.6376, 15.6129, 0.22 ) }
    dend_69 { pt3dadd( 51.4855, 36.8605, 15.843, 0.22 ) }
    dend_69 { pt3dadd( 51.924, 36.9824, 15.9841, 0.52 ) }
    dend_69 { pt3dadd( 52.5386, 37.1167, 16.1471, 0.22 ) }
    dend_69 { pt3dadd( 58.0302, 39.4686, 21.1773, 0.22 ) }
    dend_69 { pt3dadd( 62.9137, 42.1138, 26.6626, 0.22 ) }
    dend_69 { pt3dadd( 68.9652, 43.321, 31.4655, 0.22 ) }
    dend_69 { pt3dadd( 75.0357, 43.2073, 36.3775, 0.22 ) }
    dend_69 { pt3dadd( 80.9987, 44.0576, 41.3634, 0.22 ) }
    dend_69 { pt3dadd( 85.4868, 44.2339, 47.7528, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 29.1025, 28.4394, -5.35642, 0.81 ) }
    dend_54 { pt3dadd( 30.4131, 28.543, -4.92905, 0.81 ) }
    dend_54 { pt3dadd( 31.0341, 28.5259, -4.76263, 1.03 ) }
    dend_54 { pt3dadd( 32.6831, 28.411, -4.48101, 0.96 ) }
    dend_54 { pt3dadd( 33.5864, 28.3567, -4.37574, 0.96 ) }
    dend_54 { pt3dadd( 34.6396, 28.3389, -4.28745, 0.59 ) }
    dend_54 { pt3dadd( 35.3723, 28.3641, -4.24321, 0.66 ) }
    dend_54 { pt3dadd( 36.3547, 28.4045, -4.21627, 0.66 ) }
    dend_54 { pt3dadd( 37.5251, 28.5479, -4.25549, 0.59 ) }
    dend_54 { pt3dadd( 38.1379, 28.72, -4.34712, 0.81 ) }
    dend_54 { pt3dadd( 38.9123, 29.0711, -4.48612, 0.96 ) }
    dend_54 { pt3dadd( 39.6249, 29.4822, -4.61999, 1.25 ) }
    dend_54 { pt3dadd( 40.1401, 29.7923, -4.70989, 1.4 ) }
    dend_54 { pt3dadd( 40.7883, 30.1686, -4.79363, 1.4 ) }
    dend_54 { pt3dadd( 41.8486, 30.6856, -4.86988, 0.59 ) }
    dend_54 { pt3dadd( 42.2806, 30.8237, -4.89007, 0.59 ) }
    dend_54 { pt3dadd( 43.1809, 30.9427, -4.90973, 0.59 ) }
    dend_54 { pt3dadd( 44.1658, 30.9302, -4.90935, 1.03 ) }
    dend_54 { pt3dadd( 44.8662, 30.8519, -4.89536, 1.18 ) }
    dend_54 { pt3dadd( 45.4763, 30.7355, -4.84786, 1.18 ) }
    dend_54 { pt3dadd( 46.4629, 30.4904, -4.71283, 0.74 ) }
    dend_54 { pt3dadd( 47.4127, 30.2326, -4.51926, 0.66 ) }
    dend_54 { pt3dadd( 47.8643, 30.1119, -4.40768, 0.96 ) }
    dend_54 { pt3dadd( 48.4536, 29.9793, -4.25795, 0.96 ) }
    dend_54 { pt3dadd( 49.5107, 29.7907, -3.99888, 1.03 ) }
    dend_54 { pt3dadd( 50.0098, 29.7327, -3.87847, 1.03 ) }
    dend_54 { pt3dadd( 51.3974, 29.7205, -3.56889, 0.59 ) }
    dend_54 { pt3dadd( 52.1495, 29.7939, -3.42285, 0.59 ) }
    dend_54 { pt3dadd( 53.4907, 30.0216, -3.21075, 0.59 ) }
    dend_54 { pt3dadd( 54.1465, 30.177, -3.13478, 0.81 ) }
    dend_54 { pt3dadd( 54.7585, 30.375, -3.09897, 0.81 ) }
    dend_54 { pt3dadd( 56.004, 30.8714, -3.09779, 0.37 ) }
    dend_54 { pt3dadd( 56.787, 31.2084, -3.1462, 0.66 ) }
    dend_54 { pt3dadd( 57.4818, 31.4829, -3.19526, 0.74 ) }
    dend_54 { pt3dadd( 57.9176, 31.6283, -3.23528, 0.74 ) }
    dend_54 { pt3dadd( 58.7695, 31.8265, -3.33035, 0.74 ) }
    dend_54 { pt3dadd( 59.6827, 31.92, -3.44529, 0.52 ) }
    dend_54 { pt3dadd( 60.9529, 31.8906, -3.61645, 0.74 ) }
    dend_54 { pt3dadd( 61.9098, 31.8116, -3.72396, 0.88 ) }
    dend_54 { pt3dadd( 62.4347, 31.7598, -3.75397, 0.96 ) }
    dend_54 { pt3dadd( 62.9569, 31.7142, -3.75082, 1.18 ) }
    dend_54 { pt3dadd( 63.7519, 31.6697, -3.68909, 1.18 ) }
    dend_54 { pt3dadd( 64.3573, 31.6868, -3.58382, 0.66 ) }
    dend_54 { pt3dadd( 65.4327, 31.8905, -3.27439, 0.59 ) }
    dend_54 { pt3dadd( 66.1413, 32.128, -2.94393, 0.59 ) }
    dend_54 { pt3dadd( 66.6118, 32.3315, -2.66561, 0.74 ) }
    dend_54 { pt3dadd( 66.9803, 32.5243, -2.40763, 0.74 ) }
    dend_54 { pt3dadd( 67.3441, 32.7369, -2.11978, 0.74 ) }
    dend_54 { pt3dadd( 68.0392, 33.1693, -1.50819, 0.59 ) }
    dend_54 { pt3dadd( 68.9619, 33.7734, -0.613023, 0.96 ) }
    dend_54 { pt3dadd( 69.4016, 34.0541, -0.181662, 1.25 ) }
    dend_54 { pt3dadd( 69.6408, 34.1998, 0.0698397, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 115.578, 62.339, 102.373, 0.29 ) }
    dend_52 { pt3dadd( 120.212, 65.16, 107.291, 0.29 ) }
    dend_52 { pt3dadd( 125.603, 67.5866, 111.608, 0.29 ) }
    dend_52 { pt3dadd( 131.387, 70.2602, 115.162, 0.29 ) }
    dend_52 { pt3dadd( 136.233, 73.1649, 119.806, 0.29 ) }
    dend_52 { pt3dadd( 141.029, 76.7781, 123.917, 0.29 ) }
    dend_52 { pt3dadd( 144.913, 81.1817, 128.18, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 115.578, 62.339, 102.373, 0.29 ) }
    dend_51 { pt3dadd( 121.334, 64.9518, 107.321, 0.29 ) }
    dend_51 { pt3dadd( 126.357, 69.0632, 111.939, 0.29 ) }
    dend_51 { pt3dadd( 130.476, 73.8894, 116.712, 0.29 ) }
    dend_51 { pt3dadd( 134.875, 77.535, 122.317, 0.29 ) }
    dend_51 { pt3dadd( 139.092, 81.6138, 127.734, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -36.4407, -12.042, -32.0017, 0.74 ) }
    dend_46 { pt3dadd( -38.088, -13.4263, -32.5202, 0.74 ) }
    dend_46 { pt3dadd( -38.9944, -14.0029, -32.7362, 0.74 ) }
    dend_46 { pt3dadd( -39.7752, -14.3906, -32.9146, 0.74 ) }
    dend_46 { pt3dadd( -41.045, -14.7676, -33.317, 0.66 ) }
    dend_46 { pt3dadd( -41.9894, -14.904, -33.6881, 0.66 ) }
    dend_46 { pt3dadd( -43.0018, -14.9713, -34.1276, 0.59 ) }
    dend_46 { pt3dadd( -43.7168, -14.8945, -34.4201, 1.25 ) }
    dend_46 { pt3dadd( -44.3057, -14.7788, -34.6874, 1.25 ) }
    dend_46 { pt3dadd( -46.1093, -14.388, -35.5842, 0.66 ) }
    dend_46 { pt3dadd( -47.0033, -14.2211, -36.0587, 0.66 ) }
    dend_46 { pt3dadd( -47.4781, -14.1947, -36.335, 0.96 ) }
    dend_46 { pt3dadd( -48.1655, -14.2902, -36.7624, 0.96 ) }
    dend_46 { pt3dadd( -48.6348, -14.465, -37.1899, 0.96 ) }
    dend_46 { pt3dadd( -49.3323, -14.9623, -38.2829, 0.74 ) }
    dend_46 { pt3dadd( -49.6928, -15.3626, -39.1401, 0.52 ) }
    dend_46 { pt3dadd( -50.0485, -15.8488, -40.2172, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -50.2756, -16.2017, -41.0166, 1.03 ) }
    dend_46 { pt3dadd( -51.0963, -17.6028, -44.2874, 1.25 ) }
    dend_46 { pt3dadd( -51.6527, -18.5828, -46.6597, 0.66 ) }
    dend_46 { pt3dadd( -51.9313, -19.0492, -47.8306, 0.66 ) }
    dend_46 { pt3dadd( -52.1115, -19.2866, -48.4421, 1.11 ) }
    dend_46 { pt3dadd( -52.2807, -19.4358, -48.8055, 1.33 ) }
    dend_46 { pt3dadd( -52.5349, -19.6048, -49.1119, 1.18 ) }
    dend_46 { pt3dadd( -52.9479, -19.8506, -49.2881, 1.18 ) }
    dend_46 { pt3dadd( -53.8967, -20.4125, -49.547, 0.59 ) }
    dend_46 { pt3dadd( -54.8663, -21.0551, -49.8553, 0.52 ) }
    dend_46 { pt3dadd( -55.6227, -21.6296, -50.1783, 0.52 ) }
    dend_46 { pt3dadd( -56.2413, -22.1753, -50.5787, 0.81 ) }
    dend_46 { pt3dadd( -56.8374, -22.7953, -51.1509, 0.66 ) }
    dend_46 { pt3dadd( -57.3912, -23.4299, -51.8145, 0.66 ) }
    dend_46 { pt3dadd( -57.7874, -23.9238, -52.3922, 1.33 ) }
    dend_46 { pt3dadd( -58.0518, -24.2689, -52.811, 1.33 ) }
    dend_46 { pt3dadd( -58.8766, -25.3489, -54.1402, 0.66 ) }
    dend_46 { pt3dadd( -59.6056, -26.2714, -55.2694, 0.52 ) }
    dend_46 { pt3dadd( -59.9544, -26.6761, -55.7724, 0.52 ) }
    dend_46 { pt3dadd( -60.4143, -27.143, -56.2799, 0.96 ) }
    dend_46 { pt3dadd( -60.747, -27.4515, -56.5464, 1.18 ) }
    dend_46 { pt3dadd( -60.9873, -27.6699, -56.6641, 1.18 ) }
    dend_46 { pt3dadd( -61.4852, -28.1589, -56.7587, 0.81 ) }
    dend_46 { pt3dadd( -62.158, -28.8926, -56.7627, 0.74 ) }
    dend_46 { pt3dadd( -62.9803, -29.8932, -56.6804, 0.59 ) }
    dend_46 { pt3dadd( -63.3923, -30.3949, -56.6002, 0.74 ) }
    dend_46 { pt3dadd( -63.9445, -31.0418, -56.4535, 0.74 ) }
    dend_46 { pt3dadd( -64.5453, -31.6784, -56.2753, 0.59 ) }
    dend_46 { pt3dadd( -65.1162, -32.2497, -56.0914, 0.44 ) }
    dend_46 { pt3dadd( -65.7567, -32.8843, -55.8754, 0.44 ) }
    dend_46 { pt3dadd( -66.3758, -33.4862, -55.6989, 0.44 ) }
    dend_46 { pt3dadd( -67.0231, -34.172, -55.5264, 0.44 ) }
    dend_46 { pt3dadd( -68.0736, -35.409, -55.2702, 0.44 ) }
    dend_46 { pt3dadd( -68.3283, -35.7731, -55.2098, 0.96 ) }
    dend_46 { pt3dadd( -68.7707, -36.6369, -55.1441, 1.18 ) }
    dend_46 { pt3dadd( -69.0271, -37.3974, -55.1466, 0.81 ) }
    dend_46 { pt3dadd( -69.2688, -38.6363, -55.2805, 0.59 ) }
    dend_46 { pt3dadd( -69.3371, -39.1707, -55.4023, 0.74 ) }
    dend_46 { pt3dadd( -69.4399, -40.028, -55.6612, 0.66 ) }
    dend_46 { pt3dadd( -69.6094, -40.8667, -55.9516, 0.66 ) }
    dend_46 { pt3dadd( -69.7972, -41.4868, -56.1897, 0.81 ) }
    dend_46 { pt3dadd( -70.2454, -42.6283, -56.6263, 0.59 ) }
    dend_46 { pt3dadd( -70.7011, -43.6319, -56.9912, 0.52 ) }
    dend_46 { pt3dadd( -71.1237, -44.6069, -57.316, 0.81 ) }
    dend_46 { pt3dadd( -71.4842, -45.5559, -57.5903, 1.4 ) }
    dend_46 { pt3dadd( -71.6314, -46.1214, -57.6858, 1.69 ) }
    dend_46 { pt3dadd( -71.787, -47.2301, -57.7428, 0.52 ) }
    dend_46 { pt3dadd( -71.8744, -48.1455, -57.7951, 0.44 ) }
    dend_46 { pt3dadd( -71.9345, -49.0663, -57.9785, 0.44 ) }
    dend_46 { pt3dadd( -71.989, -49.7097, -58.2496, 0.29 ) }
    dend_46 { pt3dadd( -72.1808, -50.9027, -58.949, 1.4 ) }
    dend_46 { pt3dadd( -72.2398, -51.1407, -59.1094, 1.4 ) }
    dend_46 { pt3dadd( -72.9767, -53.24, -60.8306, 0.52 ) }
    dend_46 { pt3dadd( -73.485, -54.3977, -61.876, 0.52 ) }
    dend_46 { pt3dadd( -73.7837, -54.9967, -62.4383, 0.52 ) }
    dend_46 { pt3dadd( -74.2381, -55.8894, -63.2735, 0.74 ) }
    dend_46 { pt3dadd( -74.5353, -56.4886, -63.8146, 0.88 ) }
    dend_46 { pt3dadd( -75.1413, -57.8589, -64.8753, 0.44 ) }
    dend_46 { pt3dadd( -75.4053, -58.5521, -65.2854, 0.59 ) }
    dend_46 { pt3dadd( -75.7188, -59.3307, -65.7072, 0.59 ) }
    dend_46 { pt3dadd( -76.0893, -60.1214, -66.166, 0.37 ) }
    dend_46 { pt3dadd( -76.3272, -60.5983, -66.4586, 0.59 ) }
    dend_46 { pt3dadd( -76.7837, -61.4491, -66.9699, 0.81 ) }
    dend_46 { pt3dadd( -77.2383, -62.2289, -67.366, 1.18 ) }
    dend_46 { pt3dadd( -77.5395, -62.7087, -67.6149, 1.18 ) }
    dend_46 { pt3dadd( -78.3921, -63.902, -68.31, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -36.4407, -12.042, -32.0017, 0.81 ) }
    dend_45 { pt3dadd( -37.0015, -10.6925, -31.8691, 0.81 ) }
    dend_45 { pt3dadd( -37.2707, -10.2103, -31.7728, 0.81 ) }
    dend_45 { pt3dadd( -37.693, -9.65104, -31.6134, 0.81 ) }
    dend_45 { pt3dadd( -38.1532, -9.2377, -31.462, 0.88 ) }
    dend_45 { pt3dadd( -38.7129, -8.9409, -31.3365, 0.66 ) }
    dend_45 { pt3dadd( -39.7534, -8.57363, -31.1819, 0.59 ) }
    dend_45 { pt3dadd( -40.488, -8.54054, -31.1398, 0.59 ) }
    dend_45 { pt3dadd( -41.1519, -8.60867, -31.2347, 0.59 ) }
    dend_45 { pt3dadd( -42.0349, -8.79319, -31.5218, 0.74 ) }
    dend_45 { pt3dadd( -42.9851, -9.05221, -32.0249, 1.03 ) }
    dend_45 { pt3dadd( -43.3181, -9.14886, -32.2395, 1.62 ) }
    dend_45 { pt3dadd( -43.7706, -9.27199, -32.5671, 1.92 ) }
    dend_45 { pt3dadd( -45.204, -9.61699, -33.5774, 0.88 ) }
    dend_45 { pt3dadd( -45.755, -9.7333, -33.9554, 0.66 ) }
    dend_45 { pt3dadd( -46.563, -9.90018, -34.483, 0.66 ) }
    dend_45 { pt3dadd( -47.6521, -10.1245, -35.1536, 0.66 ) }
    dend_45 { pt3dadd( -48.136, -10.2141, -35.4358, 0.66 ) }
    dend_45 { pt3dadd( -49.1894, -10.3549, -35.9815, 0.66 ) }
    dend_45 { pt3dadd( -49.8605, -10.4022, -36.2869, 0.44 ) }
    dend_45 { pt3dadd( -50.7082, -10.4072, -36.6906, 0.44 ) }
    dend_45 { pt3dadd( -51.3293, -10.3703, -37.0152, 0.44 ) }
    dend_45 { pt3dadd( -52.0617, -10.2778, -37.4736, 0.66 ) }
    dend_45 { pt3dadd( -52.5733, -10.1925, -37.8194, 0.66 ) }
    dend_45 { pt3dadd( -53.1787, -10.0536, -38.2301, 0.66 ) }
    dend_45 { pt3dadd( -53.7011, -9.90948, -38.5433, 0.66 ) }
    dend_45 { pt3dadd( -54.2971, -9.70037, -38.8518, 0.44 ) }
    dend_45 { pt3dadd( -54.712, -9.53265, -39.0524, 0.74 ) }
    dend_45 { pt3dadd( -55.3295, -9.26768, -39.3328, 0.74 ) }
    dend_45 { pt3dadd( -55.8795, -9.0261, -39.5784, 0.74 ) }
    dend_45 { pt3dadd( -56.3475, -8.82161, -39.7761, 0.74 ) }
    dend_45 { pt3dadd( -56.8832, -8.5937, -39.9913, 0.37 ) }
    dend_45 { pt3dadd( -57.6776, -8.34397, -40.3444, 0.37 ) }
    dend_45 { pt3dadd( -58.0196, -8.30649, -40.5249, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -58.38, -8.34777, -40.7622, 0.88 ) }
    dend_45 { pt3dadd( -58.8595, -8.46598, -41.1052, 1.18 ) }
    dend_45 { pt3dadd( -59.2499, -8.58427, -41.4203, 1.33 ) }
    dend_45 { pt3dadd( -60.2445, -8.9143, -42.2947, 0.44 ) }
    dend_45 { pt3dadd( -60.9581, -9.12371, -42.9733, 0.44 ) }
    dend_45 { pt3dadd( -61.5277, -9.22766, -43.5823, 0.44 ) }
    dend_45 { pt3dadd( -62.041, -9.22744, -44.1701, 0.88 ) }
    dend_45 { pt3dadd( -62.5909, -9.08839, -44.8088, 1.03 ) }
    dend_45 { pt3dadd( -62.8155, -8.96171, -45.053, 1.03 ) }
    dend_45 { pt3dadd( -63.3969, -8.45192, -45.5495, 0.44 ) }
    dend_45 { pt3dadd( -63.7473, -8.11423, -45.8089, 0.44 ) }
    dend_45 { pt3dadd( -64.1626, -7.75559, -46.0448, 0.44 ) }
    dend_45 { pt3dadd( -64.506, -7.52508, -46.2217, 0.59 ) }
    dend_45 { pt3dadd( -65.0761, -7.25225, -46.4736, 0.59 ) }
    dend_45 { pt3dadd( -65.6583, -7.08202, -46.729, 0.74 ) }
    dend_45 { pt3dadd( -66.724, -6.97235, -47.1895, 0.37 ) }
    dend_45 { pt3dadd( -67.3915, -7.00257, -47.5052, 0.37 ) }
    dend_45 { pt3dadd( -68.376, -7.17862, -48.0143, 0.59 ) }
    dend_45 { pt3dadd( -68.7602, -7.29289, -48.2343, 0.88 ) }
    dend_45 { pt3dadd( -69.497, -7.60162, -48.7176, 0.66 ) }
    dend_45 { pt3dadd( -69.9915, -7.84835, -49.0664, 0.74 ) }
    dend_45 { pt3dadd( -70.5172, -8.14356, -49.4398, 0.59 ) }
    dend_45 { pt3dadd( -70.9685, -8.41196, -49.7844, 0.52 ) }
    dend_45 { pt3dadd( -71.3909, -8.66038, -50.1067, 0.88 ) }
    dend_45 { pt3dadd( -72.1703, -9.05747, -50.7124, 0.59 ) }
    dend_45 { pt3dadd( -72.6268, -9.24234, -51.0672, 0.44 ) }
    dend_45 { pt3dadd( -73.1353, -9.39694, -51.4634, 1.03 ) }
    dend_45 { pt3dadd( -73.4927, -9.47227, -51.7341, 1.33 ) }
    dend_45 { pt3dadd( -73.7154, -9.50011, -51.8916, 1.4 ) }
    dend_45 { pt3dadd( -74.6599, -9.57158, -52.4945, 0.44 ) }
    dend_45 { pt3dadd( -75.0431, -9.59496, -52.7229, 0.44 ) }
    dend_45 { pt3dadd( -75.6106, -9.61972, -53.0376, 0.44 ) }
    dend_45 { pt3dadd( -76.2103, -9.63149, -53.3415, 0.44 ) }
    dend_45 { pt3dadd( -77.1831, -9.64371, -53.829, 0.59 ) }
    dend_45 { pt3dadd( -77.854, -9.64656, -54.2163, 0.88 ) }
    dend_45 { pt3dadd( -78.4652, -9.61923, -54.6615, 1.11 ) }
    dend_45 { pt3dadd( -79.2495, -9.54937, -55.3205, 0.52 ) }
    dend_45 { pt3dadd( -79.8097, -9.46362, -55.8372, 0.52 ) }
    dend_45 { pt3dadd( -80.2751, -9.36968, -56.2905, 1.03 ) }
    dend_45 { pt3dadd( -81.3073, -9.13619, -57.3637, 1.25 ) }
    dend_45 { pt3dadd( -82.5289, -8.90281, -58.6364, 0.52 ) }
    dend_45 { pt3dadd( -82.9487, -8.83951, -59.0657, 0.59 ) }
    dend_45 { pt3dadd( -83.512, -8.78068, -59.6129, 0.59 ) }
    dend_45 { pt3dadd( -84.4056, -8.70246, -60.3753, 0.44 ) }
    dend_45 { pt3dadd( -85.0239, -8.65275, -60.8044, 0.44 ) }
    dend_45 { pt3dadd( -85.9385, -8.55362, -61.3154, 0.44 ) }
    dend_45 { pt3dadd( -86.4273, -8.47641, -61.5734, 0.44 ) }
    dend_45 { pt3dadd( -87.0923, -8.28833, -62.0251, 0.66 ) }
    dend_45 { pt3dadd( -87.5572, -8.07762, -62.4282, 0.88 ) }
    dend_45 { pt3dadd( -87.7998, -7.91443, -62.6731, 0.88 ) }
    dend_45 { pt3dadd( -88.4884, -7.31372, -63.4259, 0.52 ) }
    dend_45 { pt3dadd( -88.9024, -6.86947, -63.9145, 0.52 ) }
    dend_45 { pt3dadd( -89.4702, -6.15856, -64.6869, 0.81 ) }
    dend_45 { pt3dadd( -89.856, -5.59788, -65.2707, 0.44 ) }
    dend_45 { pt3dadd( -90.0713, -5.24832, -65.6307, 0.44 ) }
    dend_45 { pt3dadd( -90.304, -4.79097, -66.0766, 0.74 ) }
    dend_45 { pt3dadd( -90.4361, -4.4455, -66.3729, 0.96 ) }
    dend_45 { pt3dadd( -90.6636, -3.5536, -66.9957, 0.66 ) }
    dend_45 { pt3dadd( -90.7807, -2.99511, -67.3649, 0.44 ) }
    dend_45 { pt3dadd( -90.9197, -2.38569, -67.7982, 0.44 ) }
    dend_45 { pt3dadd( -91.1043, -1.80845, -68.2718, 0.44 ) }
    dend_45 { pt3dadd( -91.2054, -1.61209, -68.4619, 0.44 ) }
    dend_45 { pt3dadd( -91.5691, -1.21671, -68.9138, 0.96 ) }
    dend_45 { pt3dadd( -92.4366, -0.817486, -69.5791, 0.66 ) }
    dend_45 { pt3dadd( -93.0196, -0.666556, -69.9493, 0.96 ) }
    dend_45 { pt3dadd( -93.302, -0.613973, -70.0953, 1.25 ) }
    dend_45 { pt3dadd( -93.6359, -0.56192, -70.2491, 1.25 ) }
    dend_45 { pt3dadd( -94.1661, -0.466644, -70.4815, 1.25 ) }
    dend_45 { pt3dadd( -95.08, -0.218831, -70.8783, 0.37 ) }
    dend_45 { pt3dadd( -95.627, 0.0388184, -71.0902, 0.37 ) }
    dend_45 { pt3dadd( -95.9861, 0.268515, -71.2521, 0.66 ) }
    dend_45 { pt3dadd( -96.2613, 0.459356, -71.3719, 0.81 ) }
    dend_45 { pt3dadd( -96.6911, 0.76068, -71.534, 0.81 ) }
    dend_45 { pt3dadd( -97.3583, 1.22214, -71.7156, 0.44 ) }
    dend_45 { pt3dadd( -97.8186, 1.50877, -71.7785, 0.44 ) }
    dend_45 { pt3dadd( -98.6644, 1.95349, -71.8247, 0.44 ) }
    dend_45 { pt3dadd( -99.6036, 2.40977, -71.823, 0.44 ) }
    dend_45 { pt3dadd( -100.318, 2.7502, -71.7868, 0.66 ) }
    dend_45 { pt3dadd( -101.062, 3.09805, -71.7137, 0.96 ) }
    dend_45 { pt3dadd( -101.814, 3.43967, -71.5901, 0.59 ) }
    dend_45 { pt3dadd( -102.453, 3.741, -71.4609, 0.44 ) }
    dend_45 { pt3dadd( -103.112, 4.05953, -71.3211, 0.44 ) }
    dend_45 { pt3dadd( -103.752, 4.36991, -71.2234, 0.44 ) }
    dend_45 { pt3dadd( -104.311, 4.6069, -71.2068, 0.44 ) }
    dend_45 { pt3dadd( -104.962, 4.81121, -71.2879, 0.74 ) }
    dend_45 { pt3dadd( -105.286, 4.88111, -71.3718, 0.74 ) }
    dend_45 { pt3dadd( -106.217, 5.00064, -71.6692, 0.52 ) }
    dend_45 { pt3dadd( -106.642, 5.03547, -71.8284, 0.59 ) }
    dend_45 { pt3dadd( -107.431, 5.08804, -72.154, 0.44 ) }
    dend_45 { pt3dadd( -108.02, 5.15042, -72.4065, 0.44 ) }
    dend_45 { pt3dadd( -108.756, 5.29529, -72.753, 0.37 ) }
    dend_45 { pt3dadd( -109.492, 5.50674, -73.0938, 0.52 ) }
    dend_45 { pt3dadd( -110.073, 5.73181, -73.3626, 1.11 ) }
    dend_45 { pt3dadd( -110.525, 5.94455, -73.5982, 1.25 ) }
    dend_45 { pt3dadd( -111.057, 6.22976, -73.925, 0.37 ) }
    dend_45 { pt3dadd( -111.817, 6.65375, -74.4728, 0.37 ) }
    dend_45 { pt3dadd( -112.331, 6.92527, -74.8936, 0.29 ) }
    dend_45 { pt3dadd( -112.74, 7.12679, -75.2732, 0.29 ) }
    dend_45 { pt3dadd( -113.473, 7.48123, -76.0026, 0.59 ) }
    dend_45 { pt3dadd( -114.052, 7.77644, -76.6039, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -114.38, 7.95392, -76.9457, 0.29 ) }
    dend_45 { pt3dadd( -114.639, 8.10905, -77.1891, 0.37 ) }
    dend_45 { pt3dadd( -115.05, 8.39494, -77.5403, 0.37 ) }
    dend_45 { pt3dadd( -115.615, 8.81976, -77.9251, 0.44 ) }
    dend_45 { pt3dadd( -116.091, 9.19305, -78.1511, 0.44 ) }
    dend_45 { pt3dadd( -116.545, 9.54652, -78.3061, 0.44 ) }
    dend_45 { pt3dadd( -117.094, 9.93792, -78.4702, 0.37 ) }
    dend_45 { pt3dadd( -117.318, 10.0748, -78.5289, 0.37 ) }
    dend_45 { pt3dadd( -117.894, 10.3555, -78.6501, 0.88 ) }
    dend_45 { pt3dadd( -118.229, 10.4866, -78.7117, 1.11 ) }
    dend_45 { pt3dadd( -118.831, 10.6993, -78.8188, 1.11 ) }
    dend_45 { pt3dadd( -119.778, 11.0524, -78.9781, 0.37 ) }
    dend_45 { pt3dadd( -120.511, 11.36, -79.0926, 0.37 ) }
    dend_45 { pt3dadd( -120.93, 11.573, -79.1488, 0.66 ) }
    dend_45 { pt3dadd( -121.557, 12.0019, -79.2476, 0.66 ) }
    dend_45 { pt3dadd( -122.045, 12.438, -79.3428, 0.37 ) }
    dend_45 { pt3dadd( -122.452, 12.9072, -79.4458, 0.52 ) }
    dend_45 { pt3dadd( -122.6, 13.1164, -79.4924, 0.66 ) }
    dend_45 { pt3dadd( -122.815, 13.4588, -79.5649, 0.66 ) }
    dend_45 { pt3dadd( -123.399, 14.405, -79.7536, 0.37 ) }
    dend_45 { pt3dadd( -123.676, 14.8122, -79.8132, 0.37 ) }
    dend_45 { pt3dadd( -123.988, 15.1464, -79.8164, 0.37 ) }
    dend_45 { pt3dadd( -124.322, 15.4013, -79.765, 0.88 ) }
    dend_45 { pt3dadd( -124.866, 15.7185, -79.6335, 0.81 ) }
    dend_45 { pt3dadd( -125.136, 15.8442, -79.5557, 0.81 ) }
    dend_45 { pt3dadd( -125.818, 16.1179, -79.3352, 0.29 ) }
    dend_45 { pt3dadd( -126.712, 16.4601, -79.0398, 0.29 ) }
    dend_45 { pt3dadd( -127.267, 16.6967, -78.8115, 0.52 ) }
    dend_45 { pt3dadd( -127.936, 17.0218, -78.5183, 0.44 ) }
    dend_45 { pt3dadd( -128.263, 17.1929, -78.3736, 0.44 ) }
    dend_45 { pt3dadd( -128.691, 17.4371, -78.164, 0.81 ) }
    dend_45 { pt3dadd( -129.193, 17.7694, -77.8953, 0.81 ) }
    dend_45 { pt3dadd( -130.124, 18.5049, -77.3423, 0.29 ) }
    dend_45 { pt3dadd( -130.495, 18.8225, -77.1102, 0.44 ) }
    dend_45 { pt3dadd( -130.843, 19.1273, -76.8689, 0.29 ) }
    dend_45 { pt3dadd( -131.231, 19.4497, -76.61, 0.29 ) }
    dend_45 { pt3dadd( -131.744, 19.8478, -76.2996, 0.29 ) }
    dend_45 { pt3dadd( -132.141, 20.1353, -76.0937, 0.29 ) }
    dend_45 { pt3dadd( -132.615, 20.447, -75.8864, 0.59 ) }
    dend_45 { pt3dadd( -133.528, 21.0282, -75.4762, 0.22 ) }
    dend_45 { pt3dadd( -134.116, 21.3956, -75.2139, 0.22 ) }
    dend_45 { pt3dadd( -134.431, 21.5721, -75.0741, 0.52 ) }
    dend_45 { pt3dadd( -134.723, 21.7073, -74.939, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -78.2352, -43.503, 74.8008, 0.29 ) }
    dend_43 { pt3dadd( -85.7663, -48.1385, 81.7029, 0.29 ) }
    dend_43 { pt3dadd( -92.2709, -54.7036, 87.8979, 0.29 ) }
    dend_43 { pt3dadd( -98.3484, -61.3765, 94.4119, 0.29 ) }
    dend_43 { pt3dadd( -104.066, -68.7155, 100.446, 0.29 ) }
    dend_43 { pt3dadd( -108.399, -77.0165, 106.308, 0.29 ) }
    dend_43 { pt3dadd( -113.633, -84.884, 112.052, 0.29 ) }
    dend_43 { pt3dadd( -118.906, -92.7483, 117.762, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -78.2352, -43.503, 74.8008, 0.29 ) }
    dend_42 { pt3dadd( -86.1119, -47.6498, 81.6736, 0.29 ) }
    dend_42 { pt3dadd( -94.0504, -52.9917, 87.4699, 0.29 ) }
    dend_42 { pt3dadd( -101.206, -59.0182, 93.5421, 0.29 ) }
    dend_42 { pt3dadd( -107.349, -65.4886, 100.201, 0.29 ) }
    dend_42 { pt3dadd( -113.011, -72.6313, 106.518, 0.29 ) }
    dend_42 { pt3dadd( -117.643, -80.9162, 112.091, 0.29 ) }
    dend_42 { pt3dadd( -123.017, -88.2468, 118.424, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.5246, -56.8687, 17.1258, 0.66 ) }
    dend_34 { pt3dadd( -10.5358, -59.575, 16.0454, 0.66 ) }
    dend_34 { pt3dadd( -10.7932, -60.2939, 15.7867, 1.03 ) }
    dend_34 { pt3dadd( -11.0493, -61.0473, 15.6128, 1.03 ) }
    dend_34 { pt3dadd( -11.5161, -62.4895, 15.4236, 1.03 ) }
    dend_34 { pt3dadd( -11.8284, -63.5843, 15.3628, 1.03 ) }
    dend_34 { pt3dadd( -12.1563, -64.9243, 15.3722, 0.81 ) }
    dend_34 { pt3dadd( -12.364, -66.1281, 15.6007, 0.81 ) }
    dend_34 { pt3dadd( -12.4857, -67.9, 16.0855, 1.4 ) }
    dend_34 { pt3dadd( -12.4727, -68.6616, 16.3482, 1.62 ) }
    dend_34 { pt3dadd( -12.3595, -69.8011, 16.8469, 1.4 ) }
    dend_34 { pt3dadd( -12.2265, -70.5536, 17.2016, 1.92 ) }
    dend_34 { pt3dadd( -11.9734, -71.5766, 17.6949, 1.4 ) }
    dend_34 { pt3dadd( -11.496, -73.1267, 18.4507, 1.69 ) }
    dend_34 { pt3dadd( -11.1411, -74.1626, 18.9005, 1.11 ) }
    dend_34 { pt3dadd( -10.6669, -75.5524, 19.4661, 0.81 ) }
    dend_34 { pt3dadd( -10.4582, -76.2088, 19.713, 1.11 ) }
    dend_34 { pt3dadd( -10.2387, -76.9926, 19.9777, 1.25 ) }
    dend_34 { pt3dadd( -9.84241, -78.7381, 20.5102, 0.96 ) }
    dend_34 { pt3dadd( -9.72083, -79.6222, 20.74, 0.74 ) }
    dend_34 { pt3dadd( -9.69388, -80.4684, 20.9217, 0.81 ) }
    dend_34 { pt3dadd( -9.85447, -81.7539, 21.1089, 0.52 ) }
    dend_34 { pt3dadd( -10.0987, -82.6737, 21.1824, 0.88 ) }
    dend_34 { pt3dadd( -10.4009, -83.4503, 21.1585, 0.88 ) }
    dend_34 { pt3dadd( -10.8164, -84.3036, 20.9952, 0.88 ) }
    dend_34 { pt3dadd( -11.2019, -85.0611, 20.7761, 0.66 ) }
    dend_34 { pt3dadd( -11.5761, -85.8746, 20.4395, 0.66 ) }
    dend_34 { pt3dadd( -11.9929, -87.0237, 19.767, 0.88 ) }
    dend_34 { pt3dadd( -12.1992, -87.7917, 19.2226, 1.33 ) }
    dend_34 { pt3dadd( -12.3094, -88.3817, 18.7792, 1.47 ) }
    dend_34 { pt3dadd( -12.3894, -88.9376, 18.3617, 1.62 ) }
    dend_34 { pt3dadd( -12.5492, -90.0721, 17.566, 0.74 ) }
    dend_34 { pt3dadd( -12.7492, -91.361, 16.8282, 0.74 ) }
    dend_34 { pt3dadd( -12.9632, -92.3645, 16.4224, 0.74 ) }
    dend_34 { pt3dadd( -13.1701, -93.1632, 16.2481, 0.74 ) }
    dend_34 { pt3dadd( -13.4684, -94.2666, 16.1811, 0.66 ) }
    dend_34 { pt3dadd( -13.7416, -95.4151, 16.2839, 0.66 ) }
    dend_34 { pt3dadd( -14.0431, -97.0764, 16.6661, 0.96 ) }
    dend_34 { pt3dadd( -14.1259, -97.9335, 16.9427, 0.88 ) }
    dend_34 { pt3dadd( -14.1198, -98.7037, 17.2117, 0.88 ) }
    dend_34 { pt3dadd( -13.9617, -100.143, 17.6988, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -13.6961, -101.47, 18.1245, 1.18 ) }
    dend_34 { pt3dadd( -13.544, -102.119, 18.2878, 1.62 ) }
    dend_34 { pt3dadd( -13.3839, -102.852, 18.409, 1.62 ) }
    dend_34 { pt3dadd( -13.1976, -103.885, 18.5505, 0.96 ) }
    dend_34 { pt3dadd( -13.0957, -104.686, 18.6466, 0.96 ) }
    dend_34 { pt3dadd( -13.0321, -105.895, 18.7727, 0.66 ) }
    dend_34 { pt3dadd( -13.1178, -107.483, 18.8982, 0.52 ) }
    dend_34 { pt3dadd( -13.3102, -108.909, 19.038, 0.59 ) }
    dend_34 { pt3dadd( -13.6726, -110.547, 19.2313, 0.74 ) }
    dend_34 { pt3dadd( -13.8048, -110.973, 19.2946, 1.11 ) }
    dend_34 { pt3dadd( -14.1455, -111.785, 19.4756, 1.25 ) }
    dend_34 { pt3dadd( -14.8573, -113.086, 19.8648, 0.88 ) }
    dend_34 { pt3dadd( -15.3202, -113.733, 20.1352, 0.66 ) }
    dend_34 { pt3dadd( -15.8191, -114.304, 20.424, 0.66 ) }
    dend_34 { pt3dadd( -16.3132, -114.808, 20.6892, 0.59 ) }
    dend_34 { pt3dadd( -17.2965, -115.824, 21.1706, 0.59 ) }
    dend_34 { pt3dadd( -17.8491, -116.409, 21.401, 0.44 ) }
    dend_34 { pt3dadd( -18.5119, -117.169, 21.6099, 0.44 ) }
    dend_34 { pt3dadd( -19.062, -117.876, 21.709, 0.74 ) }
    dend_34 { pt3dadd( -19.5066, -118.532, 21.7448, 0.74 ) }
    dend_34 { pt3dadd( -19.8899, -119.158, 21.7339, 0.66 ) }
    dend_34 { pt3dadd( -20.3855, -120.074, 21.6441, 1.03 ) }
    dend_34 { pt3dadd( -20.7577, -120.803, 21.576, 1.4 ) }
    dend_34 { pt3dadd( -21.1571, -121.622, 21.5067, 1.4 ) }
    dend_34 { pt3dadd( -21.508, -122.333, 21.4536, 1.47 ) }
    dend_34 { pt3dadd( -22.0644, -123.457, 21.3908, 0.74 ) }
    dend_34 { pt3dadd( -22.496, -124.332, 21.3331, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.5246, -56.8687, 17.1258, 0.44 ) }
    dend_33 { pt3dadd( -8.70213, -57.5665, 17.7593, 0.44 ) }
    dend_33 { pt3dadd( -8.2229, -58.1659, 18.202, 0.44 ) }
    dend_33 { pt3dadd( -7.89757, -58.9371, 18.6361, 0.37 ) }
    dend_33 { pt3dadd( -7.56508, -60.4359, 19.2766, 0.59 ) }
    dend_33 { pt3dadd( -7.52388, -61.0189, 19.4691, 0.52 ) }
    dend_33 { pt3dadd( -7.55129, -61.7669, 19.6791, 0.44 ) }
    dend_33 { pt3dadd( -7.81337, -62.9676, 20.0136, 0.44 ) }
    dend_33 { pt3dadd( -8.18421, -63.9758, 20.3306, 0.44 ) }
    dend_33 { pt3dadd( -8.49891, -64.5858, 20.5718, 0.59 ) }
    dend_33 { pt3dadd( -8.97472, -65.2836, 20.9773, 0.59 ) }
    dend_33 { pt3dadd( -9.47364, -65.8757, 21.6021, 0.37 ) }
    dend_33 { pt3dadd( -10.1187, -66.5364, 22.6668, 0.59 ) }
    dend_33 { pt3dadd( -10.6649, -67.0529, 23.7605, 0.88 ) }
    dend_33 { pt3dadd( -11.0057, -67.3435, 24.4822, 0.81 ) }
    dend_33 { pt3dadd( -11.6985, -67.8987, 25.9398, 1.03 ) }
    dend_33 { pt3dadd( -12.4028, -68.4538, 27.3799, 0.88 ) }
    dend_33 { pt3dadd( -13.0571, -68.9837, 28.5786, 0.44 ) }
    dend_33 { pt3dadd( -13.611, -69.4956, 29.4363, 0.44 ) }
    dend_33 { pt3dadd( -13.9828, -69.8964, 29.9175, 0.66 ) }
    dend_33 { pt3dadd( -14.5175, -70.4859, 30.4286, 0.66 ) }
    dend_33 { pt3dadd( -15.0247, -71.0075, 30.7158, 0.66 ) }
    dend_33 { pt3dadd( -15.7904, -71.739, 30.9545, 0.66 ) }
    dend_33 { pt3dadd( -16.4618, -72.3654, 31.1102, 1.33 ) }
    dend_33 { pt3dadd( -16.7638, -72.6608, 31.1579, 1.47 ) }
    dend_33 { pt3dadd( -17.3514, -73.2455, 31.2409, 1.03 ) }
    dend_33 { pt3dadd( -18.0876, -73.998, 31.3507, 0.81 ) }
    dend_33 { pt3dadd( -18.7078, -74.6337, 31.4585, 0.74 ) }
    dend_33 { pt3dadd( -19.4447, -75.3968, 31.6142, 0.52 ) }
    dend_33 { pt3dadd( -19.9619, -75.962, 31.7439, 0.44 ) }
    dend_33 { pt3dadd( -23.0613, -82.891, 37.2766, 0.44 ) }
    dend_33 { pt3dadd( -25.0495, -90.4089, 42.4595, 0.44 ) }
    dend_33 { pt3dadd( -27.8979, -97.8543, 47.3459, 0.44 ) }
    dend_33 { pt3dadd( -32.7909, -104.709, 51.5117, 0.44 ) }
    dend_33 { pt3dadd( -37.5118, -110.519, 57.316, 0.44 ) }
    dend_33 { pt3dadd( -41.2676, -116.434, 63.6835, 0.44 ) }
    dend_33 { pt3dadd( -45.2872, -122.555, 69.661, 0.44 ) }
    dend_33 { pt3dadd( -51.1377, -128.138, 74.6196, 0.44 ) }
    dend_33 { pt3dadd( -58.6419, -132.885, 78.0902, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.13418, -17.4006, -3.35963, 1.47 ) }
    dend_17 { pt3dadd( 3.61862, -18.8218, -3.81795, 1.47 ) }
    dend_17 { pt3dadd( 3.07999, -20.6562, -4.24565, 1.33 ) }
    dend_17 { pt3dadd( 2.71788, -22.1218, -4.46753, 1.55 ) }
    dend_17 { pt3dadd( 2.4706, -23.3137, -4.54112, 1.55 ) }
    dend_17 { pt3dadd( 2.24434, -24.5532, -4.45902, 1.77 ) }
    dend_17 { pt3dadd( 1.9642, -26.1433, -4.1804, 1.77 ) }
    dend_17 { pt3dadd( 1.81633, -27.127, -3.86522, 2.14 ) }
    dend_17 { pt3dadd( 1.68826, -27.9498, -3.50829, 2.58 ) }
    dend_17 { pt3dadd( 1.50957, -29.0025, -3.02243, 2.36 ) }
    dend_17 { pt3dadd( 1.14835, -30.9332, -2.23089, 1.77 ) }
    dend_17 { pt3dadd( 0.814413, -32.5965, -1.73134, 1.47 ) }
    dend_17 { pt3dadd( 0.547696, -33.9897, -1.50612, 1.18 ) }
    dend_17 { pt3dadd( 0.301668, -35.4686, -1.42747, 1.11 ) }
    dend_17 { pt3dadd( 0.12873, -36.7828, -1.49832, 1.33 ) }
    dend_17 { pt3dadd( -0.0238278, -38.5738, -1.79544, 1.25 ) }
    dend_17 { pt3dadd( -0.0536182, -40.1403, -2.19728, 1.47 ) }
    dend_17 { pt3dadd( 0.00591895, -41.5441, -2.59963, 1.62 ) }
    dend_17 { pt3dadd( 0.0891353, -42.598, -2.90368, 2.14 ) }
    dend_17 { pt3dadd( 0.141413, -43.3255, -3.09907, 2.58 ) }
    dend_17 { pt3dadd( 0.167271, -44.3716, -3.33978, 2.43 ) }
    dend_17 { pt3dadd( 0.0990911, -46.0554, -3.66604, 2.14 ) }
    dend_17 { pt3dadd( -0.0551964, -47.4143, -3.9082, 1.92 ) }
    dend_17 { pt3dadd( -0.32178, -48.7612, -4.13472, 1.47 ) }
    dend_17 { pt3dadd( -0.798858, -50.4235, -4.41698, 1.25 ) }
    dend_17 { pt3dadd( -1.30327, -51.7942, -4.60756, 1.11 ) }
    dend_17 { pt3dadd( -1.76467, -52.8194, -4.70481, 1.4 ) }
    dend_17 { pt3dadd( -2.10125, -53.4785, -4.74459, 1.55 ) }
    dend_17 { pt3dadd( -2.6325, -54.4858, -4.75821, 1.18 ) }
    dend_17 { pt3dadd( -3.13842, -55.5163, -4.70144, 0.88 ) }
    dend_17 { pt3dadd( -3.59078, -56.6015, -4.63637, 1.18 ) }
    dend_17 { pt3dadd( -3.94443, -57.6645, -4.57352, 1.03 ) }
    dend_17 { pt3dadd( -4.23491, -58.6659, -4.50558, 1.03 ) }
    dend_17 { pt3dadd( -4.59074, -60.1515, -4.4185, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -4.75001, -61.0958, -4.38185, 1.77 ) }
    dend_17 { pt3dadd( -4.90132, -62.582, -4.38305, 1.77 ) }
    dend_17 { pt3dadd( -4.97321, -63.7247, -4.47517, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.13418, -17.4006, -3.35963, 1.77 ) }
    dend_1 { pt3dadd( 4.82736, -20.2784, -4.07821, 1.77 ) }
    dend_1 { pt3dadd( 5.13689, -21.7188, -4.41554, 1.99 ) }
    dend_1 { pt3dadd( 5.49281, -23.3751, -4.80344, 1.99 ) }
    dend_1 { pt3dadd( 5.97844, -25.6349, -5.33269, 3.17 ) }
    dend_1 { pt3dadd( 6.1972, -26.6529, -5.5711, 3.76 ) }
    dend_1 { pt3dadd( 6.57153, -28.3948, -5.97905, 4.2 ) }
    dend_1 { pt3dadd( 6.77808, -29.9359, -6.27574, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205293 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205293 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205293 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -67.7079, 127.609, -39.7289, 0.29 ) }
    dend_85 { pt3dadd( -67.854, 128.288, -39.8842, 0.29 ) }
    dend_85 { pt3dadd( -68.0699, 129.272, -40.3483, 0.29 ) }
    dend_85 { pt3dadd( -68.2216, 130.142, -40.8311, 0.29 ) }
    dend_85 { pt3dadd( -68.3381, 131.067, -41.4051, 0.29 ) }
    dend_85 { pt3dadd( -68.4022, 131.724, -41.852, 0.29 ) }
    dend_85 { pt3dadd( -68.49, 132.802, -42.5932, 0.29 ) }
    dend_85 { pt3dadd( -68.6177, 134.714, -44.0572, 0.29 ) }
    dend_85 { pt3dadd( -68.655, 135.298, -44.5349, 0.37 ) }
    dend_85 { pt3dadd( -68.7134, 136.0, -45.1287, 0.37 ) }
    dend_85 { pt3dadd( -68.8135, 136.862, -45.8837, 0.37 ) }
    dend_85 { pt3dadd( -68.8939, 137.571, -46.5111, 0.22 ) }
    dend_85 { pt3dadd( -68.982, 138.313, -47.1436, 0.22 ) }
    dend_85 { pt3dadd( -69.1229, 139.141, -47.7015, 1.03 ) }
    dend_85 { pt3dadd( -69.1684, 139.292, -47.7986, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -67.7079, 127.609, -39.7289, 0.52 ) }
    dend_80 { pt3dadd( -69.2745, 129.453, -38.8697, 0.52 ) }
    dend_80 { pt3dadd( -69.9714, 130.425, -38.4316, 0.52 ) }
    dend_80 { pt3dadd( -70.6491, 131.543, -37.9921, 0.44 ) }
    dend_80 { pt3dadd( -70.942, 132.111, -37.8045, 0.59 ) }
    dend_80 { pt3dadd( -71.2435, 132.795, -37.6108, 0.59 ) }
    dend_80 { pt3dadd( -71.7822, 134.108, -37.242, 0.37 ) }
    dend_80 { pt3dadd( -72.4027, 135.802, -36.8935, 0.37 ) }
    dend_80 { pt3dadd( -72.7584, 136.897, -36.6607, 0.37 ) }
    dend_80 { pt3dadd( -73.1173, 138.002, -36.4144, 0.37 ) }
    dend_80 { pt3dadd( -73.5154, 139.213, -36.1116, 0.29 ) }
    dend_80 { pt3dadd( -73.8937, 140.301, -35.8161, 0.29 ) }
    dend_80 { pt3dadd( -74.3537, 141.445, -35.4715, 0.81 ) }
    dend_80 { pt3dadd( -74.5887, 141.903, -35.3225, 0.81 ) }
    dend_80 { pt3dadd( -75.0119, 142.598, -35.0728, 0.74 ) }
    dend_80 { pt3dadd( -75.6322, 143.473, -34.7915, 0.74 ) }
    dend_80 { pt3dadd( -76.224, 144.157, -34.6448, 0.96 ) }
    dend_80 { pt3dadd( -76.8685, 144.789, -34.6043, 0.96 ) }
    dend_80 { pt3dadd( -77.3214, 145.206, -34.6475, 0.59 ) }
    dend_80 { pt3dadd( -78.2299, 146.065, -34.8812, 0.29 ) }
    dend_80 { pt3dadd( -79.0954, 146.932, -35.2682, 0.29 ) }
    dend_80 { pt3dadd( -80.0471, 147.944, -35.8254, 0.29 ) }
    dend_80 { pt3dadd( -80.7141, 148.706, -36.2539, 0.22 ) }
    dend_80 { pt3dadd( -81.7101, 149.894, -36.921, 0.22 ) }
    dend_80 { pt3dadd( -82.4861, 150.869, -37.4612, 0.74 ) }
    dend_80 { pt3dadd( -83.3465, 152.036, -38.0361, 0.37 ) }
    dend_80 { pt3dadd( -84.0122, 153.067, -38.4498, 0.37 ) }
    dend_80 { pt3dadd( -84.6053, 154.089, -38.808, 0.81 ) }
    dend_80 { pt3dadd( -85.0304, 154.78, -39.0479, 1.18 ) }
    dend_80 { pt3dadd( -85.4435, 155.325, -39.2198, 1.18 ) }
    dend_80 { pt3dadd( -86.5286, 156.489, -39.6032, 0.29 ) }
    dend_80 { pt3dadd( -87.686, 157.649, -39.9772, 0.29 ) }
    dend_80 { pt3dadd( -88.4349, 158.342, -40.2332, 0.29 ) }
    dend_80 { pt3dadd( -89.2125, 159.003, -40.516, 0.29 ) }
    dend_80 { pt3dadd( -90.374, 159.909, -40.9173, 0.74 ) }
    dend_80 { pt3dadd( -91.2278, 160.443, -41.1841, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 85.4868, 44.2339, 47.7528, 0.29 ) }
    dend_71 { pt3dadd( 91.5502, 45.9463, 53.4704, 0.29 ) }
    dend_71 { pt3dadd( 97.3743, 47.4964, 59.4772, 0.29 ) }
    dend_71 { pt3dadd( 103.513, 49.8656, 64.8592, 0.29 ) }
    dend_71 { pt3dadd( 109.03, 53.214, 70.3581, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 85.4868, 44.2339, 47.7528, 0.29 ) }
    dend_70 { pt3dadd( 94.3575, 46.4366, 55.812, 0.29 ) }
    dend_70 { pt3dadd( 103.331, 50.4691, 62.9622, 0.29 ) }
    dend_70 { pt3dadd( 113.612, 54.3819, 68.1374, 0.29 ) }
    dend_70 { pt3dadd( 122.534, 60.0442, 74.0487, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 69.6408, 34.1998, 0.0698397, 0.44 ) }
    dend_58 { pt3dadd( 70.5087, 34.1645, -0.177222, 0.44 ) }
    dend_58 { pt3dadd( 70.8364, 34.194, -0.320341, 0.37 ) }
    dend_58 { pt3dadd( 71.421, 34.3025, -0.610978, 0.59 ) }
    dend_58 { pt3dadd( 71.7392, 34.3766, -0.774495, 0.74 ) }
    dend_58 { pt3dadd( 72.5543, 34.5923, -1.18289, 0.37 ) }
    dend_58 { pt3dadd( 73.3929, 34.8372, -1.58435, 0.29 ) }
    dend_58 { pt3dadd( 73.8911, 35.0407, -1.84879, 0.29 ) }
    dend_58 { pt3dadd( 74.246, 35.2154, -2.02247, 0.88 ) }
    dend_58 { pt3dadd( 74.3761, 35.2908, -2.08562, 1.11 ) }
    dend_58 { pt3dadd( 74.6968, 35.4906, -2.22381, 1.11 ) }
    dend_58 { pt3dadd( 74.9938, 35.6781, -2.29405, 1.18 ) }
    dend_58 { pt3dadd( 75.5353, 35.9536, -2.3176, 0.74 ) }
    dend_58 { pt3dadd( 75.9022, 36.1325, -2.31445, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 69.6408, 34.1998, 0.0698397, 0.29 ) }
    dend_55 { pt3dadd( 70.2187, 34.8413, 0.30502, 0.29 ) }
    dend_55 { pt3dadd( 70.4887, 35.1465, 0.42824, 0.29 ) }
    dend_55 { pt3dadd( 70.8345, 35.5375, 0.586066, 0.66 ) }
    dend_55 { pt3dadd( 71.2078, 35.9595, 0.75645, 0.29 ) }
    dend_55 { pt3dadd( 71.4873, 36.2755, 0.88402, 0.29 ) }
    dend_55 { pt3dadd( 72.0474, 36.9089, 1.1397, 0.29 ) }
    dend_55 { pt3dadd( 72.3628, 37.2514, 1.32777, 0.29 ) }
    dend_55 { pt3dadd( 77.262, 42.2501, 2.83191, 0.29 ) }
    dend_55 { pt3dadd( 81.342, 47.7468, 4.83568, 0.29 ) }
    dend_55 { pt3dadd( 84.5772, 53.9124, 6.03778, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 88.5134, 59.6245, 7.59157, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -78.3921, -63.902, -68.31, 0.81 ) }
    dend_48 { pt3dadd( -78.7964, -65.6154, -69.9055, 0.81 ) }
    dend_48 { pt3dadd( -78.8804, -65.829, -70.1212, 0.81 ) }
    dend_48 { pt3dadd( -80.0688, -67.9491, -72.3186, 0.37 ) }
    dend_48 { pt3dadd( -80.4445, -68.4908, -72.8592, 0.52 ) }
    dend_48 { pt3dadd( -80.8121, -69.0024, -73.3564, 0.66 ) }
    dend_48 { pt3dadd( -81.2381, -69.6089, -73.9209, 0.66 ) }
    dend_48 { pt3dadd( -82.2139, -70.7852, -75.0046, 0.37 ) }
    dend_48 { pt3dadd( -82.8268, -71.5183, -75.7065, 0.37 ) }
    dend_48 { pt3dadd( -83.7774, -72.6039, -76.7651, 0.37 ) }
    dend_48 { pt3dadd( -84.3541, -73.2753, -77.4429, 0.66 ) }
    dend_48 { pt3dadd( -85.2799, -74.3319, -78.5149, 1.11 ) }
    dend_48 { pt3dadd( -85.7226, -74.8054, -78.9894, 1.25 ) }
    dend_48 { pt3dadd( -87.1807, -76.2916, -80.6569, 0.22 ) }
    dend_48 { pt3dadd( -87.7714, -76.8234, -81.3582, 0.29 ) }
    dend_48 { pt3dadd( -88.2771, -77.2125, -81.9632, 0.59 ) }
    dend_48 { pt3dadd( -88.8544, -77.6017, -82.6138, 0.81 ) }
    dend_48 { pt3dadd( -89.4647, -78.0244, -83.3134, 0.81 ) }
    dend_48 { pt3dadd( -91.0768, -79.2926, -85.0786, 0.37 ) }
    dend_48 { pt3dadd( -91.5665, -79.7262, -85.5664, 0.37 ) }
    dend_48 { pt3dadd( -92.3831, -80.6405, -86.3926, 0.59 ) }
    dend_48 { pt3dadd( -92.6932, -81.0479, -86.6925, 0.81 ) }
    dend_48 { pt3dadd( -93.8459, -82.7281, -87.6823, 0.44 ) }
    dend_48 { pt3dadd( -94.6711, -83.9975, -88.2452, 0.44 ) }
    dend_48 { pt3dadd( -95.3607, -85.0669, -88.5894, 0.37 ) }
    dend_48 { pt3dadd( -96.2055, -86.3993, -88.9678, 0.37 ) }
    dend_48 { pt3dadd( -96.8345, -87.3769, -89.2456, 0.66 ) }
    dend_48 { pt3dadd( -97.3325, -88.0982, -89.4888, 0.81 ) }
    dend_48 { pt3dadd( -97.826, -88.7536, -89.7039, 0.81 ) }
    dend_48 { pt3dadd( -98.7388, -89.9049, -90.1222, 0.29 ) }
    dend_48 { pt3dadd( -99.2717, -90.528, -90.3467, 0.96 ) }
    dend_48 { pt3dadd( -100.589, -91.9557, -90.7931, 0.29 ) }
    dend_48 { pt3dadd( -101.442, -92.8795, -91.0374, 0.29 ) }
    dend_48 { pt3dadd( -102.305, -93.787, -91.2151, 0.44 ) }
    dend_48 { pt3dadd( -102.797, -94.283, -91.3023, 0.44 ) }
    dend_48 { pt3dadd( -103.607, -95.0613, -91.3917, 0.29 ) }
    dend_48 { pt3dadd( -104.048, -95.5041, -91.4665, 0.59 ) }
    dend_48 { pt3dadd( -104.728, -96.2459, -91.5867, 0.59 ) }
    dend_48 { pt3dadd( -105.358, -97.0125, -91.7417, 0.52 ) }
    dend_48 { pt3dadd( -106.334, -98.1769, -92.0712, 0.37 ) }
    dend_48 { pt3dadd( -106.95, -98.9102, -92.318, 0.88 ) }
    dend_48 { pt3dadd( -108.094, -100.286, -92.8224, 0.44 ) }
    dend_48 { pt3dadd( -108.736, -101.08, -93.1033, 0.59 ) }
    dend_48 { pt3dadd( -109.262, -101.733, -93.3244, 0.59 ) }
    dend_48 { pt3dadd( -109.903, -102.515, -93.5471, 0.59 ) }
    dend_48 { pt3dadd( -110.582, -103.29, -93.7016, 0.37 ) }
    dend_48 { pt3dadd( -111.128, -103.817, -93.7741, 0.37 ) }
    dend_48 { pt3dadd( -112.039, -104.528, -93.7947, 0.29 ) }
    dend_48 { pt3dadd( -112.386, -104.757, -93.7755, 0.29 ) }
    dend_48 { pt3dadd( -113.289, -105.306, -93.6523, 0.88 ) }
    dend_48 { pt3dadd( -113.91, -105.67, -93.5165, 1.18 ) }
    dend_48 { pt3dadd( -114.952, -106.203, -93.2669, 0.29 ) }
    dend_48 { pt3dadd( -115.713, -106.554, -93.0961, 0.29 ) }
    dend_48 { pt3dadd( -116.838, -107.094, -92.9097, 0.29 ) }
    dend_48 { pt3dadd( -117.35, -107.367, -92.8436, 0.88 ) }
    dend_48 { pt3dadd( -117.845, -107.663, -92.8058, 0.88 ) }
    dend_48 { pt3dadd( -119.445, -108.709, -92.8206, 0.22 ) }
    dend_48 { pt3dadd( -119.975, -109.087, -92.8841, 0.22 ) }
    dend_48 { pt3dadd( -121.126, -109.911, -93.1049, 0.59 ) }
    dend_48 { pt3dadd( -121.378, -110.094, -93.1712, 0.59 ) }
    dend_48 { pt3dadd( -122.392, -110.83, -93.4618, 0.22 ) }
    dend_48 { pt3dadd( -122.971, -111.264, -93.6437, 0.44 ) }
    dend_48 { pt3dadd( -123.782, -111.954, -93.9282, 0.22 ) }
    dend_48 { pt3dadd( -124.902, -112.891, -94.3078, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -78.3921, -63.902, -68.31, 0.29 ) }
    dend_47 { pt3dadd( -79.7564, -63.9325, -68.3812, 0.29 ) }
    dend_47 { pt3dadd( -80.6053, -63.9936, -68.3856, 0.29 ) }
    dend_47 { pt3dadd( -81.4393, -64.0881, -68.3954, 0.66 ) }
    dend_47 { pt3dadd( -81.8382, -64.1548, -68.4026, 0.66 ) }
    dend_47 { pt3dadd( -83.2457, -64.4329, -68.4163, 0.29 ) }
    dend_47 { pt3dadd( -83.8528, -64.5644, -68.4271, 0.29 ) }
    dend_47 { pt3dadd( -84.3078, -64.6849, -68.3923, 0.66 ) }
    dend_47 { pt3dadd( -84.7418, -64.818, -68.3505, 0.66 ) }
    dend_47 { pt3dadd( -86.229, -65.3054, -68.2027, 0.29 ) }
    dend_47 { pt3dadd( -86.7547, -65.4603, -68.1616, 0.52 ) }
    dend_47 { pt3dadd( -87.256, -65.5829, -68.1409, 0.52 ) }
    dend_47 { pt3dadd( -88.6384, -65.8201, -68.0839, 0.22 ) }
    dend_47 { pt3dadd( -89.28, -65.89, -68.0555, 0.59 ) }
    dend_47 { pt3dadd( -89.6926, -65.9136, -68.0233, 0.74 ) }
    dend_47 { pt3dadd( -90.4926, -65.9155, -67.9598, 0.29 ) }
    dend_47 { pt3dadd( -90.8955, -65.9021, -67.9341, 0.29 ) }
    dend_47 { pt3dadd( -91.4207, -65.8611, -67.906, 0.96 ) }
    dend_47 { pt3dadd( -91.9286, -65.7836, -67.924, 0.96 ) }
    dend_47 { pt3dadd( -93.3183, -65.5493, -67.9311, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -22.496, -124.332, 21.3331, 0.29 ) }
    dend_40 { pt3dadd( -22.6081, -124.295, 21.8062, 0.29 ) }
    dend_40 { pt3dadd( -22.8193, -124.239, 22.8494, 0.29 ) }
    dend_40 { pt3dadd( -22.9689, -124.227, 23.5951, 0.59 ) }
    dend_40 { pt3dadd( -23.1913, -124.278, 24.6303, 0.66 ) }
    dend_40 { pt3dadd( -23.4891, -124.454, 26.0884, 0.59 ) }
    dend_40 { pt3dadd( -23.661, -124.673, 27.0557, 0.29 ) }
    dend_40 { pt3dadd( -23.7152, -124.918, 27.6492, 0.52 ) }
    dend_40 { pt3dadd( -23.6753, -125.251, 27.9042, 0.66 ) }
    dend_40 { pt3dadd( -23.495, -126.024, 28.105, 0.37 ) }
    dend_40 { pt3dadd( -23.2104, -127.03, 28.2296, 0.29 ) }
    dend_40 { pt3dadd( -22.9654, -127.833, 28.27, 0.29 ) }
    dend_40 { pt3dadd( -22.7135, -128.634, 28.2665, 0.29 ) }
    dend_40 { pt3dadd( -22.4701, -129.362, 28.2576, 0.29 ) }
    dend_40 { pt3dadd( -22.1421, -130.217, 28.2617, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -21.8272, -130.944, 28.2842, 0.29 ) }
    dend_40 { pt3dadd( -21.2408, -135.095, 33.7271, 0.29 ) }
    dend_40 { pt3dadd( -21.5187, -138.381, 39.8179, 0.29 ) }
    dend_40 { pt3dadd( -20.0458, -141.76, 45.6692, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.496, -124.332, 21.3331, 0.74 ) }
    dend_35 { pt3dadd( -22.988, -125.033, 20.9698, 0.74 ) }
    dend_35 { pt3dadd( -23.4142, -125.753, 20.6583, 0.52 ) }
    dend_35 { pt3dadd( -23.738, -126.362, 20.4321, 0.52 ) }
    dend_35 { pt3dadd( -24.2422, -127.47, 20.0981, 0.59 ) }
    dend_35 { pt3dadd( -24.4474, -128.03, 19.9962, 0.96 ) }
    dend_35 { pt3dadd( -24.5983, -128.636, 19.9282, 1.18 ) }
    dend_35 { pt3dadd( -24.6261, -129.148, 19.8641, 1.18 ) }
    dend_35 { pt3dadd( -24.5729, -129.631, 19.8208, 0.96 ) }
    dend_35 { pt3dadd( -24.3863, -130.336, 19.7334, 0.66 ) }
    dend_35 { pt3dadd( -23.9556, -131.336, 19.4662, 0.52 ) }
    dend_35 { pt3dadd( -23.4821, -132.23, 19.1749, 0.52 ) }
    dend_35 { pt3dadd( -22.8788, -133.175, 18.7886, 0.29 ) }
    dend_35 { pt3dadd( -22.6078, -133.53, 18.6062, 0.37 ) }
    dend_35 { pt3dadd( -21.8526, -134.352, 18.041, 0.29 ) }
    dend_35 { pt3dadd( -21.0079, -135.095, 17.2824, 0.29 ) }
    dend_35 { pt3dadd( -20.6501, -143.152, 15.7582, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -4.97321, -63.7247, -4.47517, 0.37 ) }
    dend_31 { pt3dadd( -6.82658, -64.5688, -3.69025, 0.37 ) }
    dend_31 { pt3dadd( -7.60311, -65.0072, -3.02966, 0.37 ) }
    dend_31 { pt3dadd( -8.14618, -65.3484, -2.45532, 0.37 ) }
    dend_31 { pt3dadd( -8.51181, -65.5862, -2.05704, 0.37 ) }
    dend_31 { pt3dadd( -8.96475, -65.8938, -1.53248, 0.59 ) }
    dend_31 { pt3dadd( -9.4016, -66.2001, -1.01856, 0.74 ) }
    dend_31 { pt3dadd( -9.70917, -66.4362, -0.54131, 0.52 ) }
    dend_31 { pt3dadd( -9.9403, -66.6179, -0.177353, 0.59 ) }
    dend_31 { pt3dadd( -10.1527, -66.81, 0.126403, 0.74 ) }
    dend_31 { pt3dadd( -10.5401, -67.1415, 0.587423, 0.52 ) }
    dend_31 { pt3dadd( -10.7978, -67.3419, 0.838717, 0.52 ) }
    dend_31 { pt3dadd( -11.0508, -67.5144, 1.04462, 0.74 ) }
    dend_31 { pt3dadd( -11.3403, -67.6971, 1.26093, 0.74 ) }
    dend_31 { pt3dadd( -11.619, -67.8764, 1.46109, 0.52 ) }
    dend_31 { pt3dadd( -12.0251, -68.1336, 1.74484, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -4.97321, -63.7247, -4.47517, 0.88 ) }
    dend_18 { pt3dadd( -5.25215, -64.9899, -4.5925, 0.88 ) }
    dend_18 { pt3dadd( -5.8033, -66.5795, -4.61213, 0.66 ) }
    dend_18 { pt3dadd( -6.39097, -67.6963, -4.36058, 0.74 ) }
    dend_18 { pt3dadd( -6.89874, -68.4376, -4.10667, 0.88 ) }
    dend_18 { pt3dadd( -7.78249, -69.5585, -3.69206, 0.88 ) }
    dend_18 { pt3dadd( -8.34356, -70.236, -3.44823, 1.03 ) }
    dend_18 { pt3dadd( -9.03251, -70.9753, -3.12543, 1.03 ) }
    dend_18 { pt3dadd( -10.6053, -72.6982, -2.34248, 1.03 ) }
    dend_18 { pt3dadd( -11.4998, -73.7825, -1.89098, 1.03 ) }
    dend_18 { pt3dadd( -12.2345, -74.8794, -1.51061, 0.88 ) }
    dend_18 { pt3dadd( -12.6458, -75.8228, -1.27824, 0.88 ) }
    dend_18 { pt3dadd( -12.7929, -76.7061, -1.11115, 0.88 ) }
    dend_18 { pt3dadd( -12.6048, -78.4266, -0.936411, 1.25 ) }
    dend_18 { pt3dadd( -12.4226, -79.054, -0.892329, 1.55 ) }
    dend_18 { pt3dadd( -12.062, -79.9383, -0.77273, 1.55 ) }
    dend_18 { pt3dadd( -11.4731, -81.1669, -0.461258, 1.55 ) }
    dend_18 { pt3dadd( -11.0633, -81.9339, -0.155217, 1.55 ) }
    dend_18 { pt3dadd( -10.288, -83.264, 0.594035, 1.03 ) }
    dend_18 { pt3dadd( -9.66953, -84.2173, 1.33363, 1.03 ) }
    dend_18 { pt3dadd( -9.14617, -84.9694, 2.02753, 0.81 ) }
    dend_18 { pt3dadd( -8.30126, -86.0881, 3.24367, 0.81 ) }
    dend_18 { pt3dadd( -7.69856, -86.823, 4.13555, 1.03 ) }
    dend_18 { pt3dadd( -7.09633, -87.4655, 4.96329, 1.03 ) }
    dend_18 { pt3dadd( -6.38676, -88.1331, 5.83213, 1.03 ) }
    dend_18 { pt3dadd( -5.77989, -88.6794, 6.45041, 0.88 ) }
    dend_18 { pt3dadd( -4.82649, -89.5781, 7.28904, 0.88 ) }
    dend_18 { pt3dadd( -4.33755, -90.0601, 7.64878, 0.96 ) }
    dend_18 { pt3dadd( -3.76906, -90.6816, 8.02622, 0.96 ) }
    dend_18 { pt3dadd( -2.99304, -91.6266, 8.50525, 1.33 ) }
    dend_18 { pt3dadd( -2.57898, -92.1936, 8.73224, 1.62 ) }
    dend_18 { pt3dadd( -2.23591, -92.7072, 8.91921, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.77808, -29.9359, -6.27574, 0.66 ) }
    dend_16 { pt3dadd( 7.22411, -31.8939, -4.56203, 0.66 ) }
    dend_16 { pt3dadd( 7.3075, -32.5399, -4.06422, 0.88 ) }
    dend_16 { pt3dadd( 7.44812, -33.8268, -3.19879, 1.03 ) }
    dend_16 { pt3dadd( 7.52911, -34.4409, -2.82423, 1.03 ) }
    dend_16 { pt3dadd( 7.62204, -34.9817, -2.51088, 1.03 ) }
    dend_16 { pt3dadd( 7.77032, -35.6483, -2.13396, 0.37 ) }
    dend_16 { pt3dadd( 7.91702, -36.3689, -1.81577, 0.37 ) }
    dend_16 { pt3dadd( 8.17287, -37.0847, -1.5305, 0.59 ) }
    dend_16 { pt3dadd( 8.5982, -37.6926, -1.32908, 0.81 ) }
    dend_16 { pt3dadd( 8.9591, -38.0304, -1.19433, 0.81 ) }
    dend_16 { pt3dadd( 9.37845, -38.3223, -1.03008, 0.52 ) }
    dend_16 { pt3dadd( 9.77419, -38.5549, -0.858789, 0.81 ) }
    dend_16 { pt3dadd( 10.3602, -38.8882, -0.576421, 1.25 ) }
    dend_16 { pt3dadd( 10.5955, -39.0572, -0.434831, 1.69 ) }
    dend_16 { pt3dadd( 10.8737, -39.3645, -0.209168, 1.69 ) }
    dend_16 { pt3dadd( 11.202, -40.1248, 0.230111, 0.96 ) }
    dend_16 { pt3dadd( 11.2838, -40.6271, 0.456433, 0.66 ) }
    dend_16 { pt3dadd( 11.3055, -41.0218, 0.612538, 0.81 ) }
    dend_16 { pt3dadd( 11.3276, -41.8502, 0.930151, 0.44 ) }
    dend_16 { pt3dadd( 11.3823, -42.5066, 1.19001, 0.44 ) }
    dend_16 { pt3dadd( 11.4714, -43.0224, 1.39989, 0.44 ) }
    dend_16 { pt3dadd( 11.6374, -43.4813, 1.63752, 0.88 ) }
    dend_16 { pt3dadd( 12.0157, -44.0679, 2.08398, 1.25 ) }
    dend_16 { pt3dadd( 12.5035, -44.6058, 2.60687, 0.66 ) }
    dend_16 { pt3dadd( 12.9541, -45.0093, 3.04916, 0.52 ) }
    dend_16 { pt3dadd( 13.2303, -45.2446, 3.30883, 0.52 ) }
    dend_16 { pt3dadd( 13.9027, -45.8552, 3.95452, 0.74 ) }
    dend_16 { pt3dadd( 14.4457, -46.405, 4.47118, 1.25 ) }
    dend_16 { pt3dadd( 14.6545, -46.6437, 4.6516, 1.25 ) }
    dend_16 { pt3dadd( 14.9821, -47.059, 4.89244, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 15.375, -47.6021, 5.10818, 0.44 ) }
    dend_16 { pt3dadd( 15.8758, -48.3267, 5.28865, 0.37 ) }
    dend_16 { pt3dadd( 16.1745, -48.7566, 5.32891, 0.37 ) }
    dend_16 { pt3dadd( 16.4888, -49.189, 5.33106, 0.96 ) }
    dend_16 { pt3dadd( 16.7337, -49.5104, 5.32313, 1.33 ) }
    dend_16 { pt3dadd( 17.47, -50.3821, 5.2831, 0.29 ) }
    dend_16 { pt3dadd( 17.7429, -50.6623, 5.26315, 0.29 ) }
    dend_16 { pt3dadd( 18.0206, -50.9136, 5.23457, 0.29 ) }
    dend_16 { pt3dadd( 18.1243, -51.0068, 5.22474, 0.44 ) }
    dend_16 { pt3dadd( 21.2377, -56.1951, 7.26729, 0.44 ) }
    dend_16 { pt3dadd( 25.1407, -61.1063, 8.58779, 0.44 ) }
    dend_16 { pt3dadd( 28.3929, -66.5231, 9.38479, 0.44 ) }
    dend_16 { pt3dadd( 31.9687, -71.7095, 10.4438, 0.44 ) }
    dend_16 { pt3dadd( 35.3005, -76.9323, 11.9855, 0.44 ) }
    dend_16 { pt3dadd( 38.4003, -82.3851, 13.064, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.77808, -29.9359, -6.27574, 1.03 ) }
    dend_11 { pt3dadd( 6.78117, -31.525, -6.437, 1.03 ) }
    dend_11 { pt3dadd( 6.95641, -33.0967, -6.61704, 1.03 ) }
    dend_11 { pt3dadd( 7.21349, -34.2276, -6.76584, 0.96 ) }
    dend_11 { pt3dadd( 7.54778, -35.2914, -6.91969, 0.96 ) }
    dend_11 { pt3dadd( 7.95715, -36.3155, -7.08095, 0.96 ) }
    dend_11 { pt3dadd( 8.29617, -37.0008, -7.17006, 1.18 ) }
    dend_11 { pt3dadd( 9.02298, -37.907, -7.23454, 1.47 ) }
    dend_11 { pt3dadd( 9.7871, -38.6124, -7.22904, 2.21 ) }
    dend_11 { pt3dadd( 10.1206, -38.8855, -7.19808, 2.21 ) }
    dend_11 { pt3dadd( 10.6528, -39.3297, -7.08547, 1.99 ) }
    dend_11 { pt3dadd( 11.6044, -40.2135, -6.76454, 1.33 ) }
    dend_11 { pt3dadd( 12.4836, -41.2123, -6.34853, 0.88 ) }
    dend_11 { pt3dadd( 13.043, -42.0313, -5.98089, 0.74 ) }
    dend_11 { pt3dadd( 13.4076, -42.8213, -5.6377, 0.74 ) }
    dend_11 { pt3dadd( 13.6881, -43.7848, -5.25464, 1.33 ) }
    dend_11 { pt3dadd( 13.7867, -44.3782, -5.04964, 1.62 ) }
    dend_11 { pt3dadd( 13.8399, -45.0334, -4.86591, 1.92 ) }
    dend_11 { pt3dadd( 13.8705, -45.7396, -4.72531, 1.69 ) }
    dend_11 { pt3dadd( 13.976, -47.084, -4.56024, 1.33 ) }
    dend_11 { pt3dadd( 14.1717, -48.4415, -4.49432, 1.03 ) }
    dend_11 { pt3dadd( 14.3791, -49.3709, -4.5146, 0.88 ) }
    dend_11 { pt3dadd( 14.6522, -50.2239, -4.58117, 1.03 ) }
    dend_11 { pt3dadd( 15.0994, -51.3318, -4.72173, 1.03 ) }
    dend_11 { pt3dadd( 15.6285, -52.4364, -4.92285, 1.03 ) }
    dend_11 { pt3dadd( 16.116, -53.373, -5.15566, 1.33 ) }
    dend_11 { pt3dadd( 16.4638, -54.0798, -5.37668, 1.69 ) }
    dend_11 { pt3dadd( 16.8222, -54.9443, -5.68174, 1.47 ) }
    dend_11 { pt3dadd( 17.009, -55.5555, -5.9165, 1.03 ) }
    dend_11 { pt3dadd( 17.188, -56.4951, -6.28879, 0.96 ) }
    dend_11 { pt3dadd( 17.2649, -57.3591, -6.65029, 0.96 ) }
    dend_11 { pt3dadd( 17.2779, -58.4231, -7.09649, 1.4 ) }
    dend_11 { pt3dadd( 17.2425, -59.5554, -7.55188, 1.4 ) }
    dend_11 { pt3dadd( 17.2065, -60.5442, -7.93998, 1.55 ) }
    dend_11 { pt3dadd( 17.2157, -61.0798, -8.13656, 1.77 ) }
    dend_11 { pt3dadd( 17.3089, -62.1025, -8.47448, 0.96 ) }
    dend_11 { pt3dadd( 17.4918, -63.0123, -8.72537, 0.66 ) }
    dend_11 { pt3dadd( 17.7941, -63.8558, -8.87506, 0.66 ) }
    dend_11 { pt3dadd( 18.2441, -64.6539, -8.94691, 0.96 ) }
    dend_11 { pt3dadd( 18.8461, -65.4293, -8.97167, 1.11 ) }
    dend_11 { pt3dadd( 19.1705, -65.7627, -8.97784, 1.4 ) }
    dend_11 { pt3dadd( 19.467, -66.0238, -8.98638, 1.4 ) }
    dend_11 { pt3dadd( 20.0892, -66.5661, -9.00746, 1.4 ) }
    dend_11 { pt3dadd( 20.8222, -67.2797, -9.05161, 0.66 ) }
    dend_11 { pt3dadd( 21.1409, -67.6683, -9.09765, 0.52 ) }
    dend_11 { pt3dadd( 21.4946, -68.23, -9.18433, 0.52 ) }
    dend_11 { pt3dadd( 21.957, -69.1566, -9.30219, 0.81 ) }
    dend_11 { pt3dadd( 22.3828, -70.197, -9.36721, 1.03 ) }
    dend_11 { pt3dadd( 22.5997, -70.8872, -9.38802, 1.03 ) }
    dend_11 { pt3dadd( 22.8179, -71.8213, -9.36954, 1.03 ) }
    dend_11 { pt3dadd( 22.97, -72.7563, -9.38151, 1.03 ) }
    dend_11 { pt3dadd( 23.0828, -73.7317, -9.42096, 0.88 ) }
    dend_11 { pt3dadd( 23.1934, -74.9272, -9.55343, 1.03 ) }
    dend_11 { pt3dadd( 23.2974, -75.9947, -9.74619, 0.52 ) }
    dend_11 { pt3dadd( 23.4139, -77.0058, -10.0157, 0.52 ) }
    dend_11 { pt3dadd( 23.5843, -78.483, -10.5676, 0.88 ) }
    dend_11 { pt3dadd( 23.6521, -79.0875, -10.856, 1.11 ) }
    dend_11 { pt3dadd( 23.7458, -80.0476, -11.3858, 0.59 ) }
    dend_11 { pt3dadd( 23.7831, -80.4545, -11.6088, 0.59 ) }
    dend_11 { pt3dadd( 23.8753, -81.365, -11.9805, 0.52 ) }
    dend_11 { pt3dadd( 23.9578, -82.3299, -12.1648, 0.52 ) }
    dend_11 { pt3dadd( 23.9824, -83.1076, -12.06, 1.11 ) }
    dend_11 { pt3dadd( 23.9479, -83.763, -11.8353, 1.25 ) }
    dend_11 { pt3dadd( 23.835, -84.751, -11.3398, 1.18 ) }
    dend_11 { pt3dadd( 23.7022, -85.7147, -10.7817, 0.52 ) }
    dend_11 { pt3dadd( 23.6199, -86.382, -10.3388, 0.52 ) }
    dend_11 { pt3dadd( 23.5497, -87.2955, -9.75512, 0.52 ) }
    dend_11 { pt3dadd( 23.5358, -87.6406, -9.57431, 0.81 ) }
    dend_11 { pt3dadd( 23.5337, -88.2762, -9.34472, 0.74 ) }
    dend_11 { pt3dadd( 23.5264, -89.1002, -9.18725, 0.74 ) }
    dend_11 { pt3dadd( 23.4908, -89.9219, -9.11679, 1.03 ) }
    dend_11 { pt3dadd( 23.3747, -91.015, -9.10532, 0.66 ) }
    dend_11 { pt3dadd( 23.2395, -91.7389, -9.12619, 0.52 ) }
    dend_11 { pt3dadd( 22.9843, -92.5797, -9.16919, 1.11 ) }
    dend_11 { pt3dadd( 22.6816, -93.2883, -9.2624, 1.11 ) }
    dend_11 { pt3dadd( 22.1713, -94.2976, -9.46678, 0.81 ) }
    dend_11 { pt3dadd( 21.5987, -95.3543, -9.75824, 0.66 ) }
    dend_11 { pt3dadd( 21.2016, -96.0953, -9.98883, 0.88 ) }
    dend_11 { pt3dadd( 20.7121, -97.1056, -10.3661, 0.66 ) }
    dend_11 { pt3dadd( 20.1157, -98.4404, -11.0083, 0.59 ) }
    dend_11 { pt3dadd( 19.7652, -99.3151, -11.5148, 0.88 ) }
    dend_11 { pt3dadd( 19.4899, -100.08, -12.0099, 1.18 ) }
    dend_11 { pt3dadd( 19.3017, -100.634, -12.3767, 0.96 ) }
    dend_11 { pt3dadd( 19.0618, -101.365, -12.8659, 0.96 ) }
    dend_11 { pt3dadd( 18.6479, -102.698, -13.6837, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 18.5111, -103.136, -13.9142, 0.81 ) }
    dend_11 { pt3dadd( 18.2549, -103.991, -14.3115, 0.66 ) }
    dend_11 { pt3dadd( 18.091, -104.639, -14.516, 0.66 ) }
    dend_11 { pt3dadd( 17.9434, -105.434, -14.6304, 0.96 ) }
    dend_11 { pt3dadd( 17.8868, -106.396, -14.4606, 0.88 ) }
    dend_11 { pt3dadd( 17.9304, -107.228, -14.1343, 0.88 ) }
    dend_11 { pt3dadd( 17.9908, -107.952, -13.8022, 0.37 ) }
    dend_11 { pt3dadd( 18.1485, -109.27, -13.1587, 1.03 ) }
    dend_11 { pt3dadd( 18.2247, -109.966, -12.8368, 1.03 ) }
    dend_11 { pt3dadd( 18.3186, -111.508, -12.1559, 0.44 ) }
    dend_11 { pt3dadd( 18.3342, -112.635, -11.7847, 0.44 ) }
    dend_11 { pt3dadd( 18.3208, -113.297, -11.7249, 0.74 ) }
    dend_11 { pt3dadd( 18.3026, -113.989, -11.9006, 0.74 ) }
    dend_11 { pt3dadd( 18.2891, -114.955, -12.4032, 0.44 ) }
    dend_11 { pt3dadd( 18.3046, -115.731, -12.9029, 0.66 ) }
    dend_11 { pt3dadd( 18.3654, -116.85, -13.7195, 0.44 ) }
    dend_11 { pt3dadd( 18.4951, -118.45, -14.9076, 0.88 ) }
    dend_11 { pt3dadd( 18.682, -120.201, -16.1501, 0.52 ) }
    dend_11 { pt3dadd( 18.7966, -121.092, -16.7683, 0.74 ) }
    dend_11 { pt3dadd( 18.9816, -122.286, -17.5705, 1.33 ) }
    dend_11 { pt3dadd( 19.088, -122.964, -17.9914, 1.33 ) }
    dend_11 { pt3dadd( 19.265, -124.357, -18.7187, 0.74 ) }
    dend_11 { pt3dadd( 19.3492, -125.242, -19.0659, 0.66 ) }
    dend_11 { pt3dadd( 19.3963, -126.498, -19.431, 0.66 ) }
    dend_11 { pt3dadd( 19.3548, -127.373, -19.6516, 0.81 ) }
    dend_11 { pt3dadd( 19.2144, -128.269, -19.862, 0.59 ) }
    dend_11 { pt3dadd( 19.0599, -128.871, -19.9725, 1.18 ) }
    dend_11 { pt3dadd( 18.9598, -129.151, -20.0147, 1.18 ) }
    dend_11 { pt3dadd( 18.5578, -130.144, -20.1364, 0.44 ) }
    dend_11 { pt3dadd( 18.2214, -131.005, -20.1618, 0.44 ) }
    dend_11 { pt3dadd( 17.9844, -131.727, -20.1442, 1.03 ) }
    dend_11 { pt3dadd( 17.8858, -132.239, -20.1012, 1.4 ) }
    dend_11 { pt3dadd( 17.8877, -133.313, -19.8717, 0.52 ) }
    dend_11 { pt3dadd( 17.9687, -134.035, -19.6877, 0.52 ) }
    dend_11 { pt3dadd( 18.2393, -134.978, -19.3733, 0.74 ) }
    dend_11 { pt3dadd( 18.3883, -135.315, -19.2162, 0.74 ) }
    dend_11 { pt3dadd( 18.7651, -135.983, -18.772, 0.59 ) }
    dend_11 { pt3dadd( 19.2968, -136.729, -18.112, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.77808, -29.9359, -6.27574, 0.88 ) }
    dend_2 { pt3dadd( 10.6055, -29.8898, -9.40244, 0.88 ) }
    dend_2 { pt3dadd( 11.7066, -29.8371, -10.1741, 0.88 ) }
    dend_2 { pt3dadd( 12.8136, -29.7758, -10.8285, 1.03 ) }
    dend_2 { pt3dadd( 13.566, -29.7317, -11.2046, 1.33 ) }
    dend_2 { pt3dadd( 14.2601, -29.6959, -11.5181, 1.62 ) }
    dend_2 { pt3dadd( 15.2639, -29.6595, -11.9403, 1.84 ) }
    dend_2 { pt3dadd( 16.1281, -29.5801, -12.1842, 1.47 ) }
    dend_2 { pt3dadd( 17.1493, -29.4967, -12.617, 1.18 ) }
    dend_2 { pt3dadd( 17.874, -29.4187, -13.2726, 0.81 ) }
    dend_2 { pt3dadd( 18.6127, -29.312, -14.2417, 0.81 ) }
    dend_2 { pt3dadd( 19.0699, -29.2577, -14.9389, 1.11 ) }
    dend_2 { pt3dadd( 20.0219, -29.2128, -16.5576, 1.33 ) }
    dend_2 { pt3dadd( 21.0122, -29.2163, -18.3386, 1.77 ) }
    dend_2 { pt3dadd( 23.2589, -29.3387, -22.4558, 1.47 ) }
    dend_2 { pt3dadd( 23.9868, -29.4056, -23.7441, 1.11 ) }
    dend_2 { pt3dadd( 24.7403, -29.4848, -24.9769, 1.11 ) }
    dend_2 { pt3dadd( 25.7755, -29.5903, -26.4392, 0.81 ) }
    dend_2 { pt3dadd( 26.4231, -29.6592, -27.1616, 0.96 ) }
    dend_2 { pt3dadd( 27.4818, -29.7293, -28.0047, 0.88 ) }
    dend_2 { pt3dadd( 28.3658, -29.6586, -28.5441, 0.74 ) }
    dend_2 { pt3dadd( 29.0414, -29.4649, -28.998, 0.59 ) }
    dend_2 { pt3dadd( 29.904, -29.0301, -29.7082, 1.03 ) }
    dend_2 { pt3dadd( 30.5435, -28.6197, -30.2699, 1.55 ) }
    dend_2 { pt3dadd( 31.131, -28.2163, -30.7977, 1.69 ) }
    dend_2 { pt3dadd( 32.8823, -26.9971, -32.4395, 1.69 ) }
    dend_2 { pt3dadd( 33.4216, -26.6373, -32.9677, 1.69 ) }
    dend_2 { pt3dadd( 34.7748, -25.8091, -34.2781, 0.88 ) }
    dend_2 { pt3dadd( 35.5467, -25.4118, -34.9741, 0.81 ) }
    dend_2 { pt3dadd( 36.4802, -25.0443, -35.6983, 1.11 ) }
    dend_2 { pt3dadd( 37.7097, -24.7192, -36.5003, 1.18 ) }
    dend_2 { pt3dadd( 38.8405, -24.5912, -37.0675, 0.59 ) }
    dend_2 { pt3dadd( 39.3478, -24.6028, -37.2954, 0.59 ) }
    dend_2 { pt3dadd( 40.5893, -24.8365, -37.7351, 0.96 ) }
    dend_2 { pt3dadd( 41.4776, -25.1518, -38.0259, 1.18 ) }
    dend_2 { pt3dadd( 42.2347, -25.5355, -38.2296, 1.18 ) }
    dend_2 { pt3dadd( 43.0093, -26.0042, -38.3691, 1.4 ) }
    dend_2 { pt3dadd( 43.9021, -26.5902, -38.4866, 1.4 ) }
    dend_2 { pt3dadd( 44.7322, -27.1147, -38.5813, 1.11 ) }
    dend_2 { pt3dadd( 45.3209, -27.4334, -38.6321, 1.11 ) }
    dend_2 { pt3dadd( 46.0489, -27.7156, -38.6831, 1.03 ) }
    dend_2 { pt3dadd( 47.0052, -27.9522, -38.7337, 1.03 ) }
    dend_2 { pt3dadd( 47.8411, -28.0576, -38.7638, 1.03 ) }
    dend_2 { pt3dadd( 48.807, -28.0894, -38.7839, 0.96 ) }
    dend_2 { pt3dadd( 50.1397, -28.0326, -38.8087, 0.88 ) }
    dend_2 { pt3dadd( 51.5923, -27.8944, -38.8005, 0.88 ) }
    dend_2 { pt3dadd( 52.5568, -27.7542, -38.775, 1.03 ) }
    dend_2 { pt3dadd( 53.3139, -27.6215, -38.7647, 1.11 ) }
    dend_2 { pt3dadd( 53.9347, -27.5094, -38.7814, 1.18 ) }
    dend_2 { pt3dadd( 54.492, -27.4339, -38.8663, 1.18 ) }
    dend_2 { pt3dadd( 55.5975, -27.3977, -39.2695, 0.81 ) }
    dend_2 { pt3dadd( 56.3761, -27.4863, -39.7291, 0.74 ) }
    dend_2 { pt3dadd( 57.3833, -27.7067, -40.4616, 1.18 ) }
    dend_2 { pt3dadd( 58.1469, -27.9175, -41.0768, 1.4 ) }
    dend_2 { pt3dadd( 59.6912, -28.3829, -42.4345, 1.18 ) }
    dend_2 { pt3dadd( 60.8739, -28.7309, -43.543, 0.88 ) }
    dend_2 { pt3dadd( 61.7525, -28.9541, -44.4367, 0.74 ) }
    dend_2 { pt3dadd( 62.6431, -29.1223, -45.3321, 0.74 ) }
    dend_2 { pt3dadd( 63.4607, -29.1879, -46.0966, 1.11 ) }
    dend_2 { pt3dadd( 64.3379, -29.1556, -46.8736, 1.4 ) }
    dend_2 { pt3dadd( 65.2142, -29.0677, -47.6122, 1.4 ) }
    dend_2 { pt3dadd( 66.4336, -28.9518, -48.6589, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 67.1473, -28.9167, -49.3072, 0.74 ) }
    dend_2 { pt3dadd( 68.0424, -28.9693, -50.1673, 0.66 ) }
    dend_2 { pt3dadd( 69.1057, -29.1978, -51.2366, 0.81 ) }
    dend_2 { pt3dadd( 70.181, -29.6039, -52.2657, 0.74 ) }
    dend_2 { pt3dadd( 71.0782, -30.0422, -53.1077, 1.25 ) }
    dend_2 { pt3dadd( 71.5777, -30.3081, -53.5475, 1.69 ) }
    dend_2 { pt3dadd( 72.2314, -30.6269, -54.0858, 1.69 ) }
    dend_2 { pt3dadd( 72.9181, -30.865, -54.5515, 1.4 ) }
    dend_2 { pt3dadd( 73.9935, -31.018, -55.1045, 0.88 ) }
    dend_2 { pt3dadd( 75.5687, -30.9258, -55.7476, 0.81 ) }
    dend_2 { pt3dadd( 76.2853, -30.8175, -56.0, 0.81 ) }
    dend_2 { pt3dadd( 77.2856, -30.6538, -56.2946, 0.81 ) }
    dend_2 { pt3dadd( 78.572, -30.451, -56.5836, 0.81 ) }
    dend_2 { pt3dadd( 79.3752, -30.3546, -56.7095, 0.81 ) }
    dend_2 { pt3dadd( 80.5084, -30.3043, -56.8272, 0.81 ) }
    dend_2 { pt3dadd( 81.2675, -30.374, -56.8507, 0.96 ) }
    dend_2 { pt3dadd( 82.4268, -30.6738, -56.9196, 0.96 ) }
    dend_2 { pt3dadd( 83.2069, -31.0057, -57.0441, 1.18 ) }
    dend_2 { pt3dadd( 83.8971, -31.3864, -57.2498, 1.47 ) }
    dend_2 { pt3dadd( 84.5995, -31.8132, -57.5169, 1.47 ) }
    dend_2 { pt3dadd( 85.6219, -32.4426, -57.9517, 0.74 ) }
    dend_2 { pt3dadd( 86.8124, -33.1268, -58.4877, 0.74 ) }
    dend_2 { pt3dadd( 88.2737, -33.8658, -59.1845, 0.66 ) }
    dend_2 { pt3dadd( 89.6385, -34.4729, -59.8842, 0.74 ) }
    dend_2 { pt3dadd( 90.4922, -34.7846, -60.3272, 0.81 ) }
    dend_2 { pt3dadd( 91.4735, -35.0431, -60.8193, 0.81 ) }
    dend_2 { pt3dadd( 91.9741, -35.1166, -61.0516, 1.11 ) }
    dend_2 { pt3dadd( 93.179, -35.1478, -61.5777, 1.25 ) }
    dend_2 { pt3dadd( 93.7102, -35.1009, -61.8449, 1.62 ) }
    dend_2 { pt3dadd( 94.2936, -34.9915, -62.24, 1.62 ) }
    dend_2 { pt3dadd( 95.428, -34.7243, -63.1519, 0.59 ) }
    dend_2 { pt3dadd( 96.1328, -34.5483, -63.7823, 0.59 ) }
    dend_2 { pt3dadd( 97.1912, -34.2975, -64.7591, 0.88 ) }
    dend_2 { pt3dadd( 98.6117, -33.9954, -66.08, 1.4 ) }
    dend_2 { pt3dadd( 100.047, -33.7471, -67.3671, 0.74 ) }
    dend_2 { pt3dadd( 100.895, -33.6409, -68.0925, 0.59 ) }
    dend_2 { pt3dadd( 101.618, -33.594, -68.6493, 0.81 ) }
    dend_2 { pt3dadd( 102.265, -33.6023, -69.0255, 0.81 ) }
    dend_2 { pt3dadd( 102.887, -33.6529, -69.2355, 0.96 ) }
    dend_2 { pt3dadd( 103.529, -33.7101, -69.3402, 0.96 ) }
    dend_2 { pt3dadd( 104.296, -33.7615, -69.4196, 0.59 ) }
    dend_2 { pt3dadd( 105.491, -33.7851, -69.5637, 0.59 ) }
    dend_2 { pt3dadd( 106.647, -33.7454, -69.7056, 0.66 ) }
    dend_2 { pt3dadd( 107.318, -33.6859, -69.8467, 1.03 ) }
    dend_2 { pt3dadd( 108.414, -33.5521, -70.1449, 1.03 ) }
    dend_2 { pt3dadd( 109.494, -33.3404, -70.7284, 0.59 ) }
    dend_2 { pt3dadd( 110.031, -33.1902, -71.1343, 0.59 ) }
    dend_2 { pt3dadd( 110.733, -32.9597, -71.771, 0.59 ) }
    dend_2 { pt3dadd( 111.797, -32.6382, -72.8231, 1.11 ) }
    dend_2 { pt3dadd( 112.274, -32.529, -73.2997, 1.33 ) }
    dend_2 { pt3dadd( 114.955, -32.0815, -75.8613, 1.03 ) }
    dend_2 { pt3dadd( 115.44, -32.0143, -76.2848, 1.4 ) }
    dend_2 { pt3dadd( 116.403, -31.8936, -77.0323, 0.81 ) }
    dend_2 { pt3dadd( 117.38, -31.7752, -77.6802, 0.74 ) }
    dend_2 { pt3dadd( 118.625, -31.6256, -78.3301, 0.59 ) }
    dend_2 { pt3dadd( 119.455, -31.5235, -78.6708, 0.59 ) }
    dend_2 { pt3dadd( 120.791, -31.3645, -79.0143, 0.59 ) }
    dend_2 { pt3dadd( 122.375, -31.1109, -79.4169, 0.88 ) }
    dend_2 { pt3dadd( 122.938, -30.9652, -79.5528, 1.25 ) }
    dend_2 { pt3dadd( 123.438, -30.7839, -79.6677, 1.55 ) }
    dend_2 { pt3dadd( 124.181, -30.4638, -79.8491, 1.55 ) }
    dend_2 { pt3dadd( 124.782, -30.1941, -80.0129, 1.33 ) }
    dend_2 { pt3dadd( 125.525, -29.8588, -80.2214, 0.66 ) }
    dend_2 { pt3dadd( 126.476, -29.4492, -80.4841, 0.66 ) }
    dend_2 { pt3dadd( 127.109, -29.2014, -80.7197, 0.66 ) }
    dend_2 { pt3dadd( 128.264, -28.7647, -81.2925, 0.66 ) }
    dend_2 { pt3dadd( 128.771, -28.6341, -81.7587, 0.66 ) }
    dend_2 { pt3dadd( 129.078, -28.5847, -82.1219, 0.96 ) }
    dend_2 { pt3dadd( 129.442, -28.5536, -82.599, 0.96 ) }
    dend_2 { pt3dadd( 130.535, -28.5481, -84.0693, 0.74 ) }
    dend_2 { pt3dadd( 131.19, -28.5764, -84.9415, 1.62 ) }
    dend_2 { pt3dadd( 133.81, -28.7481, -88.2763, 0.66 ) }
    dend_2 { pt3dadd( 134.208, -28.7642, -88.7576, 0.66 ) }
    dend_2 { pt3dadd( 134.82, -28.7708, -89.4242, 1.11 ) }
    dend_2 { pt3dadd( 135.624, -28.764, -90.1915, 1.11 ) }
    dend_2 { pt3dadd( 136.448, -28.7225, -90.8178, 0.52 ) }
    dend_2 { pt3dadd( 137.266, -28.6271, -91.2851, 0.52 ) }
    dend_2 { pt3dadd( 138.309, -28.3913, -91.7131, 1.25 ) }
    dend_2 { pt3dadd( 139.113, -28.1743, -92.0498, 0.88 ) }
    dend_2 { pt3dadd( 140.646, -27.6704, -92.6938, 0.44 ) }
    dend_2 { pt3dadd( 141.522, -27.3271, -93.0468, 0.44 ) }
    dend_2 { pt3dadd( 142.82, -26.7527, -93.5466, 0.52 ) }
    dend_2 { pt3dadd( 143.68, -26.3367, -93.8638, 0.88 ) }
    dend_2 { pt3dadd( 144.107, -26.1203, -94.0113, 1.11 ) }
    dend_2 { pt3dadd( 144.471, -25.9106, -94.1831, 1.11 ) }
    dend_2 { pt3dadd( 144.766, -25.7144, -94.374, 1.11 ) }
    dend_2 { pt3dadd( 145.729, -25.0063, -95.2649, 0.52 ) }
    dend_2 { pt3dadd( 146.114, -24.7221, -95.7612, 0.52 ) }
    dend_2 { pt3dadd( 146.648, -24.3432, -96.5451, 0.81 ) }
    dend_2 { pt3dadd( 147.902, -23.521, -98.4335, 0.81 ) }
    dend_2 { pt3dadd( 148.496, -23.1537, -99.3037, 1.11 ) }
    dend_2 { pt3dadd( 148.759, -23.005, -99.6468, 1.92 ) }
    dend_2 { pt3dadd( 150.299, -22.2464, -101.301, 0.59 ) }
    dend_2 { pt3dadd( 150.496, -22.1665, -101.461, 0.59 ) }
    dend_2 { pt3dadd( 151.223, -21.947, -101.825, 0.88 ) }
    dend_2 { pt3dadd( 152.162, -21.7458, -102.066, 0.44 ) }
    dend_2 { pt3dadd( 153.7, -21.4885, -102.37, 0.44 ) }
    dend_2 { pt3dadd( 154.913, -21.3245, -102.573, 0.74 ) }
    dend_2 { pt3dadd( 155.598, -21.2621, -102.71, 0.74 ) }
    dend_2 { pt3dadd( 156.62, -21.2351, -103.085, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 157.232, -21.2693, -103.447, 0.52 ) }
    dend_2 { pt3dadd( 158.152, -21.3865, -104.184, 0.59 ) }
    dend_2 { pt3dadd( 158.502, -21.4338, -104.509, 0.59 ) }
    dend_2 { pt3dadd( 160.032, -21.5809, -106.023, 0.59 ) }
    dend_2 { pt3dadd( 161.041, -21.6127, -107.021, 0.81 ) }
    dend_2 { pt3dadd( 161.989, -21.569, -107.959, 1.4 ) }
    dend_2 { pt3dadd( 162.495, -21.4843, -108.42, 1.55 ) }
    dend_2 { pt3dadd( 163.664, -21.0891, -109.309, 0.44 ) }
    dend_2 { pt3dadd( 164.163, -20.8272, -109.595, 0.88 ) }
    dend_2 { pt3dadd( 164.777, -20.427, -109.801, 0.88 ) }
    dend_2 { pt3dadd( 165.446, -19.9865, -110.006, 0.59 ) }
    dend_2 { pt3dadd( 166.479, -19.3495, -110.336, 0.59 ) }
    dend_2 { pt3dadd( 167.178, -18.9961, -110.657, 0.81 ) }
    dend_2 { pt3dadd( 167.975, -18.6904, -111.118, 0.81 ) }
    dend_2 { pt3dadd( 169.033, -18.3628, -111.863, 0.52 ) }
    dend_2 { pt3dadd( 170.234, -18.0286, -112.87, 0.74 ) }
    dend_2 { pt3dadd( 170.628, -17.9145, -113.345, 0.74 ) }
    dend_2 { pt3dadd( 171.473, -17.581, -114.848, 0.37 ) }
    dend_2 { pt3dadd( 171.815, -17.3746, -115.67, 0.37 ) }
    dend_2 { pt3dadd( 172.249, -16.9822, -117.008, 0.37 ) }
    dend_2 { pt3dadd( 172.56, -16.5653, -118.195, 0.59 ) }
    dend_2 { pt3dadd( 173.378, -15.2665, -121.448, 0.88 ) }
    dend_2 { pt3dadd( 173.769, -14.6417, -122.927, 0.52 ) }
    dend_2 { pt3dadd( 173.925, -14.4401, -123.448, 0.52 ) }
    dend_2 { pt3dadd( 174.306, -14.0973, -124.584, 0.52 ) }
    dend_2 { pt3dadd( 174.654, -13.8771, -125.417, 0.81 ) }
    dend_2 { pt3dadd( 175.152, -13.6411, -126.373, 0.59 ) }
    dend_2 { pt3dadd( 175.613, -13.4774, -127.1, 0.59 ) }
    dend_2 { pt3dadd( 177.174, -13.0624, -129.428, 1.18 ) }
    dend_2 { pt3dadd( 179.018, -12.6744, -132.338, 0.74 ) }
    dend_2 { pt3dadd( 179.461, -12.6025, -133.105, 0.74 ) }
    dend_2 { pt3dadd( 179.862, -12.5477, -133.878, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -69.1684, 139.292, -47.7986, 0.29 ) }
    dend_87 { pt3dadd( -71.0721, 139.117, -48.1859, 0.29 ) }
    dend_87 { pt3dadd( -72.6009, 139.186, -48.5519, 0.29 ) }
    dend_87 { pt3dadd( -73.3812, 139.409, -48.8806, 0.59 ) }
    dend_87 { pt3dadd( -74.2558, 139.852, -49.3489, 0.59 ) }
    dend_87 { pt3dadd( -74.9637, 140.307, -49.7463, 0.59 ) }
    dend_87 { pt3dadd( -75.7194, 140.862, -50.1583, 0.44 ) }
    dend_87 { pt3dadd( -76.2916, 141.506, -50.5277, 0.59 ) }
    dend_87 { pt3dadd( -77.3161, 142.797, -51.3614, 0.37 ) }
    dend_87 { pt3dadd( -77.8164, 143.414, -51.8116, 0.29 ) }
    dend_87 { pt3dadd( -78.3343, 143.978, -52.2497, 0.59 ) }
    dend_87 { pt3dadd( -78.9067, 144.548, -52.7055, 0.59 ) }
    dend_87 { pt3dadd( -80.1586, 145.751, -53.6747, 0.29 ) }
    dend_87 { pt3dadd( -81.3162, 146.904, -54.6232, 0.29 ) }
    dend_87 { pt3dadd( -81.8506, 147.458, -55.1148, 0.29 ) }
    dend_87 { pt3dadd( -82.8668, 148.515, -56.2301, 0.29 ) }
    dend_87 { pt3dadd( -83.5068, 149.17, -57.0761, 0.29 ) }
    dend_87 { pt3dadd( -84.1812, 149.85, -58.0676, 0.52 ) }
    dend_87 { pt3dadd( -84.7923, 150.479, -59.0197, 0.66 ) }
    dend_87 { pt3dadd( -85.6829, 151.48, -60.4954, 0.44 ) }
    dend_87 { pt3dadd( -86.3819, 152.288, -61.798, 0.59 ) }
    dend_87 { pt3dadd( -87.2359, 153.212, -63.6171, 0.96 ) }
    dend_87 { pt3dadd( -87.5796, 153.483, -64.2932, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -69.1684, 139.292, -47.7986, 0.66 ) }
    dend_86 { pt3dadd( -68.4221, 139.196, -48.2716, 0.66 ) }
    dend_86 { pt3dadd( -67.8259, 139.121, -48.6494, 0.29 ) }
    dend_86 { pt3dadd( -67.3931, 139.065, -48.9237, 0.44 ) }
    dend_86 { pt3dadd( -66.8595, 138.997, -49.2619, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -91.2278, 160.443, -41.1841, 0.29 ) }
    dend_82 { pt3dadd( -91.689, 160.938, -41.6694, 0.29 ) }
    dend_82 { pt3dadd( -92.2801, 161.51, -42.2876, 0.59 ) }
    dend_82 { pt3dadd( -92.6677, 161.888, -42.7019, 0.44 ) }
    dend_82 { pt3dadd( -93.226, 162.472, -43.3109, 0.88 ) }
    dend_82 { pt3dadd( -93.4739, 162.769, -43.6048, 1.03 ) }
    dend_82 { pt3dadd( -94.0266, 163.527, -44.3088, 0.52 ) }
    dend_82 { pt3dadd( -94.2053, 163.804, -44.5632, 0.44 ) }
    dend_82 { pt3dadd( -94.5514, 164.404, -45.0528, 0.66 ) }
    dend_82 { pt3dadd( -94.8105, 164.895, -45.4235, 0.88 ) }
    dend_82 { pt3dadd( -95.2988, 165.857, -46.0735, 0.59 ) }
    dend_82 { pt3dadd( -95.6228, 166.494, -46.4708, 0.74 ) }
    dend_82 { pt3dadd( -95.9528, 167.141, -46.8417, 0.74 ) }
    dend_82 { pt3dadd( -96.4199, 167.995, -47.3247, 0.37 ) }
    dend_82 { pt3dadd( -96.6398, 168.354, -47.5271, 0.37 ) }
    dend_82 { pt3dadd( -97.1675, 169.11, -47.9422, 0.66 ) }
    dend_82 { pt3dadd( -97.5425, 169.561, -48.1767, 0.66 ) }
    dend_82 { pt3dadd( -97.9431, 169.961, -48.3782, 0.52 ) }
    dend_82 { pt3dadd( -98.5317, 170.452, -48.6098, 0.88 ) }
    dend_82 { pt3dadd( -98.9384, 170.738, -48.7308, 0.88 ) }
    dend_82 { pt3dadd( -99.5428, 171.096, -48.8505, 0.52 ) }
    dend_82 { pt3dadd( -100.275, 171.476, -48.9381, 0.52 ) }
    dend_82 { pt3dadd( -101.184, 171.934, -49.0031, 0.88 ) }
    dend_82 { pt3dadd( -101.771, 172.242, -49.0274, 0.88 ) }
    dend_82 { pt3dadd( -102.501, 172.638, -49.0368, 0.52 ) }
    dend_82 { pt3dadd( -103.124, 172.987, -49.0381, 0.44 ) }
    dend_82 { pt3dadd( -103.832, 173.393, -49.0416, 0.37 ) }
    dend_82 { pt3dadd( -104.525, 173.825, -49.0439, 0.37 ) }
    dend_82 { pt3dadd( -105.213, 174.299, -49.0546, 0.29 ) }
    dend_82 { pt3dadd( -106.33, 175.133, -49.0943, 0.29 ) }
    dend_82 { pt3dadd( -106.851, 175.535, -49.1196, 0.29 ) }
    dend_82 { pt3dadd( -107.452, 175.986, -49.1498, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -91.2278, 160.443, -41.1841, 0.29 ) }
    dend_81 { pt3dadd( -92.5963, 159.703, -39.2179, 0.29 ) }
    dend_81 { pt3dadd( -93.341, 159.301, -38.1479, 0.29 ) }
    dend_81 { pt3dadd( -93.8687, 159.016, -37.3898, 0.22 ) }
    dend_81 { pt3dadd( -94.5419, 158.652, -36.4226, 0.22 ) }
    dend_81 { pt3dadd( -95.2909, 158.247, -35.3464, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 109.03, 53.214, 70.3581, 0.29 ) }
    dend_75 { pt3dadd( 109.293, 60.2345, 77.3703, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 110.16, 66.4424, 85.1419, 0.29 ) }
    dend_75 { pt3dadd( 112.133, 72.3502, 92.9729, 0.29 ) }
    dend_75 { pt3dadd( 113.159, 76.934, 101.876, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 109.03, 53.214, 70.3581, 0.29 ) }
    dend_72 { pt3dadd( 117.545, 52.6187, 75.1461, 0.29 ) }
    dend_72 { pt3dadd( 125.752, 53.7395, 80.3922, 0.29 ) }
    dend_72 { pt3dadd( 133.026, 56.3485, 86.4115, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 75.9022, 36.1325, -2.31445, 0.37 ) }
    dend_68 { pt3dadd( 76.1129, 36.9299, -2.3242, 0.37 ) }
    dend_68 { pt3dadd( 76.3754, 38.1313, -2.29842, 0.37 ) }
    dend_68 { pt3dadd( 76.5655, 39.0015, -2.27974, 0.22 ) }
    dend_68 { pt3dadd( 76.9654, 40.8313, -2.24047, 0.22 ) }
    dend_68 { pt3dadd( 77.2701, 42.2258, -2.21055, 0.66 ) }
    dend_68 { pt3dadd( 77.6372, 43.9053, -2.1745, 1.11 ) }
    dend_68 { pt3dadd( 77.7096, 44.3321, -2.14403, 1.11 ) }
    dend_68 { pt3dadd( 80.5723, 54.3273, -3.13168, 1.11 ) }
    dend_68 { pt3dadd( 84.0389, 64.1335, -4.17075, 1.11 ) }
    dend_68 { pt3dadd( 88.0057, 73.8618, -4.17277, 1.11 ) }
    dend_68 { pt3dadd( 91.796, 83.6425, -2.98409, 1.11 ) }
    dend_68 { pt3dadd( 96.9859, 92.7875, -3.39125, 1.11 ) }
    dend_68 { pt3dadd( 102.34, 101.871, -3.4256, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 75.9022, 36.1325, -2.31445, 0.44 ) }
    dend_59 { pt3dadd( 76.987, 36.3602, -2.25353, 0.44 ) }
    dend_59 { pt3dadd( 78.1483, 36.5507, -2.17628, 0.44 ) }
    dend_59 { pt3dadd( 79.3951, 36.7298, -2.00666, 0.74 ) }
    dend_59 { pt3dadd( 80.154, 36.8292, -1.87369, 1.03 ) }
    dend_59 { pt3dadd( 80.8653, 36.9173, -1.72667, 1.03 ) }
    dend_59 { pt3dadd( 81.4271, 36.9812, -1.62851, 1.03 ) }
    dend_59 { pt3dadd( 82.3755, 37.0785, -1.552, 0.66 ) }
    dend_59 { pt3dadd( 83.6817, 37.2444, -1.58531, 0.66 ) }
    dend_59 { pt3dadd( 84.142, 37.3361, -1.66885, 0.81 ) }
    dend_59 { pt3dadd( 84.8409, 37.5455, -1.88274, 0.44 ) }
    dend_59 { pt3dadd( 86.2612, 38.113, -2.45219, 0.44 ) }
    dend_59 { pt3dadd( 87.9483, 38.9346, -3.22622, 0.37 ) }
    dend_59 { pt3dadd( 88.5396, 39.2577, -3.53769, 0.37 ) }
    dend_59 { pt3dadd( 89.4525, 39.7788, -4.05229, 0.37 ) }
    dend_59 { pt3dadd( 90.5502, 40.4341, -4.64109, 0.66 ) }
    dend_59 { pt3dadd( 91.1916, 40.8369, -4.9493, 0.66 ) }
    dend_59 { pt3dadd( 92.0947, 41.415, -5.2592, 0.37 ) }
    dend_59 { pt3dadd( 92.6371, 41.7436, -5.37574, 0.37 ) }
    dend_59 { pt3dadd( 93.326, 42.1493, -5.50727, 0.59 ) }
    dend_59 { pt3dadd( 93.9383, 42.5141, -5.6432, 0.59 ) }
    dend_59 { pt3dadd( 94.5304, 42.8601, -5.87972, 0.44 ) }
    dend_59 { pt3dadd( 95.5311, 43.366, -6.34711, 0.66 ) }
    dend_59 { pt3dadd( 95.7134, 43.4437, -6.43542, 0.96 ) }
    dend_59 { pt3dadd( 96.41, 43.6708, -6.74353, 0.96 ) }
    dend_59 { pt3dadd( 97.4274, 43.8954, -7.16389, 1.11 ) }
    dend_59 { pt3dadd( 99.7722, 44.2553, -8.00962, 0.44 ) }
    dend_59 { pt3dadd( 101.087, 44.4084, -8.41483, 0.44 ) }
    dend_59 { pt3dadd( 102.112, 44.5136, -8.67733, 0.37 ) }
    dend_59 { pt3dadd( 103.373, 44.6564, -8.99202, 0.37 ) }
    dend_59 { pt3dadd( 104.141, 44.763, -9.16428, 0.29 ) }
    dend_59 { pt3dadd( 105.205, 44.9891, -9.38282, 0.22 ) }
    dend_59 { pt3dadd( 105.928, 45.2851, -9.5756, 0.59 ) }
    dend_59 { pt3dadd( 106.307, 45.5665, -9.76201, 0.59 ) }
    dend_59 { pt3dadd( 107.4, 46.5095, -10.5395, 0.29 ) }
    dend_59 { pt3dadd( 107.862, 46.9131, -10.9036, 0.37 ) }
    dend_59 { pt3dadd( 108.41, 47.3548, -11.3335, 0.52 ) }
    dend_59 { pt3dadd( 109.01, 47.7248, -11.7807, 0.74 ) }
    dend_59 { pt3dadd( 109.853, 48.0999, -12.5017, 0.96 ) }
    dend_59 { pt3dadd( 111.35, 48.6249, -14.0019, 0.29 ) }
    dend_59 { pt3dadd( 111.923, 48.8155, -14.6814, 0.52 ) }
    dend_59 { pt3dadd( 112.177, 48.908, -15.0417, 0.81 ) }
    dend_59 { pt3dadd( 113.002, 49.283, -16.4132, 1.11 ) }
    dend_59 { pt3dadd( 114.482, 50.1042, -19.2419, 0.81 ) }
    dend_59 { pt3dadd( 115.118, 50.5571, -20.6161, 0.96 ) }
    dend_59 { pt3dadd( 115.783, 51.1669, -22.1908, 0.66 ) }
    dend_59 { pt3dadd( 116.28, 51.6796, -23.3723, 0.52 ) }
    dend_59 { pt3dadd( 116.786, 52.2289, -24.4316, 0.52 ) }
    dend_59 { pt3dadd( 117.012, 52.4761, -24.7715, 0.74 ) }
    dend_59 { pt3dadd( 117.624, 52.9676, -25.1925, 0.74 ) }
    dend_59 { pt3dadd( 118.034, 53.2069, -25.3575, 0.96 ) }
    dend_59 { pt3dadd( 118.679, 53.4722, -25.5504, 0.96 ) }
    dend_59 { pt3dadd( 119.732, 53.8333, -25.9423, 0.74 ) }
    dend_59 { pt3dadd( 120.767, 54.1971, -26.4268, 0.44 ) }
    dend_59 { pt3dadd( 121.899, 54.6821, -27.175, 0.44 ) }
    dend_59 { pt3dadd( 122.326, 54.9135, -27.5423, 0.96 ) }
    dend_59 { pt3dadd( 123.085, 55.447, -28.4333, 1.18 ) }
    dend_59 { pt3dadd( 124.124, 56.3695, -30.0057, 0.66 ) }
    dend_59 { pt3dadd( 124.492, 56.7686, -30.7106, 0.66 ) }
    dend_59 { pt3dadd( 125.141, 57.5784, -32.2133, 0.59 ) }
    dend_59 { pt3dadd( 125.38, 57.9078, -32.7792, 0.52 ) }
    dend_59 { pt3dadd( 126.06, 58.8312, -34.2338, 0.52 ) }
    dend_59 { pt3dadd( 126.251, 59.1151, -34.6095, 0.96 ) }
    dend_59 { pt3dadd( 126.665, 59.7246, -35.299, 0.96 ) }
    dend_59 { pt3dadd( 127.454, 60.9104, -36.4576, 0.59 ) }
    dend_59 { pt3dadd( 128.136, 62.0035, -37.3268, 0.59 ) }
    dend_59 { pt3dadd( 128.57, 62.73, -37.8392, 0.88 ) }
    dend_59 { pt3dadd( 129.2, 63.8186, -38.473, 0.74 ) }
    dend_59 { pt3dadd( 129.766, 64.6971, -38.9449, 0.74 ) }
    dend_59 { pt3dadd( 130.441, 65.5893, -39.3537, 0.88 ) }
    dend_59 { pt3dadd( 130.876, 66.0195, -39.5462, 0.88 ) }
    dend_59 { pt3dadd( 131.702, 66.5984, -39.9065, 0.37 ) }
    dend_59 { pt3dadd( 132.577, 67.0748, -40.2937, 0.37 ) }
    dend_59 { pt3dadd( 133.96, 67.661, -40.9032, 0.37 ) }
    dend_59 { pt3dadd( 134.93, 68.0213, -41.3728, 0.37 ) }
    dend_59 { pt3dadd( 136.062, 68.4077, -41.9746, 0.37 ) }
    dend_59 { pt3dadd( 136.745, 68.659, -42.3483, 0.59 ) }
    dend_59 { pt3dadd( 137.593, 69.0029, -42.8079, 0.74 ) }
    dend_59 { pt3dadd( 138.163, 69.2667, -43.13, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 139.238, 69.8528, -43.7936, 0.44 ) }
    dend_59 { pt3dadd( 139.811, 70.1712, -44.1356, 0.37 ) }
    dend_59 { pt3dadd( 141.494, 70.9991, -44.9341, 0.37 ) }
    dend_59 { pt3dadd( 142.296, 71.3179, -45.237, 0.74 ) }
    dend_59 { pt3dadd( 142.721, 71.4484, -45.3659, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 88.5134, 59.6245, 7.59157, 0.29 ) }
    dend_57 { pt3dadd( 95.4883, 68.0257, 11.0257, 0.29 ) }
    dend_57 { pt3dadd( 102.912, 76.6467, 12.0451, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 88.5134, 59.6245, 7.59157, 0.29 ) }
    dend_56 { pt3dadd( 95.5311, 70.0596, 9.2075, 0.29 ) }
    dend_56 { pt3dadd( 102.321, 80.3698, 12.3398, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -20.6501, -143.152, 15.7582, 0.29 ) }
    dend_37 { pt3dadd( -17.6651, -152.743, 13.5307, 0.29 ) }
    dend_37 { pt3dadd( -15.9772, -162.815, 12.8137, 0.29 ) }
    dend_37 { pt3dadd( -14.8308, -172.753, 10.5584, 0.29 ) }
    dend_37 { pt3dadd( -14.9456, -182.943, 9.6846, 0.29 ) }
    dend_37 { pt3dadd( -16.0004, -193.086, 8.83365, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -20.6501, -143.152, 15.7582, 0.29 ) }
    dend_36 { pt3dadd( -22.4597, -152.023, 10.8593, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.23591, -92.7072, 8.91921, 0.37 ) }
    dend_24 { pt3dadd( -2.93858, -93.9985, 7.42156, 0.37 ) }
    dend_24 { pt3dadd( -3.41028, -94.6781, 6.63294, 0.37 ) }
    dend_24 { pt3dadd( -3.89909, -95.264, 5.91619, 0.44 ) }
    dend_24 { pt3dadd( -4.51201, -95.8971, 5.11669, 0.74 ) }
    dend_24 { pt3dadd( -5.14598, -96.477, 4.37316, 0.59 ) }
    dend_24 { pt3dadd( -5.83099, -97.0147, 3.65729, 0.59 ) }
    dend_24 { pt3dadd( -6.27908, -97.2282, 3.31595, 0.74 ) }
    dend_24 { pt3dadd( -7.05506, -97.4521, 2.82581, 0.88 ) }
    dend_24 { pt3dadd( -7.56256, -97.5338, 2.56419, 1.18 ) }
    dend_24 { pt3dadd( -8.08867, -97.5686, 2.33412, 0.59 ) }
    dend_24 { pt3dadd( -8.89791, -97.5762, 2.00614, 0.44 ) }
    dend_24 { pt3dadd( -9.69892, -97.5696, 1.67714, 0.52 ) }
    dend_24 { pt3dadd( -10.0658, -97.5805, 1.51433, 0.74 ) }
    dend_24 { pt3dadd( -10.691, -97.682, 1.23635, 0.74 ) }
    dend_24 { pt3dadd( -11.1312, -97.8418, 1.01269, 0.59 ) }
    dend_24 { pt3dadd( -11.5711, -98.111, 0.766484, 0.59 ) }
    dend_24 { pt3dadd( -12.135, -98.6196, 0.430587, 0.59 ) }
    dend_24 { pt3dadd( -12.7258, -99.3247, 0.0805791, 0.44 ) }
    dend_24 { pt3dadd( -13.395, -100.266, -0.295184, 0.37 ) }
    dend_24 { pt3dadd( -13.7792, -100.901, -0.496213, 1.03 ) }
    dend_24 { pt3dadd( -14.032, -101.382, -0.62789, 1.03 ) }
    dend_24 { pt3dadd( -14.2311, -101.825, -0.730803, 0.96 ) }
    dend_24 { pt3dadd( -14.5639, -102.748, -0.893726, 0.66 ) }
    dend_24 { pt3dadd( -14.8108, -103.579, -1.01445, 0.66 ) }
    dend_24 { pt3dadd( -15.039, -104.531, -1.15093, 0.88 ) }
    dend_24 { pt3dadd( -15.1528, -105.116, -1.22964, 1.03 ) }
    dend_24 { pt3dadd( -15.2727, -105.948, -1.34438, 0.88 ) }
    dend_24 { pt3dadd( -15.3804, -107.019, -1.50264, 0.52 ) }
    dend_24 { pt3dadd( -15.433, -107.857, -1.63787, 0.52 ) }
    dend_24 { pt3dadd( -15.458, -108.493, -1.75482, 0.96 ) }
    dend_24 { pt3dadd( -15.475, -108.908, -1.84087, 0.96 ) }
    dend_24 { pt3dadd( -15.5521, -109.927, -2.09086, 0.59 ) }
    dend_24 { pt3dadd( -15.6592, -110.735, -2.32284, 0.66 ) }
    dend_24 { pt3dadd( -15.7901, -111.338, -2.52808, 0.81 ) }
    dend_24 { pt3dadd( -15.9946, -112.069, -2.81574, 0.81 ) }
    dend_24 { pt3dadd( -16.1362, -112.475, -2.99915, 0.81 ) }
    dend_24 { pt3dadd( -16.3974, -113.215, -3.402, 0.44 ) }
    dend_24 { pt3dadd( -16.5255, -113.601, -3.64116, 0.81 ) }
    dend_24 { pt3dadd( -16.6685, -114.16, -4.01301, 0.81 ) }
    dend_24 { pt3dadd( -16.7939, -114.96, -4.54653, 0.52 ) }
    dend_24 { pt3dadd( -16.812, -115.611, -4.96409, 0.52 ) }
    dend_24 { pt3dadd( -16.7092, -116.807, -5.68658, 0.74 ) }
    dend_24 { pt3dadd( -16.6145, -117.392, -6.01626, 1.11 ) }
    dend_24 { pt3dadd( -16.5272, -117.933, -6.29588, 1.11 ) }
    dend_24 { pt3dadd( -16.44, -118.62, -6.61347, 0.96 ) }
    dend_24 { pt3dadd( -16.3994, -119.391, -6.93651, 0.59 ) }
    dend_24 { pt3dadd( -16.4456, -120.34, -7.30708, 0.44 ) }
    dend_24 { pt3dadd( -16.6637, -121.386, -7.69941, 0.44 ) }
    dend_24 { pt3dadd( -16.9245, -122.167, -8.00438, 0.44 ) }
    dend_24 { pt3dadd( -17.2314, -122.897, -8.28225, 0.74 ) }
    dend_24 { pt3dadd( -17.468, -123.433, -8.47704, 0.74 ) }
    dend_24 { pt3dadd( -17.7025, -123.951, -8.64824, 0.74 ) }
    dend_24 { pt3dadd( -18.1201, -124.878, -8.92016, 0.66 ) }
    dend_24 { pt3dadd( -18.424, -125.57, -9.09944, 0.44 ) }
    dend_24 { pt3dadd( -18.8098, -126.464, -9.31952, 0.44 ) }
    dend_24 { pt3dadd( -19.4229, -127.709, -9.61026, 0.44 ) }
    dend_24 { pt3dadd( -19.7774, -128.284, -9.73796, 0.88 ) }
    dend_24 { pt3dadd( -20.1984, -128.817, -9.84978, 1.18 ) }
    dend_24 { pt3dadd( -20.5326, -129.16, -9.91009, 1.18 ) }
    dend_24 { pt3dadd( -20.9566, -129.529, -9.96927, 1.03 ) }
    dend_24 { pt3dadd( -22.1675, -130.425, -10.1238, 0.66 ) }
    dend_24 { pt3dadd( -23.2868, -131.136, -10.2491, 0.66 ) }
    dend_24 { pt3dadd( -24.2382, -131.718, -10.3518, 1.25 ) }
    dend_24 { pt3dadd( -24.744, -132.031, -10.4043, 1.55 ) }
    dend_24 { pt3dadd( -25.3551, -132.418, -10.4679, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.23591, -92.7072, 8.91921, 0.74 ) }
    dend_19 { pt3dadd( -2.62714, -93.7378, 8.02687, 0.74 ) }
    dend_19 { pt3dadd( -3.0874, -94.9195, 6.9821, 0.74 ) }
    dend_19 { pt3dadd( -3.33456, -95.6276, 6.45344, 0.74 ) }
    dend_19 { pt3dadd( -3.57164, -96.4223, 5.94237, 0.81 ) }
    dend_19 { pt3dadd( -4.01084, -98.2501, 4.97836, 0.52 ) }
    dend_19 { pt3dadd( -4.27162, -99.7089, 4.35214, 0.74 ) }
    dend_19 { pt3dadd( -4.3559, -100.487, 4.10596, 0.74 ) }
    dend_19 { pt3dadd( -4.20917, -102.224, 3.99494, 0.74 ) }
    dend_19 { pt3dadd( -3.92324, -103.091, 4.13899, 0.81 ) }
    dend_19 { pt3dadd( -3.35071, -104.146, 4.52746, 0.66 ) }
    dend_19 { pt3dadd( -2.99385, -104.668, 4.79352, 1.11 ) }
    dend_19 { pt3dadd( -2.61361, -105.178, 5.04755, 1.11 ) }
    dend_19 { pt3dadd( -2.11358, -105.826, 5.29786, 0.81 ) }
    dend_19 { pt3dadd( -1.45748, -106.704, 5.47381, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( -0.86003, -107.559, 5.57357, 0.96 ) }
    dend_19 { pt3dadd( -0.3296, -108.354, 5.63448, 0.88 ) }
    dend_19 { pt3dadd( 0.298406, -109.332, 5.7127, 0.96 ) }
    dend_19 { pt3dadd( 0.733899, -110.06, 5.74936, 1.11 ) }
    dend_19 { pt3dadd( 1.21784, -110.967, 5.73847, 1.11 ) }
    dend_19 { pt3dadd( 1.61237, -111.815, 5.67554, 0.74 ) }
    dend_19 { pt3dadd( 2.11574, -113.137, 5.51522, 0.66 ) }
    dend_19 { pt3dadd( 2.33317, -113.827, 5.41252, 0.66 ) }
    dend_19 { pt3dadd( 2.71061, -115.423, 5.16381, 0.66 ) }
    dend_19 { pt3dadd( 2.94787, -117.097, 4.88611, 0.59 ) }
    dend_19 { pt3dadd( 2.99549, -118.065, 4.7028, 0.96 ) }
    dend_19 { pt3dadd( 2.95599, -119.268, 4.44719, 1.18 ) }
    dend_19 { pt3dadd( 2.85457, -120.164, 4.25315, 1.03 ) }
    dend_19 { pt3dadd( 2.68942, -121.216, 4.03625, 0.88 ) }
    dend_19 { pt3dadd( 2.46629, -122.581, 3.80842, 0.74 ) }
    dend_19 { pt3dadd( 2.30129, -123.77, 3.7322, 0.59 ) }
    dend_19 { pt3dadd( 2.17529, -124.776, 3.74636, 0.59 ) }
    dend_19 { pt3dadd( 2.05601, -125.612, 3.82998, 1.4 ) }
    dend_19 { pt3dadd( 1.93496, -126.227, 3.93975, 1.4 ) }
    dend_19 { pt3dadd( 1.58642, -127.801, 4.36267, 0.88 ) }
    dend_19 { pt3dadd( 1.16134, -129.651, 5.09836, 0.66 ) }
    dend_19 { pt3dadd( 0.967961, -130.426, 5.46842, 0.88 ) }
    dend_19 { pt3dadd( 0.706003, -131.411, 5.97137, 0.88 ) }
    dend_19 { pt3dadd( 0.267766, -132.944, 6.75672, 0.59 ) }
    dend_19 { pt3dadd( -0.0496031, -133.922, 7.23362, 0.81 ) }
    dend_19 { pt3dadd( -0.638243, -135.537, 7.94639, 0.81 ) }
    dend_19 { pt3dadd( -0.940877, -136.37, 8.22331, 1.11 ) }
    dend_19 { pt3dadd( -1.17063, -137.055, 8.40729, 1.11 ) }
    dend_19 { pt3dadd( -1.44963, -138.039, 8.58032, 0.52 ) }
    dend_19 { pt3dadd( -1.65701, -138.971, 8.68502, 0.74 ) }
    dend_19 { pt3dadd( -1.81687, -139.803, 8.73217, 1.03 ) }
    dend_19 { pt3dadd( -1.89616, -140.499, 8.73324, 1.25 ) }
    dend_19 { pt3dadd( -1.91613, -141.186, 8.79092, 1.33 ) }
    dend_19 { pt3dadd( -1.87319, -142.314, 9.06185, 1.03 ) }
    dend_19 { pt3dadd( -1.71962, -143.371, 9.47037, 0.74 ) }
    dend_19 { pt3dadd( -1.49515, -144.229, 9.90333, 0.44 ) }
    dend_19 { pt3dadd( -1.19889, -145.008, 10.3771, 0.29 ) }
    dend_19 { pt3dadd( -0.633848, -146.08, 11.1589, 0.29 ) }
    dend_19 { pt3dadd( 0.187367, -147.258, 12.1865, 0.29 ) }
    dend_19 { pt3dadd( 0.692514, -147.786, 12.749, 0.29 ) }
    dend_19 { pt3dadd( 1.19681, -148.158, 13.2143, 0.88 ) }
    dend_19 { pt3dadd( 1.62867, -148.422, 13.5762, 0.88 ) }
    dend_19 { pt3dadd( 2.35724, -148.828, 14.1404, 0.52 ) }
    dend_19 { pt3dadd( 2.7052, -149.011, 14.3526, 0.52 ) }
    dend_19 { pt3dadd( 3.33961, -149.375, 14.7202, 0.52 ) }
    dend_19 { pt3dadd( 3.80884, -149.773, 15.0595, 0.52 ) }
    dend_19 { pt3dadd( 4.41746, -150.512, 15.4942, 0.52 ) }
    dend_19 { pt3dadd( 4.70792, -150.983, 15.6782, 0.88 ) }
    dend_19 { pt3dadd( 5.02716, -151.567, 15.8282, 0.88 ) }
    dend_19 { pt3dadd( 5.44145, -152.283, 15.9321, 1.11 ) }
    dend_19 { pt3dadd( 5.88772, -152.949, 16.0105, 0.66 ) }
    dend_19 { pt3dadd( 6.78334, -154.012, 16.1093, 0.66 ) }
    dend_19 { pt3dadd( 7.22383, -154.393, 16.1614, 0.66 ) }
    dend_19 { pt3dadd( 8.00049, -154.936, 16.2919, 0.66 ) }
    dend_19 { pt3dadd( 8.62672, -155.322, 16.4258, 0.52 ) }
    dend_19 { pt3dadd( 9.69655, -155.977, 16.6392, 0.66 ) }
    dend_19 { pt3dadd( 10.0316, -156.192, 16.7421, 0.66 ) }
    dend_19 { pt3dadd( 10.7303, -156.674, 17.101, 0.44 ) }
    dend_19 { pt3dadd( 11.2827, -157.095, 17.5006, 0.44 ) }
    dend_19 { pt3dadd( 12.0124, -157.732, 18.1931, 0.52 ) }
    dend_19 { pt3dadd( 12.8345, -158.551, 19.1854, 0.66 ) }
    dend_19 { pt3dadd( 13.5151, -159.299, 20.1171, 0.44 ) }
    dend_19 { pt3dadd( 14.2277, -160.116, 21.1779, 0.81 ) }
    dend_19 { pt3dadd( 14.8991, -160.875, 22.1424, 0.52 ) }
    dend_19 { pt3dadd( 15.3532, -161.374, 22.7378, 0.74 ) }
    dend_19 { pt3dadd( 15.9267, -161.981, 23.3897, 0.29 ) }
    dend_19 { pt3dadd( 16.2528, -162.314, 23.663, 0.52 ) }
    dend_19 { pt3dadd( 16.7903, -162.836, 23.8901, 0.59 ) }
    dend_19 { pt3dadd( 17.8479, -163.879, 24.2061, 0.37 ) }
    dend_19 { pt3dadd( 18.6345, -164.643, 24.352, 0.66 ) }
    dend_19 { pt3dadd( 19.0891, -165.074, 24.4103, 1.03 ) }
    dend_19 { pt3dadd( 19.8254, -165.76, 24.4746, 1.03 ) }
    dend_19 { pt3dadd( 20.6281, -166.52, 24.5852, 0.74 ) }
    dend_19 { pt3dadd( 21.8901, -167.737, 24.8944, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.2968, -136.729, -18.112, 0.44 ) }
    dend_13 { pt3dadd( 19.2218, -138.187, -17.9679, 0.44 ) }
    dend_13 { pt3dadd( 19.1591, -139.205, -17.8667, 0.81 ) }
    dend_13 { pt3dadd( 19.0979, -139.987, -17.7904, 1.18 ) }
    dend_13 { pt3dadd( 19.0053, -141.034, -17.6938, 0.74 ) }
    dend_13 { pt3dadd( 18.9061, -142.122, -17.5996, 0.44 ) }
    dend_13 { pt3dadd( 18.8165, -143.08, -17.5211, 0.96 ) }
    dend_13 { pt3dadd( 18.7193, -144.071, -17.4464, 0.96 ) }
    dend_13 { pt3dadd( 18.6208, -145.014, -17.3825, 1.18 ) }
    dend_13 { pt3dadd( 18.4173, -146.42, -17.2936, 0.74 ) }
    dend_13 { pt3dadd( 18.1451, -147.695, -17.255, 0.66 ) }
    dend_13 { pt3dadd( 17.844, -148.732, -17.2622, 0.66 ) }
    dend_13 { pt3dadd( 17.3921, -150.032, -17.3422, 0.66 ) }
    dend_13 { pt3dadd( 17.1415, -150.674, -17.4159, 1.03 ) }
    dend_13 { pt3dadd( 16.7633, -151.563, -17.5618, 0.81 ) }
    dend_13 { pt3dadd( 16.1794, -152.98, -17.9164, 0.52 ) }
    dend_13 { pt3dadd( 15.9029, -153.831, -18.1426, 0.44 ) }
    dend_13 { pt3dadd( 15.6937, -154.904, -18.3889, 0.37 ) }
    dend_13 { pt3dadd( 15.6516, -155.517, -18.4889, 0.66 ) }
    dend_13 { pt3dadd( 15.6459, -156.191, -18.5394, 0.66 ) }
    dend_13 { pt3dadd( 15.7138, -157.955, -18.603, 0.44 ) }
    dend_13 { pt3dadd( 15.784, -159.726, -18.5797, 0.44 ) }
    dend_13 { pt3dadd( 15.7786, -161.141, -18.5186, 0.66 ) }
    dend_13 { pt3dadd( 15.6864, -162.388, -18.4356, 0.81 ) }
    dend_13 { pt3dadd( 15.4608, -163.744, -18.3614, 0.96 ) }
    dend_13 { pt3dadd( 15.0271, -165.172, -18.2948, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 14.5408, -166.281, -18.2536, 0.81 ) }
    dend_13 { pt3dadd( 14.0418, -167.259, -18.282, 0.88 ) }
    dend_13 { pt3dadd( 13.6501, -168.02, -18.3453, 0.66 ) }
    dend_13 { pt3dadd( 13.0996, -169.092, -18.4732, 0.29 ) }
    dend_13 { pt3dadd( 12.4123, -170.466, -18.656, 0.29 ) }
    dend_13 { pt3dadd( 12.0127, -171.262, -18.7462, 0.52 ) }
    dend_13 { pt3dadd( 11.3876, -172.496, -18.8994, 0.52 ) }
    dend_13 { pt3dadd( 10.8657, -173.511, -19.0213, 0.37 ) }
    dend_13 { pt3dadd( 10.3677, -174.424, -19.1226, 0.29 ) }
    dend_13 { pt3dadd( 9.87425, -175.22, -19.1856, 0.29 ) }
    dend_13 { pt3dadd( 9.65319, -175.509, -19.2133, 0.88 ) }
    dend_13 { pt3dadd( 9.12128, -175.998, -19.2784, 1.11 ) }
    dend_13 { pt3dadd( 8.44691, -176.426, -19.3467, 0.44 ) }
    dend_13 { pt3dadd( 7.58109, -176.847, -19.4231, 0.37 ) }
    dend_13 { pt3dadd( 6.73789, -177.187, -19.5072, 0.59 ) }
    dend_13 { pt3dadd( 5.9778, -177.448, -19.5963, 0.74 ) }
    dend_13 { pt3dadd( 4.97368, -177.769, -19.726, 0.44 ) }
    dend_13 { pt3dadd( 4.10183, -178.05, -19.8345, 0.37 ) }
    dend_13 { pt3dadd( 3.52531, -178.257, -19.8988, 0.88 ) }
    dend_13 { pt3dadd( 2.86757, -178.544, -19.9537, 1.11 ) }
    dend_13 { pt3dadd( 2.39995, -178.788, -19.9712, 1.11 ) }
    dend_13 { pt3dadd( 1.92353, -179.05, -19.9624, 1.11 ) }
    dend_13 { pt3dadd( 0.750402, -179.725, -19.9015, 0.29 ) }
    dend_13 { pt3dadd( -0.0213718, -180.188, -19.8576, 0.59 ) }
    dend_13 { pt3dadd( -0.532242, -180.503, -19.8241, 0.59 ) }
    dend_13 { pt3dadd( -1.77915, -181.338, -19.7215, 0.29 ) }
    dend_13 { pt3dadd( -2.53286, -181.901, -19.6406, 0.29 ) }
    dend_13 { pt3dadd( -3.11744, -182.396, -19.5676, 0.52 ) }
    dend_13 { pt3dadd( -3.79489, -183.032, -19.4775, 0.52 ) }
    dend_13 { pt3dadd( -4.15142, -183.384, -19.428, 0.81 ) }
    dend_13 { pt3dadd( -4.74789, -184.077, -19.3418, 0.81 ) }
    dend_13 { pt3dadd( -5.32495, -184.953, -19.2516, 0.29 ) }
    dend_13 { pt3dadd( -5.97545, -186.133, -19.1345, 0.29 ) }
    dend_13 { pt3dadd( -6.32812, -186.821, -19.058, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.2968, -136.729, -18.112, 0.22 ) }
    dend_12 { pt3dadd( 20.5185, -137.28, -18.4706, 0.22 ) }
    dend_12 { pt3dadd( 21.8068, -137.861, -18.8486, 0.22 ) }
    dend_12 { pt3dadd( 23.3621, -138.563, -19.3051, 0.22 ) }
    dend_12 { pt3dadd( 24.4327, -139.046, -19.6192, 0.22 ) }
    dend_12 { pt3dadd( 25.5687, -139.558, -19.9526, 0.22 ) }
    dend_12 { pt3dadd( 26.7374, -140.085, -20.2956, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 179.862, -12.5477, -133.878, 0.74 ) }
    dend_10 { pt3dadd( 182.253, -14.2032, -135.532, 0.74 ) }
    dend_10 { pt3dadd( 182.898, -14.7574, -135.88, 0.44 ) }
    dend_10 { pt3dadd( 183.377, -15.166, -136.082, 0.74 ) }
    dend_10 { pt3dadd( 184.142, -15.7668, -136.333, 0.52 ) }
    dend_10 { pt3dadd( 185.195, -16.5019, -136.586, 0.52 ) }
    dend_10 { pt3dadd( 186.345, -17.2038, -136.839, 0.52 ) }
    dend_10 { pt3dadd( 187.218, -17.6983, -136.883, 0.52 ) }
    dend_10 { pt3dadd( 188.136, -18.1334, -136.928, 0.52 ) }
    dend_10 { pt3dadd( 189.315, -18.5272, -137.044, 0.52 ) }
    dend_10 { pt3dadd( 190.315, -18.7062, -137.179, 0.74 ) }
    dend_10 { pt3dadd( 191.368, -18.7536, -137.363, 1.03 ) }
    dend_10 { pt3dadd( 191.76, -18.7386, -137.446, 1.4 ) }
    dend_10 { pt3dadd( 192.149, -18.71, -137.541, 1.4 ) }
    dend_10 { pt3dadd( 193.706, -18.5977, -137.986, 0.44 ) }
    dend_10 { pt3dadd( 194.301, -18.5796, -138.107, 0.74 ) }
    dend_10 { pt3dadd( 195.191, -18.6081, -138.171, 0.74 ) }
    dend_10 { pt3dadd( 195.805, -18.6608, -138.12, 0.96 ) }
    dend_10 { pt3dadd( 196.387, -18.7476, -137.977, 0.96 ) }
    dend_10 { pt3dadd( 197.15, -18.9271, -137.693, 0.96 ) }
    dend_10 { pt3dadd( 198.946, -19.5656, -136.775, 0.66 ) }
    dend_10 { pt3dadd( 199.678, -19.9156, -136.332, 0.81 ) }
    dend_10 { pt3dadd( 200.106, -20.1765, -136.026, 0.81 ) }
    dend_10 { pt3dadd( 201.131, -20.8878, -135.236, 0.52 ) }
    dend_10 { pt3dadd( 201.893, -21.4494, -134.647, 0.52 ) }
    dend_10 { pt3dadd( 202.728, -22.0785, -134.054, 0.52 ) }
    dend_10 { pt3dadd( 203.546, -22.6653, -133.601, 0.52 ) }
    dend_10 { pt3dadd( 204.602, -23.374, -133.108, 0.44 ) }
    dend_10 { pt3dadd( 205.187, -23.7141, -132.92, 0.96 ) }
    dend_10 { pt3dadd( 205.825, -24.0049, -132.886, 1.11 ) }
    dend_10 { pt3dadd( 206.739, -24.3317, -133.052, 0.44 ) }
    dend_10 { pt3dadd( 207.544, -24.5993, -133.414, 0.37 ) }
    dend_10 { pt3dadd( 208.108, -24.8104, -133.822, 0.37 ) }
    dend_10 { pt3dadd( 208.992, -25.1781, -134.686, 0.66 ) }
    dend_10 { pt3dadd( 209.953, -25.6063, -135.816, 0.74 ) }
    dend_10 { pt3dadd( 210.356, -25.7839, -136.345, 0.81 ) }
    dend_10 { pt3dadd( 210.937, -26.0185, -137.18, 0.81 ) }
    dend_10 { pt3dadd( 211.688, -26.2799, -138.299, 0.66 ) }
    dend_10 { pt3dadd( 212.389, -26.4785, -139.278, 0.66 ) }
    dend_10 { pt3dadd( 213.066, -26.648, -140.134, 0.29 ) }
    dend_10 { pt3dadd( 213.543, -26.7646, -140.683, 0.59 ) }
    dend_10 { pt3dadd( 214.061, -26.8812, -141.232, 0.74 ) }
    dend_10 { pt3dadd( 214.554, -26.9788, -141.744, 0.44 ) }
    dend_10 { pt3dadd( 215.209, -27.0973, -142.384, 0.37 ) }
    dend_10 { pt3dadd( 215.882, -27.2376, -143.027, 0.37 ) }
    dend_10 { pt3dadd( 216.539, -27.4044, -143.632, 0.59 ) }
    dend_10 { pt3dadd( 217.057, -27.5646, -144.101, 0.59 ) }
    dend_10 { pt3dadd( 218.356, -28.0479, -145.485, 0.29 ) }
    dend_10 { pt3dadd( 219.166, -28.4252, -146.488, 0.29 ) }
    dend_10 { pt3dadd( 219.568, -28.6518, -147.064, 0.29 ) }
    dend_10 { pt3dadd( 219.91, -28.8696, -147.576, 0.74 ) }
    dend_10 { pt3dadd( 220.244, -29.1046, -148.102, 0.74 ) }
    dend_10 { pt3dadd( 221.526, -30.2374, -150.302, 0.37 ) }
    dend_10 { pt3dadd( 221.885, -30.667, -150.999, 0.52 ) }
    dend_10 { pt3dadd( 222.136, -31.0545, -151.613, 0.81 ) }
    dend_10 { pt3dadd( 222.39, -31.4795, -152.335, 0.37 ) }
    dend_10 { pt3dadd( 222.614, -31.8391, -153.031, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 179.862, -12.5477, -133.878, 0.88 ) }
    dend_3 { pt3dadd( 180.568, -12.1331, -135.143, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 180.855, -12.0549, -135.72, 1.25 ) }
    dend_3 { pt3dadd( 181.11, -12.0358, -136.32, 1.25 ) }
    dend_3 { pt3dadd( 181.436, -12.0171, -137.178, 0.59 ) }
    dend_3 { pt3dadd( 182.305, -11.9673, -139.472, 0.59 ) }
    dend_3 { pt3dadd( 183.179, -11.9173, -141.776, 0.96 ) }
    dend_3 { pt3dadd( 183.629, -11.9645, -143.03, 1.11 ) }
    dend_3 { pt3dadd( 184.385, -12.1419, -145.346, 1.25 ) }
    dend_3 { pt3dadd( 184.82, -12.3125, -146.833, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -107.452, 175.986, -49.1498, 0.22 ) }
    dend_84 { pt3dadd( -107.366, 174.835, -48.4065, 0.22 ) }
    dend_84 { pt3dadd( -107.313, 174.118, -47.9434, 0.22 ) }
    dend_84 { pt3dadd( -107.193, 172.513, -46.9065, 0.22 ) }
    dend_84 { pt3dadd( -107.12, 171.534, -46.2738, 0.22 ) }
    dend_84 { pt3dadd( -107.057, 170.693, -45.7301, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -107.452, 175.986, -49.1498, 0.22 ) }
    dend_83 { pt3dadd( -108.514, 176.68, -48.8054, 0.22 ) }
    dend_83 { pt3dadd( -109.446, 177.321, -48.5079, 0.22 ) }
    dend_83 { pt3dadd( -110.332, 177.931, -48.2249, 0.22 ) }
    dend_83 { pt3dadd( -111.181, 178.514, -47.9541, 0.22 ) }
    dend_83 { pt3dadd( -112.457, 179.393, -47.5465, 0.22 ) }
    dend_83 { pt3dadd( -113.109, 179.841, -47.3386, 0.37 ) }
    dend_83 { pt3dadd( -113.751, 180.344, -47.1, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 113.159, 76.934, 101.876, 0.29 ) }
    dend_77 { pt3dadd( 115.646, 86.5467, 110.656, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 113.159, 76.934, 101.876, 0.29 ) }
    dend_76 { pt3dadd( 114.074, 83.258, 107.75, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 133.026, 56.3485, 86.4115, 0.29 ) }
    dend_74 { pt3dadd( 137.399, 55.1161, 78.404, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 133.026, 56.3485, 86.4115, 0.29 ) }
    dend_73 { pt3dadd( 124.249, 55.2709, 87.3101, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 142.721, 71.4484, -45.3659, 0.37 ) }
    dend_61 { pt3dadd( 142.186, 71.3346, -46.0938, 0.37 ) }
    dend_61 { pt3dadd( 141.595, 71.0011, -47.2881, 0.66 ) }
    dend_61 { pt3dadd( 141.356, 70.6317, -48.2196, 0.29 ) }
    dend_61 { pt3dadd( 141.2, 70.272, -49.0692, 0.29 ) }
    dend_61 { pt3dadd( 141.025, 69.8299, -50.1412, 0.29 ) }
    dend_61 { pt3dadd( 140.655, 68.9173, -52.4848, 0.29 ) }
    dend_61 { pt3dadd( 140.503, 68.4572, -53.565, 0.81 ) }
    dend_61 { pt3dadd( 140.128, 66.9852, -56.8, 0.44 ) }
    dend_61 { pt3dadd( 140.037, 66.4491, -57.933, 0.96 ) }
    dend_61 { pt3dadd( 140.002, 66.0046, -58.9133, 1.18 ) }
    dend_61 { pt3dadd( 140.012, 65.451, -60.2069, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 142.721, 71.4484, -45.3659, 0.37 ) }
    dend_60 { pt3dadd( 143.98, 71.617, -45.3837, 0.37 ) }
    dend_60 { pt3dadd( 145.446, 72.0224, -45.398, 0.29 ) }
    dend_60 { pt3dadd( 145.987, 72.2159, -45.3992, 0.66 ) }
    dend_60 { pt3dadd( 146.517, 72.4389, -45.3864, 0.66 ) }
    dend_60 { pt3dadd( 147.175, 72.7839, -45.3762, 0.37 ) }
    dend_60 { pt3dadd( 148.091, 73.3002, -45.3756, 0.37 ) }
    dend_60 { pt3dadd( 149.08, 73.9577, -45.3827, 0.81 ) }
    dend_60 { pt3dadd( 149.487, 74.2585, -45.3563, 1.11 ) }
    dend_60 { pt3dadd( 150.054, 74.6973, -45.2858, 1.33 ) }
    dend_60 { pt3dadd( 151.192, 75.6591, -45.066, 0.44 ) }
    dend_60 { pt3dadd( 151.853, 76.2772, -44.8603, 0.52 ) }
    dend_60 { pt3dadd( 152.704, 77.1673, -44.491, 1.03 ) }
    dend_60 { pt3dadd( 153.6, 78.2306, -43.9967, 0.52 ) }
    dend_60 { pt3dadd( 154.015, 78.7693, -43.7122, 0.66 ) }
    dend_60 { pt3dadd( 154.427, 79.3707, -43.3595, 0.66 ) }
    dend_60 { pt3dadd( 154.993, 80.3574, -42.724, 0.44 ) }
    dend_60 { pt3dadd( 155.23, 80.9222, -42.4047, 0.29 ) }
    dend_60 { pt3dadd( 155.488, 81.6423, -42.0683, 0.44 ) }
    dend_60 { pt3dadd( 155.825, 82.4822, -41.7802, 0.66 ) }
    dend_60 { pt3dadd( 156.163, 83.1848, -41.5863, 0.37 ) }
    dend_60 { pt3dadd( 156.59, 84.0004, -41.4185, 0.37 ) }
    dend_60 { pt3dadd( 157.282, 85.3402, -41.222, 0.29 ) }
    dend_60 { pt3dadd( 157.711, 86.2068, -41.0987, 0.29 ) }
    dend_60 { pt3dadd( 158.331, 87.6789, -40.8966, 0.29 ) }
    dend_60 { pt3dadd( 158.674, 88.692, -40.7169, 0.29 ) }
    dend_60 { pt3dadd( 158.865, 89.4823, -40.5288, 1.55 ) }
    dend_60 { pt3dadd( 158.948, 90.1376, -40.3269, 1.18 ) }
    dend_60 { pt3dadd( 158.911, 90.8328, -40.007, 0.96 ) }
    dend_60 { pt3dadd( 158.608, 91.9569, -39.3619, 0.52 ) }
    dend_60 { pt3dadd( 157.965, 93.2524, -38.4849, 0.29 ) }
    dend_60 { pt3dadd( 157.416, 94.0491, -37.8986, 0.29 ) }
    dend_60 { pt3dadd( 157.118, 94.4233, -37.6171, 0.29 ) }
    dend_60 { pt3dadd( 156.282, 95.4457, -36.8873, 0.22 ) }
    dend_60 { pt3dadd( 156.027, 95.7648, -36.6857, 0.66 ) }
    dend_60 { pt3dadd( 155.721, 96.1732, -36.4606, 0.66 ) }
    dend_60 { pt3dadd( 155.223, 96.9562, -36.1401, 0.37 ) }
    dend_60 { pt3dadd( 154.887, 97.7462, -35.8825, 0.29 ) }
    dend_60 { pt3dadd( 154.69, 98.5459, -35.7087, 0.22 ) }
    dend_60 { pt3dadd( 154.601, 99.2643, -35.5532, 0.22 ) }
    dend_60 { pt3dadd( 154.566, 100.363, -35.2462, 0.22 ) }
    dend_60 { pt3dadd( 154.601, 100.855, -35.0855, 0.29 ) }
    dend_60 { pt3dadd( 154.722, 101.586, -34.8072, 0.29 ) }
    dend_60 { pt3dadd( 154.967, 102.671, -34.3519, 0.29 ) }
    dend_60 { pt3dadd( 155.375, 104.072, -33.7604, 0.29 ) }
    dend_60 { pt3dadd( 155.658, 104.94, -33.3781, 0.29 ) }
    dend_60 { pt3dadd( 155.929, 105.635, -33.063, 0.29 ) }
    dend_60 { pt3dadd( 156.307, 106.54, -32.6316, 0.29 ) }
    dend_60 { pt3dadd( 156.938, 107.9, -31.9531, 0.29 ) }
    dend_60 { pt3dadd( 157.493, 108.943, -31.4364, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -16.0004, -193.086, 8.83365, 0.29 ) }
    dend_39 { pt3dadd( -15.8832, -204.927, 6.54949, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.0004, -193.086, 8.83365, 0.29 ) }
    dend_38 { pt3dadd( -8.08477, -190.068, 15.0736, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -25.3551, -132.418, -10.4679, 0.37 ) }
    dend_26 { pt3dadd( -25.553, -133.003, -10.7028, 0.37 ) }
    dend_26 { pt3dadd( -25.6475, -133.282, -10.815, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -25.3551, -132.418, -10.4679, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -27.6217, -132.086, -13.8608, 0.29 ) }
    dend_25 { pt3dadd( -28.3035, -131.988, -14.8293, 0.22 ) }
    dend_25 { pt3dadd( -29.249, -131.947, -16.0641, 0.22 ) }
    dend_25 { pt3dadd( -29.8359, -131.983, -16.7595, 1.47 ) }
    dend_25 { pt3dadd( -30.2712, -132.01, -17.2751, 1.69 ) }
    dend_25 { pt3dadd( -30.687, -132.036, -17.7677, 1.69 ) }
    dend_25 { pt3dadd( -32.0235, -132.067, -18.8197, 0.96 ) }
    dend_25 { pt3dadd( -32.9415, -132.201, -19.6492, 0.29 ) }
    dend_25 { pt3dadd( -33.6925, -132.467, -20.4195, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 21.8901, -167.737, 24.8944, 0.29 ) }
    dend_21 { pt3dadd( 21.999, -168.626, 23.5291, 0.29 ) }
    dend_21 { pt3dadd( 22.0939, -169.4, 22.3383, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 21.8901, -167.737, 24.8944, 0.29 ) }
    dend_20 { pt3dadd( 22.3725, -165.985, 23.9887, 0.29 ) }
    dend_20 { pt3dadd( 22.8915, -164.909, 22.9212, 0.29 ) }
    dend_20 { pt3dadd( 23.3135, -164.452, 21.9723, 0.29 ) }
    dend_20 { pt3dadd( 23.7229, -164.009, 21.0516, 0.52 ) }
    dend_20 { pt3dadd( 24.881, -162.755, 18.4475, 0.44 ) }
    dend_20 { pt3dadd( 25.2696, -162.335, 17.5737, 0.29 ) }
    dend_20 { pt3dadd( 25.8723, -162.512, 16.0837, 0.29 ) }
    dend_20 { pt3dadd( 26.0827, -162.689, 15.5438, 0.29 ) }
    dend_20 { pt3dadd( 28.7654, -158.216, 7.50836, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.32812, -186.821, -19.058, 0.22 ) }
    dend_15 { pt3dadd( -6.32004, -188.125, -18.8274, 0.22 ) }
    dend_15 { pt3dadd( -6.2651, -189.62, -18.4823, 0.22 ) }
    dend_15 { pt3dadd( -6.13909, -191.559, -18.034, 0.22 ) }
    dend_15 { pt3dadd( -6.01398, -193.15, -17.6699, 0.22 ) }
    dend_15 { pt3dadd( -5.81713, -195.198, -17.2245, 0.22 ) }
    dend_15 { pt3dadd( -5.66096, -196.823, -16.8711, 0.22 ) }
    dend_15 { pt3dadd( -5.47459, -198.72, -16.4816, 0.22 ) }
    dend_15 { pt3dadd( -5.31276, -199.92, -16.2506, 0.37 ) }
    dend_15 { pt3dadd( -5.23119, -200.332, -16.1681, 0.37 ) }
    dend_15 { pt3dadd( -4.95572, -201.482, -15.915, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.32812, -186.821, -19.058, 1.55 ) }
    dend_14 { pt3dadd( -7.05764, -187.212, -19.2082, 1.55 ) }
    dend_14 { pt3dadd( -7.48303, -187.495, -19.3089, 1.55 ) }
    dend_14 { pt3dadd( -8.32561, -188.079, -19.5062, 0.29 ) }
    dend_14 { pt3dadd( -9.56062, -188.931, -19.7638, 0.44 ) }
    dend_14 { pt3dadd( -9.87144, -189.123, -19.8527, 0.44 ) }
    dend_14 { pt3dadd( -11.1719, -189.795, -20.3003, 0.29 ) }
    dend_14 { pt3dadd( -11.9866, -190.158, -20.6144, 0.29 ) }
    dend_14 { pt3dadd( -12.7979, -190.471, -20.924, 0.29 ) }
    dend_14 { pt3dadd( -13.7014, -190.751, -21.2453, 0.29 ) }
    dend_14 { pt3dadd( -15.5052, -191.138, -21.7837, 0.29 ) }
    dend_14 { pt3dadd( -17.1075, -191.318, -22.2056, 0.29 ) }
    dend_14 { pt3dadd( -18.123, -191.315, -22.4397, 0.22 ) }
    dend_14 { pt3dadd( -19.1456, -191.245, -22.6431, 0.22 ) }
    dend_14 { pt3dadd( -19.9462, -191.165, -22.7784, 0.22 ) }
    dend_14 { pt3dadd( -20.826, -191.055, -22.8868, 0.22 ) }
    dend_14 { pt3dadd( -21.9291, -190.921, -22.8995, 0.22 ) }
    dend_14 { pt3dadd( -22.7562, -190.777, -22.8786, 0.22 ) }
    dend_14 { pt3dadd( -23.3303, -190.629, -22.8828, 0.52 ) }
    dend_14 { pt3dadd( -23.8372, -190.457, -22.9071, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 184.82, -12.3125, -146.833, 0.81 ) }
    dend_9 { pt3dadd( 186.764, -12.2248, -148.0, 0.81 ) }
    dend_9 { pt3dadd( 188.25, -12.233, -148.83, 0.88 ) }
    dend_9 { pt3dadd( 189.425, -12.299, -149.511, 0.37 ) }
    dend_9 { pt3dadd( 189.766, -12.3176, -149.704, 0.37 ) }
    dend_9 { pt3dadd( 190.51, -12.3582, -150.127, 0.66 ) }
    dend_9 { pt3dadd( 190.994, -12.3846, -150.402, 0.74 ) }
    dend_9 { pt3dadd( 191.159, -12.394, -150.524, 0.74 ) }
    dend_9 { pt3dadd( 192.089, -12.5321, -151.001, 0.37 ) }
    dend_9 { pt3dadd( 192.552, -12.6395, -151.239, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 184.82, -12.3125, -146.833, 0.44 ) }
    dend_4 { pt3dadd( 185.971, -11.4673, -148.378, 0.44 ) }
    dend_4 { pt3dadd( 186.785, -10.8705, -149.468, 0.44 ) }
    dend_4 { pt3dadd( 187.234, -10.5406, -150.071, 0.44 ) }
    dend_4 { pt3dadd( 188.117, -9.89263, -151.255, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 140.012, 65.451, -60.2069, 0.96 ) }
    dend_65 { pt3dadd( 139.41, 64.2569, -64.7808, 0.96 ) }
    dend_65 { pt3dadd( 138.51, 62.9695, -69.3685, 0.59 ) }
    dend_65 { pt3dadd( 138.284, 62.6686, -70.4685, 0.59 ) }
    dend_65 { pt3dadd( 138.092, 62.4028, -71.5193, 0.37 ) }
    dend_65 { pt3dadd( 137.717, 61.864, -73.9711, 0.29 ) }
    dend_65 { pt3dadd( 137.495, 61.5556, -75.5604, 0.29 ) }
    dend_65 { pt3dadd( 137.328, 61.4503, -76.6078, 0.66 ) }
    dend_65 { pt3dadd( 137.097, 61.5046, -78.599, 0.22 ) }
    dend_65 { pt3dadd( 137.033, 61.5389, -79.8059, 0.22 ) }
    dend_65 { pt3dadd( 136.969, 61.5535, -81.346, 0.88 ) }
    dend_65 { pt3dadd( 136.912, 61.5611, -82.2834, 0.88 ) }
    dend_65 { pt3dadd( 136.633, 61.5411, -84.8413, 0.37 ) }
    dend_65 { pt3dadd( 136.442, 61.4392, -86.027, 0.96 ) }
    dend_65 { pt3dadd( 136.217, 61.2449, -87.1952, 1.11 ) }
    dend_65 { pt3dadd( 135.809, 60.7765, -89.4101, 0.44 ) }
    dend_65 { pt3dadd( 135.602, 60.4751, -90.7604, 0.37 ) }
    dend_65 { pt3dadd( 135.475, 60.2464, -91.8297, 0.52 ) }
    dend_65 { pt3dadd( 135.016, 59.3361, -96.4021, 0.37 ) }
    dend_65 { pt3dadd( 134.921, 58.9706, -98.5758, 0.96 ) }
    dend_65 { pt3dadd( 134.904, 58.7649, -100.272, 0.96 ) }
    dend_65 { pt3dadd( 134.922, 58.5881, -101.998, 0.52 ) }
    dend_65 { pt3dadd( 134.959, 58.4184, -103.282, 1.33 ) }
    dend_65 { pt3dadd( 135.002, 58.1666, -104.828, 1.33 ) }
    dend_65 { pt3dadd( 135.017, 57.0601, -111.17, 0.52 ) }
    dend_65 { pt3dadd( 135.007, 56.9283, -111.884, 0.52 ) }
    dend_65 { pt3dadd( 134.965, 56.621, -113.411, 0.52 ) }
    dend_65 { pt3dadd( 134.685, 55.1766, -119.846, 0.44 ) }
    dend_65 { pt3dadd( 134.474, 54.5035, -122.772, 0.59 ) }
    dend_65 { pt3dadd( 134.296, 54.1416, -124.517, 0.59 ) }
    dend_65 { pt3dadd( 134.025, 53.8757, -126.179, 0.88 ) }
    dend_65 { pt3dadd( 133.908, 53.8217, -126.752, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 133.614, 53.851, -127.755, 1.47 ) }
    dend_65 { pt3dadd( 132.699, 54.323, -129.759, 0.29 ) }
    dend_65 { pt3dadd( 131.803, 54.8996, -131.526, 0.29 ) }
    dend_65 { pt3dadd( 131.429, 55.1525, -132.223, 0.29 ) }
    dend_65 { pt3dadd( 130.759, 55.6321, -133.39, 0.29 ) }
    dend_65 { pt3dadd( 130.339, 55.9678, -134.145, 0.29 ) }
    dend_65 { pt3dadd( 129.337, 56.8451, -135.962, 0.29 ) }
    dend_65 { pt3dadd( 128.941, 57.1813, -136.676, 0.29 ) }
    dend_65 { pt3dadd( 128.384, 57.5353, -137.587, 0.96 ) }
    dend_65 { pt3dadd( 128.029, 57.7694, -138.232, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 140.012, 65.451, -60.2069, 0.15 ) }
    dend_62 { pt3dadd( 140.389, 66.5321, -60.5094, 0.15 ) }
    dend_62 { pt3dadd( 140.595, 67.1245, -60.6752, 0.15 ) }
    dend_62 { pt3dadd( 140.761, 67.6005, -60.8084, 0.81 ) }
    dend_62 { pt3dadd( 140.904, 68.0137, -60.9241, 1.03 ) }
    dend_62 { pt3dadd( 141.094, 68.5583, -61.0765, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -25.6475, -133.282, -10.815, 0.52 ) }
    dend_28 { pt3dadd( -25.7785, -133.887, -11.2434, 0.52 ) }
    dend_28 { pt3dadd( -25.9677, -134.868, -11.8119, 0.52 ) }
    dend_28 { pt3dadd( -26.2591, -136.117, -12.3908, 0.37 ) }
    dend_28 { pt3dadd( -26.3982, -136.693, -12.6462, 0.52 ) }
    dend_28 { pt3dadd( -26.5922, -137.466, -12.978, 0.44 ) }
    dend_28 { pt3dadd( -26.8205, -138.324, -13.3533, 0.37 ) }
    dend_28 { pt3dadd( -27.0772, -139.195, -13.6979, 0.29 ) }
    dend_28 { pt3dadd( -27.3745, -140.114, -14.0012, 0.29 ) }
    dend_28 { pt3dadd( -27.7434, -141.311, -14.3525, 1.03 ) }
    dend_28 { pt3dadd( -27.8504, -141.647, -14.4545, 1.18 ) }
    dend_28 { pt3dadd( -28.1849, -142.602, -14.775, 0.88 ) }
    dend_28 { pt3dadd( -28.4212, -143.287, -15.021, 0.44 ) }
    dend_28 { pt3dadd( -28.6736, -144.178, -15.3532, 0.37 ) }
    dend_28 { pt3dadd( -28.7519, -144.702, -15.5497, 0.59 ) }
    dend_28 { pt3dadd( -28.7608, -145.194, -15.7201, 0.44 ) }
    dend_28 { pt3dadd( -28.6439, -146.196, -16.0545, 0.44 ) }
    dend_28 { pt3dadd( -28.4815, -146.908, -16.2791, 0.44 ) }
    dend_28 { pt3dadd( -28.1799, -147.999, -16.6086, 0.52 ) }
    dend_28 { pt3dadd( -27.9091, -149.014, -16.9047, 0.66 ) }
    dend_28 { pt3dadd( -27.7458, -149.854, -17.093, 0.88 ) }
    dend_28 { pt3dadd( -27.7008, -150.439, -17.167, 0.88 ) }
    dend_28 { pt3dadd( -27.7892, -151.334, -17.1633, 0.52 ) }
    dend_28 { pt3dadd( -28.0692, -152.105, -17.0719, 0.29 ) }
    dend_28 { pt3dadd( -28.6195, -153.023, -16.8773, 0.29 ) }
    dend_28 { pt3dadd( -29.3819, -154.065, -16.6781, 0.29 ) }
    dend_28 { pt3dadd( -29.9328, -154.75, -16.603, 0.96 ) }
    dend_28 { pt3dadd( -30.2787, -155.207, -16.6165, 1.18 ) }
    dend_28 { pt3dadd( -30.6153, -155.714, -16.6693, 1.18 ) }
    dend_28 { pt3dadd( -31.0936, -156.67, -16.8564, 0.59 ) }
    dend_28 { pt3dadd( -31.4217, -157.681, -17.0654, 0.52 ) }
    dend_28 { pt3dadd( -31.6398, -158.667, -17.2556, 0.52 ) }
    dend_28 { pt3dadd( -31.8548, -159.942, -17.5199, 0.66 ) }
    dend_28 { pt3dadd( -31.9679, -160.788, -17.6837, 0.66 ) }
    dend_28 { pt3dadd( -32.0515, -161.7, -17.8356, 0.81 ) }
    dend_28 { pt3dadd( -32.0957, -163.023, -17.9511, 0.81 ) }
    dend_28 { pt3dadd( -32.0925, -163.978, -17.862, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -25.6475, -133.282, -10.815, 0.37 ) }
    dend_27 { pt3dadd( -26.5043, -133.099, -10.6293, 0.37 ) }
    dend_27 { pt3dadd( -27.6407, -132.909, -10.4367, 0.37 ) }
    dend_27 { pt3dadd( -28.1817, -132.821, -10.3691, 0.37 ) }
    dend_27 { pt3dadd( -29.3763, -132.618, -10.2713, 0.29 ) }
    dend_27 { pt3dadd( -30.0837, -132.481, -10.2383, 0.29 ) }
    dend_27 { pt3dadd( -30.9223, -132.319, -10.1992, 0.29 ) }
    dend_27 { pt3dadd( -31.7337, -132.181, -10.1551, 0.37 ) }
    dend_27 { pt3dadd( -32.1343, -132.133, -10.1718, 0.37 ) }
    dend_27 { pt3dadd( -32.525, -132.101, -10.2258, 0.29 ) }
    dend_27 { pt3dadd( -32.938, -132.054, -10.3533, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.0939, -169.4, 22.3383, 0.22 ) }
    dend_23 { pt3dadd( 21.0362, -170.562, 22.2198, 0.22 ) }
    dend_23 { pt3dadd( 19.5122, -172.236, 22.049, 0.22 ) }
    dend_23 { pt3dadd( 18.646, -173.187, 21.9519, 0.29 ) }
    dend_23 { pt3dadd( 18.1738, -173.706, 21.899, 0.29 ) }
    dend_23 { pt3dadd( 16.9503, -175.05, 21.7619, 0.22 ) }
    dend_23 { pt3dadd( 16.1509, -175.928, 21.6723, 0.22 ) }
    dend_23 { pt3dadd( 9.47481, -187.339, 20.0863, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 22.0939, -169.4, 22.3383, 0.37 ) }
    dend_22 { pt3dadd( 21.7808, -170.765, 22.9766, 0.37 ) }
    dend_22 { pt3dadd( 21.3964, -172.003, 23.3368, 0.96 ) }
    dend_22 { pt3dadd( 20.819, -173.547, 23.5513, 0.59 ) }
    dend_22 { pt3dadd( 20.3551, -174.728, 23.5577, 0.59 ) }
    dend_22 { pt3dadd( 19.8632, -175.98, 23.5644, 0.22 ) }
    dend_22 { pt3dadd( 19.3947, -177.173, 23.5709, 0.22 ) }
    dend_22 { pt3dadd( 18.7858, -178.448, 23.4192, 0.22 ) }
    dend_22 { pt3dadd( 18.2243, -179.529, 23.0985, 0.22 ) }
    dend_22 { pt3dadd( 17.5601, -180.64, 22.5639, 0.22 ) }
    dend_22 { pt3dadd( 14.7712, -191.757, 24.2822, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 188.117, -9.89263, -151.255, 0.37 ) }
    dend_6 { pt3dadd( 190.498, -10.967, -160.95, 0.37 ) }
    dend_6 { pt3dadd( 190.882, -11.1064, -162.604, 0.66 ) }
    dend_6 { pt3dadd( 191.141, -11.1597, -163.906, 0.66 ) }
    dend_6 { pt3dadd( 191.253, -11.1632, -164.533, 0.96 ) }
    dend_6 { pt3dadd( 191.524, -11.0784, -166.139, 1.11 ) }
    dend_6 { pt3dadd( 191.844, -10.8687, -168.007, 1.11 ) }
    dend_6 { pt3dadd( 192.306, -10.0442, -170.241, 0.81 ) }
    dend_6 { pt3dadd( 192.671, -9.24299, -171.844, 1.4 ) }
    dend_6 { pt3dadd( 192.793, -8.93379, -172.323, 1.4 ) }
    dend_6 { pt3dadd( 193.294, -7.59437, -173.887, 0.37 ) }
    dend_6 { pt3dadd( 193.677, -6.54483, -174.744, 0.37 ) }
    dend_6 { pt3dadd( 194.193, -5.19961, -175.487, 0.37 ) }
    dend_6 { pt3dadd( 194.626, -4.07275, -175.901, 0.66 ) }
    dend_6 { pt3dadd( 194.961, -3.12945, -176.165, 0.66 ) }
    dend_6 { pt3dadd( 195.298, -1.78045, -176.541, 0.29 ) }
    dend_6 { pt3dadd( 195.425, -0.735369, -176.823, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 195.442, 0.0227032, -177.046, 0.52 ) }
    dend_6 { pt3dadd( 195.416, 1.28666, -177.487, 0.29 ) }
    dend_6 { pt3dadd( 195.397, 2.58648, -178.009, 1.03 ) }
    dend_6 { pt3dadd( 195.421, 4.51044, -178.922, 0.66 ) }
    dend_6 { pt3dadd( 195.462, 5.72634, -179.555, 0.44 ) }
    dend_6 { pt3dadd( 195.485, 6.1596, -179.787, 0.66 ) }
    dend_6 { pt3dadd( 195.561, 7.49315, -180.527, 0.37 ) }
    dend_6 { pt3dadd( 195.621, 8.17056, -180.883, 0.52 ) }
    dend_6 { pt3dadd( 195.792, 9.49407, -181.498, 0.37 ) }
    dend_6 { pt3dadd( 195.962, 10.4201, -181.83, 0.37 ) }
    dend_6 { pt3dadd( 196.156, 11.4084, -182.172, 0.37 ) }
    dend_6 { pt3dadd( 196.303, 12.5177, -182.547, 0.37 ) }
    dend_6 { pt3dadd( 196.378, 13.5889, -182.882, 0.96 ) }
    dend_6 { pt3dadd( 196.41, 14.0403, -183.019, 0.96 ) }
    dend_6 { pt3dadd( 196.591, 15.8548, -183.524, 0.29 ) }
    dend_6 { pt3dadd( 196.773, 17.3249, -183.948, 0.29 ) }
    dend_6 { pt3dadd( 196.972, 18.6888, -184.359, 0.29 ) }
    dend_6 { pt3dadd( 197.148, 19.8287, -184.716, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 188.117, -9.89263, -151.255, 0.52 ) }
    dend_5 { pt3dadd( 186.537, -8.03391, -154.892, 0.52 ) }
    dend_5 { pt3dadd( 186.401, -7.87259, -155.179, 0.52 ) }
    dend_5 { pt3dadd( 185.728, -7.08919, -156.472, 0.37 ) }
    dend_5 { pt3dadd( 185.54, -6.86992, -156.835, 0.29 ) }
    dend_5 { pt3dadd( 184.97, -6.2066, -157.93, 0.29 ) }
    dend_5 { pt3dadd( 184.485, -5.64268, -158.862, 0.29 ) }
    dend_5 { pt3dadd( 183.978, -4.9264, -159.499, 0.29 ) }
    dend_5 { pt3dadd( 183.756, -4.62419, -159.783, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 128.029, 57.7694, -138.232, 0.29 ) }
    dend_67 { pt3dadd( 127.309, 58.6425, -141.051, 0.29 ) }
    dend_67 { pt3dadd( 127.115, 58.701, -141.924, 0.29 ) }
    dend_67 { pt3dadd( 126.866, 58.6672, -143.155, 0.29 ) }
    dend_67 { pt3dadd( 126.438, 58.5989, -145.381, 0.29 ) }
    dend_67 { pt3dadd( 126.271, 58.6024, -146.224, 0.44 ) }
    dend_67 { pt3dadd( 126.045, 58.607, -147.368, 0.44 ) }
    dend_67 { pt3dadd( 125.321, 58.4625, -150.722, 0.29 ) }
    dend_67 { pt3dadd( 125.0, 58.3212, -152.33, 0.29 ) }
    dend_67 { pt3dadd( 124.843, 58.2062, -153.282, 0.29 ) }
    dend_67 { pt3dadd( 124.614, 58.0238, -154.736, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 128.029, 57.7694, -138.232, 0.22 ) }
    dend_66 { pt3dadd( 127.183, 57.2919, -137.739, 0.22 ) }
    dend_66 { pt3dadd( 126.493, 56.9595, -137.336, 0.22 ) }
    dend_66 { pt3dadd( 125.641, 56.6146, -136.817, 1.4 ) }
    dend_66 { pt3dadd( 124.685, 56.2276, -136.235, 0.22 ) }
    dend_66 { pt3dadd( 123.619, 55.7959, -135.585, 1.84 ) }
    dend_66 { pt3dadd( 122.685, 55.4178, -135.016, 0.22 ) }
    dend_66 { pt3dadd( 121.888, 55.1556, -134.473, 0.22 ) }
    dend_66 { pt3dadd( 121.149, 54.9535, -133.943, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 141.094, 68.5583, -61.0765, 0.74 ) }
    dend_64 { pt3dadd( 140.767, 69.1825, -61.4165, 0.74 ) }
    dend_64 { pt3dadd( 140.191, 70.1703, -61.943, 0.22 ) }
    dend_64 { pt3dadd( 139.795, 70.7397, -62.2687, 0.22 ) }
    dend_64 { pt3dadd( 138.926, 71.822, -62.9067, 0.22 ) }
    dend_64 { pt3dadd( 138.1, 72.7956, -63.4157, 1.33 ) }
    dend_64 { pt3dadd( 137.684, 73.2938, -63.6373, 1.33 ) }
    dend_64 { pt3dadd( 136.787, 74.3298, -64.0053, 0.22 ) }
    dend_64 { pt3dadd( 136.105, 75.0664, -64.2155, 0.22 ) }
    dend_64 { pt3dadd( 135.646, 75.5211, -64.3323, 0.22 ) }
    dend_64 { pt3dadd( 134.612, 76.4653, -64.6119, 0.22 ) }
    dend_64 { pt3dadd( 133.848, 77.2109, -64.765, 0.22 ) }
    dend_64 { pt3dadd( 133.404, 77.7371, -64.8569, 0.37 ) }
    dend_64 { pt3dadd( 133.017, 78.317, -64.9505, 0.37 ) }
    dend_64 { pt3dadd( 132.664, 79.0325, -65.044, 0.37 ) }
    dend_64 { pt3dadd( 132.447, 79.5952, -65.1367, 0.15 ) }
    dend_64 { pt3dadd( 131.867, 81.104, -65.4978, 0.22 ) }
    dend_64 { pt3dadd( 131.391, 82.3233, -65.843, 0.22 ) }
    dend_64 { pt3dadd( 131.038, 83.1778, -66.0786, 0.22 ) }
    dend_64 { pt3dadd( 130.327, 84.6736, -66.544, 0.22 ) }
    dend_64 { pt3dadd( 129.753, 85.6796, -66.8718, 0.22 ) }
    dend_64 { pt3dadd( 128.949, 86.9181, -67.2738, 0.22 ) }
    dend_64 { pt3dadd( 128.631, 87.3564, -67.422, 0.74 ) }
    dend_64 { pt3dadd( 127.232, 89.1018, -67.9941, 0.29 ) }
    dend_64 { pt3dadd( 126.362, 90.1153, -68.3451, 0.29 ) }
    dend_64 { pt3dadd( 125.507, 91.0922, -68.7083, 0.29 ) }
    dend_64 { pt3dadd( 124.889, 91.8344, -68.9311, 0.29 ) }
    dend_64 { pt3dadd( 124.18, 92.8027, -69.1164, 0.52 ) }
    dend_64 { pt3dadd( 123.548, 93.7132, -69.2359, 0.37 ) }
    dend_64 { pt3dadd( 122.748, 94.9419, -69.3565, 0.29 ) }
    dend_64 { pt3dadd( 122.555, 95.2502, -69.3768, 0.37 ) }
    dend_64 { pt3dadd( 121.804, 96.4548, -69.4546, 0.37 ) }
    dend_64 { pt3dadd( 120.769, 98.0438, -69.5464, 0.37 ) }
    dend_64 { pt3dadd( 119.941, 99.2636, -69.5931, 0.22 ) }
    dend_64 { pt3dadd( 119.488, 99.9438, -69.5954, 0.22 ) }
    dend_64 { pt3dadd( 118.997, 100.676, -69.5921, 0.74 ) }
    dend_64 { pt3dadd( 118.719, 101.073, -69.605, 0.88 ) }
    dend_64 { pt3dadd( 117.838, 102.265, -69.7544, 0.59 ) }
    dend_64 { pt3dadd( 116.785, 103.553, -70.0883, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 141.094, 68.5583, -61.0765, 0.29 ) }
    dend_63 { pt3dadd( 142.453, 68.9173, -61.4636, 0.29 ) }
    dend_63 { pt3dadd( 143.788, 69.0217, -61.8049, 0.29 ) }
    dend_63 { pt3dadd( 145.162, 69.0212, -62.1322, 1.03 ) }
    dend_63 { pt3dadd( 145.821, 68.9958, -62.2868, 1.03 ) }
    dend_63 { pt3dadd( 147.451, 68.9256, -62.6011, 0.44 ) }
    dend_63 { pt3dadd( 148.676, 68.8899, -62.7945, 0.29 ) }
    dend_63 { pt3dadd( 150.314, 68.7842, -62.9623, 0.96 ) }
    dend_63 { pt3dadd( 150.863, 68.7482, -62.9938, 0.96 ) }
    dend_63 { pt3dadd( 152.438, 68.7166, -63.0384, 0.22 ) }
    dend_63 { pt3dadd( 153.618, 68.7622, -63.071, 0.22 ) }
    dend_63 { pt3dadd( 154.788, 68.9313, -63.0912, 0.22 ) }
    dend_63 { pt3dadd( 156.027, 69.2051, -63.1351, 0.22 ) }
    dend_63 { pt3dadd( 157.429, 69.6171, -63.2326, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 158.294, 69.9145, -63.3282, 0.52 ) }
    dend_63 { pt3dadd( 158.986, 70.2163, -63.4564, 0.29 ) }
    dend_63 { pt3dadd( 159.826, 70.6952, -63.7129, 1.03 ) }
    dend_63 { pt3dadd( 160.327, 71.1213, -63.9275, 1.03 ) }
    dend_63 { pt3dadd( 160.709, 71.622, -64.1888, 0.88 ) }
    dend_63 { pt3dadd( 161.044, 72.2091, -64.4693, 0.66 ) }
    dend_63 { pt3dadd( 161.409, 73.0202, -64.8388, 0.37 ) }
    dend_63 { pt3dadd( 161.718, 73.9355, -65.233, 0.59 ) }
    dend_63 { pt3dadd( 162.006, 75.119, -65.7239, 0.29 ) }
    dend_63 { pt3dadd( 162.208, 76.2117, -66.1288, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -32.0925, -163.978, -17.862, 0.74 ) }
    dend_30 { pt3dadd( -32.5781, -164.727, -17.7332, 0.74 ) }
    dend_30 { pt3dadd( -33.4152, -165.827, -17.5594, 0.66 ) }
    dend_30 { pt3dadd( -34.0807, -166.545, -17.4741, 0.52 ) }
    dend_30 { pt3dadd( -35.0217, -167.408, -17.4243, 0.37 ) }
    dend_30 { pt3dadd( -35.5558, -167.88, -17.4179, 0.74 ) }
    dend_30 { pt3dadd( -36.0035, -168.282, -17.3982, 1.03 ) }
    dend_30 { pt3dadd( -36.6179, -168.813, -17.372, 0.74 ) }
    dend_30 { pt3dadd( -37.4925, -169.581, -17.3376, 0.52 ) }
    dend_30 { pt3dadd( -38.3592, -170.443, -17.2889, 0.52 ) }
    dend_30 { pt3dadd( -38.9269, -171.141, -17.2486, 0.66 ) }
    dend_30 { pt3dadd( -39.6985, -172.371, -17.1742, 0.88 ) }
    dend_30 { pt3dadd( -39.915, -172.813, -17.1509, 1.18 ) }
    dend_30 { pt3dadd( -40.1884, -173.529, -17.1153, 0.81 ) }
    dend_30 { pt3dadd( -40.4837, -174.551, -17.073, 0.52 ) }
    dend_30 { pt3dadd( -40.6931, -175.418, -17.0802, 0.52 ) }
    dend_30 { pt3dadd( -40.9414, -176.449, -17.152, 0.52 ) }
    dend_30 { pt3dadd( -41.0636, -176.941, -17.2257, 0.52 ) }
    dend_30 { pt3dadd( -41.3193, -177.907, -17.3909, 0.52 ) }
    dend_30 { pt3dadd( -41.5973, -178.862, -17.5715, 0.52 ) }
    dend_30 { pt3dadd( -41.8483, -179.664, -17.7536, 1.03 ) }
    dend_30 { pt3dadd( -42.0479, -180.247, -17.8976, 1.25 ) }
    dend_30 { pt3dadd( -42.3435, -180.969, -18.1059, 0.66 ) }
    dend_30 { pt3dadd( -42.6865, -181.67, -18.3482, 0.29 ) }
    dend_30 { pt3dadd( -43.1946, -182.351, -18.6892, 0.29 ) }
    dend_30 { pt3dadd( -43.5499, -182.242, -18.881, 0.52 ) }
    dend_30 { pt3dadd( -44.4531, -181.569, -19.3393, 0.29 ) }
    dend_30 { pt3dadd( -45.1498, -180.942, -19.6958, 0.29 ) }
    dend_30 { pt3dadd( -45.877, -180.171, -20.0664, 0.22 ) }
    dend_30 { pt3dadd( -46.0114, -180.007, -20.1369, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -32.0925, -163.978, -17.862, 0.22 ) }
    dend_29 { pt3dadd( -32.0303, -165.638, -18.301, 0.22 ) }
    dend_29 { pt3dadd( -31.9969, -166.302, -18.4769, 0.22 ) }
    dend_29 { pt3dadd( -31.9216, -167.625, -18.7732, 0.22 ) }
    dend_29 { pt3dadd( -31.843, -169.12, -19.0609, 0.22 ) }
    dend_29 { pt3dadd( -31.7793, -170.331, -19.2939, 0.22 ) }
    dend_29 { pt3dadd( -31.6556, -172.683, -19.7464, 0.22 ) }
    dend_29 { pt3dadd( -31.6423, -173.688, -19.9448, 0.22 ) }
    dend_29 { pt3dadd( -31.5775, -175.674, -20.3373, 0.22 ) }
    dend_29 { pt3dadd( -31.4941, -176.784, -20.5285, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 197.148, 19.8287, -184.716, 0.29 ) }
    dend_8 { pt3dadd( 198.097, 19.5231, -184.789, 0.29 ) }
    dend_8 { pt3dadd( 198.642, 19.3473, -184.831, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 197.148, 19.8287, -184.716, 0.37 ) }
    dend_7 { pt3dadd( 197.186, 20.5529, -184.932, 0.37 ) }
    dend_7 { pt3dadd( 197.23, 21.4056, -185.187, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, axon_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, axon_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_5 = new SectionList()
    dend_78 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_50 nseg = 9
    dend_44 nseg = 3
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_88 nseg = 3
    dend_69 nseg = 5
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 7
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_80 nseg = 3
    dend_70 nseg = 3
    dend_48 nseg = 3
    dend_16 nseg = 3
    dend_11 nseg = 7
    dend_2 nseg = 11
    dend_68 nseg = 3
    dend_59 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 5
    dend_6 nseg = 3
    dend_64 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_ChC_6d90400381_0_0


