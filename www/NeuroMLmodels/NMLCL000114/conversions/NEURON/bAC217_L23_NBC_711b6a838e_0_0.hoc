// Cell: bAC217_L23_NBC_711b6a838e_0_0
/*
{
  "id" : "bAC217_L23_NBC_711b6a838e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-11.2904, -1.90655, -0.0708968, 1.21335", "-10.2183, -1.82528, -0.0665607, 1.95742", "-9.14614, -1.74402, -0.0622246, 3.52326", "-8.07401, -1.66275, -0.0578885, 5.81709", "-7.00188, -1.58149, -0.0535524, 7.36561", "-5.92974, -1.50022, -0.0492164, 9.78862", "-4.85761, -1.41896, -0.0448803, 11.1132", "-3.78548, -1.3377, -0.0405442, 11.7228", "-2.71334, -1.25643, -0.0362081, 12.3311", "-1.64121, -1.17517, -0.031872, 12.4664", "-0.569079, -1.0939, -0.0275359, 12.3777", "0.503053, -1.01264, -0.0231998, 12.2817", "1.57519, -0.931372, -0.0188637, 12.3245", "2.64732, -0.850108, -0.0145276, 12.2615", "3.71945, -0.768843, -0.0101916, 12.0136", "4.79158, -0.687578, -0.00585547, 11.5505", "5.86372, -0.606314, -0.00151938, 11.1181", "6.93585, -0.525049, 0.00281671, 10.2871", "8.00798, -0.443784, 0.0071528, 7.35968", "9.08011, -0.36252, 0.0114889, 4.57252", "10.1522, -0.281255, 0.015825, 2.82158" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-1.31809, -6.31122, -0.14221, 1.11", "-0.105618, -5.92222, 5.79633, 1.11", "0.521399, -5.38834, 10.021, 0.83", "1.5234, -3.91731, 17.6331, 0.55", "1.91594, -3.23295, 20.4841, 0.55", "3.00374, -1.30225, 27.4955, 0.55", "3.61396, -0.0680211, 31.0799, 0.55", "4.45537, 2.05579, 35.4379, 0.55", "4.86055, 3.06751, 37.1646, 0.55", "5.41759, 4.11332, 38.6318, 0.55", "6.58946, 5.8738, 40.6998, 0.55", "8.45896, 8.16515, 42.4493, 0.55", "9.55718, 9.32575, 43.0003, 0.55", "12.0476, 11.602, 43.398, 0.55", "14.6855, 13.6868, 43.3095, 0.55", "17.3958, 15.7436, 42.6381, 0.55", "20.2911, 18.035, 41.2589, 0.55", "24.3695, 21.0393, 38.4274, 0.55", "27.2562, 22.934, 36.1365, 0.55", "29.5164, 24.294, 34.1668, 0.55", "32.1867, 25.7766, 31.8263, 0.55", "35.6918, 27.3491, 28.873, 0.55", "41.0454, 28.9827, 24.9289, 0.55", "44.3851, 29.7541, 22.7582, 0.55", "46.3413, 30.2051, 21.6394, 0.55", "48.9638, 30.6953, 20.34, 0.55", "51.1348, 30.9061, 19.493, 0.55", "54.9546, 31.0716, 18.1735, 0.55", "60.6402, 31.5319, 16.1662, 0.55", "62.9499, 31.7359, 15.1706, 0.55", "65.4902, 31.8938, 13.9497, 0.55", "67.7193, 32.0275, 12.7513, 0.55", "71.9515, 32.4216, 10.3357, 0.55", "74.6206, 32.8236, 8.83934, 0.55", "77.1979, 33.1922, 7.52505, 0.55", "79.2236, 33.63, 6.38738, 0.55", "80.6444, 34.088, 5.55624, 0.55", "81.6309, 34.4649, 5.00405, 0.55", "85.8814, 36.0271, 3.032, 0.55", "88.4835, 37.0963, 1.85846, 0.55", "90.223, 37.8911, 1.05579, 0.55", "93.9965, 39.7405, -0.661872, 0.55", "95.2133, 40.3229, -1.25251, 0.55", "98.8458, 42.0174, -3.03324, 0.55", "101.488, 43.1487, -4.26533, 0.55", "103.586, 43.9202, -5.37474, 0.55", "105.982, 44.5563, -6.80487, 0.55", "109.576, 45.3, -9.23149, 0.55", "111.374, 45.5238, -10.5303, 0.83", "113.444, 45.7359, -12.074, 0.55", "118.487, 46.0279, -15.7869, 0.55", "122.14, 46.2417, -18.4114, 0.55", "124.852, 46.3401, -20.2782, 0.55", "127.267, 46.4966, -21.8278, 0.55", "130.728, 46.7115, -24.0226, 0.55", "135.882, 47.0383, -27.0242, 0.55", "137.707, 47.1084, -27.8771, 0.55", "140.929, 47.2401, -29.1877, 0.28", "142.375, 47.2593, -29.6669, 0.55", "145.332, 47.256, -30.547, 0.28", "147.039, 47.0491, -31.0626, 0.28", "148.611, 46.7825, -31.5184, 0.55", "150.357, 46.3621, -32.158, 0.55", "152.23, 45.7425, -32.9259, 0.55", "155.589, 44.2203, -34.3298, 0.55", "158.761, 42.2788, -35.7309, 0.55", "160.075, 41.2265, -36.433, 0.28", "161.144, 40.1829, -37.0697, 0.55", "162.44, 38.712, -37.9095, 0.28", "163.802, 36.8867, -38.8157, 0.55", "166.036, 33.4059, -40.2695, 0.28", "167.034, 31.746, -40.9069, 0.55", "167.908, 30.227, -41.5001, 0.28", "168.715, 28.8065, -42.0759, 0.55", "170.802, 25.137, -43.7708, 0.28", "171.47, 23.9228, -44.3882, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "1.63191, 7.31778, -19.0822, 1.38", "1.69196, 10.1422, -19.0822, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "4.65191, 5.01828, 3.74779, 0.55", "5.31804, 6.27399, 5.29365, 0.55", "5.66431, 6.90689, 6.07375, 0.55", "6.19489, 7.73569, 7.45466, 0.55", "7.19912, 9.06349, 10.0234, 0.55", "8.48612, 10.8089, 13.4005, 0.55", "9.76718, 12.491, 16.6587, 0.55", "11.1085, 13.9399, 19.8255, 0.55", "13.2806, 16.088, 24.9549, 0.55", "13.9764, 16.7191, 26.6342, 0.55", "14.9146, 17.459, 28.8341, 0.55", "15.733, 17.9133, 30.5322, 0.55", "17.1879, 18.5073, 33.4565, 0.55", "22.4299, 21.4304, 43.7773, 0.55", "27.5408, 25.8453, 53.6687, 0.55", "30.4355, 30.1344, 64.4592, 0.55", "34.4967, 33.9159, 75.0495, 0.55", "39.3543, 38.8215, 84.856, 0.55", "42.5883, 45.3228, 94.4765, 0.55", "45.2153, 53.0615, 103.422, 0.55", "49.9818, 61.7388, 110.531, 0.55", "53.9898, 70.6538, 117.831, 0.55", "57.1565, 80.8708, 123.89, 0.55", "59.1146, 92.7958, 126.86, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "9.74188, -4.06422, -1.90221, 0.55", "11.3357, -4.65196, -1.75568, 0.55", "14.1634, -5.24684, -1.4813, 0.83", "16.6721, -5.56173, -1.24863, 0.55", "19.6443, -5.71489, -0.998874, 0.55", "21.5486, -5.75938, -0.816077, 0.55", "24.7453, -5.69915, -0.521982, 0.55", "27.2653, -5.42159, -0.192733, 0.55", "29.74, -4.9099, 0.17807, 0.55", "31.5121, -4.34759, 0.443045, 0.55", "33.6165, -3.45122, 0.742873, 0.55", "37.3734, -1.54884, 1.22059, 0.55", "40.293, -0.111123, 1.60457, 0.55", "42.7599, 1.05746, 1.95339, 0.55", "46.6229, 2.72498, 2.5109, 0.55", "48.9598, 3.61317, 2.85472, 0.55", "50.9955, 4.31715, 3.15459, 0.55", "54.725, 5.28895, 3.72392, 0.55", "56.997, 5.71275, 4.03055, 0.55", "60.5601, 6.23683, 4.54094, 0.55", "63.2623, 6.56021, 4.95003, 0.55", "65.3272, 6.90307, 5.2566, 0.55", "67.3843, 7.3216, 5.53568, 0.55", "69.9984, 8.10298, 5.82325, 0.55", "72.265, 8.86465, 6.03267, 0.55", "74.6814, 9.88957, 6.20333, 0.55", "76.636, 10.7512, 6.30654, 0.55", "77.7639, 11.2994, 6.36743, 0.55", "79.7751, 12.3441, 6.36104, 0.55", "81.7843, 13.3117, 6.25858, 0.55", "83.8199, 14.2806, 6.05784, 0.55", "85.6191, 15.0727, 5.81782, 0.55", "88.48, 16.2166, 5.41015, 0.55", "92.2032, 17.6582, 4.92194, 0.55", "93.9561, 18.2896, 4.70687, 0.55", "97.3504, 19.5382, 4.31858, 0.55", "100.834, 20.7925, 3.96535, 0.55", "103.158, 21.7447, 3.75923, 0.55", "105.531, 22.8597, 3.62662, 0.28", "106.521, 23.4707, 3.64845, 0.28", "107.888, 24.6165, 3.67889, 0.28", "108.211, 24.9977, 3.65087, 0.55", "109.216, 26.8076, 3.32086, 0.28", "109.673, 27.8656, 3.02784, 0.55", "110.64, 30.4414, 1.94718, 0.28", "111.121, 31.7494, 1.25217, 0.28", "112.201, 34.3737, -0.416507, 0.55", "112.754, 35.7366, -1.34716, 0.28", "112.961, 36.2254, -1.71756, 0.55", "113.799, 38.1458, -3.20392, 0.28", "114.066, 38.8198, -3.71278, 0.55", "114.471, 39.8236, -4.3977, 0.28", "115.178, 41.4986, -5.30024, 0.28", "115.64, 42.498, -5.79668, 0.55", "116.338, 43.8624, -6.36581, 0.28", "116.778, 44.6119, -6.59568, 0.55", "117.764, 46.1081, -6.96337, 0.28", "117.954, 46.3471, -7.01289, 0.55", "119.118, 47.607, -7.20597, 0.28", "119.975, 48.4497, -7.15888, 0.55", "120.996, 49.4564, -6.99564, 0.28", "121.59, 50.0931, -6.86555, 0.55", "122.775, 51.5431, -6.48258, 0.55", "123.664, 52.9099, -6.13416, 0.55", "124.953, 55.8578, -5.35791, 0.28", "125.751, 58.0176, -4.63276, 0.55", "126.258, 59.5609, -4.09126, 0.55", "126.99, 62.143, -3.2236, 0.28", "127.409, 63.8378, -2.67147, 0.28", "128.642, 69.201, -0.936403, 0.28", "129.435, 73.0005, 0.230237, 0.28", "130.046, 75.7555, 1.16178, 0.28", "130.544, 77.8663, 1.90006, 0.28", "131.261, 80.8583, 2.92241, 0.28", "138.885, 87.655, 2.90628, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "6.53191, 0.251275, 10.2578, 0.83", "7.66278, -2.04854, 11.4335, 0.83", "8.50388, -3.75906, 12.3079, 0.83", "10.0792, -6.96266, 13.9457, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.22809, 2.35128, -8.58221, 0.83", "-7.06716, 2.71925, -9.4815, 0.83", "-8.44648, 3.88683, -11.2548, 0.83", "-10.334, 6.05969, -13.5957, 0.83", "-11.4901, 7.78513, -15.0706, 0.83", "-13.3737, 11.0592, -17.6577, 0.55", "-14.2561, 12.6018, -18.8844, 0.55", "-15.4721, 14.8814, -20.7087, 0.55", "-16.5234, 16.9163, -22.2603, 0.55", "-18.2309, 19.8485, -24.4288, 0.55", "-19.955, 22.2439, -26.3413, 0.55", "-20.8141, 23.1827, -27.1156, 0.83", "-23.0636, 25.1714, -28.8227, 0.55", "-24.9426, 26.4808, -29.9699, 0.55", "-27.3943, 28.0814, -31.3347, 0.55", "-29.7946, 29.6747, -32.5357, 0.55", "-31.586, 30.9991, -33.3637, 0.55", "-34.6129, 33.626, -34.8149, 0.83", "-36.6221, 35.6114, -35.7851, 0.55", "-38.2826, 37.3725, -36.6799, 0.55", "-40.1869, 39.6293, -37.9004, 0.83", "-41.0631, 40.7061, -38.5069, 0.83", "-42.2896, 42.2035, -39.3747, 0.28", "-43.153, 43.2421, -39.9888, 0.55", "-44.7172, 45.0156, -40.9151, 0.55", "-46.1883, 46.5776, -41.7854, 0.55", "-47.33, 47.8699, -42.4785, 0.55", "-48.5519, 49.479, -43.38, 0.83", "-49.323, 50.5924, -44.0691, 0.83", "-50.5517, 52.5961, -45.3703, 0.83", "-52.4801, 56.1892, -47.7135, 0.83", "-53.361, 57.8533, -48.8137, 0.55", "-54.6263, 60.2935, -50.4276, 0.83", "-56.0036, 63.0067, -52.1273, 0.55", "-56.6515, 64.1581, -52.8245, 0.55", "-56.9749, 64.6663, -53.1142, 0.55", "-58.1366, 66.2861, -53.8707, 0.83", "-59.8527, 68.4622, -54.873, 0.83", "-61.1487, 70.034, -55.5402, 0.83", "-63.8333, 73.1415, -56.8372, 0.83", "-65.5687, 74.8749, -57.6487, 0.83", "-66.7913, 75.9682, -58.2152, 0.83", "-68.3208, 77.1827, -58.9364, 0.55", "-69.8831, 78.2215, -59.6477, 0.55", "-71.2974, 79.0251, -60.2703, 0.55", "-73.292, 79.945, -61.05, 0.55", "-76.0848, 81.0403, -62.0801, 0.55", "-77.334, 81.4699, -62.5893, 0.55", "-78.6671, 81.8737, -63.1483, 0.83", "-80.1296, 82.2356, -63.7756, 0.55", "-81.3987, 82.5599, -64.3884, 0.55", "-82.8284, 82.9474, -65.1449, 0.83", "-85.4094, 83.6025, -66.571, 0.55", "-87.1597, 84.066, -67.561, 0.83", "-89.7428, 84.7847, -69.0859, 0.55", "-91.7475, 85.3658, -70.2974, 0.28", "-93.194, 85.8253, -71.2271, 0.83", "-95.2511, 86.504, -72.5763, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.71191, -6.04872, -1.57221, 2.22", "10.7378, -10.7245, -1.56079, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.35809, -5.64972, 3.20779, 1.11", "-8.96002, -7.57449, 3.91041, 1.11", "-9.71077, -9.97511, 4.78673, 0.83", "-10.5432, -12.637, 5.75843, 1.11", "-11.372, -15.2872, 6.72586, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-10.7781, -4.87272, -3.55221, 1.38", "-12.5616, -6.65347, -4.29139, 1.38", "-15.0926, -9.18049, -5.34035, 1.11", "-17.2297, -11.3143, -6.22608, 1.11", "-19.5409, -13.6218, -7.18395, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.17809, 4.70328, 1.47779, 1.11", "-8.59773, 6.09791, 2.19943, 1.11", "-11.6274, 8.17284, 3.58799, 1.11", "-14.8189, 11.1017, 5.33104, 1.11", "-18.5494, 15.3974, 7.2468, 1.11", "-20.2175, 17.8761, 8.19577, 0.83", "-21.5169, 20.0574, 8.93882, 0.83", "-24.2932, 25.6051, 10.4431, 0.83", "-26.2562, 30.5709, 11.4449, 0.83", "-27.6665, 35.4097, 12.1826, 0.55", "-29.0654, 41.3878, 13.0619, 0.55", "-29.6734, 43.6947, 13.4821, 0.28", "-30.6098, 46.7218, 14.0943, 0.83", "-32.04, 50.9418, 14.9522, 0.55", "-33.2876, 54.4098, 15.824, 0.55", "-35.2989, 59.752, 17.2679, 0.55", "-37.8235, 66.9649, 18.8094, 0.55", "-39.1329, 71.0831, 19.5788, 0.55", "-40.6177, 75.9545, 20.3718, 0.55", "-41.861, 80.2856, 20.9843, 0.55", "-43.6895, 86.773, 21.7285, 0.55", "-45.8045, 95.1645, 22.4125, 0.55", "-46.7597, 99.3505, 22.7165, 0.55", "-47.6355, 103.008, 23.0554, 0.55", "-48.4526, 106.365, 23.4738, 0.55", "-49.6467, 111.261, 24.2731, 0.55", "-50.7899, 115.807, 25.2138, 0.55", "-51.9832, 120.44, 26.3682, 0.55", "-53.5601, 127.519, 28.111, 0.55", "-53.914, 129.291, 28.5951, 0.55", "-54.8915, 134.425, 30.0529, 0.55", "-55.6548, 138.821, 31.6102, 0.55", "-56.126, 141.898, 32.8594, 0.55", "-56.5378, 145.369, 34.3738, 0.55", "-57.0263, 149.302, 36.0955, 0.83", "-57.8428, 153.684, 37.9219, 0.55", "-59.1825, 158.589, 39.825, 0.55", "-60.2987, 161.563, 40.9111, 0.55", "-61.9242, 164.996, 42.1184, 0.55", "-63.9299, 168.844, 43.3534, 0.55", "-66.0579, 172.689, 44.3787, 0.55", "-68.0298, 175.99, 45.3446, 0.55", "-69.9071, 178.968, 46.2132, 0.55", "-71.8678, 181.918, 47.2643, 0.55", "-73.1518, 183.872, 48.1358, 0.55", "-75.31, 187.384, 49.9627, 0.55", "-77.0402, 190.661, 51.8081, 0.55", "-78.6081, 194.119, 53.86, 0.55", "-79.442, 196.132, 55.0442, 0.83", "-80.919, 199.987, 57.2408, 0.55", "-81.2781, 201.087, 57.9169, 0.55", "-81.9969, 203.458, 59.5261, 0.55", "-83.1695, 206.836, 61.7893, 0.55", "-84.0979, 209.037, 63.4525, 0.55", "-85.0959, 211.242, 65.2469, 0.55", "-86.9783, 214.889, 68.4016, 0.55", "-89.5283, 219.273, 72.3238, 0.55", "-91.1904, 221.822, 74.8072, 0.55", "-94.5551, 226.82, 79.8893, 0.55", "-96.3592, 229.783, 82.7986, 0.55", "-98.152, 233.501, 86.1021, 0.55", "-98.8103, 235.404, 87.4981, 0.55", "-99.5291, 239.75, 90.1833, 0.55", "-99.7102, 241.928, 91.3005, 0.55", "-100.007, 247.241, 93.3752, 0.55", "-100.291, 253.585, 95.5119, 0.55", "-100.235, 258.095, 96.7961, 0.55", "-100.09, 261.029, 97.6097, 0.55", "-99.5898, 266.62, 98.8737, 0.55", "-99.0914, 271.912, 100.01, 0.55", "-98.558, 277.104, 101.109, 0.55", "-97.8765, 282.178, 102.032, 0.55", "-97.0222, 287.316, 102.911, 0.55", "-95.7143, 293.574, 103.901, 0.28", "-94.9045, 296.076, 104.263, 0.28", "-93.9554, 298.454, 104.492, 0.28", "-99.4133, 311.979, 108.605, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.1522, -0.281255, 0.015825, 0.55", "25.1093, 0.852455, 0.015825, 0.55", "40.0664, 1.98617, 0.015825, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.69196, 10.1422, -19.0822, 0.83", "3.22487, 13.9736, -18.9111, 0.83", "3.76519, 15.4691, -19.1963, 1.38", "4.51082, 17.8058, -20.0529, 0.83", "4.90852, 19.7885, -20.9371, 0.83", "5.27176, 22.7259, -22.3905, 0.83", "5.43678, 25.0238, -23.5945, 0.83", "5.53871, 29.2932, -25.9211, 1.11", "5.46369, 31.6543, -27.3287, 0.83", "5.24969, 35.4159, -29.6848, 0.83", "5.11118, 37.7122, -31.1367, 0.83", "4.95306, 39.4561, -32.1636, 0.55", "4.88776, 40.4383, -32.6077, 0.55", "4.97673, 42.8247, -33.3672, 0.55", "5.29187, 44.9759, -33.9446, 0.55", "5.72158, 46.7026, -34.3891, 0.55", "6.40046, 49.1177, -34.9749, 0.55", "7.21745, 51.9107, -35.7405, 0.55", "8.2217, 55.4744, -36.8043, 0.55", "9.22782, 58.9908, -37.9086, 0.55", "9.80148, 61.1049, -38.6237, 0.83", "10.3601, 63.0033, -39.3296, 0.83", "11.0885, 65.2637, -40.2539, 0.55", "11.6657, 67.3708, -41.1584, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.69196, 10.1422, -19.0822, 0.55", "3.48465, 9.73182, -19.1126, 0.55", "6.31748, 9.08341, -19.1607, 1.11", "8.43465, 8.59881, -19.1966, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "10.0792, -6.96266, 13.9457, 0.55", "12.8614, -5.63372, 15.0168, 0.55", "14.6062, -5.11941, 15.9239, 0.55", "17.0687, -4.87238, 17.7868, 0.55", "19.5316, -4.71402, 19.9706, 0.55", "21.0956, -4.76355, 21.5054, 0.55", "23.4821, -4.94273, 23.9669, 0.55", "25.3834, -5.04625, 26.0981, 0.55", "28.0778, -5.20203, 29.183, 0.55", "29.7853, -5.42404, 31.2048, 0.55", "31.8327, -5.76036, 33.4652, 0.55", "33.432, -5.87193, 35.0002, 0.55", "35.8163, -5.78139, 36.7609, 0.55", "38.9199, -5.58805, 38.541, 0.55", "40.9395, -5.47196, 39.4246, 0.55", "43.7486, -5.34415, 40.4111, 0.55", "47.0329, -5.29845, 41.2981, 0.55", "49.4268, -5.39943, 41.8091, 0.55", "51.2699, -5.5243, 42.128, 0.55", "52.5157, -5.55814, 42.2539, 0.55", "56.1137, -5.32715, 42.4648, 0.55", "58.9119, -5.06816, 42.4523, 0.55", "61.5596, -4.73743, 42.2503, 0.55", "63.2862, -4.37643, 42.0163, 0.55", "65.4229, -3.78362, 41.7837, 0.55", "67.828, -3.04616, 41.4606, 0.55", "71.543, -1.60989, 40.7743, 0.55", "74.2346, -0.394429, 40.2722, 0.55", "76.7796, 0.692976, 39.7519, 0.55", "80.5102, 2.0392, 39.0885, 0.55", "92.7181, 4.50658, 40.7245, 0.55", "104.494, 9.13192, 40.4091, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "10.0792, -6.96266, 13.9457, 0.55", "5.62503, -8.75419, 15.4152, 0.55", "-2.71686, -12.8094, 16.9268, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-95.2511, 86.504, -72.5763, 0.55", "-96.0672, 87.6683, -71.5957, 0.55", "-96.9535, 88.9327, -70.5308, 0.28", "-97.1138, 89.1613, -70.3383, 0.55", "-99.1118, 92.0118, -67.9376, 0.28", "-99.3603, 92.3662, -67.6391, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-95.2511, 86.504, -72.5763, 0.28", "-98.1981, 86.524, -74.1244, 0.28", "-98.7912, 86.5346, -74.4259, 0.55", "-99.9472, 86.5655, -74.8256, 0.28", "-100.402, 86.5777, -74.9827, 0.55", "-102.257, 86.6272, -75.6241, 0.28", "-102.648, 86.6377, -75.7594, 0.55", "-103.87, 86.708, -75.9452, 0.28", "-106.191, 86.7537, -76.2803, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.7378, -10.7245, -1.56079, 1.11", "12.6835, -10.8657, -3.02759, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "10.7378, -10.7245, -1.56079, 1.38", "11.4291, -13.8016, -2.44704, 1.38", "12.7487, -19.6748, -4.13865, 1.66", "13.2745, -22.015, -4.81268, 1.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-11.372, -15.2872, 6.72586, 0.83", "-13.4107, -19.4362, 6.25821, 0.83", "-14.2901, -22.2204, 6.21519, 0.83", "-15.0762, -24.9261, 6.32762, 0.83", "-15.8203, -27.1367, 6.55473, 0.83", "-16.6427, -29.5057, 6.933, 0.83", "-17.8197, -33.0072, 7.59143, 0.83", "-19.5485, -38.2675, 9.07635, 0.83", "-20.2797, -40.5235, 9.78248, 0.83", "-21.4218, -44.1038, 10.8037, 0.83", "-22.2775, -46.8146, 11.6481, 0.83", "-23.6526, -50.7748, 13.0749, 0.83", "-24.5328, -53.1276, 14.0224, 0.83", "-26.6436, -58.3183, 16.4458, 0.83", "-28.1501, -62.3364, 18.5652, 0.83", "-29.3846, -65.9478, 20.7445, 0.83", "-30.4432, -69.0805, 22.8193, 0.83", "-30.9967, -70.838, 24.0728, 0.83", "-31.7874, -73.6193, 26.1345, 0.83", "-32.9133, -78.3025, 29.7851, 0.83", "-33.391, -80.9653, 31.7935, 0.83", "-33.8195, -84.0103, 33.6774, 0.83", "-34.0047, -86.0616, 34.7334, 0.83", "-34.1732, -88.6227, 35.8447, 0.83", "-34.272, -92.6588, 37.206, 0.55", "-34.2673, -95.2778, 37.9767, 0.55", "-34.1964, -99.4373, 39.0229, 0.55", "-34.1142, -102.524, 39.756, 0.55", "-34.0611, -105.225, 40.3303, 0.55", "-34.0078, -109.238, 41.0463, 0.55", "-34.0972, -113.667, 41.7192, 0.55", "-34.2365, -117.275, 42.2259, 0.55", "-34.4014, -120.276, 42.7224, 0.55", "-34.5581, -122.563, 43.1351, 0.55", "-34.7944, -124.602, 43.5742, 0.55", "-35.6693, -129.842, 44.8151, 0.55", "-36.0517, -131.578, 45.2227, 0.55", "-37.3067, -136.443, 46.5339, 0.55", "-38.3732, -139.895, 47.4781, 0.55", "-40.1702, -144.806, 48.9654, 0.55", "-40.6826, -145.943, 49.3341, 0.55", "-42.3027, -149.052, 50.3595, 0.55", "-43.5299, -151.304, 51.0374, 0.55", "-44.7861, -153.537, 51.6275, 0.55", "-46.42, -156.45, 52.3815, 0.55", "-47.1651, -157.942, 52.746, 0.55", "-49.3352, -163.013, 53.9096, 0.55", "-50.2233, -165.445, 54.4436, 0.55", "-50.7088, -167.328, 54.7831, 0.55", "-51.0399, -169.248, 55.1391, 0.55", "-51.3086, -171.613, 55.4736, 0.28", "-51.6729, -174.755, 55.6552, 0.28", "-51.9275, -176.777, 55.6027, 0.28", "-52.6432, -181.698, 55.0282, 0.55", "-53.2247, -185.965, 54.3992, 0.28", "-53.7669, -189.732, 53.714, 0.55", "-54.7948, -195.956, 52.1841, 0.28", "-55.2724, -198.059, 51.4842, 0.28", "-56.3969, -201.792, 49.8002, 0.28", "-57.3623, -212.12, 50.6101, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-11.372, -15.2872, 6.72586, 0.55", "-12.381, -14.9458, 7.79723, 0.55", "-13.3177, -14.6288, 8.79175, 0.55", "-14.1915, -14.3331, 9.71959, 0.55", "-15.1773, -13.9995, 10.7663, 0.55", "-17.0918, -13.3516, 12.7991, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-19.5409, -13.6218, -7.18395, 1.11", "-20.7746, -16.595, -8.2412, 1.11", "-22.7524, -21.3615, -9.93618, 0.83", "-23.6263, -23.4675, -10.6851, 0.83", "-24.882, -26.4935, -11.7611, 0.83", "-25.9115, -28.9747, -12.6434, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-19.5409, -13.6218, -7.18395, 1.38", "-20.6557, -12.5574, -7.50858, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.0664, 1.98617, 0.015825, 0.55", "55.0235, 3.11988, 0.015825, 0.55", "69.9806, 4.25359, 0.015825, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "11.6657, 67.3708, -41.1584, 0.55", "11.2508, 69.3719, -43.3721, 0.55", "11.0425, 70.919, -44.9912, 0.55", "10.7346, 73.2587, -47.1616, 0.55", "10.3173, 76.92, -50.3066, 0.55", "9.93878, 80.0815, -52.6928, 0.55", "9.64928, 83.6764, -55.1905, 0.28", "9.58758, 85.393, -56.3385, 0.55", "9.53248, 88.6126, -58.409, 0.55", "9.42306, 91.9057, -60.2904, 0.55", "9.28029, 95.4713, -62.0665, 0.55", "9.11167, 100.571, -64.4093, 0.55", "8.92986, 103.985, -65.8535, 0.55", "8.64444, 106.473, -67.1012, 0.55", "8.29319, 108.217, -68.1762, 0.28", "8.02203, 109.216, -68.9532, 0.55", "7.52174, 110.756, -70.2981, 0.28", "6.87592, 112.289, -71.729, 0.55", "4.40393, 117.79, -77.2248, 0.83", "2.64285, 121.418, -81.2159, 0.28", "1.27943, 124.251, -84.6882, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "11.6657, 67.3708, -41.1584, 0.55", "12.672, 69.2335, -42.0552, 0.55", "14.2931, 71.9609, -43.8294, 0.55", "15.3755, 73.6253, -45.1295, 0.55", "16.5949, 75.3927, -46.6319, 0.55", "17.3238, 76.3697, -47.5046, 0.55", "18.065, 77.3306, -48.3763, 0.55", "20.071, 79.7345, -50.78, 0.55", "21.1114, 80.9743, -52.0228, 0.28", "21.5379, 81.4832, -52.4944, 0.55", "23.097, 83.2697, -54.0308, 0.28", "23.5843, 83.9075, -54.4949, 0.55", "25.0219, 86.076, -55.7034, 0.28", "25.7428, 87.345, -56.1562, 0.55", "26.2725, 88.5495, -56.4343, 0.28", "26.9094, 90.4457, -56.8187, 0.55", "27.5018, 92.8755, -57.2226, 0.55", "27.9029, 94.6559, -57.4987, 0.55", "28.2986, 96.7477, -57.7782, 0.55", "28.9215, 100.337, -58.2424, 0.55", "29.3689, 103.5, -58.6318, 0.55", "29.6231, 105.734, -58.9179, 0.55", "29.9202, 108.337, -59.3153, 0.55", "30.0358, 109.706, -59.5738, 0.28", "30.0718, 110.331, -59.7099, 0.55", "30.208, 112.051, -60.1532, 0.28", "30.2695, 113.17, -60.3884, 0.55", "30.3417, 114.28, -60.6259, 0.28", "30.4549, 116.181, -60.9297, 0.55", "30.7102, 117.909, -61.119, 0.28", "30.9316, 118.859, -61.1629, 0.28", "31.5947, 120.492, -61.0245, 0.55", "32.5907, 122.587, -60.5893, 0.55", "33.2196, 123.919, -60.1996, 0.55", "33.9518, 125.179, -59.621, 0.28", "34.4311, 125.99, -59.195, 0.55", "35.9734, 128.386, -57.8195, 0.55", "37.3586, 130.373, -56.7697, 0.55", "38.9439, 132.635, -55.5695, 0.55", "41.6642, 136.534, -53.5958, 0.28", "43.0955, 138.68, -52.5092, 0.28", "44.0066, 140.043, -51.8185, 0.28", "46.1057, 143.044, -50.3739, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "104.494, 9.13192, 40.4091, 0.55", "117.276, 11.6354, 44.4265, 0.55", "129.61, 14.4391, 49.5375, 0.55", "142.527, 17.5495, 52.6278, 0.55", "155.818, 17.7264, 55.4531, 0.55", "168.905, 16.2045, 58.7566, 0.55", "182.156, 13.3832, 59.9206, 0.55", "195.434, 11.0778, 61.669, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "104.494, 9.13192, 40.4091, 0.55", "114.812, 11.2523, 43.5898, 0.55", "124.104, 15.6878, 47.6859, 0.55", "132.3, 20.0353, 53.7226, 0.55", "139.986, 24.7229, 60.1805, 0.55", "148.338, 27.4262, 66.8244, 0.55", "155.802, 32.1592, 73.506, 0.55", "164.46, 37.4946, 78.0051, 0.55", "172.62, 43.0045, 83.1832, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.6835, -10.8657, -3.02759, 0.55", "17.4266, -11.7515, -3.00586, 0.55", "20.0902, -12.27, -3.41267, 0.55", "22.6402, -12.8773, -4.22643, 0.55", "24.0456, -13.2543, -4.83015, 0.55", "27.5081, -14.4117, -6.7752, 0.55", "29.8123, -15.047, -8.21148, 0.55", "32.1731, -15.4026, -9.92715, 0.55", "34.5036, -15.6466, -11.6929, 0.55", "36.2434, -15.75, -12.9811, 0.55", "38.9876, -15.9645, -14.9231, 0.55", "43.0555, -16.2488, -17.4893, 0.55", "46.1213, -16.4803, -18.9706, 0.55", "48.2331, -16.5866, -19.7395, 0.55", "50.3365, -16.6373, -20.3388, 0.55", "52.1596, -16.6871, -20.7428, 0.55", "54.631, -16.8397, -21.2244, 0.55", "57.9824, -17.5044, -21.9199, 0.55", "61.2216, -18.3452, -22.7875, 0.55", "62.2557, -18.5796, -23.0958, 0.55", "64.3469, -18.8416, -23.7451, 0.55", "66.7397, -18.9165, -24.6003, 0.55", "68.2537, -18.7958, -25.3192, 0.55", "71.67, -18.1491, -26.992, 0.55", "73.585, -17.6629, -27.9618, 0.55", "76.3537, -16.7954, -29.4077, 0.55", "80.456, -15.2805, -31.6094, 0.83", "85.0689, -13.482, -34.0919, 0.55", "87.2559, -12.6192, -35.3424, 0.55", "90.5103, -11.408, -37.2768, 0.55", "93.798, -10.3341, -39.2387, 0.55", "96.1306, -9.58623, -40.5546, 0.55", "97.2208, -9.29877, -41.1195, 0.55", "98.2865, -9.19397, -41.6358, 0.55", "99.6166, -9.19569, -42.3629, 0.55", "101.407, -9.22865, -43.3695, 0.55", "103.78, -9.21468, -44.7216, 0.55", "107.644, -9.06522, -46.8796, 0.55", "111.355, -8.77254, -48.9525, 0.55", "113.744, -8.50898, -50.3049, 0.55", "116.636, -8.14074, -51.9133, 0.55", "119.574, -7.66338, -53.5315, 0.55", "121.495, -7.23178, -54.5168, 0.83", "124.238, -6.29576, -55.8855, 0.55", "125.026, -6.01338, -56.2681, 0.55", "127.128, -5.25219, -57.3074, 0.55", "130.007, -4.26962, -58.8741, 0.55", "131.353, -3.78639, -59.7646, 0.83", "135.87, -2.02502, -63.0397, 0.55", "137.888, -1.28147, -64.5671, 0.55", "141.466, -0.0270918, -67.2384, 0.28", "142.308, 0.248028, -67.8404, 0.55", "147.567, 1.74632, -71.404, 0.55", "149.259, 2.14594, -72.4708, 0.55", "151.207, 2.4816, -73.5234, 0.28", "153.17, 2.687, -74.5514, 0.55", "155.33, 2.65092, -75.5299, 0.28", "159.985, 2.21342, -77.3944, 0.55", "162.028, 1.82227, -78.088, 0.28", "164.69, 1.23197, -79.034, 0.55", "167.043, 0.68604, -79.8903, 0.28", "168.211, 0.403502, -80.3057, 0.55", "170.313, -0.0764733, -80.9636, 0.28", "172.084, -0.523687, -81.3694, 0.55", "173.854, -0.999835, -81.8089, 0.55", "175.326, -1.45055, -82.1675, 0.55", "177.526, -2.25714, -82.6597, 0.55", "178.602, -2.69956, -82.8965, 0.55", "182.05, -4.22025, -83.5573, 0.28", "183.892, -4.99583, -83.8542, 0.28", "184.922, -5.38072, -83.988, 0.55", "187.598, -6.19407, -84.3457, 0.28", "188.772, -6.48419, -84.5021, 0.28", "190.605, -6.64662, -84.7911, 0.28", "193.181, -6.57938, -85.1186, 0.28", "194.528, -6.42123, -85.3117, 0.55", "196.347, -6.05805, -85.6487, 0.28", "197.373, -5.7361, -85.9084, 0.55", "201.48, -4.29985, -87.2733, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "12.6835, -10.8657, -3.02759, 0.83", "14.3063, -12.9421, -3.63745, 0.83", "17.1122, -16.3463, -4.60134, 0.83", "18.9792, -18.5816, -5.19855, 0.83", "20.4863, -20.597, -5.5792, 0.83", "22.437, -23.4169, -5.9541, 0.83", "23.9765, -25.7542, -6.23389, 0.83", "26.588, -29.5971, -6.89722, 0.83", "28.5493, -32.3201, -7.54103, 0.83", "31.0194, -35.727, -8.57198, 0.55", "31.7925, -36.7628, -8.92972, 0.55", "33.4971, -38.791, -9.72243, 0.83", "36.915, -42.8294, -11.3406, 0.83", "38.7962, -45.0164, -12.1108, 0.83", "40.1746, -46.5578, -12.4511, 0.55", "42.2197, -48.7144, -12.6209, 0.55", "44.8581, -51.4929, -12.2017, 0.55", "47.86, -54.6831, -10.4247, 0.55", "49.8063, -56.7605, -8.42079, 0.55", "51.7088, -58.5443, -6.03953, 0.55", "52.7291, -59.2904, -4.73846, 0.55", "54.8442, -60.5204, -2.00023, 0.55", "56.6409, -61.3502, 0.338881, 0.55", "58.6116, -62.0382, 2.6592, 0.55", "60.9527, -62.9038, 5.26257, 0.55", "62.7364, -63.6392, 7.26255, 0.55", "64.8056, -64.7644, 9.52461, 0.55", "66.1994, -65.8453, 11.0686, 0.28", "66.8208, -66.477, 11.8491, 0.55", "67.6262, -67.58, 13.129, 0.55", "68.9707, -70.3339, 15.7027, 0.55", "69.8004, -72.4285, 17.3668, 0.55", "70.8842, -75.3203, 19.0931, 0.55", "71.2509, -76.3619, 19.6111, 0.55", "71.4601, -76.9379, 19.852, 0.55", "72.7853, -80.3178, 20.9868, 0.55", "73.6968, -82.5445, 21.4322, 0.55", "75.5231, -86.6641, 22.0296, 0.55", "76.0512, -87.7128, 22.1394, 0.83", "77.4135, -90.1659, 22.3349, 0.55", "79.0391, -92.8748, 22.5233, 0.55", "81.2265, -96.5504, 22.7607, 0.55", "82.3599, -98.4585, 22.8559, 0.55", "83.0402, -99.5128, 22.9221, 0.55", "85.2757, -102.815, 23.1655, 0.55", "87.4479, -106.073, 23.5558, 0.55", "89.6091, -109.396, 24.0898, 0.55", "90.3204, -110.53, 24.3038, 0.55", "91.6066, -112.766, 24.713, 0.55", "92.11, -113.771, 24.8993, 0.55", "93.6246, -117.216, 25.4975, 0.55", "93.7784, -117.587, 25.5566, 0.83", "94.7543, -120.017, 25.8629, 0.55", "95.1727, -121.25, 25.9414, 0.83", "95.903, -123.844, 25.9068, 0.55", "96.9851, -127.482, 25.2271, 0.55", "97.2615, -128.32, 24.914, 0.83", "98.3703, -131.433, 23.4055, 0.55", "99.2764, -133.933, 21.9737, 0.55", "99.9096, -135.658, 20.8045, 0.83", "101.687, -140.419, 16.7313, 0.55", "102.366, -142.197, 14.826, 0.55", "102.836, -143.297, 13.4425, 0.83", "108.322, -153.046, 15.4138, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.2745, -22.015, -4.81268, 1.11", "12.9535, -24.5181, -4.76417, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.2745, -22.015, -4.81268, 0.55", "13.913, -22.5029, -6.26992, 0.55", "15.9044, -23.7541, -10.7399, 0.55", "16.7058, -24.3109, -12.4477, 0.55", "18.1277, -25.1701, -15.2417, 0.55", "19.9252, -26.0328, -18.8321, 0.55", "22.2774, -26.7654, -23.7245, 0.83", "24.6275, -26.9793, -28.4301, 0.55", "25.9694, -26.7463, -31.0414, 0.55", "27.1714, -26.2023, -33.4992, 0.55", "28.8143, -25.0316, -37.0324, 0.55", "31.2614, -22.6477, -42.2699, 0.55", "32.3775, -21.3992, -44.5455, 0.55", "34.2152, -19.1892, -47.9442, 0.28", "34.9835, -18.3152, -49.2856, 0.55", "37.391, -16.0927, -53.1269, 0.28", "38.2358, -15.4845, -54.2273, 0.55", "39.4125, -14.6951, -55.5926, 0.28", "40.4928, -14.0618, -56.9121, 0.55", "43.0008, -12.7351, -59.627, 0.28", "43.4571, -12.4757, -60.1434, 0.28", "44.3572, -11.9276, -61.1484, 0.28", "45.2929, -11.3544, -62.3023, 0.55", "47.5758, -9.90677, -65.4094, 0.28", "48.2711, -9.43984, -66.3979, 0.55", "49.8766, -8.27441, -68.6337, 0.55", "51.0028, -7.44311, -70.2631, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.0918, -13.3516, 12.7991, 0.55", "-19.4114, -12.5127, 16.0002, 0.55", "-20.2769, -12.1998, 17.1944, 0.55", "-21.4372, -11.7802, 18.7956, 0.55", "-22.8754, -11.2601, 20.7803, 0.55", "-24.0881, -10.8216, 22.4538, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.0918, -13.3516, 12.7991, 0.55", "-17.9167, -16.1977, 14.3875, 0.55", "-18.5141, -18.5683, 15.5603, 0.55", "-19.1547, -20.929, 16.7389, 0.55", "-21.4156, -28.8938, 21.0735, 0.55", "-22.4706, -33.0749, 23.518, 0.55", "-23.1751, -36.2484, 25.442, 0.55", "-23.6958, -39.0252, 27.2971, 0.55", "-24.0339, -41.547, 29.1443, 0.55", "-24.2133, -45.5755, 32.2238, 0.55", "-24.119, -49.4241, 35.4137, 0.55", "-24.0882, -50.3852, 36.3261, 0.55", "-23.9314, -52.599, 38.556, 0.55", "-23.7952, -53.7816, 39.7019, 0.55", "-23.5056, -55.9914, 41.5276, 0.55", "-23.232, -58.7978, 43.4845, 0.55", "-23.2214, -61.5927, 45.1011, 0.55", "-23.2688, -63.9597, 46.3748, 0.28", "-23.3214, -65.3178, 47.0231, 0.28", "-23.3914, -67.4313, 47.9359, 0.55", "-23.4745, -70.0897, 49.0091, 0.55", "-23.5499, -74.6134, 50.6083, 0.55", "-23.6861, -78.7306, 52.0014, 0.28", "-23.7936, -81.1702, 52.9072, 0.28", "-23.9568, -84.1083, 54.0209, 0.28", "-25.7958, -94.6285, 59.794, 0.28", "-26.4906, -105.161, 65.7781, 0.28", "-26.1857, -115.375, 72.2621, 0.28", "-25.9347, -126.579, 77.0587, 0.28", "-24.5626, -136.657, 83.5892, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-25.9115, -28.9747, -12.6434, 0.83", "-26.7032, -31.7534, -12.875, 0.83", "-27.2649, -33.7747, -12.8722, 0.83", "-27.826, -35.9922, -12.8433, 0.83", "-28.7003, -40.3004, -12.5126, 0.83", "-29.0459, -42.2623, -12.3691, 0.83", "-29.8589, -47.6647, -11.755, 0.83", "-30.047, -48.9942, -11.5126, 0.55", "-30.2246, -50.7885, -11.0983, 0.83", "-30.6098, -55.8842, -9.78421, 0.55", "-30.7913, -58.6551, -8.86381, 0.55", "-31.102, -63.5645, -7.16772, 0.55", "-31.2617, -65.5834, -6.51243, 0.55", "-31.6757, -69.5602, -5.17131, 0.55", "-31.9567, -71.6363, -4.47682, 0.55", "-32.692, -76.3151, -3.05769, 0.55", "-33.1272, -79.3438, -2.19651, 0.55", "-33.7285, -83.9076, -1.25307, 0.55", "-33.9741, -85.9724, -0.975473, 0.28", "-34.2231, -87.9439, -0.825694, 0.55", "-34.3863, -89.5218, -0.804279, 0.55", "-34.5917, -92.028, -0.993479, 0.55", "-34.6296, -93.9826, -1.23922, 0.55", "-34.5323, -96.9047, -1.59511, 0.55", "-34.449, -99.9599, -1.91677, 0.55", "-34.4132, -101.946, -2.1343, 0.55", "-34.4293, -103.976, -2.38602, 0.55", "-34.5345, -108.34, -3.09487, 0.55", "-34.678, -112.572, -3.83124, 0.28", "-34.8036, -114.787, -4.26064, 0.55", "-35.1424, -117.906, -4.91343, 0.55", "-35.4875, -120.63, -5.39325, 0.55", "-36.0338, -123.996, -5.91248, 0.55", "-36.4132, -125.825, -6.14629, 0.55", "-37.0664, -129.043, -6.45667, 0.55", "-37.4622, -131.573, -6.5791, 0.55", "-37.8519, -134.667, -6.51075, 0.55", "-38.1849, -138.263, -6.26623, 0.55", "-38.3542, -140.473, -6.09559, 0.55", "-38.5364, -144.536, -5.88058, 0.55", "-38.6101, -147.217, -5.78613, 0.55", "-38.6948, -150.321, -5.76706, 0.28", "-38.7291, -150.751, -5.79256, 0.55", "-38.9732, -153.453, -6.04417, 0.28", "-39.048, -154.141, -6.20342, 0.55", "-39.2282, -154.944, -6.56389, 0.28", "-39.4029, -155.48, -6.90032, 0.55", "-40.0523, -157.565, -8.5494, 0.28", "-40.4069, -158.867, -9.54532, 0.55", "-40.6619, -160.145, -10.5006, 0.28", "-40.7365, -160.688, -10.8677, 0.55", "-40.7789, -161.959, -11.6872, 0.28", "-40.7509, -162.954, -12.2916, 0.55", "-40.7318, -164.802, -13.2493, 0.28", "-40.7129, -165.717, -13.6245, 0.55", "-40.5536, -167.987, -14.3582, 0.55", "-40.1688, -171.066, -15.1211, 0.28", "-39.7395, -174.158, -15.7409, 0.28", "-39.3946, -176.483, -16.1629, 0.28", "-38.6766, -180.192, -16.7569, 0.28", "-37.6119, -184.769, -17.4501, 0.28", "-36.418, -188.863, -18.0995, 0.28", "-36.159, -189.677, -18.2096, 0.55", "-35.8121, -190.6, -18.3487, 0.55", "-34.3388, -193.933, -19.0886, 0.28", "-33.6908, -195.327, -19.5706, 0.55", "-31.8065, -198.624, -20.7323, 0.28", "-30.9027, -209.795, -21.1169, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-25.9115, -28.9747, -12.6434, 0.55", "-26.8512, -27.8809, -13.7888, 0.55", "-27.1687, -27.5632, -14.1042, 0.83", "-27.7392, -27.1549, -14.94, 0.55", "-28.1334, -26.9589, -15.552, 0.83", "-30.1342, -26.4192, -18.629, 0.83", "-32.3084, -26.0788, -21.6747, 0.83", "-33.9201, -26.1699, -23.7878, 1.11", "-38.4548, -26.9896, -29.0862, 0.83", "-39.5647, -27.3186, -30.3861, 1.11", "-41.2117, -28.0597, -32.3216, 0.55", "-42.2928, -28.7434, -33.5544, 0.55", "-43.8401, -29.7785, -35.3163, 0.55", "-44.8019, -30.4437, -36.5485, 0.55", "-47.0716, -32.3438, -39.9431, 0.55", "-47.809, -32.9929, -41.3281, 0.55", "-48.0966, -33.2631, -41.9894, 0.55", "-49.5059, -34.7807, -45.8348, 0.55", "-50.2819, -35.6693, -48.1588, 0.83", "-51.5353, -37.2904, -52.2835, 0.55", "-52.1702, -38.1086, -54.2372, 0.55", "-53.128, -39.2283, -56.991, 0.83", "-53.4881, -39.668, -58.1309, 0.55", "-53.7003, -39.9572, -58.8102, 0.83", "-54.3109, -40.6945, -60.4143, 0.55", "-55.1416, -41.6834, -62.429, 0.83", "-56.001, -42.9213, -64.6555, 0.83", "-57.5891, -45.1765, -68.498, 0.83", "-58.2481, -45.97, -69.9069, 0.55", "-58.7356, -46.5138, -70.8851, 0.83", "-59.8819, -47.7632, -72.988, 0.55", "-60.4136, -48.4041, -73.9167, 0.83", "-61.9432, -50.415, -76.3691, 0.55", "-62.9135, -51.6328, -77.6441, 0.55", "-63.5889, -52.3919, -78.5236, 0.28", "-64.3788, -53.2158, -79.512, 0.55", "-65.0712, -53.813, -80.3154, 0.28", "-66.3612, -54.6021, -81.7998, 0.55", "-67.2507, -55.0175, -82.8151, 0.28", "-68.6423, -55.4649, -84.3804, 0.55", "-70.2868, -55.8774, -86.102, 0.55", "-72.1187, -56.2349, -87.8697, 0.55", "-74.8096, -56.7363, -90.3038, 0.28", "-75.7695, -56.9249, -91.0688, 0.28", "-78.539, -57.5109, -93.0782, 0.55", "-80.173, -57.8888, -94.0542, 0.55", "-81.6385, -58.2873, -94.8066, 0.55", "-82.8745, -58.7672, -95.3569, 0.28", "-84.5359, -59.571, -95.9809, 0.55", "-85.9658, -60.3211, -96.4801, 0.55", "-87.3951, -61.1929, -97.0223, 0.55", "-89.7436, -62.7011, -98.1065, 0.55", "-91.2973, -63.6913, -99.1132, 0.55", "-91.9301, -64.0882, -99.6384, 0.28", "-92.7232, -64.6709, -100.474, 0.55", "-93.9635, -65.735, -101.992, 0.28", "-94.1296, -65.9007, -102.243, 0.83", "-96.1703, -68.2071, -105.539, 0.55", "-96.7966, -69.0145, -106.656, 0.55", "-97.3672, -69.831, -107.755, 0.28", "-98.4146, -71.5142, -109.755, 0.55", "-99.1343, -72.6795, -111.021, 0.83", "-100.103, -74.2121, -112.523, 0.28", "-100.807, -75.2642, -113.387, 0.83", "-102.84, -77.8388, -115.382, 0.55", "-104.186, -79.2988, -116.467, 0.55", "-104.793, -79.8811, -116.873, 0.83", "-106.712, -81.5253, -117.761, 0.55", "-108.401, -82.8637, -118.43, 0.55", "-110.778, -84.617, -119.134, 0.28", "-111.793, -85.2973, -119.293, 0.55", "-113.054, -86.091, -119.462, 0.28", "-116.495, -88.3719, -119.709, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-20.6557, -12.5574, -7.50858, 0.83", "-24.2063, -9.9583, -9.37486, 0.83", "-27.9478, -7.52844, -11.0692, 0.83", "-29.4258, -6.57753, -11.6214, 0.83", "-32.1171, -4.97282, -12.2824, 0.83", "-33.9518, -3.95607, -12.5953, 0.83", "-36.4604, -2.59562, -12.9199, 0.83", "-38.8841, -1.26529, -13.0998, 0.83", "-40.7534, -0.253929, -13.0244, 0.83", "-43.8654, 1.35883, -12.8084, 0.83", "-45.9566, 2.38905, -12.6498, 0.83", "-47.7103, 3.18821, -12.5449, 0.83", "-49.2063, 3.93497, -12.6037, 0.83", "-49.7324, 4.18355, -12.75, 0.83", "-50.8443, 4.77103, -13.2723, 0.83", "-51.7826, 5.38114, -13.8473, 0.83", "-53.994, 6.97688, -15.2716, 0.83", "-57.0684, 9.35125, -17.2263, 0.83", "-59.8488, 11.7433, -18.9101, 0.55", "-61.3369, 13.1754, -19.7645, 0.83", "-62.5, 14.2953, -20.3321, 0.55", "-64.1621, 15.8884, -20.9985, 0.55", "-65.4009, 16.8396, -21.4276, 0.55", "-67.6969, 17.9363, -21.9173, 0.55", "-68.8592, 18.2002, -22.1204, 0.55", "-72.4843, 18.3805, -22.6973, 0.55", "-75.5293, 18.1813, -23.1434, 0.55", "-80.7898, 17.5025, -23.7835, 0.55", "-84.7331, 16.8996, -24.1714, 0.55", "-87.2586, 16.4708, -24.3273, 0.55", "-89.4291, 16.1368, -24.3567, 0.55", "-91.8506, 15.8311, -24.1787, 0.55", "-94.3201, 15.604, -23.7046, 0.55", "-96.0098, 15.7881, -23.0958, 0.55", "-97.8785, 16.3143, -22.062, 0.83", "-99.1731, 16.8507, -21.1722, 0.55", "-100.754, 17.6778, -19.9832, 0.83", "-101.567, 18.1796, -19.357, 0.55", "-103.825, 19.7427, -17.751, 0.83", "-107.06, 22.0854, -15.973, 0.28", "-107.768, 22.6394, -15.6636, 0.55", "-109.406, 23.9761, -15.2826, 0.55", "-111.126, 25.3772, -15.0744, 0.55", "-112.489, 26.3841, -14.9992, 0.55", "-115.001, 28.1696, -15.0534, 0.55", "-116.217, 29.0541, -15.1957, 0.55", "-119.421, 31.2428, -15.5699, 0.55", "-122.643, 33.2639, -16.0824, 0.55", "-124.529, 34.3437, -16.431, 0.55", "-125.91, 35.071, -16.805, 0.83", "-127.91, 36.1601, -17.551, 0.55", "-129.444, 37.0391, -18.3508, 0.55", "-131.106, 38.0873, -19.5276, 0.55", "-133.116, 39.6867, -21.7148, 0.55", "-134.747, 41.2744, -24.0833, 0.28", "-135.361, 41.9694, -25.1536, 0.28", "-136.264, 43.1936, -27.0066, 0.28", "-137.584, 45.4493, -30.3448, 0.28", "-138.891, 48.1207, -34.1595, 0.28", "-139.493, 49.5613, -36.246, 0.55", "-139.745, 50.1917, -37.1026, 0.28", "-140.015, 50.8153, -37.9834, 0.55", "-140.791, 52.5885, -40.3845, 0.28", "-140.983, 53.1603, -41.1806, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-20.6557, -12.5574, -7.50858, 0.83", "-20.8836, -11.693, -9.86736, 0.83", "-21.1463, -10.6965, -12.587, 0.83", "-21.3722, -9.83975, -14.9252, 0.83", "-21.7913, -8.24994, -19.2639, 0.83", "-22.0566, -7.24365, -22.0101, 0.83", "-22.4304, -5.8258, -25.8795, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "12.9535, -24.5181, -4.76417, 0.83", "14.4312, -26.5734, -4.92356, 0.83", "15.5142, -28.0149, -5.09322, 0.83", "16.4935, -29.4569, -5.36587, 0.83", "16.9246, -30.1466, -5.5238, 0.83", "17.7852, -31.6393, -5.86503, 0.83", "18.1312, -32.3327, -6.00992, 0.83", "18.8173, -34.1466, -6.41931, 0.83", "19.474, -36.016, -6.62867, 0.83", "20.175, -37.9825, -6.68628, 0.83", "20.8365, -39.836, -6.57778, 0.83", "21.7412, -42.3826, -6.2586, 0.83", "22.6205, -44.8239, -5.85043, 0.83", "24.3426, -49.4791, -4.87495, 0.83", "25.1828, -51.4681, -4.38963, 0.83", "25.7058, -52.6381, -4.09292, 0.55", "26.6634, -54.6357, -3.69415, 0.55", "27.3187, -55.8733, -3.53116, 0.83", "28.06, -57.2027, -3.56255, 0.55", "29.1169, -59.2112, -4.09227, 0.55", "29.81, -60.4699, -4.63044, 0.55", "31.0365, -62.5825, -5.8913, 0.55", "31.6754, -63.5902, -6.63681, 0.55", "32.9389, -65.3905, -8.13447, 0.55", "34.0019, -66.75, -9.32126, 0.55", "35.2915, -68.2052, -10.6192, 0.55", "36.7655, -69.6485, -11.842, 0.28", "37.9288, -70.6567, -12.6101, 0.55", "39.1585, -71.6439, -13.3042, 0.55", "40.7669, -72.8489, -13.9826, 0.55", "42.2559, -73.9586, -14.4555, 0.55", "43.9138, -75.1975, -14.8269, 0.55", "45.3253, -76.2135, -15.0882, 0.55", "46.2763, -76.9198, -15.293, 0.55", "47.9012, -78.0406, -15.5657, 0.55", "49.0117, -78.718, -15.6509, 0.55", "50.567, -79.555, -15.6258, 0.55", "51.899, -80.1537, -15.4989, 0.55", "53.4001, -80.7165, -15.2833, 0.28", "56.5896, -81.7315, -14.7424, 0.55", "58.8656, -82.3827, -14.3039, 0.55", "60.9436, -82.9119, -13.8796, 0.55", "62.0285, -83.186, -13.6392, 0.55", "64.132, -83.7101, -13.1706, 0.55", "65.7353, -84.0681, -12.8606, 0.28", "66.2782, -84.19, -12.8274, 0.55", "67.5997, -84.4152, -12.8499, 0.28", "68.008, -84.4758, -12.8748, 0.55", "69.4081, -84.66, -13.0279, 0.55", "70.4241, -84.767, -13.2055, 0.55", "71.7076, -84.8887, -13.4954, 0.28", "72.4525, -84.9229, -13.6639, 0.55", "73.7083, -84.9816, -13.9588, 0.28", "74.6195, -85.0203, -14.1646, 0.55", "76.2719, -85.0611, -14.5274, 0.28", "77.8333, -85.1256, -14.791, 0.55", "80.1442, -85.201, -15.0967, 0.28", "80.9687, -85.2127, -15.2023, 0.28", "81.9557, -85.1799, -15.3224, 0.28", "82.6169, -85.1689, -15.3922, 0.28", "84.321, -85.1401, -15.5064, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "12.9535, -24.5181, -4.76417, 0.83", "12.6284, -26.8325, -5.09682, 0.83", "12.3735, -28.6588, -5.36956, 0.83", "12.1133, -31.0393, -5.72112, 0.83", "11.8836, -33.2516, -6.04971, 0.83", "11.4187, -37.6401, -6.74236, 0.83", "11.1266, -40.4154, -7.18112, 0.83", "10.9632, -42.2403, -7.47669, 0.83", "10.7586, -45.0594, -7.93309, 0.83", "10.4868, -49.0354, -8.57218, 0.83", "10.3214, -52.4871, -9.11441, 0.83", "10.2111, -54.5484, -9.4204, 0.83", "10.0479, -57.383, -9.82288, 0.83", "9.88478, -59.6579, -10.1345, 0.83", "9.69578, -62.1455, -10.4478, 0.83", "9.58588, -64.4979, -10.7087, 0.83", "9.51998, -66.9195, -10.9388, 0.83", "9.48288, -69.9639, -11.2139, 0.83", "9.40099, -72.5964, -11.4287, 0.83", "9.29261, -75.7091, -11.5666, 0.83", "9.16555, -79.8246, -11.5936, 0.83", "9.06693, -82.3983, -11.5418, 0.83", "8.97004, -84.4554, -11.4496, 0.83", "8.68413, -89.9519, -11.023, 0.83", "8.43588, -94.0909, -10.5729, 0.83", "8.30501, -95.7056, -10.3492, 0.83", "8.02934, -98.7932, -9.85879, 0.83", "7.8481, -100.918, -9.51643, 0.83", "7.66679, -103.35, -9.105, 0.83", "7.53075, -105.631, -8.74747, 0.83", "7.26408, -108.556, -8.41569, 0.83", "6.88124, -111.86, -8.12467, 0.83", "6.72662, -113.218, -8.02675, 0.83", "6.42435, -115.913, -7.93828, 0.55", "6.20084, -118.311, -7.95199, 0.55", "6.12347, -119.946, -8.00651, 0.55", "6.07776, -121.992, -8.12726, 0.55", "6.05982, -124.408, -8.26531, 0.55", "6.12397, -126.969, -8.40961, 0.55", "6.28769, -129.392, -8.55722, 0.55", "6.55506, -132.459, -8.57492, 0.55", "6.77629, -135.104, -8.50871, 0.55", "6.96134, -137.496, -8.3942, 0.55", "7.0544, -139.424, -8.19649, 0.55", "7.13961, -141.576, -7.86193, 0.55", "7.20657, -145.489, -7.129, 0.55", "7.1676, -147.312, -6.75939, 0.55", "7.0412, -149.993, -6.21018, 0.55", "6.8899, -153.447, -5.52086, 0.55", "6.79073, -155.799, -5.03809, 0.55", "6.593, -159.42, -4.32402, 0.55", "6.33892, -163.795, -3.57094, 0.55", "6.23308, -165.378, -3.29145, 0.55", "6.08333, -167.904, -2.8667, 0.55", "6.00897, -170.599, -2.49208, 0.55", "6.00501, -173.355, -2.10825, 0.55", "6.12367, -176.291, -1.69632, 0.55", "6.21491, -177.965, -1.50409, 0.55", "6.33153, -180.663, -1.26441, 0.55", "6.41249, -183.252, -1.08561, 0.55", "6.52592, -186.079, -0.933425, 0.55", "6.61756, -187.456, -0.86699, 0.55", "6.8267, -191.008, -0.719057, 0.55", "6.99278, -195.511, -0.58605, 0.55", "7.02473, -198.424, -0.518454, 0.55", "7.04379, -199.845, -0.483675, 0.55", "7.06319, -201.388, -0.440579, 0.55", "7.05774, -202.943, -0.405018, 0.55", "7.03987, -204.503, -0.355658, 0.55", "6.94688, -207.616, -0.298844, 0.55", "6.78616, -212.25, -0.239384, 0.55", "6.75582, -213.331, -0.224092, 0.55", "6.6681, -216.189, -0.170557, 0.55", "6.64552, -217.703, -0.140975, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "51.0028, -7.44311, -70.2631, 0.55", "52.072, -8.73785, -73.6488, 0.55", "53.1342, -9.86831, -76.5139, 0.55", "53.7477, -10.4827, -78.2074, 0.55", "55.7239, -12.3376, -83.435, 0.55", "56.4646, -13.0521, -85.4514, 0.55", "56.8884, -13.4305, -86.5306, 0.28", "58.8264, -14.9171, -90.97, 0.83", "60.6965, -15.9046, -94.8593, 0.28", "61.093, -16.0282, -95.5949, 0.55", "62.8977, -16.3442, -98.5426, 0.28", "63.9997, -16.4148, -100.234, 0.28", "65.1364, -16.4113, -101.848, 0.83", "68.5474, -16.3054, -106.265, 0.28", "69.5254, -16.2651, -107.417, 0.28", "72.4901, -16.1079, -110.916, 0.28", "72.7569, -16.0899, -111.22, 0.55", "74.9106, -16.048, -113.852, 0.28", "76.5231, -16.1615, -115.803, 0.28", "77.9086, -16.4527, -117.397, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "51.0028, -7.44311, -70.2631, 0.28", "51.6477, -6.80855, -70.9587, 0.28", "52.1779, -6.22825, -71.8124, 0.55", "52.949, -5.47898, -73.0349, 0.28", "53.1689, -5.27967, -73.3761, 0.55", "55.126, -3.43239, -76.3094, 0.55", "57.4783, -1.13103, -79.7999, 0.28", "59.801, 1.13394, -83.3446, 0.55", "60.7079, 1.99964, -84.752, 0.28", "62.0743, 3.26257, -86.8512, 0.28", "64.2433, 5.13653, -90.2634, 0.28", "64.8281, 5.62664, -91.1758, 0.28", "65.5313, 6.17122, -92.2257, 0.55", "67.0175, 7.31476, -94.4404, 0.28", "68.1169, 8.20299, -96.1109, 0.55", "71.9092, 11.2049, -101.805, 0.28", "73.2018, 12.2112, -103.772, 0.28", "74.1768, 13.0203, -105.213, 0.55", "77.046, 15.6144, -109.395, 0.28", "78.2521, 16.7604, -111.037, 0.28", "78.9375, 17.4266, -111.896, 0.55", "81.0267, 19.4969, -113.928, 0.28", "82.3214, 20.7134, -115.038, 0.28", "83.514, 21.7643, -115.937, 0.55", "84.603, 22.6287, -116.462, 0.28", "84.8483, 22.8101, -116.572, 0.55", "87.4565, 24.6444, -117.445, 0.28", "88.5744, 25.3636, -117.64, 0.55", "90.895, 26.7249, -117.935, 0.28", "92.4975, 27.6261, -118.038, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-24.0881, -10.8216, 22.4538, 0.28", "-28.4953, -9.50276, 27.1173, 0.28", "-29.2529, -9.27606, 27.9189, 0.28", "-29.875, -9.0899, 28.5772, 0.55", "-31.1662, -8.70353, 29.9435, 0.28", "-32.2448, -8.3808, 31.0848, 0.28", "-33.154, -8.10871, 32.0469, 0.55", "-42.2729, -6.70179, 37.5477, 0.55", "-51.0514, -3.32726, 42.831, 0.55", "-59.8238, 0.846668, 47.5892, 0.55", "-68.9288, 3.1773, 52.8284, 0.55", "-77.5483, 7.09641, 58.0334, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-24.0881, -10.8216, 22.4538, 0.28", "-24.5593, -10.514, 23.4425, 0.28", "-25.2256, -10.0232, 24.6488, 0.28", "-25.977, -9.33687, 25.927, 0.83", "-27.9518, -7.53291, 29.2867, 0.28", "-28.5403, -6.99534, 30.2879, 0.28", "-29.5269, -6.09416, 31.9663, 0.28", "-30.2248, -5.54615, 33.0321, 0.28", "-30.978, -5.01821, 33.9161, 0.55", "-35.8327, -1.297, 40.6878, 0.55", "-39.6957, 3.09497, 47.7342, 0.55", "-43.0931, 6.31916, 55.552, 0.55", "-47.0867, 7.92464, 63.5337, 0.55", "-52.2236, 8.27375, 70.9784, 0.55", "-57.41, 8.59596, 78.3898, 0.55", "-62.9493, 9.45675, 85.5011, 0.55", "-66.9314, 9.43337, 93.6289, 0.55", "-69.686, 8.9333, 102.236, 0.55", "-72.3707, 9.45168, 110.868, 0.55", "-73.6993, 10.1961, 119.798, 0.55", "-74.3617, 12.4816, 128.572, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-22.4304, -5.8258, -25.8795, 0.55", "-23.8657, -4.5054, -31.4346, 0.55", "-24.4698, -4.09293, -33.4805, 0.55", "-25.1842, -3.93268, -35.41, 0.55", "-26.0127, -3.81063, -37.594, 0.55", "-27.5186, -3.95939, -41.5266, 0.55", "-29.9742, -4.4635, -47.3007, 0.55", "-30.3817, -4.63596, -48.125, 0.55", "-32.2848, -5.60044, -51.816, 0.55", "-33.9621, -6.57318, -54.9841, 0.55", "-36.601, -8.24146, -59.7995, 0.55", "-38.8134, -9.57087, -63.5624, 0.55", "-40.7694, -10.6252, -66.632, 0.55", "-42.2144, -11.3052, -68.9454, 0.55", "-46.2348, -12.8926, -75.308, 0.55", "-47.0528, -13.1865, -76.512, 0.55", "-48.3701, -13.4826, -78.4131, 0.55", "-50.7542, -13.9052, -81.85, 0.55", "-52.2772, -14.2175, -84.2238, 0.28", "-52.9759, -14.4292, -85.3885, 0.55", "-53.4288, -14.5844, -86.1314, 0.55", "-54.6049, -15.0611, -88.1822, 0.55", "-56.5109, -16.0255, -91.6701, 0.55", "-59.3967, -17.8769, -97.4938, 0.83", "-61.0331, -18.8707, -100.763, 0.55", "-62.0909, -19.4708, -103.012, 0.55", "-63.4487, -20.2127, -105.949, 0.28", "-65.4826, -21.1814, -110.026, 0.55", "-68.0444, -22.0361, -114.627, 0.83", "-69.8244, -22.2672, -117.196, 0.55", "-73.1107, -22.217, -121.437, 0.28", "-73.9296, -22.0452, -122.342, 0.55", "-78.6862, -19.8978, -126.238, 0.28", "-79.9965, -18.9112, -127.061, 0.28", "-81.3193, -17.5638, -127.813, 0.83", "-83.2352, -14.954, -129.294, 0.28", "-84.2355, -13.1741, -130.266, 0.55", "-85.8182, -9.33008, -132.745, 0.28", "-86.4821, -7.17205, -134.309, 0.28", "-86.8489, -5.68099, -135.335, 0.28", "-87.3662, -3.08659, -137.357, 0.55", "-87.6782, -1.16336, -138.884, 0.55", "-88.0056, 1.15054, -141.157, 0.28", "-88.2847, 2.92615, -143.211, 0.28", "-88.5283, 4.14583, -144.721, 0.83", "-89.6785, 8.64638, -150.333, 0.28", "-90.1145, 10.1088, -152.113, 0.55", "-91.2106, 13.7204, -156.419, 0.28", "-91.7801, 15.594, -158.522, 0.28", "-92.3487, 18.075, -160.91, 0.28", "-92.5028, 19.0592, -161.641, 0.28", "-92.6326, 20.4752, -162.239, 0.55", "-92.6694, 21.9966, -162.713, 0.28", "-92.6574, 22.6806, -162.833, 0.55", "-92.4067, 26.5285, -163.535, 0.28", "-92.3777, 27.2153, -163.673, 0.55", "-92.4247, 29.476, -164.305, 0.28", "-92.4481, 29.7639, -164.402, 0.55", "-93.0058, 33.5942, -165.963, 0.28", "-93.5858, 36.3491, -167.255, 0.28", "-94.108, 38.1043, -168.202, 0.55", "-95.1265, 41.0687, -169.963, 0.28", "-95.3263, 41.562, -170.288, 0.55", "-96.3608, 43.8748, -171.892, 0.28", "-96.8527, 44.8281, -172.602, 0.28", "-97.2991, 45.6215, -173.224, 0.55", "-97.9465, 46.8661, -174.141, 0.28", "-98.3636, 47.6219, -174.587, 0.28", "-98.6561, 48.1085, -174.875, 0.55", "-99.1476, 48.8294, -175.285, 0.28", "-99.5273, 49.3914, -175.594, 0.55", "-100.344, 50.5579, -176.159, 0.28", "-101.23, 51.772, -176.521, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-22.4304, -5.8258, -25.8795, 0.83", "-21.9278, -6.98885, -28.3544, 0.83", "-21.6918, -7.94563, -30.4073, 0.83", "-20.6514, -10.6569, -36.2184, 0.83", "-20.3997, -11.3272, -37.4337, 0.83", "-20.2136, -11.9177, -38.3884, 0.83", "-19.648, -13.995, -41.572, 0.83", "-19.0885, -16.3002, -44.7868, 0.83", "-18.1664, -20.5851, -49.8645, 0.83", "-17.8168, -22.4502, -51.6105, 0.83", "-17.5811, -23.7333, -52.6979, 0.83", "-17.1199, -26.271, -54.731, 0.83", "-16.5039, -28.8557, -56.8103, 0.83", "-16.0815, -30.8976, -58.37, 0.83", "-15.4956, -34.5566, -61.0751, 0.55", "-15.3606, -35.2309, -61.6667, 0.55", "-14.8457, -37.3953, -63.6242, 0.55", "-14.199, -39.9136, -65.9515, 0.55", "-14.0295, -40.4818, -66.5549, 0.55", "-13.6017, -41.6538, -67.9126, 0.83", "-12.0249, -45.4682, -72.1818, 0.55", "-11.4946, -46.5927, -73.4233, 0.83", "-10.5381, -48.4252, -75.4934, 0.55", "-9.18294, -50.8771, -78.3426, 0.83", "-7.6739, -53.1749, -81.3183, 0.55", "-6.72378, -54.439, -83.0322, 0.55", "-5.45347, -55.9591, -85.196, 0.83", "-2.39819, -59.1876, -90.6095, 0.55", "-1.77696, -59.7585, -91.6954, 0.83", "0.0570369, -61.1756, -94.8071, 0.28", "0.691329, -61.5768, -95.9808, 0.28", "1.4878, -61.9218, -97.6467, 0.55", "4.38795, -62.5375, -104.756, 0.28", "4.60935, -62.533, -105.348, 0.28", "5.26223, -62.4419, -107.383, 0.83", "6.26621, -62.0138, -111.289, 0.55", "6.79156, -61.558, -113.93, 0.55", "6.96639, -61.0806, -115.675, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "6.64552, -217.703, -0.140975, 0.55", "7.27796, -218.697, -0.0454461, 0.55", "7.8203, -219.55, 0.0364719, 0.55", "10.7149, -223.643, -0.0418895, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.64552, -217.703, -0.140975, 0.55", "6.69918, -219.015, -0.0557259, 0.55", "6.79775, -220.957, 0.0962645, 0.55", "6.93244, -223.158, 0.327127, 0.55", "7.15567, -226.865, 0.78285, 0.55", "7.24712, -228.607, 1.00078, 0.55", "7.38397, -232.729, 1.53684, 0.55", "7.40102, -237.476, 2.21869, 0.55", "7.21847, -240.64, 2.70385, 0.55", "6.8821, -243.614, 3.18289, 0.55", "6.65465, -245.191, 3.46674, 0.55", "6.41157, -246.54, 3.70581, 0.55", "5.89659, -248.457, 4.09426, 0.55", "4.8033, -251.038, 4.65118, 0.55", "4.07502, -252.335, 4.91644, 0.28", "2.76798, -254.273, 5.35289, 0.55", "2.96449, -263.256, 7.54844, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-77.5483, 7.09641, 58.0334, 0.55", "-84.2654, 9.50454, 62.9958, 0.55", "-90.6091, 11.7594, 68.4845, 0.55", "-96.5287, 13.6128, 74.5505, 0.55", "-102.95, 14.4603, 80.3014, 0.55", "-110.344, 16.7314, 84.2635, 0.55", "-116.948, 19.5968, 89.1566, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-77.5483, 7.09641, 58.0334, 0.55", "-83.9929, 9.43994, 62.6735, 0.55", "-90.4265, 11.1547, 67.5722, 0.55", "-96.7415, 11.7021, 72.8539, 0.55", "-102.32, 13.6223, 78.6562, 0.55", "-106.705, 15.0153, 85.527, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-106.705, 15.0153, 85.527, 0.55", "-113.981, 16.6514, 92.7991, 0.55", "-120.395, 19.0475, 100.691, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-106.705, 15.0153, 85.527, 0.55", "-114.0, 16.7895, 92.781, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_44", "dend_43", "dend_42", "dend_37", "dend_34", "dend_21", "dend_10", "dend_1", "dend_0", "dend_46", "dend_45", "dend_39", "dend_38", "dend_36", "dend_35", "dend_31", "dend_22", "dend_20", "dend_11", "dend_7", "dend_2", "dend_48", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_26", "dend_23", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_30", "dend_27", "dend_25", "dend_24", "dend_15", "dend_14", "dend_5", "dend_4", "dend_29", "dend_28", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_44", "dend_43", "dend_42", "dend_37", "dend_34", "dend_21", "dend_10", "dend_1", "dend_0", "dend_46", "dend_45", "dend_39", "dend_38", "dend_36", "dend_35", "dend_31", "dend_22", "dend_20", "dend_11", "dend_7", "dend_2", "dend_48", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_26", "dend_23", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_30", "dend_27", "dend_25", "dend_24", "dend_15", "dend_14", "dend_5", "dend_4", "dend_29", "dend_28", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_18", "dend_18", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_NBC_711b6a838e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_21, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.45000091771476175)
    connect dend_44(0), soma_0(0.45000091771476175)
    connect dend_43(0), soma_0(0.45000091771476175)
    connect dend_42(0), soma_0(0.45000091771476175)
    connect dend_37(0), soma_0(0.45000091771476175)
    connect dend_34(0), soma_0(0.45000091771476175)
    connect dend_21(0), soma_0(0.45000091771476175)
    connect dend_10(0), soma_0(0.45000091771476175)
    connect dend_1(0), soma_0(0.45000091771476175)
    connect dend_0(0), soma_0(0.45000091771476175)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -11.2904, -1.90655, -0.0708968, 1.21335 ) }
    soma_0 { pt3dadd( -10.2183, -1.82528, -0.0665607, 1.95742 ) }
    soma_0 { pt3dadd( -9.14614, -1.74402, -0.0622246, 3.52326 ) }
    soma_0 { pt3dadd( -8.07401, -1.66275, -0.0578885, 5.81709 ) }
    soma_0 { pt3dadd( -7.00188, -1.58149, -0.0535524, 7.36561 ) }
    soma_0 { pt3dadd( -5.92974, -1.50022, -0.0492164, 9.78862 ) }
    soma_0 { pt3dadd( -4.85761, -1.41896, -0.0448803, 11.1132 ) }
    soma_0 { pt3dadd( -3.78548, -1.3377, -0.0405442, 11.7228 ) }
    soma_0 { pt3dadd( -2.71334, -1.25643, -0.0362081, 12.3311 ) }
    soma_0 { pt3dadd( -1.64121, -1.17517, -0.031872, 12.4664 ) }
    soma_0 { pt3dadd( -0.569079, -1.0939, -0.0275359, 12.3777 ) }
    soma_0 { pt3dadd( 0.503053, -1.01264, -0.0231998, 12.2817 ) }
    soma_0 { pt3dadd( 1.57519, -0.931372, -0.0188637, 12.3245 ) }
    soma_0 { pt3dadd( 2.64732, -0.850108, -0.0145276, 12.2615 ) }
    soma_0 { pt3dadd( 3.71945, -0.768843, -0.0101916, 12.0136 ) }
    soma_0 { pt3dadd( 4.79158, -0.687578, -0.00585547, 11.5505 ) }
    soma_0 { pt3dadd( 5.86372, -0.606314, -0.00151938, 11.1181 ) }
    soma_0 { pt3dadd( 6.93585, -0.525049, 0.00281671, 10.2871 ) }
    soma_0 { pt3dadd( 8.00798, -0.443784, 0.0071528, 7.35968 ) }
    soma_0 { pt3dadd( 9.08011, -0.36252, 0.0114889, 4.57252 ) }
    soma_0 { pt3dadd( 10.1522, -0.281255, 0.015825, 2.82158 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -1.31809, -6.31122, -0.14221, 1.11 ) }
    dend_49 { pt3dadd( -0.105618, -5.92222, 5.79633, 1.11 ) }
    dend_49 { pt3dadd( 0.521399, -5.38834, 10.021, 0.83 ) }
    dend_49 { pt3dadd( 1.5234, -3.91731, 17.6331, 0.55 ) }
    dend_49 { pt3dadd( 1.91594, -3.23295, 20.4841, 0.55 ) }
    dend_49 { pt3dadd( 3.00374, -1.30225, 27.4955, 0.55 ) }
    dend_49 { pt3dadd( 3.61396, -0.0680211, 31.0799, 0.55 ) }
    dend_49 { pt3dadd( 4.45537, 2.05579, 35.4379, 0.55 ) }
    dend_49 { pt3dadd( 4.86055, 3.06751, 37.1646, 0.55 ) }
    dend_49 { pt3dadd( 5.41759, 4.11332, 38.6318, 0.55 ) }
    dend_49 { pt3dadd( 6.58946, 5.8738, 40.6998, 0.55 ) }
    dend_49 { pt3dadd( 8.45896, 8.16515, 42.4493, 0.55 ) }
    dend_49 { pt3dadd( 9.55718, 9.32575, 43.0003, 0.55 ) }
    dend_49 { pt3dadd( 12.0476, 11.602, 43.398, 0.55 ) }
    dend_49 { pt3dadd( 14.6855, 13.6868, 43.3095, 0.55 ) }
    dend_49 { pt3dadd( 17.3958, 15.7436, 42.6381, 0.55 ) }
    dend_49 { pt3dadd( 20.2911, 18.035, 41.2589, 0.55 ) }
    dend_49 { pt3dadd( 24.3695, 21.0393, 38.4274, 0.55 ) }
    dend_49 { pt3dadd( 27.2562, 22.934, 36.1365, 0.55 ) }
    dend_49 { pt3dadd( 29.5164, 24.294, 34.1668, 0.55 ) }
    dend_49 { pt3dadd( 32.1867, 25.7766, 31.8263, 0.55 ) }
    dend_49 { pt3dadd( 35.6918, 27.3491, 28.873, 0.55 ) }
    dend_49 { pt3dadd( 41.0454, 28.9827, 24.9289, 0.55 ) }
    dend_49 { pt3dadd( 44.3851, 29.7541, 22.7582, 0.55 ) }
    dend_49 { pt3dadd( 46.3413, 30.2051, 21.6394, 0.55 ) }
    dend_49 { pt3dadd( 48.9638, 30.6953, 20.34, 0.55 ) }
    dend_49 { pt3dadd( 51.1348, 30.9061, 19.493, 0.55 ) }
    dend_49 { pt3dadd( 54.9546, 31.0716, 18.1735, 0.55 ) }
    dend_49 { pt3dadd( 60.6402, 31.5319, 16.1662, 0.55 ) }
    dend_49 { pt3dadd( 62.9499, 31.7359, 15.1706, 0.55 ) }
    dend_49 { pt3dadd( 65.4902, 31.8938, 13.9497, 0.55 ) }
    dend_49 { pt3dadd( 67.7193, 32.0275, 12.7513, 0.55 ) }
    dend_49 { pt3dadd( 71.9515, 32.4216, 10.3357, 0.55 ) }
    dend_49 { pt3dadd( 74.6206, 32.8236, 8.83934, 0.55 ) }
    dend_49 { pt3dadd( 77.1979, 33.1922, 7.52505, 0.55 ) }
    dend_49 { pt3dadd( 79.2236, 33.63, 6.38738, 0.55 ) }
    dend_49 { pt3dadd( 80.6444, 34.088, 5.55624, 0.55 ) }
    dend_49 { pt3dadd( 81.6309, 34.4649, 5.00405, 0.55 ) }
    dend_49 { pt3dadd( 85.8814, 36.0271, 3.032, 0.55 ) }
    dend_49 { pt3dadd( 88.4835, 37.0963, 1.85846, 0.55 ) }
    dend_49 { pt3dadd( 90.223, 37.8911, 1.05579, 0.55 ) }
    dend_49 { pt3dadd( 93.9965, 39.7405, -0.661872, 0.55 ) }
    dend_49 { pt3dadd( 95.2133, 40.3229, -1.25251, 0.55 ) }
    dend_49 { pt3dadd( 98.8458, 42.0174, -3.03324, 0.55 ) }
    dend_49 { pt3dadd( 101.488, 43.1487, -4.26533, 0.55 ) }
    dend_49 { pt3dadd( 103.586, 43.9202, -5.37474, 0.55 ) }
    dend_49 { pt3dadd( 105.982, 44.5563, -6.80487, 0.55 ) }
    dend_49 { pt3dadd( 109.576, 45.3, -9.23149, 0.55 ) }
    dend_49 { pt3dadd( 111.374, 45.5238, -10.5303, 0.83 ) }
    dend_49 { pt3dadd( 113.444, 45.7359, -12.074, 0.55 ) }
    dend_49 { pt3dadd( 118.487, 46.0279, -15.7869, 0.55 ) }
    dend_49 { pt3dadd( 122.14, 46.2417, -18.4114, 0.55 ) }
    dend_49 { pt3dadd( 124.852, 46.3401, -20.2782, 0.55 ) }
    dend_49 { pt3dadd( 127.267, 46.4966, -21.8278, 0.55 ) }
    dend_49 { pt3dadd( 130.728, 46.7115, -24.0226, 0.55 ) }
    dend_49 { pt3dadd( 135.882, 47.0383, -27.0242, 0.55 ) }
    dend_49 { pt3dadd( 137.707, 47.1084, -27.8771, 0.55 ) }
    dend_49 { pt3dadd( 140.929, 47.2401, -29.1877, 0.28 ) }
    dend_49 { pt3dadd( 142.375, 47.2593, -29.6669, 0.55 ) }
    dend_49 { pt3dadd( 145.332, 47.256, -30.547, 0.28 ) }
    dend_49 { pt3dadd( 147.039, 47.0491, -31.0626, 0.28 ) }
    dend_49 { pt3dadd( 148.611, 46.7825, -31.5184, 0.55 ) }
    dend_49 { pt3dadd( 150.357, 46.3621, -32.158, 0.55 ) }
    dend_49 { pt3dadd( 152.23, 45.7425, -32.9259, 0.55 ) }
    dend_49 { pt3dadd( 155.589, 44.2203, -34.3298, 0.55 ) }
    dend_49 { pt3dadd( 158.761, 42.2788, -35.7309, 0.55 ) }
    dend_49 { pt3dadd( 160.075, 41.2265, -36.433, 0.28 ) }
    dend_49 { pt3dadd( 161.144, 40.1829, -37.0697, 0.55 ) }
    dend_49 { pt3dadd( 162.44, 38.712, -37.9095, 0.28 ) }
    dend_49 { pt3dadd( 163.802, 36.8867, -38.8157, 0.55 ) }
    dend_49 { pt3dadd( 166.036, 33.4059, -40.2695, 0.28 ) }
    dend_49 { pt3dadd( 167.034, 31.746, -40.9069, 0.55 ) }
    dend_49 { pt3dadd( 167.908, 30.227, -41.5001, 0.28 ) }
    dend_49 { pt3dadd( 168.715, 28.8065, -42.0759, 0.55 ) }
    dend_49 { pt3dadd( 170.802, 25.137, -43.7708, 0.28 ) }
    dend_49 { pt3dadd( 171.47, 23.9228, -44.3882, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 97/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 1.63191, 7.31778, -19.0822, 1.38 ) }
    dend_44 { pt3dadd( 1.69196, 10.1422, -19.0822, 1.38 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 99/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 4.65191, 5.01828, 3.74779, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 5.31804, 6.27399, 5.29365, 0.55 ) }
    dend_43 { pt3dadd( 5.66431, 6.90689, 6.07375, 0.55 ) }
    dend_43 { pt3dadd( 6.19489, 7.73569, 7.45466, 0.55 ) }
    dend_43 { pt3dadd( 7.19912, 9.06349, 10.0234, 0.55 ) }
    dend_43 { pt3dadd( 8.48612, 10.8089, 13.4005, 0.55 ) }
    dend_43 { pt3dadd( 9.76718, 12.491, 16.6587, 0.55 ) }
    dend_43 { pt3dadd( 11.1085, 13.9399, 19.8255, 0.55 ) }
    dend_43 { pt3dadd( 13.2806, 16.088, 24.9549, 0.55 ) }
    dend_43 { pt3dadd( 13.9764, 16.7191, 26.6342, 0.55 ) }
    dend_43 { pt3dadd( 14.9146, 17.459, 28.8341, 0.55 ) }
    dend_43 { pt3dadd( 15.733, 17.9133, 30.5322, 0.55 ) }
    dend_43 { pt3dadd( 17.1879, 18.5073, 33.4565, 0.55 ) }
    dend_43 { pt3dadd( 22.4299, 21.4304, 43.7773, 0.55 ) }
    dend_43 { pt3dadd( 27.5408, 25.8453, 53.6687, 0.55 ) }
    dend_43 { pt3dadd( 30.4355, 30.1344, 64.4592, 0.55 ) }
    dend_43 { pt3dadd( 34.4967, 33.9159, 75.0495, 0.55 ) }
    dend_43 { pt3dadd( 39.3543, 38.8215, 84.856, 0.55 ) }
    dend_43 { pt3dadd( 42.5883, 45.3228, 94.4765, 0.55 ) }
    dend_43 { pt3dadd( 45.2153, 53.0615, 103.422, 0.55 ) }
    dend_43 { pt3dadd( 49.9818, 61.7388, 110.531, 0.55 ) }
    dend_43 { pt3dadd( 53.9898, 70.6538, 117.831, 0.55 ) }
    dend_43 { pt3dadd( 57.1565, 80.8708, 123.89, 0.55 ) }
    dend_43 { pt3dadd( 59.1146, 92.7958, 126.86, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 9.74188, -4.06422, -1.90221, 0.55 ) }
    dend_42 { pt3dadd( 11.3357, -4.65196, -1.75568, 0.55 ) }
    dend_42 { pt3dadd( 14.1634, -5.24684, -1.4813, 0.83 ) }
    dend_42 { pt3dadd( 16.6721, -5.56173, -1.24863, 0.55 ) }
    dend_42 { pt3dadd( 19.6443, -5.71489, -0.998874, 0.55 ) }
    dend_42 { pt3dadd( 21.5486, -5.75938, -0.816077, 0.55 ) }
    dend_42 { pt3dadd( 24.7453, -5.69915, -0.521982, 0.55 ) }
    dend_42 { pt3dadd( 27.2653, -5.42159, -0.192733, 0.55 ) }
    dend_42 { pt3dadd( 29.74, -4.9099, 0.17807, 0.55 ) }
    dend_42 { pt3dadd( 31.5121, -4.34759, 0.443045, 0.55 ) }
    dend_42 { pt3dadd( 33.6165, -3.45122, 0.742873, 0.55 ) }
    dend_42 { pt3dadd( 37.3734, -1.54884, 1.22059, 0.55 ) }
    dend_42 { pt3dadd( 40.293, -0.111123, 1.60457, 0.55 ) }
    dend_42 { pt3dadd( 42.7599, 1.05746, 1.95339, 0.55 ) }
    dend_42 { pt3dadd( 46.6229, 2.72498, 2.5109, 0.55 ) }
    dend_42 { pt3dadd( 48.9598, 3.61317, 2.85472, 0.55 ) }
    dend_42 { pt3dadd( 50.9955, 4.31715, 3.15459, 0.55 ) }
    dend_42 { pt3dadd( 54.725, 5.28895, 3.72392, 0.55 ) }
    dend_42 { pt3dadd( 56.997, 5.71275, 4.03055, 0.55 ) }
    dend_42 { pt3dadd( 60.5601, 6.23683, 4.54094, 0.55 ) }
    dend_42 { pt3dadd( 63.2623, 6.56021, 4.95003, 0.55 ) }
    dend_42 { pt3dadd( 65.3272, 6.90307, 5.2566, 0.55 ) }
    dend_42 { pt3dadd( 67.3843, 7.3216, 5.53568, 0.55 ) }
    dend_42 { pt3dadd( 69.9984, 8.10298, 5.82325, 0.55 ) }
    dend_42 { pt3dadd( 72.265, 8.86465, 6.03267, 0.55 ) }
    dend_42 { pt3dadd( 74.6814, 9.88957, 6.20333, 0.55 ) }
    dend_42 { pt3dadd( 76.636, 10.7512, 6.30654, 0.55 ) }
    dend_42 { pt3dadd( 77.7639, 11.2994, 6.36743, 0.55 ) }
    dend_42 { pt3dadd( 79.7751, 12.3441, 6.36104, 0.55 ) }
    dend_42 { pt3dadd( 81.7843, 13.3117, 6.25858, 0.55 ) }
    dend_42 { pt3dadd( 83.8199, 14.2806, 6.05784, 0.55 ) }
    dend_42 { pt3dadd( 85.6191, 15.0727, 5.81782, 0.55 ) }
    dend_42 { pt3dadd( 88.48, 16.2166, 5.41015, 0.55 ) }
    dend_42 { pt3dadd( 92.2032, 17.6582, 4.92194, 0.55 ) }
    dend_42 { pt3dadd( 93.9561, 18.2896, 4.70687, 0.55 ) }
    dend_42 { pt3dadd( 97.3504, 19.5382, 4.31858, 0.55 ) }
    dend_42 { pt3dadd( 100.834, 20.7925, 3.96535, 0.55 ) }
    dend_42 { pt3dadd( 103.158, 21.7447, 3.75923, 0.55 ) }
    dend_42 { pt3dadd( 105.531, 22.8597, 3.62662, 0.28 ) }
    dend_42 { pt3dadd( 106.521, 23.4707, 3.64845, 0.28 ) }
    dend_42 { pt3dadd( 107.888, 24.6165, 3.67889, 0.28 ) }
    dend_42 { pt3dadd( 108.211, 24.9977, 3.65087, 0.55 ) }
    dend_42 { pt3dadd( 109.216, 26.8076, 3.32086, 0.28 ) }
    dend_42 { pt3dadd( 109.673, 27.8656, 3.02784, 0.55 ) }
    dend_42 { pt3dadd( 110.64, 30.4414, 1.94718, 0.28 ) }
    dend_42 { pt3dadd( 111.121, 31.7494, 1.25217, 0.28 ) }
    dend_42 { pt3dadd( 112.201, 34.3737, -0.416507, 0.55 ) }
    dend_42 { pt3dadd( 112.754, 35.7366, -1.34716, 0.28 ) }
    dend_42 { pt3dadd( 112.961, 36.2254, -1.71756, 0.55 ) }
    dend_42 { pt3dadd( 113.799, 38.1458, -3.20392, 0.28 ) }
    dend_42 { pt3dadd( 114.066, 38.8198, -3.71278, 0.55 ) }
    dend_42 { pt3dadd( 114.471, 39.8236, -4.3977, 0.28 ) }
    dend_42 { pt3dadd( 115.178, 41.4986, -5.30024, 0.28 ) }
    dend_42 { pt3dadd( 115.64, 42.498, -5.79668, 0.55 ) }
    dend_42 { pt3dadd( 116.338, 43.8624, -6.36581, 0.28 ) }
    dend_42 { pt3dadd( 116.778, 44.6119, -6.59568, 0.55 ) }
    dend_42 { pt3dadd( 117.764, 46.1081, -6.96337, 0.28 ) }
    dend_42 { pt3dadd( 117.954, 46.3471, -7.01289, 0.55 ) }
    dend_42 { pt3dadd( 119.118, 47.607, -7.20597, 0.28 ) }
    dend_42 { pt3dadd( 119.975, 48.4497, -7.15888, 0.55 ) }
    dend_42 { pt3dadd( 120.996, 49.4564, -6.99564, 0.28 ) }
    dend_42 { pt3dadd( 121.59, 50.0931, -6.86555, 0.55 ) }
    dend_42 { pt3dadd( 122.775, 51.5431, -6.48258, 0.55 ) }
    dend_42 { pt3dadd( 123.664, 52.9099, -6.13416, 0.55 ) }
    dend_42 { pt3dadd( 124.953, 55.8578, -5.35791, 0.28 ) }
    dend_42 { pt3dadd( 125.751, 58.0176, -4.63276, 0.55 ) }
    dend_42 { pt3dadd( 126.258, 59.5609, -4.09126, 0.55 ) }
    dend_42 { pt3dadd( 126.99, 62.143, -3.2236, 0.28 ) }
    dend_42 { pt3dadd( 127.409, 63.8378, -2.67147, 0.28 ) }
    dend_42 { pt3dadd( 128.642, 69.201, -0.936403, 0.28 ) }
    dend_42 { pt3dadd( 129.435, 73.0005, 0.230237, 0.28 ) }
    dend_42 { pt3dadd( 130.046, 75.7555, 1.16178, 0.28 ) }
    dend_42 { pt3dadd( 130.544, 77.8663, 1.90006, 0.28 ) }
    dend_42 { pt3dadd( 131.261, 80.8583, 2.92241, 0.28 ) }
    dend_42 { pt3dadd( 138.885, 87.655, 2.90628, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 98/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 6.53191, 0.251275, 10.2578, 0.83 ) }
    dend_37 { pt3dadd( 7.66278, -2.04854, 11.4335, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( 8.50388, -3.75906, 12.3079, 0.83 ) }
    dend_37 { pt3dadd( 10.0792, -6.96266, 13.9457, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 2/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.22809, 2.35128, -8.58221, 0.83 ) }
    dend_34 { pt3dadd( -7.06716, 2.71925, -9.4815, 0.83 ) }
    dend_34 { pt3dadd( -8.44648, 3.88683, -11.2548, 0.83 ) }
    dend_34 { pt3dadd( -10.334, 6.05969, -13.5957, 0.83 ) }
    dend_34 { pt3dadd( -11.4901, 7.78513, -15.0706, 0.83 ) }
    dend_34 { pt3dadd( -13.3737, 11.0592, -17.6577, 0.55 ) }
    dend_34 { pt3dadd( -14.2561, 12.6018, -18.8844, 0.55 ) }
    dend_34 { pt3dadd( -15.4721, 14.8814, -20.7087, 0.55 ) }
    dend_34 { pt3dadd( -16.5234, 16.9163, -22.2603, 0.55 ) }
    dend_34 { pt3dadd( -18.2309, 19.8485, -24.4288, 0.55 ) }
    dend_34 { pt3dadd( -19.955, 22.2439, -26.3413, 0.55 ) }
    dend_34 { pt3dadd( -20.8141, 23.1827, -27.1156, 0.83 ) }
    dend_34 { pt3dadd( -23.0636, 25.1714, -28.8227, 0.55 ) }
    dend_34 { pt3dadd( -24.9426, 26.4808, -29.9699, 0.55 ) }
    dend_34 { pt3dadd( -27.3943, 28.0814, -31.3347, 0.55 ) }
    dend_34 { pt3dadd( -29.7946, 29.6747, -32.5357, 0.55 ) }
    dend_34 { pt3dadd( -31.586, 30.9991, -33.3637, 0.55 ) }
    dend_34 { pt3dadd( -34.6129, 33.626, -34.8149, 0.83 ) }
    dend_34 { pt3dadd( -36.6221, 35.6114, -35.7851, 0.55 ) }
    dend_34 { pt3dadd( -38.2826, 37.3725, -36.6799, 0.55 ) }
    dend_34 { pt3dadd( -40.1869, 39.6293, -37.9004, 0.83 ) }
    dend_34 { pt3dadd( -41.0631, 40.7061, -38.5069, 0.83 ) }
    dend_34 { pt3dadd( -42.2896, 42.2035, -39.3747, 0.28 ) }
    dend_34 { pt3dadd( -43.153, 43.2421, -39.9888, 0.55 ) }
    dend_34 { pt3dadd( -44.7172, 45.0156, -40.9151, 0.55 ) }
    dend_34 { pt3dadd( -46.1883, 46.5776, -41.7854, 0.55 ) }
    dend_34 { pt3dadd( -47.33, 47.8699, -42.4785, 0.55 ) }
    dend_34 { pt3dadd( -48.5519, 49.479, -43.38, 0.83 ) }
    dend_34 { pt3dadd( -49.323, 50.5924, -44.0691, 0.83 ) }
    dend_34 { pt3dadd( -50.5517, 52.5961, -45.3703, 0.83 ) }
    dend_34 { pt3dadd( -52.4801, 56.1892, -47.7135, 0.83 ) }
    dend_34 { pt3dadd( -53.361, 57.8533, -48.8137, 0.55 ) }
    dend_34 { pt3dadd( -54.6263, 60.2935, -50.4276, 0.83 ) }
    dend_34 { pt3dadd( -56.0036, 63.0067, -52.1273, 0.55 ) }
    dend_34 { pt3dadd( -56.6515, 64.1581, -52.8245, 0.55 ) }
    dend_34 { pt3dadd( -56.9749, 64.6663, -53.1142, 0.55 ) }
    dend_34 { pt3dadd( -58.1366, 66.2861, -53.8707, 0.83 ) }
    dend_34 { pt3dadd( -59.8527, 68.4622, -54.873, 0.83 ) }
    dend_34 { pt3dadd( -61.1487, 70.034, -55.5402, 0.83 ) }
    dend_34 { pt3dadd( -63.8333, 73.1415, -56.8372, 0.83 ) }
    dend_34 { pt3dadd( -65.5687, 74.8749, -57.6487, 0.83 ) }
    dend_34 { pt3dadd( -66.7913, 75.9682, -58.2152, 0.83 ) }
    dend_34 { pt3dadd( -68.3208, 77.1827, -58.9364, 0.55 ) }
    dend_34 { pt3dadd( -69.8831, 78.2215, -59.6477, 0.55 ) }
    dend_34 { pt3dadd( -71.2974, 79.0251, -60.2703, 0.55 ) }
    dend_34 { pt3dadd( -73.292, 79.945, -61.05, 0.55 ) }
    dend_34 { pt3dadd( -76.0848, 81.0403, -62.0801, 0.55 ) }
    dend_34 { pt3dadd( -77.334, 81.4699, -62.5893, 0.55 ) }
    dend_34 { pt3dadd( -78.6671, 81.8737, -63.1483, 0.83 ) }
    dend_34 { pt3dadd( -80.1296, 82.2356, -63.7756, 0.55 ) }
    dend_34 { pt3dadd( -81.3987, 82.5599, -64.3884, 0.55 ) }
    dend_34 { pt3dadd( -82.8284, 82.9474, -65.1449, 0.83 ) }
    dend_34 { pt3dadd( -85.4094, 83.6025, -66.571, 0.55 ) }
    dend_34 { pt3dadd( -87.1597, 84.066, -67.561, 0.83 ) }
    dend_34 { pt3dadd( -89.7428, 84.7847, -69.0859, 0.55 ) }
    dend_34 { pt3dadd( -91.7475, 85.3658, -70.2974, 0.28 ) }
    dend_34 { pt3dadd( -93.194, 85.8253, -71.2271, 0.83 ) }
    dend_34 { pt3dadd( -95.2511, 86.504, -72.5763, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.71191, -6.04872, -1.57221, 2.22 ) }
    dend_21 { pt3dadd( 10.7378, -10.7245, -1.56079, 2.22 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 62/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.35809, -5.64972, 3.20779, 1.11 ) }
    dend_10 { pt3dadd( -8.96002, -7.57449, 3.91041, 1.11 ) }
    dend_10 { pt3dadd( -9.71077, -9.97511, 4.78673, 0.83 ) }
    dend_10 { pt3dadd( -10.5432, -12.637, 5.75843, 1.11 ) }
    dend_10 { pt3dadd( -11.372, -15.2872, 6.72586, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -10.7781, -4.87272, -3.55221, 1.38 ) }
    dend_1 { pt3dadd( -12.5616, -6.65347, -4.29139, 1.38 ) }
    dend_1 { pt3dadd( -15.0926, -9.18049, -5.34035, 1.11 ) }
    dend_1 { pt3dadd( -17.2297, -11.3143, -6.22608, 1.11 ) }
    dend_1 { pt3dadd( -19.5409, -13.6218, -7.18395, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 72/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.17809, 4.70328, 1.47779, 1.11 ) }
    dend_0 { pt3dadd( -8.59773, 6.09791, 2.19943, 1.11 ) }
    dend_0 { pt3dadd( -11.6274, 8.17284, 3.58799, 1.11 ) }
    dend_0 { pt3dadd( -14.8189, 11.1017, 5.33104, 1.11 ) }
    dend_0 { pt3dadd( -18.5494, 15.3974, 7.2468, 1.11 ) }
    dend_0 { pt3dadd( -20.2175, 17.8761, 8.19577, 0.83 ) }
    dend_0 { pt3dadd( -21.5169, 20.0574, 8.93882, 0.83 ) }
    dend_0 { pt3dadd( -24.2932, 25.6051, 10.4431, 0.83 ) }
    dend_0 { pt3dadd( -26.2562, 30.5709, 11.4449, 0.83 ) }
    dend_0 { pt3dadd( -27.6665, 35.4097, 12.1826, 0.55 ) }
    dend_0 { pt3dadd( -29.0654, 41.3878, 13.0619, 0.55 ) }
    dend_0 { pt3dadd( -29.6734, 43.6947, 13.4821, 0.28 ) }
    dend_0 { pt3dadd( -30.6098, 46.7218, 14.0943, 0.83 ) }
    dend_0 { pt3dadd( -32.04, 50.9418, 14.9522, 0.55 ) }
    dend_0 { pt3dadd( -33.2876, 54.4098, 15.824, 0.55 ) }
    dend_0 { pt3dadd( -35.2989, 59.752, 17.2679, 0.55 ) }
    dend_0 { pt3dadd( -37.8235, 66.9649, 18.8094, 0.55 ) }
    dend_0 { pt3dadd( -39.1329, 71.0831, 19.5788, 0.55 ) }
    dend_0 { pt3dadd( -40.6177, 75.9545, 20.3718, 0.55 ) }
    dend_0 { pt3dadd( -41.861, 80.2856, 20.9843, 0.55 ) }
    dend_0 { pt3dadd( -43.6895, 86.773, 21.7285, 0.55 ) }
    dend_0 { pt3dadd( -45.8045, 95.1645, 22.4125, 0.55 ) }
    dend_0 { pt3dadd( -46.7597, 99.3505, 22.7165, 0.55 ) }
    dend_0 { pt3dadd( -47.6355, 103.008, 23.0554, 0.55 ) }
    dend_0 { pt3dadd( -48.4526, 106.365, 23.4738, 0.55 ) }
    dend_0 { pt3dadd( -49.6467, 111.261, 24.2731, 0.55 ) }
    dend_0 { pt3dadd( -50.7899, 115.807, 25.2138, 0.55 ) }
    dend_0 { pt3dadd( -51.9832, 120.44, 26.3682, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( -53.5601, 127.519, 28.111, 0.55 ) }
    dend_0 { pt3dadd( -53.914, 129.291, 28.5951, 0.55 ) }
    dend_0 { pt3dadd( -54.8915, 134.425, 30.0529, 0.55 ) }
    dend_0 { pt3dadd( -55.6548, 138.821, 31.6102, 0.55 ) }
    dend_0 { pt3dadd( -56.126, 141.898, 32.8594, 0.55 ) }
    dend_0 { pt3dadd( -56.5378, 145.369, 34.3738, 0.55 ) }
    dend_0 { pt3dadd( -57.0263, 149.302, 36.0955, 0.83 ) }
    dend_0 { pt3dadd( -57.8428, 153.684, 37.9219, 0.55 ) }
    dend_0 { pt3dadd( -59.1825, 158.589, 39.825, 0.55 ) }
    dend_0 { pt3dadd( -60.2987, 161.563, 40.9111, 0.55 ) }
    dend_0 { pt3dadd( -61.9242, 164.996, 42.1184, 0.55 ) }
    dend_0 { pt3dadd( -63.9299, 168.844, 43.3534, 0.55 ) }
    dend_0 { pt3dadd( -66.0579, 172.689, 44.3787, 0.55 ) }
    dend_0 { pt3dadd( -68.0298, 175.99, 45.3446, 0.55 ) }
    dend_0 { pt3dadd( -69.9071, 178.968, 46.2132, 0.55 ) }
    dend_0 { pt3dadd( -71.8678, 181.918, 47.2643, 0.55 ) }
    dend_0 { pt3dadd( -73.1518, 183.872, 48.1358, 0.55 ) }
    dend_0 { pt3dadd( -75.31, 187.384, 49.9627, 0.55 ) }
    dend_0 { pt3dadd( -77.0402, 190.661, 51.8081, 0.55 ) }
    dend_0 { pt3dadd( -78.6081, 194.119, 53.86, 0.55 ) }
    dend_0 { pt3dadd( -79.442, 196.132, 55.0442, 0.83 ) }
    dend_0 { pt3dadd( -80.919, 199.987, 57.2408, 0.55 ) }
    dend_0 { pt3dadd( -81.2781, 201.087, 57.9169, 0.55 ) }
    dend_0 { pt3dadd( -81.9969, 203.458, 59.5261, 0.55 ) }
    dend_0 { pt3dadd( -83.1695, 206.836, 61.7893, 0.55 ) }
    dend_0 { pt3dadd( -84.0979, 209.037, 63.4525, 0.55 ) }
    dend_0 { pt3dadd( -85.0959, 211.242, 65.2469, 0.55 ) }
    dend_0 { pt3dadd( -86.9783, 214.889, 68.4016, 0.55 ) }
    dend_0 { pt3dadd( -89.5283, 219.273, 72.3238, 0.55 ) }
    dend_0 { pt3dadd( -91.1904, 221.822, 74.8072, 0.55 ) }
    dend_0 { pt3dadd( -94.5551, 226.82, 79.8893, 0.55 ) }
    dend_0 { pt3dadd( -96.3592, 229.783, 82.7986, 0.55 ) }
    dend_0 { pt3dadd( -98.152, 233.501, 86.1021, 0.55 ) }
    dend_0 { pt3dadd( -98.8103, 235.404, 87.4981, 0.55 ) }
    dend_0 { pt3dadd( -99.5291, 239.75, 90.1833, 0.55 ) }
    dend_0 { pt3dadd( -99.7102, 241.928, 91.3005, 0.55 ) }
    dend_0 { pt3dadd( -100.007, 247.241, 93.3752, 0.55 ) }
    dend_0 { pt3dadd( -100.291, 253.585, 95.5119, 0.55 ) }
    dend_0 { pt3dadd( -100.235, 258.095, 96.7961, 0.55 ) }
    dend_0 { pt3dadd( -100.09, 261.029, 97.6097, 0.55 ) }
    dend_0 { pt3dadd( -99.5898, 266.62, 98.8737, 0.55 ) }
    dend_0 { pt3dadd( -99.0914, 271.912, 100.01, 0.55 ) }
    dend_0 { pt3dadd( -98.558, 277.104, 101.109, 0.55 ) }
    dend_0 { pt3dadd( -97.8765, 282.178, 102.032, 0.55 ) }
    dend_0 { pt3dadd( -97.0222, 287.316, 102.911, 0.55 ) }
    dend_0 { pt3dadd( -95.7143, 293.574, 103.901, 0.28 ) }
    dend_0 { pt3dadd( -94.9045, 296.076, 104.263, 0.28 ) }
    dend_0 { pt3dadd( -93.9554, 298.454, 104.492, 0.28 ) }
    dend_0 { pt3dadd( -99.4133, 311.979, 108.605, 0.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 49/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.1522, -0.281255, 0.015825, 0.55 ) }
    axon_0 { pt3dadd( 25.1093, 0.852455, 0.015825, 0.55 ) }
    axon_0 { pt3dadd( 40.0664, 1.98617, 0.015825, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 52/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.69196, 10.1422, -19.0822, 0.83 ) }
    dend_46 { pt3dadd( 3.22487, 13.9736, -18.9111, 0.83 ) }
    dend_46 { pt3dadd( 3.76519, 15.4691, -19.1963, 1.38 ) }
    dend_46 { pt3dadd( 4.51082, 17.8058, -20.0529, 0.83 ) }
    dend_46 { pt3dadd( 4.90852, 19.7885, -20.9371, 0.83 ) }
    dend_46 { pt3dadd( 5.27176, 22.7259, -22.3905, 0.83 ) }
    dend_46 { pt3dadd( 5.43678, 25.0238, -23.5945, 0.83 ) }
    dend_46 { pt3dadd( 5.53871, 29.2932, -25.9211, 1.11 ) }
    dend_46 { pt3dadd( 5.46369, 31.6543, -27.3287, 0.83 ) }
    dend_46 { pt3dadd( 5.24969, 35.4159, -29.6848, 0.83 ) }
    dend_46 { pt3dadd( 5.11118, 37.7122, -31.1367, 0.83 ) }
    dend_46 { pt3dadd( 4.95306, 39.4561, -32.1636, 0.55 ) }
    dend_46 { pt3dadd( 4.88776, 40.4383, -32.6077, 0.55 ) }
    dend_46 { pt3dadd( 4.97673, 42.8247, -33.3672, 0.55 ) }
    dend_46 { pt3dadd( 5.29187, 44.9759, -33.9446, 0.55 ) }
    dend_46 { pt3dadd( 5.72158, 46.7026, -34.3891, 0.55 ) }
    dend_46 { pt3dadd( 6.40046, 49.1177, -34.9749, 0.55 ) }
    dend_46 { pt3dadd( 7.21745, 51.9107, -35.7405, 0.55 ) }
    dend_46 { pt3dadd( 8.2217, 55.4744, -36.8043, 0.55 ) }
    dend_46 { pt3dadd( 9.22782, 58.9908, -37.9086, 0.55 ) }
    dend_46 { pt3dadd( 9.80148, 61.1049, -38.6237, 0.83 ) }
    dend_46 { pt3dadd( 10.3601, 63.0033, -39.3296, 0.83 ) }
    dend_46 { pt3dadd( 11.0885, 65.2637, -40.2539, 0.55 ) }
    dend_46 { pt3dadd( 11.6657, 67.3708, -41.1584, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 76/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.69196, 10.1422, -19.0822, 0.55 ) }
    dend_45 { pt3dadd( 3.48465, 9.73182, -19.1126, 0.55 ) }
    dend_45 { pt3dadd( 6.31748, 9.08341, -19.1607, 1.11 ) }
    dend_45 { pt3dadd( 8.43465, 8.59881, -19.1966, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 10.0792, -6.96266, 13.9457, 0.55 ) }
    dend_39 { pt3dadd( 12.8614, -5.63372, 15.0168, 0.55 ) }
    dend_39 { pt3dadd( 14.6062, -5.11941, 15.9239, 0.55 ) }
    dend_39 { pt3dadd( 17.0687, -4.87238, 17.7868, 0.55 ) }
    dend_39 { pt3dadd( 19.5316, -4.71402, 19.9706, 0.55 ) }
    dend_39 { pt3dadd( 21.0956, -4.76355, 21.5054, 0.55 ) }
    dend_39 { pt3dadd( 23.4821, -4.94273, 23.9669, 0.55 ) }
    dend_39 { pt3dadd( 25.3834, -5.04625, 26.0981, 0.55 ) }
    dend_39 { pt3dadd( 28.0778, -5.20203, 29.183, 0.55 ) }
    dend_39 { pt3dadd( 29.7853, -5.42404, 31.2048, 0.55 ) }
    dend_39 { pt3dadd( 31.8327, -5.76036, 33.4652, 0.55 ) }
    dend_39 { pt3dadd( 33.432, -5.87193, 35.0002, 0.55 ) }
    dend_39 { pt3dadd( 35.8163, -5.78139, 36.7609, 0.55 ) }
    dend_39 { pt3dadd( 38.9199, -5.58805, 38.541, 0.55 ) }
    dend_39 { pt3dadd( 40.9395, -5.47196, 39.4246, 0.55 ) }
    dend_39 { pt3dadd( 43.7486, -5.34415, 40.4111, 0.55 ) }
    dend_39 { pt3dadd( 47.0329, -5.29845, 41.2981, 0.55 ) }
    dend_39 { pt3dadd( 49.4268, -5.39943, 41.8091, 0.55 ) }
    dend_39 { pt3dadd( 51.2699, -5.5243, 42.128, 0.55 ) }
    dend_39 { pt3dadd( 52.5157, -5.55814, 42.2539, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( 56.1137, -5.32715, 42.4648, 0.55 ) }
    dend_39 { pt3dadd( 58.9119, -5.06816, 42.4523, 0.55 ) }
    dend_39 { pt3dadd( 61.5596, -4.73743, 42.2503, 0.55 ) }
    dend_39 { pt3dadd( 63.2862, -4.37643, 42.0163, 0.55 ) }
    dend_39 { pt3dadd( 65.4229, -3.78362, 41.7837, 0.55 ) }
    dend_39 { pt3dadd( 67.828, -3.04616, 41.4606, 0.55 ) }
    dend_39 { pt3dadd( 71.543, -1.60989, 40.7743, 0.55 ) }
    dend_39 { pt3dadd( 74.2346, -0.394429, 40.2722, 0.55 ) }
    dend_39 { pt3dadd( 76.7796, 0.692976, 39.7519, 0.55 ) }
    dend_39 { pt3dadd( 80.5102, 2.0392, 39.0885, 0.55 ) }
    dend_39 { pt3dadd( 92.7181, 4.50658, 40.7245, 0.55 ) }
    dend_39 { pt3dadd( 104.494, 9.13192, 40.4091, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 10.0792, -6.96266, 13.9457, 0.55 ) }
    dend_38 { pt3dadd( 5.62503, -8.75419, 15.4152, 0.55 ) }
    dend_38 { pt3dadd( -2.71686, -12.8094, 16.9268, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 15/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -95.2511, 86.504, -72.5763, 0.55 ) }
    dend_36 { pt3dadd( -96.0672, 87.6683, -71.5957, 0.55 ) }
    dend_36 { pt3dadd( -96.9535, 88.9327, -70.5308, 0.28 ) }
    dend_36 { pt3dadd( -97.1138, 89.1613, -70.3383, 0.55 ) }
    dend_36 { pt3dadd( -99.1118, 92.0118, -67.9376, 0.28 ) }
    dend_36 { pt3dadd( -99.3603, 92.3662, -67.6391, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 21/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -95.2511, 86.504, -72.5763, 0.28 ) }
    dend_35 { pt3dadd( -98.1981, 86.524, -74.1244, 0.28 ) }
    dend_35 { pt3dadd( -98.7912, 86.5346, -74.4259, 0.55 ) }
    dend_35 { pt3dadd( -99.9472, 86.5655, -74.8256, 0.28 ) }
    dend_35 { pt3dadd( -100.402, 86.5777, -74.9827, 0.55 ) }
    dend_35 { pt3dadd( -102.257, 86.6272, -75.6241, 0.28 ) }
    dend_35 { pt3dadd( -102.648, 86.6377, -75.7594, 0.55 ) }
    dend_35 { pt3dadd( -103.87, 86.708, -75.9452, 0.28 ) }
    dend_35 { pt3dadd( -106.191, 86.7537, -76.2803, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 30/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.7378, -10.7245, -1.56079, 1.11 ) }
    dend_31 { pt3dadd( 12.6835, -10.8657, -3.02759, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 10.7378, -10.7245, -1.56079, 1.38 ) }
    dend_22 { pt3dadd( 11.4291, -13.8016, -2.44704, 1.38 ) }
    dend_22 { pt3dadd( 12.7487, -19.6748, -4.13865, 1.66 ) }
    dend_22 { pt3dadd( 13.2745, -22.015, -4.81268, 1.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -11.372, -15.2872, 6.72586, 0.83 ) }
    dend_20 { pt3dadd( -13.4107, -19.4362, 6.25821, 0.83 ) }
    dend_20 { pt3dadd( -14.2901, -22.2204, 6.21519, 0.83 ) }
    dend_20 { pt3dadd( -15.0762, -24.9261, 6.32762, 0.83 ) }
    dend_20 { pt3dadd( -15.8203, -27.1367, 6.55473, 0.83 ) }
    dend_20 { pt3dadd( -16.6427, -29.5057, 6.933, 0.83 ) }
    dend_20 { pt3dadd( -17.8197, -33.0072, 7.59143, 0.83 ) }
    dend_20 { pt3dadd( -19.5485, -38.2675, 9.07635, 0.83 ) }
    dend_20 { pt3dadd( -20.2797, -40.5235, 9.78248, 0.83 ) }
    dend_20 { pt3dadd( -21.4218, -44.1038, 10.8037, 0.83 ) }
    dend_20 { pt3dadd( -22.2775, -46.8146, 11.6481, 0.83 ) }
    dend_20 { pt3dadd( -23.6526, -50.7748, 13.0749, 0.83 ) }
    dend_20 { pt3dadd( -24.5328, -53.1276, 14.0224, 0.83 ) }
    dend_20 { pt3dadd( -26.6436, -58.3183, 16.4458, 0.83 ) }
    dend_20 { pt3dadd( -28.1501, -62.3364, 18.5652, 0.83 ) }
    dend_20 { pt3dadd( -29.3846, -65.9478, 20.7445, 0.83 ) }
    dend_20 { pt3dadd( -30.4432, -69.0805, 22.8193, 0.83 ) }
    dend_20 { pt3dadd( -30.9967, -70.838, 24.0728, 0.83 ) }
    dend_20 { pt3dadd( -31.7874, -73.6193, 26.1345, 0.83 ) }
    dend_20 { pt3dadd( -32.9133, -78.3025, 29.7851, 0.83 ) }
    dend_20 { pt3dadd( -33.391, -80.9653, 31.7935, 0.83 ) }
    dend_20 { pt3dadd( -33.8195, -84.0103, 33.6774, 0.83 ) }
    dend_20 { pt3dadd( -34.0047, -86.0616, 34.7334, 0.83 ) }
    dend_20 { pt3dadd( -34.1732, -88.6227, 35.8447, 0.83 ) }
    dend_20 { pt3dadd( -34.272, -92.6588, 37.206, 0.55 ) }
    dend_20 { pt3dadd( -34.2673, -95.2778, 37.9767, 0.55 ) }
    dend_20 { pt3dadd( -34.1964, -99.4373, 39.0229, 0.55 ) }
    dend_20 { pt3dadd( -34.1142, -102.524, 39.756, 0.55 ) }
    dend_20 { pt3dadd( -34.0611, -105.225, 40.3303, 0.55 ) }
    dend_20 { pt3dadd( -34.0078, -109.238, 41.0463, 0.55 ) }
    dend_20 { pt3dadd( -34.0972, -113.667, 41.7192, 0.55 ) }
    dend_20 { pt3dadd( -34.2365, -117.275, 42.2259, 0.55 ) }
    dend_20 { pt3dadd( -34.4014, -120.276, 42.7224, 0.55 ) }
    dend_20 { pt3dadd( -34.5581, -122.563, 43.1351, 0.55 ) }
    dend_20 { pt3dadd( -34.7944, -124.602, 43.5742, 0.55 ) }
    dend_20 { pt3dadd( -35.6693, -129.842, 44.8151, 0.55 ) }
    dend_20 { pt3dadd( -36.0517, -131.578, 45.2227, 0.55 ) }
    dend_20 { pt3dadd( -37.3067, -136.443, 46.5339, 0.55 ) }
    dend_20 { pt3dadd( -38.3732, -139.895, 47.4781, 0.55 ) }
    dend_20 { pt3dadd( -40.1702, -144.806, 48.9654, 0.55 ) }
    dend_20 { pt3dadd( -40.6826, -145.943, 49.3341, 0.55 ) }
    dend_20 { pt3dadd( -42.3027, -149.052, 50.3595, 0.55 ) }
    dend_20 { pt3dadd( -43.5299, -151.304, 51.0374, 0.55 ) }
    dend_20 { pt3dadd( -44.7861, -153.537, 51.6275, 0.55 ) }
    dend_20 { pt3dadd( -46.42, -156.45, 52.3815, 0.55 ) }
    dend_20 { pt3dadd( -47.1651, -157.942, 52.746, 0.55 ) }
    dend_20 { pt3dadd( -49.3352, -163.013, 53.9096, 0.55 ) }
    dend_20 { pt3dadd( -50.2233, -165.445, 54.4436, 0.55 ) }
    dend_20 { pt3dadd( -50.7088, -167.328, 54.7831, 0.55 ) }
    dend_20 { pt3dadd( -51.0399, -169.248, 55.1391, 0.55 ) }
    dend_20 { pt3dadd( -51.3086, -171.613, 55.4736, 0.28 ) }
    dend_20 { pt3dadd( -51.6729, -174.755, 55.6552, 0.28 ) }
    dend_20 { pt3dadd( -51.9275, -176.777, 55.6027, 0.28 ) }
    dend_20 { pt3dadd( -52.6432, -181.698, 55.0282, 0.55 ) }
    dend_20 { pt3dadd( -53.2247, -185.965, 54.3992, 0.28 ) }
    dend_20 { pt3dadd( -53.7669, -189.732, 53.714, 0.55 ) }
    dend_20 { pt3dadd( -54.7948, -195.956, 52.1841, 0.28 ) }
    dend_20 { pt3dadd( -55.2724, -198.059, 51.4842, 0.28 ) }
    dend_20 { pt3dadd( -56.3969, -201.792, 49.8002, 0.28 ) }
    dend_20 { pt3dadd( -57.3623, -212.12, 50.6101, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 96/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -11.372, -15.2872, 6.72586, 0.55 ) }
    dend_11 { pt3dadd( -12.381, -14.9458, 7.79723, 0.55 ) }
    dend_11 { pt3dadd( -13.3177, -14.6288, 8.79175, 0.55 ) }
    dend_11 { pt3dadd( -14.1915, -14.3331, 9.71959, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( -15.1773, -13.9995, 10.7663, 0.55 ) }
    dend_11 { pt3dadd( -17.0918, -13.3516, 12.7991, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 2/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -19.5409, -13.6218, -7.18395, 1.11 ) }
    dend_7 { pt3dadd( -20.7746, -16.595, -8.2412, 1.11 ) }
    dend_7 { pt3dadd( -22.7524, -21.3615, -9.93618, 0.83 ) }
    dend_7 { pt3dadd( -23.6263, -23.4675, -10.6851, 0.83 ) }
    dend_7 { pt3dadd( -24.882, -26.4935, -11.7611, 0.83 ) }
    dend_7 { pt3dadd( -25.9115, -28.9747, -12.6434, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 8/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -19.5409, -13.6218, -7.18395, 1.38 ) }
    dend_2 { pt3dadd( -20.6557, -12.5574, -7.50858, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 10/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.0664, 1.98617, 0.015825, 0.55 ) }
    axon_1 { pt3dadd( 55.0235, 3.11988, 0.015825, 0.55 ) }
    axon_1 { pt3dadd( 69.9806, 4.25359, 0.015825, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 11.6657, 67.3708, -41.1584, 0.55 ) }
    dend_48 { pt3dadd( 11.2508, 69.3719, -43.3721, 0.55 ) }
    dend_48 { pt3dadd( 11.0425, 70.919, -44.9912, 0.55 ) }
    dend_48 { pt3dadd( 10.7346, 73.2587, -47.1616, 0.55 ) }
    dend_48 { pt3dadd( 10.3173, 76.92, -50.3066, 0.55 ) }
    dend_48 { pt3dadd( 9.93878, 80.0815, -52.6928, 0.55 ) }
    dend_48 { pt3dadd( 9.64928, 83.6764, -55.1905, 0.28 ) }
    dend_48 { pt3dadd( 9.58758, 85.393, -56.3385, 0.55 ) }
    dend_48 { pt3dadd( 9.53248, 88.6126, -58.409, 0.55 ) }
    dend_48 { pt3dadd( 9.42306, 91.9057, -60.2904, 0.55 ) }
    dend_48 { pt3dadd( 9.28029, 95.4713, -62.0665, 0.55 ) }
    dend_48 { pt3dadd( 9.11167, 100.571, -64.4093, 0.55 ) }
    dend_48 { pt3dadd( 8.92986, 103.985, -65.8535, 0.55 ) }
    dend_48 { pt3dadd( 8.64444, 106.473, -67.1012, 0.55 ) }
    dend_48 { pt3dadd( 8.29319, 108.217, -68.1762, 0.28 ) }
    dend_48 { pt3dadd( 8.02203, 109.216, -68.9532, 0.55 ) }
    dend_48 { pt3dadd( 7.52174, 110.756, -70.2981, 0.28 ) }
    dend_48 { pt3dadd( 6.87592, 112.289, -71.729, 0.55 ) }
    dend_48 { pt3dadd( 4.40393, 117.79, -77.2248, 0.83 ) }
    dend_48 { pt3dadd( 2.64285, 121.418, -81.2159, 0.28 ) }
    dend_48 { pt3dadd( 1.27943, 124.251, -84.6882, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 11.6657, 67.3708, -41.1584, 0.55 ) }
    dend_47 { pt3dadd( 12.672, 69.2335, -42.0552, 0.55 ) }
    dend_47 { pt3dadd( 14.2931, 71.9609, -43.8294, 0.55 ) }
    dend_47 { pt3dadd( 15.3755, 73.6253, -45.1295, 0.55 ) }
    dend_47 { pt3dadd( 16.5949, 75.3927, -46.6319, 0.55 ) }
    dend_47 { pt3dadd( 17.3238, 76.3697, -47.5046, 0.55 ) }
    dend_47 { pt3dadd( 18.065, 77.3306, -48.3763, 0.55 ) }
    dend_47 { pt3dadd( 20.071, 79.7345, -50.78, 0.55 ) }
    dend_47 { pt3dadd( 21.1114, 80.9743, -52.0228, 0.28 ) }
    dend_47 { pt3dadd( 21.5379, 81.4832, -52.4944, 0.55 ) }
    dend_47 { pt3dadd( 23.097, 83.2697, -54.0308, 0.28 ) }
    dend_47 { pt3dadd( 23.5843, 83.9075, -54.4949, 0.55 ) }
    dend_47 { pt3dadd( 25.0219, 86.076, -55.7034, 0.28 ) }
    dend_47 { pt3dadd( 25.7428, 87.345, -56.1562, 0.55 ) }
    dend_47 { pt3dadd( 26.2725, 88.5495, -56.4343, 0.28 ) }
    dend_47 { pt3dadd( 26.9094, 90.4457, -56.8187, 0.55 ) }
    dend_47 { pt3dadd( 27.5018, 92.8755, -57.2226, 0.55 ) }
    dend_47 { pt3dadd( 27.9029, 94.6559, -57.4987, 0.55 ) }
    dend_47 { pt3dadd( 28.2986, 96.7477, -57.7782, 0.55 ) }
    dend_47 { pt3dadd( 28.9215, 100.337, -58.2424, 0.55 ) }
    dend_47 { pt3dadd( 29.3689, 103.5, -58.6318, 0.55 ) }
    dend_47 { pt3dadd( 29.6231, 105.734, -58.9179, 0.55 ) }
    dend_47 { pt3dadd( 29.9202, 108.337, -59.3153, 0.55 ) }
    dend_47 { pt3dadd( 30.0358, 109.706, -59.5738, 0.28 ) }
    dend_47 { pt3dadd( 30.0718, 110.331, -59.7099, 0.55 ) }
    dend_47 { pt3dadd( 30.208, 112.051, -60.1532, 0.28 ) }
    dend_47 { pt3dadd( 30.2695, 113.17, -60.3884, 0.55 ) }
    dend_47 { pt3dadd( 30.3417, 114.28, -60.6259, 0.28 ) }
    dend_47 { pt3dadd( 30.4549, 116.181, -60.9297, 0.55 ) }
    dend_47 { pt3dadd( 30.7102, 117.909, -61.119, 0.28 ) }
    dend_47 { pt3dadd( 30.9316, 118.859, -61.1629, 0.28 ) }
    dend_47 { pt3dadd( 31.5947, 120.492, -61.0245, 0.55 ) }
    dend_47 { pt3dadd( 32.5907, 122.587, -60.5893, 0.55 ) }
    dend_47 { pt3dadd( 33.2196, 123.919, -60.1996, 0.55 ) }
    dend_47 { pt3dadd( 33.9518, 125.179, -59.621, 0.28 ) }
    dend_47 { pt3dadd( 34.4311, 125.99, -59.195, 0.55 ) }
    dend_47 { pt3dadd( 35.9734, 128.386, -57.8195, 0.55 ) }
    dend_47 { pt3dadd( 37.3586, 130.373, -56.7697, 0.55 ) }
    dend_47 { pt3dadd( 38.9439, 132.635, -55.5695, 0.55 ) }
    dend_47 { pt3dadd( 41.6642, 136.534, -53.5958, 0.28 ) }
    dend_47 { pt3dadd( 43.0955, 138.68, -52.5092, 0.28 ) }
    dend_47 { pt3dadd( 44.0066, 140.043, -51.8185, 0.28 ) }
    dend_47 { pt3dadd( 46.1057, 143.044, -50.3739, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 104.494, 9.13192, 40.4091, 0.55 ) }
    dend_41 { pt3dadd( 117.276, 11.6354, 44.4265, 0.55 ) }
    dend_41 { pt3dadd( 129.61, 14.4391, 49.5375, 0.55 ) }
    dend_41 { pt3dadd( 142.527, 17.5495, 52.6278, 0.55 ) }
    dend_41 { pt3dadd( 155.818, 17.7264, 55.4531, 0.55 ) }
    dend_41 { pt3dadd( 168.905, 16.2045, 58.7566, 0.55 ) }
    dend_41 { pt3dadd( 182.156, 13.3832, 59.9206, 0.55 ) }
    dend_41 { pt3dadd( 195.434, 11.0778, 61.669, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 104.494, 9.13192, 40.4091, 0.55 ) }
    dend_40 { pt3dadd( 114.812, 11.2523, 43.5898, 0.55 ) }
    dend_40 { pt3dadd( 124.104, 15.6878, 47.6859, 0.55 ) }
    dend_40 { pt3dadd( 132.3, 20.0353, 53.7226, 0.55 ) }
    dend_40 { pt3dadd( 139.986, 24.7229, 60.1805, 0.55 ) }
    dend_40 { pt3dadd( 148.338, 27.4262, 66.8244, 0.55 ) }
    dend_40 { pt3dadd( 155.802, 32.1592, 73.506, 0.55 ) }
    dend_40 { pt3dadd( 164.46, 37.4946, 78.0051, 0.55 ) }
    dend_40 { pt3dadd( 172.62, 43.0045, 83.1832, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.6835, -10.8657, -3.02759, 0.55 ) }
    dend_33 { pt3dadd( 17.4266, -11.7515, -3.00586, 0.55 ) }
    dend_33 { pt3dadd( 20.0902, -12.27, -3.41267, 0.55 ) }
    dend_33 { pt3dadd( 22.6402, -12.8773, -4.22643, 0.55 ) }
    dend_33 { pt3dadd( 24.0456, -13.2543, -4.83015, 0.55 ) }
    dend_33 { pt3dadd( 27.5081, -14.4117, -6.7752, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_33 { pt3dadd( 29.8123, -15.047, -8.21148, 0.55 ) }
    dend_33 { pt3dadd( 32.1731, -15.4026, -9.92715, 0.55 ) }
    dend_33 { pt3dadd( 34.5036, -15.6466, -11.6929, 0.55 ) }
    dend_33 { pt3dadd( 36.2434, -15.75, -12.9811, 0.55 ) }
    dend_33 { pt3dadd( 38.9876, -15.9645, -14.9231, 0.55 ) }
    dend_33 { pt3dadd( 43.0555, -16.2488, -17.4893, 0.55 ) }
    dend_33 { pt3dadd( 46.1213, -16.4803, -18.9706, 0.55 ) }
    dend_33 { pt3dadd( 48.2331, -16.5866, -19.7395, 0.55 ) }
    dend_33 { pt3dadd( 50.3365, -16.6373, -20.3388, 0.55 ) }
    dend_33 { pt3dadd( 52.1596, -16.6871, -20.7428, 0.55 ) }
    dend_33 { pt3dadd( 54.631, -16.8397, -21.2244, 0.55 ) }
    dend_33 { pt3dadd( 57.9824, -17.5044, -21.9199, 0.55 ) }
    dend_33 { pt3dadd( 61.2216, -18.3452, -22.7875, 0.55 ) }
    dend_33 { pt3dadd( 62.2557, -18.5796, -23.0958, 0.55 ) }
    dend_33 { pt3dadd( 64.3469, -18.8416, -23.7451, 0.55 ) }
    dend_33 { pt3dadd( 66.7397, -18.9165, -24.6003, 0.55 ) }
    dend_33 { pt3dadd( 68.2537, -18.7958, -25.3192, 0.55 ) }
    dend_33 { pt3dadd( 71.67, -18.1491, -26.992, 0.55 ) }
    dend_33 { pt3dadd( 73.585, -17.6629, -27.9618, 0.55 ) }
    dend_33 { pt3dadd( 76.3537, -16.7954, -29.4077, 0.55 ) }
    dend_33 { pt3dadd( 80.456, -15.2805, -31.6094, 0.83 ) }
    dend_33 { pt3dadd( 85.0689, -13.482, -34.0919, 0.55 ) }
    dend_33 { pt3dadd( 87.2559, -12.6192, -35.3424, 0.55 ) }
    dend_33 { pt3dadd( 90.5103, -11.408, -37.2768, 0.55 ) }
    dend_33 { pt3dadd( 93.798, -10.3341, -39.2387, 0.55 ) }
    dend_33 { pt3dadd( 96.1306, -9.58623, -40.5546, 0.55 ) }
    dend_33 { pt3dadd( 97.2208, -9.29877, -41.1195, 0.55 ) }
    dend_33 { pt3dadd( 98.2865, -9.19397, -41.6358, 0.55 ) }
    dend_33 { pt3dadd( 99.6166, -9.19569, -42.3629, 0.55 ) }
    dend_33 { pt3dadd( 101.407, -9.22865, -43.3695, 0.55 ) }
    dend_33 { pt3dadd( 103.78, -9.21468, -44.7216, 0.55 ) }
    dend_33 { pt3dadd( 107.644, -9.06522, -46.8796, 0.55 ) }
    dend_33 { pt3dadd( 111.355, -8.77254, -48.9525, 0.55 ) }
    dend_33 { pt3dadd( 113.744, -8.50898, -50.3049, 0.55 ) }
    dend_33 { pt3dadd( 116.636, -8.14074, -51.9133, 0.55 ) }
    dend_33 { pt3dadd( 119.574, -7.66338, -53.5315, 0.55 ) }
    dend_33 { pt3dadd( 121.495, -7.23178, -54.5168, 0.83 ) }
    dend_33 { pt3dadd( 124.238, -6.29576, -55.8855, 0.55 ) }
    dend_33 { pt3dadd( 125.026, -6.01338, -56.2681, 0.55 ) }
    dend_33 { pt3dadd( 127.128, -5.25219, -57.3074, 0.55 ) }
    dend_33 { pt3dadd( 130.007, -4.26962, -58.8741, 0.55 ) }
    dend_33 { pt3dadd( 131.353, -3.78639, -59.7646, 0.83 ) }
    dend_33 { pt3dadd( 135.87, -2.02502, -63.0397, 0.55 ) }
    dend_33 { pt3dadd( 137.888, -1.28147, -64.5671, 0.55 ) }
    dend_33 { pt3dadd( 141.466, -0.0270918, -67.2384, 0.28 ) }
    dend_33 { pt3dadd( 142.308, 0.248028, -67.8404, 0.55 ) }
    dend_33 { pt3dadd( 147.567, 1.74632, -71.404, 0.55 ) }
    dend_33 { pt3dadd( 149.259, 2.14594, -72.4708, 0.55 ) }
    dend_33 { pt3dadd( 151.207, 2.4816, -73.5234, 0.28 ) }
    dend_33 { pt3dadd( 153.17, 2.687, -74.5514, 0.55 ) }
    dend_33 { pt3dadd( 155.33, 2.65092, -75.5299, 0.28 ) }
    dend_33 { pt3dadd( 159.985, 2.21342, -77.3944, 0.55 ) }
    dend_33 { pt3dadd( 162.028, 1.82227, -78.088, 0.28 ) }
    dend_33 { pt3dadd( 164.69, 1.23197, -79.034, 0.55 ) }
    dend_33 { pt3dadd( 167.043, 0.68604, -79.8903, 0.28 ) }
    dend_33 { pt3dadd( 168.211, 0.403502, -80.3057, 0.55 ) }
    dend_33 { pt3dadd( 170.313, -0.0764733, -80.9636, 0.28 ) }
    dend_33 { pt3dadd( 172.084, -0.523687, -81.3694, 0.55 ) }
    dend_33 { pt3dadd( 173.854, -0.999835, -81.8089, 0.55 ) }
    dend_33 { pt3dadd( 175.326, -1.45055, -82.1675, 0.55 ) }
    dend_33 { pt3dadd( 177.526, -2.25714, -82.6597, 0.55 ) }
    dend_33 { pt3dadd( 178.602, -2.69956, -82.8965, 0.55 ) }
    dend_33 { pt3dadd( 182.05, -4.22025, -83.5573, 0.28 ) }
    dend_33 { pt3dadd( 183.892, -4.99583, -83.8542, 0.28 ) }
    dend_33 { pt3dadd( 184.922, -5.38072, -83.988, 0.55 ) }
    dend_33 { pt3dadd( 187.598, -6.19407, -84.3457, 0.28 ) }
    dend_33 { pt3dadd( 188.772, -6.48419, -84.5021, 0.28 ) }
    dend_33 { pt3dadd( 190.605, -6.64662, -84.7911, 0.28 ) }
    dend_33 { pt3dadd( 193.181, -6.57938, -85.1186, 0.28 ) }
    dend_33 { pt3dadd( 194.528, -6.42123, -85.3117, 0.55 ) }
    dend_33 { pt3dadd( 196.347, -6.05805, -85.6487, 0.28 ) }
    dend_33 { pt3dadd( 197.373, -5.7361, -85.9084, 0.55 ) }
    dend_33 { pt3dadd( 201.48, -4.29985, -87.2733, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 12.6835, -10.8657, -3.02759, 0.83 ) }
    dend_32 { pt3dadd( 14.3063, -12.9421, -3.63745, 0.83 ) }
    dend_32 { pt3dadd( 17.1122, -16.3463, -4.60134, 0.83 ) }
    dend_32 { pt3dadd( 18.9792, -18.5816, -5.19855, 0.83 ) }
    dend_32 { pt3dadd( 20.4863, -20.597, -5.5792, 0.83 ) }
    dend_32 { pt3dadd( 22.437, -23.4169, -5.9541, 0.83 ) }
    dend_32 { pt3dadd( 23.9765, -25.7542, -6.23389, 0.83 ) }
    dend_32 { pt3dadd( 26.588, -29.5971, -6.89722, 0.83 ) }
    dend_32 { pt3dadd( 28.5493, -32.3201, -7.54103, 0.83 ) }
    dend_32 { pt3dadd( 31.0194, -35.727, -8.57198, 0.55 ) }
    dend_32 { pt3dadd( 31.7925, -36.7628, -8.92972, 0.55 ) }
    dend_32 { pt3dadd( 33.4971, -38.791, -9.72243, 0.83 ) }
    dend_32 { pt3dadd( 36.915, -42.8294, -11.3406, 0.83 ) }
    dend_32 { pt3dadd( 38.7962, -45.0164, -12.1108, 0.83 ) }
    dend_32 { pt3dadd( 40.1746, -46.5578, -12.4511, 0.55 ) }
    dend_32 { pt3dadd( 42.2197, -48.7144, -12.6209, 0.55 ) }
    dend_32 { pt3dadd( 44.8581, -51.4929, -12.2017, 0.55 ) }
    dend_32 { pt3dadd( 47.86, -54.6831, -10.4247, 0.55 ) }
    dend_32 { pt3dadd( 49.8063, -56.7605, -8.42079, 0.55 ) }
    dend_32 { pt3dadd( 51.7088, -58.5443, -6.03953, 0.55 ) }
    dend_32 { pt3dadd( 52.7291, -59.2904, -4.73846, 0.55 ) }
    dend_32 { pt3dadd( 54.8442, -60.5204, -2.00023, 0.55 ) }
    dend_32 { pt3dadd( 56.6409, -61.3502, 0.338881, 0.55 ) }
    dend_32 { pt3dadd( 58.6116, -62.0382, 2.6592, 0.55 ) }
    dend_32 { pt3dadd( 60.9527, -62.9038, 5.26257, 0.55 ) }
    dend_32 { pt3dadd( 62.7364, -63.6392, 7.26255, 0.55 ) }
    dend_32 { pt3dadd( 64.8056, -64.7644, 9.52461, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 66.1994, -65.8453, 11.0686, 0.28 ) }
    dend_32 { pt3dadd( 66.8208, -66.477, 11.8491, 0.55 ) }
    dend_32 { pt3dadd( 67.6262, -67.58, 13.129, 0.55 ) }
    dend_32 { pt3dadd( 68.9707, -70.3339, 15.7027, 0.55 ) }
    dend_32 { pt3dadd( 69.8004, -72.4285, 17.3668, 0.55 ) }
    dend_32 { pt3dadd( 70.8842, -75.3203, 19.0931, 0.55 ) }
    dend_32 { pt3dadd( 71.2509, -76.3619, 19.6111, 0.55 ) }
    dend_32 { pt3dadd( 71.4601, -76.9379, 19.852, 0.55 ) }
    dend_32 { pt3dadd( 72.7853, -80.3178, 20.9868, 0.55 ) }
    dend_32 { pt3dadd( 73.6968, -82.5445, 21.4322, 0.55 ) }
    dend_32 { pt3dadd( 75.5231, -86.6641, 22.0296, 0.55 ) }
    dend_32 { pt3dadd( 76.0512, -87.7128, 22.1394, 0.83 ) }
    dend_32 { pt3dadd( 77.4135, -90.1659, 22.3349, 0.55 ) }
    dend_32 { pt3dadd( 79.0391, -92.8748, 22.5233, 0.55 ) }
    dend_32 { pt3dadd( 81.2265, -96.5504, 22.7607, 0.55 ) }
    dend_32 { pt3dadd( 82.3599, -98.4585, 22.8559, 0.55 ) }
    dend_32 { pt3dadd( 83.0402, -99.5128, 22.9221, 0.55 ) }
    dend_32 { pt3dadd( 85.2757, -102.815, 23.1655, 0.55 ) }
    dend_32 { pt3dadd( 87.4479, -106.073, 23.5558, 0.55 ) }
    dend_32 { pt3dadd( 89.6091, -109.396, 24.0898, 0.55 ) }
    dend_32 { pt3dadd( 90.3204, -110.53, 24.3038, 0.55 ) }
    dend_32 { pt3dadd( 91.6066, -112.766, 24.713, 0.55 ) }
    dend_32 { pt3dadd( 92.11, -113.771, 24.8993, 0.55 ) }
    dend_32 { pt3dadd( 93.6246, -117.216, 25.4975, 0.55 ) }
    dend_32 { pt3dadd( 93.7784, -117.587, 25.5566, 0.83 ) }
    dend_32 { pt3dadd( 94.7543, -120.017, 25.8629, 0.55 ) }
    dend_32 { pt3dadd( 95.1727, -121.25, 25.9414, 0.83 ) }
    dend_32 { pt3dadd( 95.903, -123.844, 25.9068, 0.55 ) }
    dend_32 { pt3dadd( 96.9851, -127.482, 25.2271, 0.55 ) }
    dend_32 { pt3dadd( 97.2615, -128.32, 24.914, 0.83 ) }
    dend_32 { pt3dadd( 98.3703, -131.433, 23.4055, 0.55 ) }
    dend_32 { pt3dadd( 99.2764, -133.933, 21.9737, 0.55 ) }
    dend_32 { pt3dadd( 99.9096, -135.658, 20.8045, 0.83 ) }
    dend_32 { pt3dadd( 101.687, -140.419, 16.7313, 0.55 ) }
    dend_32 { pt3dadd( 102.366, -142.197, 14.826, 0.55 ) }
    dend_32 { pt3dadd( 102.836, -143.297, 13.4425, 0.83 ) }
    dend_32 { pt3dadd( 108.322, -153.046, 15.4138, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 37/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.2745, -22.015, -4.81268, 1.11 ) }
    dend_26 { pt3dadd( 12.9535, -24.5181, -4.76417, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.2745, -22.015, -4.81268, 0.55 ) }
    dend_23 { pt3dadd( 13.913, -22.5029, -6.26992, 0.55 ) }
    dend_23 { pt3dadd( 15.9044, -23.7541, -10.7399, 0.55 ) }
    dend_23 { pt3dadd( 16.7058, -24.3109, -12.4477, 0.55 ) }
    dend_23 { pt3dadd( 18.1277, -25.1701, -15.2417, 0.55 ) }
    dend_23 { pt3dadd( 19.9252, -26.0328, -18.8321, 0.55 ) }
    dend_23 { pt3dadd( 22.2774, -26.7654, -23.7245, 0.83 ) }
    dend_23 { pt3dadd( 24.6275, -26.9793, -28.4301, 0.55 ) }
    dend_23 { pt3dadd( 25.9694, -26.7463, -31.0414, 0.55 ) }
    dend_23 { pt3dadd( 27.1714, -26.2023, -33.4992, 0.55 ) }
    dend_23 { pt3dadd( 28.8143, -25.0316, -37.0324, 0.55 ) }
    dend_23 { pt3dadd( 31.2614, -22.6477, -42.2699, 0.55 ) }
    dend_23 { pt3dadd( 32.3775, -21.3992, -44.5455, 0.55 ) }
    dend_23 { pt3dadd( 34.2152, -19.1892, -47.9442, 0.28 ) }
    dend_23 { pt3dadd( 34.9835, -18.3152, -49.2856, 0.55 ) }
    dend_23 { pt3dadd( 37.391, -16.0927, -53.1269, 0.28 ) }
    dend_23 { pt3dadd( 38.2358, -15.4845, -54.2273, 0.55 ) }
    dend_23 { pt3dadd( 39.4125, -14.6951, -55.5926, 0.28 ) }
    dend_23 { pt3dadd( 40.4928, -14.0618, -56.9121, 0.55 ) }
    dend_23 { pt3dadd( 43.0008, -12.7351, -59.627, 0.28 ) }
    dend_23 { pt3dadd( 43.4571, -12.4757, -60.1434, 0.28 ) }
    dend_23 { pt3dadd( 44.3572, -11.9276, -61.1484, 0.28 ) }
    dend_23 { pt3dadd( 45.2929, -11.3544, -62.3023, 0.55 ) }
    dend_23 { pt3dadd( 47.5758, -9.90677, -65.4094, 0.28 ) }
    dend_23 { pt3dadd( 48.2711, -9.43984, -66.3979, 0.55 ) }
    dend_23 { pt3dadd( 49.8766, -8.27441, -68.6337, 0.55 ) }
    dend_23 { pt3dadd( 51.0028, -7.44311, -70.2631, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.0918, -13.3516, 12.7991, 0.55 ) }
    dend_13 { pt3dadd( -19.4114, -12.5127, 16.0002, 0.55 ) }
    dend_13 { pt3dadd( -20.2769, -12.1998, 17.1944, 0.55 ) }
    dend_13 { pt3dadd( -21.4372, -11.7802, 18.7956, 0.55 ) }
    dend_13 { pt3dadd( -22.8754, -11.2601, 20.7803, 0.55 ) }
    dend_13 { pt3dadd( -24.0881, -10.8216, 22.4538, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.0918, -13.3516, 12.7991, 0.55 ) }
    dend_12 { pt3dadd( -17.9167, -16.1977, 14.3875, 0.55 ) }
    dend_12 { pt3dadd( -18.5141, -18.5683, 15.5603, 0.55 ) }
    dend_12 { pt3dadd( -19.1547, -20.929, 16.7389, 0.55 ) }
    dend_12 { pt3dadd( -21.4156, -28.8938, 21.0735, 0.55 ) }
    dend_12 { pt3dadd( -22.4706, -33.0749, 23.518, 0.55 ) }
    dend_12 { pt3dadd( -23.1751, -36.2484, 25.442, 0.55 ) }
    dend_12 { pt3dadd( -23.6958, -39.0252, 27.2971, 0.55 ) }
    dend_12 { pt3dadd( -24.0339, -41.547, 29.1443, 0.55 ) }
    dend_12 { pt3dadd( -24.2133, -45.5755, 32.2238, 0.55 ) }
    dend_12 { pt3dadd( -24.119, -49.4241, 35.4137, 0.55 ) }
    dend_12 { pt3dadd( -24.0882, -50.3852, 36.3261, 0.55 ) }
    dend_12 { pt3dadd( -23.9314, -52.599, 38.556, 0.55 ) }
    dend_12 { pt3dadd( -23.7952, -53.7816, 39.7019, 0.55 ) }
    dend_12 { pt3dadd( -23.5056, -55.9914, 41.5276, 0.55 ) }
    dend_12 { pt3dadd( -23.232, -58.7978, 43.4845, 0.55 ) }
    dend_12 { pt3dadd( -23.2214, -61.5927, 45.1011, 0.55 ) }
    dend_12 { pt3dadd( -23.2688, -63.9597, 46.3748, 0.28 ) }
    dend_12 { pt3dadd( -23.3214, -65.3178, 47.0231, 0.28 ) }
    dend_12 { pt3dadd( -23.3914, -67.4313, 47.9359, 0.55 ) }
    dend_12 { pt3dadd( -23.4745, -70.0897, 49.0091, 0.55 ) }
    dend_12 { pt3dadd( -23.5499, -74.6134, 50.6083, 0.55 ) }
    dend_12 { pt3dadd( -23.6861, -78.7306, 52.0014, 0.28 ) }
    dend_12 { pt3dadd( -23.7936, -81.1702, 52.9072, 0.28 ) }
    dend_12 { pt3dadd( -23.9568, -84.1083, 54.0209, 0.28 ) }
    dend_12 { pt3dadd( -25.7958, -94.6285, 59.794, 0.28 ) }
    dend_12 { pt3dadd( -26.4906, -105.161, 65.7781, 0.28 ) }
    dend_12 { pt3dadd( -26.1857, -115.375, 72.2621, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -25.9347, -126.579, 77.0587, 0.28 ) }
    dend_12 { pt3dadd( -24.5626, -136.657, 83.5892, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 2/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -25.9115, -28.9747, -12.6434, 0.83 ) }
    dend_9 { pt3dadd( -26.7032, -31.7534, -12.875, 0.83 ) }
    dend_9 { pt3dadd( -27.2649, -33.7747, -12.8722, 0.83 ) }
    dend_9 { pt3dadd( -27.826, -35.9922, -12.8433, 0.83 ) }
    dend_9 { pt3dadd( -28.7003, -40.3004, -12.5126, 0.83 ) }
    dend_9 { pt3dadd( -29.0459, -42.2623, -12.3691, 0.83 ) }
    dend_9 { pt3dadd( -29.8589, -47.6647, -11.755, 0.83 ) }
    dend_9 { pt3dadd( -30.047, -48.9942, -11.5126, 0.55 ) }
    dend_9 { pt3dadd( -30.2246, -50.7885, -11.0983, 0.83 ) }
    dend_9 { pt3dadd( -30.6098, -55.8842, -9.78421, 0.55 ) }
    dend_9 { pt3dadd( -30.7913, -58.6551, -8.86381, 0.55 ) }
    dend_9 { pt3dadd( -31.102, -63.5645, -7.16772, 0.55 ) }
    dend_9 { pt3dadd( -31.2617, -65.5834, -6.51243, 0.55 ) }
    dend_9 { pt3dadd( -31.6757, -69.5602, -5.17131, 0.55 ) }
    dend_9 { pt3dadd( -31.9567, -71.6363, -4.47682, 0.55 ) }
    dend_9 { pt3dadd( -32.692, -76.3151, -3.05769, 0.55 ) }
    dend_9 { pt3dadd( -33.1272, -79.3438, -2.19651, 0.55 ) }
    dend_9 { pt3dadd( -33.7285, -83.9076, -1.25307, 0.55 ) }
    dend_9 { pt3dadd( -33.9741, -85.9724, -0.975473, 0.28 ) }
    dend_9 { pt3dadd( -34.2231, -87.9439, -0.825694, 0.55 ) }
    dend_9 { pt3dadd( -34.3863, -89.5218, -0.804279, 0.55 ) }
    dend_9 { pt3dadd( -34.5917, -92.028, -0.993479, 0.55 ) }
    dend_9 { pt3dadd( -34.6296, -93.9826, -1.23922, 0.55 ) }
    dend_9 { pt3dadd( -34.5323, -96.9047, -1.59511, 0.55 ) }
    dend_9 { pt3dadd( -34.449, -99.9599, -1.91677, 0.55 ) }
    dend_9 { pt3dadd( -34.4132, -101.946, -2.1343, 0.55 ) }
    dend_9 { pt3dadd( -34.4293, -103.976, -2.38602, 0.55 ) }
    dend_9 { pt3dadd( -34.5345, -108.34, -3.09487, 0.55 ) }
    dend_9 { pt3dadd( -34.678, -112.572, -3.83124, 0.28 ) }
    dend_9 { pt3dadd( -34.8036, -114.787, -4.26064, 0.55 ) }
    dend_9 { pt3dadd( -35.1424, -117.906, -4.91343, 0.55 ) }
    dend_9 { pt3dadd( -35.4875, -120.63, -5.39325, 0.55 ) }
    dend_9 { pt3dadd( -36.0338, -123.996, -5.91248, 0.55 ) }
    dend_9 { pt3dadd( -36.4132, -125.825, -6.14629, 0.55 ) }
    dend_9 { pt3dadd( -37.0664, -129.043, -6.45667, 0.55 ) }
    dend_9 { pt3dadd( -37.4622, -131.573, -6.5791, 0.55 ) }
    dend_9 { pt3dadd( -37.8519, -134.667, -6.51075, 0.55 ) }
    dend_9 { pt3dadd( -38.1849, -138.263, -6.26623, 0.55 ) }
    dend_9 { pt3dadd( -38.3542, -140.473, -6.09559, 0.55 ) }
    dend_9 { pt3dadd( -38.5364, -144.536, -5.88058, 0.55 ) }
    dend_9 { pt3dadd( -38.6101, -147.217, -5.78613, 0.55 ) }
    dend_9 { pt3dadd( -38.6948, -150.321, -5.76706, 0.28 ) }
    dend_9 { pt3dadd( -38.7291, -150.751, -5.79256, 0.55 ) }
    dend_9 { pt3dadd( -38.9732, -153.453, -6.04417, 0.28 ) }
    dend_9 { pt3dadd( -39.048, -154.141, -6.20342, 0.55 ) }
    dend_9 { pt3dadd( -39.2282, -154.944, -6.56389, 0.28 ) }
    dend_9 { pt3dadd( -39.4029, -155.48, -6.90032, 0.55 ) }
    dend_9 { pt3dadd( -40.0523, -157.565, -8.5494, 0.28 ) }
    dend_9 { pt3dadd( -40.4069, -158.867, -9.54532, 0.55 ) }
    dend_9 { pt3dadd( -40.6619, -160.145, -10.5006, 0.28 ) }
    dend_9 { pt3dadd( -40.7365, -160.688, -10.8677, 0.55 ) }
    dend_9 { pt3dadd( -40.7789, -161.959, -11.6872, 0.28 ) }
    dend_9 { pt3dadd( -40.7509, -162.954, -12.2916, 0.55 ) }
    dend_9 { pt3dadd( -40.7318, -164.802, -13.2493, 0.28 ) }
    dend_9 { pt3dadd( -40.7129, -165.717, -13.6245, 0.55 ) }
    dend_9 { pt3dadd( -40.5536, -167.987, -14.3582, 0.55 ) }
    dend_9 { pt3dadd( -40.1688, -171.066, -15.1211, 0.28 ) }
    dend_9 { pt3dadd( -39.7395, -174.158, -15.7409, 0.28 ) }
    dend_9 { pt3dadd( -39.3946, -176.483, -16.1629, 0.28 ) }
    dend_9 { pt3dadd( -38.6766, -180.192, -16.7569, 0.28 ) }
    dend_9 { pt3dadd( -37.6119, -184.769, -17.4501, 0.28 ) }
    dend_9 { pt3dadd( -36.418, -188.863, -18.0995, 0.28 ) }
    dend_9 { pt3dadd( -36.159, -189.677, -18.2096, 0.55 ) }
    dend_9 { pt3dadd( -35.8121, -190.6, -18.3487, 0.55 ) }
    dend_9 { pt3dadd( -34.3388, -193.933, -19.0886, 0.28 ) }
    dend_9 { pt3dadd( -33.6908, -195.327, -19.5706, 0.55 ) }
    dend_9 { pt3dadd( -31.8065, -198.624, -20.7323, 0.28 ) }
    dend_9 { pt3dadd( -30.9027, -209.795, -21.1169, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -25.9115, -28.9747, -12.6434, 0.55 ) }
    dend_8 { pt3dadd( -26.8512, -27.8809, -13.7888, 0.55 ) }
    dend_8 { pt3dadd( -27.1687, -27.5632, -14.1042, 0.83 ) }
    dend_8 { pt3dadd( -27.7392, -27.1549, -14.94, 0.55 ) }
    dend_8 { pt3dadd( -28.1334, -26.9589, -15.552, 0.83 ) }
    dend_8 { pt3dadd( -30.1342, -26.4192, -18.629, 0.83 ) }
    dend_8 { pt3dadd( -32.3084, -26.0788, -21.6747, 0.83 ) }
    dend_8 { pt3dadd( -33.9201, -26.1699, -23.7878, 1.11 ) }
    dend_8 { pt3dadd( -38.4548, -26.9896, -29.0862, 0.83 ) }
    dend_8 { pt3dadd( -39.5647, -27.3186, -30.3861, 1.11 ) }
    dend_8 { pt3dadd( -41.2117, -28.0597, -32.3216, 0.55 ) }
    dend_8 { pt3dadd( -42.2928, -28.7434, -33.5544, 0.55 ) }
    dend_8 { pt3dadd( -43.8401, -29.7785, -35.3163, 0.55 ) }
    dend_8 { pt3dadd( -44.8019, -30.4437, -36.5485, 0.55 ) }
    dend_8 { pt3dadd( -47.0716, -32.3438, -39.9431, 0.55 ) }
    dend_8 { pt3dadd( -47.809, -32.9929, -41.3281, 0.55 ) }
    dend_8 { pt3dadd( -48.0966, -33.2631, -41.9894, 0.55 ) }
    dend_8 { pt3dadd( -49.5059, -34.7807, -45.8348, 0.55 ) }
    dend_8 { pt3dadd( -50.2819, -35.6693, -48.1588, 0.83 ) }
    dend_8 { pt3dadd( -51.5353, -37.2904, -52.2835, 0.55 ) }
    dend_8 { pt3dadd( -52.1702, -38.1086, -54.2372, 0.55 ) }
    dend_8 { pt3dadd( -53.128, -39.2283, -56.991, 0.83 ) }
    dend_8 { pt3dadd( -53.4881, -39.668, -58.1309, 0.55 ) }
    dend_8 { pt3dadd( -53.7003, -39.9572, -58.8102, 0.83 ) }
    dend_8 { pt3dadd( -54.3109, -40.6945, -60.4143, 0.55 ) }
    dend_8 { pt3dadd( -55.1416, -41.6834, -62.429, 0.83 ) }
    dend_8 { pt3dadd( -56.001, -42.9213, -64.6555, 0.83 ) }
    dend_8 { pt3dadd( -57.5891, -45.1765, -68.498, 0.83 ) }
    dend_8 { pt3dadd( -58.2481, -45.97, -69.9069, 0.55 ) }
    dend_8 { pt3dadd( -58.7356, -46.5138, -70.8851, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_8 { pt3dadd( -59.8819, -47.7632, -72.988, 0.55 ) }
    dend_8 { pt3dadd( -60.4136, -48.4041, -73.9167, 0.83 ) }
    dend_8 { pt3dadd( -61.9432, -50.415, -76.3691, 0.55 ) }
    dend_8 { pt3dadd( -62.9135, -51.6328, -77.6441, 0.55 ) }
    dend_8 { pt3dadd( -63.5889, -52.3919, -78.5236, 0.28 ) }
    dend_8 { pt3dadd( -64.3788, -53.2158, -79.512, 0.55 ) }
    dend_8 { pt3dadd( -65.0712, -53.813, -80.3154, 0.28 ) }
    dend_8 { pt3dadd( -66.3612, -54.6021, -81.7998, 0.55 ) }
    dend_8 { pt3dadd( -67.2507, -55.0175, -82.8151, 0.28 ) }
    dend_8 { pt3dadd( -68.6423, -55.4649, -84.3804, 0.55 ) }
    dend_8 { pt3dadd( -70.2868, -55.8774, -86.102, 0.55 ) }
    dend_8 { pt3dadd( -72.1187, -56.2349, -87.8697, 0.55 ) }
    dend_8 { pt3dadd( -74.8096, -56.7363, -90.3038, 0.28 ) }
    dend_8 { pt3dadd( -75.7695, -56.9249, -91.0688, 0.28 ) }
    dend_8 { pt3dadd( -78.539, -57.5109, -93.0782, 0.55 ) }
    dend_8 { pt3dadd( -80.173, -57.8888, -94.0542, 0.55 ) }
    dend_8 { pt3dadd( -81.6385, -58.2873, -94.8066, 0.55 ) }
    dend_8 { pt3dadd( -82.8745, -58.7672, -95.3569, 0.28 ) }
    dend_8 { pt3dadd( -84.5359, -59.571, -95.9809, 0.55 ) }
    dend_8 { pt3dadd( -85.9658, -60.3211, -96.4801, 0.55 ) }
    dend_8 { pt3dadd( -87.3951, -61.1929, -97.0223, 0.55 ) }
    dend_8 { pt3dadd( -89.7436, -62.7011, -98.1065, 0.55 ) }
    dend_8 { pt3dadd( -91.2973, -63.6913, -99.1132, 0.55 ) }
    dend_8 { pt3dadd( -91.9301, -64.0882, -99.6384, 0.28 ) }
    dend_8 { pt3dadd( -92.7232, -64.6709, -100.474, 0.55 ) }
    dend_8 { pt3dadd( -93.9635, -65.735, -101.992, 0.28 ) }
    dend_8 { pt3dadd( -94.1296, -65.9007, -102.243, 0.83 ) }
    dend_8 { pt3dadd( -96.1703, -68.2071, -105.539, 0.55 ) }
    dend_8 { pt3dadd( -96.7966, -69.0145, -106.656, 0.55 ) }
    dend_8 { pt3dadd( -97.3672, -69.831, -107.755, 0.28 ) }
    dend_8 { pt3dadd( -98.4146, -71.5142, -109.755, 0.55 ) }
    dend_8 { pt3dadd( -99.1343, -72.6795, -111.021, 0.83 ) }
    dend_8 { pt3dadd( -100.103, -74.2121, -112.523, 0.28 ) }
    dend_8 { pt3dadd( -100.807, -75.2642, -113.387, 0.83 ) }
    dend_8 { pt3dadd( -102.84, -77.8388, -115.382, 0.55 ) }
    dend_8 { pt3dadd( -104.186, -79.2988, -116.467, 0.55 ) }
    dend_8 { pt3dadd( -104.793, -79.8811, -116.873, 0.83 ) }
    dend_8 { pt3dadd( -106.712, -81.5253, -117.761, 0.55 ) }
    dend_8 { pt3dadd( -108.401, -82.8637, -118.43, 0.55 ) }
    dend_8 { pt3dadd( -110.778, -84.617, -119.134, 0.28 ) }
    dend_8 { pt3dadd( -111.793, -85.2973, -119.293, 0.55 ) }
    dend_8 { pt3dadd( -113.054, -86.091, -119.462, 0.28 ) }
    dend_8 { pt3dadd( -116.495, -88.3719, -119.709, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 43/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -20.6557, -12.5574, -7.50858, 0.83 ) }
    dend_6 { pt3dadd( -24.2063, -9.9583, -9.37486, 0.83 ) }
    dend_6 { pt3dadd( -27.9478, -7.52844, -11.0692, 0.83 ) }
    dend_6 { pt3dadd( -29.4258, -6.57753, -11.6214, 0.83 ) }
    dend_6 { pt3dadd( -32.1171, -4.97282, -12.2824, 0.83 ) }
    dend_6 { pt3dadd( -33.9518, -3.95607, -12.5953, 0.83 ) }
    dend_6 { pt3dadd( -36.4604, -2.59562, -12.9199, 0.83 ) }
    dend_6 { pt3dadd( -38.8841, -1.26529, -13.0998, 0.83 ) }
    dend_6 { pt3dadd( -40.7534, -0.253929, -13.0244, 0.83 ) }
    dend_6 { pt3dadd( -43.8654, 1.35883, -12.8084, 0.83 ) }
    dend_6 { pt3dadd( -45.9566, 2.38905, -12.6498, 0.83 ) }
    dend_6 { pt3dadd( -47.7103, 3.18821, -12.5449, 0.83 ) }
    dend_6 { pt3dadd( -49.2063, 3.93497, -12.6037, 0.83 ) }
    dend_6 { pt3dadd( -49.7324, 4.18355, -12.75, 0.83 ) }
    dend_6 { pt3dadd( -50.8443, 4.77103, -13.2723, 0.83 ) }
    dend_6 { pt3dadd( -51.7826, 5.38114, -13.8473, 0.83 ) }
    dend_6 { pt3dadd( -53.994, 6.97688, -15.2716, 0.83 ) }
    dend_6 { pt3dadd( -57.0684, 9.35125, -17.2263, 0.83 ) }
    dend_6 { pt3dadd( -59.8488, 11.7433, -18.9101, 0.55 ) }
    dend_6 { pt3dadd( -61.3369, 13.1754, -19.7645, 0.83 ) }
    dend_6 { pt3dadd( -62.5, 14.2953, -20.3321, 0.55 ) }
    dend_6 { pt3dadd( -64.1621, 15.8884, -20.9985, 0.55 ) }
    dend_6 { pt3dadd( -65.4009, 16.8396, -21.4276, 0.55 ) }
    dend_6 { pt3dadd( -67.6969, 17.9363, -21.9173, 0.55 ) }
    dend_6 { pt3dadd( -68.8592, 18.2002, -22.1204, 0.55 ) }
    dend_6 { pt3dadd( -72.4843, 18.3805, -22.6973, 0.55 ) }
    dend_6 { pt3dadd( -75.5293, 18.1813, -23.1434, 0.55 ) }
    dend_6 { pt3dadd( -80.7898, 17.5025, -23.7835, 0.55 ) }
    dend_6 { pt3dadd( -84.7331, 16.8996, -24.1714, 0.55 ) }
    dend_6 { pt3dadd( -87.2586, 16.4708, -24.3273, 0.55 ) }
    dend_6 { pt3dadd( -89.4291, 16.1368, -24.3567, 0.55 ) }
    dend_6 { pt3dadd( -91.8506, 15.8311, -24.1787, 0.55 ) }
    dend_6 { pt3dadd( -94.3201, 15.604, -23.7046, 0.55 ) }
    dend_6 { pt3dadd( -96.0098, 15.7881, -23.0958, 0.55 ) }
    dend_6 { pt3dadd( -97.8785, 16.3143, -22.062, 0.83 ) }
    dend_6 { pt3dadd( -99.1731, 16.8507, -21.1722, 0.55 ) }
    dend_6 { pt3dadd( -100.754, 17.6778, -19.9832, 0.83 ) }
    dend_6 { pt3dadd( -101.567, 18.1796, -19.357, 0.55 ) }
    dend_6 { pt3dadd( -103.825, 19.7427, -17.751, 0.83 ) }
    dend_6 { pt3dadd( -107.06, 22.0854, -15.973, 0.28 ) }
    dend_6 { pt3dadd( -107.768, 22.6394, -15.6636, 0.55 ) }
    dend_6 { pt3dadd( -109.406, 23.9761, -15.2826, 0.55 ) }
    dend_6 { pt3dadd( -111.126, 25.3772, -15.0744, 0.55 ) }
    dend_6 { pt3dadd( -112.489, 26.3841, -14.9992, 0.55 ) }
    dend_6 { pt3dadd( -115.001, 28.1696, -15.0534, 0.55 ) }
    dend_6 { pt3dadd( -116.217, 29.0541, -15.1957, 0.55 ) }
    dend_6 { pt3dadd( -119.421, 31.2428, -15.5699, 0.55 ) }
    dend_6 { pt3dadd( -122.643, 33.2639, -16.0824, 0.55 ) }
    dend_6 { pt3dadd( -124.529, 34.3437, -16.431, 0.55 ) }
    dend_6 { pt3dadd( -125.91, 35.071, -16.805, 0.83 ) }
    dend_6 { pt3dadd( -127.91, 36.1601, -17.551, 0.55 ) }
    dend_6 { pt3dadd( -129.444, 37.0391, -18.3508, 0.55 ) }
    dend_6 { pt3dadd( -131.106, 38.0873, -19.5276, 0.55 ) }
    dend_6 { pt3dadd( -133.116, 39.6867, -21.7148, 0.55 ) }
    dend_6 { pt3dadd( -134.747, 41.2744, -24.0833, 0.28 ) }
    dend_6 { pt3dadd( -135.361, 41.9694, -25.1536, 0.28 ) }
    dend_6 { pt3dadd( -136.264, 43.1936, -27.0066, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( -137.584, 45.4493, -30.3448, 0.28 ) }
    dend_6 { pt3dadd( -138.891, 48.1207, -34.1595, 0.28 ) }
    dend_6 { pt3dadd( -139.493, 49.5613, -36.246, 0.55 ) }
    dend_6 { pt3dadd( -139.745, 50.1917, -37.1026, 0.28 ) }
    dend_6 { pt3dadd( -140.015, 50.8153, -37.9834, 0.55 ) }
    dend_6 { pt3dadd( -140.791, 52.5885, -40.3845, 0.28 ) }
    dend_6 { pt3dadd( -140.983, 53.1603, -41.1806, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 7/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -20.6557, -12.5574, -7.50858, 0.83 ) }
    dend_3 { pt3dadd( -20.8836, -11.693, -9.86736, 0.83 ) }
    dend_3 { pt3dadd( -21.1463, -10.6965, -12.587, 0.83 ) }
    dend_3 { pt3dadd( -21.3722, -9.83975, -14.9252, 0.83 ) }
    dend_3 { pt3dadd( -21.7913, -8.24994, -19.2639, 0.83 ) }
    dend_3 { pt3dadd( -22.0566, -7.24365, -22.0101, 0.83 ) }
    dend_3 { pt3dadd( -22.4304, -5.8258, -25.8795, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 14/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 12.9535, -24.5181, -4.76417, 0.83 ) }
    dend_30 { pt3dadd( 14.4312, -26.5734, -4.92356, 0.83 ) }
    dend_30 { pt3dadd( 15.5142, -28.0149, -5.09322, 0.83 ) }
    dend_30 { pt3dadd( 16.4935, -29.4569, -5.36587, 0.83 ) }
    dend_30 { pt3dadd( 16.9246, -30.1466, -5.5238, 0.83 ) }
    dend_30 { pt3dadd( 17.7852, -31.6393, -5.86503, 0.83 ) }
    dend_30 { pt3dadd( 18.1312, -32.3327, -6.00992, 0.83 ) }
    dend_30 { pt3dadd( 18.8173, -34.1466, -6.41931, 0.83 ) }
    dend_30 { pt3dadd( 19.474, -36.016, -6.62867, 0.83 ) }
    dend_30 { pt3dadd( 20.175, -37.9825, -6.68628, 0.83 ) }
    dend_30 { pt3dadd( 20.8365, -39.836, -6.57778, 0.83 ) }
    dend_30 { pt3dadd( 21.7412, -42.3826, -6.2586, 0.83 ) }
    dend_30 { pt3dadd( 22.6205, -44.8239, -5.85043, 0.83 ) }
    dend_30 { pt3dadd( 24.3426, -49.4791, -4.87495, 0.83 ) }
    dend_30 { pt3dadd( 25.1828, -51.4681, -4.38963, 0.83 ) }
    dend_30 { pt3dadd( 25.7058, -52.6381, -4.09292, 0.55 ) }
    dend_30 { pt3dadd( 26.6634, -54.6357, -3.69415, 0.55 ) }
    dend_30 { pt3dadd( 27.3187, -55.8733, -3.53116, 0.83 ) }
    dend_30 { pt3dadd( 28.06, -57.2027, -3.56255, 0.55 ) }
    dend_30 { pt3dadd( 29.1169, -59.2112, -4.09227, 0.55 ) }
    dend_30 { pt3dadd( 29.81, -60.4699, -4.63044, 0.55 ) }
    dend_30 { pt3dadd( 31.0365, -62.5825, -5.8913, 0.55 ) }
    dend_30 { pt3dadd( 31.6754, -63.5902, -6.63681, 0.55 ) }
    dend_30 { pt3dadd( 32.9389, -65.3905, -8.13447, 0.55 ) }
    dend_30 { pt3dadd( 34.0019, -66.75, -9.32126, 0.55 ) }
    dend_30 { pt3dadd( 35.2915, -68.2052, -10.6192, 0.55 ) }
    dend_30 { pt3dadd( 36.7655, -69.6485, -11.842, 0.28 ) }
    dend_30 { pt3dadd( 37.9288, -70.6567, -12.6101, 0.55 ) }
    dend_30 { pt3dadd( 39.1585, -71.6439, -13.3042, 0.55 ) }
    dend_30 { pt3dadd( 40.7669, -72.8489, -13.9826, 0.55 ) }
    dend_30 { pt3dadd( 42.2559, -73.9586, -14.4555, 0.55 ) }
    dend_30 { pt3dadd( 43.9138, -75.1975, -14.8269, 0.55 ) }
    dend_30 { pt3dadd( 45.3253, -76.2135, -15.0882, 0.55 ) }
    dend_30 { pt3dadd( 46.2763, -76.9198, -15.293, 0.55 ) }
    dend_30 { pt3dadd( 47.9012, -78.0406, -15.5657, 0.55 ) }
    dend_30 { pt3dadd( 49.0117, -78.718, -15.6509, 0.55 ) }
    dend_30 { pt3dadd( 50.567, -79.555, -15.6258, 0.55 ) }
    dend_30 { pt3dadd( 51.899, -80.1537, -15.4989, 0.55 ) }
    dend_30 { pt3dadd( 53.4001, -80.7165, -15.2833, 0.28 ) }
    dend_30 { pt3dadd( 56.5896, -81.7315, -14.7424, 0.55 ) }
    dend_30 { pt3dadd( 58.8656, -82.3827, -14.3039, 0.55 ) }
    dend_30 { pt3dadd( 60.9436, -82.9119, -13.8796, 0.55 ) }
    dend_30 { pt3dadd( 62.0285, -83.186, -13.6392, 0.55 ) }
    dend_30 { pt3dadd( 64.132, -83.7101, -13.1706, 0.55 ) }
    dend_30 { pt3dadd( 65.7353, -84.0681, -12.8606, 0.28 ) }
    dend_30 { pt3dadd( 66.2782, -84.19, -12.8274, 0.55 ) }
    dend_30 { pt3dadd( 67.5997, -84.4152, -12.8499, 0.28 ) }
    dend_30 { pt3dadd( 68.008, -84.4758, -12.8748, 0.55 ) }
    dend_30 { pt3dadd( 69.4081, -84.66, -13.0279, 0.55 ) }
    dend_30 { pt3dadd( 70.4241, -84.767, -13.2055, 0.55 ) }
    dend_30 { pt3dadd( 71.7076, -84.8887, -13.4954, 0.28 ) }
    dend_30 { pt3dadd( 72.4525, -84.9229, -13.6639, 0.55 ) }
    dend_30 { pt3dadd( 73.7083, -84.9816, -13.9588, 0.28 ) }
    dend_30 { pt3dadd( 74.6195, -85.0203, -14.1646, 0.55 ) }
    dend_30 { pt3dadd( 76.2719, -85.0611, -14.5274, 0.28 ) }
    dend_30 { pt3dadd( 77.8333, -85.1256, -14.791, 0.55 ) }
    dend_30 { pt3dadd( 80.1442, -85.201, -15.0967, 0.28 ) }
    dend_30 { pt3dadd( 80.9687, -85.2127, -15.2023, 0.28 ) }
    dend_30 { pt3dadd( 81.9557, -85.1799, -15.3224, 0.28 ) }
    dend_30 { pt3dadd( 82.6169, -85.1689, -15.3922, 0.28 ) }
    dend_30 { pt3dadd( 84.321, -85.1401, -15.5064, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 75/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 12.9535, -24.5181, -4.76417, 0.83 ) }
    dend_27 { pt3dadd( 12.6284, -26.8325, -5.09682, 0.83 ) }
    dend_27 { pt3dadd( 12.3735, -28.6588, -5.36956, 0.83 ) }
    dend_27 { pt3dadd( 12.1133, -31.0393, -5.72112, 0.83 ) }
    dend_27 { pt3dadd( 11.8836, -33.2516, -6.04971, 0.83 ) }
    dend_27 { pt3dadd( 11.4187, -37.6401, -6.74236, 0.83 ) }
    dend_27 { pt3dadd( 11.1266, -40.4154, -7.18112, 0.83 ) }
    dend_27 { pt3dadd( 10.9632, -42.2403, -7.47669, 0.83 ) }
    dend_27 { pt3dadd( 10.7586, -45.0594, -7.93309, 0.83 ) }
    dend_27 { pt3dadd( 10.4868, -49.0354, -8.57218, 0.83 ) }
    dend_27 { pt3dadd( 10.3214, -52.4871, -9.11441, 0.83 ) }
    dend_27 { pt3dadd( 10.2111, -54.5484, -9.4204, 0.83 ) }
    dend_27 { pt3dadd( 10.0479, -57.383, -9.82288, 0.83 ) }
    dend_27 { pt3dadd( 9.88478, -59.6579, -10.1345, 0.83 ) }
    dend_27 { pt3dadd( 9.69578, -62.1455, -10.4478, 0.83 ) }
    dend_27 { pt3dadd( 9.58588, -64.4979, -10.7087, 0.83 ) }
    dend_27 { pt3dadd( 9.51998, -66.9195, -10.9388, 0.83 ) }
    dend_27 { pt3dadd( 9.48288, -69.9639, -11.2139, 0.83 ) }
    dend_27 { pt3dadd( 9.40099, -72.5964, -11.4287, 0.83 ) }
    dend_27 { pt3dadd( 9.29261, -75.7091, -11.5666, 0.83 ) }
    dend_27 { pt3dadd( 9.16555, -79.8246, -11.5936, 0.83 ) }
    dend_27 { pt3dadd( 9.06693, -82.3983, -11.5418, 0.83 ) }
    dend_27 { pt3dadd( 8.97004, -84.4554, -11.4496, 0.83 ) }
    dend_27 { pt3dadd( 8.68413, -89.9519, -11.023, 0.83 ) }
    dend_27 { pt3dadd( 8.43588, -94.0909, -10.5729, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_27 { pt3dadd( 8.30501, -95.7056, -10.3492, 0.83 ) }
    dend_27 { pt3dadd( 8.02934, -98.7932, -9.85879, 0.83 ) }
    dend_27 { pt3dadd( 7.8481, -100.918, -9.51643, 0.83 ) }
    dend_27 { pt3dadd( 7.66679, -103.35, -9.105, 0.83 ) }
    dend_27 { pt3dadd( 7.53075, -105.631, -8.74747, 0.83 ) }
    dend_27 { pt3dadd( 7.26408, -108.556, -8.41569, 0.83 ) }
    dend_27 { pt3dadd( 6.88124, -111.86, -8.12467, 0.83 ) }
    dend_27 { pt3dadd( 6.72662, -113.218, -8.02675, 0.83 ) }
    dend_27 { pt3dadd( 6.42435, -115.913, -7.93828, 0.55 ) }
    dend_27 { pt3dadd( 6.20084, -118.311, -7.95199, 0.55 ) }
    dend_27 { pt3dadd( 6.12347, -119.946, -8.00651, 0.55 ) }
    dend_27 { pt3dadd( 6.07776, -121.992, -8.12726, 0.55 ) }
    dend_27 { pt3dadd( 6.05982, -124.408, -8.26531, 0.55 ) }
    dend_27 { pt3dadd( 6.12397, -126.969, -8.40961, 0.55 ) }
    dend_27 { pt3dadd( 6.28769, -129.392, -8.55722, 0.55 ) }
    dend_27 { pt3dadd( 6.55506, -132.459, -8.57492, 0.55 ) }
    dend_27 { pt3dadd( 6.77629, -135.104, -8.50871, 0.55 ) }
    dend_27 { pt3dadd( 6.96134, -137.496, -8.3942, 0.55 ) }
    dend_27 { pt3dadd( 7.0544, -139.424, -8.19649, 0.55 ) }
    dend_27 { pt3dadd( 7.13961, -141.576, -7.86193, 0.55 ) }
    dend_27 { pt3dadd( 7.20657, -145.489, -7.129, 0.55 ) }
    dend_27 { pt3dadd( 7.1676, -147.312, -6.75939, 0.55 ) }
    dend_27 { pt3dadd( 7.0412, -149.993, -6.21018, 0.55 ) }
    dend_27 { pt3dadd( 6.8899, -153.447, -5.52086, 0.55 ) }
    dend_27 { pt3dadd( 6.79073, -155.799, -5.03809, 0.55 ) }
    dend_27 { pt3dadd( 6.593, -159.42, -4.32402, 0.55 ) }
    dend_27 { pt3dadd( 6.33892, -163.795, -3.57094, 0.55 ) }
    dend_27 { pt3dadd( 6.23308, -165.378, -3.29145, 0.55 ) }
    dend_27 { pt3dadd( 6.08333, -167.904, -2.8667, 0.55 ) }
    dend_27 { pt3dadd( 6.00897, -170.599, -2.49208, 0.55 ) }
    dend_27 { pt3dadd( 6.00501, -173.355, -2.10825, 0.55 ) }
    dend_27 { pt3dadd( 6.12367, -176.291, -1.69632, 0.55 ) }
    dend_27 { pt3dadd( 6.21491, -177.965, -1.50409, 0.55 ) }
    dend_27 { pt3dadd( 6.33153, -180.663, -1.26441, 0.55 ) }
    dend_27 { pt3dadd( 6.41249, -183.252, -1.08561, 0.55 ) }
    dend_27 { pt3dadd( 6.52592, -186.079, -0.933425, 0.55 ) }
    dend_27 { pt3dadd( 6.61756, -187.456, -0.86699, 0.55 ) }
    dend_27 { pt3dadd( 6.8267, -191.008, -0.719057, 0.55 ) }
    dend_27 { pt3dadd( 6.99278, -195.511, -0.58605, 0.55 ) }
    dend_27 { pt3dadd( 7.02473, -198.424, -0.518454, 0.55 ) }
    dend_27 { pt3dadd( 7.04379, -199.845, -0.483675, 0.55 ) }
    dend_27 { pt3dadd( 7.06319, -201.388, -0.440579, 0.55 ) }
    dend_27 { pt3dadd( 7.05774, -202.943, -0.405018, 0.55 ) }
    dend_27 { pt3dadd( 7.03987, -204.503, -0.355658, 0.55 ) }
    dend_27 { pt3dadd( 6.94688, -207.616, -0.298844, 0.55 ) }
    dend_27 { pt3dadd( 6.78616, -212.25, -0.239384, 0.55 ) }
    dend_27 { pt3dadd( 6.75582, -213.331, -0.224092, 0.55 ) }
    dend_27 { pt3dadd( 6.6681, -216.189, -0.170557, 0.55 ) }
    dend_27 { pt3dadd( 6.64552, -217.703, -0.140975, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 49/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 51.0028, -7.44311, -70.2631, 0.55 ) }
    dend_25 { pt3dadd( 52.072, -8.73785, -73.6488, 0.55 ) }
    dend_25 { pt3dadd( 53.1342, -9.86831, -76.5139, 0.55 ) }
    dend_25 { pt3dadd( 53.7477, -10.4827, -78.2074, 0.55 ) }
    dend_25 { pt3dadd( 55.7239, -12.3376, -83.435, 0.55 ) }
    dend_25 { pt3dadd( 56.4646, -13.0521, -85.4514, 0.55 ) }
    dend_25 { pt3dadd( 56.8884, -13.4305, -86.5306, 0.28 ) }
    dend_25 { pt3dadd( 58.8264, -14.9171, -90.97, 0.83 ) }
    dend_25 { pt3dadd( 60.6965, -15.9046, -94.8593, 0.28 ) }
    dend_25 { pt3dadd( 61.093, -16.0282, -95.5949, 0.55 ) }
    dend_25 { pt3dadd( 62.8977, -16.3442, -98.5426, 0.28 ) }
    dend_25 { pt3dadd( 63.9997, -16.4148, -100.234, 0.28 ) }
    dend_25 { pt3dadd( 65.1364, -16.4113, -101.848, 0.83 ) }
    dend_25 { pt3dadd( 68.5474, -16.3054, -106.265, 0.28 ) }
    dend_25 { pt3dadd( 69.5254, -16.2651, -107.417, 0.28 ) }
    dend_25 { pt3dadd( 72.4901, -16.1079, -110.916, 0.28 ) }
    dend_25 { pt3dadd( 72.7569, -16.0899, -111.22, 0.55 ) }
    dend_25 { pt3dadd( 74.9106, -16.048, -113.852, 0.28 ) }
    dend_25 { pt3dadd( 76.5231, -16.1615, -115.803, 0.28 ) }
    dend_25 { pt3dadd( 77.9086, -16.4527, -117.397, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 51.0028, -7.44311, -70.2631, 0.28 ) }
    dend_24 { pt3dadd( 51.6477, -6.80855, -70.9587, 0.28 ) }
    dend_24 { pt3dadd( 52.1779, -6.22825, -71.8124, 0.55 ) }
    dend_24 { pt3dadd( 52.949, -5.47898, -73.0349, 0.28 ) }
    dend_24 { pt3dadd( 53.1689, -5.27967, -73.3761, 0.55 ) }
    dend_24 { pt3dadd( 55.126, -3.43239, -76.3094, 0.55 ) }
    dend_24 { pt3dadd( 57.4783, -1.13103, -79.7999, 0.28 ) }
    dend_24 { pt3dadd( 59.801, 1.13394, -83.3446, 0.55 ) }
    dend_24 { pt3dadd( 60.7079, 1.99964, -84.752, 0.28 ) }
    dend_24 { pt3dadd( 62.0743, 3.26257, -86.8512, 0.28 ) }
    dend_24 { pt3dadd( 64.2433, 5.13653, -90.2634, 0.28 ) }
    dend_24 { pt3dadd( 64.8281, 5.62664, -91.1758, 0.28 ) }
    dend_24 { pt3dadd( 65.5313, 6.17122, -92.2257, 0.55 ) }
    dend_24 { pt3dadd( 67.0175, 7.31476, -94.4404, 0.28 ) }
    dend_24 { pt3dadd( 68.1169, 8.20299, -96.1109, 0.55 ) }
    dend_24 { pt3dadd( 71.9092, 11.2049, -101.805, 0.28 ) }
    dend_24 { pt3dadd( 73.2018, 12.2112, -103.772, 0.28 ) }
    dend_24 { pt3dadd( 74.1768, 13.0203, -105.213, 0.55 ) }
    dend_24 { pt3dadd( 77.046, 15.6144, -109.395, 0.28 ) }
    dend_24 { pt3dadd( 78.2521, 16.7604, -111.037, 0.28 ) }
    dend_24 { pt3dadd( 78.9375, 17.4266, -111.896, 0.55 ) }
    dend_24 { pt3dadd( 81.0267, 19.4969, -113.928, 0.28 ) }
    dend_24 { pt3dadd( 82.3214, 20.7134, -115.038, 0.28 ) }
    dend_24 { pt3dadd( 83.514, 21.7643, -115.937, 0.55 ) }
    dend_24 { pt3dadd( 84.603, 22.6287, -116.462, 0.28 ) }
    dend_24 { pt3dadd( 84.8483, 22.8101, -116.572, 0.55 ) }
    dend_24 { pt3dadd( 87.4565, 24.6444, -117.445, 0.28 ) }
    dend_24 { pt3dadd( 88.5744, 25.3636, -117.64, 0.55 ) }
    dend_24 { pt3dadd( 90.895, 26.7249, -117.935, 0.28 ) }
    dend_24 { pt3dadd( 92.4975, 27.6261, -118.038, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -24.0881, -10.8216, 22.4538, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_15 { pt3dadd( -28.4953, -9.50276, 27.1173, 0.28 ) }
    dend_15 { pt3dadd( -29.2529, -9.27606, 27.9189, 0.28 ) }
    dend_15 { pt3dadd( -29.875, -9.0899, 28.5772, 0.55 ) }
    dend_15 { pt3dadd( -31.1662, -8.70353, 29.9435, 0.28 ) }
    dend_15 { pt3dadd( -32.2448, -8.3808, 31.0848, 0.28 ) }
    dend_15 { pt3dadd( -33.154, -8.10871, 32.0469, 0.55 ) }
    dend_15 { pt3dadd( -42.2729, -6.70179, 37.5477, 0.55 ) }
    dend_15 { pt3dadd( -51.0514, -3.32726, 42.831, 0.55 ) }
    dend_15 { pt3dadd( -59.8238, 0.846668, 47.5892, 0.55 ) }
    dend_15 { pt3dadd( -68.9288, 3.1773, 52.8284, 0.55 ) }
    dend_15 { pt3dadd( -77.5483, 7.09641, 58.0334, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 11/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -24.0881, -10.8216, 22.4538, 0.28 ) }
    dend_14 { pt3dadd( -24.5593, -10.514, 23.4425, 0.28 ) }
    dend_14 { pt3dadd( -25.2256, -10.0232, 24.6488, 0.28 ) }
    dend_14 { pt3dadd( -25.977, -9.33687, 25.927, 0.83 ) }
    dend_14 { pt3dadd( -27.9518, -7.53291, 29.2867, 0.28 ) }
    dend_14 { pt3dadd( -28.5403, -6.99534, 30.2879, 0.28 ) }
    dend_14 { pt3dadd( -29.5269, -6.09416, 31.9663, 0.28 ) }
    dend_14 { pt3dadd( -30.2248, -5.54615, 33.0321, 0.28 ) }
    dend_14 { pt3dadd( -30.978, -5.01821, 33.9161, 0.55 ) }
    dend_14 { pt3dadd( -35.8327, -1.297, 40.6878, 0.55 ) }
    dend_14 { pt3dadd( -39.6957, 3.09497, 47.7342, 0.55 ) }
    dend_14 { pt3dadd( -43.0931, 6.31916, 55.552, 0.55 ) }
    dend_14 { pt3dadd( -47.0867, 7.92464, 63.5337, 0.55 ) }
    dend_14 { pt3dadd( -52.2236, 8.27375, 70.9784, 0.55 ) }
    dend_14 { pt3dadd( -57.41, 8.59596, 78.3898, 0.55 ) }
    dend_14 { pt3dadd( -62.9493, 9.45675, 85.5011, 0.55 ) }
    dend_14 { pt3dadd( -66.9314, 9.43337, 93.6289, 0.55 ) }
    dend_14 { pt3dadd( -69.686, 8.9333, 102.236, 0.55 ) }
    dend_14 { pt3dadd( -72.3707, 9.45168, 110.868, 0.55 ) }
    dend_14 { pt3dadd( -73.6993, 10.1961, 119.798, 0.55 ) }
    dend_14 { pt3dadd( -74.3617, 12.4816, 128.572, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -22.4304, -5.8258, -25.8795, 0.55 ) }
    dend_5 { pt3dadd( -23.8657, -4.5054, -31.4346, 0.55 ) }
    dend_5 { pt3dadd( -24.4698, -4.09293, -33.4805, 0.55 ) }
    dend_5 { pt3dadd( -25.1842, -3.93268, -35.41, 0.55 ) }
    dend_5 { pt3dadd( -26.0127, -3.81063, -37.594, 0.55 ) }
    dend_5 { pt3dadd( -27.5186, -3.95939, -41.5266, 0.55 ) }
    dend_5 { pt3dadd( -29.9742, -4.4635, -47.3007, 0.55 ) }
    dend_5 { pt3dadd( -30.3817, -4.63596, -48.125, 0.55 ) }
    dend_5 { pt3dadd( -32.2848, -5.60044, -51.816, 0.55 ) }
    dend_5 { pt3dadd( -33.9621, -6.57318, -54.9841, 0.55 ) }
    dend_5 { pt3dadd( -36.601, -8.24146, -59.7995, 0.55 ) }
    dend_5 { pt3dadd( -38.8134, -9.57087, -63.5624, 0.55 ) }
    dend_5 { pt3dadd( -40.7694, -10.6252, -66.632, 0.55 ) }
    dend_5 { pt3dadd( -42.2144, -11.3052, -68.9454, 0.55 ) }
    dend_5 { pt3dadd( -46.2348, -12.8926, -75.308, 0.55 ) }
    dend_5 { pt3dadd( -47.0528, -13.1865, -76.512, 0.55 ) }
    dend_5 { pt3dadd( -48.3701, -13.4826, -78.4131, 0.55 ) }
    dend_5 { pt3dadd( -50.7542, -13.9052, -81.85, 0.55 ) }
    dend_5 { pt3dadd( -52.2772, -14.2175, -84.2238, 0.28 ) }
    dend_5 { pt3dadd( -52.9759, -14.4292, -85.3885, 0.55 ) }
    dend_5 { pt3dadd( -53.4288, -14.5844, -86.1314, 0.55 ) }
    dend_5 { pt3dadd( -54.6049, -15.0611, -88.1822, 0.55 ) }
    dend_5 { pt3dadd( -56.5109, -16.0255, -91.6701, 0.55 ) }
    dend_5 { pt3dadd( -59.3967, -17.8769, -97.4938, 0.83 ) }
    dend_5 { pt3dadd( -61.0331, -18.8707, -100.763, 0.55 ) }
    dend_5 { pt3dadd( -62.0909, -19.4708, -103.012, 0.55 ) }
    dend_5 { pt3dadd( -63.4487, -20.2127, -105.949, 0.28 ) }
    dend_5 { pt3dadd( -65.4826, -21.1814, -110.026, 0.55 ) }
    dend_5 { pt3dadd( -68.0444, -22.0361, -114.627, 0.83 ) }
    dend_5 { pt3dadd( -69.8244, -22.2672, -117.196, 0.55 ) }
    dend_5 { pt3dadd( -73.1107, -22.217, -121.437, 0.28 ) }
    dend_5 { pt3dadd( -73.9296, -22.0452, -122.342, 0.55 ) }
    dend_5 { pt3dadd( -78.6862, -19.8978, -126.238, 0.28 ) }
    dend_5 { pt3dadd( -79.9965, -18.9112, -127.061, 0.28 ) }
    dend_5 { pt3dadd( -81.3193, -17.5638, -127.813, 0.83 ) }
    dend_5 { pt3dadd( -83.2352, -14.954, -129.294, 0.28 ) }
    dend_5 { pt3dadd( -84.2355, -13.1741, -130.266, 0.55 ) }
    dend_5 { pt3dadd( -85.8182, -9.33008, -132.745, 0.28 ) }
    dend_5 { pt3dadd( -86.4821, -7.17205, -134.309, 0.28 ) }
    dend_5 { pt3dadd( -86.8489, -5.68099, -135.335, 0.28 ) }
    dend_5 { pt3dadd( -87.3662, -3.08659, -137.357, 0.55 ) }
    dend_5 { pt3dadd( -87.6782, -1.16336, -138.884, 0.55 ) }
    dend_5 { pt3dadd( -88.0056, 1.15054, -141.157, 0.28 ) }
    dend_5 { pt3dadd( -88.2847, 2.92615, -143.211, 0.28 ) }
    dend_5 { pt3dadd( -88.5283, 4.14583, -144.721, 0.83 ) }
    dend_5 { pt3dadd( -89.6785, 8.64638, -150.333, 0.28 ) }
    dend_5 { pt3dadd( -90.1145, 10.1088, -152.113, 0.55 ) }
    dend_5 { pt3dadd( -91.2106, 13.7204, -156.419, 0.28 ) }
    dend_5 { pt3dadd( -91.7801, 15.594, -158.522, 0.28 ) }
    dend_5 { pt3dadd( -92.3487, 18.075, -160.91, 0.28 ) }
    dend_5 { pt3dadd( -92.5028, 19.0592, -161.641, 0.28 ) }
    dend_5 { pt3dadd( -92.6326, 20.4752, -162.239, 0.55 ) }
    dend_5 { pt3dadd( -92.6694, 21.9966, -162.713, 0.28 ) }
    dend_5 { pt3dadd( -92.6574, 22.6806, -162.833, 0.55 ) }
    dend_5 { pt3dadd( -92.4067, 26.5285, -163.535, 0.28 ) }
    dend_5 { pt3dadd( -92.3777, 27.2153, -163.673, 0.55 ) }
    dend_5 { pt3dadd( -92.4247, 29.476, -164.305, 0.28 ) }
    dend_5 { pt3dadd( -92.4481, 29.7639, -164.402, 0.55 ) }
    dend_5 { pt3dadd( -93.0058, 33.5942, -165.963, 0.28 ) }
    dend_5 { pt3dadd( -93.5858, 36.3491, -167.255, 0.28 ) }
    dend_5 { pt3dadd( -94.108, 38.1043, -168.202, 0.55 ) }
    dend_5 { pt3dadd( -95.1265, 41.0687, -169.963, 0.28 ) }
    dend_5 { pt3dadd( -95.3263, 41.562, -170.288, 0.55 ) }
    dend_5 { pt3dadd( -96.3608, 43.8748, -171.892, 0.28 ) }
    dend_5 { pt3dadd( -96.8527, 44.8281, -172.602, 0.28 ) }
    dend_5 { pt3dadd( -97.2991, 45.6215, -173.224, 0.55 ) }
    dend_5 { pt3dadd( -97.9465, 46.8661, -174.141, 0.28 ) }
    dend_5 { pt3dadd( -98.3636, 47.6219, -174.587, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( -98.6561, 48.1085, -174.875, 0.55 ) }
    dend_5 { pt3dadd( -99.1476, 48.8294, -175.285, 0.28 ) }
    dend_5 { pt3dadd( -99.5273, 49.3914, -175.594, 0.55 ) }
    dend_5 { pt3dadd( -100.344, 50.5579, -176.159, 0.28 ) }
    dend_5 { pt3dadd( -101.23, 51.772, -176.521, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -22.4304, -5.8258, -25.8795, 0.83 ) }
    dend_4 { pt3dadd( -21.9278, -6.98885, -28.3544, 0.83 ) }
    dend_4 { pt3dadd( -21.6918, -7.94563, -30.4073, 0.83 ) }
    dend_4 { pt3dadd( -20.6514, -10.6569, -36.2184, 0.83 ) }
    dend_4 { pt3dadd( -20.3997, -11.3272, -37.4337, 0.83 ) }
    dend_4 { pt3dadd( -20.2136, -11.9177, -38.3884, 0.83 ) }
    dend_4 { pt3dadd( -19.648, -13.995, -41.572, 0.83 ) }
    dend_4 { pt3dadd( -19.0885, -16.3002, -44.7868, 0.83 ) }
    dend_4 { pt3dadd( -18.1664, -20.5851, -49.8645, 0.83 ) }
    dend_4 { pt3dadd( -17.8168, -22.4502, -51.6105, 0.83 ) }
    dend_4 { pt3dadd( -17.5811, -23.7333, -52.6979, 0.83 ) }
    dend_4 { pt3dadd( -17.1199, -26.271, -54.731, 0.83 ) }
    dend_4 { pt3dadd( -16.5039, -28.8557, -56.8103, 0.83 ) }
    dend_4 { pt3dadd( -16.0815, -30.8976, -58.37, 0.83 ) }
    dend_4 { pt3dadd( -15.4956, -34.5566, -61.0751, 0.55 ) }
    dend_4 { pt3dadd( -15.3606, -35.2309, -61.6667, 0.55 ) }
    dend_4 { pt3dadd( -14.8457, -37.3953, -63.6242, 0.55 ) }
    dend_4 { pt3dadd( -14.199, -39.9136, -65.9515, 0.55 ) }
    dend_4 { pt3dadd( -14.0295, -40.4818, -66.5549, 0.55 ) }
    dend_4 { pt3dadd( -13.6017, -41.6538, -67.9126, 0.83 ) }
    dend_4 { pt3dadd( -12.0249, -45.4682, -72.1818, 0.55 ) }
    dend_4 { pt3dadd( -11.4946, -46.5927, -73.4233, 0.83 ) }
    dend_4 { pt3dadd( -10.5381, -48.4252, -75.4934, 0.55 ) }
    dend_4 { pt3dadd( -9.18294, -50.8771, -78.3426, 0.83 ) }
    dend_4 { pt3dadd( -7.6739, -53.1749, -81.3183, 0.55 ) }
    dend_4 { pt3dadd( -6.72378, -54.439, -83.0322, 0.55 ) }
    dend_4 { pt3dadd( -5.45347, -55.9591, -85.196, 0.83 ) }
    dend_4 { pt3dadd( -2.39819, -59.1876, -90.6095, 0.55 ) }
    dend_4 { pt3dadd( -1.77696, -59.7585, -91.6954, 0.83 ) }
    dend_4 { pt3dadd( 0.0570369, -61.1756, -94.8071, 0.28 ) }
    dend_4 { pt3dadd( 0.691329, -61.5768, -95.9808, 0.28 ) }
    dend_4 { pt3dadd( 1.4878, -61.9218, -97.6467, 0.55 ) }
    dend_4 { pt3dadd( 4.38795, -62.5375, -104.756, 0.28 ) }
    dend_4 { pt3dadd( 4.60935, -62.533, -105.348, 0.28 ) }
    dend_4 { pt3dadd( 5.26223, -62.4419, -107.383, 0.83 ) }
    dend_4 { pt3dadd( 6.26621, -62.0138, -111.289, 0.55 ) }
    dend_4 { pt3dadd( 6.79156, -61.558, -113.93, 0.55 ) }
    dend_4 { pt3dadd( 6.96639, -61.0806, -115.675, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 43/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 6.64552, -217.703, -0.140975, 0.55 ) }
    dend_29 { pt3dadd( 7.27796, -218.697, -0.0454461, 0.55 ) }
    dend_29 { pt3dadd( 7.8203, -219.55, 0.0364719, 0.55 ) }
    dend_29 { pt3dadd( 10.7149, -223.643, -0.0418895, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.64552, -217.703, -0.140975, 0.55 ) }
    dend_28 { pt3dadd( 6.69918, -219.015, -0.0557259, 0.55 ) }
    dend_28 { pt3dadd( 6.79775, -220.957, 0.0962645, 0.55 ) }
    dend_28 { pt3dadd( 6.93244, -223.158, 0.327127, 0.55 ) }
    dend_28 { pt3dadd( 7.15567, -226.865, 0.78285, 0.55 ) }
    dend_28 { pt3dadd( 7.24712, -228.607, 1.00078, 0.55 ) }
    dend_28 { pt3dadd( 7.38397, -232.729, 1.53684, 0.55 ) }
    dend_28 { pt3dadd( 7.40102, -237.476, 2.21869, 0.55 ) }
    dend_28 { pt3dadd( 7.21847, -240.64, 2.70385, 0.55 ) }
    dend_28 { pt3dadd( 6.8821, -243.614, 3.18289, 0.55 ) }
    dend_28 { pt3dadd( 6.65465, -245.191, 3.46674, 0.55 ) }
    dend_28 { pt3dadd( 6.41157, -246.54, 3.70581, 0.55 ) }
    dend_28 { pt3dadd( 5.89659, -248.457, 4.09426, 0.55 ) }
    dend_28 { pt3dadd( 4.8033, -251.038, 4.65118, 0.55 ) }
    dend_28 { pt3dadd( 4.07502, -252.335, 4.91644, 0.28 ) }
    dend_28 { pt3dadd( 2.76798, -254.273, 5.35289, 0.55 ) }
    dend_28 { pt3dadd( 2.96449, -263.256, 7.54844, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 64/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -77.5483, 7.09641, 58.0334, 0.55 ) }
    dend_19 { pt3dadd( -84.2654, 9.50454, 62.9958, 0.55 ) }
    dend_19 { pt3dadd( -90.6091, 11.7594, 68.4845, 0.55 ) }
    dend_19 { pt3dadd( -96.5287, 13.6128, 74.5505, 0.55 ) }
    dend_19 { pt3dadd( -102.95, 14.4603, 80.3014, 0.55 ) }
    dend_19 { pt3dadd( -110.344, 16.7314, 84.2635, 0.55 ) }
    dend_19 { pt3dadd( -116.948, 19.5968, 89.1566, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -77.5483, 7.09641, 58.0334, 0.55 ) }
    dend_16 { pt3dadd( -83.9929, 9.43994, 62.6735, 0.55 ) }
    dend_16 { pt3dadd( -90.4265, 11.1547, 67.5722, 0.55 ) }
    dend_16 { pt3dadd( -96.7415, 11.7021, 72.8539, 0.55 ) }
    dend_16 { pt3dadd( -102.32, 13.6223, 78.6562, 0.55 ) }
    dend_16 { pt3dadd( -106.705, 15.0153, 85.527, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -106.705, 15.0153, 85.527, 0.55 ) }
    dend_18 { pt3dadd( -113.981, 16.6514, 92.7991, 0.55 ) }
    dend_18 { pt3dadd( -120.395, 19.0475, 100.691, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -106.705, 15.0153, 85.527, 0.55 ) }
    dend_17 { pt3dadd( -114.0, 16.7895, 92.781, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_43 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_42 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_0 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_39 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_48 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_47 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_41 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_33 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_32 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_9 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_6 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_25 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_28 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_37 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_45 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_10 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_22 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_38 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_17 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_35 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_18 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_29 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_21, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 13
    dend_43 nseg = 9
    dend_42 nseg = 9
    dend_34 nseg = 7
    dend_0 nseg = 17
    dend_46 nseg = 3
    dend_39 nseg = 5
    dend_20 nseg = 11
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_41 nseg = 5
    dend_40 nseg = 5
    dend_33 nseg = 11
    dend_32 nseg = 9
    dend_23 nseg = 5
    dend_12 nseg = 7
    dend_9 nseg = 9
    dend_8 nseg = 9
    dend_6 nseg = 9
    dend_30 nseg = 5
    dend_27 nseg = 9
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 7
    dend_5 nseg = 11
    dend_4 nseg = 5
    dend_28 nseg = 3
    dend_19 nseg = 3
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_NBC_711b6a838e_0_0


