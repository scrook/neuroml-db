// Cell: bAC217_L23_BTC_d9b97f1242_0_0
/*
{
  "id" : "bAC217_L23_BTC_d9b97f1242_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.701782, -14.5938, 2.84454, 2.73269", "0.624028, -13.2198, 2.58654, 4.41229", "0.546274, -11.8458, 2.32855, 5.84991", "0.46852, -10.4718, 2.07055, 7.31637", "0.390766, -9.09779, 1.81255, 8.68275", "0.313011, -7.72379, 1.55455, 10.1324", "0.235257, -6.34979, 1.29656, 11.1056", "0.157503, -4.97579, 1.03856, 11.7054", "0.0797487, -3.60179, 0.780562, 12.0256", "0.00199453, -2.22779, 0.522565, 12.4948", "-0.0757597, -0.853785, 0.264567, 12.7838", "-0.153514, 0.520216, 0.00657008, 12.9275", "-0.231268, 1.89422, -0.251427, 12.8186", "-0.309022, 3.26822, -0.509424, 12.3668", "-0.386777, 4.64222, -0.767422, 11.8063", "-0.464531, 6.01622, -1.02542, 10.8607", "-0.542285, 7.39022, -1.28342, 9.60756", "-0.620039, 8.76422, -1.54141, 8.32491", "-0.697793, 10.1382, -1.79941, 6.57632", "-0.775548, 11.5122, -2.05741, 4.5422", "-0.853302, 12.8862, -2.3154, 2.90642" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.99768, 4.39237, 12.0608, 1.77", "-4.18135, 5.2182, 12.3288, 1.77", "-4.51276, 6.4982, 12.9125, 1.55", "-4.77653, 7.35405, 13.4048, 1.55", "-5.1648, 8.32484, 14.1239, 1.4", "-5.86997, 9.65314, 15.2829, 1.4", "-6.45133, 10.5184, 16.1231, 1.4", "-7.11282, 11.1954, 16.9407, 1.69", "-7.68852, 11.6126, 17.5351, 1.69", "-8.79393, 12.2271, 18.4531, 1.4", "-9.77551, 12.6748, 19.1301, 1.33", "-10.6603, 13.0486, 19.5174, 1.18", "-12.0643, 13.6908, 19.7969, 1.18", "-13.0452, 14.2114, 19.8251, 1.18", "-14.0248, 14.82, 19.8034, 1.33", "-15.302, 15.7938, 19.7071, 1.4", "-17.4802, 17.9026, 19.5048, 1.62", "-18.2817, 18.8953, 19.4431, 1.69", "-19.0917, 20.0839, 19.3811, 1.33", "-20.095, 21.8291, 19.3508, 1.62", "-20.5609, 22.8867, 19.4254, 1.62", "-20.8974, 24.0457, 19.7578, 1.84", "-21.0171, 24.6705, 20.1784, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.09232, -14.8961, 2.30081, 3.98", "1.09232, -14.8961, 2.30081, 3.98", "1.20829, -16.3914, 2.30081, 3.98", "1.3571, -18.31, 2.30081, 3.76", "1.50534, -20.2215, 2.30081, 3.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.877678, 13.3174, -4.94919, 2.58", "-0.877678, 13.3174, -4.94919, 2.58", "-0.379049, 14.9547, -4.61858, 2.14", "-0.103855, 15.8923, -4.41907, 2.14", "0.166592, 16.8924, -4.21019, 1.92", "0.534493, 18.4298, -3.88481, 1.69", "0.737023, 19.4047, -3.69265, 1.69", "0.88432, 20.3421, -3.53167, 1.69", "1.01, 21.7296, -3.34787, 1.92", "1.02362, 22.5708, -3.30288, 2.06", "0.955324, 23.8133, -3.40799, 1.99", "0.873015, 24.6288, -3.60207, 1.84", "0.757202, 25.8021, -4.00233, 1.69", "0.647078, 26.7777, -4.3945, 1.77", "0.502428, 27.9922, -4.9564, 1.69", "0.311705, 29.758, -5.86815, 1.92", "0.188225, 31.1374, -6.66783, 2.14", "0.12348, 32.3491, -7.39344, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.853302, 12.8862, -2.3154, 0.89243", "-1.70079, 27.8622, -2.3154, 0.89243", "-2.54828, 42.8383, -2.3154, 0.89243" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-21.0171, 24.6705, 20.1784, 0.66", "-22.478, 25.6558, 21.9584, 0.66", "-23.199, 26.2002, 22.6792, 0.59", "-24.1241, 26.9232, 23.4727, 0.59", "-24.8158, 27.4262, 23.9936, 0.52", "-25.6539, 27.9696, 24.565, 0.66", "-26.2437, 28.3248, 24.935, 0.52", "-26.8315, 28.6959, 25.2592, 0.52", "-27.585, 29.1363, 25.7649, 0.44", "-28.1527, 29.4131, 26.2352, 0.66", "-28.7889, 29.6485, 26.8773, 0.52", "-29.3511, 29.8243, 27.5078, 0.74", "-30.8193, 30.2364, 29.3234, 1.03", "-31.6452, 30.4553, 30.464, 0.66", "-32.34, 30.648, 31.5496, 0.59", "-32.8268, 30.8154, 32.4205, 0.74", "-40.3764, 34.4723, 38.8095, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-21.0171, 24.6705, 20.1784, 0.88", "-21.8456, 28.1904, 20.4994, 0.88", "-22.2034, 29.3906, 20.5617, 0.88", "-22.7117, 30.8828, 20.6554, 0.88", "-23.3385, 32.586, 20.7771, 0.88", "-23.9261, 34.2118, 20.9174, 0.81", "-24.459, 35.7564, 21.0882, 0.81", "-24.8654, 36.7933, 21.1635, 1.03", "-25.3823, 37.9899, 21.2799, 0.81", "-26.0151, 39.2925, 21.4384, 0.96", "-26.5659, 40.3455, 21.5807, 0.88", "-27.2142, 41.5963, 21.7413, 0.74", "-27.6483, 42.4524, 21.8524, 0.66", "-28.1277, 43.4595, 21.9706, 0.74", "-28.641, 44.6517, 22.0621, 0.81", "-28.998, 45.5867, 22.1178, 0.81", "-29.3523, 46.6787, 22.181, 0.88", "-29.6468, 47.8646, 22.2481, 1.03", "-29.884, 49.2603, 22.3404, 0.96", "-30.0849, 51.0162, 22.4438, 1.03", "-30.2158, 52.2665, 22.4971, 1.03", "-30.4322, 54.0925, 22.5688, 1.11", "-30.6355, 55.2374, 22.5712, 0.96", "-30.9895, 56.6436, 22.5211, 0.88", "-31.5169, 58.1923, 22.4671, 0.74", "-32.0745, 59.4868, 22.4477, 0.81", "-32.525, 60.3642, 22.4845, 0.96", "-33.5184, 62.0046, 22.6565, 1.11", "-34.0411, 62.7678, 22.8032, 1.11", "-34.8676, 63.865, 23.0959, 0.96", "-35.6415, 64.8678, 23.4166, 0.74", "-36.4875, 66.0228, 23.8014, 0.74", "-36.9555, 66.6819, 24.0119, 0.66", "-37.449, 67.3902, 24.2304, 0.59", "-38.2838, 68.5295, 24.488, 0.81", "-38.7154, 69.104, 24.5811, 0.96", "-39.2576, 69.8341, 24.6505, 0.96", "-40.0238, 70.95, 24.6771, 0.59", "-40.9129, 72.4635, 24.6301, 0.59", "-41.4957, 73.6692, 24.5296, 0.66", "-41.9521, 74.9448, 24.365, 0.96", "-42.1934, 75.9412, 24.194, 1.03", "-42.3451, 77.0503, 24.0144, 0.81", "-42.4128, 78.4729, 23.8025, 0.52", "-42.4026, 79.5358, 23.7065, 0.37", "-42.4147, 80.5542, 23.7332, 0.37", "-42.5182, 81.268, 23.8662, 0.44", "-42.9562, 82.7727, 24.4336, 0.44", "-43.3322, 83.6345, 24.8145, 0.66", "-43.8808, 84.7039, 25.2525, 1.03", "-44.2795, 85.5004, 25.5013, 1.18", "-44.6722, 86.4557, 25.6872, 1.25", "-44.9231, 87.5059, 25.7457, 1.4", "-45.0306, 89.1902, 25.6163, 1.25", "-44.9408, 90.2828, 25.433, 1.18", "-44.6663, 91.7629, 25.0154, 0.66", "-44.2925, 93.1386, 24.52, 0.66", "-43.7297, 94.7375, 23.8655, 0.66", "-43.3701, 95.5825, 23.4528, 0.81", "-42.8782, 96.5917, 22.9274, 0.96", "-42.3342, 97.7373, 22.3357, 0.81", "-41.8912, 98.7671, 21.8058, 0.88", "-41.5876, 99.7152, 21.3601, 0.88", "-41.2631, 101.349, 20.7565, 0.74", "-41.147, 102.245, 20.5192, 0.74", "-41.0207, 103.52, 20.334, 0.59", "-40.9733, 104.262, 20.2768, 0.59", "-40.949, 105.509, 20.1964, 0.59", "-41.0016, 107.354, 20.0649, 0.74", "-41.108, 108.448, 19.9769, 0.81", "-41.3, 109.72, 19.818, 0.81", "-41.6184, 111.435, 19.5449, 0.74", "-41.834, 112.596, 19.3025, 0.74", "-42.0406, 113.734, 19.0009, 0.74", "-42.3719, 115.612, 18.4254, 0.88", "-42.6747, 117.513, 17.766, 1.03", "-42.8594, 118.733, 17.3026, 1.03", "-42.963, 119.655, 16.9737, 1.69", "-43.1103, 121.392, 16.3889, 1.4", "-43.2095, 122.712, 15.9782, 0.74", "-43.307, 124.165, 15.5813, 0.74", "-43.3734, 124.802, 15.4167, 0.88", "-43.5987, 126.202, 15.069, 1.03", "-43.7486, 126.969, 14.8898, 1.11", "-44.0323, 128.498, 14.5292, 0.66", "-44.1837, 129.502, 14.2566, 0.66", "-44.262, 130.903, 13.7974, 0.81", "-44.2385, 132.146, 13.235, 1.03", "-44.1836, 133.284, 12.6039, 0.88", "-44.1316, 134.154, 12.0832, 0.66", "-44.1078, 135.316, 11.341, 0.66", "-44.2066, 136.369, 10.6625, 0.88", "-44.562, 137.582, 9.98602, 0.74", "-45.0687, 138.489, 9.54874, 0.66", "-45.4755, 139.118, 9.29799, 0.66", "-46.1611, 140.225, 8.89722, 0.52", "-46.5377, 141.015, 8.60928, 0.44", "-46.7215, 142.049, 8.20144, 0.44", "-46.5911, 142.87, 7.86286, 0.44", "-46.0107, 144.833, 6.92397, 0.52", "-45.5566, 146.111, 6.2836, 0.66", "-44.9571, 147.558, 5.52198, 0.59", "-44.6022, 148.384, 5.08052, 0.66", "-44.1418, 149.557, 4.46791, 0.74", "-43.7252, 151.04, 3.71718, 0.81", "-43.6084, 151.804, 3.32785, 0.88", "-43.5063, 153.216, 2.62041, 0.74", "-43.4888, 154.142, 2.12994, 0.74", "-43.5263, 155.359, 1.39856, 0.81", "-43.6396, 156.767, 0.464788, 0.74", "-43.7968, 157.81, -0.228239, 0.88", "-43.9248, 158.349, -0.581653, 0.88", "-44.431, 159.924, -1.61037, 0.96", "-44.7918, 160.97, -2.28301, 1.25", "-45.1053, 161.928, -2.84546, 0.74", "-45.4306, 162.98, -3.36667, 0.74", "-45.7258, 163.984, -3.77027, 1.03", "-46.0222, 165.1, -4.13657, 1.25", "-46.2599, 166.152, -4.41345, 1.03", "-46.4703, 167.467, -4.72115, 0.88", "-46.611, 169.158, -5.11287, 0.88", "-46.6369, 170.84, -5.50063, 0.88", "-46.5787, 172.639, -5.94682, 0.96", "-46.4867, 174.203, -6.33763, 1.03", "-46.3975, 175.683, -6.7242, 1.03", "-46.2999, 177.531, -7.15999, 0.88", "-46.238, 178.907, -7.44331, 0.88", "-46.2341, 180.297, -7.70032, 0.88", "-46.3503, 181.294, -7.82668, 0.66", "-46.7503, 182.396, -7.77954, 0.66", "-47.732, 183.89, -7.43393, 0.74", "-48.229, 184.458, -7.22715, 0.74", "-48.8548, 185.075, -6.96102, 0.74", "-49.8086, 185.978, -6.60746, 0.59", "-50.7859, 186.973, -6.44954, 0.88", "-51.0767, 187.353, -6.49571, 1.03", "-51.4335, 188.086, -6.79123, 0.81", "-51.6418, 188.947, -7.23454, 0.66", "-51.7983, 190.296, -7.96477, 0.59", "-51.9036, 192.144, -8.99078, 0.59", "-51.96, 193.354, -9.63522, 0.66", "-52.0434, 194.901, -10.3667, 0.81", "-52.1006, 196.244, -10.9254, 0.66", "-52.124, 198.298, -11.6621, 0.81", "-52.1148, 199.733, -12.1194, 0.88", "-52.1083, 201.302, -12.5889, 0.96", "-52.1543, 202.663, -13.0186, 0.96", "-52.2829, 203.956, -13.4581, 0.96", "-52.5953, 205.699, -14.1306, 0.74", "-52.9208, 206.941, -14.6617, 0.74", "-53.2144, 207.824, -15.0439, 0.74", "-53.5994, 208.871, -15.4923, 0.74", "-54.2379, 210.563, -16.2029, 0.74", "-54.7028, 211.795, -16.6183, 0.88", "-55.3306, 213.55, -17.0771, 0.88", "-55.92, 215.375, -17.4661, 0.88", "-56.3578, 216.88, -17.7558, 0.88", "-56.7135, 218.273, -18.0277, 0.81", "-57.11, 219.932, -18.354, 0.66", "-57.4825, 221.195, -18.6366, 0.59", "-57.8473, 222.048, -18.8482, 0.74", "-58.2864, 222.788, -19.0532, 0.74", "-58.8982, 223.724, -19.3668, 0.74", "-59.3441, 224.472, -19.6321, 0.66", "-59.8668, 225.505, -20.0161, 0.66", "-60.3938, 226.755, -20.4129, 0.52", "-60.8208, 227.972, -20.7681, 0.52", "-61.2279, 229.289, -21.1743, 0.59", "-61.7983, 231.078, -21.7812, 1.11", "-62.1636, 232.064, -22.1557, 1.33", "-62.5283, 232.889, -22.4858, 1.33", "-63.2511, 234.221, -23.016, 0.74", "-64.1002, 235.551, -23.5113, 0.59", "-64.9411, 236.713, -23.9111, 0.66", "-65.7371, 237.803, -24.2607, 0.66", "-66.5498, 238.947, -24.6581, 0.74", "-67.4535, 240.172, -25.1275, 0.81", "-68.1564, 241.055, -25.4628, 0.81", "-68.91, 241.935, -25.7935, 0.66", "-70.2917, 243.444, -26.4031, 0.66", "-71.5988, 244.702, -26.9819, 0.52", "-72.7046, 245.63, -27.4657, 0.44", "-73.3737, 246.139, -27.755, 0.59", "-74.0411, 246.594, -28.0083, 0.59", "-74.9044, 247.127, -28.296, 0.59", "-75.9358, 247.754, -28.5988, 0.66", "-76.5525, 248.203, -28.7597, 0.66", "-77.3825, 248.926, -29.0332, 0.66", "-78.2049, 249.699, -29.3518, 0.59", "-78.9776, 250.455, -29.7, 0.44", "-79.7047, 251.158, -30.076, 0.44", "-80.4344, 251.822, -30.4918, 0.88", "-81.0239, 252.311, -30.8342, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.50534, -20.2215, 2.30081, 1.47", "2.46238, -20.9595, 1.45718, 1.47", "3.21397, -21.6723, 0.744816, 1.03", "4.04677, -22.4856, -0.0804116, 0.44", "4.412, -22.8213, -0.420291, 0.66", "4.99659, -23.3187, -0.917463, 0.81", "5.54655, -23.7493, -1.34907, 0.74", "6.27512, -24.2958, -1.87024, 0.81", "7.34814, -24.9737, -2.47828, 0.44", "8.08131, -25.3658, -2.83547, 0.81", "8.73875, -25.6733, -3.09159, 1.11", "9.44724, -25.9591, -3.29704, 1.11", "10.2793, -26.2333, -3.4642, 0.74", "11.1537, -26.4618, -3.57373, 0.52", "12.6596, -26.7831, -3.6621, 0.52", "13.8315, -26.9809, -3.70052, 0.52", "14.4701, -27.052, -3.70264, 0.44", "15.525, -27.1007, -3.671, 0.66", "16.196, -27.0777, -3.63719, 1.18", "16.9075, -26.9955, -3.58971, 1.47", "17.7144, -26.8359, -3.52018, 1.03", "18.4749, -26.657, -3.48729, 0.81", "19.184, -26.4962, -3.48885, 0.59", "20.1073, -26.3006, -3.56565, 0.81", "20.8092, -26.1552, -3.67292, 0.81", "21.7202, -25.9593, -3.93645, 0.52", "22.2267, -25.8531, -4.14275, 0.52", "23.044, -25.6995, -4.5411, 0.74", "23.9426, -25.534, -5.0011, 0.66", "24.7181, -25.3915, -5.41998, 0.66", "26.0068, -25.1357, -6.13329, 0.52", "26.7881, -24.9462, -6.58611, 0.44", "27.6058, -24.7375, -7.03356, 0.44", "28.4201, -24.5426, -7.39278, 0.74", "28.982, -24.4228, -7.56899, 0.88", "29.6479, -24.3033, -7.70738, 0.74", "30.9214, -24.0957, -7.87029, 0.37", "31.5843, -24.0012, -8.00107, 0.37", "32.6216, -23.9247, -8.24532, 0.66", "33.3946, -23.9122, -8.43601, 0.66", "34.1069, -23.9128, -8.59546, 0.81", "34.6053, -23.9166, -8.69674, 0.81", "36.5525, -23.9067, -9.06006, 0.66", "37.7703, -23.8545, -9.31808, 0.66", "38.5494, -23.8095, -9.51984, 0.81", "39.4016, -23.731, -9.80329, 0.81", "40.2052, -23.6205, -10.1387, 0.66", "40.6996, -23.5134, -10.3816, 0.59", "41.2391, -23.3081, -10.7339, 0.59", "42.0969, -22.8595, -11.4875, 0.59", "43.1094, -22.2771, -12.4952, 0.96", "43.6378, -21.9915, -13.0364, 1.11", "44.0711, -21.7673, -13.4545, 1.18", "44.8642, -21.3703, -14.0759, 0.81", "45.8469, -20.8897, -14.6175, 0.52", "46.5001, -20.5871, -14.8206, 0.66", "47.3407, -20.2386, -14.9175, 0.66", "48.0659, -19.9361, -14.9327, 0.44", "49.1573, -19.4654, -14.8942, 0.44", "49.8871, -19.0975, -14.8143, 0.52", "50.5304, -18.6872, -14.7227, 0.66", "51.1166, -18.2318, -14.6195, 1.11", "51.4995, -17.8848, -14.5366, 1.25", "51.8313, -17.5676, -14.4587, 1.25", "52.3976, -17.0071, -14.3283, 1.25", "52.9856, -16.4401, -14.1836, 0.74", "53.8536, -15.6654, -13.9963, 0.88", "54.2168, -15.3486, -13.9312, 0.88", "54.5944, -15.0147, -13.8571, 0.88", "55.2464, -14.4113, -13.7773, 0.59", "56.0421, -13.6233, -13.7552, 0.52", "56.576, -13.0625, -13.8168, 0.52", "57.3405, -12.3061, -13.966, 0.81", "57.9306, -11.7418, -14.1001, 0.81", "58.9955, -10.7775, -14.3685, 0.96", "59.527, -10.3282, -14.514, 1.11", "60.2378, -9.77369, -14.7599, 1.4", "61.5273, -8.81845, -15.2538, 0.81", "62.4038, -8.19084, -15.6237, 0.81", "63.1076, -7.65136, -15.9435, 0.81", "63.4703, -7.33425, -16.1026, 0.81", "64.38, -6.39513, -16.5393, 0.52", "65.1366, -5.39198, -16.9664, 0.66", "65.5503, -4.65973, -17.2692, 0.59", "65.9409, -3.8474, -17.5537, 0.37", "66.3397, -2.91108, -17.8117, 1.03", "66.5304, -2.45222, -17.9077, 1.25", "66.7645, -1.92628, -17.9813, 1.25", "67.2265, -1.07106, -18.0841, 1.03", "67.6699, -0.389281, -18.1591, 1.18", "68.2758, 0.459107, -18.2423, 1.03", "68.8551, 1.27298, -18.3034, 1.18", "69.2698, 1.86758, -18.3316, 1.18", "69.7726, 2.57908, -18.3493, 0.74", "70.1715, 3.10969, -18.3545, 0.52", "70.6419, 3.66714, -18.3607, 0.52", "71.5034, 4.50862, -18.3757, 0.81", "72.1172, 5.03619, -18.3884, 0.88", "72.6201, 5.42884, -18.4003, 0.81", "73.4972, 6.00257, -18.4225, 0.37", "74.107, 6.32101, -18.4542, 0.29", "75.1285, 6.76222, -18.5747, 0.59", "75.5049, 6.91227, -18.6468, 0.66", "76.3289, 7.25234, -18.8498, 0.37", "77.3108, 7.69958, -19.1409, 0.59", "78.2008, 8.16932, -19.4125, 0.81", "79.4268, 8.87028, -19.7668, 1.99", "80.0582, 9.22807, -19.9376, 2.65", "80.5133, 9.47045, -20.0471, 2.65", "81.5544, 10.005, -20.2657, 1.18", "82.6778, 10.5646, -20.4475, 0.44", "83.6423, 10.9994, -20.5255, 0.74", "84.3104, 11.2706, -20.5221, 0.74", "84.9669, 11.5368, -20.4965, 0.81", "85.4012, 11.712, -20.4725, 0.81", "86.0792, 11.9767, -20.4177, 0.59", "86.8431, 12.2433, -20.3272, 0.44", "87.5789, 12.487, -20.1962, 0.37", "88.2457, 12.6914, -20.0519, 0.37", "89.23, 12.9637, -19.8542, 0.74", "89.8126, 13.1004, -19.7607, 0.88", "90.7153, 13.2587, -19.683, 0.66", "91.2928, 13.3429, -19.6937, 0.52", "91.9947, 13.4311, -19.7416, 0.52", "92.9709, 13.5736, -19.8281, 0.88", "93.6964, 13.7203, -19.9244, 0.88", "94.6348, 13.9725, -20.0769, 0.66", "95.758, 14.3418, -20.2705, 0.44", "96.5231, 14.6392, -20.3849, 0.44", "97.3231, 14.9736, -20.4717, 0.66", "98.1468, 15.3186, -20.5246, 0.52", "98.781, 15.5837, -20.5487, 0.52", "99.6109, 15.9258, -20.5616, 0.74", "100.409, 16.2426, -20.5284, 0.44", "101.45, 16.661, -20.4634, 0.44", "102.414, 17.0626, -20.3742, 0.88", "103.075, 17.3601, -20.292, 1.03", "103.973, 17.8046, -20.1528, 0.74", "105.18, 18.4944, -19.9298, 0.52", "105.701, 18.8194, -19.8214, 0.96", "106.168, 19.1435, -19.7188, 0.96", "106.814, 19.5984, -19.5826, 0.81", "107.762, 20.2109, -19.4164, 0.52", "108.407, 20.5666, -19.3334, 0.52", "109.501, 21.0529, -19.2402, 0.59", "110.115, 21.275, -19.2154, 0.81", "110.815, 21.4794, -19.2162, 0.81", "111.568, 21.6498, -19.2465, 0.66", "112.183, 21.7578, -19.2958, 0.59", "113.14, 21.9223, -19.3934, 0.59", "114.466, 22.229, -19.5494, 0.44", "115.224, 22.4338, -19.6838, 0.74", "115.824, 22.6185, -19.8139, 0.74", "116.106, 22.7133, -19.8811, 0.74", "116.989, 23.0259, -20.1305, 0.44", "117.96, 23.3754, -20.4327, 0.44", "119.356, 23.9261, -20.8425, 0.74", "119.984, 24.204, -21.0565, 0.74", "120.586, 24.5058, -21.2833, 0.74", "121.336, 24.9282, -21.5854, 0.52", "121.989, 25.3393, -21.8571, 0.37", "122.617, 25.7874, -22.1005, 0.66", "123.111, 26.2, -22.2546, 1.03", "123.534, 26.5602, -22.3696, 1.18", "123.842, 26.8175, -22.46, 1.18", "124.566, 27.3899, -22.6813, 0.59", "125.155, 27.8191, -22.8803, 0.44", "125.609, 28.1269, -23.0373, 0.44", "126.347, 28.6205, -23.2818, 0.81", "127.578, 29.3998, -23.6987, 1.11", "128.094, 29.7003, -23.8719, 1.11", "128.59, 29.966, -24.0356, 0.96", "129.08, 30.2208, -24.1988, 0.66", "129.811, 30.6014, -24.4381, 0.37", "130.664, 31.0364, -24.7042, 0.52", "131.53, 31.4546, -24.9325, 0.59", "132.167, 31.7574, -25.0932, 0.44", "132.94, 32.1256, -25.2996, 0.37", "133.944, 32.6172, -25.5786, 0.66", "134.565, 32.9369, -25.7487, 0.44", "135.18, 33.2604, -25.9156, 0.44", "136.128, 33.7426, -26.131, 0.88", "136.757, 34.0399, -26.2257, 1.03", "137.327, 34.2895, -26.2581, 1.03", "138.179, 34.6557, -26.2143, 0.29", "138.931, 34.9853, -26.1148, 0.29", "139.778, 35.3669, -25.9503, 0.29", "140.511, 35.6964, -25.7715, 0.44", "141.453, 36.0813, -25.5038, 1.11", "142.222, 36.365, -25.2849, 1.4", "142.37, 36.4196, -25.244, 1.55", "143.045, 36.6939, -25.0724, 0.88", "143.943, 37.0639, -24.9101, 0.29", "144.93, 37.4411, -24.7804, 0.29", "145.677, 37.709, -24.7152, 0.52", "146.11, 37.8617, -24.6953, 0.66", "146.602, 38.0465, -24.675, 0.44", "147.359, 38.3624, -24.634, 0.29", "147.944, 38.6404, -24.5992, 0.29", "148.878, 39.1076, -24.5482, 0.66", "149.387, 39.3317, -24.517, 1.11", "149.852, 39.5116, -24.5095, 0.81", "150.962, 39.9441, -24.5552, 0.52", "151.383, 40.1237, -24.6121, 0.74", "152.119, 40.4758, -24.7684, 0.74", "153.091, 40.9975, -25.059, 0.81", "154.078, 41.5582, -25.455, 0.44", "154.886, 42.0067, -25.8737, 0.81", "155.765, 42.4905, -26.4521, 1.33", "156.255, 42.7574, -26.8292, 1.33", "156.759, 43.0219, -27.2522, 1.11", "157.885, 43.5508, -28.221, 0.52", "158.867, 43.8971, -29.054, 1.18", "159.635, 44.0896, -29.6773, 1.33", "160.396, 44.2336, -30.2629, 1.03", "161.395, 44.3881, -30.9833, 0.22", "162.092, 44.476, -31.4358, 0.22", "163.898, 44.6813, -32.484, 0.88", "164.562, 44.7521, -32.8081, 1.03", "165.143, 44.7964, -33.0429, 1.18", "165.913, 44.8221, -33.3116, 0.96", "166.534, 44.8038, -33.5309, 0.66", "167.508, 44.6963, -33.859, 0.44", "168.526, 44.5204, -34.1608, 0.66", "169.375, 44.3372, -34.3949, 0.74", "169.988, 44.1915, -34.5471, 0.74", "171.334, 43.8542, -34.8377, 0.37", "172.138, 43.6608, -34.974, 0.52", "173.139, 43.4357, -35.0784, 0.29", "174.25, 43.2281, -35.1536, 0.81", "174.739, 43.1467, -35.1726, 1.47", "175.209, 43.0543, -35.1874, 1.62", "175.765, 42.9088, -35.2055, 1.62", "177.313, 42.3967, -35.3737, 0.37", "178.279, 41.9985, -35.5647, 0.29", "179.291, 41.4781, -35.8437, 0.29", "180.149, 40.9622, -36.1076, 0.29", "181.112, 40.3391, -36.4215, 1.47", "181.82, 39.8611, -36.685, 1.69", "182.19, 39.605, -36.8588, 1.84", "183.328, 38.8721, -37.4938, 0.52", "184.109, 38.4879, -37.9364, 0.44", "184.711, 38.2879, -38.2584, 0.81", "185.352, 38.1472, -38.583, 0.81", "186.245, 38.0209, -38.9794, 0.81", "187.585, 37.9455, -39.557, 0.29", "188.677, 37.9865, -40.043, 0.29", "189.203, 38.031, -40.2623, 0.52", "190.04, 38.1088, -40.5819, 0.66", "191.038, 38.1865, -40.9236, 0.81", "191.865, 38.2476, -41.1793, 0.96", "192.574, 38.3102, -41.3947, 0.74", "193.636, 38.4161, -41.7254, 0.22", "194.635, 38.5413, -42.0143, 0.22", "195.716, 38.7187, -42.2962, 0.22", "196.17, 38.8089, -42.3922, 0.44", "196.89, 38.9633, -42.5052, 0.44", "198.236, 39.3023, -42.6577, 0.29", "199.376, 39.6288, -42.7497, 1.03", "200.006, 39.8321, -42.7734, 1.25", "201.08, 40.2208, -42.8149, 0.22", "201.438, 40.3513, -42.836, 0.37", "202.452, 40.732, -42.9144, 0.22", "202.822, 40.8844, -42.9662, 0.52", "203.463, 41.1644, -43.0849, 0.59", "204.866, 41.7838, -43.4126, 0.22", "205.502, 42.0551, -43.5958, 0.59", "206.057, 42.2875, -43.7908, 0.59", "207.349, 42.813, -44.3422, 0.29", "208.276, 43.1957, -44.7987, 0.22", "208.79, 43.4022, -45.116, 0.22", "209.909, 43.7656, -45.965, 0.81", "210.658, 43.9622, -46.6002, 1.18", "211.392, 44.106, -47.2468, 0.74", "212.102, 44.1833, -47.9078, 0.44", "213.25, 44.3582, -49.0707, 0.74", "214.134, 44.5852, -50.0487, 0.52", "214.622, 44.766, -50.6327, 0.52", "215.109, 44.997, -51.2349, 0.37", "216.099, 45.5678, -52.4943, 0.37", "217.071, 46.2217, -53.7812, 2.5", "218.621, 47.4286, -55.8408, 0.29", "218.974, 47.7395, -56.3474, 0.29", "219.538, 48.2842, -57.2687, 0.74", "219.935, 48.6856, -57.9766, 1.18", "220.422, 49.1696, -58.8809, 1.4", "220.738, 49.4496, -59.4822, 1.4", "221.785, 50.3307, -61.4413, 0.29", "222.528, 50.8892, -62.7832, 0.44", "223.368, 51.4926, -64.2783, 0.22", "223.886, 51.8577, -65.2039, 0.22", "224.37, 52.2194, -66.1304, 0.74", "224.652, 52.4509, -66.6943, 0.88", "226.078, 53.7451, -69.5586, 0.29", "226.605, 54.3072, -70.6339, 0.52", "227.273, 55.1737, -72.0744, 0.81", "228.228, 56.5445, -74.2292, 0.81", "228.55, 57.0651, -75.0145, 0.29", "228.781, 57.523, -75.6631, 0.37", "229.04, 58.3665, -76.5842, 0.22", "229.146, 58.8262, -77.0028, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "1.50534, -20.2215, 2.30081, 3.68", "1.06227, -22.1391, 2.45275, 3.68", "0.533169, -24.3564, 2.60838, 3.32", "-0.0939926, -26.7237, 2.76725, 3.17", "-0.867045, -29.4394, 2.96267, 3.09", "-1.4985, -31.554, 3.11336, 2.8", "-2.06397, -33.4138, 3.27115, 2.73", "-2.60609, -35.1064, 3.43272, 2.65", "-3.09705, -36.5723, 3.59496, 2.65", "-3.59222, -38.0423, 3.76729, 2.65", "-4.12876, -39.5841, 3.9868, 2.65", "-4.81184, -41.5144, 4.31178, 2.5", "-5.08768, -42.3178, 4.46814, 2.58", "-5.42748, -43.397, 4.70204, 2.58", "-5.66367, -44.3388, 4.91754, 2.65" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.12348, 32.3491, -7.39344, 1.4", "0.361488, 33.1782, -7.45177, 1.4", "0.67492, 34.5595, -7.51683, 1.11", "0.906523, 35.7772, -7.56028, 0.88", "1.1494, 37.1783, -7.51346, 0.96", "1.42295, 38.4756, -7.55712, 1.11", "1.74109, 39.7007, -7.64836, 0.88", "2.09173, 40.9192, -7.81903, 0.88", "2.33796, 41.5233, -8.01547, 1.11", "3.11797, 42.7734, -8.71102, 1.11", "4.82599, 44.7541, -10.2916, 1.4", "5.32201, 45.2622, -10.7722, 1.62", "5.89477, 45.845, -11.3448, 1.11", "7.16498, 47.176, -12.5678, 0.88", "7.82613, 47.9425, -13.1577, 1.47", "8.27009, 48.5285, -13.5053, 1.47", "8.94943, 49.5735, -13.8365, 1.18", "9.56133, 50.5702, -14.0494, 1.33", "10.0679, 51.4262, -14.1512, 1.33", "10.6013, 52.387, -14.223, 1.18", "11.291, 53.7146, -14.3315, 1.03", "11.7357, 54.6852, -14.4567, 0.88", "12.1418, 55.6986, -14.6714, 0.88", "12.4558, 56.759, -15.0139, 1.03", "12.7847, 58.4464, -15.7541, 1.18", "12.9203, 59.4787, -16.2945, 1.11", "13.067, 60.9104, -17.1089, 1.25", "13.1752, 61.8678, -17.6728, 1.11", "13.3748, 63.0179, -18.3535, 0.96", "13.6514, 63.9677, -18.8635, 0.88", "14.1923, 65.0975, -19.3207, 0.88", "14.7581, 65.985, -19.5451, 0.96", "15.2704, 66.6741, -19.6037, 1.03", "15.8443, 67.4209, -19.5948, 1.03", "16.5147, 68.3329, -19.5286, 0.88", "16.8761, 68.9404, -19.4877, 0.74", "17.3249, 70.1671, -19.5141, 1.69", "17.4477, 70.8647, -19.5879, 2.28", "17.4962, 71.5768, -19.696, 2.28", "17.5095, 72.4875, -19.8488, 2.06", "17.5155, 73.4582, -20.0136, 1.62", "17.578, 74.662, -20.2261, 1.18", "17.6637, 75.3933, -20.3614, 1.4", "17.8164, 76.1962, -20.5169, 1.4", "18.0649, 77.1862, -20.7588, 1.18", "18.3081, 78.0618, -21.0084, 1.03", "18.7604, 79.5372, -21.503, 0.81", "19.0633, 80.4346, -21.8282, 0.81", "19.3246, 81.1695, -22.0972, 0.81", "19.672, 82.1291, -22.4328, 0.96", "19.9541, 82.9073, -22.6725, 1.33", "20.329, 83.9586, -22.9225, 1.11", "20.7306, 85.1025, -23.1004, 0.96", "20.9937, 85.8008, -23.1649, 1.18", "21.3309, 86.652, -23.2081, 1.18", "21.6765, 87.5149, -23.2222, 1.33", "21.9454, 88.2066, -23.2466, 1.18", "22.1349, 88.7317, -23.2716, 1.18", "22.4233, 89.5131, -23.3382, 0.88", "22.7323, 90.2742, -23.4245, 0.74", "23.0844, 91.0781, -23.5277, 0.74", "23.627, 92.1945, -23.7035, 0.88", "24.1004, 93.0723, -23.8377, 1.11", "24.5541, 93.8763, -23.9802, 1.11", "24.9551, 94.5751, -24.0974, 0.96", "25.4956, 95.5183, -24.216, 1.18", "26.0526, 96.5302, -24.2663, 0.96", "26.4591, 97.3574, -24.2332, 0.81", "27.0604, 98.7143, -24.0558, 0.88", "27.4527, 99.6244, -23.838, 0.88", "27.7948, 100.456, -23.5543, 1.03", "28.0965, 101.218, -23.2458, 1.11", "28.3763, 101.985, -22.9173, 0.88", "28.6891, 102.85, -22.5578, 0.66", "28.9387, 103.523, -22.2731, 0.66", "29.268, 104.403, -21.9844, 0.66", "29.8387, 105.983, -21.5937, 0.96", "30.1501, 106.974, -21.4413, 1.4", "30.3555, 107.747, -21.3737, 1.55", "30.4777, 108.339, -21.3336, 1.84", "30.6437, 109.232, -21.2572, 1.92", "30.799, 109.979, -21.1555, 1.77", "31.0704, 111.129, -20.9116, 1.25", "31.3456, 112.121, -20.613, 1.18", "31.6502, 113.044, -20.2732, 1.11", "31.9893, 113.941, -19.8801, 1.25", "32.388, 114.871, -19.4106, 1.33", "32.6252, 115.364, -19.1544, 1.33", "33.05, 116.166, -18.735, 1.25", "33.4443, 116.904, -18.4137, 0.74", "33.9082, 117.797, -18.1433, 0.52", "34.2463, 118.497, -18.0257, 0.52", "34.6204, 119.317, -17.9406, 0.81", "35.1238, 120.469, -17.8994, 1.4", "35.5481, 121.462, -17.9515, 1.69", "35.8461, 122.175, -18.0369, 1.84", "36.1138, 122.775, -18.1835, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.12348, 32.3491, -7.39344, 1.4", "-0.585457, 32.8852, -7.02023, 1.4", "-1.12718, 33.2665, -6.70554, 0.96", "-1.60838, 33.6223, -6.43113, 1.25", "-2.01512, 33.953, -6.20939, 1.4", "-2.3281, 34.232, -6.04615, 1.47", "-3.24683, 35.1239, -5.58992, 1.03", "-3.70253, 35.5958, -5.35871, 1.11", "-4.20773, 36.2163, -5.10999, 1.11", "-4.66698, 36.8851, -4.90213, 1.03", "-5.01433, 37.4319, -4.77769, 1.03", "-5.4683, 38.1626, -4.68078, 1.03", "-5.78814, 38.6431, -4.66741, 1.18", "-6.33294, 39.328, -4.68195, 1.18", "-7.10925, 40.0391, -4.75909, 0.81", "-7.64732, 40.3679, -4.83781, 0.88", "-8.27385, 40.6231, -4.94744, 1.11", "-9.05056, 40.8523, -5.0908, 0.96", "-9.566, 40.9799, -5.18373, 0.96", "-10.3032, 41.1556, -5.30656, 0.88", "-10.9531, 41.3475, -5.3975, 0.81", "-11.7901, 41.6953, -5.46296, 1.11", "-12.173, 41.8976, -5.47619, 1.25", "-12.5458, 42.1349, -5.48514, 1.25", "-13.0804, 42.5143, -5.48619, 0.88", "-13.5692, 42.8902, -5.47424, 0.88", "-14.0243, 43.2587, -5.44413, 0.96", "-14.553, 43.7021, -5.38014, 0.96", "-14.9713, 44.0532, -5.31631, 1.03", "-15.4217, 44.4279, -5.23355, 1.25", "-15.8892, 44.8127, -5.12519, 1.25", "-16.1927, 45.0623, -5.04541, 1.11", "-16.563, 45.3641, -4.93104, 1.25", "-16.9157, 45.6547, -4.79551, 1.4", "-17.2615, 45.9447, -4.64642, 1.4", "-17.6879, 46.308, -4.44971, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.54828, 42.8383, -2.3154, 0.725085", "-3.39577, 57.8143, -2.3154, 0.725085", "-4.24326, 72.7904, -2.3154, 0.725085" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-40.3764, 34.4723, 38.8095, 0.88", "-41.6896, 35.1116, 48.9745, 0.88", "-43.7939, 34.4237, 59.0113, 0.88", "-45.1589, 35.0388, 69.1709, 0.88", "-46.8901, 34.7912, 79.2947, 0.88", "-49.5331, 34.4584, 89.217, 0.88", "-53.9452, 33.3842, 98.4386, 0.88", "-57.1705, 31.5247, 108.038, 0.88", "-58.6104, 30.723, 118.185, 0.88", "-61.5571, 30.1861, 128.014, 0.88", "-63.098, 30.318, 138.168, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-40.3764, 34.4723, 38.8095, 0.22", "-51.6624, 42.2167, 40.0579, 0.88", "-64.2657, 47.4172, 40.3242, 0.88", "-75.9543, 54.1182, 42.7935, 0.88", "-86.3163, 62.8178, 45.5117, 0.88", "-96.4086, 71.7197, 48.6272, 0.88", "-108.479, 78.1131, 49.413, 0.88", "-121.114, 83.2307, 49.1983, 0.88", "-132.909, 90.2027, 49.5378, 0.88", "-143.835, 98.5853, 49.895, 0.88", "-153.579, 108.431, 50.4846, 0.88", "-163.308, 118.006, 52.8439, 0.88", "-173.933, 126.084, 56.2196, 0.88", "-183.253, 134.288, 62.2007, 0.88", "-193.39, 139.666, 69.6028, 0.88", "-203.712, 142.393, 78.0036, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-81.0239, 252.311, -30.8342, 0.66", "-83.0886, 253.716, -32.3753, 0.66", "-83.7306, 254.117, -32.8429, 0.66", "-84.3361, 254.48, -33.2646, 0.74", "-84.9065, 254.813, -33.6424, 0.88", "-85.361, 255.077, -33.9204, 0.88", "-86.0363, 255.476, -34.2993, 0.74", "-86.6231, 255.838, -34.5388, 0.52", "-87.1303, 256.164, -34.7638, 0.96", "-87.595, 256.473, -34.9715, 0.96", "-88.3645, 256.984, -35.2962, 0.37", "-89.021, 257.416, -35.5497, 0.37", "-89.7527, 257.887, -35.7916, 0.66", "-90.293, 258.226, -35.9505, 0.81", "-90.9403, 258.626, -36.1269, 0.81", "-91.485, 258.965, -36.2611, 0.66", "-92.0344, 259.286, -36.3953, 0.66", "-92.4646, 259.517, -36.4952, 0.66", "-92.9567, 259.77, -36.5942, 0.37", "-93.3779, 260.007, -36.6843, 0.37", "-94.1146, 260.484, -36.8688, 0.74", "-94.5358, 260.798, -36.9623, 0.74", "-95.1865, 261.327, -37.0897, 0.29", "-95.7043, 261.764, -37.187, 0.29", "-96.2992, 262.279, -37.3105, 0.66", "-96.5193, 262.472, -37.3638, 0.66", "-97.0875, 263.003, -37.5245, 0.52", "-97.3788, 263.293, -37.6138, 0.37", "-97.655, 263.56, -37.7101, 0.37", "-98.0802, 263.919, -37.8613, 0.59", "-98.5045, 264.241, -38.0173, 1.11", "-99.0111, 264.642, -38.2081, 1.18", "-99.4038, 264.974, -38.3662, 0.96", "-100.067, 265.578, -38.6076, 0.74", "-100.595, 266.086, -38.7713, 0.66", "-101.056, 266.545, -38.885, 0.37", "-101.586, 267.1, -38.9918, 0.37", "-101.942, 267.52, -39.0501, 0.52", "-102.315, 268.008, -39.1337, 0.52", "-102.846, 268.792, -39.2585, 0.66", "-103.209, 269.375, -39.3324, 0.81", "-103.588, 269.985, -39.3775, 0.81", "-104.235, 270.974, -39.3996, 0.59", "-104.683, 271.65, -39.3742, 0.52", "-105.021, 272.184, -39.3222, 0.52", "-105.47, 272.969, -39.2022, 0.44", "-105.763, 273.521, -39.1091, 0.44", "-106.026, 274.038, -39.0164, 0.44", "-106.251, 274.441, -38.9568, 0.44", "-106.48, 274.797, -38.937, 0.44", "-106.793, 275.21, -39.0072, 0.44", "-107.123, 275.613, -39.1789, 0.59", "-107.472, 276.042, -39.4705, 0.66", "-107.845, 276.551, -39.8579, 0.52", "-108.259, 277.184, -40.3451, 0.52", "-108.573, 277.73, -40.7514, 0.52", "-108.92, 278.453, -41.2797, 0.59", "-109.254, 279.281, -41.8537, 0.59", "-109.495, 279.965, -42.3143, 0.52", "-109.713, 280.639, -42.7423, 0.52", "-109.854, 281.053, -43.0033, 0.52", "-110.158, 281.715, -43.3844, 0.44", "-110.417, 282.119, -43.5516, 0.44", "-110.718, 282.497, -43.6678, 0.44", "-111.291, 283.089, -43.8388, 0.44", "-111.862, 283.614, -43.969, 0.44", "-112.472, 284.17, -44.0786, 0.44", "-113.046, 284.748, -44.1612, 0.52", "-113.456, 285.257, -44.2279, 0.66", "-113.804, 285.792, -44.3129, 0.37", "-114.085, 286.362, -44.4144, 0.29", "-114.365, 287.122, -44.5629, 0.44", "-114.554, 287.87, -44.7175, 0.74", "-114.661, 288.577, -44.8621, 1.03", "-114.675, 289.128, -44.9943, 1.03", "-114.65, 289.714, -45.2029, 0.88", "-114.608, 290.525, -45.5766, 0.52", "-114.609, 291.166, -45.9469, 0.52", "-114.635, 291.489, -46.2078, 0.37", "-114.739, 292.359, -47.049, 0.37", "-114.828, 293.252, -48.0511, 0.37", "-114.84, 293.647, -48.5428, 0.37", "-114.85, 294.073, -49.0874, 0.37", "-114.912, 295.009, -50.2251, 0.37", "-114.97, 295.438, -50.6974, 0.29", "-115.1, 296.08, -51.3178, 0.29", "-115.231, 296.718, -51.8915, 0.29", "-115.399, 297.363, -52.4526, 0.37", "-115.555, 297.827, -52.8665, 0.37", "-115.818, 298.402, -53.4084, 0.37", "-116.121, 299.027, -54.0823, 0.44", "-116.276, 299.367, -54.4804, 0.59", "-116.428, 299.779, -55.0408, 0.59", "-116.637, 300.543, -56.1627, 0.74", "-116.773, 301.117, -57.0052, 0.88", "-116.938, 301.81, -58.0234, 0.81", "-117.106, 302.408, -58.9061, 1.03", "-117.531, 303.651, -60.7842, 0.74", "-117.83, 304.304, -61.7547, 0.66", "-118.022, 304.623, -62.2764, 0.74", "-118.341, 305.026, -63.0096, 0.74", "-118.663, 305.317, -63.6592, 0.59", "-119.062, 305.568, -64.4006, 0.44", "-119.757, 305.794, -65.6117, 0.29", "-120.949, 305.969, -67.7197, 0.74", "-121.222, 305.981, -68.2238, 1.25", "-121.847, 305.976, -69.4058, 1.77", "-122.34, 305.967, -70.3303, 1.92", "-122.989, 305.933, -71.517, 0.74", "-123.404, 305.896, -72.2342, 0.52", "-124.068, 305.841, -73.2052, 0.52", "-124.557, 305.774, -73.8938, 0.66", "-125.173, 305.682, -74.6633, 0.52", "-126.006, 305.578, -75.5865, 0.52", "-126.771, 305.516, -76.3627, 0.52", "-127.619, 305.465, -77.2095, 0.66", "-128.225, 305.459, -77.7856, 0.66", "-128.721, 305.499, -78.3123, 0.81", "-129.182, 305.594, -78.86, 0.59", "-129.517, 305.673, -79.4228, 0.59", "-130.254, 305.823, -81.0899, 0.81", "-130.606, 305.843, -82.1574, 0.74", "-131.072, 305.691, -84.2808, 0.88", "-131.232, 305.402, -85.795, 1.11", "-131.25, 304.349, -89.2231, 0.74", "-131.153, 304.026, -89.9092, 0.88", "-130.77, 303.315, -90.7517, 0.96", "-130.251, 302.544, -91.2148, 0.74", "-129.236, 301.173, -91.4273, 0.66", "-127.504, 298.971, -91.3117, 0.29", "-126.777, 298.081, -91.0007, 0.29", "-125.932, 297.071, -90.5315, 0.29", "-125.407, 296.452, -90.1503, 0.66", "-125.085, 296.07, -89.8503, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-81.0239, 252.311, -30.8342, 0.29", "-81.9058, 253.437, -30.4432, 0.29", "-82.3789, 254.057, -30.2489, 0.37", "-82.9149, 254.758, -30.0123, 0.52", "-83.2752, 255.205, -29.8605, 0.66", "-83.9285, 255.938, -29.609, 0.81", "-84.6277, 256.659, -29.3692, 1.03", "-85.2544, 257.26, -29.1669, 0.74", "-86.4098, 258.28, -28.8719, 0.29", "-86.9279, 258.701, -28.7757, 0.29", "-87.5979, 259.232, -28.6644, 0.37", "-88.301, 259.804, -28.5692, 0.37", "-89.1894, 260.593, -28.4466, 0.44", "-89.5947, 261.031, -28.3983, 0.66", "-90.0946, 261.709, -28.3657, 0.81", "-90.5699, 262.448, -28.3414, 0.81", "-90.991, 263.101, -28.328, 0.52", "-91.5048, 263.891, -28.3245, 0.52", "-92.0921, 264.857, -28.3412, 0.52", "-92.6699, 265.895, -28.3806, 0.44", "-93.1886, 266.92, -28.4647, 0.37", "-93.8128, 268.213, -28.6151, 0.29", "-94.2869, 269.222, -28.7441, 0.44", "-94.7747, 270.313, -28.905, 0.52", "-95.1369, 271.177, -29.0503, 0.37", "-95.4744, 272.051, -29.2072, 0.37", "-95.7504, 272.772, -29.3384, 0.59", "-95.9957, 273.476, -29.465, 0.59", "-96.2952, 274.268, -29.6076, 0.59", "-96.7264, 275.299, -29.7973, 0.37", "-97.2685, 276.544, -30.0266, 0.29", "-97.699, 277.68, -30.2198, 0.29", "-98.0586, 278.842, -30.4168, 0.29", "-98.1947, 279.428, -30.5228, 0.29", "-98.3431, 280.304, -30.6917, 0.44", "-98.4159, 280.934, -30.8266, 0.44", "-98.5289, 282.116, -31.1232, 0.59", "-98.5994, 282.757, -31.317, 0.74", "-98.6934, 283.458, -31.5574, 0.74", "-98.7548, 284.103, -31.7914, 0.59", "-98.8036, 285.257, -32.2098, 0.88", "-98.8269, 286.174, -32.534, 1.18", "-98.8976, 287.388, -32.9557, 0.37", "-98.947, 287.858, -33.1181, 0.37", "-99.0854, 288.906, -33.4761, 0.37", "-99.2046, 290.065, -33.8713, 0.29", "-99.2553, 291.138, -34.2465, 0.37", "-99.2381, 292.203, -34.612, 0.29", "-99.1471, 293.298, -35.0361, 0.29", "-99.0868, 293.667, -35.2164, 0.29", "-98.7935, 294.649, -35.8139, 0.59", "-98.4595, 295.337, -36.2817, 0.74", "-98.155, 295.813, -36.628, 0.74", "-97.5918, 296.568, -37.1881, 0.66", "-96.8969, 297.397, -37.8316, 0.44", "-96.442, 297.938, -38.2375, 0.44", "-95.7319, 298.721, -38.8203, 0.88", "-95.3994, 299.032, -39.0494, 1.33", "-94.9744, 299.374, -39.3396, 1.69", "-94.2293, 299.932, -39.8352, 1.84", "-93.0364, 300.864, -40.6557, 0.29", "-92.3609, 301.496, -41.1768, 0.29", "-91.7304, 302.251, -41.7422, 0.29", "-90.8083, 303.646, -42.6456, 0.59", "-90.4736, 304.31, -43.0353, 0.59", "-90.0673, 305.489, -43.669, 0.44", "-89.8046, 306.896, -44.3801, 0.59", "-89.7324, 307.77, -44.7717, 0.44", "-89.7082, 308.512, -45.0504, 0.29", "-89.6718, 309.485, -45.3646, 0.29", "-89.6513, 310.024, -45.5772, 0.29", "-89.6288, 310.93, -45.9465, 0.52", "-89.6109, 311.507, -46.1964, 0.52", "-89.596, 312.247, -46.5064, 0.37", "-89.5778, 313.42, -46.9777, 0.44", "-89.5093, 314.555, -47.4202, 0.44", "-89.3676, 315.545, -47.8139, 0.74", "-89.1419, 316.678, -48.259, 0.81", "-88.8287, 318.342, -48.8647, 0.29", "-88.763, 318.832, -49.0257, 0.29", "-88.7028, 319.495, -49.2318, 0.29", "-88.614, 320.329, -49.4917, 0.29", "-88.4795, 321.35, -49.8576, 0.37", "-88.307, 322.309, -50.1847, 0.44", "-88.0049, 323.274, -50.5586, 0.44", "-87.6046, 324.264, -51.0043, 0.44", "-87.2654, 325.092, -51.348, 0.44", "-87.0548, 325.611, -51.5473, 0.66", "-86.807, 326.168, -51.7602, 0.66", "-86.4102, 327.007, -52.1254, 0.44", "-86.0107, 327.813, -52.7957, 0.29", "-85.7744, 328.447, -53.8116, 0.29", "-85.7031, 328.882, -54.6562, 0.44", "-85.7048, 329.284, -55.5268, 0.59", "-85.7269, 329.752, -56.5358, 0.74", "-85.7777, 331.031, -59.2797, 0.74", "-85.7166, 332.111, -61.7019, 0.37", "-85.6614, 332.606, -62.9036, 0.29", "-85.5801, 333.086, -64.138, 0.59", "-85.4882, 333.581, -65.395, 0.52", "-85.4351, 333.969, -66.2254, 0.52", "-85.3501, 334.812, -67.3962, 0.59" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-5.66367, -44.3388, 4.91754, 0.52", "-7.95485, -45.4801, 6.15967, 0.52", "-8.42473, -45.788, 6.43577, 0.44", "-8.82927, -46.1116, 6.69459, 0.66", "-9.36416, -46.614, 7.05734, 0.74", "-10.2246, -47.5688, 7.65688, 0.66", "-10.5687, -48.0223, 7.90906, 0.81", "-11.0435, -49.0247, 8.25805, 0.74", "-11.1858, -49.5184, 8.38336, 0.88", "-11.3356, -50.4922, 8.718, 0.66", "-11.4078, -51.348, 9.09902, 0.66", "-11.4507, -52.0287, 9.48632, 0.81", "-11.5764, -52.8527, 10.0744, 0.81", "-11.8266, -53.7429, 10.8219, 0.88", "-12.6816, -56.0685, 12.9073, 0.96", "-12.9779, -56.7637, 13.5475, 0.74", "-13.2264, -57.3002, 14.0188, 0.59", "-13.6765, -58.269, 14.7444, 0.59", "-14.059, -59.1286, 15.2728, 0.59", "-14.4536, -60.1522, 15.7028, 0.96", "-14.7208, -60.9817, 15.8636, 1.11", "-15.0313, -62.0023, 16.0356, 0.88", "-15.356, -63.0448, 16.2292, 0.66", "-15.4874, -63.3817, 16.3061, 0.74", "-16.0863, -64.3414, 16.6508, 0.66", "-16.5741, -64.9062, 16.9527, 0.74", "-17.157, -65.4833, 17.3901, 0.81", "-17.6636, -65.9378, 17.8455, 0.88", "-18.2682, -66.5557, 18.5358, 0.66", "-18.6298, -67.0383, 19.0272, 0.66", "-19.0315, -67.7241, 19.6284, 0.59", "-19.3842, -68.525, 20.2026, 0.66", "-19.5615, -68.9647, 20.4521, 0.81", "-19.9867, -69.9927, 20.921, 0.59", "-20.3362, -70.8623, 21.28, 0.74", "-20.6703, -71.6713, 21.5904, 0.88", "-20.871, -72.1509, 21.7549, 0.88", "-21.2177, -73.0793, 22.1373, 0.66", "-21.4464, -73.7995, 22.549, 0.52", "-21.7117, -74.804, 23.435, 0.59", "-21.8122, -75.2708, 23.9842, 0.59", "-21.8978, -75.7253, 24.5844, 0.66", "-22.1294, -77.018, 26.3668, 0.66", "-22.233, -77.6492, 27.2417, 0.96", "-22.4507, -78.5168, 28.4245, 1.03", "-22.7087, -79.1555, 29.2311, 0.88", "-22.9621, -79.6473, 29.7643, 0.59", "-23.2073, -80.0442, 30.0972, 0.74", "-23.6427, -80.6709, 30.3919, 0.59", "-24.1496, -81.3364, 30.5655, 0.74", "-24.7368, -82.051, 30.6283, 0.88", "-25.2862, -82.6905, 30.6275, 0.88", "-25.8799, -83.3495, 30.6224, 0.59", "-26.455, -83.9638, 30.6359, 0.37", "-26.6843, -84.196, 30.6552, 0.37", "-27.1505, -84.6668, 30.7725, 0.44", "-27.6542, -85.1681, 30.9628, 0.59", "-28.1351, -85.634, 31.2103, 0.59", "-28.7135, -86.1946, 31.5539, 0.74", "-29.2611, -86.6921, 31.8906, 0.66", "-30.299, -87.5878, 32.4934, 0.66", "-30.9219, -88.1106, 32.8305, 0.59", "-31.8324, -88.9102, 33.2921, 0.81", "-32.3518, -89.3947, 33.5422, 0.96", "-33.0187, -90.0314, 33.8421, 0.74", "-33.7504, -90.7329, 34.1366, 0.52", "-35.004, -91.9817, 34.5985, 0.59", "-35.6749, -92.7007, 34.8386, 0.66", "-36.1102, -93.2045, 34.9771, 0.66", "-36.7389, -93.9733, 35.1602, 0.44", "-37.1918, -94.5582, 35.2917, 0.44", "-37.7938, -95.3352, 35.4664, 0.37", "-38.5132, -96.2734, 35.6384, 0.29", "-38.8235, -96.6891, 35.7043, 0.29", "-39.4752, -97.7312, 35.8179, 0.29", "-43.9223, -105.414, 42.5764, 0.29", "-47.7281, -113.28, 49.5331, 0.29", "-52.8808, -121.09, 55.6234, 0.29", "-57.168, -129.879, 61.1487, 0.29", "-63.3339, -138.228, 65.352, 0.29", "-70.5984, -145.655, 69.3638, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-5.66367, -44.3388, 4.91754, 2.21", "-5.45487, -45.3069, 4.92835, 2.21", "-5.33304, -45.9177, 4.9272, 2.21", "-5.14528, -46.859, 4.92542, 2.21", "-4.99111, -47.6319, 4.92396, 2.28", "-4.86855, -48.2464, 4.9228, 2.28", "-4.69197, -49.1316, 4.92112, 2.5", "-4.55904, -49.7354, 4.87191, 2.58" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "36.1138, 122.775, -18.1835, 1.25", "36.8399, 123.405, -18.2531, 1.25", "38.3099, 124.492, -18.2595, 0.81", "39.2001, 125.085, -18.2176, 0.96", "40.0152, 125.585, -18.0651, 0.74", "41.3312, 126.353, -17.7122, 0.59", "42.522, 127.032, -17.3394, 0.52", "43.0274, 127.287, -17.1407, 0.66", "43.7622, 127.628, -16.8061, 0.44", "45.3647, 128.355, -16.0769, 0.66", "46.1064, 128.715, -15.7763, 0.52", "46.82, 129.112, -15.5621, 0.52", "47.8163, 129.732, -15.3373, 0.88", "48.7014, 130.322, -15.2227, 1.25", "49.0647, 130.583, -15.2104, 1.62", "50.1832, 131.423, -15.2821, 1.62", "51.1082, 132.125, -15.357, 1.33", "52.2125, 132.941, -15.4218, 0.88", "53.045, 133.567, -15.4699, 0.74", "53.6706, 134.034, -15.493, 0.59", "54.152, 134.387, -15.499, 0.59", "55.2312, 135.134, -15.4428, 1.18", "56.1994, 135.761, -15.3884, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "36.1138, 122.775, -18.1835, 0.37", "37.2186, 123.897, -13.4798, 0.37", "37.4032, 124.318, -12.2076, 0.37", "37.4073, 124.577, -11.6251, 0.37", "37.3267, 124.977, -10.9181, 0.66", "37.2229, 125.365, -10.3625, 0.66", "37.0782, 125.964, -9.61607, 0.66", "36.8242, 126.671, -9.15365, 0.52", "36.5903, 127.504, -8.65245, 0.52", "36.5003, 128.039, -8.33431, 0.52", "36.5654, 128.949, -7.75975, 0.66", "36.7739, 129.532, -7.36743, 1.18", "37.0051, 129.922, -7.06917, 1.18", "37.4418, 130.538, -6.57324, 0.66", "37.8363, 131.092, -6.13764, 0.52", "38.403, 131.973, -5.48885, 0.52", "38.7387, 132.594, -5.05943, 1.11", "39.1228, 133.551, -4.44749, 0.96", "39.3123, 134.254, -4.02994, 0.88", "39.4587, 135.237, -3.49354, 0.37", "39.5292, 136.577, -2.82869, 0.29", "39.5144, 137.283, -2.49622, 0.29", "39.425, 138.233, -2.04453, 0.59", "39.2698, 139.233, -1.58372, 0.74", "39.083, 140.077, -1.19719, 0.88", "38.8934, 140.769, -0.88006, 1.03", "38.6015, 141.687, -0.470454, 1.11", "38.3358, 142.484, -0.149411, 0.88", "38.1048, 143.168, 0.0937686, 0.52", "37.7734, 144.138, 0.415318, 0.88", "37.6175, 144.587, 0.559542, 0.74", "37.3272, 145.43, 0.815948, 0.52", "37.0154, 146.327, 1.1048, 0.52", "36.7193, 147.183, 1.42337, 0.74", "36.4398, 147.953, 1.74034, 0.88", "36.1843, 148.616, 2.01108, 0.88", "35.9032, 149.283, 2.26236, 1.03", "35.5383, 150.076, 2.50273, 0.81", "35.1064, 150.937, 2.73293, 0.59", "34.8243, 151.453, 2.86384, 0.52", "34.3705, 152.27, 3.08941, 0.52", "34.1218, 152.753, 3.24575, 0.52", "33.7629, 153.576, 3.53741, 0.52", "33.3527, 154.742, 3.94619, 0.52", "33.0822, 155.68, 4.30037, 0.88", "32.8378, 156.678, 4.71796, 0.88", "32.6268, 157.649, 5.1645, 0.74", "32.456, 158.35, 5.48519, 0.37", "32.245, 159.106, 5.81561, 0.37", "31.9587, 159.851, 6.08605, 0.52", "31.6768, 160.36, 6.25341, 0.52", "31.4473, 160.671, 6.35938, 0.37", "30.7327, 161.489, 6.69505, 0.52", "30.432, 161.82, 6.8413, 0.74", "29.8209, 162.553, 7.15867, 0.74", "29.3665, 163.221, 7.41329, 0.59", "29.0014, 163.895, 7.63171, 0.74", "28.6395, 164.713, 7.88115, 0.88", "28.3582, 165.418, 8.09705, 0.88", "28.0032, 166.247, 8.33903, 0.88", "27.5254, 167.199, 8.6116, 0.66", "27.167, 167.725, 8.78252, 0.66", "26.6042, 168.344, 9.01783, 0.52", "25.8446, 168.947, 9.32937, 0.37", "25.2551, 169.272, 9.65126, 0.29", "24.5096, 169.598, 10.165, 0.29", "23.8113, 169.881, 10.7086, 0.66", "23.5136, 170.012, 10.9584, 1.03", "22.9014, 170.346, 11.5122, 1.18", "21.5447, 171.294, 12.92, 0.59", "20.9057, 171.896, 13.6711, 0.44", "20.496, 172.422, 14.2125, 0.52", "20.2063, 172.923, 14.6796, 0.52", "19.9044, 173.564, 15.2385, 0.52", "19.638, 174.264, 15.7929, 0.59", "19.4122, 175.044, 16.3432, 0.37", "19.2484, 175.701, 16.8172, 0.37", "18.9947, 176.886, 17.6762, 0.66", "18.8738, 177.449, 18.0648, 0.74", "18.6959, 178.069, 18.4495, 0.59", "18.433, 178.741, 18.7988, 0.52", "18.0603, 179.451, 19.117, 0.44", "17.4977, 180.347, 19.4204, 0.44", "17.0604, 181.01, 19.5731, 0.59", "16.3969, 182.03, 19.7645, 0.59", "15.9646, 182.714, 19.8961, 0.74", "15.5602, 183.362, 20.0594, 0.74", "15.2499, 183.914, 20.299, 0.74", "14.8108, 184.8, 20.9631, 0.52", "14.6139, 185.27, 21.4211, 0.66", "14.427, 185.762, 22.0312, 0.81", "14.1302, 186.446, 23.0275, 1.03", "13.6699, 187.195, 24.3029, 0.74", "13.1926, 187.826, 25.4341, 0.44", "12.9051, 188.152, 25.9814, 0.29", "12.2844, 188.754, 26.9598, 0.59", "11.9202, 189.054, 27.4579, 0.96", "10.9085, 189.86, 28.7396, 0.29", "10.4033, 190.268, 29.3837, 0.29", "9.77822, 190.822, 30.182, 0.96", "9.1714, 191.383, 30.9384, 1.18", "8.19074, 192.386, 32.1429, 0.96", "7.78302, 192.786, 32.711, 0.59", "7.42523, 193.111, 33.2424, 0.29", "6.97506, 193.47, 33.9616, 0.29", "6.75503, 193.651, 34.3607, 0.29", "6.2567, 194.19, 35.4245, 0.44", "5.48934, 195.314, 37.4358, 0.44", "5.34139, 195.618, 37.9679, 0.59", "5.24522, 196.084, 38.7896, 0.59", "5.30331, 196.505, 39.5354, 0.52", "5.61053, 197.019, 40.3374, 0.29", "6.1714, 197.478, 40.9196, 0.29", "6.85438, 197.895, 41.4112, 0.29", "7.76755, 198.358, 41.9886, 0.44", "8.56303, 198.736, 42.5171, 0.44", "9.18396, 199.014, 43.012, 0.29", "9.86083, 199.327, 43.6411, 0.29", "10.8995, 199.919, 44.7714, 0.59", "11.5558, 200.403, 45.5708, 0.74", "12.5149, 201.336, 46.8007, 0.52", "13.5053, 202.539, 48.1605, 0.22", "13.6873, 202.804, 48.4176, 0.29", "14.1769, 203.712, 49.094, 0.29", "14.5248, 204.513, 49.5119, 0.29", "14.9391, 205.575, 49.9113, 0.37", "15.3375, 206.477, 49.9698, 0.37", "15.66, 207.086, 49.8908, 0.22", "16.6076, 208.299, 49.4906, 0.22", "17.1775, 208.853, 49.2235, 0.37", "17.8676, 209.423, 48.891, 0.15", "20.3574, 211.328, 47.6003, 0.15", "21.1569, 211.877, 47.1666, 0.15", "23.5639, 213.321, 45.8596, 0.15", "24.7493, 213.919, 45.2184, 0.15", "25.8938, 214.445, 44.6002, 0.22", "23.7815, 223.014, 51.8405, 0.22", "22.2755, 231.722, 59.0821, 0.22", "22.8561, 239.417, 67.4137, 0.22", "24.4438, 245.915, 76.5024, 0.22", "25.1796, 252.422, 85.6948, 0.22", "28.2141, 259.794, 93.7506, 0.22", "31.6648, 268.303, 100.519, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.6879, 46.308, -4.44971, 0.52", "-18.6501, 46.9724, -3.58321, 0.52", "-19.2735, 47.3646, -3.06384, 0.52", "-19.8778, 47.6973, -2.64289, 0.74", "-20.643, 48.1095, -2.16249, 0.96", "-21.4153, 48.5839, -1.68786, 1.18", "-22.0362, 49.0265, -1.30906, 1.18", "-22.6367, 49.5099, -0.961003, 0.88", "-23.5398, 50.5016, -0.365208, 0.37", "-23.7956, 50.9202, -0.167766, 0.37", "-24.2466, 51.992, 0.257723, 0.52", "-24.4914, 52.7508, 0.563403, 0.81", "-24.7259, 53.5923, 0.946047, 0.96", "-24.9889, 54.5086, 1.4667, 0.52", "-25.2369, 55.1793, 1.98136, 0.59", "-25.4895, 55.55, 2.39571, 0.74", "-26.1511, 56.0804, 3.2447, 1.11", "-26.6717, 56.3615, 3.82228, 1.18", "-27.4181, 56.6727, 4.56551, 1.18", "-28.1746, 56.9457, 5.24393, 0.74", "-29.0075, 57.248, 5.91198, 0.59", "-29.8276, 57.5758, 6.49904, 0.52", "-30.3959, 57.8328, 6.83312, 0.52", "-31.0194, 58.1419, 7.10328, 0.52", "-31.7194, 58.5217, 7.29631, 0.74", "-32.4674, 58.9633, 7.49451, 0.74", "-32.8411, 59.2001, 7.58536, 0.81", "-33.3413, 59.5444, 7.74246, 0.81", "-34.336, 60.3115, 8.17591, 0.66", "-34.8089, 60.771, 8.49949, 0.52", "-35.8198, 62.0744, 9.58702, 0.74", "-36.1441, 62.6141, 10.0562, 0.66", "-36.5665, 63.4537, 10.7865, 0.59", "-36.822, 63.9872, 11.2466, 0.66", "-37.2779, 64.9383, 12.0331, 0.52", "-37.5605, 65.4245, 12.3642, 0.66", "-37.9485, 65.96, 12.6758, 0.88", "-38.4876, 66.5673, 13.0396, 0.88", "-39.0299, 67.0849, 13.4287, 0.66", "-39.4165, 67.4327, 13.8042, 0.59", "-39.874, 67.8848, 14.4199, 0.74", "-40.2721, 68.3677, 15.1373, 0.52", "-40.6056, 68.8526, 15.8995, 0.52", "-41.2958, 70.0489, 17.7858, 0.66", "-41.7505, 70.9466, 19.1798, 0.74", "-41.9982, 71.4382, 19.9654, 0.44", "-42.2197, 71.8257, 20.6002, 0.44", "-42.4434, 72.1128, 21.0596, 0.59", "-42.7429, 72.3762, 21.4779, 0.66", "-43.2651, 72.7262, 21.959, 0.66", "-44.0614, 73.2184, 22.6591, 0.52", "-44.5979, 73.5646, 23.2266, 0.52", "-45.035, 73.9243, 23.8102, 0.44", "-45.7206, 74.6849, 24.9768, 0.59", "-46.0129, 75.0609, 25.5019, 0.74", "-46.3294, 75.5126, 26.0889, 0.88", "-46.7373, 76.0933, 26.8206, 0.88", "-47.1268, 76.5734, 27.542, 0.44", "-47.4961, 76.95, 28.1926, 0.44", "-48.109, 77.4149, 29.1658, 0.59", "-48.5826, 77.7294, 29.8436, 0.52", "-49.3704, 78.2085, 30.9012, 0.66", "-50.0865, 78.6294, 31.8302, 0.74", "-50.6659, 78.987, 32.6026, 0.74", "-51.0112, 79.2427, 33.0785, 0.74", "-51.5452, 79.7311, 33.8435, 0.52", "-51.7453, 79.9513, 34.0936, 0.52", "-52.0325, 80.3333, 34.401, 0.66", "-52.4045, 80.892, 34.7836, 0.66", "-52.7947, 81.4778, 35.1732, 0.81", "-53.2254, 82.1198, 35.5904, 0.81", "-53.6139, 82.6674, 35.9674, 0.59", "-54.0455, 83.2463, 36.3649, 0.52", "-54.6705, 84.0305, 36.9174, 0.59", "-55.1099, 84.5361, 37.3108, 0.66", "-55.488, 84.9101, 37.6418, 0.66", "-56.18, 85.4479, 38.2259, 0.59", "-56.6315, 85.7316, 38.6237, 0.59", "-57.0863, 85.9714, 39.0281, 0.59", "-57.7677, 86.3054, 39.6083, 0.52", "-58.3222, 86.5985, 40.0848, 0.66", "-58.8256, 86.9018, 40.4923, 0.66", "-59.4959, 87.3628, 40.9637, 0.52", "-59.994, 87.7513, 41.2573, 0.66", "-60.761, 88.4311, 41.6292, 0.81", "-61.3974, 89.0678, 41.9003, 0.81", "-62.3072, 90.1175, 42.2833, 0.52", "-62.8616, 90.8475, 42.5342, 0.59", "-63.2559, 91.4065, 42.722, 0.59", "-63.7314, 92.1209, 42.979, 0.37", "-64.3932, 93.1339, 43.406, 0.52", "-64.9126, 93.8864, 43.7871, 0.59", "-65.5546, 94.7358, 44.3044, 0.22", "-65.8518, 95.0669, 44.5557, 0.37", "-66.2745, 95.457, 44.8714, 0.37", "-66.8562, 95.8963, 45.2203, 0.37", "-67.5659, 96.3773, 45.5729, 0.66", "-68.0962, 96.7537, 45.8972, 0.88", "-68.5048, 97.0747, 46.2303, 0.59", "-69.3943, 97.8862, 47.1971, 0.29", "-69.9455, 98.5651, 48.037, 0.29", "-70.3071, 99.1843, 48.7756, 0.29", "-70.8737, 100.665, 50.5309, 0.88", "-71.063, 101.438, 51.578, 0.88", "-71.1172, 101.904, 52.2514, 0.66", "-71.0673, 102.558, 53.3447, 0.52", "-70.9812, 102.896, 53.9424, 0.29", "-70.8929, 103.156, 54.4303, 0.29", "-70.7286, 104.547, 56.3081, 0.74", "-76.3622, 110.902, 65.0641, 0.74", "-81.7947, 116.235, 74.5372, 0.74", "-86.5977, 121.665, 84.2977, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-17.6879, 46.308, -4.44971, 0.74", "-18.4434, 46.6983, -4.75781, 0.74", "-19.0175, 47.0707, -4.97055, 0.74", "-19.9044, 47.7275, -5.24662, 0.74", "-20.5034, 48.1686, -5.50513, 0.88", "-21.1155, 48.5734, -5.83272, 1.03", "-21.7215, 48.89, -6.20873, 1.03", "-22.3319, 49.1257, -6.65186, 0.96", "-23.0019, 49.2859, -7.14481, 0.74", "-24.5806, 49.4567, -8.21329, 0.66", "-25.6104, 49.4682, -8.79694, 0.66", "-26.9396, 49.4018, -9.42093, 0.66", "-27.7446, 49.3336, -9.7324, 0.59", "-28.8162, 49.2172, -10.0502, 0.66", "-29.6297, 49.1275, -10.2049, 0.66", "-31.2703, 48.9928, -10.3319, 0.81", "-32.2233, 48.9774, -10.359, 0.96", "-32.9389, 49.0308, -10.361, 1.18", "-33.6751, 49.1439, -10.3684, 1.18", "-34.6866, 49.376, -10.3991, 0.66", "-35.4575, 49.5866, -10.4475, 0.66", "-36.0801, 49.7686, -10.5138, 0.59", "-36.7847, 49.9401, -10.6642, 0.74", "-37.6474, 50.0611, -10.9177, 0.74", "-38.0179, 50.034, -11.109, 0.88", "-38.685, 49.7462, -11.7014, 0.88", "-39.1428, 49.4762, -12.2498, 0.66", "-40.1001, 48.8999, -13.4654, 0.66", "-40.5626, 48.63, -14.0596, 1.25", "-41.6157, 48.0596, -15.3752, 1.47", "-42.7372, 47.5338, -16.6815, 1.62", "-44.073, 47.0712, -18.089, 1.55", "-44.7178, 46.9548, -18.642, 0.81", "-45.4481, 46.9514, -19.0931, 0.59", "-46.3405, 47.0709, -19.5234, 0.44", "-47.0229, 47.2303, -19.7736, 0.44", "-47.7685, 47.4512, -20.0193, 0.59", "-48.2798, 47.6046, -20.1996, 0.59", "-48.9841, 47.8058, -20.5473, 0.29", "-50.1875, 48.1864, -21.2806, 1.03", "-51.115, 48.5394, -21.8971, 1.47", "-51.8093, 48.845, -22.3721, 1.69", "-52.2387, 49.0557, -22.6614, 2.06", "-53.1023, 49.5473, -23.2104, 1.03", "-53.9589, 50.119, -23.7177, 0.52", "-54.6866, 50.7144, -24.1393, 0.81", "-55.0748, 51.1002, -24.3761, 0.96", "-55.5603, 51.6783, -24.7215, 0.74", "-56.0751, 52.374, -25.1594, 1.03", "-56.4074, 52.8651, -25.4828, 0.88", "-56.8679, 53.5559, -25.9777, 1.25", "-57.2348, 54.071, -26.3938, 1.62", "-57.5743, 54.4978, -26.769, 1.77", "-58.0726, 55.0913, -27.3333, 1.99", "-58.4944, 55.578, -27.7959, 1.18", "-58.8229, 55.9627, -28.1485, 0.29", "-59.2825, 56.5235, -28.6628, 0.29", "-59.8495, 57.2766, -29.3749, 0.66", "-60.2776, 57.941, -29.9879, 0.66", "-60.5838, 58.5198, -30.4841, 0.22", "-60.8665, 59.1712, -31.0175, 0.81", "-61.1491, 59.9076, -31.6171, 1.18", "-61.462, 60.7912, -32.2987, 0.96", "-61.6418, 61.2749, -32.6458, 0.37", "-61.8589, 61.7262, -32.9451, 0.29", "-62.0822, 62.0789, -33.1679, 0.29", "-62.394, 62.4801, -33.3795, 0.29", "-62.7443, 62.9194, -33.5509, 0.59", "-63.1499, 63.4745, -33.7216, 0.59", "-63.5212, 64.0984, -33.9439, 0.59", "-63.8425, 64.7629, -34.2187, 0.59", "-64.0999, 65.3971, -34.4865, 0.59", "-64.3065, 65.983, -34.7387, 0.29", "-64.4709, 66.4801, -34.9614, 0.37", "-64.8086, 67.3416, -35.3998, 0.37", "-65.1858, 68.064, -35.8577, 0.74", "-65.4117, 68.3905, -36.0853, 1.25", "-65.7714, 68.8234, -36.3913, 1.69", "-66.1171, 69.1845, -36.6634, 1.47", "-66.8071, 69.8189, -37.1865, 0.96", "-67.5522, 70.4363, -37.7248, 0.59", "-68.1225, 70.8796, -38.1585, 0.52", "-68.621, 71.2282, -38.557, 0.66", "-69.2812, 71.6251, -39.0712, 0.52", "-69.8975, 71.9331, -39.5553, 0.81", "-70.5464, 72.1663, -40.0149, 0.96", "-71.1718, 72.3284, -40.3931, 1.55", "-71.9735, 72.4972, -40.8369, 1.77", "-72.6421, 72.6307, -41.1528, 2.21", "-73.6775, 72.8462, -41.56, 2.36", "-74.7694, 73.0736, -41.9315, 0.59", "-75.6864, 73.2348, -42.224, 0.37", "-76.2303, 73.3108, -42.3817, 0.37", "-76.9689, 73.3851, -42.5859, 0.37", "-77.6019, 73.432, -42.7624, 0.37", "-78.1798, 73.4613, -42.9032, 0.37", "-78.8735, 73.4952, -43.0987, 0.29", "-79.2889, 73.4977, -43.2146, 0.29", "-79.7545, 73.5149, -43.3676, 0.44", "-80.5488, 73.6455, -43.6716, 0.81", "-81.0195, 73.8014, -43.8971, 1.18", "-81.4686, 74.0032, -44.1591, 1.18", "-81.9961, 74.2678, -44.5668, 0.74", "-82.8433, 74.6974, -45.3301, 0.37", "-83.3476, 74.9572, -45.8246, 0.81", "-84.175, 75.3721, -46.7117, 1.18", "-84.8109, 75.6843, -47.4311, 1.18", "-86.0791, 76.2794, -48.9264, 0.52", "-86.7033, 76.5725, -49.617, 0.37", "-87.6599, 76.9839, -50.5353, 1.33", "-88.4256, 77.2817, -51.1844, 2.14", "-88.8977, 77.4728, -51.5363, 2.58", "-89.973, 77.9614, -52.2362, 2.8", "-91.3473, 78.702, -53.0163, 0.37", "-92.1683, 79.2472, -53.4789, 0.37", "-92.4892, 79.517, -53.6589, 0.37", "-92.9975, 80.117, -53.9348, 0.59", "-93.3329, 80.6869, -54.1496, 0.74", "-93.6052, 81.3492, -54.3775, 0.74", "-93.8265, 81.9807, -54.712, 0.74", "-93.9936, 82.3492, -54.9664, 0.44", "-94.3623, 82.8177, -55.3833, 0.29", "-94.746, 83.1545, -55.7766, 0.29", "-95.2002, 83.4585, -56.2249, 0.81", "-96.331, 84.0371, -57.2341, 1.03", "-96.8199, 84.2453, -57.6332, 0.96", "-97.7251, 84.615, -58.3351, 0.22", "-98.596, 84.9833, -59.025, 0.59", "-99.1541, 85.2564, -59.4699, 0.59", "-99.7123, 85.578, -59.9237, 0.44", "-100.249, 85.9249, -60.3442, 0.37", "-101.271, 86.5611, -61.159, 1.03", "-102.066, 87.005, -61.7566, 1.69", "-102.479, 87.2311, -62.0335, 1.92", "-103.018, 87.5473, -62.3779, 1.92", "-103.351, 87.7539, -62.5974, 1.92", "-104.639, 88.5755, -63.4252, 0.44", "-105.038, 88.8524, -63.6533, 0.37", "-105.518, 89.2444, -63.9422, 0.52", "-105.779, 89.5016, -64.136, 0.88", "-106.29, 90.0999, -64.5902, 1.03", "-106.598, 90.4859, -64.8898, 1.18", "-107.068, 91.1167, -65.3842, 0.96", "-107.65, 91.8965, -65.9886, 0.74", "-108.007, 92.3853, -66.3371, 0.74", "-108.334, 92.8449, -66.6357, 0.59", "-108.912, 93.6543, -67.0843, 0.52", "-109.29, 94.1738, -67.3384, 0.52", "-109.885, 94.9689, -67.6514, 0.74", "-110.508, 95.7711, -67.8734, 1.18", "-111.042, 96.4433, -68.0134, 1.4", "-111.433, 96.9172, -68.0926, 1.47", "-111.824, 97.3522, -68.1525, 1.69", "-112.433, 97.9127, -68.2359, 1.4", "-113.243, 98.5046, -68.3608, 0.52", "-114.039, 98.9549, -68.4946, 0.52", "-114.886, 99.3413, -68.6386, 0.74", "-115.639, 99.6351, -68.8038, 0.96", "-116.654, 99.9904, -69.0916, 0.96", "-117.405, 100.244, -69.3639, 0.74", "-118.142, 100.535, -69.6926, 0.44", "-118.611, 100.792, -69.9422, 0.44", "-119.178, 101.198, -70.2877, 0.74", "-119.675, 101.601, -70.5894, 0.88", "-120.028, 101.892, -70.8244, 0.88", "-120.646, 102.425, -71.277, 0.29", "-121.228, 102.935, -71.7457, 0.29", "-121.87, 103.478, -72.2664, 0.37", "-122.485, 103.972, -72.7461, 0.44", "-123.471, 104.748, -73.5219, 0.59", "-123.915, 105.121, -73.8929, 1.18", "-124.547, 105.722, -74.4468, 1.03", "-125.039, 106.258, -74.8698, 1.69", "-125.294, 106.568, -75.071, 1.69", "-125.857, 107.27, -75.4772, 1.18", "-126.593, 108.161, -75.9176, 0.37", "-127.037, 108.668, -76.1817, 0.37", "-127.732, 109.424, -76.5944, 0.37", "-128.37, 110.075, -76.9784, 0.59", "-128.929, 110.6, -77.2981, 1.11", "-129.409, 111.004, -77.5509, 1.62", "-130.003, 111.427, -77.8593, 1.69", "-130.58, 111.819, -78.1977, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-63.098, 30.318, 138.168, 0.88", "-66.1519, 29.4456, 149.585, 0.88", "-69.9864, 30.3855, 160.747, 0.88", "-72.4285, 32.6947, 172.108, 0.88", "-74.8212, 35.0784, 183.466, 0.88", "-75.5681, 39.2206, 194.573, 0.88", "-75.7686, 43.6776, 205.589, 0.88", "-78.2028, 48.9308, 216.007, 0.88", "-80.5696, 55.4507, 225.763, 0.88", "-83.6053, 62.8931, 234.703, 0.88", "-87.1653, 70.7187, 243.144, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-63.098, 30.318, 138.168, 0.22", "-66.2796, 29.4299, 149.619, 0.88", "-68.2379, 29.142, 161.368, 0.88", "-72.383, 30.3768, 172.472, 0.88", "-76.4167, 32.2487, 183.535, 0.88", "-81.1864, 32.9942, 194.427, 0.88", "-86.8871, 33.1487, 204.888, 0.88", "-91.4909, 32.2825, 215.849, 0.88", "-96.6966, 31.7656, 226.558, 0.88", "-100.629, 29.2742, 237.557, 0.88", "-102.668, 26.7357, 249.04, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-203.712, 142.393, 78.0036, 0.88", "-213.01, 148.124, 80.2382, 0.88", "-222.482, 153.556, 82.4226, 0.88", "-232.172, 158.826, 83.8532, 0.88", "-242.436, 162.63, 85.5464, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-203.712, 142.393, 78.0036, 0.22", "-212.992, 148.174, 80.2157, 0.88", "-222.424, 153.475, 82.8183, 0.88", "-232.712, 156.281, 85.6862, 0.88", "-243.11, 160.042, 86.5657, 0.88", "-253.412, 163.334, 88.8837, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-70.5984, -145.655, 69.3638, 0.88", "-75.4508, -153.269, 74.3921, 0.88", "-79.4791, -160.819, 80.1963, 0.88", "-83.6043, -167.858, 86.4977, 0.88", "-86.2344, -176.045, 92.3374, 0.88", "-87.5835, -182.822, 99.9963, 0.88", "-90.557, -189.476, 107.27, 0.88", "-92.312, -194.176, 116.152, 0.88", "-92.7655, -198.95, 125.168, 0.88", "-91.7269, -202.039, 134.775, 0.88", "-90.0088, -206.632, 143.731, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-70.5984, -145.655, 69.3638, 0.22", "-76.9644, -154.576, 73.8608, 0.88", "-84.1056, -162.551, 78.7844, 0.88", "-89.9199, -172.189, 82.6299, 0.88", "-96.1064, -181.797, 85.8987, 0.88", "-102.207, -191.727, 88.3225, 0.88", "-109.144, -201.34, 88.1857, 0.88", "-116.1, -210.924, 88.8076, 0.88", "-124.153, -219.502, 89.5313, 0.88", "-132.905, -227.248, 88.5844, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-4.55904, -49.7354, 4.87191, 1.25", "-4.26279, -51.1438, 4.03554, 1.25", "-3.98617, -52.1164, 3.55656, 1.03", "-3.45388, -53.4654, 3.02034, 0.88", "-2.97256, -54.5701, 2.71893, 0.66", "-2.62402, -55.3878, 2.59791, 0.66", "-2.13889, -56.6405, 2.51569, 0.74", "-1.76461, -57.8415, 2.59543, 0.66", "-1.4846, -58.7665, 2.74337, 0.81", "-1.2138, -59.6984, 2.93253, 0.81", "-0.86545, -60.8993, 3.14068, 0.74", "-0.518085, -62.1031, 3.26306, 0.96", "-0.124157, -63.5056, 3.30719, 1.03", "0.26269, -64.8265, 3.31328, 1.11", "0.649511, -66.1259, 3.2996, 1.25", "1.20008, -67.792, 3.23522, 0.96", "1.81908, -69.4658, 3.15219, 0.96", "2.43653, -70.9715, 3.06793, 1.11", "2.99842, -72.2232, 2.98492, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.55904, -49.7354, 4.87191, 2.06", "-5.13831, -50.3958, 4.86485, 2.06", "-5.76235, -51.1831, 4.75206, 2.06", "-6.28206, -51.9083, 4.58165, 2.06", "-6.74826, -52.5807, 4.36526, 2.06", "-7.2816, -53.3248, 4.07319, 1.99", "-7.98573, -54.3029, 3.6607, 1.77", "-8.58766, -55.1738, 3.20848, 1.47", "-9.18168, -56.0573, 2.68569, 1.11", "-9.7537, -56.8831, 2.13864, 1.11", "-10.181, -57.4647, 1.73592, 1.25", "-10.5342, -57.9073, 1.43117, 1.25", "-11.3721, -58.8143, 0.851257, 1.18", "-11.9037, -59.288, 0.580735, 1.25", "-12.7932, -59.9474, 0.266252, 1.18", "-13.4674, -60.3792, 0.13866, 1.18", "-13.9655, -60.6533, 0.119423, 1.18", "-14.7922, -61.0189, 0.191404, 1.18", "-15.6267, -61.3192, 0.350858, 1.25", "-16.0738, -61.4533, 0.467551, 1.25", "-16.7054, -61.6185, 0.689106, 1.25", "-17.6422, -61.8615, 1.04343, 1.77", "-18.2877, -62.0276, 1.29832, 2.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "56.1994, 135.761, -15.3884, 0.74", "56.9182, 135.876, -16.2552, 0.74", "58.4332, 136.296, -17.9316, 1.03", "59.2097, 136.627, -18.7821, 0.52", "59.8012, 136.97, -19.4274, 0.52", "60.411, 137.43, -20.0846, 0.74", "61.0192, 137.974, -20.7123, 0.52", "61.6779, 138.721, -21.2787, 0.59", "62.5218, 139.83, -21.8568, 0.44", "63.1064, 140.629, -22.2042, 0.52", "63.871, 141.7, -22.614, 0.44", "64.4517, 142.501, -22.8715, 0.29", "65.1726, 143.415, -23.1424, 0.29", "65.3992, 143.652, -23.2241, 0.59", "66.018, 144.205, -23.4361, 0.59", "66.801, 144.781, -23.7111, 0.44", "67.4268, 145.178, -23.947, 0.59", "68.5623, 145.905, -24.4021, 0.37", "69.4022, 146.506, -24.753, 0.37", "70.0986, 147.042, -25.0253, 0.37", "70.8757, 147.67, -25.2932, 0.37", "72.0341, 148.575, -25.6253, 0.96", "72.8005, 149.17, -25.8124, 1.03", "73.8099, 149.962, -26.0199, 0.81", "74.5095, 150.54, -26.1569, 0.66", "75.4753, 151.393, -26.3627, 0.88", "75.9696, 151.857, -26.4705, 1.25", "76.7281, 152.523, -26.605, 0.88", "77.5054, 153.104, -26.793, 0.29", "77.9797, 153.423, -26.9371, 0.44", "78.6477, 153.867, -27.1721, 0.37", "79.69, 154.505, -27.5542, 0.52", "80.8079, 155.114, -27.9632, 0.59", "82.7659, 156.017, -28.5986, 0.66", "83.8943, 156.472, -28.9197, 0.52", "84.3711, 156.644, -29.0599, 0.59", "85.2934, 156.966, -29.3285, 0.44", "86.2711, 157.346, -29.6074, 0.37", "87.5521, 157.921, -29.9173, 0.37", "88.2904, 158.283, -30.0213, 0.96", "89.2344, 158.809, -30.1138, 0.88", "90.2112, 159.427, -30.1916, 0.44", "90.8456, 159.877, -30.2509, 0.29", "91.6069, 160.461, -30.3711, 0.44", "92.5705, 161.274, -30.5834, 0.44", "93.6031, 162.223, -30.8973, 0.52", "94.281, 162.903, -31.167, 0.66", "95.4004, 164.09, -31.8157, 0.66", "96.36, 165.173, -32.5352, 0.44", "96.8672, 165.782, -33.0015, 0.37", "97.4337, 166.509, -33.6303, 0.37", "97.7832, 166.928, -34.0338, 0.52", "98.4836, 167.639, -34.762, 0.59", "98.8906, 167.942, -35.0754, 0.66", "99.6586, 168.292, -35.449, 0.52", "100.662, 168.553, -35.8066, 0.88", "101.397, 168.686, -36.0068, 0.88", "102.251, 168.849, -36.258, 0.74", "102.966, 168.979, -36.5512, 0.59", "103.496, 169.056, -36.8198, 0.29", "104.473, 169.131, -37.3678, 0.29", "105.145, 169.151, -37.7674, 0.29", "106.447, 169.235, -38.6328, 0.88", "107.755, 169.43, -39.5697, 0.96", "108.371, 169.575, -40.0258, 0.88", "109.243, 169.807, -40.685, 0.29", "109.646, 169.897, -40.9569, 0.29", "110.332, 169.959, -41.3477, 0.37", "111.048, 169.94, -41.6944, 0.37", "111.614, 169.921, -42.0134, 0.37", "113.031, 169.841, -42.9095, 0.44", "113.886, 169.759, -43.4811, 0.59", "114.448, 169.656, -43.8526, 0.81", "115.284, 169.482, -44.4128, 0.59", "116.622, 169.254, -45.327, 1.11", "117.283, 169.186, -45.7939, 1.47", "117.785, 169.158, -46.128, 1.47", "118.761, 169.098, -46.7489, 1.03", "120.013, 169.024, -47.4591, 0.59", "121.137, 168.93, -48.0131, 0.96", "122.329, 168.782, -48.5323, 0.96", "123.523, 168.62, -49.04, 0.37", "124.604, 168.477, -49.4484, 0.37", "125.409, 168.362, -49.7153, 0.37", "126.673, 168.133, -50.0943, 0.37", "127.918, 167.905, -50.4445, 0.81", "128.989, 167.752, -50.7299, 1.03", "130.462, 167.65, -51.1476, 1.25", "130.884, 167.638, -51.2649, 1.47", "132.677, 167.594, -51.7253, 0.29", "133.248, 167.592, -51.8393, 0.29", "133.905, 167.598, -51.9312, 0.44", "134.675, 167.63, -51.9956, 0.22", "135.528, 167.697, -52.0344, 0.59", "136.273, 167.797, -52.0381, 0.59", "137.461, 168.024, -52.0066, 0.22", "138.711, 168.283, -51.9707, 0.22", "140.263, 168.601, -51.9128, 0.22", "141.158, 168.791, -51.8692, 0.44", "142.718, 169.176, -51.7897, 0.22", "143.659, 169.42, -51.7441, 0.22", "144.39, 169.605, -51.7156, 0.37", "146.439, 170.093, -51.6437, 0.22", "147.834, 170.397, -51.6056, 0.22", "150.337, 170.935, -51.5471, 0.22", "151.764, 171.21, -51.5348, 0.22", "152.476, 171.333, -51.531, 0.96", "153.472, 171.498, -51.5279, 0.96", "154.374, 171.644, -51.5275, 0.88", "155.222, 171.76, -51.5198, 0.88", "157.335, 172.047, -51.4621, 0.22", "159.984, 172.387, -51.3405, 0.22", "161.315, 172.549, -51.2623, 0.44", "162.06, 172.615, -51.2164, 0.52", "163.751, 172.708, -51.0757, 0.22", "166.194, 172.764, -50.8244, 0.22", "168.086, 172.761, -50.572, 0.22", "169.895, 172.697, -50.3032, 0.22", "172.322, 172.525, -49.9182, 0.22", "173.749, 172.371, -49.6795, 0.22", "174.851, 172.189, -49.4876, 1.33", "175.604, 171.992, -49.3513, 1.47", "177.142, 171.551, -49.0583, 0.66", "178.265, 171.176, -48.8371, 0.29", "179.791, 170.622, -48.5492, 0.29", "180.96, 170.16, -48.3872, 0.29", "182.123, 169.625, -48.2435, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "56.1994, 135.761, -15.3884, 0.37", "57.4257, 136.853, -15.1789, 0.37", "58.6367, 137.989, -14.9112, 0.37", "59.1806, 138.511, -14.7672, 0.37", "60.1044, 139.405, -14.5701, 0.37", "60.7577, 140.075, -14.4411, 0.37", "62.1561, 141.561, -14.1461, 0.66", "62.8544, 142.328, -13.8934, 1.25", "63.3335, 142.891, -13.661, 1.25", "64.2967, 144.182, -13.0705, 0.59", "65.0912, 145.337, -12.4693, 0.37", "66.0265, 146.672, -11.7032, 0.37", "67.3641, 148.478, -10.6163, 0.52", "67.8742, 149.166, -10.1737, 0.37", "68.5749, 150.131, -9.56741, 0.52", "69.1113, 150.881, -9.03671, 0.66", "69.5515, 151.5, -8.60837, 0.66", "70.0962, 152.289, -8.10789, 0.44", "70.9823, 153.67, -7.37267, 0.66", "71.4337, 154.416, -6.96721, 0.81", "72.3868, 156.084, -6.06083, 1.03", "73.0587, 157.281, -5.39986, 1.18", "73.4179, 157.898, -4.97936, 1.18", "74.2264, 159.172, -3.96428, 0.44", "74.9173, 160.218, -3.04053, 0.37", "75.2971, 160.821, -2.48823, 0.37", "75.8553, 161.779, -1.65491, 0.66", "77.0467, 163.785, 0.124293, 0.96", "77.2605, 164.141, 0.42263, 0.66", "77.7364, 164.874, 1.02243, 0.29", "78.2672, 165.654, 1.57491, 0.29", "78.679, 166.216, 1.88466, 0.29", "79.6667, 167.417, 2.36825, 0.29", "80.6132, 168.451, 2.66159, 0.44", "81.6399, 169.503, 2.94284, 0.59", "82.8105, 170.649, 3.23029, 0.59", "84.1197, 171.936, 3.53467, 0.66", "84.8628, 172.705, 3.72978, 0.44", "85.5949, 173.542, 3.9541, 0.37", "86.2158, 174.312, 4.19308, 0.52", "86.8133, 175.083, 4.46662, 0.66", "87.3153, 175.746, 4.7389, 0.66", "88.3834, 177.189, 5.38961, 0.59", "89.1118, 178.206, 5.84868, 0.74", "90.0001, 179.489, 6.46625, 0.66", "91.074, 181.145, 7.2729, 0.52", "91.8464, 182.414, 7.90002, 0.59", "92.3619, 183.283, 8.34443, 0.59", "92.899, 184.169, 8.80051, 0.59", "93.7822, 185.547, 9.56252, 0.44", "94.4768, 186.621, 10.1816, 0.29", "95.0768, 187.6, 10.8105, 0.44", "95.7819, 188.682, 11.6014, 0.59", "96.5975, 189.733, 12.4405, 0.74", "97.4039, 190.627, 13.1599, 0.59", "98.3269, 191.579, 13.8578, 0.96", "98.9751, 192.261, 14.3563, 1.11", "100.099, 193.617, 15.2588, 0.59", "101.009, 194.936, 16.0183, 0.52", "101.739, 196.057, 16.5915, 0.52", "102.476, 197.164, 17.0934, 0.66", "103.671, 198.961, 17.8008, 0.74", "104.396, 200.136, 18.2105, 0.74", "105.206, 201.54, 18.6713, 0.29", "106.06, 203.03, 19.1489, 0.29", "106.396, 203.535, 19.3085, 0.29", "107.349, 204.814, 19.6639, 0.29", "108.323, 205.932, 19.9063, 0.52", "108.986, 206.584, 20.061, 0.37", "109.863, 207.339, 20.2617, 0.37", "110.774, 208.051, 20.456, 0.29", "112.239, 209.071, 20.7717, 0.29", "113.342, 209.751, 20.9915, 0.37", "114.277, 210.298, 21.1701, 0.52", "115.001, 210.718, 21.3286, 0.52", "115.919, 211.246, 21.5478, 0.44", "117.348, 212.066, 21.887, 0.44", "118.272, 212.614, 22.0911, 0.59", "119.231, 213.249, 22.2857, 0.74", "120.168, 213.898, 22.5626, 0.74", "121.247, 214.685, 22.9483, 0.52", "122.163, 215.387, 23.2936, 0.37", "123.438, 216.367, 23.7595, 0.29", "124.423, 217.121, 24.1302, 0.29", "126.742, 218.861, 24.9797, 0.66", "127.852, 219.687, 25.3966, 0.44", "128.982, 220.496, 25.8457, 0.52", "129.665, 220.971, 26.1228, 0.52", "130.426, 221.507, 26.4449, 0.37", "131.07, 222.014, 26.7224, 0.37", "131.745, 222.596, 26.9616, 0.44", "132.71, 223.506, 27.3547, 0.74", "133.313, 224.127, 27.6173, 0.88", "134.222, 225.17, 28.0472, 0.74", "134.893, 225.982, 28.3782, 0.52", "135.744, 227.016, 28.7998, 0.37", "136.522, 227.924, 29.1635, 0.22", "137.069, 228.516, 29.393, 0.22", "137.958, 229.396, 29.7362, 0.59", "138.678, 230.022, 30.0251, 0.74", "139.521, 230.623, 30.3945, 0.59", "139.918, 230.857, 30.5861, 0.59", "141.702, 231.8, 31.4765, 0.37", "142.404, 232.166, 31.8234, 0.37", "143.556, 232.745, 32.3283, 0.52", "144.664, 233.274, 32.7176, 0.52", "145.535, 233.646, 32.9386, 0.52", "146.83, 234.115, 33.2601, 0.81", "147.589, 234.357, 33.4478, 0.88", "148.58, 234.644, 33.6742, 0.88", "150.193, 235.063, 33.9944, 0.44", "151.702, 235.404, 34.2929, 0.37", "154.228, 235.906, 34.7977, 0.59", "155.194, 236.062, 34.9944, 0.59", "156.616, 236.269, 35.355, 0.37", "157.646, 236.423, 35.661, 0.29", "158.762, 236.583, 36.0145, 0.29", "160.13, 236.73, 36.3542, 0.29", "161.548, 236.838, 36.5864, 0.29", "163.856, 236.95, 36.962, 0.59", "164.907, 236.999, 37.1443, 0.59", "165.89, 237.044, 37.3154, 0.59", "167.881, 237.092, 37.6158, 0.29", "168.931, 237.105, 37.7377, 0.29", "170.631, 237.145, 37.8711, 0.66", "171.813, 237.177, 37.9125, 0.74", "172.869, 237.207, 37.9427, 0.74", "174.961, 237.325, 37.9399, 0.22", "176.836, 237.514, 37.9013, 0.22", "177.91, 237.658, 37.8269, 0.29", "178.635, 237.792, 37.7382, 0.29", "179.971, 238.131, 37.5469, 0.22", "181.623, 238.748, 37.2963, 0.37", "182.477, 239.188, 37.1635, 0.52", "183.126, 239.575, 37.0684, 0.52", "184.077, 240.173, 36.9483, 0.59", "185.176, 240.828, 36.8358, 0.59", "186.327, 241.394, 36.7846, 0.52", "187.228, 241.731, 36.7924, 0.59", "188.358, 242.06, 36.8109, 0.44", "189.304, 242.282, 36.8254, 0.29", "190.346, 242.495, 36.8989, 0.29", "192.246, 242.954, 37.1268, 0.29", "192.925, 243.137, 37.2311, 0.29", "194.276, 243.557, 37.4673, 0.29", "194.981, 243.811, 37.6002, 0.29", "197.121, 244.685, 37.9682, 0.29", "198.229, 245.195, 38.07, 0.29", "199.651, 245.897, 38.0789, 0.22", "200.347, 246.23, 38.04, 0.44", "201.042, 246.539, 37.9608, 0.44", "202.207, 246.993, 37.7653, 0.29", "204.167, 247.573, 37.3024, 0.22", "205.018, 247.764, 37.1012, 0.22", "205.844, 247.931, 36.9126, 0.44", "206.639, 248.053, 36.7145, 0.44", "207.623, 248.161, 36.4309, 0.37", "208.892, 248.287, 36.039, 0.29", "210.302, 248.442, 35.5716, 0.29", "211.199, 248.583, 35.2316, 0.29", "212.655, 248.897, 34.6149, 0.29", "213.54, 249.159, 34.2111, 0.29", "214.627, 249.572, 33.653, 0.44", "215.616, 249.978, 33.046, 0.37", "216.546, 250.286, 32.3778, 0.52", "217.269, 250.488, 31.8345, 0.52", "217.831, 250.623, 31.4357, 0.66", "219.409, 250.957, 30.3541, 0.96", "220.83, 251.253, 29.4219, 0.81", "222.758, 251.735, 28.2113, 0.29", "223.958, 252.068, 27.3541, 0.29", "225.01, 252.429, 26.5671, 0.29", "225.724, 252.733, 26.096, 0.29", "227.205, 253.361, 25.3871, 0.29", "228.124, 253.709, 25.0449, 0.66", "231.58, 254.725, 23.9276, 0.29", "232.345, 254.854, 23.683, 0.22", "235.292, 255.164, 22.7155, 0.22", "238.192, 255.264, 21.7731, 0.22", "239.472, 255.218, 21.3732, 0.37", "240.758, 255.109, 21.0771, 0.44", "241.317, 255.052, 21.0451, 0.22", "253.081, 263.449, 22.0452, 0.22", "265.525, 270.626, 20.8025, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-86.5977, 121.665, 84.2977, 0.88", "-92.122, 126.67, 90.1326, 0.88", "-97.6351, 133.221, 94.328, 0.88", "-102.936, 140.941, 96.3712, 0.88", "-110.099, 146.37, 99.2846, 0.88", "-118.284, 150.49, 101.313, 0.88", "-126.416, 154.417, 103.857, 0.88", "-134.358, 159.331, 104.992, 0.88", "-142.278, 163.458, 107.896, 0.88", "-149.254, 168.471, 111.81, 0.88", "-154.93, 173.835, 117.183, 0.88", "-158.879, 179.245, 123.934, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-86.5977, 121.665, 84.2977, 0.22", "-93.4772, 129.443, 93.4908, 0.88", "-99.0459, 137.215, 103.541, 0.88", "-102.181, 144.396, 114.955, 0.88", "-103.399, 152.542, 126.15, 0.88", "-102.226, 158.426, 138.569, 0.88", "-100.294, 163.716, 151.134, 0.88", "-96.7365, 168.013, 163.688, 0.88", "-94.8502, 171.125, 176.901, 0.88", "-93.4351, 172.171, 190.458, 0.88", "-93.8575, 173.102, 204.09, 0.88", "-91.8621, 175.133, 217.474, 0.88", "-88.3675, 176.5, 230.624, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-130.58, 111.819, -78.1977, 0.29", "-130.788, 113.954, -79.5132, 0.29", "-131.163, 115.329, -80.3861, 0.29", "-131.587, 116.379, -81.0484, 0.37", "-131.824, 116.928, -81.376, 0.37", "-132.121, 117.702, -81.8635, 0.81", "-132.491, 118.666, -82.4783, 0.81", "-132.927, 119.53, -83.0328, 0.44", "-133.263, 120.105, -83.4066, 0.22", "-133.667, 120.741, -83.9048, 0.22", "-134.515, 122.15, -85.1701, 0.37", "-134.737, 122.547, -85.5655, 0.22", "-135.175, 123.345, -86.3577, 0.22", "-135.539, 123.983, -86.9759, 0.59", "-136.158, 124.931, -87.9677, 0.74", "-136.982, 125.949, -89.271, 0.37", "-137.71, 126.631, -90.4621, 0.37", "-138.233, 127.104, -91.4542, 0.37", "-138.75, 127.574, -92.4897, 1.03", "-139.647, 128.359, -94.2727, 1.62", "-140.918, 129.387, -96.7246, 1.84", "-142.63, 130.699, -100.047, 1.33", "-143.797, 131.611, -102.39, 0.44", "-144.317, 132.056, -103.488, 0.44", "-144.813, 132.535, -104.543, 0.44", "-145.221, 132.988, -105.353, 0.59", "-146.42, 134.434, -107.45, 0.74", "-146.799, 134.861, -108.044, 0.74", "-147.35, 135.297, -108.819, 0.88", "-148.215, 135.776, -109.991, 0.96", "-148.992, 136.067, -111.009, 0.52", "-149.551, 136.223, -111.666, 0.37", "-151.046, 136.545, -113.283, 0.29", "-152.21, 136.788, -114.623, 0.29", "-153.138, 137.002, -115.72, 0.29", "-154.791, 137.493, -117.676, 0.29", "-155.463, 137.828, -118.504, 0.29", "-156.004, 138.28, -119.235, 0.29", "-156.648, 139.154, -120.176, 0.29", "-157.041, 139.933, -120.902, 0.52", "-157.294, 140.606, -121.498, 0.66", "-157.669, 141.662, -122.358, 0.66", "-158.146, 142.815, -123.403, 0.44", "-158.494, 143.457, -124.079, 0.59", "-159.285, 144.788, -125.605, 0.29", "-159.852, 145.773, -126.79, 0.29", "-160.362, 146.668, -127.839, 0.81", "-160.978, 147.806, -129.089, 1.25", "-162.252, 150.329, -131.607, 0.44", "-163.182, 152.368, -133.437, 0.74", "-163.862, 154.023, -134.758, 0.29", "-164.246, 155.002, -135.517, 0.29", "-164.671, 156.236, -136.427, 0.29", "-165.28, 158.412, -137.723, 0.22", "-165.559, 159.913, -138.341, 0.22", "-165.637, 160.419, -138.483, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-130.58, 111.819, -78.1977, 0.44", "-132.043, 113.181, -77.925, 0.44", "-132.794, 113.848, -77.7705, 0.52", "-133.39, 114.35, -77.6395, 0.59", "-134.048, 114.855, -77.5142, 0.59", "-134.859, 115.43, -77.3785, 0.37", "-135.607, 115.946, -77.28, 0.37", "-136.238, 116.365, -77.2089, 0.96", "-137.062, 116.88, -77.1784, 1.4", "-137.756, 117.314, -77.1934, 1.62", "-138.732, 117.981, -77.2797, 0.59", "-139.519, 118.576, -77.4449, 0.81", "-140.143, 119.077, -77.6228, 0.96", "-140.462, 119.346, -77.7301, 1.18", "-141.018, 119.854, -77.9303, 0.29", "-141.711, 120.521, -78.1682, 0.22", "-142.652, 121.391, -78.4759, 0.96", "-143.138, 121.796, -78.6204, 0.96", "-143.874, 122.34, -78.8463, 0.66", "-144.73, 122.869, -79.1287, 0.44", "-145.686, 123.334, -79.4786, 0.44", "-146.669, 123.75, -79.8628, 0.81", "-147.559, 124.119, -80.227, 0.96", "-148.587, 124.557, -80.6891, 0.74", "-150.072, 125.176, -81.4137, 0.29", "-150.979, 125.545, -81.8935, 0.29", "-151.601, 125.799, -82.245, 0.44", "-152.086, 125.989, -82.5337, 0.66", "-152.632, 126.19, -82.8683, 0.52", "-153.286, 126.389, -83.268, 0.52", "-154.086, 126.555, -83.737, 0.66", "-154.95, 126.633, -84.1759, 0.37", "-155.758, 126.609, -84.5308, 0.29", "-156.403, 126.556, -84.7591, 0.29", "-156.901, 126.507, -84.9181, 0.29", "-157.801, 126.402, -85.1384, 0.29", "-158.452, 126.299, -85.3196, 0.52", "-159.086, 126.179, -85.5252, 0.74", "-159.931, 125.948, -85.822, 0.74", "-161.172, 125.419, -86.352, 0.52", "-161.825, 124.969, -86.7135, 1.47", "-162.915, 124.013, -87.3922, 1.92", "-163.464, 123.487, -87.7643, 1.84", "-164.269, 122.697, -88.3505, 0.88", "-165.111, 121.944, -89.024, 0.66", "-166.276, 121.122, -89.9398, 0.37", "-166.965, 120.829, -90.4593, 0.29", "-167.71, 120.716, -90.9613, 0.29", "-168.558, 120.773, -91.4734, 0.44", "-170.056, 121.04, -92.267, 0.59", "-171.347, 121.385, -92.9579, 0.66", "-172.098, 121.632, -93.3676, 0.66", "-172.576, 121.772, -93.6483, 0.44", "-173.566, 122.0, -94.2259, 0.37", "-174.993, 122.264, -95.0979, 0.37", "-176.478, 122.51, -95.961, 0.37", "-176.977, 122.593, -96.2497, 0.52", "-177.995, 122.733, -96.8209, 0.66", "-179.164, 122.88, -97.4344, 0.37", "-180.569, 122.926, -98.2287, 0.37", "-181.755, 122.858, -98.8827, 0.74", "-182.387, 122.775, -99.2004, 0.74", "-183.682, 122.57, -99.8544, 0.52", "-184.932, 122.362, -100.49, 0.52", "-187.89, 121.744, -102.095, 0.52", "-188.938, 121.412, -102.709, 0.44", "-189.648, 121.106, -103.185, 0.29", "-190.343, 120.752, -103.671, 0.29", "-191.643, 120.015, -104.578, 0.29", "-192.635, 119.475, -105.27, 0.29", "-194.345, 118.745, -106.302, 0.52", "-195.399, 118.269, -107.029, 0.66", "-196.129, 117.88, -107.597, 0.66", "-196.642, 117.512, -108.057, 0.52", "-197.296, 116.955, -108.68, 0.52", "-197.805, 116.552, -109.146, 0.22", "-199.7, 115.301, -110.743, 1.18", "-200.376, 114.834, -111.328, 1.4", "-201.59, 113.869, -112.38, 0.52", "-202.028, 113.488, -112.731, 0.29", "-202.736, 112.841, -113.189, 0.29", "-203.617, 112.068, -113.619, 0.29", "-205.397, 110.574, -114.089, 0.44", "-206.57, 109.656, -114.236, 0.44", "-207.476, 108.957, -114.291, 0.29", "-209.253, 107.545, -114.328, 0.52", "-210.078, 106.861, -114.291, 0.52", "-211.214, 105.91, -114.161, 0.37", "-212.412, 104.972, -113.919, 0.29", "-214.085, 103.804, -113.561, 0.44", "-214.829, 103.35, -113.4, 0.44", "-216.068, 102.738, -113.145, 0.22", "-217.1, 102.327, -112.967, 0.22", "-218.114, 102.023, -112.84, 0.52", "-218.496, 101.935, -112.807, 0.52", "-220.036, 101.67, -112.707, 0.29", "-221.94, 101.417, -112.656, 0.29", "-223.411, 101.286, -112.669, 0.22", "-225.335, 101.14, -112.716, 0.22", "-226.412, 101.056, -112.752, 0.59", "-227.521, 100.96, -112.781, 0.44", "-228.592, 100.871, -112.784, 0.22", "-229.236, 100.825, -112.753, 0.22", "-230.079, 100.777, -112.663, 0.37", "-230.804, 100.752, -112.539, 0.37", "-231.586, 100.741, -112.371, 0.22", "-232.618, 100.751, -112.138, 0.22", "-233.466, 100.787, -111.955, 0.37", "-234.176, 100.843, -111.801, 0.37", "-235.036, 100.923, -111.593, 0.37", "-235.883, 100.997, -111.375, 0.29", "-236.685, 101.069, -111.176, 0.37", "-238.714, 101.276, -110.69, 0.22", "-240.099, 101.424, -110.355, 0.22", "-242.011, 101.636, -109.876, 0.22", "-242.798, 101.727, -109.669, 0.22", "-243.619, 101.822, -109.44, 0.44", "-244.043, 101.869, -109.307, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-87.1653, 70.7187, 243.144, 0.88", "-88.7989, 73.3155, 249.447, 0.88", "-90.1521, 75.6304, 255.915, 0.88", "-92.488, 77.8587, 262.134, 0.88", "-95.007, 80.0215, 268.305, 0.88", "-97.1937, 81.9283, 274.674, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-87.1653, 70.7187, 243.144, 0.22", "-89.4105, 74.3829, 251.915, 0.88", "-93.2287, 78.0255, 260.153, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-102.668, 26.7357, 249.04, 0.88", "-106.412, 25.2528, 254.628, 0.88", "-109.322, 23.9055, 260.717, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-102.668, 26.7357, 249.04, 0.22", "-102.858, 29.2926, 258.711, 0.88", "-101.344, 31.7819, 268.281, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-242.436, 162.63, 85.5464, 0.88", "-252.575, 162.461, 87.5481, 0.88", "-262.875, 163.069, 88.1388, 0.88", "-273.008, 164.811, 89.2423, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-242.436, 162.63, 85.5464, 0.22", "-248.476, 171.513, 85.6273, 0.88", "-254.421, 180.354, 84.1918, 0.88", "-259.579, 189.657, 82.3816, 0.88", "-263.919, 199.207, 79.7492, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-90.0088, -206.632, 143.731, 0.88", "-92.2987, -214.098, 152.709, 0.88", "-95.2046, -221.931, 161.209, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-90.0088, -206.632, 143.731, 0.22", "-92.4659, -214.246, 153.153, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-132.905, -227.248, 88.5844, 0.88", "-139.565, -236.332, 90.3118, 0.88", "-146.362, -245.46, 90.9563, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-132.905, -227.248, 88.5844, 0.22", "-138.964, -233.196, 91.3946, 0.88", "-144.255, -240.235, 93.3217, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.99842, -72.2232, 2.98492, 0.66", "3.63328, -73.7878, 3.17574, 0.66", "4.05935, -74.8782, 3.23078, 0.52", "4.52649, -76.2088, 3.26264, 1.18", "4.73457, -76.9381, 3.29799, 1.62", "4.88772, -77.7021, 3.35626, 1.33", "4.99981, -78.6884, 3.45769, 0.74", "5.05721, -79.8345, 3.50972, 0.44", "5.0758, -80.5501, 3.55694, 0.44", "5.05908, -81.5549, 3.67034, 0.44", "5.06375, -82.5799, 3.79723, 0.52", "5.13234, -83.6054, 3.91742, 0.66", "5.35898, -84.632, 3.98967, 0.44", "5.80803, -85.4735, 4.02268, 0.66", "6.13077, -85.9006, 4.05777, 0.88", "6.68472, -86.5235, 4.11184, 0.88", "7.01141, -86.8673, 4.13843, 0.96", "7.4099, -87.2841, 4.1666, 0.66", "8.27888, -88.2747, 4.20395, 0.44", "9.12264, -89.3609, 4.1753, 0.52", "9.51694, -89.8894, 4.15115, 0.52", "10.175, -90.7475, 4.10465, 0.74", "10.6388, -91.3198, 4.05381, 0.96", "11.1513, -91.8987, 3.96458, 0.96", "11.9428, -92.6805, 3.75224, 0.59", "12.8126, -93.3657, 3.52462, 0.59", "13.8286, -94.0918, 3.31486, 0.88", "14.1796, -94.3423, 3.25652, 0.88", "14.6538, -94.7114, 3.18662, 0.88", "15.2526, -95.2325, 3.10675, 0.74", "16.1416, -96.1071, 2.96286, 0.74", "16.8918, -96.9656, 2.78183, 0.74", "17.6276, -97.9264, 2.56773, 0.81", "18.1434, -98.6587, 2.41695, 0.96", "18.5006, -99.2197, 2.30244, 0.96", "18.8936, -99.9074, 2.15646, 0.88", "19.3216, -100.762, 1.9616, 0.88", "19.4655, -101.05, 1.89385, 1.11", "19.8834, -101.923, 1.64774, 0.74", "20.1979, -102.587, 1.43097, 0.74", "20.522, -103.252, 1.2115, 0.66", "21.0346, -104.355, 0.875695, 0.44", "21.3831, -105.147, 0.669235, 1.03", "21.8605, -106.292, 0.423365, 0.81", "22.2472, -107.266, 0.233345, 0.59", "22.6942, -108.434, 0.0373087, 0.74", "23.0051, -109.298, -0.0975843, 0.59", "23.2672, -110.065, -0.170276, 0.59", "23.629, -111.245, -0.203079, 0.44", "23.8661, -112.136, -0.167987, 0.37", "24.1079, -113.259, -0.102687, 0.74", "24.2611, -114.108, -0.0588435, 0.88", "24.5428, -115.616, 0.0266982, 0.88", "24.6739, -116.238, 0.0782724, 0.74", "24.9573, -117.422, 0.211494, 0.66", "25.1975, -118.287, 0.328133, 0.74", "25.555, -119.353, 0.471386, 0.74", "25.8321, -120.07, 0.551416, 0.74", "26.3715, -121.378, 0.636991, 0.52", "26.6178, -121.967, 0.657893, 0.52", "26.9914, -122.876, 0.738749, 0.29", "27.2966, -123.631, 0.83932, 0.59", "27.5258, -124.192, 0.923935, 0.74", "27.8411, -124.975, 1.04997, 0.44", "28.2267, -125.947, 1.21093, 0.37", "28.9195, -127.672, 1.55421, 0.37", "29.2187, -128.415, 1.73946, 0.52", "29.51, -129.13, 1.97483, 0.59", "29.8195, -129.906, 2.29282, 0.74", "30.0249, -130.454, 2.55655, 1.18", "30.1507, -130.841, 2.75167, 1.18", "30.4364, -131.958, 3.28508, 0.74", "30.6836, -133.27, 3.9462, 0.52", "30.8113, -134.306, 4.47113, 0.44", "30.8932, -135.57, 5.08497, 0.59", "30.8967, -136.607, 5.55344, 0.44", "30.8632, -137.293, 5.81908, 0.44", "30.7666, -138.271, 6.10944, 0.59", "30.6808, -138.967, 6.24556, 0.59", "30.604, -139.549, 6.30976, 0.59", "30.4306, -140.681, 6.34456, 0.66", "30.3087, -141.493, 6.33256, 0.59", "30.1935, -142.396, 6.29088, 0.52", "30.1283, -143.001, 6.2463, 0.66", "30.043, -143.952, 6.17142, 0.66", "29.9589, -145.117, 6.09715, 0.52", "29.8988, -146.014, 6.0505, 0.74", "29.8414, -146.776, 6.03029, 0.88", "29.7437, -147.913, 6.03025, 0.96", "29.6299, -149.217, 6.06001, 0.88", "29.5585, -150.128, 6.10043, 0.88", "29.4807, -150.85, 6.11593, 0.81", "29.3338, -151.76, 6.12227, 0.66", "29.1999, -152.457, 6.14459, 0.66", "29.0709, -153.132, 6.19645, 0.44", "28.9237, -154.025, 6.31144, 0.44", "28.7703, -155.352, 6.58713, 0.44", "28.7401, -156.376, 6.89224, 0.44", "28.84, -157.445, 7.35507, 0.66", "28.9926, -158.077, 7.70586, 0.81", "29.2757, -158.833, 8.204, 0.96", "29.7394, -159.781, 8.88481, 0.66", "30.2455, -160.708, 9.57938, 0.59", "30.8189, -161.751, 10.3375, 0.96", "31.2105, -162.538, 10.86, 0.96", "31.5027, -163.227, 11.27, 0.96", "31.7186, -163.915, 11.618, 0.66", "31.8651, -164.738, 11.9381, 0.44", "31.8848, -165.513, 12.1663, 0.37", "31.8357, -166.107, 12.2778, 0.37", "31.7206, -167.013, 12.3908, 0.29", "31.5699, -168.013, 12.4769, 0.29", "31.4112, -169.053, 12.5425, 0.37", "31.2791, -170.02, 12.5846, 0.29", "31.1567, -171.072, 12.6358, 0.29", "31.0378, -172.132, 12.7019, 0.29", "30.9207, -173.238, 12.782, 0.29", "30.8842, -173.702, 12.815, 0.44", "30.8444, -174.46, 12.8661, 0.52", "30.8042, -175.586, 12.942, 0.37", "30.7644, -176.691, 13.0287, 1.03", "30.7492, -177.246, 13.0591, 1.03", "30.7584, -177.915, 13.0674, 0.74", "30.7978, -178.753, 13.0547, 0.59", "30.8376, -179.238, 13.0429, 0.81", "30.8854, -179.848, 13.0329, 0.81", "30.9879, -181.001, 13.0844, 0.37", "31.0379, -181.845, 13.1858, 0.37", "31.0373, -182.496, 13.336, 0.37", "30.9311, -183.444, 13.7038, 0.29", "30.7739, -184.036, 14.0239, 0.44", "30.4829, -184.699, 14.4726, 0.59", "30.2085, -185.199, 14.8468, 0.74", "29.9989, -185.579, 15.0975, 0.74", "29.5916, -186.38, 15.5344, 0.22", "29.3286, -187.09, 15.7957, 0.22", "29.2281, -187.665, 15.9045, 0.66", "29.2206, -188.492, 15.9354, 0.29", "29.3504, -189.514, 15.8934, 0.59", "29.427, -189.88, 15.8578, 0.44", "29.672, -190.638, 15.7351, 0.29", "29.8579, -191.07, 15.6456, 0.22", "30.2896, -191.919, 15.443, 0.22", "30.545, -192.379, 15.3261, 0.22", "34.4208, -201.889, 14.922, 0.22", "39.2559, -210.909, 14.7523, 0.22", "43.0788, -220.206, 16.798, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.99842, -72.2232, 2.98492, 1.03", "3.4699, -73.3134, 1.81693, 1.03", "4.4902, -75.0871, -0.27674, 0.66", "5.04135, -75.8472, -1.22822, 0.66", "5.82085, -76.788, -2.48664, 0.66", "6.99862, -78.1291, -4.14652, 1.11", "7.56704, -78.7604, -4.85935, 1.18", "8.30791, -79.4886, -5.59292, 0.96", "9.42564, -80.4213, -6.37221, 0.81", "11.4849, -81.9173, -7.49386, 0.81", "13.0832, -82.9383, -8.12922, 0.74", "14.3285, -83.6529, -8.44245, 0.96", "15.9602, -84.4742, -8.74909, 0.96", "16.6071, -84.7352, -8.8592, 0.96", "17.5689, -84.9859, -9.02203, 0.81", "18.7286, -85.1425, -9.24127, 0.81", "20.55, -85.2688, -9.7064, 0.74", "21.8931, -85.3261, -10.1313, 0.96", "23.4841, -85.4332, -10.6835, 0.96", "24.8961, -85.6133, -11.1679, 0.74", "26.4424, -85.9246, -11.6383, 0.88", "27.6936, -86.2676, -11.9535, 1.03", "29.058, -86.7681, -12.188, 1.03", "30.3667, -87.4063, -12.2167, 0.88", "31.3346, -88.0057, -12.1196, 0.66", "32.5983, -88.9196, -11.9917, 1.03", "33.3783, -89.5299, -11.9385, 1.03", "34.1123, -90.1217, -11.9688, 0.81", "35.736, -91.4551, -12.0941, 0.59", "36.7895, -92.3158, -12.2655, 0.74", "38.3778, -93.5819, -12.5634, 0.74", "39.3028, -94.3061, -12.7412, 0.88", "40.8494, -95.4877, -12.9838, 0.66", "42.2321, -96.5281, -13.1581, 0.96", "43.1511, -97.2114, -13.224, 1.11", "44.033, -97.8521, -13.2085, 1.11", "45.4832, -98.8531, -13.0808, 0.81", "46.9746, -99.7928, -12.9051, 0.74", "48.5069, -100.66, -12.7175, 0.66", "50.2567, -101.584, -12.595, 0.88", "51.3369, -102.181, -12.5622, 1.03", "52.4065, -102.857, -12.5963, 1.03", "53.6657, -103.812, -12.7144, 0.81", "54.4629, -104.594, -12.8685, 0.81", "55.4209, -105.784, -13.1914, 0.81", "56.4067, -107.295, -13.6921, 0.88", "57.223, -108.648, -14.1314, 1.03", "57.829, -109.705, -14.4602, 0.88", "58.6683, -111.091, -14.9024, 0.66", "59.3143, -111.973, -15.142, 0.66", "60.1336, -112.765, -15.3042, 0.59", "61.4198, -113.588, -15.4017, 0.88", "61.9888, -113.868, -15.4147, 0.88", "63.2684, -114.453, -15.4558, 0.59", "64.2033, -114.91, -15.4852, 0.74", "65.0118, -115.37, -15.5613, 0.81", "66.0797, -116.078, -15.7941, 0.74", "67.1015, -116.848, -16.1346, 0.59", "68.5252, -118.023, -16.7213, 0.59", "69.2853, -118.698, -17.0779, 0.88", "70.047, -119.418, -17.4826, 1.03", "71.3018, -120.7, -18.2054, 0.66", "72.1026, -121.576, -18.7019, 0.59", "73.0959, -122.674, -19.3445, 2.06", "73.7809, -123.405, -19.7749, 2.73" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-18.2877, -62.0276, 1.29832, 1.25", "-19.201, -61.8775, 1.42981, 1.25", "-20.2207, -61.8277, 1.56891, 0.66", "-20.6861, -61.8412, 1.63231, 0.66", "-21.3343, -61.8904, 1.70937, 0.81", "-21.9853, -61.949, 1.77071, 0.81", "-22.8233, -62.0083, 1.84905, 0.44", "-23.3521, -62.0691, 1.87702, 0.44", "-23.8134, -62.0934, 1.89795, 0.59", "-24.1657, -62.0639, 1.90214, 0.74", "-24.6533, -61.9532, 1.89907, 0.74", "-25.1772, -61.8132, 1.863, 0.66", "-25.542, -61.7239, 1.83305, 0.52", "-26.2717, -61.5915, 1.76392, 0.52", "-26.945, -61.5185, 1.70464, 0.52", "-27.7169, -61.4801, 1.66741, 0.66", "-28.5913, -61.4745, 1.6722, 0.88", "-29.3973, -61.4863, 1.70663, 1.03", "-29.9652, -61.4915, 1.74648, 1.03", "-30.6141, -61.4741, 1.80014, 0.96", "-31.2044, -61.4206, 1.86072, 0.74", "-32.015, -61.2897, 1.93983, 0.59", "-32.4869, -61.2019, 1.98779, 0.59", "-33.2788, -61.0773, 2.06747, 0.74", "-33.9656, -60.992, 2.12797, 0.74", "-34.691, -60.9368, 2.16411, 0.52", "-35.3094, -60.9349, 2.17817, 0.59", "-36.1091, -61.0201, 2.18986, 0.59", "-36.8315, -61.1549, 2.22102, 0.74", "-37.5739, -61.3294, 2.28129, 0.74", "-38.185, -61.4787, 2.34807, 0.74", "-39.0481, -61.6595, 2.45408, 0.74", "-39.8932, -61.801, 2.57269, 0.74", "-40.8093, -61.9289, 2.7202, 0.88", "-41.3013, -61.9861, 2.79798, 0.88", "-42.1246, -62.0699, 2.88406, 0.96", "-43.0659, -62.1388, 2.9385, 0.96", "-43.9374, -62.1849, 2.95658, 0.66", "-44.526, -62.2374, 2.95799, 0.59", "-45.4585, -62.4009, 2.95129, 0.59", "-46.839, -62.7539, 2.9478, 0.81", "-47.5947, -63.0012, 2.94203, 0.96", "-48.6065, -63.3759, 2.94192, 0.96", "-49.9355, -63.8907, 2.97117, 0.96", "-50.928, -64.2732, 3.03002, 0.96", "-51.6783, -64.5525, 3.11254, 0.96", "-52.3591, -64.7737, 3.21757, 0.81", "-53.0714, -64.9476, 3.3116, 0.88", "-53.7991, -65.0396, 3.39004, 0.88", "-54.4715, -65.051, 3.44782, 0.66", "-54.9845, -65.0442, 3.48438, 0.66", "-55.5072, -65.0631, 3.51883, 0.59", "-56.0407, -65.1451, 3.56166, 0.59", "-56.7363, -65.3616, 3.619, 0.81", "-57.2938, -65.5827, 3.67655, 0.81", "-58.0894, -65.9022, 3.76257, 0.52", "-58.8422, -66.166, 3.84595, 0.66", "-59.5491, -66.3586, 3.9244, 0.66", "-60.4566, -66.5052, 4.03598, 0.66", "-61.2581, -66.5408, 4.13673, 0.88", "-62.1084, -66.5012, 4.24893, 0.88", "-62.8253, -66.4282, 4.34813, 0.81", "-63.6089, -66.3525, 4.40893, 0.88", "-64.4694, -66.3021, 4.40074, 1.03", "-65.1416, -66.3004, 4.34557, 1.03", "-65.8657, -66.358, 4.2174, 0.81", "-66.5068, -66.4666, 4.0617, 0.81", "-67.9246, -66.8956, 3.58047, 0.44", "-68.7653, -67.2551, 3.21429, 0.66", "-69.3619, -67.5713, 2.91963, 0.81", "-70.1533, -68.0425, 2.49243, 1.03", "-70.5002, -68.2603, 2.30299, 1.11", "-71.4791, -68.8258, 1.83064, 0.37", "-72.146, -69.1331, 1.59686, 0.37", "-72.6375, -69.3251, 1.46307, 1.69", "-73.2957, -69.5453, 1.32773, 2.06", "-73.7346, -69.6723, 1.27719, 2.06", "-75.0067, -70.0087, 1.20917, 0.59", "-76.0928, -70.2576, 1.22118, 0.44", "-77.2352, -70.4866, 1.27431, 0.52", "-77.8436, -70.5892, 1.31975, 0.74", "-78.6346, -70.7062, 1.39926, 0.88", "-79.45, -70.8213, 1.49463, 0.66", "-79.7195, -70.8579, 1.5439, 0.44", "-80.3339, -70.9215, 1.68675, 0.37", "-81.0129, -70.9385, 1.88287, 0.96", "-81.8129, -70.9237, 2.17791, 1.62", "-82.4953, -70.9169, 2.48729, 1.77", "-83.2662, -70.9305, 2.87689, 1.77", "-83.9721, -70.9732, 3.25143, 1.11", "-84.6231, -71.0302, 3.60722, 0.66", "-85.3742, -71.087, 4.00809, 0.52", "-86.2598, -71.1216, 4.51276, 0.44", "-86.9076, -71.1232, 4.86473, 0.44", "-87.3955, -71.1166, 5.10558, 0.59", "-87.829, -71.1137, 5.30744, 0.59", "-88.4226, -71.1244, 5.55687, 0.44", "-89.6987, -71.1775, 6.06524, 0.74", "-90.3167, -71.2082, 6.31457, 0.81", "-90.9963, -71.2529, 6.57692, 0.81", "-91.7245, -71.3094, 6.82539, 0.96", "-92.4522, -71.3797, 7.00502, 1.11", "-93.0815, -71.4433, 7.10587, 1.11", "-93.6787, -71.4917, 7.12977, 0.81", "-94.6138, -71.5453, 7.11663, 0.59", "-95.3566, -71.5545, 7.07756, 1.18", "-96.3914, -71.5309, 7.00022, 1.47", "-96.9254, -71.5125, 6.95958, 1.62", "-97.2598, -71.4915, 6.92253, 1.62", "-97.8183, -71.4332, 6.85682, 1.11", "-98.4573, -71.3313, 6.82012, 0.66", "-99.1015, -71.1694, 6.8319, 0.44", "-99.859, -70.909, 6.89777, 0.37", "-100.688, -70.5682, 6.98609, 0.37", "-101.208, -70.3237, 7.06082, 0.37", "-101.928, -69.9469, 7.19259, 0.44", "-102.895, -69.4375, 7.36795, 0.74", "-103.361, -69.1999, 7.44124, 1.18", "-103.772, -69.0016, 7.49502, 1.33", "-104.272, -68.7776, 7.55672, 1.33", "-104.889, -68.487, 7.60578, 0.81", "-105.712, -68.0654, 7.65469, 0.29", "-106.283, -67.7565, 7.69293, 0.29", "-107.162, -67.2596, 7.76293, 0.37", "-107.727, -66.9222, 7.82327, 0.44", "-108.56, -66.4651, 7.83621, 0.44", "-109.575, -65.9534, 7.80628, 1.4", "-110.167, -65.6664, 7.77749, 1.92", "-110.425, -65.5482, 7.7591, 2.28", "-110.998, -65.3128, 7.69645, 2.28", "-113.345, -64.407, 7.36572, 0.29", "-113.754, -64.2516, 7.29311, 0.52", "-114.268, -64.0525, 7.1859, 0.52", "-114.837, -63.8293, 7.08016, 0.74", "-115.319, -63.637, 6.99242, 0.74", "-115.96, -63.3898, 6.86927, 0.44", "-116.661, -63.1177, 6.76119, 0.37", "-117.277, -62.8989, 6.62734, 0.81", "-117.718, -62.7557, 6.51077, 0.96", "-118.382, -62.5478, 6.2967, 0.96", "-119.192, -62.3131, 5.99505, 0.66", "-119.875, -62.1425, 5.71617, 0.29", "-120.636, -61.9647, 5.41818, 0.66", "-121.115, -61.8504, 5.24711, 0.66", "-122.111, -61.6138, 4.94913, 0.52", "-122.755, -61.4456, 4.81175, 0.74", "-124.098, -61.0742, 4.59521, 0.88", "-124.739, -60.8844, 4.49186, 1.11", "-125.194, -60.7433, 4.41885, 1.33", "-125.965, -60.4676, 4.30529, 0.44", "-126.768, -60.1142, 4.21216, 0.44", "-127.487, -59.7284, 4.13124, 0.29", "-128.569, -59.0617, 3.93798, 0.96", "-129.051, -58.761, 3.80686, 1.18", "-129.655, -58.3832, 3.61171, 2.21", "-130.006, -58.1656, 3.48696, 2.43", "-130.703, -57.7527, 3.21396, 2.43", "-131.691, -57.2242, 2.83991, 2.21", "-132.946, -56.6588, 2.41039, 0.29", "-133.626, -56.4011, 2.20093, 0.44", "-134.064, -56.2539, 2.09178, 0.52", "-135.61, -55.7662, 1.77346, 0.29", "-136.393, -55.5322, 1.65133, 0.29", "-137.04, -55.348, 1.59399, 0.29", "-137.805, -55.1501, 1.54261, 0.29", "-138.905, -54.8752, 1.48952, 0.96", "-139.397, -54.7449, 1.48159, 1.47", "-139.852, -54.6106, 1.49744, 1.47", "-140.908, -54.2121, 1.53119, 0.29", "-141.327, -54.0246, 1.54157, 0.29", "-142.038, -53.6602, 1.5343, 0.74", "-142.407, -53.4537, 1.52402, 0.81", "-142.646, -53.3064, 1.52096, 0.81", "-143.04, -53.0315, 1.51409, 0.29", "-143.375, -52.7685, 1.49717, 0.22", "-144.136, -52.1485, 1.42047, 0.22", "-144.997, -51.466, 1.30688, 0.22", "-145.598, -51.011, 1.23621, 0.88", "-146.1, -50.6408, 1.18911, 1.11", "-146.313, -50.4866, 1.17553, 1.4", "-146.776, -50.1548, 1.17067, 1.4", "-147.239, -49.8271, 1.20296, 0.96", "-148.193, -49.1979, 1.30925, 0.29", "-148.604, -48.9409, 1.37111, 0.59", "-148.878, -48.7692, 1.42299, 0.59", "-149.263, -48.5257, 1.5072, 0.37", "-150.372, -47.8121, 1.77926, 0.22", "-151.054, -47.3679, 1.94625, 0.22", "-151.517, -47.0637, 2.05883, 0.22", "-152.441, -46.4327, 2.28186, 1.25", "-152.897, -46.1003, 2.39083, 1.69", "-153.229, -45.8398, 2.46916, 1.92", "-153.664, -45.469, 2.57223, 1.62", "-154.405, -44.8302, 2.74793, 0.81", "-154.877, -44.4225, 2.85992, 0.81", "-155.697, -43.7293, 3.0887, 0.37", "-156.259, -43.2636, 3.26267, 0.37", "-156.593, -43.0018, 3.37303, 0.37", "-157.286, -42.4897, 3.61543, 0.29", "-157.979, -41.9944, 3.87, 0.29", "-158.838, -41.3816, 4.22623, 0.29", "-159.253, -41.0825, 4.42164, 0.44", "-159.546, -40.8643, 4.57147, 0.44", "-159.929, -40.5716, 4.77421, 0.29", "-160.756, -39.9446, 5.21796, 1.4", "-161.341, -39.5539, 5.51959, 1.77", "-161.599, -39.4008, 5.64176, 1.77", "-162.289, -39.0212, 5.95271, 0.66", "-162.811, -38.742, 6.1738, 0.66", "-163.315, -38.4871, 6.3774, 0.81", "-163.919, -38.2008, 6.57564, 0.81", "-164.722, -37.8092, 6.76804, 0.37", "-165.746, -37.2683, 6.96064, 0.29", "-166.329, -36.9433, 7.04562, 0.29", "-166.964, -36.5732, 7.11719, 1.11", "-167.804, -36.0456, 7.18207, 1.77", "-168.457, -35.6115, 7.20325, 0.88", "-169.284, -35.0535, 7.20833, 0.29", "-170.54, -34.2207, 7.20422, 0.29", "-171.201, -33.7947, 7.20621, 0.66", "-171.699, -33.49, 7.21688, 0.88", "-172.72, -32.8751, 7.25989, 0.29", "-173.393, -32.4796, 7.28584, 0.29", "-173.98, -32.1524, 7.3015, 0.66", "-174.478, -31.8807, 7.28963, 0.66", "-175.182, -31.5089, 7.25116, 0.29", "-175.807, -31.1925, 7.20746, 0.88", "-176.22, -30.9794, 7.17391, 0.88", "-177.027, -30.5219, 7.09866, 0.29", "-177.923, -29.9084, 7.07498, 0.59", "-178.183, -29.6762, 7.09094, 0.59", "-178.531, -29.3001, 7.1512, 0.59", "-179.048, -28.6863, 7.30681, 0.37", "-179.584, -27.9794, 7.52482, 0.29", "-180.301, -26.944, 7.89044, 0.29", "-180.94, -25.9512, 8.27416, 1.25", "-181.326, -25.3091, 8.50357, 1.4", "-181.571, -24.8803, 8.64025, 1.4", "-181.888, -24.3127, 8.79854, 1.03", "-182.281, -23.6193, 8.9602, 0.29", "-182.79, -22.7218, 9.1133, 0.29", "-183.223, -21.9117, 9.22946, 0.29", "-183.756, -20.8143, 9.35254, 1.11", "-183.948, -20.4072, 9.39231, 1.55", "-184.291, -19.6678, 9.45959, 0.66", "-184.832, -18.4774, 9.56918, 0.29", "-185.556, -16.9255, 9.72007, 0.29", "-186.003, -15.9734, 9.81716, 0.29", "-186.537, -14.8233, 9.93634, 0.44", "-186.831, -14.1811, 10.0049, 0.44", "-187.151, -13.4813, 10.0791, 0.59", "-187.584, -12.5333, 10.1791, 0.29", "-187.9, -11.7953, 10.2556, 0.29", "-188.164, -11.0881, 10.318, 0.44", "-188.388, -10.3609, 10.3617, 0.29", "-188.615, -9.62497, 10.399, 0.59", "-188.901, -8.77136, 10.4402, 1.03", "-189.068, -8.32004, 10.462, 1.03", "-189.549, -7.24327, 10.5236, 0.22", "-190.079, -6.2866, 10.5931, 0.22", "-190.583, -5.48031, 10.6574, 0.22", "-191.004, -4.91106, 10.7114, 0.29", "-191.287, -4.61234, 10.7504, 0.29", "-191.66, -4.32612, 10.8102, 0.52", "-191.902, -4.23527, 10.8601, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-18.2877, -62.0276, 1.29832, 0.88", "-18.9704, -63.1409, 1.21691, 0.88", "-19.4958, -64.0591, 1.1333, 0.88", "-19.9815, -64.9477, 1.01531, 0.88", "-20.4039, -65.7575, 0.896112, 1.03", "-20.805, -66.5668, 0.769551, 1.03", "-21.1785, -67.3373, 0.649214, 0.96", "-21.6084, -68.2201, 0.464998, 0.96", "-21.9291, -68.8948, 0.322667, 1.11", "-22.2101, -69.4675, 0.213465, 1.11", "-22.5709, -70.1354, 0.107175, 1.18", "-23.1265, -71.0355, -0.00957362, 1.18", "-23.7159, -71.937, -0.121898, 1.11", "-24.089, -72.4558, -0.182289, 1.25", "-24.6642, -73.1999, -0.246224, 1.25", "-25.2266, -73.8613, -0.304919, 1.47", "-25.7858, -74.4489, -0.349515, 1.69" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "182.123, 169.625, -48.2435, 0.88", "182.473, 168.927, -48.2849, 0.88", "182.654, 168.584, -48.3139, 1.11", "182.833, 168.31, -48.3509, 1.25", "183.174, 167.812, -48.4299, 1.03", "183.635, 167.153, -48.5363, 0.15", "183.895, 166.785, -48.5956, 0.37", "184.022, 166.608, -48.6314, 0.37", "184.782, 165.547, -48.8319, 0.15", "185.028, 165.193, -48.8943, 0.29", "185.306, 164.784, -48.9585, 0.15", "185.562, 164.368, -49.0088, 0.15", "185.773, 163.984, -49.0422, 0.15", "185.939, 163.646, -49.045, 0.22", "186.083, 163.317, -49.026, 0.22", "186.267, 162.917, -48.9929, 0.29", "186.499, 162.429, -48.9539, 0.29", "186.912, 161.571, -48.8674, 0.15", "187.423, 160.482, -48.764, 0.59", "187.562, 160.178, -48.7385, 0.88", "187.723, 159.822, -48.7131, 0.88", "188.195, 158.76, -48.6593, 0.22", "188.549, 157.923, -48.6075, 0.22", "188.982, 156.853, -48.5059, 0.22", "189.184, 156.335, -48.4463, 0.59", "189.308, 156.008, -48.4013, 0.74", "189.436, 155.652, -48.3473, 0.52", "189.793, 154.688, -48.2081, 0.22", "190.146, 153.765, -48.1115, 1.33", "190.266, 153.45, -48.0865, 1.4", "190.622, 152.453, -48.058, 0.22", "190.831, 151.886, -48.0632, 0.15", "191.209, 150.831, -48.0692, 0.15", "191.432, 150.131, -48.0881, 0.29", "191.593, 149.535, -48.1055, 0.29", "191.839, 148.52, -48.1193, 0.15", "192.025, 147.665, -48.1164, 0.15", "192.355, 145.992, -48.0967, 0.15", "192.606, 144.466, -48.0791, 0.15", "192.893, 142.595, -48.0726, 0.15", "192.993, 141.84, -48.0822, 0.22", "193.025, 141.529, -48.0936, 0.96", "193.054, 141.049, -48.1307, 1.18", "193.113, 139.892, -48.2871, 0.15", "193.153, 139.337, -48.364, 0.29", "193.224, 138.522, -48.5082, 0.15", "193.278, 138.041, -48.6081, 0.29", "193.321, 137.688, -48.6832, 0.29", "193.477, 136.505, -48.9429, 0.15", "193.634, 135.515, -49.1732, 0.15", "193.768, 134.786, -49.3522, 0.52", "193.833, 134.527, -49.4214, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "182.123, 169.625, -48.2435, 0.22", "183.86, 169.666, -48.4101, 0.22", "184.924, 169.657, -48.4401, 0.52", "185.138, 169.654, -48.4415, 0.52", "186.963, 169.619, -48.436, 0.22", "187.566, 169.618, -48.4345, 0.59", "188.101, 169.62, -48.4344, 0.59", "190.354, 169.57, -48.4435, 0.22", "190.718, 169.566, -48.4445, 0.44", "190.947, 169.566, -48.4463, 0.44", "192.703, 169.582, -48.472, 0.15", "193.013, 169.578, -48.4848, 0.37", "193.361, 169.567, -48.505, 0.37", "194.644, 169.488, -48.631, 0.15", "195.351, 169.422, -48.6922, 0.15", "195.733, 169.369, -48.7229, 0.29", "196.098, 169.293, -48.7504, 0.29", "196.976, 169.019, -48.8133, 0.22", "197.203, 168.932, -48.8317, 0.44", "198.175, 168.476, -48.9284, 0.22", "198.507, 168.308, -48.9674, 0.44", "198.85, 168.129, -49.0107, 0.44", "200.724, 167.109, -49.2788, 0.22", "201.9, 166.42, -49.4858, 0.22", "202.509, 166.045, -49.5929, 0.37", "202.827, 165.832, -49.6491, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-88.3675, 176.5, 230.624, 0.88", "-88.7915, 178.859, 237.955, 0.88", "-89.248, 182.007, 245.011, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-88.3675, 176.5, 230.624, 0.22", "-87.6085, 181.515, 240.851, 0.88", "-85.5219, 184.734, 251.542, 0.88", "-82.27, 185.939, 262.33, 0.88", "-78.658, 185.511, 273.067, 0.88", "-74.0483, 186.299, 283.387, 0.88", "-68.558, 188.605, 293.037, 0.88", "-64.228, 191.28, 303.176, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "73.7809, -123.405, -19.7749, 1.11", "75.3706, -123.36, -20.628, 1.11", "76.3508, -123.393, -21.1388, 0.96", "77.3843, -123.495, -21.6625, 0.81", "78.0436, -123.63, -21.9859, 0.81", "79.1722, -123.958, -22.5175, 0.81", "79.8874, -124.176, -22.8434, 1.03", "80.5639, -124.429, -23.1227, 1.03", "81.0752, -124.624, -23.3603, 1.03", "82.0852, -124.948, -23.9259, 0.59", "82.7062, -125.011, -24.4115, 0.59", "83.2855, -124.957, -24.9928, 0.81", "83.7825, -124.869, -25.6299, 0.81", "84.3417, -124.788, -26.444, 0.66", "84.8759, -124.771, -27.2778, 0.66", "85.5558, -124.967, -28.4, 0.74", "86.1554, -125.449, -29.2718, 0.88", "86.661, -126.051, -29.8727, 0.88", "87.1235, -126.684, -30.323, 0.81", "87.5685, -127.311, -30.7063, 0.81", "88.4562, -128.526, -31.376, 0.59", "89.3481, -129.668, -31.9959, 0.52", "90.0423, -130.458, -32.4862, 0.66", "90.553, -130.971, -32.8504, 0.66", "91.2468, -131.596, -33.3626, 0.81", "91.6884, -131.978, -33.7152, 0.81", "92.4482, -132.613, -34.3712, 0.66", "92.9466, -133.083, -34.8736, 0.81", "93.5176, -133.673, -35.4326, 0.81", "94.1216, -134.329, -35.9931, 0.88", "94.6913, -134.964, -36.489, 0.88", "95.2418, -135.557, -36.9431, 0.52", "96.0188, -136.417, -37.6309, 0.88", "96.5336, -137.053, -38.1581, 0.88", "96.9074, -137.604, -38.6074, 1.03", "97.2777, -138.31, -39.1485, 0.81", "97.5354, -138.906, -39.5661, 0.59", "98.0926, -140.375, -40.4807, 0.59", "98.4021, -141.249, -40.9483, 0.59", "98.6438, -141.934, -41.2997, 0.66", "99.0396, -142.831, -41.6982, 0.37", "99.3618, -143.384, -41.9325, 0.37", "99.9261, -144.171, -42.3904, 0.66", "100.284, -144.578, -42.6655, 0.81", "100.71, -145.039, -43.0769, 0.81", "101.244, -145.602, -43.7407, 0.44", "101.844, -146.419, -44.9695, 1.33", "102.457, -147.454, -46.6365, 1.92", "102.613, -147.745, -47.1311, 1.84", "103.041, -148.517, -48.5438, 0.81", "103.337, -148.975, -49.4763, 0.88", "104.29, -150.124, -52.2577, 0.52", "104.564, -150.341, -52.9054, 0.52", "104.935, -150.52, -53.6013, 0.52", "105.412, -150.646, -54.3094, 0.52", "106.006, -150.699, -54.9659, 1.18", "106.736, -150.698, -55.5717, 1.69", "107.232, -150.645, -55.8831, 1.92", "107.654, -150.594, -56.1678, 1.69", "108.656, -150.518, -56.838, 0.81", "109.731, -150.466, -57.5396, 0.52", "110.354, -150.445, -57.9304, 0.81", "110.79, -150.43, -58.1967, 0.81", "112.17, -150.378, -59.067, 0.37", "113.369, -150.309, -59.8226, 0.29", "114.251, -150.216, -60.4261, 0.52", "114.977, -150.095, -60.9314, 0.88", "115.323, -150.004, -61.1969, 1.18", "115.615, -149.888, -61.4589, 1.4", "116.232, -149.52, -62.1107, 0.88", "117.187, -148.781, -63.2683, 0.44", "117.585, -148.448, -63.7715, 0.44", "118.109, -148.005, -64.4319, 1.18", "118.846, -147.449, -65.2502, 1.4", "119.299, -147.158, -65.7, 1.4", "119.761, -146.91, -66.1117, 1.18", "120.035, -146.789, -66.3168, 1.18", "121.195, -146.355, -67.1171, 0.29", "122.168, -146.029, -67.6976, 0.29", "123.025, -145.734, -68.1569, 0.29", "123.682, -145.49, -68.5006, 0.44", "124.28, -145.233, -68.8071, 0.37", "124.658, -145.053, -68.989, 0.37", "125.707, -144.507, -69.4375, 1.33", "126.192, -144.206, -69.6379, 1.77", "126.804, -143.793, -69.8718, 1.55", "127.455, -143.344, -70.1057, 0.74", "128.11, -142.897, -70.3359, 0.52", "128.779, -142.449, -70.5891, 0.29", "129.317, -142.1, -70.7977, 0.29", "129.802, -141.794, -70.9836, 0.66", "130.382, -141.43, -71.214, 0.66", "131.16, -140.958, -71.5559, 0.29", "132.106, -140.413, -71.9977, 0.29", "132.828, -140.013, -72.3445, 0.29", "133.34, -139.743, -72.5882, 0.44", "134.083, -139.329, -72.9697, 1.33", "135.011, -138.784, -73.4654, 2.36", "135.301, -138.612, -73.6225, 2.36", "135.879, -138.26, -73.9194, 2.06", "136.703, -137.786, -74.334, 0.66", "137.543, -137.303, -74.742, 0.29", "138.147, -136.947, -75.0156, 0.29", "138.994, -136.423, -75.3559, 0.52", "139.54, -136.083, -75.5615, 0.66", "140.15, -135.704, -75.7646, 0.29", "140.449, -135.51, -75.8468, 0.29", "141.185, -135.012, -75.9827, 0.88", "141.639, -134.68, -76.0529, 1.03", "142.324, -134.147, -76.1454, 1.03", "142.803, -133.786, -76.2163, 0.74", "143.198, -133.516, -76.2736, 0.44", "143.804, -133.165, -76.3636, 0.37", "144.429, -132.868, -76.4893, 0.37", "145.024, -132.609, -76.6548, 0.59", "145.665, -132.316, -76.8775, 0.81", "146.031, -132.121, -77.0277, 0.81", "146.344, -131.91, -77.1708, 0.81", "147.193, -131.199, -77.5951, 0.37", "147.914, -130.462, -77.9602, 0.37", "148.421, -129.852, -78.2133, 0.74", "148.97, -129.132, -78.4803, 1.11", "149.556, -128.34, -78.7465, 0.66", "149.963, -127.792, -78.9132, 0.66", "150.446, -127.171, -79.0803, 0.81", "150.923, -126.619, -79.2209, 1.03", "151.458, -126.049, -79.366, 0.88", "152.056, -125.428, -79.5169, 0.66", "152.568, -124.872, -79.6368, 0.29", "153.143, -124.219, -79.7518, 0.22", "153.652, -123.624, -79.8365, 0.37", "154.013, -123.184, -79.8774, 0.37", "154.533, -122.533, -79.9224, 0.37", "154.99, -121.986, -79.9621, 0.81", "155.436, -121.451, -80.008, 0.81", "156.011, -120.754, -80.0833, 0.88", "156.721, -119.89, -80.2029, 0.29", "157.217, -119.287, -80.2944, 0.29", "157.653, -118.76, -80.4037, 0.37", "158.421, -117.817, -80.6351, 0.52", "158.941, -117.144, -80.8182, 0.66", "159.317, -116.64, -80.9627, 0.59", "159.799, -115.984, -81.1672, 1.62", "160.48, -115.009, -81.4617, 1.99", "161.11, -114.096, -81.7473, 1.69", "161.558, -113.532, -81.9572, 1.77" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "73.7809, -123.405, -19.7749, 0.74", "74.541, -126.303, -19.557, 0.74", "75.044, -128.01, -19.4498, 0.74", "75.6102, -129.725, -19.3742, 0.74", "76.2014, -131.344, -19.3325, 0.74", "76.9426, -133.158, -19.2934, 0.74", "77.4021, -134.216, -19.2769, 0.88", "77.9326, -135.234, -19.2951, 0.88", "78.7666, -136.729, -19.3337, 0.59", "79.4033, -137.889, -19.372, 0.37", "80.1346, -139.281, -19.435, 0.37", "80.6992, -140.406, -19.5057, 0.59", "81.2525, -141.583, -19.5751, 0.66", "81.8015, -142.947, -19.6469, 0.66", "82.2572, -144.333, -19.7134, 0.81", "82.495, -145.237, -19.7563, 0.81", "82.6832, -146.172, -19.8026, 0.52", "82.8237, -147.003, -19.8485, 0.52", "83.1214, -149.142, -19.9689, 0.74", "83.3174, -150.691, -20.0236, 0.96", "83.4806, -152.029, -20.0321, 0.96", "83.6095, -153.113, -20.0079, 0.96", "83.7404, -154.449, -19.9395, 0.66", "83.7853, -155.275, -19.8676, 0.66", "83.761, -156.553, -19.692, 1.11", "83.6613, -157.385, -19.5459, 1.11", "83.3651, -158.673, -19.2828, 0.81", "82.8755, -160.188, -18.956, 0.44", "82.3087, -161.596, -18.6507, 0.44", "81.87, -162.587, -18.4674, 0.44", "81.3131, -163.78, -18.2958, 0.66", "80.8528, -164.781, -18.1758, 0.44", "80.2644, -166.078, -18.0297, 0.81", "79.8896, -166.974, -17.9307, 0.96", "79.54, -167.94, -17.8313, 0.52", "79.221, -168.951, -17.7525, 0.44", "78.7723, -170.467, -17.6924, 0.37", "78.4319, -171.658, -17.6809, 0.37", "78.0581, -172.965, -17.6778, 0.52", "77.613, -174.594, -17.6852, 0.59", "77.2052, -176.163, -17.7038, 0.59", "76.8741, -177.624, -17.7382, 0.66", "76.5976, -179.216, -17.7995, 0.74", "76.4761, -180.303, -17.8393, 0.59", "76.3981, -181.432, -17.8601, 0.44", "76.3812, -181.862, -17.8405, 0.74", "76.3856, -182.605, -17.7515, 0.74", "76.4401, -183.51, -17.6093, 0.44", "76.5835, -184.859, -17.4095, 0.29", "76.7449, -185.867, -17.2878, 0.37", "76.9245, -186.785, -17.1895, 0.59", "77.1916, -188.035, -17.0767, 0.59", "77.4568, -189.307, -17.0456, 0.74", "77.6012, -189.992, -17.0369, 0.81", "77.8544, -191.273, -17.0689, 0.66", "77.9947, -192.091, -17.1083, 0.66", "78.0879, -192.747, -17.1508, 0.66", "78.2697, -194.518, -17.2522, 0.59", "78.3766, -196.355, -17.3394, 0.66", "78.4025, -197.694, -17.3885, 0.74", "78.3756, -198.945, -17.4162, 0.74", "78.363, -199.708, -17.4242, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-25.7858, -74.4489, -0.349515, 0.81", "-25.7085, -75.3603, -1.53758, 0.81", "-25.7031, -75.8629, -2.00388, 0.74", "-25.6829, -76.4702, -2.41544, 0.59", "-25.6434, -76.8976, -2.64733, 0.59", "-25.5608, -77.615, -2.97603, 0.74", "-25.4793, -78.5087, -3.34069, 0.66", "-25.4244, -79.4002, -3.59003, 0.66", "-25.3908, -80.2163, -3.82757, 0.74", "-25.3318, -81.103, -4.0902, 0.74", "-25.2821, -81.6931, -4.2933, 0.81", "-25.1502, -82.867, -4.75419, 0.96", "-25.0933, -83.4037, -4.99291, 1.18", "-24.9915, -84.7634, -5.62029, 0.52", "-24.9615, -85.6367, -6.05696, 0.74", "-24.949, -86.4082, -6.5149, 0.88", "-24.9388, -87.0584, -7.00652, 0.59", "-24.9236, -87.6457, -7.52249, 0.59", "-24.9194, -88.2044, -8.04562, 1.18", "-24.9358, -88.8439, -8.62491, 1.18", "-24.9967, -90.1229, -9.7483, 0.59", "-25.0389, -91.125, -10.5734, 0.74", "-25.0935, -91.6871, -11.0488, 0.88", "-25.2217, -92.4719, -11.6948, 0.66", "-25.4229, -93.2628, -12.2729, 0.88", "-25.61, -93.784, -12.5657, 1.03", "-25.9095, -94.3915, -12.8107, 0.74", "-26.6873, -95.6869, -13.2877, 0.44", "-26.9765, -96.1196, -13.4891, 0.44", "-27.2952, -96.6026, -13.7535, 0.81", "-27.6203, -97.2213, -14.1397, 1.18", "-27.7836, -97.7655, -14.4977, 1.18", "-27.8133, -98.4951, -15.0049, 0.81", "-27.609, -99.5984, -15.7663, 0.52", "-27.4168, -100.193, -16.1917, 0.88", "-27.0491, -101.048, -16.8366, 1.03", "-26.7323, -101.662, -17.3003, 1.03", "-26.4009, -102.258, -17.7268, 1.25", "-26.1982, -102.631, -17.9706, 1.92", "-25.9596, -103.14, -18.2764, 1.55", "-25.5403, -104.314, -18.886, 0.52", "-25.4378, -104.797, -19.1081, 0.44", "-25.3516, -105.548, -19.4493, 0.37", "-25.3315, -105.927, -19.624, 0.52", "-25.3229, -106.354, -19.8357, 0.52", "-25.3208, -107.286, -20.3222, 0.44", "-25.316, -108.302, -20.8482, 0.96", "-25.2856, -109.33, -21.3448, 1.69", "-25.2542, -110.076, -21.7048, 1.92", "-25.2087, -110.893, -22.0812, 1.92", "-25.1756, -111.733, -22.4427, 1.92", "-25.163, -112.544, -22.7671, 1.62", "-25.1576, -113.792, -23.1508, 0.37", "-25.1845, -115.387, -23.5245, 0.29", "-25.2005, -115.825, -23.613, 0.29", "-25.2267, -116.387, -23.7184, 0.29", "-25.2344, -116.7, -23.7804, 0.29", "-25.2663, -117.543, -24.0132, 0.88", "-25.2991, -118.026, -24.1826, 1.11", "-25.3241, -118.372, -24.3069, 1.11", "-25.4013, -119.106, -24.5963, 0.29", "-25.4943, -119.792, -24.862, 0.29", "-25.6927, -120.821, -25.238, 0.44", "-25.8462, -121.41, -25.4509, 0.66", "-25.9801, -121.847, -25.601, 0.66", "-26.2438, -122.587, -25.835, 0.37", "-26.6235, -123.55, -26.1038, 0.37", "-26.9567, -124.462, -26.329, 0.59", "-27.1981, -125.277, -26.5085, 1.03", "-27.2985, -125.682, -26.6, 1.03", "-27.4565, -126.452, -26.7732, 0.74", "-27.5883, -127.232, -26.9736, 0.29", "-27.7001, -128.066, -27.2225, 0.29", "-27.7846, -128.971, -27.5016, 1.25", "-27.8192, -129.574, -27.685, 2.06", "-27.8363, -129.996, -27.8151, 2.06", "-27.8736, -130.91, -28.0893, 1.4", "-27.948, -131.891, -28.3577, 0.81", "-28.0476, -132.618, -28.5296, 0.44", "-28.1384, -133.227, -28.6548, 0.59", "-28.2129, -133.789, -28.7632, 0.59", "-28.2752, -134.51, -28.8948, 0.59", "-28.2831, -135.34, -29.0328, 0.44", "-28.2371, -136.031, -29.1568, 0.29", "-28.1823, -136.615, -29.2871, 0.74", "-28.1195, -137.224, -29.4481, 0.74", "-28.0384, -137.936, -29.6795, 0.52", "-27.9611, -138.475, -29.8873, 0.52", "-27.8774, -138.987, -30.1009, 0.44", "-27.7659, -139.745, -30.4105, 0.44", "-27.7181, -140.367, -30.6426, 0.37", "-27.7116, -141.023, -30.8772, 0.37", "-27.7168, -141.451, -31.0252, 0.59", "-27.7082, -142.259, -31.3047, 0.59", "-27.6789, -142.725, -31.4845, 0.59", "-27.5856, -143.438, -31.7743, 0.37", "-27.436, -144.293, -32.1403, 0.29", "-27.3325, -144.811, -32.3689, 1.18", "-27.2497, -145.254, -32.6132, 1.4", "-27.1585, -145.802, -32.9552, 1.4", "-27.0971, -146.18, -33.2031, 1.4", "-27.0118, -146.635, -33.5164, 0.88", "-26.9075, -147.091, -33.8228, 0.66", "-26.6091, -148.298, -34.6042, 0.37", "-26.4113, -149.04, -35.0482, 0.29", "-26.2833, -149.471, -35.281, 0.29", "-26.166, -149.823, -35.4606, 0.29", "-25.8771, -150.587, -35.8153, 1.03", "-25.6601, -151.044, -36.003, 1.47", "-25.4326, -151.428, -36.1397, 1.62", "-25.1688, -151.857, -36.2946, 1.33", "-24.9018, -152.316, -36.4522, 0.81", "-24.6414, -152.824, -36.6114, 0.44", "-24.2531, -153.68, -36.8647, 0.29", "-23.996, -154.329, -37.0447, 0.88", "-23.7522, -155.07, -37.2319, 0.96", "-23.6089, -155.6, -37.3621, 1.25", "-23.5113, -156.079, -37.4697, 1.4", "-23.4512, -156.53, -37.5597, 1.4", "-23.4119, -157.216, -37.6752, 1.03", "-23.4154, -158.085, -37.8116, 0.29", "-23.4864, -159.215, -37.9721, 0.29", "-23.5811, -159.975, -38.06, 0.29", "-23.6665, -160.464, -38.1041, 0.44", "-23.8224, -161.116, -38.1405, 0.44", "-24.0361, -161.771, -38.1702, 0.52", "-24.3214, -162.466, -38.1958, 0.44", "-24.5862, -163.038, -38.2251, 0.29", "-24.7565, -163.385, -38.2539, 0.44", "-25.0693, -164.034, -38.3218, 0.44", "-25.5308, -165.001, -38.4751, 1.55", "-25.8566, -165.747, -38.6261, 2.43", "-26.0344, -166.198, -38.7383, 2.73", "-26.1566, -166.553, -38.8365, 2.43", "-26.393, -167.359, -39.0641, 1.69", "-26.7251, -168.678, -39.4274, 0.52", "-26.8176, -169.1, -39.5294, 0.52", "-26.8956, -169.464, -39.6054, 0.88", "-27.064, -170.124, -39.7396, 0.59", "-27.2064, -170.669, -39.8569, 0.59", "-27.425, -171.445, -40.0256, 0.66", "-27.5358, -171.84, -40.1088, 0.66", "-27.6641, -172.306, -40.224, 0.52", "-27.9164, -173.273, -40.5157, 0.29", "-28.0642, -173.932, -40.7415, 0.29", "-28.092, -174.094, -40.7999, 0.59", "-28.1567, -174.625, -40.9888, 0.59", "-28.2122, -175.158, -41.1599, 0.29", "-28.3144, -176.014, -41.405, 0.29", "-28.3705, -176.641, -41.5523, 0.74", "-28.4373, -177.038, -41.6568, 0.74", "-28.5478, -177.516, -41.7846, 0.74", "-28.6984, -178.007, -41.9064, 0.59", "-28.9704, -178.798, -42.0935, 0.29", "-29.3336, -179.862, -42.3381, 0.29", "-29.6995, -180.924, -42.5832, 0.37", "-29.8278, -181.307, -42.6669, 0.37", "-30.0249, -181.939, -42.7927, 0.29", "-30.2272, -182.656, -42.9215, 0.44", "-30.3029, -182.982, -42.9656, 0.59", "-30.3822, -183.432, -43.0144, 0.44", "-30.4009, -183.91, -43.0725, 0.37", "-30.3934, -184.466, -43.1644, 0.37", "-30.3678, -184.954, -43.261, 0.52", "-30.3437, -185.436, -43.3757, 0.74", "-30.3233, -186.124, -43.5849, 0.29", "-30.3082, -187.051, -43.9136, 1.11", "-30.3081, -187.402, -44.0481, 1.33", "-30.3178, -187.755, -44.1876, 1.33", "-30.3648, -188.333, -44.4082, 1.03", "-30.5037, -189.169, -44.7148, 0.59", "-30.6364, -189.635, -44.8667, 0.37", "-30.8401, -190.135, -44.9915, 0.59", "-30.9519, -190.372, -45.0445, 0.59", "-31.2116, -190.861, -45.1316, 0.29", "-31.4677, -191.311, -45.1763, 0.29", "-31.6725, -191.689, -45.1957, 0.29", "-31.8539, -192.047, -45.2761, 0.29", "-32.1881, -192.684, -45.4911, 0.88", "-32.2848, -192.878, -45.5654, 1.18", "-32.3843, -193.087, -45.656, 1.18", "-32.6289, -193.607, -45.8909, 0.74", "-33.1269, -194.667, -46.3907, 0.29", "-33.3582, -195.16, -46.6129, 0.29", "-33.6514, -195.779, -46.8663, 0.29", "-33.995, -196.495, -47.1456, 0.96", "-34.1808, -196.882, -47.2823, 1.11", "-34.4831, -197.542, -47.4795, 0.74", "-34.703, -198.12, -47.6241, 0.59", "-34.7958, -198.415, -47.6962, 0.81", "-34.9839, -199.055, -47.8402, 0.81", "-35.1411, -199.607, -47.9425, 0.44", "-35.369, -200.361, -48.0775, 0.29", "-35.6366, -201.141, -48.2248, 0.29", "-35.9858, -202.094, -48.4261, 1.62", "-36.1279, -202.51, -48.5212, 1.84", "-36.2303, -202.889, -48.6142, 1.99", "-36.4072, -203.546, -48.8187, 1.77", "-36.5912, -204.169, -49.0355, 1.11", "-36.8096, -204.867, -49.2835, 0.44", "-37.0094, -205.53, -49.5286, 0.44", "-37.2317, -206.38, -49.831, 0.37", "-37.4597, -207.53, -50.2027, 0.29", "-37.5267, -207.919, -50.3222, 0.29", "-37.6584, -208.737, -50.5597, 0.66", "-37.7582, -209.259, -50.7167, 0.81", "-37.895, -209.906, -50.92, 0.37", "-38.06, -210.863, -51.2013, 0.29", "-38.1801, -212.188, -51.5657, 1.4", "-38.1976, -212.633, -51.685, 1.99", "-38.1985, -213.163, -51.8126, 2.21", "-38.1811, -213.845, -51.9408, 1.47", "-38.088, -215.02, -52.0736, 0.29", "-37.9862, -215.621, -52.0958, 0.29", "-37.7096, -216.496, -52.0563, 0.52", "-37.5202, -216.953, -52.0224, 0.66", "-37.1898, -217.59, -51.9562, 0.44", "-36.6613, -218.501, -51.8547, 0.37", "-36.266, -219.122, -51.8116, 0.37", "-35.5858, -220.053, -51.709, 1.25", "-35.3373, -220.363, -51.672, 1.84", "-34.8586, -220.935, -51.5784, 1.92", "-34.2477, -221.618, -51.4472, 1.33", "-33.7052, -222.221, -51.3281, 1.11", "-32.4299, -223.706, -51.0455, 0.29", "-31.8815, -224.355, -50.9132, 0.29", "-31.083, -225.257, -50.7115, 0.29", "-30.6099, -225.772, -50.5891, 0.29", "-30.034, -226.385, -50.4533, 0.52", "-29.6572, -226.799, -50.3817, 0.66", "-28.7639, -227.824, -50.2801, 0.29", "-28.146, -228.518, -50.2124, 1.11", "-27.6826, -229.043, -50.1686, 1.11", "-26.6317, -230.264, -50.0088, 0.22", "-26.2881, -230.656, -49.9435, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.7858, -74.4489, -0.349515, 0.96", "-26.8424, -75.5259, -0.0904902, 0.96", "-27.7245, -76.3788, 0.11298, 0.96", "-28.4742, -77.0516, 0.294273, 1.18", "-29.165, -77.6124, 0.428373, 1.18", "-30.2192, -78.3784, 0.576469, 0.74", "-31.0204, -78.8884, 0.649885, 0.74", "-31.6223, -79.2176, 0.643888, 0.74", "-32.1783, -79.4672, 0.587254, 0.74", "-33.2404, -79.9354, 0.432132, 0.66", "-33.713, -80.2056, 0.344344, 0.66", "-34.2991, -80.6673, 0.236925, 0.66", "-34.7744, -81.1317, 0.164908, 0.81", "-35.2619, -81.6428, 0.116454, 0.96", "-35.9737, -82.401, 0.0859226, 1.11", "-36.6901, -83.1524, 0.114536, 1.11", "-37.2641, -83.7657, 0.147025, 1.33", "-37.7631, -84.2864, 0.173889, 1.47", "-38.4922, -84.9564, 0.208724, 1.47", "-39.1569, -85.4736, 0.237402, 1.4", "-39.9032, -85.9242, 0.278061, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "161.558, -113.532, -81.9572, 0.52", "162.426, -112.595, -82.683, 0.52", "162.907, -111.979, -83.1196, 0.29", "163.445, -111.227, -83.5683, 0.22", "163.973, -110.421, -84.0947, 0.22", "164.431, -109.693, -84.6102, 0.22", "164.892, -108.894, -85.1744, 0.22", "165.326, -108.02, -85.7561, 0.88", "165.634, -107.285, -86.2224, 1.18", "166.151, -105.889, -87.0626, 1.47", "166.326, -105.383, -87.3535, 1.55", "166.932, -103.634, -88.3552, 0.22", "167.291, -102.708, -88.9179, 0.22", "167.799, -101.605, -89.5869, 0.88", "168.178, -100.849, -90.0458, 1.4", "168.424, -100.399, -90.2991, 1.25", "168.827, -99.6989, -90.7008, 0.81", "169.538, -98.5403, -91.4002, 0.22", "170.573, -96.9466, -92.4025, 0.22", "171.218, -96.0321, -93.0074, 0.66", "171.633, -95.4634, -93.3889, 0.81", "171.895, -95.0922, -93.6286, 0.66", "172.144, -94.7148, -93.8499, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "161.558, -113.532, -81.9572, 0.29", "161.768, -111.352, -81.6676, 0.29", "161.934, -109.813, -81.4686, 0.29", "162.046, -108.667, -81.3123, 0.52", "162.102, -108.014, -81.2136, 0.66", "162.209, -106.779, -81.0196, 0.22", "162.277, -105.966, -80.8892, 0.59", "162.339, -105.127, -80.7384, 0.74", "162.393, -104.432, -80.6015, 0.81", "162.493, -103.381, -80.3816, 0.52", "162.641, -102.127, -80.1086, 0.22", "162.762, -101.267, -79.9172, 0.29", "162.89, -100.565, -79.7675, 0.29", "163.05, -99.8781, -79.6335, 0.15", "163.316, -98.9774, -79.4814, 0.29", "163.521, -98.3525, -79.3898, 0.37", "163.768, -97.6194, -79.2933, 0.22", "164.095, -96.6299, -79.1792, 0.22", "164.357, -95.7663, -79.0919, 0.74", "164.534, -95.1248, -79.029, 0.88", "164.737, -94.342, -78.9519, 0.52", "165.057, -93.0457, -78.8277, 0.22", "165.233, -92.2453, -78.7474, 0.44", "165.313, -91.762, -78.6946, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "78.363, -199.708, -17.4242, 0.37", "78.852, -200.753, -17.6703, 0.37", "79.2489, -201.513, -17.8517, 0.52", "79.5994, -202.135, -18.0017, 0.59", "80.154, -203.096, -18.2267, 0.22", "80.5039, -203.682, -18.3635, 0.22", "80.8232, -204.207, -18.4851, 0.44", "81.241, -204.822, -18.6163, 0.44", "81.6364, -205.351, -18.7458, 0.37", "82.1083, -205.909, -18.9078, 0.29", "82.5893, -206.416, -19.086, 0.52", "82.9206, -206.748, -19.2148, 0.74", "83.4202, -207.258, -19.415, 0.74", "83.9649, -207.831, -19.6357, 0.44", "84.2966, -208.18, -19.7718, 0.44", "84.904, -208.811, -20.0224, 0.29", "85.3557, -209.293, -20.216, 0.29", "85.6203, -209.585, -20.3319, 0.66", "85.9262, -209.943, -20.4623, 0.81", "86.1324, -210.178, -20.548, 0.81", "86.8425, -210.919, -20.8362, 0.29", "87.3657, -211.388, -21.0454, 0.29", "87.7808, -211.724, -21.212, 0.44", "88.4451, -212.228, -21.4785, 0.29", "88.9964, -212.619, -21.6896, 0.37", "89.8628, -213.187, -22.0201, 0.37", "90.5879, -213.623, -22.2945, 0.37", "91.0152, -213.852, -22.4558, 0.59", "91.3141, -213.991, -22.5732, 0.59", "92.1281, -214.322, -22.8916, 0.29", "92.9323, -214.628, -23.1968, 1.25", "93.3321, -214.771, -23.3455, 1.55", "93.9117, -214.965, -23.5539, 1.55", "95.2942, -215.407, -24.0284, 0.29", "96.1765, -215.71, -24.32, 0.52", "96.7539, -215.915, -24.5069, 0.59", "97.3593, -216.147, -24.6707, 0.37", "97.857, -216.355, -24.7914, 0.22", "98.6639, -216.726, -24.9694, 0.22", "99.6094, -217.183, -25.1592, 0.22", "100.241, -217.497, -25.2839, 0.22", "101.375, -218.076, -25.4951, 0.59", "102.059, -218.432, -25.614, 0.59", "102.665, -218.761, -25.718, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "78.363, -199.708, -17.4242, 0.59", "78.4072, -200.246, -17.4607, 0.59", "78.5238, -200.911, -17.37, 0.44", "78.6773, -201.675, -17.2348, 0.29", "78.8682, -202.714, -17.0706, 0.59", "78.9579, -203.236, -16.9968, 0.66", "79.1255, -204.226, -16.8739, 0.44", "79.5384, -206.548, -16.6715, 0.29", "79.6694, -207.277, -16.639, 0.29", "79.854, -208.203, -16.6468, 0.59", "79.9899, -208.793, -16.6876, 0.74", "80.0903, -209.201, -16.7346, 0.74", "80.3002, -210.076, -16.8664, 0.44", "80.4688, -210.972, -17.0554, 0.29", "80.5958, -211.738, -17.1626, 0.29", "80.7188, -212.588, -17.2521, 0.59", "80.8127, -213.315, -17.3222, 0.44", "80.89, -213.921, -17.3723, 0.44", "80.9737, -214.542, -17.4097, 0.44", "81.1005, -215.326, -17.4728, 0.37", "81.2827, -216.255, -17.5665, 0.37", "81.4094, -216.71, -17.6262, 0.66", "81.6182, -217.173, -17.7107, 0.66", "81.7976, -217.455, -17.7762, 0.52", "82.1831, -217.989, -17.9041, 0.74", "82.3605, -218.222, -17.9575, 0.74", "82.8093, -218.853, -18.0762, 0.29", "83.2486, -219.521, -18.1904, 0.29", "83.5809, -220.032, -18.2781, 0.29", "84.0748, -220.797, -18.4109, 0.22", "84.4255, -221.341, -18.5052, 0.22", "84.9194, -222.102, -18.6382, 0.44", "85.3041, -222.693, -18.7418, 0.59", "85.5567, -223.131, -18.8084, 0.59", "88.4869, -231.491, -20.7061, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-39.9032, -85.9242, 0.278061, 0.88", "-40.0958, -86.0256, 0.347054, 0.88", "-40.6239, -86.33, 0.53537, 0.74", "-41.1356, -86.6363, 0.720019, 0.88", "-41.5602, -86.8928, 0.848427, 0.52", "-42.11, -87.2246, 1.03308, 0.66", "-42.6187, -87.5249, 1.2142, 0.74", "-43.1182, -87.8008, 1.39895, 0.88", "-43.5747, -88.0287, 1.5741, 1.03", "-44.2404, -88.3369, 1.84749, 1.33", "-44.8792, -88.6141, 2.11918, 1.4", "-45.4863, -88.8521, 2.37977, 0.66", "-45.8751, -88.9972, 2.55484, 0.66", "-46.253, -89.1566, 2.74201, 0.59", "-46.683, -89.3884, 2.9726, 0.37", "-46.9593, -89.5763, 3.129, 0.88", "-47.3556, -89.8968, 3.32193, 0.96", "-47.6269, -90.1492, 3.45836, 0.96", "-48.0149, -90.5491, 3.66718, 0.66", "-48.3039, -90.8623, 3.82386, 0.66", "-48.7089, -91.2924, 4.03035, 0.66", "-49.0513, -91.6553, 4.20201, 0.74", "-49.2738, -91.8928, 4.31427, 0.96", "-49.6721, -92.3159, 4.50881, 0.74", "-50.0229, -92.7159, 4.681, 0.74", "-50.4208, -93.2482, 4.89554, 0.96", "-50.6713, -93.6495, 5.04638, 1.03", "-50.8952, -94.0365, 5.19701, 0.81", "-51.1353, -94.4405, 5.37518, 0.44", "-51.5085, -95.0645, 5.68361, 0.44", "-51.7595, -95.5083, 5.93162, 0.44", "-51.9857, -95.9394, 6.19144, 0.44", "-52.3273, -96.6573, 6.62646, 0.44", "-52.6098, -97.335, 7.0151, 0.81", "-52.7266, -97.6607, 7.19027, 0.81", "-52.8649, -98.0929, 7.39306, 0.88", "-52.9367, -98.3325, 7.48842, 0.66", "-53.0985, -98.8909, 7.66713, 0.37", "-53.257, -99.4176, 7.82012, 0.29", "-53.4193, -99.7842, 7.94439, 0.44", "-53.7434, -100.191, 8.16656, 0.29", "-54.0258, -100.425, 8.35602, 0.29", "-54.3491, -100.64, 8.58934, 0.37", "-54.864, -100.914, 8.9947, 0.37", "-55.2217, -101.107, 9.31431, 0.37", "-55.6267, -101.354, 9.70369, 0.81", "-55.8907, -101.537, 9.96133, 1.03", "-56.1138, -101.756, 10.2045, 1.03", "-56.2768, -101.976, 10.4043, 0.96", "-56.6232, -102.598, 10.8807, 0.52", "-56.7836, -102.951, 11.1373, 0.52", "-56.978, -103.423, 11.4783, 1.77", "-57.2875, -104.173, 12.0072, 0.66", "-57.4769, -104.557, 12.2775, 0.66", "-57.7553, -105.041, 12.6383, 0.59", "-58.002, -105.426, 12.9364, 0.74", "-58.2234, -105.766, 13.2158, 0.74", "-58.4364, -106.071, 13.4758, 0.74", "-58.8535, -106.574, 13.9171, 0.37", "-59.4017, -107.216, 14.4634, 0.37", "-59.677, -107.546, 14.7275, 0.44", "-59.9486, -107.921, 15.0004, 0.44", "-60.2449, -108.368, 15.3032, 0.44", "-60.4532, -108.691, 15.5103, 0.66", "-60.6254, -108.969, 15.6694, 0.74", "-60.808, -109.261, 15.8098, 0.74", "-61.1851, -109.855, 16.0803, 0.81", "-61.5812, -110.477, 16.3407, 0.44", "-61.9698, -111.108, 16.5895, 0.44", "-62.3189, -111.705, 16.802, 0.37", "-62.679, -112.36, 17.0291, 0.37", "-62.8928, -112.763, 17.1617, 1.18", "-63.075, -113.107, 17.2634, 1.62", "-63.3486, -113.652, 17.4267, 1.84", "-63.6059, -114.172, 17.5939, 1.03", "-63.928, -114.816, 17.8092, 0.74", "-64.0648, -115.111, 17.9062, 0.74", "-64.3134, -115.724, 18.0937, 0.44", "-64.5589, -116.412, 18.2924, 0.59", "-64.7046, -116.878, 18.4164, 0.59", "-64.8758, -117.46, 18.5579, 0.37", "-65.0814, -118.172, 18.716, 0.37", "-65.2796, -118.834, 18.8671, 0.37", "-65.4265, -119.287, 18.9682, 0.81", "-65.5841, -119.678, 19.0558, 0.96", "-65.8089, -120.125, 19.1569, 1.18", "-66.2175, -120.812, 19.3306, 0.44", "-66.5539, -121.324, 19.4827, 0.44", "-67.0028, -121.986, 19.7377, 0.44", "-67.3501, -122.48, 19.9675, 0.44", "-67.7318, -123.012, 20.2425, 0.59", "-67.9907, -123.385, 20.4543, 0.74", "-68.3125, -123.863, 20.7417, 0.96", "-68.7715, -124.535, 21.1713, 0.59", "-69.0499, -124.941, 21.4341, 0.44", "-69.3492, -125.41, 21.7256, 0.37", "-69.5745, -125.798, 21.9549, 0.52", "-69.7763, -126.168, 22.1434, 0.52", "-70.1636, -126.908, 22.4777, 0.37", "-70.4315, -127.436, 22.7021, 0.59", "-70.6157, -127.814, 22.8813, 0.74", "-70.8654, -128.307, 23.1346, 0.96", "-71.007, -128.595, 23.2788, 0.88", "-71.1643, -128.935, 23.4467, 0.81", "-71.4028, -129.44, 23.716, 0.88", "-71.7291, -130.044, 24.0549, 0.37", "-72.0636, -130.611, 24.3783, 0.37", "-72.3803, -131.112, 24.665, 0.37", "-72.6749, -131.559, 24.9285, 0.66", "-73.0946, -132.16, 25.2958, 0.52", "-73.3997, -132.546, 25.5504, 0.37", "-73.7472, -132.902, 25.8094, 0.59", "-74.0971, -133.204, 26.0772, 0.59", "-74.5449, -133.542, 26.4471, 0.29", "-74.8155, -133.747, 26.7004, 0.29", "-75.0925, -133.982, 26.9782, 0.29", "-75.5389, -134.405, 27.462, 0.37", "-76.0641, -134.948, 28.0487, 0.52", "-76.5188, -135.466, 28.5741, 0.74", "-76.952, -135.99, 29.0721, 0.59", "-77.25, -136.359, 29.3972, 0.44", "-77.4429, -136.596, 29.5873, 0.44", "-77.7192, -136.941, 29.8307, 0.37", "-78.0277, -137.345, 30.0534, 0.52", "-78.345, -137.802, 30.2671, 0.74", "-78.7178, -138.392, 30.5273, 0.44", "-78.9432, -138.829, 30.7149, 0.37", "-79.1132, -139.29, 30.9124, 0.37", "-79.2765, -139.913, 31.1677, 0.59", "-79.3385, -140.28, 31.3038, 0.59", "-79.3748, -140.797, 31.4756, 0.59", "-79.3645, -141.395, 31.6642, 0.66", "-79.3217, -142.236, 31.9144, 0.66", "-79.2908, -142.904, 32.0943, 0.37", "-79.2699, -143.326, 32.1927, 0.37", "-79.2202, -143.85, 32.2898, 0.37", "-79.1586, -144.215, 32.3462, 0.37", "-79.0182, -144.9, 32.4344, 0.59", "-78.9387, -145.234, 32.4583, 0.74", "-78.8151, -145.69, 32.4922, 0.74", "-78.6561, -146.397, 32.5614, 0.44", "-78.5995, -146.764, 32.6037, 0.44", "-82.7545, -151.247, 34.1671, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-39.9032, -85.9242, 0.278061, 0.81", "-42.8672, -88.1624, -0.712606, 0.81", "-44.0285, -88.9105, -1.10692, 0.74", "-44.7186, -89.2622, -1.3471, 0.81", "-45.558, -89.5918, -1.65175, 0.59", "-46.7103, -89.9683, -2.03656, 0.44", "-47.1521, -90.0931, -2.16477, 0.44", "-48.675, -90.2939, -2.28502, 0.52", "-49.4556, -90.2843, -2.38724, 0.74", "-50.343, -90.2609, -2.52545, 0.59", "-51.1951, -90.255, -2.65196, 0.59", "-51.8857, -90.2892, -2.7392, 1.03", "-52.6406, -90.3919, -2.76722, 1.18", "-53.3817, -90.5473, -2.713, 1.18", "-54.3228, -90.7597, -2.62511, 0.52", "-55.0653, -90.9086, -2.56816, 0.37", "-55.6698, -91.0047, -2.54169, 0.29", "-56.2919, -91.086, -2.53519, 0.29", "-56.9673, -91.155, -2.53488, 0.88", "-57.8053, -91.1974, -2.53584, 1.11", "-58.5427, -91.1647, -2.5974, 1.4", "-59.1457, -91.1534, -2.71787, 1.55", "-59.645, -91.1778, -2.88285, 1.55", "-60.5184, -91.2778, -3.23009, 0.59", "-61.0124, -91.3623, -3.43338, 0.59", "-62.3239, -91.6598, -3.9356, 0.44", "-63.8158, -92.0425, -4.50049, 0.29", "-65.172, -92.4276, -5.07787, 0.52", "-65.771, -92.6064, -5.41325, 0.66", "-66.4616, -92.8252, -5.85312, 0.66", "-66.9278, -92.9886, -6.1621, 0.44", "-68.0672, -93.3859, -6.93031, 0.37", "-70.5559, -94.1582, -8.63525, 2.8", "-73.7014, -95.0657, -10.9571, 0.74", "-75.0953, -95.4313, -12.0713, 0.74", "-76.2492, -95.6778, -13.0825, 0.52", "-77.5701, -95.8765, -14.3156, 1.11", "-78.1171, -95.9143, -14.8415, 1.25", "-80.4131, -95.7298, -17.1444, 0.37", "-81.864, -95.3789, -18.628, 1.03", "-83.3535, -94.7956, -20.2279, 1.25", "-84.2293, -94.3423, -21.2121, 0.37", "-84.8729, -93.9554, -21.941, 1.84", "-86.0441, -93.1876, -23.2133, 0.52", "-86.334, -92.9663, -23.4939, 0.37", "-87.0156, -92.4522, -24.0808, 0.74", "-88.1498, -91.7055, -24.9287, 0.44", "-89.1332, -91.1821, -25.5638, 0.44", "-89.8343, -90.8805, -25.941, 0.44", "-90.545, -90.6303, -26.2441, 1.11", "-91.1777, -90.4258, -26.4786, 1.55", "-91.8781, -90.2168, -26.697, 1.69", "-93.9065, -89.6692, -27.1774, 0.29", "-94.8769, -89.435, -27.3769, 0.44", "-95.6231, -89.2691, -27.5397, 0.44", "-96.2558, -89.1345, -27.688, 1.33", "-96.8689, -88.9981, -27.8228, 1.55", "-98.2462, -88.6836, -28.1233, 0.29", "-98.8787, -88.5415, -28.2568, 0.52", "-99.9339, -88.3258, -28.4783, 0.29", "-100.55, -88.1779, -28.6245, 1.03", "-101.085, -88.0336, -28.7624, 1.18", "-101.585, -87.8789, -28.8921, 1.18", "-102.821, -87.4604, -29.2443, 0.29", "-103.688, -87.1833, -29.5007, 0.29", "-105.098, -86.7615, -29.8736, 0.88", "-105.794, -86.5618, -30.0575, 0.66", "-106.268, -86.4289, -30.1846, 0.66", "-106.827, -86.2594, -30.3238, 0.44", "-107.552, -86.0379, -30.5063, 0.29", "-108.294, -85.8156, -30.6704, 0.74", "-108.612, -85.7281, -30.7316, 0.88", "-110.024, -85.3005, -30.9885, 0.29", "-110.966, -84.9983, -31.138, 1.47", "-111.717, -84.7447, -31.2365, 1.92", "-112.405, -84.5088, -31.3097, 1.92", "-113.939, -83.9883, -31.4383, 0.22", "-115.009, -83.6334, -31.4834, 0.22", "-115.7, -83.4073, -31.47, 0.59", "-116.068, -83.2897, -31.4452, 0.59", "-117.077, -82.9405, -31.3171, 0.22", "-117.779, -82.6735, -31.189, 0.81", "-118.087, -82.5435, -31.1242, 1.03", "-118.447, -82.3784, -31.0483, 1.03", "-119.437, -81.8833, -30.8606, 0.22", "-119.956, -81.6106, -30.7597, 0.44", "-121.655, -80.6505, -30.4328, 0.22", "-122.197, -80.3348, -30.3391, 0.22", "-122.932, -79.8987, -30.2169, 1.03", "-123.442, -79.5893, -30.133, 1.25" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "102.665, -218.761, -25.718, 0.22", "103.867, -219.852, -26.2845, 0.22", "104.388, -220.325, -26.5301, 0.22", "104.772, -220.674, -26.7111, 0.44", "105.042, -220.919, -26.8387, 0.44", "114.086, -227.776, -29.8466, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "102.665, -218.761, -25.718, 0.59", "103.632, -218.474, -26.1305, 0.59", "104.161, -218.316, -26.3564, 0.66", "104.382, -218.25, -26.4507, 0.66", "114.803, -215.538, -29.5832, 0.66", "125.399, -212.972, -32.1914, 0.66", "136.247, -210.205, -32.8055, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_43", "dend_41", "dend_41", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_BTC_d9b97f1242_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_17
create dend_45
public dend_45
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_18
create dend_38
public dend_38
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4500003629291099)
    connect dend_17(0), soma_0(0.4500003629291099)
    connect dend_0(0), soma_0(0.4500003629291099)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.701782, -14.5938, 2.84454, 2.73269 ) }
    soma_0 { pt3dadd( 0.624028, -13.2198, 2.58654, 4.41229 ) }
    soma_0 { pt3dadd( 0.546274, -11.8458, 2.32855, 5.84991 ) }
    soma_0 { pt3dadd( 0.46852, -10.4718, 2.07055, 7.31637 ) }
    soma_0 { pt3dadd( 0.390766, -9.09779, 1.81255, 8.68275 ) }
    soma_0 { pt3dadd( 0.313011, -7.72379, 1.55455, 10.1324 ) }
    soma_0 { pt3dadd( 0.235257, -6.34979, 1.29656, 11.1056 ) }
    soma_0 { pt3dadd( 0.157503, -4.97579, 1.03856, 11.7054 ) }
    soma_0 { pt3dadd( 0.0797487, -3.60179, 0.780562, 12.0256 ) }
    soma_0 { pt3dadd( 0.00199453, -2.22779, 0.522565, 12.4948 ) }
    soma_0 { pt3dadd( -0.0757597, -0.853785, 0.264567, 12.7838 ) }
    soma_0 { pt3dadd( -0.153514, 0.520216, 0.00657008, 12.9275 ) }
    soma_0 { pt3dadd( -0.231268, 1.89422, -0.251427, 12.8186 ) }
    soma_0 { pt3dadd( -0.309022, 3.26822, -0.509424, 12.3668 ) }
    soma_0 { pt3dadd( -0.386777, 4.64222, -0.767422, 11.8063 ) }
    soma_0 { pt3dadd( -0.464531, 6.01622, -1.02542, 10.8607 ) }
    soma_0 { pt3dadd( -0.542285, 7.39022, -1.28342, 9.60756 ) }
    soma_0 { pt3dadd( -0.620039, 8.76422, -1.54141, 8.32491 ) }
    soma_0 { pt3dadd( -0.697793, 10.1382, -1.79941, 6.57632 ) }
    soma_0 { pt3dadd( -0.775548, 11.5122, -2.05741, 4.5422 ) }
    soma_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 2.90642 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.99768, 4.39237, 12.0608, 1.77 ) }
    dend_46 { pt3dadd( -4.18135, 5.2182, 12.3288, 1.77 ) }
    dend_46 { pt3dadd( -4.51276, 6.4982, 12.9125, 1.55 ) }
    dend_46 { pt3dadd( -4.77653, 7.35405, 13.4048, 1.55 ) }
    dend_46 { pt3dadd( -5.1648, 8.32484, 14.1239, 1.4 ) }
    dend_46 { pt3dadd( -5.86997, 9.65314, 15.2829, 1.4 ) }
    dend_46 { pt3dadd( -6.45133, 10.5184, 16.1231, 1.4 ) }
    dend_46 { pt3dadd( -7.11282, 11.1954, 16.9407, 1.69 ) }
    dend_46 { pt3dadd( -7.68852, 11.6126, 17.5351, 1.69 ) }
    dend_46 { pt3dadd( -8.79393, 12.2271, 18.4531, 1.4 ) }
    dend_46 { pt3dadd( -9.77551, 12.6748, 19.1301, 1.33 ) }
    dend_46 { pt3dadd( -10.6603, 13.0486, 19.5174, 1.18 ) }
    dend_46 { pt3dadd( -12.0643, 13.6908, 19.7969, 1.18 ) }
    dend_46 { pt3dadd( -13.0452, 14.2114, 19.8251, 1.18 ) }
    dend_46 { pt3dadd( -14.0248, 14.82, 19.8034, 1.33 ) }
    dend_46 { pt3dadd( -15.302, 15.7938, 19.7071, 1.4 ) }
    dend_46 { pt3dadd( -17.4802, 17.9026, 19.5048, 1.62 ) }
    dend_46 { pt3dadd( -18.2817, 18.8953, 19.4431, 1.69 ) }
    dend_46 { pt3dadd( -19.0917, 20.0839, 19.3811, 1.33 ) }
    dend_46 { pt3dadd( -20.095, 21.8291, 19.3508, 1.62 ) }
    dend_46 { pt3dadd( -20.5609, 22.8867, 19.4254, 1.62 ) }
    dend_46 { pt3dadd( -20.8974, 24.0457, 19.7578, 1.84 ) }
    dend_46 { pt3dadd( -21.0171, 24.6705, 20.1784, 1.84 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 44/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.09232, -14.8961, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.09232, -14.8961, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.20829, -16.3914, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.3571, -18.31, 2.30081, 3.76 ) }
    dend_17 { pt3dadd( 1.50534, -20.2215, 2.30081, 3.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.877678, 13.3174, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.877678, 13.3174, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.379049, 14.9547, -4.61858, 2.14 ) }
    dend_0 { pt3dadd( -0.103855, 15.8923, -4.41907, 2.14 ) }
    dend_0 { pt3dadd( 0.166592, 16.8924, -4.21019, 1.92 ) }
    dend_0 { pt3dadd( 0.534493, 18.4298, -3.88481, 1.69 ) }
    dend_0 { pt3dadd( 0.737023, 19.4047, -3.69265, 1.69 ) }
    dend_0 { pt3dadd( 0.88432, 20.3421, -3.53167, 1.69 ) }
    dend_0 { pt3dadd( 1.01, 21.7296, -3.34787, 1.92 ) }
    dend_0 { pt3dadd( 1.02362, 22.5708, -3.30288, 2.06 ) }
    dend_0 { pt3dadd( 0.955324, 23.8133, -3.40799, 1.99 ) }
    dend_0 { pt3dadd( 0.873015, 24.6288, -3.60207, 1.84 ) }
    dend_0 { pt3dadd( 0.757202, 25.8021, -4.00233, 1.69 ) }
    dend_0 { pt3dadd( 0.647078, 26.7777, -4.3945, 1.77 ) }
    dend_0 { pt3dadd( 0.502428, 27.9922, -4.9564, 1.69 ) }
    dend_0 { pt3dadd( 0.311705, 29.758, -5.86815, 1.92 ) }
    dend_0 { pt3dadd( 0.188225, 31.1374, -6.66783, 2.14 ) }
    dend_0 { pt3dadd( 0.12348, 32.3491, -7.39344, 2.43 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 67/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 0.89243 ) }
    axon_0 { pt3dadd( -1.70079, 27.8622, -2.3154, 0.89243 ) }
    axon_0 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.89243 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 70/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -21.0171, 24.6705, 20.1784, 0.66 ) }
    dend_50 { pt3dadd( -22.478, 25.6558, 21.9584, 0.66 ) }
    dend_50 { pt3dadd( -23.199, 26.2002, 22.6792, 0.59 ) }
    dend_50 { pt3dadd( -24.1241, 26.9232, 23.4727, 0.59 ) }
    dend_50 { pt3dadd( -24.8158, 27.4262, 23.9936, 0.52 ) }
    dend_50 { pt3dadd( -25.6539, 27.9696, 24.565, 0.66 ) }
    dend_50 { pt3dadd( -26.2437, 28.3248, 24.935, 0.52 ) }
    dend_50 { pt3dadd( -26.8315, 28.6959, 25.2592, 0.52 ) }
    dend_50 { pt3dadd( -27.585, 29.1363, 25.7649, 0.44 ) }
    dend_50 { pt3dadd( -28.1527, 29.4131, 26.2352, 0.66 ) }
    dend_50 { pt3dadd( -28.7889, 29.6485, 26.8773, 0.52 ) }
    dend_50 { pt3dadd( -29.3511, 29.8243, 27.5078, 0.74 ) }
    dend_50 { pt3dadd( -30.8193, 30.2364, 29.3234, 1.03 ) }
    dend_50 { pt3dadd( -31.6452, 30.4553, 30.464, 0.66 ) }
    dend_50 { pt3dadd( -32.34, 30.648, 31.5496, 0.59 ) }
    dend_50 { pt3dadd( -32.8268, 30.8154, 32.4205, 0.74 ) }
    dend_50 { pt3dadd( -40.3764, 34.4723, 38.8095, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -21.0171, 24.6705, 20.1784, 0.88 ) }
    dend_47 { pt3dadd( -21.8456, 28.1904, 20.4994, 0.88 ) }
    dend_47 { pt3dadd( -22.2034, 29.3906, 20.5617, 0.88 ) }
    dend_47 { pt3dadd( -22.7117, 30.8828, 20.6554, 0.88 ) }
    dend_47 { pt3dadd( -23.3385, 32.586, 20.7771, 0.88 ) }
    dend_47 { pt3dadd( -23.9261, 34.2118, 20.9174, 0.81 ) }
    dend_47 { pt3dadd( -24.459, 35.7564, 21.0882, 0.81 ) }
    dend_47 { pt3dadd( -24.8654, 36.7933, 21.1635, 1.03 ) }
    dend_47 { pt3dadd( -25.3823, 37.9899, 21.2799, 0.81 ) }
    dend_47 { pt3dadd( -26.0151, 39.2925, 21.4384, 0.96 ) }
    dend_47 { pt3dadd( -26.5659, 40.3455, 21.5807, 0.88 ) }
    dend_47 { pt3dadd( -27.2142, 41.5963, 21.7413, 0.74 ) }
    dend_47 { pt3dadd( -27.6483, 42.4524, 21.8524, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_47 { pt3dadd( -28.1277, 43.4595, 21.9706, 0.74 ) }
    dend_47 { pt3dadd( -28.641, 44.6517, 22.0621, 0.81 ) }
    dend_47 { pt3dadd( -28.998, 45.5867, 22.1178, 0.81 ) }
    dend_47 { pt3dadd( -29.3523, 46.6787, 22.181, 0.88 ) }
    dend_47 { pt3dadd( -29.6468, 47.8646, 22.2481, 1.03 ) }
    dend_47 { pt3dadd( -29.884, 49.2603, 22.3404, 0.96 ) }
    dend_47 { pt3dadd( -30.0849, 51.0162, 22.4438, 1.03 ) }
    dend_47 { pt3dadd( -30.2158, 52.2665, 22.4971, 1.03 ) }
    dend_47 { pt3dadd( -30.4322, 54.0925, 22.5688, 1.11 ) }
    dend_47 { pt3dadd( -30.6355, 55.2374, 22.5712, 0.96 ) }
    dend_47 { pt3dadd( -30.9895, 56.6436, 22.5211, 0.88 ) }
    dend_47 { pt3dadd( -31.5169, 58.1923, 22.4671, 0.74 ) }
    dend_47 { pt3dadd( -32.0745, 59.4868, 22.4477, 0.81 ) }
    dend_47 { pt3dadd( -32.525, 60.3642, 22.4845, 0.96 ) }
    dend_47 { pt3dadd( -33.5184, 62.0046, 22.6565, 1.11 ) }
    dend_47 { pt3dadd( -34.0411, 62.7678, 22.8032, 1.11 ) }
    dend_47 { pt3dadd( -34.8676, 63.865, 23.0959, 0.96 ) }
    dend_47 { pt3dadd( -35.6415, 64.8678, 23.4166, 0.74 ) }
    dend_47 { pt3dadd( -36.4875, 66.0228, 23.8014, 0.74 ) }
    dend_47 { pt3dadd( -36.9555, 66.6819, 24.0119, 0.66 ) }
    dend_47 { pt3dadd( -37.449, 67.3902, 24.2304, 0.59 ) }
    dend_47 { pt3dadd( -38.2838, 68.5295, 24.488, 0.81 ) }
    dend_47 { pt3dadd( -38.7154, 69.104, 24.5811, 0.96 ) }
    dend_47 { pt3dadd( -39.2576, 69.8341, 24.6505, 0.96 ) }
    dend_47 { pt3dadd( -40.0238, 70.95, 24.6771, 0.59 ) }
    dend_47 { pt3dadd( -40.9129, 72.4635, 24.6301, 0.59 ) }
    dend_47 { pt3dadd( -41.4957, 73.6692, 24.5296, 0.66 ) }
    dend_47 { pt3dadd( -41.9521, 74.9448, 24.365, 0.96 ) }
    dend_47 { pt3dadd( -42.1934, 75.9412, 24.194, 1.03 ) }
    dend_47 { pt3dadd( -42.3451, 77.0503, 24.0144, 0.81 ) }
    dend_47 { pt3dadd( -42.4128, 78.4729, 23.8025, 0.52 ) }
    dend_47 { pt3dadd( -42.4026, 79.5358, 23.7065, 0.37 ) }
    dend_47 { pt3dadd( -42.4147, 80.5542, 23.7332, 0.37 ) }
    dend_47 { pt3dadd( -42.5182, 81.268, 23.8662, 0.44 ) }
    dend_47 { pt3dadd( -42.9562, 82.7727, 24.4336, 0.44 ) }
    dend_47 { pt3dadd( -43.3322, 83.6345, 24.8145, 0.66 ) }
    dend_47 { pt3dadd( -43.8808, 84.7039, 25.2525, 1.03 ) }
    dend_47 { pt3dadd( -44.2795, 85.5004, 25.5013, 1.18 ) }
    dend_47 { pt3dadd( -44.6722, 86.4557, 25.6872, 1.25 ) }
    dend_47 { pt3dadd( -44.9231, 87.5059, 25.7457, 1.4 ) }
    dend_47 { pt3dadd( -45.0306, 89.1902, 25.6163, 1.25 ) }
    dend_47 { pt3dadd( -44.9408, 90.2828, 25.433, 1.18 ) }
    dend_47 { pt3dadd( -44.6663, 91.7629, 25.0154, 0.66 ) }
    dend_47 { pt3dadd( -44.2925, 93.1386, 24.52, 0.66 ) }
    dend_47 { pt3dadd( -43.7297, 94.7375, 23.8655, 0.66 ) }
    dend_47 { pt3dadd( -43.3701, 95.5825, 23.4528, 0.81 ) }
    dend_47 { pt3dadd( -42.8782, 96.5917, 22.9274, 0.96 ) }
    dend_47 { pt3dadd( -42.3342, 97.7373, 22.3357, 0.81 ) }
    dend_47 { pt3dadd( -41.8912, 98.7671, 21.8058, 0.88 ) }
    dend_47 { pt3dadd( -41.5876, 99.7152, 21.3601, 0.88 ) }
    dend_47 { pt3dadd( -41.2631, 101.349, 20.7565, 0.74 ) }
    dend_47 { pt3dadd( -41.147, 102.245, 20.5192, 0.74 ) }
    dend_47 { pt3dadd( -41.0207, 103.52, 20.334, 0.59 ) }
    dend_47 { pt3dadd( -40.9733, 104.262, 20.2768, 0.59 ) }
    dend_47 { pt3dadd( -40.949, 105.509, 20.1964, 0.59 ) }
    dend_47 { pt3dadd( -41.0016, 107.354, 20.0649, 0.74 ) }
    dend_47 { pt3dadd( -41.108, 108.448, 19.9769, 0.81 ) }
    dend_47 { pt3dadd( -41.3, 109.72, 19.818, 0.81 ) }
    dend_47 { pt3dadd( -41.6184, 111.435, 19.5449, 0.74 ) }
    dend_47 { pt3dadd( -41.834, 112.596, 19.3025, 0.74 ) }
    dend_47 { pt3dadd( -42.0406, 113.734, 19.0009, 0.74 ) }
    dend_47 { pt3dadd( -42.3719, 115.612, 18.4254, 0.88 ) }
    dend_47 { pt3dadd( -42.6747, 117.513, 17.766, 1.03 ) }
    dend_47 { pt3dadd( -42.8594, 118.733, 17.3026, 1.03 ) }
    dend_47 { pt3dadd( -42.963, 119.655, 16.9737, 1.69 ) }
    dend_47 { pt3dadd( -43.1103, 121.392, 16.3889, 1.4 ) }
    dend_47 { pt3dadd( -43.2095, 122.712, 15.9782, 0.74 ) }
    dend_47 { pt3dadd( -43.307, 124.165, 15.5813, 0.74 ) }
    dend_47 { pt3dadd( -43.3734, 124.802, 15.4167, 0.88 ) }
    dend_47 { pt3dadd( -43.5987, 126.202, 15.069, 1.03 ) }
    dend_47 { pt3dadd( -43.7486, 126.969, 14.8898, 1.11 ) }
    dend_47 { pt3dadd( -44.0323, 128.498, 14.5292, 0.66 ) }
    dend_47 { pt3dadd( -44.1837, 129.502, 14.2566, 0.66 ) }
    dend_47 { pt3dadd( -44.262, 130.903, 13.7974, 0.81 ) }
    dend_47 { pt3dadd( -44.2385, 132.146, 13.235, 1.03 ) }
    dend_47 { pt3dadd( -44.1836, 133.284, 12.6039, 0.88 ) }
    dend_47 { pt3dadd( -44.1316, 134.154, 12.0832, 0.66 ) }
    dend_47 { pt3dadd( -44.1078, 135.316, 11.341, 0.66 ) }
    dend_47 { pt3dadd( -44.2066, 136.369, 10.6625, 0.88 ) }
    dend_47 { pt3dadd( -44.562, 137.582, 9.98602, 0.74 ) }
    dend_47 { pt3dadd( -45.0687, 138.489, 9.54874, 0.66 ) }
    dend_47 { pt3dadd( -45.4755, 139.118, 9.29799, 0.66 ) }
    dend_47 { pt3dadd( -46.1611, 140.225, 8.89722, 0.52 ) }
    dend_47 { pt3dadd( -46.5377, 141.015, 8.60928, 0.44 ) }
    dend_47 { pt3dadd( -46.7215, 142.049, 8.20144, 0.44 ) }
    dend_47 { pt3dadd( -46.5911, 142.87, 7.86286, 0.44 ) }
    dend_47 { pt3dadd( -46.0107, 144.833, 6.92397, 0.52 ) }
    dend_47 { pt3dadd( -45.5566, 146.111, 6.2836, 0.66 ) }
    dend_47 { pt3dadd( -44.9571, 147.558, 5.52198, 0.59 ) }
    dend_47 { pt3dadd( -44.6022, 148.384, 5.08052, 0.66 ) }
    dend_47 { pt3dadd( -44.1418, 149.557, 4.46791, 0.74 ) }
    dend_47 { pt3dadd( -43.7252, 151.04, 3.71718, 0.81 ) }
    dend_47 { pt3dadd( -43.6084, 151.804, 3.32785, 0.88 ) }
    dend_47 { pt3dadd( -43.5063, 153.216, 2.62041, 0.74 ) }
    dend_47 { pt3dadd( -43.4888, 154.142, 2.12994, 0.74 ) }
    dend_47 { pt3dadd( -43.5263, 155.359, 1.39856, 0.81 ) }
    dend_47 { pt3dadd( -43.6396, 156.767, 0.464788, 0.74 ) }
    dend_47 { pt3dadd( -43.7968, 157.81, -0.228239, 0.88 ) }
    dend_47 { pt3dadd( -43.9248, 158.349, -0.581653, 0.88 ) }
    dend_47 { pt3dadd( -44.431, 159.924, -1.61037, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_47 { pt3dadd( -44.7918, 160.97, -2.28301, 1.25 ) }
    dend_47 { pt3dadd( -45.1053, 161.928, -2.84546, 0.74 ) }
    dend_47 { pt3dadd( -45.4306, 162.98, -3.36667, 0.74 ) }
    dend_47 { pt3dadd( -45.7258, 163.984, -3.77027, 1.03 ) }
    dend_47 { pt3dadd( -46.0222, 165.1, -4.13657, 1.25 ) }
    dend_47 { pt3dadd( -46.2599, 166.152, -4.41345, 1.03 ) }
    dend_47 { pt3dadd( -46.4703, 167.467, -4.72115, 0.88 ) }
    dend_47 { pt3dadd( -46.611, 169.158, -5.11287, 0.88 ) }
    dend_47 { pt3dadd( -46.6369, 170.84, -5.50063, 0.88 ) }
    dend_47 { pt3dadd( -46.5787, 172.639, -5.94682, 0.96 ) }
    dend_47 { pt3dadd( -46.4867, 174.203, -6.33763, 1.03 ) }
    dend_47 { pt3dadd( -46.3975, 175.683, -6.7242, 1.03 ) }
    dend_47 { pt3dadd( -46.2999, 177.531, -7.15999, 0.88 ) }
    dend_47 { pt3dadd( -46.238, 178.907, -7.44331, 0.88 ) }
    dend_47 { pt3dadd( -46.2341, 180.297, -7.70032, 0.88 ) }
    dend_47 { pt3dadd( -46.3503, 181.294, -7.82668, 0.66 ) }
    dend_47 { pt3dadd( -46.7503, 182.396, -7.77954, 0.66 ) }
    dend_47 { pt3dadd( -47.732, 183.89, -7.43393, 0.74 ) }
    dend_47 { pt3dadd( -48.229, 184.458, -7.22715, 0.74 ) }
    dend_47 { pt3dadd( -48.8548, 185.075, -6.96102, 0.74 ) }
    dend_47 { pt3dadd( -49.8086, 185.978, -6.60746, 0.59 ) }
    dend_47 { pt3dadd( -50.7859, 186.973, -6.44954, 0.88 ) }
    dend_47 { pt3dadd( -51.0767, 187.353, -6.49571, 1.03 ) }
    dend_47 { pt3dadd( -51.4335, 188.086, -6.79123, 0.81 ) }
    dend_47 { pt3dadd( -51.6418, 188.947, -7.23454, 0.66 ) }
    dend_47 { pt3dadd( -51.7983, 190.296, -7.96477, 0.59 ) }
    dend_47 { pt3dadd( -51.9036, 192.144, -8.99078, 0.59 ) }
    dend_47 { pt3dadd( -51.96, 193.354, -9.63522, 0.66 ) }
    dend_47 { pt3dadd( -52.0434, 194.901, -10.3667, 0.81 ) }
    dend_47 { pt3dadd( -52.1006, 196.244, -10.9254, 0.66 ) }
    dend_47 { pt3dadd( -52.124, 198.298, -11.6621, 0.81 ) }
    dend_47 { pt3dadd( -52.1148, 199.733, -12.1194, 0.88 ) }
    dend_47 { pt3dadd( -52.1083, 201.302, -12.5889, 0.96 ) }
    dend_47 { pt3dadd( -52.1543, 202.663, -13.0186, 0.96 ) }
    dend_47 { pt3dadd( -52.2829, 203.956, -13.4581, 0.96 ) }
    dend_47 { pt3dadd( -52.5953, 205.699, -14.1306, 0.74 ) }
    dend_47 { pt3dadd( -52.9208, 206.941, -14.6617, 0.74 ) }
    dend_47 { pt3dadd( -53.2144, 207.824, -15.0439, 0.74 ) }
    dend_47 { pt3dadd( -53.5994, 208.871, -15.4923, 0.74 ) }
    dend_47 { pt3dadd( -54.2379, 210.563, -16.2029, 0.74 ) }
    dend_47 { pt3dadd( -54.7028, 211.795, -16.6183, 0.88 ) }
    dend_47 { pt3dadd( -55.3306, 213.55, -17.0771, 0.88 ) }
    dend_47 { pt3dadd( -55.92, 215.375, -17.4661, 0.88 ) }
    dend_47 { pt3dadd( -56.3578, 216.88, -17.7558, 0.88 ) }
    dend_47 { pt3dadd( -56.7135, 218.273, -18.0277, 0.81 ) }
    dend_47 { pt3dadd( -57.11, 219.932, -18.354, 0.66 ) }
    dend_47 { pt3dadd( -57.4825, 221.195, -18.6366, 0.59 ) }
    dend_47 { pt3dadd( -57.8473, 222.048, -18.8482, 0.74 ) }
    dend_47 { pt3dadd( -58.2864, 222.788, -19.0532, 0.74 ) }
    dend_47 { pt3dadd( -58.8982, 223.724, -19.3668, 0.74 ) }
    dend_47 { pt3dadd( -59.3441, 224.472, -19.6321, 0.66 ) }
    dend_47 { pt3dadd( -59.8668, 225.505, -20.0161, 0.66 ) }
    dend_47 { pt3dadd( -60.3938, 226.755, -20.4129, 0.52 ) }
    dend_47 { pt3dadd( -60.8208, 227.972, -20.7681, 0.52 ) }
    dend_47 { pt3dadd( -61.2279, 229.289, -21.1743, 0.59 ) }
    dend_47 { pt3dadd( -61.7983, 231.078, -21.7812, 1.11 ) }
    dend_47 { pt3dadd( -62.1636, 232.064, -22.1557, 1.33 ) }
    dend_47 { pt3dadd( -62.5283, 232.889, -22.4858, 1.33 ) }
    dend_47 { pt3dadd( -63.2511, 234.221, -23.016, 0.74 ) }
    dend_47 { pt3dadd( -64.1002, 235.551, -23.5113, 0.59 ) }
    dend_47 { pt3dadd( -64.9411, 236.713, -23.9111, 0.66 ) }
    dend_47 { pt3dadd( -65.7371, 237.803, -24.2607, 0.66 ) }
    dend_47 { pt3dadd( -66.5498, 238.947, -24.6581, 0.74 ) }
    dend_47 { pt3dadd( -67.4535, 240.172, -25.1275, 0.81 ) }
    dend_47 { pt3dadd( -68.1564, 241.055, -25.4628, 0.81 ) }
    dend_47 { pt3dadd( -68.91, 241.935, -25.7935, 0.66 ) }
    dend_47 { pt3dadd( -70.2917, 243.444, -26.4031, 0.66 ) }
    dend_47 { pt3dadd( -71.5988, 244.702, -26.9819, 0.52 ) }
    dend_47 { pt3dadd( -72.7046, 245.63, -27.4657, 0.44 ) }
    dend_47 { pt3dadd( -73.3737, 246.139, -27.755, 0.59 ) }
    dend_47 { pt3dadd( -74.0411, 246.594, -28.0083, 0.59 ) }
    dend_47 { pt3dadd( -74.9044, 247.127, -28.296, 0.59 ) }
    dend_47 { pt3dadd( -75.9358, 247.754, -28.5988, 0.66 ) }
    dend_47 { pt3dadd( -76.5525, 248.203, -28.7597, 0.66 ) }
    dend_47 { pt3dadd( -77.3825, 248.926, -29.0332, 0.66 ) }
    dend_47 { pt3dadd( -78.2049, 249.699, -29.3518, 0.59 ) }
    dend_47 { pt3dadd( -78.9776, 250.455, -29.7, 0.44 ) }
    dend_47 { pt3dadd( -79.7047, 251.158, -30.076, 0.44 ) }
    dend_47 { pt3dadd( -80.4344, 251.822, -30.4918, 0.88 ) }
    dend_47 { pt3dadd( -81.0239, 252.311, -30.8342, 1.03 ) }
    // Section: dend_45, id: dend_45, parent: dend_17 (entry count 80/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.50534, -20.2215, 2.30081, 1.47 ) }
    dend_45 { pt3dadd( 2.46238, -20.9595, 1.45718, 1.47 ) }
    dend_45 { pt3dadd( 3.21397, -21.6723, 0.744816, 1.03 ) }
    dend_45 { pt3dadd( 4.04677, -22.4856, -0.0804116, 0.44 ) }
    dend_45 { pt3dadd( 4.412, -22.8213, -0.420291, 0.66 ) }
    dend_45 { pt3dadd( 4.99659, -23.3187, -0.917463, 0.81 ) }
    dend_45 { pt3dadd( 5.54655, -23.7493, -1.34907, 0.74 ) }
    dend_45 { pt3dadd( 6.27512, -24.2958, -1.87024, 0.81 ) }
    dend_45 { pt3dadd( 7.34814, -24.9737, -2.47828, 0.44 ) }
    dend_45 { pt3dadd( 8.08131, -25.3658, -2.83547, 0.81 ) }
    dend_45 { pt3dadd( 8.73875, -25.6733, -3.09159, 1.11 ) }
    dend_45 { pt3dadd( 9.44724, -25.9591, -3.29704, 1.11 ) }
    dend_45 { pt3dadd( 10.2793, -26.2333, -3.4642, 0.74 ) }
    dend_45 { pt3dadd( 11.1537, -26.4618, -3.57373, 0.52 ) }
    dend_45 { pt3dadd( 12.6596, -26.7831, -3.6621, 0.52 ) }
    dend_45 { pt3dadd( 13.8315, -26.9809, -3.70052, 0.52 ) }
    dend_45 { pt3dadd( 14.4701, -27.052, -3.70264, 0.44 ) }
    dend_45 { pt3dadd( 15.525, -27.1007, -3.671, 0.66 ) }
    dend_45 { pt3dadd( 16.196, -27.0777, -3.63719, 1.18 ) }
    dend_45 { pt3dadd( 16.9075, -26.9955, -3.58971, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( 17.7144, -26.8359, -3.52018, 1.03 ) }
    dend_45 { pt3dadd( 18.4749, -26.657, -3.48729, 0.81 ) }
    dend_45 { pt3dadd( 19.184, -26.4962, -3.48885, 0.59 ) }
    dend_45 { pt3dadd( 20.1073, -26.3006, -3.56565, 0.81 ) }
    dend_45 { pt3dadd( 20.8092, -26.1552, -3.67292, 0.81 ) }
    dend_45 { pt3dadd( 21.7202, -25.9593, -3.93645, 0.52 ) }
    dend_45 { pt3dadd( 22.2267, -25.8531, -4.14275, 0.52 ) }
    dend_45 { pt3dadd( 23.044, -25.6995, -4.5411, 0.74 ) }
    dend_45 { pt3dadd( 23.9426, -25.534, -5.0011, 0.66 ) }
    dend_45 { pt3dadd( 24.7181, -25.3915, -5.41998, 0.66 ) }
    dend_45 { pt3dadd( 26.0068, -25.1357, -6.13329, 0.52 ) }
    dend_45 { pt3dadd( 26.7881, -24.9462, -6.58611, 0.44 ) }
    dend_45 { pt3dadd( 27.6058, -24.7375, -7.03356, 0.44 ) }
    dend_45 { pt3dadd( 28.4201, -24.5426, -7.39278, 0.74 ) }
    dend_45 { pt3dadd( 28.982, -24.4228, -7.56899, 0.88 ) }
    dend_45 { pt3dadd( 29.6479, -24.3033, -7.70738, 0.74 ) }
    dend_45 { pt3dadd( 30.9214, -24.0957, -7.87029, 0.37 ) }
    dend_45 { pt3dadd( 31.5843, -24.0012, -8.00107, 0.37 ) }
    dend_45 { pt3dadd( 32.6216, -23.9247, -8.24532, 0.66 ) }
    dend_45 { pt3dadd( 33.3946, -23.9122, -8.43601, 0.66 ) }
    dend_45 { pt3dadd( 34.1069, -23.9128, -8.59546, 0.81 ) }
    dend_45 { pt3dadd( 34.6053, -23.9166, -8.69674, 0.81 ) }
    dend_45 { pt3dadd( 36.5525, -23.9067, -9.06006, 0.66 ) }
    dend_45 { pt3dadd( 37.7703, -23.8545, -9.31808, 0.66 ) }
    dend_45 { pt3dadd( 38.5494, -23.8095, -9.51984, 0.81 ) }
    dend_45 { pt3dadd( 39.4016, -23.731, -9.80329, 0.81 ) }
    dend_45 { pt3dadd( 40.2052, -23.6205, -10.1387, 0.66 ) }
    dend_45 { pt3dadd( 40.6996, -23.5134, -10.3816, 0.59 ) }
    dend_45 { pt3dadd( 41.2391, -23.3081, -10.7339, 0.59 ) }
    dend_45 { pt3dadd( 42.0969, -22.8595, -11.4875, 0.59 ) }
    dend_45 { pt3dadd( 43.1094, -22.2771, -12.4952, 0.96 ) }
    dend_45 { pt3dadd( 43.6378, -21.9915, -13.0364, 1.11 ) }
    dend_45 { pt3dadd( 44.0711, -21.7673, -13.4545, 1.18 ) }
    dend_45 { pt3dadd( 44.8642, -21.3703, -14.0759, 0.81 ) }
    dend_45 { pt3dadd( 45.8469, -20.8897, -14.6175, 0.52 ) }
    dend_45 { pt3dadd( 46.5001, -20.5871, -14.8206, 0.66 ) }
    dend_45 { pt3dadd( 47.3407, -20.2386, -14.9175, 0.66 ) }
    dend_45 { pt3dadd( 48.0659, -19.9361, -14.9327, 0.44 ) }
    dend_45 { pt3dadd( 49.1573, -19.4654, -14.8942, 0.44 ) }
    dend_45 { pt3dadd( 49.8871, -19.0975, -14.8143, 0.52 ) }
    dend_45 { pt3dadd( 50.5304, -18.6872, -14.7227, 0.66 ) }
    dend_45 { pt3dadd( 51.1166, -18.2318, -14.6195, 1.11 ) }
    dend_45 { pt3dadd( 51.4995, -17.8848, -14.5366, 1.25 ) }
    dend_45 { pt3dadd( 51.8313, -17.5676, -14.4587, 1.25 ) }
    dend_45 { pt3dadd( 52.3976, -17.0071, -14.3283, 1.25 ) }
    dend_45 { pt3dadd( 52.9856, -16.4401, -14.1836, 0.74 ) }
    dend_45 { pt3dadd( 53.8536, -15.6654, -13.9963, 0.88 ) }
    dend_45 { pt3dadd( 54.2168, -15.3486, -13.9312, 0.88 ) }
    dend_45 { pt3dadd( 54.5944, -15.0147, -13.8571, 0.88 ) }
    dend_45 { pt3dadd( 55.2464, -14.4113, -13.7773, 0.59 ) }
    dend_45 { pt3dadd( 56.0421, -13.6233, -13.7552, 0.52 ) }
    dend_45 { pt3dadd( 56.576, -13.0625, -13.8168, 0.52 ) }
    dend_45 { pt3dadd( 57.3405, -12.3061, -13.966, 0.81 ) }
    dend_45 { pt3dadd( 57.9306, -11.7418, -14.1001, 0.81 ) }
    dend_45 { pt3dadd( 58.9955, -10.7775, -14.3685, 0.96 ) }
    dend_45 { pt3dadd( 59.527, -10.3282, -14.514, 1.11 ) }
    dend_45 { pt3dadd( 60.2378, -9.77369, -14.7599, 1.4 ) }
    dend_45 { pt3dadd( 61.5273, -8.81845, -15.2538, 0.81 ) }
    dend_45 { pt3dadd( 62.4038, -8.19084, -15.6237, 0.81 ) }
    dend_45 { pt3dadd( 63.1076, -7.65136, -15.9435, 0.81 ) }
    dend_45 { pt3dadd( 63.4703, -7.33425, -16.1026, 0.81 ) }
    dend_45 { pt3dadd( 64.38, -6.39513, -16.5393, 0.52 ) }
    dend_45 { pt3dadd( 65.1366, -5.39198, -16.9664, 0.66 ) }
    dend_45 { pt3dadd( 65.5503, -4.65973, -17.2692, 0.59 ) }
    dend_45 { pt3dadd( 65.9409, -3.8474, -17.5537, 0.37 ) }
    dend_45 { pt3dadd( 66.3397, -2.91108, -17.8117, 1.03 ) }
    dend_45 { pt3dadd( 66.5304, -2.45222, -17.9077, 1.25 ) }
    dend_45 { pt3dadd( 66.7645, -1.92628, -17.9813, 1.25 ) }
    dend_45 { pt3dadd( 67.2265, -1.07106, -18.0841, 1.03 ) }
    dend_45 { pt3dadd( 67.6699, -0.389281, -18.1591, 1.18 ) }
    dend_45 { pt3dadd( 68.2758, 0.459107, -18.2423, 1.03 ) }
    dend_45 { pt3dadd( 68.8551, 1.27298, -18.3034, 1.18 ) }
    dend_45 { pt3dadd( 69.2698, 1.86758, -18.3316, 1.18 ) }
    dend_45 { pt3dadd( 69.7726, 2.57908, -18.3493, 0.74 ) }
    dend_45 { pt3dadd( 70.1715, 3.10969, -18.3545, 0.52 ) }
    dend_45 { pt3dadd( 70.6419, 3.66714, -18.3607, 0.52 ) }
    dend_45 { pt3dadd( 71.5034, 4.50862, -18.3757, 0.81 ) }
    dend_45 { pt3dadd( 72.1172, 5.03619, -18.3884, 0.88 ) }
    dend_45 { pt3dadd( 72.6201, 5.42884, -18.4003, 0.81 ) }
    dend_45 { pt3dadd( 73.4972, 6.00257, -18.4225, 0.37 ) }
    dend_45 { pt3dadd( 74.107, 6.32101, -18.4542, 0.29 ) }
    dend_45 { pt3dadd( 75.1285, 6.76222, -18.5747, 0.59 ) }
    dend_45 { pt3dadd( 75.5049, 6.91227, -18.6468, 0.66 ) }
    dend_45 { pt3dadd( 76.3289, 7.25234, -18.8498, 0.37 ) }
    dend_45 { pt3dadd( 77.3108, 7.69958, -19.1409, 0.59 ) }
    dend_45 { pt3dadd( 78.2008, 8.16932, -19.4125, 0.81 ) }
    dend_45 { pt3dadd( 79.4268, 8.87028, -19.7668, 1.99 ) }
    dend_45 { pt3dadd( 80.0582, 9.22807, -19.9376, 2.65 ) }
    dend_45 { pt3dadd( 80.5133, 9.47045, -20.0471, 2.65 ) }
    dend_45 { pt3dadd( 81.5544, 10.005, -20.2657, 1.18 ) }
    dend_45 { pt3dadd( 82.6778, 10.5646, -20.4475, 0.44 ) }
    dend_45 { pt3dadd( 83.6423, 10.9994, -20.5255, 0.74 ) }
    dend_45 { pt3dadd( 84.3104, 11.2706, -20.5221, 0.74 ) }
    dend_45 { pt3dadd( 84.9669, 11.5368, -20.4965, 0.81 ) }
    dend_45 { pt3dadd( 85.4012, 11.712, -20.4725, 0.81 ) }
    dend_45 { pt3dadd( 86.0792, 11.9767, -20.4177, 0.59 ) }
    dend_45 { pt3dadd( 86.8431, 12.2433, -20.3272, 0.44 ) }
    dend_45 { pt3dadd( 87.5789, 12.487, -20.1962, 0.37 ) }
    dend_45 { pt3dadd( 88.2457, 12.6914, -20.0519, 0.37 ) }
    dend_45 { pt3dadd( 89.23, 12.9637, -19.8542, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_45 { pt3dadd( 89.8126, 13.1004, -19.7607, 0.88 ) }
    dend_45 { pt3dadd( 90.7153, 13.2587, -19.683, 0.66 ) }
    dend_45 { pt3dadd( 91.2928, 13.3429, -19.6937, 0.52 ) }
    dend_45 { pt3dadd( 91.9947, 13.4311, -19.7416, 0.52 ) }
    dend_45 { pt3dadd( 92.9709, 13.5736, -19.8281, 0.88 ) }
    dend_45 { pt3dadd( 93.6964, 13.7203, -19.9244, 0.88 ) }
    dend_45 { pt3dadd( 94.6348, 13.9725, -20.0769, 0.66 ) }
    dend_45 { pt3dadd( 95.758, 14.3418, -20.2705, 0.44 ) }
    dend_45 { pt3dadd( 96.5231, 14.6392, -20.3849, 0.44 ) }
    dend_45 { pt3dadd( 97.3231, 14.9736, -20.4717, 0.66 ) }
    dend_45 { pt3dadd( 98.1468, 15.3186, -20.5246, 0.52 ) }
    dend_45 { pt3dadd( 98.781, 15.5837, -20.5487, 0.52 ) }
    dend_45 { pt3dadd( 99.6109, 15.9258, -20.5616, 0.74 ) }
    dend_45 { pt3dadd( 100.409, 16.2426, -20.5284, 0.44 ) }
    dend_45 { pt3dadd( 101.45, 16.661, -20.4634, 0.44 ) }
    dend_45 { pt3dadd( 102.414, 17.0626, -20.3742, 0.88 ) }
    dend_45 { pt3dadd( 103.075, 17.3601, -20.292, 1.03 ) }
    dend_45 { pt3dadd( 103.973, 17.8046, -20.1528, 0.74 ) }
    dend_45 { pt3dadd( 105.18, 18.4944, -19.9298, 0.52 ) }
    dend_45 { pt3dadd( 105.701, 18.8194, -19.8214, 0.96 ) }
    dend_45 { pt3dadd( 106.168, 19.1435, -19.7188, 0.96 ) }
    dend_45 { pt3dadd( 106.814, 19.5984, -19.5826, 0.81 ) }
    dend_45 { pt3dadd( 107.762, 20.2109, -19.4164, 0.52 ) }
    dend_45 { pt3dadd( 108.407, 20.5666, -19.3334, 0.52 ) }
    dend_45 { pt3dadd( 109.501, 21.0529, -19.2402, 0.59 ) }
    dend_45 { pt3dadd( 110.115, 21.275, -19.2154, 0.81 ) }
    dend_45 { pt3dadd( 110.815, 21.4794, -19.2162, 0.81 ) }
    dend_45 { pt3dadd( 111.568, 21.6498, -19.2465, 0.66 ) }
    dend_45 { pt3dadd( 112.183, 21.7578, -19.2958, 0.59 ) }
    dend_45 { pt3dadd( 113.14, 21.9223, -19.3934, 0.59 ) }
    dend_45 { pt3dadd( 114.466, 22.229, -19.5494, 0.44 ) }
    dend_45 { pt3dadd( 115.224, 22.4338, -19.6838, 0.74 ) }
    dend_45 { pt3dadd( 115.824, 22.6185, -19.8139, 0.74 ) }
    dend_45 { pt3dadd( 116.106, 22.7133, -19.8811, 0.74 ) }
    dend_45 { pt3dadd( 116.989, 23.0259, -20.1305, 0.44 ) }
    dend_45 { pt3dadd( 117.96, 23.3754, -20.4327, 0.44 ) }
    dend_45 { pt3dadd( 119.356, 23.9261, -20.8425, 0.74 ) }
    dend_45 { pt3dadd( 119.984, 24.204, -21.0565, 0.74 ) }
    dend_45 { pt3dadd( 120.586, 24.5058, -21.2833, 0.74 ) }
    dend_45 { pt3dadd( 121.336, 24.9282, -21.5854, 0.52 ) }
    dend_45 { pt3dadd( 121.989, 25.3393, -21.8571, 0.37 ) }
    dend_45 { pt3dadd( 122.617, 25.7874, -22.1005, 0.66 ) }
    dend_45 { pt3dadd( 123.111, 26.2, -22.2546, 1.03 ) }
    dend_45 { pt3dadd( 123.534, 26.5602, -22.3696, 1.18 ) }
    dend_45 { pt3dadd( 123.842, 26.8175, -22.46, 1.18 ) }
    dend_45 { pt3dadd( 124.566, 27.3899, -22.6813, 0.59 ) }
    dend_45 { pt3dadd( 125.155, 27.8191, -22.8803, 0.44 ) }
    dend_45 { pt3dadd( 125.609, 28.1269, -23.0373, 0.44 ) }
    dend_45 { pt3dadd( 126.347, 28.6205, -23.2818, 0.81 ) }
    dend_45 { pt3dadd( 127.578, 29.3998, -23.6987, 1.11 ) }
    dend_45 { pt3dadd( 128.094, 29.7003, -23.8719, 1.11 ) }
    dend_45 { pt3dadd( 128.59, 29.966, -24.0356, 0.96 ) }
    dend_45 { pt3dadd( 129.08, 30.2208, -24.1988, 0.66 ) }
    dend_45 { pt3dadd( 129.811, 30.6014, -24.4381, 0.37 ) }
    dend_45 { pt3dadd( 130.664, 31.0364, -24.7042, 0.52 ) }
    dend_45 { pt3dadd( 131.53, 31.4546, -24.9325, 0.59 ) }
    dend_45 { pt3dadd( 132.167, 31.7574, -25.0932, 0.44 ) }
    dend_45 { pt3dadd( 132.94, 32.1256, -25.2996, 0.37 ) }
    dend_45 { pt3dadd( 133.944, 32.6172, -25.5786, 0.66 ) }
    dend_45 { pt3dadd( 134.565, 32.9369, -25.7487, 0.44 ) }
    dend_45 { pt3dadd( 135.18, 33.2604, -25.9156, 0.44 ) }
    dend_45 { pt3dadd( 136.128, 33.7426, -26.131, 0.88 ) }
    dend_45 { pt3dadd( 136.757, 34.0399, -26.2257, 1.03 ) }
    dend_45 { pt3dadd( 137.327, 34.2895, -26.2581, 1.03 ) }
    dend_45 { pt3dadd( 138.179, 34.6557, -26.2143, 0.29 ) }
    dend_45 { pt3dadd( 138.931, 34.9853, -26.1148, 0.29 ) }
    dend_45 { pt3dadd( 139.778, 35.3669, -25.9503, 0.29 ) }
    dend_45 { pt3dadd( 140.511, 35.6964, -25.7715, 0.44 ) }
    dend_45 { pt3dadd( 141.453, 36.0813, -25.5038, 1.11 ) }
    dend_45 { pt3dadd( 142.222, 36.365, -25.2849, 1.4 ) }
    dend_45 { pt3dadd( 142.37, 36.4196, -25.244, 1.55 ) }
    dend_45 { pt3dadd( 143.045, 36.6939, -25.0724, 0.88 ) }
    dend_45 { pt3dadd( 143.943, 37.0639, -24.9101, 0.29 ) }
    dend_45 { pt3dadd( 144.93, 37.4411, -24.7804, 0.29 ) }
    dend_45 { pt3dadd( 145.677, 37.709, -24.7152, 0.52 ) }
    dend_45 { pt3dadd( 146.11, 37.8617, -24.6953, 0.66 ) }
    dend_45 { pt3dadd( 146.602, 38.0465, -24.675, 0.44 ) }
    dend_45 { pt3dadd( 147.359, 38.3624, -24.634, 0.29 ) }
    dend_45 { pt3dadd( 147.944, 38.6404, -24.5992, 0.29 ) }
    dend_45 { pt3dadd( 148.878, 39.1076, -24.5482, 0.66 ) }
    dend_45 { pt3dadd( 149.387, 39.3317, -24.517, 1.11 ) }
    dend_45 { pt3dadd( 149.852, 39.5116, -24.5095, 0.81 ) }
    dend_45 { pt3dadd( 150.962, 39.9441, -24.5552, 0.52 ) }
    dend_45 { pt3dadd( 151.383, 40.1237, -24.6121, 0.74 ) }
    dend_45 { pt3dadd( 152.119, 40.4758, -24.7684, 0.74 ) }
    dend_45 { pt3dadd( 153.091, 40.9975, -25.059, 0.81 ) }
    dend_45 { pt3dadd( 154.078, 41.5582, -25.455, 0.44 ) }
    dend_45 { pt3dadd( 154.886, 42.0067, -25.8737, 0.81 ) }
    dend_45 { pt3dadd( 155.765, 42.4905, -26.4521, 1.33 ) }
    dend_45 { pt3dadd( 156.255, 42.7574, -26.8292, 1.33 ) }
    dend_45 { pt3dadd( 156.759, 43.0219, -27.2522, 1.11 ) }
    dend_45 { pt3dadd( 157.885, 43.5508, -28.221, 0.52 ) }
    dend_45 { pt3dadd( 158.867, 43.8971, -29.054, 1.18 ) }
    dend_45 { pt3dadd( 159.635, 44.0896, -29.6773, 1.33 ) }
    dend_45 { pt3dadd( 160.396, 44.2336, -30.2629, 1.03 ) }
    dend_45 { pt3dadd( 161.395, 44.3881, -30.9833, 0.22 ) }
    dend_45 { pt3dadd( 162.092, 44.476, -31.4358, 0.22 ) }
    dend_45 { pt3dadd( 163.898, 44.6813, -32.484, 0.88 ) }
    dend_45 { pt3dadd( 164.562, 44.7521, -32.8081, 1.03 ) }
    dend_45 { pt3dadd( 165.143, 44.7964, -33.0429, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 165.913, 44.8221, -33.3116, 0.96 ) }
    dend_45 { pt3dadd( 166.534, 44.8038, -33.5309, 0.66 ) }
    dend_45 { pt3dadd( 167.508, 44.6963, -33.859, 0.44 ) }
    dend_45 { pt3dadd( 168.526, 44.5204, -34.1608, 0.66 ) }
    dend_45 { pt3dadd( 169.375, 44.3372, -34.3949, 0.74 ) }
    dend_45 { pt3dadd( 169.988, 44.1915, -34.5471, 0.74 ) }
    dend_45 { pt3dadd( 171.334, 43.8542, -34.8377, 0.37 ) }
    dend_45 { pt3dadd( 172.138, 43.6608, -34.974, 0.52 ) }
    dend_45 { pt3dadd( 173.139, 43.4357, -35.0784, 0.29 ) }
    dend_45 { pt3dadd( 174.25, 43.2281, -35.1536, 0.81 ) }
    dend_45 { pt3dadd( 174.739, 43.1467, -35.1726, 1.47 ) }
    dend_45 { pt3dadd( 175.209, 43.0543, -35.1874, 1.62 ) }
    dend_45 { pt3dadd( 175.765, 42.9088, -35.2055, 1.62 ) }
    dend_45 { pt3dadd( 177.313, 42.3967, -35.3737, 0.37 ) }
    dend_45 { pt3dadd( 178.279, 41.9985, -35.5647, 0.29 ) }
    dend_45 { pt3dadd( 179.291, 41.4781, -35.8437, 0.29 ) }
    dend_45 { pt3dadd( 180.149, 40.9622, -36.1076, 0.29 ) }
    dend_45 { pt3dadd( 181.112, 40.3391, -36.4215, 1.47 ) }
    dend_45 { pt3dadd( 181.82, 39.8611, -36.685, 1.69 ) }
    dend_45 { pt3dadd( 182.19, 39.605, -36.8588, 1.84 ) }
    dend_45 { pt3dadd( 183.328, 38.8721, -37.4938, 0.52 ) }
    dend_45 { pt3dadd( 184.109, 38.4879, -37.9364, 0.44 ) }
    dend_45 { pt3dadd( 184.711, 38.2879, -38.2584, 0.81 ) }
    dend_45 { pt3dadd( 185.352, 38.1472, -38.583, 0.81 ) }
    dend_45 { pt3dadd( 186.245, 38.0209, -38.9794, 0.81 ) }
    dend_45 { pt3dadd( 187.585, 37.9455, -39.557, 0.29 ) }
    dend_45 { pt3dadd( 188.677, 37.9865, -40.043, 0.29 ) }
    dend_45 { pt3dadd( 189.203, 38.031, -40.2623, 0.52 ) }
    dend_45 { pt3dadd( 190.04, 38.1088, -40.5819, 0.66 ) }
    dend_45 { pt3dadd( 191.038, 38.1865, -40.9236, 0.81 ) }
    dend_45 { pt3dadd( 191.865, 38.2476, -41.1793, 0.96 ) }
    dend_45 { pt3dadd( 192.574, 38.3102, -41.3947, 0.74 ) }
    dend_45 { pt3dadd( 193.636, 38.4161, -41.7254, 0.22 ) }
    dend_45 { pt3dadd( 194.635, 38.5413, -42.0143, 0.22 ) }
    dend_45 { pt3dadd( 195.716, 38.7187, -42.2962, 0.22 ) }
    dend_45 { pt3dadd( 196.17, 38.8089, -42.3922, 0.44 ) }
    dend_45 { pt3dadd( 196.89, 38.9633, -42.5052, 0.44 ) }
    dend_45 { pt3dadd( 198.236, 39.3023, -42.6577, 0.29 ) }
    dend_45 { pt3dadd( 199.376, 39.6288, -42.7497, 1.03 ) }
    dend_45 { pt3dadd( 200.006, 39.8321, -42.7734, 1.25 ) }
    dend_45 { pt3dadd( 201.08, 40.2208, -42.8149, 0.22 ) }
    dend_45 { pt3dadd( 201.438, 40.3513, -42.836, 0.37 ) }
    dend_45 { pt3dadd( 202.452, 40.732, -42.9144, 0.22 ) }
    dend_45 { pt3dadd( 202.822, 40.8844, -42.9662, 0.52 ) }
    dend_45 { pt3dadd( 203.463, 41.1644, -43.0849, 0.59 ) }
    dend_45 { pt3dadd( 204.866, 41.7838, -43.4126, 0.22 ) }
    dend_45 { pt3dadd( 205.502, 42.0551, -43.5958, 0.59 ) }
    dend_45 { pt3dadd( 206.057, 42.2875, -43.7908, 0.59 ) }
    dend_45 { pt3dadd( 207.349, 42.813, -44.3422, 0.29 ) }
    dend_45 { pt3dadd( 208.276, 43.1957, -44.7987, 0.22 ) }
    dend_45 { pt3dadd( 208.79, 43.4022, -45.116, 0.22 ) }
    dend_45 { pt3dadd( 209.909, 43.7656, -45.965, 0.81 ) }
    dend_45 { pt3dadd( 210.658, 43.9622, -46.6002, 1.18 ) }
    dend_45 { pt3dadd( 211.392, 44.106, -47.2468, 0.74 ) }
    dend_45 { pt3dadd( 212.102, 44.1833, -47.9078, 0.44 ) }
    dend_45 { pt3dadd( 213.25, 44.3582, -49.0707, 0.74 ) }
    dend_45 { pt3dadd( 214.134, 44.5852, -50.0487, 0.52 ) }
    dend_45 { pt3dadd( 214.622, 44.766, -50.6327, 0.52 ) }
    dend_45 { pt3dadd( 215.109, 44.997, -51.2349, 0.37 ) }
    dend_45 { pt3dadd( 216.099, 45.5678, -52.4943, 0.37 ) }
    dend_45 { pt3dadd( 217.071, 46.2217, -53.7812, 2.5 ) }
    dend_45 { pt3dadd( 218.621, 47.4286, -55.8408, 0.29 ) }
    dend_45 { pt3dadd( 218.974, 47.7395, -56.3474, 0.29 ) }
    dend_45 { pt3dadd( 219.538, 48.2842, -57.2687, 0.74 ) }
    dend_45 { pt3dadd( 219.935, 48.6856, -57.9766, 1.18 ) }
    dend_45 { pt3dadd( 220.422, 49.1696, -58.8809, 1.4 ) }
    dend_45 { pt3dadd( 220.738, 49.4496, -59.4822, 1.4 ) }
    dend_45 { pt3dadd( 221.785, 50.3307, -61.4413, 0.29 ) }
    dend_45 { pt3dadd( 222.528, 50.8892, -62.7832, 0.44 ) }
    dend_45 { pt3dadd( 223.368, 51.4926, -64.2783, 0.22 ) }
    dend_45 { pt3dadd( 223.886, 51.8577, -65.2039, 0.22 ) }
    dend_45 { pt3dadd( 224.37, 52.2194, -66.1304, 0.74 ) }
    dend_45 { pt3dadd( 224.652, 52.4509, -66.6943, 0.88 ) }
    dend_45 { pt3dadd( 226.078, 53.7451, -69.5586, 0.29 ) }
    dend_45 { pt3dadd( 226.605, 54.3072, -70.6339, 0.52 ) }
    dend_45 { pt3dadd( 227.273, 55.1737, -72.0744, 0.81 ) }
    dend_45 { pt3dadd( 228.228, 56.5445, -74.2292, 0.81 ) }
    dend_45 { pt3dadd( 228.55, 57.0651, -75.0145, 0.29 ) }
    dend_45 { pt3dadd( 228.781, 57.523, -75.6631, 0.37 ) }
    dend_45 { pt3dadd( 229.04, 58.3665, -76.5842, 0.22 ) }
    dend_45 { pt3dadd( 229.146, 58.8262, -77.0028, 0.81 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 81/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 1.50534, -20.2215, 2.30081, 3.68 ) }
    dend_18 { pt3dadd( 1.06227, -22.1391, 2.45275, 3.68 ) }
    dend_18 { pt3dadd( 0.533169, -24.3564, 2.60838, 3.32 ) }
    dend_18 { pt3dadd( -0.0939926, -26.7237, 2.76725, 3.17 ) }
    dend_18 { pt3dadd( -0.867045, -29.4394, 2.96267, 3.09 ) }
    dend_18 { pt3dadd( -1.4985, -31.554, 3.11336, 2.8 ) }
    dend_18 { pt3dadd( -2.06397, -33.4138, 3.27115, 2.73 ) }
    dend_18 { pt3dadd( -2.60609, -35.1064, 3.43272, 2.65 ) }
    dend_18 { pt3dadd( -3.09705, -36.5723, 3.59496, 2.65 ) }
    dend_18 { pt3dadd( -3.59222, -38.0423, 3.76729, 2.65 ) }
    dend_18 { pt3dadd( -4.12876, -39.5841, 3.9868, 2.65 ) }
    dend_18 { pt3dadd( -4.81184, -41.5144, 4.31178, 2.5 ) }
    dend_18 { pt3dadd( -5.08768, -42.3178, 4.46814, 2.58 ) }
    dend_18 { pt3dadd( -5.42748, -43.397, 4.70204, 2.58 ) }
    dend_18 { pt3dadd( -5.66367, -44.3388, 4.91754, 2.65 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 96/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.12348, 32.3491, -7.39344, 1.4 ) }
    dend_10 { pt3dadd( 0.361488, 33.1782, -7.45177, 1.4 ) }
    dend_10 { pt3dadd( 0.67492, 34.5595, -7.51683, 1.11 ) }
    dend_10 { pt3dadd( 0.906523, 35.7772, -7.56028, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 1.1494, 37.1783, -7.51346, 0.96 ) }
    dend_10 { pt3dadd( 1.42295, 38.4756, -7.55712, 1.11 ) }
    dend_10 { pt3dadd( 1.74109, 39.7007, -7.64836, 0.88 ) }
    dend_10 { pt3dadd( 2.09173, 40.9192, -7.81903, 0.88 ) }
    dend_10 { pt3dadd( 2.33796, 41.5233, -8.01547, 1.11 ) }
    dend_10 { pt3dadd( 3.11797, 42.7734, -8.71102, 1.11 ) }
    dend_10 { pt3dadd( 4.82599, 44.7541, -10.2916, 1.4 ) }
    dend_10 { pt3dadd( 5.32201, 45.2622, -10.7722, 1.62 ) }
    dend_10 { pt3dadd( 5.89477, 45.845, -11.3448, 1.11 ) }
    dend_10 { pt3dadd( 7.16498, 47.176, -12.5678, 0.88 ) }
    dend_10 { pt3dadd( 7.82613, 47.9425, -13.1577, 1.47 ) }
    dend_10 { pt3dadd( 8.27009, 48.5285, -13.5053, 1.47 ) }
    dend_10 { pt3dadd( 8.94943, 49.5735, -13.8365, 1.18 ) }
    dend_10 { pt3dadd( 9.56133, 50.5702, -14.0494, 1.33 ) }
    dend_10 { pt3dadd( 10.0679, 51.4262, -14.1512, 1.33 ) }
    dend_10 { pt3dadd( 10.6013, 52.387, -14.223, 1.18 ) }
    dend_10 { pt3dadd( 11.291, 53.7146, -14.3315, 1.03 ) }
    dend_10 { pt3dadd( 11.7357, 54.6852, -14.4567, 0.88 ) }
    dend_10 { pt3dadd( 12.1418, 55.6986, -14.6714, 0.88 ) }
    dend_10 { pt3dadd( 12.4558, 56.759, -15.0139, 1.03 ) }
    dend_10 { pt3dadd( 12.7847, 58.4464, -15.7541, 1.18 ) }
    dend_10 { pt3dadd( 12.9203, 59.4787, -16.2945, 1.11 ) }
    dend_10 { pt3dadd( 13.067, 60.9104, -17.1089, 1.25 ) }
    dend_10 { pt3dadd( 13.1752, 61.8678, -17.6728, 1.11 ) }
    dend_10 { pt3dadd( 13.3748, 63.0179, -18.3535, 0.96 ) }
    dend_10 { pt3dadd( 13.6514, 63.9677, -18.8635, 0.88 ) }
    dend_10 { pt3dadd( 14.1923, 65.0975, -19.3207, 0.88 ) }
    dend_10 { pt3dadd( 14.7581, 65.985, -19.5451, 0.96 ) }
    dend_10 { pt3dadd( 15.2704, 66.6741, -19.6037, 1.03 ) }
    dend_10 { pt3dadd( 15.8443, 67.4209, -19.5948, 1.03 ) }
    dend_10 { pt3dadd( 16.5147, 68.3329, -19.5286, 0.88 ) }
    dend_10 { pt3dadd( 16.8761, 68.9404, -19.4877, 0.74 ) }
    dend_10 { pt3dadd( 17.3249, 70.1671, -19.5141, 1.69 ) }
    dend_10 { pt3dadd( 17.4477, 70.8647, -19.5879, 2.28 ) }
    dend_10 { pt3dadd( 17.4962, 71.5768, -19.696, 2.28 ) }
    dend_10 { pt3dadd( 17.5095, 72.4875, -19.8488, 2.06 ) }
    dend_10 { pt3dadd( 17.5155, 73.4582, -20.0136, 1.62 ) }
    dend_10 { pt3dadd( 17.578, 74.662, -20.2261, 1.18 ) }
    dend_10 { pt3dadd( 17.6637, 75.3933, -20.3614, 1.4 ) }
    dend_10 { pt3dadd( 17.8164, 76.1962, -20.5169, 1.4 ) }
    dend_10 { pt3dadd( 18.0649, 77.1862, -20.7588, 1.18 ) }
    dend_10 { pt3dadd( 18.3081, 78.0618, -21.0084, 1.03 ) }
    dend_10 { pt3dadd( 18.7604, 79.5372, -21.503, 0.81 ) }
    dend_10 { pt3dadd( 19.0633, 80.4346, -21.8282, 0.81 ) }
    dend_10 { pt3dadd( 19.3246, 81.1695, -22.0972, 0.81 ) }
    dend_10 { pt3dadd( 19.672, 82.1291, -22.4328, 0.96 ) }
    dend_10 { pt3dadd( 19.9541, 82.9073, -22.6725, 1.33 ) }
    dend_10 { pt3dadd( 20.329, 83.9586, -22.9225, 1.11 ) }
    dend_10 { pt3dadd( 20.7306, 85.1025, -23.1004, 0.96 ) }
    dend_10 { pt3dadd( 20.9937, 85.8008, -23.1649, 1.18 ) }
    dend_10 { pt3dadd( 21.3309, 86.652, -23.2081, 1.18 ) }
    dend_10 { pt3dadd( 21.6765, 87.5149, -23.2222, 1.33 ) }
    dend_10 { pt3dadd( 21.9454, 88.2066, -23.2466, 1.18 ) }
    dend_10 { pt3dadd( 22.1349, 88.7317, -23.2716, 1.18 ) }
    dend_10 { pt3dadd( 22.4233, 89.5131, -23.3382, 0.88 ) }
    dend_10 { pt3dadd( 22.7323, 90.2742, -23.4245, 0.74 ) }
    dend_10 { pt3dadd( 23.0844, 91.0781, -23.5277, 0.74 ) }
    dend_10 { pt3dadd( 23.627, 92.1945, -23.7035, 0.88 ) }
    dend_10 { pt3dadd( 24.1004, 93.0723, -23.8377, 1.11 ) }
    dend_10 { pt3dadd( 24.5541, 93.8763, -23.9802, 1.11 ) }
    dend_10 { pt3dadd( 24.9551, 94.5751, -24.0974, 0.96 ) }
    dend_10 { pt3dadd( 25.4956, 95.5183, -24.216, 1.18 ) }
    dend_10 { pt3dadd( 26.0526, 96.5302, -24.2663, 0.96 ) }
    dend_10 { pt3dadd( 26.4591, 97.3574, -24.2332, 0.81 ) }
    dend_10 { pt3dadd( 27.0604, 98.7143, -24.0558, 0.88 ) }
    dend_10 { pt3dadd( 27.4527, 99.6244, -23.838, 0.88 ) }
    dend_10 { pt3dadd( 27.7948, 100.456, -23.5543, 1.03 ) }
    dend_10 { pt3dadd( 28.0965, 101.218, -23.2458, 1.11 ) }
    dend_10 { pt3dadd( 28.3763, 101.985, -22.9173, 0.88 ) }
    dend_10 { pt3dadd( 28.6891, 102.85, -22.5578, 0.66 ) }
    dend_10 { pt3dadd( 28.9387, 103.523, -22.2731, 0.66 ) }
    dend_10 { pt3dadd( 29.268, 104.403, -21.9844, 0.66 ) }
    dend_10 { pt3dadd( 29.8387, 105.983, -21.5937, 0.96 ) }
    dend_10 { pt3dadd( 30.1501, 106.974, -21.4413, 1.4 ) }
    dend_10 { pt3dadd( 30.3555, 107.747, -21.3737, 1.55 ) }
    dend_10 { pt3dadd( 30.4777, 108.339, -21.3336, 1.84 ) }
    dend_10 { pt3dadd( 30.6437, 109.232, -21.2572, 1.92 ) }
    dend_10 { pt3dadd( 30.799, 109.979, -21.1555, 1.77 ) }
    dend_10 { pt3dadd( 31.0704, 111.129, -20.9116, 1.25 ) }
    dend_10 { pt3dadd( 31.3456, 112.121, -20.613, 1.18 ) }
    dend_10 { pt3dadd( 31.6502, 113.044, -20.2732, 1.11 ) }
    dend_10 { pt3dadd( 31.9893, 113.941, -19.8801, 1.25 ) }
    dend_10 { pt3dadd( 32.388, 114.871, -19.4106, 1.33 ) }
    dend_10 { pt3dadd( 32.6252, 115.364, -19.1544, 1.33 ) }
    dend_10 { pt3dadd( 33.05, 116.166, -18.735, 1.25 ) }
    dend_10 { pt3dadd( 33.4443, 116.904, -18.4137, 0.74 ) }
    dend_10 { pt3dadd( 33.9082, 117.797, -18.1433, 0.52 ) }
    dend_10 { pt3dadd( 34.2463, 118.497, -18.0257, 0.52 ) }
    dend_10 { pt3dadd( 34.6204, 119.317, -17.9406, 0.81 ) }
    dend_10 { pt3dadd( 35.1238, 120.469, -17.8994, 1.4 ) }
    dend_10 { pt3dadd( 35.5481, 121.462, -17.9515, 1.69 ) }
    dend_10 { pt3dadd( 35.8461, 122.175, -18.0369, 1.84 ) }
    dend_10 { pt3dadd( 36.1138, 122.775, -18.1835, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.12348, 32.3491, -7.39344, 1.4 ) }
    dend_1 { pt3dadd( -0.585457, 32.8852, -7.02023, 1.4 ) }
    dend_1 { pt3dadd( -1.12718, 33.2665, -6.70554, 0.96 ) }
    dend_1 { pt3dadd( -1.60838, 33.6223, -6.43113, 1.25 ) }
    dend_1 { pt3dadd( -2.01512, 33.953, -6.20939, 1.4 ) }
    dend_1 { pt3dadd( -2.3281, 34.232, -6.04615, 1.47 ) }
    dend_1 { pt3dadd( -3.24683, 35.1239, -5.58992, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -3.70253, 35.5958, -5.35871, 1.11 ) }
    dend_1 { pt3dadd( -4.20773, 36.2163, -5.10999, 1.11 ) }
    dend_1 { pt3dadd( -4.66698, 36.8851, -4.90213, 1.03 ) }
    dend_1 { pt3dadd( -5.01433, 37.4319, -4.77769, 1.03 ) }
    dend_1 { pt3dadd( -5.4683, 38.1626, -4.68078, 1.03 ) }
    dend_1 { pt3dadd( -5.78814, 38.6431, -4.66741, 1.18 ) }
    dend_1 { pt3dadd( -6.33294, 39.328, -4.68195, 1.18 ) }
    dend_1 { pt3dadd( -7.10925, 40.0391, -4.75909, 0.81 ) }
    dend_1 { pt3dadd( -7.64732, 40.3679, -4.83781, 0.88 ) }
    dend_1 { pt3dadd( -8.27385, 40.6231, -4.94744, 1.11 ) }
    dend_1 { pt3dadd( -9.05056, 40.8523, -5.0908, 0.96 ) }
    dend_1 { pt3dadd( -9.566, 40.9799, -5.18373, 0.96 ) }
    dend_1 { pt3dadd( -10.3032, 41.1556, -5.30656, 0.88 ) }
    dend_1 { pt3dadd( -10.9531, 41.3475, -5.3975, 0.81 ) }
    dend_1 { pt3dadd( -11.7901, 41.6953, -5.46296, 1.11 ) }
    dend_1 { pt3dadd( -12.173, 41.8976, -5.47619, 1.25 ) }
    dend_1 { pt3dadd( -12.5458, 42.1349, -5.48514, 1.25 ) }
    dend_1 { pt3dadd( -13.0804, 42.5143, -5.48619, 0.88 ) }
    dend_1 { pt3dadd( -13.5692, 42.8902, -5.47424, 0.88 ) }
    dend_1 { pt3dadd( -14.0243, 43.2587, -5.44413, 0.96 ) }
    dend_1 { pt3dadd( -14.553, 43.7021, -5.38014, 0.96 ) }
    dend_1 { pt3dadd( -14.9713, 44.0532, -5.31631, 1.03 ) }
    dend_1 { pt3dadd( -15.4217, 44.4279, -5.23355, 1.25 ) }
    dend_1 { pt3dadd( -15.8892, 44.8127, -5.12519, 1.25 ) }
    dend_1 { pt3dadd( -16.1927, 45.0623, -5.04541, 1.11 ) }
    dend_1 { pt3dadd( -16.563, 45.3641, -4.93104, 1.25 ) }
    dend_1 { pt3dadd( -16.9157, 45.6547, -4.79551, 1.4 ) }
    dend_1 { pt3dadd( -17.2615, 45.9447, -4.64642, 1.4 ) }
    dend_1 { pt3dadd( -17.6879, 46.308, -4.44971, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 29/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.725085 ) }
    axon_1 { pt3dadd( -3.39577, 57.8143, -2.3154, 0.725085 ) }
    axon_1 { pt3dadd( -4.24326, 72.7904, -2.3154, 0.725085 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 32/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -40.3764, 34.4723, 38.8095, 0.88 ) }
    dend_56 { pt3dadd( -41.6896, 35.1116, 48.9745, 0.88 ) }
    dend_56 { pt3dadd( -43.7939, 34.4237, 59.0113, 0.88 ) }
    dend_56 { pt3dadd( -45.1589, 35.0388, 69.1709, 0.88 ) }
    dend_56 { pt3dadd( -46.8901, 34.7912, 79.2947, 0.88 ) }
    dend_56 { pt3dadd( -49.5331, 34.4584, 89.217, 0.88 ) }
    dend_56 { pt3dadd( -53.9452, 33.3842, 98.4386, 0.88 ) }
    dend_56 { pt3dadd( -57.1705, 31.5247, 108.038, 0.88 ) }
    dend_56 { pt3dadd( -58.6104, 30.723, 118.185, 0.88 ) }
    dend_56 { pt3dadd( -61.5571, 30.1861, 128.014, 0.88 ) }
    dend_56 { pt3dadd( -63.098, 30.318, 138.168, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 43/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -40.3764, 34.4723, 38.8095, 0.22 ) }
    dend_51 { pt3dadd( -51.6624, 42.2167, 40.0579, 0.88 ) }
    dend_51 { pt3dadd( -64.2657, 47.4172, 40.3242, 0.88 ) }
    dend_51 { pt3dadd( -75.9543, 54.1182, 42.7935, 0.88 ) }
    dend_51 { pt3dadd( -86.3163, 62.8178, 45.5117, 0.88 ) }
    dend_51 { pt3dadd( -96.4086, 71.7197, 48.6272, 0.88 ) }
    dend_51 { pt3dadd( -108.479, 78.1131, 49.413, 0.88 ) }
    dend_51 { pt3dadd( -121.114, 83.2307, 49.1983, 0.88 ) }
    dend_51 { pt3dadd( -132.909, 90.2027, 49.5378, 0.88 ) }
    dend_51 { pt3dadd( -143.835, 98.5853, 49.895, 0.88 ) }
    dend_51 { pt3dadd( -153.579, 108.431, 50.4846, 0.88 ) }
    dend_51 { pt3dadd( -163.308, 118.006, 52.8439, 0.88 ) }
    dend_51 { pt3dadd( -173.933, 126.084, 56.2196, 0.88 ) }
    dend_51 { pt3dadd( -183.253, 134.288, 62.2007, 0.88 ) }
    dend_51 { pt3dadd( -193.39, 139.666, 69.6028, 0.88 ) }
    dend_51 { pt3dadd( -203.712, 142.393, 78.0036, 0.88 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -81.0239, 252.311, -30.8342, 0.66 ) }
    dend_49 { pt3dadd( -83.0886, 253.716, -32.3753, 0.66 ) }
    dend_49 { pt3dadd( -83.7306, 254.117, -32.8429, 0.66 ) }
    dend_49 { pt3dadd( -84.3361, 254.48, -33.2646, 0.74 ) }
    dend_49 { pt3dadd( -84.9065, 254.813, -33.6424, 0.88 ) }
    dend_49 { pt3dadd( -85.361, 255.077, -33.9204, 0.88 ) }
    dend_49 { pt3dadd( -86.0363, 255.476, -34.2993, 0.74 ) }
    dend_49 { pt3dadd( -86.6231, 255.838, -34.5388, 0.52 ) }
    dend_49 { pt3dadd( -87.1303, 256.164, -34.7638, 0.96 ) }
    dend_49 { pt3dadd( -87.595, 256.473, -34.9715, 0.96 ) }
    dend_49 { pt3dadd( -88.3645, 256.984, -35.2962, 0.37 ) }
    dend_49 { pt3dadd( -89.021, 257.416, -35.5497, 0.37 ) }
    dend_49 { pt3dadd( -89.7527, 257.887, -35.7916, 0.66 ) }
    dend_49 { pt3dadd( -90.293, 258.226, -35.9505, 0.81 ) }
    dend_49 { pt3dadd( -90.9403, 258.626, -36.1269, 0.81 ) }
    dend_49 { pt3dadd( -91.485, 258.965, -36.2611, 0.66 ) }
    dend_49 { pt3dadd( -92.0344, 259.286, -36.3953, 0.66 ) }
    dend_49 { pt3dadd( -92.4646, 259.517, -36.4952, 0.66 ) }
    dend_49 { pt3dadd( -92.9567, 259.77, -36.5942, 0.37 ) }
    dend_49 { pt3dadd( -93.3779, 260.007, -36.6843, 0.37 ) }
    dend_49 { pt3dadd( -94.1146, 260.484, -36.8688, 0.74 ) }
    dend_49 { pt3dadd( -94.5358, 260.798, -36.9623, 0.74 ) }
    dend_49 { pt3dadd( -95.1865, 261.327, -37.0897, 0.29 ) }
    dend_49 { pt3dadd( -95.7043, 261.764, -37.187, 0.29 ) }
    dend_49 { pt3dadd( -96.2992, 262.279, -37.3105, 0.66 ) }
    dend_49 { pt3dadd( -96.5193, 262.472, -37.3638, 0.66 ) }
    dend_49 { pt3dadd( -97.0875, 263.003, -37.5245, 0.52 ) }
    dend_49 { pt3dadd( -97.3788, 263.293, -37.6138, 0.37 ) }
    dend_49 { pt3dadd( -97.655, 263.56, -37.7101, 0.37 ) }
    dend_49 { pt3dadd( -98.0802, 263.919, -37.8613, 0.59 ) }
    dend_49 { pt3dadd( -98.5045, 264.241, -38.0173, 1.11 ) }
    dend_49 { pt3dadd( -99.0111, 264.642, -38.2081, 1.18 ) }
    dend_49 { pt3dadd( -99.4038, 264.974, -38.3662, 0.96 ) }
    dend_49 { pt3dadd( -100.067, 265.578, -38.6076, 0.74 ) }
    dend_49 { pt3dadd( -100.595, 266.086, -38.7713, 0.66 ) }
    dend_49 { pt3dadd( -101.056, 266.545, -38.885, 0.37 ) }
    dend_49 { pt3dadd( -101.586, 267.1, -38.9918, 0.37 ) }
    dend_49 { pt3dadd( -101.942, 267.52, -39.0501, 0.52 ) }
    dend_49 { pt3dadd( -102.315, 268.008, -39.1337, 0.52 ) }
    dend_49 { pt3dadd( -102.846, 268.792, -39.2585, 0.66 ) }
    dend_49 { pt3dadd( -103.209, 269.375, -39.3324, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -103.588, 269.985, -39.3775, 0.81 ) }
    dend_49 { pt3dadd( -104.235, 270.974, -39.3996, 0.59 ) }
    dend_49 { pt3dadd( -104.683, 271.65, -39.3742, 0.52 ) }
    dend_49 { pt3dadd( -105.021, 272.184, -39.3222, 0.52 ) }
    dend_49 { pt3dadd( -105.47, 272.969, -39.2022, 0.44 ) }
    dend_49 { pt3dadd( -105.763, 273.521, -39.1091, 0.44 ) }
    dend_49 { pt3dadd( -106.026, 274.038, -39.0164, 0.44 ) }
    dend_49 { pt3dadd( -106.251, 274.441, -38.9568, 0.44 ) }
    dend_49 { pt3dadd( -106.48, 274.797, -38.937, 0.44 ) }
    dend_49 { pt3dadd( -106.793, 275.21, -39.0072, 0.44 ) }
    dend_49 { pt3dadd( -107.123, 275.613, -39.1789, 0.59 ) }
    dend_49 { pt3dadd( -107.472, 276.042, -39.4705, 0.66 ) }
    dend_49 { pt3dadd( -107.845, 276.551, -39.8579, 0.52 ) }
    dend_49 { pt3dadd( -108.259, 277.184, -40.3451, 0.52 ) }
    dend_49 { pt3dadd( -108.573, 277.73, -40.7514, 0.52 ) }
    dend_49 { pt3dadd( -108.92, 278.453, -41.2797, 0.59 ) }
    dend_49 { pt3dadd( -109.254, 279.281, -41.8537, 0.59 ) }
    dend_49 { pt3dadd( -109.495, 279.965, -42.3143, 0.52 ) }
    dend_49 { pt3dadd( -109.713, 280.639, -42.7423, 0.52 ) }
    dend_49 { pt3dadd( -109.854, 281.053, -43.0033, 0.52 ) }
    dend_49 { pt3dadd( -110.158, 281.715, -43.3844, 0.44 ) }
    dend_49 { pt3dadd( -110.417, 282.119, -43.5516, 0.44 ) }
    dend_49 { pt3dadd( -110.718, 282.497, -43.6678, 0.44 ) }
    dend_49 { pt3dadd( -111.291, 283.089, -43.8388, 0.44 ) }
    dend_49 { pt3dadd( -111.862, 283.614, -43.969, 0.44 ) }
    dend_49 { pt3dadd( -112.472, 284.17, -44.0786, 0.44 ) }
    dend_49 { pt3dadd( -113.046, 284.748, -44.1612, 0.52 ) }
    dend_49 { pt3dadd( -113.456, 285.257, -44.2279, 0.66 ) }
    dend_49 { pt3dadd( -113.804, 285.792, -44.3129, 0.37 ) }
    dend_49 { pt3dadd( -114.085, 286.362, -44.4144, 0.29 ) }
    dend_49 { pt3dadd( -114.365, 287.122, -44.5629, 0.44 ) }
    dend_49 { pt3dadd( -114.554, 287.87, -44.7175, 0.74 ) }
    dend_49 { pt3dadd( -114.661, 288.577, -44.8621, 1.03 ) }
    dend_49 { pt3dadd( -114.675, 289.128, -44.9943, 1.03 ) }
    dend_49 { pt3dadd( -114.65, 289.714, -45.2029, 0.88 ) }
    dend_49 { pt3dadd( -114.608, 290.525, -45.5766, 0.52 ) }
    dend_49 { pt3dadd( -114.609, 291.166, -45.9469, 0.52 ) }
    dend_49 { pt3dadd( -114.635, 291.489, -46.2078, 0.37 ) }
    dend_49 { pt3dadd( -114.739, 292.359, -47.049, 0.37 ) }
    dend_49 { pt3dadd( -114.828, 293.252, -48.0511, 0.37 ) }
    dend_49 { pt3dadd( -114.84, 293.647, -48.5428, 0.37 ) }
    dend_49 { pt3dadd( -114.85, 294.073, -49.0874, 0.37 ) }
    dend_49 { pt3dadd( -114.912, 295.009, -50.2251, 0.37 ) }
    dend_49 { pt3dadd( -114.97, 295.438, -50.6974, 0.29 ) }
    dend_49 { pt3dadd( -115.1, 296.08, -51.3178, 0.29 ) }
    dend_49 { pt3dadd( -115.231, 296.718, -51.8915, 0.29 ) }
    dend_49 { pt3dadd( -115.399, 297.363, -52.4526, 0.37 ) }
    dend_49 { pt3dadd( -115.555, 297.827, -52.8665, 0.37 ) }
    dend_49 { pt3dadd( -115.818, 298.402, -53.4084, 0.37 ) }
    dend_49 { pt3dadd( -116.121, 299.027, -54.0823, 0.44 ) }
    dend_49 { pt3dadd( -116.276, 299.367, -54.4804, 0.59 ) }
    dend_49 { pt3dadd( -116.428, 299.779, -55.0408, 0.59 ) }
    dend_49 { pt3dadd( -116.637, 300.543, -56.1627, 0.74 ) }
    dend_49 { pt3dadd( -116.773, 301.117, -57.0052, 0.88 ) }
    dend_49 { pt3dadd( -116.938, 301.81, -58.0234, 0.81 ) }
    dend_49 { pt3dadd( -117.106, 302.408, -58.9061, 1.03 ) }
    dend_49 { pt3dadd( -117.531, 303.651, -60.7842, 0.74 ) }
    dend_49 { pt3dadd( -117.83, 304.304, -61.7547, 0.66 ) }
    dend_49 { pt3dadd( -118.022, 304.623, -62.2764, 0.74 ) }
    dend_49 { pt3dadd( -118.341, 305.026, -63.0096, 0.74 ) }
    dend_49 { pt3dadd( -118.663, 305.317, -63.6592, 0.59 ) }
    dend_49 { pt3dadd( -119.062, 305.568, -64.4006, 0.44 ) }
    dend_49 { pt3dadd( -119.757, 305.794, -65.6117, 0.29 ) }
    dend_49 { pt3dadd( -120.949, 305.969, -67.7197, 0.74 ) }
    dend_49 { pt3dadd( -121.222, 305.981, -68.2238, 1.25 ) }
    dend_49 { pt3dadd( -121.847, 305.976, -69.4058, 1.77 ) }
    dend_49 { pt3dadd( -122.34, 305.967, -70.3303, 1.92 ) }
    dend_49 { pt3dadd( -122.989, 305.933, -71.517, 0.74 ) }
    dend_49 { pt3dadd( -123.404, 305.896, -72.2342, 0.52 ) }
    dend_49 { pt3dadd( -124.068, 305.841, -73.2052, 0.52 ) }
    dend_49 { pt3dadd( -124.557, 305.774, -73.8938, 0.66 ) }
    dend_49 { pt3dadd( -125.173, 305.682, -74.6633, 0.52 ) }
    dend_49 { pt3dadd( -126.006, 305.578, -75.5865, 0.52 ) }
    dend_49 { pt3dadd( -126.771, 305.516, -76.3627, 0.52 ) }
    dend_49 { pt3dadd( -127.619, 305.465, -77.2095, 0.66 ) }
    dend_49 { pt3dadd( -128.225, 305.459, -77.7856, 0.66 ) }
    dend_49 { pt3dadd( -128.721, 305.499, -78.3123, 0.81 ) }
    dend_49 { pt3dadd( -129.182, 305.594, -78.86, 0.59 ) }
    dend_49 { pt3dadd( -129.517, 305.673, -79.4228, 0.59 ) }
    dend_49 { pt3dadd( -130.254, 305.823, -81.0899, 0.81 ) }
    dend_49 { pt3dadd( -130.606, 305.843, -82.1574, 0.74 ) }
    dend_49 { pt3dadd( -131.072, 305.691, -84.2808, 0.88 ) }
    dend_49 { pt3dadd( -131.232, 305.402, -85.795, 1.11 ) }
    dend_49 { pt3dadd( -131.25, 304.349, -89.2231, 0.74 ) }
    dend_49 { pt3dadd( -131.153, 304.026, -89.9092, 0.88 ) }
    dend_49 { pt3dadd( -130.77, 303.315, -90.7517, 0.96 ) }
    dend_49 { pt3dadd( -130.251, 302.544, -91.2148, 0.74 ) }
    dend_49 { pt3dadd( -129.236, 301.173, -91.4273, 0.66 ) }
    dend_49 { pt3dadd( -127.504, 298.971, -91.3117, 0.29 ) }
    dend_49 { pt3dadd( -126.777, 298.081, -91.0007, 0.29 ) }
    dend_49 { pt3dadd( -125.932, 297.071, -90.5315, 0.29 ) }
    dend_49 { pt3dadd( -125.407, 296.452, -90.1503, 0.66 ) }
    dend_49 { pt3dadd( -125.085, 296.07, -89.8503, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -81.0239, 252.311, -30.8342, 0.29 ) }
    dend_48 { pt3dadd( -81.9058, 253.437, -30.4432, 0.29 ) }
    dend_48 { pt3dadd( -82.3789, 254.057, -30.2489, 0.37 ) }
    dend_48 { pt3dadd( -82.9149, 254.758, -30.0123, 0.52 ) }
    dend_48 { pt3dadd( -83.2752, 255.205, -29.8605, 0.66 ) }
    dend_48 { pt3dadd( -83.9285, 255.938, -29.609, 0.81 ) }
    dend_48 { pt3dadd( -84.6277, 256.659, -29.3692, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -85.2544, 257.26, -29.1669, 0.74 ) }
    dend_48 { pt3dadd( -86.4098, 258.28, -28.8719, 0.29 ) }
    dend_48 { pt3dadd( -86.9279, 258.701, -28.7757, 0.29 ) }
    dend_48 { pt3dadd( -87.5979, 259.232, -28.6644, 0.37 ) }
    dend_48 { pt3dadd( -88.301, 259.804, -28.5692, 0.37 ) }
    dend_48 { pt3dadd( -89.1894, 260.593, -28.4466, 0.44 ) }
    dend_48 { pt3dadd( -89.5947, 261.031, -28.3983, 0.66 ) }
    dend_48 { pt3dadd( -90.0946, 261.709, -28.3657, 0.81 ) }
    dend_48 { pt3dadd( -90.5699, 262.448, -28.3414, 0.81 ) }
    dend_48 { pt3dadd( -90.991, 263.101, -28.328, 0.52 ) }
    dend_48 { pt3dadd( -91.5048, 263.891, -28.3245, 0.52 ) }
    dend_48 { pt3dadd( -92.0921, 264.857, -28.3412, 0.52 ) }
    dend_48 { pt3dadd( -92.6699, 265.895, -28.3806, 0.44 ) }
    dend_48 { pt3dadd( -93.1886, 266.92, -28.4647, 0.37 ) }
    dend_48 { pt3dadd( -93.8128, 268.213, -28.6151, 0.29 ) }
    dend_48 { pt3dadd( -94.2869, 269.222, -28.7441, 0.44 ) }
    dend_48 { pt3dadd( -94.7747, 270.313, -28.905, 0.52 ) }
    dend_48 { pt3dadd( -95.1369, 271.177, -29.0503, 0.37 ) }
    dend_48 { pt3dadd( -95.4744, 272.051, -29.2072, 0.37 ) }
    dend_48 { pt3dadd( -95.7504, 272.772, -29.3384, 0.59 ) }
    dend_48 { pt3dadd( -95.9957, 273.476, -29.465, 0.59 ) }
    dend_48 { pt3dadd( -96.2952, 274.268, -29.6076, 0.59 ) }
    dend_48 { pt3dadd( -96.7264, 275.299, -29.7973, 0.37 ) }
    dend_48 { pt3dadd( -97.2685, 276.544, -30.0266, 0.29 ) }
    dend_48 { pt3dadd( -97.699, 277.68, -30.2198, 0.29 ) }
    dend_48 { pt3dadd( -98.0586, 278.842, -30.4168, 0.29 ) }
    dend_48 { pt3dadd( -98.1947, 279.428, -30.5228, 0.29 ) }
    dend_48 { pt3dadd( -98.3431, 280.304, -30.6917, 0.44 ) }
    dend_48 { pt3dadd( -98.4159, 280.934, -30.8266, 0.44 ) }
    dend_48 { pt3dadd( -98.5289, 282.116, -31.1232, 0.59 ) }
    dend_48 { pt3dadd( -98.5994, 282.757, -31.317, 0.74 ) }
    dend_48 { pt3dadd( -98.6934, 283.458, -31.5574, 0.74 ) }
    dend_48 { pt3dadd( -98.7548, 284.103, -31.7914, 0.59 ) }
    dend_48 { pt3dadd( -98.8036, 285.257, -32.2098, 0.88 ) }
    dend_48 { pt3dadd( -98.8269, 286.174, -32.534, 1.18 ) }
    dend_48 { pt3dadd( -98.8976, 287.388, -32.9557, 0.37 ) }
    dend_48 { pt3dadd( -98.947, 287.858, -33.1181, 0.37 ) }
    dend_48 { pt3dadd( -99.0854, 288.906, -33.4761, 0.37 ) }
    dend_48 { pt3dadd( -99.2046, 290.065, -33.8713, 0.29 ) }
    dend_48 { pt3dadd( -99.2553, 291.138, -34.2465, 0.37 ) }
    dend_48 { pt3dadd( -99.2381, 292.203, -34.612, 0.29 ) }
    dend_48 { pt3dadd( -99.1471, 293.298, -35.0361, 0.29 ) }
    dend_48 { pt3dadd( -99.0868, 293.667, -35.2164, 0.29 ) }
    dend_48 { pt3dadd( -98.7935, 294.649, -35.8139, 0.59 ) }
    dend_48 { pt3dadd( -98.4595, 295.337, -36.2817, 0.74 ) }
    dend_48 { pt3dadd( -98.155, 295.813, -36.628, 0.74 ) }
    dend_48 { pt3dadd( -97.5918, 296.568, -37.1881, 0.66 ) }
    dend_48 { pt3dadd( -96.8969, 297.397, -37.8316, 0.44 ) }
    dend_48 { pt3dadd( -96.442, 297.938, -38.2375, 0.44 ) }
    dend_48 { pt3dadd( -95.7319, 298.721, -38.8203, 0.88 ) }
    dend_48 { pt3dadd( -95.3994, 299.032, -39.0494, 1.33 ) }
    dend_48 { pt3dadd( -94.9744, 299.374, -39.3396, 1.69 ) }
    dend_48 { pt3dadd( -94.2293, 299.932, -39.8352, 1.84 ) }
    dend_48 { pt3dadd( -93.0364, 300.864, -40.6557, 0.29 ) }
    dend_48 { pt3dadd( -92.3609, 301.496, -41.1768, 0.29 ) }
    dend_48 { pt3dadd( -91.7304, 302.251, -41.7422, 0.29 ) }
    dend_48 { pt3dadd( -90.8083, 303.646, -42.6456, 0.59 ) }
    dend_48 { pt3dadd( -90.4736, 304.31, -43.0353, 0.59 ) }
    dend_48 { pt3dadd( -90.0673, 305.489, -43.669, 0.44 ) }
    dend_48 { pt3dadd( -89.8046, 306.896, -44.3801, 0.59 ) }
    dend_48 { pt3dadd( -89.7324, 307.77, -44.7717, 0.44 ) }
    dend_48 { pt3dadd( -89.7082, 308.512, -45.0504, 0.29 ) }
    dend_48 { pt3dadd( -89.6718, 309.485, -45.3646, 0.29 ) }
    dend_48 { pt3dadd( -89.6513, 310.024, -45.5772, 0.29 ) }
    dend_48 { pt3dadd( -89.6288, 310.93, -45.9465, 0.52 ) }
    dend_48 { pt3dadd( -89.6109, 311.507, -46.1964, 0.52 ) }
    dend_48 { pt3dadd( -89.596, 312.247, -46.5064, 0.37 ) }
    dend_48 { pt3dadd( -89.5778, 313.42, -46.9777, 0.44 ) }
    dend_48 { pt3dadd( -89.5093, 314.555, -47.4202, 0.44 ) }
    dend_48 { pt3dadd( -89.3676, 315.545, -47.8139, 0.74 ) }
    dend_48 { pt3dadd( -89.1419, 316.678, -48.259, 0.81 ) }
    dend_48 { pt3dadd( -88.8287, 318.342, -48.8647, 0.29 ) }
    dend_48 { pt3dadd( -88.763, 318.832, -49.0257, 0.29 ) }
    dend_48 { pt3dadd( -88.7028, 319.495, -49.2318, 0.29 ) }
    dend_48 { pt3dadd( -88.614, 320.329, -49.4917, 0.29 ) }
    dend_48 { pt3dadd( -88.4795, 321.35, -49.8576, 0.37 ) }
    dend_48 { pt3dadd( -88.307, 322.309, -50.1847, 0.44 ) }
    dend_48 { pt3dadd( -88.0049, 323.274, -50.5586, 0.44 ) }
    dend_48 { pt3dadd( -87.6046, 324.264, -51.0043, 0.44 ) }
    dend_48 { pt3dadd( -87.2654, 325.092, -51.348, 0.44 ) }
    dend_48 { pt3dadd( -87.0548, 325.611, -51.5473, 0.66 ) }
    dend_48 { pt3dadd( -86.807, 326.168, -51.7602, 0.66 ) }
    dend_48 { pt3dadd( -86.4102, 327.007, -52.1254, 0.44 ) }
    dend_48 { pt3dadd( -86.0107, 327.813, -52.7957, 0.29 ) }
    dend_48 { pt3dadd( -85.7744, 328.447, -53.8116, 0.29 ) }
    dend_48 { pt3dadd( -85.7031, 328.882, -54.6562, 0.44 ) }
    dend_48 { pt3dadd( -85.7048, 329.284, -55.5268, 0.59 ) }
    dend_48 { pt3dadd( -85.7269, 329.752, -56.5358, 0.74 ) }
    dend_48 { pt3dadd( -85.7777, 331.031, -59.2797, 0.74 ) }
    dend_48 { pt3dadd( -85.7166, 332.111, -61.7019, 0.37 ) }
    dend_48 { pt3dadd( -85.6614, 332.606, -62.9036, 0.29 ) }
    dend_48 { pt3dadd( -85.5801, 333.086, -64.138, 0.59 ) }
    dend_48 { pt3dadd( -85.4882, 333.581, -65.395, 0.52 ) }
    dend_48 { pt3dadd( -85.4351, 333.969, -66.2254, 0.52 ) }
    dend_48 { pt3dadd( -85.3501, 334.812, -67.3962, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_18 (entry count 95/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -5.66367, -44.3388, 4.91754, 0.52 ) }
    dend_38 { pt3dadd( -7.95485, -45.4801, 6.15967, 0.52 ) }
    dend_38 { pt3dadd( -8.42473, -45.788, 6.43577, 0.44 ) }
    dend_38 { pt3dadd( -8.82927, -46.1116, 6.69459, 0.66 ) }
    dend_38 { pt3dadd( -9.36416, -46.614, 7.05734, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -10.2246, -47.5688, 7.65688, 0.66 ) }
    dend_38 { pt3dadd( -10.5687, -48.0223, 7.90906, 0.81 ) }
    dend_38 { pt3dadd( -11.0435, -49.0247, 8.25805, 0.74 ) }
    dend_38 { pt3dadd( -11.1858, -49.5184, 8.38336, 0.88 ) }
    dend_38 { pt3dadd( -11.3356, -50.4922, 8.718, 0.66 ) }
    dend_38 { pt3dadd( -11.4078, -51.348, 9.09902, 0.66 ) }
    dend_38 { pt3dadd( -11.4507, -52.0287, 9.48632, 0.81 ) }
    dend_38 { pt3dadd( -11.5764, -52.8527, 10.0744, 0.81 ) }
    dend_38 { pt3dadd( -11.8266, -53.7429, 10.8219, 0.88 ) }
    dend_38 { pt3dadd( -12.6816, -56.0685, 12.9073, 0.96 ) }
    dend_38 { pt3dadd( -12.9779, -56.7637, 13.5475, 0.74 ) }
    dend_38 { pt3dadd( -13.2264, -57.3002, 14.0188, 0.59 ) }
    dend_38 { pt3dadd( -13.6765, -58.269, 14.7444, 0.59 ) }
    dend_38 { pt3dadd( -14.059, -59.1286, 15.2728, 0.59 ) }
    dend_38 { pt3dadd( -14.4536, -60.1522, 15.7028, 0.96 ) }
    dend_38 { pt3dadd( -14.7208, -60.9817, 15.8636, 1.11 ) }
    dend_38 { pt3dadd( -15.0313, -62.0023, 16.0356, 0.88 ) }
    dend_38 { pt3dadd( -15.356, -63.0448, 16.2292, 0.66 ) }
    dend_38 { pt3dadd( -15.4874, -63.3817, 16.3061, 0.74 ) }
    dend_38 { pt3dadd( -16.0863, -64.3414, 16.6508, 0.66 ) }
    dend_38 { pt3dadd( -16.5741, -64.9062, 16.9527, 0.74 ) }
    dend_38 { pt3dadd( -17.157, -65.4833, 17.3901, 0.81 ) }
    dend_38 { pt3dadd( -17.6636, -65.9378, 17.8455, 0.88 ) }
    dend_38 { pt3dadd( -18.2682, -66.5557, 18.5358, 0.66 ) }
    dend_38 { pt3dadd( -18.6298, -67.0383, 19.0272, 0.66 ) }
    dend_38 { pt3dadd( -19.0315, -67.7241, 19.6284, 0.59 ) }
    dend_38 { pt3dadd( -19.3842, -68.525, 20.2026, 0.66 ) }
    dend_38 { pt3dadd( -19.5615, -68.9647, 20.4521, 0.81 ) }
    dend_38 { pt3dadd( -19.9867, -69.9927, 20.921, 0.59 ) }
    dend_38 { pt3dadd( -20.3362, -70.8623, 21.28, 0.74 ) }
    dend_38 { pt3dadd( -20.6703, -71.6713, 21.5904, 0.88 ) }
    dend_38 { pt3dadd( -20.871, -72.1509, 21.7549, 0.88 ) }
    dend_38 { pt3dadd( -21.2177, -73.0793, 22.1373, 0.66 ) }
    dend_38 { pt3dadd( -21.4464, -73.7995, 22.549, 0.52 ) }
    dend_38 { pt3dadd( -21.7117, -74.804, 23.435, 0.59 ) }
    dend_38 { pt3dadd( -21.8122, -75.2708, 23.9842, 0.59 ) }
    dend_38 { pt3dadd( -21.8978, -75.7253, 24.5844, 0.66 ) }
    dend_38 { pt3dadd( -22.1294, -77.018, 26.3668, 0.66 ) }
    dend_38 { pt3dadd( -22.233, -77.6492, 27.2417, 0.96 ) }
    dend_38 { pt3dadd( -22.4507, -78.5168, 28.4245, 1.03 ) }
    dend_38 { pt3dadd( -22.7087, -79.1555, 29.2311, 0.88 ) }
    dend_38 { pt3dadd( -22.9621, -79.6473, 29.7643, 0.59 ) }
    dend_38 { pt3dadd( -23.2073, -80.0442, 30.0972, 0.74 ) }
    dend_38 { pt3dadd( -23.6427, -80.6709, 30.3919, 0.59 ) }
    dend_38 { pt3dadd( -24.1496, -81.3364, 30.5655, 0.74 ) }
    dend_38 { pt3dadd( -24.7368, -82.051, 30.6283, 0.88 ) }
    dend_38 { pt3dadd( -25.2862, -82.6905, 30.6275, 0.88 ) }
    dend_38 { pt3dadd( -25.8799, -83.3495, 30.6224, 0.59 ) }
    dend_38 { pt3dadd( -26.455, -83.9638, 30.6359, 0.37 ) }
    dend_38 { pt3dadd( -26.6843, -84.196, 30.6552, 0.37 ) }
    dend_38 { pt3dadd( -27.1505, -84.6668, 30.7725, 0.44 ) }
    dend_38 { pt3dadd( -27.6542, -85.1681, 30.9628, 0.59 ) }
    dend_38 { pt3dadd( -28.1351, -85.634, 31.2103, 0.59 ) }
    dend_38 { pt3dadd( -28.7135, -86.1946, 31.5539, 0.74 ) }
    dend_38 { pt3dadd( -29.2611, -86.6921, 31.8906, 0.66 ) }
    dend_38 { pt3dadd( -30.299, -87.5878, 32.4934, 0.66 ) }
    dend_38 { pt3dadd( -30.9219, -88.1106, 32.8305, 0.59 ) }
    dend_38 { pt3dadd( -31.8324, -88.9102, 33.2921, 0.81 ) }
    dend_38 { pt3dadd( -32.3518, -89.3947, 33.5422, 0.96 ) }
    dend_38 { pt3dadd( -33.0187, -90.0314, 33.8421, 0.74 ) }
    dend_38 { pt3dadd( -33.7504, -90.7329, 34.1366, 0.52 ) }
    dend_38 { pt3dadd( -35.004, -91.9817, 34.5985, 0.59 ) }
    dend_38 { pt3dadd( -35.6749, -92.7007, 34.8386, 0.66 ) }
    dend_38 { pt3dadd( -36.1102, -93.2045, 34.9771, 0.66 ) }
    dend_38 { pt3dadd( -36.7389, -93.9733, 35.1602, 0.44 ) }
    dend_38 { pt3dadd( -37.1918, -94.5582, 35.2917, 0.44 ) }
    dend_38 { pt3dadd( -37.7938, -95.3352, 35.4664, 0.37 ) }
    dend_38 { pt3dadd( -38.5132, -96.2734, 35.6384, 0.29 ) }
    dend_38 { pt3dadd( -38.8235, -96.6891, 35.7043, 0.29 ) }
    dend_38 { pt3dadd( -39.4752, -97.7312, 35.8179, 0.29 ) }
    dend_38 { pt3dadd( -43.9223, -105.414, 42.5764, 0.29 ) }
    dend_38 { pt3dadd( -47.7281, -113.28, 49.5331, 0.29 ) }
    dend_38 { pt3dadd( -52.8808, -121.09, 55.6234, 0.29 ) }
    dend_38 { pt3dadd( -57.168, -129.879, 61.1487, 0.29 ) }
    dend_38 { pt3dadd( -63.3339, -138.228, 65.352, 0.29 ) }
    dend_38 { pt3dadd( -70.5984, -145.655, 69.3638, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -5.66367, -44.3388, 4.91754, 2.21 ) }
    dend_19 { pt3dadd( -5.45487, -45.3069, 4.92835, 2.21 ) }
    dend_19 { pt3dadd( -5.33304, -45.9177, 4.9272, 2.21 ) }
    dend_19 { pt3dadd( -5.14528, -46.859, 4.92542, 2.21 ) }
    dend_19 { pt3dadd( -4.99111, -47.6319, 4.92396, 2.28 ) }
    dend_19 { pt3dadd( -4.86855, -48.2464, 4.9228, 2.28 ) }
    dend_19 { pt3dadd( -4.69197, -49.1316, 4.92112, 2.5 ) }
    dend_19 { pt3dadd( -4.55904, -49.7354, 4.87191, 2.58 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 84/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 36.1138, 122.775, -18.1835, 1.25 ) }
    dend_12 { pt3dadd( 36.8399, 123.405, -18.2531, 1.25 ) }
    dend_12 { pt3dadd( 38.3099, 124.492, -18.2595, 0.81 ) }
    dend_12 { pt3dadd( 39.2001, 125.085, -18.2176, 0.96 ) }
    dend_12 { pt3dadd( 40.0152, 125.585, -18.0651, 0.74 ) }
    dend_12 { pt3dadd( 41.3312, 126.353, -17.7122, 0.59 ) }
    dend_12 { pt3dadd( 42.522, 127.032, -17.3394, 0.52 ) }
    dend_12 { pt3dadd( 43.0274, 127.287, -17.1407, 0.66 ) }
    dend_12 { pt3dadd( 43.7622, 127.628, -16.8061, 0.44 ) }
    dend_12 { pt3dadd( 45.3647, 128.355, -16.0769, 0.66 ) }
    dend_12 { pt3dadd( 46.1064, 128.715, -15.7763, 0.52 ) }
    dend_12 { pt3dadd( 46.82, 129.112, -15.5621, 0.52 ) }
    dend_12 { pt3dadd( 47.8163, 129.732, -15.3373, 0.88 ) }
    dend_12 { pt3dadd( 48.7014, 130.322, -15.2227, 1.25 ) }
    dend_12 { pt3dadd( 49.0647, 130.583, -15.2104, 1.62 ) }
    dend_12 { pt3dadd( 50.1832, 131.423, -15.2821, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 51.1082, 132.125, -15.357, 1.33 ) }
    dend_12 { pt3dadd( 52.2125, 132.941, -15.4218, 0.88 ) }
    dend_12 { pt3dadd( 53.045, 133.567, -15.4699, 0.74 ) }
    dend_12 { pt3dadd( 53.6706, 134.034, -15.493, 0.59 ) }
    dend_12 { pt3dadd( 54.152, 134.387, -15.499, 0.59 ) }
    dend_12 { pt3dadd( 55.2312, 135.134, -15.4428, 1.18 ) }
    dend_12 { pt3dadd( 56.1994, 135.761, -15.3884, 1.77 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 36.1138, 122.775, -18.1835, 0.37 ) }
    dend_11 { pt3dadd( 37.2186, 123.897, -13.4798, 0.37 ) }
    dend_11 { pt3dadd( 37.4032, 124.318, -12.2076, 0.37 ) }
    dend_11 { pt3dadd( 37.4073, 124.577, -11.6251, 0.37 ) }
    dend_11 { pt3dadd( 37.3267, 124.977, -10.9181, 0.66 ) }
    dend_11 { pt3dadd( 37.2229, 125.365, -10.3625, 0.66 ) }
    dend_11 { pt3dadd( 37.0782, 125.964, -9.61607, 0.66 ) }
    dend_11 { pt3dadd( 36.8242, 126.671, -9.15365, 0.52 ) }
    dend_11 { pt3dadd( 36.5903, 127.504, -8.65245, 0.52 ) }
    dend_11 { pt3dadd( 36.5003, 128.039, -8.33431, 0.52 ) }
    dend_11 { pt3dadd( 36.5654, 128.949, -7.75975, 0.66 ) }
    dend_11 { pt3dadd( 36.7739, 129.532, -7.36743, 1.18 ) }
    dend_11 { pt3dadd( 37.0051, 129.922, -7.06917, 1.18 ) }
    dend_11 { pt3dadd( 37.4418, 130.538, -6.57324, 0.66 ) }
    dend_11 { pt3dadd( 37.8363, 131.092, -6.13764, 0.52 ) }
    dend_11 { pt3dadd( 38.403, 131.973, -5.48885, 0.52 ) }
    dend_11 { pt3dadd( 38.7387, 132.594, -5.05943, 1.11 ) }
    dend_11 { pt3dadd( 39.1228, 133.551, -4.44749, 0.96 ) }
    dend_11 { pt3dadd( 39.3123, 134.254, -4.02994, 0.88 ) }
    dend_11 { pt3dadd( 39.4587, 135.237, -3.49354, 0.37 ) }
    dend_11 { pt3dadd( 39.5292, 136.577, -2.82869, 0.29 ) }
    dend_11 { pt3dadd( 39.5144, 137.283, -2.49622, 0.29 ) }
    dend_11 { pt3dadd( 39.425, 138.233, -2.04453, 0.59 ) }
    dend_11 { pt3dadd( 39.2698, 139.233, -1.58372, 0.74 ) }
    dend_11 { pt3dadd( 39.083, 140.077, -1.19719, 0.88 ) }
    dend_11 { pt3dadd( 38.8934, 140.769, -0.88006, 1.03 ) }
    dend_11 { pt3dadd( 38.6015, 141.687, -0.470454, 1.11 ) }
    dend_11 { pt3dadd( 38.3358, 142.484, -0.149411, 0.88 ) }
    dend_11 { pt3dadd( 38.1048, 143.168, 0.0937686, 0.52 ) }
    dend_11 { pt3dadd( 37.7734, 144.138, 0.415318, 0.88 ) }
    dend_11 { pt3dadd( 37.6175, 144.587, 0.559542, 0.74 ) }
    dend_11 { pt3dadd( 37.3272, 145.43, 0.815948, 0.52 ) }
    dend_11 { pt3dadd( 37.0154, 146.327, 1.1048, 0.52 ) }
    dend_11 { pt3dadd( 36.7193, 147.183, 1.42337, 0.74 ) }
    dend_11 { pt3dadd( 36.4398, 147.953, 1.74034, 0.88 ) }
    dend_11 { pt3dadd( 36.1843, 148.616, 2.01108, 0.88 ) }
    dend_11 { pt3dadd( 35.9032, 149.283, 2.26236, 1.03 ) }
    dend_11 { pt3dadd( 35.5383, 150.076, 2.50273, 0.81 ) }
    dend_11 { pt3dadd( 35.1064, 150.937, 2.73293, 0.59 ) }
    dend_11 { pt3dadd( 34.8243, 151.453, 2.86384, 0.52 ) }
    dend_11 { pt3dadd( 34.3705, 152.27, 3.08941, 0.52 ) }
    dend_11 { pt3dadd( 34.1218, 152.753, 3.24575, 0.52 ) }
    dend_11 { pt3dadd( 33.7629, 153.576, 3.53741, 0.52 ) }
    dend_11 { pt3dadd( 33.3527, 154.742, 3.94619, 0.52 ) }
    dend_11 { pt3dadd( 33.0822, 155.68, 4.30037, 0.88 ) }
    dend_11 { pt3dadd( 32.8378, 156.678, 4.71796, 0.88 ) }
    dend_11 { pt3dadd( 32.6268, 157.649, 5.1645, 0.74 ) }
    dend_11 { pt3dadd( 32.456, 158.35, 5.48519, 0.37 ) }
    dend_11 { pt3dadd( 32.245, 159.106, 5.81561, 0.37 ) }
    dend_11 { pt3dadd( 31.9587, 159.851, 6.08605, 0.52 ) }
    dend_11 { pt3dadd( 31.6768, 160.36, 6.25341, 0.52 ) }
    dend_11 { pt3dadd( 31.4473, 160.671, 6.35938, 0.37 ) }
    dend_11 { pt3dadd( 30.7327, 161.489, 6.69505, 0.52 ) }
    dend_11 { pt3dadd( 30.432, 161.82, 6.8413, 0.74 ) }
    dend_11 { pt3dadd( 29.8209, 162.553, 7.15867, 0.74 ) }
    dend_11 { pt3dadd( 29.3665, 163.221, 7.41329, 0.59 ) }
    dend_11 { pt3dadd( 29.0014, 163.895, 7.63171, 0.74 ) }
    dend_11 { pt3dadd( 28.6395, 164.713, 7.88115, 0.88 ) }
    dend_11 { pt3dadd( 28.3582, 165.418, 8.09705, 0.88 ) }
    dend_11 { pt3dadd( 28.0032, 166.247, 8.33903, 0.88 ) }
    dend_11 { pt3dadd( 27.5254, 167.199, 8.6116, 0.66 ) }
    dend_11 { pt3dadd( 27.167, 167.725, 8.78252, 0.66 ) }
    dend_11 { pt3dadd( 26.6042, 168.344, 9.01783, 0.52 ) }
    dend_11 { pt3dadd( 25.8446, 168.947, 9.32937, 0.37 ) }
    dend_11 { pt3dadd( 25.2551, 169.272, 9.65126, 0.29 ) }
    dend_11 { pt3dadd( 24.5096, 169.598, 10.165, 0.29 ) }
    dend_11 { pt3dadd( 23.8113, 169.881, 10.7086, 0.66 ) }
    dend_11 { pt3dadd( 23.5136, 170.012, 10.9584, 1.03 ) }
    dend_11 { pt3dadd( 22.9014, 170.346, 11.5122, 1.18 ) }
    dend_11 { pt3dadd( 21.5447, 171.294, 12.92, 0.59 ) }
    dend_11 { pt3dadd( 20.9057, 171.896, 13.6711, 0.44 ) }
    dend_11 { pt3dadd( 20.496, 172.422, 14.2125, 0.52 ) }
    dend_11 { pt3dadd( 20.2063, 172.923, 14.6796, 0.52 ) }
    dend_11 { pt3dadd( 19.9044, 173.564, 15.2385, 0.52 ) }
    dend_11 { pt3dadd( 19.638, 174.264, 15.7929, 0.59 ) }
    dend_11 { pt3dadd( 19.4122, 175.044, 16.3432, 0.37 ) }
    dend_11 { pt3dadd( 19.2484, 175.701, 16.8172, 0.37 ) }
    dend_11 { pt3dadd( 18.9947, 176.886, 17.6762, 0.66 ) }
    dend_11 { pt3dadd( 18.8738, 177.449, 18.0648, 0.74 ) }
    dend_11 { pt3dadd( 18.6959, 178.069, 18.4495, 0.59 ) }
    dend_11 { pt3dadd( 18.433, 178.741, 18.7988, 0.52 ) }
    dend_11 { pt3dadd( 18.0603, 179.451, 19.117, 0.44 ) }
    dend_11 { pt3dadd( 17.4977, 180.347, 19.4204, 0.44 ) }
    dend_11 { pt3dadd( 17.0604, 181.01, 19.5731, 0.59 ) }
    dend_11 { pt3dadd( 16.3969, 182.03, 19.7645, 0.59 ) }
    dend_11 { pt3dadd( 15.9646, 182.714, 19.8961, 0.74 ) }
    dend_11 { pt3dadd( 15.5602, 183.362, 20.0594, 0.74 ) }
    dend_11 { pt3dadd( 15.2499, 183.914, 20.299, 0.74 ) }
    dend_11 { pt3dadd( 14.8108, 184.8, 20.9631, 0.52 ) }
    dend_11 { pt3dadd( 14.6139, 185.27, 21.4211, 0.66 ) }
    dend_11 { pt3dadd( 14.427, 185.762, 22.0312, 0.81 ) }
    dend_11 { pt3dadd( 14.1302, 186.446, 23.0275, 1.03 ) }
    dend_11 { pt3dadd( 13.6699, 187.195, 24.3029, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 13.1926, 187.826, 25.4341, 0.44 ) }
    dend_11 { pt3dadd( 12.9051, 188.152, 25.9814, 0.29 ) }
    dend_11 { pt3dadd( 12.2844, 188.754, 26.9598, 0.59 ) }
    dend_11 { pt3dadd( 11.9202, 189.054, 27.4579, 0.96 ) }
    dend_11 { pt3dadd( 10.9085, 189.86, 28.7396, 0.29 ) }
    dend_11 { pt3dadd( 10.4033, 190.268, 29.3837, 0.29 ) }
    dend_11 { pt3dadd( 9.77822, 190.822, 30.182, 0.96 ) }
    dend_11 { pt3dadd( 9.1714, 191.383, 30.9384, 1.18 ) }
    dend_11 { pt3dadd( 8.19074, 192.386, 32.1429, 0.96 ) }
    dend_11 { pt3dadd( 7.78302, 192.786, 32.711, 0.59 ) }
    dend_11 { pt3dadd( 7.42523, 193.111, 33.2424, 0.29 ) }
    dend_11 { pt3dadd( 6.97506, 193.47, 33.9616, 0.29 ) }
    dend_11 { pt3dadd( 6.75503, 193.651, 34.3607, 0.29 ) }
    dend_11 { pt3dadd( 6.2567, 194.19, 35.4245, 0.44 ) }
    dend_11 { pt3dadd( 5.48934, 195.314, 37.4358, 0.44 ) }
    dend_11 { pt3dadd( 5.34139, 195.618, 37.9679, 0.59 ) }
    dend_11 { pt3dadd( 5.24522, 196.084, 38.7896, 0.59 ) }
    dend_11 { pt3dadd( 5.30331, 196.505, 39.5354, 0.52 ) }
    dend_11 { pt3dadd( 5.61053, 197.019, 40.3374, 0.29 ) }
    dend_11 { pt3dadd( 6.1714, 197.478, 40.9196, 0.29 ) }
    dend_11 { pt3dadd( 6.85438, 197.895, 41.4112, 0.29 ) }
    dend_11 { pt3dadd( 7.76755, 198.358, 41.9886, 0.44 ) }
    dend_11 { pt3dadd( 8.56303, 198.736, 42.5171, 0.44 ) }
    dend_11 { pt3dadd( 9.18396, 199.014, 43.012, 0.29 ) }
    dend_11 { pt3dadd( 9.86083, 199.327, 43.6411, 0.29 ) }
    dend_11 { pt3dadd( 10.8995, 199.919, 44.7714, 0.59 ) }
    dend_11 { pt3dadd( 11.5558, 200.403, 45.5708, 0.74 ) }
    dend_11 { pt3dadd( 12.5149, 201.336, 46.8007, 0.52 ) }
    dend_11 { pt3dadd( 13.5053, 202.539, 48.1605, 0.22 ) }
    dend_11 { pt3dadd( 13.6873, 202.804, 48.4176, 0.29 ) }
    dend_11 { pt3dadd( 14.1769, 203.712, 49.094, 0.29 ) }
    dend_11 { pt3dadd( 14.5248, 204.513, 49.5119, 0.29 ) }
    dend_11 { pt3dadd( 14.9391, 205.575, 49.9113, 0.37 ) }
    dend_11 { pt3dadd( 15.3375, 206.477, 49.9698, 0.37 ) }
    dend_11 { pt3dadd( 15.66, 207.086, 49.8908, 0.22 ) }
    dend_11 { pt3dadd( 16.6076, 208.299, 49.4906, 0.22 ) }
    dend_11 { pt3dadd( 17.1775, 208.853, 49.2235, 0.37 ) }
    dend_11 { pt3dadd( 17.8676, 209.423, 48.891, 0.15 ) }
    dend_11 { pt3dadd( 20.3574, 211.328, 47.6003, 0.15 ) }
    dend_11 { pt3dadd( 21.1569, 211.877, 47.1666, 0.15 ) }
    dend_11 { pt3dadd( 23.5639, 213.321, 45.8596, 0.15 ) }
    dend_11 { pt3dadd( 24.7493, 213.919, 45.2184, 0.15 ) }
    dend_11 { pt3dadd( 25.8938, 214.445, 44.6002, 0.22 ) }
    dend_11 { pt3dadd( 23.7815, 223.014, 51.8405, 0.22 ) }
    dend_11 { pt3dadd( 22.2755, 231.722, 59.0821, 0.22 ) }
    dend_11 { pt3dadd( 22.8561, 239.417, 67.4137, 0.22 ) }
    dend_11 { pt3dadd( 24.4438, 245.915, 76.5024, 0.22 ) }
    dend_11 { pt3dadd( 25.1796, 252.422, 85.6948, 0.22 ) }
    dend_11 { pt3dadd( 28.2141, 259.794, 93.7506, 0.22 ) }
    dend_11 { pt3dadd( 31.6648, 268.303, 100.519, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.6879, 46.308, -4.44971, 0.52 ) }
    dend_5 { pt3dadd( -18.6501, 46.9724, -3.58321, 0.52 ) }
    dend_5 { pt3dadd( -19.2735, 47.3646, -3.06384, 0.52 ) }
    dend_5 { pt3dadd( -19.8778, 47.6973, -2.64289, 0.74 ) }
    dend_5 { pt3dadd( -20.643, 48.1095, -2.16249, 0.96 ) }
    dend_5 { pt3dadd( -21.4153, 48.5839, -1.68786, 1.18 ) }
    dend_5 { pt3dadd( -22.0362, 49.0265, -1.30906, 1.18 ) }
    dend_5 { pt3dadd( -22.6367, 49.5099, -0.961003, 0.88 ) }
    dend_5 { pt3dadd( -23.5398, 50.5016, -0.365208, 0.37 ) }
    dend_5 { pt3dadd( -23.7956, 50.9202, -0.167766, 0.37 ) }
    dend_5 { pt3dadd( -24.2466, 51.992, 0.257723, 0.52 ) }
    dend_5 { pt3dadd( -24.4914, 52.7508, 0.563403, 0.81 ) }
    dend_5 { pt3dadd( -24.7259, 53.5923, 0.946047, 0.96 ) }
    dend_5 { pt3dadd( -24.9889, 54.5086, 1.4667, 0.52 ) }
    dend_5 { pt3dadd( -25.2369, 55.1793, 1.98136, 0.59 ) }
    dend_5 { pt3dadd( -25.4895, 55.55, 2.39571, 0.74 ) }
    dend_5 { pt3dadd( -26.1511, 56.0804, 3.2447, 1.11 ) }
    dend_5 { pt3dadd( -26.6717, 56.3615, 3.82228, 1.18 ) }
    dend_5 { pt3dadd( -27.4181, 56.6727, 4.56551, 1.18 ) }
    dend_5 { pt3dadd( -28.1746, 56.9457, 5.24393, 0.74 ) }
    dend_5 { pt3dadd( -29.0075, 57.248, 5.91198, 0.59 ) }
    dend_5 { pt3dadd( -29.8276, 57.5758, 6.49904, 0.52 ) }
    dend_5 { pt3dadd( -30.3959, 57.8328, 6.83312, 0.52 ) }
    dend_5 { pt3dadd( -31.0194, 58.1419, 7.10328, 0.52 ) }
    dend_5 { pt3dadd( -31.7194, 58.5217, 7.29631, 0.74 ) }
    dend_5 { pt3dadd( -32.4674, 58.9633, 7.49451, 0.74 ) }
    dend_5 { pt3dadd( -32.8411, 59.2001, 7.58536, 0.81 ) }
    dend_5 { pt3dadd( -33.3413, 59.5444, 7.74246, 0.81 ) }
    dend_5 { pt3dadd( -34.336, 60.3115, 8.17591, 0.66 ) }
    dend_5 { pt3dadd( -34.8089, 60.771, 8.49949, 0.52 ) }
    dend_5 { pt3dadd( -35.8198, 62.0744, 9.58702, 0.74 ) }
    dend_5 { pt3dadd( -36.1441, 62.6141, 10.0562, 0.66 ) }
    dend_5 { pt3dadd( -36.5665, 63.4537, 10.7865, 0.59 ) }
    dend_5 { pt3dadd( -36.822, 63.9872, 11.2466, 0.66 ) }
    dend_5 { pt3dadd( -37.2779, 64.9383, 12.0331, 0.52 ) }
    dend_5 { pt3dadd( -37.5605, 65.4245, 12.3642, 0.66 ) }
    dend_5 { pt3dadd( -37.9485, 65.96, 12.6758, 0.88 ) }
    dend_5 { pt3dadd( -38.4876, 66.5673, 13.0396, 0.88 ) }
    dend_5 { pt3dadd( -39.0299, 67.0849, 13.4287, 0.66 ) }
    dend_5 { pt3dadd( -39.4165, 67.4327, 13.8042, 0.59 ) }
    dend_5 { pt3dadd( -39.874, 67.8848, 14.4199, 0.74 ) }
    dend_5 { pt3dadd( -40.2721, 68.3677, 15.1373, 0.52 ) }
    dend_5 { pt3dadd( -40.6056, 68.8526, 15.8995, 0.52 ) }
    dend_5 { pt3dadd( -41.2958, 70.0489, 17.7858, 0.66 ) }
    dend_5 { pt3dadd( -41.7505, 70.9466, 19.1798, 0.74 ) }
    dend_5 { pt3dadd( -41.9982, 71.4382, 19.9654, 0.44 ) }
    dend_5 { pt3dadd( -42.2197, 71.8257, 20.6002, 0.44 ) }
    dend_5 { pt3dadd( -42.4434, 72.1128, 21.0596, 0.59 ) }
    dend_5 { pt3dadd( -42.7429, 72.3762, 21.4779, 0.66 ) }
    dend_5 { pt3dadd( -43.2651, 72.7262, 21.959, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( -44.0614, 73.2184, 22.6591, 0.52 ) }
    dend_5 { pt3dadd( -44.5979, 73.5646, 23.2266, 0.52 ) }
    dend_5 { pt3dadd( -45.035, 73.9243, 23.8102, 0.44 ) }
    dend_5 { pt3dadd( -45.7206, 74.6849, 24.9768, 0.59 ) }
    dend_5 { pt3dadd( -46.0129, 75.0609, 25.5019, 0.74 ) }
    dend_5 { pt3dadd( -46.3294, 75.5126, 26.0889, 0.88 ) }
    dend_5 { pt3dadd( -46.7373, 76.0933, 26.8206, 0.88 ) }
    dend_5 { pt3dadd( -47.1268, 76.5734, 27.542, 0.44 ) }
    dend_5 { pt3dadd( -47.4961, 76.95, 28.1926, 0.44 ) }
    dend_5 { pt3dadd( -48.109, 77.4149, 29.1658, 0.59 ) }
    dend_5 { pt3dadd( -48.5826, 77.7294, 29.8436, 0.52 ) }
    dend_5 { pt3dadd( -49.3704, 78.2085, 30.9012, 0.66 ) }
    dend_5 { pt3dadd( -50.0865, 78.6294, 31.8302, 0.74 ) }
    dend_5 { pt3dadd( -50.6659, 78.987, 32.6026, 0.74 ) }
    dend_5 { pt3dadd( -51.0112, 79.2427, 33.0785, 0.74 ) }
    dend_5 { pt3dadd( -51.5452, 79.7311, 33.8435, 0.52 ) }
    dend_5 { pt3dadd( -51.7453, 79.9513, 34.0936, 0.52 ) }
    dend_5 { pt3dadd( -52.0325, 80.3333, 34.401, 0.66 ) }
    dend_5 { pt3dadd( -52.4045, 80.892, 34.7836, 0.66 ) }
    dend_5 { pt3dadd( -52.7947, 81.4778, 35.1732, 0.81 ) }
    dend_5 { pt3dadd( -53.2254, 82.1198, 35.5904, 0.81 ) }
    dend_5 { pt3dadd( -53.6139, 82.6674, 35.9674, 0.59 ) }
    dend_5 { pt3dadd( -54.0455, 83.2463, 36.3649, 0.52 ) }
    dend_5 { pt3dadd( -54.6705, 84.0305, 36.9174, 0.59 ) }
    dend_5 { pt3dadd( -55.1099, 84.5361, 37.3108, 0.66 ) }
    dend_5 { pt3dadd( -55.488, 84.9101, 37.6418, 0.66 ) }
    dend_5 { pt3dadd( -56.18, 85.4479, 38.2259, 0.59 ) }
    dend_5 { pt3dadd( -56.6315, 85.7316, 38.6237, 0.59 ) }
    dend_5 { pt3dadd( -57.0863, 85.9714, 39.0281, 0.59 ) }
    dend_5 { pt3dadd( -57.7677, 86.3054, 39.6083, 0.52 ) }
    dend_5 { pt3dadd( -58.3222, 86.5985, 40.0848, 0.66 ) }
    dend_5 { pt3dadd( -58.8256, 86.9018, 40.4923, 0.66 ) }
    dend_5 { pt3dadd( -59.4959, 87.3628, 40.9637, 0.52 ) }
    dend_5 { pt3dadd( -59.994, 87.7513, 41.2573, 0.66 ) }
    dend_5 { pt3dadd( -60.761, 88.4311, 41.6292, 0.81 ) }
    dend_5 { pt3dadd( -61.3974, 89.0678, 41.9003, 0.81 ) }
    dend_5 { pt3dadd( -62.3072, 90.1175, 42.2833, 0.52 ) }
    dend_5 { pt3dadd( -62.8616, 90.8475, 42.5342, 0.59 ) }
    dend_5 { pt3dadd( -63.2559, 91.4065, 42.722, 0.59 ) }
    dend_5 { pt3dadd( -63.7314, 92.1209, 42.979, 0.37 ) }
    dend_5 { pt3dadd( -64.3932, 93.1339, 43.406, 0.52 ) }
    dend_5 { pt3dadd( -64.9126, 93.8864, 43.7871, 0.59 ) }
    dend_5 { pt3dadd( -65.5546, 94.7358, 44.3044, 0.22 ) }
    dend_5 { pt3dadd( -65.8518, 95.0669, 44.5557, 0.37 ) }
    dend_5 { pt3dadd( -66.2745, 95.457, 44.8714, 0.37 ) }
    dend_5 { pt3dadd( -66.8562, 95.8963, 45.2203, 0.37 ) }
    dend_5 { pt3dadd( -67.5659, 96.3773, 45.5729, 0.66 ) }
    dend_5 { pt3dadd( -68.0962, 96.7537, 45.8972, 0.88 ) }
    dend_5 { pt3dadd( -68.5048, 97.0747, 46.2303, 0.59 ) }
    dend_5 { pt3dadd( -69.3943, 97.8862, 47.1971, 0.29 ) }
    dend_5 { pt3dadd( -69.9455, 98.5651, 48.037, 0.29 ) }
    dend_5 { pt3dadd( -70.3071, 99.1843, 48.7756, 0.29 ) }
    dend_5 { pt3dadd( -70.8737, 100.665, 50.5309, 0.88 ) }
    dend_5 { pt3dadd( -71.063, 101.438, 51.578, 0.88 ) }
    dend_5 { pt3dadd( -71.1172, 101.904, 52.2514, 0.66 ) }
    dend_5 { pt3dadd( -71.0673, 102.558, 53.3447, 0.52 ) }
    dend_5 { pt3dadd( -70.9812, 102.896, 53.9424, 0.29 ) }
    dend_5 { pt3dadd( -70.8929, 103.156, 54.4303, 0.29 ) }
    dend_5 { pt3dadd( -70.7286, 104.547, 56.3081, 0.74 ) }
    dend_5 { pt3dadd( -76.3622, 110.902, 65.0641, 0.74 ) }
    dend_5 { pt3dadd( -81.7947, 116.235, 74.5372, 0.74 ) }
    dend_5 { pt3dadd( -86.5977, 121.665, 84.2977, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 62/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -17.6879, 46.308, -4.44971, 0.74 ) }
    dend_2 { pt3dadd( -18.4434, 46.6983, -4.75781, 0.74 ) }
    dend_2 { pt3dadd( -19.0175, 47.0707, -4.97055, 0.74 ) }
    dend_2 { pt3dadd( -19.9044, 47.7275, -5.24662, 0.74 ) }
    dend_2 { pt3dadd( -20.5034, 48.1686, -5.50513, 0.88 ) }
    dend_2 { pt3dadd( -21.1155, 48.5734, -5.83272, 1.03 ) }
    dend_2 { pt3dadd( -21.7215, 48.89, -6.20873, 1.03 ) }
    dend_2 { pt3dadd( -22.3319, 49.1257, -6.65186, 0.96 ) }
    dend_2 { pt3dadd( -23.0019, 49.2859, -7.14481, 0.74 ) }
    dend_2 { pt3dadd( -24.5806, 49.4567, -8.21329, 0.66 ) }
    dend_2 { pt3dadd( -25.6104, 49.4682, -8.79694, 0.66 ) }
    dend_2 { pt3dadd( -26.9396, 49.4018, -9.42093, 0.66 ) }
    dend_2 { pt3dadd( -27.7446, 49.3336, -9.7324, 0.59 ) }
    dend_2 { pt3dadd( -28.8162, 49.2172, -10.0502, 0.66 ) }
    dend_2 { pt3dadd( -29.6297, 49.1275, -10.2049, 0.66 ) }
    dend_2 { pt3dadd( -31.2703, 48.9928, -10.3319, 0.81 ) }
    dend_2 { pt3dadd( -32.2233, 48.9774, -10.359, 0.96 ) }
    dend_2 { pt3dadd( -32.9389, 49.0308, -10.361, 1.18 ) }
    dend_2 { pt3dadd( -33.6751, 49.1439, -10.3684, 1.18 ) }
    dend_2 { pt3dadd( -34.6866, 49.376, -10.3991, 0.66 ) }
    dend_2 { pt3dadd( -35.4575, 49.5866, -10.4475, 0.66 ) }
    dend_2 { pt3dadd( -36.0801, 49.7686, -10.5138, 0.59 ) }
    dend_2 { pt3dadd( -36.7847, 49.9401, -10.6642, 0.74 ) }
    dend_2 { pt3dadd( -37.6474, 50.0611, -10.9177, 0.74 ) }
    dend_2 { pt3dadd( -38.0179, 50.034, -11.109, 0.88 ) }
    dend_2 { pt3dadd( -38.685, 49.7462, -11.7014, 0.88 ) }
    dend_2 { pt3dadd( -39.1428, 49.4762, -12.2498, 0.66 ) }
    dend_2 { pt3dadd( -40.1001, 48.8999, -13.4654, 0.66 ) }
    dend_2 { pt3dadd( -40.5626, 48.63, -14.0596, 1.25 ) }
    dend_2 { pt3dadd( -41.6157, 48.0596, -15.3752, 1.47 ) }
    dend_2 { pt3dadd( -42.7372, 47.5338, -16.6815, 1.62 ) }
    dend_2 { pt3dadd( -44.073, 47.0712, -18.089, 1.55 ) }
    dend_2 { pt3dadd( -44.7178, 46.9548, -18.642, 0.81 ) }
    dend_2 { pt3dadd( -45.4481, 46.9514, -19.0931, 0.59 ) }
    dend_2 { pt3dadd( -46.3405, 47.0709, -19.5234, 0.44 ) }
    dend_2 { pt3dadd( -47.0229, 47.2303, -19.7736, 0.44 ) }
    dend_2 { pt3dadd( -47.7685, 47.4512, -20.0193, 0.59 ) }
    dend_2 { pt3dadd( -48.2798, 47.6046, -20.1996, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( -48.9841, 47.8058, -20.5473, 0.29 ) }
    dend_2 { pt3dadd( -50.1875, 48.1864, -21.2806, 1.03 ) }
    dend_2 { pt3dadd( -51.115, 48.5394, -21.8971, 1.47 ) }
    dend_2 { pt3dadd( -51.8093, 48.845, -22.3721, 1.69 ) }
    dend_2 { pt3dadd( -52.2387, 49.0557, -22.6614, 2.06 ) }
    dend_2 { pt3dadd( -53.1023, 49.5473, -23.2104, 1.03 ) }
    dend_2 { pt3dadd( -53.9589, 50.119, -23.7177, 0.52 ) }
    dend_2 { pt3dadd( -54.6866, 50.7144, -24.1393, 0.81 ) }
    dend_2 { pt3dadd( -55.0748, 51.1002, -24.3761, 0.96 ) }
    dend_2 { pt3dadd( -55.5603, 51.6783, -24.7215, 0.74 ) }
    dend_2 { pt3dadd( -56.0751, 52.374, -25.1594, 1.03 ) }
    dend_2 { pt3dadd( -56.4074, 52.8651, -25.4828, 0.88 ) }
    dend_2 { pt3dadd( -56.8679, 53.5559, -25.9777, 1.25 ) }
    dend_2 { pt3dadd( -57.2348, 54.071, -26.3938, 1.62 ) }
    dend_2 { pt3dadd( -57.5743, 54.4978, -26.769, 1.77 ) }
    dend_2 { pt3dadd( -58.0726, 55.0913, -27.3333, 1.99 ) }
    dend_2 { pt3dadd( -58.4944, 55.578, -27.7959, 1.18 ) }
    dend_2 { pt3dadd( -58.8229, 55.9627, -28.1485, 0.29 ) }
    dend_2 { pt3dadd( -59.2825, 56.5235, -28.6628, 0.29 ) }
    dend_2 { pt3dadd( -59.8495, 57.2766, -29.3749, 0.66 ) }
    dend_2 { pt3dadd( -60.2776, 57.941, -29.9879, 0.66 ) }
    dend_2 { pt3dadd( -60.5838, 58.5198, -30.4841, 0.22 ) }
    dend_2 { pt3dadd( -60.8665, 59.1712, -31.0175, 0.81 ) }
    dend_2 { pt3dadd( -61.1491, 59.9076, -31.6171, 1.18 ) }
    dend_2 { pt3dadd( -61.462, 60.7912, -32.2987, 0.96 ) }
    dend_2 { pt3dadd( -61.6418, 61.2749, -32.6458, 0.37 ) }
    dend_2 { pt3dadd( -61.8589, 61.7262, -32.9451, 0.29 ) }
    dend_2 { pt3dadd( -62.0822, 62.0789, -33.1679, 0.29 ) }
    dend_2 { pt3dadd( -62.394, 62.4801, -33.3795, 0.29 ) }
    dend_2 { pt3dadd( -62.7443, 62.9194, -33.5509, 0.59 ) }
    dend_2 { pt3dadd( -63.1499, 63.4745, -33.7216, 0.59 ) }
    dend_2 { pt3dadd( -63.5212, 64.0984, -33.9439, 0.59 ) }
    dend_2 { pt3dadd( -63.8425, 64.7629, -34.2187, 0.59 ) }
    dend_2 { pt3dadd( -64.0999, 65.3971, -34.4865, 0.59 ) }
    dend_2 { pt3dadd( -64.3065, 65.983, -34.7387, 0.29 ) }
    dend_2 { pt3dadd( -64.4709, 66.4801, -34.9614, 0.37 ) }
    dend_2 { pt3dadd( -64.8086, 67.3416, -35.3998, 0.37 ) }
    dend_2 { pt3dadd( -65.1858, 68.064, -35.8577, 0.74 ) }
    dend_2 { pt3dadd( -65.4117, 68.3905, -36.0853, 1.25 ) }
    dend_2 { pt3dadd( -65.7714, 68.8234, -36.3913, 1.69 ) }
    dend_2 { pt3dadd( -66.1171, 69.1845, -36.6634, 1.47 ) }
    dend_2 { pt3dadd( -66.8071, 69.8189, -37.1865, 0.96 ) }
    dend_2 { pt3dadd( -67.5522, 70.4363, -37.7248, 0.59 ) }
    dend_2 { pt3dadd( -68.1225, 70.8796, -38.1585, 0.52 ) }
    dend_2 { pt3dadd( -68.621, 71.2282, -38.557, 0.66 ) }
    dend_2 { pt3dadd( -69.2812, 71.6251, -39.0712, 0.52 ) }
    dend_2 { pt3dadd( -69.8975, 71.9331, -39.5553, 0.81 ) }
    dend_2 { pt3dadd( -70.5464, 72.1663, -40.0149, 0.96 ) }
    dend_2 { pt3dadd( -71.1718, 72.3284, -40.3931, 1.55 ) }
    dend_2 { pt3dadd( -71.9735, 72.4972, -40.8369, 1.77 ) }
    dend_2 { pt3dadd( -72.6421, 72.6307, -41.1528, 2.21 ) }
    dend_2 { pt3dadd( -73.6775, 72.8462, -41.56, 2.36 ) }
    dend_2 { pt3dadd( -74.7694, 73.0736, -41.9315, 0.59 ) }
    dend_2 { pt3dadd( -75.6864, 73.2348, -42.224, 0.37 ) }
    dend_2 { pt3dadd( -76.2303, 73.3108, -42.3817, 0.37 ) }
    dend_2 { pt3dadd( -76.9689, 73.3851, -42.5859, 0.37 ) }
    dend_2 { pt3dadd( -77.6019, 73.432, -42.7624, 0.37 ) }
    dend_2 { pt3dadd( -78.1798, 73.4613, -42.9032, 0.37 ) }
    dend_2 { pt3dadd( -78.8735, 73.4952, -43.0987, 0.29 ) }
    dend_2 { pt3dadd( -79.2889, 73.4977, -43.2146, 0.29 ) }
    dend_2 { pt3dadd( -79.7545, 73.5149, -43.3676, 0.44 ) }
    dend_2 { pt3dadd( -80.5488, 73.6455, -43.6716, 0.81 ) }
    dend_2 { pt3dadd( -81.0195, 73.8014, -43.8971, 1.18 ) }
    dend_2 { pt3dadd( -81.4686, 74.0032, -44.1591, 1.18 ) }
    dend_2 { pt3dadd( -81.9961, 74.2678, -44.5668, 0.74 ) }
    dend_2 { pt3dadd( -82.8433, 74.6974, -45.3301, 0.37 ) }
    dend_2 { pt3dadd( -83.3476, 74.9572, -45.8246, 0.81 ) }
    dend_2 { pt3dadd( -84.175, 75.3721, -46.7117, 1.18 ) }
    dend_2 { pt3dadd( -84.8109, 75.6843, -47.4311, 1.18 ) }
    dend_2 { pt3dadd( -86.0791, 76.2794, -48.9264, 0.52 ) }
    dend_2 { pt3dadd( -86.7033, 76.5725, -49.617, 0.37 ) }
    dend_2 { pt3dadd( -87.6599, 76.9839, -50.5353, 1.33 ) }
    dend_2 { pt3dadd( -88.4256, 77.2817, -51.1844, 2.14 ) }
    dend_2 { pt3dadd( -88.8977, 77.4728, -51.5363, 2.58 ) }
    dend_2 { pt3dadd( -89.973, 77.9614, -52.2362, 2.8 ) }
    dend_2 { pt3dadd( -91.3473, 78.702, -53.0163, 0.37 ) }
    dend_2 { pt3dadd( -92.1683, 79.2472, -53.4789, 0.37 ) }
    dend_2 { pt3dadd( -92.4892, 79.517, -53.6589, 0.37 ) }
    dend_2 { pt3dadd( -92.9975, 80.117, -53.9348, 0.59 ) }
    dend_2 { pt3dadd( -93.3329, 80.6869, -54.1496, 0.74 ) }
    dend_2 { pt3dadd( -93.6052, 81.3492, -54.3775, 0.74 ) }
    dend_2 { pt3dadd( -93.8265, 81.9807, -54.712, 0.74 ) }
    dend_2 { pt3dadd( -93.9936, 82.3492, -54.9664, 0.44 ) }
    dend_2 { pt3dadd( -94.3623, 82.8177, -55.3833, 0.29 ) }
    dend_2 { pt3dadd( -94.746, 83.1545, -55.7766, 0.29 ) }
    dend_2 { pt3dadd( -95.2002, 83.4585, -56.2249, 0.81 ) }
    dend_2 { pt3dadd( -96.331, 84.0371, -57.2341, 1.03 ) }
    dend_2 { pt3dadd( -96.8199, 84.2453, -57.6332, 0.96 ) }
    dend_2 { pt3dadd( -97.7251, 84.615, -58.3351, 0.22 ) }
    dend_2 { pt3dadd( -98.596, 84.9833, -59.025, 0.59 ) }
    dend_2 { pt3dadd( -99.1541, 85.2564, -59.4699, 0.59 ) }
    dend_2 { pt3dadd( -99.7123, 85.578, -59.9237, 0.44 ) }
    dend_2 { pt3dadd( -100.249, 85.9249, -60.3442, 0.37 ) }
    dend_2 { pt3dadd( -101.271, 86.5611, -61.159, 1.03 ) }
    dend_2 { pt3dadd( -102.066, 87.005, -61.7566, 1.69 ) }
    dend_2 { pt3dadd( -102.479, 87.2311, -62.0335, 1.92 ) }
    dend_2 { pt3dadd( -103.018, 87.5473, -62.3779, 1.92 ) }
    dend_2 { pt3dadd( -103.351, 87.7539, -62.5974, 1.92 ) }
    dend_2 { pt3dadd( -104.639, 88.5755, -63.4252, 0.44 ) }
    dend_2 { pt3dadd( -105.038, 88.8524, -63.6533, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( -105.518, 89.2444, -63.9422, 0.52 ) }
    dend_2 { pt3dadd( -105.779, 89.5016, -64.136, 0.88 ) }
    dend_2 { pt3dadd( -106.29, 90.0999, -64.5902, 1.03 ) }
    dend_2 { pt3dadd( -106.598, 90.4859, -64.8898, 1.18 ) }
    dend_2 { pt3dadd( -107.068, 91.1167, -65.3842, 0.96 ) }
    dend_2 { pt3dadd( -107.65, 91.8965, -65.9886, 0.74 ) }
    dend_2 { pt3dadd( -108.007, 92.3853, -66.3371, 0.74 ) }
    dend_2 { pt3dadd( -108.334, 92.8449, -66.6357, 0.59 ) }
    dend_2 { pt3dadd( -108.912, 93.6543, -67.0843, 0.52 ) }
    dend_2 { pt3dadd( -109.29, 94.1738, -67.3384, 0.52 ) }
    dend_2 { pt3dadd( -109.885, 94.9689, -67.6514, 0.74 ) }
    dend_2 { pt3dadd( -110.508, 95.7711, -67.8734, 1.18 ) }
    dend_2 { pt3dadd( -111.042, 96.4433, -68.0134, 1.4 ) }
    dend_2 { pt3dadd( -111.433, 96.9172, -68.0926, 1.47 ) }
    dend_2 { pt3dadd( -111.824, 97.3522, -68.1525, 1.69 ) }
    dend_2 { pt3dadd( -112.433, 97.9127, -68.2359, 1.4 ) }
    dend_2 { pt3dadd( -113.243, 98.5046, -68.3608, 0.52 ) }
    dend_2 { pt3dadd( -114.039, 98.9549, -68.4946, 0.52 ) }
    dend_2 { pt3dadd( -114.886, 99.3413, -68.6386, 0.74 ) }
    dend_2 { pt3dadd( -115.639, 99.6351, -68.8038, 0.96 ) }
    dend_2 { pt3dadd( -116.654, 99.9904, -69.0916, 0.96 ) }
    dend_2 { pt3dadd( -117.405, 100.244, -69.3639, 0.74 ) }
    dend_2 { pt3dadd( -118.142, 100.535, -69.6926, 0.44 ) }
    dend_2 { pt3dadd( -118.611, 100.792, -69.9422, 0.44 ) }
    dend_2 { pt3dadd( -119.178, 101.198, -70.2877, 0.74 ) }
    dend_2 { pt3dadd( -119.675, 101.601, -70.5894, 0.88 ) }
    dend_2 { pt3dadd( -120.028, 101.892, -70.8244, 0.88 ) }
    dend_2 { pt3dadd( -120.646, 102.425, -71.277, 0.29 ) }
    dend_2 { pt3dadd( -121.228, 102.935, -71.7457, 0.29 ) }
    dend_2 { pt3dadd( -121.87, 103.478, -72.2664, 0.37 ) }
    dend_2 { pt3dadd( -122.485, 103.972, -72.7461, 0.44 ) }
    dend_2 { pt3dadd( -123.471, 104.748, -73.5219, 0.59 ) }
    dend_2 { pt3dadd( -123.915, 105.121, -73.8929, 1.18 ) }
    dend_2 { pt3dadd( -124.547, 105.722, -74.4468, 1.03 ) }
    dend_2 { pt3dadd( -125.039, 106.258, -74.8698, 1.69 ) }
    dend_2 { pt3dadd( -125.294, 106.568, -75.071, 1.69 ) }
    dend_2 { pt3dadd( -125.857, 107.27, -75.4772, 1.18 ) }
    dend_2 { pt3dadd( -126.593, 108.161, -75.9176, 0.37 ) }
    dend_2 { pt3dadd( -127.037, 108.668, -76.1817, 0.37 ) }
    dend_2 { pt3dadd( -127.732, 109.424, -76.5944, 0.37 ) }
    dend_2 { pt3dadd( -128.37, 110.075, -76.9784, 0.59 ) }
    dend_2 { pt3dadd( -128.929, 110.6, -77.2981, 1.11 ) }
    dend_2 { pt3dadd( -129.409, 111.004, -77.5509, 1.62 ) }
    dend_2 { pt3dadd( -130.003, 111.427, -77.8593, 1.69 ) }
    dend_2 { pt3dadd( -130.58, 111.819, -78.1977, 1.92 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 45/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -63.098, 30.318, 138.168, 0.88 ) }
    dend_60 { pt3dadd( -66.1519, 29.4456, 149.585, 0.88 ) }
    dend_60 { pt3dadd( -69.9864, 30.3855, 160.747, 0.88 ) }
    dend_60 { pt3dadd( -72.4285, 32.6947, 172.108, 0.88 ) }
    dend_60 { pt3dadd( -74.8212, 35.0784, 183.466, 0.88 ) }
    dend_60 { pt3dadd( -75.5681, 39.2206, 194.573, 0.88 ) }
    dend_60 { pt3dadd( -75.7686, 43.6776, 205.589, 0.88 ) }
    dend_60 { pt3dadd( -78.2028, 48.9308, 216.007, 0.88 ) }
    dend_60 { pt3dadd( -80.5696, 55.4507, 225.763, 0.88 ) }
    dend_60 { pt3dadd( -83.6053, 62.8931, 234.703, 0.88 ) }
    dend_60 { pt3dadd( -87.1653, 70.7187, 243.144, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -63.098, 30.318, 138.168, 0.22 ) }
    dend_57 { pt3dadd( -66.2796, 29.4299, 149.619, 0.88 ) }
    dend_57 { pt3dadd( -68.2379, 29.142, 161.368, 0.88 ) }
    dend_57 { pt3dadd( -72.383, 30.3768, 172.472, 0.88 ) }
    dend_57 { pt3dadd( -76.4167, 32.2487, 183.535, 0.88 ) }
    dend_57 { pt3dadd( -81.1864, 32.9942, 194.427, 0.88 ) }
    dend_57 { pt3dadd( -86.8871, 33.1487, 204.888, 0.88 ) }
    dend_57 { pt3dadd( -91.4909, 32.2825, 215.849, 0.88 ) }
    dend_57 { pt3dadd( -96.6966, 31.7656, 226.558, 0.88 ) }
    dend_57 { pt3dadd( -100.629, 29.2742, 237.557, 0.88 ) }
    dend_57 { pt3dadd( -102.668, 26.7357, 249.04, 0.88 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 67/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -203.712, 142.393, 78.0036, 0.88 ) }
    dend_53 { pt3dadd( -213.01, 148.124, 80.2382, 0.88 ) }
    dend_53 { pt3dadd( -222.482, 153.556, 82.4226, 0.88 ) }
    dend_53 { pt3dadd( -232.172, 158.826, 83.8532, 0.88 ) }
    dend_53 { pt3dadd( -242.436, 162.63, 85.5464, 0.88 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 72/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -203.712, 142.393, 78.0036, 0.22 ) }
    dend_52 { pt3dadd( -212.992, 148.174, 80.2157, 0.88 ) }
    dend_52 { pt3dadd( -222.424, 153.475, 82.8183, 0.88 ) }
    dend_52 { pt3dadd( -232.712, 156.281, 85.6862, 0.88 ) }
    dend_52 { pt3dadd( -243.11, 160.042, 86.5657, 0.88 ) }
    dend_52 { pt3dadd( -253.412, 163.334, 88.8837, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -70.5984, -145.655, 69.3638, 0.88 ) }
    dend_42 { pt3dadd( -75.4508, -153.269, 74.3921, 0.88 ) }
    dend_42 { pt3dadd( -79.4791, -160.819, 80.1963, 0.88 ) }
    dend_42 { pt3dadd( -83.6043, -167.858, 86.4977, 0.88 ) }
    dend_42 { pt3dadd( -86.2344, -176.045, 92.3374, 0.88 ) }
    dend_42 { pt3dadd( -87.5835, -182.822, 99.9963, 0.88 ) }
    dend_42 { pt3dadd( -90.557, -189.476, 107.27, 0.88 ) }
    dend_42 { pt3dadd( -92.312, -194.176, 116.152, 0.88 ) }
    dend_42 { pt3dadd( -92.7655, -198.95, 125.168, 0.88 ) }
    dend_42 { pt3dadd( -91.7269, -202.039, 134.775, 0.88 ) }
    dend_42 { pt3dadd( -90.0088, -206.632, 143.731, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -70.5984, -145.655, 69.3638, 0.22 ) }
    dend_39 { pt3dadd( -76.9644, -154.576, 73.8608, 0.88 ) }
    dend_39 { pt3dadd( -84.1056, -162.551, 78.7844, 0.88 ) }
    dend_39 { pt3dadd( -89.9199, -172.189, 82.6299, 0.88 ) }
    dend_39 { pt3dadd( -96.1064, -181.797, 85.8987, 0.88 ) }
    dend_39 { pt3dadd( -102.207, -191.727, 88.3225, 0.88 ) }
    dend_39 { pt3dadd( -109.144, -201.34, 88.1857, 0.88 ) }
    dend_39 { pt3dadd( -116.1, -210.924, 88.8076, 0.88 ) }
    dend_39 { pt3dadd( -124.153, -219.502, 89.5313, 0.88 ) }
    dend_39 { pt3dadd( -132.905, -227.248, 88.5844, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -4.55904, -49.7354, 4.87191, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -4.26279, -51.1438, 4.03554, 1.25 ) }
    dend_27 { pt3dadd( -3.98617, -52.1164, 3.55656, 1.03 ) }
    dend_27 { pt3dadd( -3.45388, -53.4654, 3.02034, 0.88 ) }
    dend_27 { pt3dadd( -2.97256, -54.5701, 2.71893, 0.66 ) }
    dend_27 { pt3dadd( -2.62402, -55.3878, 2.59791, 0.66 ) }
    dend_27 { pt3dadd( -2.13889, -56.6405, 2.51569, 0.74 ) }
    dend_27 { pt3dadd( -1.76461, -57.8415, 2.59543, 0.66 ) }
    dend_27 { pt3dadd( -1.4846, -58.7665, 2.74337, 0.81 ) }
    dend_27 { pt3dadd( -1.2138, -59.6984, 2.93253, 0.81 ) }
    dend_27 { pt3dadd( -0.86545, -60.8993, 3.14068, 0.74 ) }
    dend_27 { pt3dadd( -0.518085, -62.1031, 3.26306, 0.96 ) }
    dend_27 { pt3dadd( -0.124157, -63.5056, 3.30719, 1.03 ) }
    dend_27 { pt3dadd( 0.26269, -64.8265, 3.31328, 1.11 ) }
    dend_27 { pt3dadd( 0.649511, -66.1259, 3.2996, 1.25 ) }
    dend_27 { pt3dadd( 1.20008, -67.792, 3.23522, 0.96 ) }
    dend_27 { pt3dadd( 1.81908, -69.4658, 3.15219, 0.96 ) }
    dend_27 { pt3dadd( 2.43653, -70.9715, 3.06793, 1.11 ) }
    dend_27 { pt3dadd( 2.99842, -72.2232, 2.98492, 1.47 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.55904, -49.7354, 4.87191, 2.06 ) }
    dend_20 { pt3dadd( -5.13831, -50.3958, 4.86485, 2.06 ) }
    dend_20 { pt3dadd( -5.76235, -51.1831, 4.75206, 2.06 ) }
    dend_20 { pt3dadd( -6.28206, -51.9083, 4.58165, 2.06 ) }
    dend_20 { pt3dadd( -6.74826, -52.5807, 4.36526, 2.06 ) }
    dend_20 { pt3dadd( -7.2816, -53.3248, 4.07319, 1.99 ) }
    dend_20 { pt3dadd( -7.98573, -54.3029, 3.6607, 1.77 ) }
    dend_20 { pt3dadd( -8.58766, -55.1738, 3.20848, 1.47 ) }
    dend_20 { pt3dadd( -9.18168, -56.0573, 2.68569, 1.11 ) }
    dend_20 { pt3dadd( -9.7537, -56.8831, 2.13864, 1.11 ) }
    dend_20 { pt3dadd( -10.181, -57.4647, 1.73592, 1.25 ) }
    dend_20 { pt3dadd( -10.5342, -57.9073, 1.43117, 1.25 ) }
    dend_20 { pt3dadd( -11.3721, -58.8143, 0.851257, 1.18 ) }
    dend_20 { pt3dadd( -11.9037, -59.288, 0.580735, 1.25 ) }
    dend_20 { pt3dadd( -12.7932, -59.9474, 0.266252, 1.18 ) }
    dend_20 { pt3dadd( -13.4674, -60.3792, 0.13866, 1.18 ) }
    dend_20 { pt3dadd( -13.9655, -60.6533, 0.119423, 1.18 ) }
    dend_20 { pt3dadd( -14.7922, -61.0189, 0.191404, 1.18 ) }
    dend_20 { pt3dadd( -15.6267, -61.3192, 0.350858, 1.25 ) }
    dend_20 { pt3dadd( -16.0738, -61.4533, 0.467551, 1.25 ) }
    dend_20 { pt3dadd( -16.7054, -61.6185, 0.689106, 1.25 ) }
    dend_20 { pt3dadd( -17.6422, -61.8615, 1.04343, 1.77 ) }
    dend_20 { pt3dadd( -18.2877, -62.0276, 1.29832, 2.14 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 56.1994, 135.761, -15.3884, 0.74 ) }
    dend_14 { pt3dadd( 56.9182, 135.876, -16.2552, 0.74 ) }
    dend_14 { pt3dadd( 58.4332, 136.296, -17.9316, 1.03 ) }
    dend_14 { pt3dadd( 59.2097, 136.627, -18.7821, 0.52 ) }
    dend_14 { pt3dadd( 59.8012, 136.97, -19.4274, 0.52 ) }
    dend_14 { pt3dadd( 60.411, 137.43, -20.0846, 0.74 ) }
    dend_14 { pt3dadd( 61.0192, 137.974, -20.7123, 0.52 ) }
    dend_14 { pt3dadd( 61.6779, 138.721, -21.2787, 0.59 ) }
    dend_14 { pt3dadd( 62.5218, 139.83, -21.8568, 0.44 ) }
    dend_14 { pt3dadd( 63.1064, 140.629, -22.2042, 0.52 ) }
    dend_14 { pt3dadd( 63.871, 141.7, -22.614, 0.44 ) }
    dend_14 { pt3dadd( 64.4517, 142.501, -22.8715, 0.29 ) }
    dend_14 { pt3dadd( 65.1726, 143.415, -23.1424, 0.29 ) }
    dend_14 { pt3dadd( 65.3992, 143.652, -23.2241, 0.59 ) }
    dend_14 { pt3dadd( 66.018, 144.205, -23.4361, 0.59 ) }
    dend_14 { pt3dadd( 66.801, 144.781, -23.7111, 0.44 ) }
    dend_14 { pt3dadd( 67.4268, 145.178, -23.947, 0.59 ) }
    dend_14 { pt3dadd( 68.5623, 145.905, -24.4021, 0.37 ) }
    dend_14 { pt3dadd( 69.4022, 146.506, -24.753, 0.37 ) }
    dend_14 { pt3dadd( 70.0986, 147.042, -25.0253, 0.37 ) }
    dend_14 { pt3dadd( 70.8757, 147.67, -25.2932, 0.37 ) }
    dend_14 { pt3dadd( 72.0341, 148.575, -25.6253, 0.96 ) }
    dend_14 { pt3dadd( 72.8005, 149.17, -25.8124, 1.03 ) }
    dend_14 { pt3dadd( 73.8099, 149.962, -26.0199, 0.81 ) }
    dend_14 { pt3dadd( 74.5095, 150.54, -26.1569, 0.66 ) }
    dend_14 { pt3dadd( 75.4753, 151.393, -26.3627, 0.88 ) }
    dend_14 { pt3dadd( 75.9696, 151.857, -26.4705, 1.25 ) }
    dend_14 { pt3dadd( 76.7281, 152.523, -26.605, 0.88 ) }
    dend_14 { pt3dadd( 77.5054, 153.104, -26.793, 0.29 ) }
    dend_14 { pt3dadd( 77.9797, 153.423, -26.9371, 0.44 ) }
    dend_14 { pt3dadd( 78.6477, 153.867, -27.1721, 0.37 ) }
    dend_14 { pt3dadd( 79.69, 154.505, -27.5542, 0.52 ) }
    dend_14 { pt3dadd( 80.8079, 155.114, -27.9632, 0.59 ) }
    dend_14 { pt3dadd( 82.7659, 156.017, -28.5986, 0.66 ) }
    dend_14 { pt3dadd( 83.8943, 156.472, -28.9197, 0.52 ) }
    dend_14 { pt3dadd( 84.3711, 156.644, -29.0599, 0.59 ) }
    dend_14 { pt3dadd( 85.2934, 156.966, -29.3285, 0.44 ) }
    dend_14 { pt3dadd( 86.2711, 157.346, -29.6074, 0.37 ) }
    dend_14 { pt3dadd( 87.5521, 157.921, -29.9173, 0.37 ) }
    dend_14 { pt3dadd( 88.2904, 158.283, -30.0213, 0.96 ) }
    dend_14 { pt3dadd( 89.2344, 158.809, -30.1138, 0.88 ) }
    dend_14 { pt3dadd( 90.2112, 159.427, -30.1916, 0.44 ) }
    dend_14 { pt3dadd( 90.8456, 159.877, -30.2509, 0.29 ) }
    dend_14 { pt3dadd( 91.6069, 160.461, -30.3711, 0.44 ) }
    dend_14 { pt3dadd( 92.5705, 161.274, -30.5834, 0.44 ) }
    dend_14 { pt3dadd( 93.6031, 162.223, -30.8973, 0.52 ) }
    dend_14 { pt3dadd( 94.281, 162.903, -31.167, 0.66 ) }
    dend_14 { pt3dadd( 95.4004, 164.09, -31.8157, 0.66 ) }
    dend_14 { pt3dadd( 96.36, 165.173, -32.5352, 0.44 ) }
    dend_14 { pt3dadd( 96.8672, 165.782, -33.0015, 0.37 ) }
    dend_14 { pt3dadd( 97.4337, 166.509, -33.6303, 0.37 ) }
    dend_14 { pt3dadd( 97.7832, 166.928, -34.0338, 0.52 ) }
    dend_14 { pt3dadd( 98.4836, 167.639, -34.762, 0.59 ) }
    dend_14 { pt3dadd( 98.8906, 167.942, -35.0754, 0.66 ) }
    dend_14 { pt3dadd( 99.6586, 168.292, -35.449, 0.52 ) }
    dend_14 { pt3dadd( 100.662, 168.553, -35.8066, 0.88 ) }
    dend_14 { pt3dadd( 101.397, 168.686, -36.0068, 0.88 ) }
    dend_14 { pt3dadd( 102.251, 168.849, -36.258, 0.74 ) }
    dend_14 { pt3dadd( 102.966, 168.979, -36.5512, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( 103.496, 169.056, -36.8198, 0.29 ) }
    dend_14 { pt3dadd( 104.473, 169.131, -37.3678, 0.29 ) }
    dend_14 { pt3dadd( 105.145, 169.151, -37.7674, 0.29 ) }
    dend_14 { pt3dadd( 106.447, 169.235, -38.6328, 0.88 ) }
    dend_14 { pt3dadd( 107.755, 169.43, -39.5697, 0.96 ) }
    dend_14 { pt3dadd( 108.371, 169.575, -40.0258, 0.88 ) }
    dend_14 { pt3dadd( 109.243, 169.807, -40.685, 0.29 ) }
    dend_14 { pt3dadd( 109.646, 169.897, -40.9569, 0.29 ) }
    dend_14 { pt3dadd( 110.332, 169.959, -41.3477, 0.37 ) }
    dend_14 { pt3dadd( 111.048, 169.94, -41.6944, 0.37 ) }
    dend_14 { pt3dadd( 111.614, 169.921, -42.0134, 0.37 ) }
    dend_14 { pt3dadd( 113.031, 169.841, -42.9095, 0.44 ) }
    dend_14 { pt3dadd( 113.886, 169.759, -43.4811, 0.59 ) }
    dend_14 { pt3dadd( 114.448, 169.656, -43.8526, 0.81 ) }
    dend_14 { pt3dadd( 115.284, 169.482, -44.4128, 0.59 ) }
    dend_14 { pt3dadd( 116.622, 169.254, -45.327, 1.11 ) }
    dend_14 { pt3dadd( 117.283, 169.186, -45.7939, 1.47 ) }
    dend_14 { pt3dadd( 117.785, 169.158, -46.128, 1.47 ) }
    dend_14 { pt3dadd( 118.761, 169.098, -46.7489, 1.03 ) }
    dend_14 { pt3dadd( 120.013, 169.024, -47.4591, 0.59 ) }
    dend_14 { pt3dadd( 121.137, 168.93, -48.0131, 0.96 ) }
    dend_14 { pt3dadd( 122.329, 168.782, -48.5323, 0.96 ) }
    dend_14 { pt3dadd( 123.523, 168.62, -49.04, 0.37 ) }
    dend_14 { pt3dadd( 124.604, 168.477, -49.4484, 0.37 ) }
    dend_14 { pt3dadd( 125.409, 168.362, -49.7153, 0.37 ) }
    dend_14 { pt3dadd( 126.673, 168.133, -50.0943, 0.37 ) }
    dend_14 { pt3dadd( 127.918, 167.905, -50.4445, 0.81 ) }
    dend_14 { pt3dadd( 128.989, 167.752, -50.7299, 1.03 ) }
    dend_14 { pt3dadd( 130.462, 167.65, -51.1476, 1.25 ) }
    dend_14 { pt3dadd( 130.884, 167.638, -51.2649, 1.47 ) }
    dend_14 { pt3dadd( 132.677, 167.594, -51.7253, 0.29 ) }
    dend_14 { pt3dadd( 133.248, 167.592, -51.8393, 0.29 ) }
    dend_14 { pt3dadd( 133.905, 167.598, -51.9312, 0.44 ) }
    dend_14 { pt3dadd( 134.675, 167.63, -51.9956, 0.22 ) }
    dend_14 { pt3dadd( 135.528, 167.697, -52.0344, 0.59 ) }
    dend_14 { pt3dadd( 136.273, 167.797, -52.0381, 0.59 ) }
    dend_14 { pt3dadd( 137.461, 168.024, -52.0066, 0.22 ) }
    dend_14 { pt3dadd( 138.711, 168.283, -51.9707, 0.22 ) }
    dend_14 { pt3dadd( 140.263, 168.601, -51.9128, 0.22 ) }
    dend_14 { pt3dadd( 141.158, 168.791, -51.8692, 0.44 ) }
    dend_14 { pt3dadd( 142.718, 169.176, -51.7897, 0.22 ) }
    dend_14 { pt3dadd( 143.659, 169.42, -51.7441, 0.22 ) }
    dend_14 { pt3dadd( 144.39, 169.605, -51.7156, 0.37 ) }
    dend_14 { pt3dadd( 146.439, 170.093, -51.6437, 0.22 ) }
    dend_14 { pt3dadd( 147.834, 170.397, -51.6056, 0.22 ) }
    dend_14 { pt3dadd( 150.337, 170.935, -51.5471, 0.22 ) }
    dend_14 { pt3dadd( 151.764, 171.21, -51.5348, 0.22 ) }
    dend_14 { pt3dadd( 152.476, 171.333, -51.531, 0.96 ) }
    dend_14 { pt3dadd( 153.472, 171.498, -51.5279, 0.96 ) }
    dend_14 { pt3dadd( 154.374, 171.644, -51.5275, 0.88 ) }
    dend_14 { pt3dadd( 155.222, 171.76, -51.5198, 0.88 ) }
    dend_14 { pt3dadd( 157.335, 172.047, -51.4621, 0.22 ) }
    dend_14 { pt3dadd( 159.984, 172.387, -51.3405, 0.22 ) }
    dend_14 { pt3dadd( 161.315, 172.549, -51.2623, 0.44 ) }
    dend_14 { pt3dadd( 162.06, 172.615, -51.2164, 0.52 ) }
    dend_14 { pt3dadd( 163.751, 172.708, -51.0757, 0.22 ) }
    dend_14 { pt3dadd( 166.194, 172.764, -50.8244, 0.22 ) }
    dend_14 { pt3dadd( 168.086, 172.761, -50.572, 0.22 ) }
    dend_14 { pt3dadd( 169.895, 172.697, -50.3032, 0.22 ) }
    dend_14 { pt3dadd( 172.322, 172.525, -49.9182, 0.22 ) }
    dend_14 { pt3dadd( 173.749, 172.371, -49.6795, 0.22 ) }
    dend_14 { pt3dadd( 174.851, 172.189, -49.4876, 1.33 ) }
    dend_14 { pt3dadd( 175.604, 171.992, -49.3513, 1.47 ) }
    dend_14 { pt3dadd( 177.142, 171.551, -49.0583, 0.66 ) }
    dend_14 { pt3dadd( 178.265, 171.176, -48.8371, 0.29 ) }
    dend_14 { pt3dadd( 179.791, 170.622, -48.5492, 0.29 ) }
    dend_14 { pt3dadd( 180.96, 170.16, -48.3872, 0.29 ) }
    dend_14 { pt3dadd( 182.123, 169.625, -48.2435, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 56.1994, 135.761, -15.3884, 0.37 ) }
    dend_13 { pt3dadd( 57.4257, 136.853, -15.1789, 0.37 ) }
    dend_13 { pt3dadd( 58.6367, 137.989, -14.9112, 0.37 ) }
    dend_13 { pt3dadd( 59.1806, 138.511, -14.7672, 0.37 ) }
    dend_13 { pt3dadd( 60.1044, 139.405, -14.5701, 0.37 ) }
    dend_13 { pt3dadd( 60.7577, 140.075, -14.4411, 0.37 ) }
    dend_13 { pt3dadd( 62.1561, 141.561, -14.1461, 0.66 ) }
    dend_13 { pt3dadd( 62.8544, 142.328, -13.8934, 1.25 ) }
    dend_13 { pt3dadd( 63.3335, 142.891, -13.661, 1.25 ) }
    dend_13 { pt3dadd( 64.2967, 144.182, -13.0705, 0.59 ) }
    dend_13 { pt3dadd( 65.0912, 145.337, -12.4693, 0.37 ) }
    dend_13 { pt3dadd( 66.0265, 146.672, -11.7032, 0.37 ) }
    dend_13 { pt3dadd( 67.3641, 148.478, -10.6163, 0.52 ) }
    dend_13 { pt3dadd( 67.8742, 149.166, -10.1737, 0.37 ) }
    dend_13 { pt3dadd( 68.5749, 150.131, -9.56741, 0.52 ) }
    dend_13 { pt3dadd( 69.1113, 150.881, -9.03671, 0.66 ) }
    dend_13 { pt3dadd( 69.5515, 151.5, -8.60837, 0.66 ) }
    dend_13 { pt3dadd( 70.0962, 152.289, -8.10789, 0.44 ) }
    dend_13 { pt3dadd( 70.9823, 153.67, -7.37267, 0.66 ) }
    dend_13 { pt3dadd( 71.4337, 154.416, -6.96721, 0.81 ) }
    dend_13 { pt3dadd( 72.3868, 156.084, -6.06083, 1.03 ) }
    dend_13 { pt3dadd( 73.0587, 157.281, -5.39986, 1.18 ) }
    dend_13 { pt3dadd( 73.4179, 157.898, -4.97936, 1.18 ) }
    dend_13 { pt3dadd( 74.2264, 159.172, -3.96428, 0.44 ) }
    dend_13 { pt3dadd( 74.9173, 160.218, -3.04053, 0.37 ) }
    dend_13 { pt3dadd( 75.2971, 160.821, -2.48823, 0.37 ) }
    dend_13 { pt3dadd( 75.8553, 161.779, -1.65491, 0.66 ) }
    dend_13 { pt3dadd( 77.0467, 163.785, 0.124293, 0.96 ) }
    dend_13 { pt3dadd( 77.2605, 164.141, 0.42263, 0.66 ) }
    dend_13 { pt3dadd( 77.7364, 164.874, 1.02243, 0.29 ) }
    dend_13 { pt3dadd( 78.2672, 165.654, 1.57491, 0.29 ) }
    dend_13 { pt3dadd( 78.679, 166.216, 1.88466, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( 79.6667, 167.417, 2.36825, 0.29 ) }
    dend_13 { pt3dadd( 80.6132, 168.451, 2.66159, 0.44 ) }
    dend_13 { pt3dadd( 81.6399, 169.503, 2.94284, 0.59 ) }
    dend_13 { pt3dadd( 82.8105, 170.649, 3.23029, 0.59 ) }
    dend_13 { pt3dadd( 84.1197, 171.936, 3.53467, 0.66 ) }
    dend_13 { pt3dadd( 84.8628, 172.705, 3.72978, 0.44 ) }
    dend_13 { pt3dadd( 85.5949, 173.542, 3.9541, 0.37 ) }
    dend_13 { pt3dadd( 86.2158, 174.312, 4.19308, 0.52 ) }
    dend_13 { pt3dadd( 86.8133, 175.083, 4.46662, 0.66 ) }
    dend_13 { pt3dadd( 87.3153, 175.746, 4.7389, 0.66 ) }
    dend_13 { pt3dadd( 88.3834, 177.189, 5.38961, 0.59 ) }
    dend_13 { pt3dadd( 89.1118, 178.206, 5.84868, 0.74 ) }
    dend_13 { pt3dadd( 90.0001, 179.489, 6.46625, 0.66 ) }
    dend_13 { pt3dadd( 91.074, 181.145, 7.2729, 0.52 ) }
    dend_13 { pt3dadd( 91.8464, 182.414, 7.90002, 0.59 ) }
    dend_13 { pt3dadd( 92.3619, 183.283, 8.34443, 0.59 ) }
    dend_13 { pt3dadd( 92.899, 184.169, 8.80051, 0.59 ) }
    dend_13 { pt3dadd( 93.7822, 185.547, 9.56252, 0.44 ) }
    dend_13 { pt3dadd( 94.4768, 186.621, 10.1816, 0.29 ) }
    dend_13 { pt3dadd( 95.0768, 187.6, 10.8105, 0.44 ) }
    dend_13 { pt3dadd( 95.7819, 188.682, 11.6014, 0.59 ) }
    dend_13 { pt3dadd( 96.5975, 189.733, 12.4405, 0.74 ) }
    dend_13 { pt3dadd( 97.4039, 190.627, 13.1599, 0.59 ) }
    dend_13 { pt3dadd( 98.3269, 191.579, 13.8578, 0.96 ) }
    dend_13 { pt3dadd( 98.9751, 192.261, 14.3563, 1.11 ) }
    dend_13 { pt3dadd( 100.099, 193.617, 15.2588, 0.59 ) }
    dend_13 { pt3dadd( 101.009, 194.936, 16.0183, 0.52 ) }
    dend_13 { pt3dadd( 101.739, 196.057, 16.5915, 0.52 ) }
    dend_13 { pt3dadd( 102.476, 197.164, 17.0934, 0.66 ) }
    dend_13 { pt3dadd( 103.671, 198.961, 17.8008, 0.74 ) }
    dend_13 { pt3dadd( 104.396, 200.136, 18.2105, 0.74 ) }
    dend_13 { pt3dadd( 105.206, 201.54, 18.6713, 0.29 ) }
    dend_13 { pt3dadd( 106.06, 203.03, 19.1489, 0.29 ) }
    dend_13 { pt3dadd( 106.396, 203.535, 19.3085, 0.29 ) }
    dend_13 { pt3dadd( 107.349, 204.814, 19.6639, 0.29 ) }
    dend_13 { pt3dadd( 108.323, 205.932, 19.9063, 0.52 ) }
    dend_13 { pt3dadd( 108.986, 206.584, 20.061, 0.37 ) }
    dend_13 { pt3dadd( 109.863, 207.339, 20.2617, 0.37 ) }
    dend_13 { pt3dadd( 110.774, 208.051, 20.456, 0.29 ) }
    dend_13 { pt3dadd( 112.239, 209.071, 20.7717, 0.29 ) }
    dend_13 { pt3dadd( 113.342, 209.751, 20.9915, 0.37 ) }
    dend_13 { pt3dadd( 114.277, 210.298, 21.1701, 0.52 ) }
    dend_13 { pt3dadd( 115.001, 210.718, 21.3286, 0.52 ) }
    dend_13 { pt3dadd( 115.919, 211.246, 21.5478, 0.44 ) }
    dend_13 { pt3dadd( 117.348, 212.066, 21.887, 0.44 ) }
    dend_13 { pt3dadd( 118.272, 212.614, 22.0911, 0.59 ) }
    dend_13 { pt3dadd( 119.231, 213.249, 22.2857, 0.74 ) }
    dend_13 { pt3dadd( 120.168, 213.898, 22.5626, 0.74 ) }
    dend_13 { pt3dadd( 121.247, 214.685, 22.9483, 0.52 ) }
    dend_13 { pt3dadd( 122.163, 215.387, 23.2936, 0.37 ) }
    dend_13 { pt3dadd( 123.438, 216.367, 23.7595, 0.29 ) }
    dend_13 { pt3dadd( 124.423, 217.121, 24.1302, 0.29 ) }
    dend_13 { pt3dadd( 126.742, 218.861, 24.9797, 0.66 ) }
    dend_13 { pt3dadd( 127.852, 219.687, 25.3966, 0.44 ) }
    dend_13 { pt3dadd( 128.982, 220.496, 25.8457, 0.52 ) }
    dend_13 { pt3dadd( 129.665, 220.971, 26.1228, 0.52 ) }
    dend_13 { pt3dadd( 130.426, 221.507, 26.4449, 0.37 ) }
    dend_13 { pt3dadd( 131.07, 222.014, 26.7224, 0.37 ) }
    dend_13 { pt3dadd( 131.745, 222.596, 26.9616, 0.44 ) }
    dend_13 { pt3dadd( 132.71, 223.506, 27.3547, 0.74 ) }
    dend_13 { pt3dadd( 133.313, 224.127, 27.6173, 0.88 ) }
    dend_13 { pt3dadd( 134.222, 225.17, 28.0472, 0.74 ) }
    dend_13 { pt3dadd( 134.893, 225.982, 28.3782, 0.52 ) }
    dend_13 { pt3dadd( 135.744, 227.016, 28.7998, 0.37 ) }
    dend_13 { pt3dadd( 136.522, 227.924, 29.1635, 0.22 ) }
    dend_13 { pt3dadd( 137.069, 228.516, 29.393, 0.22 ) }
    dend_13 { pt3dadd( 137.958, 229.396, 29.7362, 0.59 ) }
    dend_13 { pt3dadd( 138.678, 230.022, 30.0251, 0.74 ) }
    dend_13 { pt3dadd( 139.521, 230.623, 30.3945, 0.59 ) }
    dend_13 { pt3dadd( 139.918, 230.857, 30.5861, 0.59 ) }
    dend_13 { pt3dadd( 141.702, 231.8, 31.4765, 0.37 ) }
    dend_13 { pt3dadd( 142.404, 232.166, 31.8234, 0.37 ) }
    dend_13 { pt3dadd( 143.556, 232.745, 32.3283, 0.52 ) }
    dend_13 { pt3dadd( 144.664, 233.274, 32.7176, 0.52 ) }
    dend_13 { pt3dadd( 145.535, 233.646, 32.9386, 0.52 ) }
    dend_13 { pt3dadd( 146.83, 234.115, 33.2601, 0.81 ) }
    dend_13 { pt3dadd( 147.589, 234.357, 33.4478, 0.88 ) }
    dend_13 { pt3dadd( 148.58, 234.644, 33.6742, 0.88 ) }
    dend_13 { pt3dadd( 150.193, 235.063, 33.9944, 0.44 ) }
    dend_13 { pt3dadd( 151.702, 235.404, 34.2929, 0.37 ) }
    dend_13 { pt3dadd( 154.228, 235.906, 34.7977, 0.59 ) }
    dend_13 { pt3dadd( 155.194, 236.062, 34.9944, 0.59 ) }
    dend_13 { pt3dadd( 156.616, 236.269, 35.355, 0.37 ) }
    dend_13 { pt3dadd( 157.646, 236.423, 35.661, 0.29 ) }
    dend_13 { pt3dadd( 158.762, 236.583, 36.0145, 0.29 ) }
    dend_13 { pt3dadd( 160.13, 236.73, 36.3542, 0.29 ) }
    dend_13 { pt3dadd( 161.548, 236.838, 36.5864, 0.29 ) }
    dend_13 { pt3dadd( 163.856, 236.95, 36.962, 0.59 ) }
    dend_13 { pt3dadd( 164.907, 236.999, 37.1443, 0.59 ) }
    dend_13 { pt3dadd( 165.89, 237.044, 37.3154, 0.59 ) }
    dend_13 { pt3dadd( 167.881, 237.092, 37.6158, 0.29 ) }
    dend_13 { pt3dadd( 168.931, 237.105, 37.7377, 0.29 ) }
    dend_13 { pt3dadd( 170.631, 237.145, 37.8711, 0.66 ) }
    dend_13 { pt3dadd( 171.813, 237.177, 37.9125, 0.74 ) }
    dend_13 { pt3dadd( 172.869, 237.207, 37.9427, 0.74 ) }
    dend_13 { pt3dadd( 174.961, 237.325, 37.9399, 0.22 ) }
    dend_13 { pt3dadd( 176.836, 237.514, 37.9013, 0.22 ) }
    dend_13 { pt3dadd( 177.91, 237.658, 37.8269, 0.29 ) }
    dend_13 { pt3dadd( 178.635, 237.792, 37.7382, 0.29 ) }
    dend_13 { pt3dadd( 179.971, 238.131, 37.5469, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( 181.623, 238.748, 37.2963, 0.37 ) }
    dend_13 { pt3dadd( 182.477, 239.188, 37.1635, 0.52 ) }
    dend_13 { pt3dadd( 183.126, 239.575, 37.0684, 0.52 ) }
    dend_13 { pt3dadd( 184.077, 240.173, 36.9483, 0.59 ) }
    dend_13 { pt3dadd( 185.176, 240.828, 36.8358, 0.59 ) }
    dend_13 { pt3dadd( 186.327, 241.394, 36.7846, 0.52 ) }
    dend_13 { pt3dadd( 187.228, 241.731, 36.7924, 0.59 ) }
    dend_13 { pt3dadd( 188.358, 242.06, 36.8109, 0.44 ) }
    dend_13 { pt3dadd( 189.304, 242.282, 36.8254, 0.29 ) }
    dend_13 { pt3dadd( 190.346, 242.495, 36.8989, 0.29 ) }
    dend_13 { pt3dadd( 192.246, 242.954, 37.1268, 0.29 ) }
    dend_13 { pt3dadd( 192.925, 243.137, 37.2311, 0.29 ) }
    dend_13 { pt3dadd( 194.276, 243.557, 37.4673, 0.29 ) }
    dend_13 { pt3dadd( 194.981, 243.811, 37.6002, 0.29 ) }
    dend_13 { pt3dadd( 197.121, 244.685, 37.9682, 0.29 ) }
    dend_13 { pt3dadd( 198.229, 245.195, 38.07, 0.29 ) }
    dend_13 { pt3dadd( 199.651, 245.897, 38.0789, 0.22 ) }
    dend_13 { pt3dadd( 200.347, 246.23, 38.04, 0.44 ) }
    dend_13 { pt3dadd( 201.042, 246.539, 37.9608, 0.44 ) }
    dend_13 { pt3dadd( 202.207, 246.993, 37.7653, 0.29 ) }
    dend_13 { pt3dadd( 204.167, 247.573, 37.3024, 0.22 ) }
    dend_13 { pt3dadd( 205.018, 247.764, 37.1012, 0.22 ) }
    dend_13 { pt3dadd( 205.844, 247.931, 36.9126, 0.44 ) }
    dend_13 { pt3dadd( 206.639, 248.053, 36.7145, 0.44 ) }
    dend_13 { pt3dadd( 207.623, 248.161, 36.4309, 0.37 ) }
    dend_13 { pt3dadd( 208.892, 248.287, 36.039, 0.29 ) }
    dend_13 { pt3dadd( 210.302, 248.442, 35.5716, 0.29 ) }
    dend_13 { pt3dadd( 211.199, 248.583, 35.2316, 0.29 ) }
    dend_13 { pt3dadd( 212.655, 248.897, 34.6149, 0.29 ) }
    dend_13 { pt3dadd( 213.54, 249.159, 34.2111, 0.29 ) }
    dend_13 { pt3dadd( 214.627, 249.572, 33.653, 0.44 ) }
    dend_13 { pt3dadd( 215.616, 249.978, 33.046, 0.37 ) }
    dend_13 { pt3dadd( 216.546, 250.286, 32.3778, 0.52 ) }
    dend_13 { pt3dadd( 217.269, 250.488, 31.8345, 0.52 ) }
    dend_13 { pt3dadd( 217.831, 250.623, 31.4357, 0.66 ) }
    dend_13 { pt3dadd( 219.409, 250.957, 30.3541, 0.96 ) }
    dend_13 { pt3dadd( 220.83, 251.253, 29.4219, 0.81 ) }
    dend_13 { pt3dadd( 222.758, 251.735, 28.2113, 0.29 ) }
    dend_13 { pt3dadd( 223.958, 252.068, 27.3541, 0.29 ) }
    dend_13 { pt3dadd( 225.01, 252.429, 26.5671, 0.29 ) }
    dend_13 { pt3dadd( 225.724, 252.733, 26.096, 0.29 ) }
    dend_13 { pt3dadd( 227.205, 253.361, 25.3871, 0.29 ) }
    dend_13 { pt3dadd( 228.124, 253.709, 25.0449, 0.66 ) }
    dend_13 { pt3dadd( 231.58, 254.725, 23.9276, 0.29 ) }
    dend_13 { pt3dadd( 232.345, 254.854, 23.683, 0.22 ) }
    dend_13 { pt3dadd( 235.292, 255.164, 22.7155, 0.22 ) }
    dend_13 { pt3dadd( 238.192, 255.264, 21.7731, 0.22 ) }
    dend_13 { pt3dadd( 239.472, 255.218, 21.3732, 0.37 ) }
    dend_13 { pt3dadd( 240.758, 255.109, 21.0771, 0.44 ) }
    dend_13 { pt3dadd( 241.317, 255.052, 21.0451, 0.22 ) }
    dend_13 { pt3dadd( 253.081, 263.449, 22.0452, 0.22 ) }
    dend_13 { pt3dadd( 265.525, 270.626, 20.8025, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 52/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -86.5977, 121.665, 84.2977, 0.88 ) }
    dend_9 { pt3dadd( -92.122, 126.67, 90.1326, 0.88 ) }
    dend_9 { pt3dadd( -97.6351, 133.221, 94.328, 0.88 ) }
    dend_9 { pt3dadd( -102.936, 140.941, 96.3712, 0.88 ) }
    dend_9 { pt3dadd( -110.099, 146.37, 99.2846, 0.88 ) }
    dend_9 { pt3dadd( -118.284, 150.49, 101.313, 0.88 ) }
    dend_9 { pt3dadd( -126.416, 154.417, 103.857, 0.88 ) }
    dend_9 { pt3dadd( -134.358, 159.331, 104.992, 0.88 ) }
    dend_9 { pt3dadd( -142.278, 163.458, 107.896, 0.88 ) }
    dend_9 { pt3dadd( -149.254, 168.471, 111.81, 0.88 ) }
    dend_9 { pt3dadd( -154.93, 173.835, 117.183, 0.88 ) }
    dend_9 { pt3dadd( -158.879, 179.245, 123.934, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -86.5977, 121.665, 84.2977, 0.22 ) }
    dend_6 { pt3dadd( -93.4772, 129.443, 93.4908, 0.88 ) }
    dend_6 { pt3dadd( -99.0459, 137.215, 103.541, 0.88 ) }
    dend_6 { pt3dadd( -102.181, 144.396, 114.955, 0.88 ) }
    dend_6 { pt3dadd( -103.399, 152.542, 126.15, 0.88 ) }
    dend_6 { pt3dadd( -102.226, 158.426, 138.569, 0.88 ) }
    dend_6 { pt3dadd( -100.294, 163.716, 151.134, 0.88 ) }
    dend_6 { pt3dadd( -96.7365, 168.013, 163.688, 0.88 ) }
    dend_6 { pt3dadd( -94.8502, 171.125, 176.901, 0.88 ) }
    dend_6 { pt3dadd( -93.4351, 172.171, 190.458, 0.88 ) }
    dend_6 { pt3dadd( -93.8575, 173.102, 204.09, 0.88 ) }
    dend_6 { pt3dadd( -91.8621, 175.133, 217.474, 0.88 ) }
    dend_6 { pt3dadd( -88.3675, 176.5, 230.624, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -130.58, 111.819, -78.1977, 0.29 ) }
    dend_4 { pt3dadd( -130.788, 113.954, -79.5132, 0.29 ) }
    dend_4 { pt3dadd( -131.163, 115.329, -80.3861, 0.29 ) }
    dend_4 { pt3dadd( -131.587, 116.379, -81.0484, 0.37 ) }
    dend_4 { pt3dadd( -131.824, 116.928, -81.376, 0.37 ) }
    dend_4 { pt3dadd( -132.121, 117.702, -81.8635, 0.81 ) }
    dend_4 { pt3dadd( -132.491, 118.666, -82.4783, 0.81 ) }
    dend_4 { pt3dadd( -132.927, 119.53, -83.0328, 0.44 ) }
    dend_4 { pt3dadd( -133.263, 120.105, -83.4066, 0.22 ) }
    dend_4 { pt3dadd( -133.667, 120.741, -83.9048, 0.22 ) }
    dend_4 { pt3dadd( -134.515, 122.15, -85.1701, 0.37 ) }
    dend_4 { pt3dadd( -134.737, 122.547, -85.5655, 0.22 ) }
    dend_4 { pt3dadd( -135.175, 123.345, -86.3577, 0.22 ) }
    dend_4 { pt3dadd( -135.539, 123.983, -86.9759, 0.59 ) }
    dend_4 { pt3dadd( -136.158, 124.931, -87.9677, 0.74 ) }
    dend_4 { pt3dadd( -136.982, 125.949, -89.271, 0.37 ) }
    dend_4 { pt3dadd( -137.71, 126.631, -90.4621, 0.37 ) }
    dend_4 { pt3dadd( -138.233, 127.104, -91.4542, 0.37 ) }
    dend_4 { pt3dadd( -138.75, 127.574, -92.4897, 1.03 ) }
    dend_4 { pt3dadd( -139.647, 128.359, -94.2727, 1.62 ) }
    dend_4 { pt3dadd( -140.918, 129.387, -96.7246, 1.84 ) }
    dend_4 { pt3dadd( -142.63, 130.699, -100.047, 1.33 ) }
    dend_4 { pt3dadd( -143.797, 131.611, -102.39, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( -144.317, 132.056, -103.488, 0.44 ) }
    dend_4 { pt3dadd( -144.813, 132.535, -104.543, 0.44 ) }
    dend_4 { pt3dadd( -145.221, 132.988, -105.353, 0.59 ) }
    dend_4 { pt3dadd( -146.42, 134.434, -107.45, 0.74 ) }
    dend_4 { pt3dadd( -146.799, 134.861, -108.044, 0.74 ) }
    dend_4 { pt3dadd( -147.35, 135.297, -108.819, 0.88 ) }
    dend_4 { pt3dadd( -148.215, 135.776, -109.991, 0.96 ) }
    dend_4 { pt3dadd( -148.992, 136.067, -111.009, 0.52 ) }
    dend_4 { pt3dadd( -149.551, 136.223, -111.666, 0.37 ) }
    dend_4 { pt3dadd( -151.046, 136.545, -113.283, 0.29 ) }
    dend_4 { pt3dadd( -152.21, 136.788, -114.623, 0.29 ) }
    dend_4 { pt3dadd( -153.138, 137.002, -115.72, 0.29 ) }
    dend_4 { pt3dadd( -154.791, 137.493, -117.676, 0.29 ) }
    dend_4 { pt3dadd( -155.463, 137.828, -118.504, 0.29 ) }
    dend_4 { pt3dadd( -156.004, 138.28, -119.235, 0.29 ) }
    dend_4 { pt3dadd( -156.648, 139.154, -120.176, 0.29 ) }
    dend_4 { pt3dadd( -157.041, 139.933, -120.902, 0.52 ) }
    dend_4 { pt3dadd( -157.294, 140.606, -121.498, 0.66 ) }
    dend_4 { pt3dadd( -157.669, 141.662, -122.358, 0.66 ) }
    dend_4 { pt3dadd( -158.146, 142.815, -123.403, 0.44 ) }
    dend_4 { pt3dadd( -158.494, 143.457, -124.079, 0.59 ) }
    dend_4 { pt3dadd( -159.285, 144.788, -125.605, 0.29 ) }
    dend_4 { pt3dadd( -159.852, 145.773, -126.79, 0.29 ) }
    dend_4 { pt3dadd( -160.362, 146.668, -127.839, 0.81 ) }
    dend_4 { pt3dadd( -160.978, 147.806, -129.089, 1.25 ) }
    dend_4 { pt3dadd( -162.252, 150.329, -131.607, 0.44 ) }
    dend_4 { pt3dadd( -163.182, 152.368, -133.437, 0.74 ) }
    dend_4 { pt3dadd( -163.862, 154.023, -134.758, 0.29 ) }
    dend_4 { pt3dadd( -164.246, 155.002, -135.517, 0.29 ) }
    dend_4 { pt3dadd( -164.671, 156.236, -136.427, 0.29 ) }
    dend_4 { pt3dadd( -165.28, 158.412, -137.723, 0.22 ) }
    dend_4 { pt3dadd( -165.559, 159.913, -138.341, 0.22 ) }
    dend_4 { pt3dadd( -165.637, 160.419, -138.483, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -130.58, 111.819, -78.1977, 0.44 ) }
    dend_3 { pt3dadd( -132.043, 113.181, -77.925, 0.44 ) }
    dend_3 { pt3dadd( -132.794, 113.848, -77.7705, 0.52 ) }
    dend_3 { pt3dadd( -133.39, 114.35, -77.6395, 0.59 ) }
    dend_3 { pt3dadd( -134.048, 114.855, -77.5142, 0.59 ) }
    dend_3 { pt3dadd( -134.859, 115.43, -77.3785, 0.37 ) }
    dend_3 { pt3dadd( -135.607, 115.946, -77.28, 0.37 ) }
    dend_3 { pt3dadd( -136.238, 116.365, -77.2089, 0.96 ) }
    dend_3 { pt3dadd( -137.062, 116.88, -77.1784, 1.4 ) }
    dend_3 { pt3dadd( -137.756, 117.314, -77.1934, 1.62 ) }
    dend_3 { pt3dadd( -138.732, 117.981, -77.2797, 0.59 ) }
    dend_3 { pt3dadd( -139.519, 118.576, -77.4449, 0.81 ) }
    dend_3 { pt3dadd( -140.143, 119.077, -77.6228, 0.96 ) }
    dend_3 { pt3dadd( -140.462, 119.346, -77.7301, 1.18 ) }
    dend_3 { pt3dadd( -141.018, 119.854, -77.9303, 0.29 ) }
    dend_3 { pt3dadd( -141.711, 120.521, -78.1682, 0.22 ) }
    dend_3 { pt3dadd( -142.652, 121.391, -78.4759, 0.96 ) }
    dend_3 { pt3dadd( -143.138, 121.796, -78.6204, 0.96 ) }
    dend_3 { pt3dadd( -143.874, 122.34, -78.8463, 0.66 ) }
    dend_3 { pt3dadd( -144.73, 122.869, -79.1287, 0.44 ) }
    dend_3 { pt3dadd( -145.686, 123.334, -79.4786, 0.44 ) }
    dend_3 { pt3dadd( -146.669, 123.75, -79.8628, 0.81 ) }
    dend_3 { pt3dadd( -147.559, 124.119, -80.227, 0.96 ) }
    dend_3 { pt3dadd( -148.587, 124.557, -80.6891, 0.74 ) }
    dend_3 { pt3dadd( -150.072, 125.176, -81.4137, 0.29 ) }
    dend_3 { pt3dadd( -150.979, 125.545, -81.8935, 0.29 ) }
    dend_3 { pt3dadd( -151.601, 125.799, -82.245, 0.44 ) }
    dend_3 { pt3dadd( -152.086, 125.989, -82.5337, 0.66 ) }
    dend_3 { pt3dadd( -152.632, 126.19, -82.8683, 0.52 ) }
    dend_3 { pt3dadd( -153.286, 126.389, -83.268, 0.52 ) }
    dend_3 { pt3dadd( -154.086, 126.555, -83.737, 0.66 ) }
    dend_3 { pt3dadd( -154.95, 126.633, -84.1759, 0.37 ) }
    dend_3 { pt3dadd( -155.758, 126.609, -84.5308, 0.29 ) }
    dend_3 { pt3dadd( -156.403, 126.556, -84.7591, 0.29 ) }
    dend_3 { pt3dadd( -156.901, 126.507, -84.9181, 0.29 ) }
    dend_3 { pt3dadd( -157.801, 126.402, -85.1384, 0.29 ) }
    dend_3 { pt3dadd( -158.452, 126.299, -85.3196, 0.52 ) }
    dend_3 { pt3dadd( -159.086, 126.179, -85.5252, 0.74 ) }
    dend_3 { pt3dadd( -159.931, 125.948, -85.822, 0.74 ) }
    dend_3 { pt3dadd( -161.172, 125.419, -86.352, 0.52 ) }
    dend_3 { pt3dadd( -161.825, 124.969, -86.7135, 1.47 ) }
    dend_3 { pt3dadd( -162.915, 124.013, -87.3922, 1.92 ) }
    dend_3 { pt3dadd( -163.464, 123.487, -87.7643, 1.84 ) }
    dend_3 { pt3dadd( -164.269, 122.697, -88.3505, 0.88 ) }
    dend_3 { pt3dadd( -165.111, 121.944, -89.024, 0.66 ) }
    dend_3 { pt3dadd( -166.276, 121.122, -89.9398, 0.37 ) }
    dend_3 { pt3dadd( -166.965, 120.829, -90.4593, 0.29 ) }
    dend_3 { pt3dadd( -167.71, 120.716, -90.9613, 0.29 ) }
    dend_3 { pt3dadd( -168.558, 120.773, -91.4734, 0.44 ) }
    dend_3 { pt3dadd( -170.056, 121.04, -92.267, 0.59 ) }
    dend_3 { pt3dadd( -171.347, 121.385, -92.9579, 0.66 ) }
    dend_3 { pt3dadd( -172.098, 121.632, -93.3676, 0.66 ) }
    dend_3 { pt3dadd( -172.576, 121.772, -93.6483, 0.44 ) }
    dend_3 { pt3dadd( -173.566, 122.0, -94.2259, 0.37 ) }
    dend_3 { pt3dadd( -174.993, 122.264, -95.0979, 0.37 ) }
    dend_3 { pt3dadd( -176.478, 122.51, -95.961, 0.37 ) }
    dend_3 { pt3dadd( -176.977, 122.593, -96.2497, 0.52 ) }
    dend_3 { pt3dadd( -177.995, 122.733, -96.8209, 0.66 ) }
    dend_3 { pt3dadd( -179.164, 122.88, -97.4344, 0.37 ) }
    dend_3 { pt3dadd( -180.569, 122.926, -98.2287, 0.37 ) }
    dend_3 { pt3dadd( -181.755, 122.858, -98.8827, 0.74 ) }
    dend_3 { pt3dadd( -182.387, 122.775, -99.2004, 0.74 ) }
    dend_3 { pt3dadd( -183.682, 122.57, -99.8544, 0.52 ) }
    dend_3 { pt3dadd( -184.932, 122.362, -100.49, 0.52 ) }
    dend_3 { pt3dadd( -187.89, 121.744, -102.095, 0.52 ) }
    dend_3 { pt3dadd( -188.938, 121.412, -102.709, 0.44 ) }
    dend_3 { pt3dadd( -189.648, 121.106, -103.185, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( -190.343, 120.752, -103.671, 0.29 ) }
    dend_3 { pt3dadd( -191.643, 120.015, -104.578, 0.29 ) }
    dend_3 { pt3dadd( -192.635, 119.475, -105.27, 0.29 ) }
    dend_3 { pt3dadd( -194.345, 118.745, -106.302, 0.52 ) }
    dend_3 { pt3dadd( -195.399, 118.269, -107.029, 0.66 ) }
    dend_3 { pt3dadd( -196.129, 117.88, -107.597, 0.66 ) }
    dend_3 { pt3dadd( -196.642, 117.512, -108.057, 0.52 ) }
    dend_3 { pt3dadd( -197.296, 116.955, -108.68, 0.52 ) }
    dend_3 { pt3dadd( -197.805, 116.552, -109.146, 0.22 ) }
    dend_3 { pt3dadd( -199.7, 115.301, -110.743, 1.18 ) }
    dend_3 { pt3dadd( -200.376, 114.834, -111.328, 1.4 ) }
    dend_3 { pt3dadd( -201.59, 113.869, -112.38, 0.52 ) }
    dend_3 { pt3dadd( -202.028, 113.488, -112.731, 0.29 ) }
    dend_3 { pt3dadd( -202.736, 112.841, -113.189, 0.29 ) }
    dend_3 { pt3dadd( -203.617, 112.068, -113.619, 0.29 ) }
    dend_3 { pt3dadd( -205.397, 110.574, -114.089, 0.44 ) }
    dend_3 { pt3dadd( -206.57, 109.656, -114.236, 0.44 ) }
    dend_3 { pt3dadd( -207.476, 108.957, -114.291, 0.29 ) }
    dend_3 { pt3dadd( -209.253, 107.545, -114.328, 0.52 ) }
    dend_3 { pt3dadd( -210.078, 106.861, -114.291, 0.52 ) }
    dend_3 { pt3dadd( -211.214, 105.91, -114.161, 0.37 ) }
    dend_3 { pt3dadd( -212.412, 104.972, -113.919, 0.29 ) }
    dend_3 { pt3dadd( -214.085, 103.804, -113.561, 0.44 ) }
    dend_3 { pt3dadd( -214.829, 103.35, -113.4, 0.44 ) }
    dend_3 { pt3dadd( -216.068, 102.738, -113.145, 0.22 ) }
    dend_3 { pt3dadd( -217.1, 102.327, -112.967, 0.22 ) }
    dend_3 { pt3dadd( -218.114, 102.023, -112.84, 0.52 ) }
    dend_3 { pt3dadd( -218.496, 101.935, -112.807, 0.52 ) }
    dend_3 { pt3dadd( -220.036, 101.67, -112.707, 0.29 ) }
    dend_3 { pt3dadd( -221.94, 101.417, -112.656, 0.29 ) }
    dend_3 { pt3dadd( -223.411, 101.286, -112.669, 0.22 ) }
    dend_3 { pt3dadd( -225.335, 101.14, -112.716, 0.22 ) }
    dend_3 { pt3dadd( -226.412, 101.056, -112.752, 0.59 ) }
    dend_3 { pt3dadd( -227.521, 100.96, -112.781, 0.44 ) }
    dend_3 { pt3dadd( -228.592, 100.871, -112.784, 0.22 ) }
    dend_3 { pt3dadd( -229.236, 100.825, -112.753, 0.22 ) }
    dend_3 { pt3dadd( -230.079, 100.777, -112.663, 0.37 ) }
    dend_3 { pt3dadd( -230.804, 100.752, -112.539, 0.37 ) }
    dend_3 { pt3dadd( -231.586, 100.741, -112.371, 0.22 ) }
    dend_3 { pt3dadd( -232.618, 100.751, -112.138, 0.22 ) }
    dend_3 { pt3dadd( -233.466, 100.787, -111.955, 0.37 ) }
    dend_3 { pt3dadd( -234.176, 100.843, -111.801, 0.37 ) }
    dend_3 { pt3dadd( -235.036, 100.923, -111.593, 0.37 ) }
    dend_3 { pt3dadd( -235.883, 100.997, -111.375, 0.29 ) }
    dend_3 { pt3dadd( -236.685, 101.069, -111.176, 0.37 ) }
    dend_3 { pt3dadd( -238.714, 101.276, -110.69, 0.22 ) }
    dend_3 { pt3dadd( -240.099, 101.424, -110.355, 0.22 ) }
    dend_3 { pt3dadd( -242.011, 101.636, -109.876, 0.22 ) }
    dend_3 { pt3dadd( -242.798, 101.727, -109.669, 0.22 ) }
    dend_3 { pt3dadd( -243.619, 101.822, -109.44, 0.44 ) }
    dend_3 { pt3dadd( -244.043, 101.869, -109.307, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 51/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -87.1653, 70.7187, 243.144, 0.88 ) }
    dend_62 { pt3dadd( -88.7989, 73.3155, 249.447, 0.88 ) }
    dend_62 { pt3dadd( -90.1521, 75.6304, 255.915, 0.88 ) }
    dend_62 { pt3dadd( -92.488, 77.8587, 262.134, 0.88 ) }
    dend_62 { pt3dadd( -95.007, 80.0215, 268.305, 0.88 ) }
    dend_62 { pt3dadd( -97.1937, 81.9283, 274.674, 0.88 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -87.1653, 70.7187, 243.144, 0.22 ) }
    dend_61 { pt3dadd( -89.4105, 74.3829, 251.915, 0.88 ) }
    dend_61 { pt3dadd( -93.2287, 78.0255, 260.153, 0.88 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 60/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -102.668, 26.7357, 249.04, 0.88 ) }
    dend_59 { pt3dadd( -106.412, 25.2528, 254.628, 0.88 ) }
    dend_59 { pt3dadd( -109.322, 23.9055, 260.717, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 63/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -102.668, 26.7357, 249.04, 0.22 ) }
    dend_58 { pt3dadd( -102.858, 29.2926, 258.711, 0.88 ) }
    dend_58 { pt3dadd( -101.344, 31.7819, 268.281, 0.88 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 66/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -242.436, 162.63, 85.5464, 0.88 ) }
    dend_55 { pt3dadd( -252.575, 162.461, 87.5481, 0.88 ) }
    dend_55 { pt3dadd( -262.875, 163.069, 88.1388, 0.88 ) }
    dend_55 { pt3dadd( -273.008, 164.811, 89.2423, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -242.436, 162.63, 85.5464, 0.22 ) }
    dend_54 { pt3dadd( -248.476, 171.513, 85.6273, 0.88 ) }
    dend_54 { pt3dadd( -254.421, 180.354, 84.1918, 0.88 ) }
    dend_54 { pt3dadd( -259.579, 189.657, 82.3816, 0.88 ) }
    dend_54 { pt3dadd( -263.919, 199.207, 79.7492, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 75/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -90.0088, -206.632, 143.731, 0.88 ) }
    dend_44 { pt3dadd( -92.2987, -214.098, 152.709, 0.88 ) }
    dend_44 { pt3dadd( -95.2046, -221.931, 161.209, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 78/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -90.0088, -206.632, 143.731, 0.22 ) }
    dend_43 { pt3dadd( -92.4659, -214.246, 153.153, 0.88 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -132.905, -227.248, 88.5844, 0.88 ) }
    dend_41 { pt3dadd( -139.565, -236.332, 90.3118, 0.88 ) }
    dend_41 { pt3dadd( -146.362, -245.46, 90.9563, 0.88 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 83/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -132.905, -227.248, 88.5844, 0.22 ) }
    dend_40 { pt3dadd( -138.964, -233.196, 91.3946, 0.88 ) }
    dend_40 { pt3dadd( -144.255, -240.235, 93.3217, 0.88 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.99842, -72.2232, 2.98492, 0.66 ) }
    dend_37 { pt3dadd( 3.63328, -73.7878, 3.17574, 0.66 ) }
    dend_37 { pt3dadd( 4.05935, -74.8782, 3.23078, 0.52 ) }
    dend_37 { pt3dadd( 4.52649, -76.2088, 3.26264, 1.18 ) }
    dend_37 { pt3dadd( 4.73457, -76.9381, 3.29799, 1.62 ) }
    dend_37 { pt3dadd( 4.88772, -77.7021, 3.35626, 1.33 ) }
    dend_37 { pt3dadd( 4.99981, -78.6884, 3.45769, 0.74 ) }
    dend_37 { pt3dadd( 5.05721, -79.8345, 3.50972, 0.44 ) }
    dend_37 { pt3dadd( 5.0758, -80.5501, 3.55694, 0.44 ) }
    dend_37 { pt3dadd( 5.05908, -81.5549, 3.67034, 0.44 ) }
    dend_37 { pt3dadd( 5.06375, -82.5799, 3.79723, 0.52 ) }
    dend_37 { pt3dadd( 5.13234, -83.6054, 3.91742, 0.66 ) }
    dend_37 { pt3dadd( 5.35898, -84.632, 3.98967, 0.44 ) }
    dend_37 { pt3dadd( 5.80803, -85.4735, 4.02268, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_37 { pt3dadd( 6.13077, -85.9006, 4.05777, 0.88 ) }
    dend_37 { pt3dadd( 6.68472, -86.5235, 4.11184, 0.88 ) }
    dend_37 { pt3dadd( 7.01141, -86.8673, 4.13843, 0.96 ) }
    dend_37 { pt3dadd( 7.4099, -87.2841, 4.1666, 0.66 ) }
    dend_37 { pt3dadd( 8.27888, -88.2747, 4.20395, 0.44 ) }
    dend_37 { pt3dadd( 9.12264, -89.3609, 4.1753, 0.52 ) }
    dend_37 { pt3dadd( 9.51694, -89.8894, 4.15115, 0.52 ) }
    dend_37 { pt3dadd( 10.175, -90.7475, 4.10465, 0.74 ) }
    dend_37 { pt3dadd( 10.6388, -91.3198, 4.05381, 0.96 ) }
    dend_37 { pt3dadd( 11.1513, -91.8987, 3.96458, 0.96 ) }
    dend_37 { pt3dadd( 11.9428, -92.6805, 3.75224, 0.59 ) }
    dend_37 { pt3dadd( 12.8126, -93.3657, 3.52462, 0.59 ) }
    dend_37 { pt3dadd( 13.8286, -94.0918, 3.31486, 0.88 ) }
    dend_37 { pt3dadd( 14.1796, -94.3423, 3.25652, 0.88 ) }
    dend_37 { pt3dadd( 14.6538, -94.7114, 3.18662, 0.88 ) }
    dend_37 { pt3dadd( 15.2526, -95.2325, 3.10675, 0.74 ) }
    dend_37 { pt3dadd( 16.1416, -96.1071, 2.96286, 0.74 ) }
    dend_37 { pt3dadd( 16.8918, -96.9656, 2.78183, 0.74 ) }
    dend_37 { pt3dadd( 17.6276, -97.9264, 2.56773, 0.81 ) }
    dend_37 { pt3dadd( 18.1434, -98.6587, 2.41695, 0.96 ) }
    dend_37 { pt3dadd( 18.5006, -99.2197, 2.30244, 0.96 ) }
    dend_37 { pt3dadd( 18.8936, -99.9074, 2.15646, 0.88 ) }
    dend_37 { pt3dadd( 19.3216, -100.762, 1.9616, 0.88 ) }
    dend_37 { pt3dadd( 19.4655, -101.05, 1.89385, 1.11 ) }
    dend_37 { pt3dadd( 19.8834, -101.923, 1.64774, 0.74 ) }
    dend_37 { pt3dadd( 20.1979, -102.587, 1.43097, 0.74 ) }
    dend_37 { pt3dadd( 20.522, -103.252, 1.2115, 0.66 ) }
    dend_37 { pt3dadd( 21.0346, -104.355, 0.875695, 0.44 ) }
    dend_37 { pt3dadd( 21.3831, -105.147, 0.669235, 1.03 ) }
    dend_37 { pt3dadd( 21.8605, -106.292, 0.423365, 0.81 ) }
    dend_37 { pt3dadd( 22.2472, -107.266, 0.233345, 0.59 ) }
    dend_37 { pt3dadd( 22.6942, -108.434, 0.0373087, 0.74 ) }
    dend_37 { pt3dadd( 23.0051, -109.298, -0.0975843, 0.59 ) }
    dend_37 { pt3dadd( 23.2672, -110.065, -0.170276, 0.59 ) }
    dend_37 { pt3dadd( 23.629, -111.245, -0.203079, 0.44 ) }
    dend_37 { pt3dadd( 23.8661, -112.136, -0.167987, 0.37 ) }
    dend_37 { pt3dadd( 24.1079, -113.259, -0.102687, 0.74 ) }
    dend_37 { pt3dadd( 24.2611, -114.108, -0.0588435, 0.88 ) }
    dend_37 { pt3dadd( 24.5428, -115.616, 0.0266982, 0.88 ) }
    dend_37 { pt3dadd( 24.6739, -116.238, 0.0782724, 0.74 ) }
    dend_37 { pt3dadd( 24.9573, -117.422, 0.211494, 0.66 ) }
    dend_37 { pt3dadd( 25.1975, -118.287, 0.328133, 0.74 ) }
    dend_37 { pt3dadd( 25.555, -119.353, 0.471386, 0.74 ) }
    dend_37 { pt3dadd( 25.8321, -120.07, 0.551416, 0.74 ) }
    dend_37 { pt3dadd( 26.3715, -121.378, 0.636991, 0.52 ) }
    dend_37 { pt3dadd( 26.6178, -121.967, 0.657893, 0.52 ) }
    dend_37 { pt3dadd( 26.9914, -122.876, 0.738749, 0.29 ) }
    dend_37 { pt3dadd( 27.2966, -123.631, 0.83932, 0.59 ) }
    dend_37 { pt3dadd( 27.5258, -124.192, 0.923935, 0.74 ) }
    dend_37 { pt3dadd( 27.8411, -124.975, 1.04997, 0.44 ) }
    dend_37 { pt3dadd( 28.2267, -125.947, 1.21093, 0.37 ) }
    dend_37 { pt3dadd( 28.9195, -127.672, 1.55421, 0.37 ) }
    dend_37 { pt3dadd( 29.2187, -128.415, 1.73946, 0.52 ) }
    dend_37 { pt3dadd( 29.51, -129.13, 1.97483, 0.59 ) }
    dend_37 { pt3dadd( 29.8195, -129.906, 2.29282, 0.74 ) }
    dend_37 { pt3dadd( 30.0249, -130.454, 2.55655, 1.18 ) }
    dend_37 { pt3dadd( 30.1507, -130.841, 2.75167, 1.18 ) }
    dend_37 { pt3dadd( 30.4364, -131.958, 3.28508, 0.74 ) }
    dend_37 { pt3dadd( 30.6836, -133.27, 3.9462, 0.52 ) }
    dend_37 { pt3dadd( 30.8113, -134.306, 4.47113, 0.44 ) }
    dend_37 { pt3dadd( 30.8932, -135.57, 5.08497, 0.59 ) }
    dend_37 { pt3dadd( 30.8967, -136.607, 5.55344, 0.44 ) }
    dend_37 { pt3dadd( 30.8632, -137.293, 5.81908, 0.44 ) }
    dend_37 { pt3dadd( 30.7666, -138.271, 6.10944, 0.59 ) }
    dend_37 { pt3dadd( 30.6808, -138.967, 6.24556, 0.59 ) }
    dend_37 { pt3dadd( 30.604, -139.549, 6.30976, 0.59 ) }
    dend_37 { pt3dadd( 30.4306, -140.681, 6.34456, 0.66 ) }
    dend_37 { pt3dadd( 30.3087, -141.493, 6.33256, 0.59 ) }
    dend_37 { pt3dadd( 30.1935, -142.396, 6.29088, 0.52 ) }
    dend_37 { pt3dadd( 30.1283, -143.001, 6.2463, 0.66 ) }
    dend_37 { pt3dadd( 30.043, -143.952, 6.17142, 0.66 ) }
    dend_37 { pt3dadd( 29.9589, -145.117, 6.09715, 0.52 ) }
    dend_37 { pt3dadd( 29.8988, -146.014, 6.0505, 0.74 ) }
    dend_37 { pt3dadd( 29.8414, -146.776, 6.03029, 0.88 ) }
    dend_37 { pt3dadd( 29.7437, -147.913, 6.03025, 0.96 ) }
    dend_37 { pt3dadd( 29.6299, -149.217, 6.06001, 0.88 ) }
    dend_37 { pt3dadd( 29.5585, -150.128, 6.10043, 0.88 ) }
    dend_37 { pt3dadd( 29.4807, -150.85, 6.11593, 0.81 ) }
    dend_37 { pt3dadd( 29.3338, -151.76, 6.12227, 0.66 ) }
    dend_37 { pt3dadd( 29.1999, -152.457, 6.14459, 0.66 ) }
    dend_37 { pt3dadd( 29.0709, -153.132, 6.19645, 0.44 ) }
    dend_37 { pt3dadd( 28.9237, -154.025, 6.31144, 0.44 ) }
    dend_37 { pt3dadd( 28.7703, -155.352, 6.58713, 0.44 ) }
    dend_37 { pt3dadd( 28.7401, -156.376, 6.89224, 0.44 ) }
    dend_37 { pt3dadd( 28.84, -157.445, 7.35507, 0.66 ) }
    dend_37 { pt3dadd( 28.9926, -158.077, 7.70586, 0.81 ) }
    dend_37 { pt3dadd( 29.2757, -158.833, 8.204, 0.96 ) }
    dend_37 { pt3dadd( 29.7394, -159.781, 8.88481, 0.66 ) }
    dend_37 { pt3dadd( 30.2455, -160.708, 9.57938, 0.59 ) }
    dend_37 { pt3dadd( 30.8189, -161.751, 10.3375, 0.96 ) }
    dend_37 { pt3dadd( 31.2105, -162.538, 10.86, 0.96 ) }
    dend_37 { pt3dadd( 31.5027, -163.227, 11.27, 0.96 ) }
    dend_37 { pt3dadd( 31.7186, -163.915, 11.618, 0.66 ) }
    dend_37 { pt3dadd( 31.8651, -164.738, 11.9381, 0.44 ) }
    dend_37 { pt3dadd( 31.8848, -165.513, 12.1663, 0.37 ) }
    dend_37 { pt3dadd( 31.8357, -166.107, 12.2778, 0.37 ) }
    dend_37 { pt3dadd( 31.7206, -167.013, 12.3908, 0.29 ) }
    dend_37 { pt3dadd( 31.5699, -168.013, 12.4769, 0.29 ) }
    dend_37 { pt3dadd( 31.4112, -169.053, 12.5425, 0.37 ) }
    dend_37 { pt3dadd( 31.2791, -170.02, 12.5846, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_37 { pt3dadd( 31.1567, -171.072, 12.6358, 0.29 ) }
    dend_37 { pt3dadd( 31.0378, -172.132, 12.7019, 0.29 ) }
    dend_37 { pt3dadd( 30.9207, -173.238, 12.782, 0.29 ) }
    dend_37 { pt3dadd( 30.8842, -173.702, 12.815, 0.44 ) }
    dend_37 { pt3dadd( 30.8444, -174.46, 12.8661, 0.52 ) }
    dend_37 { pt3dadd( 30.8042, -175.586, 12.942, 0.37 ) }
    dend_37 { pt3dadd( 30.7644, -176.691, 13.0287, 1.03 ) }
    dend_37 { pt3dadd( 30.7492, -177.246, 13.0591, 1.03 ) }
    dend_37 { pt3dadd( 30.7584, -177.915, 13.0674, 0.74 ) }
    dend_37 { pt3dadd( 30.7978, -178.753, 13.0547, 0.59 ) }
    dend_37 { pt3dadd( 30.8376, -179.238, 13.0429, 0.81 ) }
    dend_37 { pt3dadd( 30.8854, -179.848, 13.0329, 0.81 ) }
    dend_37 { pt3dadd( 30.9879, -181.001, 13.0844, 0.37 ) }
    dend_37 { pt3dadd( 31.0379, -181.845, 13.1858, 0.37 ) }
    dend_37 { pt3dadd( 31.0373, -182.496, 13.336, 0.37 ) }
    dend_37 { pt3dadd( 30.9311, -183.444, 13.7038, 0.29 ) }
    dend_37 { pt3dadd( 30.7739, -184.036, 14.0239, 0.44 ) }
    dend_37 { pt3dadd( 30.4829, -184.699, 14.4726, 0.59 ) }
    dend_37 { pt3dadd( 30.2085, -185.199, 14.8468, 0.74 ) }
    dend_37 { pt3dadd( 29.9989, -185.579, 15.0975, 0.74 ) }
    dend_37 { pt3dadd( 29.5916, -186.38, 15.5344, 0.22 ) }
    dend_37 { pt3dadd( 29.3286, -187.09, 15.7957, 0.22 ) }
    dend_37 { pt3dadd( 29.2281, -187.665, 15.9045, 0.66 ) }
    dend_37 { pt3dadd( 29.2206, -188.492, 15.9354, 0.29 ) }
    dend_37 { pt3dadd( 29.3504, -189.514, 15.8934, 0.59 ) }
    dend_37 { pt3dadd( 29.427, -189.88, 15.8578, 0.44 ) }
    dend_37 { pt3dadd( 29.672, -190.638, 15.7351, 0.29 ) }
    dend_37 { pt3dadd( 29.8579, -191.07, 15.6456, 0.22 ) }
    dend_37 { pt3dadd( 30.2896, -191.919, 15.443, 0.22 ) }
    dend_37 { pt3dadd( 30.545, -192.379, 15.3261, 0.22 ) }
    dend_37 { pt3dadd( 34.4208, -201.889, 14.922, 0.22 ) }
    dend_37 { pt3dadd( 39.2559, -210.909, 14.7523, 0.22 ) }
    dend_37 { pt3dadd( 43.0788, -220.206, 16.798, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 33/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.99842, -72.2232, 2.98492, 1.03 ) }
    dend_28 { pt3dadd( 3.4699, -73.3134, 1.81693, 1.03 ) }
    dend_28 { pt3dadd( 4.4902, -75.0871, -0.27674, 0.66 ) }
    dend_28 { pt3dadd( 5.04135, -75.8472, -1.22822, 0.66 ) }
    dend_28 { pt3dadd( 5.82085, -76.788, -2.48664, 0.66 ) }
    dend_28 { pt3dadd( 6.99862, -78.1291, -4.14652, 1.11 ) }
    dend_28 { pt3dadd( 7.56704, -78.7604, -4.85935, 1.18 ) }
    dend_28 { pt3dadd( 8.30791, -79.4886, -5.59292, 0.96 ) }
    dend_28 { pt3dadd( 9.42564, -80.4213, -6.37221, 0.81 ) }
    dend_28 { pt3dadd( 11.4849, -81.9173, -7.49386, 0.81 ) }
    dend_28 { pt3dadd( 13.0832, -82.9383, -8.12922, 0.74 ) }
    dend_28 { pt3dadd( 14.3285, -83.6529, -8.44245, 0.96 ) }
    dend_28 { pt3dadd( 15.9602, -84.4742, -8.74909, 0.96 ) }
    dend_28 { pt3dadd( 16.6071, -84.7352, -8.8592, 0.96 ) }
    dend_28 { pt3dadd( 17.5689, -84.9859, -9.02203, 0.81 ) }
    dend_28 { pt3dadd( 18.7286, -85.1425, -9.24127, 0.81 ) }
    dend_28 { pt3dadd( 20.55, -85.2688, -9.7064, 0.74 ) }
    dend_28 { pt3dadd( 21.8931, -85.3261, -10.1313, 0.96 ) }
    dend_28 { pt3dadd( 23.4841, -85.4332, -10.6835, 0.96 ) }
    dend_28 { pt3dadd( 24.8961, -85.6133, -11.1679, 0.74 ) }
    dend_28 { pt3dadd( 26.4424, -85.9246, -11.6383, 0.88 ) }
    dend_28 { pt3dadd( 27.6936, -86.2676, -11.9535, 1.03 ) }
    dend_28 { pt3dadd( 29.058, -86.7681, -12.188, 1.03 ) }
    dend_28 { pt3dadd( 30.3667, -87.4063, -12.2167, 0.88 ) }
    dend_28 { pt3dadd( 31.3346, -88.0057, -12.1196, 0.66 ) }
    dend_28 { pt3dadd( 32.5983, -88.9196, -11.9917, 1.03 ) }
    dend_28 { pt3dadd( 33.3783, -89.5299, -11.9385, 1.03 ) }
    dend_28 { pt3dadd( 34.1123, -90.1217, -11.9688, 0.81 ) }
    dend_28 { pt3dadd( 35.736, -91.4551, -12.0941, 0.59 ) }
    dend_28 { pt3dadd( 36.7895, -92.3158, -12.2655, 0.74 ) }
    dend_28 { pt3dadd( 38.3778, -93.5819, -12.5634, 0.74 ) }
    dend_28 { pt3dadd( 39.3028, -94.3061, -12.7412, 0.88 ) }
    dend_28 { pt3dadd( 40.8494, -95.4877, -12.9838, 0.66 ) }
    dend_28 { pt3dadd( 42.2321, -96.5281, -13.1581, 0.96 ) }
    dend_28 { pt3dadd( 43.1511, -97.2114, -13.224, 1.11 ) }
    dend_28 { pt3dadd( 44.033, -97.8521, -13.2085, 1.11 ) }
    dend_28 { pt3dadd( 45.4832, -98.8531, -13.0808, 0.81 ) }
    dend_28 { pt3dadd( 46.9746, -99.7928, -12.9051, 0.74 ) }
    dend_28 { pt3dadd( 48.5069, -100.66, -12.7175, 0.66 ) }
    dend_28 { pt3dadd( 50.2567, -101.584, -12.595, 0.88 ) }
    dend_28 { pt3dadd( 51.3369, -102.181, -12.5622, 1.03 ) }
    dend_28 { pt3dadd( 52.4065, -102.857, -12.5963, 1.03 ) }
    dend_28 { pt3dadd( 53.6657, -103.812, -12.7144, 0.81 ) }
    dend_28 { pt3dadd( 54.4629, -104.594, -12.8685, 0.81 ) }
    dend_28 { pt3dadd( 55.4209, -105.784, -13.1914, 0.81 ) }
    dend_28 { pt3dadd( 56.4067, -107.295, -13.6921, 0.88 ) }
    dend_28 { pt3dadd( 57.223, -108.648, -14.1314, 1.03 ) }
    dend_28 { pt3dadd( 57.829, -109.705, -14.4602, 0.88 ) }
    dend_28 { pt3dadd( 58.6683, -111.091, -14.9024, 0.66 ) }
    dend_28 { pt3dadd( 59.3143, -111.973, -15.142, 0.66 ) }
    dend_28 { pt3dadd( 60.1336, -112.765, -15.3042, 0.59 ) }
    dend_28 { pt3dadd( 61.4198, -113.588, -15.4017, 0.88 ) }
    dend_28 { pt3dadd( 61.9888, -113.868, -15.4147, 0.88 ) }
    dend_28 { pt3dadd( 63.2684, -114.453, -15.4558, 0.59 ) }
    dend_28 { pt3dadd( 64.2033, -114.91, -15.4852, 0.74 ) }
    dend_28 { pt3dadd( 65.0118, -115.37, -15.5613, 0.81 ) }
    dend_28 { pt3dadd( 66.0797, -116.078, -15.7941, 0.74 ) }
    dend_28 { pt3dadd( 67.1015, -116.848, -16.1346, 0.59 ) }
    dend_28 { pt3dadd( 68.5252, -118.023, -16.7213, 0.59 ) }
    dend_28 { pt3dadd( 69.2853, -118.698, -17.0779, 0.88 ) }
    dend_28 { pt3dadd( 70.047, -119.418, -17.4826, 1.03 ) }
    dend_28 { pt3dadd( 71.3018, -120.7, -18.2054, 0.66 ) }
    dend_28 { pt3dadd( 72.1026, -121.576, -18.7019, 0.59 ) }
    dend_28 { pt3dadd( 73.0959, -122.674, -19.3445, 2.06 ) }
    dend_28 { pt3dadd( 73.7809, -123.405, -19.7749, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -18.2877, -62.0276, 1.29832, 1.25 ) }
    dend_26 { pt3dadd( -19.201, -61.8775, 1.42981, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_26 { pt3dadd( -20.2207, -61.8277, 1.56891, 0.66 ) }
    dend_26 { pt3dadd( -20.6861, -61.8412, 1.63231, 0.66 ) }
    dend_26 { pt3dadd( -21.3343, -61.8904, 1.70937, 0.81 ) }
    dend_26 { pt3dadd( -21.9853, -61.949, 1.77071, 0.81 ) }
    dend_26 { pt3dadd( -22.8233, -62.0083, 1.84905, 0.44 ) }
    dend_26 { pt3dadd( -23.3521, -62.0691, 1.87702, 0.44 ) }
    dend_26 { pt3dadd( -23.8134, -62.0934, 1.89795, 0.59 ) }
    dend_26 { pt3dadd( -24.1657, -62.0639, 1.90214, 0.74 ) }
    dend_26 { pt3dadd( -24.6533, -61.9532, 1.89907, 0.74 ) }
    dend_26 { pt3dadd( -25.1772, -61.8132, 1.863, 0.66 ) }
    dend_26 { pt3dadd( -25.542, -61.7239, 1.83305, 0.52 ) }
    dend_26 { pt3dadd( -26.2717, -61.5915, 1.76392, 0.52 ) }
    dend_26 { pt3dadd( -26.945, -61.5185, 1.70464, 0.52 ) }
    dend_26 { pt3dadd( -27.7169, -61.4801, 1.66741, 0.66 ) }
    dend_26 { pt3dadd( -28.5913, -61.4745, 1.6722, 0.88 ) }
    dend_26 { pt3dadd( -29.3973, -61.4863, 1.70663, 1.03 ) }
    dend_26 { pt3dadd( -29.9652, -61.4915, 1.74648, 1.03 ) }
    dend_26 { pt3dadd( -30.6141, -61.4741, 1.80014, 0.96 ) }
    dend_26 { pt3dadd( -31.2044, -61.4206, 1.86072, 0.74 ) }
    dend_26 { pt3dadd( -32.015, -61.2897, 1.93983, 0.59 ) }
    dend_26 { pt3dadd( -32.4869, -61.2019, 1.98779, 0.59 ) }
    dend_26 { pt3dadd( -33.2788, -61.0773, 2.06747, 0.74 ) }
    dend_26 { pt3dadd( -33.9656, -60.992, 2.12797, 0.74 ) }
    dend_26 { pt3dadd( -34.691, -60.9368, 2.16411, 0.52 ) }
    dend_26 { pt3dadd( -35.3094, -60.9349, 2.17817, 0.59 ) }
    dend_26 { pt3dadd( -36.1091, -61.0201, 2.18986, 0.59 ) }
    dend_26 { pt3dadd( -36.8315, -61.1549, 2.22102, 0.74 ) }
    dend_26 { pt3dadd( -37.5739, -61.3294, 2.28129, 0.74 ) }
    dend_26 { pt3dadd( -38.185, -61.4787, 2.34807, 0.74 ) }
    dend_26 { pt3dadd( -39.0481, -61.6595, 2.45408, 0.74 ) }
    dend_26 { pt3dadd( -39.8932, -61.801, 2.57269, 0.74 ) }
    dend_26 { pt3dadd( -40.8093, -61.9289, 2.7202, 0.88 ) }
    dend_26 { pt3dadd( -41.3013, -61.9861, 2.79798, 0.88 ) }
    dend_26 { pt3dadd( -42.1246, -62.0699, 2.88406, 0.96 ) }
    dend_26 { pt3dadd( -43.0659, -62.1388, 2.9385, 0.96 ) }
    dend_26 { pt3dadd( -43.9374, -62.1849, 2.95658, 0.66 ) }
    dend_26 { pt3dadd( -44.526, -62.2374, 2.95799, 0.59 ) }
    dend_26 { pt3dadd( -45.4585, -62.4009, 2.95129, 0.59 ) }
    dend_26 { pt3dadd( -46.839, -62.7539, 2.9478, 0.81 ) }
    dend_26 { pt3dadd( -47.5947, -63.0012, 2.94203, 0.96 ) }
    dend_26 { pt3dadd( -48.6065, -63.3759, 2.94192, 0.96 ) }
    dend_26 { pt3dadd( -49.9355, -63.8907, 2.97117, 0.96 ) }
    dend_26 { pt3dadd( -50.928, -64.2732, 3.03002, 0.96 ) }
    dend_26 { pt3dadd( -51.6783, -64.5525, 3.11254, 0.96 ) }
    dend_26 { pt3dadd( -52.3591, -64.7737, 3.21757, 0.81 ) }
    dend_26 { pt3dadd( -53.0714, -64.9476, 3.3116, 0.88 ) }
    dend_26 { pt3dadd( -53.7991, -65.0396, 3.39004, 0.88 ) }
    dend_26 { pt3dadd( -54.4715, -65.051, 3.44782, 0.66 ) }
    dend_26 { pt3dadd( -54.9845, -65.0442, 3.48438, 0.66 ) }
    dend_26 { pt3dadd( -55.5072, -65.0631, 3.51883, 0.59 ) }
    dend_26 { pt3dadd( -56.0407, -65.1451, 3.56166, 0.59 ) }
    dend_26 { pt3dadd( -56.7363, -65.3616, 3.619, 0.81 ) }
    dend_26 { pt3dadd( -57.2938, -65.5827, 3.67655, 0.81 ) }
    dend_26 { pt3dadd( -58.0894, -65.9022, 3.76257, 0.52 ) }
    dend_26 { pt3dadd( -58.8422, -66.166, 3.84595, 0.66 ) }
    dend_26 { pt3dadd( -59.5491, -66.3586, 3.9244, 0.66 ) }
    dend_26 { pt3dadd( -60.4566, -66.5052, 4.03598, 0.66 ) }
    dend_26 { pt3dadd( -61.2581, -66.5408, 4.13673, 0.88 ) }
    dend_26 { pt3dadd( -62.1084, -66.5012, 4.24893, 0.88 ) }
    dend_26 { pt3dadd( -62.8253, -66.4282, 4.34813, 0.81 ) }
    dend_26 { pt3dadd( -63.6089, -66.3525, 4.40893, 0.88 ) }
    dend_26 { pt3dadd( -64.4694, -66.3021, 4.40074, 1.03 ) }
    dend_26 { pt3dadd( -65.1416, -66.3004, 4.34557, 1.03 ) }
    dend_26 { pt3dadd( -65.8657, -66.358, 4.2174, 0.81 ) }
    dend_26 { pt3dadd( -66.5068, -66.4666, 4.0617, 0.81 ) }
    dend_26 { pt3dadd( -67.9246, -66.8956, 3.58047, 0.44 ) }
    dend_26 { pt3dadd( -68.7653, -67.2551, 3.21429, 0.66 ) }
    dend_26 { pt3dadd( -69.3619, -67.5713, 2.91963, 0.81 ) }
    dend_26 { pt3dadd( -70.1533, -68.0425, 2.49243, 1.03 ) }
    dend_26 { pt3dadd( -70.5002, -68.2603, 2.30299, 1.11 ) }
    dend_26 { pt3dadd( -71.4791, -68.8258, 1.83064, 0.37 ) }
    dend_26 { pt3dadd( -72.146, -69.1331, 1.59686, 0.37 ) }
    dend_26 { pt3dadd( -72.6375, -69.3251, 1.46307, 1.69 ) }
    dend_26 { pt3dadd( -73.2957, -69.5453, 1.32773, 2.06 ) }
    dend_26 { pt3dadd( -73.7346, -69.6723, 1.27719, 2.06 ) }
    dend_26 { pt3dadd( -75.0067, -70.0087, 1.20917, 0.59 ) }
    dend_26 { pt3dadd( -76.0928, -70.2576, 1.22118, 0.44 ) }
    dend_26 { pt3dadd( -77.2352, -70.4866, 1.27431, 0.52 ) }
    dend_26 { pt3dadd( -77.8436, -70.5892, 1.31975, 0.74 ) }
    dend_26 { pt3dadd( -78.6346, -70.7062, 1.39926, 0.88 ) }
    dend_26 { pt3dadd( -79.45, -70.8213, 1.49463, 0.66 ) }
    dend_26 { pt3dadd( -79.7195, -70.8579, 1.5439, 0.44 ) }
    dend_26 { pt3dadd( -80.3339, -70.9215, 1.68675, 0.37 ) }
    dend_26 { pt3dadd( -81.0129, -70.9385, 1.88287, 0.96 ) }
    dend_26 { pt3dadd( -81.8129, -70.9237, 2.17791, 1.62 ) }
    dend_26 { pt3dadd( -82.4953, -70.9169, 2.48729, 1.77 ) }
    dend_26 { pt3dadd( -83.2662, -70.9305, 2.87689, 1.77 ) }
    dend_26 { pt3dadd( -83.9721, -70.9732, 3.25143, 1.11 ) }
    dend_26 { pt3dadd( -84.6231, -71.0302, 3.60722, 0.66 ) }
    dend_26 { pt3dadd( -85.3742, -71.087, 4.00809, 0.52 ) }
    dend_26 { pt3dadd( -86.2598, -71.1216, 4.51276, 0.44 ) }
    dend_26 { pt3dadd( -86.9076, -71.1232, 4.86473, 0.44 ) }
    dend_26 { pt3dadd( -87.3955, -71.1166, 5.10558, 0.59 ) }
    dend_26 { pt3dadd( -87.829, -71.1137, 5.30744, 0.59 ) }
    dend_26 { pt3dadd( -88.4226, -71.1244, 5.55687, 0.44 ) }
    dend_26 { pt3dadd( -89.6987, -71.1775, 6.06524, 0.74 ) }
    dend_26 { pt3dadd( -90.3167, -71.2082, 6.31457, 0.81 ) }
    dend_26 { pt3dadd( -90.9963, -71.2529, 6.57692, 0.81 ) }
    dend_26 { pt3dadd( -91.7245, -71.3094, 6.82539, 0.96 ) }
    dend_26 { pt3dadd( -92.4522, -71.3797, 7.00502, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_26 { pt3dadd( -93.0815, -71.4433, 7.10587, 1.11 ) }
    dend_26 { pt3dadd( -93.6787, -71.4917, 7.12977, 0.81 ) }
    dend_26 { pt3dadd( -94.6138, -71.5453, 7.11663, 0.59 ) }
    dend_26 { pt3dadd( -95.3566, -71.5545, 7.07756, 1.18 ) }
    dend_26 { pt3dadd( -96.3914, -71.5309, 7.00022, 1.47 ) }
    dend_26 { pt3dadd( -96.9254, -71.5125, 6.95958, 1.62 ) }
    dend_26 { pt3dadd( -97.2598, -71.4915, 6.92253, 1.62 ) }
    dend_26 { pt3dadd( -97.8183, -71.4332, 6.85682, 1.11 ) }
    dend_26 { pt3dadd( -98.4573, -71.3313, 6.82012, 0.66 ) }
    dend_26 { pt3dadd( -99.1015, -71.1694, 6.8319, 0.44 ) }
    dend_26 { pt3dadd( -99.859, -70.909, 6.89777, 0.37 ) }
    dend_26 { pt3dadd( -100.688, -70.5682, 6.98609, 0.37 ) }
    dend_26 { pt3dadd( -101.208, -70.3237, 7.06082, 0.37 ) }
    dend_26 { pt3dadd( -101.928, -69.9469, 7.19259, 0.44 ) }
    dend_26 { pt3dadd( -102.895, -69.4375, 7.36795, 0.74 ) }
    dend_26 { pt3dadd( -103.361, -69.1999, 7.44124, 1.18 ) }
    dend_26 { pt3dadd( -103.772, -69.0016, 7.49502, 1.33 ) }
    dend_26 { pt3dadd( -104.272, -68.7776, 7.55672, 1.33 ) }
    dend_26 { pt3dadd( -104.889, -68.487, 7.60578, 0.81 ) }
    dend_26 { pt3dadd( -105.712, -68.0654, 7.65469, 0.29 ) }
    dend_26 { pt3dadd( -106.283, -67.7565, 7.69293, 0.29 ) }
    dend_26 { pt3dadd( -107.162, -67.2596, 7.76293, 0.37 ) }
    dend_26 { pt3dadd( -107.727, -66.9222, 7.82327, 0.44 ) }
    dend_26 { pt3dadd( -108.56, -66.4651, 7.83621, 0.44 ) }
    dend_26 { pt3dadd( -109.575, -65.9534, 7.80628, 1.4 ) }
    dend_26 { pt3dadd( -110.167, -65.6664, 7.77749, 1.92 ) }
    dend_26 { pt3dadd( -110.425, -65.5482, 7.7591, 2.28 ) }
    dend_26 { pt3dadd( -110.998, -65.3128, 7.69645, 2.28 ) }
    dend_26 { pt3dadd( -113.345, -64.407, 7.36572, 0.29 ) }
    dend_26 { pt3dadd( -113.754, -64.2516, 7.29311, 0.52 ) }
    dend_26 { pt3dadd( -114.268, -64.0525, 7.1859, 0.52 ) }
    dend_26 { pt3dadd( -114.837, -63.8293, 7.08016, 0.74 ) }
    dend_26 { pt3dadd( -115.319, -63.637, 6.99242, 0.74 ) }
    dend_26 { pt3dadd( -115.96, -63.3898, 6.86927, 0.44 ) }
    dend_26 { pt3dadd( -116.661, -63.1177, 6.76119, 0.37 ) }
    dend_26 { pt3dadd( -117.277, -62.8989, 6.62734, 0.81 ) }
    dend_26 { pt3dadd( -117.718, -62.7557, 6.51077, 0.96 ) }
    dend_26 { pt3dadd( -118.382, -62.5478, 6.2967, 0.96 ) }
    dend_26 { pt3dadd( -119.192, -62.3131, 5.99505, 0.66 ) }
    dend_26 { pt3dadd( -119.875, -62.1425, 5.71617, 0.29 ) }
    dend_26 { pt3dadd( -120.636, -61.9647, 5.41818, 0.66 ) }
    dend_26 { pt3dadd( -121.115, -61.8504, 5.24711, 0.66 ) }
    dend_26 { pt3dadd( -122.111, -61.6138, 4.94913, 0.52 ) }
    dend_26 { pt3dadd( -122.755, -61.4456, 4.81175, 0.74 ) }
    dend_26 { pt3dadd( -124.098, -61.0742, 4.59521, 0.88 ) }
    dend_26 { pt3dadd( -124.739, -60.8844, 4.49186, 1.11 ) }
    dend_26 { pt3dadd( -125.194, -60.7433, 4.41885, 1.33 ) }
    dend_26 { pt3dadd( -125.965, -60.4676, 4.30529, 0.44 ) }
    dend_26 { pt3dadd( -126.768, -60.1142, 4.21216, 0.44 ) }
    dend_26 { pt3dadd( -127.487, -59.7284, 4.13124, 0.29 ) }
    dend_26 { pt3dadd( -128.569, -59.0617, 3.93798, 0.96 ) }
    dend_26 { pt3dadd( -129.051, -58.761, 3.80686, 1.18 ) }
    dend_26 { pt3dadd( -129.655, -58.3832, 3.61171, 2.21 ) }
    dend_26 { pt3dadd( -130.006, -58.1656, 3.48696, 2.43 ) }
    dend_26 { pt3dadd( -130.703, -57.7527, 3.21396, 2.43 ) }
    dend_26 { pt3dadd( -131.691, -57.2242, 2.83991, 2.21 ) }
    dend_26 { pt3dadd( -132.946, -56.6588, 2.41039, 0.29 ) }
    dend_26 { pt3dadd( -133.626, -56.4011, 2.20093, 0.44 ) }
    dend_26 { pt3dadd( -134.064, -56.2539, 2.09178, 0.52 ) }
    dend_26 { pt3dadd( -135.61, -55.7662, 1.77346, 0.29 ) }
    dend_26 { pt3dadd( -136.393, -55.5322, 1.65133, 0.29 ) }
    dend_26 { pt3dadd( -137.04, -55.348, 1.59399, 0.29 ) }
    dend_26 { pt3dadd( -137.805, -55.1501, 1.54261, 0.29 ) }
    dend_26 { pt3dadd( -138.905, -54.8752, 1.48952, 0.96 ) }
    dend_26 { pt3dadd( -139.397, -54.7449, 1.48159, 1.47 ) }
    dend_26 { pt3dadd( -139.852, -54.6106, 1.49744, 1.47 ) }
    dend_26 { pt3dadd( -140.908, -54.2121, 1.53119, 0.29 ) }
    dend_26 { pt3dadd( -141.327, -54.0246, 1.54157, 0.29 ) }
    dend_26 { pt3dadd( -142.038, -53.6602, 1.5343, 0.74 ) }
    dend_26 { pt3dadd( -142.407, -53.4537, 1.52402, 0.81 ) }
    dend_26 { pt3dadd( -142.646, -53.3064, 1.52096, 0.81 ) }
    dend_26 { pt3dadd( -143.04, -53.0315, 1.51409, 0.29 ) }
    dend_26 { pt3dadd( -143.375, -52.7685, 1.49717, 0.22 ) }
    dend_26 { pt3dadd( -144.136, -52.1485, 1.42047, 0.22 ) }
    dend_26 { pt3dadd( -144.997, -51.466, 1.30688, 0.22 ) }
    dend_26 { pt3dadd( -145.598, -51.011, 1.23621, 0.88 ) }
    dend_26 { pt3dadd( -146.1, -50.6408, 1.18911, 1.11 ) }
    dend_26 { pt3dadd( -146.313, -50.4866, 1.17553, 1.4 ) }
    dend_26 { pt3dadd( -146.776, -50.1548, 1.17067, 1.4 ) }
    dend_26 { pt3dadd( -147.239, -49.8271, 1.20296, 0.96 ) }
    dend_26 { pt3dadd( -148.193, -49.1979, 1.30925, 0.29 ) }
    dend_26 { pt3dadd( -148.604, -48.9409, 1.37111, 0.59 ) }
    dend_26 { pt3dadd( -148.878, -48.7692, 1.42299, 0.59 ) }
    dend_26 { pt3dadd( -149.263, -48.5257, 1.5072, 0.37 ) }
    dend_26 { pt3dadd( -150.372, -47.8121, 1.77926, 0.22 ) }
    dend_26 { pt3dadd( -151.054, -47.3679, 1.94625, 0.22 ) }
    dend_26 { pt3dadd( -151.517, -47.0637, 2.05883, 0.22 ) }
    dend_26 { pt3dadd( -152.441, -46.4327, 2.28186, 1.25 ) }
    dend_26 { pt3dadd( -152.897, -46.1003, 2.39083, 1.69 ) }
    dend_26 { pt3dadd( -153.229, -45.8398, 2.46916, 1.92 ) }
    dend_26 { pt3dadd( -153.664, -45.469, 2.57223, 1.62 ) }
    dend_26 { pt3dadd( -154.405, -44.8302, 2.74793, 0.81 ) }
    dend_26 { pt3dadd( -154.877, -44.4225, 2.85992, 0.81 ) }
    dend_26 { pt3dadd( -155.697, -43.7293, 3.0887, 0.37 ) }
    dend_26 { pt3dadd( -156.259, -43.2636, 3.26267, 0.37 ) }
    dend_26 { pt3dadd( -156.593, -43.0018, 3.37303, 0.37 ) }
    dend_26 { pt3dadd( -157.286, -42.4897, 3.61543, 0.29 ) }
    dend_26 { pt3dadd( -157.979, -41.9944, 3.87, 0.29 ) }
    dend_26 { pt3dadd( -158.838, -41.3816, 4.22623, 0.29 ) }
    dend_26 { pt3dadd( -159.253, -41.0825, 4.42164, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( -159.546, -40.8643, 4.57147, 0.44 ) }
    dend_26 { pt3dadd( -159.929, -40.5716, 4.77421, 0.29 ) }
    dend_26 { pt3dadd( -160.756, -39.9446, 5.21796, 1.4 ) }
    dend_26 { pt3dadd( -161.341, -39.5539, 5.51959, 1.77 ) }
    dend_26 { pt3dadd( -161.599, -39.4008, 5.64176, 1.77 ) }
    dend_26 { pt3dadd( -162.289, -39.0212, 5.95271, 0.66 ) }
    dend_26 { pt3dadd( -162.811, -38.742, 6.1738, 0.66 ) }
    dend_26 { pt3dadd( -163.315, -38.4871, 6.3774, 0.81 ) }
    dend_26 { pt3dadd( -163.919, -38.2008, 6.57564, 0.81 ) }
    dend_26 { pt3dadd( -164.722, -37.8092, 6.76804, 0.37 ) }
    dend_26 { pt3dadd( -165.746, -37.2683, 6.96064, 0.29 ) }
    dend_26 { pt3dadd( -166.329, -36.9433, 7.04562, 0.29 ) }
    dend_26 { pt3dadd( -166.964, -36.5732, 7.11719, 1.11 ) }
    dend_26 { pt3dadd( -167.804, -36.0456, 7.18207, 1.77 ) }
    dend_26 { pt3dadd( -168.457, -35.6115, 7.20325, 0.88 ) }
    dend_26 { pt3dadd( -169.284, -35.0535, 7.20833, 0.29 ) }
    dend_26 { pt3dadd( -170.54, -34.2207, 7.20422, 0.29 ) }
    dend_26 { pt3dadd( -171.201, -33.7947, 7.20621, 0.66 ) }
    dend_26 { pt3dadd( -171.699, -33.49, 7.21688, 0.88 ) }
    dend_26 { pt3dadd( -172.72, -32.8751, 7.25989, 0.29 ) }
    dend_26 { pt3dadd( -173.393, -32.4796, 7.28584, 0.29 ) }
    dend_26 { pt3dadd( -173.98, -32.1524, 7.3015, 0.66 ) }
    dend_26 { pt3dadd( -174.478, -31.8807, 7.28963, 0.66 ) }
    dend_26 { pt3dadd( -175.182, -31.5089, 7.25116, 0.29 ) }
    dend_26 { pt3dadd( -175.807, -31.1925, 7.20746, 0.88 ) }
    dend_26 { pt3dadd( -176.22, -30.9794, 7.17391, 0.88 ) }
    dend_26 { pt3dadd( -177.027, -30.5219, 7.09866, 0.29 ) }
    dend_26 { pt3dadd( -177.923, -29.9084, 7.07498, 0.59 ) }
    dend_26 { pt3dadd( -178.183, -29.6762, 7.09094, 0.59 ) }
    dend_26 { pt3dadd( -178.531, -29.3001, 7.1512, 0.59 ) }
    dend_26 { pt3dadd( -179.048, -28.6863, 7.30681, 0.37 ) }
    dend_26 { pt3dadd( -179.584, -27.9794, 7.52482, 0.29 ) }
    dend_26 { pt3dadd( -180.301, -26.944, 7.89044, 0.29 ) }
    dend_26 { pt3dadd( -180.94, -25.9512, 8.27416, 1.25 ) }
    dend_26 { pt3dadd( -181.326, -25.3091, 8.50357, 1.4 ) }
    dend_26 { pt3dadd( -181.571, -24.8803, 8.64025, 1.4 ) }
    dend_26 { pt3dadd( -181.888, -24.3127, 8.79854, 1.03 ) }
    dend_26 { pt3dadd( -182.281, -23.6193, 8.9602, 0.29 ) }
    dend_26 { pt3dadd( -182.79, -22.7218, 9.1133, 0.29 ) }
    dend_26 { pt3dadd( -183.223, -21.9117, 9.22946, 0.29 ) }
    dend_26 { pt3dadd( -183.756, -20.8143, 9.35254, 1.11 ) }
    dend_26 { pt3dadd( -183.948, -20.4072, 9.39231, 1.55 ) }
    dend_26 { pt3dadd( -184.291, -19.6678, 9.45959, 0.66 ) }
    dend_26 { pt3dadd( -184.832, -18.4774, 9.56918, 0.29 ) }
    dend_26 { pt3dadd( -185.556, -16.9255, 9.72007, 0.29 ) }
    dend_26 { pt3dadd( -186.003, -15.9734, 9.81716, 0.29 ) }
    dend_26 { pt3dadd( -186.537, -14.8233, 9.93634, 0.44 ) }
    dend_26 { pt3dadd( -186.831, -14.1811, 10.0049, 0.44 ) }
    dend_26 { pt3dadd( -187.151, -13.4813, 10.0791, 0.59 ) }
    dend_26 { pt3dadd( -187.584, -12.5333, 10.1791, 0.29 ) }
    dend_26 { pt3dadd( -187.9, -11.7953, 10.2556, 0.29 ) }
    dend_26 { pt3dadd( -188.164, -11.0881, 10.318, 0.44 ) }
    dend_26 { pt3dadd( -188.388, -10.3609, 10.3617, 0.29 ) }
    dend_26 { pt3dadd( -188.615, -9.62497, 10.399, 0.59 ) }
    dend_26 { pt3dadd( -188.901, -8.77136, 10.4402, 1.03 ) }
    dend_26 { pt3dadd( -189.068, -8.32004, 10.462, 1.03 ) }
    dend_26 { pt3dadd( -189.549, -7.24327, 10.5236, 0.22 ) }
    dend_26 { pt3dadd( -190.079, -6.2866, 10.5931, 0.22 ) }
    dend_26 { pt3dadd( -190.583, -5.48031, 10.6574, 0.22 ) }
    dend_26 { pt3dadd( -191.004, -4.91106, 10.7114, 0.29 ) }
    dend_26 { pt3dadd( -191.287, -4.61234, 10.7504, 0.29 ) }
    dend_26 { pt3dadd( -191.66, -4.32612, 10.8102, 0.52 ) }
    dend_26 { pt3dadd( -191.902, -4.23527, 10.8601, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 63/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -18.2877, -62.0276, 1.29832, 0.88 ) }
    dend_21 { pt3dadd( -18.9704, -63.1409, 1.21691, 0.88 ) }
    dend_21 { pt3dadd( -19.4958, -64.0591, 1.1333, 0.88 ) }
    dend_21 { pt3dadd( -19.9815, -64.9477, 1.01531, 0.88 ) }
    dend_21 { pt3dadd( -20.4039, -65.7575, 0.896112, 1.03 ) }
    dend_21 { pt3dadd( -20.805, -66.5668, 0.769551, 1.03 ) }
    dend_21 { pt3dadd( -21.1785, -67.3373, 0.649214, 0.96 ) }
    dend_21 { pt3dadd( -21.6084, -68.2201, 0.464998, 0.96 ) }
    dend_21 { pt3dadd( -21.9291, -68.8948, 0.322667, 1.11 ) }
    dend_21 { pt3dadd( -22.2101, -69.4675, 0.213465, 1.11 ) }
    dend_21 { pt3dadd( -22.5709, -70.1354, 0.107175, 1.18 ) }
    dend_21 { pt3dadd( -23.1265, -71.0355, -0.00957362, 1.18 ) }
    dend_21 { pt3dadd( -23.7159, -71.937, -0.121898, 1.11 ) }
    dend_21 { pt3dadd( -24.089, -72.4558, -0.182289, 1.25 ) }
    dend_21 { pt3dadd( -24.6642, -73.1999, -0.246224, 1.25 ) }
    dend_21 { pt3dadd( -25.2266, -73.8613, -0.304919, 1.47 ) }
    dend_21 { pt3dadd( -25.7858, -74.4489, -0.349515, 1.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 80/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 182.123, 169.625, -48.2435, 0.88 ) }
    dend_16 { pt3dadd( 182.473, 168.927, -48.2849, 0.88 ) }
    dend_16 { pt3dadd( 182.654, 168.584, -48.3139, 1.11 ) }
    dend_16 { pt3dadd( 182.833, 168.31, -48.3509, 1.25 ) }
    dend_16 { pt3dadd( 183.174, 167.812, -48.4299, 1.03 ) }
    dend_16 { pt3dadd( 183.635, 167.153, -48.5363, 0.15 ) }
    dend_16 { pt3dadd( 183.895, 166.785, -48.5956, 0.37 ) }
    dend_16 { pt3dadd( 184.022, 166.608, -48.6314, 0.37 ) }
    dend_16 { pt3dadd( 184.782, 165.547, -48.8319, 0.15 ) }
    dend_16 { pt3dadd( 185.028, 165.193, -48.8943, 0.29 ) }
    dend_16 { pt3dadd( 185.306, 164.784, -48.9585, 0.15 ) }
    dend_16 { pt3dadd( 185.562, 164.368, -49.0088, 0.15 ) }
    dend_16 { pt3dadd( 185.773, 163.984, -49.0422, 0.15 ) }
    dend_16 { pt3dadd( 185.939, 163.646, -49.045, 0.22 ) }
    dend_16 { pt3dadd( 186.083, 163.317, -49.026, 0.22 ) }
    dend_16 { pt3dadd( 186.267, 162.917, -48.9929, 0.29 ) }
    dend_16 { pt3dadd( 186.499, 162.429, -48.9539, 0.29 ) }
    dend_16 { pt3dadd( 186.912, 161.571, -48.8674, 0.15 ) }
    dend_16 { pt3dadd( 187.423, 160.482, -48.764, 0.59 ) }
    dend_16 { pt3dadd( 187.562, 160.178, -48.7385, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_16 { pt3dadd( 187.723, 159.822, -48.7131, 0.88 ) }
    dend_16 { pt3dadd( 188.195, 158.76, -48.6593, 0.22 ) }
    dend_16 { pt3dadd( 188.549, 157.923, -48.6075, 0.22 ) }
    dend_16 { pt3dadd( 188.982, 156.853, -48.5059, 0.22 ) }
    dend_16 { pt3dadd( 189.184, 156.335, -48.4463, 0.59 ) }
    dend_16 { pt3dadd( 189.308, 156.008, -48.4013, 0.74 ) }
    dend_16 { pt3dadd( 189.436, 155.652, -48.3473, 0.52 ) }
    dend_16 { pt3dadd( 189.793, 154.688, -48.2081, 0.22 ) }
    dend_16 { pt3dadd( 190.146, 153.765, -48.1115, 1.33 ) }
    dend_16 { pt3dadd( 190.266, 153.45, -48.0865, 1.4 ) }
    dend_16 { pt3dadd( 190.622, 152.453, -48.058, 0.22 ) }
    dend_16 { pt3dadd( 190.831, 151.886, -48.0632, 0.15 ) }
    dend_16 { pt3dadd( 191.209, 150.831, -48.0692, 0.15 ) }
    dend_16 { pt3dadd( 191.432, 150.131, -48.0881, 0.29 ) }
    dend_16 { pt3dadd( 191.593, 149.535, -48.1055, 0.29 ) }
    dend_16 { pt3dadd( 191.839, 148.52, -48.1193, 0.15 ) }
    dend_16 { pt3dadd( 192.025, 147.665, -48.1164, 0.15 ) }
    dend_16 { pt3dadd( 192.355, 145.992, -48.0967, 0.15 ) }
    dend_16 { pt3dadd( 192.606, 144.466, -48.0791, 0.15 ) }
    dend_16 { pt3dadd( 192.893, 142.595, -48.0726, 0.15 ) }
    dend_16 { pt3dadd( 192.993, 141.84, -48.0822, 0.22 ) }
    dend_16 { pt3dadd( 193.025, 141.529, -48.0936, 0.96 ) }
    dend_16 { pt3dadd( 193.054, 141.049, -48.1307, 1.18 ) }
    dend_16 { pt3dadd( 193.113, 139.892, -48.2871, 0.15 ) }
    dend_16 { pt3dadd( 193.153, 139.337, -48.364, 0.29 ) }
    dend_16 { pt3dadd( 193.224, 138.522, -48.5082, 0.15 ) }
    dend_16 { pt3dadd( 193.278, 138.041, -48.6081, 0.29 ) }
    dend_16 { pt3dadd( 193.321, 137.688, -48.6832, 0.29 ) }
    dend_16 { pt3dadd( 193.477, 136.505, -48.9429, 0.15 ) }
    dend_16 { pt3dadd( 193.634, 135.515, -49.1732, 0.15 ) }
    dend_16 { pt3dadd( 193.768, 134.786, -49.3522, 0.52 ) }
    dend_16 { pt3dadd( 193.833, 134.527, -49.4214, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 182.123, 169.625, -48.2435, 0.22 ) }
    dend_15 { pt3dadd( 183.86, 169.666, -48.4101, 0.22 ) }
    dend_15 { pt3dadd( 184.924, 169.657, -48.4401, 0.52 ) }
    dend_15 { pt3dadd( 185.138, 169.654, -48.4415, 0.52 ) }
    dend_15 { pt3dadd( 186.963, 169.619, -48.436, 0.22 ) }
    dend_15 { pt3dadd( 187.566, 169.618, -48.4345, 0.59 ) }
    dend_15 { pt3dadd( 188.101, 169.62, -48.4344, 0.59 ) }
    dend_15 { pt3dadd( 190.354, 169.57, -48.4435, 0.22 ) }
    dend_15 { pt3dadd( 190.718, 169.566, -48.4445, 0.44 ) }
    dend_15 { pt3dadd( 190.947, 169.566, -48.4463, 0.44 ) }
    dend_15 { pt3dadd( 192.703, 169.582, -48.472, 0.15 ) }
    dend_15 { pt3dadd( 193.013, 169.578, -48.4848, 0.37 ) }
    dend_15 { pt3dadd( 193.361, 169.567, -48.505, 0.37 ) }
    dend_15 { pt3dadd( 194.644, 169.488, -48.631, 0.15 ) }
    dend_15 { pt3dadd( 195.351, 169.422, -48.6922, 0.15 ) }
    dend_15 { pt3dadd( 195.733, 169.369, -48.7229, 0.29 ) }
    dend_15 { pt3dadd( 196.098, 169.293, -48.7504, 0.29 ) }
    dend_15 { pt3dadd( 196.976, 169.019, -48.8133, 0.22 ) }
    dend_15 { pt3dadd( 197.203, 168.932, -48.8317, 0.44 ) }
    dend_15 { pt3dadd( 198.175, 168.476, -48.9284, 0.22 ) }
    dend_15 { pt3dadd( 198.507, 168.308, -48.9674, 0.44 ) }
    dend_15 { pt3dadd( 198.85, 168.129, -49.0107, 0.44 ) }
    dend_15 { pt3dadd( 200.724, 167.109, -49.2788, 0.22 ) }
    dend_15 { pt3dadd( 201.9, 166.42, -49.4858, 0.22 ) }
    dend_15 { pt3dadd( 202.509, 166.045, -49.5929, 0.37 ) }
    dend_15 { pt3dadd( 202.827, 165.832, -49.6491, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -88.3675, 176.5, 230.624, 0.88 ) }
    dend_8 { pt3dadd( -88.7915, 178.859, 237.955, 0.88 ) }
    dend_8 { pt3dadd( -89.248, 182.007, 245.011, 0.88 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -88.3675, 176.5, 230.624, 0.22 ) }
    dend_7 { pt3dadd( -87.6085, 181.515, 240.851, 0.88 ) }
    dend_7 { pt3dadd( -85.5219, 184.734, 251.542, 0.88 ) }
    dend_7 { pt3dadd( -82.27, 185.939, 262.33, 0.88 ) }
    dend_7 { pt3dadd( -78.658, 185.511, 273.067, 0.88 ) }
    dend_7 { pt3dadd( -74.0483, 186.299, 283.387, 0.88 ) }
    dend_7 { pt3dadd( -68.558, 188.605, 293.037, 0.88 ) }
    dend_7 { pt3dadd( -64.228, 191.28, 303.176, 0.88 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 69/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 73.7809, -123.405, -19.7749, 1.11 ) }
    dend_34 { pt3dadd( 75.3706, -123.36, -20.628, 1.11 ) }
    dend_34 { pt3dadd( 76.3508, -123.393, -21.1388, 0.96 ) }
    dend_34 { pt3dadd( 77.3843, -123.495, -21.6625, 0.81 ) }
    dend_34 { pt3dadd( 78.0436, -123.63, -21.9859, 0.81 ) }
    dend_34 { pt3dadd( 79.1722, -123.958, -22.5175, 0.81 ) }
    dend_34 { pt3dadd( 79.8874, -124.176, -22.8434, 1.03 ) }
    dend_34 { pt3dadd( 80.5639, -124.429, -23.1227, 1.03 ) }
    dend_34 { pt3dadd( 81.0752, -124.624, -23.3603, 1.03 ) }
    dend_34 { pt3dadd( 82.0852, -124.948, -23.9259, 0.59 ) }
    dend_34 { pt3dadd( 82.7062, -125.011, -24.4115, 0.59 ) }
    dend_34 { pt3dadd( 83.2855, -124.957, -24.9928, 0.81 ) }
    dend_34 { pt3dadd( 83.7825, -124.869, -25.6299, 0.81 ) }
    dend_34 { pt3dadd( 84.3417, -124.788, -26.444, 0.66 ) }
    dend_34 { pt3dadd( 84.8759, -124.771, -27.2778, 0.66 ) }
    dend_34 { pt3dadd( 85.5558, -124.967, -28.4, 0.74 ) }
    dend_34 { pt3dadd( 86.1554, -125.449, -29.2718, 0.88 ) }
    dend_34 { pt3dadd( 86.661, -126.051, -29.8727, 0.88 ) }
    dend_34 { pt3dadd( 87.1235, -126.684, -30.323, 0.81 ) }
    dend_34 { pt3dadd( 87.5685, -127.311, -30.7063, 0.81 ) }
    dend_34 { pt3dadd( 88.4562, -128.526, -31.376, 0.59 ) }
    dend_34 { pt3dadd( 89.3481, -129.668, -31.9959, 0.52 ) }
    dend_34 { pt3dadd( 90.0423, -130.458, -32.4862, 0.66 ) }
    dend_34 { pt3dadd( 90.553, -130.971, -32.8504, 0.66 ) }
    dend_34 { pt3dadd( 91.2468, -131.596, -33.3626, 0.81 ) }
    dend_34 { pt3dadd( 91.6884, -131.978, -33.7152, 0.81 ) }
    dend_34 { pt3dadd( 92.4482, -132.613, -34.3712, 0.66 ) }
    dend_34 { pt3dadd( 92.9466, -133.083, -34.8736, 0.81 ) }
    dend_34 { pt3dadd( 93.5176, -133.673, -35.4326, 0.81 ) }
    dend_34 { pt3dadd( 94.1216, -134.329, -35.9931, 0.88 ) }
    dend_34 { pt3dadd( 94.6913, -134.964, -36.489, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_34 { pt3dadd( 95.2418, -135.557, -36.9431, 0.52 ) }
    dend_34 { pt3dadd( 96.0188, -136.417, -37.6309, 0.88 ) }
    dend_34 { pt3dadd( 96.5336, -137.053, -38.1581, 0.88 ) }
    dend_34 { pt3dadd( 96.9074, -137.604, -38.6074, 1.03 ) }
    dend_34 { pt3dadd( 97.2777, -138.31, -39.1485, 0.81 ) }
    dend_34 { pt3dadd( 97.5354, -138.906, -39.5661, 0.59 ) }
    dend_34 { pt3dadd( 98.0926, -140.375, -40.4807, 0.59 ) }
    dend_34 { pt3dadd( 98.4021, -141.249, -40.9483, 0.59 ) }
    dend_34 { pt3dadd( 98.6438, -141.934, -41.2997, 0.66 ) }
    dend_34 { pt3dadd( 99.0396, -142.831, -41.6982, 0.37 ) }
    dend_34 { pt3dadd( 99.3618, -143.384, -41.9325, 0.37 ) }
    dend_34 { pt3dadd( 99.9261, -144.171, -42.3904, 0.66 ) }
    dend_34 { pt3dadd( 100.284, -144.578, -42.6655, 0.81 ) }
    dend_34 { pt3dadd( 100.71, -145.039, -43.0769, 0.81 ) }
    dend_34 { pt3dadd( 101.244, -145.602, -43.7407, 0.44 ) }
    dend_34 { pt3dadd( 101.844, -146.419, -44.9695, 1.33 ) }
    dend_34 { pt3dadd( 102.457, -147.454, -46.6365, 1.92 ) }
    dend_34 { pt3dadd( 102.613, -147.745, -47.1311, 1.84 ) }
    dend_34 { pt3dadd( 103.041, -148.517, -48.5438, 0.81 ) }
    dend_34 { pt3dadd( 103.337, -148.975, -49.4763, 0.88 ) }
    dend_34 { pt3dadd( 104.29, -150.124, -52.2577, 0.52 ) }
    dend_34 { pt3dadd( 104.564, -150.341, -52.9054, 0.52 ) }
    dend_34 { pt3dadd( 104.935, -150.52, -53.6013, 0.52 ) }
    dend_34 { pt3dadd( 105.412, -150.646, -54.3094, 0.52 ) }
    dend_34 { pt3dadd( 106.006, -150.699, -54.9659, 1.18 ) }
    dend_34 { pt3dadd( 106.736, -150.698, -55.5717, 1.69 ) }
    dend_34 { pt3dadd( 107.232, -150.645, -55.8831, 1.92 ) }
    dend_34 { pt3dadd( 107.654, -150.594, -56.1678, 1.69 ) }
    dend_34 { pt3dadd( 108.656, -150.518, -56.838, 0.81 ) }
    dend_34 { pt3dadd( 109.731, -150.466, -57.5396, 0.52 ) }
    dend_34 { pt3dadd( 110.354, -150.445, -57.9304, 0.81 ) }
    dend_34 { pt3dadd( 110.79, -150.43, -58.1967, 0.81 ) }
    dend_34 { pt3dadd( 112.17, -150.378, -59.067, 0.37 ) }
    dend_34 { pt3dadd( 113.369, -150.309, -59.8226, 0.29 ) }
    dend_34 { pt3dadd( 114.251, -150.216, -60.4261, 0.52 ) }
    dend_34 { pt3dadd( 114.977, -150.095, -60.9314, 0.88 ) }
    dend_34 { pt3dadd( 115.323, -150.004, -61.1969, 1.18 ) }
    dend_34 { pt3dadd( 115.615, -149.888, -61.4589, 1.4 ) }
    dend_34 { pt3dadd( 116.232, -149.52, -62.1107, 0.88 ) }
    dend_34 { pt3dadd( 117.187, -148.781, -63.2683, 0.44 ) }
    dend_34 { pt3dadd( 117.585, -148.448, -63.7715, 0.44 ) }
    dend_34 { pt3dadd( 118.109, -148.005, -64.4319, 1.18 ) }
    dend_34 { pt3dadd( 118.846, -147.449, -65.2502, 1.4 ) }
    dend_34 { pt3dadd( 119.299, -147.158, -65.7, 1.4 ) }
    dend_34 { pt3dadd( 119.761, -146.91, -66.1117, 1.18 ) }
    dend_34 { pt3dadd( 120.035, -146.789, -66.3168, 1.18 ) }
    dend_34 { pt3dadd( 121.195, -146.355, -67.1171, 0.29 ) }
    dend_34 { pt3dadd( 122.168, -146.029, -67.6976, 0.29 ) }
    dend_34 { pt3dadd( 123.025, -145.734, -68.1569, 0.29 ) }
    dend_34 { pt3dadd( 123.682, -145.49, -68.5006, 0.44 ) }
    dend_34 { pt3dadd( 124.28, -145.233, -68.8071, 0.37 ) }
    dend_34 { pt3dadd( 124.658, -145.053, -68.989, 0.37 ) }
    dend_34 { pt3dadd( 125.707, -144.507, -69.4375, 1.33 ) }
    dend_34 { pt3dadd( 126.192, -144.206, -69.6379, 1.77 ) }
    dend_34 { pt3dadd( 126.804, -143.793, -69.8718, 1.55 ) }
    dend_34 { pt3dadd( 127.455, -143.344, -70.1057, 0.74 ) }
    dend_34 { pt3dadd( 128.11, -142.897, -70.3359, 0.52 ) }
    dend_34 { pt3dadd( 128.779, -142.449, -70.5891, 0.29 ) }
    dend_34 { pt3dadd( 129.317, -142.1, -70.7977, 0.29 ) }
    dend_34 { pt3dadd( 129.802, -141.794, -70.9836, 0.66 ) }
    dend_34 { pt3dadd( 130.382, -141.43, -71.214, 0.66 ) }
    dend_34 { pt3dadd( 131.16, -140.958, -71.5559, 0.29 ) }
    dend_34 { pt3dadd( 132.106, -140.413, -71.9977, 0.29 ) }
    dend_34 { pt3dadd( 132.828, -140.013, -72.3445, 0.29 ) }
    dend_34 { pt3dadd( 133.34, -139.743, -72.5882, 0.44 ) }
    dend_34 { pt3dadd( 134.083, -139.329, -72.9697, 1.33 ) }
    dend_34 { pt3dadd( 135.011, -138.784, -73.4654, 2.36 ) }
    dend_34 { pt3dadd( 135.301, -138.612, -73.6225, 2.36 ) }
    dend_34 { pt3dadd( 135.879, -138.26, -73.9194, 2.06 ) }
    dend_34 { pt3dadd( 136.703, -137.786, -74.334, 0.66 ) }
    dend_34 { pt3dadd( 137.543, -137.303, -74.742, 0.29 ) }
    dend_34 { pt3dadd( 138.147, -136.947, -75.0156, 0.29 ) }
    dend_34 { pt3dadd( 138.994, -136.423, -75.3559, 0.52 ) }
    dend_34 { pt3dadd( 139.54, -136.083, -75.5615, 0.66 ) }
    dend_34 { pt3dadd( 140.15, -135.704, -75.7646, 0.29 ) }
    dend_34 { pt3dadd( 140.449, -135.51, -75.8468, 0.29 ) }
    dend_34 { pt3dadd( 141.185, -135.012, -75.9827, 0.88 ) }
    dend_34 { pt3dadd( 141.639, -134.68, -76.0529, 1.03 ) }
    dend_34 { pt3dadd( 142.324, -134.147, -76.1454, 1.03 ) }
    dend_34 { pt3dadd( 142.803, -133.786, -76.2163, 0.74 ) }
    dend_34 { pt3dadd( 143.198, -133.516, -76.2736, 0.44 ) }
    dend_34 { pt3dadd( 143.804, -133.165, -76.3636, 0.37 ) }
    dend_34 { pt3dadd( 144.429, -132.868, -76.4893, 0.37 ) }
    dend_34 { pt3dadd( 145.024, -132.609, -76.6548, 0.59 ) }
    dend_34 { pt3dadd( 145.665, -132.316, -76.8775, 0.81 ) }
    dend_34 { pt3dadd( 146.031, -132.121, -77.0277, 0.81 ) }
    dend_34 { pt3dadd( 146.344, -131.91, -77.1708, 0.81 ) }
    dend_34 { pt3dadd( 147.193, -131.199, -77.5951, 0.37 ) }
    dend_34 { pt3dadd( 147.914, -130.462, -77.9602, 0.37 ) }
    dend_34 { pt3dadd( 148.421, -129.852, -78.2133, 0.74 ) }
    dend_34 { pt3dadd( 148.97, -129.132, -78.4803, 1.11 ) }
    dend_34 { pt3dadd( 149.556, -128.34, -78.7465, 0.66 ) }
    dend_34 { pt3dadd( 149.963, -127.792, -78.9132, 0.66 ) }
    dend_34 { pt3dadd( 150.446, -127.171, -79.0803, 0.81 ) }
    dend_34 { pt3dadd( 150.923, -126.619, -79.2209, 1.03 ) }
    dend_34 { pt3dadd( 151.458, -126.049, -79.366, 0.88 ) }
    dend_34 { pt3dadd( 152.056, -125.428, -79.5169, 0.66 ) }
    dend_34 { pt3dadd( 152.568, -124.872, -79.6368, 0.29 ) }
    dend_34 { pt3dadd( 153.143, -124.219, -79.7518, 0.22 ) }
    dend_34 { pt3dadd( 153.652, -123.624, -79.8365, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_34 { pt3dadd( 154.013, -123.184, -79.8774, 0.37 ) }
    dend_34 { pt3dadd( 154.533, -122.533, -79.9224, 0.37 ) }
    dend_34 { pt3dadd( 154.99, -121.986, -79.9621, 0.81 ) }
    dend_34 { pt3dadd( 155.436, -121.451, -80.008, 0.81 ) }
    dend_34 { pt3dadd( 156.011, -120.754, -80.0833, 0.88 ) }
    dend_34 { pt3dadd( 156.721, -119.89, -80.2029, 0.29 ) }
    dend_34 { pt3dadd( 157.217, -119.287, -80.2944, 0.29 ) }
    dend_34 { pt3dadd( 157.653, -118.76, -80.4037, 0.37 ) }
    dend_34 { pt3dadd( 158.421, -117.817, -80.6351, 0.52 ) }
    dend_34 { pt3dadd( 158.941, -117.144, -80.8182, 0.66 ) }
    dend_34 { pt3dadd( 159.317, -116.64, -80.9627, 0.59 ) }
    dend_34 { pt3dadd( 159.799, -115.984, -81.1672, 1.62 ) }
    dend_34 { pt3dadd( 160.48, -115.009, -81.4617, 1.99 ) }
    dend_34 { pt3dadd( 161.11, -114.096, -81.7473, 1.69 ) }
    dend_34 { pt3dadd( 161.558, -113.532, -81.9572, 1.77 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 73.7809, -123.405, -19.7749, 0.74 ) }
    dend_29 { pt3dadd( 74.541, -126.303, -19.557, 0.74 ) }
    dend_29 { pt3dadd( 75.044, -128.01, -19.4498, 0.74 ) }
    dend_29 { pt3dadd( 75.6102, -129.725, -19.3742, 0.74 ) }
    dend_29 { pt3dadd( 76.2014, -131.344, -19.3325, 0.74 ) }
    dend_29 { pt3dadd( 76.9426, -133.158, -19.2934, 0.74 ) }
    dend_29 { pt3dadd( 77.4021, -134.216, -19.2769, 0.88 ) }
    dend_29 { pt3dadd( 77.9326, -135.234, -19.2951, 0.88 ) }
    dend_29 { pt3dadd( 78.7666, -136.729, -19.3337, 0.59 ) }
    dend_29 { pt3dadd( 79.4033, -137.889, -19.372, 0.37 ) }
    dend_29 { pt3dadd( 80.1346, -139.281, -19.435, 0.37 ) }
    dend_29 { pt3dadd( 80.6992, -140.406, -19.5057, 0.59 ) }
    dend_29 { pt3dadd( 81.2525, -141.583, -19.5751, 0.66 ) }
    dend_29 { pt3dadd( 81.8015, -142.947, -19.6469, 0.66 ) }
    dend_29 { pt3dadd( 82.2572, -144.333, -19.7134, 0.81 ) }
    dend_29 { pt3dadd( 82.495, -145.237, -19.7563, 0.81 ) }
    dend_29 { pt3dadd( 82.6832, -146.172, -19.8026, 0.52 ) }
    dend_29 { pt3dadd( 82.8237, -147.003, -19.8485, 0.52 ) }
    dend_29 { pt3dadd( 83.1214, -149.142, -19.9689, 0.74 ) }
    dend_29 { pt3dadd( 83.3174, -150.691, -20.0236, 0.96 ) }
    dend_29 { pt3dadd( 83.4806, -152.029, -20.0321, 0.96 ) }
    dend_29 { pt3dadd( 83.6095, -153.113, -20.0079, 0.96 ) }
    dend_29 { pt3dadd( 83.7404, -154.449, -19.9395, 0.66 ) }
    dend_29 { pt3dadd( 83.7853, -155.275, -19.8676, 0.66 ) }
    dend_29 { pt3dadd( 83.761, -156.553, -19.692, 1.11 ) }
    dend_29 { pt3dadd( 83.6613, -157.385, -19.5459, 1.11 ) }
    dend_29 { pt3dadd( 83.3651, -158.673, -19.2828, 0.81 ) }
    dend_29 { pt3dadd( 82.8755, -160.188, -18.956, 0.44 ) }
    dend_29 { pt3dadd( 82.3087, -161.596, -18.6507, 0.44 ) }
    dend_29 { pt3dadd( 81.87, -162.587, -18.4674, 0.44 ) }
    dend_29 { pt3dadd( 81.3131, -163.78, -18.2958, 0.66 ) }
    dend_29 { pt3dadd( 80.8528, -164.781, -18.1758, 0.44 ) }
    dend_29 { pt3dadd( 80.2644, -166.078, -18.0297, 0.81 ) }
    dend_29 { pt3dadd( 79.8896, -166.974, -17.9307, 0.96 ) }
    dend_29 { pt3dadd( 79.54, -167.94, -17.8313, 0.52 ) }
    dend_29 { pt3dadd( 79.221, -168.951, -17.7525, 0.44 ) }
    dend_29 { pt3dadd( 78.7723, -170.467, -17.6924, 0.37 ) }
    dend_29 { pt3dadd( 78.4319, -171.658, -17.6809, 0.37 ) }
    dend_29 { pt3dadd( 78.0581, -172.965, -17.6778, 0.52 ) }
    dend_29 { pt3dadd( 77.613, -174.594, -17.6852, 0.59 ) }
    dend_29 { pt3dadd( 77.2052, -176.163, -17.7038, 0.59 ) }
    dend_29 { pt3dadd( 76.8741, -177.624, -17.7382, 0.66 ) }
    dend_29 { pt3dadd( 76.5976, -179.216, -17.7995, 0.74 ) }
    dend_29 { pt3dadd( 76.4761, -180.303, -17.8393, 0.59 ) }
    dend_29 { pt3dadd( 76.3981, -181.432, -17.8601, 0.44 ) }
    dend_29 { pt3dadd( 76.3812, -181.862, -17.8405, 0.74 ) }
    dend_29 { pt3dadd( 76.3856, -182.605, -17.7515, 0.74 ) }
    dend_29 { pt3dadd( 76.4401, -183.51, -17.6093, 0.44 ) }
    dend_29 { pt3dadd( 76.5835, -184.859, -17.4095, 0.29 ) }
    dend_29 { pt3dadd( 76.7449, -185.867, -17.2878, 0.37 ) }
    dend_29 { pt3dadd( 76.9245, -186.785, -17.1895, 0.59 ) }
    dend_29 { pt3dadd( 77.1916, -188.035, -17.0767, 0.59 ) }
    dend_29 { pt3dadd( 77.4568, -189.307, -17.0456, 0.74 ) }
    dend_29 { pt3dadd( 77.6012, -189.992, -17.0369, 0.81 ) }
    dend_29 { pt3dadd( 77.8544, -191.273, -17.0689, 0.66 ) }
    dend_29 { pt3dadd( 77.9947, -192.091, -17.1083, 0.66 ) }
    dend_29 { pt3dadd( 78.0879, -192.747, -17.1508, 0.66 ) }
    dend_29 { pt3dadd( 78.2697, -194.518, -17.2522, 0.59 ) }
    dend_29 { pt3dadd( 78.3766, -196.355, -17.3394, 0.66 ) }
    dend_29 { pt3dadd( 78.4025, -197.694, -17.3885, 0.74 ) }
    dend_29 { pt3dadd( 78.3756, -198.945, -17.4162, 0.74 ) }
    dend_29 { pt3dadd( 78.363, -199.708, -17.4242, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -25.7858, -74.4489, -0.349515, 0.81 ) }
    dend_25 { pt3dadd( -25.7085, -75.3603, -1.53758, 0.81 ) }
    dend_25 { pt3dadd( -25.7031, -75.8629, -2.00388, 0.74 ) }
    dend_25 { pt3dadd( -25.6829, -76.4702, -2.41544, 0.59 ) }
    dend_25 { pt3dadd( -25.6434, -76.8976, -2.64733, 0.59 ) }
    dend_25 { pt3dadd( -25.5608, -77.615, -2.97603, 0.74 ) }
    dend_25 { pt3dadd( -25.4793, -78.5087, -3.34069, 0.66 ) }
    dend_25 { pt3dadd( -25.4244, -79.4002, -3.59003, 0.66 ) }
    dend_25 { pt3dadd( -25.3908, -80.2163, -3.82757, 0.74 ) }
    dend_25 { pt3dadd( -25.3318, -81.103, -4.0902, 0.74 ) }
    dend_25 { pt3dadd( -25.2821, -81.6931, -4.2933, 0.81 ) }
    dend_25 { pt3dadd( -25.1502, -82.867, -4.75419, 0.96 ) }
    dend_25 { pt3dadd( -25.0933, -83.4037, -4.99291, 1.18 ) }
    dend_25 { pt3dadd( -24.9915, -84.7634, -5.62029, 0.52 ) }
    dend_25 { pt3dadd( -24.9615, -85.6367, -6.05696, 0.74 ) }
    dend_25 { pt3dadd( -24.949, -86.4082, -6.5149, 0.88 ) }
    dend_25 { pt3dadd( -24.9388, -87.0584, -7.00652, 0.59 ) }
    dend_25 { pt3dadd( -24.9236, -87.6457, -7.52249, 0.59 ) }
    dend_25 { pt3dadd( -24.9194, -88.2044, -8.04562, 1.18 ) }
    dend_25 { pt3dadd( -24.9358, -88.8439, -8.62491, 1.18 ) }
    dend_25 { pt3dadd( -24.9967, -90.1229, -9.7483, 0.59 ) }
    dend_25 { pt3dadd( -25.0389, -91.125, -10.5734, 0.74 ) }
    dend_25 { pt3dadd( -25.0935, -91.6871, -11.0488, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_25 { pt3dadd( -25.2217, -92.4719, -11.6948, 0.66 ) }
    dend_25 { pt3dadd( -25.4229, -93.2628, -12.2729, 0.88 ) }
    dend_25 { pt3dadd( -25.61, -93.784, -12.5657, 1.03 ) }
    dend_25 { pt3dadd( -25.9095, -94.3915, -12.8107, 0.74 ) }
    dend_25 { pt3dadd( -26.6873, -95.6869, -13.2877, 0.44 ) }
    dend_25 { pt3dadd( -26.9765, -96.1196, -13.4891, 0.44 ) }
    dend_25 { pt3dadd( -27.2952, -96.6026, -13.7535, 0.81 ) }
    dend_25 { pt3dadd( -27.6203, -97.2213, -14.1397, 1.18 ) }
    dend_25 { pt3dadd( -27.7836, -97.7655, -14.4977, 1.18 ) }
    dend_25 { pt3dadd( -27.8133, -98.4951, -15.0049, 0.81 ) }
    dend_25 { pt3dadd( -27.609, -99.5984, -15.7663, 0.52 ) }
    dend_25 { pt3dadd( -27.4168, -100.193, -16.1917, 0.88 ) }
    dend_25 { pt3dadd( -27.0491, -101.048, -16.8366, 1.03 ) }
    dend_25 { pt3dadd( -26.7323, -101.662, -17.3003, 1.03 ) }
    dend_25 { pt3dadd( -26.4009, -102.258, -17.7268, 1.25 ) }
    dend_25 { pt3dadd( -26.1982, -102.631, -17.9706, 1.92 ) }
    dend_25 { pt3dadd( -25.9596, -103.14, -18.2764, 1.55 ) }
    dend_25 { pt3dadd( -25.5403, -104.314, -18.886, 0.52 ) }
    dend_25 { pt3dadd( -25.4378, -104.797, -19.1081, 0.44 ) }
    dend_25 { pt3dadd( -25.3516, -105.548, -19.4493, 0.37 ) }
    dend_25 { pt3dadd( -25.3315, -105.927, -19.624, 0.52 ) }
    dend_25 { pt3dadd( -25.3229, -106.354, -19.8357, 0.52 ) }
    dend_25 { pt3dadd( -25.3208, -107.286, -20.3222, 0.44 ) }
    dend_25 { pt3dadd( -25.316, -108.302, -20.8482, 0.96 ) }
    dend_25 { pt3dadd( -25.2856, -109.33, -21.3448, 1.69 ) }
    dend_25 { pt3dadd( -25.2542, -110.076, -21.7048, 1.92 ) }
    dend_25 { pt3dadd( -25.2087, -110.893, -22.0812, 1.92 ) }
    dend_25 { pt3dadd( -25.1756, -111.733, -22.4427, 1.92 ) }
    dend_25 { pt3dadd( -25.163, -112.544, -22.7671, 1.62 ) }
    dend_25 { pt3dadd( -25.1576, -113.792, -23.1508, 0.37 ) }
    dend_25 { pt3dadd( -25.1845, -115.387, -23.5245, 0.29 ) }
    dend_25 { pt3dadd( -25.2005, -115.825, -23.613, 0.29 ) }
    dend_25 { pt3dadd( -25.2267, -116.387, -23.7184, 0.29 ) }
    dend_25 { pt3dadd( -25.2344, -116.7, -23.7804, 0.29 ) }
    dend_25 { pt3dadd( -25.2663, -117.543, -24.0132, 0.88 ) }
    dend_25 { pt3dadd( -25.2991, -118.026, -24.1826, 1.11 ) }
    dend_25 { pt3dadd( -25.3241, -118.372, -24.3069, 1.11 ) }
    dend_25 { pt3dadd( -25.4013, -119.106, -24.5963, 0.29 ) }
    dend_25 { pt3dadd( -25.4943, -119.792, -24.862, 0.29 ) }
    dend_25 { pt3dadd( -25.6927, -120.821, -25.238, 0.44 ) }
    dend_25 { pt3dadd( -25.8462, -121.41, -25.4509, 0.66 ) }
    dend_25 { pt3dadd( -25.9801, -121.847, -25.601, 0.66 ) }
    dend_25 { pt3dadd( -26.2438, -122.587, -25.835, 0.37 ) }
    dend_25 { pt3dadd( -26.6235, -123.55, -26.1038, 0.37 ) }
    dend_25 { pt3dadd( -26.9567, -124.462, -26.329, 0.59 ) }
    dend_25 { pt3dadd( -27.1981, -125.277, -26.5085, 1.03 ) }
    dend_25 { pt3dadd( -27.2985, -125.682, -26.6, 1.03 ) }
    dend_25 { pt3dadd( -27.4565, -126.452, -26.7732, 0.74 ) }
    dend_25 { pt3dadd( -27.5883, -127.232, -26.9736, 0.29 ) }
    dend_25 { pt3dadd( -27.7001, -128.066, -27.2225, 0.29 ) }
    dend_25 { pt3dadd( -27.7846, -128.971, -27.5016, 1.25 ) }
    dend_25 { pt3dadd( -27.8192, -129.574, -27.685, 2.06 ) }
    dend_25 { pt3dadd( -27.8363, -129.996, -27.8151, 2.06 ) }
    dend_25 { pt3dadd( -27.8736, -130.91, -28.0893, 1.4 ) }
    dend_25 { pt3dadd( -27.948, -131.891, -28.3577, 0.81 ) }
    dend_25 { pt3dadd( -28.0476, -132.618, -28.5296, 0.44 ) }
    dend_25 { pt3dadd( -28.1384, -133.227, -28.6548, 0.59 ) }
    dend_25 { pt3dadd( -28.2129, -133.789, -28.7632, 0.59 ) }
    dend_25 { pt3dadd( -28.2752, -134.51, -28.8948, 0.59 ) }
    dend_25 { pt3dadd( -28.2831, -135.34, -29.0328, 0.44 ) }
    dend_25 { pt3dadd( -28.2371, -136.031, -29.1568, 0.29 ) }
    dend_25 { pt3dadd( -28.1823, -136.615, -29.2871, 0.74 ) }
    dend_25 { pt3dadd( -28.1195, -137.224, -29.4481, 0.74 ) }
    dend_25 { pt3dadd( -28.0384, -137.936, -29.6795, 0.52 ) }
    dend_25 { pt3dadd( -27.9611, -138.475, -29.8873, 0.52 ) }
    dend_25 { pt3dadd( -27.8774, -138.987, -30.1009, 0.44 ) }
    dend_25 { pt3dadd( -27.7659, -139.745, -30.4105, 0.44 ) }
    dend_25 { pt3dadd( -27.7181, -140.367, -30.6426, 0.37 ) }
    dend_25 { pt3dadd( -27.7116, -141.023, -30.8772, 0.37 ) }
    dend_25 { pt3dadd( -27.7168, -141.451, -31.0252, 0.59 ) }
    dend_25 { pt3dadd( -27.7082, -142.259, -31.3047, 0.59 ) }
    dend_25 { pt3dadd( -27.6789, -142.725, -31.4845, 0.59 ) }
    dend_25 { pt3dadd( -27.5856, -143.438, -31.7743, 0.37 ) }
    dend_25 { pt3dadd( -27.436, -144.293, -32.1403, 0.29 ) }
    dend_25 { pt3dadd( -27.3325, -144.811, -32.3689, 1.18 ) }
    dend_25 { pt3dadd( -27.2497, -145.254, -32.6132, 1.4 ) }
    dend_25 { pt3dadd( -27.1585, -145.802, -32.9552, 1.4 ) }
    dend_25 { pt3dadd( -27.0971, -146.18, -33.2031, 1.4 ) }
    dend_25 { pt3dadd( -27.0118, -146.635, -33.5164, 0.88 ) }
    dend_25 { pt3dadd( -26.9075, -147.091, -33.8228, 0.66 ) }
    dend_25 { pt3dadd( -26.6091, -148.298, -34.6042, 0.37 ) }
    dend_25 { pt3dadd( -26.4113, -149.04, -35.0482, 0.29 ) }
    dend_25 { pt3dadd( -26.2833, -149.471, -35.281, 0.29 ) }
    dend_25 { pt3dadd( -26.166, -149.823, -35.4606, 0.29 ) }
    dend_25 { pt3dadd( -25.8771, -150.587, -35.8153, 1.03 ) }
    dend_25 { pt3dadd( -25.6601, -151.044, -36.003, 1.47 ) }
    dend_25 { pt3dadd( -25.4326, -151.428, -36.1397, 1.62 ) }
    dend_25 { pt3dadd( -25.1688, -151.857, -36.2946, 1.33 ) }
    dend_25 { pt3dadd( -24.9018, -152.316, -36.4522, 0.81 ) }
    dend_25 { pt3dadd( -24.6414, -152.824, -36.6114, 0.44 ) }
    dend_25 { pt3dadd( -24.2531, -153.68, -36.8647, 0.29 ) }
    dend_25 { pt3dadd( -23.996, -154.329, -37.0447, 0.88 ) }
    dend_25 { pt3dadd( -23.7522, -155.07, -37.2319, 0.96 ) }
    dend_25 { pt3dadd( -23.6089, -155.6, -37.3621, 1.25 ) }
    dend_25 { pt3dadd( -23.5113, -156.079, -37.4697, 1.4 ) }
    dend_25 { pt3dadd( -23.4512, -156.53, -37.5597, 1.4 ) }
    dend_25 { pt3dadd( -23.4119, -157.216, -37.6752, 1.03 ) }
    dend_25 { pt3dadd( -23.4154, -158.085, -37.8116, 0.29 ) }
    dend_25 { pt3dadd( -23.4864, -159.215, -37.9721, 0.29 ) }
    dend_25 { pt3dadd( -23.5811, -159.975, -38.06, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_25 { pt3dadd( -23.6665, -160.464, -38.1041, 0.44 ) }
    dend_25 { pt3dadd( -23.8224, -161.116, -38.1405, 0.44 ) }
    dend_25 { pt3dadd( -24.0361, -161.771, -38.1702, 0.52 ) }
    dend_25 { pt3dadd( -24.3214, -162.466, -38.1958, 0.44 ) }
    dend_25 { pt3dadd( -24.5862, -163.038, -38.2251, 0.29 ) }
    dend_25 { pt3dadd( -24.7565, -163.385, -38.2539, 0.44 ) }
    dend_25 { pt3dadd( -25.0693, -164.034, -38.3218, 0.44 ) }
    dend_25 { pt3dadd( -25.5308, -165.001, -38.4751, 1.55 ) }
    dend_25 { pt3dadd( -25.8566, -165.747, -38.6261, 2.43 ) }
    dend_25 { pt3dadd( -26.0344, -166.198, -38.7383, 2.73 ) }
    dend_25 { pt3dadd( -26.1566, -166.553, -38.8365, 2.43 ) }
    dend_25 { pt3dadd( -26.393, -167.359, -39.0641, 1.69 ) }
    dend_25 { pt3dadd( -26.7251, -168.678, -39.4274, 0.52 ) }
    dend_25 { pt3dadd( -26.8176, -169.1, -39.5294, 0.52 ) }
    dend_25 { pt3dadd( -26.8956, -169.464, -39.6054, 0.88 ) }
    dend_25 { pt3dadd( -27.064, -170.124, -39.7396, 0.59 ) }
    dend_25 { pt3dadd( -27.2064, -170.669, -39.8569, 0.59 ) }
    dend_25 { pt3dadd( -27.425, -171.445, -40.0256, 0.66 ) }
    dend_25 { pt3dadd( -27.5358, -171.84, -40.1088, 0.66 ) }
    dend_25 { pt3dadd( -27.6641, -172.306, -40.224, 0.52 ) }
    dend_25 { pt3dadd( -27.9164, -173.273, -40.5157, 0.29 ) }
    dend_25 { pt3dadd( -28.0642, -173.932, -40.7415, 0.29 ) }
    dend_25 { pt3dadd( -28.092, -174.094, -40.7999, 0.59 ) }
    dend_25 { pt3dadd( -28.1567, -174.625, -40.9888, 0.59 ) }
    dend_25 { pt3dadd( -28.2122, -175.158, -41.1599, 0.29 ) }
    dend_25 { pt3dadd( -28.3144, -176.014, -41.405, 0.29 ) }
    dend_25 { pt3dadd( -28.3705, -176.641, -41.5523, 0.74 ) }
    dend_25 { pt3dadd( -28.4373, -177.038, -41.6568, 0.74 ) }
    dend_25 { pt3dadd( -28.5478, -177.516, -41.7846, 0.74 ) }
    dend_25 { pt3dadd( -28.6984, -178.007, -41.9064, 0.59 ) }
    dend_25 { pt3dadd( -28.9704, -178.798, -42.0935, 0.29 ) }
    dend_25 { pt3dadd( -29.3336, -179.862, -42.3381, 0.29 ) }
    dend_25 { pt3dadd( -29.6995, -180.924, -42.5832, 0.37 ) }
    dend_25 { pt3dadd( -29.8278, -181.307, -42.6669, 0.37 ) }
    dend_25 { pt3dadd( -30.0249, -181.939, -42.7927, 0.29 ) }
    dend_25 { pt3dadd( -30.2272, -182.656, -42.9215, 0.44 ) }
    dend_25 { pt3dadd( -30.3029, -182.982, -42.9656, 0.59 ) }
    dend_25 { pt3dadd( -30.3822, -183.432, -43.0144, 0.44 ) }
    dend_25 { pt3dadd( -30.4009, -183.91, -43.0725, 0.37 ) }
    dend_25 { pt3dadd( -30.3934, -184.466, -43.1644, 0.37 ) }
    dend_25 { pt3dadd( -30.3678, -184.954, -43.261, 0.52 ) }
    dend_25 { pt3dadd( -30.3437, -185.436, -43.3757, 0.74 ) }
    dend_25 { pt3dadd( -30.3233, -186.124, -43.5849, 0.29 ) }
    dend_25 { pt3dadd( -30.3082, -187.051, -43.9136, 1.11 ) }
    dend_25 { pt3dadd( -30.3081, -187.402, -44.0481, 1.33 ) }
    dend_25 { pt3dadd( -30.3178, -187.755, -44.1876, 1.33 ) }
    dend_25 { pt3dadd( -30.3648, -188.333, -44.4082, 1.03 ) }
    dend_25 { pt3dadd( -30.5037, -189.169, -44.7148, 0.59 ) }
    dend_25 { pt3dadd( -30.6364, -189.635, -44.8667, 0.37 ) }
    dend_25 { pt3dadd( -30.8401, -190.135, -44.9915, 0.59 ) }
    dend_25 { pt3dadd( -30.9519, -190.372, -45.0445, 0.59 ) }
    dend_25 { pt3dadd( -31.2116, -190.861, -45.1316, 0.29 ) }
    dend_25 { pt3dadd( -31.4677, -191.311, -45.1763, 0.29 ) }
    dend_25 { pt3dadd( -31.6725, -191.689, -45.1957, 0.29 ) }
    dend_25 { pt3dadd( -31.8539, -192.047, -45.2761, 0.29 ) }
    dend_25 { pt3dadd( -32.1881, -192.684, -45.4911, 0.88 ) }
    dend_25 { pt3dadd( -32.2848, -192.878, -45.5654, 1.18 ) }
    dend_25 { pt3dadd( -32.3843, -193.087, -45.656, 1.18 ) }
    dend_25 { pt3dadd( -32.6289, -193.607, -45.8909, 0.74 ) }
    dend_25 { pt3dadd( -33.1269, -194.667, -46.3907, 0.29 ) }
    dend_25 { pt3dadd( -33.3582, -195.16, -46.6129, 0.29 ) }
    dend_25 { pt3dadd( -33.6514, -195.779, -46.8663, 0.29 ) }
    dend_25 { pt3dadd( -33.995, -196.495, -47.1456, 0.96 ) }
    dend_25 { pt3dadd( -34.1808, -196.882, -47.2823, 1.11 ) }
    dend_25 { pt3dadd( -34.4831, -197.542, -47.4795, 0.74 ) }
    dend_25 { pt3dadd( -34.703, -198.12, -47.6241, 0.59 ) }
    dend_25 { pt3dadd( -34.7958, -198.415, -47.6962, 0.81 ) }
    dend_25 { pt3dadd( -34.9839, -199.055, -47.8402, 0.81 ) }
    dend_25 { pt3dadd( -35.1411, -199.607, -47.9425, 0.44 ) }
    dend_25 { pt3dadd( -35.369, -200.361, -48.0775, 0.29 ) }
    dend_25 { pt3dadd( -35.6366, -201.141, -48.2248, 0.29 ) }
    dend_25 { pt3dadd( -35.9858, -202.094, -48.4261, 1.62 ) }
    dend_25 { pt3dadd( -36.1279, -202.51, -48.5212, 1.84 ) }
    dend_25 { pt3dadd( -36.2303, -202.889, -48.6142, 1.99 ) }
    dend_25 { pt3dadd( -36.4072, -203.546, -48.8187, 1.77 ) }
    dend_25 { pt3dadd( -36.5912, -204.169, -49.0355, 1.11 ) }
    dend_25 { pt3dadd( -36.8096, -204.867, -49.2835, 0.44 ) }
    dend_25 { pt3dadd( -37.0094, -205.53, -49.5286, 0.44 ) }
    dend_25 { pt3dadd( -37.2317, -206.38, -49.831, 0.37 ) }
    dend_25 { pt3dadd( -37.4597, -207.53, -50.2027, 0.29 ) }
    dend_25 { pt3dadd( -37.5267, -207.919, -50.3222, 0.29 ) }
    dend_25 { pt3dadd( -37.6584, -208.737, -50.5597, 0.66 ) }
    dend_25 { pt3dadd( -37.7582, -209.259, -50.7167, 0.81 ) }
    dend_25 { pt3dadd( -37.895, -209.906, -50.92, 0.37 ) }
    dend_25 { pt3dadd( -38.06, -210.863, -51.2013, 0.29 ) }
    dend_25 { pt3dadd( -38.1801, -212.188, -51.5657, 1.4 ) }
    dend_25 { pt3dadd( -38.1976, -212.633, -51.685, 1.99 ) }
    dend_25 { pt3dadd( -38.1985, -213.163, -51.8126, 2.21 ) }
    dend_25 { pt3dadd( -38.1811, -213.845, -51.9408, 1.47 ) }
    dend_25 { pt3dadd( -38.088, -215.02, -52.0736, 0.29 ) }
    dend_25 { pt3dadd( -37.9862, -215.621, -52.0958, 0.29 ) }
    dend_25 { pt3dadd( -37.7096, -216.496, -52.0563, 0.52 ) }
    dend_25 { pt3dadd( -37.5202, -216.953, -52.0224, 0.66 ) }
    dend_25 { pt3dadd( -37.1898, -217.59, -51.9562, 0.44 ) }
    dend_25 { pt3dadd( -36.6613, -218.501, -51.8547, 0.37 ) }
    dend_25 { pt3dadd( -36.266, -219.122, -51.8116, 0.37 ) }
    dend_25 { pt3dadd( -35.5858, -220.053, -51.709, 1.25 ) }
    dend_25 { pt3dadd( -35.3373, -220.363, -51.672, 1.84 ) }
    dend_25 { pt3dadd( -34.8586, -220.935, -51.5784, 1.92 ) }
    dend_25 { pt3dadd( -34.2477, -221.618, -51.4472, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_25 { pt3dadd( -33.7052, -222.221, -51.3281, 1.11 ) }
    dend_25 { pt3dadd( -32.4299, -223.706, -51.0455, 0.29 ) }
    dend_25 { pt3dadd( -31.8815, -224.355, -50.9132, 0.29 ) }
    dend_25 { pt3dadd( -31.083, -225.257, -50.7115, 0.29 ) }
    dend_25 { pt3dadd( -30.6099, -225.772, -50.5891, 0.29 ) }
    dend_25 { pt3dadd( -30.034, -226.385, -50.4533, 0.52 ) }
    dend_25 { pt3dadd( -29.6572, -226.799, -50.3817, 0.66 ) }
    dend_25 { pt3dadd( -28.7639, -227.824, -50.2801, 0.29 ) }
    dend_25 { pt3dadd( -28.146, -228.518, -50.2124, 1.11 ) }
    dend_25 { pt3dadd( -27.6826, -229.043, -50.1686, 1.11 ) }
    dend_25 { pt3dadd( -26.6317, -230.264, -50.0088, 0.22 ) }
    dend_25 { pt3dadd( -26.2881, -230.656, -49.9435, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.7858, -74.4489, -0.349515, 0.96 ) }
    dend_22 { pt3dadd( -26.8424, -75.5259, -0.0904902, 0.96 ) }
    dend_22 { pt3dadd( -27.7245, -76.3788, 0.11298, 0.96 ) }
    dend_22 { pt3dadd( -28.4742, -77.0516, 0.294273, 1.18 ) }
    dend_22 { pt3dadd( -29.165, -77.6124, 0.428373, 1.18 ) }
    dend_22 { pt3dadd( -30.2192, -78.3784, 0.576469, 0.74 ) }
    dend_22 { pt3dadd( -31.0204, -78.8884, 0.649885, 0.74 ) }
    dend_22 { pt3dadd( -31.6223, -79.2176, 0.643888, 0.74 ) }
    dend_22 { pt3dadd( -32.1783, -79.4672, 0.587254, 0.74 ) }
    dend_22 { pt3dadd( -33.2404, -79.9354, 0.432132, 0.66 ) }
    dend_22 { pt3dadd( -33.713, -80.2056, 0.344344, 0.66 ) }
    dend_22 { pt3dadd( -34.2991, -80.6673, 0.236925, 0.66 ) }
    dend_22 { pt3dadd( -34.7744, -81.1317, 0.164908, 0.81 ) }
    dend_22 { pt3dadd( -35.2619, -81.6428, 0.116454, 0.96 ) }
    dend_22 { pt3dadd( -35.9737, -82.401, 0.0859226, 1.11 ) }
    dend_22 { pt3dadd( -36.6901, -83.1524, 0.114536, 1.11 ) }
    dend_22 { pt3dadd( -37.2641, -83.7657, 0.147025, 1.33 ) }
    dend_22 { pt3dadd( -37.7631, -84.2864, 0.173889, 1.47 ) }
    dend_22 { pt3dadd( -38.4922, -84.9564, 0.208724, 1.47 ) }
    dend_22 { pt3dadd( -39.1569, -85.4736, 0.237402, 1.4 ) }
    dend_22 { pt3dadd( -39.9032, -85.9242, 0.278061, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 161.558, -113.532, -81.9572, 0.52 ) }
    dend_36 { pt3dadd( 162.426, -112.595, -82.683, 0.52 ) }
    dend_36 { pt3dadd( 162.907, -111.979, -83.1196, 0.29 ) }
    dend_36 { pt3dadd( 163.445, -111.227, -83.5683, 0.22 ) }
    dend_36 { pt3dadd( 163.973, -110.421, -84.0947, 0.22 ) }
    dend_36 { pt3dadd( 164.431, -109.693, -84.6102, 0.22 ) }
    dend_36 { pt3dadd( 164.892, -108.894, -85.1744, 0.22 ) }
    dend_36 { pt3dadd( 165.326, -108.02, -85.7561, 0.88 ) }
    dend_36 { pt3dadd( 165.634, -107.285, -86.2224, 1.18 ) }
    dend_36 { pt3dadd( 166.151, -105.889, -87.0626, 1.47 ) }
    dend_36 { pt3dadd( 166.326, -105.383, -87.3535, 1.55 ) }
    dend_36 { pt3dadd( 166.932, -103.634, -88.3552, 0.22 ) }
    dend_36 { pt3dadd( 167.291, -102.708, -88.9179, 0.22 ) }
    dend_36 { pt3dadd( 167.799, -101.605, -89.5869, 0.88 ) }
    dend_36 { pt3dadd( 168.178, -100.849, -90.0458, 1.4 ) }
    dend_36 { pt3dadd( 168.424, -100.399, -90.2991, 1.25 ) }
    dend_36 { pt3dadd( 168.827, -99.6989, -90.7008, 0.81 ) }
    dend_36 { pt3dadd( 169.538, -98.5403, -91.4002, 0.22 ) }
    dend_36 { pt3dadd( 170.573, -96.9466, -92.4025, 0.22 ) }
    dend_36 { pt3dadd( 171.218, -96.0321, -93.0074, 0.66 ) }
    dend_36 { pt3dadd( 171.633, -95.4634, -93.3889, 0.81 ) }
    dend_36 { pt3dadd( 171.895, -95.0922, -93.6286, 0.66 ) }
    dend_36 { pt3dadd( 172.144, -94.7148, -93.8499, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 56/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 161.558, -113.532, -81.9572, 0.29 ) }
    dend_35 { pt3dadd( 161.768, -111.352, -81.6676, 0.29 ) }
    dend_35 { pt3dadd( 161.934, -109.813, -81.4686, 0.29 ) }
    dend_35 { pt3dadd( 162.046, -108.667, -81.3123, 0.52 ) }
    dend_35 { pt3dadd( 162.102, -108.014, -81.2136, 0.66 ) }
    dend_35 { pt3dadd( 162.209, -106.779, -81.0196, 0.22 ) }
    dend_35 { pt3dadd( 162.277, -105.966, -80.8892, 0.59 ) }
    dend_35 { pt3dadd( 162.339, -105.127, -80.7384, 0.74 ) }
    dend_35 { pt3dadd( 162.393, -104.432, -80.6015, 0.81 ) }
    dend_35 { pt3dadd( 162.493, -103.381, -80.3816, 0.52 ) }
    dend_35 { pt3dadd( 162.641, -102.127, -80.1086, 0.22 ) }
    dend_35 { pt3dadd( 162.762, -101.267, -79.9172, 0.29 ) }
    dend_35 { pt3dadd( 162.89, -100.565, -79.7675, 0.29 ) }
    dend_35 { pt3dadd( 163.05, -99.8781, -79.6335, 0.15 ) }
    dend_35 { pt3dadd( 163.316, -98.9774, -79.4814, 0.29 ) }
    dend_35 { pt3dadd( 163.521, -98.3525, -79.3898, 0.37 ) }
    dend_35 { pt3dadd( 163.768, -97.6194, -79.2933, 0.22 ) }
    dend_35 { pt3dadd( 164.095, -96.6299, -79.1792, 0.22 ) }
    dend_35 { pt3dadd( 164.357, -95.7663, -79.0919, 0.74 ) }
    dend_35 { pt3dadd( 164.534, -95.1248, -79.029, 0.88 ) }
    dend_35 { pt3dadd( 164.737, -94.342, -78.9519, 0.52 ) }
    dend_35 { pt3dadd( 165.057, -93.0457, -78.8277, 0.22 ) }
    dend_35 { pt3dadd( 165.233, -92.2453, -78.7474, 0.44 ) }
    dend_35 { pt3dadd( 165.313, -91.762, -78.6946, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 78.363, -199.708, -17.4242, 0.37 ) }
    dend_31 { pt3dadd( 78.852, -200.753, -17.6703, 0.37 ) }
    dend_31 { pt3dadd( 79.2489, -201.513, -17.8517, 0.52 ) }
    dend_31 { pt3dadd( 79.5994, -202.135, -18.0017, 0.59 ) }
    dend_31 { pt3dadd( 80.154, -203.096, -18.2267, 0.22 ) }
    dend_31 { pt3dadd( 80.5039, -203.682, -18.3635, 0.22 ) }
    dend_31 { pt3dadd( 80.8232, -204.207, -18.4851, 0.44 ) }
    dend_31 { pt3dadd( 81.241, -204.822, -18.6163, 0.44 ) }
    dend_31 { pt3dadd( 81.6364, -205.351, -18.7458, 0.37 ) }
    dend_31 { pt3dadd( 82.1083, -205.909, -18.9078, 0.29 ) }
    dend_31 { pt3dadd( 82.5893, -206.416, -19.086, 0.52 ) }
    dend_31 { pt3dadd( 82.9206, -206.748, -19.2148, 0.74 ) }
    dend_31 { pt3dadd( 83.4202, -207.258, -19.415, 0.74 ) }
    dend_31 { pt3dadd( 83.9649, -207.831, -19.6357, 0.44 ) }
    dend_31 { pt3dadd( 84.2966, -208.18, -19.7718, 0.44 ) }
    dend_31 { pt3dadd( 84.904, -208.811, -20.0224, 0.29 ) }
    dend_31 { pt3dadd( 85.3557, -209.293, -20.216, 0.29 ) }
    dend_31 { pt3dadd( 85.6203, -209.585, -20.3319, 0.66 ) }
    dend_31 { pt3dadd( 85.9262, -209.943, -20.4623, 0.81 ) }
    dend_31 { pt3dadd( 86.1324, -210.178, -20.548, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_31 { pt3dadd( 86.8425, -210.919, -20.8362, 0.29 ) }
    dend_31 { pt3dadd( 87.3657, -211.388, -21.0454, 0.29 ) }
    dend_31 { pt3dadd( 87.7808, -211.724, -21.212, 0.44 ) }
    dend_31 { pt3dadd( 88.4451, -212.228, -21.4785, 0.29 ) }
    dend_31 { pt3dadd( 88.9964, -212.619, -21.6896, 0.37 ) }
    dend_31 { pt3dadd( 89.8628, -213.187, -22.0201, 0.37 ) }
    dend_31 { pt3dadd( 90.5879, -213.623, -22.2945, 0.37 ) }
    dend_31 { pt3dadd( 91.0152, -213.852, -22.4558, 0.59 ) }
    dend_31 { pt3dadd( 91.3141, -213.991, -22.5732, 0.59 ) }
    dend_31 { pt3dadd( 92.1281, -214.322, -22.8916, 0.29 ) }
    dend_31 { pt3dadd( 92.9323, -214.628, -23.1968, 1.25 ) }
    dend_31 { pt3dadd( 93.3321, -214.771, -23.3455, 1.55 ) }
    dend_31 { pt3dadd( 93.9117, -214.965, -23.5539, 1.55 ) }
    dend_31 { pt3dadd( 95.2942, -215.407, -24.0284, 0.29 ) }
    dend_31 { pt3dadd( 96.1765, -215.71, -24.32, 0.52 ) }
    dend_31 { pt3dadd( 96.7539, -215.915, -24.5069, 0.59 ) }
    dend_31 { pt3dadd( 97.3593, -216.147, -24.6707, 0.37 ) }
    dend_31 { pt3dadd( 97.857, -216.355, -24.7914, 0.22 ) }
    dend_31 { pt3dadd( 98.6639, -216.726, -24.9694, 0.22 ) }
    dend_31 { pt3dadd( 99.6094, -217.183, -25.1592, 0.22 ) }
    dend_31 { pt3dadd( 100.241, -217.497, -25.2839, 0.22 ) }
    dend_31 { pt3dadd( 101.375, -218.076, -25.4951, 0.59 ) }
    dend_31 { pt3dadd( 102.059, -218.432, -25.614, 0.59 ) }
    dend_31 { pt3dadd( 102.665, -218.761, -25.718, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 24/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 78.363, -199.708, -17.4242, 0.59 ) }
    dend_30 { pt3dadd( 78.4072, -200.246, -17.4607, 0.59 ) }
    dend_30 { pt3dadd( 78.5238, -200.911, -17.37, 0.44 ) }
    dend_30 { pt3dadd( 78.6773, -201.675, -17.2348, 0.29 ) }
    dend_30 { pt3dadd( 78.8682, -202.714, -17.0706, 0.59 ) }
    dend_30 { pt3dadd( 78.9579, -203.236, -16.9968, 0.66 ) }
    dend_30 { pt3dadd( 79.1255, -204.226, -16.8739, 0.44 ) }
    dend_30 { pt3dadd( 79.5384, -206.548, -16.6715, 0.29 ) }
    dend_30 { pt3dadd( 79.6694, -207.277, -16.639, 0.29 ) }
    dend_30 { pt3dadd( 79.854, -208.203, -16.6468, 0.59 ) }
    dend_30 { pt3dadd( 79.9899, -208.793, -16.6876, 0.74 ) }
    dend_30 { pt3dadd( 80.0903, -209.201, -16.7346, 0.74 ) }
    dend_30 { pt3dadd( 80.3002, -210.076, -16.8664, 0.44 ) }
    dend_30 { pt3dadd( 80.4688, -210.972, -17.0554, 0.29 ) }
    dend_30 { pt3dadd( 80.5958, -211.738, -17.1626, 0.29 ) }
    dend_30 { pt3dadd( 80.7188, -212.588, -17.2521, 0.59 ) }
    dend_30 { pt3dadd( 80.8127, -213.315, -17.3222, 0.44 ) }
    dend_30 { pt3dadd( 80.89, -213.921, -17.3723, 0.44 ) }
    dend_30 { pt3dadd( 80.9737, -214.542, -17.4097, 0.44 ) }
    dend_30 { pt3dadd( 81.1005, -215.326, -17.4728, 0.37 ) }
    dend_30 { pt3dadd( 81.2827, -216.255, -17.5665, 0.37 ) }
    dend_30 { pt3dadd( 81.4094, -216.71, -17.6262, 0.66 ) }
    dend_30 { pt3dadd( 81.6182, -217.173, -17.7107, 0.66 ) }
    dend_30 { pt3dadd( 81.7976, -217.455, -17.7762, 0.52 ) }
    dend_30 { pt3dadd( 82.1831, -217.989, -17.9041, 0.74 ) }
    dend_30 { pt3dadd( 82.3605, -218.222, -17.9575, 0.74 ) }
    dend_30 { pt3dadd( 82.8093, -218.853, -18.0762, 0.29 ) }
    dend_30 { pt3dadd( 83.2486, -219.521, -18.1904, 0.29 ) }
    dend_30 { pt3dadd( 83.5809, -220.032, -18.2781, 0.29 ) }
    dend_30 { pt3dadd( 84.0748, -220.797, -18.4109, 0.22 ) }
    dend_30 { pt3dadd( 84.4255, -221.341, -18.5052, 0.22 ) }
    dend_30 { pt3dadd( 84.9194, -222.102, -18.6382, 0.44 ) }
    dend_30 { pt3dadd( 85.3041, -222.693, -18.7418, 0.59 ) }
    dend_30 { pt3dadd( 85.5567, -223.131, -18.8084, 0.59 ) }
    dend_30 { pt3dadd( 88.4869, -231.491, -20.7061, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -39.9032, -85.9242, 0.278061, 0.88 ) }
    dend_24 { pt3dadd( -40.0958, -86.0256, 0.347054, 0.88 ) }
    dend_24 { pt3dadd( -40.6239, -86.33, 0.53537, 0.74 ) }
    dend_24 { pt3dadd( -41.1356, -86.6363, 0.720019, 0.88 ) }
    dend_24 { pt3dadd( -41.5602, -86.8928, 0.848427, 0.52 ) }
    dend_24 { pt3dadd( -42.11, -87.2246, 1.03308, 0.66 ) }
    dend_24 { pt3dadd( -42.6187, -87.5249, 1.2142, 0.74 ) }
    dend_24 { pt3dadd( -43.1182, -87.8008, 1.39895, 0.88 ) }
    dend_24 { pt3dadd( -43.5747, -88.0287, 1.5741, 1.03 ) }
    dend_24 { pt3dadd( -44.2404, -88.3369, 1.84749, 1.33 ) }
    dend_24 { pt3dadd( -44.8792, -88.6141, 2.11918, 1.4 ) }
    dend_24 { pt3dadd( -45.4863, -88.8521, 2.37977, 0.66 ) }
    dend_24 { pt3dadd( -45.8751, -88.9972, 2.55484, 0.66 ) }
    dend_24 { pt3dadd( -46.253, -89.1566, 2.74201, 0.59 ) }
    dend_24 { pt3dadd( -46.683, -89.3884, 2.9726, 0.37 ) }
    dend_24 { pt3dadd( -46.9593, -89.5763, 3.129, 0.88 ) }
    dend_24 { pt3dadd( -47.3556, -89.8968, 3.32193, 0.96 ) }
    dend_24 { pt3dadd( -47.6269, -90.1492, 3.45836, 0.96 ) }
    dend_24 { pt3dadd( -48.0149, -90.5491, 3.66718, 0.66 ) }
    dend_24 { pt3dadd( -48.3039, -90.8623, 3.82386, 0.66 ) }
    dend_24 { pt3dadd( -48.7089, -91.2924, 4.03035, 0.66 ) }
    dend_24 { pt3dadd( -49.0513, -91.6553, 4.20201, 0.74 ) }
    dend_24 { pt3dadd( -49.2738, -91.8928, 4.31427, 0.96 ) }
    dend_24 { pt3dadd( -49.6721, -92.3159, 4.50881, 0.74 ) }
    dend_24 { pt3dadd( -50.0229, -92.7159, 4.681, 0.74 ) }
    dend_24 { pt3dadd( -50.4208, -93.2482, 4.89554, 0.96 ) }
    dend_24 { pt3dadd( -50.6713, -93.6495, 5.04638, 1.03 ) }
    dend_24 { pt3dadd( -50.8952, -94.0365, 5.19701, 0.81 ) }
    dend_24 { pt3dadd( -51.1353, -94.4405, 5.37518, 0.44 ) }
    dend_24 { pt3dadd( -51.5085, -95.0645, 5.68361, 0.44 ) }
    dend_24 { pt3dadd( -51.7595, -95.5083, 5.93162, 0.44 ) }
    dend_24 { pt3dadd( -51.9857, -95.9394, 6.19144, 0.44 ) }
    dend_24 { pt3dadd( -52.3273, -96.6573, 6.62646, 0.44 ) }
    dend_24 { pt3dadd( -52.6098, -97.335, 7.0151, 0.81 ) }
    dend_24 { pt3dadd( -52.7266, -97.6607, 7.19027, 0.81 ) }
    dend_24 { pt3dadd( -52.8649, -98.0929, 7.39306, 0.88 ) }
    dend_24 { pt3dadd( -52.9367, -98.3325, 7.48842, 0.66 ) }
    dend_24 { pt3dadd( -53.0985, -98.8909, 7.66713, 0.37 ) }
    dend_24 { pt3dadd( -53.257, -99.4176, 7.82012, 0.29 ) }
    dend_24 { pt3dadd( -53.4193, -99.7842, 7.94439, 0.44 ) }
    dend_24 { pt3dadd( -53.7434, -100.191, 8.16656, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_24 { pt3dadd( -54.0258, -100.425, 8.35602, 0.29 ) }
    dend_24 { pt3dadd( -54.3491, -100.64, 8.58934, 0.37 ) }
    dend_24 { pt3dadd( -54.864, -100.914, 8.9947, 0.37 ) }
    dend_24 { pt3dadd( -55.2217, -101.107, 9.31431, 0.37 ) }
    dend_24 { pt3dadd( -55.6267, -101.354, 9.70369, 0.81 ) }
    dend_24 { pt3dadd( -55.8907, -101.537, 9.96133, 1.03 ) }
    dend_24 { pt3dadd( -56.1138, -101.756, 10.2045, 1.03 ) }
    dend_24 { pt3dadd( -56.2768, -101.976, 10.4043, 0.96 ) }
    dend_24 { pt3dadd( -56.6232, -102.598, 10.8807, 0.52 ) }
    dend_24 { pt3dadd( -56.7836, -102.951, 11.1373, 0.52 ) }
    dend_24 { pt3dadd( -56.978, -103.423, 11.4783, 1.77 ) }
    dend_24 { pt3dadd( -57.2875, -104.173, 12.0072, 0.66 ) }
    dend_24 { pt3dadd( -57.4769, -104.557, 12.2775, 0.66 ) }
    dend_24 { pt3dadd( -57.7553, -105.041, 12.6383, 0.59 ) }
    dend_24 { pt3dadd( -58.002, -105.426, 12.9364, 0.74 ) }
    dend_24 { pt3dadd( -58.2234, -105.766, 13.2158, 0.74 ) }
    dend_24 { pt3dadd( -58.4364, -106.071, 13.4758, 0.74 ) }
    dend_24 { pt3dadd( -58.8535, -106.574, 13.9171, 0.37 ) }
    dend_24 { pt3dadd( -59.4017, -107.216, 14.4634, 0.37 ) }
    dend_24 { pt3dadd( -59.677, -107.546, 14.7275, 0.44 ) }
    dend_24 { pt3dadd( -59.9486, -107.921, 15.0004, 0.44 ) }
    dend_24 { pt3dadd( -60.2449, -108.368, 15.3032, 0.44 ) }
    dend_24 { pt3dadd( -60.4532, -108.691, 15.5103, 0.66 ) }
    dend_24 { pt3dadd( -60.6254, -108.969, 15.6694, 0.74 ) }
    dend_24 { pt3dadd( -60.808, -109.261, 15.8098, 0.74 ) }
    dend_24 { pt3dadd( -61.1851, -109.855, 16.0803, 0.81 ) }
    dend_24 { pt3dadd( -61.5812, -110.477, 16.3407, 0.44 ) }
    dend_24 { pt3dadd( -61.9698, -111.108, 16.5895, 0.44 ) }
    dend_24 { pt3dadd( -62.3189, -111.705, 16.802, 0.37 ) }
    dend_24 { pt3dadd( -62.679, -112.36, 17.0291, 0.37 ) }
    dend_24 { pt3dadd( -62.8928, -112.763, 17.1617, 1.18 ) }
    dend_24 { pt3dadd( -63.075, -113.107, 17.2634, 1.62 ) }
    dend_24 { pt3dadd( -63.3486, -113.652, 17.4267, 1.84 ) }
    dend_24 { pt3dadd( -63.6059, -114.172, 17.5939, 1.03 ) }
    dend_24 { pt3dadd( -63.928, -114.816, 17.8092, 0.74 ) }
    dend_24 { pt3dadd( -64.0648, -115.111, 17.9062, 0.74 ) }
    dend_24 { pt3dadd( -64.3134, -115.724, 18.0937, 0.44 ) }
    dend_24 { pt3dadd( -64.5589, -116.412, 18.2924, 0.59 ) }
    dend_24 { pt3dadd( -64.7046, -116.878, 18.4164, 0.59 ) }
    dend_24 { pt3dadd( -64.8758, -117.46, 18.5579, 0.37 ) }
    dend_24 { pt3dadd( -65.0814, -118.172, 18.716, 0.37 ) }
    dend_24 { pt3dadd( -65.2796, -118.834, 18.8671, 0.37 ) }
    dend_24 { pt3dadd( -65.4265, -119.287, 18.9682, 0.81 ) }
    dend_24 { pt3dadd( -65.5841, -119.678, 19.0558, 0.96 ) }
    dend_24 { pt3dadd( -65.8089, -120.125, 19.1569, 1.18 ) }
    dend_24 { pt3dadd( -66.2175, -120.812, 19.3306, 0.44 ) }
    dend_24 { pt3dadd( -66.5539, -121.324, 19.4827, 0.44 ) }
    dend_24 { pt3dadd( -67.0028, -121.986, 19.7377, 0.44 ) }
    dend_24 { pt3dadd( -67.3501, -122.48, 19.9675, 0.44 ) }
    dend_24 { pt3dadd( -67.7318, -123.012, 20.2425, 0.59 ) }
    dend_24 { pt3dadd( -67.9907, -123.385, 20.4543, 0.74 ) }
    dend_24 { pt3dadd( -68.3125, -123.863, 20.7417, 0.96 ) }
    dend_24 { pt3dadd( -68.7715, -124.535, 21.1713, 0.59 ) }
    dend_24 { pt3dadd( -69.0499, -124.941, 21.4341, 0.44 ) }
    dend_24 { pt3dadd( -69.3492, -125.41, 21.7256, 0.37 ) }
    dend_24 { pt3dadd( -69.5745, -125.798, 21.9549, 0.52 ) }
    dend_24 { pt3dadd( -69.7763, -126.168, 22.1434, 0.52 ) }
    dend_24 { pt3dadd( -70.1636, -126.908, 22.4777, 0.37 ) }
    dend_24 { pt3dadd( -70.4315, -127.436, 22.7021, 0.59 ) }
    dend_24 { pt3dadd( -70.6157, -127.814, 22.8813, 0.74 ) }
    dend_24 { pt3dadd( -70.8654, -128.307, 23.1346, 0.96 ) }
    dend_24 { pt3dadd( -71.007, -128.595, 23.2788, 0.88 ) }
    dend_24 { pt3dadd( -71.1643, -128.935, 23.4467, 0.81 ) }
    dend_24 { pt3dadd( -71.4028, -129.44, 23.716, 0.88 ) }
    dend_24 { pt3dadd( -71.7291, -130.044, 24.0549, 0.37 ) }
    dend_24 { pt3dadd( -72.0636, -130.611, 24.3783, 0.37 ) }
    dend_24 { pt3dadd( -72.3803, -131.112, 24.665, 0.37 ) }
    dend_24 { pt3dadd( -72.6749, -131.559, 24.9285, 0.66 ) }
    dend_24 { pt3dadd( -73.0946, -132.16, 25.2958, 0.52 ) }
    dend_24 { pt3dadd( -73.3997, -132.546, 25.5504, 0.37 ) }
    dend_24 { pt3dadd( -73.7472, -132.902, 25.8094, 0.59 ) }
    dend_24 { pt3dadd( -74.0971, -133.204, 26.0772, 0.59 ) }
    dend_24 { pt3dadd( -74.5449, -133.542, 26.4471, 0.29 ) }
    dend_24 { pt3dadd( -74.8155, -133.747, 26.7004, 0.29 ) }
    dend_24 { pt3dadd( -75.0925, -133.982, 26.9782, 0.29 ) }
    dend_24 { pt3dadd( -75.5389, -134.405, 27.462, 0.37 ) }
    dend_24 { pt3dadd( -76.0641, -134.948, 28.0487, 0.52 ) }
    dend_24 { pt3dadd( -76.5188, -135.466, 28.5741, 0.74 ) }
    dend_24 { pt3dadd( -76.952, -135.99, 29.0721, 0.59 ) }
    dend_24 { pt3dadd( -77.25, -136.359, 29.3972, 0.44 ) }
    dend_24 { pt3dadd( -77.4429, -136.596, 29.5873, 0.44 ) }
    dend_24 { pt3dadd( -77.7192, -136.941, 29.8307, 0.37 ) }
    dend_24 { pt3dadd( -78.0277, -137.345, 30.0534, 0.52 ) }
    dend_24 { pt3dadd( -78.345, -137.802, 30.2671, 0.74 ) }
    dend_24 { pt3dadd( -78.7178, -138.392, 30.5273, 0.44 ) }
    dend_24 { pt3dadd( -78.9432, -138.829, 30.7149, 0.37 ) }
    dend_24 { pt3dadd( -79.1132, -139.29, 30.9124, 0.37 ) }
    dend_24 { pt3dadd( -79.2765, -139.913, 31.1677, 0.59 ) }
    dend_24 { pt3dadd( -79.3385, -140.28, 31.3038, 0.59 ) }
    dend_24 { pt3dadd( -79.3748, -140.797, 31.4756, 0.59 ) }
    dend_24 { pt3dadd( -79.3645, -141.395, 31.6642, 0.66 ) }
    dend_24 { pt3dadd( -79.3217, -142.236, 31.9144, 0.66 ) }
    dend_24 { pt3dadd( -79.2908, -142.904, 32.0943, 0.37 ) }
    dend_24 { pt3dadd( -79.2699, -143.326, 32.1927, 0.37 ) }
    dend_24 { pt3dadd( -79.2202, -143.85, 32.2898, 0.37 ) }
    dend_24 { pt3dadd( -79.1586, -144.215, 32.3462, 0.37 ) }
    dend_24 { pt3dadd( -79.0182, -144.9, 32.4344, 0.59 ) }
    dend_24 { pt3dadd( -78.9387, -145.234, 32.4583, 0.74 ) }
    dend_24 { pt3dadd( -78.8151, -145.69, 32.4922, 0.74 ) }
    dend_24 { pt3dadd( -78.6561, -146.397, 32.5614, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_24 { pt3dadd( -78.5995, -146.764, 32.6037, 0.44 ) }
    dend_24 { pt3dadd( -82.7545, -151.247, 34.1671, 0.44 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -39.9032, -85.9242, 0.278061, 0.81 ) }
    dend_23 { pt3dadd( -42.8672, -88.1624, -0.712606, 0.81 ) }
    dend_23 { pt3dadd( -44.0285, -88.9105, -1.10692, 0.74 ) }
    dend_23 { pt3dadd( -44.7186, -89.2622, -1.3471, 0.81 ) }
    dend_23 { pt3dadd( -45.558, -89.5918, -1.65175, 0.59 ) }
    dend_23 { pt3dadd( -46.7103, -89.9683, -2.03656, 0.44 ) }
    dend_23 { pt3dadd( -47.1521, -90.0931, -2.16477, 0.44 ) }
    dend_23 { pt3dadd( -48.675, -90.2939, -2.28502, 0.52 ) }
    dend_23 { pt3dadd( -49.4556, -90.2843, -2.38724, 0.74 ) }
    dend_23 { pt3dadd( -50.343, -90.2609, -2.52545, 0.59 ) }
    dend_23 { pt3dadd( -51.1951, -90.255, -2.65196, 0.59 ) }
    dend_23 { pt3dadd( -51.8857, -90.2892, -2.7392, 1.03 ) }
    dend_23 { pt3dadd( -52.6406, -90.3919, -2.76722, 1.18 ) }
    dend_23 { pt3dadd( -53.3817, -90.5473, -2.713, 1.18 ) }
    dend_23 { pt3dadd( -54.3228, -90.7597, -2.62511, 0.52 ) }
    dend_23 { pt3dadd( -55.0653, -90.9086, -2.56816, 0.37 ) }
    dend_23 { pt3dadd( -55.6698, -91.0047, -2.54169, 0.29 ) }
    dend_23 { pt3dadd( -56.2919, -91.086, -2.53519, 0.29 ) }
    dend_23 { pt3dadd( -56.9673, -91.155, -2.53488, 0.88 ) }
    dend_23 { pt3dadd( -57.8053, -91.1974, -2.53584, 1.11 ) }
    dend_23 { pt3dadd( -58.5427, -91.1647, -2.5974, 1.4 ) }
    dend_23 { pt3dadd( -59.1457, -91.1534, -2.71787, 1.55 ) }
    dend_23 { pt3dadd( -59.645, -91.1778, -2.88285, 1.55 ) }
    dend_23 { pt3dadd( -60.5184, -91.2778, -3.23009, 0.59 ) }
    dend_23 { pt3dadd( -61.0124, -91.3623, -3.43338, 0.59 ) }
    dend_23 { pt3dadd( -62.3239, -91.6598, -3.9356, 0.44 ) }
    dend_23 { pt3dadd( -63.8158, -92.0425, -4.50049, 0.29 ) }
    dend_23 { pt3dadd( -65.172, -92.4276, -5.07787, 0.52 ) }
    dend_23 { pt3dadd( -65.771, -92.6064, -5.41325, 0.66 ) }
    dend_23 { pt3dadd( -66.4616, -92.8252, -5.85312, 0.66 ) }
    dend_23 { pt3dadd( -66.9278, -92.9886, -6.1621, 0.44 ) }
    dend_23 { pt3dadd( -68.0672, -93.3859, -6.93031, 0.37 ) }
    dend_23 { pt3dadd( -70.5559, -94.1582, -8.63525, 2.8 ) }
    dend_23 { pt3dadd( -73.7014, -95.0657, -10.9571, 0.74 ) }
    dend_23 { pt3dadd( -75.0953, -95.4313, -12.0713, 0.74 ) }
    dend_23 { pt3dadd( -76.2492, -95.6778, -13.0825, 0.52 ) }
    dend_23 { pt3dadd( -77.5701, -95.8765, -14.3156, 1.11 ) }
    dend_23 { pt3dadd( -78.1171, -95.9143, -14.8415, 1.25 ) }
    dend_23 { pt3dadd( -80.4131, -95.7298, -17.1444, 0.37 ) }
    dend_23 { pt3dadd( -81.864, -95.3789, -18.628, 1.03 ) }
    dend_23 { pt3dadd( -83.3535, -94.7956, -20.2279, 1.25 ) }
    dend_23 { pt3dadd( -84.2293, -94.3423, -21.2121, 0.37 ) }
    dend_23 { pt3dadd( -84.8729, -93.9554, -21.941, 1.84 ) }
    dend_23 { pt3dadd( -86.0441, -93.1876, -23.2133, 0.52 ) }
    dend_23 { pt3dadd( -86.334, -92.9663, -23.4939, 0.37 ) }
    dend_23 { pt3dadd( -87.0156, -92.4522, -24.0808, 0.74 ) }
    dend_23 { pt3dadd( -88.1498, -91.7055, -24.9287, 0.44 ) }
    dend_23 { pt3dadd( -89.1332, -91.1821, -25.5638, 0.44 ) }
    dend_23 { pt3dadd( -89.8343, -90.8805, -25.941, 0.44 ) }
    dend_23 { pt3dadd( -90.545, -90.6303, -26.2441, 1.11 ) }
    dend_23 { pt3dadd( -91.1777, -90.4258, -26.4786, 1.55 ) }
    dend_23 { pt3dadd( -91.8781, -90.2168, -26.697, 1.69 ) }
    dend_23 { pt3dadd( -93.9065, -89.6692, -27.1774, 0.29 ) }
    dend_23 { pt3dadd( -94.8769, -89.435, -27.3769, 0.44 ) }
    dend_23 { pt3dadd( -95.6231, -89.2691, -27.5397, 0.44 ) }
    dend_23 { pt3dadd( -96.2558, -89.1345, -27.688, 1.33 ) }
    dend_23 { pt3dadd( -96.8689, -88.9981, -27.8228, 1.55 ) }
    dend_23 { pt3dadd( -98.2462, -88.6836, -28.1233, 0.29 ) }
    dend_23 { pt3dadd( -98.8787, -88.5415, -28.2568, 0.52 ) }
    dend_23 { pt3dadd( -99.9339, -88.3258, -28.4783, 0.29 ) }
    dend_23 { pt3dadd( -100.55, -88.1779, -28.6245, 1.03 ) }
    dend_23 { pt3dadd( -101.085, -88.0336, -28.7624, 1.18 ) }
    dend_23 { pt3dadd( -101.585, -87.8789, -28.8921, 1.18 ) }
    dend_23 { pt3dadd( -102.821, -87.4604, -29.2443, 0.29 ) }
    dend_23 { pt3dadd( -103.688, -87.1833, -29.5007, 0.29 ) }
    dend_23 { pt3dadd( -105.098, -86.7615, -29.8736, 0.88 ) }
    dend_23 { pt3dadd( -105.794, -86.5618, -30.0575, 0.66 ) }
    dend_23 { pt3dadd( -106.268, -86.4289, -30.1846, 0.66 ) }
    dend_23 { pt3dadd( -106.827, -86.2594, -30.3238, 0.44 ) }
    dend_23 { pt3dadd( -107.552, -86.0379, -30.5063, 0.29 ) }
    dend_23 { pt3dadd( -108.294, -85.8156, -30.6704, 0.74 ) }
    dend_23 { pt3dadd( -108.612, -85.7281, -30.7316, 0.88 ) }
    dend_23 { pt3dadd( -110.024, -85.3005, -30.9885, 0.29 ) }
    dend_23 { pt3dadd( -110.966, -84.9983, -31.138, 1.47 ) }
    dend_23 { pt3dadd( -111.717, -84.7447, -31.2365, 1.92 ) }
    dend_23 { pt3dadd( -112.405, -84.5088, -31.3097, 1.92 ) }
    dend_23 { pt3dadd( -113.939, -83.9883, -31.4383, 0.22 ) }
    dend_23 { pt3dadd( -115.009, -83.6334, -31.4834, 0.22 ) }
    dend_23 { pt3dadd( -115.7, -83.4073, -31.47, 0.59 ) }
    dend_23 { pt3dadd( -116.068, -83.2897, -31.4452, 0.59 ) }
    dend_23 { pt3dadd( -117.077, -82.9405, -31.3171, 0.22 ) }
    dend_23 { pt3dadd( -117.779, -82.6735, -31.189, 0.81 ) }
    dend_23 { pt3dadd( -118.087, -82.5435, -31.1242, 1.03 ) }
    dend_23 { pt3dadd( -118.447, -82.3784, -31.0483, 1.03 ) }
    dend_23 { pt3dadd( -119.437, -81.8833, -30.8606, 0.22 ) }
    dend_23 { pt3dadd( -119.956, -81.6106, -30.7597, 0.44 ) }
    dend_23 { pt3dadd( -121.655, -80.6505, -30.4328, 0.22 ) }
    dend_23 { pt3dadd( -122.197, -80.3348, -30.3391, 0.22 ) }
    dend_23 { pt3dadd( -122.932, -79.8987, -30.2169, 1.03 ) }
    dend_23 { pt3dadd( -123.442, -79.5893, -30.133, 1.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 102.665, -218.761, -25.718, 0.22 ) }
    dend_33 { pt3dadd( 103.867, -219.852, -26.2845, 0.22 ) }
    dend_33 { pt3dadd( 104.388, -220.325, -26.5301, 0.22 ) }
    dend_33 { pt3dadd( 104.772, -220.674, -26.7111, 0.44 ) }
    dend_33 { pt3dadd( 105.042, -220.919, -26.8387, 0.44 ) }
    dend_33 { pt3dadd( 114.086, -227.776, -29.8466, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 98/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 102.665, -218.761, -25.718, 0.59 ) }
    dend_32 { pt3dadd( 103.632, -218.474, -26.1305, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_32 { pt3dadd( 104.161, -218.316, -26.3564, 0.66 ) }
    dend_32 { pt3dadd( 104.382, -218.25, -26.4507, 0.66 ) }
    dend_32 { pt3dadd( 114.803, -215.538, -29.5832, 0.66 ) }
    dend_32 { pt3dadd( 125.399, -212.972, -32.1914, 0.66 ) }
    dend_32 { pt3dadd( 136.247, -210.205, -32.8055, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_47 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_45 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_51 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_38 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_13 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_4 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_34 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_29 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_24 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_23 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_19 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_20 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_50 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_27 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_12 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_31 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_33 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_61 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_58 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_41 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_32 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_35 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_62 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_36 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_32 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 13
    dend_45 nseg = 15
    dend_10 nseg = 5
    dend_56 nseg = 5
    dend_51 nseg = 11
    dend_49 nseg = 7
    dend_48 nseg = 5
    dend_38 nseg = 7
    dend_11 nseg = 11
    dend_5 nseg = 7
    dend_2 nseg = 9
    dend_60 nseg = 5
    dend_57 nseg = 5
    dend_53 nseg = 3
    dend_52 nseg = 3
    dend_42 nseg = 5
    dend_39 nseg = 5
    dend_14 nseg = 7
    dend_13 nseg = 13
    dend_9 nseg = 5
    dend_6 nseg = 9
    dend_4 nseg = 5
    dend_3 nseg = 7
    dend_54 nseg = 3
    dend_37 nseg = 9
    dend_28 nseg = 5
    dend_26 nseg = 11
    dend_7 nseg = 3
    dend_34 nseg = 7
    dend_29 nseg = 3
    dend_25 nseg = 9
    dend_24 nseg = 5
    dend_23 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_BTC_d9b97f1242_0_0


