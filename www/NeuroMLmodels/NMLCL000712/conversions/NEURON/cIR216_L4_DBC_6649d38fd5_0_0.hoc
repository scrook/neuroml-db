// Cell: cIR216_L4_DBC_6649d38fd5_0_0
/*
{
  "id" : "cIR216_L4_DBC_6649d38fd5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29752, -10.9202, 0.0, 2.7473", "-3.02947, -9.86122, 0.0, 4.90547", "-2.76143, -8.80223, 0.0, 7.1195", "-2.49339, -7.74324, 0.0, 9.06693", "-2.22534, -6.68425, 0.0, 10.5477", "-1.9573, -5.62526, 0.0, 11.7638", "-1.68926, -4.56627, 0.0, 12.6703", "-1.42121, -3.50728, 0.0, 13.5724", "-1.15317, -2.44829, 0.0, 13.9606", "-0.885125, -1.3893, 0.0, 14.249", "-0.617082, -0.330312, 0.0, 14.4914", "-0.349039, 0.728678, 0.0, 14.572", "-0.0809953, 1.78767, 0.0, 14.5168", "0.187048, 2.84666, 0.0, 14.1167", "0.455092, 3.90565, 0.0, 13.6161", "0.723135, 4.96464, 0.0, 12.8986", "0.991178, 6.02363, 0.0, 12.0703", "1.25922, 7.08262, 0.0, 10.8368", "1.52727, 8.14161, 0.0, 9.27498", "1.79531, 9.2006, 0.0, 7.02436", "2.06335, 10.2596, 0.0, 4.05122" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.851454, 10.1137, 1.7, 1.62", "0.851454, 10.1137, 1.7, 1.62", "0.759154, 12.0548, 1.64012, 0.96", "0.680049, 13.7184, 1.58879, 1.25", "0.569683, 16.0395, 1.51719, 1.55", "0.466391, 18.2118, 1.45017, 1.84", "0.362291, 20.4011, 1.38263, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.23855, -9.42631, -9.03, 1.18", "-1.73228, -9.55348, -9.11896, 1.18", "-0.482253, -10.0044, -9.35849, 1.18", "1.61891, -11.0086, -9.82203, 1.03", "2.69615, -11.611, -10.0831, 0.96", "3.62701, -12.0215, -10.2726, 0.81", "2.57508, -12.2868, -10.2909, 0.74", "1.80548, -12.8037, -10.4475, 0.74", "0.78568, -13.4825, -10.7182, 0.96", "-0.460591, -14.2461, -11.0917, 1.18", "-2.26133, -15.2383, -11.6872, 0.88", "-3.77411, -15.9935, -12.2565, 0.96", "-5.35309, -16.7155, -12.8722, 1.25", "-6.4527, -17.1976, -13.3346, 1.99", "-7.53068, -17.6738, -13.8433, 2.95", "-8.57776, -18.1826, -14.4432, 3.54", "-9.46162, -18.6784, -15.0909, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.90855, -11.6663, 1.23, 0.81", "-1.7797, -12.3803, 1.20115, 0.81", "-1.56806, -13.2546, 1.16595, 0.96", "-1.31968, -14.1276, 1.13244, 1.18", "-1.05186, -14.973, 1.10192, 1.18", "-0.732526, -15.91, 1.09856, 0.81", "-0.527898, -16.4825, 1.11729, 1.03", "-0.216278, -17.2847, 1.19954, 1.47", "9.48735E-4, -17.8592, 1.30557, 2.06", "0.170967, -18.3773, 1.44188, 2.14", "0.398213, -19.3406, 1.76366, 1.33", "0.531436, -20.5741, 2.23865, 0.96", "0.486344, -21.6725, 2.68917, 0.96", "0.314148, -22.4573, 3.01955, 1.18", "0.105531, -23.0374, 3.26748, 1.99", "-0.228022, -23.7534, 3.56873, 2.88", "-0.669205, -24.5667, 3.88979, 3.02", "-1.2875, -25.6595, 4.28586, 1.77", "-2.13233, -27.2702, 4.79258, 0.81", "-2.54935, -28.209, 5.05372, 0.81", "-2.77487, -28.8767, 5.21434, 0.81", "-2.9541, -29.6879, 5.38966, 0.81", "-3.06025, -30.5722, 5.57733, 0.81", "-3.08396, -31.3148, 5.7299, 1.03", "-3.07052, -32.0482, 5.87163, 1.25", "-3.00621, -33.4154, 6.12353, 0.81", "-2.95031, -34.505, 6.33387, 1.03", "-2.92218, -35.375, 6.51942, 1.62", "-2.93371, -36.0927, 6.69348, 2.73", "-3.00768, -37.1046, 6.96716, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.51145, 6.32369, 5.69, 0.59", "7.49646, 6.86176, 5.48423, 0.44", "8.45627, 7.44635, 5.5729, 0.44", "9.25887, 7.96048, 5.86435, 0.44", "10.1185, 8.50868, 6.34299, 0.37", "10.7603, 8.89802, 6.77418, 1.03", "11.7687, 9.47863, 7.54733, 1.33", "12.8336, 10.0666, 8.60857, 1.47", "13.5642, 10.435, 9.48845, 1.25", "14.3595, 10.7377, 10.5743, 0.29", "14.8714, 10.829, 11.3265, 0.22", "15.2657, 10.8176, 11.8758, 0.22", "15.5177, 10.73, 12.1636, 0.22", "15.8181, 10.5909, 12.4711, 0.22", "16.2865, 10.3849, 12.9278, 1.03", "17.2808, 10.0223, 13.9267, 2.21", "17.8316, 9.93172, 14.4885, 3.02", "19.5727, 10.103, 16.3043, 0.29", "20.3736, 10.4181, 17.1867, 0.29", "20.8243, 10.7213, 17.6984, 0.44", "21.2627, 11.1355, 18.2183, 0.66", "21.9383, 11.9604, 19.0474, 1.11", "22.5578, 12.8185, 19.8415, 0.52", "23.0506, 13.5684, 20.4258, 0.22", "23.3662, 13.9016, 20.7491, 0.22", "23.676, 14.0081, 21.0392, 0.22", "23.9781, 13.8913, 21.2978, 0.22", "24.6699, 13.4456, 21.8593, 0.66", "25.3693, 12.9546, 22.3965, 1.7", "26.0631, 12.47, 22.9492, 2.21", "26.718, 12.0639, 23.522, 1.7", "27.6202, 11.6795, 24.4405, 0.29", "28.4498, 11.5616, 25.4845, 0.22", "28.7872, 11.6551, 26.0314, 0.22", "29.124, 11.9911, 26.8884, 0.22", "29.3096, 12.4849, 27.827, 0.96", "29.397, 13.3712, 29.2998, 0.74", "29.3497, 14.0028, 30.325, 0.74", "29.2815, 14.3523, 30.935, 0.74", "29.2104, 14.8225, 31.9376, 0.74", "29.2401, 15.0903, 32.6007, 0.74", "29.3102, 15.1564, 32.833, 0.74", "29.8157, 15.2952, 33.5858, 0.74", "30.347, 15.4016, 34.186, 1.18", "31.2815, 15.5659, 35.1507, 0.44", "32.1332, 15.7193, 35.9395, 1.25", "33.3149, 15.9616, 36.9669, 2.73", "34.5775, 16.2651, 38.0452, 3.54", "35.2848, 16.4622, 38.6268, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.64855, 6.93369, 5.52, 0.88", "-4.93203, 7.22353, 5.65352, 0.74", "-5.36949, 7.6447, 5.91483, 0.22", "-5.65383, 7.90225, 6.10798, 0.22", "-6.02695, 8.21338, 6.36506, 0.44", "-6.33558, 8.44448, 6.57486, 0.44", "-6.73472, 8.69762, 6.84709, 0.22", "-7.14814, 8.89384, 7.14505, 0.22", "-7.35797, 8.96617, 7.29577, 0.22", "-7.6514, 9.04095, 7.49884, 0.96", "-8.10706, 9.12682, 7.82204, 1.47", "-8.91737, 9.25484, 8.44795, 0.15", "-9.2801, 9.30931, 8.72007, 0.15", "-9.5417, 9.35926, 8.88916, 0.15", "-9.93544, 9.44167, 9.12467, 0.88", "-10.6369, 9.60144, 9.53066, 0.37", "-11.3913, 9.78972, 9.95837, 1.55", "-11.9989, 9.96022, 10.2964, 2.95", "-13.5577, 10.427, 11.1461, 0.07", "-13.849, 10.513, 11.302, 0.88", "-14.4557, 10.688, 11.6057, 0.07", "-15.0284, 10.846, 11.8453, 0.22", "-15.4255, 10.9523, 11.9937, 0.22", "-16.3082, 11.1706, 12.3122, 0.15", "-16.5815, 11.2264, 12.4078, 0.96", "-16.9756, 11.2961, 12.5256, 1.84", "-18.3892, 11.498, 12.8662, 0.15", "-18.703, 11.5264, 12.9314, 0.66", "-19.1996, 11.5512, 13.0275, 1.18", "-20.4051, 11.5692, 13.2503, 0.15", "-20.8529, 11.5577, 13.3264, 1.33", "-21.4498, 11.5188, 13.4235, 2.51", "-23.1281, 11.3393, 13.6841, 0.15", "-23.4001, 11.3022, 13.7154, 0.52", "-23.8978, 11.2193, 13.7503, 0.81", "-24.6796, 11.0698, 13.7663, 0.15", "-25.0756, 10.9906, 13.7691, 0.15", "-25.3786, 10.931, 13.7626, 0.66", "-26.3095, 10.7598, 13.7119, 1.84", "-27.2282, 10.6219, 13.6722, 0.22", "-27.6964, 10.5669, 13.6643, 0.37", "-27.8992, 10.5494, 13.6664, 0.88", "-28.6564, 10.4998, 13.7111, 0.15", "-29.0709, 10.4847, 13.7539, 0.15", "-29.5232, 10.4836, 13.8282, 0.74", "-30.8549, 10.5117, 14.1402, 0.07", "-31.1047, 10.523, 14.2102, 0.52", "-31.9584, 10.5898, 14.4842, 0.15", "-32.3608, 10.6345, 14.6316, 0.96", "-32.8632, 10.7023, 14.8323, 1.92", "-33.9482, 10.9067, 15.2879, 0.15", "-34.4015, 11.02, 15.4812, 0.22", "-34.9435, 11.172, 15.6969, 0.07", "-35.3045, 11.2945, 15.8252, 1.03", "-35.6809, 11.4346, 15.9491, 1.77", "-36.8245, 11.8926, 16.2884, 0.07", "-37.2941, 12.0968, 16.4148, 0.07", "-37.6161, 12.2364, 16.5082, 0.74", "-38.4909, 12.6213, 16.7695, 0.07", "-38.7606, 12.7383, 16.8512, 0.52", "-39.4891, 13.0079, 17.0925, 0.07", "-39.9322, 13.1283, 17.2552, 0.22", "-40.4147, 13.2059, 17.4396, 0.15", "-40.6125, 13.2103, 17.5152, 0.96", "-41.0885, 13.156, 17.6938, 1.92", "-42.0553, 12.9707, 18.0407, 0.07", "-42.5263, 12.8457, 18.1927, 0.29", "-43.0466, 12.7102, 18.3322, 0.07", "-43.5607, 12.6069, 18.4418, 0.07", "-43.7637, 12.5791, 18.4809, 0.07", "-43.9583, 12.5618, 18.5129, 0.44", "-44.3735, 12.5477, 18.5657, 0.74", "-45.4, 12.5258, 18.6872, 0.07", "-46.2142, 12.5104, 18.7871, 0.15", "-46.7791, 12.4966, 18.8574, 0.96", "-47.4721, 12.4506, 18.9531, 0.07", "-48.0271, 12.3886, 19.0349, 0.59", "-48.5559, 12.2961, 19.1207, 0.15", "-48.8045, 12.234, 19.1641, 0.74", "-49.1778, 12.1206, 19.2309, 1.18", "-50.3466, 11.735, 19.3986, 0.15", "-50.7345, 11.6081, 19.4443, 0.81", "-51.3236, 11.417, 19.4959, 0.15", "-51.6707, 11.3057, 19.5181, 0.22", "-52.5687, 11.0179, 19.5576, 0.07", "-53.1267, 10.8384, 19.5727, 1.03", "-53.5192, 10.7185, 19.5752, 1.84", "-54.8292, 10.3648, 19.5837, 0.07", "-55.0929, 10.3077, 19.5858, 0.22", "-56.3372, 10.1076, 19.6142, 0.07", "-56.498, 10.088, 19.6214, 0.66", "-56.8549, 10.0535, 19.6561, 1.25", "-57.4569, 10.0097, 19.7245, 0.15", "-57.9439, 9.99832, 19.7882, 0.74", "-58.7378, 9.97832, 19.9216, 0.07", "-59.2684, 9.96362, 20.0297, 0.07", "-59.8109, 9.94042, 20.1492, 0.07", "-59.9181, 9.93752, 20.1772, 0.07", "-60.3564, 9.94152, 20.3076, 0.74", "-61.1914, 9.97532, 20.6089, 0.07", "-61.4232, 9.99932, 20.7059, 1.11", "-61.9115, 10.0675, 20.9351, 1.62", "-62.7858, 10.1497, 21.3906, 0.07", "-63.2371, 10.174, 21.6407, 0.81", "-63.9474, 10.1816, 22.0519, 0.15", "-64.5176, 10.1572, 22.405, 0.15", "-65.1078, 10.0967, 22.7868, 1.11", "-66.4234, 9.87452, 23.6616, 0.15", "-66.7243, 9.80542, 23.8606, 1.03", "-67.2729, 9.66182, 24.2199, 1.84", "-68.2131, 9.38686, 24.8071, 0.22", "-68.3817, 9.33236, 24.9132, 0.22", "-68.7242, 9.22044, 25.1307, 0.07", "-68.9745, 9.14118, 25.2948, 0.59", "-69.4944, 8.97272, 25.6536, 0.07", "-69.8329, 8.85517, 25.8933, 0.29", "-70.1707, 8.71901, 26.1348, 0.07", "-70.5554, 8.54134, 26.4158, 0.37", "-71.0985, 8.2623, 26.8181, 0.07", "-71.4884, 8.03669, 27.1113, 0.66", "-71.9149, 7.72143, 27.4218, 0.07", "-72.2976, 7.38394, 27.6934, 0.96", "-72.9418, 6.69408, 28.1325, 0.07", "-73.2797, 6.22765, 28.3477, 0.07", "-73.4929, 5.83743, 28.4688, 1.03", "-74.0124, 4.4486, 28.7512, 0.15", "-74.1351, 3.99505, 28.8078, 0.15", "-74.2503, 3.40689, 28.8477, 1.11", "-74.3781, 2.43065, 28.8743, 0.15", "-74.4619, 1.5966, 28.879, 1.84", "-74.6076, -0.0314827, 28.8745, 0.15", "-74.6368, -0.389363, 28.874, 0.59", "-74.6926, -0.944164, 28.8929, 1.03", "-74.8514, -2.15437, 29.0046, 0.15", "-74.9165, -2.54825, 29.0846, 0.52", "-75.0603, -3.28852, 29.3039, 0.15", "-75.1444, -3.72121, 29.4757, 0.66", "-75.2477, -4.38084, 29.7951, 0.15", "-75.3179, -5.1227, 30.2074, 1.62", "-75.3236, -6.17913, 30.8537, 0.07", "-75.2924, -6.56861, 31.088, 0.29", "-75.1807, -7.27984, 31.4792, 0.07", "-75.0936, -7.66738, 31.6564, 0.96", "-74.9414, -8.29476, 31.841, 2.21", "-74.8072, -8.84866, 31.9328, 1.33", "-74.6505, -9.63943, 31.9829, 0.07", "-74.5468, -10.3536, 31.9905, 0.07", "-74.4982, -10.9024, 31.9732, 1.03", "-74.4109, -12.2146, 31.906, 0.07", "-74.3975, -12.6387, 31.8789, 0.88", "-74.3918, -13.668, 31.8081, 0.07", "-74.3916, -14.0429, 31.78, 0.66", "-74.3908, -14.2985, 31.7647, 1.25", "-74.393, -15.0943, 31.7344, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.06335, 10.2596, 0.0, 0.58723", "5.74396, 24.801, 0.0, 0.58723", "9.42458, 39.3425, 0.0, 0.58723" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.362291, 20.4011, 1.38263, 0.37", "1.08469, 21.1386, 1.80201, 0.37", "1.31231, 21.3447, 1.94084, 0.37", "1.73731, 21.7419, 2.24336, 0.37", "2.24609, 22.3303, 2.68989, 0.22", "2.37256, 22.5533, 2.86766, 0.22", "2.396, 22.8165, 3.11267, 0.22", "2.31258, 22.9733, 3.30656, 0.22", "2.13133, 23.223, 3.6057, 0.22", "1.81179, 23.6395, 4.11356, 0.22", "1.6121, 23.9075, 4.44703, 0.22", "1.3053, 24.4025, 5.03571, 0.66", "1.03849, 24.9889, 5.70527, 1.03", "0.782949, 25.7306, 6.57313, 0.22", "0.655032, 26.244, 7.22233, 0.22", "0.609483, 26.6049, 7.73335, 0.88", "0.603697, 26.9753, 8.3185, 1.47", "0.667393, 27.5547, 9.36405, 0.15", "0.761799, 28.0173, 10.2167, 0.15", "0.873054, 28.493, 11.0523, 0.15", "0.92355, 28.9555, 11.7833, 0.15", "0.903139, 29.4169, 12.4856, 0.15", "0.757777, 29.9668, 13.2917, 0.15", "0.322862, 30.8128, 14.3959, 0.96", "0.00301354, 31.2905, 14.958, 2.06", "-0.63162, 32.0567, 15.7534, 0.22", "-0.905152, 32.3704, 16.0437, 0.22", "-1.18019, 32.6538, 16.3081, 0.22", "-1.60702, 33.04, 16.732, 0.22", "-2.07968, 33.4224, 17.304, 0.22", "-2.37683, 33.6625, 17.7, 1.33", "-2.77331, 34.1383, 18.4128, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.362291, 20.4011, 1.38263, 1.25", "-0.0189181, 21.4233, 1.19118, 1.25", "-0.4934, 22.7456, 1.04011, 0.81", "-0.855668, 23.8752, 1.02544, 0.81", "-1.14899, 24.965, 1.10488, 1.11", "-1.35583, 25.9779, 1.25637, 1.4", "-1.45663, 26.8427, 1.45008, 0.59", "-1.43781, 27.6663, 1.7994, 0.59", "-1.24317, 28.6336, 2.39721, 0.52", "-1.03243, 29.2124, 2.8285, 0.59", "-0.772695, 29.7946, 3.30303, 0.59", "-0.433755, 30.5603, 3.94278, 0.44", "-0.268315, 31.0344, 4.32051, 0.44", "-0.240637, 31.3056, 4.48496, 0.44", "-0.337839, 31.7939, 4.70882, 0.52", "-0.629655, 32.5359, 5.03873, 0.66", "-0.935034, 33.1485, 5.31628, 0.29", "-1.18148, 33.5995, 5.54261, 0.29", "-1.4612, 34.179, 5.84675, 0.37", "-1.77376, 34.9294, 6.24185, 0.88", "-2.07368, 35.7048, 6.64819, 1.62", "-2.32153, 36.4205, 7.01857, 2.43", "-2.56621, 37.231, 7.43565, 2.43", "-2.91418, 38.5823, 8.12113, 0.22", "-3.04896, 39.2188, 8.44238, 0.52", "-3.15703, 39.8608, 8.74048, 0.22", "-3.19742, 40.201, 8.87356, 0.22", "-3.23012, 40.6368, 9.01638, 0.22", "-3.24943, 41.1665, 9.13877, 0.22", "-3.2593, 41.5201, 9.19815, 0.22", "-3.26786, 41.7523, 9.22662, 0.22", "-3.3226, 42.5803, 9.26558, 0.37", "-3.39215, 43.2847, 9.25061, 0.37", "-3.4746, 43.9573, 9.19661, 0.52", "-3.55835, 44.6375, 9.11979, 0.96", "-3.63592, 45.4511, 8.99995, 0.96", "-3.69251, 46.6925, 8.75991, 0.44", "-3.65486, 47.4993, 8.57158, 0.44", "-3.58209, 48.3355, 8.34874, 1.47", "-3.48898, 49.2075, 8.09292, 2.8", "-3.39538, 50.0124, 7.83151, 3.61", "-3.29195, 50.8469, 7.5271, 3.02", "-3.02472, 52.7988, 6.73131, 0.22", "-2.94628, 53.3948, 6.46621, 0.29", "-2.90493, 53.719, 6.31834, 0.29", "-2.83304, 54.3517, 6.01293, 0.22", "-2.76447, 55.111, 5.63793, 0.52", "-2.72347, 55.7434, 5.31665, 1.33", "-2.67951, 56.5355, 4.85171, 2.43", "-2.56395, 57.2674, 4.43338, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-9.46162, -18.6784, -15.0909, 0.44", "-11.5728, -19.8663, -16.3979, 0.44", "-11.6811, -20.3065, -16.7657, 0.44", "-11.7496, -20.7725, -17.1702, 0.44", "-11.863, -21.2696, -17.6185, 0.44", "-12.0596, -21.8384, -18.1681, 0.59", "-12.4087, -22.6025, -18.9935, 0.74", "-12.6286, -23.1269, -19.6314, 1.11", "-12.9369, -23.6975, -20.4431, 1.47", "-13.3107, -24.1982, -21.3083, 1.47", "-13.9373, -24.7692, -22.5665, 0.59", "-14.4732, -25.0479, -23.5082, 0.52", "-14.8882, -25.1149, -24.1572, 0.52", "-15.3761, -25.0791, -24.8199, 0.44", "-15.9343, -24.9583, -25.4137, 0.44", "-16.2382, -24.8784, -25.6766, 0.44", "-17.0137, -24.7025, -26.2061, 0.96", "-17.7549, -24.5675, -26.6505, 0.96", "-18.6344, -24.4583, -27.1292, 1.4", "-19.7702, -24.3802, -27.7063, 2.36", "-20.702, -24.3633, -28.1557, 3.32", "-21.7937, -24.3637, -28.6988, 3.61" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-9.46162, -18.6784, -15.0909, 0.29", "-8.97604, -20.4753, -16.1122, 0.29", "-8.77651, -21.0796, -16.484, 0.29", "-8.51804, -21.8684, -16.9927, 0.29", "-8.32688, -22.525, -17.45, 0.81", "-8.1453, -23.2297, -17.9739, 1.11", "-7.93821, -24.2431, -18.7953, 0.22", "-7.77947, -24.9618, -19.5148, 0.22", "-7.75684, -25.3765, -19.9826, 0.22", "-7.81291, -25.9463, -20.6833, 0.22", "-7.81334, -26.268, -20.9943, 0.37", "-7.76803, -26.8898, -21.5289, 0.37", "-7.69134, -27.3973, -21.9125, 0.81", "-7.53112, -28.135, -22.3956, 1.7", "-7.29679, -29.1714, -23.0393, 2.29", "-6.75297, -31.4355, -24.365, 0.29", "-6.54978, -32.2077, -24.7803, 0.96", "-6.39688, -32.7262, -25.0354, 0.96", "-5.99361, -33.9253, -25.5961, 0.15", "-5.68367, -34.6855, -25.9131, 0.15", "-5.45091, -35.1952, -26.1079, 0.59", "-4.92385, -36.164, -26.4494, 0.29", "-4.54781, -36.7792, -26.6369, 1.4", "-3.94748, -37.6962, -26.8907, 2.73", "-2.47282, -39.8126, -27.4054, 0.15", "-2.24175, -40.1357, -27.4783, 0.74", "-1.82282, -40.7197, -27.6266, 0.74", "-1.16172, -41.6072, -27.887, 0.15", "-0.559416, -42.4044, -28.1381, 0.15", "-0.0498389, -43.1, -28.368, 0.15", "0.385047, -43.7196, -28.6088, 1.25", "0.97675, -44.6537, -29.0212, 0.22", "1.30424, -45.303, -29.3409, 0.22", "1.41843, -45.6477, -29.5134, 0.22", "1.50305, -46.1639, -29.7362, 0.22", "1.57294, -47.1271, -30.0939, 0.44", "1.59371, -48.0477, -30.3933, 1.62", "1.6054, -49.0395, -30.6933, 3.02", "1.63782, -50.2373, -31.0461, 3.02", "1.77221, -52.9055, -31.8506, 0.29", "1.85139, -53.881, -32.1431, 0.81", "1.94998, -54.7267, -32.386, 1.03", "2.08206, -55.6008, -32.6389, 0.37", "2.2068, -56.2765, -32.8186, 1.18", "2.51836, -57.6313, -33.1656, 0.22", "2.6788, -58.1417, -33.2916, 0.74", "2.84449, -58.556, -33.3824, 0.74", "3.0602, -58.9943, -33.4585, 0.15", "3.69366, -60.1817, -33.5852, 0.44", "3.87952, -60.4739, -33.6061, 0.44", "4.51446, -61.3581, -33.6591, 0.22", "4.88629, -61.8763, -33.7084, 1.11", "5.16788, -62.3202, -33.7602, 1.62", "5.59324, -63.068, -33.8603, 1.62", "6.41276, -64.8056, -34.1598, 0.22", "6.72387, -65.7052, -34.2995, 0.96", "6.89418, -66.6661, -34.4206, 1.18", "6.95207, -68.4079, -34.623, 0.15", "6.93147, -68.9985, -34.6908, 0.22", "6.72764, -70.3853, -34.8509, 0.07", "6.49911, -71.0168, -34.9223, 0.22", "5.82148, -72.2968, -35.0477, 0.07", "5.49168, -72.7407, -35.0837, 0.15", "7.18556, -82.6265, -38.8846, 0.15", "7.45952, -92.8694, -42.0558, 0.15", "10.0411, -102.722, -45.4199, 0.15", "13.2516, -112.054, -49.6204, 0.15", "16.1814, -120.954, -54.8401, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.00768, -37.1046, 6.96716, 1.99", "-3.3587, -38.7063, 6.88929, 1.99", "-3.76246, -40.9228, 6.80642, 0.59", "-3.95048, -42.1864, 6.77081, 0.59", "-4.12155, -43.6998, 6.75813, 0.59", "-4.17398, -44.4403, 6.76482, 1.11", "-4.2123, -45.7854, 6.81588, 2.58", "-4.16206, -46.4436, 6.86764, 2.88", "-4.0757, -47.011, 6.93754, 2.65", "-3.95019, -47.8801, 7.07781, 1.55", "-3.79575, -49.1023, 7.3184, 0.74", "-3.69551, -50.2689, 7.55484, 0.44", "-3.66541, -51.2919, 7.75949, 0.29", "-3.69132, -52.0854, 7.91742, 0.29", "-3.78182, -53.0991, 8.12741, 0.29", "-3.8107, -53.42, 8.19678, 0.29", "-3.87175, -54.0126, 8.32787, 0.44", "-3.94266, -54.5996, 8.44644, 1.11", "-4.02555, -55.263, 8.5889, 2.36", "-4.16606, -56.6421, 8.88858, 2.73", "-4.33689, -59.2091, 9.46252, 0.44", "-4.36484, -59.7145, 9.58737, 0.44", "-4.41748, -60.689, 9.8473, 0.59", "-4.4623, -61.6262, 10.1152, 0.29", "-4.48682, -62.2122, 10.2874, 0.29", "-4.47485, -62.7576, 10.4474, 0.29", "-4.42305, -63.3214, 10.6455, 0.29", "-4.34303, -63.7554, 10.8262, 0.88", "-4.17887, -64.3609, 11.1132, 1.84", "-3.98637, -64.9366, 11.4045, 2.14", "-3.41221, -66.5791, 12.2879, 0.44", "-3.16472, -67.3147, 12.6912, 0.66", "-2.87774, -68.1865, 13.2025, 0.29", "-2.77503, -68.499, 13.412, 0.29", "-2.68301, -68.8226, 13.6667, 0.29", "-2.65219, -69.0295, 13.8612, 0.29", "-2.71264, -69.2523, 14.0618, 0.29", "-2.88921, -69.7444, 14.2765, 0.29", "-3.00963, -70.12, 14.3697, 0.29", "-3.1305, -70.5669, 14.4562, 0.29", "-3.30543, -71.2806, 14.5725, 1.18", "-3.46566, -72.0114, 14.7072, 2.43", "-3.6233, -72.8577, 14.8866, 2.88", "-3.81962, -74.165, 15.2054, 1.55", "-4.00123, -75.8232, 15.6963, 0.52", "-4.08177, -76.8706, 16.0714, 0.29", "-4.13399, -77.7056, 16.4172, 0.29", "-4.16281, -78.3845, 16.7311, 0.66", "-4.17516, -78.9349, 17.0035, 0.96", "-4.16476, -79.6584, 17.3363, 0.22", "-4.13442, -80.3427, 17.5652, 0.22", "-4.09254, -81.0792, 17.696, 0.29", "-4.04046, -81.7536, 17.7433, 0.59", "-3.95931, -82.8285, 17.7589, 1.33", "-3.87048, -84.0394, 17.7387, 2.21", "-3.79382, -85.0047, 17.7069, 3.24", "-3.62635, -86.7, 17.6474, 1.77", "-3.4708, -88.1155, 17.6137, 0.44", "-3.36204, -89.1159, 17.6012, 0.37", "-3.25331, -90.2482, 17.6015, 0.37", "-3.1924, -90.9851, 17.615, 0.88", "-3.17303, -91.3211, 17.622, 1.77", "-3.15524, -92.3997, 17.6313, 3.1", "-3.2375, -94.0743, 17.6163, 1.33", "-3.37998, -95.224, 17.5838, 0.74", "-3.65993, -96.5708, 17.517, 0.22", "-3.81395, -97.1211, 17.4797, 0.22", "-3.94684, -97.5181, 17.4485, 0.52", "-4.33314, -98.4652, 17.3611, 0.81", "-4.82748, -99.4908, 17.29, 0.29", "-4.9794, -99.8011, 17.2767, 0.37", "-5.30343, -100.534, 17.2649, 0.37", "-5.62803, -101.411, 17.3389, 0.44", "-5.94114, -102.416, 17.5148, 0.81", "-6.23584, -103.608, 17.8203, 0.81", "-6.41996, -104.538, 18.1116, 0.81", "-6.65306, -105.727, 18.5187, 0.37", "-6.95259, -107.159, 19.074, 0.37", "-7.10459, -107.882, 19.3981, 1.18", "-7.22712, -108.58, 19.7666, 2.8", "-7.29707, -109.171, 20.1249, 3.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.00768, -37.1046, 6.96716, 0.66", "-1.34814, -38.4835, 7.50531, 0.66", "-0.283377, -39.4991, 7.85322, 0.44", "0.442657, -40.3065, 8.09106, 0.88", "0.92155, -40.9302, 8.24953, 0.44", "1.29805, -41.5086, 8.36701, 0.22", "1.64639, -42.1561, 8.47665, 0.22", "1.82159, -42.8339, 8.52449, 0.22", "1.91328, -43.4617, 8.55787, 0.22", "1.94521, -44.0263, 8.60625, 0.59", "1.96236, -44.8511, 8.72819, 1.7", "1.96003, -45.9368, 8.93893, 1.47", "1.95504, -47.8147, 9.37287, 0.44", "1.98283, -48.8221, 9.62488, 0.29", "2.00482, -49.4631, 9.7911, 0.22", "2.03925, -50.1853, 9.96606, 0.22", "2.07406, -50.6961, 10.0885, 0.96", "2.16768, -51.683, 10.2942, 2.51", "2.31629, -52.784, 10.5083, 3.39", "2.497, -53.8266, 10.6784, 3.1", "2.82014, -55.2253, 10.9025, 1.03", "3.17796, -56.5661, 11.1206, 0.29", "3.46933, -57.5223, 11.3012, 0.22", "3.67697, -58.1424, 11.4361, 0.22", "3.79811, -58.4961, 11.5262, 0.22", "3.98447, -59.0122, 11.6681, 0.29", "4.18293, -59.5864, 11.8166, 0.22", "4.36453, -60.2787, 11.9064, 0.29", "4.44304, -60.6416, 11.9254, 0.81", "4.64818, -61.7126, 11.9125, 1.55", "4.80423, -62.5885, 11.8672, 2.29", "4.94326, -63.3604, 11.806, 2.06", "5.28008, -64.9836, 11.6727, 0.22", "5.42449, -65.5252, 11.6439, 0.22", "5.55918, -65.9185, 11.6448, 0.22", "5.63409, -66.0933, 11.6584, 0.22", "5.90266, -66.6333, 11.7495, 0.81", "6.32843, -67.4353, 11.9327, 1.84", "6.74884, -68.2514, 12.1729, 2.8", "7.1757, -69.2014, 12.501, 1.77", "7.49835, -70.0781, 12.8194, 0.81", "7.85536, -71.208, 13.244, 0.22", "8.04151, -71.8605, 13.4857, 0.29", "8.19734, -72.5047, 13.7262, 0.29", "8.38755, -73.6443, 14.1688, 0.59", "8.48436, -74.6876, 14.6107, 1.47", "8.4964, -75.2164, 14.8631, 1.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "35.2848, 16.4622, 38.6268, 0.22", "36.185, 16.9055, 39.9743, 0.22", "36.7923, 17.2046, 40.8832, 0.22", "37.642, 17.623, 42.155, 1.47", "37.9735, 17.7862, 42.6511, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "35.2848, 16.4622, 38.6268, 0.29", "36.4797, 15.5199, 39.9297, 0.29", "37.1721, 14.8637, 40.7092, 0.15", "37.4572, 14.5906, 41.0075, 0.22", "38.0351, 14.0415, 41.5725, 0.22", "38.7177, 13.3687, 42.2452, 0.22", "39.2551, 12.8477, 42.7429, 0.22", "39.9904, 12.1004, 43.3899, 0.22", "40.7225, 11.3479, 43.9996, 0.22", "41.4993, 10.5974, 44.5866, 0.22", "42.4906, 9.74372, 45.2129, 0.15", "43.4226, 9.02427, 45.6936, 0.15", "43.8922, 8.69595, 45.9022, 0.15", "44.4646, 8.2915, 46.1361, 0.66", "45.0397, 7.87123, 46.3534, 1.25", "45.99, 7.18303, 46.6676, 0.15", "46.4745, 6.84, 46.8125, 0.15", "47.2767, 6.27642, 47.0342, 0.88", "48.3871, 5.50807, 47.3181, 0.15", "48.8532, 5.19472, 47.4262, 0.44", "49.4618, 4.78929, 47.5759, 1.18", "50.7065, 3.96654, 47.9119, 0.07", "51.6282, 3.39072, 48.1706, 0.07", "52.3478, 2.94714, 48.403, 1.47", "52.7649, 2.70561, 48.5556, 1.47", "54.1132, 1.91239, 49.1019, 0.15", "54.6869, 1.55423, 49.3804, 1.11", "55.1466, 1.24264, 49.6438, 1.47", "56.529, 0.227427, 50.5533, 0.07", "57.2428, -0.369946, 51.0818, 0.15", "57.7391, -0.836974, 51.4889, 0.22", "58.4013, -1.53054, 52.1168, 0.07", "58.7789, -1.94303, 52.5124, 1.18", "59.2181, -2.41522, 52.9914, 1.77", "60.2285, -3.47866, 54.0983, 0.07", "60.8289, -3.99593, 54.6558, 0.15", "61.9752, -4.73993, 55.5532, 0.74", "62.9216, -5.16809, 56.1586, 0.15", "63.5473, -5.33552, 56.4883, 0.81", "64.2137, -5.41455, 56.7792, 2.14", "66.6988, -5.36735, 57.646, 0.15", "67.5853, -5.25521, 57.918, 0.15", "68.3033, -5.09919, 58.1239, 0.37", "69.6191, -4.711, 58.5493, 0.07", "70.1409, -4.51608, 58.7648, 0.88", "70.6068, -4.29105, 59.0021, 1.25", "71.7911, -3.50215, 59.8319, 0.07", "72.3575, -3.03685, 60.3329, 1.11", "72.8265, -2.56611, 60.8675, 1.55", "73.4185, -1.91699, 61.732, 0.07", "73.6862, -1.62075, 62.1893, 0.74", "74.1575, -1.07415, 63.1302, 0.15", "74.5207, -0.62334, 63.9593, 0.81", "74.9064, -0.148864, 64.8855, 1.25", "75.5252, 0.566383, 66.4113, 0.22", "75.7878, 0.841884, 67.084, 0.22", "75.9293, 0.954574, 67.4347, 0.22", "76.2626, 1.12118, 68.1873, 0.15", "76.594, 1.21765, 68.8977, 0.81", "77.3502, 1.26763, 70.3492, 0.22", "77.9787, 1.23877, 71.4376, 0.22", "78.5412, 1.13543, 72.306, 1.62", "79.1781, 0.950284, 73.2134, 0.15", "79.6543, 0.778404, 73.8367, 0.96", "80.8743, 0.313536, 75.2032, 0.07", "81.6872, 0.0137619, 76.0069, 0.59", "82.7906, -0.335879, 77.0378, 0.07", "83.5937, -0.545842, 77.7819, 0.07", "84.1047, -0.660096, 78.2516, 1.25", "85.7056, -0.916051, 79.6574, 0.07", "86.5534, -0.98858, 80.3367, 0.81", "87.9233, -1.00324, 81.3704, 0.07", "88.3533, -0.961023, 81.6858, 0.07", "88.8892, -0.857367, 82.074, 1.03", "90.0234, -0.575868, 82.9026, 0.07", "91.0831, -0.207146, 83.674, 0.07", "92.2378, 0.252796, 84.4604, 0.07", "92.9658, 0.597855, 84.9144, 0.66", "93.4739, 0.855944, 85.2383, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.42458, 39.3425, 0.0, 0.181549", "13.1052, 53.8839, 0.0, 0.181549", "16.7858, 68.4253, 0.0, 0.181549" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-2.77331, 34.1383, 18.4128, 0.22", "-3.98844, 34.6524, 19.4191, 0.22", "-4.43794, 34.9321, 19.8076, 0.22", "-4.77507, 35.2499, 20.1881, 0.15", "-5.0429, 35.573, 20.5767, 0.15", "-5.22309, 35.8204, 20.8478, 0.15", "-5.50177, 36.3263, 21.3573, 0.66", "-5.70992, 36.788, 21.7943, 0.22", "-6.04857, 37.5011, 22.4852, 0.22", "-6.31611, 38.0557, 23.035, 1.62", "-6.63764, 38.7273, 23.7345, 3.1", "-7.50868, 40.41, 25.595, 0.29", "-7.87843, 41.0461, 26.3487, 0.22", "-8.05939, 41.3262, 26.6827, 0.22", "-8.10931, 41.402, 26.7689, 0.22", "-8.32559, 41.7291, 27.1443, 0.22", "-8.56234, 42.065, 27.5726, 0.22", "-8.94496, 42.4636, 28.1417, 0.22", "-9.32673, 42.9262, 28.7434, 0.88", "-9.53218, 43.1956, 29.058, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.77331, 34.1383, 18.4128, 0.22", "-1.05642, 34.49, 18.9458, 0.22", "-0.261123, 34.6529, 19.1926, 0.37", "0.42979, 34.7944, 19.4071, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-2.56395, 57.2674, 4.43338, 0.15", "-3.31513, 59.2017, 4.2371, 0.15", "-3.71582, 60.225, 4.18457, 0.81", "-4.0236, 61.0092, 4.11056, 1.18", "-4.66521, 62.6335, 3.92512, 0.22", "-4.99182, 63.516, 3.81979, 0.81", "-5.18618, 64.084, 3.76862, 0.81", "-5.53955, 65.33, 3.77023, 0.07", "-5.84676, 66.6645, 3.81089, 0.07", "-5.9729, 67.369, 3.8357, 0.96", "-6.13041, 68.4681, 3.86118, 1.92", "-6.35867, 69.9489, 3.91254, 0.22", "-6.46819, 70.7408, 3.97129, 0.22", "-6.55673, 71.4583, 4.05235, 0.22", "-6.63907, 72.1337, 4.16486, 0.81", "-6.75072, 72.9436, 4.30202, 1.11", "-7.05928, 74.7093, 4.57326, 0.15", "-7.30727, 76.0136, 4.72338, 0.15", "-7.41493, 76.5695, 4.77559, 0.74", "-7.59655, 77.7174, 4.87514, 1.92", "-7.65773, 78.2533, 4.91506, 2.88", "-7.74695, 79.4255, 5.01727, 1.84", "-7.81562, 81.26, 5.20684, 0.22", "-7.84427, 82.4535, 5.337, 0.59", "-7.84265, 83.2629, 5.42485, 0.59", "-7.81197, 84.3039, 5.5195, 0.22", "-7.74485, 85.4622, 5.59557, 0.22", "-7.67965, 86.3134, 5.61214, 0.22", "-7.66408, 87.1968, 5.55191, 0.15", "-7.73838, 88.3074, 5.36011, 0.15", "-7.85945, 89.1864, 5.11418, 0.88", "-8.05649, 90.3082, 4.6985, 1.77", "-8.22057, 91.1423, 4.34539, 1.77", "-8.6382, 92.781, 3.61805, 0.15", "-8.87949, 93.5793, 3.26617, 0.37", "-9.11415, 94.308, 2.97222, 0.96", "-9.4015, 95.1932, 2.69181, 1.77", "-9.84968, 96.6391, 2.36505, 0.29", "-10.2516, 98.1322, 2.14542, 0.15", "-10.3306, 98.5286, 2.11529, 0.52", "-10.5062, 99.398, 2.07484, 1.18", "-10.819, 100.841, 2.04593, 0.15", "-11.0122, 101.72, 2.04455, 0.15", "-11.1568, 102.507, 2.06998, 1.03", "-11.3243, 104.023, 2.19659, 2.8" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.56395, 57.2674, 4.43338, 0.22", "-2.46874, 58.224, 4.99016, 0.22", "-2.39574, 59.1416, 5.53606, 0.22", "-2.33435, 59.8463, 5.95346, 0.96", "-2.27199, 60.3609, 6.26156, 1.18", "-2.11534, 61.2716, 6.80726, 0.15", "-1.98888, 61.8172, 7.14755, 0.15", "-1.86698, 62.1916, 7.37953, 0.15", "-1.70841, 62.6169, 7.61068, 0.15", "-1.53124, 63.1077, 7.81238, 0.15", "-1.32495, 63.6906, 7.98432, 1.33", "-1.05062, 64.4484, 8.12764, 2.73", "-0.824477, 65.1539, 8.20779, 3.1", "-0.315171, 67.1918, 8.28478, 0.22", "-0.137006, 68.1138, 8.27369, 0.15", "-0.0444349, 68.7513, 8.24352, 0.52", "0.0259259, 69.3423, 8.20323, 0.74", "0.151749, 70.557, 8.10174, 0.22", "0.221587, 71.2673, 8.05401, 1.18", "0.28555, 71.9095, 8.03824, 2.58", "0.444495, 73.498, 8.09253, 0.22", "0.50854, 74.1593, 8.13747, 0.22", "0.568775, 74.8542, 8.1945, 0.81", "0.65417, 75.9864, 8.29692, 2.51", "0.761382, 77.9343, 8.47605, 0.22", "0.775141, 78.7674, 8.54343, 0.29", "0.739545, 79.6913, 8.59736, 0.15", "0.669174, 80.6301, 8.63223, 0.15", "0.58303, 81.3699, 8.64023, 1.03", "0.472927, 82.0071, 8.62233, 1.99", "0.291517, 82.7096, 8.56044, 1.99", "-0.210764, 84.2768, 8.34653, 0.15", "-0.455225, 84.9214, 8.22868, 0.15", "-0.686265, 85.4779, 8.09861, 0.15", "-0.875607, 85.8908, 7.98027, 0.44", "-1.43448, 86.9493, 7.61381, 0.15", "-1.91258, 87.734, 7.29136, 1.47", "-2.3588, 88.3432, 6.99298, 2.51", "-3.12916, 89.2831, 6.49201, 0.37", "-3.5646, 89.7775, 6.20636, 0.22", "-3.96108, 90.1842, 5.94196, 0.07", "-4.34973, 90.5237, 5.6963, 0.29", "-5.10468, 91.0834, 5.25753, 0.07", "-5.75807, 91.5327, 4.9007, 0.44", "-6.67588, 92.1218, 4.41523, 0.07", "-7.42661, 92.6011, 4.00388, 0.15", "-7.91166, 92.9137, 3.69095, 0.74", "-8.55151, 93.3116, 3.26409, 1.84", "-9.55645, 93.8942, 2.56634, 0.15", "-10.0999, 94.1944, 2.17657, 0.59", "-10.5299, 94.4245, 1.85871, 0.29", "-11.4508, 94.9556, 1.09521, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-21.7937, -24.3637, -28.6988, 1.47", "-23.521, -24.7822, -29.2117, 1.47", "-25.2727, -25.3422, -30.0014, 0.52", "-26.0886, -25.6917, -30.4736, 0.52", "-26.8722, -26.0275, -30.9272, 1.11", "-27.7394, -26.399, -31.4291, 2.21", "-28.5372, -26.7408, -31.8908, 1.11", "-29.8379, -27.5054, -32.9123, 0.44", "-30.5616, -28.1194, -33.6581, 1.47", "-40.3626, -31.8265, -36.7385, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-21.7937, -24.3637, -28.6988, 0.22", "-21.733, -26.7034, -29.6132, 0.22", "-21.7306, -27.476, -29.9288, 0.22", "-21.7325, -28.4096, -30.3001, 0.96", "-21.7229, -29.7579, -30.8678, 0.22", "-21.6945, -30.6774, -31.2912, 0.22", "-21.6721, -31.4002, -31.624, 0.81", "-21.654, -32.145, -31.9933, 1.92", "-21.6264, -33.0395, -32.4339, 0.81", "-21.5667, -34.1673, -33.0515, 0.15", "-21.4914, -35.011, -33.5782, 0.66", "-20.5559, -44.0955, -39.6268, 0.66", "-20.7911, -54.1544, -43.9572, 0.66", "-21.3139, -63.7856, -49.1493, 0.66", "-23.2033, -73.8376, -53.0705, 0.66", "-26.0872, -83.6238, -57.0583, 0.66", "-26.9363, -94.214, -59.7261, 0.66", "-26.6599, -105.132, -60.5748, 0.66", "-27.1147, -116.043, -59.7253, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.29707, -109.171, 20.1249, 0.37", "-6.37022, -110.337, 20.4502, 0.37", "-5.90081, -111.104, 20.6789, 0.22", "-5.6875, -111.556, 20.826, 0.22", "-5.4792, -112.113, 21.0193, 0.22", "-5.32202, -112.623, 21.1937, 0.29", "-5.17543, -113.267, 21.3946, 0.29", "-5.16584, -113.814, 21.5536, 0.22", "-5.19953, -114.34, 21.7013, 0.81", "-5.24263, -114.844, 21.8432, 1.77", "-5.28503, -115.357, 21.9822, 2.43", "-5.33303, -116.382, 22.2212, 0.96", "-5.35777, -117.82, 22.5323, 0.22", "-5.37647, -118.383, 22.6514, 1.18", "-5.423, -119.018, 22.7867, 1.7", "-5.45349, -119.289, 22.8458, 1.7", "-5.5877, -120.164, 23.0656, 0.74", "-5.74213, -121.011, 23.2959, 0.29", "-5.90233, -121.813, 23.5079, 0.29", "-6.00783, -122.42, 23.6734, 0.29", "-6.10719, -122.915, 23.8128, 0.66", "-6.22744, -123.477, 23.9828, 1.47", "-6.33715, -123.978, 24.1501, 2.73", "-6.40392, -124.443, 24.3015, 2.88", "-6.38051, -125.643, 24.6797, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.29707, -109.171, 20.1249, 0.22", "-9.35353, -110.293, 19.7245, 0.22", "-10.4212, -110.904, 19.4743, 0.22", "-10.8916, -111.223, 19.3473, 0.22", "-11.2439, -111.493, 19.2452, 0.22", "-11.7951, -111.939, 19.0978, 0.29", "-12.2152, -112.28, 18.9882, 0.96", "-13.0755, -113.019, 18.6966, 1.84", "-14.2727, -114.088, 18.208, 0.22", "-14.9802, -114.709, 17.9015, 0.22", "-15.7659, -115.327, 17.5468, 0.96", "-16.7376, -115.953, 17.1127, 0.22", "-17.709, -116.369, 16.6683, 0.22", "-18.0945, -116.457, 16.4887, 0.22", "-18.9297, -116.539, 16.1097, 0.22", "-19.9467, -116.619, 15.6643, 0.29", "-20.6566, -116.705, 15.3656, 1.25", "-21.9318, -116.937, 14.8874, 2.88", "-22.4722, -117.056, 14.704, 2.73", "-24.6446, -117.699, 13.9647, 0.29", "-25.4872, -118.034, 13.6767, 0.66", "-26.6021, -118.552, 13.2888, 0.29", "-27.2516, -118.871, 13.0408, 0.22", "-28.1077, -119.28, 12.7, 0.22", "-28.9852, -119.656, 12.32, 0.22", "-30.3352, -120.146, 11.6806, 0.22", "-30.9297, -120.296, 11.3654, 0.37", "-31.9468, -120.497, 10.7951, 0.37", "-32.8752, -120.641, 10.2447, 0.66", "-33.4859, -120.711, 9.86693, 1.62", "-34.1963, -120.696, 9.40074, 2.51", "-35.4166, -120.493, 8.54369, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.4964, -75.2164, 14.8631, 3.24", "8.59503, -76.5078, 14.8598, 3.24", "8.70394, -77.6228, 14.8431, 3.24", "8.96796, -79.9012, 14.7864, 0.22", "9.15845, -81.3561, 14.7377, 0.29", "9.269, -82.1326, 14.7064, 0.22", "9.41418, -83.0766, 14.6621, 0.22", "9.51738, -83.6662, 14.6157, 0.22", "9.60511, -84.1112, 14.5777, 0.22", "9.75033, -84.8248, 14.5161, 0.74", "9.83289, -85.3161, 14.4801, 0.74", "9.90121, -86.1545, 14.4673, 0.22", "9.91132, -86.8902, 14.5, 0.22", "9.91822, -87.9122, 14.5444, 0.22", "9.92082, -88.5816, 14.537, 0.22", "9.93562, -89.5171, 14.4856, 0.22", "9.98782, -90.4879, 14.3896, 1.33", "10.0941, -91.7449, 14.2112, 3.02", "10.3124, -93.3602, 13.9057, 0.88", "10.5844, -94.9064, 13.5936, 0.22", "10.7399, -95.6899, 13.4371, 0.22", "10.9655, -96.7509, 13.2366, 0.22", "11.102, -97.3983, 13.1367, 1.18", "11.3719, -98.6846, 13.0318, 2.06", "11.7412, -100.491, 13.0787, 0.22", "11.8862, -101.343, 13.2041, 0.52", "11.9847, -102.073, 13.3636, 0.52", "12.1574, -103.454, 13.7331, 0.22", "12.2364, -104.059, 13.9164, 0.22", "12.4156, -105.413, 14.3695, 1.99", "12.764, -107.722, 15.1404, 0.29", "12.8707, -108.472, 15.3895, 0.22", "13.0416, -109.736, 15.7983, 0.22", "13.1278, -110.378, 15.985, 1.03", "13.2245, -111.136, 16.184, 2.14", "13.3188, -111.85, 16.3549, 2.06", "13.5538, -113.628, 16.7561, 0.22", "13.6303, -114.414, 16.9335, 0.66", "13.7387, -116.052, 17.2998, 0.22", "13.7908, -117.107, 17.5221, 0.22", "13.8191, -117.8, 17.6402, 0.66", "13.8601, -118.838, 17.7835, 0.22", "13.9016, -119.774, 17.8829, 1.55", "13.9293, -120.545, 17.9535, 2.8", "13.9533, -121.323, 18.0065, 2.58", "14.0634, -123.941, 18.0726, 0.22", "14.0786, -124.753, 18.1021, 0.22", "14.0746, -125.451, 18.1235, 0.59", "14.0681, -126.079, 18.1489, 0.29", "14.051, -126.89, 18.1891, 1.03", "14.0199, -127.862, 18.2315, 2.06", "13.8944, -129.816, 18.3049, 0.15", "13.8612, -130.309, 18.3103, 0.15", "13.7987, -131.397, 18.2879, 0.29", "13.7618, -132.137, 18.263, 0.15", "13.7234, -132.982, 18.2263, 0.15", "13.7089, -133.699, 18.2004, 0.96", "13.7126, -134.447, 18.1646, 2.06", "13.7161, -135.472, 18.1574, 2.14", "13.6914, -137.893, 18.2312, 0.22", "13.6718, -138.673, 18.31, 0.22", "13.6408, -139.751, 18.4825, 0.22", "13.6329, -140.069, 18.5496, 0.59", "13.608, -140.858, 18.7514, 1.4", "13.5851, -141.684, 18.9842, 0.66", "13.5655, -143.382, 19.4924, 0.22", "13.5212, -144.209, 19.73, 0.22", "13.4678, -144.832, 19.8935, 0.22", "13.4121, -145.51, 20.0589, 1.03", "13.3485, -146.534, 20.2709, 2.21", "13.2744, -148.715, 20.67, 0.15", "13.2669, -150.03, 20.8574, 0.15", "13.2695, -150.569, 20.9282, 0.81", "13.2747, -151.338, 21.0234, 1.33", "13.2806, -152.489, 21.1659, 0.22", "13.2811, -153.645, 21.3035, 0.22", "13.2829, -154.363, 21.3799, 0.88", "13.2905, -154.996, 21.4571, 0.66", "13.3185, -156.425, 21.6684, 0.15", "13.3539, -157.476, 21.8398, 0.15", "13.3789, -157.871, 21.9064, 0.74", "13.454, -158.668, 22.0321, 1.18", "13.6619, -160.278, 22.2819, 0.22", "13.8362, -161.21, 22.4269, 0.22", "13.985, -161.796, 22.4988, 0.22", "14.1648, -162.389, 22.5621, 0.22", "14.4017, -163.131, 22.6281, 0.22", "14.6493, -163.951, 22.6931, 1.33", "14.9037, -164.9, 22.7641, 2.21", "15.2873, -166.586, 22.8851, 0.15", "15.4645, -167.278, 22.936, 0.29", "15.5629, -167.614, 22.9591, 0.29", "15.9212, -168.682, 23.0319, 0.15", "16.0252, -168.995, 23.0545, 0.15", "16.228, -169.689, 23.1028, 0.66", "16.566, -170.917, 23.2214, 0.15", "16.6862, -171.401, 23.2646, 0.15", "16.7865, -171.754, 23.3027, 0.15", "17.0529, -172.572, 23.4143, 0.15", "17.2176, -173.092, 23.4957, 0.37", "17.433, -173.842, 23.6181, 1.03", "17.6502, -174.644, 23.753, 0.22", "17.9759, -175.772, 23.9346, 0.22", "18.2743, -176.737, 24.0746, 1.4", "18.5459, -177.58, 24.1773, 2.14", "18.8298, -178.494, 24.2832, 1.4", "19.3028, -180.225, 24.4722, 0.22", "19.4265, -180.766, 24.5282, 0.81", "19.545, -181.45, 24.5953, 1.55", "19.7286, -182.775, 24.7289, 0.29", "19.8595, -183.938, 24.8599, 0.22", "19.9253, -184.727, 24.9508, 0.22", "19.9467, -185.527, 25.0354, 0.29", "19.9458, -186.437, 25.1464, 0.15", "19.9344, -187.131, 25.2343, 0.96", "19.9219, -187.61, 25.291, 1.47", "19.9069, -188.327, 25.3527, 1.47", "19.9238, -189.589, 25.4329, 0.22", "19.9907, -190.831, 25.492, 0.22", "20.0538, -191.53, 25.5061, 0.88", "20.1741, -192.466, 25.5065, 0.88", "20.4121, -193.931, 25.4939, 0.15", "20.6253, -194.928, 25.4703, 0.15", "20.8104, -195.649, 25.4403, 0.81", "21.1429, -196.802, 25.4146, 0.15", "21.3689, -197.546, 25.4248, 0.81", "21.644, -198.441, 25.466, 0.52", "21.8717, -199.244, 25.5323, 1.62", "22.0635, -200.075, 25.6341, 1.62", "22.3542, -201.763, 25.8634, 0.22", "22.4729, -202.703, 25.9937, 0.22", "22.5182, -203.262, 26.0584, 0.74", "22.5468, -203.888, 26.1187, 0.29", "22.561, -204.791, 26.2039, 1.47", "22.5715, -205.418, 26.2548, 1.47", "22.5734, -206.894, 26.3401, 0.15", "22.6139, -207.616, 26.4024, 0.52", "22.718, -208.626, 26.5047, 0.15", "22.8246, -209.388, 26.5886, 0.15", "22.8903, -209.812, 26.6388, 0.66", "23.0181, -210.589, 26.738, 1.47", "23.3141, -212.314, 26.9627, 0.22", "23.477, -213.257, 27.0668, 0.15", "23.5779, -213.873, 27.1071, 0.15", "23.6992, -214.658, 27.1461, 0.74", "23.8552, -215.839, 27.1967, 0.15", "23.9523, -216.62, 27.2209, 0.15", "24.067, -217.881, 27.2539, 0.22", "24.1368, -218.715, 27.2919, 1.18", "24.216, -219.69, 27.352, 1.7", "24.4005, -221.722, 27.5043, 0.22", "24.4782, -222.512, 27.5689, 0.22", "24.5647, -223.253, 27.6325, 0.15", "24.7059, -224.317, 27.7374, 0.15", "24.7755, -224.927, 27.8183, 0.44", "24.9324, -226.606, 28.0675, 0.15", "24.9699, -227.14, 28.1697, 0.88", "25.0004, -227.894, 28.3325, 1.7", "25.0178, -228.732, 28.52, 1.4", "25.0058, -230.678, 28.9478, 0.15", "24.9978, -231.07, 29.0308, 0.22", "24.9465, -232.445, 29.3102, 0.07", "24.9209, -233.145, 29.4382, 1.33", "24.8985, -233.762, 29.5398, 1.33", "24.8897, -234.895, 29.6966, 0.07", "24.9221, -235.73, 29.7672, 0.15", "24.9609, -236.289, 29.7967, 0.15", "25.0167, -236.855, 29.8076, 0.22", "25.1313, -237.93, 29.8218, 0.07", "25.169, -238.324, 29.8279, 0.66", "25.2163, -238.958, 29.838, 0.29", "25.3058, -240.447, 29.8536, 0.15", "25.3358, -240.833, 29.8562, 0.22", "25.4014, -241.621, 29.8689, 0.07", "25.4639, -242.326, 29.8927, 0.74", "25.5538, -243.428, 29.9633, 0.15", "25.592, -243.968, 30.0128, 0.59", "25.6626, -245.421, 30.1716, 0.15", "25.693, -246.036, 30.2551, 0.29", "25.7206, -246.806, 30.3614, 0.15", "25.7314, -247.426, 30.4492, 0.88", "25.7279, -247.963, 30.5259, 1.92", "25.6627, -250.295, 30.8519, 0.22", "25.611, -251.49, 31.0058, 1.7", "25.4879, -254.119, 31.3129, 0.15", "25.4202, -255.233, 31.4315, 0.15", "25.3685, -255.926, 31.5038, 0.81", "25.2304, -257.49, 31.657, 0.22", "25.1465, -258.378, 31.7306, 1.25", "25.1025, -258.861, 31.7634, 1.84", "24.9385, -261.055, 31.9254, 0.15", "24.9082, -261.623, 31.9642, 0.29", "24.8982, -262.637, 32.0467, 0.07", "24.9072, -263.265, 32.1061, 0.15", "24.9549, -264.758, 32.2703, 0.15", "24.9766, -265.159, 32.3178, 0.52", "25.0216, -265.731, 32.3894, 1.4", "25.1103, -267.371, 32.6541, 0.07", "25.1408, -268.538, 32.8771, 0.15", "25.1339, -269.074, 33.0056, 0.74", "25.1133, -269.612, 33.1506, 1.92", "25.0829, -270.434, 33.401, 1.92", "25.0201, -272.573, 34.1159, 0.15", "25.0199, -273.323, 34.4034, 0.59", "25.1024, -274.557, 34.9319, 0.07", "25.1373, -274.845, 35.065, 0.15", "25.3045, -275.806, 35.5265, 0.15", "25.4509, -276.479, 35.849, 0.37", "25.6713, -277.322, 36.2205, 0.96", "25.8987, -278.094, 36.4944, 1.47", "26.3406, -279.44, 36.8865, 0.15", "26.5942, -280.201, 37.0744, 0.15", "26.7819, -280.787, 37.1874, 1.11", "26.965, -281.392, 37.2785, 1.7", "27.4441, -283.207, 37.4649, 0.15", "27.5981, -283.849, 37.5144, 0.81", "27.7745, -284.607, 37.551, 1.03", "28.2445, -286.424, 37.6073, 0.15", "28.444, -287.107, 37.6238, 0.22", "28.7062, -288.014, 37.637, 0.07", "28.8637, -288.619, 37.6419, 0.88", "29.0407, -289.334, 37.6525, 1.62", "29.483, -291.017, 37.6965, 0.15", "29.7314, -291.845, 37.7105, 1.33", "30.237, -293.411, 37.7388, 0.07", "30.3847, -293.889, 37.7586, 0.22", "30.8043, -295.406, 37.8752, 0.07", "30.9575, -295.998, 37.9472, 0.96", "31.3259, -297.568, 38.1947, 0.15", "31.5009, -298.274, 38.3201, 1.11", "32.0863, -300.432, 38.7271, 0.15", "32.349, -301.376, 38.8863, 1.11", "32.5813, -302.231, 39.01, 1.47", "33.0801, -304.266, 39.2773, 0.15", "33.2473, -304.99, 39.3513, 0.88", "33.4453, -305.869, 39.3952, 1.33", "33.8361, -307.834, 39.3586, 0.15", "33.9878, -308.872, 39.2785, 0.96", "34.1395, -310.842, 39.0322, 0.15", "34.1262, -311.64, 38.9159, 0.15", "34.0498, -312.488, 38.8086, 0.74", "33.811, -313.768, 38.6937, 0.44", "33.5704, -314.634, 38.6477, 1.11", "33.3465, -315.286, 38.6382, 1.7", "32.4611, -317.611, 38.6938, 0.15", "31.9805, -318.804, 38.772, 1.33", "31.5126, -319.94, 38.8957, 0.15", "31.3324, -320.386, 38.965, 0.74", "31.1251, -320.931, 39.0766, 1.4", "30.8684, -321.646, 39.2449, 0.74" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.4964, -75.2164, 14.8631, 1.03", "8.50897, -76.5229, 20.1271, 1.03", "8.54296, -76.7435, 21.2288, 1.03", "8.60524, -76.9137, 22.2446, 1.03", "8.68527, -77.0797, 23.2252, 1.03", "8.77493, -77.2053, 23.9515, 1.03", "8.93845, -77.3853, 24.9278, 1.03", "9.22773, -77.4815, 25.4939, 0.88", "9.47559, -77.5886, 25.9969, 0.88", "9.73772, -77.8373, 26.7193, 0.44", "9.90728, -78.2912, 27.4694, 0.59", "9.98482, -78.6748, 28.0066, 0.22", "10.1503, -79.4348, 29.3021, 0.22", "10.2842, -79.9367, 30.3669, 0.44", "10.3737, -80.1541, 31.0172, 1.4", "10.5729, -80.3971, 32.2104, 2.14", "10.9731, -80.5423, 33.9346, 0.59", "11.8075, -80.4921, 36.4806, 0.59", "12.1994, -80.394, 37.2861, 0.44", "13.0209, -80.1132, 38.5857, 0.81", "13.7657, -79.8005, 39.5982, 1.99", "14.9834, -79.2328, 40.9593, 0.22", "15.6075, -78.9531, 41.5276, 1.03", "16.5635, -78.5723, 42.2524, 0.22", "17.6514, -78.1978, 43.0451, 0.96", "18.3668, -77.9741, 43.5535, 1.92", "19.9724, -77.5125, 44.8773, 0.22", "20.6042, -77.3168, 45.4945, 0.22", "20.9612, -77.1977, 45.8759, 0.22", "21.572, -76.9804, 46.5604, 1.11", "22.3502, -76.6892, 47.4325, 2.58", "23.8568, -76.0604, 49.1376, 1.11", "24.5664, -75.7265, 49.9598, 0.44", "25.199, -75.4426, 50.7085, 0.44", "25.5782, -75.2935, 51.1851, 0.22", "25.913, -75.1989, 51.6102, 0.22", "26.2436, -75.1482, 52.0299, 0.22", "26.7896, -75.1382, 52.7597, 1.4", "27.6717, -75.2679, 54.2172, 0.37", "28.225, -75.4716, 55.5447, 0.29", "28.5443, -75.7341, 56.6499, 0.29", "28.5899, -75.8081, 56.8727, 0.29", "28.6636, -76.1849, 57.6578, 0.29", "28.6655, -76.6371, 58.3946, 0.29", "28.6226, -77.4432, 59.4832, 0.59", "28.5649, -78.0909, 60.2319, 1.84", "28.4893, -78.7012, 60.8808, 2.06", "28.3005, -80.1101, 62.2725, 0.52", "28.1709, -80.9577, 63.0128, 0.22", "28.0267, -81.7405, 63.6277, 0.22", "27.895, -82.2537, 63.9853, 0.22", "27.7408, -82.592, 64.2254, 0.52", "27.4269, -83.0165, 64.5551, 0.81", "26.4452, -83.8376, 65.3497, 0.22", "25.7063, -84.2598, 65.9007, 1.47", "25.1991, -84.4705, 66.2781, 1.92", "24.0543, -84.8161, 67.1633, 0.44", "23.5078, -84.9194, 67.5985, 0.22", "22.8729, -84.9317, 68.1188, 0.81", "21.8549, -84.7959, 68.9829, 0.22", "21.3325, -84.6974, 69.435, 0.22", "21.065, -84.6504, 69.6786, 0.22", "20.5675, -84.602, 70.149, 0.59", "19.5389, -84.5934, 71.1637, 0.37", "18.8977, -84.6362, 71.833, 0.37", "18.3939, -84.683, 72.4477, 0.37", "18.0481, -84.7305, 72.9825, 0.37", "17.7059, -84.8646, 73.7208, 0.37", "17.5396, -85.0606, 74.3011, 0.37", "17.4376, -85.292, 74.8191, 0.37", "17.3028, -85.5523, 75.4974, 0.37", "16.9815, -85.6807, 76.1875, 0.37", "16.3954, -85.783, 76.7521, 0.37", "15.6497, -85.8615, 77.1968, 0.37", "14.9125, -85.8732, 77.5018, 0.37", "14.517, -85.8506, 77.6132, 0.37", "12.9179, -85.5992, 77.9625, 0.29", "11.3124, -85.1065, 78.2563, 0.22", "10.8067, -84.9081, 78.3392, 0.22", "9.78235, -84.4665, 78.5352, 0.15", "9.06072, -84.1646, 78.712, 0.59", "8.37799, -83.8883, 78.9001, 0.29", "7.76066, -83.6716, 79.1032, 0.88", "6.74759, -83.385, 79.5022, 0.96", "5.29764, -83.1155, 80.0566, 0.22", "4.43439, -83.0331, 80.3726, 1.33", "3.86441, -83.0165, 80.5695, 1.4", "2.49704, -83.0752, 80.9893, 0.15", "2.13192, -83.1253, 81.108, 0.15", "1.64294, -83.2247, 81.281, 0.15", "1.28333, -83.331, 81.4098, 0.15", "1.04479, -83.4037, 81.5016, 0.81", "0.673034, -83.4748, 81.6586, 0.81", "-0.594253, -83.581, 82.2421, 0.22", "-1.307, -83.5605, 82.5637, 0.22", "-1.99383, -83.4929, 82.8627, 1.11", "-2.65881, -83.3778, 83.1371, 1.62", "-4.13192, -83.0008, 83.6876, 0.22", "-4.98375, -82.6898, 83.9627, 1.11", "-6.10433, -82.1666, 84.2401, 0.22", "-6.87676, -81.783, 84.3884, 0.22", "-7.25467, -81.5837, 84.4454, 1.03", "-7.97879, -81.1867, 84.5173, 1.03", "-8.95048, -80.6319, 84.5579, 0.22", "-9.90829, -80.041, 84.5602, 0.52", "-10.9552, -79.3347, 84.5524, 0.15", "-11.3327, -79.0465, 84.5455, 0.15", "-11.6101, -78.8102, 84.5582, 0.52", "-12.0017, -78.4418, 84.5942, 1.18", "-13.1338, -77.2669, 84.7441, 0.22", "-13.6491, -76.6042, 84.8006, 1.03", "-13.9344, -76.1539, 84.8173, 1.99", "-14.9276, -74.3087, 84.8164, 0.29", "-15.1572, -73.7845, 84.7831, 0.96", "-15.4347, -72.9717, 84.6789, 1.7", "-15.802, -71.2643, 84.3496, 0.22", "-15.898, -70.4411, 84.1307, 0.22", "-15.9096, -69.7534, 83.8949, 0.96", "-15.7807, -68.5596, 83.3998, 0.07", "-15.6496, -67.8341, 83.0771, 0.74", "-15.3879, -66.8702, 82.6222, 0.22", "-15.032, -65.9148, 82.1879, 0.22", "-14.5477, -65.0821, 81.867, 0.66", "-13.7211, -64.0446, 81.5476, 0.07", "-13.1237, -63.4682, 81.4262, 0.22", "-12.2822, -62.7943, 81.368, 0.07", "-11.4245, -62.1909, 81.3664, 1.11", "-9.09725, -60.7447, 81.5565, 0.07", "-8.55997, -60.4481, 81.641, 0.07", "-8.17504, -60.2614, 81.7298, 0.29", "-7.14823, -59.7904, 82.0406, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "37.9735, 17.7862, 42.6511, 0.22", "38.21, 18.1859, 43.1852, 0.22", "38.4448, 18.4934, 43.6727, 0.22", "38.6539, 18.7169, 44.0748, 0.52", "38.9558, 19.0015, 44.6083, 1.7", "39.2406, 19.2052, 45.0408, 2.06", "39.8515, 19.5617, 45.9192, 0.52", "40.3104, 19.7924, 46.5562, 0.66", "40.7288, 19.9841, 47.1065, 2.14", "40.9772, 20.0973, 47.4245, 2.65", "41.8552, 20.5175, 48.5251, 0.29", "42.2442, 20.7083, 49.0482, 0.22", "42.6678, 20.9132, 49.6496, 0.22", "42.9918, 21.0582, 50.1415, 1.25", "43.465, 21.2545, 50.902, 0.15", "43.9076, 21.4318, 51.629, 0.81", "44.4504, 21.6501, 52.4456, 1.4", "44.8431, 21.7891, 52.9481, 2.21", "45.8536, 22.0742, 54.0485, 0.22", "46.3442, 22.1844, 54.5053, 0.88", "46.8016, 22.2695, 54.8664, 1.18", "47.7671, 22.452, 55.4842, 0.22", "48.2117, 22.5509, 55.7044, 0.59", "48.6267, 22.6544, 55.8659, 1.11", "49.305, 22.8245, 56.0754, 0.15", "49.575, 22.8922, 56.1653, 0.15", "49.8223, 22.969, 56.2728, 0.15", "50.0469, 23.0561, 56.4077, 0.37", "50.3619, 23.2191, 56.6542, 0.66", "51.0788, 23.6467, 57.3024, 0.15", "51.5779, 23.965, 57.8188, 1.62", "52.0821, 24.2778, 58.3842, 0.29", "52.6087, 24.5883, 59.021, 1.18", "53.327, 24.9687, 59.9495, 0.22", "53.806, 25.1852, 60.5967, 0.52", "54.3963, 25.3949, 61.4, 1.25", "54.8572, 25.5195, 62.0402, 2.14", "55.6288, 25.6343, 63.1315, 0.59", "56.1141, 25.658, 63.8292, 0.59", "56.5885, 25.6375, 64.4995, 0.22", "57.1372, 25.6056, 65.2766, 1.55", "57.4108, 25.5991, 65.6622, 1.55", "58.1382, 25.6648, 66.7061, 0.22", "58.3602, 25.7174, 67.0368, 0.22", "58.6725, 25.8418, 67.4612, 0.22", "58.9763, 26.0049, 67.8755, 0.96", "59.3081, 26.2424, 68.323, 1.25", "59.8995, 26.7703, 69.076, 0.22", "60.3666, 27.2917, 69.6142, 0.22", "60.882, 27.877, 70.194, 2.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "37.9735, 17.7862, 42.6511, 0.22", "38.3182, 16.2143, 43.4894, 0.22", "38.5047, 15.5162, 43.8093, 0.37", "38.8494, 14.4538, 44.2833, 0.66", "39.2468, 13.2807, 44.8953, 0.66", "39.6019, 12.2477, 45.5243, 0.15", "39.8932, 11.3858, 46.1172, 1.47", "40.2649, 10.2328, 46.8919, 3.24", "40.5134, 9.51947, 47.41, 3.24", "41.351, 7.40841, 49.123, 0.29", "41.6814, 6.60462, 49.8563, 0.44", "42.0952, 5.55774, 50.8796, 2.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-9.53218, 43.1956, 29.058, 0.22", "-10.6902, 44.1095, 29.2526, 0.22", "-11.2387, 44.5461, 29.3404, 1.55", "-12.0089, 45.1258, 29.3875, 3.1", "-13.4322, 46.1512, 29.3707, 0.15", "-13.9359, 46.4978, 29.3327, 0.66", "-14.7741, 47.0454, 29.2321, 0.15", "-15.4297, 47.4148, 29.0928, 1.18", "-16.6612, 48.0103, 28.7514, 0.07", "-17.3568, 48.2943, 28.5258, 0.07", "-17.93, 48.5011, 28.3196, 0.07", "-18.5642, 48.7016, 28.1022, 0.96", "-19.8028, 49.0515, 27.7112, 0.15", "-20.7691, 49.3266, 27.4501, 0.15", "-21.3499, 49.4993, 27.3473, 1.03", "-21.9539, 49.6752, 27.2738, 1.99", "-23.1242, 50.0007, 27.2461, 0.15", "-23.6289, 50.1286, 27.2709, 0.15", "-23.9887, 50.2062, 27.3129, 0.15", "-24.5684, 50.3119, 27.4112, 0.88", "-25.284, 50.4031, 27.5332, 1.62", "-26.7959, 50.5285, 27.8044, 0.15", "-27.3826, 50.5525, 27.9117, 0.15", "-28.0422, 50.5586, 28.0227, 0.44", "-28.7824, 50.529, 28.1282, 0.15", "-29.8005, 50.4489, 28.2951, 0.22", "-30.7669, 50.3323, 28.4782, 0.15", "-30.9958, 50.2908, 28.5296, 0.74", "-31.8154, 50.116, 28.7482, 1.25", "-33.1191, 49.8055, 29.143, 0.22", "-34.2561, 49.497, 29.5317, 1.11", "-34.7678, 49.333, 29.7228, 1.84", "-35.8596, 48.846, 30.1859, 0.15", "-36.2188, 48.6379, 30.3626, 0.15", "-36.5874, 48.3963, 30.5621, 0.15", "-36.8422, 48.2089, 30.7099, 0.81", "-37.5257, 47.6256, 31.0774, 2.14", "-38.6072, 46.5145, 31.7496, 0.22", "-39.0682, 45.8912, 32.0865, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-9.53218, 43.1956, 29.058, 0.22", "-9.83016, 43.8548, 29.7034, 0.22", "-10.0494, 44.3366, 30.1374, 0.22", "-10.3816, 45.0374, 30.7396, 0.37", "-10.527, 45.3152, 30.9808, 0.37", "-10.7147, 45.6528, 31.2766, 0.96", "-10.8942, 45.9774, 31.5569, 0.15", "-10.9777, 46.1367, 31.6863, 0.15", "-11.0329, 46.2288, 31.7593, 0.22", "-11.2477, 46.5364, 31.9836, 0.15", "-11.4304, 46.7758, 32.1749, 1.03", "-11.6668, 47.0954, 32.4573, 1.99", "-11.9793, 47.5994, 32.9346, 0.22", "-12.1302, 47.9425, 33.2373, 0.15", "-12.1739, 48.09, 33.3618, 0.15", "-12.2262, 48.3928, 33.6043, 1.18", "-12.2731, 48.8598, 33.9679, 0.15", "-12.29, 49.1383, 34.1854, 0.52", "-12.3027, 49.52, 34.4689, 0.22", "-12.326, 49.895, 34.7424, 1.33", "-12.3848, 50.315, 35.0578, 2.88", "-12.5757, 51.0668, 35.6431, 0.22", "-12.6934, 51.3453, 35.8632, 0.22", "-12.8616, 51.65, 36.1122, 0.74", "-13.0783, 51.9855, 36.4081, 0.15", "-13.2628, 52.2533, 36.6543, 0.15", "-13.4292, 52.4719, 36.8792, 0.15", "-13.6263, 52.6963, 37.1859, 0.74", "-13.7927, 52.884, 37.5193, 0.74", "-13.8995, 52.9783, 37.813, 0.74", "-13.9924, 53.027, 38.1298, 0.74", "-14.032, 53.0347, 38.2518, 0.74", "-14.2105, 53.0437, 38.748, 0.74", "-14.2701, 53.0408, 38.9201, 0.74", "-14.4295, 53.0303, 39.3878, 0.74", "-14.513, 53.0373, 39.6936, 0.74", "-14.6119, 53.0935, 40.2795, 0.96", "-14.6352, 53.1694, 40.7136, 0.96", "-14.6197, 53.252, 41.023, 0.96", "-14.5722, 53.3827, 41.4543, 0.96", "-14.4889, 53.5695, 41.9862, 0.66", "-14.3905, 53.7737, 42.5276, 0.88", "-14.3074, 54.008, 43.1043, 1.55", "-14.2673, 54.2965, 43.7571, 0.37", "-14.2764, 54.4448, 44.0479, 0.37", "-14.3182, 54.7392, 44.5317, 1.4", "-14.3514, 54.9111, 44.7776, 1.62", "-14.431, 55.3573, 45.3315, 0.44", "-14.4734, 55.6706, 45.6777, 0.44", "-14.4856, 56.0069, 46.0137, 1.18", "-14.4531, 56.4799, 46.4537, 0.22", "-14.4058, 56.7213, 46.668, 0.22", "-14.3175, 57.0057, 46.9126, 1.25", "-14.2075, 57.3031, 47.1639, 1.92", "-13.9996, 57.934, 47.7243, 0.15", "-13.9392, 58.1812, 47.9619, 0.88", "-13.899, 58.4908, 48.2731, 1.92", "-13.8911, 59.1047, 48.9254, 0.22", "-13.9221, 59.4288, 49.3051, 0.74", "-13.9964, 59.8613, 49.8552, 1.7", "-14.0609, 60.1714, 50.2899, 0.07", "-14.0833, 60.3268, 50.5235, 0.96", "-14.1209, 60.718, 51.1545, 0.07", "-14.1203, 60.9584, 51.5701, 0.07", "-14.0898, 61.1355, 51.891, 0.07", "-14.0082, 61.3925, 52.4184, 0.37", "-13.9391, 61.6008, 52.9487, 0.59", "-13.914, 61.7009, 53.2542, 0.59", "-13.9146, 61.7696, 53.5121, 0.59", "-13.9341, 61.8118, 53.6648, 0.59", "-14.062, 62.0043, 54.2085, 0.15", "-14.1672, 62.1801, 54.563, 0.07", "-14.22, 62.3259, 54.7887, 0.07", "-14.2564, 62.4663, 54.9736, 0.07", "-14.3217, 62.7104, 55.2555, 0.88", "-14.444, 63.1058, 55.7024, 0.22", "-14.5711, 63.4325, 56.1108, 0.22", "-14.7208, 63.7184, 56.522, 1.62", "-14.9197, 63.9698, 56.9662, 2.21", "-15.3044, 64.3021, 57.7367, 0.37", "-15.5789, 64.4581, 58.2708, 0.37", "-15.9912, 64.5734, 59.0737, 1.33", "-16.1147, 64.5693, 59.3387, 1.77", "-16.3421, 64.4746, 59.926, 0.29", "-16.5065, 64.3164, 60.445, 0.29", "-16.6435, 64.1432, 60.8691, 0.59", "-16.7978, 63.9562, 61.2983, 1.18", "-17.0742, 63.6647, 61.9825, 0.37", "-17.3896, 63.3708, 62.6888, 1.03", "-17.6777, 63.1455, 63.2335, 1.4", "-18.3498, 62.7188, 64.2584, 0.07", "-18.7056, 62.5386, 64.6998, 0.59", "-19.1133, 62.4006, 65.0906, 0.15", "-19.4071, 62.3406, 65.2995, 0.15", "-19.872, 62.28, 65.5583, 0.15", "-20.099, 62.265, 65.665, 1.03", "-20.3334, 62.2553, 65.7494, 1.4", "-21.1853, 62.2267, 66.0205, 0.15", "-21.496, 62.2203, 66.1216, 0.15", "-22.0465, 62.2085, 66.3352, 0.15", "-22.3259, 62.1965, 66.4651, 1.11", "-22.5903, 62.1809, 66.6068, 1.62", "-23.2208, 62.1394, 66.9913, 0.29", "-23.6067, 62.1182, 67.2533, 0.07", "-23.9708, 62.1242, 67.4972, 0.07", "-24.1959, 62.1396, 67.6467, 0.88", "-24.7202, 62.1934, 68.0139, 0.07", "-24.9721, 62.232, 68.2058, 0.22", "-25.3952, 62.3331, 68.5597, 0.07", "-25.6932, 62.4314, 68.7986, 1.77" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "0.42979, 34.7944, 19.4071, 0.52", "4.00763, 33.1947, 18.2312, 0.52", "4.83927, 32.7378, 18.0032, 2.21", "6.27605, 31.8107, 17.6498, 2.88", "8.62652, 30.0721, 17.1014, 0.96", "10.2828, 28.6922, 16.6688, 0.15", "11.1944, 27.8586, 16.3643, 0.59", "12.0246, 26.8639, 16.1359, 0.15", "12.5528, 26.1333, 15.9718, 0.22", "12.9301, 25.4687, 15.806, 0.22", "13.5527, 24.0704, 15.337, 0.22", "14.2484, 22.1213, 14.6015, 1.11", "14.5502, 21.062, 14.161, 2.29", "14.7047, 20.4008, 13.8588, 2.58", "15.108, 18.3079, 12.8582, 0.15", "15.2579, 17.0691, 12.2862, 0.15", "15.2576, 15.9599, 11.8194, 0.29", "15.1766, 15.1627, 11.5046, 1.03", "15.0532, 14.3464, 11.1777, 1.99", "14.9482, 13.7559, 10.9588, 2.29", "14.524, 11.8111, 10.386, 0.44", "14.2329, 10.4199, 10.0653, 0.29", "14.08, 9.66452, 9.93297, 0.44", "13.9393, 8.93576, 9.83249, 0.52", "13.6809, 7.61671, 9.72037, 0.22", "13.5235, 6.72829, 9.69408, 0.22", "13.3568, 5.76388, 9.72693, 1.33", "13.1998, 4.81876, 9.79645, 2.29", "13.0537, 4.04142, 9.86906, 2.29", "12.6309, 1.88073, 10.1156, 0.15", "12.4337, 0.969374, 10.2249, 0.15", "12.2728, 0.235596, 10.3057, 0.15", "12.1096, -0.465689, 10.3811, 0.66", "11.8554, -1.56712, 10.472, 1.33", "11.6749, -2.42553, 10.4737, 1.03", "11.3213, -4.24884, 10.2764, 0.22", "11.1658, -5.12471, 10.1106, 0.22", "11.0302, -5.97897, 9.88251, 0.66", "10.8572, -7.2131, 9.50122, 0.22", "10.6217, -8.79054, 8.93046, 0.29", "10.4565, -9.7891, 8.56542, 0.59", "10.3418, -10.551, 8.26195, 1.33", "10.1694, -11.6398, 7.8006, 2.14", "9.86731, -13.5061, 6.98394, 0.22", "9.63118, -14.7788, 6.4559, 0.22", "9.37493, -15.8517, 6.13177, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.42979, 34.7944, 19.4071, 0.52", "0.283453, 35.509, 20.7118, 0.52", "0.201951, 35.9081, 21.9024, 0.52", "0.147983, 36.1839, 23.4328, 0.52", "0.132257, 36.2265, 24.2427, 0.52", "0.143775, 36.2343, 26.1388, 0.81", "0.195844, 36.2391, 27.5391, 1.18", "0.391777, 36.1063, 29.3286, 0.96", "0.579715, 35.951, 30.591, 1.25", "0.815868, 35.7189, 31.9385, 0.37", "0.99873, 35.5907, 32.7214, 0.37", "1.2467, 35.4373, 33.6567, 0.15", "1.60063, 35.2934, 34.7696, 0.15", "2.07957, 35.2816, 35.9727, 1.18", "2.3825, 35.3561, 36.6885, 2.43", "2.94716, 35.5389, 37.8946, 2.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.3243, 104.023, 2.19659, 0.59", "-11.547, 105.586, 1.9315, 0.59", "-11.8027, 106.964, 1.6385, 0.29", "-12.0922, 108.259, 1.32921, 0.96", "-12.3429, 109.245, 1.08861, 0.07", "-12.665, 110.305, 0.818948, 0.07", "-12.8601, 110.905, 0.666025, 0.22", "-13.1702, 111.634, 0.463137, 0.88", "-13.3594, 112.065, 0.35834, 1.47", "-13.8167, 113.291, 0.0505178, 0.07", "-14.0223, 114.106, -0.164873, 0.07", "-14.0889, 114.536, -0.258096, 0.22", "-14.1335, 114.861, -0.319203, 0.22", "-14.2468, 115.76, -0.458604, 0.07", "-14.3091, 116.574, -0.563551, 0.07", "-14.321, 117.107, -0.637766, 0.66", "-14.3191, 117.707, -0.744462, 0.66", "-14.3178, 118.679, -0.953372, 0.15", "-14.3104, 119.435, -1.12978, 1.03", "-14.2943, 120.23, -1.32337, 1.77", "-14.226, 121.716, -1.66243, 0.15", "-14.1766, 122.715, -1.87497, 0.22", "-14.157, 123.123, -1.96674, 0.66", "-14.1565, 123.599, -2.06522, 0.37", "-14.2312, 124.423, -2.20482, 1.11", "-14.365, 125.069, -2.28909, 1.11", "-14.8442, 126.584, -2.40366, 0.22", "-15.2124, 127.472, -2.45811, 1.03", "-15.7152, 128.498, -2.53362, 1.62", "-16.2466, 129.444, -2.60823, 1.99", "-16.7579, 130.323, -2.74194, 0.52", "-17.4332, 131.484, -3.02313, 0.22", "-18.0653, 132.638, -3.42221, 0.22", "-18.3477, 133.216, -3.68904, 0.88", "-18.6754, 134.073, -4.24064, 1.55", "-19.2385, 135.764, -5.58492, 0.15", "-19.4359, 136.457, -6.17604, 0.22", "-19.5845, 137.076, -6.70292, 0.07", "-19.789, 138.097, -7.54202, 1.33", "-20.1219, 139.637, -8.67057, 0.07", "-20.2275, 140.136, -9.0259, 0.37", "-20.5083, 141.153, -9.56242, 0.07", "-20.8835, 142.309, -9.98546, 0.22", "-21.3164, 143.389, -10.1422, 1.55", "-21.7373, 144.278, -9.94974, 1.55", "-22.5402, 153.801, -13.2019, 1.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-11.3243, 104.023, 2.19659, 0.22", "-12.8171, 105.983, 1.86805, 0.22", "-13.4976, 106.929, 1.69911, 0.07", "-14.2362, 108.028, 1.48867, 1.11", "-15.3111, 109.827, 1.14402, 0.07", "-15.7562, 110.683, 0.984788, 0.07", "-15.9692, 111.14, 0.903579, 0.52", "-16.2569, 112.035, 0.7478, 1.47", "-16.5481, 113.178, 0.562961, 0.07", "-16.7582, 114.198, 0.4053, 0.15", "-16.9015, 115.194, 0.281587, 0.88", "-17.0085, 116.163, 0.192995, 1.4", "-17.14, 117.687, 0.0628029, 0.07", "-17.1942, 118.413, 0.0115018, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-27.1147, -116.043, -59.7253, 0.15", "-27.7365, -127.482, -63.7038, 0.15", "-28.1194, -139.316, -66.3241, 0.15", "-27.7559, -150.509, -70.9792, 0.15", "-24.815, -161.376, -75.487, 0.15", "-20.7382, -171.533, -80.7096, 0.15", "-16.3997, -181.766, -85.561, 0.15", "-11.2987, -191.302, -91.0468, 0.15", "-6.12251, -201.505, -95.0702, 0.15", "0.315561, -210.659, -99.74, 0.15", "7.21541, -219.575, -104.209, 0.15", "13.8525, -229.517, -106.25, 0.15", "19.991, -239.823, -108.034, 0.15", "26.0065, -249.949, -110.921, 0.15", "31.0033, -260.199, -115.047, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-27.1147, -116.043, -59.7253, 1.03", "-27.7586, -126.624, -63.2201, 0.15", "-30.0658, -137.334, -65.3513, 0.15", "-33.5463, -147.747, -67.3579, 0.15", "-39.0782, -157.418, -68.0262, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.38051, -125.643, 24.6797, 0.22", "-5.70579, -127.28, 24.8341, 0.22", "-5.34703, -128.311, 24.9662, 0.22", "-5.15845, -129.075, 25.0791, 0.88", "-4.96325, -130.19, 25.2551, 1.25", "-4.72613, -131.903, 25.5491, 0.15", "-4.59445, -133.197, 25.7729, 0.15", "-4.56692, -134.244, 25.9795, 0.66", "-4.61011, -135.797, 26.2832, 0.15", "-4.64993, -136.502, 26.4196, 0.44", "-4.68451, -137.015, 26.5065, 0.44", "-4.73854, -138.446, 26.7033, 0.15", "-4.74814, -139.483, 26.8188, 0.15", "-4.72199, -140.279, 26.8919, 1.18", "-4.6521, -141.076, 26.9477, 2.14", "-4.52957, -142.263, 27.0115, 1.03", "-4.41815, -143.41, 27.0543, 0.15", "-4.31399, -144.31, 27.0756, 0.15", "-4.23892, -145.025, 27.0829, 0.37", "-4.16095, -145.915, 27.0714, 0.22", "-4.13957, -146.392, 27.0463, 0.66", "-4.12941, -147.031, 26.9896, 0.81", "-4.11228, -148.386, 26.8164, 0.22", "-4.10296, -149.043, 26.7241, 1.03", "-4.11696, -150.223, 26.5476, 1.84", "-4.17305, -151.933, 26.2881, 0.22", "-4.19398, -152.491, 26.2102, 0.22", "-4.21619, -153.142, 26.134, 0.22", "-4.232, -153.781, 26.078, 0.22", "-4.19901, -154.719, 26.0192, 0.96", "-4.00326, -156.682, 25.9437, 0.15", "-3.88684, -157.377, 25.931, 0.15", "-3.74626, -158.115, 25.9321, 0.96", "-3.5781, -158.965, 25.9509, 1.92", "-3.16388, -160.867, 26.0209, 0.22", "-3.00063, -161.537, 26.0556, 0.22", "-2.84082, -162.131, 26.082, 0.15", "-2.54979, -163.196, 26.1219, 0.15", "-2.39097, -163.826, 26.1482, 0.81", "-2.25518, -164.465, 26.2023, 1.62", "-2.04009, -165.738, 26.3736, 0.15", "-1.88626, -166.73, 26.5198, 0.15", "-1.78722, -167.282, 26.5983, 0.15", "-1.6126, -168.148, 26.717, 0.88", "-1.37494, -169.443, 26.8934, 0.15", "-1.26547, -170.105, 26.9789, 0.96", "-1.09851, -171.311, 27.1269, 2.21", "-0.822579, -173.569, 27.388, 0.15", "-0.707592, -174.513, 27.4797, 0.96", "-0.432058, -176.428, 27.6617, 0.22", "-0.27605, -177.345, 27.7414, 0.88", "-0.186306, -177.837, 27.7896, 0.88", "0.126095, -179.401, 27.9721, 0.07", "0.203542, -179.732, 28.0163, 0.29", "0.396539, -180.442, 28.1274, 0.29", "0.602948, -181.134, 28.2466, 0.15", "0.747464, -181.688, 28.3603, 0.15", "0.94927, -182.596, 28.5508, 0.15", "1.06061, -183.229, 28.6714, 0.74", "1.19066, -184.124, 28.844, 1.77", "1.25348, -184.689, 28.9619, 1.33", "1.38387, -186.086, 29.2899, 0.07", "1.41592, -186.549, 29.407, 0.37", "1.49266, -187.981, 29.805, 0.07", "1.53494, -188.744, 30.0209, 0.59", "1.6296, -189.985, 30.3593, 0.15", "1.6887, -190.625, 30.5212, 0.22", "1.78851, -191.605, 30.7509, 1.33", "1.92747, -193.04, 31.0793, 0.07", "1.96613, -193.595, 31.2025, 0.88", "2.1032, -195.201, 31.5251, 0.15", "2.18164, -195.939, 31.6593, 0.15", "2.2612, -196.579, 31.772, 0.15", "2.36413, -197.286, 31.9029, 0.74", "2.50023, -198.295, 32.1019, 2.14", "2.69751, -200.116, 32.4924, 0.15", "2.71698, -200.684, 32.6167, 0.44", "2.67691, -202.13, 32.9348, 0.07", "2.61857, -202.718, 33.0686, 0.15", "2.50152, -203.388, 33.2297, 0.07", "2.2975, -204.192, 33.4379, 1.11", "1.67299, -206.054, 33.9379, 0.15", "1.3835, -206.843, 34.1537, 1.03", "0.824347, -208.257, 34.5323, 0.15", "0.590928, -208.897, 34.6796, 0.44", "0.249473, -210.065, 34.897, 0.15", "0.0513262, -210.99, 35.0341, 1.62", "-0.00695284, -211.474, 35.0826, 1.77", "-0.037162, -212.21, 35.115, 1.03", "0.00524446, -214.083, 35.1062, 0.15", "0.12175, -215.867, 35.0477, 0.15", "0.185736, -216.458, 35.0196, 0.88", "0.303736, -217.253, 34.9979, 1.18", "0.688273, -219.32, 34.9669, 0.07", "0.778027, -219.736, 34.9646, 0.15", "1.08387, -221.042, 34.9842, 0.07", "1.43048, -222.464, 35.0262, 0.15", "1.71169, -223.688, 35.078, 1.33", "2.14577, -225.685, 35.1845, 0.15", "2.30913, -226.509, 35.2456, 0.22", "2.50226, -227.84, 35.3393, 0.07", "2.53809, -228.25, 35.3655, 0.22", "2.58707, -230.192, 35.4599, 0.07", "2.58137, -230.572, 35.475, 0.81", "2.51058, -231.945, 35.5308, 1.92", "2.39412, -233.618, 35.5365, 0.15", "2.32037, -234.494, 35.4927, 0.88", "2.1548, -236.408, 35.3137, 0.15", "2.10745, -236.919, 35.2421, 0.44", "1.95702, -238.506, 34.9819, 0.07", "1.85702, -239.819, 34.7401, 0.07", "1.80373, -240.68, 34.6109, 0.15", "1.76973, -241.348, 34.5384, 0.74", "1.7445, -241.956, 34.5089, 0.74", "1.78945, -243.322, 34.5901, 0.07", "1.92731, -244.266, 34.7529, 0.07", "2.12382, -245.189, 35.0149, 0.07", "2.31102, -245.952, 35.2705, 1.25", "2.46568, -246.565, 35.4849, 1.99", "2.97096, -248.66, 36.1887, 0.15", "3.22289, -249.803, 36.5527, 0.96", "3.52235, -251.443, 37.032, 0.07", "3.71188, -252.731, 37.3661, 0.07", "3.80331, -253.674, 37.5744, 0.81", "3.93242, -256.182, 38.01, 0.15", "3.92634, -256.814, 38.0903, 0.29", "3.86829, -258.05, 38.1982, 0.07", "3.80219, -259.086, 38.2406, 1.47", "3.62149, -261.403, 38.2675, 0.07", "3.53315, -262.411, 38.2896, 0.07", "3.44132, -263.153, 38.2988, 1.11", "3.14922, -265.07, 38.2811, 0.07", "3.00147, -265.881, 38.2514, 0.74", "2.84201, -266.616, 38.199, 1.92", "2.3318, -268.627, 38.0067, 0.15", "1.91114, -270.167, 37.8427, 0.22", "1.42143, -271.943, 37.655, 0.22", "1.19305, -272.721, 37.5657, 0.81", "0.895525, -273.727, 37.4552, 1.84", "0.311422, -275.892, 37.2968, 0.07", "0.155954, -276.532, 37.2695, 0.29", "-0.127914, -278.151, 37.3934, 0.07", "-0.283601, -279.184, 37.5391, 0.07", "-0.431844, -280.359, 37.7621, 1.55", "-0.587999, -282.164, 38.2103, 0.07", "-0.615763, -282.808, 38.4039, 0.07", "-0.621572, -284.497, 38.9592, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-6.38051, -125.643, 24.6797, 0.22", "-6.95611, -126.903, 25.6346, 0.22", "-7.38623, -128.122, 26.4093, 0.44", "-7.55144, -128.708, 26.7375, 0.15", "-7.67186, -129.196, 27.0028, 0.15", "-7.73314, -129.423, 27.1294, 0.37", "-7.94607, -130.078, 27.5093, 0.44", "-8.16012, -130.631, 27.83, 0.15", "-8.25574, -130.855, 27.9874, 0.22", "-8.39862, -131.221, 28.313, 0.22", "-8.57381, -131.696, 28.7986, 0.22", "-8.71565, -132.129, 29.2728, 0.81", "-8.92933, -132.922, 30.1407, 0.22", "-9.11793, -133.837, 31.1069, 0.96", "-9.26628, -134.75, 32.0087, 2.21", "-9.48173, -136.569, 33.6514, 0.22", "-9.53372, -137.367, 34.3289, 0.22", "-9.54915, -137.924, 34.7697, 0.22", "-9.55652, -138.353, 35.076, 0.22", "-9.60654, -139.025, 35.5042, 0.22", "-9.69207, -139.542, 35.831, 0.22", "-9.82382, -140.047, 36.1668, 0.88", "-10.0367, -140.656, 36.6338, 1.4", "-10.3896, -141.452, 37.3807, 2.14", "-11.0362, -142.724, 38.7689, 0.52", "-11.5189, -143.583, 39.8242, 0.22", "-11.7961, -144.038, 40.4195, 0.22", "-12.1908, -144.616, 41.2239, 1.11", "-12.8387, -145.434, 42.5229, 1.99", "-13.1849, -145.794, 43.2057, 1.99", "-13.3019, -145.889, 43.452, 1.99" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-35.4166, -120.493, 8.54369, 0.22", "-36.1493, -121.593, 7.99018, 0.22", "-36.5419, -122.206, 7.70299, 0.22", "-36.8824, -122.735, 7.44803, 1.33", "-37.504, -123.709, 6.97402, 0.15", "-37.7254, -124.066, 6.80508, 0.15", "-37.8851, -124.334, 6.68425, 0.37", "-38.1518, -124.807, 6.52074, 0.37", "-38.5308, -125.565, 6.29668, 0.22", "-38.6926, -125.918, 6.19086, 0.15", "-38.8055, -126.189, 6.10725, 0.15", "-38.8905, -126.391, 6.05483, 0.15", "-39.0902, -126.875, 5.94565, 0.15", "-39.2917, -127.391, 5.84967, 0.74", "-39.6179, -128.241, 5.69841, 0.15", "-39.8166, -128.764, 5.54866, 0.15", "-40.0962, -129.488, 5.27247, 0.15", "-40.1922, -129.752, 5.14678, 0.15", "-40.3828, -130.319, 4.82962, 1.33", "-40.5753, -130.818, 4.53206, 2.14", "-41.1438, -132.043, 3.73845, 0.15", "-41.457, -132.592, 3.3468, 1.25", "-41.9497, -133.349, 2.7651, 0.07", "-42.1534, -133.635, 2.55228, 0.22", "-42.8282, -134.51, 1.91025, 0.22", "-43.1886, -134.931, 1.60351, 1.25", "-43.4356, -135.19, 1.41992, 1.25", "-44.1925, -136.115, 0.820053, 0.07", "-44.6657, -136.816, 0.411162, 0.07", "-44.9304, -137.383, 0.108992, 0.07", "-45.0686, -137.978, -0.206071, 0.07", "-45.1127, -138.323, -0.380856, 1.18", "-45.1798, -139.623, -1.01867, 0.07", "-45.1785, -139.914, -1.15444, 0.88", "-45.1479, -140.717, -1.50895, 1.92", "-45.0818, -142.123, -2.10484, 0.15", "-45.0567, -142.571, -2.28836, 0.22", "-45.037, -143.274, -2.58893, 0.07", "-45.034, -143.654, -2.74929, 0.07", "-45.0261, -144.258, -2.96868, 0.29", "-45.0229, -145.488, -3.31189, 0.07", "-45.052, -146.57, -3.52326, 0.22", "-45.092, -147.319, -3.64401, 1.55", "-45.2408, -148.67, -3.79556, 0.22", "-45.3797, -149.498, -3.8584, 0.07", "-45.528, -150.235, -3.88319, 0.07", "-45.6627, -150.727, -3.85419, 0.07", "-45.8399, -151.17, -3.79611, 0.15", "-46.1895, -151.825, -3.65782, 0.07", "-46.4581, -152.113, -3.5853, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-35.4166, -120.493, 8.54369, 0.29", "-36.7549, -120.245, 7.78352, 0.29", "-37.3931, -120.1, 7.33671, 0.22", "-37.7846, -120.006, 7.0213, 0.74", "-38.2469, -119.886, 6.62265, 0.96", "-38.79, -119.753, 6.14205, 0.29", "-39.3488, -119.615, 5.63622, 0.15", "-39.9422, -119.462, 5.0596, 0.15", "-40.455, -119.352, 4.59433, 1.03", "-41.1111, -119.233, 4.03726, 0.29", "-42.026, -119.084, 3.3114, 0.22", "-42.5389, -119.014, 2.93359, 1.11", "-43.3767, -118.921, 2.37382, 2.14", "-44.9782, -118.768, 1.39186, 0.22", "-45.3879, -118.734, 1.15355, 0.81", "-46.2103, -118.675, 0.681939, 1.7", "-47.3285, -118.589, 0.054965, 0.22", "-47.7964, -118.553, -0.218363, 0.88", "-48.4958, -118.505, -0.652822, 1.55", "-49.0095, -118.466, -0.993628, 0.59", "-49.9694, -118.399, -1.65402, 0.15", "-50.6619, -118.371, -2.16793, 0.88", "-51.3421, -118.348, -2.71865, 0.15", "-51.8742, -118.317, -3.18734, 0.22", "-52.3356, -118.28, -3.62392, 0.81", "-53.0148, -118.227, -4.29142, 1.99", "-53.9494, -118.191, -5.27422, 0.22", "-54.4012, -118.185, -5.76408, 0.22", "-54.8565, -118.173, -6.26957, 0.52", "-55.3241, -118.153, -6.80616, 1.18", "-56.0593, -118.105, -7.66116, 1.99", "-56.9919, -118.021, -8.79592, 0.15", "-57.3369, -117.984, -9.21923, 0.29", "-57.8933, -117.95, -9.91509, 0.07", "-58.2589, -117.948, -10.4179, 0.22", "-58.5157, -117.954, -10.8427, 0.22", "-58.705, -117.982, -11.2957, 0.22", "-58.7636, -118.01, -11.4931, 0.22", "-58.8588, -118.167, -12.0485, 0.22", "-58.9067, -118.466, -12.673, 0.22", "-58.9216, -118.727, -13.1317, 0.22", "-58.9857, -119.363, -14.134, 1.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "60.882, 27.877, 70.194, 0.22", "62.1005, 27.9593, 71.546, 0.22", "62.3718, 27.9539, 71.8496, 0.22", "63.0193, 27.9632, 72.5323, 0.59", "63.6347, 28.0051, 73.1211, 0.44", "63.9796, 28.0317, 73.4186, 0.44", "64.4323, 28.0548, 73.7462, 0.15", "64.912, 28.0894, 73.9957, 0.15", "65.5484, 28.0889, 74.2483, 0.15", "66.0709, 28.0536, 74.3915, 0.96", "66.7812, 27.9908, 74.5401, 1.55", "67.7787, 27.9495, 74.7399, 0.22", "68.4986, 27.9233, 74.8761, 0.37", "69.0603, 27.8787, 74.972, 0.22", "69.5258, 27.8209, 75.053, 0.22", "70.0523, 27.7546, 75.1502, 0.37", "71.0445, 27.642, 75.3699, 0.22", "71.5943, 27.5978, 75.5258, 0.22", "72.3117, 27.5772, 75.7676, 0.22", "72.7727, 27.5801, 75.9406, 0.96", "73.5569, 27.5992, 76.2679, 1.99", "74.8377, 27.6126, 76.8469, 0.22", "75.6367, 27.5852, 77.2414, 0.15", "76.4091, 27.5555, 77.6697, 0.15", "76.6637, 27.5427, 77.8241, 0.15", "77.0198, 27.5064, 78.0455, 0.15", "77.3627, 27.4532, 78.2336, 0.15", "78.0103, 27.3287, 78.5165, 0.15", "78.4187, 27.2083, 78.6654, 0.81", "78.9018, 27.0218, 78.8335, 1.47", "79.2572, 26.8752, 78.958, 1.47", "80.3248, 26.4265, 79.3083, 0.15", "80.5931, 26.3227, 79.405, 0.22", "81.3001, 26.0297, 79.6788, 0.37", "82.0067, 25.7033, 79.9697, 1.03", "82.6863, 25.3823, 80.3332, 1.77", "83.0444, 25.22, 80.5763, 1.77", "84.096, 24.7693, 81.4343, 0.22", "84.4885, 24.6426, 81.7816, 0.22", "85.1061, 24.5238, 82.3382, 1.11", "86.3586, 24.3894, 83.5056, 0.22", "86.8709, 24.3472, 84.0227, 0.22", "87.3594, 24.3075, 84.5468, 0.66", "88.0441, 24.25, 85.2746, 0.88", "88.5148, 24.2255, 85.763, 1.7", "89.5124, 24.2201, 86.7926, 0.44", "90.2597, 24.2412, 87.5249, 0.74", "90.8164, 24.2901, 88.0661, 1.25", "91.7361, 24.4693, 88.9798, 0.22", "92.0571, 24.563, 89.3034, 0.22", "92.6078, 24.7959, 89.866, 0.37", "92.9909, 24.9986, 90.2201, 0.37", "93.6224, 25.354, 90.7303, 1.47", "94.3996, 25.7764, 91.3161, 0.29", "94.777, 25.9687, 91.5796, 0.29", "94.9855, 26.0669, 91.7242, 0.29", "95.6544, 26.3684, 92.2336, 0.15", "96.0684, 26.5744, 92.6175, 0.22", "96.379, 26.7515, 92.9698, 0.74", "96.718, 26.997, 93.459, 1.25", "97.2454, 27.4974, 94.4122, 0.22", "97.6326, 27.9337, 95.2209, 0.96", "97.9664, 28.3368, 95.9825, 0.96", "98.2414, 28.6266, 96.6069, 0.29", "98.5884, 28.926, 97.3996, 0.29", "98.8841, 29.1244, 98.1039, 0.29", "99.1665, 29.261, 98.7907, 0.29", "99.3998, 29.3766, 99.5156, 0.29", "99.5285, 29.4651, 100.201, 0.29", "99.5674, 29.5353, 100.88, 0.29", "99.5656, 29.5756, 101.312, 0.29", "99.5494, 29.6425, 101.887, 0.29", "99.5, 29.8039, 102.989, 0.59", "99.4646, 29.9479, 103.822, 0.59", "99.455, 30.1328, 104.86, 0.59", "99.4892, 30.2478, 105.593, 0.59", "99.6095, 30.35, 106.505, 0.59", "99.756, 30.3841, 107.139, 0.59", "99.8442, 30.3874, 107.383, 0.59", "100.17, 30.3659, 108.019, 0.59", "100.349, 30.3278, 108.274, 0.59", "100.825, 30.179, 108.799, 0.22", "101.217, 30.0372, 109.126, 0.22", "101.763, 29.8891, 109.588, 0.22", "102.151, 29.8361, 109.953, 0.22", "102.766, 29.8402, 110.536, 0.22", "103.202, 29.9098, 110.99, 0.22", "103.657, 30.0497, 111.54, 1.11", "104.474, 30.4054, 112.662, 0.22", "104.913, 30.6318, 113.335, 0.22", "105.424, 30.9387, 114.186, 0.22", "105.817, 31.1427, 114.838, 0.22", "106.135, 31.2029, 115.377, 0.22", "106.292, 31.1475, 115.633, 0.22", "106.621, 30.9083, 116.101, 0.59", "107.141, 30.4651, 116.771, 0.59", "107.756, 29.9512, 117.532, 0.15", "108.357, 29.4596, 118.248, 0.66", "108.994, 28.9676, 119.017, 0.15", "109.506, 28.6056, 119.657, 0.66", "109.931, 28.3544, 120.19, 1.03", "110.756, 27.9415, 121.165, 0.22", "111.46, 27.6391, 121.93, 0.15", "112.175, 27.3884, 122.651, 0.66", "112.623, 27.285, 123.097, 1.25", "113.585, 27.1522, 124.035, 0.22", "114.297, 27.0929, 124.71, 0.15", "114.93, 27.0788, 125.254, 0.37", "115.315, 27.0967, 125.553, 0.59", "116.303, 27.1627, 126.271, 0.15", "116.902, 27.1902, 126.716, 0.88", "117.929, 27.2225, 127.519, 0.22", "118.334, 27.2481, 127.846, 0.96", "118.669, 27.2774, 128.126, 0.66", "119.376, 27.3444, 128.695, 0.15", "120.078, 27.4454, 129.281, 0.81", "120.543, 27.5693, 129.72, 1.25", "121.163, 27.8204, 130.331, 0.15", "121.92, 28.1737, 131.109, 0.15", "122.148, 28.2909, 131.353, 0.29", "122.701, 28.6286, 131.972, 0.15", "122.966, 28.8083, 132.282, 0.96", "123.459, 29.1133, 132.891, 0.29", "124.122, 29.4281, 133.7, 0.74", "124.778, 29.682, 134.45, 0.15", "125.225, 29.8361, 134.946, 0.37", "125.496, 29.925, 135.219, 0.37", "125.968, 30.0967, 135.7, 0.22", "126.504, 30.3088, 136.224, 0.22", "126.951, 30.4537, 136.6, 0.37", "127.482, 30.604, 136.995, 0.37", "128.085, 30.7699, 137.389, 1.33", "129.257, 31.1355, 138.072, 0.22", "130.03, 31.4397, 138.491, 1.03", "130.984, 31.8697, 138.968, 0.15", "131.31, 32.0417, 139.119, 0.15", "132.145, 32.5898, 139.479, 0.15", "132.724, 33.0793, 139.743, 1.03", "133.188, 33.605, 139.965, 0.15", "133.497, 34.0335, 140.135, 0.15", "133.914, 34.699, 140.438, 0.15", "134.351, 35.3697, 140.843, 0.88", "134.779, 36.0107, 141.315, 0.29", "135.098, 36.4694, 141.699, 0.81", "135.256, 36.6821, 141.886, 0.81", "135.853, 37.6084, 142.636, 0.22", "136.232, 38.3174, 143.15, 0.07", "136.452, 38.9133, 143.51, 0.15", "136.522, 39.2364, 143.671, 0.66", "136.592, 39.9106, 143.964, 1.55", "136.67, 41.6132, 144.612, 0.15", "136.649, 42.4282, 144.848, 0.15", "136.572, 43.1793, 145.041, 0.66", "136.483, 43.7298, 145.189, 0.15", "136.412, 44.0551, 145.279, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "60.882, 27.877, 70.194, 0.29", "60.2782, 28.5788, 71.2944, 0.29", "59.8048, 29.1306, 72.0448, 0.29", "59.3079, 29.7427, 72.7894, 0.81", "59.0242, 30.0751, 73.1876, 1.4", "58.3129, 30.8314, 74.124, 0.07", "57.9285, 31.211, 74.5992, 1.03", "57.1607, 31.8812, 75.41, 0.15", "56.5105, 32.467, 76.0631, 1.55", "55.9078, 33.0522, 76.6854, 0.22", "55.5151, 33.4763, 77.1232, 0.22", "55.1108, 33.9743, 77.6152, 0.81", "54.7061, 34.5357, 78.1407, 0.07", "54.3936, 35.0908, 78.6127, 0.59", "54.1937, 35.6455, 78.9986, 0.07", "54.1315, 35.9948, 79.2076, 0.52", "54.0722, 37.1755, 79.8788, 0.07", "54.0996, 37.5678, 80.099, 0.96", "54.1667, 37.934, 80.313, 0.96", "54.4362, 38.9052, 80.9212, 0.22", "54.7196, 39.577, 81.3615, 0.22", "55.0508, 40.1401, 81.7693, 0.96", "55.4706, 40.7233, 82.2254, 1.77", "56.0693, 41.5095, 82.8972, 0.22", "56.4481, 41.9801, 83.3213, 0.15", "56.7771, 42.3753, 83.6633, 0.15", "56.9444, 42.59, 83.8423, 0.15", "57.4593, 43.3419, 84.4424, 0.88", "57.9064, 44.2236, 85.1255, 0.22", "58.0884, 44.7234, 85.5084, 0.81", "58.3393, 45.5768, 86.1664, 0.15", "58.5019, 46.1918, 86.6386, 0.66", "58.6688, 46.872, 87.1553, 1.84", "59.0014, 48.1383, 88.1142, 0.15", "59.1835, 48.8597, 88.6423, 0.15", "59.3311, 49.4467, 89.0623, 0.15", "59.4699, 49.9214, 89.4, 0.66", "59.7987, 50.8196, 89.9824, 0.15", "60.1783, 51.6463, 90.4764, 0.15", "60.3986, 52.0595, 90.6981, 0.66", "60.5927, 52.4619, 90.8907, 0.22", "60.8487, 53.1123, 91.1907, 0.22", "60.9761, 53.5011, 91.3611, 0.81", "61.0506, 53.8159, 91.4877, 0.81", "61.1435, 54.705, 91.8409, 0.07", "61.1439, 55.2445, 92.0652, 0.66", "61.0025, 56.3834, 92.5723, 0.15", "60.8282, 57.1478, 92.9246, 1.4", "60.5014, 58.2105, 93.4485, 0.15", "60.2276, 58.9186, 93.8199, 0.15", "59.9376, 59.5126, 94.1501, 1.18", "59.3501, 60.4233, 94.7266, 0.22", "58.8113, 61.0618, 95.1732, 0.15", "58.4672, 61.4257, 95.4438, 0.15", "58.1203, 61.7778, 95.7105, 0.74", "57.7008, 62.2132, 96.0214, 1.25", "56.8503, 63.132, 96.6584, 0.22", "56.4033, 63.6399, 97.0084, 1.11", "55.64, 64.5498, 97.6645, 0.22", "55.2272, 65.0797, 98.0476, 1.47", "54.8343, 65.6145, 98.4284, 0.96", "54.3168, 66.3742, 98.9634, 0.22", "53.8791, 67.0683, 99.4448, 0.74", "53.3511, 67.9275, 100.068, 0.15", "53.1227, 68.2919, 100.353, 0.15", "52.8811, 68.69, 100.678, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "42.0952, 5.55774, 50.8796, 0.15", "43.5349, 4.3421, 53.4763, 0.15", "44.0649, 3.99838, 54.0979, 0.22", "44.5062, 3.74838, 54.5345, 0.88", "45.3173, 3.32396, 55.2554, 0.15", "45.8554, 3.05895, 55.7017, 1.18", "46.4543, 2.76915, 56.1889, 2.58", "47.9109, 2.15932, 57.0942, 0.29", "48.585, 1.88622, 57.4991, 0.96", "49.0884, 1.68494, 57.8112, 1.18", "50.5067, 1.14129, 58.7815, 0.07", "51.0268, 0.962444, 59.1931, 0.07", "51.274, 0.878704, 59.4162, 0.07", "51.7103, 0.711804, 59.8939, 0.74", "52.0522, 0.553374, 60.3316, 1.03", "52.8023, 0.138469, 61.4449, 0.15", "53.3872, -0.280193, 62.4568, 1.18", "53.5992, -0.47684, 62.8745, 1.4", "54.0023, -0.956839, 63.7977, 0.15", "54.2525, -1.37638, 64.4831, 0.15", "54.3719, -1.63516, 64.8596, 0.88", "54.498, -1.9709, 65.3238, 0.29", "54.7011, -2.58711, 66.1831, 0.15", "54.8245, -3.00055, 66.8256, 0.81", "54.9362, -3.43489, 67.5747, 1.62", "55.0652, -4.27057, 69.1025, 0.15", "55.094, -4.70619, 69.9358, 0.15", "55.0887, -5.09438, 70.6811, 0.22", "55.0294, -5.57709, 71.5953, 0.22", "54.9645, -5.8961, 72.1751, 0.22", "54.9016, -6.19707, 72.7383, 1.18", "54.8355, -6.58122, 73.4179, 1.62", "54.8535, -7.30685, 74.5994, 0.22", "54.9672, -7.6677, 75.2136, 0.22", "55.0896, -7.85854, 75.5748, 0.44", "55.4874, -8.25489, 76.4481, 0.15", "55.8218, -8.49035, 77.047, 1.33", "56.5384, -8.91386, 78.1879, 0.15", "57.3153, -9.32891, 79.2997, 0.22", "57.7339, -9.57996, 79.8555, 0.22", "57.9504, -9.72383, 80.1305, 0.22", "58.3231, -10.0203, 80.5808, 0.74", "58.7197, -10.366, 81.0113, 1.25", "59.0609, -10.672, 81.3095, 1.25", "60.1529, -11.7516, 82.1338, 0.22", "60.6283, -12.2376, 82.5015, 0.22", "61.0231, -12.6515, 82.8231, 1.03", "61.5182, -13.1738, 83.2302, 1.84", "62.7789, -14.4926, 84.2439, 0.22", "63.3227, -15.0844, 84.6741, 1.11", "64.0806, -15.9867, 85.2973, 0.22", "64.5574, -16.5903, 85.7243, 0.15", "64.8959, -17.0203, 86.0504, 0.15", "65.3852, -17.6534, 86.5646, 1.03", "66.0579, -18.578, 87.3584, 0.22", "66.3771, -18.9976, 87.7866, 0.96", "66.9375, -19.7196, 88.605, 0.15", "67.3034, -20.1952, 89.2221, 0.15", "67.5541, -20.5484, 89.7491, 0.96", "67.8747, -21.0009, 90.5621, 1.92", "68.6539, -21.9529, 92.7163, 0.22", "68.9124, -22.2177, 93.4272, 0.44", "69.3054, -22.6145, 94.5856, 1.18", "69.7458, -23.082, 96.0731, 0.22", "70.1386, -23.518, 97.6827, 0.52", "70.4045, -23.8246, 99.1542, 0.81", "70.5089, -23.9591, 100.177, 0.81", "70.5931, -24.0381, 101.914, 0.52", "70.5521, -23.973, 102.872, 0.52", "70.3824, -23.7331, 103.783, 0.52", "70.0695, -23.3151, 104.549, 0.52", "69.7289, -22.8417, 105.076, 1.25", "69.4096, -22.3181, 105.48, 1.25", "69.0569, -21.5673, 105.934, 0.37", "68.6569, -20.447, 106.584, 0.66", "68.4627, -19.6775, 107.027, 0.37", "68.368, -18.8849, 107.532, 0.66", "68.3792, -18.0267, 108.229, 0.15", "68.4609, -17.5124, 108.764, 0.15", "68.5561, -17.2411, 109.127, 0.15", "68.7505, -16.8384, 109.762, 1.62", "69.1314, -16.1006, 111.016, 0.22", "69.5309, -15.2954, 112.47, 0.88", "69.8168, -14.66, 113.732, 1.4", "70.0288, -14.1078, 114.9, 1.4", "70.2491, -13.3521, 116.531, 0.66", "70.3654, -12.6933, 118.006, 0.29", "70.3781, -12.3887, 118.762, 0.29", "70.3532, -12.1178, 119.525, 0.29", "70.2936, -11.9725, 120.037, 0.29", "70.0382, -11.7655, 121.25, 0.29", "69.7805, -11.7402, 122.098, 0.29", "69.4504, -11.7793, 123.063, 0.29", "69.1889, -11.7654, 123.766, 0.29", "68.9661, -11.6831, 124.265, 0.29", "68.8003, -11.5808, 124.58, 0.29", "68.3877, -11.1926, 125.144, 0.88", "67.9606, -10.6657, 125.619, 1.25", "67.5707, -10.105, 126.033, 0.59", "67.0546, -9.33381, 126.535, 1.25", "66.7077, -8.7918, 126.869, 1.4", "65.6429, -7.13021, 127.846, 0.15", "65.228, -6.50148, 128.189, 0.74", "64.4568, -5.36593, 128.765, 0.22", "63.9151, -4.5827, 129.16, 1.03", "63.5339, -4.03324, 129.448, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "42.0952, 5.55774, 50.8796, 0.15", "39.5432, 4.87342, 52.0669, 0.15", "38.5054, 4.56862, 52.5265, 0.07", "37.262, 4.18979, 53.0473, 1.03", "35.5334, 3.64989, 53.7201, 0.07", "33.8206, 3.11739, 54.3509, 0.07", "32.8526, 2.82559, 54.6855, 0.66", "30.9024, 2.1601, 55.1555, 0.07", "29.898, 1.7829, 55.3512, 0.07", "28.4431, 1.20225, 55.5884, 0.07", "28.0115, 1.01393, 55.6271, 0.29", "27.1896, 0.614855, 55.652, 0.81", "24.9289, -0.562513, 55.6142, 0.07", "23.3818, -1.42751, 55.5245, 0.07", "22.3172, -2.06089, 55.4146, 0.15", "20.1733, -3.40941, 55.128, 0.07", "18.8489, -4.29889, 54.9355, 0.07", "18.0879, -4.8456, 54.8223, 0.22", "17.5109, -5.28171, 54.733, 0.22", "15.7925, -6.5713, 54.4413, 0.15", "14.7922, -7.32875, 54.2836, 0.15", "13.6148, -8.25475, 54.1383, 0.07", "12.9818, -8.7714, 54.0622, 0.15", "11.4718, -9.98814, 53.9071, 0.07", "10.5958, -10.6541, 53.8145, 0.59", "9.07581, -11.6653, 53.6048, 0.07", "8.26923, -12.135, 53.4176, 0.07", "7.6835, -12.4265, 53.229, 0.22", "6.46747, -12.9572, 52.7851, 0.22", "4.98436, -13.538, 52.2558, 0.07", "3.21772, -14.1754, 51.6648, 0.07", "2.37845, -14.4289, 51.3966, 0.07", "1.35513, -14.6506, 51.0969, 0.07", "-0.264736, -14.8378, 50.7028, 0.29", "-2.66175, -14.843, 50.2842, 0.07", "-3.69987, -14.7066, 50.206, 0.29", "-4.61158, -14.508, 50.2224, 0.29", "-6.34452, -14.0733, 50.3485, 0.07", "-7.99025, -13.5769, 50.5166, 0.07", "-8.66644, -13.3302, 50.5824, 0.22", "-9.65673, -12.9168, 50.6404, 0.37", "-10.9954, -12.4024, 50.6531, 0.29", "-12.6678, -11.914, 50.4593, 0.07", "-13.2669, -11.7895, 50.3067, 0.37", "-14.1352, -11.6135, 49.9958, 0.59", "-15.7506, -11.2055, 49.2485, 0.07", "-16.5337, -10.966, 48.8055, 0.15", "-18.4, -10.2893, 47.5872, 0.07", "-19.595, -9.81962, 46.7353, 0.07", "-20.6564, -9.4465, 46.0034, 0.15", "-22.1188, -9.0338, 45.1016, 0.07", "-22.9237, -8.87717, 44.6982, 0.07", "-23.4052, -8.80981, 44.5114, 0.29", "-24.0137, -8.7501, 44.3548, 0.29", "-25.7715, -8.6725, 44.0296, 0.07", "-27.4503, -8.6517, 43.8071, 0.07", "-28.9645, -8.65268, 43.6494, 0.07", "-29.5296, -8.6535, 43.5746, 0.07", "-29.8193, -8.65517, 43.5209, 0.15", "-30.2739, -8.6529, 43.3931, 0.15", "-31.1006, -8.60221, 43.0078, 0.15", "-32.1359, -8.45279, 42.29, 0.15", "-33.1487, -8.26936, 41.3731, 0.15", "-33.7349, -8.1538, 40.8018, 0.15", "-34.3634, -8.02699, 40.1777, 0.15", "-34.9838, -7.90248, 39.5454, 0.15", "-35.4536, -7.81193, 39.0517, 0.15", "-35.9801, -7.67753, 38.4784, 0.15", "-36.9593, -7.34851, 37.3321, 0.07", "-37.6025, -7.11109, 36.599, 0.07", "-38.5464, -6.79795, 35.6753, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-39.0682, 45.8912, 32.0865, 0.07", "-39.8015, 45.4081, 32.917, 0.07", "-40.2227, 45.0741, 33.4828, 0.88", "-40.7214, 44.6047, 34.2649, 0.22", "-41.0674, 44.286, 34.7994, 0.88", "-41.5353, 43.861, 35.5061, 1.84", "-42.4166, 43.0328, 36.8414, 0.22", "-42.7602, 42.6298, 37.3993, 0.22", "-43.0306, 42.2592, 37.8236, 0.22", "-43.4887, 41.5783, 38.4931, 0.15", "-43.8115, 41.0721, 38.9358, 0.15", "-44.0741, 40.6662, 39.2341, 0.29", "-44.6397, 39.8079, 39.742, 1.25", "-45.5157, 38.5068, 40.4262, 0.07", "-45.8118, 38.0627, 40.6418, 0.88", "-45.9673, 37.815, 40.7593, 1.18", "-46.5867, 36.8618, 41.2139, 0.07", "-46.9007, 36.4019, 41.447, 0.74", "-47.4672, 35.592, 41.9485, 0.07", "-47.6939, 35.2394, 42.2219, 0.29", "-47.9634, 34.724, 42.7051, 0.07", "-48.1266, 34.2847, 43.2133, 1.03", "-48.1919, 33.9877, 43.6416, 1.47", "-48.2604, 33.3364, 44.7294, 0.22", "-48.2612, 32.8819, 45.5861, 0.22", "-48.2574, 32.4629, 46.4624, 0.22", "-48.2869, 32.16, 47.1506, 0.22", "-48.3283, 31.9799, 47.5526, 0.22", "-48.4544, 31.6976, 48.0464, 0.22", "-48.6016, 31.4554, 48.3834, 0.22", "-48.9051, 31.0599, 48.854, 0.22", "-49.3705, 30.4529, 49.4402, 1.03", "-49.8026, 29.8405, 49.9523, 1.47", "-50.5702, 28.6289, 50.8749, 0.07", "-50.7727, 28.3071, 51.1116, 1.25", "-51.0754, 27.8444, 51.4492, 1.4", "-51.705, 26.9242, 52.098, 0.29", "-52.1306, 26.3549, 52.4916, 0.15", "-52.5135, 25.9112, 52.7962, 0.81", "-53.3728, 25.0128, 53.3999, 0.15", "-53.891, 24.5371, 53.6977, 0.15", "-54.282, 24.2108, 53.8981, 0.37", "-54.9619, 23.7187, 54.1422, 0.15", "-55.3286, 23.4695, 54.2296, 0.88", "-55.6952, 23.2273, 54.2863, 1.55", "-57.1485, 22.2981, 54.445, 0.22", "-57.5253, 22.0685, 54.4905, 0.22", "-58.4345, 21.5576, 54.6315, 0.81", "-59.6264, 20.9419, 54.8697, 0.07", "-60.0884, 20.7286, 54.9986, 0.74", "-60.8011, 20.4376, 55.2753, 0.22", "-61.5786, 20.1472, 55.6916, 0.37", "-62.1004, 19.9608, 56.0365, 0.22", "-62.9118, 19.6629, 56.707, 1.03", "-63.7382, 19.3065, 57.5396, 0.07", "-64.3338, 18.9913, 58.2549, 0.88", "-64.8155, 18.6848, 58.8985, 1.25", "-65.6776, 18.0363, 60.0419, 0.15", "-66.0931, 17.6812, 60.5661, 0.74", "-66.8871, 16.9351, 61.4679, 0.22", "-67.6539, 16.1745, 62.204, 1.11", "-68.1345, 15.7047, 62.5847, 2.06", "-69.3604, 14.5608, 63.39, 0.15", "-69.8293, 14.1464, 63.6526, 0.29", "-70.8833, 13.2949, 64.1741, 0.07", "-71.4013, 12.9358, 64.4112, 0.22", "-72.384, 12.348, 64.8875, 0.07", "-72.9254, 12.08, 65.2072, 1.4", "-74.1636, 11.5778, 66.0775, 0.07", "-74.7706, 11.3602, 66.5359, 0.81", "-75.7801, 11.0573, 67.3851, 0.07", "-76.3986, 10.9016, 67.9553, 0.96", "-77.5458, 10.6825, 69.0587, 0.07", "-77.9761, 10.6207, 69.4692, 0.07", "-78.5312, 10.5577, 69.9872, 1.25", "-79.7989, 10.4212, 71.1005, 0.22", "-80.6703, 10.3153, 71.8025, 0.88", "-81.2473, 10.2638, 72.2082, 1.18", "-82.9364, 10.1553, 73.237, 0.15", "-83.4631, 10.1239, 73.5168, 0.81", "-84.2987, 10.0715, 73.8915, 0.15", "-85.0984, 10.0169, 74.1664, 1.18", "-86.3777, 9.97152, 74.5273, 0.07", "-86.9291, 9.98012, 74.6612, 0.07", "-87.6985, 10.088, 74.7805, 0.07", "-88.0984, 10.1758, 74.8221, 0.88", "-88.6902, 10.3312, 74.87, 1.33", "-90.3019, 10.8502, 74.9547, 0.07", "-91.0525, 11.1317, 74.9673, 1.33", "-92.8732, 11.9386, 74.9614, 0.07", "-93.1785, 12.0947, 74.9525, 0.15" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-39.0682, 45.8912, 32.0865, 0.15", "-38.8269, 44.2525, 31.7008, 0.15", "-38.7065, 43.5793, 31.4938, 0.29", "-38.505, 42.5722, 31.1654, 0.15", "-38.4148, 42.1834, 31.0292, 0.52", "-38.2207, 41.4019, 30.7502, 1.33", "-37.8699, 39.8919, 30.2236, 0.07", "-37.6938, 39.0895, 29.9072, 0.07", "-37.5585, 38.3981, 29.6652, 0.37", "-37.3409, 37.2029, 29.409, 0.07", "-37.2805, 36.8308, 29.3788, 0.15", "-37.0631, 35.0982, 29.4375, 0.15", "-37.02, 34.6792, 29.5007, 0.74", "-36.9575, 33.7358, 29.7025, 1.25", "-36.9135, 31.4112, 30.3179, 0.15", "-36.9435, 30.0328, 30.7393, 0.15", "-36.9675, 29.412, 30.9352, 0.15", "-37.0127, 28.6422, 31.1669, 0.15", "-37.0919, 27.6642, 31.4066, 1.25", "-37.2983, 25.9864, 31.6722, 0.07", "-37.4159, 25.3068, 31.7161, 0.96", "-37.5304, 24.7149, 31.7109, 1.25", "-37.9105, 22.7352, 31.6203, 0.15", "-38.0581, 21.9184, 31.5476, 0.96", "-38.2989, 20.3595, 31.3502, 0.07", "-38.3945, 19.6137, 31.2255, 0.29", "-38.6449, 17.4277, 30.7845, 0.07", "-38.695, 16.9443, 30.6749, 0.29", "-38.8245, 15.4356, 30.2937, 0.07", "-38.8593, 14.7396, 30.1137, 1.03", "-38.8665, 14.0582, 29.944, 1.47", "-38.8044, 11.5974, 29.384, 0.07", "-38.7658, 11.0219, 29.2719, 0.59", "-38.7006, 10.2125, 29.1372, 0.07", "-38.6469, 9.44284, 29.0457, 0.07", "-38.5858, 8.3998, 28.9601, 0.07", "-38.5659, 7.46995, 28.9174, 1.18", "-38.5868, 5.05846, 28.8826, 0.07", "-38.6291, 4.36841, 28.8711, 0.74", "-38.8282, 2.54643, 28.8281, 0.07", "-38.9109, 2.03258, 28.8075, 0.44", "-39.2765, 0.295832, 28.739, 0.07", "-39.5076, -0.585315, 28.7087, 1.47", "-40.0664, -2.38003, 28.6489, 0.07", "-40.2544, -2.93071, 28.6205, 0.37", "-40.6573, -4.02064, 28.5337, 0.07", "-41.228, -5.47076, 28.4376, 0.07", "-41.6103, -6.4045, 28.3832, 0.07", "-41.803, -6.89447, 28.3696, 0.37", "-42.2521, -8.1135, 28.3719, 0.15", "-42.5247, -8.87562, 28.4046, 0.81", "-42.9777, -10.203, 28.5123, 0.15", "-43.3303, -11.2996, 28.6454, 1.55", "-43.8971, -13.104, 28.9445, 0.07", "-44.0656, -13.647, 29.0695, 0.66", "-44.4835, -15.1409, 29.5232, 0.07", "-44.5914, -15.6769, 29.7133, 0.29", "-44.6906, -16.4838, 30.0335, 0.07", "-44.7467, -16.9878, 30.259, 0.74", "-44.8702, -18.286, 30.8917, 0.15", "-44.9189, -19.4157, 31.4543, 1.18", "-44.7901, -21.6678, 32.5966, 0.15", "-44.7083, -22.4258, 32.9803, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-25.6932, 62.4314, 68.7986, 0.07", "-26.7523, 60.5372, 68.7821, 0.07", "-27.0832, 59.7601, 68.7686, 0.07", "-27.4203, 58.9685, 68.7548, 0.22", "-28.0566, 57.4742, 68.7289, 0.07", "-28.3155, 56.8663, 68.7184, 0.52", "-28.7516, 55.8422, 68.7006, 0.07", "-28.85, 55.3256, 68.7119, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-25.6932, 62.4314, 68.7986, 0.29", "-26.186, 62.4908, 70.1318, 0.29", "-26.5879, 62.452, 71.0858, 0.29", "-27.1116, 62.3684, 72.1244, 0.59", "-27.8596, 62.2659, 73.4825, 0.74", "-28.2354, 62.2386, 74.1269, 1.03", "-28.6841, 62.263, 74.8804, 1.03", "-29.2715, 62.3546, 75.832, 0.15", "-29.7231, 62.524, 76.5512, 0.44", "-30.2949, 62.8145, 77.4363, 0.81", "-30.671, 63.086, 77.9878, 1.03", "-31.3323, 63.6998, 78.985, 0.15", "-31.8812, 64.3608, 79.8705, 0.74", "-32.3485, 65.1627, 80.7958, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "9.37493, -15.8517, 6.13177, 0.22", "8.79075, -17.7419, 4.66482, 0.22", "8.54868, -18.5815, 4.1405, 0.37", "8.42238, -19.0981, 3.86236, 0.59", "8.18889, -20.0531, 3.34814, 0.22", "7.93449, -21.0936, 2.78788, 1.47", "7.67516, -22.1543, 2.21678, 0.29", "7.45181, -23.1604, 1.89913, 0.15", "7.26589, -24.1072, 1.67854, 1.03", "4.57949, -31.7061, -3.03115, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.37493, -15.8517, 6.13177, 0.22", "9.30557, -16.5741, 6.66231, 0.22", "9.19887, -17.2675, 7.09548, 1.4", "8.91362, -18.4061, 7.67717, 2.65", "7.96476, -21.2595, 8.92776, 0.22", "7.7442, -21.8284, 9.14133, 0.22", "7.36757, -22.7022, 9.42491, 0.96", "6.8212, -23.7506, 9.67187, 2.06", "5.82182, -25.4038, 9.90668, 0.22", "5.18189, -26.319, 9.90092, 0.15", "4.65798, -27.0191, 9.7818, 0.29", "4.09737, -27.7295, 9.63553, 0.15", "3.53167, -28.4929, 9.46741, 1.18", "3.21675, -28.9577, 9.36275, 1.7", "1.94274, -31.0325, 8.90829, 0.22", "1.46538, -31.8904, 8.74056, 0.81", "1.17606, -32.4612, 8.65181, 1.4", "0.264577, -34.4467, 8.42657, 0.15", "0.0647822, -34.9797, 8.40549, 0.15", "-0.244797, -36.0838, 8.44194, 0.15", "-0.401033, -36.8173, 8.51582, 0.37", "-0.568045, -37.5415, 8.599, 1.33", "-0.804941, -38.3768, 8.68949, 1.84", "-1.86775, -40.9293, 8.91702, 0.22", "-2.57423, -42.2474, 8.98572, 0.07", "-2.88729, -42.7984, 9.00962, 0.96", "-3.62223, -43.9414, 9.04125, 0.22", "-4.26614, -44.7815, 9.03043, 1.33", "-5.62112, -46.1112, 8.91173, 0.22", "-6.60342, -46.6429, 8.73912, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "2.94716, 35.5389, 37.8946, 0.44", "1.69609, 35.5951, 38.2792, 0.44", "0.739353, 35.7582, 38.483, 0.44", "-0.203773, 36.0061, 38.6812, 0.44", "-0.61588, 36.1304, 38.7783, 0.44", "-1.27775, 36.3355, 38.934, 0.96", "-1.69441, 36.4637, 39.0266, 1.18", "-2.80414, 36.7956, 39.1776, 0.15", "-3.34902, 36.9874, 39.2734, 0.15", "-3.85776, 37.1684, 39.4062, 0.15", "-4.63539, 37.4002, 39.6447, 0.15", "-5.08088, 37.479, 39.7805, 1.33", "-6.01905, 37.5506, 40.042, 1.92", "-7.69466, 37.5327, 40.4583, 0.22", "-8.78984, 37.4445, 40.6795, 0.59", "-9.37621, 37.3413, 40.8001, 1.03", "-10.7836, 36.9545, 41.1286, 0.15", "-11.5733, 36.6563, 41.3428, 0.15", "-11.9468, 36.4653, 41.452, 0.88", "-12.6797, 35.9637, 41.6602, 1.92", "-14.1962, 34.7435, 42.1092, 0.22", "-14.5939, 34.4119, 42.2471, 0.22", "-15.0693, 33.9638, 42.4111, 0.22", "-15.3402, 33.7092, 42.4989, 0.22", "-16.0279, 33.1175, 42.6873, 0.22", "-16.588, 32.6923, 42.8086, 1.11", "-17.4925, 32.1139, 42.9304, 2.58", "-19.1577, 31.1711, 43.1067, 0.52", "-20.4538, 30.4672, 43.2629, 0.15", "-21.0003, 30.1772, 43.3487, 0.15", "-21.7685, 29.7935, 43.5036, 0.29", "-22.4924, 29.4549, 43.6707, 0.96", "-23.6505, 28.9167, 43.9588, 0.22", "-24.4186, 28.599, 44.1795, 0.22", "-25.1173, 28.2724, 44.3736, 0.44", "-25.8603, 27.8797, 44.6076, 1.62", "-26.5622, 27.4868, 44.8633, 1.99" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "2.94716, 35.5389, 37.8946, 1.47", "3.7269, 35.6053, 38.7005, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-13.3019, -145.889, 43.452, 0.22", "-13.294, -144.855, 44.0777, 0.22", "-13.2766, -143.676, 44.7441, 0.22", "-13.2302, -142.738, 45.2283, 0.22", "-13.146, -141.679, 45.7252, 0.66", "-13.0621, -140.882, 46.0968, 0.81", "-12.8336, -139.38, 46.7673, 0.15", "-12.6398, -138.476, 47.1107, 1.18", "-12.4155, -137.587, 47.4103, 1.4", "-11.8478, -135.643, 48.0134, 0.15", "-11.6115, -134.972, 48.2084, 0.15", "-11.0426, -133.652, 48.5918, 1.7", "-10.4167, -132.471, 48.9048, 0.22", "-9.88141, -131.568, 49.1227, 0.88", "-9.43024, -130.855, 49.2828, 0.22", "-8.93665, -130.108, 49.4245, 0.07", "-8.37291, -129.186, 49.5798, 0.07", "-7.65021, -127.903, 49.7989, 0.66", "-6.96525, -126.555, 50.0261, 0.07", "-6.73154, -126.035, 50.1182, 0.37", "-6.46256, -125.343, 50.2401, 0.66", "-5.74791, -123.156, 50.6523, 0.07", "-5.47966, -122.205, 50.8484, 1.03", "-5.07669, -120.435, 51.2506, 0.15", "-4.93728, -119.651, 51.4474, 0.88", "-4.84472, -118.98, 51.6251, 1.18", "-4.67467, -116.813, 52.2381, 0.15", "-4.69351, -116.103, 52.4481, 0.15", "-4.80798, -115.323, 52.674, 0.22", "-4.9947, -114.75, 52.8287, 0.07", "-5.3097, -114.075, 52.9735, 0.29", "-5.67311, -113.455, 53.075, 0.07", "-6.01568, -112.953, 53.1184, 0.59", "-6.60632, -112.143, 53.1552, 0.15", "-7.39159, -111.101, 53.1759, 1.62", "-8.18669, -110.047, 53.1859, 0.15", "-8.74934, -109.305, 53.2018, 0.29", "-9.65375, -108.098, 53.2355, 0.07", "-10.3207, -107.112, 53.3062, 0.07", "-10.6654, -106.546, 53.3691, 0.66", "-11.2531, -105.529, 53.5056, 0.15", "-11.6916, -104.757, 53.6285, 1.03", "-12.2117, -103.863, 53.8084, 1.62", "-13.6667, -101.382, 54.4824, 0.07", "-14.3031, -100.275, 54.8297, 0.59", "-14.7596, -99.4855, 55.1008, 0.15", "-15.3386, -98.4722, 55.467, 0.88", "-16.1276, -96.9801, 56.0276, 0.15", "-16.8524, -95.6246, 56.5788, 0.15", "-17.4347, -94.5594, 57.053, 1.33", "-18.146, -93.2037, 57.6849, 0.15", "-18.6704, -92.0749, 58.2234, 0.15", "-19.0335, -91.0864, 58.6703, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-13.3019, -145.889, 43.452, 0.15", "-13.9024, -147.499, 43.9022, 0.15", "-14.3661, -148.419, 44.3737, 0.15", "-14.7541, -149.041, 44.8433, 0.15", "-15.1154, -149.526, 45.2738, 0.74", "-15.7192, -150.286, 45.9772, 0.15", "-16.1763, -150.886, 46.5184, 1.4", "-16.9139, -151.834, 47.5437, 0.15", "-17.605, -152.731, 48.5646, 0.66", "-18.0658, -153.511, 49.4855, 0.07", "-18.2074, -153.895, 49.9889, 0.07", "-18.3402, -154.39, 50.632, 0.29", "-18.4676, -155.247, 51.749, 0.07", "-18.4537, -155.955, 52.6522, 1.25", "-18.2199, -157.316, 54.4286, 0.29", "-17.7833, -158.763, 56.4909, 1.62" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-58.9857, -119.363, -14.134, 0.59", "-60.5925, -119.099, -15.7234, 0.59", "-61.0674, -118.99, -16.2573, 0.07", "-61.6763, -118.828, -17.0752, 0.07", "-62.0773, -118.709, -17.6782, 0.37", "-62.7199, -118.482, -18.7496, 0.07", "-63.1782, -118.281, -19.6371, 0.15", "-63.7135, -118.008, -21.0099, 1.62", "-64.1056, -117.56, -22.9368, 0.22", "-64.1214, -117.343, -23.8275, 0.22", "-64.0629, -117.151, -24.6066, 0.59", "-63.8354, -116.866, -25.7251, 0.59", "-63.4346, -116.585, -26.8717, 0.59", "-62.6039, -116.287, -28.2449, 1.18", "-61.9989, -116.15, -28.88, 1.18", "-63.7538, -113.4, -40.6368, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-58.9857, -119.363, -14.134, 0.22", "-59.6796, -120.016, -14.7696, 0.22", "-60.0605, -120.366, -15.1314, 0.15", "-60.6009, -120.826, -15.7142, 0.15", "-61.0597, -121.204, -16.2606, 1.25", "-61.5877, -121.608, -16.893, 0.15", "-62.048, -121.931, -17.4248, 0.15", "-62.6912, -122.33, -18.1629, 1.62", "-63.4245, -122.751, -18.9502, 0.22", "-63.8775, -123.022, -19.4252, 0.22", "-64.4091, -123.35, -19.9843, 1.33", "-64.9388, -123.668, -20.524, 1.11", "-65.8521, -124.183, -21.4025, 0.15", "-66.1843, -124.37, -21.691, 0.15", "-66.9665, -124.825, -22.2646, 0.15", "-67.4376, -125.096, -22.5475, 0.15", "-67.9511, -125.379, -22.763, 0.66", "-68.7671, -125.722, -22.888, 0.07", "-69.3306, -125.863, -22.8264, 0.88", "-70.1547, -125.938, -22.6215, 0.15", "-71.0276, -125.906, -22.3459, 0.59", "-72.1421, -125.733, -21.9277, 1.4", "-73.6197, -125.32, -21.3607, 0.22", "-74.6733, -124.89, -20.9468, 1.25", "-75.9392, -124.229, -20.4388, 0.44", "-76.6077, -123.795, -20.1805, 0.52", "-77.3691, -123.198, -19.8785, 1.11", "-78.2129, -122.426, -19.5081, 0.37", "-79.1669, -121.484, -19.0211, 0.07", "-79.7022, -120.965, -18.7166, 0.07", "-80.0828, -120.597, -18.4589, 0.22", "-80.6077, -120.098, -18.0348, 0.96", "-81.091, -119.634, -17.5845, 2.06", "-82.0892, -118.631, -16.4327, 0.22", "-82.7436, -117.973, -15.5365, 0.74", "-83.1768, -117.589, -14.8753, 0.74", "-83.6171, -117.266, -14.1213, 0.74", "-83.7903, -117.169, -13.7732, 0.74", "-84.1394, -117.03, -12.9001, 0.74", "-84.3923, -116.945, -11.9366, 0.74", "-84.522, -116.893, -11.3594, 0.74", "-84.5978, -116.825, -11.034, 0.74", "-84.7605, -116.502, -10.2994, 0.74", "-84.8302, -116.073, -9.69854, 0.74", "-84.857, -115.224, -8.76741, 0.29", "-84.8456, -114.73, -8.30131, 0.29", "-84.7914, -114.027, -7.69103, 0.07", "-84.7335, -113.595, -7.3277, 0.44", "-84.5326, -112.518, -6.46053, 0.07", "-84.3898, -111.935, -5.98294, 0.07", "-84.2363, -111.377, -5.51215, 0.07", "-84.14, -111.06, -5.22957, 0.29", "-83.9496, -110.482, -4.71773, 0.07", "-83.8087, -110.002, -4.26832, 0.37", "-83.6518, -109.489, -3.73852, 0.22", "-83.5934, -109.302, -3.50054, 0.81", "-83.5244, -108.996, -2.98582, 0.37", "-83.5267, -108.619, -2.09707, 0.88", "-83.5958, -108.229, -1.01381, 0.88", "-83.6517, -108.094, -0.56453, 0.88", "-83.8143, -107.877, 0.317178, 0.88", "-83.9774, -107.731, 1.10121, 0.88", "-84.2439, -107.626, 2.27629, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-6.60342, -46.6429, 8.73912, 0.29", "-7.44614, -48.1433, 9.07719, 0.29", "-7.85257, -48.9016, 9.26161, 0.15", "-8.22653, -49.6403, 9.4496, 1.03", "-8.90623, -51.0331, 9.8023, 0.15", "-9.36469, -51.9726, 10.0402, 1.4", "-10.4087, -54.112, 10.5819, 0.07", "-10.5695, -54.4348, 10.6623, 0.81", "-11.082, -55.5522, 10.9367, 0.07", "-11.4213, -56.3614, 11.1554, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-6.60342, -46.6429, 8.73912, 1.92", "-7.3025, -47.0221, 8.80049, 1.92", "-8.0198, -47.3962, 8.8512, 2.06", "-9.65722, -48.1721, 8.9128, 0.22", "-10.1987, -48.4107, 8.93167, 0.66", "-10.9505, -48.6927, 8.91432, 0.22", "-11.4829, -48.867, 8.86624, 0.96", "-11.8039, -48.9607, 8.83063, 1.47", "-13.0916, -49.2734, 8.63118, 0.52", "-13.8109, -49.3798, 8.46495, 0.66", "-15.2495, -49.5759, 8.06709, 0.15", "-16.0432, -49.6975, 7.82983, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-26.5622, 27.4868, 44.8633, 0.07", "-27.8941, 28.6996, 44.6129, 0.07", "-28.5124, 29.2627, 44.4966, 0.96", "-29.3419, 30.018, 44.3406, 0.07", "-29.78, 30.4169, 44.2583, 0.29", "-30.5078, 31.0797, 44.1214, 0.07", "-31.2975, 31.7988, 43.9729, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-26.5622, 27.4868, 44.8633, 0.44", "-27.2953, 26.412, 45.6512, 0.44", "-27.8343, 25.5091, 46.4261, 0.96", "-28.1921, 24.8657, 47.0441, 0.66", "-28.5627, 24.194, 47.7006, 0.15", "-28.7993, 23.8283, 48.0156, 0.15", "-29.1706, 23.279, 48.4496, 0.29", "-29.6995, 22.4881, 49.028, 0.29", "-30.0434, 21.9858, 49.3331, 0.74", "-30.4692, 21.2988, 49.6918, 1.62", "-31.4296, 19.5388, 50.5017, 0.22", "-31.7971, 18.8441, 50.7819, 1.18", "-32.0076, 18.4614, 50.9136, 1.55", "-32.564, 17.4298, 51.2238, 0.29", "-33.0354, 16.5002, 51.5124, 0.22", "-33.5001, 15.4524, 51.9003, 0.22", "-33.7566, 14.7145, 52.2514, 0.22", "-34.0097, 14.0527, 52.6139, 0.52", "-34.1068, 13.7973, 52.7895, 0.52", "-34.2983, 13.3022, 53.2199, 0.52", "-34.4341, 12.9544, 53.5307, 0.52", "-34.5724, 12.5232, 53.871, 0.52", "-34.7749, 11.7881, 54.4087, 0.15", "-34.8867, 11.3089, 54.7384, 0.15", "-34.9662, 10.9391, 54.976, 0.44", "-35.0882, 10.3207, 55.355, 1.11", "-35.2729, 9.154, 55.9842, 0.15", "-35.3393, 8.68725, 56.2057, 0.15", "-35.4855, 7.69431, 56.6492, 0.22", "-35.5893, 6.90282, 56.9886, 1.25", "-35.6534, 6.15309, 57.3324, 1.99", "-35.6811, 4.48612, 58.1684, 0.15", "-35.6283, 3.8064, 58.5096, 1.03", "-35.516, 3.12893, 58.8648, 1.03", "-35.0967, 1.94821, 59.5524, 0.15", "-34.6721, 1.19632, 60.0413, 0.15", "-34.2056, 0.61242, 60.4526, 0.15", "-33.5787, 0.0375389, 60.8946, 0.81", "-32.9131, -0.538065, 61.2985, 1.33", "-31.5934, -1.7354, 61.9833, 0.15", "-31.1997, -2.18999, 62.1675, 1.25", "-30.5814, -3.16027, 62.4376, 0.29", "-30.0714, -4.3059, 62.6415, 0.22", "-29.799, -5.21182, 62.7277, 0.15", "-29.6067, -6.28403, 62.7182, 1.77", "-29.4187, -8.45226, 62.4912, 0.07", "-29.3904, -9.10035, 62.3889, 0.81", "-29.3981, -10.2511, 62.1619, 0.07", "-29.4427, -11.2168, 61.9471, 0.96", "-29.4857, -12.1146, 61.7234, 2.06", "-29.5437, -14.2106, 61.1882, 0.07", "-29.5416, -15.2182, 60.94, 0.22", "-29.5588, -16.3872, 60.699, 0.15", "-29.5953, -17.3504, 60.5422, 1.47", "-29.6749, -18.4091, 60.3871, 0.66", "-29.8052, -19.4704, 60.2286, 0.66", "-29.921, -20.1388, 60.1353, 1.77", "-30.1923, -21.5615, 59.9364, 0.07", "-30.2859, -21.9585, 59.8806, 0.22", "-30.534, -22.8219, 59.7582, 0.22", "-30.7895, -23.5432, 59.6552, 1.55", "-31.3831, -24.9634, 59.4124, 0.15", "-31.6657, -25.5865, 59.2742, 0.59", "-32.0087, -26.3543, 59.0638, 0.15", "-32.283, -26.9908, 58.8754, 0.15", "-32.5253, -27.5704, 58.6957, 0.74", "-32.8123, -28.2755, 58.4518, 1.25", "-33.3859, -29.5408, 57.9755, 0.07", "-33.7107, -30.2325, 57.7133, 0.15", "-34.0046, -30.831, 57.5133, 0.74", "-34.2927, -31.3628, 57.3642, 1.4", "-34.8178, -32.2519, 57.1691, 0.15", "-35.3787, -33.0703, 57.075, 0.07", "-35.6924, -33.4432, 57.0766, 0.29", "-36.6172, -34.3364, 57.1259, 0.07", "-37.1102, -34.7695, 57.1679, 0.88", "-37.4481, -35.039, 57.2022, 1.33", "-38.5034, -35.796, 57.3286, 0.22", "-39.2021, -36.2882, 57.4159, 0.22", "-39.871, -36.73, 57.5006, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "3.7269, 35.6053, 38.7005, 0.15", "4.41514, 36.8903, 39.6433, 0.15", "4.62298, 37.3555, 40.0157, 0.22", "4.89603, 38.1279, 40.6857, 0.15", "5.03433, 38.605, 41.1017, 0.96", "5.20089, 39.2683, 41.6697, 0.29", "5.33448, 39.7783, 42.1076, 0.29", "5.4468, 40.3698, 42.6447, 0.29", "5.58775, 40.9368, 43.1464, 0.29", "5.7565, 41.4669, 43.6036, 1.25", "5.83578, 41.6677, 43.7789, 1.25", "6.35265, 42.7629, 44.7739, 0.15", "6.82054, 43.5338, 45.5031, 1.33", "7.56791, 44.5434, 46.5013, 0.07", "8.01915, 45.0395, 47.0422, 0.59", "8.67088, 45.6614, 47.7873, 0.15", "9.26318, 46.1936, 48.451, 1.11", "9.7638, 46.6916, 49.0102, 2.14", "10.0231, 46.9911, 49.3007, 1.84", "10.7312, 48.2056, 50.2042, 0.15", "11.0108, 49.0031, 50.6266, 1.4", "11.1387, 49.713, 50.9067, 0.96", "11.277, 51.6361, 51.5861, 0.15", "11.2671, 52.4405, 51.8623, 0.96", "11.1101, 54.0929, 52.4732, 0.15", "11.0096, 54.6485, 52.6986, 1.18", "10.7858, 55.6885, 53.2205, 0.15", "10.5707, 56.6712, 53.8785, 0.59", "10.5058, 56.9818, 54.1579, 0.88", "10.3269, 57.9971, 55.241, 0.22", "10.252, 58.6416, 56.0313, 0.88", "10.2024, 59.1843, 56.729, 1.77", "10.1686, 60.1978, 58.0328, 0.29", "10.2046, 60.683, 58.6591, 0.81", "10.3473, 61.5443, 59.7775, 0.22", "10.5077, 62.1551, 60.5696, 0.37", "10.616, 62.4733, 60.9816, 0.37", "10.9286, 63.2319, 61.9617, 1.55", "11.4226, 64.2083, 63.2013, 0.07", "11.8545, 64.97, 64.1278, 0.22", "12.168, 65.4807, 64.722, 0.22", "12.453, 65.9375, 65.2354, 0.22", "12.7919, 66.4942, 65.8257, 0.07", "13.0861, 67.0094, 66.3257, 1.11", "13.2572, 67.3105, 66.5873, 1.4", "13.8911, 68.3303, 67.4283, 0.07", "14.2913, 68.9596, 67.9376, 0.74", "14.5287, 69.3657, 68.2524, 0.74", "14.9048, 70.0579, 68.7747, 0.22", "15.3417, 70.8835, 69.3855, 0.22", "15.6342, 71.4311, 69.7836, 0.96", "15.8325, 71.8058, 70.0479, 0.96", "16.5558, 73.2503, 71.0215, 0.15", "16.9384, 74.0598, 71.5556, 0.15", "17.0968, 74.4289, 71.7843, 0.22", "17.4842, 75.4861, 72.3605, 0.07", "17.6636, 76.0431, 72.648, 0.07", "17.9231, 76.9646, 73.0868, 0.96", "18.1137, 77.7297, 73.4224, 0.22", "18.3003, 78.5971, 73.7697, 1.25", "18.6669, 80.5121, 74.5049, 0.15", "18.8341, 81.458, 74.8511, 1.33", "19.0951, 82.977, 75.3962, 0.15", "19.1694, 83.4534, 75.5692, 0.22", "19.315, 84.5056, 75.9457, 0.15", "19.4022, 85.2294, 76.1964, 0.81", "19.4166, 85.3627, 76.2392, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.7269, 35.6053, 38.7005, 0.29", "4.2692, 36.0993, 39.9787, 0.29", "4.7639, 36.6584, 41.2048, 0.52", "5.03211, 37.0131, 41.8888, 1.25", "5.51908, 37.7061, 43.1213, 0.15", "5.74513, 38.0307, 43.6812, 0.15", "5.91228, 38.2831, 44.1075, 0.15", "6.17045, 38.753, 44.7712, 0.15", "6.37583, 39.1051, 45.2337, 0.81", "6.66413, 39.5539, 45.8477, 1.33", "7.15407, 40.2692, 46.8786, 0.22", "7.42704, 40.601, 47.4329, 0.22", "7.75689, 40.9019, 48.0292, 1.11", "8.03931, 41.1058, 48.5042, 1.7", "8.56907, 41.4699, 49.3793, 0.22", "8.84256, 41.6469, 49.8292, 0.88", "9.37975, 41.9368, 50.6591, 0.15", "9.69187, 42.0603, 51.1028, 0.29", "9.97042, 42.1342, 51.4903, 0.29", "10.3265, 42.2207, 52.0048, 0.15", "10.716, 42.337, 52.618, 0.15", "11.0168, 42.4571, 53.1279, 0.96", "11.3734, 42.6179, 53.7669, 0.66", "11.8524, 42.7208, 54.6423, 0.15", "12.1721, 42.7615, 55.241, 0.15", "12.5897, 42.8041, 56.0762, 0.81", "13.1873, 42.8915, 57.3595, 2.14", "13.4792, 42.952, 58.0312, 2.14", "14.3311, 43.2187, 60.0163, 0.15", "14.6431, 43.324, 60.7129, 0.15", "15.1176, 43.4562, 61.7174, 0.29", "15.4581, 43.5302, 62.4097, 1.33", "15.75, 43.5989, 63.0013, 1.62", "16.3227, 43.7945, 64.1553, 0.15", "16.504, 43.9098, 64.5578, 0.15", "16.7771, 44.088, 65.198, 0.15", "16.9261, 44.191, 65.5782, 0.15", "17.1041, 44.3005, 66.0846, 0.29", "17.332, 44.426, 66.8911, 0.66", "17.5744, 44.5888, 68.0764, 0.15", "17.6779, 44.7156, 68.7515, 0.15", "17.7413, 44.8539, 69.2861, 0.15", "17.7978, 45.0884, 69.9336, 0.66", "17.8579, 45.6577, 71.1927, 0.22", "17.8891, 46.0824, 71.9854, 0.22", "17.9258, 46.4814, 72.675, 1.33", "17.9808, 46.9836, 73.4979, 1.92", "18.115, 48.0653, 75.2216, 0.37", "18.1871, 48.6751, 76.1667, 0.22", "18.2656, 49.3485, 77.1894, 0.22", "18.2876, 49.6734, 77.7207, 0.22", "18.2546, 49.9393, 78.2083, 0.22", "18.1536, 50.1505, 78.6951, 0.22", "18.0309, 50.2961, 79.1568, 0.22", "17.8828, 50.4732, 79.7103, 0.52", "17.5454, 50.964, 81.0006, 1.18", "17.2565, 51.4864, 82.2525, 1.4", "16.8648, 52.3779, 84.28, 0.81", "16.7079, 52.9014, 85.5059, 0.81", "16.6287, 53.4405, 86.8944, 1.7", "16.6776, 54.3176, 89.438, 0.29", "16.7945, 54.721, 90.7096, 0.29", "16.9004, 54.9342, 91.3998, 1.03", "17.1692, 55.3966, 92.8587, 0.22", "17.3929, 55.7674, 94.0334, 1.11", "17.6774, 56.1387, 95.456, 0.29", "17.8585, 56.3185, 96.409, 0.29", "17.9312, 56.4017, 96.9393, 0.52", "17.9834, 56.4828, 97.8377, 0.52", "17.9809, 56.5089, 98.1765, 0.52", "17.9718, 56.5168, 98.6996, 0.52", "18.0335, 56.4117, 99.5681, 0.52", "18.2146, 56.2942, 100.166, 0.52", "18.6835, 56.1154, 101.204, 0.22", "19.1754, 56.0314, 102.079, 0.15", "19.371, 56.0624, 102.437, 0.15", "19.7226, 56.2238, 103.075, 0.81", "20.3366, 56.6541, 104.195, 0.29", "20.7861, 57.0689, 105.042, 0.81", "21.1462, 57.5028, 105.733, 1.7", "21.9766, 58.7133, 107.41, 0.22", "22.3904, 59.4293, 108.252, 0.44", "22.5687, 59.8572, 108.627, 0.15", "22.7749, 60.475, 109.034, 0.88", "23.1541, 61.7728, 109.685, 0.22", "23.3409, 62.4046, 109.95, 0.88", "23.504, 62.9152, 110.134, 1.47", "24.1459, 64.8915, 110.859, 0.22", "24.3018, 65.3252, 111.025, 0.22", "24.5587, 65.8955, 111.288, 0.37", "25.2239, 67.0618, 111.992, 0.22", "25.5245, 67.5219, 112.34, 0.22", "25.8226, 67.9413, 112.745, 0.96", "26.0948, 68.2541, 113.141, 1.55", "26.9549, 69.1351, 114.426, 0.15", "27.5726, 69.6743, 115.339, 1.25", "28.1321, 70.1389, 116.181, 1.25", "28.7817, 70.627, 117.15, 0.74", "29.5357, 71.1091, 118.281, 0.15", "30.0341, 71.3828, 119.032, 0.29", "30.3749, 71.5241, 119.519, 0.29", "31.0002, 71.6986, 120.241, 0.29", "31.6655, 71.8467, 120.888, 0.81", "32.6547, 72.1039, 121.752, 0.15", "33.2072, 72.2953, 122.233, 1.11", "33.4934, 72.4166, 122.48, 1.77", "35.0188, 73.0998, 123.766, 0.22", "35.5742, 73.3289, 124.196, 0.22", "36.2841, 73.6411, 124.704, 0.22", "36.9346, 73.9206, 125.111, 0.22", "37.2842, 74.0819, 125.32, 0.44", "37.9827, 74.4323, 125.729, 0.44", "38.8874, 74.907, 126.255, 1.55", "39.8573, 75.3522, 126.804, 0.66", "41.1072, 75.7802, 127.506, 0.15", "41.5947, 75.9103, 127.794, 0.15", "42.186, 76.0408, 128.18, 0.37", "43.0909, 76.2073, 128.819, 0.15", "43.6776, 76.3028, 129.276, 0.81", "44.7417, 76.4376, 130.17, 0.22", "45.2885, 76.497, 130.633, 0.22", "45.8717, 76.5493, 131.106, 1.25", "46.1558, 76.5818, 131.328, 1.25", "47.2191, 76.7304, 132.082, 0.07", "47.9302, 76.8518, 132.538, 0.96", "49.3762, 77.1266, 133.375, 0.22", "50.096, 77.2463, 133.763, 1.03", "50.8248, 77.3516, 134.134, 1.77", "52.3045, 77.5853, 134.862, 0.15", "53.13, 77.7178, 135.247, 0.22", "54.1086, 77.8862, 135.702, 0.15", "54.825, 78.0321, 136.045, 1.03", "55.7287, 78.2286, 136.493, 0.22", "56.7663, 78.4663, 137.028, 0.22", "57.8516, 78.765, 137.61, 0.15", "58.5931, 78.9834, 138.009, 0.15", "59.3721, 79.2224, 138.437, 0.81", "59.6321, 79.3002, 138.581, 1.77", "60.7364, 79.5891, 139.137, 0.07", "61.5927, 79.7863, 139.506, 0.59", "63.4634, 80.2178, 140.163, 0.22", "63.8715, 80.3081, 140.287, 0.59", "64.6562, 80.4624, 140.499, 0.66", "66.2406, 80.76, 140.888, 0.07", "66.8874, 80.8672, 141.011, 0.07", "67.2901, 80.9139, 141.06, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-31.2975, 31.7988, 43.9729, 0.15", "-32.1595, 33.4582, 44.2644, 0.15", "-32.5534, 34.7714, 44.2886, 0.15", "-32.7688, 36.2944, 44.148, 0.07", "-32.7752, 37.0478, 43.9898, 0.07", "-32.6494, 38.732, 43.4642, 0.07", "-32.4789, 40.0123, 42.948, 0.07", "-32.2803, 40.5826, 42.5936, 0.07", "-31.9824, 41.0939, 42.1773, 0.29", "-31.4301, 41.7679, 41.496, 0.29", "-31.0724, 42.1399, 41.0654, 0.29", "-30.7295, 42.4729, 40.6542, 0.29", "-30.2821, 42.8799, 40.1126, 0.29", "-29.4991, 43.6223, 39.0685, 0.22", "-29.0073, 44.1282, 38.3076, 0.22", "-28.276, 44.9614, 37.0356, 0.88", "-27.6882, 45.6694, 35.922, 0.22", "-27.4463, 45.9903, 35.4115, 0.22", "-27.097, 46.5032, 34.5858, 0.15", "-26.7488, 47.1112, 33.6557, 0.15", "-26.3964, 47.7253, 32.7122, 0.15", "-26.0613, 48.2674, 31.8779, 0.15", "-25.743, 48.7348, 31.1817, 0.74", "-25.453, 49.1534, 30.5938, 0.74", "-24.9683, 49.7832, 29.7002, 0.15", "-24.3373, 50.5118, 28.582, 0.22", "-24.0512, 50.8033, 28.0705, 0.22", "-23.538, 51.2227, 27.1895, 0.22", "-23.3, 51.3756, 26.7962, 0.22", "-22.8564, 51.6123, 26.0546, 0.22", "-22.4086, 51.7558, 25.2709, 0.22", "-22.0949, 51.7808, 24.6995, 0.22", "-21.705, 51.7504, 23.9721, 0.22", "-21.3453, 51.6978, 23.3302, 0.22", "-20.8234, 51.6544, 22.3452, 0.22", "-20.1724, 51.6173, 20.9603, 0.44", "-19.8216, 51.594, 20.0807, 0.44", "-19.7095, 51.5793, 19.7562, 0.44", "-19.3955, 51.4809, 18.7736, 0.44", "-19.0252, 51.282, 17.7365, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-31.2975, 31.7988, 43.9729, 1.03", "-31.6636, 32.4625, 44.3581, 1.03", "-32.5485, 34.1453, 45.5577, 0.07", "-32.8515, 34.7414, 46.0378, 0.07", "-33.0432, 35.2378, 46.4738, 0.22", "-33.2999, 36.0773, 47.2543, 0.07", "-33.4674, 36.7138, 47.8532, 0.37", "-33.6984, 37.7891, 48.9303, 0.15", "-33.8432, 38.7014, 49.9078, 1.33", "-34.1541, 40.7999, 52.1929, 0.07", "-34.3349, 42.0529, 53.5793, 0.07", "-34.4254, 42.7228, 54.3219, 0.66", "-34.5004, 43.4533, 55.1171, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-39.871, -36.73, 57.5006, 0.07", "-40.8244, -37.6509, 57.3418, 0.07", "-41.4242, -38.2304, 57.2419, 0.37", "-42.1005, -38.8837, 57.1293, 0.22", "-42.7997, -39.5592, 57.0129, 0.88", "-43.2641, -40.0078, 56.9355, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-39.871, -36.73, 57.5006, 0.07", "-40.4531, -34.6862, 56.6518, 0.07", "-40.6876, -33.8627, 56.3098, 0.44", "-40.9623, -32.8982, 55.9092, 0.15", "-41.265, -31.8354, 55.4679, 0.74", "-41.6688, -30.4174, 54.8789, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "axon_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "axon_1", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_DBC_6649d38fd5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_38
create dend_56
public dend_56
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, axon_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, axon_1, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999950122992937)
    connect dend_25(0), soma_0(0.49999950122992937)
    connect dend_10(0), soma_0(0.49999950122992937)
    connect dend_1(0), soma_0(0.49999950122992937)
    connect dend_0(0), soma_0(0.49999950122992937)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29752, -10.9202, 0.0, 2.7473 ) }
    soma_0 { pt3dadd( -3.02947, -9.86122, 0.0, 4.90547 ) }
    soma_0 { pt3dadd( -2.76143, -8.80223, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( -2.49339, -7.74324, 0.0, 9.06693 ) }
    soma_0 { pt3dadd( -2.22534, -6.68425, 0.0, 10.5477 ) }
    soma_0 { pt3dadd( -1.9573, -5.62526, 0.0, 11.7638 ) }
    soma_0 { pt3dadd( -1.68926, -4.56627, 0.0, 12.6703 ) }
    soma_0 { pt3dadd( -1.42121, -3.50728, 0.0, 13.5724 ) }
    soma_0 { pt3dadd( -1.15317, -2.44829, 0.0, 13.9606 ) }
    soma_0 { pt3dadd( -0.885125, -1.3893, 0.0, 14.249 ) }
    soma_0 { pt3dadd( -0.617082, -0.330312, 0.0, 14.4914 ) }
    soma_0 { pt3dadd( -0.349039, 0.728678, 0.0, 14.572 ) }
    soma_0 { pt3dadd( -0.0809953, 1.78767, 0.0, 14.5168 ) }
    soma_0 { pt3dadd( 0.187048, 2.84666, 0.0, 14.1167 ) }
    soma_0 { pt3dadd( 0.455092, 3.90565, 0.0, 13.6161 ) }
    soma_0 { pt3dadd( 0.723135, 4.96464, 0.0, 12.8986 ) }
    soma_0 { pt3dadd( 0.991178, 6.02363, 0.0, 12.0703 ) }
    soma_0 { pt3dadd( 1.25922, 7.08262, 0.0, 10.8368 ) }
    soma_0 { pt3dadd( 1.52727, 8.14161, 0.0, 9.27498 ) }
    soma_0 { pt3dadd( 1.79531, 9.2006, 0.0, 7.02436 ) }
    soma_0 { pt3dadd( 2.06335, 10.2596, 0.0, 4.05122 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.851454, 10.1137, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.851454, 10.1137, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.759154, 12.0548, 1.64012, 0.96 ) }
    dend_32 { pt3dadd( 0.680049, 13.7184, 1.58879, 1.25 ) }
    dend_32 { pt3dadd( 0.569683, 16.0395, 1.51719, 1.55 ) }
    dend_32 { pt3dadd( 0.466391, 18.2118, 1.45017, 1.84 ) }
    dend_32 { pt3dadd( 0.362291, 20.4011, 1.38263, 2.14 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.23855, -9.42631, -9.03, 1.18 ) }
    dend_25 { pt3dadd( -1.73228, -9.55348, -9.11896, 1.18 ) }
    dend_25 { pt3dadd( -0.482253, -10.0044, -9.35849, 1.18 ) }
    dend_25 { pt3dadd( 1.61891, -11.0086, -9.82203, 1.03 ) }
    dend_25 { pt3dadd( 2.69615, -11.611, -10.0831, 0.96 ) }
    dend_25 { pt3dadd( 3.62701, -12.0215, -10.2726, 0.81 ) }
    dend_25 { pt3dadd( 2.57508, -12.2868, -10.2909, 0.74 ) }
    dend_25 { pt3dadd( 1.80548, -12.8037, -10.4475, 0.74 ) }
    dend_25 { pt3dadd( 0.78568, -13.4825, -10.7182, 0.96 ) }
    dend_25 { pt3dadd( -0.460591, -14.2461, -11.0917, 1.18 ) }
    dend_25 { pt3dadd( -2.26133, -15.2383, -11.6872, 0.88 ) }
    dend_25 { pt3dadd( -3.77411, -15.9935, -12.2565, 0.96 ) }
    dend_25 { pt3dadd( -5.35309, -16.7155, -12.8722, 1.25 ) }
    dend_25 { pt3dadd( -6.4527, -17.1976, -13.3346, 1.99 ) }
    dend_25 { pt3dadd( -7.53068, -17.6738, -13.8433, 2.95 ) }
    dend_25 { pt3dadd( -8.57776, -18.1826, -14.4432, 3.54 ) }
    dend_25 { pt3dadd( -9.46162, -18.6784, -15.0909, 3.54 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.90855, -11.6663, 1.23, 0.81 ) }
    dend_10 { pt3dadd( -1.7797, -12.3803, 1.20115, 0.81 ) }
    dend_10 { pt3dadd( -1.56806, -13.2546, 1.16595, 0.96 ) }
    dend_10 { pt3dadd( -1.31968, -14.1276, 1.13244, 1.18 ) }
    dend_10 { pt3dadd( -1.05186, -14.973, 1.10192, 1.18 ) }
    dend_10 { pt3dadd( -0.732526, -15.91, 1.09856, 0.81 ) }
    dend_10 { pt3dadd( -0.527898, -16.4825, 1.11729, 1.03 ) }
    dend_10 { pt3dadd( -0.216278, -17.2847, 1.19954, 1.47 ) }
    dend_10 { pt3dadd( 9.48735E-4, -17.8592, 1.30557, 2.06 ) }
    dend_10 { pt3dadd( 0.170967, -18.3773, 1.44188, 2.14 ) }
    dend_10 { pt3dadd( 0.398213, -19.3406, 1.76366, 1.33 ) }
    dend_10 { pt3dadd( 0.531436, -20.5741, 2.23865, 0.96 ) }
    dend_10 { pt3dadd( 0.486344, -21.6725, 2.68917, 0.96 ) }
    dend_10 { pt3dadd( 0.314148, -22.4573, 3.01955, 1.18 ) }
    dend_10 { pt3dadd( 0.105531, -23.0374, 3.26748, 1.99 ) }
    dend_10 { pt3dadd( -0.228022, -23.7534, 3.56873, 2.88 ) }
    dend_10 { pt3dadd( -0.669205, -24.5667, 3.88979, 3.02 ) }
    dend_10 { pt3dadd( -1.2875, -25.6595, 4.28586, 1.77 ) }
    dend_10 { pt3dadd( -2.13233, -27.2702, 4.79258, 0.81 ) }
    dend_10 { pt3dadd( -2.54935, -28.209, 5.05372, 0.81 ) }
    dend_10 { pt3dadd( -2.77487, -28.8767, 5.21434, 0.81 ) }
    dend_10 { pt3dadd( -2.9541, -29.6879, 5.38966, 0.81 ) }
    dend_10 { pt3dadd( -3.06025, -30.5722, 5.57733, 0.81 ) }
    dend_10 { pt3dadd( -3.08396, -31.3148, 5.7299, 1.03 ) }
    dend_10 { pt3dadd( -3.07052, -32.0482, 5.87163, 1.25 ) }
    dend_10 { pt3dadd( -3.00621, -33.4154, 6.12353, 0.81 ) }
    dend_10 { pt3dadd( -2.95031, -34.505, 6.33387, 1.03 ) }
    dend_10 { pt3dadd( -2.92218, -35.375, 6.51942, 1.62 ) }
    dend_10 { pt3dadd( -2.93371, -36.0927, 6.69348, 2.73 ) }
    dend_10 { pt3dadd( -3.00768, -37.1046, 6.96716, 4.06 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.51145, 6.32369, 5.69, 0.59 ) }
    dend_1 { pt3dadd( 7.49646, 6.86176, 5.48423, 0.44 ) }
    dend_1 { pt3dadd( 8.45627, 7.44635, 5.5729, 0.44 ) }
    dend_1 { pt3dadd( 9.25887, 7.96048, 5.86435, 0.44 ) }
    dend_1 { pt3dadd( 10.1185, 8.50868, 6.34299, 0.37 ) }
    dend_1 { pt3dadd( 10.7603, 8.89802, 6.77418, 1.03 ) }
    dend_1 { pt3dadd( 11.7687, 9.47863, 7.54733, 1.33 ) }
    dend_1 { pt3dadd( 12.8336, 10.0666, 8.60857, 1.47 ) }
    dend_1 { pt3dadd( 13.5642, 10.435, 9.48845, 1.25 ) }
    dend_1 { pt3dadd( 14.3595, 10.7377, 10.5743, 0.29 ) }
    dend_1 { pt3dadd( 14.8714, 10.829, 11.3265, 0.22 ) }
    dend_1 { pt3dadd( 15.2657, 10.8176, 11.8758, 0.22 ) }
    dend_1 { pt3dadd( 15.5177, 10.73, 12.1636, 0.22 ) }
    dend_1 { pt3dadd( 15.8181, 10.5909, 12.4711, 0.22 ) }
    dend_1 { pt3dadd( 16.2865, 10.3849, 12.9278, 1.03 ) }
    dend_1 { pt3dadd( 17.2808, 10.0223, 13.9267, 2.21 ) }
    dend_1 { pt3dadd( 17.8316, 9.93172, 14.4885, 3.02 ) }
    dend_1 { pt3dadd( 19.5727, 10.103, 16.3043, 0.29 ) }
    dend_1 { pt3dadd( 20.3736, 10.4181, 17.1867, 0.29 ) }
    dend_1 { pt3dadd( 20.8243, 10.7213, 17.6984, 0.44 ) }
    dend_1 { pt3dadd( 21.2627, 11.1355, 18.2183, 0.66 ) }
    dend_1 { pt3dadd( 21.9383, 11.9604, 19.0474, 1.11 ) }
    dend_1 { pt3dadd( 22.5578, 12.8185, 19.8415, 0.52 ) }
    dend_1 { pt3dadd( 23.0506, 13.5684, 20.4258, 0.22 ) }
    dend_1 { pt3dadd( 23.3662, 13.9016, 20.7491, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 23.676, 14.0081, 21.0392, 0.22 ) }
    dend_1 { pt3dadd( 23.9781, 13.8913, 21.2978, 0.22 ) }
    dend_1 { pt3dadd( 24.6699, 13.4456, 21.8593, 0.66 ) }
    dend_1 { pt3dadd( 25.3693, 12.9546, 22.3965, 1.7 ) }
    dend_1 { pt3dadd( 26.0631, 12.47, 22.9492, 2.21 ) }
    dend_1 { pt3dadd( 26.718, 12.0639, 23.522, 1.7 ) }
    dend_1 { pt3dadd( 27.6202, 11.6795, 24.4405, 0.29 ) }
    dend_1 { pt3dadd( 28.4498, 11.5616, 25.4845, 0.22 ) }
    dend_1 { pt3dadd( 28.7872, 11.6551, 26.0314, 0.22 ) }
    dend_1 { pt3dadd( 29.124, 11.9911, 26.8884, 0.22 ) }
    dend_1 { pt3dadd( 29.3096, 12.4849, 27.827, 0.96 ) }
    dend_1 { pt3dadd( 29.397, 13.3712, 29.2998, 0.74 ) }
    dend_1 { pt3dadd( 29.3497, 14.0028, 30.325, 0.74 ) }
    dend_1 { pt3dadd( 29.2815, 14.3523, 30.935, 0.74 ) }
    dend_1 { pt3dadd( 29.2104, 14.8225, 31.9376, 0.74 ) }
    dend_1 { pt3dadd( 29.2401, 15.0903, 32.6007, 0.74 ) }
    dend_1 { pt3dadd( 29.3102, 15.1564, 32.833, 0.74 ) }
    dend_1 { pt3dadd( 29.8157, 15.2952, 33.5858, 0.74 ) }
    dend_1 { pt3dadd( 30.347, 15.4016, 34.186, 1.18 ) }
    dend_1 { pt3dadd( 31.2815, 15.5659, 35.1507, 0.44 ) }
    dend_1 { pt3dadd( 32.1332, 15.7193, 35.9395, 1.25 ) }
    dend_1 { pt3dadd( 33.3149, 15.9616, 36.9669, 2.73 ) }
    dend_1 { pt3dadd( 34.5775, 16.2651, 38.0452, 3.54 ) }
    dend_1 { pt3dadd( 35.2848, 16.4622, 38.6268, 2.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.64855, 6.93369, 5.52, 0.88 ) }
    dend_0 { pt3dadd( -4.93203, 7.22353, 5.65352, 0.74 ) }
    dend_0 { pt3dadd( -5.36949, 7.6447, 5.91483, 0.22 ) }
    dend_0 { pt3dadd( -5.65383, 7.90225, 6.10798, 0.22 ) }
    dend_0 { pt3dadd( -6.02695, 8.21338, 6.36506, 0.44 ) }
    dend_0 { pt3dadd( -6.33558, 8.44448, 6.57486, 0.44 ) }
    dend_0 { pt3dadd( -6.73472, 8.69762, 6.84709, 0.22 ) }
    dend_0 { pt3dadd( -7.14814, 8.89384, 7.14505, 0.22 ) }
    dend_0 { pt3dadd( -7.35797, 8.96617, 7.29577, 0.22 ) }
    dend_0 { pt3dadd( -7.6514, 9.04095, 7.49884, 0.96 ) }
    dend_0 { pt3dadd( -8.10706, 9.12682, 7.82204, 1.47 ) }
    dend_0 { pt3dadd( -8.91737, 9.25484, 8.44795, 0.15 ) }
    dend_0 { pt3dadd( -9.2801, 9.30931, 8.72007, 0.15 ) }
    dend_0 { pt3dadd( -9.5417, 9.35926, 8.88916, 0.15 ) }
    dend_0 { pt3dadd( -9.93544, 9.44167, 9.12467, 0.88 ) }
    dend_0 { pt3dadd( -10.6369, 9.60144, 9.53066, 0.37 ) }
    dend_0 { pt3dadd( -11.3913, 9.78972, 9.95837, 1.55 ) }
    dend_0 { pt3dadd( -11.9989, 9.96022, 10.2964, 2.95 ) }
    dend_0 { pt3dadd( -13.5577, 10.427, 11.1461, 0.07 ) }
    dend_0 { pt3dadd( -13.849, 10.513, 11.302, 0.88 ) }
    dend_0 { pt3dadd( -14.4557, 10.688, 11.6057, 0.07 ) }
    dend_0 { pt3dadd( -15.0284, 10.846, 11.8453, 0.22 ) }
    dend_0 { pt3dadd( -15.4255, 10.9523, 11.9937, 0.22 ) }
    dend_0 { pt3dadd( -16.3082, 11.1706, 12.3122, 0.15 ) }
    dend_0 { pt3dadd( -16.5815, 11.2264, 12.4078, 0.96 ) }
    dend_0 { pt3dadd( -16.9756, 11.2961, 12.5256, 1.84 ) }
    dend_0 { pt3dadd( -18.3892, 11.498, 12.8662, 0.15 ) }
    dend_0 { pt3dadd( -18.703, 11.5264, 12.9314, 0.66 ) }
    dend_0 { pt3dadd( -19.1996, 11.5512, 13.0275, 1.18 ) }
    dend_0 { pt3dadd( -20.4051, 11.5692, 13.2503, 0.15 ) }
    dend_0 { pt3dadd( -20.8529, 11.5577, 13.3264, 1.33 ) }
    dend_0 { pt3dadd( -21.4498, 11.5188, 13.4235, 2.51 ) }
    dend_0 { pt3dadd( -23.1281, 11.3393, 13.6841, 0.15 ) }
    dend_0 { pt3dadd( -23.4001, 11.3022, 13.7154, 0.52 ) }
    dend_0 { pt3dadd( -23.8978, 11.2193, 13.7503, 0.81 ) }
    dend_0 { pt3dadd( -24.6796, 11.0698, 13.7663, 0.15 ) }
    dend_0 { pt3dadd( -25.0756, 10.9906, 13.7691, 0.15 ) }
    dend_0 { pt3dadd( -25.3786, 10.931, 13.7626, 0.66 ) }
    dend_0 { pt3dadd( -26.3095, 10.7598, 13.7119, 1.84 ) }
    dend_0 { pt3dadd( -27.2282, 10.6219, 13.6722, 0.22 ) }
    dend_0 { pt3dadd( -27.6964, 10.5669, 13.6643, 0.37 ) }
    dend_0 { pt3dadd( -27.8992, 10.5494, 13.6664, 0.88 ) }
    dend_0 { pt3dadd( -28.6564, 10.4998, 13.7111, 0.15 ) }
    dend_0 { pt3dadd( -29.0709, 10.4847, 13.7539, 0.15 ) }
    dend_0 { pt3dadd( -29.5232, 10.4836, 13.8282, 0.74 ) }
    dend_0 { pt3dadd( -30.8549, 10.5117, 14.1402, 0.07 ) }
    dend_0 { pt3dadd( -31.1047, 10.523, 14.2102, 0.52 ) }
    dend_0 { pt3dadd( -31.9584, 10.5898, 14.4842, 0.15 ) }
    dend_0 { pt3dadd( -32.3608, 10.6345, 14.6316, 0.96 ) }
    dend_0 { pt3dadd( -32.8632, 10.7023, 14.8323, 1.92 ) }
    dend_0 { pt3dadd( -33.9482, 10.9067, 15.2879, 0.15 ) }
    dend_0 { pt3dadd( -34.4015, 11.02, 15.4812, 0.22 ) }
    dend_0 { pt3dadd( -34.9435, 11.172, 15.6969, 0.07 ) }
    dend_0 { pt3dadd( -35.3045, 11.2945, 15.8252, 1.03 ) }
    dend_0 { pt3dadd( -35.6809, 11.4346, 15.9491, 1.77 ) }
    dend_0 { pt3dadd( -36.8245, 11.8926, 16.2884, 0.07 ) }
    dend_0 { pt3dadd( -37.2941, 12.0968, 16.4148, 0.07 ) }
    dend_0 { pt3dadd( -37.6161, 12.2364, 16.5082, 0.74 ) }
    dend_0 { pt3dadd( -38.4909, 12.6213, 16.7695, 0.07 ) }
    dend_0 { pt3dadd( -38.7606, 12.7383, 16.8512, 0.52 ) }
    dend_0 { pt3dadd( -39.4891, 13.0079, 17.0925, 0.07 ) }
    dend_0 { pt3dadd( -39.9322, 13.1283, 17.2552, 0.22 ) }
    dend_0 { pt3dadd( -40.4147, 13.2059, 17.4396, 0.15 ) }
    dend_0 { pt3dadd( -40.6125, 13.2103, 17.5152, 0.96 ) }
    dend_0 { pt3dadd( -41.0885, 13.156, 17.6938, 1.92 ) }
    dend_0 { pt3dadd( -42.0553, 12.9707, 18.0407, 0.07 ) }
    dend_0 { pt3dadd( -42.5263, 12.8457, 18.1927, 0.29 ) }
    dend_0 { pt3dadd( -43.0466, 12.7102, 18.3322, 0.07 ) }
    dend_0 { pt3dadd( -43.5607, 12.6069, 18.4418, 0.07 ) }
    dend_0 { pt3dadd( -43.7637, 12.5791, 18.4809, 0.07 ) }
    dend_0 { pt3dadd( -43.9583, 12.5618, 18.5129, 0.44 ) }
    dend_0 { pt3dadd( -44.3735, 12.5477, 18.5657, 0.74 ) }
    dend_0 { pt3dadd( -45.4, 12.5258, 18.6872, 0.07 ) }
    dend_0 { pt3dadd( -46.2142, 12.5104, 18.7871, 0.15 ) }
    dend_0 { pt3dadd( -46.7791, 12.4966, 18.8574, 0.96 ) }
    dend_0 { pt3dadd( -47.4721, 12.4506, 18.9531, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -48.0271, 12.3886, 19.0349, 0.59 ) }
    dend_0 { pt3dadd( -48.5559, 12.2961, 19.1207, 0.15 ) }
    dend_0 { pt3dadd( -48.8045, 12.234, 19.1641, 0.74 ) }
    dend_0 { pt3dadd( -49.1778, 12.1206, 19.2309, 1.18 ) }
    dend_0 { pt3dadd( -50.3466, 11.735, 19.3986, 0.15 ) }
    dend_0 { pt3dadd( -50.7345, 11.6081, 19.4443, 0.81 ) }
    dend_0 { pt3dadd( -51.3236, 11.417, 19.4959, 0.15 ) }
    dend_0 { pt3dadd( -51.6707, 11.3057, 19.5181, 0.22 ) }
    dend_0 { pt3dadd( -52.5687, 11.0179, 19.5576, 0.07 ) }
    dend_0 { pt3dadd( -53.1267, 10.8384, 19.5727, 1.03 ) }
    dend_0 { pt3dadd( -53.5192, 10.7185, 19.5752, 1.84 ) }
    dend_0 { pt3dadd( -54.8292, 10.3648, 19.5837, 0.07 ) }
    dend_0 { pt3dadd( -55.0929, 10.3077, 19.5858, 0.22 ) }
    dend_0 { pt3dadd( -56.3372, 10.1076, 19.6142, 0.07 ) }
    dend_0 { pt3dadd( -56.498, 10.088, 19.6214, 0.66 ) }
    dend_0 { pt3dadd( -56.8549, 10.0535, 19.6561, 1.25 ) }
    dend_0 { pt3dadd( -57.4569, 10.0097, 19.7245, 0.15 ) }
    dend_0 { pt3dadd( -57.9439, 9.99832, 19.7882, 0.74 ) }
    dend_0 { pt3dadd( -58.7378, 9.97832, 19.9216, 0.07 ) }
    dend_0 { pt3dadd( -59.2684, 9.96362, 20.0297, 0.07 ) }
    dend_0 { pt3dadd( -59.8109, 9.94042, 20.1492, 0.07 ) }
    dend_0 { pt3dadd( -59.9181, 9.93752, 20.1772, 0.07 ) }
    dend_0 { pt3dadd( -60.3564, 9.94152, 20.3076, 0.74 ) }
    dend_0 { pt3dadd( -61.1914, 9.97532, 20.6089, 0.07 ) }
    dend_0 { pt3dadd( -61.4232, 9.99932, 20.7059, 1.11 ) }
    dend_0 { pt3dadd( -61.9115, 10.0675, 20.9351, 1.62 ) }
    dend_0 { pt3dadd( -62.7858, 10.1497, 21.3906, 0.07 ) }
    dend_0 { pt3dadd( -63.2371, 10.174, 21.6407, 0.81 ) }
    dend_0 { pt3dadd( -63.9474, 10.1816, 22.0519, 0.15 ) }
    dend_0 { pt3dadd( -64.5176, 10.1572, 22.405, 0.15 ) }
    dend_0 { pt3dadd( -65.1078, 10.0967, 22.7868, 1.11 ) }
    dend_0 { pt3dadd( -66.4234, 9.87452, 23.6616, 0.15 ) }
    dend_0 { pt3dadd( -66.7243, 9.80542, 23.8606, 1.03 ) }
    dend_0 { pt3dadd( -67.2729, 9.66182, 24.2199, 1.84 ) }
    dend_0 { pt3dadd( -68.2131, 9.38686, 24.8071, 0.22 ) }
    dend_0 { pt3dadd( -68.3817, 9.33236, 24.9132, 0.22 ) }
    dend_0 { pt3dadd( -68.7242, 9.22044, 25.1307, 0.07 ) }
    dend_0 { pt3dadd( -68.9745, 9.14118, 25.2948, 0.59 ) }
    dend_0 { pt3dadd( -69.4944, 8.97272, 25.6536, 0.07 ) }
    dend_0 { pt3dadd( -69.8329, 8.85517, 25.8933, 0.29 ) }
    dend_0 { pt3dadd( -70.1707, 8.71901, 26.1348, 0.07 ) }
    dend_0 { pt3dadd( -70.5554, 8.54134, 26.4158, 0.37 ) }
    dend_0 { pt3dadd( -71.0985, 8.2623, 26.8181, 0.07 ) }
    dend_0 { pt3dadd( -71.4884, 8.03669, 27.1113, 0.66 ) }
    dend_0 { pt3dadd( -71.9149, 7.72143, 27.4218, 0.07 ) }
    dend_0 { pt3dadd( -72.2976, 7.38394, 27.6934, 0.96 ) }
    dend_0 { pt3dadd( -72.9418, 6.69408, 28.1325, 0.07 ) }
    dend_0 { pt3dadd( -73.2797, 6.22765, 28.3477, 0.07 ) }
    dend_0 { pt3dadd( -73.4929, 5.83743, 28.4688, 1.03 ) }
    dend_0 { pt3dadd( -74.0124, 4.4486, 28.7512, 0.15 ) }
    dend_0 { pt3dadd( -74.1351, 3.99505, 28.8078, 0.15 ) }
    dend_0 { pt3dadd( -74.2503, 3.40689, 28.8477, 1.11 ) }
    dend_0 { pt3dadd( -74.3781, 2.43065, 28.8743, 0.15 ) }
    dend_0 { pt3dadd( -74.4619, 1.5966, 28.879, 1.84 ) }
    dend_0 { pt3dadd( -74.6076, -0.0314827, 28.8745, 0.15 ) }
    dend_0 { pt3dadd( -74.6368, -0.389363, 28.874, 0.59 ) }
    dend_0 { pt3dadd( -74.6926, -0.944164, 28.8929, 1.03 ) }
    dend_0 { pt3dadd( -74.8514, -2.15437, 29.0046, 0.15 ) }
    dend_0 { pt3dadd( -74.9165, -2.54825, 29.0846, 0.52 ) }
    dend_0 { pt3dadd( -75.0603, -3.28852, 29.3039, 0.15 ) }
    dend_0 { pt3dadd( -75.1444, -3.72121, 29.4757, 0.66 ) }
    dend_0 { pt3dadd( -75.2477, -4.38084, 29.7951, 0.15 ) }
    dend_0 { pt3dadd( -75.3179, -5.1227, 30.2074, 1.62 ) }
    dend_0 { pt3dadd( -75.3236, -6.17913, 30.8537, 0.07 ) }
    dend_0 { pt3dadd( -75.2924, -6.56861, 31.088, 0.29 ) }
    dend_0 { pt3dadd( -75.1807, -7.27984, 31.4792, 0.07 ) }
    dend_0 { pt3dadd( -75.0936, -7.66738, 31.6564, 0.96 ) }
    dend_0 { pt3dadd( -74.9414, -8.29476, 31.841, 2.21 ) }
    dend_0 { pt3dadd( -74.8072, -8.84866, 31.9328, 1.33 ) }
    dend_0 { pt3dadd( -74.6505, -9.63943, 31.9829, 0.07 ) }
    dend_0 { pt3dadd( -74.5468, -10.3536, 31.9905, 0.07 ) }
    dend_0 { pt3dadd( -74.4982, -10.9024, 31.9732, 1.03 ) }
    dend_0 { pt3dadd( -74.4109, -12.2146, 31.906, 0.07 ) }
    dend_0 { pt3dadd( -74.3975, -12.6387, 31.8789, 0.88 ) }
    dend_0 { pt3dadd( -74.3918, -13.668, 31.8081, 0.07 ) }
    dend_0 { pt3dadd( -74.3916, -14.0429, 31.78, 0.66 ) }
    dend_0 { pt3dadd( -74.3908, -14.2985, 31.7647, 1.25 ) }
    dend_0 { pt3dadd( -74.393, -15.0943, 31.7344, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.06335, 10.2596, 0.0, 0.58723 ) }
    axon_0 { pt3dadd( 5.74396, 24.801, 0.0, 0.58723 ) }
    axon_0 { pt3dadd( 9.42458, 39.3425, 0.0, 0.58723 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 81/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.362291, 20.4011, 1.38263, 0.37 ) }
    dend_38 { pt3dadd( 1.08469, 21.1386, 1.80201, 0.37 ) }
    dend_38 { pt3dadd( 1.31231, 21.3447, 1.94084, 0.37 ) }
    dend_38 { pt3dadd( 1.73731, 21.7419, 2.24336, 0.37 ) }
    dend_38 { pt3dadd( 2.24609, 22.3303, 2.68989, 0.22 ) }
    dend_38 { pt3dadd( 2.37256, 22.5533, 2.86766, 0.22 ) }
    dend_38 { pt3dadd( 2.396, 22.8165, 3.11267, 0.22 ) }
    dend_38 { pt3dadd( 2.31258, 22.9733, 3.30656, 0.22 ) }
    dend_38 { pt3dadd( 2.13133, 23.223, 3.6057, 0.22 ) }
    dend_38 { pt3dadd( 1.81179, 23.6395, 4.11356, 0.22 ) }
    dend_38 { pt3dadd( 1.6121, 23.9075, 4.44703, 0.22 ) }
    dend_38 { pt3dadd( 1.3053, 24.4025, 5.03571, 0.66 ) }
    dend_38 { pt3dadd( 1.03849, 24.9889, 5.70527, 1.03 ) }
    dend_38 { pt3dadd( 0.782949, 25.7306, 6.57313, 0.22 ) }
    dend_38 { pt3dadd( 0.655032, 26.244, 7.22233, 0.22 ) }
    dend_38 { pt3dadd( 0.609483, 26.6049, 7.73335, 0.88 ) }
    dend_38 { pt3dadd( 0.603697, 26.9753, 8.3185, 1.47 ) }
    dend_38 { pt3dadd( 0.667393, 27.5547, 9.36405, 0.15 ) }
    dend_38 { pt3dadd( 0.761799, 28.0173, 10.2167, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_38 { pt3dadd( 0.873054, 28.493, 11.0523, 0.15 ) }
    dend_38 { pt3dadd( 0.92355, 28.9555, 11.7833, 0.15 ) }
    dend_38 { pt3dadd( 0.903139, 29.4169, 12.4856, 0.15 ) }
    dend_38 { pt3dadd( 0.757777, 29.9668, 13.2917, 0.15 ) }
    dend_38 { pt3dadd( 0.322862, 30.8128, 14.3959, 0.96 ) }
    dend_38 { pt3dadd( 0.00301354, 31.2905, 14.958, 2.06 ) }
    dend_38 { pt3dadd( -0.63162, 32.0567, 15.7534, 0.22 ) }
    dend_38 { pt3dadd( -0.905152, 32.3704, 16.0437, 0.22 ) }
    dend_38 { pt3dadd( -1.18019, 32.6538, 16.3081, 0.22 ) }
    dend_38 { pt3dadd( -1.60702, 33.04, 16.732, 0.22 ) }
    dend_38 { pt3dadd( -2.07968, 33.4224, 17.304, 0.22 ) }
    dend_38 { pt3dadd( -2.37683, 33.6625, 17.7, 1.33 ) }
    dend_38 { pt3dadd( -2.77331, 34.1383, 18.4128, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.362291, 20.4011, 1.38263, 1.25 ) }
    dend_33 { pt3dadd( -0.0189181, 21.4233, 1.19118, 1.25 ) }
    dend_33 { pt3dadd( -0.4934, 22.7456, 1.04011, 0.81 ) }
    dend_33 { pt3dadd( -0.855668, 23.8752, 1.02544, 0.81 ) }
    dend_33 { pt3dadd( -1.14899, 24.965, 1.10488, 1.11 ) }
    dend_33 { pt3dadd( -1.35583, 25.9779, 1.25637, 1.4 ) }
    dend_33 { pt3dadd( -1.45663, 26.8427, 1.45008, 0.59 ) }
    dend_33 { pt3dadd( -1.43781, 27.6663, 1.7994, 0.59 ) }
    dend_33 { pt3dadd( -1.24317, 28.6336, 2.39721, 0.52 ) }
    dend_33 { pt3dadd( -1.03243, 29.2124, 2.8285, 0.59 ) }
    dend_33 { pt3dadd( -0.772695, 29.7946, 3.30303, 0.59 ) }
    dend_33 { pt3dadd( -0.433755, 30.5603, 3.94278, 0.44 ) }
    dend_33 { pt3dadd( -0.268315, 31.0344, 4.32051, 0.44 ) }
    dend_33 { pt3dadd( -0.240637, 31.3056, 4.48496, 0.44 ) }
    dend_33 { pt3dadd( -0.337839, 31.7939, 4.70882, 0.52 ) }
    dend_33 { pt3dadd( -0.629655, 32.5359, 5.03873, 0.66 ) }
    dend_33 { pt3dadd( -0.935034, 33.1485, 5.31628, 0.29 ) }
    dend_33 { pt3dadd( -1.18148, 33.5995, 5.54261, 0.29 ) }
    dend_33 { pt3dadd( -1.4612, 34.179, 5.84675, 0.37 ) }
    dend_33 { pt3dadd( -1.77376, 34.9294, 6.24185, 0.88 ) }
    dend_33 { pt3dadd( -2.07368, 35.7048, 6.64819, 1.62 ) }
    dend_33 { pt3dadd( -2.32153, 36.4205, 7.01857, 2.43 ) }
    dend_33 { pt3dadd( -2.56621, 37.231, 7.43565, 2.43 ) }
    dend_33 { pt3dadd( -2.91418, 38.5823, 8.12113, 0.22 ) }
    dend_33 { pt3dadd( -3.04896, 39.2188, 8.44238, 0.52 ) }
    dend_33 { pt3dadd( -3.15703, 39.8608, 8.74048, 0.22 ) }
    dend_33 { pt3dadd( -3.19742, 40.201, 8.87356, 0.22 ) }
    dend_33 { pt3dadd( -3.23012, 40.6368, 9.01638, 0.22 ) }
    dend_33 { pt3dadd( -3.24943, 41.1665, 9.13877, 0.22 ) }
    dend_33 { pt3dadd( -3.2593, 41.5201, 9.19815, 0.22 ) }
    dend_33 { pt3dadd( -3.26786, 41.7523, 9.22662, 0.22 ) }
    dend_33 { pt3dadd( -3.3226, 42.5803, 9.26558, 0.37 ) }
    dend_33 { pt3dadd( -3.39215, 43.2847, 9.25061, 0.37 ) }
    dend_33 { pt3dadd( -3.4746, 43.9573, 9.19661, 0.52 ) }
    dend_33 { pt3dadd( -3.55835, 44.6375, 9.11979, 0.96 ) }
    dend_33 { pt3dadd( -3.63592, 45.4511, 8.99995, 0.96 ) }
    dend_33 { pt3dadd( -3.69251, 46.6925, 8.75991, 0.44 ) }
    dend_33 { pt3dadd( -3.65486, 47.4993, 8.57158, 0.44 ) }
    dend_33 { pt3dadd( -3.58209, 48.3355, 8.34874, 1.47 ) }
    dend_33 { pt3dadd( -3.48898, 49.2075, 8.09292, 2.8 ) }
    dend_33 { pt3dadd( -3.39538, 50.0124, 7.83151, 3.61 ) }
    dend_33 { pt3dadd( -3.29195, 50.8469, 7.5271, 3.02 ) }
    dend_33 { pt3dadd( -3.02472, 52.7988, 6.73131, 0.22 ) }
    dend_33 { pt3dadd( -2.94628, 53.3948, 6.46621, 0.29 ) }
    dend_33 { pt3dadd( -2.90493, 53.719, 6.31834, 0.29 ) }
    dend_33 { pt3dadd( -2.83304, 54.3517, 6.01293, 0.22 ) }
    dend_33 { pt3dadd( -2.76447, 55.111, 5.63793, 0.52 ) }
    dend_33 { pt3dadd( -2.72347, 55.7434, 5.31665, 1.33 ) }
    dend_33 { pt3dadd( -2.67951, 56.5355, 4.85171, 2.43 ) }
    dend_33 { pt3dadd( -2.56395, 57.2674, 4.43338, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -9.46162, -18.6784, -15.0909, 0.44 ) }
    dend_27 { pt3dadd( -11.5728, -19.8663, -16.3979, 0.44 ) }
    dend_27 { pt3dadd( -11.6811, -20.3065, -16.7657, 0.44 ) }
    dend_27 { pt3dadd( -11.7496, -20.7725, -17.1702, 0.44 ) }
    dend_27 { pt3dadd( -11.863, -21.2696, -17.6185, 0.44 ) }
    dend_27 { pt3dadd( -12.0596, -21.8384, -18.1681, 0.59 ) }
    dend_27 { pt3dadd( -12.4087, -22.6025, -18.9935, 0.74 ) }
    dend_27 { pt3dadd( -12.6286, -23.1269, -19.6314, 1.11 ) }
    dend_27 { pt3dadd( -12.9369, -23.6975, -20.4431, 1.47 ) }
    dend_27 { pt3dadd( -13.3107, -24.1982, -21.3083, 1.47 ) }
    dend_27 { pt3dadd( -13.9373, -24.7692, -22.5665, 0.59 ) }
    dend_27 { pt3dadd( -14.4732, -25.0479, -23.5082, 0.52 ) }
    dend_27 { pt3dadd( -14.8882, -25.1149, -24.1572, 0.52 ) }
    dend_27 { pt3dadd( -15.3761, -25.0791, -24.8199, 0.44 ) }
    dend_27 { pt3dadd( -15.9343, -24.9583, -25.4137, 0.44 ) }
    dend_27 { pt3dadd( -16.2382, -24.8784, -25.6766, 0.44 ) }
    dend_27 { pt3dadd( -17.0137, -24.7025, -26.2061, 0.96 ) }
    dend_27 { pt3dadd( -17.7549, -24.5675, -26.6505, 0.96 ) }
    dend_27 { pt3dadd( -18.6344, -24.4583, -27.1292, 1.4 ) }
    dend_27 { pt3dadd( -19.7702, -24.3802, -27.7063, 2.36 ) }
    dend_27 { pt3dadd( -20.702, -24.3633, -28.1557, 3.32 ) }
    dend_27 { pt3dadd( -21.7937, -24.3637, -28.6988, 3.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -9.46162, -18.6784, -15.0909, 0.29 ) }
    dend_26 { pt3dadd( -8.97604, -20.4753, -16.1122, 0.29 ) }
    dend_26 { pt3dadd( -8.77651, -21.0796, -16.484, 0.29 ) }
    dend_26 { pt3dadd( -8.51804, -21.8684, -16.9927, 0.29 ) }
    dend_26 { pt3dadd( -8.32688, -22.525, -17.45, 0.81 ) }
    dend_26 { pt3dadd( -8.1453, -23.2297, -17.9739, 1.11 ) }
    dend_26 { pt3dadd( -7.93821, -24.2431, -18.7953, 0.22 ) }
    dend_26 { pt3dadd( -7.77947, -24.9618, -19.5148, 0.22 ) }
    dend_26 { pt3dadd( -7.75684, -25.3765, -19.9826, 0.22 ) }
    dend_26 { pt3dadd( -7.81291, -25.9463, -20.6833, 0.22 ) }
    dend_26 { pt3dadd( -7.81334, -26.268, -20.9943, 0.37 ) }
    dend_26 { pt3dadd( -7.76803, -26.8898, -21.5289, 0.37 ) }
    dend_26 { pt3dadd( -7.69134, -27.3973, -21.9125, 0.81 ) }
    dend_26 { pt3dadd( -7.53112, -28.135, -22.3956, 1.7 ) }
    dend_26 { pt3dadd( -7.29679, -29.1714, -23.0393, 2.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -6.75297, -31.4355, -24.365, 0.29 ) }
    dend_26 { pt3dadd( -6.54978, -32.2077, -24.7803, 0.96 ) }
    dend_26 { pt3dadd( -6.39688, -32.7262, -25.0354, 0.96 ) }
    dend_26 { pt3dadd( -5.99361, -33.9253, -25.5961, 0.15 ) }
    dend_26 { pt3dadd( -5.68367, -34.6855, -25.9131, 0.15 ) }
    dend_26 { pt3dadd( -5.45091, -35.1952, -26.1079, 0.59 ) }
    dend_26 { pt3dadd( -4.92385, -36.164, -26.4494, 0.29 ) }
    dend_26 { pt3dadd( -4.54781, -36.7792, -26.6369, 1.4 ) }
    dend_26 { pt3dadd( -3.94748, -37.6962, -26.8907, 2.73 ) }
    dend_26 { pt3dadd( -2.47282, -39.8126, -27.4054, 0.15 ) }
    dend_26 { pt3dadd( -2.24175, -40.1357, -27.4783, 0.74 ) }
    dend_26 { pt3dadd( -1.82282, -40.7197, -27.6266, 0.74 ) }
    dend_26 { pt3dadd( -1.16172, -41.6072, -27.887, 0.15 ) }
    dend_26 { pt3dadd( -0.559416, -42.4044, -28.1381, 0.15 ) }
    dend_26 { pt3dadd( -0.0498389, -43.1, -28.368, 0.15 ) }
    dend_26 { pt3dadd( 0.385047, -43.7196, -28.6088, 1.25 ) }
    dend_26 { pt3dadd( 0.97675, -44.6537, -29.0212, 0.22 ) }
    dend_26 { pt3dadd( 1.30424, -45.303, -29.3409, 0.22 ) }
    dend_26 { pt3dadd( 1.41843, -45.6477, -29.5134, 0.22 ) }
    dend_26 { pt3dadd( 1.50305, -46.1639, -29.7362, 0.22 ) }
    dend_26 { pt3dadd( 1.57294, -47.1271, -30.0939, 0.44 ) }
    dend_26 { pt3dadd( 1.59371, -48.0477, -30.3933, 1.62 ) }
    dend_26 { pt3dadd( 1.6054, -49.0395, -30.6933, 3.02 ) }
    dend_26 { pt3dadd( 1.63782, -50.2373, -31.0461, 3.02 ) }
    dend_26 { pt3dadd( 1.77221, -52.9055, -31.8506, 0.29 ) }
    dend_26 { pt3dadd( 1.85139, -53.881, -32.1431, 0.81 ) }
    dend_26 { pt3dadd( 1.94998, -54.7267, -32.386, 1.03 ) }
    dend_26 { pt3dadd( 2.08206, -55.6008, -32.6389, 0.37 ) }
    dend_26 { pt3dadd( 2.2068, -56.2765, -32.8186, 1.18 ) }
    dend_26 { pt3dadd( 2.51836, -57.6313, -33.1656, 0.22 ) }
    dend_26 { pt3dadd( 2.6788, -58.1417, -33.2916, 0.74 ) }
    dend_26 { pt3dadd( 2.84449, -58.556, -33.3824, 0.74 ) }
    dend_26 { pt3dadd( 3.0602, -58.9943, -33.4585, 0.15 ) }
    dend_26 { pt3dadd( 3.69366, -60.1817, -33.5852, 0.44 ) }
    dend_26 { pt3dadd( 3.87952, -60.4739, -33.6061, 0.44 ) }
    dend_26 { pt3dadd( 4.51446, -61.3581, -33.6591, 0.22 ) }
    dend_26 { pt3dadd( 4.88629, -61.8763, -33.7084, 1.11 ) }
    dend_26 { pt3dadd( 5.16788, -62.3202, -33.7602, 1.62 ) }
    dend_26 { pt3dadd( 5.59324, -63.068, -33.8603, 1.62 ) }
    dend_26 { pt3dadd( 6.41276, -64.8056, -34.1598, 0.22 ) }
    dend_26 { pt3dadd( 6.72387, -65.7052, -34.2995, 0.96 ) }
    dend_26 { pt3dadd( 6.89418, -66.6661, -34.4206, 1.18 ) }
    dend_26 { pt3dadd( 6.95207, -68.4079, -34.623, 0.15 ) }
    dend_26 { pt3dadd( 6.93147, -68.9985, -34.6908, 0.22 ) }
    dend_26 { pt3dadd( 6.72764, -70.3853, -34.8509, 0.07 ) }
    dend_26 { pt3dadd( 6.49911, -71.0168, -34.9223, 0.22 ) }
    dend_26 { pt3dadd( 5.82148, -72.2968, -35.0477, 0.07 ) }
    dend_26 { pt3dadd( 5.49168, -72.7407, -35.0837, 0.15 ) }
    dend_26 { pt3dadd( 7.18556, -82.6265, -38.8846, 0.15 ) }
    dend_26 { pt3dadd( 7.45952, -92.8694, -42.0558, 0.15 ) }
    dend_26 { pt3dadd( 10.0411, -102.722, -45.4199, 0.15 ) }
    dend_26 { pt3dadd( 13.2516, -112.054, -49.6204, 0.15 ) }
    dend_26 { pt3dadd( 16.1814, -120.954, -54.8401, 0.15 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.00768, -37.1046, 6.96716, 1.99 ) }
    dend_14 { pt3dadd( -3.3587, -38.7063, 6.88929, 1.99 ) }
    dend_14 { pt3dadd( -3.76246, -40.9228, 6.80642, 0.59 ) }
    dend_14 { pt3dadd( -3.95048, -42.1864, 6.77081, 0.59 ) }
    dend_14 { pt3dadd( -4.12155, -43.6998, 6.75813, 0.59 ) }
    dend_14 { pt3dadd( -4.17398, -44.4403, 6.76482, 1.11 ) }
    dend_14 { pt3dadd( -4.2123, -45.7854, 6.81588, 2.58 ) }
    dend_14 { pt3dadd( -4.16206, -46.4436, 6.86764, 2.88 ) }
    dend_14 { pt3dadd( -4.0757, -47.011, 6.93754, 2.65 ) }
    dend_14 { pt3dadd( -3.95019, -47.8801, 7.07781, 1.55 ) }
    dend_14 { pt3dadd( -3.79575, -49.1023, 7.3184, 0.74 ) }
    dend_14 { pt3dadd( -3.69551, -50.2689, 7.55484, 0.44 ) }
    dend_14 { pt3dadd( -3.66541, -51.2919, 7.75949, 0.29 ) }
    dend_14 { pt3dadd( -3.69132, -52.0854, 7.91742, 0.29 ) }
    dend_14 { pt3dadd( -3.78182, -53.0991, 8.12741, 0.29 ) }
    dend_14 { pt3dadd( -3.8107, -53.42, 8.19678, 0.29 ) }
    dend_14 { pt3dadd( -3.87175, -54.0126, 8.32787, 0.44 ) }
    dend_14 { pt3dadd( -3.94266, -54.5996, 8.44644, 1.11 ) }
    dend_14 { pt3dadd( -4.02555, -55.263, 8.5889, 2.36 ) }
    dend_14 { pt3dadd( -4.16606, -56.6421, 8.88858, 2.73 ) }
    dend_14 { pt3dadd( -4.33689, -59.2091, 9.46252, 0.44 ) }
    dend_14 { pt3dadd( -4.36484, -59.7145, 9.58737, 0.44 ) }
    dend_14 { pt3dadd( -4.41748, -60.689, 9.8473, 0.59 ) }
    dend_14 { pt3dadd( -4.4623, -61.6262, 10.1152, 0.29 ) }
    dend_14 { pt3dadd( -4.48682, -62.2122, 10.2874, 0.29 ) }
    dend_14 { pt3dadd( -4.47485, -62.7576, 10.4474, 0.29 ) }
    dend_14 { pt3dadd( -4.42305, -63.3214, 10.6455, 0.29 ) }
    dend_14 { pt3dadd( -4.34303, -63.7554, 10.8262, 0.88 ) }
    dend_14 { pt3dadd( -4.17887, -64.3609, 11.1132, 1.84 ) }
    dend_14 { pt3dadd( -3.98637, -64.9366, 11.4045, 2.14 ) }
    dend_14 { pt3dadd( -3.41221, -66.5791, 12.2879, 0.44 ) }
    dend_14 { pt3dadd( -3.16472, -67.3147, 12.6912, 0.66 ) }
    dend_14 { pt3dadd( -2.87774, -68.1865, 13.2025, 0.29 ) }
    dend_14 { pt3dadd( -2.77503, -68.499, 13.412, 0.29 ) }
    dend_14 { pt3dadd( -2.68301, -68.8226, 13.6667, 0.29 ) }
    dend_14 { pt3dadd( -2.65219, -69.0295, 13.8612, 0.29 ) }
    dend_14 { pt3dadd( -2.71264, -69.2523, 14.0618, 0.29 ) }
    dend_14 { pt3dadd( -2.88921, -69.7444, 14.2765, 0.29 ) }
    dend_14 { pt3dadd( -3.00963, -70.12, 14.3697, 0.29 ) }
    dend_14 { pt3dadd( -3.1305, -70.5669, 14.4562, 0.29 ) }
    dend_14 { pt3dadd( -3.30543, -71.2806, 14.5725, 1.18 ) }
    dend_14 { pt3dadd( -3.46566, -72.0114, 14.7072, 2.43 ) }
    dend_14 { pt3dadd( -3.6233, -72.8577, 14.8866, 2.88 ) }
    dend_14 { pt3dadd( -3.81962, -74.165, 15.2054, 1.55 ) }
    dend_14 { pt3dadd( -4.00123, -75.8232, 15.6963, 0.52 ) }
    dend_14 { pt3dadd( -4.08177, -76.8706, 16.0714, 0.29 ) }
    dend_14 { pt3dadd( -4.13399, -77.7056, 16.4172, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -4.16281, -78.3845, 16.7311, 0.66 ) }
    dend_14 { pt3dadd( -4.17516, -78.9349, 17.0035, 0.96 ) }
    dend_14 { pt3dadd( -4.16476, -79.6584, 17.3363, 0.22 ) }
    dend_14 { pt3dadd( -4.13442, -80.3427, 17.5652, 0.22 ) }
    dend_14 { pt3dadd( -4.09254, -81.0792, 17.696, 0.29 ) }
    dend_14 { pt3dadd( -4.04046, -81.7536, 17.7433, 0.59 ) }
    dend_14 { pt3dadd( -3.95931, -82.8285, 17.7589, 1.33 ) }
    dend_14 { pt3dadd( -3.87048, -84.0394, 17.7387, 2.21 ) }
    dend_14 { pt3dadd( -3.79382, -85.0047, 17.7069, 3.24 ) }
    dend_14 { pt3dadd( -3.62635, -86.7, 17.6474, 1.77 ) }
    dend_14 { pt3dadd( -3.4708, -88.1155, 17.6137, 0.44 ) }
    dend_14 { pt3dadd( -3.36204, -89.1159, 17.6012, 0.37 ) }
    dend_14 { pt3dadd( -3.25331, -90.2482, 17.6015, 0.37 ) }
    dend_14 { pt3dadd( -3.1924, -90.9851, 17.615, 0.88 ) }
    dend_14 { pt3dadd( -3.17303, -91.3211, 17.622, 1.77 ) }
    dend_14 { pt3dadd( -3.15524, -92.3997, 17.6313, 3.1 ) }
    dend_14 { pt3dadd( -3.2375, -94.0743, 17.6163, 1.33 ) }
    dend_14 { pt3dadd( -3.37998, -95.224, 17.5838, 0.74 ) }
    dend_14 { pt3dadd( -3.65993, -96.5708, 17.517, 0.22 ) }
    dend_14 { pt3dadd( -3.81395, -97.1211, 17.4797, 0.22 ) }
    dend_14 { pt3dadd( -3.94684, -97.5181, 17.4485, 0.52 ) }
    dend_14 { pt3dadd( -4.33314, -98.4652, 17.3611, 0.81 ) }
    dend_14 { pt3dadd( -4.82748, -99.4908, 17.29, 0.29 ) }
    dend_14 { pt3dadd( -4.9794, -99.8011, 17.2767, 0.37 ) }
    dend_14 { pt3dadd( -5.30343, -100.534, 17.2649, 0.37 ) }
    dend_14 { pt3dadd( -5.62803, -101.411, 17.3389, 0.44 ) }
    dend_14 { pt3dadd( -5.94114, -102.416, 17.5148, 0.81 ) }
    dend_14 { pt3dadd( -6.23584, -103.608, 17.8203, 0.81 ) }
    dend_14 { pt3dadd( -6.41996, -104.538, 18.1116, 0.81 ) }
    dend_14 { pt3dadd( -6.65306, -105.727, 18.5187, 0.37 ) }
    dend_14 { pt3dadd( -6.95259, -107.159, 19.074, 0.37 ) }
    dend_14 { pt3dadd( -7.10459, -107.882, 19.3981, 1.18 ) }
    dend_14 { pt3dadd( -7.22712, -108.58, 19.7666, 2.8 ) }
    dend_14 { pt3dadd( -7.29707, -109.171, 20.1249, 3.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.00768, -37.1046, 6.96716, 0.66 ) }
    dend_11 { pt3dadd( -1.34814, -38.4835, 7.50531, 0.66 ) }
    dend_11 { pt3dadd( -0.283377, -39.4991, 7.85322, 0.44 ) }
    dend_11 { pt3dadd( 0.442657, -40.3065, 8.09106, 0.88 ) }
    dend_11 { pt3dadd( 0.92155, -40.9302, 8.24953, 0.44 ) }
    dend_11 { pt3dadd( 1.29805, -41.5086, 8.36701, 0.22 ) }
    dend_11 { pt3dadd( 1.64639, -42.1561, 8.47665, 0.22 ) }
    dend_11 { pt3dadd( 1.82159, -42.8339, 8.52449, 0.22 ) }
    dend_11 { pt3dadd( 1.91328, -43.4617, 8.55787, 0.22 ) }
    dend_11 { pt3dadd( 1.94521, -44.0263, 8.60625, 0.59 ) }
    dend_11 { pt3dadd( 1.96236, -44.8511, 8.72819, 1.7 ) }
    dend_11 { pt3dadd( 1.96003, -45.9368, 8.93893, 1.47 ) }
    dend_11 { pt3dadd( 1.95504, -47.8147, 9.37287, 0.44 ) }
    dend_11 { pt3dadd( 1.98283, -48.8221, 9.62488, 0.29 ) }
    dend_11 { pt3dadd( 2.00482, -49.4631, 9.7911, 0.22 ) }
    dend_11 { pt3dadd( 2.03925, -50.1853, 9.96606, 0.22 ) }
    dend_11 { pt3dadd( 2.07406, -50.6961, 10.0885, 0.96 ) }
    dend_11 { pt3dadd( 2.16768, -51.683, 10.2942, 2.51 ) }
    dend_11 { pt3dadd( 2.31629, -52.784, 10.5083, 3.39 ) }
    dend_11 { pt3dadd( 2.497, -53.8266, 10.6784, 3.1 ) }
    dend_11 { pt3dadd( 2.82014, -55.2253, 10.9025, 1.03 ) }
    dend_11 { pt3dadd( 3.17796, -56.5661, 11.1206, 0.29 ) }
    dend_11 { pt3dadd( 3.46933, -57.5223, 11.3012, 0.22 ) }
    dend_11 { pt3dadd( 3.67697, -58.1424, 11.4361, 0.22 ) }
    dend_11 { pt3dadd( 3.79811, -58.4961, 11.5262, 0.22 ) }
    dend_11 { pt3dadd( 3.98447, -59.0122, 11.6681, 0.29 ) }
    dend_11 { pt3dadd( 4.18293, -59.5864, 11.8166, 0.22 ) }
    dend_11 { pt3dadd( 4.36453, -60.2787, 11.9064, 0.29 ) }
    dend_11 { pt3dadd( 4.44304, -60.6416, 11.9254, 0.81 ) }
    dend_11 { pt3dadd( 4.64818, -61.7126, 11.9125, 1.55 ) }
    dend_11 { pt3dadd( 4.80423, -62.5885, 11.8672, 2.29 ) }
    dend_11 { pt3dadd( 4.94326, -63.3604, 11.806, 2.06 ) }
    dend_11 { pt3dadd( 5.28008, -64.9836, 11.6727, 0.22 ) }
    dend_11 { pt3dadd( 5.42449, -65.5252, 11.6439, 0.22 ) }
    dend_11 { pt3dadd( 5.55918, -65.9185, 11.6448, 0.22 ) }
    dend_11 { pt3dadd( 5.63409, -66.0933, 11.6584, 0.22 ) }
    dend_11 { pt3dadd( 5.90266, -66.6333, 11.7495, 0.81 ) }
    dend_11 { pt3dadd( 6.32843, -67.4353, 11.9327, 1.84 ) }
    dend_11 { pt3dadd( 6.74884, -68.2514, 12.1729, 2.8 ) }
    dend_11 { pt3dadd( 7.1757, -69.2014, 12.501, 1.77 ) }
    dend_11 { pt3dadd( 7.49835, -70.0781, 12.8194, 0.81 ) }
    dend_11 { pt3dadd( 7.85536, -71.208, 13.244, 0.22 ) }
    dend_11 { pt3dadd( 8.04151, -71.8605, 13.4857, 0.29 ) }
    dend_11 { pt3dadd( 8.19734, -72.5047, 13.7262, 0.29 ) }
    dend_11 { pt3dadd( 8.38755, -73.6443, 14.1688, 0.59 ) }
    dend_11 { pt3dadd( 8.48436, -74.6876, 14.6107, 1.47 ) }
    dend_11 { pt3dadd( 8.4964, -75.2164, 14.8631, 1.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 35.2848, 16.4622, 38.6268, 0.22 ) }
    dend_3 { pt3dadd( 36.185, 16.9055, 39.9743, 0.22 ) }
    dend_3 { pt3dadd( 36.7923, 17.2046, 40.8832, 0.22 ) }
    dend_3 { pt3dadd( 37.642, 17.623, 42.155, 1.47 ) }
    dend_3 { pt3dadd( 37.9735, 17.7862, 42.6511, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 35.2848, 16.4622, 38.6268, 0.29 ) }
    dend_2 { pt3dadd( 36.4797, 15.5199, 39.9297, 0.29 ) }
    dend_2 { pt3dadd( 37.1721, 14.8637, 40.7092, 0.15 ) }
    dend_2 { pt3dadd( 37.4572, 14.5906, 41.0075, 0.22 ) }
    dend_2 { pt3dadd( 38.0351, 14.0415, 41.5725, 0.22 ) }
    dend_2 { pt3dadd( 38.7177, 13.3687, 42.2452, 0.22 ) }
    dend_2 { pt3dadd( 39.2551, 12.8477, 42.7429, 0.22 ) }
    dend_2 { pt3dadd( 39.9904, 12.1004, 43.3899, 0.22 ) }
    dend_2 { pt3dadd( 40.7225, 11.3479, 43.9996, 0.22 ) }
    dend_2 { pt3dadd( 41.4993, 10.5974, 44.5866, 0.22 ) }
    dend_2 { pt3dadd( 42.4906, 9.74372, 45.2129, 0.15 ) }
    dend_2 { pt3dadd( 43.4226, 9.02427, 45.6936, 0.15 ) }
    dend_2 { pt3dadd( 43.8922, 8.69595, 45.9022, 0.15 ) }
    dend_2 { pt3dadd( 44.4646, 8.2915, 46.1361, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 45.0397, 7.87123, 46.3534, 1.25 ) }
    dend_2 { pt3dadd( 45.99, 7.18303, 46.6676, 0.15 ) }
    dend_2 { pt3dadd( 46.4745, 6.84, 46.8125, 0.15 ) }
    dend_2 { pt3dadd( 47.2767, 6.27642, 47.0342, 0.88 ) }
    dend_2 { pt3dadd( 48.3871, 5.50807, 47.3181, 0.15 ) }
    dend_2 { pt3dadd( 48.8532, 5.19472, 47.4262, 0.44 ) }
    dend_2 { pt3dadd( 49.4618, 4.78929, 47.5759, 1.18 ) }
    dend_2 { pt3dadd( 50.7065, 3.96654, 47.9119, 0.07 ) }
    dend_2 { pt3dadd( 51.6282, 3.39072, 48.1706, 0.07 ) }
    dend_2 { pt3dadd( 52.3478, 2.94714, 48.403, 1.47 ) }
    dend_2 { pt3dadd( 52.7649, 2.70561, 48.5556, 1.47 ) }
    dend_2 { pt3dadd( 54.1132, 1.91239, 49.1019, 0.15 ) }
    dend_2 { pt3dadd( 54.6869, 1.55423, 49.3804, 1.11 ) }
    dend_2 { pt3dadd( 55.1466, 1.24264, 49.6438, 1.47 ) }
    dend_2 { pt3dadd( 56.529, 0.227427, 50.5533, 0.07 ) }
    dend_2 { pt3dadd( 57.2428, -0.369946, 51.0818, 0.15 ) }
    dend_2 { pt3dadd( 57.7391, -0.836974, 51.4889, 0.22 ) }
    dend_2 { pt3dadd( 58.4013, -1.53054, 52.1168, 0.07 ) }
    dend_2 { pt3dadd( 58.7789, -1.94303, 52.5124, 1.18 ) }
    dend_2 { pt3dadd( 59.2181, -2.41522, 52.9914, 1.77 ) }
    dend_2 { pt3dadd( 60.2285, -3.47866, 54.0983, 0.07 ) }
    dend_2 { pt3dadd( 60.8289, -3.99593, 54.6558, 0.15 ) }
    dend_2 { pt3dadd( 61.9752, -4.73993, 55.5532, 0.74 ) }
    dend_2 { pt3dadd( 62.9216, -5.16809, 56.1586, 0.15 ) }
    dend_2 { pt3dadd( 63.5473, -5.33552, 56.4883, 0.81 ) }
    dend_2 { pt3dadd( 64.2137, -5.41455, 56.7792, 2.14 ) }
    dend_2 { pt3dadd( 66.6988, -5.36735, 57.646, 0.15 ) }
    dend_2 { pt3dadd( 67.5853, -5.25521, 57.918, 0.15 ) }
    dend_2 { pt3dadd( 68.3033, -5.09919, 58.1239, 0.37 ) }
    dend_2 { pt3dadd( 69.6191, -4.711, 58.5493, 0.07 ) }
    dend_2 { pt3dadd( 70.1409, -4.51608, 58.7648, 0.88 ) }
    dend_2 { pt3dadd( 70.6068, -4.29105, 59.0021, 1.25 ) }
    dend_2 { pt3dadd( 71.7911, -3.50215, 59.8319, 0.07 ) }
    dend_2 { pt3dadd( 72.3575, -3.03685, 60.3329, 1.11 ) }
    dend_2 { pt3dadd( 72.8265, -2.56611, 60.8675, 1.55 ) }
    dend_2 { pt3dadd( 73.4185, -1.91699, 61.732, 0.07 ) }
    dend_2 { pt3dadd( 73.6862, -1.62075, 62.1893, 0.74 ) }
    dend_2 { pt3dadd( 74.1575, -1.07415, 63.1302, 0.15 ) }
    dend_2 { pt3dadd( 74.5207, -0.62334, 63.9593, 0.81 ) }
    dend_2 { pt3dadd( 74.9064, -0.148864, 64.8855, 1.25 ) }
    dend_2 { pt3dadd( 75.5252, 0.566383, 66.4113, 0.22 ) }
    dend_2 { pt3dadd( 75.7878, 0.841884, 67.084, 0.22 ) }
    dend_2 { pt3dadd( 75.9293, 0.954574, 67.4347, 0.22 ) }
    dend_2 { pt3dadd( 76.2626, 1.12118, 68.1873, 0.15 ) }
    dend_2 { pt3dadd( 76.594, 1.21765, 68.8977, 0.81 ) }
    dend_2 { pt3dadd( 77.3502, 1.26763, 70.3492, 0.22 ) }
    dend_2 { pt3dadd( 77.9787, 1.23877, 71.4376, 0.22 ) }
    dend_2 { pt3dadd( 78.5412, 1.13543, 72.306, 1.62 ) }
    dend_2 { pt3dadd( 79.1781, 0.950284, 73.2134, 0.15 ) }
    dend_2 { pt3dadd( 79.6543, 0.778404, 73.8367, 0.96 ) }
    dend_2 { pt3dadd( 80.8743, 0.313536, 75.2032, 0.07 ) }
    dend_2 { pt3dadd( 81.6872, 0.0137619, 76.0069, 0.59 ) }
    dend_2 { pt3dadd( 82.7906, -0.335879, 77.0378, 0.07 ) }
    dend_2 { pt3dadd( 83.5937, -0.545842, 77.7819, 0.07 ) }
    dend_2 { pt3dadd( 84.1047, -0.660096, 78.2516, 1.25 ) }
    dend_2 { pt3dadd( 85.7056, -0.916051, 79.6574, 0.07 ) }
    dend_2 { pt3dadd( 86.5534, -0.98858, 80.3367, 0.81 ) }
    dend_2 { pt3dadd( 87.9233, -1.00324, 81.3704, 0.07 ) }
    dend_2 { pt3dadd( 88.3533, -0.961023, 81.6858, 0.07 ) }
    dend_2 { pt3dadd( 88.8892, -0.857367, 82.074, 1.03 ) }
    dend_2 { pt3dadd( 90.0234, -0.575868, 82.9026, 0.07 ) }
    dend_2 { pt3dadd( 91.0831, -0.207146, 83.674, 0.07 ) }
    dend_2 { pt3dadd( 92.2378, 0.252796, 84.4604, 0.07 ) }
    dend_2 { pt3dadd( 92.9658, 0.597855, 84.9144, 0.66 ) }
    dend_2 { pt3dadd( 93.4739, 0.855944, 85.2383, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 65/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.42458, 39.3425, 0.0, 0.181549 ) }
    axon_1 { pt3dadd( 13.1052, 53.8839, 0.0, 0.181549 ) }
    axon_1 { pt3dadd( 16.7858, 68.4253, 0.0, 0.181549 ) }
    // Section: dend_56, id: dend_56, parent: dend_38 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -2.77331, 34.1383, 18.4128, 0.22 ) }
    dend_56 { pt3dadd( -3.98844, 34.6524, 19.4191, 0.22 ) }
    dend_56 { pt3dadd( -4.43794, 34.9321, 19.8076, 0.22 ) }
    dend_56 { pt3dadd( -4.77507, 35.2499, 20.1881, 0.15 ) }
    dend_56 { pt3dadd( -5.0429, 35.573, 20.5767, 0.15 ) }
    dend_56 { pt3dadd( -5.22309, 35.8204, 20.8478, 0.15 ) }
    dend_56 { pt3dadd( -5.50177, 36.3263, 21.3573, 0.66 ) }
    dend_56 { pt3dadd( -5.70992, 36.788, 21.7943, 0.22 ) }
    dend_56 { pt3dadd( -6.04857, 37.5011, 22.4852, 0.22 ) }
    dend_56 { pt3dadd( -6.31611, 38.0557, 23.035, 1.62 ) }
    dend_56 { pt3dadd( -6.63764, 38.7273, 23.7345, 3.1 ) }
    dend_56 { pt3dadd( -7.50868, 40.41, 25.595, 0.29 ) }
    dend_56 { pt3dadd( -7.87843, 41.0461, 26.3487, 0.22 ) }
    dend_56 { pt3dadd( -8.05939, 41.3262, 26.6827, 0.22 ) }
    dend_56 { pt3dadd( -8.10931, 41.402, 26.7689, 0.22 ) }
    dend_56 { pt3dadd( -8.32559, 41.7291, 27.1443, 0.22 ) }
    dend_56 { pt3dadd( -8.56234, 42.065, 27.5726, 0.22 ) }
    dend_56 { pt3dadd( -8.94496, 42.4636, 28.1417, 0.22 ) }
    dend_56 { pt3dadd( -9.32673, 42.9262, 28.7434, 0.88 ) }
    dend_56 { pt3dadd( -9.53218, 43.1956, 29.058, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.77331, 34.1383, 18.4128, 0.22 ) }
    dend_39 { pt3dadd( -1.05642, 34.49, 18.9458, 0.22 ) }
    dend_39 { pt3dadd( -0.261123, 34.6529, 19.1926, 0.37 ) }
    dend_39 { pt3dadd( 0.42979, 34.7944, 19.4071, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -2.56395, 57.2674, 4.43338, 0.15 ) }
    dend_35 { pt3dadd( -3.31513, 59.2017, 4.2371, 0.15 ) }
    dend_35 { pt3dadd( -3.71582, 60.225, 4.18457, 0.81 ) }
    dend_35 { pt3dadd( -4.0236, 61.0092, 4.11056, 1.18 ) }
    dend_35 { pt3dadd( -4.66521, 62.6335, 3.92512, 0.22 ) }
    dend_35 { pt3dadd( -4.99182, 63.516, 3.81979, 0.81 ) }
    dend_35 { pt3dadd( -5.18618, 64.084, 3.76862, 0.81 ) }
    dend_35 { pt3dadd( -5.53955, 65.33, 3.77023, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( -5.84676, 66.6645, 3.81089, 0.07 ) }
    dend_35 { pt3dadd( -5.9729, 67.369, 3.8357, 0.96 ) }
    dend_35 { pt3dadd( -6.13041, 68.4681, 3.86118, 1.92 ) }
    dend_35 { pt3dadd( -6.35867, 69.9489, 3.91254, 0.22 ) }
    dend_35 { pt3dadd( -6.46819, 70.7408, 3.97129, 0.22 ) }
    dend_35 { pt3dadd( -6.55673, 71.4583, 4.05235, 0.22 ) }
    dend_35 { pt3dadd( -6.63907, 72.1337, 4.16486, 0.81 ) }
    dend_35 { pt3dadd( -6.75072, 72.9436, 4.30202, 1.11 ) }
    dend_35 { pt3dadd( -7.05928, 74.7093, 4.57326, 0.15 ) }
    dend_35 { pt3dadd( -7.30727, 76.0136, 4.72338, 0.15 ) }
    dend_35 { pt3dadd( -7.41493, 76.5695, 4.77559, 0.74 ) }
    dend_35 { pt3dadd( -7.59655, 77.7174, 4.87514, 1.92 ) }
    dend_35 { pt3dadd( -7.65773, 78.2533, 4.91506, 2.88 ) }
    dend_35 { pt3dadd( -7.74695, 79.4255, 5.01727, 1.84 ) }
    dend_35 { pt3dadd( -7.81562, 81.26, 5.20684, 0.22 ) }
    dend_35 { pt3dadd( -7.84427, 82.4535, 5.337, 0.59 ) }
    dend_35 { pt3dadd( -7.84265, 83.2629, 5.42485, 0.59 ) }
    dend_35 { pt3dadd( -7.81197, 84.3039, 5.5195, 0.22 ) }
    dend_35 { pt3dadd( -7.74485, 85.4622, 5.59557, 0.22 ) }
    dend_35 { pt3dadd( -7.67965, 86.3134, 5.61214, 0.22 ) }
    dend_35 { pt3dadd( -7.66408, 87.1968, 5.55191, 0.15 ) }
    dend_35 { pt3dadd( -7.73838, 88.3074, 5.36011, 0.15 ) }
    dend_35 { pt3dadd( -7.85945, 89.1864, 5.11418, 0.88 ) }
    dend_35 { pt3dadd( -8.05649, 90.3082, 4.6985, 1.77 ) }
    dend_35 { pt3dadd( -8.22057, 91.1423, 4.34539, 1.77 ) }
    dend_35 { pt3dadd( -8.6382, 92.781, 3.61805, 0.15 ) }
    dend_35 { pt3dadd( -8.87949, 93.5793, 3.26617, 0.37 ) }
    dend_35 { pt3dadd( -9.11415, 94.308, 2.97222, 0.96 ) }
    dend_35 { pt3dadd( -9.4015, 95.1932, 2.69181, 1.77 ) }
    dend_35 { pt3dadd( -9.84968, 96.6391, 2.36505, 0.29 ) }
    dend_35 { pt3dadd( -10.2516, 98.1322, 2.14542, 0.15 ) }
    dend_35 { pt3dadd( -10.3306, 98.5286, 2.11529, 0.52 ) }
    dend_35 { pt3dadd( -10.5062, 99.398, 2.07484, 1.18 ) }
    dend_35 { pt3dadd( -10.819, 100.841, 2.04593, 0.15 ) }
    dend_35 { pt3dadd( -11.0122, 101.72, 2.04455, 0.15 ) }
    dend_35 { pt3dadd( -11.1568, 102.507, 2.06998, 1.03 ) }
    dend_35 { pt3dadd( -11.3243, 104.023, 2.19659, 2.8 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.56395, 57.2674, 4.43338, 0.22 ) }
    dend_34 { pt3dadd( -2.46874, 58.224, 4.99016, 0.22 ) }
    dend_34 { pt3dadd( -2.39574, 59.1416, 5.53606, 0.22 ) }
    dend_34 { pt3dadd( -2.33435, 59.8463, 5.95346, 0.96 ) }
    dend_34 { pt3dadd( -2.27199, 60.3609, 6.26156, 1.18 ) }
    dend_34 { pt3dadd( -2.11534, 61.2716, 6.80726, 0.15 ) }
    dend_34 { pt3dadd( -1.98888, 61.8172, 7.14755, 0.15 ) }
    dend_34 { pt3dadd( -1.86698, 62.1916, 7.37953, 0.15 ) }
    dend_34 { pt3dadd( -1.70841, 62.6169, 7.61068, 0.15 ) }
    dend_34 { pt3dadd( -1.53124, 63.1077, 7.81238, 0.15 ) }
    dend_34 { pt3dadd( -1.32495, 63.6906, 7.98432, 1.33 ) }
    dend_34 { pt3dadd( -1.05062, 64.4484, 8.12764, 2.73 ) }
    dend_34 { pt3dadd( -0.824477, 65.1539, 8.20779, 3.1 ) }
    dend_34 { pt3dadd( -0.315171, 67.1918, 8.28478, 0.22 ) }
    dend_34 { pt3dadd( -0.137006, 68.1138, 8.27369, 0.15 ) }
    dend_34 { pt3dadd( -0.0444349, 68.7513, 8.24352, 0.52 ) }
    dend_34 { pt3dadd( 0.0259259, 69.3423, 8.20323, 0.74 ) }
    dend_34 { pt3dadd( 0.151749, 70.557, 8.10174, 0.22 ) }
    dend_34 { pt3dadd( 0.221587, 71.2673, 8.05401, 1.18 ) }
    dend_34 { pt3dadd( 0.28555, 71.9095, 8.03824, 2.58 ) }
    dend_34 { pt3dadd( 0.444495, 73.498, 8.09253, 0.22 ) }
    dend_34 { pt3dadd( 0.50854, 74.1593, 8.13747, 0.22 ) }
    dend_34 { pt3dadd( 0.568775, 74.8542, 8.1945, 0.81 ) }
    dend_34 { pt3dadd( 0.65417, 75.9864, 8.29692, 2.51 ) }
    dend_34 { pt3dadd( 0.761382, 77.9343, 8.47605, 0.22 ) }
    dend_34 { pt3dadd( 0.775141, 78.7674, 8.54343, 0.29 ) }
    dend_34 { pt3dadd( 0.739545, 79.6913, 8.59736, 0.15 ) }
    dend_34 { pt3dadd( 0.669174, 80.6301, 8.63223, 0.15 ) }
    dend_34 { pt3dadd( 0.58303, 81.3699, 8.64023, 1.03 ) }
    dend_34 { pt3dadd( 0.472927, 82.0071, 8.62233, 1.99 ) }
    dend_34 { pt3dadd( 0.291517, 82.7096, 8.56044, 1.99 ) }
    dend_34 { pt3dadd( -0.210764, 84.2768, 8.34653, 0.15 ) }
    dend_34 { pt3dadd( -0.455225, 84.9214, 8.22868, 0.15 ) }
    dend_34 { pt3dadd( -0.686265, 85.4779, 8.09861, 0.15 ) }
    dend_34 { pt3dadd( -0.875607, 85.8908, 7.98027, 0.44 ) }
    dend_34 { pt3dadd( -1.43448, 86.9493, 7.61381, 0.15 ) }
    dend_34 { pt3dadd( -1.91258, 87.734, 7.29136, 1.47 ) }
    dend_34 { pt3dadd( -2.3588, 88.3432, 6.99298, 2.51 ) }
    dend_34 { pt3dadd( -3.12916, 89.2831, 6.49201, 0.37 ) }
    dend_34 { pt3dadd( -3.5646, 89.7775, 6.20636, 0.22 ) }
    dend_34 { pt3dadd( -3.96108, 90.1842, 5.94196, 0.07 ) }
    dend_34 { pt3dadd( -4.34973, 90.5237, 5.6963, 0.29 ) }
    dend_34 { pt3dadd( -5.10468, 91.0834, 5.25753, 0.07 ) }
    dend_34 { pt3dadd( -5.75807, 91.5327, 4.9007, 0.44 ) }
    dend_34 { pt3dadd( -6.67588, 92.1218, 4.41523, 0.07 ) }
    dend_34 { pt3dadd( -7.42661, 92.6011, 4.00388, 0.15 ) }
    dend_34 { pt3dadd( -7.91166, 92.9137, 3.69095, 0.74 ) }
    dend_34 { pt3dadd( -8.55151, 93.3116, 3.26409, 1.84 ) }
    dend_34 { pt3dadd( -9.55645, 93.8942, 2.56634, 0.15 ) }
    dend_34 { pt3dadd( -10.0999, 94.1944, 2.17657, 0.59 ) }
    dend_34 { pt3dadd( -10.5299, 94.4245, 1.85871, 0.29 ) }
    dend_34 { pt3dadd( -11.4508, 94.9556, 1.09521, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -21.7937, -24.3637, -28.6988, 1.47 ) }
    dend_31 { pt3dadd( -23.521, -24.7822, -29.2117, 1.47 ) }
    dend_31 { pt3dadd( -25.2727, -25.3422, -30.0014, 0.52 ) }
    dend_31 { pt3dadd( -26.0886, -25.6917, -30.4736, 0.52 ) }
    dend_31 { pt3dadd( -26.8722, -26.0275, -30.9272, 1.11 ) }
    dend_31 { pt3dadd( -27.7394, -26.399, -31.4291, 2.21 ) }
    dend_31 { pt3dadd( -28.5372, -26.7408, -31.8908, 1.11 ) }
    dend_31 { pt3dadd( -29.8379, -27.5054, -32.9123, 0.44 ) }
    dend_31 { pt3dadd( -30.5616, -28.1194, -33.6581, 1.47 ) }
    dend_31 { pt3dadd( -40.3626, -31.8265, -36.7385, 1.47 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -21.7937, -24.3637, -28.6988, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -21.733, -26.7034, -29.6132, 0.22 ) }
    dend_28 { pt3dadd( -21.7306, -27.476, -29.9288, 0.22 ) }
    dend_28 { pt3dadd( -21.7325, -28.4096, -30.3001, 0.96 ) }
    dend_28 { pt3dadd( -21.7229, -29.7579, -30.8678, 0.22 ) }
    dend_28 { pt3dadd( -21.6945, -30.6774, -31.2912, 0.22 ) }
    dend_28 { pt3dadd( -21.6721, -31.4002, -31.624, 0.81 ) }
    dend_28 { pt3dadd( -21.654, -32.145, -31.9933, 1.92 ) }
    dend_28 { pt3dadd( -21.6264, -33.0395, -32.4339, 0.81 ) }
    dend_28 { pt3dadd( -21.5667, -34.1673, -33.0515, 0.15 ) }
    dend_28 { pt3dadd( -21.4914, -35.011, -33.5782, 0.66 ) }
    dend_28 { pt3dadd( -20.5559, -44.0955, -39.6268, 0.66 ) }
    dend_28 { pt3dadd( -20.7911, -54.1544, -43.9572, 0.66 ) }
    dend_28 { pt3dadd( -21.3139, -63.7856, -49.1493, 0.66 ) }
    dend_28 { pt3dadd( -23.2033, -73.8376, -53.0705, 0.66 ) }
    dend_28 { pt3dadd( -26.0872, -83.6238, -57.0583, 0.66 ) }
    dend_28 { pt3dadd( -26.9363, -94.214, -59.7261, 0.66 ) }
    dend_28 { pt3dadd( -26.6599, -105.132, -60.5748, 0.66 ) }
    dend_28 { pt3dadd( -27.1147, -116.043, -59.7253, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.29707, -109.171, 20.1249, 0.37 ) }
    dend_20 { pt3dadd( -6.37022, -110.337, 20.4502, 0.37 ) }
    dend_20 { pt3dadd( -5.90081, -111.104, 20.6789, 0.22 ) }
    dend_20 { pt3dadd( -5.6875, -111.556, 20.826, 0.22 ) }
    dend_20 { pt3dadd( -5.4792, -112.113, 21.0193, 0.22 ) }
    dend_20 { pt3dadd( -5.32202, -112.623, 21.1937, 0.29 ) }
    dend_20 { pt3dadd( -5.17543, -113.267, 21.3946, 0.29 ) }
    dend_20 { pt3dadd( -5.16584, -113.814, 21.5536, 0.22 ) }
    dend_20 { pt3dadd( -5.19953, -114.34, 21.7013, 0.81 ) }
    dend_20 { pt3dadd( -5.24263, -114.844, 21.8432, 1.77 ) }
    dend_20 { pt3dadd( -5.28503, -115.357, 21.9822, 2.43 ) }
    dend_20 { pt3dadd( -5.33303, -116.382, 22.2212, 0.96 ) }
    dend_20 { pt3dadd( -5.35777, -117.82, 22.5323, 0.22 ) }
    dend_20 { pt3dadd( -5.37647, -118.383, 22.6514, 1.18 ) }
    dend_20 { pt3dadd( -5.423, -119.018, 22.7867, 1.7 ) }
    dend_20 { pt3dadd( -5.45349, -119.289, 22.8458, 1.7 ) }
    dend_20 { pt3dadd( -5.5877, -120.164, 23.0656, 0.74 ) }
    dend_20 { pt3dadd( -5.74213, -121.011, 23.2959, 0.29 ) }
    dend_20 { pt3dadd( -5.90233, -121.813, 23.5079, 0.29 ) }
    dend_20 { pt3dadd( -6.00783, -122.42, 23.6734, 0.29 ) }
    dend_20 { pt3dadd( -6.10719, -122.915, 23.8128, 0.66 ) }
    dend_20 { pt3dadd( -6.22744, -123.477, 23.9828, 1.47 ) }
    dend_20 { pt3dadd( -6.33715, -123.978, 24.1501, 2.73 ) }
    dend_20 { pt3dadd( -6.40392, -124.443, 24.3015, 2.88 ) }
    dend_20 { pt3dadd( -6.38051, -125.643, 24.6797, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.29707, -109.171, 20.1249, 0.22 ) }
    dend_15 { pt3dadd( -9.35353, -110.293, 19.7245, 0.22 ) }
    dend_15 { pt3dadd( -10.4212, -110.904, 19.4743, 0.22 ) }
    dend_15 { pt3dadd( -10.8916, -111.223, 19.3473, 0.22 ) }
    dend_15 { pt3dadd( -11.2439, -111.493, 19.2452, 0.22 ) }
    dend_15 { pt3dadd( -11.7951, -111.939, 19.0978, 0.29 ) }
    dend_15 { pt3dadd( -12.2152, -112.28, 18.9882, 0.96 ) }
    dend_15 { pt3dadd( -13.0755, -113.019, 18.6966, 1.84 ) }
    dend_15 { pt3dadd( -14.2727, -114.088, 18.208, 0.22 ) }
    dend_15 { pt3dadd( -14.9802, -114.709, 17.9015, 0.22 ) }
    dend_15 { pt3dadd( -15.7659, -115.327, 17.5468, 0.96 ) }
    dend_15 { pt3dadd( -16.7376, -115.953, 17.1127, 0.22 ) }
    dend_15 { pt3dadd( -17.709, -116.369, 16.6683, 0.22 ) }
    dend_15 { pt3dadd( -18.0945, -116.457, 16.4887, 0.22 ) }
    dend_15 { pt3dadd( -18.9297, -116.539, 16.1097, 0.22 ) }
    dend_15 { pt3dadd( -19.9467, -116.619, 15.6643, 0.29 ) }
    dend_15 { pt3dadd( -20.6566, -116.705, 15.3656, 1.25 ) }
    dend_15 { pt3dadd( -21.9318, -116.937, 14.8874, 2.88 ) }
    dend_15 { pt3dadd( -22.4722, -117.056, 14.704, 2.73 ) }
    dend_15 { pt3dadd( -24.6446, -117.699, 13.9647, 0.29 ) }
    dend_15 { pt3dadd( -25.4872, -118.034, 13.6767, 0.66 ) }
    dend_15 { pt3dadd( -26.6021, -118.552, 13.2888, 0.29 ) }
    dend_15 { pt3dadd( -27.2516, -118.871, 13.0408, 0.22 ) }
    dend_15 { pt3dadd( -28.1077, -119.28, 12.7, 0.22 ) }
    dend_15 { pt3dadd( -28.9852, -119.656, 12.32, 0.22 ) }
    dend_15 { pt3dadd( -30.3352, -120.146, 11.6806, 0.22 ) }
    dend_15 { pt3dadd( -30.9297, -120.296, 11.3654, 0.37 ) }
    dend_15 { pt3dadd( -31.9468, -120.497, 10.7951, 0.37 ) }
    dend_15 { pt3dadd( -32.8752, -120.641, 10.2447, 0.66 ) }
    dend_15 { pt3dadd( -33.4859, -120.711, 9.86693, 1.62 ) }
    dend_15 { pt3dadd( -34.1963, -120.696, 9.40074, 2.51 ) }
    dend_15 { pt3dadd( -35.4166, -120.493, 8.54369, 2.73 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.4964, -75.2164, 14.8631, 3.24 ) }
    dend_13 { pt3dadd( 8.59503, -76.5078, 14.8598, 3.24 ) }
    dend_13 { pt3dadd( 8.70394, -77.6228, 14.8431, 3.24 ) }
    dend_13 { pt3dadd( 8.96796, -79.9012, 14.7864, 0.22 ) }
    dend_13 { pt3dadd( 9.15845, -81.3561, 14.7377, 0.29 ) }
    dend_13 { pt3dadd( 9.269, -82.1326, 14.7064, 0.22 ) }
    dend_13 { pt3dadd( 9.41418, -83.0766, 14.6621, 0.22 ) }
    dend_13 { pt3dadd( 9.51738, -83.6662, 14.6157, 0.22 ) }
    dend_13 { pt3dadd( 9.60511, -84.1112, 14.5777, 0.22 ) }
    dend_13 { pt3dadd( 9.75033, -84.8248, 14.5161, 0.74 ) }
    dend_13 { pt3dadd( 9.83289, -85.3161, 14.4801, 0.74 ) }
    dend_13 { pt3dadd( 9.90121, -86.1545, 14.4673, 0.22 ) }
    dend_13 { pt3dadd( 9.91132, -86.8902, 14.5, 0.22 ) }
    dend_13 { pt3dadd( 9.91822, -87.9122, 14.5444, 0.22 ) }
    dend_13 { pt3dadd( 9.92082, -88.5816, 14.537, 0.22 ) }
    dend_13 { pt3dadd( 9.93562, -89.5171, 14.4856, 0.22 ) }
    dend_13 { pt3dadd( 9.98782, -90.4879, 14.3896, 1.33 ) }
    dend_13 { pt3dadd( 10.0941, -91.7449, 14.2112, 3.02 ) }
    dend_13 { pt3dadd( 10.3124, -93.3602, 13.9057, 0.88 ) }
    dend_13 { pt3dadd( 10.5844, -94.9064, 13.5936, 0.22 ) }
    dend_13 { pt3dadd( 10.7399, -95.6899, 13.4371, 0.22 ) }
    dend_13 { pt3dadd( 10.9655, -96.7509, 13.2366, 0.22 ) }
    dend_13 { pt3dadd( 11.102, -97.3983, 13.1367, 1.18 ) }
    dend_13 { pt3dadd( 11.3719, -98.6846, 13.0318, 2.06 ) }
    dend_13 { pt3dadd( 11.7412, -100.491, 13.0787, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 11.8862, -101.343, 13.2041, 0.52 ) }
    dend_13 { pt3dadd( 11.9847, -102.073, 13.3636, 0.52 ) }
    dend_13 { pt3dadd( 12.1574, -103.454, 13.7331, 0.22 ) }
    dend_13 { pt3dadd( 12.2364, -104.059, 13.9164, 0.22 ) }
    dend_13 { pt3dadd( 12.4156, -105.413, 14.3695, 1.99 ) }
    dend_13 { pt3dadd( 12.764, -107.722, 15.1404, 0.29 ) }
    dend_13 { pt3dadd( 12.8707, -108.472, 15.3895, 0.22 ) }
    dend_13 { pt3dadd( 13.0416, -109.736, 15.7983, 0.22 ) }
    dend_13 { pt3dadd( 13.1278, -110.378, 15.985, 1.03 ) }
    dend_13 { pt3dadd( 13.2245, -111.136, 16.184, 2.14 ) }
    dend_13 { pt3dadd( 13.3188, -111.85, 16.3549, 2.06 ) }
    dend_13 { pt3dadd( 13.5538, -113.628, 16.7561, 0.22 ) }
    dend_13 { pt3dadd( 13.6303, -114.414, 16.9335, 0.66 ) }
    dend_13 { pt3dadd( 13.7387, -116.052, 17.2998, 0.22 ) }
    dend_13 { pt3dadd( 13.7908, -117.107, 17.5221, 0.22 ) }
    dend_13 { pt3dadd( 13.8191, -117.8, 17.6402, 0.66 ) }
    dend_13 { pt3dadd( 13.8601, -118.838, 17.7835, 0.22 ) }
    dend_13 { pt3dadd( 13.9016, -119.774, 17.8829, 1.55 ) }
    dend_13 { pt3dadd( 13.9293, -120.545, 17.9535, 2.8 ) }
    dend_13 { pt3dadd( 13.9533, -121.323, 18.0065, 2.58 ) }
    dend_13 { pt3dadd( 14.0634, -123.941, 18.0726, 0.22 ) }
    dend_13 { pt3dadd( 14.0786, -124.753, 18.1021, 0.22 ) }
    dend_13 { pt3dadd( 14.0746, -125.451, 18.1235, 0.59 ) }
    dend_13 { pt3dadd( 14.0681, -126.079, 18.1489, 0.29 ) }
    dend_13 { pt3dadd( 14.051, -126.89, 18.1891, 1.03 ) }
    dend_13 { pt3dadd( 14.0199, -127.862, 18.2315, 2.06 ) }
    dend_13 { pt3dadd( 13.8944, -129.816, 18.3049, 0.15 ) }
    dend_13 { pt3dadd( 13.8612, -130.309, 18.3103, 0.15 ) }
    dend_13 { pt3dadd( 13.7987, -131.397, 18.2879, 0.29 ) }
    dend_13 { pt3dadd( 13.7618, -132.137, 18.263, 0.15 ) }
    dend_13 { pt3dadd( 13.7234, -132.982, 18.2263, 0.15 ) }
    dend_13 { pt3dadd( 13.7089, -133.699, 18.2004, 0.96 ) }
    dend_13 { pt3dadd( 13.7126, -134.447, 18.1646, 2.06 ) }
    dend_13 { pt3dadd( 13.7161, -135.472, 18.1574, 2.14 ) }
    dend_13 { pt3dadd( 13.6914, -137.893, 18.2312, 0.22 ) }
    dend_13 { pt3dadd( 13.6718, -138.673, 18.31, 0.22 ) }
    dend_13 { pt3dadd( 13.6408, -139.751, 18.4825, 0.22 ) }
    dend_13 { pt3dadd( 13.6329, -140.069, 18.5496, 0.59 ) }
    dend_13 { pt3dadd( 13.608, -140.858, 18.7514, 1.4 ) }
    dend_13 { pt3dadd( 13.5851, -141.684, 18.9842, 0.66 ) }
    dend_13 { pt3dadd( 13.5655, -143.382, 19.4924, 0.22 ) }
    dend_13 { pt3dadd( 13.5212, -144.209, 19.73, 0.22 ) }
    dend_13 { pt3dadd( 13.4678, -144.832, 19.8935, 0.22 ) }
    dend_13 { pt3dadd( 13.4121, -145.51, 20.0589, 1.03 ) }
    dend_13 { pt3dadd( 13.3485, -146.534, 20.2709, 2.21 ) }
    dend_13 { pt3dadd( 13.2744, -148.715, 20.67, 0.15 ) }
    dend_13 { pt3dadd( 13.2669, -150.03, 20.8574, 0.15 ) }
    dend_13 { pt3dadd( 13.2695, -150.569, 20.9282, 0.81 ) }
    dend_13 { pt3dadd( 13.2747, -151.338, 21.0234, 1.33 ) }
    dend_13 { pt3dadd( 13.2806, -152.489, 21.1659, 0.22 ) }
    dend_13 { pt3dadd( 13.2811, -153.645, 21.3035, 0.22 ) }
    dend_13 { pt3dadd( 13.2829, -154.363, 21.3799, 0.88 ) }
    dend_13 { pt3dadd( 13.2905, -154.996, 21.4571, 0.66 ) }
    dend_13 { pt3dadd( 13.3185, -156.425, 21.6684, 0.15 ) }
    dend_13 { pt3dadd( 13.3539, -157.476, 21.8398, 0.15 ) }
    dend_13 { pt3dadd( 13.3789, -157.871, 21.9064, 0.74 ) }
    dend_13 { pt3dadd( 13.454, -158.668, 22.0321, 1.18 ) }
    dend_13 { pt3dadd( 13.6619, -160.278, 22.2819, 0.22 ) }
    dend_13 { pt3dadd( 13.8362, -161.21, 22.4269, 0.22 ) }
    dend_13 { pt3dadd( 13.985, -161.796, 22.4988, 0.22 ) }
    dend_13 { pt3dadd( 14.1648, -162.389, 22.5621, 0.22 ) }
    dend_13 { pt3dadd( 14.4017, -163.131, 22.6281, 0.22 ) }
    dend_13 { pt3dadd( 14.6493, -163.951, 22.6931, 1.33 ) }
    dend_13 { pt3dadd( 14.9037, -164.9, 22.7641, 2.21 ) }
    dend_13 { pt3dadd( 15.2873, -166.586, 22.8851, 0.15 ) }
    dend_13 { pt3dadd( 15.4645, -167.278, 22.936, 0.29 ) }
    dend_13 { pt3dadd( 15.5629, -167.614, 22.9591, 0.29 ) }
    dend_13 { pt3dadd( 15.9212, -168.682, 23.0319, 0.15 ) }
    dend_13 { pt3dadd( 16.0252, -168.995, 23.0545, 0.15 ) }
    dend_13 { pt3dadd( 16.228, -169.689, 23.1028, 0.66 ) }
    dend_13 { pt3dadd( 16.566, -170.917, 23.2214, 0.15 ) }
    dend_13 { pt3dadd( 16.6862, -171.401, 23.2646, 0.15 ) }
    dend_13 { pt3dadd( 16.7865, -171.754, 23.3027, 0.15 ) }
    dend_13 { pt3dadd( 17.0529, -172.572, 23.4143, 0.15 ) }
    dend_13 { pt3dadd( 17.2176, -173.092, 23.4957, 0.37 ) }
    dend_13 { pt3dadd( 17.433, -173.842, 23.6181, 1.03 ) }
    dend_13 { pt3dadd( 17.6502, -174.644, 23.753, 0.22 ) }
    dend_13 { pt3dadd( 17.9759, -175.772, 23.9346, 0.22 ) }
    dend_13 { pt3dadd( 18.2743, -176.737, 24.0746, 1.4 ) }
    dend_13 { pt3dadd( 18.5459, -177.58, 24.1773, 2.14 ) }
    dend_13 { pt3dadd( 18.8298, -178.494, 24.2832, 1.4 ) }
    dend_13 { pt3dadd( 19.3028, -180.225, 24.4722, 0.22 ) }
    dend_13 { pt3dadd( 19.4265, -180.766, 24.5282, 0.81 ) }
    dend_13 { pt3dadd( 19.545, -181.45, 24.5953, 1.55 ) }
    dend_13 { pt3dadd( 19.7286, -182.775, 24.7289, 0.29 ) }
    dend_13 { pt3dadd( 19.8595, -183.938, 24.8599, 0.22 ) }
    dend_13 { pt3dadd( 19.9253, -184.727, 24.9508, 0.22 ) }
    dend_13 { pt3dadd( 19.9467, -185.527, 25.0354, 0.29 ) }
    dend_13 { pt3dadd( 19.9458, -186.437, 25.1464, 0.15 ) }
    dend_13 { pt3dadd( 19.9344, -187.131, 25.2343, 0.96 ) }
    dend_13 { pt3dadd( 19.9219, -187.61, 25.291, 1.47 ) }
    dend_13 { pt3dadd( 19.9069, -188.327, 25.3527, 1.47 ) }
    dend_13 { pt3dadd( 19.9238, -189.589, 25.4329, 0.22 ) }
    dend_13 { pt3dadd( 19.9907, -190.831, 25.492, 0.22 ) }
    dend_13 { pt3dadd( 20.0538, -191.53, 25.5061, 0.88 ) }
    dend_13 { pt3dadd( 20.1741, -192.466, 25.5065, 0.88 ) }
    dend_13 { pt3dadd( 20.4121, -193.931, 25.4939, 0.15 ) }
    dend_13 { pt3dadd( 20.6253, -194.928, 25.4703, 0.15 ) }
    dend_13 { pt3dadd( 20.8104, -195.649, 25.4403, 0.81 ) }
    dend_13 { pt3dadd( 21.1429, -196.802, 25.4146, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 21.3689, -197.546, 25.4248, 0.81 ) }
    dend_13 { pt3dadd( 21.644, -198.441, 25.466, 0.52 ) }
    dend_13 { pt3dadd( 21.8717, -199.244, 25.5323, 1.62 ) }
    dend_13 { pt3dadd( 22.0635, -200.075, 25.6341, 1.62 ) }
    dend_13 { pt3dadd( 22.3542, -201.763, 25.8634, 0.22 ) }
    dend_13 { pt3dadd( 22.4729, -202.703, 25.9937, 0.22 ) }
    dend_13 { pt3dadd( 22.5182, -203.262, 26.0584, 0.74 ) }
    dend_13 { pt3dadd( 22.5468, -203.888, 26.1187, 0.29 ) }
    dend_13 { pt3dadd( 22.561, -204.791, 26.2039, 1.47 ) }
    dend_13 { pt3dadd( 22.5715, -205.418, 26.2548, 1.47 ) }
    dend_13 { pt3dadd( 22.5734, -206.894, 26.3401, 0.15 ) }
    dend_13 { pt3dadd( 22.6139, -207.616, 26.4024, 0.52 ) }
    dend_13 { pt3dadd( 22.718, -208.626, 26.5047, 0.15 ) }
    dend_13 { pt3dadd( 22.8246, -209.388, 26.5886, 0.15 ) }
    dend_13 { pt3dadd( 22.8903, -209.812, 26.6388, 0.66 ) }
    dend_13 { pt3dadd( 23.0181, -210.589, 26.738, 1.47 ) }
    dend_13 { pt3dadd( 23.3141, -212.314, 26.9627, 0.22 ) }
    dend_13 { pt3dadd( 23.477, -213.257, 27.0668, 0.15 ) }
    dend_13 { pt3dadd( 23.5779, -213.873, 27.1071, 0.15 ) }
    dend_13 { pt3dadd( 23.6992, -214.658, 27.1461, 0.74 ) }
    dend_13 { pt3dadd( 23.8552, -215.839, 27.1967, 0.15 ) }
    dend_13 { pt3dadd( 23.9523, -216.62, 27.2209, 0.15 ) }
    dend_13 { pt3dadd( 24.067, -217.881, 27.2539, 0.22 ) }
    dend_13 { pt3dadd( 24.1368, -218.715, 27.2919, 1.18 ) }
    dend_13 { pt3dadd( 24.216, -219.69, 27.352, 1.7 ) }
    dend_13 { pt3dadd( 24.4005, -221.722, 27.5043, 0.22 ) }
    dend_13 { pt3dadd( 24.4782, -222.512, 27.5689, 0.22 ) }
    dend_13 { pt3dadd( 24.5647, -223.253, 27.6325, 0.15 ) }
    dend_13 { pt3dadd( 24.7059, -224.317, 27.7374, 0.15 ) }
    dend_13 { pt3dadd( 24.7755, -224.927, 27.8183, 0.44 ) }
    dend_13 { pt3dadd( 24.9324, -226.606, 28.0675, 0.15 ) }
    dend_13 { pt3dadd( 24.9699, -227.14, 28.1697, 0.88 ) }
    dend_13 { pt3dadd( 25.0004, -227.894, 28.3325, 1.7 ) }
    dend_13 { pt3dadd( 25.0178, -228.732, 28.52, 1.4 ) }
    dend_13 { pt3dadd( 25.0058, -230.678, 28.9478, 0.15 ) }
    dend_13 { pt3dadd( 24.9978, -231.07, 29.0308, 0.22 ) }
    dend_13 { pt3dadd( 24.9465, -232.445, 29.3102, 0.07 ) }
    dend_13 { pt3dadd( 24.9209, -233.145, 29.4382, 1.33 ) }
    dend_13 { pt3dadd( 24.8985, -233.762, 29.5398, 1.33 ) }
    dend_13 { pt3dadd( 24.8897, -234.895, 29.6966, 0.07 ) }
    dend_13 { pt3dadd( 24.9221, -235.73, 29.7672, 0.15 ) }
    dend_13 { pt3dadd( 24.9609, -236.289, 29.7967, 0.15 ) }
    dend_13 { pt3dadd( 25.0167, -236.855, 29.8076, 0.22 ) }
    dend_13 { pt3dadd( 25.1313, -237.93, 29.8218, 0.07 ) }
    dend_13 { pt3dadd( 25.169, -238.324, 29.8279, 0.66 ) }
    dend_13 { pt3dadd( 25.2163, -238.958, 29.838, 0.29 ) }
    dend_13 { pt3dadd( 25.3058, -240.447, 29.8536, 0.15 ) }
    dend_13 { pt3dadd( 25.3358, -240.833, 29.8562, 0.22 ) }
    dend_13 { pt3dadd( 25.4014, -241.621, 29.8689, 0.07 ) }
    dend_13 { pt3dadd( 25.4639, -242.326, 29.8927, 0.74 ) }
    dend_13 { pt3dadd( 25.5538, -243.428, 29.9633, 0.15 ) }
    dend_13 { pt3dadd( 25.592, -243.968, 30.0128, 0.59 ) }
    dend_13 { pt3dadd( 25.6626, -245.421, 30.1716, 0.15 ) }
    dend_13 { pt3dadd( 25.693, -246.036, 30.2551, 0.29 ) }
    dend_13 { pt3dadd( 25.7206, -246.806, 30.3614, 0.15 ) }
    dend_13 { pt3dadd( 25.7314, -247.426, 30.4492, 0.88 ) }
    dend_13 { pt3dadd( 25.7279, -247.963, 30.5259, 1.92 ) }
    dend_13 { pt3dadd( 25.6627, -250.295, 30.8519, 0.22 ) }
    dend_13 { pt3dadd( 25.611, -251.49, 31.0058, 1.7 ) }
    dend_13 { pt3dadd( 25.4879, -254.119, 31.3129, 0.15 ) }
    dend_13 { pt3dadd( 25.4202, -255.233, 31.4315, 0.15 ) }
    dend_13 { pt3dadd( 25.3685, -255.926, 31.5038, 0.81 ) }
    dend_13 { pt3dadd( 25.2304, -257.49, 31.657, 0.22 ) }
    dend_13 { pt3dadd( 25.1465, -258.378, 31.7306, 1.25 ) }
    dend_13 { pt3dadd( 25.1025, -258.861, 31.7634, 1.84 ) }
    dend_13 { pt3dadd( 24.9385, -261.055, 31.9254, 0.15 ) }
    dend_13 { pt3dadd( 24.9082, -261.623, 31.9642, 0.29 ) }
    dend_13 { pt3dadd( 24.8982, -262.637, 32.0467, 0.07 ) }
    dend_13 { pt3dadd( 24.9072, -263.265, 32.1061, 0.15 ) }
    dend_13 { pt3dadd( 24.9549, -264.758, 32.2703, 0.15 ) }
    dend_13 { pt3dadd( 24.9766, -265.159, 32.3178, 0.52 ) }
    dend_13 { pt3dadd( 25.0216, -265.731, 32.3894, 1.4 ) }
    dend_13 { pt3dadd( 25.1103, -267.371, 32.6541, 0.07 ) }
    dend_13 { pt3dadd( 25.1408, -268.538, 32.8771, 0.15 ) }
    dend_13 { pt3dadd( 25.1339, -269.074, 33.0056, 0.74 ) }
    dend_13 { pt3dadd( 25.1133, -269.612, 33.1506, 1.92 ) }
    dend_13 { pt3dadd( 25.0829, -270.434, 33.401, 1.92 ) }
    dend_13 { pt3dadd( 25.0201, -272.573, 34.1159, 0.15 ) }
    dend_13 { pt3dadd( 25.0199, -273.323, 34.4034, 0.59 ) }
    dend_13 { pt3dadd( 25.1024, -274.557, 34.9319, 0.07 ) }
    dend_13 { pt3dadd( 25.1373, -274.845, 35.065, 0.15 ) }
    dend_13 { pt3dadd( 25.3045, -275.806, 35.5265, 0.15 ) }
    dend_13 { pt3dadd( 25.4509, -276.479, 35.849, 0.37 ) }
    dend_13 { pt3dadd( 25.6713, -277.322, 36.2205, 0.96 ) }
    dend_13 { pt3dadd( 25.8987, -278.094, 36.4944, 1.47 ) }
    dend_13 { pt3dadd( 26.3406, -279.44, 36.8865, 0.15 ) }
    dend_13 { pt3dadd( 26.5942, -280.201, 37.0744, 0.15 ) }
    dend_13 { pt3dadd( 26.7819, -280.787, 37.1874, 1.11 ) }
    dend_13 { pt3dadd( 26.965, -281.392, 37.2785, 1.7 ) }
    dend_13 { pt3dadd( 27.4441, -283.207, 37.4649, 0.15 ) }
    dend_13 { pt3dadd( 27.5981, -283.849, 37.5144, 0.81 ) }
    dend_13 { pt3dadd( 27.7745, -284.607, 37.551, 1.03 ) }
    dend_13 { pt3dadd( 28.2445, -286.424, 37.6073, 0.15 ) }
    dend_13 { pt3dadd( 28.444, -287.107, 37.6238, 0.22 ) }
    dend_13 { pt3dadd( 28.7062, -288.014, 37.637, 0.07 ) }
    dend_13 { pt3dadd( 28.8637, -288.619, 37.6419, 0.88 ) }
    dend_13 { pt3dadd( 29.0407, -289.334, 37.6525, 1.62 ) }
    dend_13 { pt3dadd( 29.483, -291.017, 37.6965, 0.15 ) }
    dend_13 { pt3dadd( 29.7314, -291.845, 37.7105, 1.33 ) }
    dend_13 { pt3dadd( 30.237, -293.411, 37.7388, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 30.3847, -293.889, 37.7586, 0.22 ) }
    dend_13 { pt3dadd( 30.8043, -295.406, 37.8752, 0.07 ) }
    dend_13 { pt3dadd( 30.9575, -295.998, 37.9472, 0.96 ) }
    dend_13 { pt3dadd( 31.3259, -297.568, 38.1947, 0.15 ) }
    dend_13 { pt3dadd( 31.5009, -298.274, 38.3201, 1.11 ) }
    dend_13 { pt3dadd( 32.0863, -300.432, 38.7271, 0.15 ) }
    dend_13 { pt3dadd( 32.349, -301.376, 38.8863, 1.11 ) }
    dend_13 { pt3dadd( 32.5813, -302.231, 39.01, 1.47 ) }
    dend_13 { pt3dadd( 33.0801, -304.266, 39.2773, 0.15 ) }
    dend_13 { pt3dadd( 33.2473, -304.99, 39.3513, 0.88 ) }
    dend_13 { pt3dadd( 33.4453, -305.869, 39.3952, 1.33 ) }
    dend_13 { pt3dadd( 33.8361, -307.834, 39.3586, 0.15 ) }
    dend_13 { pt3dadd( 33.9878, -308.872, 39.2785, 0.96 ) }
    dend_13 { pt3dadd( 34.1395, -310.842, 39.0322, 0.15 ) }
    dend_13 { pt3dadd( 34.1262, -311.64, 38.9159, 0.15 ) }
    dend_13 { pt3dadd( 34.0498, -312.488, 38.8086, 0.74 ) }
    dend_13 { pt3dadd( 33.811, -313.768, 38.6937, 0.44 ) }
    dend_13 { pt3dadd( 33.5704, -314.634, 38.6477, 1.11 ) }
    dend_13 { pt3dadd( 33.3465, -315.286, 38.6382, 1.7 ) }
    dend_13 { pt3dadd( 32.4611, -317.611, 38.6938, 0.15 ) }
    dend_13 { pt3dadd( 31.9805, -318.804, 38.772, 1.33 ) }
    dend_13 { pt3dadd( 31.5126, -319.94, 38.8957, 0.15 ) }
    dend_13 { pt3dadd( 31.3324, -320.386, 38.965, 0.74 ) }
    dend_13 { pt3dadd( 31.1251, -320.931, 39.0766, 1.4 ) }
    dend_13 { pt3dadd( 30.8684, -321.646, 39.2449, 0.74 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.4964, -75.2164, 14.8631, 1.03 ) }
    dend_12 { pt3dadd( 8.50897, -76.5229, 20.1271, 1.03 ) }
    dend_12 { pt3dadd( 8.54296, -76.7435, 21.2288, 1.03 ) }
    dend_12 { pt3dadd( 8.60524, -76.9137, 22.2446, 1.03 ) }
    dend_12 { pt3dadd( 8.68527, -77.0797, 23.2252, 1.03 ) }
    dend_12 { pt3dadd( 8.77493, -77.2053, 23.9515, 1.03 ) }
    dend_12 { pt3dadd( 8.93845, -77.3853, 24.9278, 1.03 ) }
    dend_12 { pt3dadd( 9.22773, -77.4815, 25.4939, 0.88 ) }
    dend_12 { pt3dadd( 9.47559, -77.5886, 25.9969, 0.88 ) }
    dend_12 { pt3dadd( 9.73772, -77.8373, 26.7193, 0.44 ) }
    dend_12 { pt3dadd( 9.90728, -78.2912, 27.4694, 0.59 ) }
    dend_12 { pt3dadd( 9.98482, -78.6748, 28.0066, 0.22 ) }
    dend_12 { pt3dadd( 10.1503, -79.4348, 29.3021, 0.22 ) }
    dend_12 { pt3dadd( 10.2842, -79.9367, 30.3669, 0.44 ) }
    dend_12 { pt3dadd( 10.3737, -80.1541, 31.0172, 1.4 ) }
    dend_12 { pt3dadd( 10.5729, -80.3971, 32.2104, 2.14 ) }
    dend_12 { pt3dadd( 10.9731, -80.5423, 33.9346, 0.59 ) }
    dend_12 { pt3dadd( 11.8075, -80.4921, 36.4806, 0.59 ) }
    dend_12 { pt3dadd( 12.1994, -80.394, 37.2861, 0.44 ) }
    dend_12 { pt3dadd( 13.0209, -80.1132, 38.5857, 0.81 ) }
    dend_12 { pt3dadd( 13.7657, -79.8005, 39.5982, 1.99 ) }
    dend_12 { pt3dadd( 14.9834, -79.2328, 40.9593, 0.22 ) }
    dend_12 { pt3dadd( 15.6075, -78.9531, 41.5276, 1.03 ) }
    dend_12 { pt3dadd( 16.5635, -78.5723, 42.2524, 0.22 ) }
    dend_12 { pt3dadd( 17.6514, -78.1978, 43.0451, 0.96 ) }
    dend_12 { pt3dadd( 18.3668, -77.9741, 43.5535, 1.92 ) }
    dend_12 { pt3dadd( 19.9724, -77.5125, 44.8773, 0.22 ) }
    dend_12 { pt3dadd( 20.6042, -77.3168, 45.4945, 0.22 ) }
    dend_12 { pt3dadd( 20.9612, -77.1977, 45.8759, 0.22 ) }
    dend_12 { pt3dadd( 21.572, -76.9804, 46.5604, 1.11 ) }
    dend_12 { pt3dadd( 22.3502, -76.6892, 47.4325, 2.58 ) }
    dend_12 { pt3dadd( 23.8568, -76.0604, 49.1376, 1.11 ) }
    dend_12 { pt3dadd( 24.5664, -75.7265, 49.9598, 0.44 ) }
    dend_12 { pt3dadd( 25.199, -75.4426, 50.7085, 0.44 ) }
    dend_12 { pt3dadd( 25.5782, -75.2935, 51.1851, 0.22 ) }
    dend_12 { pt3dadd( 25.913, -75.1989, 51.6102, 0.22 ) }
    dend_12 { pt3dadd( 26.2436, -75.1482, 52.0299, 0.22 ) }
    dend_12 { pt3dadd( 26.7896, -75.1382, 52.7597, 1.4 ) }
    dend_12 { pt3dadd( 27.6717, -75.2679, 54.2172, 0.37 ) }
    dend_12 { pt3dadd( 28.225, -75.4716, 55.5447, 0.29 ) }
    dend_12 { pt3dadd( 28.5443, -75.7341, 56.6499, 0.29 ) }
    dend_12 { pt3dadd( 28.5899, -75.8081, 56.8727, 0.29 ) }
    dend_12 { pt3dadd( 28.6636, -76.1849, 57.6578, 0.29 ) }
    dend_12 { pt3dadd( 28.6655, -76.6371, 58.3946, 0.29 ) }
    dend_12 { pt3dadd( 28.6226, -77.4432, 59.4832, 0.59 ) }
    dend_12 { pt3dadd( 28.5649, -78.0909, 60.2319, 1.84 ) }
    dend_12 { pt3dadd( 28.4893, -78.7012, 60.8808, 2.06 ) }
    dend_12 { pt3dadd( 28.3005, -80.1101, 62.2725, 0.52 ) }
    dend_12 { pt3dadd( 28.1709, -80.9577, 63.0128, 0.22 ) }
    dend_12 { pt3dadd( 28.0267, -81.7405, 63.6277, 0.22 ) }
    dend_12 { pt3dadd( 27.895, -82.2537, 63.9853, 0.22 ) }
    dend_12 { pt3dadd( 27.7408, -82.592, 64.2254, 0.52 ) }
    dend_12 { pt3dadd( 27.4269, -83.0165, 64.5551, 0.81 ) }
    dend_12 { pt3dadd( 26.4452, -83.8376, 65.3497, 0.22 ) }
    dend_12 { pt3dadd( 25.7063, -84.2598, 65.9007, 1.47 ) }
    dend_12 { pt3dadd( 25.1991, -84.4705, 66.2781, 1.92 ) }
    dend_12 { pt3dadd( 24.0543, -84.8161, 67.1633, 0.44 ) }
    dend_12 { pt3dadd( 23.5078, -84.9194, 67.5985, 0.22 ) }
    dend_12 { pt3dadd( 22.8729, -84.9317, 68.1188, 0.81 ) }
    dend_12 { pt3dadd( 21.8549, -84.7959, 68.9829, 0.22 ) }
    dend_12 { pt3dadd( 21.3325, -84.6974, 69.435, 0.22 ) }
    dend_12 { pt3dadd( 21.065, -84.6504, 69.6786, 0.22 ) }
    dend_12 { pt3dadd( 20.5675, -84.602, 70.149, 0.59 ) }
    dend_12 { pt3dadd( 19.5389, -84.5934, 71.1637, 0.37 ) }
    dend_12 { pt3dadd( 18.8977, -84.6362, 71.833, 0.37 ) }
    dend_12 { pt3dadd( 18.3939, -84.683, 72.4477, 0.37 ) }
    dend_12 { pt3dadd( 18.0481, -84.7305, 72.9825, 0.37 ) }
    dend_12 { pt3dadd( 17.7059, -84.8646, 73.7208, 0.37 ) }
    dend_12 { pt3dadd( 17.5396, -85.0606, 74.3011, 0.37 ) }
    dend_12 { pt3dadd( 17.4376, -85.292, 74.8191, 0.37 ) }
    dend_12 { pt3dadd( 17.3028, -85.5523, 75.4974, 0.37 ) }
    dend_12 { pt3dadd( 16.9815, -85.6807, 76.1875, 0.37 ) }
    dend_12 { pt3dadd( 16.3954, -85.783, 76.7521, 0.37 ) }
    dend_12 { pt3dadd( 15.6497, -85.8615, 77.1968, 0.37 ) }
    dend_12 { pt3dadd( 14.9125, -85.8732, 77.5018, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 14.517, -85.8506, 77.6132, 0.37 ) }
    dend_12 { pt3dadd( 12.9179, -85.5992, 77.9625, 0.29 ) }
    dend_12 { pt3dadd( 11.3124, -85.1065, 78.2563, 0.22 ) }
    dend_12 { pt3dadd( 10.8067, -84.9081, 78.3392, 0.22 ) }
    dend_12 { pt3dadd( 9.78235, -84.4665, 78.5352, 0.15 ) }
    dend_12 { pt3dadd( 9.06072, -84.1646, 78.712, 0.59 ) }
    dend_12 { pt3dadd( 8.37799, -83.8883, 78.9001, 0.29 ) }
    dend_12 { pt3dadd( 7.76066, -83.6716, 79.1032, 0.88 ) }
    dend_12 { pt3dadd( 6.74759, -83.385, 79.5022, 0.96 ) }
    dend_12 { pt3dadd( 5.29764, -83.1155, 80.0566, 0.22 ) }
    dend_12 { pt3dadd( 4.43439, -83.0331, 80.3726, 1.33 ) }
    dend_12 { pt3dadd( 3.86441, -83.0165, 80.5695, 1.4 ) }
    dend_12 { pt3dadd( 2.49704, -83.0752, 80.9893, 0.15 ) }
    dend_12 { pt3dadd( 2.13192, -83.1253, 81.108, 0.15 ) }
    dend_12 { pt3dadd( 1.64294, -83.2247, 81.281, 0.15 ) }
    dend_12 { pt3dadd( 1.28333, -83.331, 81.4098, 0.15 ) }
    dend_12 { pt3dadd( 1.04479, -83.4037, 81.5016, 0.81 ) }
    dend_12 { pt3dadd( 0.673034, -83.4748, 81.6586, 0.81 ) }
    dend_12 { pt3dadd( -0.594253, -83.581, 82.2421, 0.22 ) }
    dend_12 { pt3dadd( -1.307, -83.5605, 82.5637, 0.22 ) }
    dend_12 { pt3dadd( -1.99383, -83.4929, 82.8627, 1.11 ) }
    dend_12 { pt3dadd( -2.65881, -83.3778, 83.1371, 1.62 ) }
    dend_12 { pt3dadd( -4.13192, -83.0008, 83.6876, 0.22 ) }
    dend_12 { pt3dadd( -4.98375, -82.6898, 83.9627, 1.11 ) }
    dend_12 { pt3dadd( -6.10433, -82.1666, 84.2401, 0.22 ) }
    dend_12 { pt3dadd( -6.87676, -81.783, 84.3884, 0.22 ) }
    dend_12 { pt3dadd( -7.25467, -81.5837, 84.4454, 1.03 ) }
    dend_12 { pt3dadd( -7.97879, -81.1867, 84.5173, 1.03 ) }
    dend_12 { pt3dadd( -8.95048, -80.6319, 84.5579, 0.22 ) }
    dend_12 { pt3dadd( -9.90829, -80.041, 84.5602, 0.52 ) }
    dend_12 { pt3dadd( -10.9552, -79.3347, 84.5524, 0.15 ) }
    dend_12 { pt3dadd( -11.3327, -79.0465, 84.5455, 0.15 ) }
    dend_12 { pt3dadd( -11.6101, -78.8102, 84.5582, 0.52 ) }
    dend_12 { pt3dadd( -12.0017, -78.4418, 84.5942, 1.18 ) }
    dend_12 { pt3dadd( -13.1338, -77.2669, 84.7441, 0.22 ) }
    dend_12 { pt3dadd( -13.6491, -76.6042, 84.8006, 1.03 ) }
    dend_12 { pt3dadd( -13.9344, -76.1539, 84.8173, 1.99 ) }
    dend_12 { pt3dadd( -14.9276, -74.3087, 84.8164, 0.29 ) }
    dend_12 { pt3dadd( -15.1572, -73.7845, 84.7831, 0.96 ) }
    dend_12 { pt3dadd( -15.4347, -72.9717, 84.6789, 1.7 ) }
    dend_12 { pt3dadd( -15.802, -71.2643, 84.3496, 0.22 ) }
    dend_12 { pt3dadd( -15.898, -70.4411, 84.1307, 0.22 ) }
    dend_12 { pt3dadd( -15.9096, -69.7534, 83.8949, 0.96 ) }
    dend_12 { pt3dadd( -15.7807, -68.5596, 83.3998, 0.07 ) }
    dend_12 { pt3dadd( -15.6496, -67.8341, 83.0771, 0.74 ) }
    dend_12 { pt3dadd( -15.3879, -66.8702, 82.6222, 0.22 ) }
    dend_12 { pt3dadd( -15.032, -65.9148, 82.1879, 0.22 ) }
    dend_12 { pt3dadd( -14.5477, -65.0821, 81.867, 0.66 ) }
    dend_12 { pt3dadd( -13.7211, -64.0446, 81.5476, 0.07 ) }
    dend_12 { pt3dadd( -13.1237, -63.4682, 81.4262, 0.22 ) }
    dend_12 { pt3dadd( -12.2822, -62.7943, 81.368, 0.07 ) }
    dend_12 { pt3dadd( -11.4245, -62.1909, 81.3664, 1.11 ) }
    dend_12 { pt3dadd( -9.09725, -60.7447, 81.5565, 0.07 ) }
    dend_12 { pt3dadd( -8.55997, -60.4481, 81.641, 0.07 ) }
    dend_12 { pt3dadd( -8.17504, -60.2614, 81.7298, 0.29 ) }
    dend_12 { pt3dadd( -7.14823, -59.7904, 82.0406, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 37.9735, 17.7862, 42.6511, 0.22 ) }
    dend_7 { pt3dadd( 38.21, 18.1859, 43.1852, 0.22 ) }
    dend_7 { pt3dadd( 38.4448, 18.4934, 43.6727, 0.22 ) }
    dend_7 { pt3dadd( 38.6539, 18.7169, 44.0748, 0.52 ) }
    dend_7 { pt3dadd( 38.9558, 19.0015, 44.6083, 1.7 ) }
    dend_7 { pt3dadd( 39.2406, 19.2052, 45.0408, 2.06 ) }
    dend_7 { pt3dadd( 39.8515, 19.5617, 45.9192, 0.52 ) }
    dend_7 { pt3dadd( 40.3104, 19.7924, 46.5562, 0.66 ) }
    dend_7 { pt3dadd( 40.7288, 19.9841, 47.1065, 2.14 ) }
    dend_7 { pt3dadd( 40.9772, 20.0973, 47.4245, 2.65 ) }
    dend_7 { pt3dadd( 41.8552, 20.5175, 48.5251, 0.29 ) }
    dend_7 { pt3dadd( 42.2442, 20.7083, 49.0482, 0.22 ) }
    dend_7 { pt3dadd( 42.6678, 20.9132, 49.6496, 0.22 ) }
    dend_7 { pt3dadd( 42.9918, 21.0582, 50.1415, 1.25 ) }
    dend_7 { pt3dadd( 43.465, 21.2545, 50.902, 0.15 ) }
    dend_7 { pt3dadd( 43.9076, 21.4318, 51.629, 0.81 ) }
    dend_7 { pt3dadd( 44.4504, 21.6501, 52.4456, 1.4 ) }
    dend_7 { pt3dadd( 44.8431, 21.7891, 52.9481, 2.21 ) }
    dend_7 { pt3dadd( 45.8536, 22.0742, 54.0485, 0.22 ) }
    dend_7 { pt3dadd( 46.3442, 22.1844, 54.5053, 0.88 ) }
    dend_7 { pt3dadd( 46.8016, 22.2695, 54.8664, 1.18 ) }
    dend_7 { pt3dadd( 47.7671, 22.452, 55.4842, 0.22 ) }
    dend_7 { pt3dadd( 48.2117, 22.5509, 55.7044, 0.59 ) }
    dend_7 { pt3dadd( 48.6267, 22.6544, 55.8659, 1.11 ) }
    dend_7 { pt3dadd( 49.305, 22.8245, 56.0754, 0.15 ) }
    dend_7 { pt3dadd( 49.575, 22.8922, 56.1653, 0.15 ) }
    dend_7 { pt3dadd( 49.8223, 22.969, 56.2728, 0.15 ) }
    dend_7 { pt3dadd( 50.0469, 23.0561, 56.4077, 0.37 ) }
    dend_7 { pt3dadd( 50.3619, 23.2191, 56.6542, 0.66 ) }
    dend_7 { pt3dadd( 51.0788, 23.6467, 57.3024, 0.15 ) }
    dend_7 { pt3dadd( 51.5779, 23.965, 57.8188, 1.62 ) }
    dend_7 { pt3dadd( 52.0821, 24.2778, 58.3842, 0.29 ) }
    dend_7 { pt3dadd( 52.6087, 24.5883, 59.021, 1.18 ) }
    dend_7 { pt3dadd( 53.327, 24.9687, 59.9495, 0.22 ) }
    dend_7 { pt3dadd( 53.806, 25.1852, 60.5967, 0.52 ) }
    dend_7 { pt3dadd( 54.3963, 25.3949, 61.4, 1.25 ) }
    dend_7 { pt3dadd( 54.8572, 25.5195, 62.0402, 2.14 ) }
    dend_7 { pt3dadd( 55.6288, 25.6343, 63.1315, 0.59 ) }
    dend_7 { pt3dadd( 56.1141, 25.658, 63.8292, 0.59 ) }
    dend_7 { pt3dadd( 56.5885, 25.6375, 64.4995, 0.22 ) }
    dend_7 { pt3dadd( 57.1372, 25.6056, 65.2766, 1.55 ) }
    dend_7 { pt3dadd( 57.4108, 25.5991, 65.6622, 1.55 ) }
    dend_7 { pt3dadd( 58.1382, 25.6648, 66.7061, 0.22 ) }
    dend_7 { pt3dadd( 58.3602, 25.7174, 67.0368, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 58.6725, 25.8418, 67.4612, 0.22 ) }
    dend_7 { pt3dadd( 58.9763, 26.0049, 67.8755, 0.96 ) }
    dend_7 { pt3dadd( 59.3081, 26.2424, 68.323, 1.25 ) }
    dend_7 { pt3dadd( 59.8995, 26.7703, 69.076, 0.22 ) }
    dend_7 { pt3dadd( 60.3666, 27.2917, 69.6142, 0.22 ) }
    dend_7 { pt3dadd( 60.882, 27.877, 70.194, 2.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 37.9735, 17.7862, 42.6511, 0.22 ) }
    dend_4 { pt3dadd( 38.3182, 16.2143, 43.4894, 0.22 ) }
    dend_4 { pt3dadd( 38.5047, 15.5162, 43.8093, 0.37 ) }
    dend_4 { pt3dadd( 38.8494, 14.4538, 44.2833, 0.66 ) }
    dend_4 { pt3dadd( 39.2468, 13.2807, 44.8953, 0.66 ) }
    dend_4 { pt3dadd( 39.6019, 12.2477, 45.5243, 0.15 ) }
    dend_4 { pt3dadd( 39.8932, 11.3858, 46.1172, 1.47 ) }
    dend_4 { pt3dadd( 40.2649, 10.2328, 46.8919, 3.24 ) }
    dend_4 { pt3dadd( 40.5134, 9.51947, 47.41, 3.24 ) }
    dend_4 { pt3dadd( 41.351, 7.40841, 49.123, 0.29 ) }
    dend_4 { pt3dadd( 41.6814, 6.60462, 49.8563, 0.44 ) }
    dend_4 { pt3dadd( 42.0952, 5.55774, 50.8796, 2.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 18/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -9.53218, 43.1956, 29.058, 0.22 ) }
    dend_60 { pt3dadd( -10.6902, 44.1095, 29.2526, 0.22 ) }
    dend_60 { pt3dadd( -11.2387, 44.5461, 29.3404, 1.55 ) }
    dend_60 { pt3dadd( -12.0089, 45.1258, 29.3875, 3.1 ) }
    dend_60 { pt3dadd( -13.4322, 46.1512, 29.3707, 0.15 ) }
    dend_60 { pt3dadd( -13.9359, 46.4978, 29.3327, 0.66 ) }
    dend_60 { pt3dadd( -14.7741, 47.0454, 29.2321, 0.15 ) }
    dend_60 { pt3dadd( -15.4297, 47.4148, 29.0928, 1.18 ) }
    dend_60 { pt3dadd( -16.6612, 48.0103, 28.7514, 0.07 ) }
    dend_60 { pt3dadd( -17.3568, 48.2943, 28.5258, 0.07 ) }
    dend_60 { pt3dadd( -17.93, 48.5011, 28.3196, 0.07 ) }
    dend_60 { pt3dadd( -18.5642, 48.7016, 28.1022, 0.96 ) }
    dend_60 { pt3dadd( -19.8028, 49.0515, 27.7112, 0.15 ) }
    dend_60 { pt3dadd( -20.7691, 49.3266, 27.4501, 0.15 ) }
    dend_60 { pt3dadd( -21.3499, 49.4993, 27.3473, 1.03 ) }
    dend_60 { pt3dadd( -21.9539, 49.6752, 27.2738, 1.99 ) }
    dend_60 { pt3dadd( -23.1242, 50.0007, 27.2461, 0.15 ) }
    dend_60 { pt3dadd( -23.6289, 50.1286, 27.2709, 0.15 ) }
    dend_60 { pt3dadd( -23.9887, 50.2062, 27.3129, 0.15 ) }
    dend_60 { pt3dadd( -24.5684, 50.3119, 27.4112, 0.88 ) }
    dend_60 { pt3dadd( -25.284, 50.4031, 27.5332, 1.62 ) }
    dend_60 { pt3dadd( -26.7959, 50.5285, 27.8044, 0.15 ) }
    dend_60 { pt3dadd( -27.3826, 50.5525, 27.9117, 0.15 ) }
    dend_60 { pt3dadd( -28.0422, 50.5586, 28.0227, 0.44 ) }
    dend_60 { pt3dadd( -28.7824, 50.529, 28.1282, 0.15 ) }
    dend_60 { pt3dadd( -29.8005, 50.4489, 28.2951, 0.22 ) }
    dend_60 { pt3dadd( -30.7669, 50.3323, 28.4782, 0.15 ) }
    dend_60 { pt3dadd( -30.9958, 50.2908, 28.5296, 0.74 ) }
    dend_60 { pt3dadd( -31.8154, 50.116, 28.7482, 1.25 ) }
    dend_60 { pt3dadd( -33.1191, 49.8055, 29.143, 0.22 ) }
    dend_60 { pt3dadd( -34.2561, 49.497, 29.5317, 1.11 ) }
    dend_60 { pt3dadd( -34.7678, 49.333, 29.7228, 1.84 ) }
    dend_60 { pt3dadd( -35.8596, 48.846, 30.1859, 0.15 ) }
    dend_60 { pt3dadd( -36.2188, 48.6379, 30.3626, 0.15 ) }
    dend_60 { pt3dadd( -36.5874, 48.3963, 30.5621, 0.15 ) }
    dend_60 { pt3dadd( -36.8422, 48.2089, 30.7099, 0.81 ) }
    dend_60 { pt3dadd( -37.5257, 47.6256, 31.0774, 2.14 ) }
    dend_60 { pt3dadd( -38.6072, 46.5145, 31.7496, 0.22 ) }
    dend_60 { pt3dadd( -39.0682, 45.8912, 32.0865, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -9.53218, 43.1956, 29.058, 0.22 ) }
    dend_57 { pt3dadd( -9.83016, 43.8548, 29.7034, 0.22 ) }
    dend_57 { pt3dadd( -10.0494, 44.3366, 30.1374, 0.22 ) }
    dend_57 { pt3dadd( -10.3816, 45.0374, 30.7396, 0.37 ) }
    dend_57 { pt3dadd( -10.527, 45.3152, 30.9808, 0.37 ) }
    dend_57 { pt3dadd( -10.7147, 45.6528, 31.2766, 0.96 ) }
    dend_57 { pt3dadd( -10.8942, 45.9774, 31.5569, 0.15 ) }
    dend_57 { pt3dadd( -10.9777, 46.1367, 31.6863, 0.15 ) }
    dend_57 { pt3dadd( -11.0329, 46.2288, 31.7593, 0.22 ) }
    dend_57 { pt3dadd( -11.2477, 46.5364, 31.9836, 0.15 ) }
    dend_57 { pt3dadd( -11.4304, 46.7758, 32.1749, 1.03 ) }
    dend_57 { pt3dadd( -11.6668, 47.0954, 32.4573, 1.99 ) }
    dend_57 { pt3dadd( -11.9793, 47.5994, 32.9346, 0.22 ) }
    dend_57 { pt3dadd( -12.1302, 47.9425, 33.2373, 0.15 ) }
    dend_57 { pt3dadd( -12.1739, 48.09, 33.3618, 0.15 ) }
    dend_57 { pt3dadd( -12.2262, 48.3928, 33.6043, 1.18 ) }
    dend_57 { pt3dadd( -12.2731, 48.8598, 33.9679, 0.15 ) }
    dend_57 { pt3dadd( -12.29, 49.1383, 34.1854, 0.52 ) }
    dend_57 { pt3dadd( -12.3027, 49.52, 34.4689, 0.22 ) }
    dend_57 { pt3dadd( -12.326, 49.895, 34.7424, 1.33 ) }
    dend_57 { pt3dadd( -12.3848, 50.315, 35.0578, 2.88 ) }
    dend_57 { pt3dadd( -12.5757, 51.0668, 35.6431, 0.22 ) }
    dend_57 { pt3dadd( -12.6934, 51.3453, 35.8632, 0.22 ) }
    dend_57 { pt3dadd( -12.8616, 51.65, 36.1122, 0.74 ) }
    dend_57 { pt3dadd( -13.0783, 51.9855, 36.4081, 0.15 ) }
    dend_57 { pt3dadd( -13.2628, 52.2533, 36.6543, 0.15 ) }
    dend_57 { pt3dadd( -13.4292, 52.4719, 36.8792, 0.15 ) }
    dend_57 { pt3dadd( -13.6263, 52.6963, 37.1859, 0.74 ) }
    dend_57 { pt3dadd( -13.7927, 52.884, 37.5193, 0.74 ) }
    dend_57 { pt3dadd( -13.8995, 52.9783, 37.813, 0.74 ) }
    dend_57 { pt3dadd( -13.9924, 53.027, 38.1298, 0.74 ) }
    dend_57 { pt3dadd( -14.032, 53.0347, 38.2518, 0.74 ) }
    dend_57 { pt3dadd( -14.2105, 53.0437, 38.748, 0.74 ) }
    dend_57 { pt3dadd( -14.2701, 53.0408, 38.9201, 0.74 ) }
    dend_57 { pt3dadd( -14.4295, 53.0303, 39.3878, 0.74 ) }
    dend_57 { pt3dadd( -14.513, 53.0373, 39.6936, 0.74 ) }
    dend_57 { pt3dadd( -14.6119, 53.0935, 40.2795, 0.96 ) }
    dend_57 { pt3dadd( -14.6352, 53.1694, 40.7136, 0.96 ) }
    dend_57 { pt3dadd( -14.6197, 53.252, 41.023, 0.96 ) }
    dend_57 { pt3dadd( -14.5722, 53.3827, 41.4543, 0.96 ) }
    dend_57 { pt3dadd( -14.4889, 53.5695, 41.9862, 0.66 ) }
    dend_57 { pt3dadd( -14.3905, 53.7737, 42.5276, 0.88 ) }
    dend_57 { pt3dadd( -14.3074, 54.008, 43.1043, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_57 { pt3dadd( -14.2673, 54.2965, 43.7571, 0.37 ) }
    dend_57 { pt3dadd( -14.2764, 54.4448, 44.0479, 0.37 ) }
    dend_57 { pt3dadd( -14.3182, 54.7392, 44.5317, 1.4 ) }
    dend_57 { pt3dadd( -14.3514, 54.9111, 44.7776, 1.62 ) }
    dend_57 { pt3dadd( -14.431, 55.3573, 45.3315, 0.44 ) }
    dend_57 { pt3dadd( -14.4734, 55.6706, 45.6777, 0.44 ) }
    dend_57 { pt3dadd( -14.4856, 56.0069, 46.0137, 1.18 ) }
    dend_57 { pt3dadd( -14.4531, 56.4799, 46.4537, 0.22 ) }
    dend_57 { pt3dadd( -14.4058, 56.7213, 46.668, 0.22 ) }
    dend_57 { pt3dadd( -14.3175, 57.0057, 46.9126, 1.25 ) }
    dend_57 { pt3dadd( -14.2075, 57.3031, 47.1639, 1.92 ) }
    dend_57 { pt3dadd( -13.9996, 57.934, 47.7243, 0.15 ) }
    dend_57 { pt3dadd( -13.9392, 58.1812, 47.9619, 0.88 ) }
    dend_57 { pt3dadd( -13.899, 58.4908, 48.2731, 1.92 ) }
    dend_57 { pt3dadd( -13.8911, 59.1047, 48.9254, 0.22 ) }
    dend_57 { pt3dadd( -13.9221, 59.4288, 49.3051, 0.74 ) }
    dend_57 { pt3dadd( -13.9964, 59.8613, 49.8552, 1.7 ) }
    dend_57 { pt3dadd( -14.0609, 60.1714, 50.2899, 0.07 ) }
    dend_57 { pt3dadd( -14.0833, 60.3268, 50.5235, 0.96 ) }
    dend_57 { pt3dadd( -14.1209, 60.718, 51.1545, 0.07 ) }
    dend_57 { pt3dadd( -14.1203, 60.9584, 51.5701, 0.07 ) }
    dend_57 { pt3dadd( -14.0898, 61.1355, 51.891, 0.07 ) }
    dend_57 { pt3dadd( -14.0082, 61.3925, 52.4184, 0.37 ) }
    dend_57 { pt3dadd( -13.9391, 61.6008, 52.9487, 0.59 ) }
    dend_57 { pt3dadd( -13.914, 61.7009, 53.2542, 0.59 ) }
    dend_57 { pt3dadd( -13.9146, 61.7696, 53.5121, 0.59 ) }
    dend_57 { pt3dadd( -13.9341, 61.8118, 53.6648, 0.59 ) }
    dend_57 { pt3dadd( -14.062, 62.0043, 54.2085, 0.15 ) }
    dend_57 { pt3dadd( -14.1672, 62.1801, 54.563, 0.07 ) }
    dend_57 { pt3dadd( -14.22, 62.3259, 54.7887, 0.07 ) }
    dend_57 { pt3dadd( -14.2564, 62.4663, 54.9736, 0.07 ) }
    dend_57 { pt3dadd( -14.3217, 62.7104, 55.2555, 0.88 ) }
    dend_57 { pt3dadd( -14.444, 63.1058, 55.7024, 0.22 ) }
    dend_57 { pt3dadd( -14.5711, 63.4325, 56.1108, 0.22 ) }
    dend_57 { pt3dadd( -14.7208, 63.7184, 56.522, 1.62 ) }
    dend_57 { pt3dadd( -14.9197, 63.9698, 56.9662, 2.21 ) }
    dend_57 { pt3dadd( -15.3044, 64.3021, 57.7367, 0.37 ) }
    dend_57 { pt3dadd( -15.5789, 64.4581, 58.2708, 0.37 ) }
    dend_57 { pt3dadd( -15.9912, 64.5734, 59.0737, 1.33 ) }
    dend_57 { pt3dadd( -16.1147, 64.5693, 59.3387, 1.77 ) }
    dend_57 { pt3dadd( -16.3421, 64.4746, 59.926, 0.29 ) }
    dend_57 { pt3dadd( -16.5065, 64.3164, 60.445, 0.29 ) }
    dend_57 { pt3dadd( -16.6435, 64.1432, 60.8691, 0.59 ) }
    dend_57 { pt3dadd( -16.7978, 63.9562, 61.2983, 1.18 ) }
    dend_57 { pt3dadd( -17.0742, 63.6647, 61.9825, 0.37 ) }
    dend_57 { pt3dadd( -17.3896, 63.3708, 62.6888, 1.03 ) }
    dend_57 { pt3dadd( -17.6777, 63.1455, 63.2335, 1.4 ) }
    dend_57 { pt3dadd( -18.3498, 62.7188, 64.2584, 0.07 ) }
    dend_57 { pt3dadd( -18.7056, 62.5386, 64.6998, 0.59 ) }
    dend_57 { pt3dadd( -19.1133, 62.4006, 65.0906, 0.15 ) }
    dend_57 { pt3dadd( -19.4071, 62.3406, 65.2995, 0.15 ) }
    dend_57 { pt3dadd( -19.872, 62.28, 65.5583, 0.15 ) }
    dend_57 { pt3dadd( -20.099, 62.265, 65.665, 1.03 ) }
    dend_57 { pt3dadd( -20.3334, 62.2553, 65.7494, 1.4 ) }
    dend_57 { pt3dadd( -21.1853, 62.2267, 66.0205, 0.15 ) }
    dend_57 { pt3dadd( -21.496, 62.2203, 66.1216, 0.15 ) }
    dend_57 { pt3dadd( -22.0465, 62.2085, 66.3352, 0.15 ) }
    dend_57 { pt3dadd( -22.3259, 62.1965, 66.4651, 1.11 ) }
    dend_57 { pt3dadd( -22.5903, 62.1809, 66.6068, 1.62 ) }
    dend_57 { pt3dadd( -23.2208, 62.1394, 66.9913, 0.29 ) }
    dend_57 { pt3dadd( -23.6067, 62.1182, 67.2533, 0.07 ) }
    dend_57 { pt3dadd( -23.9708, 62.1242, 67.4972, 0.07 ) }
    dend_57 { pt3dadd( -24.1959, 62.1396, 67.6467, 0.88 ) }
    dend_57 { pt3dadd( -24.7202, 62.1934, 68.0139, 0.07 ) }
    dend_57 { pt3dadd( -24.9721, 62.232, 68.2058, 0.22 ) }
    dend_57 { pt3dadd( -25.3952, 62.3331, 68.5597, 0.07 ) }
    dend_57 { pt3dadd( -25.6932, 62.4314, 68.7986, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 0.42979, 34.7944, 19.4071, 0.52 ) }
    dend_51 { pt3dadd( 4.00763, 33.1947, 18.2312, 0.52 ) }
    dend_51 { pt3dadd( 4.83927, 32.7378, 18.0032, 2.21 ) }
    dend_51 { pt3dadd( 6.27605, 31.8107, 17.6498, 2.88 ) }
    dend_51 { pt3dadd( 8.62652, 30.0721, 17.1014, 0.96 ) }
    dend_51 { pt3dadd( 10.2828, 28.6922, 16.6688, 0.15 ) }
    dend_51 { pt3dadd( 11.1944, 27.8586, 16.3643, 0.59 ) }
    dend_51 { pt3dadd( 12.0246, 26.8639, 16.1359, 0.15 ) }
    dend_51 { pt3dadd( 12.5528, 26.1333, 15.9718, 0.22 ) }
    dend_51 { pt3dadd( 12.9301, 25.4687, 15.806, 0.22 ) }
    dend_51 { pt3dadd( 13.5527, 24.0704, 15.337, 0.22 ) }
    dend_51 { pt3dadd( 14.2484, 22.1213, 14.6015, 1.11 ) }
    dend_51 { pt3dadd( 14.5502, 21.062, 14.161, 2.29 ) }
    dend_51 { pt3dadd( 14.7047, 20.4008, 13.8588, 2.58 ) }
    dend_51 { pt3dadd( 15.108, 18.3079, 12.8582, 0.15 ) }
    dend_51 { pt3dadd( 15.2579, 17.0691, 12.2862, 0.15 ) }
    dend_51 { pt3dadd( 15.2576, 15.9599, 11.8194, 0.29 ) }
    dend_51 { pt3dadd( 15.1766, 15.1627, 11.5046, 1.03 ) }
    dend_51 { pt3dadd( 15.0532, 14.3464, 11.1777, 1.99 ) }
    dend_51 { pt3dadd( 14.9482, 13.7559, 10.9588, 2.29 ) }
    dend_51 { pt3dadd( 14.524, 11.8111, 10.386, 0.44 ) }
    dend_51 { pt3dadd( 14.2329, 10.4199, 10.0653, 0.29 ) }
    dend_51 { pt3dadd( 14.08, 9.66452, 9.93297, 0.44 ) }
    dend_51 { pt3dadd( 13.9393, 8.93576, 9.83249, 0.52 ) }
    dend_51 { pt3dadd( 13.6809, 7.61671, 9.72037, 0.22 ) }
    dend_51 { pt3dadd( 13.5235, 6.72829, 9.69408, 0.22 ) }
    dend_51 { pt3dadd( 13.3568, 5.76388, 9.72693, 1.33 ) }
    dend_51 { pt3dadd( 13.1998, 4.81876, 9.79645, 2.29 ) }
    dend_51 { pt3dadd( 13.0537, 4.04142, 9.86906, 2.29 ) }
    dend_51 { pt3dadd( 12.6309, 1.88073, 10.1156, 0.15 ) }
    dend_51 { pt3dadd( 12.4337, 0.969374, 10.2249, 0.15 ) }
    dend_51 { pt3dadd( 12.2728, 0.235596, 10.3057, 0.15 ) }
    dend_51 { pt3dadd( 12.1096, -0.465689, 10.3811, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( 11.8554, -1.56712, 10.472, 1.33 ) }
    dend_51 { pt3dadd( 11.6749, -2.42553, 10.4737, 1.03 ) }
    dend_51 { pt3dadd( 11.3213, -4.24884, 10.2764, 0.22 ) }
    dend_51 { pt3dadd( 11.1658, -5.12471, 10.1106, 0.22 ) }
    dend_51 { pt3dadd( 11.0302, -5.97897, 9.88251, 0.66 ) }
    dend_51 { pt3dadd( 10.8572, -7.2131, 9.50122, 0.22 ) }
    dend_51 { pt3dadd( 10.6217, -8.79054, 8.93046, 0.29 ) }
    dend_51 { pt3dadd( 10.4565, -9.7891, 8.56542, 0.59 ) }
    dend_51 { pt3dadd( 10.3418, -10.551, 8.26195, 1.33 ) }
    dend_51 { pt3dadd( 10.1694, -11.6398, 7.8006, 2.14 ) }
    dend_51 { pt3dadd( 9.86731, -13.5061, 6.98394, 0.22 ) }
    dend_51 { pt3dadd( 9.63118, -14.7788, 6.4559, 0.22 ) }
    dend_51 { pt3dadd( 9.37493, -15.8517, 6.13177, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.42979, 34.7944, 19.4071, 0.52 ) }
    dend_40 { pt3dadd( 0.283453, 35.509, 20.7118, 0.52 ) }
    dend_40 { pt3dadd( 0.201951, 35.9081, 21.9024, 0.52 ) }
    dend_40 { pt3dadd( 0.147983, 36.1839, 23.4328, 0.52 ) }
    dend_40 { pt3dadd( 0.132257, 36.2265, 24.2427, 0.52 ) }
    dend_40 { pt3dadd( 0.143775, 36.2343, 26.1388, 0.81 ) }
    dend_40 { pt3dadd( 0.195844, 36.2391, 27.5391, 1.18 ) }
    dend_40 { pt3dadd( 0.391777, 36.1063, 29.3286, 0.96 ) }
    dend_40 { pt3dadd( 0.579715, 35.951, 30.591, 1.25 ) }
    dend_40 { pt3dadd( 0.815868, 35.7189, 31.9385, 0.37 ) }
    dend_40 { pt3dadd( 0.99873, 35.5907, 32.7214, 0.37 ) }
    dend_40 { pt3dadd( 1.2467, 35.4373, 33.6567, 0.15 ) }
    dend_40 { pt3dadd( 1.60063, 35.2934, 34.7696, 0.15 ) }
    dend_40 { pt3dadd( 2.07957, 35.2816, 35.9727, 1.18 ) }
    dend_40 { pt3dadd( 2.3825, 35.3561, 36.6885, 2.43 ) }
    dend_40 { pt3dadd( 2.94716, 35.5389, 37.8946, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.3243, 104.023, 2.19659, 0.59 ) }
    dend_37 { pt3dadd( -11.547, 105.586, 1.9315, 0.59 ) }
    dend_37 { pt3dadd( -11.8027, 106.964, 1.6385, 0.29 ) }
    dend_37 { pt3dadd( -12.0922, 108.259, 1.32921, 0.96 ) }
    dend_37 { pt3dadd( -12.3429, 109.245, 1.08861, 0.07 ) }
    dend_37 { pt3dadd( -12.665, 110.305, 0.818948, 0.07 ) }
    dend_37 { pt3dadd( -12.8601, 110.905, 0.666025, 0.22 ) }
    dend_37 { pt3dadd( -13.1702, 111.634, 0.463137, 0.88 ) }
    dend_37 { pt3dadd( -13.3594, 112.065, 0.35834, 1.47 ) }
    dend_37 { pt3dadd( -13.8167, 113.291, 0.0505178, 0.07 ) }
    dend_37 { pt3dadd( -14.0223, 114.106, -0.164873, 0.07 ) }
    dend_37 { pt3dadd( -14.0889, 114.536, -0.258096, 0.22 ) }
    dend_37 { pt3dadd( -14.1335, 114.861, -0.319203, 0.22 ) }
    dend_37 { pt3dadd( -14.2468, 115.76, -0.458604, 0.07 ) }
    dend_37 { pt3dadd( -14.3091, 116.574, -0.563551, 0.07 ) }
    dend_37 { pt3dadd( -14.321, 117.107, -0.637766, 0.66 ) }
    dend_37 { pt3dadd( -14.3191, 117.707, -0.744462, 0.66 ) }
    dend_37 { pt3dadd( -14.3178, 118.679, -0.953372, 0.15 ) }
    dend_37 { pt3dadd( -14.3104, 119.435, -1.12978, 1.03 ) }
    dend_37 { pt3dadd( -14.2943, 120.23, -1.32337, 1.77 ) }
    dend_37 { pt3dadd( -14.226, 121.716, -1.66243, 0.15 ) }
    dend_37 { pt3dadd( -14.1766, 122.715, -1.87497, 0.22 ) }
    dend_37 { pt3dadd( -14.157, 123.123, -1.96674, 0.66 ) }
    dend_37 { pt3dadd( -14.1565, 123.599, -2.06522, 0.37 ) }
    dend_37 { pt3dadd( -14.2312, 124.423, -2.20482, 1.11 ) }
    dend_37 { pt3dadd( -14.365, 125.069, -2.28909, 1.11 ) }
    dend_37 { pt3dadd( -14.8442, 126.584, -2.40366, 0.22 ) }
    dend_37 { pt3dadd( -15.2124, 127.472, -2.45811, 1.03 ) }
    dend_37 { pt3dadd( -15.7152, 128.498, -2.53362, 1.62 ) }
    dend_37 { pt3dadd( -16.2466, 129.444, -2.60823, 1.99 ) }
    dend_37 { pt3dadd( -16.7579, 130.323, -2.74194, 0.52 ) }
    dend_37 { pt3dadd( -17.4332, 131.484, -3.02313, 0.22 ) }
    dend_37 { pt3dadd( -18.0653, 132.638, -3.42221, 0.22 ) }
    dend_37 { pt3dadd( -18.3477, 133.216, -3.68904, 0.88 ) }
    dend_37 { pt3dadd( -18.6754, 134.073, -4.24064, 1.55 ) }
    dend_37 { pt3dadd( -19.2385, 135.764, -5.58492, 0.15 ) }
    dend_37 { pt3dadd( -19.4359, 136.457, -6.17604, 0.22 ) }
    dend_37 { pt3dadd( -19.5845, 137.076, -6.70292, 0.07 ) }
    dend_37 { pt3dadd( -19.789, 138.097, -7.54202, 1.33 ) }
    dend_37 { pt3dadd( -20.1219, 139.637, -8.67057, 0.07 ) }
    dend_37 { pt3dadd( -20.2275, 140.136, -9.0259, 0.37 ) }
    dend_37 { pt3dadd( -20.5083, 141.153, -9.56242, 0.07 ) }
    dend_37 { pt3dadd( -20.8835, 142.309, -9.98546, 0.22 ) }
    dend_37 { pt3dadd( -21.3164, 143.389, -10.1422, 1.55 ) }
    dend_37 { pt3dadd( -21.7373, 144.278, -9.94974, 1.55 ) }
    dend_37 { pt3dadd( -22.5402, 153.801, -13.2019, 1.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -11.3243, 104.023, 2.19659, 0.22 ) }
    dend_36 { pt3dadd( -12.8171, 105.983, 1.86805, 0.22 ) }
    dend_36 { pt3dadd( -13.4976, 106.929, 1.69911, 0.07 ) }
    dend_36 { pt3dadd( -14.2362, 108.028, 1.48867, 1.11 ) }
    dend_36 { pt3dadd( -15.3111, 109.827, 1.14402, 0.07 ) }
    dend_36 { pt3dadd( -15.7562, 110.683, 0.984788, 0.07 ) }
    dend_36 { pt3dadd( -15.9692, 111.14, 0.903579, 0.52 ) }
    dend_36 { pt3dadd( -16.2569, 112.035, 0.7478, 1.47 ) }
    dend_36 { pt3dadd( -16.5481, 113.178, 0.562961, 0.07 ) }
    dend_36 { pt3dadd( -16.7582, 114.198, 0.4053, 0.15 ) }
    dend_36 { pt3dadd( -16.9015, 115.194, 0.281587, 0.88 ) }
    dend_36 { pt3dadd( -17.0085, 116.163, 0.192995, 1.4 ) }
    dend_36 { pt3dadd( -17.14, 117.687, 0.0628029, 0.07 ) }
    dend_36 { pt3dadd( -17.1942, 118.413, 0.0115018, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -27.1147, -116.043, -59.7253, 0.15 ) }
    dend_30 { pt3dadd( -27.7365, -127.482, -63.7038, 0.15 ) }
    dend_30 { pt3dadd( -28.1194, -139.316, -66.3241, 0.15 ) }
    dend_30 { pt3dadd( -27.7559, -150.509, -70.9792, 0.15 ) }
    dend_30 { pt3dadd( -24.815, -161.376, -75.487, 0.15 ) }
    dend_30 { pt3dadd( -20.7382, -171.533, -80.7096, 0.15 ) }
    dend_30 { pt3dadd( -16.3997, -181.766, -85.561, 0.15 ) }
    dend_30 { pt3dadd( -11.2987, -191.302, -91.0468, 0.15 ) }
    dend_30 { pt3dadd( -6.12251, -201.505, -95.0702, 0.15 ) }
    dend_30 { pt3dadd( 0.315561, -210.659, -99.74, 0.15 ) }
    dend_30 { pt3dadd( 7.21541, -219.575, -104.209, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_30 { pt3dadd( 13.8525, -229.517, -106.25, 0.15 ) }
    dend_30 { pt3dadd( 19.991, -239.823, -108.034, 0.15 ) }
    dend_30 { pt3dadd( 26.0065, -249.949, -110.921, 0.15 ) }
    dend_30 { pt3dadd( 31.0033, -260.199, -115.047, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -27.1147, -116.043, -59.7253, 1.03 ) }
    dend_29 { pt3dadd( -27.7586, -126.624, -63.2201, 0.15 ) }
    dend_29 { pt3dadd( -30.0658, -137.334, -65.3513, 0.15 ) }
    dend_29 { pt3dadd( -33.5463, -147.747, -67.3579, 0.15 ) }
    dend_29 { pt3dadd( -39.0782, -157.418, -68.0262, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.38051, -125.643, 24.6797, 0.22 ) }
    dend_24 { pt3dadd( -5.70579, -127.28, 24.8341, 0.22 ) }
    dend_24 { pt3dadd( -5.34703, -128.311, 24.9662, 0.22 ) }
    dend_24 { pt3dadd( -5.15845, -129.075, 25.0791, 0.88 ) }
    dend_24 { pt3dadd( -4.96325, -130.19, 25.2551, 1.25 ) }
    dend_24 { pt3dadd( -4.72613, -131.903, 25.5491, 0.15 ) }
    dend_24 { pt3dadd( -4.59445, -133.197, 25.7729, 0.15 ) }
    dend_24 { pt3dadd( -4.56692, -134.244, 25.9795, 0.66 ) }
    dend_24 { pt3dadd( -4.61011, -135.797, 26.2832, 0.15 ) }
    dend_24 { pt3dadd( -4.64993, -136.502, 26.4196, 0.44 ) }
    dend_24 { pt3dadd( -4.68451, -137.015, 26.5065, 0.44 ) }
    dend_24 { pt3dadd( -4.73854, -138.446, 26.7033, 0.15 ) }
    dend_24 { pt3dadd( -4.74814, -139.483, 26.8188, 0.15 ) }
    dend_24 { pt3dadd( -4.72199, -140.279, 26.8919, 1.18 ) }
    dend_24 { pt3dadd( -4.6521, -141.076, 26.9477, 2.14 ) }
    dend_24 { pt3dadd( -4.52957, -142.263, 27.0115, 1.03 ) }
    dend_24 { pt3dadd( -4.41815, -143.41, 27.0543, 0.15 ) }
    dend_24 { pt3dadd( -4.31399, -144.31, 27.0756, 0.15 ) }
    dend_24 { pt3dadd( -4.23892, -145.025, 27.0829, 0.37 ) }
    dend_24 { pt3dadd( -4.16095, -145.915, 27.0714, 0.22 ) }
    dend_24 { pt3dadd( -4.13957, -146.392, 27.0463, 0.66 ) }
    dend_24 { pt3dadd( -4.12941, -147.031, 26.9896, 0.81 ) }
    dend_24 { pt3dadd( -4.11228, -148.386, 26.8164, 0.22 ) }
    dend_24 { pt3dadd( -4.10296, -149.043, 26.7241, 1.03 ) }
    dend_24 { pt3dadd( -4.11696, -150.223, 26.5476, 1.84 ) }
    dend_24 { pt3dadd( -4.17305, -151.933, 26.2881, 0.22 ) }
    dend_24 { pt3dadd( -4.19398, -152.491, 26.2102, 0.22 ) }
    dend_24 { pt3dadd( -4.21619, -153.142, 26.134, 0.22 ) }
    dend_24 { pt3dadd( -4.232, -153.781, 26.078, 0.22 ) }
    dend_24 { pt3dadd( -4.19901, -154.719, 26.0192, 0.96 ) }
    dend_24 { pt3dadd( -4.00326, -156.682, 25.9437, 0.15 ) }
    dend_24 { pt3dadd( -3.88684, -157.377, 25.931, 0.15 ) }
    dend_24 { pt3dadd( -3.74626, -158.115, 25.9321, 0.96 ) }
    dend_24 { pt3dadd( -3.5781, -158.965, 25.9509, 1.92 ) }
    dend_24 { pt3dadd( -3.16388, -160.867, 26.0209, 0.22 ) }
    dend_24 { pt3dadd( -3.00063, -161.537, 26.0556, 0.22 ) }
    dend_24 { pt3dadd( -2.84082, -162.131, 26.082, 0.15 ) }
    dend_24 { pt3dadd( -2.54979, -163.196, 26.1219, 0.15 ) }
    dend_24 { pt3dadd( -2.39097, -163.826, 26.1482, 0.81 ) }
    dend_24 { pt3dadd( -2.25518, -164.465, 26.2023, 1.62 ) }
    dend_24 { pt3dadd( -2.04009, -165.738, 26.3736, 0.15 ) }
    dend_24 { pt3dadd( -1.88626, -166.73, 26.5198, 0.15 ) }
    dend_24 { pt3dadd( -1.78722, -167.282, 26.5983, 0.15 ) }
    dend_24 { pt3dadd( -1.6126, -168.148, 26.717, 0.88 ) }
    dend_24 { pt3dadd( -1.37494, -169.443, 26.8934, 0.15 ) }
    dend_24 { pt3dadd( -1.26547, -170.105, 26.9789, 0.96 ) }
    dend_24 { pt3dadd( -1.09851, -171.311, 27.1269, 2.21 ) }
    dend_24 { pt3dadd( -0.822579, -173.569, 27.388, 0.15 ) }
    dend_24 { pt3dadd( -0.707592, -174.513, 27.4797, 0.96 ) }
    dend_24 { pt3dadd( -0.432058, -176.428, 27.6617, 0.22 ) }
    dend_24 { pt3dadd( -0.27605, -177.345, 27.7414, 0.88 ) }
    dend_24 { pt3dadd( -0.186306, -177.837, 27.7896, 0.88 ) }
    dend_24 { pt3dadd( 0.126095, -179.401, 27.9721, 0.07 ) }
    dend_24 { pt3dadd( 0.203542, -179.732, 28.0163, 0.29 ) }
    dend_24 { pt3dadd( 0.396539, -180.442, 28.1274, 0.29 ) }
    dend_24 { pt3dadd( 0.602948, -181.134, 28.2466, 0.15 ) }
    dend_24 { pt3dadd( 0.747464, -181.688, 28.3603, 0.15 ) }
    dend_24 { pt3dadd( 0.94927, -182.596, 28.5508, 0.15 ) }
    dend_24 { pt3dadd( 1.06061, -183.229, 28.6714, 0.74 ) }
    dend_24 { pt3dadd( 1.19066, -184.124, 28.844, 1.77 ) }
    dend_24 { pt3dadd( 1.25348, -184.689, 28.9619, 1.33 ) }
    dend_24 { pt3dadd( 1.38387, -186.086, 29.2899, 0.07 ) }
    dend_24 { pt3dadd( 1.41592, -186.549, 29.407, 0.37 ) }
    dend_24 { pt3dadd( 1.49266, -187.981, 29.805, 0.07 ) }
    dend_24 { pt3dadd( 1.53494, -188.744, 30.0209, 0.59 ) }
    dend_24 { pt3dadd( 1.6296, -189.985, 30.3593, 0.15 ) }
    dend_24 { pt3dadd( 1.6887, -190.625, 30.5212, 0.22 ) }
    dend_24 { pt3dadd( 1.78851, -191.605, 30.7509, 1.33 ) }
    dend_24 { pt3dadd( 1.92747, -193.04, 31.0793, 0.07 ) }
    dend_24 { pt3dadd( 1.96613, -193.595, 31.2025, 0.88 ) }
    dend_24 { pt3dadd( 2.1032, -195.201, 31.5251, 0.15 ) }
    dend_24 { pt3dadd( 2.18164, -195.939, 31.6593, 0.15 ) }
    dend_24 { pt3dadd( 2.2612, -196.579, 31.772, 0.15 ) }
    dend_24 { pt3dadd( 2.36413, -197.286, 31.9029, 0.74 ) }
    dend_24 { pt3dadd( 2.50023, -198.295, 32.1019, 2.14 ) }
    dend_24 { pt3dadd( 2.69751, -200.116, 32.4924, 0.15 ) }
    dend_24 { pt3dadd( 2.71698, -200.684, 32.6167, 0.44 ) }
    dend_24 { pt3dadd( 2.67691, -202.13, 32.9348, 0.07 ) }
    dend_24 { pt3dadd( 2.61857, -202.718, 33.0686, 0.15 ) }
    dend_24 { pt3dadd( 2.50152, -203.388, 33.2297, 0.07 ) }
    dend_24 { pt3dadd( 2.2975, -204.192, 33.4379, 1.11 ) }
    dend_24 { pt3dadd( 1.67299, -206.054, 33.9379, 0.15 ) }
    dend_24 { pt3dadd( 1.3835, -206.843, 34.1537, 1.03 ) }
    dend_24 { pt3dadd( 0.824347, -208.257, 34.5323, 0.15 ) }
    dend_24 { pt3dadd( 0.590928, -208.897, 34.6796, 0.44 ) }
    dend_24 { pt3dadd( 0.249473, -210.065, 34.897, 0.15 ) }
    dend_24 { pt3dadd( 0.0513262, -210.99, 35.0341, 1.62 ) }
    dend_24 { pt3dadd( -0.00695284, -211.474, 35.0826, 1.77 ) }
    dend_24 { pt3dadd( -0.037162, -212.21, 35.115, 1.03 ) }
    dend_24 { pt3dadd( 0.00524446, -214.083, 35.1062, 0.15 ) }
    dend_24 { pt3dadd( 0.12175, -215.867, 35.0477, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( 0.185736, -216.458, 35.0196, 0.88 ) }
    dend_24 { pt3dadd( 0.303736, -217.253, 34.9979, 1.18 ) }
    dend_24 { pt3dadd( 0.688273, -219.32, 34.9669, 0.07 ) }
    dend_24 { pt3dadd( 0.778027, -219.736, 34.9646, 0.15 ) }
    dend_24 { pt3dadd( 1.08387, -221.042, 34.9842, 0.07 ) }
    dend_24 { pt3dadd( 1.43048, -222.464, 35.0262, 0.15 ) }
    dend_24 { pt3dadd( 1.71169, -223.688, 35.078, 1.33 ) }
    dend_24 { pt3dadd( 2.14577, -225.685, 35.1845, 0.15 ) }
    dend_24 { pt3dadd( 2.30913, -226.509, 35.2456, 0.22 ) }
    dend_24 { pt3dadd( 2.50226, -227.84, 35.3393, 0.07 ) }
    dend_24 { pt3dadd( 2.53809, -228.25, 35.3655, 0.22 ) }
    dend_24 { pt3dadd( 2.58707, -230.192, 35.4599, 0.07 ) }
    dend_24 { pt3dadd( 2.58137, -230.572, 35.475, 0.81 ) }
    dend_24 { pt3dadd( 2.51058, -231.945, 35.5308, 1.92 ) }
    dend_24 { pt3dadd( 2.39412, -233.618, 35.5365, 0.15 ) }
    dend_24 { pt3dadd( 2.32037, -234.494, 35.4927, 0.88 ) }
    dend_24 { pt3dadd( 2.1548, -236.408, 35.3137, 0.15 ) }
    dend_24 { pt3dadd( 2.10745, -236.919, 35.2421, 0.44 ) }
    dend_24 { pt3dadd( 1.95702, -238.506, 34.9819, 0.07 ) }
    dend_24 { pt3dadd( 1.85702, -239.819, 34.7401, 0.07 ) }
    dend_24 { pt3dadd( 1.80373, -240.68, 34.6109, 0.15 ) }
    dend_24 { pt3dadd( 1.76973, -241.348, 34.5384, 0.74 ) }
    dend_24 { pt3dadd( 1.7445, -241.956, 34.5089, 0.74 ) }
    dend_24 { pt3dadd( 1.78945, -243.322, 34.5901, 0.07 ) }
    dend_24 { pt3dadd( 1.92731, -244.266, 34.7529, 0.07 ) }
    dend_24 { pt3dadd( 2.12382, -245.189, 35.0149, 0.07 ) }
    dend_24 { pt3dadd( 2.31102, -245.952, 35.2705, 1.25 ) }
    dend_24 { pt3dadd( 2.46568, -246.565, 35.4849, 1.99 ) }
    dend_24 { pt3dadd( 2.97096, -248.66, 36.1887, 0.15 ) }
    dend_24 { pt3dadd( 3.22289, -249.803, 36.5527, 0.96 ) }
    dend_24 { pt3dadd( 3.52235, -251.443, 37.032, 0.07 ) }
    dend_24 { pt3dadd( 3.71188, -252.731, 37.3661, 0.07 ) }
    dend_24 { pt3dadd( 3.80331, -253.674, 37.5744, 0.81 ) }
    dend_24 { pt3dadd( 3.93242, -256.182, 38.01, 0.15 ) }
    dend_24 { pt3dadd( 3.92634, -256.814, 38.0903, 0.29 ) }
    dend_24 { pt3dadd( 3.86829, -258.05, 38.1982, 0.07 ) }
    dend_24 { pt3dadd( 3.80219, -259.086, 38.2406, 1.47 ) }
    dend_24 { pt3dadd( 3.62149, -261.403, 38.2675, 0.07 ) }
    dend_24 { pt3dadd( 3.53315, -262.411, 38.2896, 0.07 ) }
    dend_24 { pt3dadd( 3.44132, -263.153, 38.2988, 1.11 ) }
    dend_24 { pt3dadd( 3.14922, -265.07, 38.2811, 0.07 ) }
    dend_24 { pt3dadd( 3.00147, -265.881, 38.2514, 0.74 ) }
    dend_24 { pt3dadd( 2.84201, -266.616, 38.199, 1.92 ) }
    dend_24 { pt3dadd( 2.3318, -268.627, 38.0067, 0.15 ) }
    dend_24 { pt3dadd( 1.91114, -270.167, 37.8427, 0.22 ) }
    dend_24 { pt3dadd( 1.42143, -271.943, 37.655, 0.22 ) }
    dend_24 { pt3dadd( 1.19305, -272.721, 37.5657, 0.81 ) }
    dend_24 { pt3dadd( 0.895525, -273.727, 37.4552, 1.84 ) }
    dend_24 { pt3dadd( 0.311422, -275.892, 37.2968, 0.07 ) }
    dend_24 { pt3dadd( 0.155954, -276.532, 37.2695, 0.29 ) }
    dend_24 { pt3dadd( -0.127914, -278.151, 37.3934, 0.07 ) }
    dend_24 { pt3dadd( -0.283601, -279.184, 37.5391, 0.07 ) }
    dend_24 { pt3dadd( -0.431844, -280.359, 37.7621, 1.55 ) }
    dend_24 { pt3dadd( -0.587999, -282.164, 38.2103, 0.07 ) }
    dend_24 { pt3dadd( -0.615763, -282.808, 38.4039, 0.07 ) }
    dend_24 { pt3dadd( -0.621572, -284.497, 38.9592, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -6.38051, -125.643, 24.6797, 0.22 ) }
    dend_21 { pt3dadd( -6.95611, -126.903, 25.6346, 0.22 ) }
    dend_21 { pt3dadd( -7.38623, -128.122, 26.4093, 0.44 ) }
    dend_21 { pt3dadd( -7.55144, -128.708, 26.7375, 0.15 ) }
    dend_21 { pt3dadd( -7.67186, -129.196, 27.0028, 0.15 ) }
    dend_21 { pt3dadd( -7.73314, -129.423, 27.1294, 0.37 ) }
    dend_21 { pt3dadd( -7.94607, -130.078, 27.5093, 0.44 ) }
    dend_21 { pt3dadd( -8.16012, -130.631, 27.83, 0.15 ) }
    dend_21 { pt3dadd( -8.25574, -130.855, 27.9874, 0.22 ) }
    dend_21 { pt3dadd( -8.39862, -131.221, 28.313, 0.22 ) }
    dend_21 { pt3dadd( -8.57381, -131.696, 28.7986, 0.22 ) }
    dend_21 { pt3dadd( -8.71565, -132.129, 29.2728, 0.81 ) }
    dend_21 { pt3dadd( -8.92933, -132.922, 30.1407, 0.22 ) }
    dend_21 { pt3dadd( -9.11793, -133.837, 31.1069, 0.96 ) }
    dend_21 { pt3dadd( -9.26628, -134.75, 32.0087, 2.21 ) }
    dend_21 { pt3dadd( -9.48173, -136.569, 33.6514, 0.22 ) }
    dend_21 { pt3dadd( -9.53372, -137.367, 34.3289, 0.22 ) }
    dend_21 { pt3dadd( -9.54915, -137.924, 34.7697, 0.22 ) }
    dend_21 { pt3dadd( -9.55652, -138.353, 35.076, 0.22 ) }
    dend_21 { pt3dadd( -9.60654, -139.025, 35.5042, 0.22 ) }
    dend_21 { pt3dadd( -9.69207, -139.542, 35.831, 0.22 ) }
    dend_21 { pt3dadd( -9.82382, -140.047, 36.1668, 0.88 ) }
    dend_21 { pt3dadd( -10.0367, -140.656, 36.6338, 1.4 ) }
    dend_21 { pt3dadd( -10.3896, -141.452, 37.3807, 2.14 ) }
    dend_21 { pt3dadd( -11.0362, -142.724, 38.7689, 0.52 ) }
    dend_21 { pt3dadd( -11.5189, -143.583, 39.8242, 0.22 ) }
    dend_21 { pt3dadd( -11.7961, -144.038, 40.4195, 0.22 ) }
    dend_21 { pt3dadd( -12.1908, -144.616, 41.2239, 1.11 ) }
    dend_21 { pt3dadd( -12.8387, -145.434, 42.5229, 1.99 ) }
    dend_21 { pt3dadd( -13.1849, -145.794, 43.2057, 1.99 ) }
    dend_21 { pt3dadd( -13.3019, -145.889, 43.452, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -35.4166, -120.493, 8.54369, 0.22 ) }
    dend_19 { pt3dadd( -36.1493, -121.593, 7.99018, 0.22 ) }
    dend_19 { pt3dadd( -36.5419, -122.206, 7.70299, 0.22 ) }
    dend_19 { pt3dadd( -36.8824, -122.735, 7.44803, 1.33 ) }
    dend_19 { pt3dadd( -37.504, -123.709, 6.97402, 0.15 ) }
    dend_19 { pt3dadd( -37.7254, -124.066, 6.80508, 0.15 ) }
    dend_19 { pt3dadd( -37.8851, -124.334, 6.68425, 0.37 ) }
    dend_19 { pt3dadd( -38.1518, -124.807, 6.52074, 0.37 ) }
    dend_19 { pt3dadd( -38.5308, -125.565, 6.29668, 0.22 ) }
    dend_19 { pt3dadd( -38.6926, -125.918, 6.19086, 0.15 ) }
    dend_19 { pt3dadd( -38.8055, -126.189, 6.10725, 0.15 ) }
    dend_19 { pt3dadd( -38.8905, -126.391, 6.05483, 0.15 ) }
    dend_19 { pt3dadd( -39.0902, -126.875, 5.94565, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( -39.2917, -127.391, 5.84967, 0.74 ) }
    dend_19 { pt3dadd( -39.6179, -128.241, 5.69841, 0.15 ) }
    dend_19 { pt3dadd( -39.8166, -128.764, 5.54866, 0.15 ) }
    dend_19 { pt3dadd( -40.0962, -129.488, 5.27247, 0.15 ) }
    dend_19 { pt3dadd( -40.1922, -129.752, 5.14678, 0.15 ) }
    dend_19 { pt3dadd( -40.3828, -130.319, 4.82962, 1.33 ) }
    dend_19 { pt3dadd( -40.5753, -130.818, 4.53206, 2.14 ) }
    dend_19 { pt3dadd( -41.1438, -132.043, 3.73845, 0.15 ) }
    dend_19 { pt3dadd( -41.457, -132.592, 3.3468, 1.25 ) }
    dend_19 { pt3dadd( -41.9497, -133.349, 2.7651, 0.07 ) }
    dend_19 { pt3dadd( -42.1534, -133.635, 2.55228, 0.22 ) }
    dend_19 { pt3dadd( -42.8282, -134.51, 1.91025, 0.22 ) }
    dend_19 { pt3dadd( -43.1886, -134.931, 1.60351, 1.25 ) }
    dend_19 { pt3dadd( -43.4356, -135.19, 1.41992, 1.25 ) }
    dend_19 { pt3dadd( -44.1925, -136.115, 0.820053, 0.07 ) }
    dend_19 { pt3dadd( -44.6657, -136.816, 0.411162, 0.07 ) }
    dend_19 { pt3dadd( -44.9304, -137.383, 0.108992, 0.07 ) }
    dend_19 { pt3dadd( -45.0686, -137.978, -0.206071, 0.07 ) }
    dend_19 { pt3dadd( -45.1127, -138.323, -0.380856, 1.18 ) }
    dend_19 { pt3dadd( -45.1798, -139.623, -1.01867, 0.07 ) }
    dend_19 { pt3dadd( -45.1785, -139.914, -1.15444, 0.88 ) }
    dend_19 { pt3dadd( -45.1479, -140.717, -1.50895, 1.92 ) }
    dend_19 { pt3dadd( -45.0818, -142.123, -2.10484, 0.15 ) }
    dend_19 { pt3dadd( -45.0567, -142.571, -2.28836, 0.22 ) }
    dend_19 { pt3dadd( -45.037, -143.274, -2.58893, 0.07 ) }
    dend_19 { pt3dadd( -45.034, -143.654, -2.74929, 0.07 ) }
    dend_19 { pt3dadd( -45.0261, -144.258, -2.96868, 0.29 ) }
    dend_19 { pt3dadd( -45.0229, -145.488, -3.31189, 0.07 ) }
    dend_19 { pt3dadd( -45.052, -146.57, -3.52326, 0.22 ) }
    dend_19 { pt3dadd( -45.092, -147.319, -3.64401, 1.55 ) }
    dend_19 { pt3dadd( -45.2408, -148.67, -3.79556, 0.22 ) }
    dend_19 { pt3dadd( -45.3797, -149.498, -3.8584, 0.07 ) }
    dend_19 { pt3dadd( -45.528, -150.235, -3.88319, 0.07 ) }
    dend_19 { pt3dadd( -45.6627, -150.727, -3.85419, 0.07 ) }
    dend_19 { pt3dadd( -45.8399, -151.17, -3.79611, 0.15 ) }
    dend_19 { pt3dadd( -46.1895, -151.825, -3.65782, 0.07 ) }
    dend_19 { pt3dadd( -46.4581, -152.113, -3.5853, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -35.4166, -120.493, 8.54369, 0.29 ) }
    dend_16 { pt3dadd( -36.7549, -120.245, 7.78352, 0.29 ) }
    dend_16 { pt3dadd( -37.3931, -120.1, 7.33671, 0.22 ) }
    dend_16 { pt3dadd( -37.7846, -120.006, 7.0213, 0.74 ) }
    dend_16 { pt3dadd( -38.2469, -119.886, 6.62265, 0.96 ) }
    dend_16 { pt3dadd( -38.79, -119.753, 6.14205, 0.29 ) }
    dend_16 { pt3dadd( -39.3488, -119.615, 5.63622, 0.15 ) }
    dend_16 { pt3dadd( -39.9422, -119.462, 5.0596, 0.15 ) }
    dend_16 { pt3dadd( -40.455, -119.352, 4.59433, 1.03 ) }
    dend_16 { pt3dadd( -41.1111, -119.233, 4.03726, 0.29 ) }
    dend_16 { pt3dadd( -42.026, -119.084, 3.3114, 0.22 ) }
    dend_16 { pt3dadd( -42.5389, -119.014, 2.93359, 1.11 ) }
    dend_16 { pt3dadd( -43.3767, -118.921, 2.37382, 2.14 ) }
    dend_16 { pt3dadd( -44.9782, -118.768, 1.39186, 0.22 ) }
    dend_16 { pt3dadd( -45.3879, -118.734, 1.15355, 0.81 ) }
    dend_16 { pt3dadd( -46.2103, -118.675, 0.681939, 1.7 ) }
    dend_16 { pt3dadd( -47.3285, -118.589, 0.054965, 0.22 ) }
    dend_16 { pt3dadd( -47.7964, -118.553, -0.218363, 0.88 ) }
    dend_16 { pt3dadd( -48.4958, -118.505, -0.652822, 1.55 ) }
    dend_16 { pt3dadd( -49.0095, -118.466, -0.993628, 0.59 ) }
    dend_16 { pt3dadd( -49.9694, -118.399, -1.65402, 0.15 ) }
    dend_16 { pt3dadd( -50.6619, -118.371, -2.16793, 0.88 ) }
    dend_16 { pt3dadd( -51.3421, -118.348, -2.71865, 0.15 ) }
    dend_16 { pt3dadd( -51.8742, -118.317, -3.18734, 0.22 ) }
    dend_16 { pt3dadd( -52.3356, -118.28, -3.62392, 0.81 ) }
    dend_16 { pt3dadd( -53.0148, -118.227, -4.29142, 1.99 ) }
    dend_16 { pt3dadd( -53.9494, -118.191, -5.27422, 0.22 ) }
    dend_16 { pt3dadd( -54.4012, -118.185, -5.76408, 0.22 ) }
    dend_16 { pt3dadd( -54.8565, -118.173, -6.26957, 0.52 ) }
    dend_16 { pt3dadd( -55.3241, -118.153, -6.80616, 1.18 ) }
    dend_16 { pt3dadd( -56.0593, -118.105, -7.66116, 1.99 ) }
    dend_16 { pt3dadd( -56.9919, -118.021, -8.79592, 0.15 ) }
    dend_16 { pt3dadd( -57.3369, -117.984, -9.21923, 0.29 ) }
    dend_16 { pt3dadd( -57.8933, -117.95, -9.91509, 0.07 ) }
    dend_16 { pt3dadd( -58.2589, -117.948, -10.4179, 0.22 ) }
    dend_16 { pt3dadd( -58.5157, -117.954, -10.8427, 0.22 ) }
    dend_16 { pt3dadd( -58.705, -117.982, -11.2957, 0.22 ) }
    dend_16 { pt3dadd( -58.7636, -118.01, -11.4931, 0.22 ) }
    dend_16 { pt3dadd( -58.8588, -118.167, -12.0485, 0.22 ) }
    dend_16 { pt3dadd( -58.9067, -118.466, -12.673, 0.22 ) }
    dend_16 { pt3dadd( -58.9216, -118.727, -13.1317, 0.22 ) }
    dend_16 { pt3dadd( -58.9857, -119.363, -14.134, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 60.882, 27.877, 70.194, 0.22 ) }
    dend_9 { pt3dadd( 62.1005, 27.9593, 71.546, 0.22 ) }
    dend_9 { pt3dadd( 62.3718, 27.9539, 71.8496, 0.22 ) }
    dend_9 { pt3dadd( 63.0193, 27.9632, 72.5323, 0.59 ) }
    dend_9 { pt3dadd( 63.6347, 28.0051, 73.1211, 0.44 ) }
    dend_9 { pt3dadd( 63.9796, 28.0317, 73.4186, 0.44 ) }
    dend_9 { pt3dadd( 64.4323, 28.0548, 73.7462, 0.15 ) }
    dend_9 { pt3dadd( 64.912, 28.0894, 73.9957, 0.15 ) }
    dend_9 { pt3dadd( 65.5484, 28.0889, 74.2483, 0.15 ) }
    dend_9 { pt3dadd( 66.0709, 28.0536, 74.3915, 0.96 ) }
    dend_9 { pt3dadd( 66.7812, 27.9908, 74.5401, 1.55 ) }
    dend_9 { pt3dadd( 67.7787, 27.9495, 74.7399, 0.22 ) }
    dend_9 { pt3dadd( 68.4986, 27.9233, 74.8761, 0.37 ) }
    dend_9 { pt3dadd( 69.0603, 27.8787, 74.972, 0.22 ) }
    dend_9 { pt3dadd( 69.5258, 27.8209, 75.053, 0.22 ) }
    dend_9 { pt3dadd( 70.0523, 27.7546, 75.1502, 0.37 ) }
    dend_9 { pt3dadd( 71.0445, 27.642, 75.3699, 0.22 ) }
    dend_9 { pt3dadd( 71.5943, 27.5978, 75.5258, 0.22 ) }
    dend_9 { pt3dadd( 72.3117, 27.5772, 75.7676, 0.22 ) }
    dend_9 { pt3dadd( 72.7727, 27.5801, 75.9406, 0.96 ) }
    dend_9 { pt3dadd( 73.5569, 27.5992, 76.2679, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 74.8377, 27.6126, 76.8469, 0.22 ) }
    dend_9 { pt3dadd( 75.6367, 27.5852, 77.2414, 0.15 ) }
    dend_9 { pt3dadd( 76.4091, 27.5555, 77.6697, 0.15 ) }
    dend_9 { pt3dadd( 76.6637, 27.5427, 77.8241, 0.15 ) }
    dend_9 { pt3dadd( 77.0198, 27.5064, 78.0455, 0.15 ) }
    dend_9 { pt3dadd( 77.3627, 27.4532, 78.2336, 0.15 ) }
    dend_9 { pt3dadd( 78.0103, 27.3287, 78.5165, 0.15 ) }
    dend_9 { pt3dadd( 78.4187, 27.2083, 78.6654, 0.81 ) }
    dend_9 { pt3dadd( 78.9018, 27.0218, 78.8335, 1.47 ) }
    dend_9 { pt3dadd( 79.2572, 26.8752, 78.958, 1.47 ) }
    dend_9 { pt3dadd( 80.3248, 26.4265, 79.3083, 0.15 ) }
    dend_9 { pt3dadd( 80.5931, 26.3227, 79.405, 0.22 ) }
    dend_9 { pt3dadd( 81.3001, 26.0297, 79.6788, 0.37 ) }
    dend_9 { pt3dadd( 82.0067, 25.7033, 79.9697, 1.03 ) }
    dend_9 { pt3dadd( 82.6863, 25.3823, 80.3332, 1.77 ) }
    dend_9 { pt3dadd( 83.0444, 25.22, 80.5763, 1.77 ) }
    dend_9 { pt3dadd( 84.096, 24.7693, 81.4343, 0.22 ) }
    dend_9 { pt3dadd( 84.4885, 24.6426, 81.7816, 0.22 ) }
    dend_9 { pt3dadd( 85.1061, 24.5238, 82.3382, 1.11 ) }
    dend_9 { pt3dadd( 86.3586, 24.3894, 83.5056, 0.22 ) }
    dend_9 { pt3dadd( 86.8709, 24.3472, 84.0227, 0.22 ) }
    dend_9 { pt3dadd( 87.3594, 24.3075, 84.5468, 0.66 ) }
    dend_9 { pt3dadd( 88.0441, 24.25, 85.2746, 0.88 ) }
    dend_9 { pt3dadd( 88.5148, 24.2255, 85.763, 1.7 ) }
    dend_9 { pt3dadd( 89.5124, 24.2201, 86.7926, 0.44 ) }
    dend_9 { pt3dadd( 90.2597, 24.2412, 87.5249, 0.74 ) }
    dend_9 { pt3dadd( 90.8164, 24.2901, 88.0661, 1.25 ) }
    dend_9 { pt3dadd( 91.7361, 24.4693, 88.9798, 0.22 ) }
    dend_9 { pt3dadd( 92.0571, 24.563, 89.3034, 0.22 ) }
    dend_9 { pt3dadd( 92.6078, 24.7959, 89.866, 0.37 ) }
    dend_9 { pt3dadd( 92.9909, 24.9986, 90.2201, 0.37 ) }
    dend_9 { pt3dadd( 93.6224, 25.354, 90.7303, 1.47 ) }
    dend_9 { pt3dadd( 94.3996, 25.7764, 91.3161, 0.29 ) }
    dend_9 { pt3dadd( 94.777, 25.9687, 91.5796, 0.29 ) }
    dend_9 { pt3dadd( 94.9855, 26.0669, 91.7242, 0.29 ) }
    dend_9 { pt3dadd( 95.6544, 26.3684, 92.2336, 0.15 ) }
    dend_9 { pt3dadd( 96.0684, 26.5744, 92.6175, 0.22 ) }
    dend_9 { pt3dadd( 96.379, 26.7515, 92.9698, 0.74 ) }
    dend_9 { pt3dadd( 96.718, 26.997, 93.459, 1.25 ) }
    dend_9 { pt3dadd( 97.2454, 27.4974, 94.4122, 0.22 ) }
    dend_9 { pt3dadd( 97.6326, 27.9337, 95.2209, 0.96 ) }
    dend_9 { pt3dadd( 97.9664, 28.3368, 95.9825, 0.96 ) }
    dend_9 { pt3dadd( 98.2414, 28.6266, 96.6069, 0.29 ) }
    dend_9 { pt3dadd( 98.5884, 28.926, 97.3996, 0.29 ) }
    dend_9 { pt3dadd( 98.8841, 29.1244, 98.1039, 0.29 ) }
    dend_9 { pt3dadd( 99.1665, 29.261, 98.7907, 0.29 ) }
    dend_9 { pt3dadd( 99.3998, 29.3766, 99.5156, 0.29 ) }
    dend_9 { pt3dadd( 99.5285, 29.4651, 100.201, 0.29 ) }
    dend_9 { pt3dadd( 99.5674, 29.5353, 100.88, 0.29 ) }
    dend_9 { pt3dadd( 99.5656, 29.5756, 101.312, 0.29 ) }
    dend_9 { pt3dadd( 99.5494, 29.6425, 101.887, 0.29 ) }
    dend_9 { pt3dadd( 99.5, 29.8039, 102.989, 0.59 ) }
    dend_9 { pt3dadd( 99.4646, 29.9479, 103.822, 0.59 ) }
    dend_9 { pt3dadd( 99.455, 30.1328, 104.86, 0.59 ) }
    dend_9 { pt3dadd( 99.4892, 30.2478, 105.593, 0.59 ) }
    dend_9 { pt3dadd( 99.6095, 30.35, 106.505, 0.59 ) }
    dend_9 { pt3dadd( 99.756, 30.3841, 107.139, 0.59 ) }
    dend_9 { pt3dadd( 99.8442, 30.3874, 107.383, 0.59 ) }
    dend_9 { pt3dadd( 100.17, 30.3659, 108.019, 0.59 ) }
    dend_9 { pt3dadd( 100.349, 30.3278, 108.274, 0.59 ) }
    dend_9 { pt3dadd( 100.825, 30.179, 108.799, 0.22 ) }
    dend_9 { pt3dadd( 101.217, 30.0372, 109.126, 0.22 ) }
    dend_9 { pt3dadd( 101.763, 29.8891, 109.588, 0.22 ) }
    dend_9 { pt3dadd( 102.151, 29.8361, 109.953, 0.22 ) }
    dend_9 { pt3dadd( 102.766, 29.8402, 110.536, 0.22 ) }
    dend_9 { pt3dadd( 103.202, 29.9098, 110.99, 0.22 ) }
    dend_9 { pt3dadd( 103.657, 30.0497, 111.54, 1.11 ) }
    dend_9 { pt3dadd( 104.474, 30.4054, 112.662, 0.22 ) }
    dend_9 { pt3dadd( 104.913, 30.6318, 113.335, 0.22 ) }
    dend_9 { pt3dadd( 105.424, 30.9387, 114.186, 0.22 ) }
    dend_9 { pt3dadd( 105.817, 31.1427, 114.838, 0.22 ) }
    dend_9 { pt3dadd( 106.135, 31.2029, 115.377, 0.22 ) }
    dend_9 { pt3dadd( 106.292, 31.1475, 115.633, 0.22 ) }
    dend_9 { pt3dadd( 106.621, 30.9083, 116.101, 0.59 ) }
    dend_9 { pt3dadd( 107.141, 30.4651, 116.771, 0.59 ) }
    dend_9 { pt3dadd( 107.756, 29.9512, 117.532, 0.15 ) }
    dend_9 { pt3dadd( 108.357, 29.4596, 118.248, 0.66 ) }
    dend_9 { pt3dadd( 108.994, 28.9676, 119.017, 0.15 ) }
    dend_9 { pt3dadd( 109.506, 28.6056, 119.657, 0.66 ) }
    dend_9 { pt3dadd( 109.931, 28.3544, 120.19, 1.03 ) }
    dend_9 { pt3dadd( 110.756, 27.9415, 121.165, 0.22 ) }
    dend_9 { pt3dadd( 111.46, 27.6391, 121.93, 0.15 ) }
    dend_9 { pt3dadd( 112.175, 27.3884, 122.651, 0.66 ) }
    dend_9 { pt3dadd( 112.623, 27.285, 123.097, 1.25 ) }
    dend_9 { pt3dadd( 113.585, 27.1522, 124.035, 0.22 ) }
    dend_9 { pt3dadd( 114.297, 27.0929, 124.71, 0.15 ) }
    dend_9 { pt3dadd( 114.93, 27.0788, 125.254, 0.37 ) }
    dend_9 { pt3dadd( 115.315, 27.0967, 125.553, 0.59 ) }
    dend_9 { pt3dadd( 116.303, 27.1627, 126.271, 0.15 ) }
    dend_9 { pt3dadd( 116.902, 27.1902, 126.716, 0.88 ) }
    dend_9 { pt3dadd( 117.929, 27.2225, 127.519, 0.22 ) }
    dend_9 { pt3dadd( 118.334, 27.2481, 127.846, 0.96 ) }
    dend_9 { pt3dadd( 118.669, 27.2774, 128.126, 0.66 ) }
    dend_9 { pt3dadd( 119.376, 27.3444, 128.695, 0.15 ) }
    dend_9 { pt3dadd( 120.078, 27.4454, 129.281, 0.81 ) }
    dend_9 { pt3dadd( 120.543, 27.5693, 129.72, 1.25 ) }
    dend_9 { pt3dadd( 121.163, 27.8204, 130.331, 0.15 ) }
    dend_9 { pt3dadd( 121.92, 28.1737, 131.109, 0.15 ) }
    dend_9 { pt3dadd( 122.148, 28.2909, 131.353, 0.29 ) }
    dend_9 { pt3dadd( 122.701, 28.6286, 131.972, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_9 { pt3dadd( 122.966, 28.8083, 132.282, 0.96 ) }
    dend_9 { pt3dadd( 123.459, 29.1133, 132.891, 0.29 ) }
    dend_9 { pt3dadd( 124.122, 29.4281, 133.7, 0.74 ) }
    dend_9 { pt3dadd( 124.778, 29.682, 134.45, 0.15 ) }
    dend_9 { pt3dadd( 125.225, 29.8361, 134.946, 0.37 ) }
    dend_9 { pt3dadd( 125.496, 29.925, 135.219, 0.37 ) }
    dend_9 { pt3dadd( 125.968, 30.0967, 135.7, 0.22 ) }
    dend_9 { pt3dadd( 126.504, 30.3088, 136.224, 0.22 ) }
    dend_9 { pt3dadd( 126.951, 30.4537, 136.6, 0.37 ) }
    dend_9 { pt3dadd( 127.482, 30.604, 136.995, 0.37 ) }
    dend_9 { pt3dadd( 128.085, 30.7699, 137.389, 1.33 ) }
    dend_9 { pt3dadd( 129.257, 31.1355, 138.072, 0.22 ) }
    dend_9 { pt3dadd( 130.03, 31.4397, 138.491, 1.03 ) }
    dend_9 { pt3dadd( 130.984, 31.8697, 138.968, 0.15 ) }
    dend_9 { pt3dadd( 131.31, 32.0417, 139.119, 0.15 ) }
    dend_9 { pt3dadd( 132.145, 32.5898, 139.479, 0.15 ) }
    dend_9 { pt3dadd( 132.724, 33.0793, 139.743, 1.03 ) }
    dend_9 { pt3dadd( 133.188, 33.605, 139.965, 0.15 ) }
    dend_9 { pt3dadd( 133.497, 34.0335, 140.135, 0.15 ) }
    dend_9 { pt3dadd( 133.914, 34.699, 140.438, 0.15 ) }
    dend_9 { pt3dadd( 134.351, 35.3697, 140.843, 0.88 ) }
    dend_9 { pt3dadd( 134.779, 36.0107, 141.315, 0.29 ) }
    dend_9 { pt3dadd( 135.098, 36.4694, 141.699, 0.81 ) }
    dend_9 { pt3dadd( 135.256, 36.6821, 141.886, 0.81 ) }
    dend_9 { pt3dadd( 135.853, 37.6084, 142.636, 0.22 ) }
    dend_9 { pt3dadd( 136.232, 38.3174, 143.15, 0.07 ) }
    dend_9 { pt3dadd( 136.452, 38.9133, 143.51, 0.15 ) }
    dend_9 { pt3dadd( 136.522, 39.2364, 143.671, 0.66 ) }
    dend_9 { pt3dadd( 136.592, 39.9106, 143.964, 1.55 ) }
    dend_9 { pt3dadd( 136.67, 41.6132, 144.612, 0.15 ) }
    dend_9 { pt3dadd( 136.649, 42.4282, 144.848, 0.15 ) }
    dend_9 { pt3dadd( 136.572, 43.1793, 145.041, 0.66 ) }
    dend_9 { pt3dadd( 136.483, 43.7298, 145.189, 0.15 ) }
    dend_9 { pt3dadd( 136.412, 44.0551, 145.279, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 60.882, 27.877, 70.194, 0.29 ) }
    dend_8 { pt3dadd( 60.2782, 28.5788, 71.2944, 0.29 ) }
    dend_8 { pt3dadd( 59.8048, 29.1306, 72.0448, 0.29 ) }
    dend_8 { pt3dadd( 59.3079, 29.7427, 72.7894, 0.81 ) }
    dend_8 { pt3dadd( 59.0242, 30.0751, 73.1876, 1.4 ) }
    dend_8 { pt3dadd( 58.3129, 30.8314, 74.124, 0.07 ) }
    dend_8 { pt3dadd( 57.9285, 31.211, 74.5992, 1.03 ) }
    dend_8 { pt3dadd( 57.1607, 31.8812, 75.41, 0.15 ) }
    dend_8 { pt3dadd( 56.5105, 32.467, 76.0631, 1.55 ) }
    dend_8 { pt3dadd( 55.9078, 33.0522, 76.6854, 0.22 ) }
    dend_8 { pt3dadd( 55.5151, 33.4763, 77.1232, 0.22 ) }
    dend_8 { pt3dadd( 55.1108, 33.9743, 77.6152, 0.81 ) }
    dend_8 { pt3dadd( 54.7061, 34.5357, 78.1407, 0.07 ) }
    dend_8 { pt3dadd( 54.3936, 35.0908, 78.6127, 0.59 ) }
    dend_8 { pt3dadd( 54.1937, 35.6455, 78.9986, 0.07 ) }
    dend_8 { pt3dadd( 54.1315, 35.9948, 79.2076, 0.52 ) }
    dend_8 { pt3dadd( 54.0722, 37.1755, 79.8788, 0.07 ) }
    dend_8 { pt3dadd( 54.0996, 37.5678, 80.099, 0.96 ) }
    dend_8 { pt3dadd( 54.1667, 37.934, 80.313, 0.96 ) }
    dend_8 { pt3dadd( 54.4362, 38.9052, 80.9212, 0.22 ) }
    dend_8 { pt3dadd( 54.7196, 39.577, 81.3615, 0.22 ) }
    dend_8 { pt3dadd( 55.0508, 40.1401, 81.7693, 0.96 ) }
    dend_8 { pt3dadd( 55.4706, 40.7233, 82.2254, 1.77 ) }
    dend_8 { pt3dadd( 56.0693, 41.5095, 82.8972, 0.22 ) }
    dend_8 { pt3dadd( 56.4481, 41.9801, 83.3213, 0.15 ) }
    dend_8 { pt3dadd( 56.7771, 42.3753, 83.6633, 0.15 ) }
    dend_8 { pt3dadd( 56.9444, 42.59, 83.8423, 0.15 ) }
    dend_8 { pt3dadd( 57.4593, 43.3419, 84.4424, 0.88 ) }
    dend_8 { pt3dadd( 57.9064, 44.2236, 85.1255, 0.22 ) }
    dend_8 { pt3dadd( 58.0884, 44.7234, 85.5084, 0.81 ) }
    dend_8 { pt3dadd( 58.3393, 45.5768, 86.1664, 0.15 ) }
    dend_8 { pt3dadd( 58.5019, 46.1918, 86.6386, 0.66 ) }
    dend_8 { pt3dadd( 58.6688, 46.872, 87.1553, 1.84 ) }
    dend_8 { pt3dadd( 59.0014, 48.1383, 88.1142, 0.15 ) }
    dend_8 { pt3dadd( 59.1835, 48.8597, 88.6423, 0.15 ) }
    dend_8 { pt3dadd( 59.3311, 49.4467, 89.0623, 0.15 ) }
    dend_8 { pt3dadd( 59.4699, 49.9214, 89.4, 0.66 ) }
    dend_8 { pt3dadd( 59.7987, 50.8196, 89.9824, 0.15 ) }
    dend_8 { pt3dadd( 60.1783, 51.6463, 90.4764, 0.15 ) }
    dend_8 { pt3dadd( 60.3986, 52.0595, 90.6981, 0.66 ) }
    dend_8 { pt3dadd( 60.5927, 52.4619, 90.8907, 0.22 ) }
    dend_8 { pt3dadd( 60.8487, 53.1123, 91.1907, 0.22 ) }
    dend_8 { pt3dadd( 60.9761, 53.5011, 91.3611, 0.81 ) }
    dend_8 { pt3dadd( 61.0506, 53.8159, 91.4877, 0.81 ) }
    dend_8 { pt3dadd( 61.1435, 54.705, 91.8409, 0.07 ) }
    dend_8 { pt3dadd( 61.1439, 55.2445, 92.0652, 0.66 ) }
    dend_8 { pt3dadd( 61.0025, 56.3834, 92.5723, 0.15 ) }
    dend_8 { pt3dadd( 60.8282, 57.1478, 92.9246, 1.4 ) }
    dend_8 { pt3dadd( 60.5014, 58.2105, 93.4485, 0.15 ) }
    dend_8 { pt3dadd( 60.2276, 58.9186, 93.8199, 0.15 ) }
    dend_8 { pt3dadd( 59.9376, 59.5126, 94.1501, 1.18 ) }
    dend_8 { pt3dadd( 59.3501, 60.4233, 94.7266, 0.22 ) }
    dend_8 { pt3dadd( 58.8113, 61.0618, 95.1732, 0.15 ) }
    dend_8 { pt3dadd( 58.4672, 61.4257, 95.4438, 0.15 ) }
    dend_8 { pt3dadd( 58.1203, 61.7778, 95.7105, 0.74 ) }
    dend_8 { pt3dadd( 57.7008, 62.2132, 96.0214, 1.25 ) }
    dend_8 { pt3dadd( 56.8503, 63.132, 96.6584, 0.22 ) }
    dend_8 { pt3dadd( 56.4033, 63.6399, 97.0084, 1.11 ) }
    dend_8 { pt3dadd( 55.64, 64.5498, 97.6645, 0.22 ) }
    dend_8 { pt3dadd( 55.2272, 65.0797, 98.0476, 1.47 ) }
    dend_8 { pt3dadd( 54.8343, 65.6145, 98.4284, 0.96 ) }
    dend_8 { pt3dadd( 54.3168, 66.3742, 98.9634, 0.22 ) }
    dend_8 { pt3dadd( 53.8791, 67.0683, 99.4448, 0.74 ) }
    dend_8 { pt3dadd( 53.3511, 67.9275, 100.068, 0.15 ) }
    dend_8 { pt3dadd( 53.1227, 68.2919, 100.353, 0.15 ) }
    dend_8 { pt3dadd( 52.8811, 68.69, 100.678, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 42.0952, 5.55774, 50.8796, 0.15 ) }
    dend_6 { pt3dadd( 43.5349, 4.3421, 53.4763, 0.15 ) }
    dend_6 { pt3dadd( 44.0649, 3.99838, 54.0979, 0.22 ) }
    dend_6 { pt3dadd( 44.5062, 3.74838, 54.5345, 0.88 ) }
    dend_6 { pt3dadd( 45.3173, 3.32396, 55.2554, 0.15 ) }
    dend_6 { pt3dadd( 45.8554, 3.05895, 55.7017, 1.18 ) }
    dend_6 { pt3dadd( 46.4543, 2.76915, 56.1889, 2.58 ) }
    dend_6 { pt3dadd( 47.9109, 2.15932, 57.0942, 0.29 ) }
    dend_6 { pt3dadd( 48.585, 1.88622, 57.4991, 0.96 ) }
    dend_6 { pt3dadd( 49.0884, 1.68494, 57.8112, 1.18 ) }
    dend_6 { pt3dadd( 50.5067, 1.14129, 58.7815, 0.07 ) }
    dend_6 { pt3dadd( 51.0268, 0.962444, 59.1931, 0.07 ) }
    dend_6 { pt3dadd( 51.274, 0.878704, 59.4162, 0.07 ) }
    dend_6 { pt3dadd( 51.7103, 0.711804, 59.8939, 0.74 ) }
    dend_6 { pt3dadd( 52.0522, 0.553374, 60.3316, 1.03 ) }
    dend_6 { pt3dadd( 52.8023, 0.138469, 61.4449, 0.15 ) }
    dend_6 { pt3dadd( 53.3872, -0.280193, 62.4568, 1.18 ) }
    dend_6 { pt3dadd( 53.5992, -0.47684, 62.8745, 1.4 ) }
    dend_6 { pt3dadd( 54.0023, -0.956839, 63.7977, 0.15 ) }
    dend_6 { pt3dadd( 54.2525, -1.37638, 64.4831, 0.15 ) }
    dend_6 { pt3dadd( 54.3719, -1.63516, 64.8596, 0.88 ) }
    dend_6 { pt3dadd( 54.498, -1.9709, 65.3238, 0.29 ) }
    dend_6 { pt3dadd( 54.7011, -2.58711, 66.1831, 0.15 ) }
    dend_6 { pt3dadd( 54.8245, -3.00055, 66.8256, 0.81 ) }
    dend_6 { pt3dadd( 54.9362, -3.43489, 67.5747, 1.62 ) }
    dend_6 { pt3dadd( 55.0652, -4.27057, 69.1025, 0.15 ) }
    dend_6 { pt3dadd( 55.094, -4.70619, 69.9358, 0.15 ) }
    dend_6 { pt3dadd( 55.0887, -5.09438, 70.6811, 0.22 ) }
    dend_6 { pt3dadd( 55.0294, -5.57709, 71.5953, 0.22 ) }
    dend_6 { pt3dadd( 54.9645, -5.8961, 72.1751, 0.22 ) }
    dend_6 { pt3dadd( 54.9016, -6.19707, 72.7383, 1.18 ) }
    dend_6 { pt3dadd( 54.8355, -6.58122, 73.4179, 1.62 ) }
    dend_6 { pt3dadd( 54.8535, -7.30685, 74.5994, 0.22 ) }
    dend_6 { pt3dadd( 54.9672, -7.6677, 75.2136, 0.22 ) }
    dend_6 { pt3dadd( 55.0896, -7.85854, 75.5748, 0.44 ) }
    dend_6 { pt3dadd( 55.4874, -8.25489, 76.4481, 0.15 ) }
    dend_6 { pt3dadd( 55.8218, -8.49035, 77.047, 1.33 ) }
    dend_6 { pt3dadd( 56.5384, -8.91386, 78.1879, 0.15 ) }
    dend_6 { pt3dadd( 57.3153, -9.32891, 79.2997, 0.22 ) }
    dend_6 { pt3dadd( 57.7339, -9.57996, 79.8555, 0.22 ) }
    dend_6 { pt3dadd( 57.9504, -9.72383, 80.1305, 0.22 ) }
    dend_6 { pt3dadd( 58.3231, -10.0203, 80.5808, 0.74 ) }
    dend_6 { pt3dadd( 58.7197, -10.366, 81.0113, 1.25 ) }
    dend_6 { pt3dadd( 59.0609, -10.672, 81.3095, 1.25 ) }
    dend_6 { pt3dadd( 60.1529, -11.7516, 82.1338, 0.22 ) }
    dend_6 { pt3dadd( 60.6283, -12.2376, 82.5015, 0.22 ) }
    dend_6 { pt3dadd( 61.0231, -12.6515, 82.8231, 1.03 ) }
    dend_6 { pt3dadd( 61.5182, -13.1738, 83.2302, 1.84 ) }
    dend_6 { pt3dadd( 62.7789, -14.4926, 84.2439, 0.22 ) }
    dend_6 { pt3dadd( 63.3227, -15.0844, 84.6741, 1.11 ) }
    dend_6 { pt3dadd( 64.0806, -15.9867, 85.2973, 0.22 ) }
    dend_6 { pt3dadd( 64.5574, -16.5903, 85.7243, 0.15 ) }
    dend_6 { pt3dadd( 64.8959, -17.0203, 86.0504, 0.15 ) }
    dend_6 { pt3dadd( 65.3852, -17.6534, 86.5646, 1.03 ) }
    dend_6 { pt3dadd( 66.0579, -18.578, 87.3584, 0.22 ) }
    dend_6 { pt3dadd( 66.3771, -18.9976, 87.7866, 0.96 ) }
    dend_6 { pt3dadd( 66.9375, -19.7196, 88.605, 0.15 ) }
    dend_6 { pt3dadd( 67.3034, -20.1952, 89.2221, 0.15 ) }
    dend_6 { pt3dadd( 67.5541, -20.5484, 89.7491, 0.96 ) }
    dend_6 { pt3dadd( 67.8747, -21.0009, 90.5621, 1.92 ) }
    dend_6 { pt3dadd( 68.6539, -21.9529, 92.7163, 0.22 ) }
    dend_6 { pt3dadd( 68.9124, -22.2177, 93.4272, 0.44 ) }
    dend_6 { pt3dadd( 69.3054, -22.6145, 94.5856, 1.18 ) }
    dend_6 { pt3dadd( 69.7458, -23.082, 96.0731, 0.22 ) }
    dend_6 { pt3dadd( 70.1386, -23.518, 97.6827, 0.52 ) }
    dend_6 { pt3dadd( 70.4045, -23.8246, 99.1542, 0.81 ) }
    dend_6 { pt3dadd( 70.5089, -23.9591, 100.177, 0.81 ) }
    dend_6 { pt3dadd( 70.5931, -24.0381, 101.914, 0.52 ) }
    dend_6 { pt3dadd( 70.5521, -23.973, 102.872, 0.52 ) }
    dend_6 { pt3dadd( 70.3824, -23.7331, 103.783, 0.52 ) }
    dend_6 { pt3dadd( 70.0695, -23.3151, 104.549, 0.52 ) }
    dend_6 { pt3dadd( 69.7289, -22.8417, 105.076, 1.25 ) }
    dend_6 { pt3dadd( 69.4096, -22.3181, 105.48, 1.25 ) }
    dend_6 { pt3dadd( 69.0569, -21.5673, 105.934, 0.37 ) }
    dend_6 { pt3dadd( 68.6569, -20.447, 106.584, 0.66 ) }
    dend_6 { pt3dadd( 68.4627, -19.6775, 107.027, 0.37 ) }
    dend_6 { pt3dadd( 68.368, -18.8849, 107.532, 0.66 ) }
    dend_6 { pt3dadd( 68.3792, -18.0267, 108.229, 0.15 ) }
    dend_6 { pt3dadd( 68.4609, -17.5124, 108.764, 0.15 ) }
    dend_6 { pt3dadd( 68.5561, -17.2411, 109.127, 0.15 ) }
    dend_6 { pt3dadd( 68.7505, -16.8384, 109.762, 1.62 ) }
    dend_6 { pt3dadd( 69.1314, -16.1006, 111.016, 0.22 ) }
    dend_6 { pt3dadd( 69.5309, -15.2954, 112.47, 0.88 ) }
    dend_6 { pt3dadd( 69.8168, -14.66, 113.732, 1.4 ) }
    dend_6 { pt3dadd( 70.0288, -14.1078, 114.9, 1.4 ) }
    dend_6 { pt3dadd( 70.2491, -13.3521, 116.531, 0.66 ) }
    dend_6 { pt3dadd( 70.3654, -12.6933, 118.006, 0.29 ) }
    dend_6 { pt3dadd( 70.3781, -12.3887, 118.762, 0.29 ) }
    dend_6 { pt3dadd( 70.3532, -12.1178, 119.525, 0.29 ) }
    dend_6 { pt3dadd( 70.2936, -11.9725, 120.037, 0.29 ) }
    dend_6 { pt3dadd( 70.0382, -11.7655, 121.25, 0.29 ) }
    dend_6 { pt3dadd( 69.7805, -11.7402, 122.098, 0.29 ) }
    dend_6 { pt3dadd( 69.4504, -11.7793, 123.063, 0.29 ) }
    dend_6 { pt3dadd( 69.1889, -11.7654, 123.766, 0.29 ) }
    dend_6 { pt3dadd( 68.9661, -11.6831, 124.265, 0.29 ) }
    dend_6 { pt3dadd( 68.8003, -11.5808, 124.58, 0.29 ) }
    dend_6 { pt3dadd( 68.3877, -11.1926, 125.144, 0.88 ) }
    dend_6 { pt3dadd( 67.9606, -10.6657, 125.619, 1.25 ) }
    dend_6 { pt3dadd( 67.5707, -10.105, 126.033, 0.59 ) }
    dend_6 { pt3dadd( 67.0546, -9.33381, 126.535, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 66.7077, -8.7918, 126.869, 1.4 ) }
    dend_6 { pt3dadd( 65.6429, -7.13021, 127.846, 0.15 ) }
    dend_6 { pt3dadd( 65.228, -6.50148, 128.189, 0.74 ) }
    dend_6 { pt3dadd( 64.4568, -5.36593, 128.765, 0.22 ) }
    dend_6 { pt3dadd( 63.9151, -4.5827, 129.16, 1.03 ) }
    dend_6 { pt3dadd( 63.5339, -4.03324, 129.448, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 42.0952, 5.55774, 50.8796, 0.15 ) }
    dend_5 { pt3dadd( 39.5432, 4.87342, 52.0669, 0.15 ) }
    dend_5 { pt3dadd( 38.5054, 4.56862, 52.5265, 0.07 ) }
    dend_5 { pt3dadd( 37.262, 4.18979, 53.0473, 1.03 ) }
    dend_5 { pt3dadd( 35.5334, 3.64989, 53.7201, 0.07 ) }
    dend_5 { pt3dadd( 33.8206, 3.11739, 54.3509, 0.07 ) }
    dend_5 { pt3dadd( 32.8526, 2.82559, 54.6855, 0.66 ) }
    dend_5 { pt3dadd( 30.9024, 2.1601, 55.1555, 0.07 ) }
    dend_5 { pt3dadd( 29.898, 1.7829, 55.3512, 0.07 ) }
    dend_5 { pt3dadd( 28.4431, 1.20225, 55.5884, 0.07 ) }
    dend_5 { pt3dadd( 28.0115, 1.01393, 55.6271, 0.29 ) }
    dend_5 { pt3dadd( 27.1896, 0.614855, 55.652, 0.81 ) }
    dend_5 { pt3dadd( 24.9289, -0.562513, 55.6142, 0.07 ) }
    dend_5 { pt3dadd( 23.3818, -1.42751, 55.5245, 0.07 ) }
    dend_5 { pt3dadd( 22.3172, -2.06089, 55.4146, 0.15 ) }
    dend_5 { pt3dadd( 20.1733, -3.40941, 55.128, 0.07 ) }
    dend_5 { pt3dadd( 18.8489, -4.29889, 54.9355, 0.07 ) }
    dend_5 { pt3dadd( 18.0879, -4.8456, 54.8223, 0.22 ) }
    dend_5 { pt3dadd( 17.5109, -5.28171, 54.733, 0.22 ) }
    dend_5 { pt3dadd( 15.7925, -6.5713, 54.4413, 0.15 ) }
    dend_5 { pt3dadd( 14.7922, -7.32875, 54.2836, 0.15 ) }
    dend_5 { pt3dadd( 13.6148, -8.25475, 54.1383, 0.07 ) }
    dend_5 { pt3dadd( 12.9818, -8.7714, 54.0622, 0.15 ) }
    dend_5 { pt3dadd( 11.4718, -9.98814, 53.9071, 0.07 ) }
    dend_5 { pt3dadd( 10.5958, -10.6541, 53.8145, 0.59 ) }
    dend_5 { pt3dadd( 9.07581, -11.6653, 53.6048, 0.07 ) }
    dend_5 { pt3dadd( 8.26923, -12.135, 53.4176, 0.07 ) }
    dend_5 { pt3dadd( 7.6835, -12.4265, 53.229, 0.22 ) }
    dend_5 { pt3dadd( 6.46747, -12.9572, 52.7851, 0.22 ) }
    dend_5 { pt3dadd( 4.98436, -13.538, 52.2558, 0.07 ) }
    dend_5 { pt3dadd( 3.21772, -14.1754, 51.6648, 0.07 ) }
    dend_5 { pt3dadd( 2.37845, -14.4289, 51.3966, 0.07 ) }
    dend_5 { pt3dadd( 1.35513, -14.6506, 51.0969, 0.07 ) }
    dend_5 { pt3dadd( -0.264736, -14.8378, 50.7028, 0.29 ) }
    dend_5 { pt3dadd( -2.66175, -14.843, 50.2842, 0.07 ) }
    dend_5 { pt3dadd( -3.69987, -14.7066, 50.206, 0.29 ) }
    dend_5 { pt3dadd( -4.61158, -14.508, 50.2224, 0.29 ) }
    dend_5 { pt3dadd( -6.34452, -14.0733, 50.3485, 0.07 ) }
    dend_5 { pt3dadd( -7.99025, -13.5769, 50.5166, 0.07 ) }
    dend_5 { pt3dadd( -8.66644, -13.3302, 50.5824, 0.22 ) }
    dend_5 { pt3dadd( -9.65673, -12.9168, 50.6404, 0.37 ) }
    dend_5 { pt3dadd( -10.9954, -12.4024, 50.6531, 0.29 ) }
    dend_5 { pt3dadd( -12.6678, -11.914, 50.4593, 0.07 ) }
    dend_5 { pt3dadd( -13.2669, -11.7895, 50.3067, 0.37 ) }
    dend_5 { pt3dadd( -14.1352, -11.6135, 49.9958, 0.59 ) }
    dend_5 { pt3dadd( -15.7506, -11.2055, 49.2485, 0.07 ) }
    dend_5 { pt3dadd( -16.5337, -10.966, 48.8055, 0.15 ) }
    dend_5 { pt3dadd( -18.4, -10.2893, 47.5872, 0.07 ) }
    dend_5 { pt3dadd( -19.595, -9.81962, 46.7353, 0.07 ) }
    dend_5 { pt3dadd( -20.6564, -9.4465, 46.0034, 0.15 ) }
    dend_5 { pt3dadd( -22.1188, -9.0338, 45.1016, 0.07 ) }
    dend_5 { pt3dadd( -22.9237, -8.87717, 44.6982, 0.07 ) }
    dend_5 { pt3dadd( -23.4052, -8.80981, 44.5114, 0.29 ) }
    dend_5 { pt3dadd( -24.0137, -8.7501, 44.3548, 0.29 ) }
    dend_5 { pt3dadd( -25.7715, -8.6725, 44.0296, 0.07 ) }
    dend_5 { pt3dadd( -27.4503, -8.6517, 43.8071, 0.07 ) }
    dend_5 { pt3dadd( -28.9645, -8.65268, 43.6494, 0.07 ) }
    dend_5 { pt3dadd( -29.5296, -8.6535, 43.5746, 0.07 ) }
    dend_5 { pt3dadd( -29.8193, -8.65517, 43.5209, 0.15 ) }
    dend_5 { pt3dadd( -30.2739, -8.6529, 43.3931, 0.15 ) }
    dend_5 { pt3dadd( -31.1006, -8.60221, 43.0078, 0.15 ) }
    dend_5 { pt3dadd( -32.1359, -8.45279, 42.29, 0.15 ) }
    dend_5 { pt3dadd( -33.1487, -8.26936, 41.3731, 0.15 ) }
    dend_5 { pt3dadd( -33.7349, -8.1538, 40.8018, 0.15 ) }
    dend_5 { pt3dadd( -34.3634, -8.02699, 40.1777, 0.15 ) }
    dend_5 { pt3dadd( -34.9838, -7.90248, 39.5454, 0.15 ) }
    dend_5 { pt3dadd( -35.4536, -7.81193, 39.0517, 0.15 ) }
    dend_5 { pt3dadd( -35.9801, -7.67753, 38.4784, 0.15 ) }
    dend_5 { pt3dadd( -36.9593, -7.34851, 37.3321, 0.07 ) }
    dend_5 { pt3dadd( -37.6025, -7.11109, 36.599, 0.07 ) }
    dend_5 { pt3dadd( -38.5464, -6.79795, 35.6753, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 77/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -39.0682, 45.8912, 32.0865, 0.07 ) }
    dend_62 { pt3dadd( -39.8015, 45.4081, 32.917, 0.07 ) }
    dend_62 { pt3dadd( -40.2227, 45.0741, 33.4828, 0.88 ) }
    dend_62 { pt3dadd( -40.7214, 44.6047, 34.2649, 0.22 ) }
    dend_62 { pt3dadd( -41.0674, 44.286, 34.7994, 0.88 ) }
    dend_62 { pt3dadd( -41.5353, 43.861, 35.5061, 1.84 ) }
    dend_62 { pt3dadd( -42.4166, 43.0328, 36.8414, 0.22 ) }
    dend_62 { pt3dadd( -42.7602, 42.6298, 37.3993, 0.22 ) }
    dend_62 { pt3dadd( -43.0306, 42.2592, 37.8236, 0.22 ) }
    dend_62 { pt3dadd( -43.4887, 41.5783, 38.4931, 0.15 ) }
    dend_62 { pt3dadd( -43.8115, 41.0721, 38.9358, 0.15 ) }
    dend_62 { pt3dadd( -44.0741, 40.6662, 39.2341, 0.29 ) }
    dend_62 { pt3dadd( -44.6397, 39.8079, 39.742, 1.25 ) }
    dend_62 { pt3dadd( -45.5157, 38.5068, 40.4262, 0.07 ) }
    dend_62 { pt3dadd( -45.8118, 38.0627, 40.6418, 0.88 ) }
    dend_62 { pt3dadd( -45.9673, 37.815, 40.7593, 1.18 ) }
    dend_62 { pt3dadd( -46.5867, 36.8618, 41.2139, 0.07 ) }
    dend_62 { pt3dadd( -46.9007, 36.4019, 41.447, 0.74 ) }
    dend_62 { pt3dadd( -47.4672, 35.592, 41.9485, 0.07 ) }
    dend_62 { pt3dadd( -47.6939, 35.2394, 42.2219, 0.29 ) }
    dend_62 { pt3dadd( -47.9634, 34.724, 42.7051, 0.07 ) }
    dend_62 { pt3dadd( -48.1266, 34.2847, 43.2133, 1.03 ) }
    dend_62 { pt3dadd( -48.1919, 33.9877, 43.6416, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_62 { pt3dadd( -48.2604, 33.3364, 44.7294, 0.22 ) }
    dend_62 { pt3dadd( -48.2612, 32.8819, 45.5861, 0.22 ) }
    dend_62 { pt3dadd( -48.2574, 32.4629, 46.4624, 0.22 ) }
    dend_62 { pt3dadd( -48.2869, 32.16, 47.1506, 0.22 ) }
    dend_62 { pt3dadd( -48.3283, 31.9799, 47.5526, 0.22 ) }
    dend_62 { pt3dadd( -48.4544, 31.6976, 48.0464, 0.22 ) }
    dend_62 { pt3dadd( -48.6016, 31.4554, 48.3834, 0.22 ) }
    dend_62 { pt3dadd( -48.9051, 31.0599, 48.854, 0.22 ) }
    dend_62 { pt3dadd( -49.3705, 30.4529, 49.4402, 1.03 ) }
    dend_62 { pt3dadd( -49.8026, 29.8405, 49.9523, 1.47 ) }
    dend_62 { pt3dadd( -50.5702, 28.6289, 50.8749, 0.07 ) }
    dend_62 { pt3dadd( -50.7727, 28.3071, 51.1116, 1.25 ) }
    dend_62 { pt3dadd( -51.0754, 27.8444, 51.4492, 1.4 ) }
    dend_62 { pt3dadd( -51.705, 26.9242, 52.098, 0.29 ) }
    dend_62 { pt3dadd( -52.1306, 26.3549, 52.4916, 0.15 ) }
    dend_62 { pt3dadd( -52.5135, 25.9112, 52.7962, 0.81 ) }
    dend_62 { pt3dadd( -53.3728, 25.0128, 53.3999, 0.15 ) }
    dend_62 { pt3dadd( -53.891, 24.5371, 53.6977, 0.15 ) }
    dend_62 { pt3dadd( -54.282, 24.2108, 53.8981, 0.37 ) }
    dend_62 { pt3dadd( -54.9619, 23.7187, 54.1422, 0.15 ) }
    dend_62 { pt3dadd( -55.3286, 23.4695, 54.2296, 0.88 ) }
    dend_62 { pt3dadd( -55.6952, 23.2273, 54.2863, 1.55 ) }
    dend_62 { pt3dadd( -57.1485, 22.2981, 54.445, 0.22 ) }
    dend_62 { pt3dadd( -57.5253, 22.0685, 54.4905, 0.22 ) }
    dend_62 { pt3dadd( -58.4345, 21.5576, 54.6315, 0.81 ) }
    dend_62 { pt3dadd( -59.6264, 20.9419, 54.8697, 0.07 ) }
    dend_62 { pt3dadd( -60.0884, 20.7286, 54.9986, 0.74 ) }
    dend_62 { pt3dadd( -60.8011, 20.4376, 55.2753, 0.22 ) }
    dend_62 { pt3dadd( -61.5786, 20.1472, 55.6916, 0.37 ) }
    dend_62 { pt3dadd( -62.1004, 19.9608, 56.0365, 0.22 ) }
    dend_62 { pt3dadd( -62.9118, 19.6629, 56.707, 1.03 ) }
    dend_62 { pt3dadd( -63.7382, 19.3065, 57.5396, 0.07 ) }
    dend_62 { pt3dadd( -64.3338, 18.9913, 58.2549, 0.88 ) }
    dend_62 { pt3dadd( -64.8155, 18.6848, 58.8985, 1.25 ) }
    dend_62 { pt3dadd( -65.6776, 18.0363, 60.0419, 0.15 ) }
    dend_62 { pt3dadd( -66.0931, 17.6812, 60.5661, 0.74 ) }
    dend_62 { pt3dadd( -66.8871, 16.9351, 61.4679, 0.22 ) }
    dend_62 { pt3dadd( -67.6539, 16.1745, 62.204, 1.11 ) }
    dend_62 { pt3dadd( -68.1345, 15.7047, 62.5847, 2.06 ) }
    dend_62 { pt3dadd( -69.3604, 14.5608, 63.39, 0.15 ) }
    dend_62 { pt3dadd( -69.8293, 14.1464, 63.6526, 0.29 ) }
    dend_62 { pt3dadd( -70.8833, 13.2949, 64.1741, 0.07 ) }
    dend_62 { pt3dadd( -71.4013, 12.9358, 64.4112, 0.22 ) }
    dend_62 { pt3dadd( -72.384, 12.348, 64.8875, 0.07 ) }
    dend_62 { pt3dadd( -72.9254, 12.08, 65.2072, 1.4 ) }
    dend_62 { pt3dadd( -74.1636, 11.5778, 66.0775, 0.07 ) }
    dend_62 { pt3dadd( -74.7706, 11.3602, 66.5359, 0.81 ) }
    dend_62 { pt3dadd( -75.7801, 11.0573, 67.3851, 0.07 ) }
    dend_62 { pt3dadd( -76.3986, 10.9016, 67.9553, 0.96 ) }
    dend_62 { pt3dadd( -77.5458, 10.6825, 69.0587, 0.07 ) }
    dend_62 { pt3dadd( -77.9761, 10.6207, 69.4692, 0.07 ) }
    dend_62 { pt3dadd( -78.5312, 10.5577, 69.9872, 1.25 ) }
    dend_62 { pt3dadd( -79.7989, 10.4212, 71.1005, 0.22 ) }
    dend_62 { pt3dadd( -80.6703, 10.3153, 71.8025, 0.88 ) }
    dend_62 { pt3dadd( -81.2473, 10.2638, 72.2082, 1.18 ) }
    dend_62 { pt3dadd( -82.9364, 10.1553, 73.237, 0.15 ) }
    dend_62 { pt3dadd( -83.4631, 10.1239, 73.5168, 0.81 ) }
    dend_62 { pt3dadd( -84.2987, 10.0715, 73.8915, 0.15 ) }
    dend_62 { pt3dadd( -85.0984, 10.0169, 74.1664, 1.18 ) }
    dend_62 { pt3dadd( -86.3777, 9.97152, 74.5273, 0.07 ) }
    dend_62 { pt3dadd( -86.9291, 9.98012, 74.6612, 0.07 ) }
    dend_62 { pt3dadd( -87.6985, 10.088, 74.7805, 0.07 ) }
    dend_62 { pt3dadd( -88.0984, 10.1758, 74.8221, 0.88 ) }
    dend_62 { pt3dadd( -88.6902, 10.3312, 74.87, 1.33 ) }
    dend_62 { pt3dadd( -90.3019, 10.8502, 74.9547, 0.07 ) }
    dend_62 { pt3dadd( -91.0525, 11.1317, 74.9673, 1.33 ) }
    dend_62 { pt3dadd( -92.8732, 11.9386, 74.9614, 0.07 ) }
    dend_62 { pt3dadd( -93.1785, 12.0947, 74.9525, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -39.0682, 45.8912, 32.0865, 0.15 ) }
    dend_61 { pt3dadd( -38.8269, 44.2525, 31.7008, 0.15 ) }
    dend_61 { pt3dadd( -38.7065, 43.5793, 31.4938, 0.29 ) }
    dend_61 { pt3dadd( -38.505, 42.5722, 31.1654, 0.15 ) }
    dend_61 { pt3dadd( -38.4148, 42.1834, 31.0292, 0.52 ) }
    dend_61 { pt3dadd( -38.2207, 41.4019, 30.7502, 1.33 ) }
    dend_61 { pt3dadd( -37.8699, 39.8919, 30.2236, 0.07 ) }
    dend_61 { pt3dadd( -37.6938, 39.0895, 29.9072, 0.07 ) }
    dend_61 { pt3dadd( -37.5585, 38.3981, 29.6652, 0.37 ) }
    dend_61 { pt3dadd( -37.3409, 37.2029, 29.409, 0.07 ) }
    dend_61 { pt3dadd( -37.2805, 36.8308, 29.3788, 0.15 ) }
    dend_61 { pt3dadd( -37.0631, 35.0982, 29.4375, 0.15 ) }
    dend_61 { pt3dadd( -37.02, 34.6792, 29.5007, 0.74 ) }
    dend_61 { pt3dadd( -36.9575, 33.7358, 29.7025, 1.25 ) }
    dend_61 { pt3dadd( -36.9135, 31.4112, 30.3179, 0.15 ) }
    dend_61 { pt3dadd( -36.9435, 30.0328, 30.7393, 0.15 ) }
    dend_61 { pt3dadd( -36.9675, 29.412, 30.9352, 0.15 ) }
    dend_61 { pt3dadd( -37.0127, 28.6422, 31.1669, 0.15 ) }
    dend_61 { pt3dadd( -37.0919, 27.6642, 31.4066, 1.25 ) }
    dend_61 { pt3dadd( -37.2983, 25.9864, 31.6722, 0.07 ) }
    dend_61 { pt3dadd( -37.4159, 25.3068, 31.7161, 0.96 ) }
    dend_61 { pt3dadd( -37.5304, 24.7149, 31.7109, 1.25 ) }
    dend_61 { pt3dadd( -37.9105, 22.7352, 31.6203, 0.15 ) }
    dend_61 { pt3dadd( -38.0581, 21.9184, 31.5476, 0.96 ) }
    dend_61 { pt3dadd( -38.2989, 20.3595, 31.3502, 0.07 ) }
    dend_61 { pt3dadd( -38.3945, 19.6137, 31.2255, 0.29 ) }
    dend_61 { pt3dadd( -38.6449, 17.4277, 30.7845, 0.07 ) }
    dend_61 { pt3dadd( -38.695, 16.9443, 30.6749, 0.29 ) }
    dend_61 { pt3dadd( -38.8245, 15.4356, 30.2937, 0.07 ) }
    dend_61 { pt3dadd( -38.8593, 14.7396, 30.1137, 1.03 ) }
    dend_61 { pt3dadd( -38.8665, 14.0582, 29.944, 1.47 ) }
    dend_61 { pt3dadd( -38.8044, 11.5974, 29.384, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_61 { pt3dadd( -38.7658, 11.0219, 29.2719, 0.59 ) }
    dend_61 { pt3dadd( -38.7006, 10.2125, 29.1372, 0.07 ) }
    dend_61 { pt3dadd( -38.6469, 9.44284, 29.0457, 0.07 ) }
    dend_61 { pt3dadd( -38.5858, 8.3998, 28.9601, 0.07 ) }
    dend_61 { pt3dadd( -38.5659, 7.46995, 28.9174, 1.18 ) }
    dend_61 { pt3dadd( -38.5868, 5.05846, 28.8826, 0.07 ) }
    dend_61 { pt3dadd( -38.6291, 4.36841, 28.8711, 0.74 ) }
    dend_61 { pt3dadd( -38.8282, 2.54643, 28.8281, 0.07 ) }
    dend_61 { pt3dadd( -38.9109, 2.03258, 28.8075, 0.44 ) }
    dend_61 { pt3dadd( -39.2765, 0.295832, 28.739, 0.07 ) }
    dend_61 { pt3dadd( -39.5076, -0.585315, 28.7087, 1.47 ) }
    dend_61 { pt3dadd( -40.0664, -2.38003, 28.6489, 0.07 ) }
    dend_61 { pt3dadd( -40.2544, -2.93071, 28.6205, 0.37 ) }
    dend_61 { pt3dadd( -40.6573, -4.02064, 28.5337, 0.07 ) }
    dend_61 { pt3dadd( -41.228, -5.47076, 28.4376, 0.07 ) }
    dend_61 { pt3dadd( -41.6103, -6.4045, 28.3832, 0.07 ) }
    dend_61 { pt3dadd( -41.803, -6.89447, 28.3696, 0.37 ) }
    dend_61 { pt3dadd( -42.2521, -8.1135, 28.3719, 0.15 ) }
    dend_61 { pt3dadd( -42.5247, -8.87562, 28.4046, 0.81 ) }
    dend_61 { pt3dadd( -42.9777, -10.203, 28.5123, 0.15 ) }
    dend_61 { pt3dadd( -43.3303, -11.2996, 28.6454, 1.55 ) }
    dend_61 { pt3dadd( -43.8971, -13.104, 28.9445, 0.07 ) }
    dend_61 { pt3dadd( -44.0656, -13.647, 29.0695, 0.66 ) }
    dend_61 { pt3dadd( -44.4835, -15.1409, 29.5232, 0.07 ) }
    dend_61 { pt3dadd( -44.5914, -15.6769, 29.7133, 0.29 ) }
    dend_61 { pt3dadd( -44.6906, -16.4838, 30.0335, 0.07 ) }
    dend_61 { pt3dadd( -44.7467, -16.9878, 30.259, 0.74 ) }
    dend_61 { pt3dadd( -44.8702, -18.286, 30.8917, 0.15 ) }
    dend_61 { pt3dadd( -44.9189, -19.4157, 31.4543, 1.18 ) }
    dend_61 { pt3dadd( -44.7901, -21.6678, 32.5966, 0.15 ) }
    dend_61 { pt3dadd( -44.7083, -22.4258, 32.9803, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -25.6932, 62.4314, 68.7986, 0.07 ) }
    dend_59 { pt3dadd( -26.7523, 60.5372, 68.7821, 0.07 ) }
    dend_59 { pt3dadd( -27.0832, 59.7601, 68.7686, 0.07 ) }
    dend_59 { pt3dadd( -27.4203, 58.9685, 68.7548, 0.22 ) }
    dend_59 { pt3dadd( -28.0566, 57.4742, 68.7289, 0.07 ) }
    dend_59 { pt3dadd( -28.3155, 56.8663, 68.7184, 0.52 ) }
    dend_59 { pt3dadd( -28.7516, 55.8422, 68.7006, 0.07 ) }
    dend_59 { pt3dadd( -28.85, 55.3256, 68.7119, 0.22 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -25.6932, 62.4314, 68.7986, 0.29 ) }
    dend_58 { pt3dadd( -26.186, 62.4908, 70.1318, 0.29 ) }
    dend_58 { pt3dadd( -26.5879, 62.452, 71.0858, 0.29 ) }
    dend_58 { pt3dadd( -27.1116, 62.3684, 72.1244, 0.59 ) }
    dend_58 { pt3dadd( -27.8596, 62.2659, 73.4825, 0.74 ) }
    dend_58 { pt3dadd( -28.2354, 62.2386, 74.1269, 1.03 ) }
    dend_58 { pt3dadd( -28.6841, 62.263, 74.8804, 1.03 ) }
    dend_58 { pt3dadd( -29.2715, 62.3546, 75.832, 0.15 ) }
    dend_58 { pt3dadd( -29.7231, 62.524, 76.5512, 0.44 ) }
    dend_58 { pt3dadd( -30.2949, 62.8145, 77.4363, 0.81 ) }
    dend_58 { pt3dadd( -30.671, 63.086, 77.9878, 1.03 ) }
    dend_58 { pt3dadd( -31.3323, 63.6998, 78.985, 0.15 ) }
    dend_58 { pt3dadd( -31.8812, 64.3608, 79.8705, 0.74 ) }
    dend_58 { pt3dadd( -32.3485, 65.1627, 80.7958, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 9.37493, -15.8517, 6.13177, 0.22 ) }
    dend_55 { pt3dadd( 8.79075, -17.7419, 4.66482, 0.22 ) }
    dend_55 { pt3dadd( 8.54868, -18.5815, 4.1405, 0.37 ) }
    dend_55 { pt3dadd( 8.42238, -19.0981, 3.86236, 0.59 ) }
    dend_55 { pt3dadd( 8.18889, -20.0531, 3.34814, 0.22 ) }
    dend_55 { pt3dadd( 7.93449, -21.0936, 2.78788, 1.47 ) }
    dend_55 { pt3dadd( 7.67516, -22.1543, 2.21678, 0.29 ) }
    dend_55 { pt3dadd( 7.45181, -23.1604, 1.89913, 0.15 ) }
    dend_55 { pt3dadd( 7.26589, -24.1072, 1.67854, 1.03 ) }
    dend_55 { pt3dadd( 4.57949, -31.7061, -3.03115, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 63/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.37493, -15.8517, 6.13177, 0.22 ) }
    dend_52 { pt3dadd( 9.30557, -16.5741, 6.66231, 0.22 ) }
    dend_52 { pt3dadd( 9.19887, -17.2675, 7.09548, 1.4 ) }
    dend_52 { pt3dadd( 8.91362, -18.4061, 7.67717, 2.65 ) }
    dend_52 { pt3dadd( 7.96476, -21.2595, 8.92776, 0.22 ) }
    dend_52 { pt3dadd( 7.7442, -21.8284, 9.14133, 0.22 ) }
    dend_52 { pt3dadd( 7.36757, -22.7022, 9.42491, 0.96 ) }
    dend_52 { pt3dadd( 6.8212, -23.7506, 9.67187, 2.06 ) }
    dend_52 { pt3dadd( 5.82182, -25.4038, 9.90668, 0.22 ) }
    dend_52 { pt3dadd( 5.18189, -26.319, 9.90092, 0.15 ) }
    dend_52 { pt3dadd( 4.65798, -27.0191, 9.7818, 0.29 ) }
    dend_52 { pt3dadd( 4.09737, -27.7295, 9.63553, 0.15 ) }
    dend_52 { pt3dadd( 3.53167, -28.4929, 9.46741, 1.18 ) }
    dend_52 { pt3dadd( 3.21675, -28.9577, 9.36275, 1.7 ) }
    dend_52 { pt3dadd( 1.94274, -31.0325, 8.90829, 0.22 ) }
    dend_52 { pt3dadd( 1.46538, -31.8904, 8.74056, 0.81 ) }
    dend_52 { pt3dadd( 1.17606, -32.4612, 8.65181, 1.4 ) }
    dend_52 { pt3dadd( 0.264577, -34.4467, 8.42657, 0.15 ) }
    dend_52 { pt3dadd( 0.0647822, -34.9797, 8.40549, 0.15 ) }
    dend_52 { pt3dadd( -0.244797, -36.0838, 8.44194, 0.15 ) }
    dend_52 { pt3dadd( -0.401033, -36.8173, 8.51582, 0.37 ) }
    dend_52 { pt3dadd( -0.568045, -37.5415, 8.599, 1.33 ) }
    dend_52 { pt3dadd( -0.804941, -38.3768, 8.68949, 1.84 ) }
    dend_52 { pt3dadd( -1.86775, -40.9293, 8.91702, 0.22 ) }
    dend_52 { pt3dadd( -2.57423, -42.2474, 8.98572, 0.07 ) }
    dend_52 { pt3dadd( -2.88729, -42.7984, 9.00962, 0.96 ) }
    dend_52 { pt3dadd( -3.62223, -43.9414, 9.04125, 0.22 ) }
    dend_52 { pt3dadd( -4.26614, -44.7815, 9.03043, 1.33 ) }
    dend_52 { pt3dadd( -5.62112, -46.1112, 8.91173, 0.22 ) }
    dend_52 { pt3dadd( -6.60342, -46.6429, 8.73912, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 2.94716, 35.5389, 37.8946, 0.44 ) }
    dend_44 { pt3dadd( 1.69609, 35.5951, 38.2792, 0.44 ) }
    dend_44 { pt3dadd( 0.739353, 35.7582, 38.483, 0.44 ) }
    dend_44 { pt3dadd( -0.203773, 36.0061, 38.6812, 0.44 ) }
    dend_44 { pt3dadd( -0.61588, 36.1304, 38.7783, 0.44 ) }
    dend_44 { pt3dadd( -1.27775, 36.3355, 38.934, 0.96 ) }
    dend_44 { pt3dadd( -1.69441, 36.4637, 39.0266, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( -2.80414, 36.7956, 39.1776, 0.15 ) }
    dend_44 { pt3dadd( -3.34902, 36.9874, 39.2734, 0.15 ) }
    dend_44 { pt3dadd( -3.85776, 37.1684, 39.4062, 0.15 ) }
    dend_44 { pt3dadd( -4.63539, 37.4002, 39.6447, 0.15 ) }
    dend_44 { pt3dadd( -5.08088, 37.479, 39.7805, 1.33 ) }
    dend_44 { pt3dadd( -6.01905, 37.5506, 40.042, 1.92 ) }
    dend_44 { pt3dadd( -7.69466, 37.5327, 40.4583, 0.22 ) }
    dend_44 { pt3dadd( -8.78984, 37.4445, 40.6795, 0.59 ) }
    dend_44 { pt3dadd( -9.37621, 37.3413, 40.8001, 1.03 ) }
    dend_44 { pt3dadd( -10.7836, 36.9545, 41.1286, 0.15 ) }
    dend_44 { pt3dadd( -11.5733, 36.6563, 41.3428, 0.15 ) }
    dend_44 { pt3dadd( -11.9468, 36.4653, 41.452, 0.88 ) }
    dend_44 { pt3dadd( -12.6797, 35.9637, 41.6602, 1.92 ) }
    dend_44 { pt3dadd( -14.1962, 34.7435, 42.1092, 0.22 ) }
    dend_44 { pt3dadd( -14.5939, 34.4119, 42.2471, 0.22 ) }
    dend_44 { pt3dadd( -15.0693, 33.9638, 42.4111, 0.22 ) }
    dend_44 { pt3dadd( -15.3402, 33.7092, 42.4989, 0.22 ) }
    dend_44 { pt3dadd( -16.0279, 33.1175, 42.6873, 0.22 ) }
    dend_44 { pt3dadd( -16.588, 32.6923, 42.8086, 1.11 ) }
    dend_44 { pt3dadd( -17.4925, 32.1139, 42.9304, 2.58 ) }
    dend_44 { pt3dadd( -19.1577, 31.1711, 43.1067, 0.52 ) }
    dend_44 { pt3dadd( -20.4538, 30.4672, 43.2629, 0.15 ) }
    dend_44 { pt3dadd( -21.0003, 30.1772, 43.3487, 0.15 ) }
    dend_44 { pt3dadd( -21.7685, 29.7935, 43.5036, 0.29 ) }
    dend_44 { pt3dadd( -22.4924, 29.4549, 43.6707, 0.96 ) }
    dend_44 { pt3dadd( -23.6505, 28.9167, 43.9588, 0.22 ) }
    dend_44 { pt3dadd( -24.4186, 28.599, 44.1795, 0.22 ) }
    dend_44 { pt3dadd( -25.1173, 28.2724, 44.3736, 0.44 ) }
    dend_44 { pt3dadd( -25.8603, 27.8797, 44.6076, 1.62 ) }
    dend_44 { pt3dadd( -26.5622, 27.4868, 44.8633, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 2.94716, 35.5389, 37.8946, 1.47 ) }
    dend_41 { pt3dadd( 3.7269, 35.6053, 38.7005, 1.47 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -13.3019, -145.889, 43.452, 0.22 ) }
    dend_23 { pt3dadd( -13.294, -144.855, 44.0777, 0.22 ) }
    dend_23 { pt3dadd( -13.2766, -143.676, 44.7441, 0.22 ) }
    dend_23 { pt3dadd( -13.2302, -142.738, 45.2283, 0.22 ) }
    dend_23 { pt3dadd( -13.146, -141.679, 45.7252, 0.66 ) }
    dend_23 { pt3dadd( -13.0621, -140.882, 46.0968, 0.81 ) }
    dend_23 { pt3dadd( -12.8336, -139.38, 46.7673, 0.15 ) }
    dend_23 { pt3dadd( -12.6398, -138.476, 47.1107, 1.18 ) }
    dend_23 { pt3dadd( -12.4155, -137.587, 47.4103, 1.4 ) }
    dend_23 { pt3dadd( -11.8478, -135.643, 48.0134, 0.15 ) }
    dend_23 { pt3dadd( -11.6115, -134.972, 48.2084, 0.15 ) }
    dend_23 { pt3dadd( -11.0426, -133.652, 48.5918, 1.7 ) }
    dend_23 { pt3dadd( -10.4167, -132.471, 48.9048, 0.22 ) }
    dend_23 { pt3dadd( -9.88141, -131.568, 49.1227, 0.88 ) }
    dend_23 { pt3dadd( -9.43024, -130.855, 49.2828, 0.22 ) }
    dend_23 { pt3dadd( -8.93665, -130.108, 49.4245, 0.07 ) }
    dend_23 { pt3dadd( -8.37291, -129.186, 49.5798, 0.07 ) }
    dend_23 { pt3dadd( -7.65021, -127.903, 49.7989, 0.66 ) }
    dend_23 { pt3dadd( -6.96525, -126.555, 50.0261, 0.07 ) }
    dend_23 { pt3dadd( -6.73154, -126.035, 50.1182, 0.37 ) }
    dend_23 { pt3dadd( -6.46256, -125.343, 50.2401, 0.66 ) }
    dend_23 { pt3dadd( -5.74791, -123.156, 50.6523, 0.07 ) }
    dend_23 { pt3dadd( -5.47966, -122.205, 50.8484, 1.03 ) }
    dend_23 { pt3dadd( -5.07669, -120.435, 51.2506, 0.15 ) }
    dend_23 { pt3dadd( -4.93728, -119.651, 51.4474, 0.88 ) }
    dend_23 { pt3dadd( -4.84472, -118.98, 51.6251, 1.18 ) }
    dend_23 { pt3dadd( -4.67467, -116.813, 52.2381, 0.15 ) }
    dend_23 { pt3dadd( -4.69351, -116.103, 52.4481, 0.15 ) }
    dend_23 { pt3dadd( -4.80798, -115.323, 52.674, 0.22 ) }
    dend_23 { pt3dadd( -4.9947, -114.75, 52.8287, 0.07 ) }
    dend_23 { pt3dadd( -5.3097, -114.075, 52.9735, 0.29 ) }
    dend_23 { pt3dadd( -5.67311, -113.455, 53.075, 0.07 ) }
    dend_23 { pt3dadd( -6.01568, -112.953, 53.1184, 0.59 ) }
    dend_23 { pt3dadd( -6.60632, -112.143, 53.1552, 0.15 ) }
    dend_23 { pt3dadd( -7.39159, -111.101, 53.1759, 1.62 ) }
    dend_23 { pt3dadd( -8.18669, -110.047, 53.1859, 0.15 ) }
    dend_23 { pt3dadd( -8.74934, -109.305, 53.2018, 0.29 ) }
    dend_23 { pt3dadd( -9.65375, -108.098, 53.2355, 0.07 ) }
    dend_23 { pt3dadd( -10.3207, -107.112, 53.3062, 0.07 ) }
    dend_23 { pt3dadd( -10.6654, -106.546, 53.3691, 0.66 ) }
    dend_23 { pt3dadd( -11.2531, -105.529, 53.5056, 0.15 ) }
    dend_23 { pt3dadd( -11.6916, -104.757, 53.6285, 1.03 ) }
    dend_23 { pt3dadd( -12.2117, -103.863, 53.8084, 1.62 ) }
    dend_23 { pt3dadd( -13.6667, -101.382, 54.4824, 0.07 ) }
    dend_23 { pt3dadd( -14.3031, -100.275, 54.8297, 0.59 ) }
    dend_23 { pt3dadd( -14.7596, -99.4855, 55.1008, 0.15 ) }
    dend_23 { pt3dadd( -15.3386, -98.4722, 55.467, 0.88 ) }
    dend_23 { pt3dadd( -16.1276, -96.9801, 56.0276, 0.15 ) }
    dend_23 { pt3dadd( -16.8524, -95.6246, 56.5788, 0.15 ) }
    dend_23 { pt3dadd( -17.4347, -94.5594, 57.053, 1.33 ) }
    dend_23 { pt3dadd( -18.146, -93.2037, 57.6849, 0.15 ) }
    dend_23 { pt3dadd( -18.6704, -92.0749, 58.2234, 0.15 ) }
    dend_23 { pt3dadd( -19.0335, -91.0864, 58.6703, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -13.3019, -145.889, 43.452, 0.15 ) }
    dend_22 { pt3dadd( -13.9024, -147.499, 43.9022, 0.15 ) }
    dend_22 { pt3dadd( -14.3661, -148.419, 44.3737, 0.15 ) }
    dend_22 { pt3dadd( -14.7541, -149.041, 44.8433, 0.15 ) }
    dend_22 { pt3dadd( -15.1154, -149.526, 45.2738, 0.74 ) }
    dend_22 { pt3dadd( -15.7192, -150.286, 45.9772, 0.15 ) }
    dend_22 { pt3dadd( -16.1763, -150.886, 46.5184, 1.4 ) }
    dend_22 { pt3dadd( -16.9139, -151.834, 47.5437, 0.15 ) }
    dend_22 { pt3dadd( -17.605, -152.731, 48.5646, 0.66 ) }
    dend_22 { pt3dadd( -18.0658, -153.511, 49.4855, 0.07 ) }
    dend_22 { pt3dadd( -18.2074, -153.895, 49.9889, 0.07 ) }
    dend_22 { pt3dadd( -18.3402, -154.39, 50.632, 0.29 ) }
    dend_22 { pt3dadd( -18.4676, -155.247, 51.749, 0.07 ) }
    dend_22 { pt3dadd( -18.4537, -155.955, 52.6522, 1.25 ) }
    dend_22 { pt3dadd( -18.2199, -157.316, 54.4286, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_22 { pt3dadd( -17.7833, -158.763, 56.4909, 1.62 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -58.9857, -119.363, -14.134, 0.59 ) }
    dend_18 { pt3dadd( -60.5925, -119.099, -15.7234, 0.59 ) }
    dend_18 { pt3dadd( -61.0674, -118.99, -16.2573, 0.07 ) }
    dend_18 { pt3dadd( -61.6763, -118.828, -17.0752, 0.07 ) }
    dend_18 { pt3dadd( -62.0773, -118.709, -17.6782, 0.37 ) }
    dend_18 { pt3dadd( -62.7199, -118.482, -18.7496, 0.07 ) }
    dend_18 { pt3dadd( -63.1782, -118.281, -19.6371, 0.15 ) }
    dend_18 { pt3dadd( -63.7135, -118.008, -21.0099, 1.62 ) }
    dend_18 { pt3dadd( -64.1056, -117.56, -22.9368, 0.22 ) }
    dend_18 { pt3dadd( -64.1214, -117.343, -23.8275, 0.22 ) }
    dend_18 { pt3dadd( -64.0629, -117.151, -24.6066, 0.59 ) }
    dend_18 { pt3dadd( -63.8354, -116.866, -25.7251, 0.59 ) }
    dend_18 { pt3dadd( -63.4346, -116.585, -26.8717, 0.59 ) }
    dend_18 { pt3dadd( -62.6039, -116.287, -28.2449, 1.18 ) }
    dend_18 { pt3dadd( -61.9989, -116.15, -28.88, 1.18 ) }
    dend_18 { pt3dadd( -63.7538, -113.4, -40.6368, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -58.9857, -119.363, -14.134, 0.22 ) }
    dend_17 { pt3dadd( -59.6796, -120.016, -14.7696, 0.22 ) }
    dend_17 { pt3dadd( -60.0605, -120.366, -15.1314, 0.15 ) }
    dend_17 { pt3dadd( -60.6009, -120.826, -15.7142, 0.15 ) }
    dend_17 { pt3dadd( -61.0597, -121.204, -16.2606, 1.25 ) }
    dend_17 { pt3dadd( -61.5877, -121.608, -16.893, 0.15 ) }
    dend_17 { pt3dadd( -62.048, -121.931, -17.4248, 0.15 ) }
    dend_17 { pt3dadd( -62.6912, -122.33, -18.1629, 1.62 ) }
    dend_17 { pt3dadd( -63.4245, -122.751, -18.9502, 0.22 ) }
    dend_17 { pt3dadd( -63.8775, -123.022, -19.4252, 0.22 ) }
    dend_17 { pt3dadd( -64.4091, -123.35, -19.9843, 1.33 ) }
    dend_17 { pt3dadd( -64.9388, -123.668, -20.524, 1.11 ) }
    dend_17 { pt3dadd( -65.8521, -124.183, -21.4025, 0.15 ) }
    dend_17 { pt3dadd( -66.1843, -124.37, -21.691, 0.15 ) }
    dend_17 { pt3dadd( -66.9665, -124.825, -22.2646, 0.15 ) }
    dend_17 { pt3dadd( -67.4376, -125.096, -22.5475, 0.15 ) }
    dend_17 { pt3dadd( -67.9511, -125.379, -22.763, 0.66 ) }
    dend_17 { pt3dadd( -68.7671, -125.722, -22.888, 0.07 ) }
    dend_17 { pt3dadd( -69.3306, -125.863, -22.8264, 0.88 ) }
    dend_17 { pt3dadd( -70.1547, -125.938, -22.6215, 0.15 ) }
    dend_17 { pt3dadd( -71.0276, -125.906, -22.3459, 0.59 ) }
    dend_17 { pt3dadd( -72.1421, -125.733, -21.9277, 1.4 ) }
    dend_17 { pt3dadd( -73.6197, -125.32, -21.3607, 0.22 ) }
    dend_17 { pt3dadd( -74.6733, -124.89, -20.9468, 1.25 ) }
    dend_17 { pt3dadd( -75.9392, -124.229, -20.4388, 0.44 ) }
    dend_17 { pt3dadd( -76.6077, -123.795, -20.1805, 0.52 ) }
    dend_17 { pt3dadd( -77.3691, -123.198, -19.8785, 1.11 ) }
    dend_17 { pt3dadd( -78.2129, -122.426, -19.5081, 0.37 ) }
    dend_17 { pt3dadd( -79.1669, -121.484, -19.0211, 0.07 ) }
    dend_17 { pt3dadd( -79.7022, -120.965, -18.7166, 0.07 ) }
    dend_17 { pt3dadd( -80.0828, -120.597, -18.4589, 0.22 ) }
    dend_17 { pt3dadd( -80.6077, -120.098, -18.0348, 0.96 ) }
    dend_17 { pt3dadd( -81.091, -119.634, -17.5845, 2.06 ) }
    dend_17 { pt3dadd( -82.0892, -118.631, -16.4327, 0.22 ) }
    dend_17 { pt3dadd( -82.7436, -117.973, -15.5365, 0.74 ) }
    dend_17 { pt3dadd( -83.1768, -117.589, -14.8753, 0.74 ) }
    dend_17 { pt3dadd( -83.6171, -117.266, -14.1213, 0.74 ) }
    dend_17 { pt3dadd( -83.7903, -117.169, -13.7732, 0.74 ) }
    dend_17 { pt3dadd( -84.1394, -117.03, -12.9001, 0.74 ) }
    dend_17 { pt3dadd( -84.3923, -116.945, -11.9366, 0.74 ) }
    dend_17 { pt3dadd( -84.522, -116.893, -11.3594, 0.74 ) }
    dend_17 { pt3dadd( -84.5978, -116.825, -11.034, 0.74 ) }
    dend_17 { pt3dadd( -84.7605, -116.502, -10.2994, 0.74 ) }
    dend_17 { pt3dadd( -84.8302, -116.073, -9.69854, 0.74 ) }
    dend_17 { pt3dadd( -84.857, -115.224, -8.76741, 0.29 ) }
    dend_17 { pt3dadd( -84.8456, -114.73, -8.30131, 0.29 ) }
    dend_17 { pt3dadd( -84.7914, -114.027, -7.69103, 0.07 ) }
    dend_17 { pt3dadd( -84.7335, -113.595, -7.3277, 0.44 ) }
    dend_17 { pt3dadd( -84.5326, -112.518, -6.46053, 0.07 ) }
    dend_17 { pt3dadd( -84.3898, -111.935, -5.98294, 0.07 ) }
    dend_17 { pt3dadd( -84.2363, -111.377, -5.51215, 0.07 ) }
    dend_17 { pt3dadd( -84.14, -111.06, -5.22957, 0.29 ) }
    dend_17 { pt3dadd( -83.9496, -110.482, -4.71773, 0.07 ) }
    dend_17 { pt3dadd( -83.8087, -110.002, -4.26832, 0.37 ) }
    dend_17 { pt3dadd( -83.6518, -109.489, -3.73852, 0.22 ) }
    dend_17 { pt3dadd( -83.5934, -109.302, -3.50054, 0.81 ) }
    dend_17 { pt3dadd( -83.5244, -108.996, -2.98582, 0.37 ) }
    dend_17 { pt3dadd( -83.5267, -108.619, -2.09707, 0.88 ) }
    dend_17 { pt3dadd( -83.5958, -108.229, -1.01381, 0.88 ) }
    dend_17 { pt3dadd( -83.6517, -108.094, -0.56453, 0.88 ) }
    dend_17 { pt3dadd( -83.8143, -107.877, 0.317178, 0.88 ) }
    dend_17 { pt3dadd( -83.9774, -107.731, 1.10121, 0.88 ) }
    dend_17 { pt3dadd( -84.2439, -107.626, 2.27629, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -6.60342, -46.6429, 8.73912, 0.29 ) }
    dend_54 { pt3dadd( -7.44614, -48.1433, 9.07719, 0.29 ) }
    dend_54 { pt3dadd( -7.85257, -48.9016, 9.26161, 0.15 ) }
    dend_54 { pt3dadd( -8.22653, -49.6403, 9.4496, 1.03 ) }
    dend_54 { pt3dadd( -8.90623, -51.0331, 9.8023, 0.15 ) }
    dend_54 { pt3dadd( -9.36469, -51.9726, 10.0402, 1.4 ) }
    dend_54 { pt3dadd( -10.4087, -54.112, 10.5819, 0.07 ) }
    dend_54 { pt3dadd( -10.5695, -54.4348, 10.6623, 0.81 ) }
    dend_54 { pt3dadd( -11.082, -55.5522, 10.9367, 0.07 ) }
    dend_54 { pt3dadd( -11.4213, -56.3614, 11.1554, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -6.60342, -46.6429, 8.73912, 1.92 ) }
    dend_53 { pt3dadd( -7.3025, -47.0221, 8.80049, 1.92 ) }
    dend_53 { pt3dadd( -8.0198, -47.3962, 8.8512, 2.06 ) }
    dend_53 { pt3dadd( -9.65722, -48.1721, 8.9128, 0.22 ) }
    dend_53 { pt3dadd( -10.1987, -48.4107, 8.93167, 0.66 ) }
    dend_53 { pt3dadd( -10.9505, -48.6927, 8.91432, 0.22 ) }
    dend_53 { pt3dadd( -11.4829, -48.867, 8.86624, 0.96 ) }
    dend_53 { pt3dadd( -11.8039, -48.9607, 8.83063, 1.47 ) }
    dend_53 { pt3dadd( -13.0916, -49.2734, 8.63118, 0.52 ) }
    dend_53 { pt3dadd( -13.8109, -49.3798, 8.46495, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_53 { pt3dadd( -15.2495, -49.5759, 8.06709, 0.15 ) }
    dend_53 { pt3dadd( -16.0432, -49.6975, 7.82983, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 2/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -26.5622, 27.4868, 44.8633, 0.07 ) }
    dend_48 { pt3dadd( -27.8941, 28.6996, 44.6129, 0.07 ) }
    dend_48 { pt3dadd( -28.5124, 29.2627, 44.4966, 0.96 ) }
    dend_48 { pt3dadd( -29.3419, 30.018, 44.3406, 0.07 ) }
    dend_48 { pt3dadd( -29.78, 30.4169, 44.2583, 0.29 ) }
    dend_48 { pt3dadd( -30.5078, 31.0797, 44.1214, 0.07 ) }
    dend_48 { pt3dadd( -31.2975, 31.7988, 43.9729, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -26.5622, 27.4868, 44.8633, 0.44 ) }
    dend_45 { pt3dadd( -27.2953, 26.412, 45.6512, 0.44 ) }
    dend_45 { pt3dadd( -27.8343, 25.5091, 46.4261, 0.96 ) }
    dend_45 { pt3dadd( -28.1921, 24.8657, 47.0441, 0.66 ) }
    dend_45 { pt3dadd( -28.5627, 24.194, 47.7006, 0.15 ) }
    dend_45 { pt3dadd( -28.7993, 23.8283, 48.0156, 0.15 ) }
    dend_45 { pt3dadd( -29.1706, 23.279, 48.4496, 0.29 ) }
    dend_45 { pt3dadd( -29.6995, 22.4881, 49.028, 0.29 ) }
    dend_45 { pt3dadd( -30.0434, 21.9858, 49.3331, 0.74 ) }
    dend_45 { pt3dadd( -30.4692, 21.2988, 49.6918, 1.62 ) }
    dend_45 { pt3dadd( -31.4296, 19.5388, 50.5017, 0.22 ) }
    dend_45 { pt3dadd( -31.7971, 18.8441, 50.7819, 1.18 ) }
    dend_45 { pt3dadd( -32.0076, 18.4614, 50.9136, 1.55 ) }
    dend_45 { pt3dadd( -32.564, 17.4298, 51.2238, 0.29 ) }
    dend_45 { pt3dadd( -33.0354, 16.5002, 51.5124, 0.22 ) }
    dend_45 { pt3dadd( -33.5001, 15.4524, 51.9003, 0.22 ) }
    dend_45 { pt3dadd( -33.7566, 14.7145, 52.2514, 0.22 ) }
    dend_45 { pt3dadd( -34.0097, 14.0527, 52.6139, 0.52 ) }
    dend_45 { pt3dadd( -34.1068, 13.7973, 52.7895, 0.52 ) }
    dend_45 { pt3dadd( -34.2983, 13.3022, 53.2199, 0.52 ) }
    dend_45 { pt3dadd( -34.4341, 12.9544, 53.5307, 0.52 ) }
    dend_45 { pt3dadd( -34.5724, 12.5232, 53.871, 0.52 ) }
    dend_45 { pt3dadd( -34.7749, 11.7881, 54.4087, 0.15 ) }
    dend_45 { pt3dadd( -34.8867, 11.3089, 54.7384, 0.15 ) }
    dend_45 { pt3dadd( -34.9662, 10.9391, 54.976, 0.44 ) }
    dend_45 { pt3dadd( -35.0882, 10.3207, 55.355, 1.11 ) }
    dend_45 { pt3dadd( -35.2729, 9.154, 55.9842, 0.15 ) }
    dend_45 { pt3dadd( -35.3393, 8.68725, 56.2057, 0.15 ) }
    dend_45 { pt3dadd( -35.4855, 7.69431, 56.6492, 0.22 ) }
    dend_45 { pt3dadd( -35.5893, 6.90282, 56.9886, 1.25 ) }
    dend_45 { pt3dadd( -35.6534, 6.15309, 57.3324, 1.99 ) }
    dend_45 { pt3dadd( -35.6811, 4.48612, 58.1684, 0.15 ) }
    dend_45 { pt3dadd( -35.6283, 3.8064, 58.5096, 1.03 ) }
    dend_45 { pt3dadd( -35.516, 3.12893, 58.8648, 1.03 ) }
    dend_45 { pt3dadd( -35.0967, 1.94821, 59.5524, 0.15 ) }
    dend_45 { pt3dadd( -34.6721, 1.19632, 60.0413, 0.15 ) }
    dend_45 { pt3dadd( -34.2056, 0.61242, 60.4526, 0.15 ) }
    dend_45 { pt3dadd( -33.5787, 0.0375389, 60.8946, 0.81 ) }
    dend_45 { pt3dadd( -32.9131, -0.538065, 61.2985, 1.33 ) }
    dend_45 { pt3dadd( -31.5934, -1.7354, 61.9833, 0.15 ) }
    dend_45 { pt3dadd( -31.1997, -2.18999, 62.1675, 1.25 ) }
    dend_45 { pt3dadd( -30.5814, -3.16027, 62.4376, 0.29 ) }
    dend_45 { pt3dadd( -30.0714, -4.3059, 62.6415, 0.22 ) }
    dend_45 { pt3dadd( -29.799, -5.21182, 62.7277, 0.15 ) }
    dend_45 { pt3dadd( -29.6067, -6.28403, 62.7182, 1.77 ) }
    dend_45 { pt3dadd( -29.4187, -8.45226, 62.4912, 0.07 ) }
    dend_45 { pt3dadd( -29.3904, -9.10035, 62.3889, 0.81 ) }
    dend_45 { pt3dadd( -29.3981, -10.2511, 62.1619, 0.07 ) }
    dend_45 { pt3dadd( -29.4427, -11.2168, 61.9471, 0.96 ) }
    dend_45 { pt3dadd( -29.4857, -12.1146, 61.7234, 2.06 ) }
    dend_45 { pt3dadd( -29.5437, -14.2106, 61.1882, 0.07 ) }
    dend_45 { pt3dadd( -29.5416, -15.2182, 60.94, 0.22 ) }
    dend_45 { pt3dadd( -29.5588, -16.3872, 60.699, 0.15 ) }
    dend_45 { pt3dadd( -29.5953, -17.3504, 60.5422, 1.47 ) }
    dend_45 { pt3dadd( -29.6749, -18.4091, 60.3871, 0.66 ) }
    dend_45 { pt3dadd( -29.8052, -19.4704, 60.2286, 0.66 ) }
    dend_45 { pt3dadd( -29.921, -20.1388, 60.1353, 1.77 ) }
    dend_45 { pt3dadd( -30.1923, -21.5615, 59.9364, 0.07 ) }
    dend_45 { pt3dadd( -30.2859, -21.9585, 59.8806, 0.22 ) }
    dend_45 { pt3dadd( -30.534, -22.8219, 59.7582, 0.22 ) }
    dend_45 { pt3dadd( -30.7895, -23.5432, 59.6552, 1.55 ) }
    dend_45 { pt3dadd( -31.3831, -24.9634, 59.4124, 0.15 ) }
    dend_45 { pt3dadd( -31.6657, -25.5865, 59.2742, 0.59 ) }
    dend_45 { pt3dadd( -32.0087, -26.3543, 59.0638, 0.15 ) }
    dend_45 { pt3dadd( -32.283, -26.9908, 58.8754, 0.15 ) }
    dend_45 { pt3dadd( -32.5253, -27.5704, 58.6957, 0.74 ) }
    dend_45 { pt3dadd( -32.8123, -28.2755, 58.4518, 1.25 ) }
    dend_45 { pt3dadd( -33.3859, -29.5408, 57.9755, 0.07 ) }
    dend_45 { pt3dadd( -33.7107, -30.2325, 57.7133, 0.15 ) }
    dend_45 { pt3dadd( -34.0046, -30.831, 57.5133, 0.74 ) }
    dend_45 { pt3dadd( -34.2927, -31.3628, 57.3642, 1.4 ) }
    dend_45 { pt3dadd( -34.8178, -32.2519, 57.1691, 0.15 ) }
    dend_45 { pt3dadd( -35.3787, -33.0703, 57.075, 0.07 ) }
    dend_45 { pt3dadd( -35.6924, -33.4432, 57.0766, 0.29 ) }
    dend_45 { pt3dadd( -36.6172, -34.3364, 57.1259, 0.07 ) }
    dend_45 { pt3dadd( -37.1102, -34.7695, 57.1679, 0.88 ) }
    dend_45 { pt3dadd( -37.4481, -35.039, 57.2022, 1.33 ) }
    dend_45 { pt3dadd( -38.5034, -35.796, 57.3286, 0.22 ) }
    dend_45 { pt3dadd( -39.2021, -36.2882, 57.4159, 0.22 ) }
    dend_45 { pt3dadd( -39.871, -36.73, 57.5006, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 3.7269, 35.6053, 38.7005, 0.15 ) }
    dend_43 { pt3dadd( 4.41514, 36.8903, 39.6433, 0.15 ) }
    dend_43 { pt3dadd( 4.62298, 37.3555, 40.0157, 0.22 ) }
    dend_43 { pt3dadd( 4.89603, 38.1279, 40.6857, 0.15 ) }
    dend_43 { pt3dadd( 5.03433, 38.605, 41.1017, 0.96 ) }
    dend_43 { pt3dadd( 5.20089, 39.2683, 41.6697, 0.29 ) }
    dend_43 { pt3dadd( 5.33448, 39.7783, 42.1076, 0.29 ) }
    dend_43 { pt3dadd( 5.4468, 40.3698, 42.6447, 0.29 ) }
    dend_43 { pt3dadd( 5.58775, 40.9368, 43.1464, 0.29 ) }
    dend_43 { pt3dadd( 5.7565, 41.4669, 43.6036, 1.25 ) }
    dend_43 { pt3dadd( 5.83578, 41.6677, 43.7789, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( 6.35265, 42.7629, 44.7739, 0.15 ) }
    dend_43 { pt3dadd( 6.82054, 43.5338, 45.5031, 1.33 ) }
    dend_43 { pt3dadd( 7.56791, 44.5434, 46.5013, 0.07 ) }
    dend_43 { pt3dadd( 8.01915, 45.0395, 47.0422, 0.59 ) }
    dend_43 { pt3dadd( 8.67088, 45.6614, 47.7873, 0.15 ) }
    dend_43 { pt3dadd( 9.26318, 46.1936, 48.451, 1.11 ) }
    dend_43 { pt3dadd( 9.7638, 46.6916, 49.0102, 2.14 ) }
    dend_43 { pt3dadd( 10.0231, 46.9911, 49.3007, 1.84 ) }
    dend_43 { pt3dadd( 10.7312, 48.2056, 50.2042, 0.15 ) }
    dend_43 { pt3dadd( 11.0108, 49.0031, 50.6266, 1.4 ) }
    dend_43 { pt3dadd( 11.1387, 49.713, 50.9067, 0.96 ) }
    dend_43 { pt3dadd( 11.277, 51.6361, 51.5861, 0.15 ) }
    dend_43 { pt3dadd( 11.2671, 52.4405, 51.8623, 0.96 ) }
    dend_43 { pt3dadd( 11.1101, 54.0929, 52.4732, 0.15 ) }
    dend_43 { pt3dadd( 11.0096, 54.6485, 52.6986, 1.18 ) }
    dend_43 { pt3dadd( 10.7858, 55.6885, 53.2205, 0.15 ) }
    dend_43 { pt3dadd( 10.5707, 56.6712, 53.8785, 0.59 ) }
    dend_43 { pt3dadd( 10.5058, 56.9818, 54.1579, 0.88 ) }
    dend_43 { pt3dadd( 10.3269, 57.9971, 55.241, 0.22 ) }
    dend_43 { pt3dadd( 10.252, 58.6416, 56.0313, 0.88 ) }
    dend_43 { pt3dadd( 10.2024, 59.1843, 56.729, 1.77 ) }
    dend_43 { pt3dadd( 10.1686, 60.1978, 58.0328, 0.29 ) }
    dend_43 { pt3dadd( 10.2046, 60.683, 58.6591, 0.81 ) }
    dend_43 { pt3dadd( 10.3473, 61.5443, 59.7775, 0.22 ) }
    dend_43 { pt3dadd( 10.5077, 62.1551, 60.5696, 0.37 ) }
    dend_43 { pt3dadd( 10.616, 62.4733, 60.9816, 0.37 ) }
    dend_43 { pt3dadd( 10.9286, 63.2319, 61.9617, 1.55 ) }
    dend_43 { pt3dadd( 11.4226, 64.2083, 63.2013, 0.07 ) }
    dend_43 { pt3dadd( 11.8545, 64.97, 64.1278, 0.22 ) }
    dend_43 { pt3dadd( 12.168, 65.4807, 64.722, 0.22 ) }
    dend_43 { pt3dadd( 12.453, 65.9375, 65.2354, 0.22 ) }
    dend_43 { pt3dadd( 12.7919, 66.4942, 65.8257, 0.07 ) }
    dend_43 { pt3dadd( 13.0861, 67.0094, 66.3257, 1.11 ) }
    dend_43 { pt3dadd( 13.2572, 67.3105, 66.5873, 1.4 ) }
    dend_43 { pt3dadd( 13.8911, 68.3303, 67.4283, 0.07 ) }
    dend_43 { pt3dadd( 14.2913, 68.9596, 67.9376, 0.74 ) }
    dend_43 { pt3dadd( 14.5287, 69.3657, 68.2524, 0.74 ) }
    dend_43 { pt3dadd( 14.9048, 70.0579, 68.7747, 0.22 ) }
    dend_43 { pt3dadd( 15.3417, 70.8835, 69.3855, 0.22 ) }
    dend_43 { pt3dadd( 15.6342, 71.4311, 69.7836, 0.96 ) }
    dend_43 { pt3dadd( 15.8325, 71.8058, 70.0479, 0.96 ) }
    dend_43 { pt3dadd( 16.5558, 73.2503, 71.0215, 0.15 ) }
    dend_43 { pt3dadd( 16.9384, 74.0598, 71.5556, 0.15 ) }
    dend_43 { pt3dadd( 17.0968, 74.4289, 71.7843, 0.22 ) }
    dend_43 { pt3dadd( 17.4842, 75.4861, 72.3605, 0.07 ) }
    dend_43 { pt3dadd( 17.6636, 76.0431, 72.648, 0.07 ) }
    dend_43 { pt3dadd( 17.9231, 76.9646, 73.0868, 0.96 ) }
    dend_43 { pt3dadd( 18.1137, 77.7297, 73.4224, 0.22 ) }
    dend_43 { pt3dadd( 18.3003, 78.5971, 73.7697, 1.25 ) }
    dend_43 { pt3dadd( 18.6669, 80.5121, 74.5049, 0.15 ) }
    dend_43 { pt3dadd( 18.8341, 81.458, 74.8511, 1.33 ) }
    dend_43 { pt3dadd( 19.0951, 82.977, 75.3962, 0.15 ) }
    dend_43 { pt3dadd( 19.1694, 83.4534, 75.5692, 0.22 ) }
    dend_43 { pt3dadd( 19.315, 84.5056, 75.9457, 0.15 ) }
    dend_43 { pt3dadd( 19.4022, 85.2294, 76.1964, 0.81 ) }
    dend_43 { pt3dadd( 19.4166, 85.3627, 76.2392, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.7269, 35.6053, 38.7005, 0.29 ) }
    dend_42 { pt3dadd( 4.2692, 36.0993, 39.9787, 0.29 ) }
    dend_42 { pt3dadd( 4.7639, 36.6584, 41.2048, 0.52 ) }
    dend_42 { pt3dadd( 5.03211, 37.0131, 41.8888, 1.25 ) }
    dend_42 { pt3dadd( 5.51908, 37.7061, 43.1213, 0.15 ) }
    dend_42 { pt3dadd( 5.74513, 38.0307, 43.6812, 0.15 ) }
    dend_42 { pt3dadd( 5.91228, 38.2831, 44.1075, 0.15 ) }
    dend_42 { pt3dadd( 6.17045, 38.753, 44.7712, 0.15 ) }
    dend_42 { pt3dadd( 6.37583, 39.1051, 45.2337, 0.81 ) }
    dend_42 { pt3dadd( 6.66413, 39.5539, 45.8477, 1.33 ) }
    dend_42 { pt3dadd( 7.15407, 40.2692, 46.8786, 0.22 ) }
    dend_42 { pt3dadd( 7.42704, 40.601, 47.4329, 0.22 ) }
    dend_42 { pt3dadd( 7.75689, 40.9019, 48.0292, 1.11 ) }
    dend_42 { pt3dadd( 8.03931, 41.1058, 48.5042, 1.7 ) }
    dend_42 { pt3dadd( 8.56907, 41.4699, 49.3793, 0.22 ) }
    dend_42 { pt3dadd( 8.84256, 41.6469, 49.8292, 0.88 ) }
    dend_42 { pt3dadd( 9.37975, 41.9368, 50.6591, 0.15 ) }
    dend_42 { pt3dadd( 9.69187, 42.0603, 51.1028, 0.29 ) }
    dend_42 { pt3dadd( 9.97042, 42.1342, 51.4903, 0.29 ) }
    dend_42 { pt3dadd( 10.3265, 42.2207, 52.0048, 0.15 ) }
    dend_42 { pt3dadd( 10.716, 42.337, 52.618, 0.15 ) }
    dend_42 { pt3dadd( 11.0168, 42.4571, 53.1279, 0.96 ) }
    dend_42 { pt3dadd( 11.3734, 42.6179, 53.7669, 0.66 ) }
    dend_42 { pt3dadd( 11.8524, 42.7208, 54.6423, 0.15 ) }
    dend_42 { pt3dadd( 12.1721, 42.7615, 55.241, 0.15 ) }
    dend_42 { pt3dadd( 12.5897, 42.8041, 56.0762, 0.81 ) }
    dend_42 { pt3dadd( 13.1873, 42.8915, 57.3595, 2.14 ) }
    dend_42 { pt3dadd( 13.4792, 42.952, 58.0312, 2.14 ) }
    dend_42 { pt3dadd( 14.3311, 43.2187, 60.0163, 0.15 ) }
    dend_42 { pt3dadd( 14.6431, 43.324, 60.7129, 0.15 ) }
    dend_42 { pt3dadd( 15.1176, 43.4562, 61.7174, 0.29 ) }
    dend_42 { pt3dadd( 15.4581, 43.5302, 62.4097, 1.33 ) }
    dend_42 { pt3dadd( 15.75, 43.5989, 63.0013, 1.62 ) }
    dend_42 { pt3dadd( 16.3227, 43.7945, 64.1553, 0.15 ) }
    dend_42 { pt3dadd( 16.504, 43.9098, 64.5578, 0.15 ) }
    dend_42 { pt3dadd( 16.7771, 44.088, 65.198, 0.15 ) }
    dend_42 { pt3dadd( 16.9261, 44.191, 65.5782, 0.15 ) }
    dend_42 { pt3dadd( 17.1041, 44.3005, 66.0846, 0.29 ) }
    dend_42 { pt3dadd( 17.332, 44.426, 66.8911, 0.66 ) }
    dend_42 { pt3dadd( 17.5744, 44.5888, 68.0764, 0.15 ) }
    dend_42 { pt3dadd( 17.6779, 44.7156, 68.7515, 0.15 ) }
    dend_42 { pt3dadd( 17.7413, 44.8539, 69.2861, 0.15 ) }
    dend_42 { pt3dadd( 17.7978, 45.0884, 69.9336, 0.66 ) }
    dend_42 { pt3dadd( 17.8579, 45.6577, 71.1927, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( 17.8891, 46.0824, 71.9854, 0.22 ) }
    dend_42 { pt3dadd( 17.9258, 46.4814, 72.675, 1.33 ) }
    dend_42 { pt3dadd( 17.9808, 46.9836, 73.4979, 1.92 ) }
    dend_42 { pt3dadd( 18.115, 48.0653, 75.2216, 0.37 ) }
    dend_42 { pt3dadd( 18.1871, 48.6751, 76.1667, 0.22 ) }
    dend_42 { pt3dadd( 18.2656, 49.3485, 77.1894, 0.22 ) }
    dend_42 { pt3dadd( 18.2876, 49.6734, 77.7207, 0.22 ) }
    dend_42 { pt3dadd( 18.2546, 49.9393, 78.2083, 0.22 ) }
    dend_42 { pt3dadd( 18.1536, 50.1505, 78.6951, 0.22 ) }
    dend_42 { pt3dadd( 18.0309, 50.2961, 79.1568, 0.22 ) }
    dend_42 { pt3dadd( 17.8828, 50.4732, 79.7103, 0.52 ) }
    dend_42 { pt3dadd( 17.5454, 50.964, 81.0006, 1.18 ) }
    dend_42 { pt3dadd( 17.2565, 51.4864, 82.2525, 1.4 ) }
    dend_42 { pt3dadd( 16.8648, 52.3779, 84.28, 0.81 ) }
    dend_42 { pt3dadd( 16.7079, 52.9014, 85.5059, 0.81 ) }
    dend_42 { pt3dadd( 16.6287, 53.4405, 86.8944, 1.7 ) }
    dend_42 { pt3dadd( 16.6776, 54.3176, 89.438, 0.29 ) }
    dend_42 { pt3dadd( 16.7945, 54.721, 90.7096, 0.29 ) }
    dend_42 { pt3dadd( 16.9004, 54.9342, 91.3998, 1.03 ) }
    dend_42 { pt3dadd( 17.1692, 55.3966, 92.8587, 0.22 ) }
    dend_42 { pt3dadd( 17.3929, 55.7674, 94.0334, 1.11 ) }
    dend_42 { pt3dadd( 17.6774, 56.1387, 95.456, 0.29 ) }
    dend_42 { pt3dadd( 17.8585, 56.3185, 96.409, 0.29 ) }
    dend_42 { pt3dadd( 17.9312, 56.4017, 96.9393, 0.52 ) }
    dend_42 { pt3dadd( 17.9834, 56.4828, 97.8377, 0.52 ) }
    dend_42 { pt3dadd( 17.9809, 56.5089, 98.1765, 0.52 ) }
    dend_42 { pt3dadd( 17.9718, 56.5168, 98.6996, 0.52 ) }
    dend_42 { pt3dadd( 18.0335, 56.4117, 99.5681, 0.52 ) }
    dend_42 { pt3dadd( 18.2146, 56.2942, 100.166, 0.52 ) }
    dend_42 { pt3dadd( 18.6835, 56.1154, 101.204, 0.22 ) }
    dend_42 { pt3dadd( 19.1754, 56.0314, 102.079, 0.15 ) }
    dend_42 { pt3dadd( 19.371, 56.0624, 102.437, 0.15 ) }
    dend_42 { pt3dadd( 19.7226, 56.2238, 103.075, 0.81 ) }
    dend_42 { pt3dadd( 20.3366, 56.6541, 104.195, 0.29 ) }
    dend_42 { pt3dadd( 20.7861, 57.0689, 105.042, 0.81 ) }
    dend_42 { pt3dadd( 21.1462, 57.5028, 105.733, 1.7 ) }
    dend_42 { pt3dadd( 21.9766, 58.7133, 107.41, 0.22 ) }
    dend_42 { pt3dadd( 22.3904, 59.4293, 108.252, 0.44 ) }
    dend_42 { pt3dadd( 22.5687, 59.8572, 108.627, 0.15 ) }
    dend_42 { pt3dadd( 22.7749, 60.475, 109.034, 0.88 ) }
    dend_42 { pt3dadd( 23.1541, 61.7728, 109.685, 0.22 ) }
    dend_42 { pt3dadd( 23.3409, 62.4046, 109.95, 0.88 ) }
    dend_42 { pt3dadd( 23.504, 62.9152, 110.134, 1.47 ) }
    dend_42 { pt3dadd( 24.1459, 64.8915, 110.859, 0.22 ) }
    dend_42 { pt3dadd( 24.3018, 65.3252, 111.025, 0.22 ) }
    dend_42 { pt3dadd( 24.5587, 65.8955, 111.288, 0.37 ) }
    dend_42 { pt3dadd( 25.2239, 67.0618, 111.992, 0.22 ) }
    dend_42 { pt3dadd( 25.5245, 67.5219, 112.34, 0.22 ) }
    dend_42 { pt3dadd( 25.8226, 67.9413, 112.745, 0.96 ) }
    dend_42 { pt3dadd( 26.0948, 68.2541, 113.141, 1.55 ) }
    dend_42 { pt3dadd( 26.9549, 69.1351, 114.426, 0.15 ) }
    dend_42 { pt3dadd( 27.5726, 69.6743, 115.339, 1.25 ) }
    dend_42 { pt3dadd( 28.1321, 70.1389, 116.181, 1.25 ) }
    dend_42 { pt3dadd( 28.7817, 70.627, 117.15, 0.74 ) }
    dend_42 { pt3dadd( 29.5357, 71.1091, 118.281, 0.15 ) }
    dend_42 { pt3dadd( 30.0341, 71.3828, 119.032, 0.29 ) }
    dend_42 { pt3dadd( 30.3749, 71.5241, 119.519, 0.29 ) }
    dend_42 { pt3dadd( 31.0002, 71.6986, 120.241, 0.29 ) }
    dend_42 { pt3dadd( 31.6655, 71.8467, 120.888, 0.81 ) }
    dend_42 { pt3dadd( 32.6547, 72.1039, 121.752, 0.15 ) }
    dend_42 { pt3dadd( 33.2072, 72.2953, 122.233, 1.11 ) }
    dend_42 { pt3dadd( 33.4934, 72.4166, 122.48, 1.77 ) }
    dend_42 { pt3dadd( 35.0188, 73.0998, 123.766, 0.22 ) }
    dend_42 { pt3dadd( 35.5742, 73.3289, 124.196, 0.22 ) }
    dend_42 { pt3dadd( 36.2841, 73.6411, 124.704, 0.22 ) }
    dend_42 { pt3dadd( 36.9346, 73.9206, 125.111, 0.22 ) }
    dend_42 { pt3dadd( 37.2842, 74.0819, 125.32, 0.44 ) }
    dend_42 { pt3dadd( 37.9827, 74.4323, 125.729, 0.44 ) }
    dend_42 { pt3dadd( 38.8874, 74.907, 126.255, 1.55 ) }
    dend_42 { pt3dadd( 39.8573, 75.3522, 126.804, 0.66 ) }
    dend_42 { pt3dadd( 41.1072, 75.7802, 127.506, 0.15 ) }
    dend_42 { pt3dadd( 41.5947, 75.9103, 127.794, 0.15 ) }
    dend_42 { pt3dadd( 42.186, 76.0408, 128.18, 0.37 ) }
    dend_42 { pt3dadd( 43.0909, 76.2073, 128.819, 0.15 ) }
    dend_42 { pt3dadd( 43.6776, 76.3028, 129.276, 0.81 ) }
    dend_42 { pt3dadd( 44.7417, 76.4376, 130.17, 0.22 ) }
    dend_42 { pt3dadd( 45.2885, 76.497, 130.633, 0.22 ) }
    dend_42 { pt3dadd( 45.8717, 76.5493, 131.106, 1.25 ) }
    dend_42 { pt3dadd( 46.1558, 76.5818, 131.328, 1.25 ) }
    dend_42 { pt3dadd( 47.2191, 76.7304, 132.082, 0.07 ) }
    dend_42 { pt3dadd( 47.9302, 76.8518, 132.538, 0.96 ) }
    dend_42 { pt3dadd( 49.3762, 77.1266, 133.375, 0.22 ) }
    dend_42 { pt3dadd( 50.096, 77.2463, 133.763, 1.03 ) }
    dend_42 { pt3dadd( 50.8248, 77.3516, 134.134, 1.77 ) }
    dend_42 { pt3dadd( 52.3045, 77.5853, 134.862, 0.15 ) }
    dend_42 { pt3dadd( 53.13, 77.7178, 135.247, 0.22 ) }
    dend_42 { pt3dadd( 54.1086, 77.8862, 135.702, 0.15 ) }
    dend_42 { pt3dadd( 54.825, 78.0321, 136.045, 1.03 ) }
    dend_42 { pt3dadd( 55.7287, 78.2286, 136.493, 0.22 ) }
    dend_42 { pt3dadd( 56.7663, 78.4663, 137.028, 0.22 ) }
    dend_42 { pt3dadd( 57.8516, 78.765, 137.61, 0.15 ) }
    dend_42 { pt3dadd( 58.5931, 78.9834, 138.009, 0.15 ) }
    dend_42 { pt3dadd( 59.3721, 79.2224, 138.437, 0.81 ) }
    dend_42 { pt3dadd( 59.6321, 79.3002, 138.581, 1.77 ) }
    dend_42 { pt3dadd( 60.7364, 79.5891, 139.137, 0.07 ) }
    dend_42 { pt3dadd( 61.5927, 79.7863, 139.506, 0.59 ) }
    dend_42 { pt3dadd( 63.4634, 80.2178, 140.163, 0.22 ) }
    dend_42 { pt3dadd( 63.8715, 80.3081, 140.287, 0.59 ) }
    dend_42 { pt3dadd( 64.6562, 80.4624, 140.499, 0.66 ) }
    dend_42 { pt3dadd( 66.2406, 80.76, 140.888, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 66.8874, 80.8672, 141.011, 0.07 ) }
    dend_42 { pt3dadd( 67.2901, 80.9139, 141.06, 0.52 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -31.2975, 31.7988, 43.9729, 0.15 ) }
    dend_50 { pt3dadd( -32.1595, 33.4582, 44.2644, 0.15 ) }
    dend_50 { pt3dadd( -32.5534, 34.7714, 44.2886, 0.15 ) }
    dend_50 { pt3dadd( -32.7688, 36.2944, 44.148, 0.07 ) }
    dend_50 { pt3dadd( -32.7752, 37.0478, 43.9898, 0.07 ) }
    dend_50 { pt3dadd( -32.6494, 38.732, 43.4642, 0.07 ) }
    dend_50 { pt3dadd( -32.4789, 40.0123, 42.948, 0.07 ) }
    dend_50 { pt3dadd( -32.2803, 40.5826, 42.5936, 0.07 ) }
    dend_50 { pt3dadd( -31.9824, 41.0939, 42.1773, 0.29 ) }
    dend_50 { pt3dadd( -31.4301, 41.7679, 41.496, 0.29 ) }
    dend_50 { pt3dadd( -31.0724, 42.1399, 41.0654, 0.29 ) }
    dend_50 { pt3dadd( -30.7295, 42.4729, 40.6542, 0.29 ) }
    dend_50 { pt3dadd( -30.2821, 42.8799, 40.1126, 0.29 ) }
    dend_50 { pt3dadd( -29.4991, 43.6223, 39.0685, 0.22 ) }
    dend_50 { pt3dadd( -29.0073, 44.1282, 38.3076, 0.22 ) }
    dend_50 { pt3dadd( -28.276, 44.9614, 37.0356, 0.88 ) }
    dend_50 { pt3dadd( -27.6882, 45.6694, 35.922, 0.22 ) }
    dend_50 { pt3dadd( -27.4463, 45.9903, 35.4115, 0.22 ) }
    dend_50 { pt3dadd( -27.097, 46.5032, 34.5858, 0.15 ) }
    dend_50 { pt3dadd( -26.7488, 47.1112, 33.6557, 0.15 ) }
    dend_50 { pt3dadd( -26.3964, 47.7253, 32.7122, 0.15 ) }
    dend_50 { pt3dadd( -26.0613, 48.2674, 31.8779, 0.15 ) }
    dend_50 { pt3dadd( -25.743, 48.7348, 31.1817, 0.74 ) }
    dend_50 { pt3dadd( -25.453, 49.1534, 30.5938, 0.74 ) }
    dend_50 { pt3dadd( -24.9683, 49.7832, 29.7002, 0.15 ) }
    dend_50 { pt3dadd( -24.3373, 50.5118, 28.582, 0.22 ) }
    dend_50 { pt3dadd( -24.0512, 50.8033, 28.0705, 0.22 ) }
    dend_50 { pt3dadd( -23.538, 51.2227, 27.1895, 0.22 ) }
    dend_50 { pt3dadd( -23.3, 51.3756, 26.7962, 0.22 ) }
    dend_50 { pt3dadd( -22.8564, 51.6123, 26.0546, 0.22 ) }
    dend_50 { pt3dadd( -22.4086, 51.7558, 25.2709, 0.22 ) }
    dend_50 { pt3dadd( -22.0949, 51.7808, 24.6995, 0.22 ) }
    dend_50 { pt3dadd( -21.705, 51.7504, 23.9721, 0.22 ) }
    dend_50 { pt3dadd( -21.3453, 51.6978, 23.3302, 0.22 ) }
    dend_50 { pt3dadd( -20.8234, 51.6544, 22.3452, 0.22 ) }
    dend_50 { pt3dadd( -20.1724, 51.6173, 20.9603, 0.44 ) }
    dend_50 { pt3dadd( -19.8216, 51.594, 20.0807, 0.44 ) }
    dend_50 { pt3dadd( -19.7095, 51.5793, 19.7562, 0.44 ) }
    dend_50 { pt3dadd( -19.3955, 51.4809, 18.7736, 0.44 ) }
    dend_50 { pt3dadd( -19.0252, 51.282, 17.7365, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 42/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -31.2975, 31.7988, 43.9729, 1.03 ) }
    dend_49 { pt3dadd( -31.6636, 32.4625, 44.3581, 1.03 ) }
    dend_49 { pt3dadd( -32.5485, 34.1453, 45.5577, 0.07 ) }
    dend_49 { pt3dadd( -32.8515, 34.7414, 46.0378, 0.07 ) }
    dend_49 { pt3dadd( -33.0432, 35.2378, 46.4738, 0.22 ) }
    dend_49 { pt3dadd( -33.2999, 36.0773, 47.2543, 0.07 ) }
    dend_49 { pt3dadd( -33.4674, 36.7138, 47.8532, 0.37 ) }
    dend_49 { pt3dadd( -33.6984, 37.7891, 48.9303, 0.15 ) }
    dend_49 { pt3dadd( -33.8432, 38.7014, 49.9078, 1.33 ) }
    dend_49 { pt3dadd( -34.1541, 40.7999, 52.1929, 0.07 ) }
    dend_49 { pt3dadd( -34.3349, 42.0529, 53.5793, 0.07 ) }
    dend_49 { pt3dadd( -34.4254, 42.7228, 54.3219, 0.66 ) }
    dend_49 { pt3dadd( -34.5004, 43.4533, 55.1171, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -39.871, -36.73, 57.5006, 0.07 ) }
    dend_47 { pt3dadd( -40.8244, -37.6509, 57.3418, 0.07 ) }
    dend_47 { pt3dadd( -41.4242, -38.2304, 57.2419, 0.37 ) }
    dend_47 { pt3dadd( -42.1005, -38.8837, 57.1293, 0.22 ) }
    dend_47 { pt3dadd( -42.7997, -39.5592, 57.0129, 0.88 ) }
    dend_47 { pt3dadd( -43.2641, -40.0078, 56.9355, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -39.871, -36.73, 57.5006, 0.07 ) }
    dend_46 { pt3dadd( -40.4531, -34.6862, 56.6518, 0.07 ) }
    dend_46 { pt3dadd( -40.6876, -33.8627, 56.3098, 0.44 ) }
    dend_46 { pt3dadd( -40.9623, -32.8982, 55.9092, 0.15 ) }
    dend_46 { pt3dadd( -41.265, -31.8354, 55.4679, 0.74 ) }
    dend_46 { pt3dadd( -41.6688, -30.4174, 54.8789, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, axon_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, axon_1, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_5 = new SectionList()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_57 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_29 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_17 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_56 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_60 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 3
    dend_0 nseg = 5
    dend_33 nseg = 3
    dend_26 nseg = 5
    dend_14 nseg = 3
    dend_11 nseg = 3
    dend_2 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_28 nseg = 5
    dend_13 nseg = 13
    dend_12 nseg = 7
    dend_57 nseg = 3
    dend_51 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 9
    dend_29 nseg = 3
    dend_24 nseg = 9
    dend_9 nseg = 7
    dend_8 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 5
    dend_62 nseg = 5
    dend_61 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_45 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 7
    dend_50 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_DBC_6649d38fd5_0_0


