// Cell: bIR215_L4_DBC_e57b56d14c_0_0
/*
{
  "id" : "bIR215_L4_DBC_e57b56d14c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -11.3653, -2.34, 2.22", "-1.04385, -15.1977, -0.760576, 2.22", "-1.43577, -19.1083, 0.723469, 2.49", "-2.02401, -25.9011, 3.0854, 2.49", "-2.3682, -32.4652, 5.02793, 2.49", "-2.46491, -35.444, 5.80473, 1.94", "-2.50821, -38.6545, 6.55149, 1.38", "-2.41444, -42.5598, 7.34393, 1.11", "-2.29129, -45.1937, 7.75446, 0.83", "-1.95511, -51.8016, 8.37186, 1.11", "-1.84732, -54.4677, 8.40735, 1.11", "-1.71254, -57.6585, 8.366, 1.38", "-1.56034, -60.7121, 8.2754, 0.83", "-1.39993, -63.3108, 8.21273, 1.66", "-1.21098, -65.7701, 8.17323, 1.11", "-0.755674, -71.095, 8.03512, 1.66", "-0.481711, -74.0134, 7.95234, 1.38", "-0.088946, -77.7669, 7.83596, 1.94", "0.425664, -81.7247, 7.70404, 1.38", "1.13408, -85.8373, 7.56112, 1.38", "2.21175, -90.91, 7.38516, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 9.23473, -0.86, 2.22", "-0.991579, 14.0048, -0.832029, 1.94", "-0.649315, 17.7347, -0.711279, 1.94", "-0.302568, 23.3178, -0.349873, 1.94", "-0.210824, 25.3537, -0.191678, 1.38", "0.0725411, 29.9553, 0.148501, 2.22", "0.350657, 34.4716, 0.482379, 1.94", "0.712553, 40.579, 0.95903, 1.94", "0.920727, 44.9794, 1.39907, 1.94", "1.00478, 49.2381, 1.9637, 1.94", "1.06792, 55.0071, 2.73602, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.21175, -90.91, 7.38516, 0.55", "3.17145, -92.7642, 8.06895, 0.55", "4.10531, -94.3496, 8.91104, 0.55", "5.43401, -96.5051, 10.3981, 0.28", "6.99258, -98.5587, 12.0044, 0.55", "8.89428, -100.798, 13.8059, 0.28", "10.4873, -102.541, 15.3995, 1.11", "13.0116, -105.153, 18.0734, 0.28", "14.613, -106.722, 20.0897, 0.83", "16.9579, -108.867, 23.2762, 0.83", "18.3449, -110.11, 25.2572, 0.83", "20.679, -112.244, 28.6439, 0.83", "21.8915, -113.344, 30.4176, 1.11", "25.6509, -116.945, 35.5748, 0.28", "26.5014, -117.811, 36.605, 0.28", "27.2498, -118.604, 37.4259, 0.55", "28.3925, -119.747, 38.4287, 0.55", "30.8785, -122.07, 39.9926, 0.55", "33.2744, -124.091, 41.1437, 0.55", "35.9507, -126.25, 42.0189, 0.83", "38.4698, -128.093, 42.8083, 1.11", "40.6697, -129.662, 43.5041, 0.55", "41.8657, -130.538, 43.898, 1.38", "43.4244, -131.674, 44.4362, 0.55", "45.1902, -132.744, 45.0363, 1.11", "48.9877, -134.835, 46.2249, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.21175, -90.91, 7.38516, 1.38", "2.02614, -91.9554, 7.21947, 1.38", "1.42013, -95.0227, 6.99737, 1.38", "1.04247, -96.9342, 6.85895, 1.11", "0.221679, -101.088, 6.55813, 1.66", "-0.301377, -103.736, 6.36642, 2.22", "-0.568092, -105.086, 6.26867, 2.22", "-1.24074, -108.96, 5.89954, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.06792, 55.0071, 2.73602, 1.38", "0.944155, 58.0182, 2.7749, 1.38", "0.92937, 60.0603, 2.76737, 1.38", "0.955258, 63.0457, 2.72491, 1.11", "1.09143, 67.6391, 2.69738, 1.38", "1.14947, 69.9335, 2.67979, 1.38", "1.1657, 73.9397, 2.68819, 1.38", "1.12645, 79.009, 2.71447, 1.38", "1.00812, 82.7019, 2.75631, 1.38", "0.863511, 86.139, 2.81053, 1.38", "0.63042, 89.3479, 2.89317, 1.38", "-0.00590203, 94.701, 3.1017, 1.66", "-0.501153, 97.774, 3.2595, 1.38", "-1.15254, 101.27, 3.35602, 1.38", "-1.93484, 105.286, 3.34586, 1.38", "-2.5194, 108.491, 3.23003, 1.38", "-2.76892, 110.193, 3.13558, 1.38", "-3.06782, 112.827, 2.94721, 1.11", "-3.43292, 116.814, 2.66001, 1.11", "-3.62611, 121.015, 2.33571, 1.11", "-3.72464, 125.258, 2.03892, 1.38", "-3.72996, 128.109, 1.90462, 1.11", "-3.73388, 130.844, 1.85702, 1.38", "-3.72352, 132.607, 1.91785, 1.38", "-3.64827, 135.424, 2.24074, 1.38", "-3.56561, 139.456, 2.84482, 1.94", "-3.49917, 141.589, 3.19547, 1.66", "-3.46565, 142.485, 3.33584, 1.66", "-3.3701, 145.281, 3.73409, 1.66", "-3.23502, 149.692, 4.32126, 1.66", "-3.22214, 151.993, 4.61229, 1.38", "-3.26448, 155.625, 5.01829, 1.66", "-3.30037, 158.826, 5.28178, 1.11", "-3.33199, 162.375, 5.52487, 1.11", "-3.3718, 164.351, 5.61881, 1.11", "-3.39921, 166.533, 5.69065, 1.11", "-3.37384, 168.167, 5.75059, 1.11", "-3.20449, 171.637, 5.88321, 1.38", "-3.00374, 174.282, 5.98324, 1.11", "-2.83888, 176.264, 6.04952, 1.38", "-2.65572, 178.515, 6.11353, 1.38", "-2.4982, 181.081, 6.17706, 0.83", "-2.39762, 184.188, 6.24716, 1.38", "-2.41246, 186.667, 6.29555, 0.83", "-2.4916, 189.185, 6.32239, 1.38", "-2.62646, 191.168, 6.3604, 1.38", "-2.93693, 194.421, 6.41597, 1.38", "-3.06298, 195.857, 6.42844, 1.38", "-3.20658, 198.085, 6.42301, 1.11", "-3.27948, 200.857, 6.37978, 1.11", "-3.24933, 204.863, 6.26867, 1.66", "-3.11666, 207.44, 6.15975, 1.11", "-3.02299, 208.46, 6.16723, 1.11", "-2.88705, 210.229, 6.27464, 1.38", "-2.73193, 212.466, 6.51651, 1.38", "-2.61221, 214.987, 6.90093, 1.94", "-2.5795, 217.597, 7.40137, 1.94", "-2.71333, 221.854, 8.29789, 1.11", "-2.90785, 224.225, 8.79116, 1.11", "-3.19545, 226.469, 9.24957, 1.38", "-3.6509, 229.169, 9.76054, 1.38", "-4.06421, 231.428, 10.1179, 1.11", "-4.48172, 233.912, 10.3869, 0.83", "-4.92073, 236.753, 10.5163, 0.83", "-5.15844, 238.393, 10.5855, 0.83", "-5.57833, 241.241, 10.7034, 1.11", "-5.89496, 243.743, 10.7705, 1.11", "-6.2227, 246.318, 10.8181, 1.38", "-6.73508, 250.234, 10.8746, 1.38", "-7.021, 252.633, 10.8937, 1.11", "-7.34633, 255.479, 10.9063, 1.38", "-7.64991, 257.814, 10.8876, 0.83", "-8.12578, 260.933, 10.8564, 0.83", "-8.49395, 263.407, 10.799, 1.38", "-8.6017, 264.52, 10.7489, 1.38", "-8.77543, 266.561, 10.6362, 1.11", "-9.07364, 269.933, 10.4328, 1.38", "-9.23194, 271.987, 10.2976, 1.11", "-9.31023, 274.005, 10.1256, 1.11", "-9.36695, 276.025, 9.94689, 1.11", "-9.44346, 278.545, 9.72461, 1.11", "-9.55371, 282.879, 9.31725, 1.11", "-9.57913, 285.423, 9.07592, 1.11", "-9.61882, 288.231, 8.87974, 1.38", "-9.68759, 291.113, 8.77291, 1.38", "-9.77796, 293.808, 8.74915, 0.83", "-9.81833, 295.881, 8.7892, 1.38", "-9.82171, 297.838, 8.8888, 1.38", "-9.82167, 300.495, 9.09813, 1.11", "-9.79697, 302.261, 9.27062, 0.55", "-9.67707, 304.02, 9.42982, 1.11", "-9.54859, 305.685, 9.57308, 1.11", "-9.40915, 307.463, 9.69101, 0.83", "-9.26597, 309.343, 9.7426, 0.83", "-9.15339, 311.051, 9.72217, 0.83", "-9.04298, 314.162, 9.70696, 1.11", "-8.97587, 316.193, 9.66136, 1.66", "-8.98907, 318.145, 9.61089, 1.66", "-9.11885, 320.675, 9.55905, 0.83", "-9.24786, 322.705, 9.50648, 0.83", "-9.39904, 325.572, 9.41379, 1.11", "-9.62913, 328.983, 9.30504, 0.83", "-9.85978, 332.794, 9.18036, 0.83", "-9.99034, 334.975, 9.10742, 0.83", "-10.2763, 339.482, 8.9646, 1.38", "-10.6051, 343.985, 8.84925, 1.38", "-10.7623, 345.991, 8.81375, 1.11", "-11.1015, 349.102, 8.82072, 1.11", "-11.3402, 351.077, 8.82925, 0.83", "-11.571, 352.464, 8.85323, 0.83", "-12.0695, 354.785, 9.04056, 1.38", "-12.3109, 355.992, 9.23064, 1.38", "-12.6887, 358.821, 9.7686, 0.83", "-12.8284, 360.754, 10.1814, 0.83", "-12.9716, 363.843, 10.6969, 0.83", "-13.0025, 366.732, 11.1839, 0.83", "-12.9086, 370.442, 11.8234, 1.38", "-12.7999, 372.961, 12.2701, 1.38", "-12.5992, 374.715, 12.5722, 1.38", "-11.8734, 378.783, 13.1745, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.06792, 55.0071, 2.73602, 1.11", "1.06653, 59.4752, -1.93597, 1.11", "1.10312, 60.8555, -3.18731, 1.11", "1.08945, 63.2324, -5.3815, 1.11", "0.942665, 70.046, -11.4293, 1.11", "0.868289, 72.5711, -13.4133, 1.11", "0.716586, 76.1165, -15.951, 0.83", "0.569365, 78.236, -17.2323, 0.83", "0.201202, 84.2925, -20.5055, 1.11", "0.0601939, 87.062, -21.7183, 1.11", "-0.303464, 91.4126, -22.9702, 1.11", "-0.79375, 95.397, -23.7529, 1.11", "-1.17709, 98.1739, -24.0102, 1.38", "-1.38851, 100.122, -23.9354, 1.38", "-1.54688, 102.379, -23.6261, 1.11", "-1.82657, 106.681, -23.0133, 1.11", "-2.07393, 111.229, -22.4869, 0.83", "-2.09786, 111.948, -22.3851, 0.83", "-2.18161, 116.337, -21.912, 1.66", "-2.29631, 120.099, -21.7281, 0.83", "-2.32422, 120.823, -21.7411, 0.83", "-2.41716, 123.891, -21.9915, 1.66", "-2.5041, 125.82, -22.2346, 1.66", "-2.62814, 128.261, -22.461, 1.11", "-2.84413, 131.138, -22.677, 1.11", "-3.08844, 134.224, -22.789, 1.11", "-3.34654, 137.906, -22.9559, 1.66", "-3.56516, 141.385, -23.0696, 1.66", "-3.83011, 145.02, -23.2633, 0.83", "-4.07278, 148.22, -23.5655, 0.83", "-4.21404, 150.479, -23.8872, 0.83", "-4.3436, 153.722, -24.4359, 1.66", "-4.43198, 156.826, -25.0224, 0.55", "-4.50897, 159.854, -25.5866, 0.55", "-4.5128, 163.237, -26.1554, 1.38", "-4.42495, 166.055, -26.5106, 1.94", "-4.30102, 169.456, -26.8149, 0.83", "-4.24445, 171.348, -26.9066, 0.83", "-4.19851, 174.543, -26.988, 1.94", "-4.16183, 178.561, -26.9065, 1.94", "-4.18755, 181.178, -26.813, 1.11", "-4.18851, 184.25, -26.5229, 1.11", "-4.19681, 187.032, -26.1604, 1.11", "-4.19452, 188.636, -25.8999, 1.11", "-4.20654, 190.275, -25.626, 1.11", "-4.36173, 196.375, -24.5871, 2.22", "-4.48877, 203.355, -23.4429, 0.83", "-4.49479, 205.391, -23.1523, 0.83", "-4.43673, 208.143, -22.8346, 1.11", "-4.36335, 211.572, -22.5625, 0.55", "-4.4067, 214.24, -22.47, 2.22", "-4.50217, 215.908, -22.5542, 1.94", "-4.66988, 218.326, -22.9072, 0.83", "-4.78963, 220.902, -23.2781, 0.83", "-4.85772, 223.492, -23.6181, 0.83", "-4.96043, 226.227, -23.8861, 1.66", "-5.09536, 229.235, -24.1516, 0.83", "-5.17493, 230.956, -24.2673, 0.83", "-5.2457, 232.416, -24.3674, 1.11", "-5.38795, 234.671, -24.538, 0.83", "-5.59134, 238.615, -24.8846, 0.83", "-5.63218, 239.328, -24.9467, 0.83", "-5.96041, 243.263, -25.2445, 1.94", "-6.2117, 246.197, -25.4698, 0.55", "-6.48192, 249.512, -25.8024, 0.55", "-6.53951, 250.11, -25.8884, 0.55", "-7.05794, 254.83, -26.7039, 2.22", "-7.38362, 258.435, -27.3677, 0.83", "-7.4844, 260.069, -27.6601, 0.83", "-7.61449, 263.936, -28.294, 1.38", "-7.59939, 267.345, -28.8265, 0.55", "-7.52893, 270.372, -29.2324, 0.55", "-7.3187, 274.578, -29.8268, 0.83", "-6.84837, 280.496, -30.3337, 0.83", "-6.68262, 282.16, -30.3888, 2.49", "-6.31438, 285.373, -30.3081, 2.49", "-5.73112, 290.368, -29.9918, 0.83", "-5.41317, 293.181, -29.7773, 0.83", "-5.05728, 298.761, -29.2852, 0.83", "-4.9847, 300.414, -29.129, 0.83", "-4.97994, 304.005, -28.8083, 1.66", "-5.03878, 307.635, -28.5258, 0.83", "-5.10335, 310.288, -28.3561, 0.83", "-5.22576, 314.253, -28.1726, 0.83", "-5.31137, 317.316, -28.1643, 1.94", "-5.33362, 322.383, -28.1579, 0.83", "-5.27527, 327.608, -28.1562, 0.83", "-5.22567, 329.954, -28.1568, 0.83", "-5.17304, 332.906, -28.157, 1.11", "-5.13854, 335.194, -28.1568, 2.49", "-5.17935, 339.111, -28.1504, 0.83", "-5.24358, 340.46, -28.1452, 0.83", "-5.42092, 342.737, -28.1322, 0.83", "-5.72032, 346.511, -28.1103, 0.83", "-5.97625, 350.197, -28.1709, 0.83", "-6.30585, 354.513, -28.3166, 1.11", "-6.55339, 358.29, -28.5443, 1.66", "-6.71024, 361.909, -28.8124, 0.83", "-6.79803, 364.868, -29.0845, 0.83", "-6.74964, 368.274, -29.4596, 0.83", "-6.64884, 370.775, -29.7687, 0.83", "-6.55366, 373.532, -30.1332, 0.83", "-6.40105, 377.84, -30.6981, 1.66", "-6.29502, 381.261, -31.1327, 0.83", "-6.24487, 383.073, -31.3361, 0.83", "-6.16796, 387.469, -31.6934, 1.38", "-6.02415, 391.595, -32.0168, 0.83", "-5.96274, 393.884, -32.1768, 0.83", "-5.93042, 395.255, -32.2888, 1.66", "-5.9038, 398.033, -32.482, 1.66", "-6.00525, 400.833, -32.6611, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "48.9877, -134.835, 46.2249, 0.83", "49.9084, -134.766, 47.9798, 0.83", "50.4805, -134.702, 49.216, 0.28", "51.8575, -134.548, 52.1917, 0.55", "52.4003, -134.488, 53.3648, 0.55", "53.1832, -134.401, 55.0566, 0.55", "55.7001, -134.12, 60.4958, 0.28", "55.9849, -134.134, 61.2818, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "48.9877, -134.835, 46.2249, 0.55", "49.6964, -135.902, 47.6239, 0.55", "49.8835, -136.08, 48.0077, 0.83", "50.3269, -136.568, 48.9957, 0.28", "50.4919, -136.784, 49.4424, 0.83", "50.8219, -137.195, 50.3121, 0.83", "51.6324, -138.172, 52.3744, 0.83", "52.7656, -139.31, 54.9125, 0.83", "53.1742, -139.683, 55.9396, 0.83", "54.1768, -140.346, 58.5877, 1.11", "54.445, -140.472, 59.5213, 0.83", "54.5155, -140.476, 59.8723, 0.83", "54.6196, -140.248, 61.1429, 0.83", "54.5158, -139.343, 63.6019, 0.83", "54.3957, -138.495, 65.2897, 0.83", "54.1216, -137.132, 67.2959, 0.83", "53.9104, -136.436, 68.2866, 1.11", "53.507, -135.36, 69.7586, 0.28", "53.4022, -135.152, 70.0304, 0.55", "52.9819, -134.184, 71.0231, 0.28", "52.5491, -133.675, 71.5833, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.24074, -108.96, 5.89954, 1.11", "-2.27387, -110.063, 6.44148, 1.11", "-3.46095, -111.579, 7.13922, 1.11", "-6.19907, -115.837, 8.83535, 1.38", "-7.64688, -118.374, 9.92167, 1.38", "-8.71346, -120.243, 10.722, 1.66", "-10.4049, -123.206, 11.9911, 1.11", "-11.2632, -124.922, 12.7381, 1.11", "-12.3184, -127.594, 13.8596, 1.38", "-13.5871, -132.163, 15.549, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.24074, -108.96, 5.89954, 1.38", "-1.2713, -114.552, 5.95201, 1.38", "-1.18244, -119.072, 6.09293, 1.94", "-1.07399, -122.355, 5.92682, 1.38", "-0.779915, -127.793, 4.87335, 1.94", "-0.393627, -132.014, 3.68368, 0.83", "-0.0718616, -134.564, 2.79066, 0.83", "0.544784, -137.833, 1.43502, 1.38", "1.86747, -142.741, -1.16778, 1.94", "3.72619, -147.939, -4.65966, 0.83", "4.41695, -149.531, -5.97056, 0.83", "6.25331, -153.404, -9.84296, 1.11", "7.36626, -155.62, -12.1722, 0.55", "7.90715, -156.782, -13.469, 0.55", "8.90271, -159.179, -16.1161, 0.55", "9.30663, -160.423, -17.6111, 0.83", "10.0772, -163.207, -21.2065, 0.55", "10.753, -165.948, -25.0801, 1.66", "11.6067, -170.271, -31.3323, 0.55", "11.8486, -172.144, -33.9838, 1.66", "12.1212, -176.193, -39.4372, 0.55", "12.2597, -177.967, -41.8684, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.8734, 378.783, 13.1745, 0.83", "-12.5495, 380.851, 11.7213, 0.83", "-13.3924, 383.132, 10.1768, 0.83", "-14.3503, 386.119, 8.36597, 0.55", "-15.1396, 389.081, 6.63262, 0.83", "-15.829, 392.077, 5.01329, 0.28", "-16.1183, 393.468, 4.32723, 0.55", "-16.3637, 394.42, 3.90184, 0.55", "-16.9621, 397.205, 2.78516, 1.11", "-17.301, 399.591, 2.01641, 0.55", "-17.5249, 401.644, 1.45269, 1.11", "-17.6698, 403.419, 1.06144, 1.11", "-17.848, 406.094, 0.587295, 0.28", "-18.223, 409.568, -0.0668232, 0.55", "-18.8262, 413.634, -0.825847, 0.55", "-19.0908, 415.717, -1.16627, 0.55", "-19.2517, 417.245, -1.3971, 0.28", "-19.3401, 419.477, -1.60693, 0.83", "-19.2592, 423.851, -1.68353, 1.38", "-19.2183, 425.936, -1.58099, 1.38", "-18.9476, 430.71, -1.17208, 0.83", "-18.8016, 432.988, -0.909344, 0.83", "-18.2787, 439.301, 0.0434918, 0.83", "-18.0871, 441.473, 0.428251, 0.83", "-17.6673, 444.948, 1.20989, 0.83", "-17.5672, 445.832, 1.42378, 0.83", "-17.2385, 448.864, 2.13695, 1.38", "-17.0006, 450.988, 2.55181, 0.55", "-16.7911, 453.555, 2.87683, 0.55", "-16.626, 454.969, 2.9374, 0.55", "-16.4814, 456.003, 2.91201, 0.28", "-16.0731, 458.869, 2.67693, 0.83", "-15.7486, 461.079, 2.30798, 0.55", "-15.3775, 463.455, 1.76935, 0.83", "-14.8615, 466.868, 0.931049, 0.55", "-14.5916, 468.849, 0.439426, 1.66", "-14.2119, 471.948, -0.322838, 1.66", "-13.8681, 475.338, -1.10668, 0.83", "-13.649, 478.065, -1.68035, 0.83", "-13.5244, 480.305, -2.07912, 0.83", "-13.494, 481.644, -2.25341, 0.28", "-13.4863, 483.91, -2.42087, 1.11", "-13.6111, 487.315, -2.45909, 0.55", "-13.7232, 489.275, -2.39697, 0.55", "-13.879, 491.322, -2.34179, 0.55", "-14.0241, 492.674, -2.31282, 0.55", "-14.3437, 494.627, -2.24946, 1.11", "-14.7948, 496.775, -2.16408, 0.28", "-15.0231, 497.781, -2.126, 0.55", "-15.4293, 500.177, -2.10851, 0.55", "-15.8765, 503.998, -2.17746, 0.55", "-15.9527, 505.345, -2.22816, 0.83", "-16.0144, 507.481, -2.37721, 0.83", "-15.9981, 510.545, -2.58941, 0.83", "-15.8413, 513.453, -2.76749, 0.83", "-15.5812, 515.689, -2.93609, 0.83", "-14.6303, 520.603, -3.4607, 1.11", "-14.0289, 523.12, -3.78067, 0.28", "-13.5984, 524.611, -4.03107, 0.55", "-13.01, 526.233, -4.17525, 0.55", "-12.4162, 527.608, -4.18347, 0.55", "-11.8937, 528.538, -4.13893, 0.55", "-9.90808, 531.372, -4.0095, 0.55", "-8.53011, 533.383, -3.91441, 0.83", "-5.33331, 538.464, -4.07017, 0.55", "-4.81688, 539.335, -4.09513, 0.83", "-3.8846, 541.064, -4.13776, 0.83", "-2.84961, 543.232, -4.22134, 0.55", "-2.04814, 545.215, -4.36767, 0.83", "-1.04634, 548.433, -4.74487, 0.83", "-0.350512, 551.261, -5.16141, 0.55", "-0.109135, 552.304, -5.22824, 0.55", "0.420058, 554.643, -5.23086, 0.55", "0.671628, 555.775, -5.16695, 0.83", "1.15033, 557.77, -5.00667, 0.83", "1.84713, 561.307, -4.67573, 0.55", "2.14583, 563.025, -4.58236, 0.55", "2.58242, 565.609, -4.4135, 0.55", "2.90297, 567.733, -4.26706, 0.55", "3.52618, 571.684, -4.0295, 0.55", "3.93518, 574.478, -3.93384, 0.83", "4.10767, 575.924, -3.95399, 1.11", "4.35892, 578.797, -3.92977, 0.55", "4.57142, 582.912, -3.71269, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-11.8734, 378.783, 13.1745, 0.55", "-12.7996, 380.698, 13.1567, 0.55", "-13.4007, 382.072, 13.1725, 0.55", "-13.8444, 383.24, 13.1959, 0.55", "-14.2079, 384.295, 13.2191, 0.55", "-14.9246, 386.456, 13.2794, 0.55", "-15.3384, 387.71, 13.3171, 0.83", "-15.8561, 389.287, 13.4248, 0.83", "-16.3704, 390.927, 13.5263, 0.83", "-16.7266, 392.301, 13.5883, 0.55", "-16.9749, 393.454, 13.6272, 0.55", "-17.3181, 395.039, 13.701, 0.83", "-17.5929, 396.314, 13.7712, 0.83", "-18.0626, 398.314, 13.8993, 0.83", "-18.3767, 399.622, 13.9933, 0.83", "-18.6034, 400.641, 14.0731, 0.55", "-18.8512, 401.957, 14.1777, 0.83", "-19.0664, 403.419, 14.3147, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.00525, 400.833, -32.6611, 0.55", "-6.01619, 402.358, -32.6586, 0.55", "-6.03201, 404.565, -32.655, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.00525, 400.833, -32.6611, 0.55", "-9.35732, 401.084, -32.5262, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "55.9849, -134.134, 61.2818, 0.28", "55.9353, -136.997, 60.0121, 0.28", "55.9261, -137.525, 59.778, 1.11", "55.8827, -140.031, 58.6668, 0.28", "55.8783, -140.283, 58.5551, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "55.9849, -134.134, 61.2818, 1.66", "56.1688, -133.484, 61.8639, 1.66", "56.482, -131.72, 63.1228, 0.83", "56.7559, -129.964, 64.2994, 0.28", "56.8078, -129.369, 64.6628, 0.55", "56.8632, -127.319, 65.7668, 0.28", "56.881, -126.093, 66.4005, 0.83", "56.8425, -124.497, 67.223, 0.83", "56.7666, -123.495, 67.6704, 0.28", "56.6182, -122.048, 68.2382, 0.55", "56.3405, -120.737, 68.6691, 0.55", "55.8293, -119.143, 69.093, 0.28", "55.6309, -118.665, 69.212, 0.83", "55.0465, -117.328, 69.53, 0.28", "54.3001, -115.772, 69.8497, 0.55", "53.3336, -113.891, 70.2115, 0.28", "52.5683, -112.591, 70.424, 1.11", "51.908, -111.628, 70.5081, 0.28", "51.0373, -110.402, 70.5777, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-13.5871, -132.163, 15.549, 0.83", "-12.6113, -137.229, 16.645, 0.83", "-12.0407, -139.703, 17.2121, 0.83", "-11.1101, -144.099, 18.1411, 0.83", "-10.6893, -147.355, 18.9496, 0.55", "-10.5727, -150.374, 19.8142, 0.83", "-10.7051, -153.276, 20.7686, 0.83", "-11.0517, -155.428, 21.7146, 0.83", "-11.993, -158.956, 23.4605, 0.83", "-13.5058, -163.211, 25.717, 0.83", "-14.6887, -165.994, 27.161, 0.83", "-16.8614, -170.427, 29.4865, 1.11", "-18.6154, -173.75, 31.2246, 0.55", "-19.7849, -176.138, 32.4039, 0.55", "-21.0659, -179.126, 33.7198, 0.83", "-21.746, -181.076, 34.3675, 0.83", "-22.228, -182.773, 34.8412, 0.28", "-22.6893, -184.556, 35.2595, 0.55", "-23.5782, -188.33, 36.0263, 1.11", "-24.0941, -190.988, 36.5251, 0.28", "-24.3633, -192.488, 36.7712, 0.55", "-25.2018, -196.768, 37.3426, 0.28", "-25.3706, -197.588, 37.4607, 0.83", "-26.0039, -200.871, 38.009, 0.83", "-26.6525, -204.278, 38.6007, 0.28", "-26.722, -204.788, 38.6878, 1.11", "-26.9326, -207.076, 39.009, 1.11", "-27.2293, -210.477, 39.3127, 0.55", "-27.4627, -213.112, 39.6217, 1.11", "-27.6592, -215.305, 39.9739, 1.11", "-27.849, -216.834, 40.3213, 1.11", "-28.1195, -218.859, 40.7812, 0.28", "-28.2721, -220.11, 41.1801, 0.55", "-28.4811, -222.042, 41.9035, 0.28", "-28.6273, -223.001, 42.4257, 0.83", "-28.9667, -224.868, 43.5918, 0.28", "-29.1427, -225.858, 44.2168, 0.83", "-29.6612, -229.567, 46.5547, 0.28", "-29.8022, -230.712, 47.1775, 0.83", "-30.164, -233.948, 48.6077, 0.55", "-30.4079, -236.135, 49.4147, 1.11", "-30.6488, -238.512, 50.0851, 0.28", "-30.7521, -239.794, 50.3484, 0.83", "-30.9984, -243.273, 50.6992, 0.83", "-31.137, -245.143, 50.9758, 0.28", "-31.1846, -246.291, 51.1861, 0.28", "-31.2293, -247.569, 51.5709, 0.83", "-31.2486, -249.108, 52.1994, 0.83", "-31.2247, -251.158, 53.2068, 0.55", "-31.0662, -254.875, 55.2578, 0.28", "-31.0664, -255.911, 55.8271, 1.11", "-31.0864, -257.438, 56.5924, 0.83", "-31.1353, -260.56, 57.955, 0.28", "-31.1224, -261.043, 58.1286, 0.55", "-30.9238, -263.178, 58.7097, 0.55", "-30.4991, -265.496, 59.1349, 0.55", "-30.0949, -267.397, 59.4225, 0.55", "-29.7413, -269.014, 59.6139, 0.55", "-29.3081, -271.112, 59.8518, 0.55", "-28.6688, -273.766, 60.174, 0.55", "-27.9716, -276.332, 60.5036, 0.55", "-27.2434, -278.838, 60.8284, 0.55", "-26.7751, -280.64, 61.0865, 0.28", "-26.27, -282.829, 61.3841, 0.83", "-25.7341, -285.908, 61.7398, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.5871, -132.163, 15.549, 1.38", "-17.195, -132.939, 15.8256, 1.38", "-21.5362, -133.873, 16.1584, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.2597, -177.967, -41.8684, 0.55", "12.6046, -183.13, -42.4579, 0.55", "12.6826, -185.691, -42.8462, 0.55", "12.7819, -188.754, -43.3693, 2.49", "12.8403, -191.222, -43.8925, 0.55", "12.8725, -193.607, -44.4452, 0.55", "12.9132, -196.626, -45.1447, 0.83", "12.7432, -199.244, -45.8065, 0.28", "12.6902, -200.466, -46.1771, 0.55", "12.6259, -202.42, -46.88, 0.28", "12.5907, -203.641, -47.3546, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "12.2597, -177.967, -41.8684, 0.83", "14.5959, -178.135, -43.5261, 0.83", "16.7136, -178.096, -44.8278, 0.83", "18.9951, -177.96, -46.2314, 0.55", "21.8347, -177.824, -47.9592, 0.55", "22.785, -177.855, -48.5962, 0.83", "24.7307, -178.146, -49.8841, 0.55", "26.4952, -178.606, -50.9958, 1.11", "28.355, -179.411, -52.1313, 0.28", "29.6723, -180.204, -52.9101, 0.83", "32.1984, -182.201, -54.5376, 0.28", "34.5051, -184.358, -56.1813, 1.38", "35.897, -185.74, -57.0517, 0.55", "37.0188, -186.903, -57.6056, 0.55", "38.765, -188.682, -58.0818, 0.83", "40.1154, -190.035, -58.2283, 0.28", "41.9909, -191.831, -58.2674, 0.55", "45.9293, -195.322, -57.9756, 0.28", "47.8543, -196.861, -57.7264, 0.83", "50.9667, -199.037, -57.2291, 0.55", "52.0778, -199.705, -57.019, 0.55", "55.4302, -201.508, -56.3906, 1.94", "59.3813, -203.608, -55.8088, 0.55", "61.1752, -204.504, -55.6444, 0.55", "62.756, -205.226, -55.4962, 0.55", "65.9072, -206.81, -55.2477, 0.28", "66.9976, -207.479, -55.158, 1.38", "69.1566, -209.119, -54.9449, 1.38", "71.8467, -211.891, -54.9955, 0.55", "73.1966, -213.398, -54.6547, 0.55", "75.8697, -216.464, -53.6171, 1.11", "78.0742, -219.145, -52.6375, 0.28", "78.49, -219.665, -52.4197, 0.83", "80.7599, -222.511, -50.9929, 0.28", "87.9951, -231.86, -45.6952, 0.83", "89.1817, -233.141, -44.5079, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-19.0664, 403.419, 14.3147, 0.55", "-19.1279, 404.842, 14.4172, 0.55", "-19.1383, 406.226, 14.7335, 0.28", "-19.2212, 407.462, 15.1197, 0.55", "-19.3785, 408.334, 15.4679, 0.28", "-19.6954, 409.601, 15.959, 0.83", "-20.028, 410.891, 16.4137, 0.83", "-20.5115, 412.881, 17.5277, 0.55", "-20.7548, 414.017, 18.3186, 0.55", "-21.1712, 416.163, 20.006, 0.83", "-21.4167, 417.349, 21.0082, 0.83", "-21.658, 418.696, 22.2632, 0.83", "-22.5874, 422.968, 26.1612, 0.55", "-22.7505, 423.839, 26.8937, 0.55", "-22.8008, 424.246, 27.2168, 0.83", "-22.8642, 425.176, 27.9059, 0.55", "-22.9969, 428.058, 29.7168, 1.11", "-23.1078, 430.584, 30.9229, 0.83", "-23.1818, 432.369, 31.4534, 0.55", "-23.19, 433.703, 31.8163, 1.11", "-23.1574, 435.186, 32.225, 0.55", "-23.0065, 437.631, 32.8878, 1.11", "-22.9001, 439.511, 33.3698, 0.55", "-22.79, 441.192, 33.8729, 0.55", "-22.789, 442.105, 34.1702, 0.28", "-22.833, 443.736, 34.7211, 0.83", "-22.934, 445.389, 35.2341, 0.55", "-23.0774, 446.871, 35.642, 0.83", "-23.27, 448.278, 35.9849, 0.83", "-23.6431, 450.304, 36.454, 0.55", "-24.0654, 452.323, 36.8633, 0.55", "-24.6852, 454.923, 37.3153, 0.83", "-25.3488, 457.495, 37.7432, 0.83", "-25.974, 459.897, 38.1294, 0.83", "-26.3773, 461.393, 38.3584, 0.83", "-26.8965, 463.388, 38.6256, 0.83", "-27.3697, 465.137, 38.8704, 0.83", "-27.7995, 467.037, 39.1887, 0.83", "-28.0245, 468.154, 39.3942, 0.83", "-28.2732, 469.703, 39.7183, 0.55", "-28.5014, 471.02, 39.9516, 0.83", "-28.799, 472.634, 40.26, 0.83", "-29.2728, 475.253, 40.7762, 0.55", "-29.7724, 477.776, 41.314, 0.83", "-30.3639, 480.467, 41.9239, 0.55", "-31.1617, 483.353, 42.6306, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-19.0664, 403.419, 14.3147, 0.55", "-20.6421, 406.675, 16.4172, 0.55", "-22.0467, 409.284, 17.7061, 0.28", "-22.757, 410.481, 18.2107, 0.83", "-23.8182, 412.144, 18.8538, 0.28", "-24.3549, 412.975, 19.1522, 0.28", "-25.2458, 414.317, 19.6002, 0.83", "-26.9787, 417.039, 20.2177, 0.83", "-27.8801, 418.464, 20.4189, 0.28", "-29.1487, 420.596, 20.7442, 0.83", "-29.8008, 421.685, 20.9149, 0.55", "-31.027, 423.805, 21.3047, 1.11", "-32.1551, 425.869, 21.6887, 0.55", "-33.0219, 427.622, 21.9969, 1.11", "-33.9177, 429.612, 22.3281, 0.55", "-35.0675, 432.411, 22.7666, 1.11", "-35.7501, 434.091, 23.0478, 0.28", "-36.2699, 435.425, 23.2934, 0.55", "-36.9104, 436.952, 23.6292, 0.28", "-37.3557, 438.034, 23.8938, 0.83", "-37.8597, 439.475, 24.1405, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.03201, 404.565, -32.655, 0.83", "-5.19777, 408.315, -33.3491, 0.83", "-4.80927, 410.357, -33.7368, 0.83", "-4.24859, 413.405, -34.3048, 2.22", "-3.73588, 416.492, -34.8909, 1.66", "-3.06204, 420.254, -35.4615, 0.83", "-2.84099, 421.495, -35.6165, 0.83", "-2.43904, 424.264, -35.9002, 0.83", "-1.9357, 428.085, -36.1629, 1.66", "-1.66986, 431.059, -36.261, 0.55", "-1.59903, 434.056, -36.3492, 0.55", "-1.64225, 435.926, -36.4298, 1.11", "-1.81429, 439.134, -36.6998, 0.55", "-2.28051, 444.388, -37.3893, 1.66", "-2.45811, 447.057, -37.8455, 0.83", "-2.6292, 451.414, -38.7076, 0.83", "-2.67682, 453.523, -39.1877, 0.83", "-2.59767, 455.873, -39.7152, 1.66", "-2.31042, 459.062, -40.3954, 0.83", "-1.61922, 463.954, -41.2979, 0.83", "-0.920848, 467.615, -41.8248, 0.83", "-0.583072, 469.003, -41.9475, 0.83", "0.185811, 472.121, -42.1462, 0.83", "0.657291, 474.179, -42.2696, 1.38", "1.36863, 477.387, -42.4383, 0.55", "1.86763, 479.514, -42.5583, 1.38", "2.86963, 483.577, -42.7942, 1.38", "3.6816, 487.059, -42.9873, 0.83", "4.51315, 490.839, -43.1782, 0.83", "5.46351, 494.97, -43.3829, 1.11", "6.23333, 498.363, -43.5365, 0.55", "6.7868, 501.092, -43.6355, 0.55", "7.18557, 503.255, -43.7769, 0.55", "8.07581, 508.047, -44.2148, 2.22", "8.46686, 510.191, -44.4648, 0.55", "8.87309, 512.335, -44.7589, 0.55", "9.06379, 513.394, -44.9114, 1.11", "9.98854, 518.425, -45.642, 0.55", "10.4402, 521.206, -46.0276, 0.55", "10.5764, 522.297, -46.165, 0.55", "10.8398, 525.705, -46.4989, 1.11", "10.9551, 528.986, -46.8069, 1.11", "10.9936, 531.684, -47.0084, 0.83", "10.9075, 534.503, -47.1056, 0.83", "10.8068, 536.285, -47.1764, 0.83", "10.4592, 539.843, -47.3341, 0.83", "9.82081, 543.873, -47.5556, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.03201, 404.565, -32.655, 0.55", "-7.00722, 404.605, -31.6489, 0.55", "-8.02721, 404.647, -30.5967, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-21.5362, -133.873, 16.1584, 1.11", "-21.5408, -135.087, 16.118, 1.11", "-21.5485, -137.137, 16.0498, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-21.5362, -133.873, 16.1584, 1.11", "-23.9007, -132.399, 13.6652, 1.11", "-24.6994, -131.789, 12.903, 0.28", "-25.2938, -131.387, 12.5727, 0.83", "-27.6223, -129.908, 11.6804, 0.55", "-28.7155, -129.281, 11.3503, 0.55", "-29.7664, -128.696, 11.0001, 0.55", "-31.2388, -127.965, 10.5534, 0.55", "-34.8655, -126.352, 9.33312, 1.11", "-36.9973, -125.43, 8.59089, 0.55", "-38.3857, -124.844, 8.11737, 0.55", "-41.5534, -123.71, 6.95479, 0.83", "-43.4643, -123.12, 6.23074, 0.55", "-45.3283, -122.629, 5.50365, 1.11", "-48.3169, -121.963, 4.23163, 0.83", "-49.3801, -121.785, 3.81759, 0.83", "-50.8875, -121.561, 3.32937, 0.83", "-53.2869, -121.328, 2.75569, 0.83", "-56.3275, -121.149, 2.0768, 1.11", "-57.7355, -121.137, 1.71497, 0.83", "-59.7394, -121.209, 1.12515, 0.83", "-62.6698, -121.384, 0.167149, 0.83", "-64.5623, -121.572, -0.5591, 0.55", "-65.955, -121.833, -1.16375, 1.38", "-67.9209, -122.244, -2.17296, 0.55", "-69.6838, -122.538, -3.16745, 0.55", "-70.7423, -122.732, -3.83544, 0.55", "-72.2839, -123.029, -4.94664, 0.55", "-73.1058, -123.148, -5.59717, 0.83", "-75.8199, -123.321, -7.89459, 0.55", "-76.7639, -123.348, -8.73007, 0.55", "-77.8311, -123.316, -9.69195, 0.55", "-79.9375, -123.163, -11.3744, 0.55", "-82.1926, -122.936, -12.9472, 1.11", "-84.5199, -122.703, -14.4072, 0.55", "-85.1595, -122.667, -14.7435, 0.55", "-87.3588, -122.647, -15.7073, 0.55", "-89.9455, -122.663, -16.5401, 1.94", "-91.8616, -122.784, -16.8536, 0.83", "-92.5619, -122.861, -16.9309, 0.28", "-93.7947, -123.087, -17.0592, 0.55", "-95.563, -123.493, -17.267, 0.55", "-97.0889, -123.915, -17.4719, 0.28", "-99.7872, -124.7, -17.7848, 1.11", "-101.815, -125.34, -17.915, 0.28", "-104.049, -125.94, -17.9892, 0.83", "-105.796, -126.318, -17.9718, 0.28", "-106.557, -126.431, -17.926, 0.28", "-108.47, -126.572, -17.6945, 0.28", "-109.521, -126.55, -17.4976, 0.55", "-111.623, -126.281, -17.0404, 0.55", "-112.481, -126.027, -16.9201, 0.83", "-113.851, -125.514, -16.8482, 0.28", "-114.186, -125.39, -16.8524, 0.83", "-116.305, -124.611, -17.0133, 0.83", "-118.032, -123.98, -17.1687, 0.83", "-120.003, -123.363, -17.3683, 0.55", "-121.001, -123.089, -17.4792, 0.55", "-122.871, -122.688, -17.6797, 1.38", "-124.875, -122.361, -17.8806, 1.38", "-126.545, -122.181, -18.0337, 0.28", "-127.893, -122.183, -18.1757, 0.83", "-128.958, -122.305, -18.2958, 0.28", "-129.964, -122.533, -18.4262, 1.38", "-131.48, -123.009, -18.6549, 0.28", "-132.004, -123.25, -18.7467, 0.83", "-133.436, -124.087, -19.0331, 0.55", "-134.192, -124.561, -19.2084, 0.55", "-135.511, -125.376, -19.5558, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "12.5907, -203.641, -47.3546, 0.83", "12.5784, -205.231, -47.4659, 0.83", "12.5195, -206.735, -47.7531, 1.94", "12.469, -208.248, -48.1068, 1.94", "12.2837, -211.243, -48.9345, 0.83", "12.1307, -213.329, -49.5242, 1.38", "11.6195, -218.734, -51.2061, 0.28", "11.5741, -219.209, -51.3726, 0.83", "11.4293, -220.566, -51.9344, 0.55", "11.1584, -222.435, -52.865, 0.28", "10.7916, -224.193, -53.9384, 0.55", "10.2325, -226.563, -55.3515, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "12.5907, -203.641, -47.3546, 0.28", "12.5016, -202.928, -44.5679, 0.28", "12.4889, -202.826, -44.1703, 1.38", "12.3976, -202.095, -41.3146, 0.55", "12.3453, -201.677, -39.6805, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "89.1817, -233.141, -44.5079, 1.38", "89.8552, -235.746, -44.6201, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "89.1817, -233.141, -44.5079, 0.55", "89.4425, -232.293, -45.846, 0.55", "89.6105, -231.746, -46.7079, 0.55", "90.0536, -230.306, -48.9807, 0.28", "90.1971, -229.839, -49.7172, 1.11", "90.6368, -228.41, -51.9727, 0.28", "91.005, -227.213, -53.8612, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-31.1617, 483.353, 42.6306, 1.38", "-30.9067, 484.821, 42.9243, 1.38", "-30.7699, 486.136, 43.2842, 0.55", "-30.7024, 487.241, 43.8155, 0.55", "-30.6436, 488.201, 44.2778, 0.55", "-30.5754, 489.317, 44.8146, 1.11", "-30.4388, 491.55, 45.8894, 0.55", "-30.4159, 493.141, 46.8414, 1.11", "-30.4266, 495.448, 48.4822, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-31.1617, 483.353, 42.6306, 0.55", "-31.9048, 486.212, 42.3381, 0.55", "-32.3512, 487.403, 42.318, 0.28", "-32.9346, 488.534, 42.2583, 0.83", "-34.0671, 490.524, 42.1354, 0.28", "-35.135, 492.224, 42.0588, 0.55", "-36.1792, 493.804, 42.0155, 0.55", "-38.3096, 496.528, 41.9885, 1.11", "-40.285, 498.762, 42.0714, 0.55", "-41.0607, 499.591, 42.0768, 0.55", "-42.8166, 501.433, 42.0791, 0.83", "-44.043, 502.688, 42.0344, 0.83", "-45.8532, 504.546, 41.7797, 0.83", "-46.8109, 505.539, 41.5717, 0.83", "-49.0707, 508.171, 40.9165, 0.55", "-50.7573, 510.39, 40.1327, 0.83", "-51.7864, 511.829, 39.4536, 0.83", "-53.5188, 514.366, 38.116, 0.55", "-54.8875, 516.534, 36.9316, 0.55", "-55.7253, 517.876, 36.1773, 0.83", "-57.7464, 520.962, 34.5023, 0.83", "-58.9812, 522.855, 33.4437, 0.83", "-59.8741, 524.212, 32.6772, 0.28", "-60.5619, 525.225, 32.0321, 0.55", "-61.8304, 526.958, 30.3702, 0.55", "-62.5721, 527.898, 29.3105, 0.55", "-63.2124, 528.66, 28.3269, 0.55", "-64.8642, 530.517, 25.675, 0.55", "-66.6472, 532.248, 22.7636, 0.83", "-69.6652, 534.745, 18.0544, 0.28", "-70.6672, 535.412, 16.4926, 0.28", "-71.2369, 535.741, 15.5598, 0.55", "-71.9673, 536.124, 14.2539, 0.28", "-72.4114, 536.363, 13.3763, 0.83", "-73.0706, 536.789, 11.9936, 0.83", "-75.089, 538.347, 7.21604, 0.83", "-76.5311, 539.5, 3.48497, 0.28", "-77.8943, 540.554, -0.161691, 1.11", "-79.8912, 542.062, -5.56492, 0.55", "-80.4494, 542.444, -6.97202, 0.55", "-81.5381, 543.046, -9.48334, 0.55", "-82.3879, 543.406, -11.1257, 0.55", "-83.437, 543.719, -12.8507, 0.83", "-85.4953, 544.18, -15.7912, 0.55", "-87.0593, 544.483, -17.8948, 1.11", "-91.9757, 545.431, -24.3386, 0.28", "-92.5592, 545.575, -25.1448, 0.55", "-94.5554, 546.203, -27.9589, 0.28", "-96.0243, 546.716, -30.1157, 1.11", "-98.3022, 547.558, -33.657, 0.55", "-99.2529, 547.991, -35.3818, 1.11", "-101.293, 549.112, -39.6085, 0.55", "-101.787, 549.445, -40.7983, 0.55", "-102.918, 550.336, -43.9117, 1.11", "-103.423, 550.812, -45.531, 1.11", "-104.965, 552.578, -51.345, 0.28", "-105.383, 553.1, -53.0637, 0.83", "-106.469, 554.329, -57.1953, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-37.8597, 439.475, 24.1405, 0.55", "-38.1166, 440.959, 24.8468, 0.55", "-38.501, 442.8, 25.6872, 0.28", "-39.1487, 445.401, 26.8213, 1.38", "-40.2453, 449.13, 28.4094, 0.28", "-41.2759, 452.275, 29.7191, 0.55", "-41.8498, 453.973, 30.398, 0.55", "-42.3646, 455.41, 30.9438, 0.83", "-43.1823, 457.479, 31.6944, 0.28", "-43.9313, 459.16, 32.2067, 0.83", "-44.4881, 460.38, 32.4674, 0.28", "-44.99, 461.597, 32.7268, 0.28", "-45.758, 463.468, 33.1273, 0.83", "-46.6456, 465.694, 33.5903, 0.28", "-47.0761, 466.813, 33.8122, 0.55", "-48.0639, 469.399, 34.3126, 0.55", "-48.8062, 471.326, 34.6986, 0.28", "-49.193, 472.289, 34.9026, 0.28", "-49.8641, 474.02, 35.2583, 1.11", "-50.6801, 476.235, 35.5412, 0.28", "-51.2638, 477.767, 35.6127, 0.83", "-51.8983, 479.458, 35.52, 0.28", "-52.5266, 481.447, 35.2128, 0.83", "-52.859, 482.677, 34.9642, 0.83", "-53.6275, 485.927, 34.1865, 0.55", "-54.0896, 488.121, 33.6474, 0.55", "-54.3767, 489.522, 33.3342, 0.55", "-54.8859, 492.065, 32.8408, 0.83", "-55.2906, 494.214, 32.52, 0.55", "-55.8971, 497.364, 32.236, 1.11", "-56.3054, 499.556, 32.1563, 0.55", "-56.6979, 501.616, 32.1225, 0.55", "-56.9838, 502.923, 32.073, 0.83", "-57.2411, 503.925, 31.9637, 0.55", "-58.1213, 507.412, 31.338, 0.83", "-58.5222, 508.829, 30.8764, 0.28", "-58.6152, 509.116, 30.7491, 0.28", "-59.0278, 510.345, 30.1016, 0.55", "-60.1065, 513.488, 28.3168, 0.28", "-60.3021, 514.08, 28.007, 0.55", "-61.2672, 517.15, 26.4945, 0.28", "-61.6152, 518.401, 25.9763, 0.83", "-62.2402, 520.572, 25.2744, 0.83", "-62.4892, 521.49, 25.0663, 0.28", "-63.049, 524.25, 24.6301, 0.55", "-63.3586, 526.048, 24.4288, 0.28", "-63.5747, 528.392, 24.4613, 0.83", "-63.7134, 531.493, 24.6643, 0.28", "-63.6804, 532.839, 24.8428, 0.28", "-63.5386, 534.718, 25.2047, 0.55", "-63.3111, 537.594, 25.7882, 0.83", "-63.0605, 541.4, 26.6396, 0.28", "-62.9623, 543.006, 26.9276, 0.83", "-62.8911, 545.662, 27.1851, 0.28", "-62.9659, 549.151, 27.0367, 1.38", "-63.166, 552.256, 26.58, 0.28", "-63.3631, 554.969, 25.9201, 0.83", "-63.6054, 557.575, 25.0684, 0.83", "-63.9853, 561.669, 23.6183, 0.55", "-64.4984, 565.849, 22.1032, 0.55", "-64.8066, 568.797, 21.1661, 0.83", "-64.9371, 571.074, 20.7469, 0.83", "-65.0175, 574.03, 20.5445, 0.55", "-64.9733, 575.99, 20.8113, 0.55", "-64.6987, 578.875, 21.6973, 1.38", "-64.3103, 582.444, 23.2311, 0.83", "-63.7109, 586.547, 25.355, 1.11", "-63.3451, 588.567, 26.596, 1.11", "-62.3095, 592.654, 29.5462, 0.83", "-62.005, 593.54, 30.2335, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-37.8597, 439.475, 24.1405, 0.28", "-34.9416, 439.271, 24.7813, 0.28", "-34.1987, 439.218, 24.9444, 0.83", "-31.909, 439.058, 25.4472, 0.28", "-31.5735, 439.034, 25.5209, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.82081, 543.873, -47.5556, 0.55", "10.5896, 545.882, -47.8075, 0.55", "11.3943, 548.125, -48.1284, 0.55", "11.8173, 549.417, -48.3209, 0.55", "12.4339, 551.098, -48.5976, 0.28", "13.0717, 552.634, -48.8814, 0.83", "14.0663, 554.971, -49.3232, 0.28", "14.4495, 555.909, -49.5059, 0.83", "14.9814, 557.354, -49.7802, 0.55", "15.7253, 559.387, -50.2077, 0.55", "16.1409, 560.594, -50.472, 0.83", "16.5807, 562.125, -50.7861, 0.28", "16.9202, 563.378, -50.9958, 0.83", "17.2661, 564.805, -51.2346, 0.83", "17.4676, 565.855, -51.4712, 0.28", "17.5957, 567.372, -51.827, 0.83", "17.5788, 568.642, -52.1681, 0.83", "17.3374, 570.226, -52.8291, 0.83", "16.8258, 571.999, -53.7684, 1.11", "15.9221, 574.041, -55.2919, 0.55", "14.9521, 575.513, -56.6023, 0.55", "13.8329, 576.847, -57.9546, 1.11", "11.5689, 579.075, -60.5978, 0.28", "10.9303, 579.647, -61.3612, 0.28", "8.84671, 581.416, -63.8697, 0.83", "7.62589, 582.434, -65.4315, 0.55", "7.21464, 582.778, -66.0298, 0.55", "5.96716, 583.901, -67.9382, 0.55", "5.05861, 584.756, -69.3378, 0.83", "3.29952, 586.323, -72.0358, 0.55", "0.0407929, 589.122, -76.9005, 1.94", "-2.82668, 591.488, -81.4188, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "9.82081, 543.873, -47.5556, 0.55", "9.36124, 545.507, -47.3992, 0.55", "8.92611, 547.021, -47.301, 0.83", "8.69098, 547.76, -47.3001, 0.55", "8.24087, 549.399, -47.416, 0.83", "7.63302, 551.762, -47.6799, 0.55", "7.31392, 552.791, -47.8069, 0.55", "6.93311, 553.759, -48.0156, 1.11", "6.37149, 555.116, -48.4196, 0.83", "5.59565, 556.807, -49.0155, 0.83", "4.561, 558.777, -49.7789, 0.83", "3.52242, 560.424, -50.3796, 0.55", "2.28564, 562.275, -51.008, 0.28", "0.691911, 564.075, -51.8583, 0.83", "-0.685432, 565.43, -52.5888, 0.55", "-2.41188, 566.97, -53.4972, 1.38", "-4.05097, 568.407, -54.4196, 0.55", "-4.99388, 569.273, -54.9783, 0.55", "-10.992, 575.018, -58.5502, 0.83", "-11.9009, 575.872, -59.0776, 0.55", "-12.1024, 576.079, -59.2052, 0.55", "-13.2217, 577.381, -59.9561, 1.38", "-13.893, 578.403, -60.4513, 1.38", "-14.6868, 580.472, -60.956, 0.28", "-14.6703, 581.37, -60.832, 0.55", "-14.5012, 582.902, -60.5896, 0.28", "-14.2747, 584.551, -60.2773, 0.55", "-13.7545, 587.432, -59.5506, 0.55", "-13.3965, 589.195, -59.0502, 0.55", "-12.9094, 591.28, -58.4012, 0.55", "-12.3881, 592.984, -57.8709, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-21.5485, -137.137, 16.0498, 0.55", "-22.6402, -137.69, 17.3515, 0.55", "-23.5087, -138.133, 18.4075, 0.28", "-24.3052, -138.539, 19.376, 1.11", "-27.2176, -140.025, 22.917, 0.28", "-27.5971, -140.218, 23.3785, 1.11", "-29.5632, -141.221, 25.769, 0.28", "-30.0305, -141.474, 26.4753, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-21.5485, -137.137, 16.0498, 0.83", "-22.4453, -138.067, 16.7541, 0.83", "-23.3097, -138.828, 17.4259, 0.83", "-24.0826, -139.335, 18.0903, 0.83", "-25.4386, -140.151, 19.2609, 0.83", "-26.3508, -140.783, 20.2765, 0.83", "-27.4964, -141.716, 21.7921, 0.83", "-28.0901, -142.266, 22.6975, 0.83", "-29.3121, -143.756, 24.9152, 1.11", "-29.5327, -144.15, 25.4588, 1.11", "-30.2359, -146.169, 27.9222, 1.11", "-30.5592, -147.581, 29.4387, 1.11", "-30.7488, -148.888, 30.6682, 1.11", "-30.8365, -150.104, 31.7141, 1.38", "-30.8611, -152.071, 33.1794, 0.55", "-30.881, -152.903, 33.759, 0.83", "-30.9463, -153.722, 34.2303, 0.83", "-30.9719, -154.42, 34.641, 0.83", "-31.014, -155.085, 35.0643, 0.83", "-31.0959, -156.372, 35.7386, 0.55", "-31.2059, -157.249, 36.0163, 0.55", "-31.2958, -157.737, 36.1164, 1.11", "-31.4884, -158.646, 36.2118, 0.28", "-31.6116, -159.137, 36.2378, 1.11", "-31.9664, -160.211, 36.1976, 0.55", "-32.3678, -161.253, 35.9953, 0.55", "-32.9259, -162.412, 35.6839, 0.28", "-33.1222, -162.78, 35.5512, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-135.511, -125.376, -19.5558, 1.11", "-137.6, -125.136, -19.775, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-135.511, -125.376, -19.5558, 0.28", "-136.011, -127.052, -19.7387, 0.28", "-136.105, -127.37, -19.7734, 0.83", "-136.573, -128.936, -19.9444, 0.28", "-136.704, -129.377, -19.9925, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.2325, -226.563, -55.3515, 0.55", "9.06385, -227.892, -54.0472, 0.55", "8.20104, -228.814, -53.2214, 0.55", "6.69731, -230.461, -51.3743, 0.28", "6.27783, -230.98, -50.8335, 0.55", "5.63112, -231.778, -50.0011, 1.11", "4.80123, -232.829, -48.9407, 0.28", "4.12653, -233.607, -48.0962, 0.55", "2.1293, -235.739, -45.847, 0.28", "0.408737, -237.508, -44.0583, 0.83", "-1.29201, -239.315, -42.2034, 0.28", "-1.76479, -239.84, -41.662, 0.83", "-2.9682, -241.162, -40.2821, 0.83", "-4.27346, -242.471, -38.9434, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.2325, -226.563, -55.3515, 0.28", "10.2008, -229.204, -55.2097, 0.28", "10.2151, -230.133, -55.1192, 0.55", "10.2669, -231.696, -54.9386, 0.28", "10.35, -233.578, -54.7088, 1.11", "10.4707, -235.817, -54.4331, 0.28", "10.5154, -236.412, -54.3656, 0.55", "10.5991, -237.337, -54.1775, 0.28", "10.664, -237.915, -54.0429, 0.55", "10.7275, -238.653, -53.8337, 0.28", "10.7502, -239.062, -53.7282, 0.55", "10.7612, -240.404, -53.5486, 0.28", "10.756, -241.59, -53.4497, 1.11", "10.7384, -244.095, -53.1031, 0.28", "10.7478, -245.545, -52.8664, 1.11", "10.7515, -246.7, -52.6703, 1.11", "10.7492, -248.844, -52.2962, 0.28", "10.7459, -250.203, -52.056, 0.83", "10.8492, -253.094, -51.6258, 0.55", "10.9351, -254.697, -51.5017, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "89.8552, -235.746, -44.6201, 0.28", "92.5419, -237.114, -45.6082, 0.28", "93.4808, -237.582, -45.9605, 0.83", "94.9445, -238.331, -46.5296, 0.28", "96.9789, -239.409, -47.3452, 0.83", "98.9983, -240.558, -48.1699, 0.28", "100.487, -241.399, -48.798, 0.55", "101.281, -241.804, -49.1441, 0.28", "102.996, -242.603, -49.9486, 0.55", "104.116, -243.107, -50.5038, 0.28", "105.368, -243.643, -51.1396, 0.55", "106.971, -244.248, -51.9965, 0.55", "108.522, -244.824, -52.9478, 0.55", "110.561, -245.641, -54.316, 0.83", "111.708, -246.172, -55.2589, 0.28", "112.732, -246.765, -56.2169, 0.83", "113.877, -247.411, -57.0245, 1.38", "116.58, -248.98, -58.4914, 0.28", "118.074, -249.959, -59.2549, 0.83", "120.409, -251.536, -60.3876, 0.28", "121.92, -252.535, -61.0481, 1.11", "127.9, -256.351, -63.174, 0.28", "128.693, -256.837, -63.4004, 0.55", "132.767, -259.238, -64.3735, 0.28", "135.491, -260.901, -65.0225, 0.28", "136.662, -261.701, -65.2966, 0.55", "138.414, -263.01, -65.8824, 0.28", "139.291, -263.893, -66.4185, 0.28", "140.427, -265.065, -67.039, 0.55", "141.929, -266.508, -67.4661, 0.55", "142.776, -267.778, -67.7545, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "89.8552, -235.746, -44.6201, 0.55", "87.7272, -237.183, -43.7845, 0.55", "86.8452, -237.779, -43.4381, 0.55", "85.758, -238.514, -43.0112, 0.28", "84.32, -239.485, -42.4465, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-30.4266, 495.448, 48.4822, 0.83", "-30.1376, 497.125, 49.0343, 0.83", "-29.6763, 499.715, 49.85, 0.83", "-29.3403, 501.485, 50.4041, 0.83", "-28.7498, 505.147, 51.6083, 0.83", "-28.7045, 505.569, 51.7273, 1.11", "-28.6421, 506.665, 52.0009, 0.55", "-28.6472, 507.312, 52.1537, 0.83", "-29.6119, 507.762, 51.3222, 0.28", "-30.5299, 508.201, 50.3391, 0.55", "-33.2074, 509.645, 47.0966, 0.28", "-33.9606, 510.129, 46.151, 0.83", "-34.5163, 510.534, 45.4117, 0.83", "-37.7426, 513.36, 40.7845, 0.55", "-38.5327, 514.224, 39.5089, 0.55", "-38.9903, 515.122, 38.5278, 1.11", "-39.3467, 518.429, 36.7715, 0.55", "-39.3211, 518.904, 36.6324, 0.83", "-39.1557, 519.678, 36.6173, 0.28", "-39.0324, 520.094, 36.7003, 0.55", "-38.9456, 520.754, 36.8163, 0.28", "-38.965, 521.659, 36.8827, 0.83", "-39.042, 522.604, 36.7947, 0.28", "-39.1064, 523.23, 36.7338, 0.83", "-39.4487, 525.23, 36.3986, 0.55", "-39.8346, 527.038, 35.9977, 0.55", "-40.1626, 528.373, 35.6668, 0.55", "-40.6272, 530.233, 35.1932, 0.55", "-40.9738, 531.48, 34.8569, 0.55", "-41.7319, 534.177, 34.1672, 0.55", "-41.962, 535.016, 33.9399, 0.28", "-42.1749, 535.759, 33.7146, 0.55", "-42.4981, 536.786, 33.4134, 0.28", "-43.0935, 538.371, 32.9678, 0.55", "-43.33, 539.027, 32.7981, 0.55", "-43.714, 540.278, 32.5082, 0.28", "-44.0915, 541.456, 32.1479, 0.28", "-44.2548, 542.062, 31.9132, 0.55", "-44.704, 543.4, 31.0238, 0.28", "-44.9542, 544.089, 30.338, 0.83", "-45.2303, 544.815, 29.5464, 0.83", "-45.7177, 546.086, 28.0162, 0.55", "-46.0878, 547.009, 26.7556, 0.55", "-47.2156, 549.678, 22.7459, 0.28", "-47.9264, 551.321, 19.9841, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-30.4266, 495.448, 48.4822, 0.55", "-31.788, 497.729, 49.284, 0.55", "-33.5797, 500.73, 50.339, 0.55", "-34.8401, 502.841, 51.0812, 0.55", "-35.9343, 504.674, 51.7256, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-62.005, 593.54, 30.2335, 0.28", "-62.3441, 594.116, 28.5209, 0.28", "-62.4384, 594.276, 28.0445, 0.55", "-63.3661, 595.851, 23.3591, 0.28", "-63.4714, 596.03, 22.8273, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-62.005, 593.54, 30.2335, 0.28", "-64.2883, 595.751, 30.833, 0.28", "-65.6996, 597.118, 31.2035, 0.83", "-66.755, 598.14, 31.4806, 0.83", "-67.4228, 598.786, 31.6559, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.82668, 591.488, -81.4188, 0.55", "-5.38633, 592.571, -80.6876, 0.55", "-8.49625, 593.887, -80.023, 0.55", "-10.8182, 594.87, -79.5268, 0.55", "-13.5145, 596.011, -78.9506, 0.28", "-15.9533, 597.043, -78.4294, 0.83", "-17.8327, 597.839, -78.0277, 0.83", "-19.8872, 598.799, -77.7891, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-2.82668, 591.488, -81.4188, 0.55", "-3.66779, 593.508, -81.7095, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-137.6, -125.136, -19.775, 0.28", "-139.297, -125.012, -20.3804, 0.28", "-140.99, -124.798, -20.9833, 0.55", "-142.883, -124.527, -21.6436, 0.28", "-143.952, -124.384, -21.9769, 1.11", "-145.598, -124.152, -22.4432, 0.28", "-146.017, -124.09, -22.5797, 0.55", "-148.356, -123.76, -23.417, 0.28", "-149.022, -123.654, -23.6642, 1.11", "-150.53, -123.444, -24.2235, 0.28", "-151.426, -123.324, -24.5452, 1.11", "-153.573, -123.035, -25.2293, 1.11", "-155.043, -122.894, -25.7645, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-137.6, -125.136, -19.775, 0.83", "-139.268, -127.398, -20.4406, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.27346, -242.471, -38.9434, 0.83", "-4.84213, -243.079, -39.3092, 0.83", "-5.79437, -244.096, -39.9218, 0.28", "-6.59306, -244.949, -40.4356, 1.11", "-8.84994, -247.36, -41.8875, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-4.27346, -242.471, -38.9434, 1.11", "-5.96762, -240.765, -38.661, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-67.4228, 598.786, 31.6559, 0.55", "-66.8107, 599.601, 30.3629, 0.55", "-66.119, 600.362, 29.2086, 0.28", "-65.9574, 600.547, 28.8186, 0.55", "-64.8172, 601.85, 26.0665, 0.28", "-64.2825, 602.46, 24.7759, 0.55", "-63.5555, 603.291, 23.0213, 0.28", "-63.1342, 603.889, 21.5913, 0.55", "-62.1076, 605.713, 16.9083, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-67.4228, 598.786, 31.6559, 0.28", "-68.5613, 598.957, 31.9234, 0.28", "-70.3186, 599.221, 32.3364, 0.55", "-71.8099, 599.445, 32.6868, 0.55", "-73.3834, 599.681, 33.0566, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-19.8872, 598.799, -77.7891, 0.55", "-20.3704, 599.988, -77.4122, 0.55", "-20.8373, 601.136, -77.0479, 0.55", "-21.2618, 602.18, -76.7167, 0.83", "-21.7769, 603.448, -76.3148, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-19.8872, 598.799, -77.7891, 0.28", "-22.5004, 599.938, -78.0214, 0.28", "-23.2175, 600.25, -78.0852, 0.28", "-24.6675, 600.882, -78.2141, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-8.84994, -247.36, -41.8875, 1.11", "-8.46592, -249.437, -40.4324, 1.11", "-8.09404, -251.558, -38.8322, 0.28", "-7.88209, -253.03, -37.6958, 1.11", "-7.40298, -257.085, -34.2574, 0.28", "-7.30975, -258.092, -33.3801, 1.94", "-7.11154, -261.035, -30.9576, 1.11", "-7.0987, -261.687, -30.4148, 0.28", "-7.11902, -262.436, -29.7912, 0.83", "-7.28427, -264.45, -28.3307, 0.28", "-7.44079, -265.394, -27.8675, 1.11", "-7.90453, -267.918, -26.8647, 0.28", "-8.35669, -269.936, -26.2654, 0.28", "-8.5662, -270.997, -25.9773, 1.11", "-8.5662, -270.997, -25.9773, 1.11", "-8.82303, -272.325, -25.7777, 0.55", "-8.94147, -272.905, -25.6711, 1.38", "-9.47019, -275.108, -25.0719, 0.28", "-9.51995, -275.344, -24.9895, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-8.84994, -247.36, -41.8875, 0.55", "-11.4139, -247.093, -40.1566, 0.55", "-13.0027, -246.928, -39.084, 0.55", "-14.3639, -246.786, -38.1652, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-73.3834, 599.681, 33.0566, 0.55", "-73.9048, 600.81, 33.3157, 0.55", "-74.706, 602.875, 33.8739, 0.55", "-75.108, 604.263, 34.2329, 0.55", "-75.556, 605.985, 34.6159, 0.55", "-75.9427, 607.57, 35.0211, 0.28", "-76.1034, 608.298, 35.1665, 0.83", "-76.4546, 610.381, 35.4903, 0.83", "-76.6314, 612.175, 35.7449, 0.83", "-76.6999, 613.098, 35.8356, 0.55", "-76.7073, 615.455, 36.0002, 0.83", "-76.5286, 618.135, 36.0115, 0.28", "-76.4383, 619.425, 35.8991, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-73.3834, 599.681, 33.0566, 0.55", "-76.219, 598.3, 34.8823, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_DBC_e57b56d14c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -11.3653, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -1.04385, -15.1977, -0.760576, 2.22 ) }
    dend_29 { pt3dadd( -1.43577, -19.1083, 0.723469, 2.49 ) }
    dend_29 { pt3dadd( -2.02401, -25.9011, 3.0854, 2.49 ) }
    dend_29 { pt3dadd( -2.3682, -32.4652, 5.02793, 2.49 ) }
    dend_29 { pt3dadd( -2.46491, -35.444, 5.80473, 1.94 ) }
    dend_29 { pt3dadd( -2.50821, -38.6545, 6.55149, 1.38 ) }
    dend_29 { pt3dadd( -2.41444, -42.5598, 7.34393, 1.11 ) }
    dend_29 { pt3dadd( -2.29129, -45.1937, 7.75446, 0.83 ) }
    dend_29 { pt3dadd( -1.95511, -51.8016, 8.37186, 1.11 ) }
    dend_29 { pt3dadd( -1.84732, -54.4677, 8.40735, 1.11 ) }
    dend_29 { pt3dadd( -1.71254, -57.6585, 8.366, 1.38 ) }
    dend_29 { pt3dadd( -1.56034, -60.7121, 8.2754, 0.83 ) }
    dend_29 { pt3dadd( -1.39993, -63.3108, 8.21273, 1.66 ) }
    dend_29 { pt3dadd( -1.21098, -65.7701, 8.17323, 1.11 ) }
    dend_29 { pt3dadd( -0.755674, -71.095, 8.03512, 1.66 ) }
    dend_29 { pt3dadd( -0.481711, -74.0134, 7.95234, 1.38 ) }
    dend_29 { pt3dadd( -0.088946, -77.7669, 7.83596, 1.94 ) }
    dend_29 { pt3dadd( 0.425664, -81.7247, 7.70404, 1.38 ) }
    dend_29 { pt3dadd( 1.13408, -85.8373, 7.56112, 1.38 ) }
    dend_29 { pt3dadd( 2.21175, -90.91, 7.38516, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 9.23473, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -0.991579, 14.0048, -0.832029, 1.94 ) }
    dend_0 { pt3dadd( -0.649315, 17.7347, -0.711279, 1.94 ) }
    dend_0 { pt3dadd( -0.302568, 23.3178, -0.349873, 1.94 ) }
    dend_0 { pt3dadd( -0.210824, 25.3537, -0.191678, 1.38 ) }
    dend_0 { pt3dadd( 0.0725411, 29.9553, 0.148501, 2.22 ) }
    dend_0 { pt3dadd( 0.350657, 34.4716, 0.482379, 1.94 ) }
    dend_0 { pt3dadd( 0.712553, 40.579, 0.95903, 1.94 ) }
    dend_0 { pt3dadd( 0.920727, 44.9794, 1.39907, 1.94 ) }
    dend_0 { pt3dadd( 1.00478, 49.2381, 1.9637, 1.94 ) }
    dend_0 { pt3dadd( 1.06792, 55.0071, 2.73602, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.21175, -90.91, 7.38516, 0.55 ) }
    dend_57 { pt3dadd( 3.17145, -92.7642, 8.06895, 0.55 ) }
    dend_57 { pt3dadd( 4.10531, -94.3496, 8.91104, 0.55 ) }
    dend_57 { pt3dadd( 5.43401, -96.5051, 10.3981, 0.28 ) }
    dend_57 { pt3dadd( 6.99258, -98.5587, 12.0044, 0.55 ) }
    dend_57 { pt3dadd( 8.89428, -100.798, 13.8059, 0.28 ) }
    dend_57 { pt3dadd( 10.4873, -102.541, 15.3995, 1.11 ) }
    dend_57 { pt3dadd( 13.0116, -105.153, 18.0734, 0.28 ) }
    dend_57 { pt3dadd( 14.613, -106.722, 20.0897, 0.83 ) }
    dend_57 { pt3dadd( 16.9579, -108.867, 23.2762, 0.83 ) }
    dend_57 { pt3dadd( 18.3449, -110.11, 25.2572, 0.83 ) }
    dend_57 { pt3dadd( 20.679, -112.244, 28.6439, 0.83 ) }
    dend_57 { pt3dadd( 21.8915, -113.344, 30.4176, 1.11 ) }
    dend_57 { pt3dadd( 25.6509, -116.945, 35.5748, 0.28 ) }
    dend_57 { pt3dadd( 26.5014, -117.811, 36.605, 0.28 ) }
    dend_57 { pt3dadd( 27.2498, -118.604, 37.4259, 0.55 ) }
    dend_57 { pt3dadd( 28.3925, -119.747, 38.4287, 0.55 ) }
    dend_57 { pt3dadd( 30.8785, -122.07, 39.9926, 0.55 ) }
    dend_57 { pt3dadd( 33.2744, -124.091, 41.1437, 0.55 ) }
    dend_57 { pt3dadd( 35.9507, -126.25, 42.0189, 0.83 ) }
    dend_57 { pt3dadd( 38.4698, -128.093, 42.8083, 1.11 ) }
    dend_57 { pt3dadd( 40.6697, -129.662, 43.5041, 0.55 ) }
    dend_57 { pt3dadd( 41.8657, -130.538, 43.898, 1.38 ) }
    dend_57 { pt3dadd( 43.4244, -131.674, 44.4362, 0.55 ) }
    dend_57 { pt3dadd( 45.1902, -132.744, 45.0363, 1.11 ) }
    dend_57 { pt3dadd( 48.9877, -134.835, 46.2249, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.21175, -90.91, 7.38516, 1.38 ) }
    dend_30 { pt3dadd( 2.02614, -91.9554, 7.21947, 1.38 ) }
    dend_30 { pt3dadd( 1.42013, -95.0227, 6.99737, 1.38 ) }
    dend_30 { pt3dadd( 1.04247, -96.9342, 6.85895, 1.11 ) }
    dend_30 { pt3dadd( 0.221679, -101.088, 6.55813, 1.66 ) }
    dend_30 { pt3dadd( -0.301377, -103.736, 6.36642, 2.22 ) }
    dend_30 { pt3dadd( -0.568092, -105.086, 6.26867, 2.22 ) }
    dend_30 { pt3dadd( -1.24074, -108.96, 5.89954, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.06792, 55.0071, 2.73602, 1.38 ) }
    dend_12 { pt3dadd( 0.944155, 58.0182, 2.7749, 1.38 ) }
    dend_12 { pt3dadd( 0.92937, 60.0603, 2.76737, 1.38 ) }
    dend_12 { pt3dadd( 0.955258, 63.0457, 2.72491, 1.11 ) }
    dend_12 { pt3dadd( 1.09143, 67.6391, 2.69738, 1.38 ) }
    dend_12 { pt3dadd( 1.14947, 69.9335, 2.67979, 1.38 ) }
    dend_12 { pt3dadd( 1.1657, 73.9397, 2.68819, 1.38 ) }
    dend_12 { pt3dadd( 1.12645, 79.009, 2.71447, 1.38 ) }
    dend_12 { pt3dadd( 1.00812, 82.7019, 2.75631, 1.38 ) }
    dend_12 { pt3dadd( 0.863511, 86.139, 2.81053, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 0.63042, 89.3479, 2.89317, 1.38 ) }
    dend_12 { pt3dadd( -0.00590203, 94.701, 3.1017, 1.66 ) }
    dend_12 { pt3dadd( -0.501153, 97.774, 3.2595, 1.38 ) }
    dend_12 { pt3dadd( -1.15254, 101.27, 3.35602, 1.38 ) }
    dend_12 { pt3dadd( -1.93484, 105.286, 3.34586, 1.38 ) }
    dend_12 { pt3dadd( -2.5194, 108.491, 3.23003, 1.38 ) }
    dend_12 { pt3dadd( -2.76892, 110.193, 3.13558, 1.38 ) }
    dend_12 { pt3dadd( -3.06782, 112.827, 2.94721, 1.11 ) }
    dend_12 { pt3dadd( -3.43292, 116.814, 2.66001, 1.11 ) }
    dend_12 { pt3dadd( -3.62611, 121.015, 2.33571, 1.11 ) }
    dend_12 { pt3dadd( -3.72464, 125.258, 2.03892, 1.38 ) }
    dend_12 { pt3dadd( -3.72996, 128.109, 1.90462, 1.11 ) }
    dend_12 { pt3dadd( -3.73388, 130.844, 1.85702, 1.38 ) }
    dend_12 { pt3dadd( -3.72352, 132.607, 1.91785, 1.38 ) }
    dend_12 { pt3dadd( -3.64827, 135.424, 2.24074, 1.38 ) }
    dend_12 { pt3dadd( -3.56561, 139.456, 2.84482, 1.94 ) }
    dend_12 { pt3dadd( -3.49917, 141.589, 3.19547, 1.66 ) }
    dend_12 { pt3dadd( -3.46565, 142.485, 3.33584, 1.66 ) }
    dend_12 { pt3dadd( -3.3701, 145.281, 3.73409, 1.66 ) }
    dend_12 { pt3dadd( -3.23502, 149.692, 4.32126, 1.66 ) }
    dend_12 { pt3dadd( -3.22214, 151.993, 4.61229, 1.38 ) }
    dend_12 { pt3dadd( -3.26448, 155.625, 5.01829, 1.66 ) }
    dend_12 { pt3dadd( -3.30037, 158.826, 5.28178, 1.11 ) }
    dend_12 { pt3dadd( -3.33199, 162.375, 5.52487, 1.11 ) }
    dend_12 { pt3dadd( -3.3718, 164.351, 5.61881, 1.11 ) }
    dend_12 { pt3dadd( -3.39921, 166.533, 5.69065, 1.11 ) }
    dend_12 { pt3dadd( -3.37384, 168.167, 5.75059, 1.11 ) }
    dend_12 { pt3dadd( -3.20449, 171.637, 5.88321, 1.38 ) }
    dend_12 { pt3dadd( -3.00374, 174.282, 5.98324, 1.11 ) }
    dend_12 { pt3dadd( -2.83888, 176.264, 6.04952, 1.38 ) }
    dend_12 { pt3dadd( -2.65572, 178.515, 6.11353, 1.38 ) }
    dend_12 { pt3dadd( -2.4982, 181.081, 6.17706, 0.83 ) }
    dend_12 { pt3dadd( -2.39762, 184.188, 6.24716, 1.38 ) }
    dend_12 { pt3dadd( -2.41246, 186.667, 6.29555, 0.83 ) }
    dend_12 { pt3dadd( -2.4916, 189.185, 6.32239, 1.38 ) }
    dend_12 { pt3dadd( -2.62646, 191.168, 6.3604, 1.38 ) }
    dend_12 { pt3dadd( -2.93693, 194.421, 6.41597, 1.38 ) }
    dend_12 { pt3dadd( -3.06298, 195.857, 6.42844, 1.38 ) }
    dend_12 { pt3dadd( -3.20658, 198.085, 6.42301, 1.11 ) }
    dend_12 { pt3dadd( -3.27948, 200.857, 6.37978, 1.11 ) }
    dend_12 { pt3dadd( -3.24933, 204.863, 6.26867, 1.66 ) }
    dend_12 { pt3dadd( -3.11666, 207.44, 6.15975, 1.11 ) }
    dend_12 { pt3dadd( -3.02299, 208.46, 6.16723, 1.11 ) }
    dend_12 { pt3dadd( -2.88705, 210.229, 6.27464, 1.38 ) }
    dend_12 { pt3dadd( -2.73193, 212.466, 6.51651, 1.38 ) }
    dend_12 { pt3dadd( -2.61221, 214.987, 6.90093, 1.94 ) }
    dend_12 { pt3dadd( -2.5795, 217.597, 7.40137, 1.94 ) }
    dend_12 { pt3dadd( -2.71333, 221.854, 8.29789, 1.11 ) }
    dend_12 { pt3dadd( -2.90785, 224.225, 8.79116, 1.11 ) }
    dend_12 { pt3dadd( -3.19545, 226.469, 9.24957, 1.38 ) }
    dend_12 { pt3dadd( -3.6509, 229.169, 9.76054, 1.38 ) }
    dend_12 { pt3dadd( -4.06421, 231.428, 10.1179, 1.11 ) }
    dend_12 { pt3dadd( -4.48172, 233.912, 10.3869, 0.83 ) }
    dend_12 { pt3dadd( -4.92073, 236.753, 10.5163, 0.83 ) }
    dend_12 { pt3dadd( -5.15844, 238.393, 10.5855, 0.83 ) }
    dend_12 { pt3dadd( -5.57833, 241.241, 10.7034, 1.11 ) }
    dend_12 { pt3dadd( -5.89496, 243.743, 10.7705, 1.11 ) }
    dend_12 { pt3dadd( -6.2227, 246.318, 10.8181, 1.38 ) }
    dend_12 { pt3dadd( -6.73508, 250.234, 10.8746, 1.38 ) }
    dend_12 { pt3dadd( -7.021, 252.633, 10.8937, 1.11 ) }
    dend_12 { pt3dadd( -7.34633, 255.479, 10.9063, 1.38 ) }
    dend_12 { pt3dadd( -7.64991, 257.814, 10.8876, 0.83 ) }
    dend_12 { pt3dadd( -8.12578, 260.933, 10.8564, 0.83 ) }
    dend_12 { pt3dadd( -8.49395, 263.407, 10.799, 1.38 ) }
    dend_12 { pt3dadd( -8.6017, 264.52, 10.7489, 1.38 ) }
    dend_12 { pt3dadd( -8.77543, 266.561, 10.6362, 1.11 ) }
    dend_12 { pt3dadd( -9.07364, 269.933, 10.4328, 1.38 ) }
    dend_12 { pt3dadd( -9.23194, 271.987, 10.2976, 1.11 ) }
    dend_12 { pt3dadd( -9.31023, 274.005, 10.1256, 1.11 ) }
    dend_12 { pt3dadd( -9.36695, 276.025, 9.94689, 1.11 ) }
    dend_12 { pt3dadd( -9.44346, 278.545, 9.72461, 1.11 ) }
    dend_12 { pt3dadd( -9.55371, 282.879, 9.31725, 1.11 ) }
    dend_12 { pt3dadd( -9.57913, 285.423, 9.07592, 1.11 ) }
    dend_12 { pt3dadd( -9.61882, 288.231, 8.87974, 1.38 ) }
    dend_12 { pt3dadd( -9.68759, 291.113, 8.77291, 1.38 ) }
    dend_12 { pt3dadd( -9.77796, 293.808, 8.74915, 0.83 ) }
    dend_12 { pt3dadd( -9.81833, 295.881, 8.7892, 1.38 ) }
    dend_12 { pt3dadd( -9.82171, 297.838, 8.8888, 1.38 ) }
    dend_12 { pt3dadd( -9.82167, 300.495, 9.09813, 1.11 ) }
    dend_12 { pt3dadd( -9.79697, 302.261, 9.27062, 0.55 ) }
    dend_12 { pt3dadd( -9.67707, 304.02, 9.42982, 1.11 ) }
    dend_12 { pt3dadd( -9.54859, 305.685, 9.57308, 1.11 ) }
    dend_12 { pt3dadd( -9.40915, 307.463, 9.69101, 0.83 ) }
    dend_12 { pt3dadd( -9.26597, 309.343, 9.7426, 0.83 ) }
    dend_12 { pt3dadd( -9.15339, 311.051, 9.72217, 0.83 ) }
    dend_12 { pt3dadd( -9.04298, 314.162, 9.70696, 1.11 ) }
    dend_12 { pt3dadd( -8.97587, 316.193, 9.66136, 1.66 ) }
    dend_12 { pt3dadd( -8.98907, 318.145, 9.61089, 1.66 ) }
    dend_12 { pt3dadd( -9.11885, 320.675, 9.55905, 0.83 ) }
    dend_12 { pt3dadd( -9.24786, 322.705, 9.50648, 0.83 ) }
    dend_12 { pt3dadd( -9.39904, 325.572, 9.41379, 1.11 ) }
    dend_12 { pt3dadd( -9.62913, 328.983, 9.30504, 0.83 ) }
    dend_12 { pt3dadd( -9.85978, 332.794, 9.18036, 0.83 ) }
    dend_12 { pt3dadd( -9.99034, 334.975, 9.10742, 0.83 ) }
    dend_12 { pt3dadd( -10.2763, 339.482, 8.9646, 1.38 ) }
    dend_12 { pt3dadd( -10.6051, 343.985, 8.84925, 1.38 ) }
    dend_12 { pt3dadd( -10.7623, 345.991, 8.81375, 1.11 ) }
    dend_12 { pt3dadd( -11.1015, 349.102, 8.82072, 1.11 ) }
    dend_12 { pt3dadd( -11.3402, 351.077, 8.82925, 0.83 ) }
    dend_12 { pt3dadd( -11.571, 352.464, 8.85323, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -12.0695, 354.785, 9.04056, 1.38 ) }
    dend_12 { pt3dadd( -12.3109, 355.992, 9.23064, 1.38 ) }
    dend_12 { pt3dadd( -12.6887, 358.821, 9.7686, 0.83 ) }
    dend_12 { pt3dadd( -12.8284, 360.754, 10.1814, 0.83 ) }
    dend_12 { pt3dadd( -12.9716, 363.843, 10.6969, 0.83 ) }
    dend_12 { pt3dadd( -13.0025, 366.732, 11.1839, 0.83 ) }
    dend_12 { pt3dadd( -12.9086, 370.442, 11.8234, 1.38 ) }
    dend_12 { pt3dadd( -12.7999, 372.961, 12.2701, 1.38 ) }
    dend_12 { pt3dadd( -12.5992, 374.715, 12.5722, 1.38 ) }
    dend_12 { pt3dadd( -11.8734, 378.783, 13.1745, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.06792, 55.0071, 2.73602, 1.11 ) }
    dend_1 { pt3dadd( 1.06653, 59.4752, -1.93597, 1.11 ) }
    dend_1 { pt3dadd( 1.10312, 60.8555, -3.18731, 1.11 ) }
    dend_1 { pt3dadd( 1.08945, 63.2324, -5.3815, 1.11 ) }
    dend_1 { pt3dadd( 0.942665, 70.046, -11.4293, 1.11 ) }
    dend_1 { pt3dadd( 0.868289, 72.5711, -13.4133, 1.11 ) }
    dend_1 { pt3dadd( 0.716586, 76.1165, -15.951, 0.83 ) }
    dend_1 { pt3dadd( 0.569365, 78.236, -17.2323, 0.83 ) }
    dend_1 { pt3dadd( 0.201202, 84.2925, -20.5055, 1.11 ) }
    dend_1 { pt3dadd( 0.0601939, 87.062, -21.7183, 1.11 ) }
    dend_1 { pt3dadd( -0.303464, 91.4126, -22.9702, 1.11 ) }
    dend_1 { pt3dadd( -0.79375, 95.397, -23.7529, 1.11 ) }
    dend_1 { pt3dadd( -1.17709, 98.1739, -24.0102, 1.38 ) }
    dend_1 { pt3dadd( -1.38851, 100.122, -23.9354, 1.38 ) }
    dend_1 { pt3dadd( -1.54688, 102.379, -23.6261, 1.11 ) }
    dend_1 { pt3dadd( -1.82657, 106.681, -23.0133, 1.11 ) }
    dend_1 { pt3dadd( -2.07393, 111.229, -22.4869, 0.83 ) }
    dend_1 { pt3dadd( -2.09786, 111.948, -22.3851, 0.83 ) }
    dend_1 { pt3dadd( -2.18161, 116.337, -21.912, 1.66 ) }
    dend_1 { pt3dadd( -2.29631, 120.099, -21.7281, 0.83 ) }
    dend_1 { pt3dadd( -2.32422, 120.823, -21.7411, 0.83 ) }
    dend_1 { pt3dadd( -2.41716, 123.891, -21.9915, 1.66 ) }
    dend_1 { pt3dadd( -2.5041, 125.82, -22.2346, 1.66 ) }
    dend_1 { pt3dadd( -2.62814, 128.261, -22.461, 1.11 ) }
    dend_1 { pt3dadd( -2.84413, 131.138, -22.677, 1.11 ) }
    dend_1 { pt3dadd( -3.08844, 134.224, -22.789, 1.11 ) }
    dend_1 { pt3dadd( -3.34654, 137.906, -22.9559, 1.66 ) }
    dend_1 { pt3dadd( -3.56516, 141.385, -23.0696, 1.66 ) }
    dend_1 { pt3dadd( -3.83011, 145.02, -23.2633, 0.83 ) }
    dend_1 { pt3dadd( -4.07278, 148.22, -23.5655, 0.83 ) }
    dend_1 { pt3dadd( -4.21404, 150.479, -23.8872, 0.83 ) }
    dend_1 { pt3dadd( -4.3436, 153.722, -24.4359, 1.66 ) }
    dend_1 { pt3dadd( -4.43198, 156.826, -25.0224, 0.55 ) }
    dend_1 { pt3dadd( -4.50897, 159.854, -25.5866, 0.55 ) }
    dend_1 { pt3dadd( -4.5128, 163.237, -26.1554, 1.38 ) }
    dend_1 { pt3dadd( -4.42495, 166.055, -26.5106, 1.94 ) }
    dend_1 { pt3dadd( -4.30102, 169.456, -26.8149, 0.83 ) }
    dend_1 { pt3dadd( -4.24445, 171.348, -26.9066, 0.83 ) }
    dend_1 { pt3dadd( -4.19851, 174.543, -26.988, 1.94 ) }
    dend_1 { pt3dadd( -4.16183, 178.561, -26.9065, 1.94 ) }
    dend_1 { pt3dadd( -4.18755, 181.178, -26.813, 1.11 ) }
    dend_1 { pt3dadd( -4.18851, 184.25, -26.5229, 1.11 ) }
    dend_1 { pt3dadd( -4.19681, 187.032, -26.1604, 1.11 ) }
    dend_1 { pt3dadd( -4.19452, 188.636, -25.8999, 1.11 ) }
    dend_1 { pt3dadd( -4.20654, 190.275, -25.626, 1.11 ) }
    dend_1 { pt3dadd( -4.36173, 196.375, -24.5871, 2.22 ) }
    dend_1 { pt3dadd( -4.48877, 203.355, -23.4429, 0.83 ) }
    dend_1 { pt3dadd( -4.49479, 205.391, -23.1523, 0.83 ) }
    dend_1 { pt3dadd( -4.43673, 208.143, -22.8346, 1.11 ) }
    dend_1 { pt3dadd( -4.36335, 211.572, -22.5625, 0.55 ) }
    dend_1 { pt3dadd( -4.4067, 214.24, -22.47, 2.22 ) }
    dend_1 { pt3dadd( -4.50217, 215.908, -22.5542, 1.94 ) }
    dend_1 { pt3dadd( -4.66988, 218.326, -22.9072, 0.83 ) }
    dend_1 { pt3dadd( -4.78963, 220.902, -23.2781, 0.83 ) }
    dend_1 { pt3dadd( -4.85772, 223.492, -23.6181, 0.83 ) }
    dend_1 { pt3dadd( -4.96043, 226.227, -23.8861, 1.66 ) }
    dend_1 { pt3dadd( -5.09536, 229.235, -24.1516, 0.83 ) }
    dend_1 { pt3dadd( -5.17493, 230.956, -24.2673, 0.83 ) }
    dend_1 { pt3dadd( -5.2457, 232.416, -24.3674, 1.11 ) }
    dend_1 { pt3dadd( -5.38795, 234.671, -24.538, 0.83 ) }
    dend_1 { pt3dadd( -5.59134, 238.615, -24.8846, 0.83 ) }
    dend_1 { pt3dadd( -5.63218, 239.328, -24.9467, 0.83 ) }
    dend_1 { pt3dadd( -5.96041, 243.263, -25.2445, 1.94 ) }
    dend_1 { pt3dadd( -6.2117, 246.197, -25.4698, 0.55 ) }
    dend_1 { pt3dadd( -6.48192, 249.512, -25.8024, 0.55 ) }
    dend_1 { pt3dadd( -6.53951, 250.11, -25.8884, 0.55 ) }
    dend_1 { pt3dadd( -7.05794, 254.83, -26.7039, 2.22 ) }
    dend_1 { pt3dadd( -7.38362, 258.435, -27.3677, 0.83 ) }
    dend_1 { pt3dadd( -7.4844, 260.069, -27.6601, 0.83 ) }
    dend_1 { pt3dadd( -7.61449, 263.936, -28.294, 1.38 ) }
    dend_1 { pt3dadd( -7.59939, 267.345, -28.8265, 0.55 ) }
    dend_1 { pt3dadd( -7.52893, 270.372, -29.2324, 0.55 ) }
    dend_1 { pt3dadd( -7.3187, 274.578, -29.8268, 0.83 ) }
    dend_1 { pt3dadd( -6.84837, 280.496, -30.3337, 0.83 ) }
    dend_1 { pt3dadd( -6.68262, 282.16, -30.3888, 2.49 ) }
    dend_1 { pt3dadd( -6.31438, 285.373, -30.3081, 2.49 ) }
    dend_1 { pt3dadd( -5.73112, 290.368, -29.9918, 0.83 ) }
    dend_1 { pt3dadd( -5.41317, 293.181, -29.7773, 0.83 ) }
    dend_1 { pt3dadd( -5.05728, 298.761, -29.2852, 0.83 ) }
    dend_1 { pt3dadd( -4.9847, 300.414, -29.129, 0.83 ) }
    dend_1 { pt3dadd( -4.97994, 304.005, -28.8083, 1.66 ) }
    dend_1 { pt3dadd( -5.03878, 307.635, -28.5258, 0.83 ) }
    dend_1 { pt3dadd( -5.10335, 310.288, -28.3561, 0.83 ) }
    dend_1 { pt3dadd( -5.22576, 314.253, -28.1726, 0.83 ) }
    dend_1 { pt3dadd( -5.31137, 317.316, -28.1643, 1.94 ) }
    dend_1 { pt3dadd( -5.33362, 322.383, -28.1579, 0.83 ) }
    dend_1 { pt3dadd( -5.27527, 327.608, -28.1562, 0.83 ) }
    dend_1 { pt3dadd( -5.22567, 329.954, -28.1568, 0.83 ) }
    dend_1 { pt3dadd( -5.17304, 332.906, -28.157, 1.11 ) }
    dend_1 { pt3dadd( -5.13854, 335.194, -28.1568, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -5.17935, 339.111, -28.1504, 0.83 ) }
    dend_1 { pt3dadd( -5.24358, 340.46, -28.1452, 0.83 ) }
    dend_1 { pt3dadd( -5.42092, 342.737, -28.1322, 0.83 ) }
    dend_1 { pt3dadd( -5.72032, 346.511, -28.1103, 0.83 ) }
    dend_1 { pt3dadd( -5.97625, 350.197, -28.1709, 0.83 ) }
    dend_1 { pt3dadd( -6.30585, 354.513, -28.3166, 1.11 ) }
    dend_1 { pt3dadd( -6.55339, 358.29, -28.5443, 1.66 ) }
    dend_1 { pt3dadd( -6.71024, 361.909, -28.8124, 0.83 ) }
    dend_1 { pt3dadd( -6.79803, 364.868, -29.0845, 0.83 ) }
    dend_1 { pt3dadd( -6.74964, 368.274, -29.4596, 0.83 ) }
    dend_1 { pt3dadd( -6.64884, 370.775, -29.7687, 0.83 ) }
    dend_1 { pt3dadd( -6.55366, 373.532, -30.1332, 0.83 ) }
    dend_1 { pt3dadd( -6.40105, 377.84, -30.6981, 1.66 ) }
    dend_1 { pt3dadd( -6.29502, 381.261, -31.1327, 0.83 ) }
    dend_1 { pt3dadd( -6.24487, 383.073, -31.3361, 0.83 ) }
    dend_1 { pt3dadd( -6.16796, 387.469, -31.6934, 1.38 ) }
    dend_1 { pt3dadd( -6.02415, 391.595, -32.0168, 0.83 ) }
    dend_1 { pt3dadd( -5.96274, 393.884, -32.1768, 0.83 ) }
    dend_1 { pt3dadd( -5.93042, 395.255, -32.2888, 1.66 ) }
    dend_1 { pt3dadd( -5.9038, 398.033, -32.482, 1.66 ) }
    dend_1 { pt3dadd( -6.00525, 400.833, -32.6611, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 48.9877, -134.835, 46.2249, 0.83 ) }
    dend_59 { pt3dadd( 49.9084, -134.766, 47.9798, 0.83 ) }
    dend_59 { pt3dadd( 50.4805, -134.702, 49.216, 0.28 ) }
    dend_59 { pt3dadd( 51.8575, -134.548, 52.1917, 0.55 ) }
    dend_59 { pt3dadd( 52.4003, -134.488, 53.3648, 0.55 ) }
    dend_59 { pt3dadd( 53.1832, -134.401, 55.0566, 0.55 ) }
    dend_59 { pt3dadd( 55.7001, -134.12, 60.4958, 0.28 ) }
    dend_59 { pt3dadd( 55.9849, -134.134, 61.2818, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 48.9877, -134.835, 46.2249, 0.55 ) }
    dend_58 { pt3dadd( 49.6964, -135.902, 47.6239, 0.55 ) }
    dend_58 { pt3dadd( 49.8835, -136.08, 48.0077, 0.83 ) }
    dend_58 { pt3dadd( 50.3269, -136.568, 48.9957, 0.28 ) }
    dend_58 { pt3dadd( 50.4919, -136.784, 49.4424, 0.83 ) }
    dend_58 { pt3dadd( 50.8219, -137.195, 50.3121, 0.83 ) }
    dend_58 { pt3dadd( 51.6324, -138.172, 52.3744, 0.83 ) }
    dend_58 { pt3dadd( 52.7656, -139.31, 54.9125, 0.83 ) }
    dend_58 { pt3dadd( 53.1742, -139.683, 55.9396, 0.83 ) }
    dend_58 { pt3dadd( 54.1768, -140.346, 58.5877, 1.11 ) }
    dend_58 { pt3dadd( 54.445, -140.472, 59.5213, 0.83 ) }
    dend_58 { pt3dadd( 54.5155, -140.476, 59.8723, 0.83 ) }
    dend_58 { pt3dadd( 54.6196, -140.248, 61.1429, 0.83 ) }
    dend_58 { pt3dadd( 54.5158, -139.343, 63.6019, 0.83 ) }
    dend_58 { pt3dadd( 54.3957, -138.495, 65.2897, 0.83 ) }
    dend_58 { pt3dadd( 54.1216, -137.132, 67.2959, 0.83 ) }
    dend_58 { pt3dadd( 53.9104, -136.436, 68.2866, 1.11 ) }
    dend_58 { pt3dadd( 53.507, -135.36, 69.7586, 0.28 ) }
    dend_58 { pt3dadd( 53.4022, -135.152, 70.0304, 0.55 ) }
    dend_58 { pt3dadd( 52.9819, -134.184, 71.0231, 0.28 ) }
    dend_58 { pt3dadd( 52.5491, -133.675, 71.5833, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.24074, -108.96, 5.89954, 1.11 ) }
    dend_46 { pt3dadd( -2.27387, -110.063, 6.44148, 1.11 ) }
    dend_46 { pt3dadd( -3.46095, -111.579, 7.13922, 1.11 ) }
    dend_46 { pt3dadd( -6.19907, -115.837, 8.83535, 1.38 ) }
    dend_46 { pt3dadd( -7.64688, -118.374, 9.92167, 1.38 ) }
    dend_46 { pt3dadd( -8.71346, -120.243, 10.722, 1.66 ) }
    dend_46 { pt3dadd( -10.4049, -123.206, 11.9911, 1.11 ) }
    dend_46 { pt3dadd( -11.2632, -124.922, 12.7381, 1.11 ) }
    dend_46 { pt3dadd( -12.3184, -127.594, 13.8596, 1.38 ) }
    dend_46 { pt3dadd( -13.5871, -132.163, 15.549, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.24074, -108.96, 5.89954, 1.38 ) }
    dend_31 { pt3dadd( -1.2713, -114.552, 5.95201, 1.38 ) }
    dend_31 { pt3dadd( -1.18244, -119.072, 6.09293, 1.94 ) }
    dend_31 { pt3dadd( -1.07399, -122.355, 5.92682, 1.38 ) }
    dend_31 { pt3dadd( -0.779915, -127.793, 4.87335, 1.94 ) }
    dend_31 { pt3dadd( -0.393627, -132.014, 3.68368, 0.83 ) }
    dend_31 { pt3dadd( -0.0718616, -134.564, 2.79066, 0.83 ) }
    dend_31 { pt3dadd( 0.544784, -137.833, 1.43502, 1.38 ) }
    dend_31 { pt3dadd( 1.86747, -142.741, -1.16778, 1.94 ) }
    dend_31 { pt3dadd( 3.72619, -147.939, -4.65966, 0.83 ) }
    dend_31 { pt3dadd( 4.41695, -149.531, -5.97056, 0.83 ) }
    dend_31 { pt3dadd( 6.25331, -153.404, -9.84296, 1.11 ) }
    dend_31 { pt3dadd( 7.36626, -155.62, -12.1722, 0.55 ) }
    dend_31 { pt3dadd( 7.90715, -156.782, -13.469, 0.55 ) }
    dend_31 { pt3dadd( 8.90271, -159.179, -16.1161, 0.55 ) }
    dend_31 { pt3dadd( 9.30663, -160.423, -17.6111, 0.83 ) }
    dend_31 { pt3dadd( 10.0772, -163.207, -21.2065, 0.55 ) }
    dend_31 { pt3dadd( 10.753, -165.948, -25.0801, 1.66 ) }
    dend_31 { pt3dadd( 11.6067, -170.271, -31.3323, 0.55 ) }
    dend_31 { pt3dadd( 11.8486, -172.144, -33.9838, 1.66 ) }
    dend_31 { pt3dadd( 12.1212, -176.193, -39.4372, 0.55 ) }
    dend_31 { pt3dadd( 12.2597, -177.967, -41.8684, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.8734, 378.783, 13.1745, 0.83 ) }
    dend_28 { pt3dadd( -12.5495, 380.851, 11.7213, 0.83 ) }
    dend_28 { pt3dadd( -13.3924, 383.132, 10.1768, 0.83 ) }
    dend_28 { pt3dadd( -14.3503, 386.119, 8.36597, 0.55 ) }
    dend_28 { pt3dadd( -15.1396, 389.081, 6.63262, 0.83 ) }
    dend_28 { pt3dadd( -15.829, 392.077, 5.01329, 0.28 ) }
    dend_28 { pt3dadd( -16.1183, 393.468, 4.32723, 0.55 ) }
    dend_28 { pt3dadd( -16.3637, 394.42, 3.90184, 0.55 ) }
    dend_28 { pt3dadd( -16.9621, 397.205, 2.78516, 1.11 ) }
    dend_28 { pt3dadd( -17.301, 399.591, 2.01641, 0.55 ) }
    dend_28 { pt3dadd( -17.5249, 401.644, 1.45269, 1.11 ) }
    dend_28 { pt3dadd( -17.6698, 403.419, 1.06144, 1.11 ) }
    dend_28 { pt3dadd( -17.848, 406.094, 0.587295, 0.28 ) }
    dend_28 { pt3dadd( -18.223, 409.568, -0.0668232, 0.55 ) }
    dend_28 { pt3dadd( -18.8262, 413.634, -0.825847, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -19.0908, 415.717, -1.16627, 0.55 ) }
    dend_28 { pt3dadd( -19.2517, 417.245, -1.3971, 0.28 ) }
    dend_28 { pt3dadd( -19.3401, 419.477, -1.60693, 0.83 ) }
    dend_28 { pt3dadd( -19.2592, 423.851, -1.68353, 1.38 ) }
    dend_28 { pt3dadd( -19.2183, 425.936, -1.58099, 1.38 ) }
    dend_28 { pt3dadd( -18.9476, 430.71, -1.17208, 0.83 ) }
    dend_28 { pt3dadd( -18.8016, 432.988, -0.909344, 0.83 ) }
    dend_28 { pt3dadd( -18.2787, 439.301, 0.0434918, 0.83 ) }
    dend_28 { pt3dadd( -18.0871, 441.473, 0.428251, 0.83 ) }
    dend_28 { pt3dadd( -17.6673, 444.948, 1.20989, 0.83 ) }
    dend_28 { pt3dadd( -17.5672, 445.832, 1.42378, 0.83 ) }
    dend_28 { pt3dadd( -17.2385, 448.864, 2.13695, 1.38 ) }
    dend_28 { pt3dadd( -17.0006, 450.988, 2.55181, 0.55 ) }
    dend_28 { pt3dadd( -16.7911, 453.555, 2.87683, 0.55 ) }
    dend_28 { pt3dadd( -16.626, 454.969, 2.9374, 0.55 ) }
    dend_28 { pt3dadd( -16.4814, 456.003, 2.91201, 0.28 ) }
    dend_28 { pt3dadd( -16.0731, 458.869, 2.67693, 0.83 ) }
    dend_28 { pt3dadd( -15.7486, 461.079, 2.30798, 0.55 ) }
    dend_28 { pt3dadd( -15.3775, 463.455, 1.76935, 0.83 ) }
    dend_28 { pt3dadd( -14.8615, 466.868, 0.931049, 0.55 ) }
    dend_28 { pt3dadd( -14.5916, 468.849, 0.439426, 1.66 ) }
    dend_28 { pt3dadd( -14.2119, 471.948, -0.322838, 1.66 ) }
    dend_28 { pt3dadd( -13.8681, 475.338, -1.10668, 0.83 ) }
    dend_28 { pt3dadd( -13.649, 478.065, -1.68035, 0.83 ) }
    dend_28 { pt3dadd( -13.5244, 480.305, -2.07912, 0.83 ) }
    dend_28 { pt3dadd( -13.494, 481.644, -2.25341, 0.28 ) }
    dend_28 { pt3dadd( -13.4863, 483.91, -2.42087, 1.11 ) }
    dend_28 { pt3dadd( -13.6111, 487.315, -2.45909, 0.55 ) }
    dend_28 { pt3dadd( -13.7232, 489.275, -2.39697, 0.55 ) }
    dend_28 { pt3dadd( -13.879, 491.322, -2.34179, 0.55 ) }
    dend_28 { pt3dadd( -14.0241, 492.674, -2.31282, 0.55 ) }
    dend_28 { pt3dadd( -14.3437, 494.627, -2.24946, 1.11 ) }
    dend_28 { pt3dadd( -14.7948, 496.775, -2.16408, 0.28 ) }
    dend_28 { pt3dadd( -15.0231, 497.781, -2.126, 0.55 ) }
    dend_28 { pt3dadd( -15.4293, 500.177, -2.10851, 0.55 ) }
    dend_28 { pt3dadd( -15.8765, 503.998, -2.17746, 0.55 ) }
    dend_28 { pt3dadd( -15.9527, 505.345, -2.22816, 0.83 ) }
    dend_28 { pt3dadd( -16.0144, 507.481, -2.37721, 0.83 ) }
    dend_28 { pt3dadd( -15.9981, 510.545, -2.58941, 0.83 ) }
    dend_28 { pt3dadd( -15.8413, 513.453, -2.76749, 0.83 ) }
    dend_28 { pt3dadd( -15.5812, 515.689, -2.93609, 0.83 ) }
    dend_28 { pt3dadd( -14.6303, 520.603, -3.4607, 1.11 ) }
    dend_28 { pt3dadd( -14.0289, 523.12, -3.78067, 0.28 ) }
    dend_28 { pt3dadd( -13.5984, 524.611, -4.03107, 0.55 ) }
    dend_28 { pt3dadd( -13.01, 526.233, -4.17525, 0.55 ) }
    dend_28 { pt3dadd( -12.4162, 527.608, -4.18347, 0.55 ) }
    dend_28 { pt3dadd( -11.8937, 528.538, -4.13893, 0.55 ) }
    dend_28 { pt3dadd( -9.90808, 531.372, -4.0095, 0.55 ) }
    dend_28 { pt3dadd( -8.53011, 533.383, -3.91441, 0.83 ) }
    dend_28 { pt3dadd( -5.33331, 538.464, -4.07017, 0.55 ) }
    dend_28 { pt3dadd( -4.81688, 539.335, -4.09513, 0.83 ) }
    dend_28 { pt3dadd( -3.8846, 541.064, -4.13776, 0.83 ) }
    dend_28 { pt3dadd( -2.84961, 543.232, -4.22134, 0.55 ) }
    dend_28 { pt3dadd( -2.04814, 545.215, -4.36767, 0.83 ) }
    dend_28 { pt3dadd( -1.04634, 548.433, -4.74487, 0.83 ) }
    dend_28 { pt3dadd( -0.350512, 551.261, -5.16141, 0.55 ) }
    dend_28 { pt3dadd( -0.109135, 552.304, -5.22824, 0.55 ) }
    dend_28 { pt3dadd( 0.420058, 554.643, -5.23086, 0.55 ) }
    dend_28 { pt3dadd( 0.671628, 555.775, -5.16695, 0.83 ) }
    dend_28 { pt3dadd( 1.15033, 557.77, -5.00667, 0.83 ) }
    dend_28 { pt3dadd( 1.84713, 561.307, -4.67573, 0.55 ) }
    dend_28 { pt3dadd( 2.14583, 563.025, -4.58236, 0.55 ) }
    dend_28 { pt3dadd( 2.58242, 565.609, -4.4135, 0.55 ) }
    dend_28 { pt3dadd( 2.90297, 567.733, -4.26706, 0.55 ) }
    dend_28 { pt3dadd( 3.52618, 571.684, -4.0295, 0.55 ) }
    dend_28 { pt3dadd( 3.93518, 574.478, -3.93384, 0.83 ) }
    dend_28 { pt3dadd( 4.10767, 575.924, -3.95399, 1.11 ) }
    dend_28 { pt3dadd( 4.35892, 578.797, -3.92977, 0.55 ) }
    dend_28 { pt3dadd( 4.57142, 582.912, -3.71269, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -11.8734, 378.783, 13.1745, 0.55 ) }
    dend_13 { pt3dadd( -12.7996, 380.698, 13.1567, 0.55 ) }
    dend_13 { pt3dadd( -13.4007, 382.072, 13.1725, 0.55 ) }
    dend_13 { pt3dadd( -13.8444, 383.24, 13.1959, 0.55 ) }
    dend_13 { pt3dadd( -14.2079, 384.295, 13.2191, 0.55 ) }
    dend_13 { pt3dadd( -14.9246, 386.456, 13.2794, 0.55 ) }
    dend_13 { pt3dadd( -15.3384, 387.71, 13.3171, 0.83 ) }
    dend_13 { pt3dadd( -15.8561, 389.287, 13.4248, 0.83 ) }
    dend_13 { pt3dadd( -16.3704, 390.927, 13.5263, 0.83 ) }
    dend_13 { pt3dadd( -16.7266, 392.301, 13.5883, 0.55 ) }
    dend_13 { pt3dadd( -16.9749, 393.454, 13.6272, 0.55 ) }
    dend_13 { pt3dadd( -17.3181, 395.039, 13.701, 0.83 ) }
    dend_13 { pt3dadd( -17.5929, 396.314, 13.7712, 0.83 ) }
    dend_13 { pt3dadd( -18.0626, 398.314, 13.8993, 0.83 ) }
    dend_13 { pt3dadd( -18.3767, 399.622, 13.9933, 0.83 ) }
    dend_13 { pt3dadd( -18.6034, 400.641, 14.0731, 0.55 ) }
    dend_13 { pt3dadd( -18.8512, 401.957, 14.1777, 0.83 ) }
    dend_13 { pt3dadd( -19.0664, 403.419, 14.3147, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.00525, 400.833, -32.6611, 0.55 ) }
    dend_3 { pt3dadd( -6.01619, 402.358, -32.6586, 0.55 ) }
    dend_3 { pt3dadd( -6.03201, 404.565, -32.655, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.00525, 400.833, -32.6611, 0.55 ) }
    dend_2 { pt3dadd( -9.35732, 401.084, -32.5262, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 55.9849, -134.134, 61.2818, 0.28 ) }
    dend_61 { pt3dadd( 55.9353, -136.997, 60.0121, 0.28 ) }
    dend_61 { pt3dadd( 55.9261, -137.525, 59.778, 1.11 ) }
    dend_61 { pt3dadd( 55.8827, -140.031, 58.6668, 0.28 ) }
    dend_61 { pt3dadd( 55.8783, -140.283, 58.5551, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 55.9849, -134.134, 61.2818, 1.66 ) }
    dend_60 { pt3dadd( 56.1688, -133.484, 61.8639, 1.66 ) }
    dend_60 { pt3dadd( 56.482, -131.72, 63.1228, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 56.7559, -129.964, 64.2994, 0.28 ) }
    dend_60 { pt3dadd( 56.8078, -129.369, 64.6628, 0.55 ) }
    dend_60 { pt3dadd( 56.8632, -127.319, 65.7668, 0.28 ) }
    dend_60 { pt3dadd( 56.881, -126.093, 66.4005, 0.83 ) }
    dend_60 { pt3dadd( 56.8425, -124.497, 67.223, 0.83 ) }
    dend_60 { pt3dadd( 56.7666, -123.495, 67.6704, 0.28 ) }
    dend_60 { pt3dadd( 56.6182, -122.048, 68.2382, 0.55 ) }
    dend_60 { pt3dadd( 56.3405, -120.737, 68.6691, 0.55 ) }
    dend_60 { pt3dadd( 55.8293, -119.143, 69.093, 0.28 ) }
    dend_60 { pt3dadd( 55.6309, -118.665, 69.212, 0.83 ) }
    dend_60 { pt3dadd( 55.0465, -117.328, 69.53, 0.28 ) }
    dend_60 { pt3dadd( 54.3001, -115.772, 69.8497, 0.55 ) }
    dend_60 { pt3dadd( 53.3336, -113.891, 70.2115, 0.28 ) }
    dend_60 { pt3dadd( 52.5683, -112.591, 70.424, 1.11 ) }
    dend_60 { pt3dadd( 51.908, -111.628, 70.5081, 0.28 ) }
    dend_60 { pt3dadd( 51.0373, -110.402, 70.5777, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -13.5871, -132.163, 15.549, 0.83 ) }
    dend_56 { pt3dadd( -12.6113, -137.229, 16.645, 0.83 ) }
    dend_56 { pt3dadd( -12.0407, -139.703, 17.2121, 0.83 ) }
    dend_56 { pt3dadd( -11.1101, -144.099, 18.1411, 0.83 ) }
    dend_56 { pt3dadd( -10.6893, -147.355, 18.9496, 0.55 ) }
    dend_56 { pt3dadd( -10.5727, -150.374, 19.8142, 0.83 ) }
    dend_56 { pt3dadd( -10.7051, -153.276, 20.7686, 0.83 ) }
    dend_56 { pt3dadd( -11.0517, -155.428, 21.7146, 0.83 ) }
    dend_56 { pt3dadd( -11.993, -158.956, 23.4605, 0.83 ) }
    dend_56 { pt3dadd( -13.5058, -163.211, 25.717, 0.83 ) }
    dend_56 { pt3dadd( -14.6887, -165.994, 27.161, 0.83 ) }
    dend_56 { pt3dadd( -16.8614, -170.427, 29.4865, 1.11 ) }
    dend_56 { pt3dadd( -18.6154, -173.75, 31.2246, 0.55 ) }
    dend_56 { pt3dadd( -19.7849, -176.138, 32.4039, 0.55 ) }
    dend_56 { pt3dadd( -21.0659, -179.126, 33.7198, 0.83 ) }
    dend_56 { pt3dadd( -21.746, -181.076, 34.3675, 0.83 ) }
    dend_56 { pt3dadd( -22.228, -182.773, 34.8412, 0.28 ) }
    dend_56 { pt3dadd( -22.6893, -184.556, 35.2595, 0.55 ) }
    dend_56 { pt3dadd( -23.5782, -188.33, 36.0263, 1.11 ) }
    dend_56 { pt3dadd( -24.0941, -190.988, 36.5251, 0.28 ) }
    dend_56 { pt3dadd( -24.3633, -192.488, 36.7712, 0.55 ) }
    dend_56 { pt3dadd( -25.2018, -196.768, 37.3426, 0.28 ) }
    dend_56 { pt3dadd( -25.3706, -197.588, 37.4607, 0.83 ) }
    dend_56 { pt3dadd( -26.0039, -200.871, 38.009, 0.83 ) }
    dend_56 { pt3dadd( -26.6525, -204.278, 38.6007, 0.28 ) }
    dend_56 { pt3dadd( -26.722, -204.788, 38.6878, 1.11 ) }
    dend_56 { pt3dadd( -26.9326, -207.076, 39.009, 1.11 ) }
    dend_56 { pt3dadd( -27.2293, -210.477, 39.3127, 0.55 ) }
    dend_56 { pt3dadd( -27.4627, -213.112, 39.6217, 1.11 ) }
    dend_56 { pt3dadd( -27.6592, -215.305, 39.9739, 1.11 ) }
    dend_56 { pt3dadd( -27.849, -216.834, 40.3213, 1.11 ) }
    dend_56 { pt3dadd( -28.1195, -218.859, 40.7812, 0.28 ) }
    dend_56 { pt3dadd( -28.2721, -220.11, 41.1801, 0.55 ) }
    dend_56 { pt3dadd( -28.4811, -222.042, 41.9035, 0.28 ) }
    dend_56 { pt3dadd( -28.6273, -223.001, 42.4257, 0.83 ) }
    dend_56 { pt3dadd( -28.9667, -224.868, 43.5918, 0.28 ) }
    dend_56 { pt3dadd( -29.1427, -225.858, 44.2168, 0.83 ) }
    dend_56 { pt3dadd( -29.6612, -229.567, 46.5547, 0.28 ) }
    dend_56 { pt3dadd( -29.8022, -230.712, 47.1775, 0.83 ) }
    dend_56 { pt3dadd( -30.164, -233.948, 48.6077, 0.55 ) }
    dend_56 { pt3dadd( -30.4079, -236.135, 49.4147, 1.11 ) }
    dend_56 { pt3dadd( -30.6488, -238.512, 50.0851, 0.28 ) }
    dend_56 { pt3dadd( -30.7521, -239.794, 50.3484, 0.83 ) }
    dend_56 { pt3dadd( -30.9984, -243.273, 50.6992, 0.83 ) }
    dend_56 { pt3dadd( -31.137, -245.143, 50.9758, 0.28 ) }
    dend_56 { pt3dadd( -31.1846, -246.291, 51.1861, 0.28 ) }
    dend_56 { pt3dadd( -31.2293, -247.569, 51.5709, 0.83 ) }
    dend_56 { pt3dadd( -31.2486, -249.108, 52.1994, 0.83 ) }
    dend_56 { pt3dadd( -31.2247, -251.158, 53.2068, 0.55 ) }
    dend_56 { pt3dadd( -31.0662, -254.875, 55.2578, 0.28 ) }
    dend_56 { pt3dadd( -31.0664, -255.911, 55.8271, 1.11 ) }
    dend_56 { pt3dadd( -31.0864, -257.438, 56.5924, 0.83 ) }
    dend_56 { pt3dadd( -31.1353, -260.56, 57.955, 0.28 ) }
    dend_56 { pt3dadd( -31.1224, -261.043, 58.1286, 0.55 ) }
    dend_56 { pt3dadd( -30.9238, -263.178, 58.7097, 0.55 ) }
    dend_56 { pt3dadd( -30.4991, -265.496, 59.1349, 0.55 ) }
    dend_56 { pt3dadd( -30.0949, -267.397, 59.4225, 0.55 ) }
    dend_56 { pt3dadd( -29.7413, -269.014, 59.6139, 0.55 ) }
    dend_56 { pt3dadd( -29.3081, -271.112, 59.8518, 0.55 ) }
    dend_56 { pt3dadd( -28.6688, -273.766, 60.174, 0.55 ) }
    dend_56 { pt3dadd( -27.9716, -276.332, 60.5036, 0.55 ) }
    dend_56 { pt3dadd( -27.2434, -278.838, 60.8284, 0.55 ) }
    dend_56 { pt3dadd( -26.7751, -280.64, 61.0865, 0.28 ) }
    dend_56 { pt3dadd( -26.27, -282.829, 61.3841, 0.83 ) }
    dend_56 { pt3dadd( -25.7341, -285.908, 61.7398, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.5871, -132.163, 15.549, 1.38 ) }
    dend_47 { pt3dadd( -17.195, -132.939, 15.8256, 1.38 ) }
    dend_47 { pt3dadd( -21.5362, -133.873, 16.1584, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.2597, -177.967, -41.8684, 0.55 ) }
    dend_37 { pt3dadd( 12.6046, -183.13, -42.4579, 0.55 ) }
    dend_37 { pt3dadd( 12.6826, -185.691, -42.8462, 0.55 ) }
    dend_37 { pt3dadd( 12.7819, -188.754, -43.3693, 2.49 ) }
    dend_37 { pt3dadd( 12.8403, -191.222, -43.8925, 0.55 ) }
    dend_37 { pt3dadd( 12.8725, -193.607, -44.4452, 0.55 ) }
    dend_37 { pt3dadd( 12.9132, -196.626, -45.1447, 0.83 ) }
    dend_37 { pt3dadd( 12.7432, -199.244, -45.8065, 0.28 ) }
    dend_37 { pt3dadd( 12.6902, -200.466, -46.1771, 0.55 ) }
    dend_37 { pt3dadd( 12.6259, -202.42, -46.88, 0.28 ) }
    dend_37 { pt3dadd( 12.5907, -203.641, -47.3546, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 12.2597, -177.967, -41.8684, 0.83 ) }
    dend_32 { pt3dadd( 14.5959, -178.135, -43.5261, 0.83 ) }
    dend_32 { pt3dadd( 16.7136, -178.096, -44.8278, 0.83 ) }
    dend_32 { pt3dadd( 18.9951, -177.96, -46.2314, 0.55 ) }
    dend_32 { pt3dadd( 21.8347, -177.824, -47.9592, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 22.785, -177.855, -48.5962, 0.83 ) }
    dend_32 { pt3dadd( 24.7307, -178.146, -49.8841, 0.55 ) }
    dend_32 { pt3dadd( 26.4952, -178.606, -50.9958, 1.11 ) }
    dend_32 { pt3dadd( 28.355, -179.411, -52.1313, 0.28 ) }
    dend_32 { pt3dadd( 29.6723, -180.204, -52.9101, 0.83 ) }
    dend_32 { pt3dadd( 32.1984, -182.201, -54.5376, 0.28 ) }
    dend_32 { pt3dadd( 34.5051, -184.358, -56.1813, 1.38 ) }
    dend_32 { pt3dadd( 35.897, -185.74, -57.0517, 0.55 ) }
    dend_32 { pt3dadd( 37.0188, -186.903, -57.6056, 0.55 ) }
    dend_32 { pt3dadd( 38.765, -188.682, -58.0818, 0.83 ) }
    dend_32 { pt3dadd( 40.1154, -190.035, -58.2283, 0.28 ) }
    dend_32 { pt3dadd( 41.9909, -191.831, -58.2674, 0.55 ) }
    dend_32 { pt3dadd( 45.9293, -195.322, -57.9756, 0.28 ) }
    dend_32 { pt3dadd( 47.8543, -196.861, -57.7264, 0.83 ) }
    dend_32 { pt3dadd( 50.9667, -199.037, -57.2291, 0.55 ) }
    dend_32 { pt3dadd( 52.0778, -199.705, -57.019, 0.55 ) }
    dend_32 { pt3dadd( 55.4302, -201.508, -56.3906, 1.94 ) }
    dend_32 { pt3dadd( 59.3813, -203.608, -55.8088, 0.55 ) }
    dend_32 { pt3dadd( 61.1752, -204.504, -55.6444, 0.55 ) }
    dend_32 { pt3dadd( 62.756, -205.226, -55.4962, 0.55 ) }
    dend_32 { pt3dadd( 65.9072, -206.81, -55.2477, 0.28 ) }
    dend_32 { pt3dadd( 66.9976, -207.479, -55.158, 1.38 ) }
    dend_32 { pt3dadd( 69.1566, -209.119, -54.9449, 1.38 ) }
    dend_32 { pt3dadd( 71.8467, -211.891, -54.9955, 0.55 ) }
    dend_32 { pt3dadd( 73.1966, -213.398, -54.6547, 0.55 ) }
    dend_32 { pt3dadd( 75.8697, -216.464, -53.6171, 1.11 ) }
    dend_32 { pt3dadd( 78.0742, -219.145, -52.6375, 0.28 ) }
    dend_32 { pt3dadd( 78.49, -219.665, -52.4197, 0.83 ) }
    dend_32 { pt3dadd( 80.7599, -222.511, -50.9929, 0.28 ) }
    dend_32 { pt3dadd( 87.9951, -231.86, -45.6952, 0.83 ) }
    dend_32 { pt3dadd( 89.1817, -233.141, -44.5079, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -19.0664, 403.419, 14.3147, 0.55 ) }
    dend_23 { pt3dadd( -19.1279, 404.842, 14.4172, 0.55 ) }
    dend_23 { pt3dadd( -19.1383, 406.226, 14.7335, 0.28 ) }
    dend_23 { pt3dadd( -19.2212, 407.462, 15.1197, 0.55 ) }
    dend_23 { pt3dadd( -19.3785, 408.334, 15.4679, 0.28 ) }
    dend_23 { pt3dadd( -19.6954, 409.601, 15.959, 0.83 ) }
    dend_23 { pt3dadd( -20.028, 410.891, 16.4137, 0.83 ) }
    dend_23 { pt3dadd( -20.5115, 412.881, 17.5277, 0.55 ) }
    dend_23 { pt3dadd( -20.7548, 414.017, 18.3186, 0.55 ) }
    dend_23 { pt3dadd( -21.1712, 416.163, 20.006, 0.83 ) }
    dend_23 { pt3dadd( -21.4167, 417.349, 21.0082, 0.83 ) }
    dend_23 { pt3dadd( -21.658, 418.696, 22.2632, 0.83 ) }
    dend_23 { pt3dadd( -22.5874, 422.968, 26.1612, 0.55 ) }
    dend_23 { pt3dadd( -22.7505, 423.839, 26.8937, 0.55 ) }
    dend_23 { pt3dadd( -22.8008, 424.246, 27.2168, 0.83 ) }
    dend_23 { pt3dadd( -22.8642, 425.176, 27.9059, 0.55 ) }
    dend_23 { pt3dadd( -22.9969, 428.058, 29.7168, 1.11 ) }
    dend_23 { pt3dadd( -23.1078, 430.584, 30.9229, 0.83 ) }
    dend_23 { pt3dadd( -23.1818, 432.369, 31.4534, 0.55 ) }
    dend_23 { pt3dadd( -23.19, 433.703, 31.8163, 1.11 ) }
    dend_23 { pt3dadd( -23.1574, 435.186, 32.225, 0.55 ) }
    dend_23 { pt3dadd( -23.0065, 437.631, 32.8878, 1.11 ) }
    dend_23 { pt3dadd( -22.9001, 439.511, 33.3698, 0.55 ) }
    dend_23 { pt3dadd( -22.79, 441.192, 33.8729, 0.55 ) }
    dend_23 { pt3dadd( -22.789, 442.105, 34.1702, 0.28 ) }
    dend_23 { pt3dadd( -22.833, 443.736, 34.7211, 0.83 ) }
    dend_23 { pt3dadd( -22.934, 445.389, 35.2341, 0.55 ) }
    dend_23 { pt3dadd( -23.0774, 446.871, 35.642, 0.83 ) }
    dend_23 { pt3dadd( -23.27, 448.278, 35.9849, 0.83 ) }
    dend_23 { pt3dadd( -23.6431, 450.304, 36.454, 0.55 ) }
    dend_23 { pt3dadd( -24.0654, 452.323, 36.8633, 0.55 ) }
    dend_23 { pt3dadd( -24.6852, 454.923, 37.3153, 0.83 ) }
    dend_23 { pt3dadd( -25.3488, 457.495, 37.7432, 0.83 ) }
    dend_23 { pt3dadd( -25.974, 459.897, 38.1294, 0.83 ) }
    dend_23 { pt3dadd( -26.3773, 461.393, 38.3584, 0.83 ) }
    dend_23 { pt3dadd( -26.8965, 463.388, 38.6256, 0.83 ) }
    dend_23 { pt3dadd( -27.3697, 465.137, 38.8704, 0.83 ) }
    dend_23 { pt3dadd( -27.7995, 467.037, 39.1887, 0.83 ) }
    dend_23 { pt3dadd( -28.0245, 468.154, 39.3942, 0.83 ) }
    dend_23 { pt3dadd( -28.2732, 469.703, 39.7183, 0.55 ) }
    dend_23 { pt3dadd( -28.5014, 471.02, 39.9516, 0.83 ) }
    dend_23 { pt3dadd( -28.799, 472.634, 40.26, 0.83 ) }
    dend_23 { pt3dadd( -29.2728, 475.253, 40.7762, 0.55 ) }
    dend_23 { pt3dadd( -29.7724, 477.776, 41.314, 0.83 ) }
    dend_23 { pt3dadd( -30.3639, 480.467, 41.9239, 0.55 ) }
    dend_23 { pt3dadd( -31.1617, 483.353, 42.6306, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -19.0664, 403.419, 14.3147, 0.55 ) }
    dend_14 { pt3dadd( -20.6421, 406.675, 16.4172, 0.55 ) }
    dend_14 { pt3dadd( -22.0467, 409.284, 17.7061, 0.28 ) }
    dend_14 { pt3dadd( -22.757, 410.481, 18.2107, 0.83 ) }
    dend_14 { pt3dadd( -23.8182, 412.144, 18.8538, 0.28 ) }
    dend_14 { pt3dadd( -24.3549, 412.975, 19.1522, 0.28 ) }
    dend_14 { pt3dadd( -25.2458, 414.317, 19.6002, 0.83 ) }
    dend_14 { pt3dadd( -26.9787, 417.039, 20.2177, 0.83 ) }
    dend_14 { pt3dadd( -27.8801, 418.464, 20.4189, 0.28 ) }
    dend_14 { pt3dadd( -29.1487, 420.596, 20.7442, 0.83 ) }
    dend_14 { pt3dadd( -29.8008, 421.685, 20.9149, 0.55 ) }
    dend_14 { pt3dadd( -31.027, 423.805, 21.3047, 1.11 ) }
    dend_14 { pt3dadd( -32.1551, 425.869, 21.6887, 0.55 ) }
    dend_14 { pt3dadd( -33.0219, 427.622, 21.9969, 1.11 ) }
    dend_14 { pt3dadd( -33.9177, 429.612, 22.3281, 0.55 ) }
    dend_14 { pt3dadd( -35.0675, 432.411, 22.7666, 1.11 ) }
    dend_14 { pt3dadd( -35.7501, 434.091, 23.0478, 0.28 ) }
    dend_14 { pt3dadd( -36.2699, 435.425, 23.2934, 0.55 ) }
    dend_14 { pt3dadd( -36.9104, 436.952, 23.6292, 0.28 ) }
    dend_14 { pt3dadd( -37.3557, 438.034, 23.8938, 0.83 ) }
    dend_14 { pt3dadd( -37.8597, 439.475, 24.1405, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.03201, 404.565, -32.655, 0.83 ) }
    dend_5 { pt3dadd( -5.19777, 408.315, -33.3491, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( -4.80927, 410.357, -33.7368, 0.83 ) }
    dend_5 { pt3dadd( -4.24859, 413.405, -34.3048, 2.22 ) }
    dend_5 { pt3dadd( -3.73588, 416.492, -34.8909, 1.66 ) }
    dend_5 { pt3dadd( -3.06204, 420.254, -35.4615, 0.83 ) }
    dend_5 { pt3dadd( -2.84099, 421.495, -35.6165, 0.83 ) }
    dend_5 { pt3dadd( -2.43904, 424.264, -35.9002, 0.83 ) }
    dend_5 { pt3dadd( -1.9357, 428.085, -36.1629, 1.66 ) }
    dend_5 { pt3dadd( -1.66986, 431.059, -36.261, 0.55 ) }
    dend_5 { pt3dadd( -1.59903, 434.056, -36.3492, 0.55 ) }
    dend_5 { pt3dadd( -1.64225, 435.926, -36.4298, 1.11 ) }
    dend_5 { pt3dadd( -1.81429, 439.134, -36.6998, 0.55 ) }
    dend_5 { pt3dadd( -2.28051, 444.388, -37.3893, 1.66 ) }
    dend_5 { pt3dadd( -2.45811, 447.057, -37.8455, 0.83 ) }
    dend_5 { pt3dadd( -2.6292, 451.414, -38.7076, 0.83 ) }
    dend_5 { pt3dadd( -2.67682, 453.523, -39.1877, 0.83 ) }
    dend_5 { pt3dadd( -2.59767, 455.873, -39.7152, 1.66 ) }
    dend_5 { pt3dadd( -2.31042, 459.062, -40.3954, 0.83 ) }
    dend_5 { pt3dadd( -1.61922, 463.954, -41.2979, 0.83 ) }
    dend_5 { pt3dadd( -0.920848, 467.615, -41.8248, 0.83 ) }
    dend_5 { pt3dadd( -0.583072, 469.003, -41.9475, 0.83 ) }
    dend_5 { pt3dadd( 0.185811, 472.121, -42.1462, 0.83 ) }
    dend_5 { pt3dadd( 0.657291, 474.179, -42.2696, 1.38 ) }
    dend_5 { pt3dadd( 1.36863, 477.387, -42.4383, 0.55 ) }
    dend_5 { pt3dadd( 1.86763, 479.514, -42.5583, 1.38 ) }
    dend_5 { pt3dadd( 2.86963, 483.577, -42.7942, 1.38 ) }
    dend_5 { pt3dadd( 3.6816, 487.059, -42.9873, 0.83 ) }
    dend_5 { pt3dadd( 4.51315, 490.839, -43.1782, 0.83 ) }
    dend_5 { pt3dadd( 5.46351, 494.97, -43.3829, 1.11 ) }
    dend_5 { pt3dadd( 6.23333, 498.363, -43.5365, 0.55 ) }
    dend_5 { pt3dadd( 6.7868, 501.092, -43.6355, 0.55 ) }
    dend_5 { pt3dadd( 7.18557, 503.255, -43.7769, 0.55 ) }
    dend_5 { pt3dadd( 8.07581, 508.047, -44.2148, 2.22 ) }
    dend_5 { pt3dadd( 8.46686, 510.191, -44.4648, 0.55 ) }
    dend_5 { pt3dadd( 8.87309, 512.335, -44.7589, 0.55 ) }
    dend_5 { pt3dadd( 9.06379, 513.394, -44.9114, 1.11 ) }
    dend_5 { pt3dadd( 9.98854, 518.425, -45.642, 0.55 ) }
    dend_5 { pt3dadd( 10.4402, 521.206, -46.0276, 0.55 ) }
    dend_5 { pt3dadd( 10.5764, 522.297, -46.165, 0.55 ) }
    dend_5 { pt3dadd( 10.8398, 525.705, -46.4989, 1.11 ) }
    dend_5 { pt3dadd( 10.9551, 528.986, -46.8069, 1.11 ) }
    dend_5 { pt3dadd( 10.9936, 531.684, -47.0084, 0.83 ) }
    dend_5 { pt3dadd( 10.9075, 534.503, -47.1056, 0.83 ) }
    dend_5 { pt3dadd( 10.8068, 536.285, -47.1764, 0.83 ) }
    dend_5 { pt3dadd( 10.4592, 539.843, -47.3341, 0.83 ) }
    dend_5 { pt3dadd( 9.82081, 543.873, -47.5556, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.03201, 404.565, -32.655, 0.55 ) }
    dend_4 { pt3dadd( -7.00722, 404.605, -31.6489, 0.55 ) }
    dend_4 { pt3dadd( -8.02721, 404.647, -30.5967, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -21.5362, -133.873, 16.1584, 1.11 ) }
    dend_53 { pt3dadd( -21.5408, -135.087, 16.118, 1.11 ) }
    dend_53 { pt3dadd( -21.5485, -137.137, 16.0498, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -21.5362, -133.873, 16.1584, 1.11 ) }
    dend_48 { pt3dadd( -23.9007, -132.399, 13.6652, 1.11 ) }
    dend_48 { pt3dadd( -24.6994, -131.789, 12.903, 0.28 ) }
    dend_48 { pt3dadd( -25.2938, -131.387, 12.5727, 0.83 ) }
    dend_48 { pt3dadd( -27.6223, -129.908, 11.6804, 0.55 ) }
    dend_48 { pt3dadd( -28.7155, -129.281, 11.3503, 0.55 ) }
    dend_48 { pt3dadd( -29.7664, -128.696, 11.0001, 0.55 ) }
    dend_48 { pt3dadd( -31.2388, -127.965, 10.5534, 0.55 ) }
    dend_48 { pt3dadd( -34.8655, -126.352, 9.33312, 1.11 ) }
    dend_48 { pt3dadd( -36.9973, -125.43, 8.59089, 0.55 ) }
    dend_48 { pt3dadd( -38.3857, -124.844, 8.11737, 0.55 ) }
    dend_48 { pt3dadd( -41.5534, -123.71, 6.95479, 0.83 ) }
    dend_48 { pt3dadd( -43.4643, -123.12, 6.23074, 0.55 ) }
    dend_48 { pt3dadd( -45.3283, -122.629, 5.50365, 1.11 ) }
    dend_48 { pt3dadd( -48.3169, -121.963, 4.23163, 0.83 ) }
    dend_48 { pt3dadd( -49.3801, -121.785, 3.81759, 0.83 ) }
    dend_48 { pt3dadd( -50.8875, -121.561, 3.32937, 0.83 ) }
    dend_48 { pt3dadd( -53.2869, -121.328, 2.75569, 0.83 ) }
    dend_48 { pt3dadd( -56.3275, -121.149, 2.0768, 1.11 ) }
    dend_48 { pt3dadd( -57.7355, -121.137, 1.71497, 0.83 ) }
    dend_48 { pt3dadd( -59.7394, -121.209, 1.12515, 0.83 ) }
    dend_48 { pt3dadd( -62.6698, -121.384, 0.167149, 0.83 ) }
    dend_48 { pt3dadd( -64.5623, -121.572, -0.5591, 0.55 ) }
    dend_48 { pt3dadd( -65.955, -121.833, -1.16375, 1.38 ) }
    dend_48 { pt3dadd( -67.9209, -122.244, -2.17296, 0.55 ) }
    dend_48 { pt3dadd( -69.6838, -122.538, -3.16745, 0.55 ) }
    dend_48 { pt3dadd( -70.7423, -122.732, -3.83544, 0.55 ) }
    dend_48 { pt3dadd( -72.2839, -123.029, -4.94664, 0.55 ) }
    dend_48 { pt3dadd( -73.1058, -123.148, -5.59717, 0.83 ) }
    dend_48 { pt3dadd( -75.8199, -123.321, -7.89459, 0.55 ) }
    dend_48 { pt3dadd( -76.7639, -123.348, -8.73007, 0.55 ) }
    dend_48 { pt3dadd( -77.8311, -123.316, -9.69195, 0.55 ) }
    dend_48 { pt3dadd( -79.9375, -123.163, -11.3744, 0.55 ) }
    dend_48 { pt3dadd( -82.1926, -122.936, -12.9472, 1.11 ) }
    dend_48 { pt3dadd( -84.5199, -122.703, -14.4072, 0.55 ) }
    dend_48 { pt3dadd( -85.1595, -122.667, -14.7435, 0.55 ) }
    dend_48 { pt3dadd( -87.3588, -122.647, -15.7073, 0.55 ) }
    dend_48 { pt3dadd( -89.9455, -122.663, -16.5401, 1.94 ) }
    dend_48 { pt3dadd( -91.8616, -122.784, -16.8536, 0.83 ) }
    dend_48 { pt3dadd( -92.5619, -122.861, -16.9309, 0.28 ) }
    dend_48 { pt3dadd( -93.7947, -123.087, -17.0592, 0.55 ) }
    dend_48 { pt3dadd( -95.563, -123.493, -17.267, 0.55 ) }
    dend_48 { pt3dadd( -97.0889, -123.915, -17.4719, 0.28 ) }
    dend_48 { pt3dadd( -99.7872, -124.7, -17.7848, 1.11 ) }
    dend_48 { pt3dadd( -101.815, -125.34, -17.915, 0.28 ) }
    dend_48 { pt3dadd( -104.049, -125.94, -17.9892, 0.83 ) }
    dend_48 { pt3dadd( -105.796, -126.318, -17.9718, 0.28 ) }
    dend_48 { pt3dadd( -106.557, -126.431, -17.926, 0.28 ) }
    dend_48 { pt3dadd( -108.47, -126.572, -17.6945, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -109.521, -126.55, -17.4976, 0.55 ) }
    dend_48 { pt3dadd( -111.623, -126.281, -17.0404, 0.55 ) }
    dend_48 { pt3dadd( -112.481, -126.027, -16.9201, 0.83 ) }
    dend_48 { pt3dadd( -113.851, -125.514, -16.8482, 0.28 ) }
    dend_48 { pt3dadd( -114.186, -125.39, -16.8524, 0.83 ) }
    dend_48 { pt3dadd( -116.305, -124.611, -17.0133, 0.83 ) }
    dend_48 { pt3dadd( -118.032, -123.98, -17.1687, 0.83 ) }
    dend_48 { pt3dadd( -120.003, -123.363, -17.3683, 0.55 ) }
    dend_48 { pt3dadd( -121.001, -123.089, -17.4792, 0.55 ) }
    dend_48 { pt3dadd( -122.871, -122.688, -17.6797, 1.38 ) }
    dend_48 { pt3dadd( -124.875, -122.361, -17.8806, 1.38 ) }
    dend_48 { pt3dadd( -126.545, -122.181, -18.0337, 0.28 ) }
    dend_48 { pt3dadd( -127.893, -122.183, -18.1757, 0.83 ) }
    dend_48 { pt3dadd( -128.958, -122.305, -18.2958, 0.28 ) }
    dend_48 { pt3dadd( -129.964, -122.533, -18.4262, 1.38 ) }
    dend_48 { pt3dadd( -131.48, -123.009, -18.6549, 0.28 ) }
    dend_48 { pt3dadd( -132.004, -123.25, -18.7467, 0.83 ) }
    dend_48 { pt3dadd( -133.436, -124.087, -19.0331, 0.55 ) }
    dend_48 { pt3dadd( -134.192, -124.561, -19.2084, 0.55 ) }
    dend_48 { pt3dadd( -135.511, -125.376, -19.5558, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 12.5907, -203.641, -47.3546, 0.83 ) }
    dend_39 { pt3dadd( 12.5784, -205.231, -47.4659, 0.83 ) }
    dend_39 { pt3dadd( 12.5195, -206.735, -47.7531, 1.94 ) }
    dend_39 { pt3dadd( 12.469, -208.248, -48.1068, 1.94 ) }
    dend_39 { pt3dadd( 12.2837, -211.243, -48.9345, 0.83 ) }
    dend_39 { pt3dadd( 12.1307, -213.329, -49.5242, 1.38 ) }
    dend_39 { pt3dadd( 11.6195, -218.734, -51.2061, 0.28 ) }
    dend_39 { pt3dadd( 11.5741, -219.209, -51.3726, 0.83 ) }
    dend_39 { pt3dadd( 11.4293, -220.566, -51.9344, 0.55 ) }
    dend_39 { pt3dadd( 11.1584, -222.435, -52.865, 0.28 ) }
    dend_39 { pt3dadd( 10.7916, -224.193, -53.9384, 0.55 ) }
    dend_39 { pt3dadd( 10.2325, -226.563, -55.3515, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 12.5907, -203.641, -47.3546, 0.28 ) }
    dend_38 { pt3dadd( 12.5016, -202.928, -44.5679, 0.28 ) }
    dend_38 { pt3dadd( 12.4889, -202.826, -44.1703, 1.38 ) }
    dend_38 { pt3dadd( 12.3976, -202.095, -41.3146, 0.55 ) }
    dend_38 { pt3dadd( 12.3453, -201.677, -39.6805, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 89.1817, -233.141, -44.5079, 1.38 ) }
    dend_34 { pt3dadd( 89.8552, -235.746, -44.6201, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 89.1817, -233.141, -44.5079, 0.55 ) }
    dend_33 { pt3dadd( 89.4425, -232.293, -45.846, 0.55 ) }
    dend_33 { pt3dadd( 89.6105, -231.746, -46.7079, 0.55 ) }
    dend_33 { pt3dadd( 90.0536, -230.306, -48.9807, 0.28 ) }
    dend_33 { pt3dadd( 90.1971, -229.839, -49.7172, 1.11 ) }
    dend_33 { pt3dadd( 90.6368, -228.41, -51.9727, 0.28 ) }
    dend_33 { pt3dadd( 91.005, -227.213, -53.8612, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -31.1617, 483.353, 42.6306, 1.38 ) }
    dend_25 { pt3dadd( -30.9067, 484.821, 42.9243, 1.38 ) }
    dend_25 { pt3dadd( -30.7699, 486.136, 43.2842, 0.55 ) }
    dend_25 { pt3dadd( -30.7024, 487.241, 43.8155, 0.55 ) }
    dend_25 { pt3dadd( -30.6436, 488.201, 44.2778, 0.55 ) }
    dend_25 { pt3dadd( -30.5754, 489.317, 44.8146, 1.11 ) }
    dend_25 { pt3dadd( -30.4388, 491.55, 45.8894, 0.55 ) }
    dend_25 { pt3dadd( -30.4159, 493.141, 46.8414, 1.11 ) }
    dend_25 { pt3dadd( -30.4266, 495.448, 48.4822, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -31.1617, 483.353, 42.6306, 0.55 ) }
    dend_24 { pt3dadd( -31.9048, 486.212, 42.3381, 0.55 ) }
    dend_24 { pt3dadd( -32.3512, 487.403, 42.318, 0.28 ) }
    dend_24 { pt3dadd( -32.9346, 488.534, 42.2583, 0.83 ) }
    dend_24 { pt3dadd( -34.0671, 490.524, 42.1354, 0.28 ) }
    dend_24 { pt3dadd( -35.135, 492.224, 42.0588, 0.55 ) }
    dend_24 { pt3dadd( -36.1792, 493.804, 42.0155, 0.55 ) }
    dend_24 { pt3dadd( -38.3096, 496.528, 41.9885, 1.11 ) }
    dend_24 { pt3dadd( -40.285, 498.762, 42.0714, 0.55 ) }
    dend_24 { pt3dadd( -41.0607, 499.591, 42.0768, 0.55 ) }
    dend_24 { pt3dadd( -42.8166, 501.433, 42.0791, 0.83 ) }
    dend_24 { pt3dadd( -44.043, 502.688, 42.0344, 0.83 ) }
    dend_24 { pt3dadd( -45.8532, 504.546, 41.7797, 0.83 ) }
    dend_24 { pt3dadd( -46.8109, 505.539, 41.5717, 0.83 ) }
    dend_24 { pt3dadd( -49.0707, 508.171, 40.9165, 0.55 ) }
    dend_24 { pt3dadd( -50.7573, 510.39, 40.1327, 0.83 ) }
    dend_24 { pt3dadd( -51.7864, 511.829, 39.4536, 0.83 ) }
    dend_24 { pt3dadd( -53.5188, 514.366, 38.116, 0.55 ) }
    dend_24 { pt3dadd( -54.8875, 516.534, 36.9316, 0.55 ) }
    dend_24 { pt3dadd( -55.7253, 517.876, 36.1773, 0.83 ) }
    dend_24 { pt3dadd( -57.7464, 520.962, 34.5023, 0.83 ) }
    dend_24 { pt3dadd( -58.9812, 522.855, 33.4437, 0.83 ) }
    dend_24 { pt3dadd( -59.8741, 524.212, 32.6772, 0.28 ) }
    dend_24 { pt3dadd( -60.5619, 525.225, 32.0321, 0.55 ) }
    dend_24 { pt3dadd( -61.8304, 526.958, 30.3702, 0.55 ) }
    dend_24 { pt3dadd( -62.5721, 527.898, 29.3105, 0.55 ) }
    dend_24 { pt3dadd( -63.2124, 528.66, 28.3269, 0.55 ) }
    dend_24 { pt3dadd( -64.8642, 530.517, 25.675, 0.55 ) }
    dend_24 { pt3dadd( -66.6472, 532.248, 22.7636, 0.83 ) }
    dend_24 { pt3dadd( -69.6652, 534.745, 18.0544, 0.28 ) }
    dend_24 { pt3dadd( -70.6672, 535.412, 16.4926, 0.28 ) }
    dend_24 { pt3dadd( -71.2369, 535.741, 15.5598, 0.55 ) }
    dend_24 { pt3dadd( -71.9673, 536.124, 14.2539, 0.28 ) }
    dend_24 { pt3dadd( -72.4114, 536.363, 13.3763, 0.83 ) }
    dend_24 { pt3dadd( -73.0706, 536.789, 11.9936, 0.83 ) }
    dend_24 { pt3dadd( -75.089, 538.347, 7.21604, 0.83 ) }
    dend_24 { pt3dadd( -76.5311, 539.5, 3.48497, 0.28 ) }
    dend_24 { pt3dadd( -77.8943, 540.554, -0.161691, 1.11 ) }
    dend_24 { pt3dadd( -79.8912, 542.062, -5.56492, 0.55 ) }
    dend_24 { pt3dadd( -80.4494, 542.444, -6.97202, 0.55 ) }
    dend_24 { pt3dadd( -81.5381, 543.046, -9.48334, 0.55 ) }
    dend_24 { pt3dadd( -82.3879, 543.406, -11.1257, 0.55 ) }
    dend_24 { pt3dadd( -83.437, 543.719, -12.8507, 0.83 ) }
    dend_24 { pt3dadd( -85.4953, 544.18, -15.7912, 0.55 ) }
    dend_24 { pt3dadd( -87.0593, 544.483, -17.8948, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -91.9757, 545.431, -24.3386, 0.28 ) }
    dend_24 { pt3dadd( -92.5592, 545.575, -25.1448, 0.55 ) }
    dend_24 { pt3dadd( -94.5554, 546.203, -27.9589, 0.28 ) }
    dend_24 { pt3dadd( -96.0243, 546.716, -30.1157, 1.11 ) }
    dend_24 { pt3dadd( -98.3022, 547.558, -33.657, 0.55 ) }
    dend_24 { pt3dadd( -99.2529, 547.991, -35.3818, 1.11 ) }
    dend_24 { pt3dadd( -101.293, 549.112, -39.6085, 0.55 ) }
    dend_24 { pt3dadd( -101.787, 549.445, -40.7983, 0.55 ) }
    dend_24 { pt3dadd( -102.918, 550.336, -43.9117, 1.11 ) }
    dend_24 { pt3dadd( -103.423, 550.812, -45.531, 1.11 ) }
    dend_24 { pt3dadd( -104.965, 552.578, -51.345, 0.28 ) }
    dend_24 { pt3dadd( -105.383, 553.1, -53.0637, 0.83 ) }
    dend_24 { pt3dadd( -106.469, 554.329, -57.1953, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -37.8597, 439.475, 24.1405, 0.55 ) }
    dend_16 { pt3dadd( -38.1166, 440.959, 24.8468, 0.55 ) }
    dend_16 { pt3dadd( -38.501, 442.8, 25.6872, 0.28 ) }
    dend_16 { pt3dadd( -39.1487, 445.401, 26.8213, 1.38 ) }
    dend_16 { pt3dadd( -40.2453, 449.13, 28.4094, 0.28 ) }
    dend_16 { pt3dadd( -41.2759, 452.275, 29.7191, 0.55 ) }
    dend_16 { pt3dadd( -41.8498, 453.973, 30.398, 0.55 ) }
    dend_16 { pt3dadd( -42.3646, 455.41, 30.9438, 0.83 ) }
    dend_16 { pt3dadd( -43.1823, 457.479, 31.6944, 0.28 ) }
    dend_16 { pt3dadd( -43.9313, 459.16, 32.2067, 0.83 ) }
    dend_16 { pt3dadd( -44.4881, 460.38, 32.4674, 0.28 ) }
    dend_16 { pt3dadd( -44.99, 461.597, 32.7268, 0.28 ) }
    dend_16 { pt3dadd( -45.758, 463.468, 33.1273, 0.83 ) }
    dend_16 { pt3dadd( -46.6456, 465.694, 33.5903, 0.28 ) }
    dend_16 { pt3dadd( -47.0761, 466.813, 33.8122, 0.55 ) }
    dend_16 { pt3dadd( -48.0639, 469.399, 34.3126, 0.55 ) }
    dend_16 { pt3dadd( -48.8062, 471.326, 34.6986, 0.28 ) }
    dend_16 { pt3dadd( -49.193, 472.289, 34.9026, 0.28 ) }
    dend_16 { pt3dadd( -49.8641, 474.02, 35.2583, 1.11 ) }
    dend_16 { pt3dadd( -50.6801, 476.235, 35.5412, 0.28 ) }
    dend_16 { pt3dadd( -51.2638, 477.767, 35.6127, 0.83 ) }
    dend_16 { pt3dadd( -51.8983, 479.458, 35.52, 0.28 ) }
    dend_16 { pt3dadd( -52.5266, 481.447, 35.2128, 0.83 ) }
    dend_16 { pt3dadd( -52.859, 482.677, 34.9642, 0.83 ) }
    dend_16 { pt3dadd( -53.6275, 485.927, 34.1865, 0.55 ) }
    dend_16 { pt3dadd( -54.0896, 488.121, 33.6474, 0.55 ) }
    dend_16 { pt3dadd( -54.3767, 489.522, 33.3342, 0.55 ) }
    dend_16 { pt3dadd( -54.8859, 492.065, 32.8408, 0.83 ) }
    dend_16 { pt3dadd( -55.2906, 494.214, 32.52, 0.55 ) }
    dend_16 { pt3dadd( -55.8971, 497.364, 32.236, 1.11 ) }
    dend_16 { pt3dadd( -56.3054, 499.556, 32.1563, 0.55 ) }
    dend_16 { pt3dadd( -56.6979, 501.616, 32.1225, 0.55 ) }
    dend_16 { pt3dadd( -56.9838, 502.923, 32.073, 0.83 ) }
    dend_16 { pt3dadd( -57.2411, 503.925, 31.9637, 0.55 ) }
    dend_16 { pt3dadd( -58.1213, 507.412, 31.338, 0.83 ) }
    dend_16 { pt3dadd( -58.5222, 508.829, 30.8764, 0.28 ) }
    dend_16 { pt3dadd( -58.6152, 509.116, 30.7491, 0.28 ) }
    dend_16 { pt3dadd( -59.0278, 510.345, 30.1016, 0.55 ) }
    dend_16 { pt3dadd( -60.1065, 513.488, 28.3168, 0.28 ) }
    dend_16 { pt3dadd( -60.3021, 514.08, 28.007, 0.55 ) }
    dend_16 { pt3dadd( -61.2672, 517.15, 26.4945, 0.28 ) }
    dend_16 { pt3dadd( -61.6152, 518.401, 25.9763, 0.83 ) }
    dend_16 { pt3dadd( -62.2402, 520.572, 25.2744, 0.83 ) }
    dend_16 { pt3dadd( -62.4892, 521.49, 25.0663, 0.28 ) }
    dend_16 { pt3dadd( -63.049, 524.25, 24.6301, 0.55 ) }
    dend_16 { pt3dadd( -63.3586, 526.048, 24.4288, 0.28 ) }
    dend_16 { pt3dadd( -63.5747, 528.392, 24.4613, 0.83 ) }
    dend_16 { pt3dadd( -63.7134, 531.493, 24.6643, 0.28 ) }
    dend_16 { pt3dadd( -63.6804, 532.839, 24.8428, 0.28 ) }
    dend_16 { pt3dadd( -63.5386, 534.718, 25.2047, 0.55 ) }
    dend_16 { pt3dadd( -63.3111, 537.594, 25.7882, 0.83 ) }
    dend_16 { pt3dadd( -63.0605, 541.4, 26.6396, 0.28 ) }
    dend_16 { pt3dadd( -62.9623, 543.006, 26.9276, 0.83 ) }
    dend_16 { pt3dadd( -62.8911, 545.662, 27.1851, 0.28 ) }
    dend_16 { pt3dadd( -62.9659, 549.151, 27.0367, 1.38 ) }
    dend_16 { pt3dadd( -63.166, 552.256, 26.58, 0.28 ) }
    dend_16 { pt3dadd( -63.3631, 554.969, 25.9201, 0.83 ) }
    dend_16 { pt3dadd( -63.6054, 557.575, 25.0684, 0.83 ) }
    dend_16 { pt3dadd( -63.9853, 561.669, 23.6183, 0.55 ) }
    dend_16 { pt3dadd( -64.4984, 565.849, 22.1032, 0.55 ) }
    dend_16 { pt3dadd( -64.8066, 568.797, 21.1661, 0.83 ) }
    dend_16 { pt3dadd( -64.9371, 571.074, 20.7469, 0.83 ) }
    dend_16 { pt3dadd( -65.0175, 574.03, 20.5445, 0.55 ) }
    dend_16 { pt3dadd( -64.9733, 575.99, 20.8113, 0.55 ) }
    dend_16 { pt3dadd( -64.6987, 578.875, 21.6973, 1.38 ) }
    dend_16 { pt3dadd( -64.3103, 582.444, 23.2311, 0.83 ) }
    dend_16 { pt3dadd( -63.7109, 586.547, 25.355, 1.11 ) }
    dend_16 { pt3dadd( -63.3451, 588.567, 26.596, 1.11 ) }
    dend_16 { pt3dadd( -62.3095, 592.654, 29.5462, 0.83 ) }
    dend_16 { pt3dadd( -62.005, 593.54, 30.2335, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -37.8597, 439.475, 24.1405, 0.28 ) }
    dend_15 { pt3dadd( -34.9416, 439.271, 24.7813, 0.28 ) }
    dend_15 { pt3dadd( -34.1987, 439.218, 24.9444, 0.83 ) }
    dend_15 { pt3dadd( -31.909, 439.058, 25.4472, 0.28 ) }
    dend_15 { pt3dadd( -31.5735, 439.034, 25.5209, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.82081, 543.873, -47.5556, 0.55 ) }
    dend_7 { pt3dadd( 10.5896, 545.882, -47.8075, 0.55 ) }
    dend_7 { pt3dadd( 11.3943, 548.125, -48.1284, 0.55 ) }
    dend_7 { pt3dadd( 11.8173, 549.417, -48.3209, 0.55 ) }
    dend_7 { pt3dadd( 12.4339, 551.098, -48.5976, 0.28 ) }
    dend_7 { pt3dadd( 13.0717, 552.634, -48.8814, 0.83 ) }
    dend_7 { pt3dadd( 14.0663, 554.971, -49.3232, 0.28 ) }
    dend_7 { pt3dadd( 14.4495, 555.909, -49.5059, 0.83 ) }
    dend_7 { pt3dadd( 14.9814, 557.354, -49.7802, 0.55 ) }
    dend_7 { pt3dadd( 15.7253, 559.387, -50.2077, 0.55 ) }
    dend_7 { pt3dadd( 16.1409, 560.594, -50.472, 0.83 ) }
    dend_7 { pt3dadd( 16.5807, 562.125, -50.7861, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 16.9202, 563.378, -50.9958, 0.83 ) }
    dend_7 { pt3dadd( 17.2661, 564.805, -51.2346, 0.83 ) }
    dend_7 { pt3dadd( 17.4676, 565.855, -51.4712, 0.28 ) }
    dend_7 { pt3dadd( 17.5957, 567.372, -51.827, 0.83 ) }
    dend_7 { pt3dadd( 17.5788, 568.642, -52.1681, 0.83 ) }
    dend_7 { pt3dadd( 17.3374, 570.226, -52.8291, 0.83 ) }
    dend_7 { pt3dadd( 16.8258, 571.999, -53.7684, 1.11 ) }
    dend_7 { pt3dadd( 15.9221, 574.041, -55.2919, 0.55 ) }
    dend_7 { pt3dadd( 14.9521, 575.513, -56.6023, 0.55 ) }
    dend_7 { pt3dadd( 13.8329, 576.847, -57.9546, 1.11 ) }
    dend_7 { pt3dadd( 11.5689, 579.075, -60.5978, 0.28 ) }
    dend_7 { pt3dadd( 10.9303, 579.647, -61.3612, 0.28 ) }
    dend_7 { pt3dadd( 8.84671, 581.416, -63.8697, 0.83 ) }
    dend_7 { pt3dadd( 7.62589, 582.434, -65.4315, 0.55 ) }
    dend_7 { pt3dadd( 7.21464, 582.778, -66.0298, 0.55 ) }
    dend_7 { pt3dadd( 5.96716, 583.901, -67.9382, 0.55 ) }
    dend_7 { pt3dadd( 5.05861, 584.756, -69.3378, 0.83 ) }
    dend_7 { pt3dadd( 3.29952, 586.323, -72.0358, 0.55 ) }
    dend_7 { pt3dadd( 0.0407929, 589.122, -76.9005, 1.94 ) }
    dend_7 { pt3dadd( -2.82668, 591.488, -81.4188, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 9.82081, 543.873, -47.5556, 0.55 ) }
    dend_6 { pt3dadd( 9.36124, 545.507, -47.3992, 0.55 ) }
    dend_6 { pt3dadd( 8.92611, 547.021, -47.301, 0.83 ) }
    dend_6 { pt3dadd( 8.69098, 547.76, -47.3001, 0.55 ) }
    dend_6 { pt3dadd( 8.24087, 549.399, -47.416, 0.83 ) }
    dend_6 { pt3dadd( 7.63302, 551.762, -47.6799, 0.55 ) }
    dend_6 { pt3dadd( 7.31392, 552.791, -47.8069, 0.55 ) }
    dend_6 { pt3dadd( 6.93311, 553.759, -48.0156, 1.11 ) }
    dend_6 { pt3dadd( 6.37149, 555.116, -48.4196, 0.83 ) }
    dend_6 { pt3dadd( 5.59565, 556.807, -49.0155, 0.83 ) }
    dend_6 { pt3dadd( 4.561, 558.777, -49.7789, 0.83 ) }
    dend_6 { pt3dadd( 3.52242, 560.424, -50.3796, 0.55 ) }
    dend_6 { pt3dadd( 2.28564, 562.275, -51.008, 0.28 ) }
    dend_6 { pt3dadd( 0.691911, 564.075, -51.8583, 0.83 ) }
    dend_6 { pt3dadd( -0.685432, 565.43, -52.5888, 0.55 ) }
    dend_6 { pt3dadd( -2.41188, 566.97, -53.4972, 1.38 ) }
    dend_6 { pt3dadd( -4.05097, 568.407, -54.4196, 0.55 ) }
    dend_6 { pt3dadd( -4.99388, 569.273, -54.9783, 0.55 ) }
    dend_6 { pt3dadd( -10.992, 575.018, -58.5502, 0.83 ) }
    dend_6 { pt3dadd( -11.9009, 575.872, -59.0776, 0.55 ) }
    dend_6 { pt3dadd( -12.1024, 576.079, -59.2052, 0.55 ) }
    dend_6 { pt3dadd( -13.2217, 577.381, -59.9561, 1.38 ) }
    dend_6 { pt3dadd( -13.893, 578.403, -60.4513, 1.38 ) }
    dend_6 { pt3dadd( -14.6868, 580.472, -60.956, 0.28 ) }
    dend_6 { pt3dadd( -14.6703, 581.37, -60.832, 0.55 ) }
    dend_6 { pt3dadd( -14.5012, 582.902, -60.5896, 0.28 ) }
    dend_6 { pt3dadd( -14.2747, 584.551, -60.2773, 0.55 ) }
    dend_6 { pt3dadd( -13.7545, 587.432, -59.5506, 0.55 ) }
    dend_6 { pt3dadd( -13.3965, 589.195, -59.0502, 0.55 ) }
    dend_6 { pt3dadd( -12.9094, 591.28, -58.4012, 0.55 ) }
    dend_6 { pt3dadd( -12.3881, 592.984, -57.8709, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -21.5485, -137.137, 16.0498, 0.55 ) }
    dend_55 { pt3dadd( -22.6402, -137.69, 17.3515, 0.55 ) }
    dend_55 { pt3dadd( -23.5087, -138.133, 18.4075, 0.28 ) }
    dend_55 { pt3dadd( -24.3052, -138.539, 19.376, 1.11 ) }
    dend_55 { pt3dadd( -27.2176, -140.025, 22.917, 0.28 ) }
    dend_55 { pt3dadd( -27.5971, -140.218, 23.3785, 1.11 ) }
    dend_55 { pt3dadd( -29.5632, -141.221, 25.769, 0.28 ) }
    dend_55 { pt3dadd( -30.0305, -141.474, 26.4753, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -21.5485, -137.137, 16.0498, 0.83 ) }
    dend_54 { pt3dadd( -22.4453, -138.067, 16.7541, 0.83 ) }
    dend_54 { pt3dadd( -23.3097, -138.828, 17.4259, 0.83 ) }
    dend_54 { pt3dadd( -24.0826, -139.335, 18.0903, 0.83 ) }
    dend_54 { pt3dadd( -25.4386, -140.151, 19.2609, 0.83 ) }
    dend_54 { pt3dadd( -26.3508, -140.783, 20.2765, 0.83 ) }
    dend_54 { pt3dadd( -27.4964, -141.716, 21.7921, 0.83 ) }
    dend_54 { pt3dadd( -28.0901, -142.266, 22.6975, 0.83 ) }
    dend_54 { pt3dadd( -29.3121, -143.756, 24.9152, 1.11 ) }
    dend_54 { pt3dadd( -29.5327, -144.15, 25.4588, 1.11 ) }
    dend_54 { pt3dadd( -30.2359, -146.169, 27.9222, 1.11 ) }
    dend_54 { pt3dadd( -30.5592, -147.581, 29.4387, 1.11 ) }
    dend_54 { pt3dadd( -30.7488, -148.888, 30.6682, 1.11 ) }
    dend_54 { pt3dadd( -30.8365, -150.104, 31.7141, 1.38 ) }
    dend_54 { pt3dadd( -30.8611, -152.071, 33.1794, 0.55 ) }
    dend_54 { pt3dadd( -30.881, -152.903, 33.759, 0.83 ) }
    dend_54 { pt3dadd( -30.9463, -153.722, 34.2303, 0.83 ) }
    dend_54 { pt3dadd( -30.9719, -154.42, 34.641, 0.83 ) }
    dend_54 { pt3dadd( -31.014, -155.085, 35.0643, 0.83 ) }
    dend_54 { pt3dadd( -31.0959, -156.372, 35.7386, 0.55 ) }
    dend_54 { pt3dadd( -31.2059, -157.249, 36.0163, 0.55 ) }
    dend_54 { pt3dadd( -31.2958, -157.737, 36.1164, 1.11 ) }
    dend_54 { pt3dadd( -31.4884, -158.646, 36.2118, 0.28 ) }
    dend_54 { pt3dadd( -31.6116, -159.137, 36.2378, 1.11 ) }
    dend_54 { pt3dadd( -31.9664, -160.211, 36.1976, 0.55 ) }
    dend_54 { pt3dadd( -32.3678, -161.253, 35.9953, 0.55 ) }
    dend_54 { pt3dadd( -32.9259, -162.412, 35.6839, 0.28 ) }
    dend_54 { pt3dadd( -33.1222, -162.78, 35.5512, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -135.511, -125.376, -19.5558, 1.11 ) }
    dend_50 { pt3dadd( -137.6, -125.136, -19.775, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -135.511, -125.376, -19.5558, 0.28 ) }
    dend_49 { pt3dadd( -136.011, -127.052, -19.7387, 0.28 ) }
    dend_49 { pt3dadd( -136.105, -127.37, -19.7734, 0.83 ) }
    dend_49 { pt3dadd( -136.573, -128.936, -19.9444, 0.28 ) }
    dend_49 { pt3dadd( -136.704, -129.377, -19.9925, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.2325, -226.563, -55.3515, 0.55 ) }
    dend_41 { pt3dadd( 9.06385, -227.892, -54.0472, 0.55 ) }
    dend_41 { pt3dadd( 8.20104, -228.814, -53.2214, 0.55 ) }
    dend_41 { pt3dadd( 6.69731, -230.461, -51.3743, 0.28 ) }
    dend_41 { pt3dadd( 6.27783, -230.98, -50.8335, 0.55 ) }
    dend_41 { pt3dadd( 5.63112, -231.778, -50.0011, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 4.80123, -232.829, -48.9407, 0.28 ) }
    dend_41 { pt3dadd( 4.12653, -233.607, -48.0962, 0.55 ) }
    dend_41 { pt3dadd( 2.1293, -235.739, -45.847, 0.28 ) }
    dend_41 { pt3dadd( 0.408737, -237.508, -44.0583, 0.83 ) }
    dend_41 { pt3dadd( -1.29201, -239.315, -42.2034, 0.28 ) }
    dend_41 { pt3dadd( -1.76479, -239.84, -41.662, 0.83 ) }
    dend_41 { pt3dadd( -2.9682, -241.162, -40.2821, 0.83 ) }
    dend_41 { pt3dadd( -4.27346, -242.471, -38.9434, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.2325, -226.563, -55.3515, 0.28 ) }
    dend_40 { pt3dadd( 10.2008, -229.204, -55.2097, 0.28 ) }
    dend_40 { pt3dadd( 10.2151, -230.133, -55.1192, 0.55 ) }
    dend_40 { pt3dadd( 10.2669, -231.696, -54.9386, 0.28 ) }
    dend_40 { pt3dadd( 10.35, -233.578, -54.7088, 1.11 ) }
    dend_40 { pt3dadd( 10.4707, -235.817, -54.4331, 0.28 ) }
    dend_40 { pt3dadd( 10.5154, -236.412, -54.3656, 0.55 ) }
    dend_40 { pt3dadd( 10.5991, -237.337, -54.1775, 0.28 ) }
    dend_40 { pt3dadd( 10.664, -237.915, -54.0429, 0.55 ) }
    dend_40 { pt3dadd( 10.7275, -238.653, -53.8337, 0.28 ) }
    dend_40 { pt3dadd( 10.7502, -239.062, -53.7282, 0.55 ) }
    dend_40 { pt3dadd( 10.7612, -240.404, -53.5486, 0.28 ) }
    dend_40 { pt3dadd( 10.756, -241.59, -53.4497, 1.11 ) }
    dend_40 { pt3dadd( 10.7384, -244.095, -53.1031, 0.28 ) }
    dend_40 { pt3dadd( 10.7478, -245.545, -52.8664, 1.11 ) }
    dend_40 { pt3dadd( 10.7515, -246.7, -52.6703, 1.11 ) }
    dend_40 { pt3dadd( 10.7492, -248.844, -52.2962, 0.28 ) }
    dend_40 { pt3dadd( 10.7459, -250.203, -52.056, 0.83 ) }
    dend_40 { pt3dadd( 10.8492, -253.094, -51.6258, 0.55 ) }
    dend_40 { pt3dadd( 10.9351, -254.697, -51.5017, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 89.8552, -235.746, -44.6201, 0.28 ) }
    dend_36 { pt3dadd( 92.5419, -237.114, -45.6082, 0.28 ) }
    dend_36 { pt3dadd( 93.4808, -237.582, -45.9605, 0.83 ) }
    dend_36 { pt3dadd( 94.9445, -238.331, -46.5296, 0.28 ) }
    dend_36 { pt3dadd( 96.9789, -239.409, -47.3452, 0.83 ) }
    dend_36 { pt3dadd( 98.9983, -240.558, -48.1699, 0.28 ) }
    dend_36 { pt3dadd( 100.487, -241.399, -48.798, 0.55 ) }
    dend_36 { pt3dadd( 101.281, -241.804, -49.1441, 0.28 ) }
    dend_36 { pt3dadd( 102.996, -242.603, -49.9486, 0.55 ) }
    dend_36 { pt3dadd( 104.116, -243.107, -50.5038, 0.28 ) }
    dend_36 { pt3dadd( 105.368, -243.643, -51.1396, 0.55 ) }
    dend_36 { pt3dadd( 106.971, -244.248, -51.9965, 0.55 ) }
    dend_36 { pt3dadd( 108.522, -244.824, -52.9478, 0.55 ) }
    dend_36 { pt3dadd( 110.561, -245.641, -54.316, 0.83 ) }
    dend_36 { pt3dadd( 111.708, -246.172, -55.2589, 0.28 ) }
    dend_36 { pt3dadd( 112.732, -246.765, -56.2169, 0.83 ) }
    dend_36 { pt3dadd( 113.877, -247.411, -57.0245, 1.38 ) }
    dend_36 { pt3dadd( 116.58, -248.98, -58.4914, 0.28 ) }
    dend_36 { pt3dadd( 118.074, -249.959, -59.2549, 0.83 ) }
    dend_36 { pt3dadd( 120.409, -251.536, -60.3876, 0.28 ) }
    dend_36 { pt3dadd( 121.92, -252.535, -61.0481, 1.11 ) }
    dend_36 { pt3dadd( 127.9, -256.351, -63.174, 0.28 ) }
    dend_36 { pt3dadd( 128.693, -256.837, -63.4004, 0.55 ) }
    dend_36 { pt3dadd( 132.767, -259.238, -64.3735, 0.28 ) }
    dend_36 { pt3dadd( 135.491, -260.901, -65.0225, 0.28 ) }
    dend_36 { pt3dadd( 136.662, -261.701, -65.2966, 0.55 ) }
    dend_36 { pt3dadd( 138.414, -263.01, -65.8824, 0.28 ) }
    dend_36 { pt3dadd( 139.291, -263.893, -66.4185, 0.28 ) }
    dend_36 { pt3dadd( 140.427, -265.065, -67.039, 0.55 ) }
    dend_36 { pt3dadd( 141.929, -266.508, -67.4661, 0.55 ) }
    dend_36 { pt3dadd( 142.776, -267.778, -67.7545, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 89.8552, -235.746, -44.6201, 0.55 ) }
    dend_35 { pt3dadd( 87.7272, -237.183, -43.7845, 0.55 ) }
    dend_35 { pt3dadd( 86.8452, -237.779, -43.4381, 0.55 ) }
    dend_35 { pt3dadd( 85.758, -238.514, -43.0112, 0.28 ) }
    dend_35 { pt3dadd( 84.32, -239.485, -42.4465, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -30.4266, 495.448, 48.4822, 0.83 ) }
    dend_27 { pt3dadd( -30.1376, 497.125, 49.0343, 0.83 ) }
    dend_27 { pt3dadd( -29.6763, 499.715, 49.85, 0.83 ) }
    dend_27 { pt3dadd( -29.3403, 501.485, 50.4041, 0.83 ) }
    dend_27 { pt3dadd( -28.7498, 505.147, 51.6083, 0.83 ) }
    dend_27 { pt3dadd( -28.7045, 505.569, 51.7273, 1.11 ) }
    dend_27 { pt3dadd( -28.6421, 506.665, 52.0009, 0.55 ) }
    dend_27 { pt3dadd( -28.6472, 507.312, 52.1537, 0.83 ) }
    dend_27 { pt3dadd( -29.6119, 507.762, 51.3222, 0.28 ) }
    dend_27 { pt3dadd( -30.5299, 508.201, 50.3391, 0.55 ) }
    dend_27 { pt3dadd( -33.2074, 509.645, 47.0966, 0.28 ) }
    dend_27 { pt3dadd( -33.9606, 510.129, 46.151, 0.83 ) }
    dend_27 { pt3dadd( -34.5163, 510.534, 45.4117, 0.83 ) }
    dend_27 { pt3dadd( -37.7426, 513.36, 40.7845, 0.55 ) }
    dend_27 { pt3dadd( -38.5327, 514.224, 39.5089, 0.55 ) }
    dend_27 { pt3dadd( -38.9903, 515.122, 38.5278, 1.11 ) }
    dend_27 { pt3dadd( -39.3467, 518.429, 36.7715, 0.55 ) }
    dend_27 { pt3dadd( -39.3211, 518.904, 36.6324, 0.83 ) }
    dend_27 { pt3dadd( -39.1557, 519.678, 36.6173, 0.28 ) }
    dend_27 { pt3dadd( -39.0324, 520.094, 36.7003, 0.55 ) }
    dend_27 { pt3dadd( -38.9456, 520.754, 36.8163, 0.28 ) }
    dend_27 { pt3dadd( -38.965, 521.659, 36.8827, 0.83 ) }
    dend_27 { pt3dadd( -39.042, 522.604, 36.7947, 0.28 ) }
    dend_27 { pt3dadd( -39.1064, 523.23, 36.7338, 0.83 ) }
    dend_27 { pt3dadd( -39.4487, 525.23, 36.3986, 0.55 ) }
    dend_27 { pt3dadd( -39.8346, 527.038, 35.9977, 0.55 ) }
    dend_27 { pt3dadd( -40.1626, 528.373, 35.6668, 0.55 ) }
    dend_27 { pt3dadd( -40.6272, 530.233, 35.1932, 0.55 ) }
    dend_27 { pt3dadd( -40.9738, 531.48, 34.8569, 0.55 ) }
    dend_27 { pt3dadd( -41.7319, 534.177, 34.1672, 0.55 ) }
    dend_27 { pt3dadd( -41.962, 535.016, 33.9399, 0.28 ) }
    dend_27 { pt3dadd( -42.1749, 535.759, 33.7146, 0.55 ) }
    dend_27 { pt3dadd( -42.4981, 536.786, 33.4134, 0.28 ) }
    dend_27 { pt3dadd( -43.0935, 538.371, 32.9678, 0.55 ) }
    dend_27 { pt3dadd( -43.33, 539.027, 32.7981, 0.55 ) }
    dend_27 { pt3dadd( -43.714, 540.278, 32.5082, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -44.0915, 541.456, 32.1479, 0.28 ) }
    dend_27 { pt3dadd( -44.2548, 542.062, 31.9132, 0.55 ) }
    dend_27 { pt3dadd( -44.704, 543.4, 31.0238, 0.28 ) }
    dend_27 { pt3dadd( -44.9542, 544.089, 30.338, 0.83 ) }
    dend_27 { pt3dadd( -45.2303, 544.815, 29.5464, 0.83 ) }
    dend_27 { pt3dadd( -45.7177, 546.086, 28.0162, 0.55 ) }
    dend_27 { pt3dadd( -46.0878, 547.009, 26.7556, 0.55 ) }
    dend_27 { pt3dadd( -47.2156, 549.678, 22.7459, 0.28 ) }
    dend_27 { pt3dadd( -47.9264, 551.321, 19.9841, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -30.4266, 495.448, 48.4822, 0.55 ) }
    dend_26 { pt3dadd( -31.788, 497.729, 49.284, 0.55 ) }
    dend_26 { pt3dadd( -33.5797, 500.73, 50.339, 0.55 ) }
    dend_26 { pt3dadd( -34.8401, 502.841, 51.0812, 0.55 ) }
    dend_26 { pt3dadd( -35.9343, 504.674, 51.7256, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -62.005, 593.54, 30.2335, 0.28 ) }
    dend_22 { pt3dadd( -62.3441, 594.116, 28.5209, 0.28 ) }
    dend_22 { pt3dadd( -62.4384, 594.276, 28.0445, 0.55 ) }
    dend_22 { pt3dadd( -63.3661, 595.851, 23.3591, 0.28 ) }
    dend_22 { pt3dadd( -63.4714, 596.03, 22.8273, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -62.005, 593.54, 30.2335, 0.28 ) }
    dend_17 { pt3dadd( -64.2883, 595.751, 30.833, 0.28 ) }
    dend_17 { pt3dadd( -65.6996, 597.118, 31.2035, 0.83 ) }
    dend_17 { pt3dadd( -66.755, 598.14, 31.4806, 0.83 ) }
    dend_17 { pt3dadd( -67.4228, 598.786, 31.6559, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.82668, 591.488, -81.4188, 0.55 ) }
    dend_9 { pt3dadd( -5.38633, 592.571, -80.6876, 0.55 ) }
    dend_9 { pt3dadd( -8.49625, 593.887, -80.023, 0.55 ) }
    dend_9 { pt3dadd( -10.8182, 594.87, -79.5268, 0.55 ) }
    dend_9 { pt3dadd( -13.5145, 596.011, -78.9506, 0.28 ) }
    dend_9 { pt3dadd( -15.9533, 597.043, -78.4294, 0.83 ) }
    dend_9 { pt3dadd( -17.8327, 597.839, -78.0277, 0.83 ) }
    dend_9 { pt3dadd( -19.8872, 598.799, -77.7891, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -2.82668, 591.488, -81.4188, 0.55 ) }
    dend_8 { pt3dadd( -3.66779, 593.508, -81.7095, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -137.6, -125.136, -19.775, 0.28 ) }
    dend_52 { pt3dadd( -139.297, -125.012, -20.3804, 0.28 ) }
    dend_52 { pt3dadd( -140.99, -124.798, -20.9833, 0.55 ) }
    dend_52 { pt3dadd( -142.883, -124.527, -21.6436, 0.28 ) }
    dend_52 { pt3dadd( -143.952, -124.384, -21.9769, 1.11 ) }
    dend_52 { pt3dadd( -145.598, -124.152, -22.4432, 0.28 ) }
    dend_52 { pt3dadd( -146.017, -124.09, -22.5797, 0.55 ) }
    dend_52 { pt3dadd( -148.356, -123.76, -23.417, 0.28 ) }
    dend_52 { pt3dadd( -149.022, -123.654, -23.6642, 1.11 ) }
    dend_52 { pt3dadd( -150.53, -123.444, -24.2235, 0.28 ) }
    dend_52 { pt3dadd( -151.426, -123.324, -24.5452, 1.11 ) }
    dend_52 { pt3dadd( -153.573, -123.035, -25.2293, 1.11 ) }
    dend_52 { pt3dadd( -155.043, -122.894, -25.7645, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -137.6, -125.136, -19.775, 0.83 ) }
    dend_51 { pt3dadd( -139.268, -127.398, -20.4406, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.27346, -242.471, -38.9434, 0.83 ) }
    dend_43 { pt3dadd( -4.84213, -243.079, -39.3092, 0.83 ) }
    dend_43 { pt3dadd( -5.79437, -244.096, -39.9218, 0.28 ) }
    dend_43 { pt3dadd( -6.59306, -244.949, -40.4356, 1.11 ) }
    dend_43 { pt3dadd( -8.84994, -247.36, -41.8875, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -4.27346, -242.471, -38.9434, 1.11 ) }
    dend_42 { pt3dadd( -5.96762, -240.765, -38.661, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -67.4228, 598.786, 31.6559, 0.55 ) }
    dend_21 { pt3dadd( -66.8107, 599.601, 30.3629, 0.55 ) }
    dend_21 { pt3dadd( -66.119, 600.362, 29.2086, 0.28 ) }
    dend_21 { pt3dadd( -65.9574, 600.547, 28.8186, 0.55 ) }
    dend_21 { pt3dadd( -64.8172, 601.85, 26.0665, 0.28 ) }
    dend_21 { pt3dadd( -64.2825, 602.46, 24.7759, 0.55 ) }
    dend_21 { pt3dadd( -63.5555, 603.291, 23.0213, 0.28 ) }
    dend_21 { pt3dadd( -63.1342, 603.889, 21.5913, 0.55 ) }
    dend_21 { pt3dadd( -62.1076, 605.713, 16.9083, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -67.4228, 598.786, 31.6559, 0.28 ) }
    dend_18 { pt3dadd( -68.5613, 598.957, 31.9234, 0.28 ) }
    dend_18 { pt3dadd( -70.3186, 599.221, 32.3364, 0.55 ) }
    dend_18 { pt3dadd( -71.8099, 599.445, 32.6868, 0.55 ) }
    dend_18 { pt3dadd( -73.3834, 599.681, 33.0566, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -19.8872, 598.799, -77.7891, 0.55 ) }
    dend_11 { pt3dadd( -20.3704, 599.988, -77.4122, 0.55 ) }
    dend_11 { pt3dadd( -20.8373, 601.136, -77.0479, 0.55 ) }
    dend_11 { pt3dadd( -21.2618, 602.18, -76.7167, 0.83 ) }
    dend_11 { pt3dadd( -21.7769, 603.448, -76.3148, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -19.8872, 598.799, -77.7891, 0.28 ) }
    dend_10 { pt3dadd( -22.5004, 599.938, -78.0214, 0.28 ) }
    dend_10 { pt3dadd( -23.2175, 600.25, -78.0852, 0.28 ) }
    dend_10 { pt3dadd( -24.6675, 600.882, -78.2141, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -8.84994, -247.36, -41.8875, 1.11 ) }
    dend_45 { pt3dadd( -8.46592, -249.437, -40.4324, 1.11 ) }
    dend_45 { pt3dadd( -8.09404, -251.558, -38.8322, 0.28 ) }
    dend_45 { pt3dadd( -7.88209, -253.03, -37.6958, 1.11 ) }
    dend_45 { pt3dadd( -7.40298, -257.085, -34.2574, 0.28 ) }
    dend_45 { pt3dadd( -7.30975, -258.092, -33.3801, 1.94 ) }
    dend_45 { pt3dadd( -7.11154, -261.035, -30.9576, 1.11 ) }
    dend_45 { pt3dadd( -7.0987, -261.687, -30.4148, 0.28 ) }
    dend_45 { pt3dadd( -7.11902, -262.436, -29.7912, 0.83 ) }
    dend_45 { pt3dadd( -7.28427, -264.45, -28.3307, 0.28 ) }
    dend_45 { pt3dadd( -7.44079, -265.394, -27.8675, 1.11 ) }
    dend_45 { pt3dadd( -7.90453, -267.918, -26.8647, 0.28 ) }
    dend_45 { pt3dadd( -8.35669, -269.936, -26.2654, 0.28 ) }
    dend_45 { pt3dadd( -8.5662, -270.997, -25.9773, 1.11 ) }
    dend_45 { pt3dadd( -8.5662, -270.997, -25.9773, 1.11 ) }
    dend_45 { pt3dadd( -8.82303, -272.325, -25.7777, 0.55 ) }
    dend_45 { pt3dadd( -8.94147, -272.905, -25.6711, 1.38 ) }
    dend_45 { pt3dadd( -9.47019, -275.108, -25.0719, 0.28 ) }
    dend_45 { pt3dadd( -9.51995, -275.344, -24.9895, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -8.84994, -247.36, -41.8875, 0.55 ) }
    dend_44 { pt3dadd( -11.4139, -247.093, -40.1566, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -13.0027, -246.928, -39.084, 0.55 ) }
    dend_44 { pt3dadd( -14.3639, -246.786, -38.1652, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -73.3834, 599.681, 33.0566, 0.55 ) }
    dend_20 { pt3dadd( -73.9048, 600.81, 33.3157, 0.55 ) }
    dend_20 { pt3dadd( -74.706, 602.875, 33.8739, 0.55 ) }
    dend_20 { pt3dadd( -75.108, 604.263, 34.2329, 0.55 ) }
    dend_20 { pt3dadd( -75.556, 605.985, 34.6159, 0.55 ) }
    dend_20 { pt3dadd( -75.9427, 607.57, 35.0211, 0.28 ) }
    dend_20 { pt3dadd( -76.1034, 608.298, 35.1665, 0.83 ) }
    dend_20 { pt3dadd( -76.4546, 610.381, 35.4903, 0.83 ) }
    dend_20 { pt3dadd( -76.6314, 612.175, 35.7449, 0.83 ) }
    dend_20 { pt3dadd( -76.6999, 613.098, 35.8356, 0.55 ) }
    dend_20 { pt3dadd( -76.7073, 615.455, 36.0002, 0.83 ) }
    dend_20 { pt3dadd( -76.5286, 618.135, 36.0115, 0.28 ) }
    dend_20 { pt3dadd( -76.4383, 619.425, 35.8991, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -73.3834, 599.681, 33.0566, 0.55 ) }
    dend_19 { pt3dadd( -76.219, 598.3, 34.8823, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 5
    dend_0 nseg = 3
    dend_57 nseg = 3
    dend_12 nseg = 17
    dend_1 nseg = 17
    dend_31 nseg = 5
    dend_28 nseg = 11
    dend_56 nseg = 9
    dend_32 nseg = 5
    dend_23 nseg = 5
    dend_14 nseg = 3
    dend_5 nseg = 7
    dend_48 nseg = 7
    dend_24 nseg = 7
    dend_16 nseg = 9
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_DBC_e57b56d14c_0_0


