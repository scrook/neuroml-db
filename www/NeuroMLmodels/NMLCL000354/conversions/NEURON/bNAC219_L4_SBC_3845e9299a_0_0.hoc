// Cell: bNAC219_L4_SBC_3845e9299a_0_0
/*
{
  "id" : "bNAC219_L4_SBC_3845e9299a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.8534, -3.68898, 0.0, 3.87803", "-5.27984, -3.22888, 0.0, 6.96449", "-4.70627, -2.76878, 0.0, 8.7585", "-4.1327, -2.30868, 0.0, 10.0498", "-3.55914, -1.84858, 0.0, 11.0032", "-2.98557, -1.38848, 0.0, 12.0695", "-2.41201, -0.928385, 0.0, 12.4861", "-1.83844, -0.468287, 0.0, 12.8863", "-1.26487, -0.0081878, 0.0, 13.1702", "-0.691307, 0.451911, 0.0, 13.2491", "-0.117741, 0.91201, 0.0, 13.2672", "0.455825, 1.37211, 0.0, 13.2354", "1.02939, 1.83221, 0.0, 13.09", "1.60296, 2.29231, 0.0, 12.7829", "2.17652, 2.75241, 0.0, 12.3841", "2.75009, 3.2125, 0.0, 11.4175", "3.32366, 3.6726, 0.0, 10.2262", "3.89722, 4.1327, 0.0, 8.70811", "4.47079, 4.5928, 0.0, 6.9837", "5.04435, 5.0529, 0.0, 4.97808", "5.61792, 5.513, 0.0, 2.90913" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.59355, 4.20833, 7.71, 0.96", "-3.2793, 6.4207, 9.24973, 0.96", "-3.23548, 7.21295, 9.78031, 0.96", "-3.23166, 8.601, 10.7915, 0.74", "-3.24755, 9.58827, 11.5714, 1.03", "-3.25604, 10.6741, 12.5876, 0.81", "-3.22964, 11.3893, 13.4566, 0.59", "-3.16743, 12.0294, 14.5702, 0.59", "-3.06501, 12.3275, 15.5021, 0.59", "-2.96989, 12.4046, 16.1573, 0.59", "-2.67849, 12.3859, 17.8267, 0.59", "-2.26411, 12.1231, 19.7626, 0.88", "-1.8974, 11.8415, 21.0793, 1.18", "-1.39076, 11.5041, 22.4212, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.04355, -3.45817, 15.73, 0.66", "-4.26616, -4.2171, 16.1823, 0.66", "-4.37676, -4.55687, 16.3948, 0.66", "-4.57291, -5.06088, 16.7049, 0.66", "-4.92047, -5.87265, 17.1967, 0.96", "-5.54721, -7.31497, 18.0465, 0.66", "-5.76579, -7.84827, 18.3621, 0.66", "-5.9872, -8.57106, 18.7989, 0.66", "-6.17163, -9.3387, 19.2748, 0.66", "-6.27673, -9.85963, 19.5993, 0.88", "-6.42422, -10.4851, 19.982, 0.88", "-6.75196, -11.6136, 20.6165, 0.29", "-6.99656, -12.4016, 21.0356, 0.29", "-7.0983, -12.709, 21.2038, 0.29", "-7.32067, -13.3544, 21.529, 0.66", "-7.54355, -14.1651, 21.8942, 0.22", "-7.63769, -14.6263, 22.0597, 0.22", "-7.7741, -15.4997, 22.3334, 1.03", "-7.87246, -16.2537, 22.5597, 1.03", "-7.98259, -17.5907, 22.9707, 0.37", "-8.00697, -19.0953, 23.4243, 0.07", "-7.95805, -19.9652, 23.701, 0.29", "-7.85553, -20.8396, 23.9771, 0.29", "-7.73544, -21.5018, 24.1967, 0.37", "-7.54516, -22.233, 24.4407, 0.52", "-7.40443, -22.6806, 24.624, 0.52", "-7.16574, -23.4202, 24.9826, 0.52", "-6.8716, -24.2349, 25.4598, 0.52", "-6.6534, -24.7098, 25.7608, 0.66", "-6.11956, -25.6862, 26.3943, 0.22", "-5.55686, -26.5613, 26.9597, 0.88", "-5.05505, -27.2633, 27.4055, 0.88", "-4.44222, -28.0909, 27.9044, 0.22", "-4.03499, -28.6363, 28.2271, 0.22", "-3.26882, -29.6173, 28.7624, 0.29", "-2.7154, -30.2701, 29.0843, 0.29", "-2.12034, -30.9223, 29.3694, 0.22", "-1.27271, -31.8787, 29.7349, 0.59", "-0.597919, -32.675, 30.04, 0.22", "0.00882885, -33.4224, 30.3212, 0.22", "0.404931, -33.9217, 30.5468, 0.52", "1.13418, -34.9428, 31.0658, 0.15", "1.63532, -35.7059, 31.481, 0.15", "2.17085, -36.5824, 31.983, 0.15", "2.58686, -37.319, 32.4327, 0.22", "3.14445, -38.3904, 33.147, 0.22", "3.55373, -39.1132, 33.6574, 0.22", "3.7639, -39.4188, 33.9049, 0.22", "4.13436, -39.8947, 34.3157, 0.22", "4.40251, -40.2512, 34.6126, 0.44", "4.64477, -40.5654, 34.8975, 0.44", "5.12405, -41.1419, 35.4297, 0.44", "5.66408, -41.7042, 36.0177, 0.44", "6.3301, -42.3522, 36.7372, 0.15", "6.83632, -42.8438, 37.2686, 0.15", "7.40835, -43.4105, 37.8327, 0.15", "8.12328, -44.1928, 38.4784, 0.59", "8.72094, -44.8816, 38.9518, 0.15", "9.26865, -45.5335, 39.306, 0.15", "9.7387, -46.1395, 39.5857, 0.15", "10.2109, -46.8259, 39.856, 0.74", "11.2815, -48.6039, 40.4499, 0.15", "11.9408, -49.8508, 40.7684, 0.15", "12.3691, -50.7768, 40.9637, 0.37", "12.9743, -52.1735, 41.2592, 0.15", "13.664, -53.8456, 41.6368, 0.22", "14.1084, -54.9656, 41.9328, 0.22", "14.7754, -56.6401, 42.424, 0.07", "15.0571, -57.37, 42.6521, 0.96", "15.6696, -58.8977, 43.1543, 0.22", "15.9555, -59.6024, 43.3997, 0.37", "16.403, -60.7369, 43.8449, 0.07", "16.5599, -61.1438, 44.0292, 0.22", "16.9298, -62.1066, 44.5553, 0.07", "17.1556, -62.7036, 44.8789, 0.22", "17.6129, -63.9136, 45.4508, 0.07", "17.8803, -64.5846, 45.7524, 0.66", "18.27, -65.5197, 46.1328, 0.66", "18.8778, -66.8897, 46.7023, 0.22", "19.0039, -67.1343, 46.8214, 0.22", "19.6792, -68.2724, 47.4735, 0.07", "19.9615, -68.7163, 47.7282, 0.29", "20.6412, -69.8001, 48.324, 0.07", "20.9103, -70.255, 48.5721, 0.22", "21.6137, -71.5377, 49.227, 0.07", "22.2194, -72.7408, 49.8418, 0.74", "22.9868, -74.436, 50.6971, 0.15", "23.335, -75.2978, 51.0936, 0.29", "23.7773, -76.4945, 51.6175, 0.15", "24.1583, -77.5973, 52.069, 0.37", "24.6583, -79.1943, 52.6555, 0.22", "24.9107, -80.0616, 52.9975, 0.74", "25.1821, -81.0045, 53.4397, 0.22", "25.4881, -82.028, 53.9175, 0.07", "25.6898, -82.6572, 54.2107, 0.07", "25.8697, -83.1594, 54.4728, 0.66", "26.8325, -85.5414, 55.7855, 0.15", "27.0781, -86.1097, 56.0985, 0.15", "27.4957, -87.0982, 56.6488, 0.52", "28.0122, -88.3794, 57.3155, 0.66", "28.7132, -90.1527, 58.1937, 0.15", "28.951, -90.7802, 58.4967, 0.15", "29.3411, -91.812, 59.0592, 0.29", "29.5871, -92.5317, 59.4929, 0.29", "29.8286, -93.3428, 60.017, 0.07", "29.9354, -93.708, 60.2412, 0.22", "30.2981, -94.9835, 61.0469, 0.22", "30.8142, -96.744, 62.2109, 0.59", "31.3449, -98.3571, 63.3216, 0.07", "31.5441, -98.8736, 63.6701, 0.66", "31.9611, -99.8211, 64.3402, 0.07", "32.5699, -101.041, 65.2466, 0.07", "32.955, -101.705, 65.7556, 0.22", "33.3459, -102.31, 66.2249, 0.07", "33.8013, -102.955, 66.8044, 0.52", "34.713, -104.237, 68.0888, 0.15", "35.4608, -105.295, 69.2288, 0.59", "36.0573, -106.139, 70.1677, 0.07", "36.3528, -106.591, 70.685, 0.29", "37.0115, -107.613, 71.8688, 0.07", "37.4899, -108.332, 72.7262, 0.07", "37.703, -108.637, 73.1061, 0.44", "38.1474, -109.247, 73.9083, 0.44", "38.8504, -110.229, 75.2266, 0.15", "39.3937, -110.982, 76.2608, 0.15", "39.8536, -111.556, 77.1345, 0.22", "40.5582, -112.397, 78.5111, 0.22", "40.775, -112.663, 78.9804, 0.15", "41.0572, -113.044, 79.6801, 0.29", "41.5044, -113.731, 80.9789, 0.29", "42.0221, -114.625, 82.566, 0.52", "42.2866, -115.068, 83.3254, 0.07", "42.7278, -115.758, 84.426, 0.07", "43.1364, -116.389, 85.3167, 0.22", "43.4993, -116.945, 86.0172, 0.22", "43.9681, -117.673, 86.7766, 0.22", "44.2127, -118.048, 87.0982, 0.22", "44.799, -118.913, 87.7859, 0.22", "45.5127, -119.983, 88.5601, 0.15", "46.2053, -121.136, 89.3426, 0.15", "46.5743, -121.886, 89.8369, 0.15", "46.8323, -122.541, 90.2697, 0.29", "47.0672, -123.286, 90.7693, 0.29", "47.2574, -124.238, 91.4535, 0.07", "47.3265, -124.803, 91.881, 0.07", "47.3612, -125.617, 92.4386, 0.07", "47.3591, -125.977, 92.6759, 0.22", "47.3131, -127.248, 93.4957, 0.07", "47.2533, -128.637, 94.4211, 0.07", "47.2309, -129.271, 94.8865, 0.07", "47.2141, -130.279, 95.6855, 0.07", "47.2187, -130.827, 96.1703, 0.74", "47.2319, -131.339, 96.6656, 0.29", "47.2687, -132.549, 97.9192, 0.07", "47.2803, -133.586, 99.0182, 0.07", "47.2658, -133.942, 99.3932, 0.59", "47.1171, -135.791, 101.429, 0.07", "47.0735, -136.295, 101.994, 0.07", "47.0118, -136.958, 102.728, 0.07", "46.8675, -138.196, 104.007, 0.07", "46.7773, -138.739, 104.533, 0.07", "46.4557, -140.064, 105.762, 0.07" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "5.16645, 6.13683, 4.66, 1.99", "5.16645, 6.13683, 4.66, 1.99", "5.52266, 6.70327, 4.71101, 1.99", "6.21095, 7.77591, 4.83904, 1.18", "7.02473, 9.06314, 5.0398, 1.11", "7.74616, 10.2333, 5.28212, 1.33", "8.40801, 11.3892, 5.53562, 1.55", "9.10989, 12.7188, 5.83868, 1.11", "9.72927, 14.0188, 6.10054, 1.11", "10.2602, 15.2166, 6.26805, 0.74", "10.6103, 16.0715, 6.29818, 0.74", "10.9858, 17.0289, 6.20714, 0.66", "11.2404, 17.6448, 6.05575, 0.66", "11.8567, 18.85, 5.60147, 0.96", "12.5239, 19.9641, 5.09279, 1.4", "13.1145, 20.9174, 4.64932, 1.62", "13.7856, 22.0272, 4.21353, 1.25", "14.6619, 23.6323, 3.769, 0.81", "15.2352, 24.9393, 3.57139, 0.81", "15.5381, 25.9636, 3.5542, 0.59", "15.7708, 27.1812, 3.63141, 0.59", "15.8827, 28.8664, 3.86065, 0.59", "15.734, 30.3492, 4.18152, 0.44", "15.4745, 31.2522, 4.48158, 0.29", "15.2321, 31.7918, 4.68432, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.61645, -2.25167, -6.09, 2.95", "6.61645, -2.25167, -6.09, 2.95", "7.80205, -2.76459, -6.82956, 1.7", "8.77991, -3.18141, -7.42065, 1.33", "9.9606, -3.71146, -8.15253, 1.33", "10.5506, -3.9917, -8.4984, 1.33", "11.5252, -4.52432, -9.02135, 1.47", "12.4478, -5.11174, -9.48842, 1.33", "13.4271, -5.8359, -9.94331, 1.77", "14.4973, -6.7536, -10.3676, 1.99", "15.6767, -7.84772, -10.7956, 1.62", "17.211, -9.34371, -11.2906, 1.4", "18.4071, -10.6149, -11.6251, 1.25", "19.0159, -11.3295, -11.7677, 1.62", "19.5588, -12.0477, -11.867, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.25355, -0.0191701, -0.42, 2.8", "-7.25355, -0.0191701, -0.42, 2.8", "-8.54527, -0.390368, 0.162819, 1.92", "-9.32975, -0.615802, 0.516772, 1.47", "-10.8377, -1.04915, 1.19718, 1.18", "-12.1387, -1.42302, 1.78417, 1.18", "-13.4272, -1.79329, 2.36554, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.47645, -5.45317, -0.0300001, 0.74", "1.56206, -6.60285, -0.241248, 0.52", "1.67565, -7.55543, -0.378878, 0.74", "1.77487, -8.24922, -0.460867, 0.96", "1.94072, -9.23241, -0.53495, 1.18", "2.10453, -9.98383, -0.595723, 1.18", "2.35094, -10.9036, -0.67303, 0.96", "2.73684, -11.8888, -0.745404, 0.88", "3.13724, -12.655, -0.808046, 0.52", "3.53886, -13.2378, -0.895895, 0.22", "4.12848, -13.9223, -1.05401, 0.22", "4.43324, -14.2515, -1.16363, 0.44", "4.91253, -14.7779, -1.37927, 0.88", "5.41224, -15.3446, -1.63577, 0.29", "5.98341, -16.1031, -1.94872, 0.59", "6.35946, -16.7032, -2.16265, 0.22", "6.78875, -17.539, -2.38324, 0.22", "7.03302, -18.0396, -2.48693, 0.74", "7.25444, -18.4942, -2.55454, 1.25", "7.84943, -19.6815, -2.69529, 0.44", "8.08088, -20.1291, -2.7411, 0.44", "8.41878, -20.7361, -2.79766, 0.74", "8.98747, -21.6829, -2.86977, 0.29", "9.19351, -22.0419, -2.87683, 0.22", "9.36208, -22.3798, -2.86744, 0.29", "9.6681, -23.1829, -2.812, 0.29", "9.788, -23.658, -2.76654, 0.74", "9.9051, -24.465, -2.67424, 1.25", "10.009, -25.8969, -2.49315, 0.66", "10.0569, -26.6614, -2.38728, 0.44", "10.121, -27.5728, -2.24686, 0.29", "10.1935, -28.2524, -2.1311, 0.22", "10.3036, -29.0174, -2.00796, 0.22", "10.3975, -29.5748, -1.92208, 0.44", "10.5059, -30.1125, -1.84181, 0.81", "10.5891, -30.5006, -1.77043, 1.11", "10.7609, -31.4172, -1.56053, 1.11", "10.8979, -32.3694, -1.32162, 0.81", "11.0341, -33.899, -0.914637, 0.44", "11.0651, -34.6032, -0.725333, 0.22", "11.0729, -35.044, -0.617339, 0.22", "11.0979, -36.1744, -0.390023, 0.22", "11.1264, -36.8178, -0.294703, 0.37", "11.2115, -37.5773, -0.22428, 0.59", "11.3192, -38.0739, -0.211444, 0.66", "11.5457, -38.8517, -0.22215, 0.22", "11.7747, -39.5856, -0.227745, 0.15", "11.917, -40.0501, -0.231144, 0.29", "12.0799, -40.7049, -0.212818, 0.59", "12.2214, -41.4994, -0.166031, 0.15", "12.2823, -41.9837, -0.12858, 0.15", "12.3773, -43.0684, -0.0341785, 0.22", "12.4261, -43.6439, 0.0340792, 0.59", "12.5006, -44.4081, 0.12574, 0.59", "12.6017, -45.1943, 0.223213, 0.22", "12.7801, -46.4001, 0.35976, 0.22", "12.8514, -46.8179, 0.404547, 0.07", "13.007, -47.7559, 0.468639, 0.07", "13.0512, -48.1291, 0.486732, 0.22", "13.0907, -48.6827, 0.498688, 0.22", "13.1127, -49.5626, 0.492278, 0.59", "13.0984, -50.5436, 0.461869, 0.59", "13.0688, -51.5197, 0.393922, 0.81", "13.0611, -52.0804, 0.32545, 0.81", "13.1131, -53.5194, 0.1196, 0.15", "13.1913, -54.2819, -0.00565521, 0.15", "13.3154, -54.8935, -0.116726, 0.59", "13.5852, -55.6747, -0.289602, 0.15", "13.9171, -56.3028, -0.440721, 0.15", "14.1759, -56.6904, -0.533364, 0.15", "14.5417, -57.1449, -0.621978, 0.66", "14.8548, -57.4983, -0.664231, 0.81", "15.7273, -58.4621, -0.672198, 0.22", "16.3554, -59.1979, -0.573347, 0.29", "16.9054, -59.8911, -0.412383, 0.37", "17.2629, -60.3324, -0.273384, 0.81", "17.8398, -60.9942, 0.0165175, 1.03", "18.464, -61.6392, 0.391276, 0.22", "19.0647, -62.1901, 0.804313, 0.22", "19.5076, -62.5559, 1.08227, 0.22", "19.9606, -62.8796, 1.31842, 0.74", "20.495, -63.2057, 1.54257, 1.03", "21.3714, -63.6418, 1.83341, 0.96", "22.1561, -63.983, 2.00025, 0.22", "22.9269, -64.3211, 2.12526, 0.15", "23.2585, -64.4869, 2.17934, 0.22", "23.7558, -64.7924, 2.25883, 0.22", "24.2239, -65.1515, 2.35345, 0.22", "24.9257, -65.7966, 2.55408, 0.22", "25.5628, -66.418, 2.78298, 0.88", "25.9664, -66.8397, 2.96113, 0.81", "26.3708, -67.2991, 3.15686, 0.52", "26.9125, -67.9992, 3.43696, 0.15", "27.1855, -68.3818, 3.56625, 0.15", "27.6302, -69.0168, 3.75716, 0.44", "28.1067, -69.6814, 3.9174, 0.22", "28.3551, -70.0253, 3.98693, 0.66", "28.8858, -70.7063, 4.12573, 1.11", "29.7774, -71.8229, 4.33114, 0.22", "30.3512, -72.5805, 4.47588, 0.22", "30.6686, -73.029, 4.56778, 0.74", "31.0793, -73.6231, 4.70436, 0.66", "31.6428, -74.4753, 4.90425, 0.22", "31.9332, -74.9429, 5.01744, 0.29", "32.2521, -75.5563, 5.15637, 0.52", "32.8114, -76.8426, 5.43865, 0.15", "33.0478, -77.5814, 5.59774, 0.96", "33.2118, -78.4316, 5.77292, 0.07", "33.2453, -78.8571, 5.84784, 0.07", "33.2515, -79.6856, 5.98514, 0.22", "33.2174, -80.3394, 6.07879, 0.59", "33.0865, -81.3016, 6.17458, 0.66", "32.9288, -82.1805, 6.23064, 0.22", "32.6796, -83.423, 6.28244, 0.22", "32.5822, -83.8836, 6.28072, 0.22", "32.4216, -84.5774, 6.2474, 0.81", "32.1925, -85.3823, 6.20017, 0.66", "31.9227, -86.2005, 6.17731, 0.15", "31.6683, -86.8505, 6.17895, 0.15", "31.2394, -87.696, 6.22127, 0.15", "31.0076, -88.0834, 6.25399, 0.96", "30.2709, -89.2024, 6.37646, 0.15", "29.951, -89.6933, 6.42081, 0.15", "29.7585, -90.0002, 6.44069, 0.66", "28.8954, -91.426, 6.4996, 0.29", "28.306, -92.4157, 6.51657, 0.15", "27.9577, -93.0392, 6.48124, 0.22", "27.41, -94.1415, 6.33458, 0.07", "27.2161, -94.5919, 6.26957, 0.88", "27.0723, -95.0138, 6.22837, 0.88", "26.8045, -96.0191, 6.20886, 0.15", "26.59, -96.877, 6.25436, 0.22", "26.3445, -97.7536, 6.37562, 0.66", "26.0495, -98.7473, 6.60797, 0.15", "25.7635, -99.8291, 6.94876, 0.07", "25.5326, -100.877, 7.36519, 0.07", "25.4692, -101.235, 7.53116, 0.22", "25.3299, -102.068, 7.98553, 0.15", "25.2567, -102.65, 8.33982, 0.81", "25.1904, -103.819, 9.16013, 0.15", "25.2175, -104.428, 9.64373, 0.15", "25.2984, -104.904, 10.0717, 0.59", "25.4789, -105.668, 10.8118, 0.07", "25.6742, -106.336, 11.5021, 0.29", "26.0308, -107.46, 12.6954, 0.07", "26.2201, -108.012, 13.317, 0.29", "26.4867, -108.791, 14.1994, 0.15", "26.5767, -109.101, 14.5513, 0.22", "26.6966, -109.685, 15.153, 0.07", "26.7393, -110.009, 15.4553, 0.22", "26.8446, -110.959, 16.2538, 0.07", "26.8909, -111.297, 16.5197, 0.29", "27.0899, -112.409, 17.3213, 0.07", "27.3013, -113.312, 17.9308, 0.96", "27.5676, -114.282, 18.5517, 0.07", "27.6546, -114.575, 18.7365, 0.22", "27.8989, -115.4, 19.2577, 0.07", "28.1529, -116.205, 19.7858, 0.07", "28.3092, -116.674, 20.0937, 0.15", "28.6156, -117.551, 20.675, 0.07", "28.8064, -118.102, 21.047, 0.81", "29.2418, -119.39, 21.9345, 0.07", "29.5746, -120.36, 22.6165, 0.07", "29.7164, -120.748, 22.8947, 0.22", "30.0551, -121.587, 23.4727, 0.44", "30.4539, -122.438, 23.9869, 0.07", "30.8886, -123.26, 24.4423, 0.07", "31.1278, -123.661, 24.644, 0.29", "31.6365, -124.448, 25.0385, 0.07", "31.9877, -124.956, 25.29, 0.44", "32.8596, -126.141, 25.915, 0.15", "33.0309, -126.362, 26.0238, 0.15", "33.3689, -126.761, 26.2278, 0.29", "34.0351, -127.515, 26.6312, 0.07", "34.2365, -127.718, 26.7442, 0.44", "34.7717, -128.215, 27.0909, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.763546, 6.42183, -3.9, 0.96", "-0.763546, 6.42183, -3.9, 0.96", "-0.702946, 7.21416, -3.72446, 0.29", "-0.750696, 7.89672, -3.71459, 0.29", "-0.811396, 8.26543, -3.78591, 0.29", "-0.899486, 8.60813, -3.91005, 0.29", "-1.13349, 9.31916, -4.27289, 0.88", "-1.38313, 9.99076, -4.71325, 0.88", "-1.64608, 10.703, -5.23043, 0.29", "-1.88339, 11.4278, -5.72567, 0.66", "-2.04811, 12.0885, -6.10581, 0.66", "-2.20087, 13.0541, -6.55933, 0.29", "-2.25041, 14.0227, -6.926, 0.59", "-2.19077, 14.9257, -7.18588, 0.88", "-2.04701, 15.9843, -7.42806, 0.66", "-1.84372, 17.1467, -7.66398, 0.22", "-1.73615, 17.6301, -7.77458, 0.22", "-1.55228, 18.2621, -7.95915, 0.22", "-1.29458, 19.0297, -8.27884, 0.44", "-1.02715, 19.7267, -8.70186, 0.96", "-0.777316, 20.3051, -9.13822, 0.96", "-0.416533, 21.1231, -9.82231, 0.22", "-0.135186, 21.7334, -10.3204, 0.22", "-0.0222202, 21.9745, -10.505, 0.37", "0.250547, 22.5533, -10.9426, 0.52", "0.447703, 22.9909, -11.2733, 0.29", "0.695689, 23.6865, -11.8084, 0.22", "0.855345, 24.301, -12.2761, 0.37", "0.98059, 24.9133, -12.7113, 0.37", "1.10926, 25.5217, -13.1293, 0.52", "1.28806, 26.3061, -13.6887, 0.88", "1.46443, 26.9915, -14.1911, 0.88", "1.74048, 27.899, -14.8445, 0.29", "1.95537, 28.5284, -15.2909, 0.29", "2.20904, 29.184, -15.7399, 0.15", "2.5169, 29.9477, -16.2481, 0.22", "2.77579, 30.5827, -16.6702, 0.96", "3.16299, 31.5206, -17.3013, 0.22", "3.30389, 31.9049, -17.5548, 0.22", "3.4107, 32.2763, -17.7825, 0.15", "3.51964, 32.8412, -18.0653, 0.15", "3.55635, 33.1574, -18.1855, 0.15", "3.61473, 34.0806, -18.4769, 0.15", "3.65361, 34.7686, -18.6444, 0.66", "3.69058, 35.2559, -18.7413, 0.81", "3.74504, 36.2036, -18.9025, 0.15", "3.76137, 36.9119, -19.0072, 0.22", "3.71814, 37.5452, -19.1021, 0.66", "3.61128, 38.4124, -19.2195, 0.81", "3.54471, 38.9156, -19.2901, 0.52", "3.41135, 39.9733, -19.4393, 0.15", "3.28938, 40.6312, -19.5295, 0.22", "3.07638, 41.3843, -19.6664, 0.29", "2.08702, 50.2986, -22.9789, 0.29", "-0.400475, 59.3397, -24.7786, 0.29", "-3.3619, 68.3117, -26.2061, 0.29", "-6.03148, 77.3399, -27.8055, 0.29", "-8.88763, 86.3931, -28.8196, 0.29", "-10.6445, 95.3728, -31.5705, 0.29", "-11.0236, 104.825, -32.4985, 0.29", "-9.6346, 114.204, -31.7221, 0.29", "-7.59643, 123.488, -32.2985, 0.29", "-3.5022, 132.156, -32.355, 0.29", "1.47142, 140.367, -31.6157, 0.29", "6.36573, 148.611, -32.4751, 0.29", "12.203, 156.319, -32.7927, 0.29", "19.5512, 162.761, -32.9104, 0.29", "26.1066, 169.932, -32.6733, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.61792, 5.513, 0.0, 0.779143", "17.3185, 14.8989, 0.0, 0.779143", "29.0192, 24.2848, 0.0, 0.779143" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.39076, 11.5041, 22.4212, 0.15", "-1.74992, 12.757, 23.2363, 0.15", "-1.93229, 13.787, 23.9089, 0.15", "-2.14705, 14.9359, 24.612, 0.15", "-2.31887, 15.7266, 25.0641, 0.15", "-2.38137, 15.9915, 25.2042, 0.37", "-2.55001, 16.6805, 25.5402, 0.88", "-2.77092, 17.4541, 25.8132, 0.22", "-3.15039, 18.4509, 26.0909, 0.22", "-3.51467, 19.1963, 26.2939, 0.22", "-3.81474, 19.6865, 26.4138, 0.29", "-4.31796, 20.3963, 26.5734, 0.66", "-5.25711, 21.5796, 26.7982, 0.81", "-6.06825, 22.5475, 26.9989, 0.22", "-6.80734, 23.4269, 27.2199, 0.22", "-7.26569, 23.9554, 27.3688, 0.81", "-7.82075, 24.5855, 27.5579, 0.81", "-8.58842, 25.5018, 27.8558, 0.22", "-9.26001, 26.4145, 28.1665, 0.44", "-9.89405, 27.4186, 28.5264, 0.81", "-10.2161, 28.01, 28.758, 0.81", "-10.7144, 29.0009, 29.1833, 0.37", "-11.1311, 29.8736, 29.5675, 0.37", "-11.4195, 30.4817, 29.8124, 0.37", "-11.8801, 31.3769, 30.1332, 0.37", "-12.2775, 32.1078, 30.381, 0.59", "-12.7662, 33.0079, 30.6774, 0.74", "-13.2116, 33.8715, 30.9364, 0.88", "-13.7511, 34.9778, 31.2303, 0.22", "-14.2079, 35.9727, 31.4854, 0.22", "-14.5183, 36.7004, 31.6347, 0.22", "-14.9174, 37.7436, 31.8583, 0.44", "-15.441, 39.3173, 32.2546, 0.52", "-15.7844, 40.42, 32.5734, 0.74", "-16.1439, 41.6757, 32.9575, 0.37", "-16.5881, 43.3204, 33.4555, 0.22", "-16.8847, 44.3367, 33.7794, 0.22", "-17.2722, 45.4839, 34.1595, 0.81", "-17.6923, 46.5659, 34.5641, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.39076, 11.5041, 22.4212, 0.52", "0.0577928, 11.5773, 24.0166, 0.52", "1.25557, 12.0091, 25.3815, 0.52", "2.05296, 12.4323, 26.2454, 0.37", "2.60356, 12.8383, 26.8032, 0.22", "3.19954, 13.3111, 27.4066, 0.22", "4.03329, 13.9749, 28.215, 0.44", "5.00389, 14.9433, 29.1058, 0.44", "5.45248, 15.4269, 29.5036, 0.44", "6.30584, 16.4074, 30.2737, 0.22", "6.86011, 17.0247, 30.7846, 0.22", "7.24954, 17.4492, 31.1318, 0.22", "7.76214, 18.0458, 31.6322, 0.22", "8.09702, 18.5055, 31.9909, 0.22", "8.75208, 19.503, 32.7858, 0.88", "9.45075, 20.6046, 33.7342, 0.15", "9.87436, 21.2691, 34.3026, 0.37", "10.2679, 21.8481, 34.857, 0.15", "10.7116, 22.4392, 35.5126, 0.29", "11.2681, 23.0866, 36.3635, 0.15", "11.8665, 23.6793, 37.3025, 0.15", "12.3022, 24.0765, 37.9601, 0.66", "13.2845, 24.9517, 39.3836, 0.29", "13.9589, 25.5459, 40.3648, 0.29", "14.2846, 25.8581, 40.8638, 0.29", "14.6926, 26.3329, 41.5875, 0.29", "15.0323, 26.8174, 42.2762, 0.07", "15.3737, 27.379, 43.046, 0.59", "16.0623, 28.614, 44.6541, 0.22", "16.5655, 29.4984, 45.8529, 0.66", "17.3655, 30.8039, 47.7441, 0.15", "17.7379, 31.3607, 48.5732, 0.15", "18.0388, 31.753, 49.2027, 0.15", "18.4748, 32.2417, 50.0592, 0.59", "19.331, 33.0827, 51.609, 0.22", "19.9975, 33.6078, 52.7361, 0.81", "20.7293, 34.0584, 53.8961, 0.15", "21.6821, 34.5405, 55.4519, 0.37", "22.2931, 34.791, 56.4694, 0.37", "23.1487, 35.088, 57.9333, 0.22", "23.7448, 35.2951, 58.9752, 0.22", "24.4087, 35.5387, 60.1707, 0.59", "25.2387, 35.8643, 61.627, 0.22", "25.882, 36.1727, 62.6355, 0.74", "27.1828, 36.8969, 64.4122, 0.07", "28.0865, 37.4688, 65.5108, 0.07", "28.5909, 37.8405, 66.0314, 0.07", "29.2494, 38.3412, 66.588, 0.22", "30.3854, 39.1887, 67.3788, 0.07", "31.0774, 39.6994, 67.8006, 0.22", "32.4149, 40.6578, 68.5095, 0.07", "33.8539, 41.6565, 69.2212, 0.22", "35.5082, 42.7786, 70.0357, 0.07", "36.0257, 43.1542, 70.2803, 0.07", "36.9759, 43.9061, 70.7045, 0.07", "37.2383, 44.1281, 70.8097, 0.22", "38.1213, 44.9375, 71.107, 0.29", "39.5493, 46.4434, 71.5588, 0.07", "40.7186, 47.8432, 71.938, 0.07", "41.6392, 49.0139, 72.3274, 0.15", "42.122, 49.674, 72.6469, 0.29", "42.7313, 50.554, 73.2203, 0.29", "43.4777, 51.7038, 74.1544, 0.07", "44.1181, 52.7058, 75.1836, 0.22", "44.811, 53.6876, 76.4793, 0.22", "45.9751, 55.2412, 78.8044, 0.44", "46.401, 55.7971, 79.7282, 0.44", "46.8331, 56.3157, 80.7219, 0.15", "47.4656, 56.98, 82.2052, 0.15", "48.1013, 57.5904, 83.6447, 0.15", "48.432, 57.8604, 84.247, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "15.2321, 31.7918, 4.68432, 0.44", "15.6246, 33.0038, 3.55645, 0.44", "15.9315, 33.8803, 2.82558, 0.44", "16.3069, 35.0059, 2.01622, 0.44", "16.4542, 35.5229, 1.66778, 0.74", "16.599, 36.1729, 1.25621, 1.33", "16.7868, 37.4252, 0.518045, 0.66", "16.8065, 37.8999, 0.302512, 0.88", "16.7001, 38.8768, -0.0781635, 0.29", "16.5312, 39.5439, -0.310022, 0.29", "16.3235, 40.1863, -0.515038, 0.44", "16.0017, 41.0235, -0.745274, 0.52", "15.5035, 42.2359, -1.0068, 0.66", "15.2177, 42.9726, -1.15831, 0.22", "15.033, 43.5149, -1.26289, 0.22", "14.7817, 44.3344, -1.4453, 0.29", "14.599, 44.9165, -1.62343, 0.29", "14.3117, 45.7402, -1.95044, 0.66", "14.048, 46.3763, -2.26115, 0.81", "13.6427, 47.2225, -2.74687, 0.88", "12.9052, 48.5768, -3.58987, 0.59", "12.4403, 49.3303, -4.10539, 0.37", "12.1818, 49.7248, -4.40585, 0.22", "11.757, 50.3215, -4.90945, 0.22", "11.4142, 50.7862, -5.32328, 0.37", "10.9468, 51.3847, -5.88335, 0.37", "10.378, 52.1023, -6.55815, 0.66", "9.80942, 52.798, -7.21499, 1.11", "9.16643, 53.5299, -7.96576, 0.29", "8.72144, 53.9938, -8.53458, 0.29", "8.5427, 54.1757, -8.79756, 0.29", "8.28789, 54.4577, -9.23104, 0.29", "8.21402, 54.6285, -9.41328, 0.29", "8.21551, 54.9998, -9.62728, 0.29", "8.33682, 55.7079, -9.91238, 0.29", "8.54421, 56.6803, -10.2613, 0.29", "8.73043, 57.5325, -10.5481, 0.74", "8.97529, 58.8337, -10.9551, 1.25", "9.14342, 60.0838, -11.3146, 0.81", "9.23149, 61.3491, -11.6436, 0.29", "9.23981, 62.3012, -11.8642, 0.29", "9.22171, 63.2893, -12.0827, 0.52", "9.19839, 64.5404, -12.2948, 0.66", "9.15165, 65.7293, -12.428, 0.22", "9.06439, 66.5996, -12.4818, 0.22", "8.88541, 67.5711, -12.4886, 0.37", "8.62948, 68.6255, -12.4567, 0.96", "8.19147, 70.2128, -12.3705, 0.22", "8.01567, 70.8829, -12.3241, 0.37", "7.87399, 71.5113, -12.3019, 0.52", "7.65506, 72.4677, -12.3356, 0.22", "7.42124, 73.2879, -12.4255, 0.22", "7.25244, 73.7652, -12.5356, 0.81", "6.98275, 74.5588, -12.8178, 0.81", "6.72709, 75.5808, -13.1893, 0.22", "6.61138, 76.3664, -13.4688, 0.44", "6.5661, 76.7822, -13.612, 0.74", "6.42059, 77.6976, -13.9263, 0.22", "6.34111, 78.1125, -14.0655, 0.22", "6.20413, 78.8083, -14.2685, 0.29", "6.13759, 79.4514, -14.4182, 0.29", "6.13001, 80.1115, -14.5336, 0.22", "6.14676, 80.7927, -14.6394, 0.22", "6.14883, 81.6328, -14.7682, 0.59", "6.10782, 82.533, -14.9169, 0.88", "6.01078, 83.7863, -15.1855, 0.81", "5.90442, 85.1355, -15.5561, 0.37", "5.87846, 85.8208, -15.7599, 0.22", "5.88302, 86.6144, -16.0053, 0.22", "5.89312, 87.1832, -16.2156, 0.22", "5.9111, 88.0648, -16.6449, 0.22", "5.88268, 88.7702, -17.074, 0.22", "5.82034, 89.4044, -17.5179, 0.44", "5.7344, 90.0768, -17.9699, 0.88", "5.63747, 90.8136, -18.4019, 0.66", "5.44915, 91.8303, -18.8922, 0.22", "5.27387, 92.6273, -19.189, 0.15", "5.12599, 93.3614, -19.4152, 0.22", "4.92841, 94.2209, -19.6873, 0.29", "4.7517, 94.9529, -19.877, 0.74", "4.59494, 95.8675, -20.0131, 0.81", "4.56194, 96.3153, -20.03, 0.52", "4.61798, 97.262, -20.046, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.2321, 31.7918, 4.68432, 0.29", "15.3905, 31.8662, 4.64841, 0.29", "16.1072, 32.2958, 4.44572, 0.29", "16.56, 32.6502, 4.31805, 0.29", "17.0189, 33.0777, 4.1681, 0.29", "17.2395, 33.3109, 4.10834, 0.29", "17.7799, 33.9594, 3.94801, 0.59", "18.2744, 34.7015, 3.76747, 1.11", "18.8159, 35.7556, 3.53127, 0.74", "19.2331, 36.8302, 3.29401, 0.74", "19.5709, 38.0462, 3.08057, 0.74", "19.8116, 39.3342, 2.93199, 0.52", "19.9449, 40.5854, 2.91403, 0.74", "20.0146, 41.4927, 2.98327, 0.52", "20.0813, 42.1973, 3.10784, 0.88", "20.2673, 43.2863, 3.42464, 0.96", "20.5124, 44.0985, 3.74145, 0.52", "21.0759, 45.2687, 4.32183, 0.44", "21.4934, 45.9008, 4.65948, 0.44", "22.3051, 46.9762, 5.13126, 0.66", "22.8603, 47.629, 5.39436, 0.44", "23.4681, 48.2736, 5.59623, 0.74", "24.0681, 48.8778, 5.74214, 0.88", "24.6432, 49.4888, 5.82996, 1.03", "25.472, 50.6307, 5.96389, 1.18" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "19.5588, -12.0477, -11.867, 0.59", "21.0364, -12.4053, -11.7573, 0.59", "22.0237, -12.2232, -12.0631, 0.59", "22.7977, -11.8409, -12.5395, 0.44", "23.4347, -11.452, -13.0525, 0.44", "24.4113, -10.7896, -13.8262, 0.81", "25.2629, -10.2121, -14.4664, 0.81", "26.0497, -9.59549, -15.0833, 1.11", "26.9161, -8.92481, -15.7131, 0.88", "27.6232, -8.43342, -16.1588, 1.03", "28.7617, -7.81898, -16.6811, 0.37", "29.2298, -7.62917, -16.7878, 0.37", "30.0623, -7.41231, -16.7883, 0.74", "31.1391, -7.3197, -16.55, 1.03", "32.3818, -7.38282, -16.0111, 1.25", "32.788, -7.44822, -15.772, 1.4" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.5588, -12.0477, -11.867, 0.29", "19.2439, -13.1728, -11.1163, 0.29", "18.9424, -13.9207, -10.6375, 0.22", "18.7139, -14.233, -10.4147, 0.22", "18.2374, -14.6869, -10.0223, 0.22", "17.9213, -14.978, -9.75068, 0.22", "17.7396, -15.1684, -9.57373, 0.22", "17.2212, -15.7852, -9.00648, 0.96", "16.6219, -16.6388, -8.29114, 0.59", "16.2442, -17.3451, -7.70066, 0.22", "15.972, -18.0076, -7.16246, 0.22", "15.7679, -18.7812, -6.53486, 0.22", "15.707, -19.4249, -6.02095, 1.03", "15.7598, -20.0467, -5.52528, 1.03", "15.9553, -21.0586, -4.75807, 0.15", "16.032, -21.4359, -4.47809, 0.74", "16.1272, -22.1179, -3.95597, 0.37", "16.1626, -22.7186, -3.49096, 0.44", "16.1587, -23.6263, -2.8071, 0.22", "16.1407, -24.0309, -2.51593, 0.29", "16.0885, -24.9104, -1.91688, 0.22", "16.0609, -25.6839, -1.38649, 0.74", "16.0633, -26.1089, -1.09936, 0.74", "16.0921, -27.2893, -0.281322, 0.37", "16.1284, -28.1756, 0.342283, 0.22", "16.1684, -28.8658, 0.835446, 0.15", "16.2364, -29.5541, 1.3244, 0.74", "16.3515, -30.5351, 2.02215, 0.22", "16.4129, -31.2527, 2.5243, 0.74", "16.4307, -31.843, 2.91531, 0.88", "16.3585, -32.9256, 3.52421, 0.22", "16.2193, -33.741, 3.89846, 0.22", "16.0882, -34.2253, 4.07679, 0.29", "15.8143, -35.0408, 4.31924, 0.81", "15.602, -35.6813, 4.47144, 0.44", "15.2457, -36.8517, 4.68034, 0.52", "15.016, -37.7118, 4.78036, 0.22", "14.7672, -38.711, 4.849, 0.74", "14.6194, -39.4282, 4.87501, 0.15", "14.5185, -40.0267, 4.88774, 0.15", "14.3854, -40.7833, 4.9287, 0.15", "14.2992, -41.2779, 4.99963, 0.81", "14.1822, -41.8544, 5.12025, 0.52", "13.928, -43.0521, 5.43939, 0.15", "13.8011, -43.6211, 5.6133, 0.37", "13.5974, -44.6831, 5.97049, 0.22", "13.4348, -45.8062, 6.37455, 0.37", "13.3746, -46.4711, 6.60841, 0.22", "13.3638, -47.2828, 6.87298, 0.74", "13.4048, -47.9666, 7.09705, 0.29", "13.5545, -49.2424, 7.49519, 0.07", "13.6395, -49.7166, 7.63243, 0.29", "13.7867, -50.4556, 7.85362, 0.07", "13.9345, -51.2584, 8.09461, 0.22", "14.1062, -52.3517, 8.40172, 0.22", "14.2102, -53.1241, 8.5777, 0.96", "14.3547, -54.4808, 8.77982, 0.22", "14.4544, -55.5741, 8.86285, 0.15", "14.5207, -56.2911, 8.86428, 0.29", "14.6275, -57.3735, 8.78574, 0.66", "14.7894, -58.8572, 8.5459, 0.22", "14.878, -59.7705, 8.35063, 0.15", "14.9542, -60.7291, 8.11932, 0.15", "14.9864, -61.45, 7.95073, 0.74", "14.9923, -62.2545, 7.79549, 0.88", "14.9685, -63.1612, 7.67881, 0.15", "14.9255, -63.8438, 7.63696, 0.22", "14.8359, -64.7244, 7.64507, 0.07", "14.6432, -65.86, 7.70348, 0.22", "14.4339, -66.7356, 7.79269, 0.15", "14.2695, -67.3218, 7.87232, 0.15", "14.1177, -67.8324, 7.95459, 0.15", "13.9537, -68.4728, 8.06668, 0.88", "13.8475, -68.957, 8.15085, 0.88", "13.5772, -70.3165, 8.38419, 0.07", "13.4216, -71.009, 8.505, 0.74", "13.25, -71.7602, 8.62803, 0.22", "13.0213, -72.8504, 8.82163, 0.15", "12.8989, -73.5356, 8.95329, 0.29", "12.7786, -74.3347, 9.12091, 0.81", "12.6375, -75.3023, 9.33294, 0.22", "12.4885, -76.2489, 9.54475, 0.15", "12.3908, -76.8084, 9.66663, 0.15", "12.2495, -77.4974, 9.78677, 0.74", "11.9771, -78.7736, 9.91009, 0.15", "11.8591, -79.3155, 9.92093, 0.15", "11.6902, -79.918, 9.88192, 0.88", "11.4972, -80.4872, 9.81336, 0.96", "11.1165, -81.5171, 9.65521, 0.22", "10.629, -82.8445, 9.40403, 0.15", "10.3008, -83.7753, 9.18964, 0.29", "9.8773, -85.0838, 8.87642, 0.15", "9.72737, -85.5887, 8.75841, 0.66", "9.51143, -86.3422, 8.58883, 0.74", "9.16792, -87.4795, 8.35915, 0.15", "8.94783, -88.1832, 8.23001, 0.15", "8.76592, -88.844, 8.10377, 0.66", "8.54506, -89.9384, 7.90594, 0.15", "8.50635, -90.1892, 7.85919, 0.15", "8.41853, -90.9808, 7.72756, 0.29", "8.34086, -91.901, 7.58629, 0.15", "8.26402, -92.8804, 7.43782, 0.59", "8.19613, -93.751, 7.2954, 0.22", "8.13828, -94.4722, 7.1756, 0.22", "8.09663, -95.0761, 7.12016, 0.07", "8.06134, -95.8624, 7.10718, 0.07", "8.01079, -96.5581, 7.15119, 0.15", "7.94275, -97.2078, 7.259, 0.81", "7.86847, -97.8112, 7.41145, 0.22", "7.72446, -99.0055, 7.77533, 0.22", "7.61172, -99.8921, 8.07684, 0.59", "7.51794, -100.553, 8.32617, 0.59", "7.34766, -101.65, 8.77095, 0.88", "7.16157, -102.708, 9.23492, 0.07", "7.02261, -103.411, 9.54931, 0.15", "6.85608, -104.138, 9.86617, 0.59", "6.73489, -104.643, 10.1071, 0.74", "6.47794, -105.67, 10.6243, 0.22", "6.23306, -106.494, 11.0685, 0.22", "5.96551, -107.287, 11.5377, 0.96", "5.4613, -108.587, 12.3439, 0.15", "5.18074, -109.239, 12.7527, 0.15", "4.87158, -109.858, 13.1527, 0.88", "4.25035, -110.861, 13.8072, 0.15", "3.84219, -111.421, 14.1793, 0.15", "3.43341, -111.911, 14.5084, 0.74", "3.01091, -112.37, 14.8091, 0.74", "2.53535, -112.916, 15.1585, 0.15", "2.06576, -113.498, 15.5211, 0.29", "1.77212, -113.901, 15.7515, 0.29", "1.23952, -114.689, 16.1815, 0.15", "0.779737, -115.425, 16.5838, 0.74", "-0.0176888, -116.769, 17.3005, 0.22", "-0.356511, -117.351, 17.6012, 0.22", "-0.796906, -118.1, 17.9954, 0.44", "-1.052, -118.507, 18.2102, 0.96", "-1.78632, -119.633, 18.7719, 0.07", "-1.99564, -119.942, 18.9006, 0.07", "-2.3528, -120.436, 19.0759, 0.88", "-2.96697, -121.258, 19.3418, 0.15", "-3.43738, -121.853, 19.4958, 0.52", "-4.13234, -122.679, 19.6308, 0.07", "-4.82014, -123.44, 19.662, 0.07", "-5.3781, -124.028, 19.6448, 0.66", "-5.8551, -124.522, 19.597, 0.22", "-6.55495, -125.214, 19.4883, 0.22", "-7.24342, -125.86, 19.4209, 0.44", "-7.82117, -126.381, 19.4157, 0.15", "-8.45415, -126.933, 19.4655, 0.15", "-9.03952, -127.448, 19.5473, 0.81", "-9.68615, -128.051, 19.7137, 0.22", "-10.5215, -128.922, 20.064, 0.22", "-11.1443, -129.665, 20.4214, 0.22", "-11.511, -130.165, 20.6925, 0.15", "-11.7591, -130.551, 20.9099, 0.59", "-12.0881, -131.071, 21.2023, 0.15", "-12.4061, -131.584, 21.4664, 0.15", "-12.7034, -132.028, 21.6489, 0.74", "-13.2465, -132.761, 21.9307, 0.22", "-13.5224, -133.107, 22.0628, 0.22", "-14.0585, -133.686, 22.2758, 0.22", "-14.413, -134.03, 22.4088, 0.22", "-14.9487, -134.534, 22.6082, 0.52", "-15.6906, -135.233, 22.8901, 0.15", "-16.2267, -135.728, 23.0865, 0.15", "-16.7775, -136.208, 23.2831, 0.81", "-17.8775, -137.152, 23.6656, 0.07", "-18.1957, -137.415, 23.7672, 0.52", "-19.0956, -138.137, 24.01, 0.15", "-19.597, -138.53, 24.1122, 0.59", "-20.2153, -139.032, 24.2124, 0.15", "-20.7991, -139.521, 24.2604, 0.81", "-21.2717, -139.929, 24.2569, 0.29", "-22.2707, -140.802, 24.2095, 0.07", "-22.7973, -141.289, 24.1702, 0.44", "-23.4941, -141.978, 24.109, 0.15", "-24.059, -142.574, 24.0731, 0.52", "-24.574, -143.12, 24.0544, 0.81", "-25.6273, -144.201, 24.0968, 0.07", "-26.2319, -144.783, 24.1886, 0.07", "-26.6499, -145.162, 24.291, 0.59", "-27.4538, -145.831, 24.548, 0.15", "-28.033, -146.287, 24.7818, 0.74", "-29.1515, -147.15, 25.3148, 0.07", "-30.0471, -147.859, 25.7971, 0.22", "-30.3023, -148.061, 25.9336, 0.22", "-30.692, -148.397, 26.1394, 0.44", "-30.9426, -148.641, 26.2589, 0.44", "-31.6013, -149.412, 26.5691, 0.22", "-32.1626, -150.163, 26.8071, 0.88", "-32.5782, -150.745, 26.9659, 0.66", "-33.1566, -151.525, 27.1764, 0.15", "-33.8707, -152.427, 27.4177, 0.15", "-34.3663, -152.964, 27.568, 0.59", "-34.952, -153.472, 27.724, 0.07", "-35.2526, -153.678, 27.8013, 0.15", "-35.8325, -153.969, 27.9399, 0.07", "-36.3262, -154.162, 28.0272, 0.22", "-37.1455, -154.445, 28.1573, 0.07", "-37.9098, -154.668, 28.2864, 0.07", "-38.2699, -154.771, 28.331, 0.37", "-39.4122, -155.11, 28.4362, 0.15", "-40.1751, -155.358, 28.4784, 0.59", "-41.4196, -155.784, 28.5157, 0.07", "-42.7794, -156.282, 28.5587, 0.07", "-43.9438, -156.733, 28.6087, 0.07", "-44.4752, -156.942, 28.6345, 0.66", "-45.8272, -157.488, 28.6806, 0.07", "-46.5674, -157.81, 28.718, 0.52", "-47.3339, -158.199, 28.7431, 0.07", "-47.929, -158.543, 28.7451, 0.22", "-48.883, -159.1, 28.7365, 0.07", "-49.4806, -159.458, 28.6753, 0.29", "-50.2455, -159.953, 28.5176, 0.07", "-50.7628, -160.334, 28.359, 0.59", "-51.7449, -161.143, 27.9506, 0.15", "-52.3389, -161.694, 27.6383, 0.66", "-52.8734, -162.227, 27.2742, 0.07", "-53.105, -162.456, 27.0889, 0.07", "-53.5106, -162.882, 26.6553, 0.07", "-53.6969, -163.114, 26.4047, 0.22", "-53.9929, -163.556, 25.8998, 0.22", "-54.3921, -164.149, 25.1765, 0.15", "-54.7523, -164.637, 24.5272, 0.81", "-55.336, -165.369, 23.4976, 0.07", "-55.6118, -165.712, 22.9745, 0.15", "-55.9413, -166.146, 22.2622, 0.29", "-56.4227, -166.887, 21.0563, 0.15", "-56.5952, -167.193, 20.5411, 0.15", "-56.7893, -167.541, 19.9056, 0.74", "-57.1188, -168.049, 18.7515, 0.37", "-57.4553, -168.56, 17.3788, 0.81", "-57.6573, -168.897, 16.3502, 0.59", "-57.8426, -169.235, 15.132, 0.59", "-57.939, -169.386, 14.5108, 0.59", "-58.2822, -169.734, 12.4496, 0.44", "-58.379, -169.781, 11.9367, 0.44", "-58.4841, -169.806, 11.3896, 0.44", "-58.6009, -169.801, 10.7846, 0.44", "-58.8684, -169.756, 9.48411, 0.66", "-59.2167, -169.689, 7.87854, 0.07", "-59.3847, -169.655, 7.28074, 0.15" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.4272, -1.79329, 2.36554, 0.37", "-13.7648, -0.776878, 1.36943, 0.37", "-13.9162, -0.34206, 0.97637, 0.37", "-14.2124, 0.253642, 0.447752, 0.44", "-14.4347, 0.606909, 0.124018, 0.44", "-14.6298, 0.85339, -0.127447, 0.44", "-14.9848, 1.23875, -0.536695, 0.59", "-15.5391, 1.81713, -1.13233, 1.03", "-16.2039, 2.44645, -1.70303, 0.74", "-16.7327, 2.95114, -2.05845, 0.74", "-17.4986, 3.7341, -2.48053, 1.03", "-17.8386, 4.10425, -2.63089, 1.25", "-18.4871, 4.91174, -2.82761, 0.37", "-18.9039, 5.53687, -2.88803, 0.74", "-19.391, 6.41958, -2.88448, 0.37", "-19.6559, 6.9929, -2.84966, 0.37", "-19.8367, 7.46148, -2.8081, 0.74", "-20.1573, 8.48456, -2.72375, 0.66", "-20.431, 9.46105, -2.63032, 0.52", "-20.5778, 10.0416, -2.56714, 0.52", "-20.8571, 11.3551, -2.41392, 0.66", "-20.9889, 12.2572, -2.31917, 1.25", "-21.0881, 13.8178, -2.21319, 1.33", "-21.0678, 14.8087, -2.1908, 1.03", "-20.9768, 15.8299, -2.23476, 0.66", "-20.8399, 16.9592, -2.37297, 0.29", "-20.7157, 17.9028, -2.59704, 0.15", "-20.6254, 18.879, -2.92671, 0.52", "-20.6101, 19.3182, -3.11495, 0.52", "-20.6344, 19.8897, -3.37039, 0.74", "-20.8048, 21.1088, -3.84987, 0.37", "-20.9808, 21.9822, -4.12981, 0.59", "-21.2374, 23.0163, -4.39696, 0.29", "-21.3899, 23.5156, -4.50466, 0.74", "-21.7688, 24.5658, -4.732, 1.03", "-22.1666, 25.5477, -4.96427, 0.74", "-22.5253, 26.3638, -5.20877, 0.22", "-22.7449, 26.864, -5.38459, 0.22", "-23.0808, 27.6561, -5.70616, 0.22", "-23.4086, 28.5469, -6.09985, 0.22", "-23.6134, 29.2696, -6.45586, 0.29", "-23.7318, 30.0297, -6.86045, 0.59", "-23.7036, 30.7465, -7.23661, 1.18", "-23.6419, 31.0536, -7.39231, 1.18", "-23.4185, 31.818, -7.77287, 0.52", "-23.24, 32.4018, -8.04315, 0.52", "-23.0596, 33.0823, -8.33639, 0.52", "-22.8789, 34.157, -8.77807, 0.22", "-22.8678, 34.4906, -8.90473, 0.22", "-22.9495, 35.2666, -9.1561, 0.22", "-23.1079, 36.073, -9.36017, 0.59", "-23.1767, 36.3673, -9.40359, 0.59", "-23.4424, 37.4309, -9.47104, 1.03", "-23.6744, 38.34, -9.49283, 1.47", "-23.9656, 39.5766, -9.53639, 0.22", "-24.2064, 40.5748, -9.60362, 0.37", "-24.488, 41.6257, -9.72172, 0.37", "-24.7965, 42.5861, -9.89421, 0.52", "-25.0785, 43.3177, -10.0862, 0.29", "-25.4292, 44.1395, -10.3974, 0.59", "-25.8213, 44.98, -10.7851, 0.44", "-26.1022, 45.5323, -11.0653, 0.29", "-26.5348, 46.3477, -11.4994, 0.52", "-26.799, 46.877, -11.7615, 0.88", "-27.0685, 47.5008, -12.019, 1.03", "-27.5473, 48.8079, -12.4501, 1.33", "-27.921, 49.8989, -12.7332, 0.29", "-28.0284, 50.171, -12.79, 0.29", "-28.2386, 50.623, -12.8725, 0.29", "-28.453, 50.9785, -12.9482, 0.29", "-28.8428, 51.5036, -13.1003, 0.29", "-29.4857, 52.2386, -13.3828, 0.37", "-30.1952, 52.9912, -13.7017, 0.81", "-30.8964, 53.723, -14.0371, 1.18", "-31.9614, 54.8313, -14.5678, 0.88", "-32.5287, 55.4358, -14.875, 0.59", "-33.1386, 56.1199, -15.2364, 0.37", "-33.3978, 56.4357, -15.4333, 0.29", "-33.7667, 56.8969, -15.7335, 0.29", "-34.099, 57.2952, -15.9745, 0.29", "-34.3951, 57.6752, -16.1582, 0.29", "-34.9127, 58.3389, -16.4074, 0.66", "-35.6299, 59.2579, -16.6838, 1.47", "-36.8966, 60.8112, -17.1425, 0.52", "-37.6718, 61.7205, -17.3997, 0.37", "-38.5218, 62.6905, -17.6592, 0.37", "-39.0391, 63.3013, -17.7975, 0.88", "-39.6179, 64.0471, -17.9283, 1.47" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.4272, -1.79329, 2.36554, 0.81", "-13.5417, -2.44119, 1.99642, 0.81", "-13.6632, -2.70214, 1.85716, 0.81", "-14.2823, -3.56221, 1.50955, 0.22", "-14.6447, -3.95885, 1.41282, 0.22", "-15.1448, -4.43955, 1.35326, 0.44", "-15.7488, -4.97003, 1.32763, 0.88", "-16.6755, -5.65741, 1.34318, 0.44", "-17.5998, -6.23043, 1.3791, 0.59", "-18.5481, -6.70227, 1.41552, 0.52", "-19.6052, -7.16584, 1.44969, 0.22", "-20.7424, -7.59923, 1.4893, 0.22", "-21.3288, -7.78103, 1.52625, 0.66", "-22.2733, -7.99556, 1.62316, 0.96", "-23.3066, -8.17445, 1.75789, 1.11", "-23.6617, -8.22413, 1.81879, 0.96", "-24.7272, -8.33602, 2.07433, 0.22", "-26.1469, -8.48545, 2.52225, 0.66", "-26.8371, -8.59419, 2.77429, 0.15", "-27.2331, -8.67137, 2.94713, 0.15", "-27.9941, -8.84167, 3.31964, 0.52", "-28.6717, -8.99671, 3.63785, 0.22", "-29.4442, -9.20666, 3.93894, 0.66", "-30.2133, -9.46925, 4.12356, 1.03" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.0192, 24.2848, 0.0, 0.15", "40.7198, 33.6708, 0.0, 0.15", "52.4204, 43.0567, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-17.6923, 46.5659, 34.5641, 0.29", "-18.3478, 47.419, 34.7742, 0.29", "-18.7732, 48.0285, 34.9656, 0.29", "-19.2233, 48.7544, 35.2683, 0.29", "-19.6505, 49.559, 35.6648, 0.22", "-20.0513, 50.4589, 36.1138, 0.22", "-20.4139, 51.3235, 36.5449, 0.22", "-20.8379, 52.5137, 37.1913, 0.22", "-21.1054, 53.3982, 37.6652, 0.52", "-21.3563, 54.3456, 38.1638, 0.81", "-21.5674, 55.1938, 38.6387, 0.44", "-21.8759, 56.4596, 39.3963, 0.22", "-22.0382, 57.1398, 39.7861, 0.22", "-22.24, 57.9048, 40.1517, 0.29", "-22.4637, 58.7035, 40.4956, 0.29", "-22.726, 59.4622, 40.8043, 0.29", "-22.9352, 59.9832, 41.0065, 0.66", "-23.3124, 60.8654, 41.2839, 0.66", "-23.5905, 61.492, 41.4273, 0.37", "-24.0247, 62.5021, 41.6036, 0.15", "-24.523, 63.7662, 41.7492, 0.15", "-24.7502, 64.3899, 41.7978, 1.11", "-25.2057, 65.7353, 41.8802, 0.59", "-25.7227, 67.4353, 41.96, 0.22", "-25.9147, 68.1826, 41.9821, 0.37", "-26.2076, 69.5687, 41.9935, 0.22", "-26.342, 70.4073, 41.9982, 0.74", "-26.4373, 71.0439, 41.9953, 0.74", "-26.6104, 72.238, 42.0042, 0.22", "-26.7542, 73.2172, 41.9866, 0.22", "-26.9493, 74.515, 41.9075, 0.22", "-27.1646, 75.7586, 41.7895, 0.29", "-27.365, 76.8407, 41.6637, 0.29", "-27.647, 78.3097, 41.47, 0.44", "-27.906, 79.6564, 41.272, 0.22", "-28.1538, 80.9582, 41.0654, 0.15", "-28.3375, 81.9766, 40.9214, 0.15", "-28.5746, 83.2179, 40.8157, 0.15", "-28.7435, 84.0473, 40.7771, 0.52", "-28.945, 84.8909, 40.7654, 0.74", "-29.0075, 85.1048, 40.7779, 0.74", "-29.3387, 86.059, 40.8606, 0.22", "-29.8398, 87.2896, 40.9588, 0.37", "-30.5196, 88.6765, 41.0545, 0.22", "-30.9217, 89.4251, 41.0887, 0.22", "-31.4124, 90.3031, 41.1059, 0.29", "-31.9148, 91.1895, 41.1262, 0.15", "-32.2521, 91.7684, 41.1326, 0.74", "-32.5092, 92.2206, 41.1491, 0.22", "-33.2035, 93.5081, 41.34, 0.15", "-33.4958, 94.1065, 41.4633, 0.15", "-33.9193, 95.0197, 41.6897, 0.37", "-34.2104, 95.6664, 41.8638, 0.37", "-34.7239, 96.7915, 42.1782, 0.15", "-35.3301, 97.9815, 42.5061, 0.66", "-35.6792, 98.5618, 42.6571, 0.15", "-36.0735, 99.1415, 42.7708, 0.15", "-36.7322, 100.054, 42.8796, 0.07", "-36.9741, 100.392, 42.9084, 0.15", "-37.4502, 101.073, 42.9407, 0.15", "-38.0342, 101.979, 42.9431, 0.37", "-38.8825, 103.464, 42.9432, 0.15", "-39.2286, 104.184, 42.9774, 0.29", "-39.736, 105.484, 43.0862, 0.07", "-39.899, 106.02, 43.1477, 0.37", "-40.0351, 106.635, 43.2191, 0.15", "-40.156, 107.405, 43.2994, 0.37", "-40.3544, 109.082, 43.453, 0.15", "-40.4264, 109.701, 43.4971, 0.29", "-40.484, 110.286, 43.5227, 0.29", "-40.5838, 111.648, 43.6039, 0.15", "-40.6281, 112.7, 43.6756, 0.15", "-40.6211, 113.197, 43.7092, 0.37", "-40.5644, 113.836, 43.7249, 0.37", "-40.4548, 114.783, 43.7319, 0.07", "-40.2615, 116.013, 43.7285, 0.29", "-40.1019, 116.781, 43.7289, 0.07", "-39.9124, 117.579, 43.7366, 0.15", "-39.5729, 118.937, 43.7631, 0.07", "-39.4017, 119.628, 43.7782, 0.22", "-39.2414, 120.241, 43.7928, 0.66", "-39.1355, 120.623, 43.8162, 0.66", "-38.5801, 122.45, 44.0622, 0.07", "-38.1881, 123.69, 44.2931, 0.07", "-37.9762, 124.35, 44.4483, 0.66", "-37.5539, 125.717, 44.7901, 0.22", "-37.2459, 126.854, 45.0703, 0.81", "-37.0643, 127.7, 45.2668, 0.59", "-36.8479, 129.644, 45.6538, 0.07", "-36.8469, 130.096, 45.7352, 0.07", "-36.9336, 130.867, 45.845, 0.22", "-37.1219, 131.692, 45.9275, 0.07", "-37.3388, 132.416, 45.9856, 0.22", "-37.8902, 133.966, 46.1187, 0.15", "-38.2389, 134.869, 46.2127, 0.74", "-38.8455, 136.513, 46.3885, 0.15", "-39.0985, 137.228, 46.4661, 0.29", "-39.6548, 138.864, 46.6457, 0.07", "-39.7804, 139.259, 46.6881, 0.22", "-40.0713, 140.21, 46.8135, 0.22", "-40.3297, 141.088, 46.9617, 0.44", "-40.594, 142.105, 47.2171, 1.03", "-40.7955, 142.958, 47.5013, 0.44", "-41.045, 144.068, 47.896, 0.44", "-41.3795, 145.607, 48.4999, 0.15", "-41.5671, 146.479, 48.8934, 0.52", "-41.8629, 147.926, 49.665, 0.15", "-42.0231, 148.829, 50.2422, 0.66" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-17.6923, 46.5659, 34.5641, 0.15", "-17.4011, 47.4408, 34.9771, 0.15", "-17.1951, 47.9858, 35.2956, 0.15", "-16.8765, 48.7632, 35.7841, 0.22", "-16.7102, 49.1852, 36.0085, 0.22", "-16.4701, 49.8792, 36.3259, 0.22", "-16.3248, 50.3511, 36.5426, 0.22", "-16.0975, 51.2618, 37.0061, 0.22", "-15.9422, 52.1175, 37.4593, 0.22", "-15.8428, 53.0663, 37.9191, 0.22", "-15.797, 53.9337, 38.3112, 0.59", "-15.7951, 55.3393, 38.8799, 0.07", "-15.8467, 56.4174, 39.2299, 0.15", "-15.9331, 57.1636, 39.4434, 0.15", "-16.1615, 58.6033, 39.8798, 0.29", "-16.3503, 59.6099, 40.2171, 0.07", "-16.5214, 60.42, 40.484, 0.59", "-16.8512, 61.635, 40.8433, 0.07", "-17.1953, 62.6929, 41.1443, 0.22", "-17.4836, 63.5148, 41.4082, 0.22", "-17.7119, 64.1539, 41.6693, 0.37", "-18.013, 65.0216, 42.0927, 0.29", "-18.3609, 66.0872, 42.6713, 0.29", "-18.6196, 66.9345, 43.1812, 0.22", "-18.8099, 67.7888, 43.6638, 0.59", "-18.9998, 68.9665, 44.301, 0.37", "-19.0636, 69.6131, 44.6444, 0.37", "-19.079, 70.0947, 44.8924, 0.44", "-19.0511, 70.7016, 45.1893, 0.44", "-18.8727, 72.7738, 46.1775, 0.15", "-18.7471, 73.8853, 46.6786, 0.15", "-18.6659, 74.3763, 46.8913, 0.15", "-18.5148, 75.0396, 47.1839, 0.29", "-18.2467, 75.9289, 47.5909, 0.15", "-17.8493, 76.9292, 48.0736, 0.52", "-17.5839, 77.47, 48.3597, 0.52", "-17.0445, 78.5105, 48.9289, 0.15", "-16.7279, 79.1925, 49.3054, 0.15", "-16.4845, 79.7812, 49.6304, 0.44", "-16.1146, 80.7866, 50.1771, 0.44", "-15.6382, 82.2603, 50.9744, 0.29", "-15.3958, 83.1274, 51.4966, 0.44", "-15.0107, 84.6205, 52.5659, 0.15", "-14.806, 85.4193, 53.2275, 0.15", "-14.6782, 85.9101, 53.7085, 0.37", "-14.3743, 87.0213, 55.0269, 0.15", "-14.0969, 87.8627, 56.2104, 0.15", "-13.7199, 88.7476, 57.7338, 0.66", "-13.5237, 89.1414, 58.5402, 0.88", "-13.1223, 89.9419, 60.3137, 0.15", "-12.8723, 90.606, 61.7039, 0.15", "-12.7403, 91.1606, 62.7647, 0.29", "-12.6704, 92.2797, 64.5677, 0.29", "-12.6926, 93.25, 66.0384, 0.29", "-12.7232, 93.5314, 66.4443, 0.29", "-13.0428, 94.8922, 68.1544, 0.07", "-13.2052, 95.3365, 68.5938, 0.15", "-13.7687, 96.4168, 69.4095, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "4.61798, 97.262, -20.046, 0.74", "4.43412, 97.8812, -20.5518, 0.74", "4.39778, 98.4696, -21.0991, 0.22", "4.44504, 99.1242, -21.7737, 0.22", "4.47335, 99.5104, -22.1777, 0.22", "4.49961, 100.057, -22.7532, 0.22", "4.48704, 100.619, -23.3324, 0.59", "4.39301, 101.277, -24.0164, 0.22", "4.22569, 101.868, -24.5488, 0.22", "4.02374, 102.315, -24.8277, 0.22", "3.77104, 102.761, -24.9958, 0.59", "3.36383, 103.362, -25.1095, 0.88", "2.35919, 104.628, -25.288, 0.22", "1.81612, 105.261, -25.3742, 0.22", "1.27095, 105.913, -25.4899, 0.96", "0.623866, 106.754, -25.7205, 0.15", "0.150922, 107.422, -25.9825, 0.15", "-0.476051, 108.384, -26.5545, 0.15", "-0.885726, 108.993, -27.072, 0.37", "-1.32842, 109.564, -27.7056, 0.81", "-1.68225, 109.998, -28.2739, 0.81", "-1.9055, 110.292, -28.7177, 0.22", "-2.10606, 110.745, -29.4203, 0.22", "-2.13377, 111.231, -30.0513, 0.22", "-2.09168, 111.535, -30.3942, 0.22", "-2.03564, 111.892, -30.7665, 0.59", "-1.94338, 112.614, -31.4344, 0.37", "-1.8098, 113.625, -32.3425, 0.81", "-1.72603, 114.419, -33.0327, 0.22", "-1.69968, 115.096, -33.631, 0.22", "-1.78405, 115.815, -34.2933, 0.22", "-1.9828, 116.523, -34.9587, 1.03", "-2.34557, 117.403, -35.7713, 0.22", "-2.55033, 117.87, -36.2204, 0.22", "-2.74326, 118.329, -36.6892, 0.37", "-3.00783, 119.073, -37.4577, 0.15", "-3.20725, 119.73, -38.122, 1.03", "-3.4131, 120.508, -38.8961, 0.15", "-3.66208, 121.607, -39.8883, 0.15", "-3.74461, 122.148, -40.3679, 0.22", "-3.78244, 122.564, -40.7321, 0.22", "-3.8205, 123.023, -41.1398, 0.81", "-3.86827, 123.603, -41.6556, 1.25", "-3.9452, 124.337, -42.2908, 0.15", "-4.06358, 125.152, -42.9622, 0.29", "-4.13389, 125.864, -43.5536, 0.07", "-4.18228, 126.446, -44.0639, 0.22", "-8.37284, 133.044, -49.9116, 0.22", "-12.9995, 137.77, -57.2495, 0.22", "-19.9477, 141.738, -63.1041, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.61798, 97.262, -20.046, 0.15", "5.76865, 96.8152, -19.8311, 0.15", "6.22672, 96.6325, -19.7428, 0.15", "6.72254, 96.4841, -19.7303, 0.29", "7.02665, 96.4121, -19.7858, 0.29", "8.18752, 96.2004, -20.1943, 0.15", "8.74043, 96.1222, -20.4744, 0.37", "9.00564, 96.1074, -20.6861, 0.37", "10.0583, 96.1629, -21.7633, 0.15", "10.7013, 96.2696, -22.6142, 0.15", "11.0953, 96.3591, -23.2381, 0.15", "11.443, 96.431, -23.9064, 0.22", "11.7151, 96.4899, -24.4968, 0.22", "11.8373, 96.5039, -24.7792, 0.22", "12.0341, 96.4743, -25.3685, 0.22", "12.2025, 96.3919, -26.2124, 0.22", "12.3516, 95.9905, -27.0913, 0.44", "19.3162, 96.5505, -34.2431, 0.44", "26.06, 98.0701, -41.4515, 0.44", "32.9715, 99.2349, -48.5739, 0.44", "41.5425, 98.5659, -53.6771, 0.44" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "25.472, 50.6307, 5.96389, 0.22", "26.7857, 51.2051, 6.46844, 0.22", "27.5413, 51.5283, 6.73103, 0.22", "28.1248, 51.79, 6.92131, 0.37", "28.8796, 52.1432, 7.15038, 0.96", "29.6641, 52.5414, 7.35257, 0.96", "30.8942, 53.2207, 7.62624, 0.59", "31.5972, 53.6358, 7.74589, 0.37", "32.639, 54.2719, 7.86306, 0.59", "33.2463, 54.6621, 7.92856, 0.29", "33.9869, 55.17, 8.02402, 0.29", "34.593, 55.6438, 8.13871, 0.29", "35.2577, 56.2244, 8.32642, 0.44", "35.8661, 56.781, 8.56097, 0.74", "36.6893, 57.544, 8.94056, 0.81", "37.3849, 58.2054, 9.29333, 0.29", "38.0945, 58.911, 9.67759, 0.22", "38.5802, 59.4472, 9.90934, 0.22", "38.9524, 59.9205, 10.0484, 0.59", "39.5616, 60.8153, 10.1699, 0.81", "40.1242, 61.7428, 10.1709, 0.22", "40.416, 62.2405, 10.147, 0.22", "41.039, 63.3284, 10.0996, 0.29", "41.4154, 64.039, 10.087, 0.52", "41.6984, 64.6603, 10.1055, 0.74", "42.0527, 65.5913, 10.1988, 1.11", "42.4616, 66.6703, 10.4093, 0.52", "42.753, 67.395, 10.6361, 0.22", "42.9281, 67.8015, 10.7995, 0.22", "43.2926, 68.5152, 11.1075, 0.29", "43.6664, 69.1589, 11.3735, 0.29", "44.4369, 70.3698, 11.8185, 0.22", "45.0073, 71.218, 12.0815, 0.81", "45.5954, 72.0154, 12.315, 0.66", "46.3972, 73.033, 12.6013, 0.29", "47.0883, 73.8795, 12.8776, 0.22", "47.5438, 74.4152, 13.0654, 0.59", "47.7866, 74.6949, 13.1695, 0.59", "48.6105, 75.6756, 13.534, 0.81", "48.9265, 76.0848, 13.717, 0.37", "49.5961, 77.0613, 14.1941, 0.22", "49.9032, 77.5605, 14.4494, 0.22", "50.1744, 78.0652, 14.6763, 0.22", "50.4561, 78.6783, 14.9205, 0.22", "50.7001, 79.3443, 15.1307, 0.22", "50.9791, 80.1647, 15.2997, 0.81", "51.4145, 81.4492, 15.461, 0.81", "51.8228, 82.6027, 15.5689, 0.29", "52.2506, 83.6716, 15.6344, 0.59", "52.8387, 84.9694, 15.663, 0.22", "53.4391, 86.2018, 15.6282, 0.22", "53.8728, 87.0155, 15.5785, 0.44", "54.3582, 87.8405, 15.4968, 0.52", "54.9566, 88.8365, 15.3875, 0.15", "55.1227, 89.115, 15.3552, 0.15", "55.6781, 90.0934, 15.2767, 0.59", "55.9765, 90.691, 15.2607, 0.59", "56.3175, 91.4398, 15.2087, 0.22", "56.7212, 92.3391, 15.1262, 0.22", "56.9672, 92.8513, 15.0846, 0.22", "57.2554, 93.4123, 15.0641, 0.44", "57.7311, 94.3115, 15.083, 0.52", "58.1003, 95.0026, 15.1334, 0.52", "58.6144, 95.9178, 15.2396, 0.74", "59.3688, 97.1713, 15.431, 0.22", "59.7651, 97.7812, 15.5423, 0.22", "60.1968, 98.4173, 15.6796, 0.29", "60.7219, 99.2053, 15.8703, 0.37", "61.1243, 99.8278, 16.0308, 0.81", "61.2981, 100.095, 16.0873, 0.81", "61.8523, 100.911, 16.2017, 0.15", "62.3663, 101.674, 16.2984, 0.22", "62.8174, 102.305, 16.4083, 0.22", "63.2561, 102.838, 16.5348, 0.29", "64.0646, 103.733, 16.7915, 0.59", "64.6432, 104.363, 17.0003, 0.44", "65.2354, 105.02, 17.2415, 0.66", "66.0545, 105.915, 17.5927, 0.22", "67.0001, 106.935, 17.9968, 0.22", "67.2512, 107.232, 18.1095, 0.29", "67.8813, 108.109, 18.4276, 0.29", "68.2807, 108.763, 18.6374, 0.29", "68.6594, 109.523, 18.8328, 0.88", "68.9673, 110.363, 19.0339, 0.74", "69.4725, 112.156, 19.465, 0.22", "69.6913, 113.041, 19.6747, 0.22", "69.8356, 113.653, 19.823, 0.81", "70.0894, 114.655, 20.0707, 0.74", "70.3591, 115.713, 20.33, 0.22", "70.5121, 116.273, 20.4662, 0.22", "70.6966, 116.866, 20.5987, 0.22", "70.9809, 117.608, 20.7655, 0.22", "71.415, 118.536, 20.9776, 0.22", "71.7427, 119.158, 21.1146, 0.37", "72.1917, 119.933, 21.2647, 0.88", "72.3842, 120.238, 21.3222, 0.74", "73.2357, 121.462, 21.5485, 0.15", "73.9011, 122.349, 21.7021, 0.15", "74.4767, 123.074, 21.8488, 0.52", "74.9785, 123.636, 21.976, 0.22", "75.3274, 123.993, 22.0629, 0.22", "75.9283, 124.548, 22.2258, 0.29", "76.3733, 124.888, 22.3602, 0.29", "77.0673, 125.361, 22.6074, 0.29", "77.7964, 125.815, 22.8812, 0.29", "78.2588, 126.099, 23.0656, 0.59", "79.0468, 126.565, 23.3823, 1.11", "80.3196, 127.251, 23.89, 0.15", "80.6548, 127.412, 24.0145, 0.15", "81.1084, 127.582, 24.161, 0.15", "81.673, 127.769, 24.3294, 0.15", "82.0962, 127.894, 24.4703, 0.15", "82.7104, 128.068, 24.6936, 0.15", "83.5341, 128.315, 25.0161, 0.44", "85.0279, 128.804, 25.6307, 0.22", "85.5636, 129.0, 25.8773, 0.15", "86.8662, 129.558, 26.5182, 0.29", "87.4554, 129.844, 26.8279, 0.29", "87.8749, 130.061, 27.0638, 0.29", "88.5309, 130.42, 27.4454, 0.22", "89.0823, 130.753, 27.7339, 0.22", "89.7136, 131.124, 27.9933, 0.22", "90.338, 131.487, 28.1188, 0.37", "90.9104, 131.771, 28.1666, 0.37", "91.808, 132.154, 28.1687, 0.22", "92.5771, 132.452, 28.1091, 0.59", "93.1279, 132.664, 28.0182, 0.96", "94.1639, 133.108, 27.7964, 0.22", "94.9453, 133.51, 27.5714, 0.15", "95.46, 133.814, 27.4011, 0.15", "96.0476, 134.21, 27.2102, 0.37", "96.7756, 134.746, 27.0065, 0.66", "97.5763, 135.396, 26.8306, 0.74", "98.3709, 136.108, 26.7154, 0.52", "98.6717, 136.4, 26.6958, 0.52", "99.3464, 137.074, 26.7219, 0.15", "100.091, 137.824, 26.7962, 0.22", "100.567, 138.299, 26.8888, 0.22", "101.068, 138.773, 27.0287, 0.66", "101.843, 139.484, 27.3385, 0.96", "102.271, 139.866, 27.5289, 0.96" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "25.472, 50.6307, 5.96389, 0.22", "25.2334, 51.9623, 4.93786, 0.22", "25.0911, 52.7373, 4.40334, 0.22", "24.9659, 53.4258, 3.97038, 0.44", "24.8139, 54.3218, 3.46849, 0.37", "24.6225, 55.2682, 2.97039, 0.37", "24.3929, 56.2743, 2.42518, 0.29", "24.1837, 57.002, 2.05301, 0.29", "23.8026, 58.0346, 1.5375, 0.52", "23.5234, 58.6933, 1.20012, 0.15", "23.2757, 59.2859, 0.881363, 0.37", "23.0684, 59.877, 0.516401, 0.37", "22.8743, 60.5595, 0.072157, 0.22", "22.7252, 61.1619, -0.275077, 0.22", "22.6323, 61.6689, -0.558414, 0.59", "22.5357, 62.4271, -1.00302, 0.22", "22.4766, 63.2669, -1.47878, 0.37", "22.4043, 64.0788, -1.94394, 0.81", "22.3572, 64.5252, -2.21, 0.81", "22.1885, 65.6236, -2.85877, 0.52", "22.0241, 66.5285, -3.42242, 0.52", "21.8075, 67.6727, -4.16165, 0.22", "21.6339, 68.5641, -4.74032, 0.15", "21.4816, 69.2933, -5.20761, 0.37", "21.3711, 69.8086, -5.50764, 0.37", "21.2318, 70.5458, -5.88988, 0.15", "21.1569, 71.0491, -6.12571, 0.15", "21.0892, 71.6221, -6.37908, 0.15", "20.9886, 72.4984, -6.72331, 0.74", "20.853, 73.3223, -7.03359, 0.22", "20.6423, 74.239, -7.36229, 0.22", "20.4656, 74.8222, -7.54909, 0.22", "20.0985, 75.8716, -7.85325, 0.96", "19.7829, 76.7501, -8.07569, 0.96", "19.5969, 77.2913, -8.17954, 0.15", "19.3819, 77.8901, -8.28037, 0.15", "19.1624, 78.445, -8.36486, 0.15", "18.9017, 79.1104, -8.47197, 0.44", "18.7836, 79.439, -8.52967, 0.44", "18.3189, 80.8303, -8.74524, 0.22", "18.0819, 81.5942, -8.82188, 0.22", "17.8586, 82.3067, -8.857, 0.22", "17.6722, 82.7892, -8.8417, 0.59", "17.3981, 83.3721, -8.78159, 0.74", "16.9903, 84.1379, -8.66421, 0.22", "16.6244, 84.7757, -8.5287, 0.22", "16.2973, 85.3871, -8.377, 0.88", "15.6224, 86.7801, -8.02875, 0.15", "15.2801, 87.544, -7.85798, 0.15", "14.8959, 88.4406, -7.68958, 0.15", "14.5685, 89.1901, -7.58533, 0.66", "14.0925, 90.1554, -7.45449, 0.07", "13.8137, 90.689, -7.37147, 0.15", "13.4986, 91.2507, -7.27334, 0.15", "13.1886, 91.7012, -7.17565, 0.15", "12.647, 92.2559, -7.02809, 0.22", "11.6836, 92.9422, -6.83382, 0.07", "11.4038, 93.0973, -6.79277, 0.07", "10.6725, 93.4996, -6.71149, 0.07", "10.2479, 93.7348, -6.68964, 0.52", "9.72775, 94.0353, -6.68799, 0.96", "9.27511, 94.312, -6.70489, 0.96", "8.41763, 94.883, -6.79678, 0.52", "7.48673, 95.504, -6.93211, 0.22", "6.76641, 95.9995, -7.07968, 0.29", "6.11281, 96.479, -7.2439, 0.74", "5.46578, 96.9812, -7.45166, 0.22", "4.72347, 97.5372, -7.72844, 0.15", "4.0967, 97.9635, -7.98801, 0.15", "3.28428, 98.4684, -8.34205, 0.15", "2.77898, 98.7748, -8.56308, 0.59", "2.09129, 99.1811, -8.9034, 0.15", "1.41127, 99.5688, -9.25847, 0.15", "0.940949, 99.833, -9.52444, 0.15", "0.428066, 100.139, -9.86661, 0.37", "-0.116954, 100.481, -10.2708, 0.22", "-0.662554, 100.855, -10.7511, 0.22", "-1.26156, 101.331, -11.3594, 1.03", "-1.89283, 101.919, -12.0785, 0.22", "-2.38333, 102.398, -12.6564, 0.52", "-2.69253, 102.689, -13.0103, 0.74", "-3.34884, 103.25, -13.6703, 0.22", "-3.71964, 103.549, -13.9759, 0.22", "-4.16621, 103.924, -14.2964, 0.22", "-4.69085, 104.432, -14.6249, 0.22", "-4.92301, 104.708, -14.7698, 0.22", "-5.34966, 105.292, -15.0505, 0.22", "-5.65112, 105.73, -15.2522, 0.74", "-5.95639, 106.178, -15.4738, 0.15", "-6.35836, 106.754, -15.7527, 0.15", "-6.80417, 107.392, -16.0617, 0.15", "-7.11574, 107.829, -16.2472, 0.15", "-7.45696, 108.308, -16.4071, 0.74", "-7.89534, 108.922, -16.5608, 0.96", "-8.81778, 110.227, -16.778, 0.15", "-9.01868, 110.529, -16.8013, 0.15", "-9.46794, 111.312, -16.8128, 0.37", "-10.0619, 112.531, -16.7416, 0.15", "-10.3134, 113.098, -16.6604, 0.22", "-10.4733, 113.48, -16.5819, 0.22", "-10.7767, 114.272, -16.3503, 0.81", "-11.0149, 114.909, -16.1296, 0.29", "-11.2796, 115.625, -15.8468, 0.07", "-11.614, 116.425, -15.4662, 0.07", "-11.8475, 116.901, -15.234, 0.52", "-12.1896, 117.556, -14.9292, 0.15", "-12.4589, 118.037, -14.7266, 0.15", "-12.6481, 118.351, -14.6159, 0.15", "-12.9544, 118.918, -14.5063, 0.59", "-13.3176, 119.695, -14.4458, 0.15", "-13.5338, 120.149, -14.4514, 0.29", "-13.8051, 120.628, -14.5052, 0.15", "-14.2621, 121.3, -14.6131, 0.15", "-14.7833, 121.983, -14.7446, 0.22", "-15.0063, 122.278, -14.8029, 0.22", "-15.374, 122.78, -14.8946, 0.22", "-15.7906, 123.344, -14.9837, 0.66", "-16.2351, 123.956, -15.062, 0.74", "-16.8015, 124.787, -15.139, 0.15", "-17.181, 125.39, -15.1615, 0.15", "-17.5864, 126.251, -15.1502, 0.15", "-17.8275, 126.863, -15.1292, 0.22", "-18.0228, 127.497, -15.1029, 0.07", "-18.1912, 128.249, -15.0638, 0.07", "-18.2637, 128.789, -15.026, 0.15", "-18.3577, 130.08, -14.9026, 0.07", "-21.1655, 138.835, -17.5819, 0.07", "-24.3897, 147.806, -18.2381, 0.07", "-26.7076, 157.014, -19.0656, 0.07" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "32.788, -7.44822, -15.772, 0.37", "33.2603, -8.32344, -16.5437, 0.37", "33.5798, -8.92094, -17.0997, 0.44", "33.9481, -9.5556, -17.7511, 0.44", "34.3745, -10.2033, -18.5137, 0.81", "34.8862, -10.8779, -19.4575, 1.03", "35.3585, -11.4033, -20.3499, 1.18", "35.796, -11.8205, -21.2691, 0.44", "36.1111, -11.9923, -21.8841, 0.81", "36.6305, -11.9637, -22.5939, 1.11", "37.3104, -11.6572, -23.1336, 1.03", "37.933, -11.3055, -23.4681, 0.74", "38.7645, -10.8531, -23.8626, 0.15", "39.6006, -10.4482, -24.2673, 0.44", "40.474, -10.0875, -24.647, 0.22", "41.2267, -9.85183, -24.9543, 0.59", "42.2432, -9.62843, -25.3882, 0.74", "43.4627, -9.4617, -26.0628, 1.25", "44.1386, -9.40872, -26.6073, 1.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "32.788, -7.44822, -15.772, 0.29", "34.0214, -7.70734, -15.0404, 0.29", "35.287, -7.97321, -14.2897, 0.29", "36.4442, -8.21633, -13.6033, 0.81", "37.4752, -8.43291, -12.9918, 0.96", "38.3665, -8.62017, -12.4631, 0.88", "39.234, -8.80241, -11.9486, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-39.6179, 64.0471, -17.9283, 0.66", "-40.7027, 63.8417, -17.5662, 0.66", "-42.186, 63.5593, -17.1648, 0.44", "-42.9646, 63.4058, -16.9909, 0.44", "-44.1052, 63.1567, -16.7853, 0.59", "-45.111, 62.942, -16.6416, 0.74", "-46.1413, 62.7475, -16.5177, 0.44", "-47.0933, 62.595, -16.4878, 0.44", "-47.732, 62.533, -16.522, 0.22", "-48.7505, 62.4935, -16.5959, 0.15", "-49.256, 62.5449, -16.6468, 0.15", "-49.9002, 62.7176, -16.7234, 0.29", "-50.5919, 62.977, -16.7759, 0.15", "-51.0427, 63.1743, -16.762, 0.15", "-51.3174, 63.3013, -16.7222, 0.15", "-52.0555, 63.6238, -16.5656, 0.88", "-53.0383, 63.964, -16.3273, 0.74", "-54.3301, 64.2863, -16.0175, 0.29", "-55.3484, 64.4544, -15.8117, 0.22", "-55.9627, 64.5029, -15.7161, 0.22", "-56.4002, 64.5084, -15.6699, 0.22", "-56.9382, 64.4825, -15.6183, 0.66", "-57.7678, 64.3863, -15.5401, 1.03", "-59.1066, 64.12, -15.4379, 0.52", "-60.3481, 63.8171, -15.363, 0.37", "-61.004, 63.6655, -15.3108, 0.22", "-61.928, 63.5031, -15.1753, 0.15", "-62.6942, 63.3834, -15.0301, 0.15", "-63.2631, 63.3158, -14.8742, 0.15", "-63.5059, 63.3057, -14.7653, 0.81", "-64.2114, 63.389, -14.3323, 1.11", "-64.9248, 63.5588, -13.864, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-39.6179, 64.0471, -17.9283, 0.88", "-39.5343, 65.1172, -17.8587, 0.88", "-39.4261, 65.8917, -17.8124, 0.29", "-39.3051, 66.6842, -17.6239, 0.29", "-39.2471, 67.2513, -17.4198, 0.29", "-39.2201, 67.9502, -17.1104, 0.88", "-39.2322, 68.2014, -16.992, 0.88", "-39.3476, 69.0642, -16.5184, 0.74", "-39.5777, 70.6586, -15.5746, 0.52", "-39.7193, 71.6496, -14.9705, 0.37", "-39.8442, 72.2876, -14.5802, 0.37", "-40.0963, 73.2106, -14.0279, 0.37", "-40.2567, 73.702, -13.7639, 0.29", "-40.6432, 74.7637, -13.3038, 0.66", "-40.8028, 75.2333, -13.1814, 0.22", "-40.9922, 75.8273, -13.0605, 0.22", "-41.2281, 76.5318, -12.9471, 0.44", "-41.4295, 77.2181, -12.8588, 0.15", "-41.6488, 77.8424, -12.7956, 0.29", "-41.873, 78.371, -12.7402, 0.15", "-42.047, 78.7767, -12.6821, 0.15", "-42.3958, 79.548, -12.5293, 0.96", "-43.1187, 80.981, -12.1696, 0.15", "-43.5561, 81.8036, -11.9265, 0.22", "-44.0039, 82.6039, -11.6751, 0.22", "-44.3589, 83.24, -11.4555, 0.59", "-44.8354, 84.0911, -11.1287, 0.37", "-45.4437, 85.1428, -10.6619, 0.74", "-46.1946, 86.3774, -10.0391, 0.74", "-46.8843, 87.6209, -9.40104, 0.22", "-47.1694, 88.21, -9.1065, 0.74", "-47.3651, 88.6902, -8.88354, 1.03", "-47.767, 89.8914, -8.36965, 0.22", "-47.9596, 90.6096, -8.08787, 0.22", "-48.0899, 91.2646, -7.87374, 0.81", "-48.1813, 91.9859, -7.6901, 0.81", "-48.3419, 93.5263, -7.41831, 0.15", "-48.4261, 94.1878, -7.34525, 0.37", "-48.5662, 94.9731, -7.3047, 0.15", "-48.7714, 95.8638, -7.27946, 0.22", "-48.9014, 96.3533, -7.2663, 0.37", "-49.0578, 96.8985, -7.24158, 0.74", "-49.4094, 98.1899, -7.13667, 0.29", "-49.6555, 99.1682, -7.02913, 0.22", "-49.8178, 99.8525, -6.9436, 0.22", "-49.9998, 100.674, -6.83005, 0.37", "-50.1395, 101.439, -6.71479, 0.22", "-50.2636, 102.476, -6.54322, 0.22", "-50.2877, 103.461, -6.36112, 0.81", "-50.28, 104.796, -6.09914, 0.22", "-51.3165, 113.79, -3.04882, 0.22", "-52.2408, 122.814, -0.0645092, 0.22", "-54.8165, 130.986, 4.33681, 0.22", "-56.5924, 138.72, 9.86588, 0.22", "-58.9339, 147.111, 13.9282, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-30.2133, -9.46925, 4.12356, 0.07", "-30.7568, -10.3607, 5.01245, 0.07", "-31.0238, -10.8287, 5.48967, 0.59", "-31.3712, -11.4405, 6.09493, 0.07", "-31.6448, -11.9024, 6.53488, 0.29", "-31.8794, -12.2946, 6.89706, 0.29", "-32.3513, -13.0298, 7.57918, 0.15", "-32.6889, -13.49, 8.06408, 0.22", "-33.1228, -14.0556, 8.72842, 0.88", "-33.546, -14.606, 9.39567, 0.22", "-33.9158, -15.092, 9.99368, 0.37", "-34.3821, -15.6613, 10.669, 0.59", "-34.9879, -16.3279, 11.4578, 0.22", "-35.5941, -16.9442, 12.1941, 0.22", "-35.966, -17.3092, 12.6134, 0.22", "-36.2495, -17.5967, 12.9102, 0.22", "-37.0377, -18.352, 13.5912, 0.15", "-37.5341, -18.7863, 13.946, 0.15", "-38.1919, -19.2868, 14.3388, 0.59", "-39.1737, -19.9592, 14.9011, 0.15", "-39.847, -20.3794, 15.3147, 0.59", "-40.6591, -20.845, 15.8775, 0.07", "-41.5147, -21.3177, 16.5133, 0.15", "-42.027, -21.5927, 16.8996, 0.66", "-42.8987, -22.0358, 17.5827, 0.29", "-43.7979, -22.4153, 18.3054, 0.29", "-44.6958, -22.7711, 19.0824, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-30.2133, -9.46925, 4.12356, 0.22", "-30.9722, -10.0975, 4.32752, 0.22", "-31.8032, -10.8144, 4.54685, 0.22", "-32.4678, -11.4661, 4.72161, 0.22", "-32.942, -11.9821, 4.86961, 0.15", "-33.3922, -12.4826, 5.03655, 0.15", "-33.8254, -12.9751, 5.20575, 0.59", "-34.0912, -13.3155, 5.32444, 0.66", "-34.5333, -13.9333, 5.53092, 0.29", "-34.9794, -14.6154, 5.78027, 0.22", "-35.4661, -15.4457, 6.0948, 0.22", "-35.8585, -16.1774, 6.3616, 0.59", "-36.1615, -16.788, 6.57973, 0.59", "-36.5002, -17.5371, 6.83571, 0.22", "-36.7796, -18.2235, 7.06663, 0.22", "-36.9838, -18.8026, 7.25554, 0.74", "-37.1618, -19.4055, 7.47819, 0.74", "-37.3996, -20.2146, 7.85202, 0.59", "-37.5746, -20.778, 8.15096, 0.37", "-37.812, -21.4803, 8.53096, 0.22", "-38.1221, -22.2387, 8.96007, 0.59", "-38.5121, -23.0303, 9.42721, 0.52", "-38.853, -23.5902, 9.77165, 0.52", "-39.2226, -24.1093, 10.0912, 0.52", "-39.9134, -25.0197, 10.6044, 0.22", "-40.3748, -25.6446, 10.8896, 0.66", "-40.6904, -26.0924, 11.0393, 0.66", "-41.0758, -26.6365, 11.1834, 0.22", "-41.515, -27.2672, 11.337, 0.22", "-41.7624, -27.6105, 11.4193, 0.22", "-42.3091, -28.34, 11.6144, 0.74", "-42.9013, -29.0793, 11.8328, 0.22", "-43.7567, -30.046, 12.1548, 0.15", "-44.3926, -30.6435, 12.3887, 0.81", "-45.576, -31.4313, 12.816, 0.07", "-46.3535, -31.7729, 13.103, 0.22", "-47.0546, -31.9156, 13.3447, 0.59", "-47.6205, -31.9135, 13.5116, 0.81", "-48.679, -31.7018, 13.7303, 0.22", "-50.1638, -31.1755, 13.8942, 0.15", "-51.0158, -30.7483, 13.9013, 0.81", "-52.2444, -29.9634, 13.7398, 0.22", "-53.1195, -29.2685, 13.4745, 0.66", "-53.7635, -28.6352, 13.1649, 0.22", "-54.2668, -28.0133, 12.79, 0.22", "-54.6143, -27.4861, 12.4154, 0.59", "-55.0656, -26.6289, 11.7848, 0.15", "-55.4055, -25.8173, 11.1985, 0.15", "-55.5816, -25.3719, 10.8759, 0.66", "-55.8051, -24.8148, 10.4725, 0.66", "-56.1218, -24.0825, 9.94074, 0.15", "-56.4479, -23.4707, 9.48101, 0.15", "-56.7529, -23.0552, 9.19216, 0.52", "-57.4093, -22.4387, 8.85875, 0.15", "-58.1218, -22.0442, 8.75259, 0.22", "-58.5362, -21.9056, 8.77277, 0.59", "-59.2109, -21.7834, 8.90256, 0.59", "-60.4976, -21.6782, 9.2567, 0.15", "-61.9317, -21.6766, 9.75197, 0.66", "-63.6999, -21.7888, 10.4883, 0.15", "-64.6427, -21.91, 10.9245, 0.59", "-66.0597, -22.2137, 11.6131, 0.15", "-66.8989, -22.5115, 12.0233, 0.22", "-67.5387, -22.8399, 12.3208, 0.22", "-67.9916, -23.1428, 12.5308, 0.52", "-68.4362, -23.5142, 12.7351, 0.22", "-69.0536, -24.0886, 12.9819, 0.81", "-70.2102, -25.2234, 13.3267, 0.07", "-70.7214, -25.6637, 13.4208, 0.22", "-71.2158, -26.0182, 13.4667, 0.07", "-71.8284, -26.3922, 13.4835, 0.66", "-72.6981, -26.8649, 13.472, 0.07", "-73.0302, -27.0231, 13.4516, 0.44", "-74.7382, -27.7295, 13.3009, 0.15", "-75.4409, -28.0055, 13.2196, 0.37", "-76.5407, -28.4126, 13.0525, 0.07", "-77.3091, -28.6777, 12.9246, 0.22", "-78.3936, -29.0463, 12.7248, 0.07" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "102.271, 139.866, 27.5289, 0.52", "102.707, 140.559, 27.6747, 0.52", "103.563, 141.773, 27.967, 0.22", "104.056, 142.431, 28.1762, 0.66", "104.339, 142.78, 28.3292, 0.96", "104.97, 143.53, 28.7024, 0.22", "105.477, 144.15, 29.0204, 0.22", "106.165, 144.977, 29.454, 0.52", "106.582, 145.458, 29.6914, 0.96", "107.567, 146.612, 30.1684, 0.52", "108.457, 147.606, 30.4908, 0.22", "109.056, 148.239, 30.6374, 0.66", "110.012, 149.116, 30.7311, 0.15", "110.61, 149.587, 30.7198, 0.15", "111.295, 150.045, 30.6558, 0.44", "112.427, 150.671, 30.4946, 0.15", "113.137, 150.985, 30.3968, 0.74", "115.23, 151.747, 30.1646, 0.15", "115.859, 151.958, 30.1067, 0.59", "116.888, 152.325, 30.0221, 0.15", "117.257, 152.466, 29.9866, 0.22", "117.928, 152.755, 29.9155, 0.15", "118.971, 153.264, 29.7452, 0.66", "120.123, 153.919, 29.4758, 0.15", "120.977, 154.471, 29.2482, 0.37", "121.533, 154.856, 29.0472, 0.07", "121.926, 155.135, 28.8657, 0.22", "122.878, 155.831, 28.2837, 0.07", "123.425, 156.205, 27.8609, 0.59", "124.041, 156.6, 27.2405, 0.07", "124.861, 157.088, 26.2082, 0.15", "125.243, 157.297, 25.6618, 0.37", "125.871, 157.589, 24.6454, 0.22", "126.346, 157.798, 23.7637, 0.52", "126.984, 158.061, 22.4582, 0.22", "127.296, 158.187, 21.7825, 0.22", "127.5, 158.27, 21.3565, 0.44", "128.007, 158.489, 20.2217, 0.22", "128.417, 158.691, 19.1829, 0.22", "128.795, 158.935, 18.0812, 0.22", "128.976, 159.061, 17.5355, 0.37", "129.113, 159.174, 17.0714, 0.37", "129.317, 159.384, 16.2252, 0.22", "129.418, 159.512, 15.7194, 0.37", "129.509, 159.628, 15.2764, 0.37", "129.603, 159.816, 14.6715, 0.37", "129.643, 159.961, 14.2473, 0.37", "129.672, 160.267, 13.5161, 0.22", "129.64, 161.022, 12.1622, 0.44", "129.542, 161.565, 11.3864, 0.59", "129.353, 162.327, 10.3819, 0.15", "129.166, 162.896, 9.71412, 0.37", "128.831, 163.719, 8.86604, 0.07", "128.354, 164.673, 8.07565, 0.07", "128.185, 164.951, 7.9188, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "102.271, 139.866, 27.5289, 0.15", "103.727, 139.472, 28.2387, 0.15", "104.889, 139.106, 28.8064, 0.15", "105.829, 138.775, 29.2678, 0.37", "106.571, 138.483, 29.6176, 0.37", "107.917, 137.935, 30.2486, 0.15", "109.415, 137.329, 30.9569, 0.15", "110.013, 137.073, 31.2556, 0.15", "110.684, 136.783, 31.5676, 0.15", "111.518, 136.434, 31.957, 0.66", "113.084, 135.805, 32.6755, 0.07", "114.11, 135.401, 33.1611, 0.07", "114.571, 135.231, 33.3606, 0.07", "115.171, 135.01, 33.6325, 0.52", "115.856, 134.744, 33.9564, 0.74", "116.91, 134.292, 34.4816, 0.07", "117.979, 133.741, 35.0666, 0.07", "118.715, 133.311, 35.4965, 0.22", "119.448, 132.842, 35.9677, 0.22", "120.693, 131.972, 36.8614, 0.07", "121.633, 131.269, 37.6016, 0.52", "122.983, 130.198, 38.819, 0.15", "123.494, 129.771, 39.359, 0.59", "124.308, 129.069, 40.3458, 0.07", "124.989, 128.458, 41.2229, 0.07", "125.371, 128.108, 41.7696, 0.29", "125.865, 127.648, 42.5609, 0.29", "126.574, 127.011, 43.8162, 0.15", "127.096, 126.559, 44.8396, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "44.1386, -9.40872, -26.6073, 0.15", "44.1263, -8.28736, -26.7977, 0.15", "44.1842, -7.52775, -26.8765, 0.15", "44.2782, -6.64282, -26.937, 0.81", "44.3537, -5.9245, -26.97, 0.22", "44.4308, -5.15507, -26.9937, 0.15", "44.5115, -4.39987, -27.0092, 0.15", "44.6062, -3.45544, -27.0045, 0.15", "44.7024, -3.0422, -26.9982, 0.37", "44.9167, -2.50093, -26.991, 0.66", "45.2165, -2.01911, -27.0227, 0.22", "45.6465, -1.50714, -27.1156, 0.22", "45.9012, -1.2535, -27.2, 0.22", "46.644, -0.633828, -27.5522, 0.88", "46.9588, -0.397417, -27.7326, 0.88", "47.6475, 0.0809573, -28.2053, 0.22", "48.1644, 0.445504, -28.6338, 0.22", "48.5809, 0.785163, -29.0521, 0.22", "49.022, 1.218, -29.574, 0.22", "49.3692, 1.65415, -30.0636, 0.59", "49.7847, 2.36359, -30.7603, 0.88", "50.0408, 2.99166, -31.3169, 0.88", "50.3211, 3.96918, -32.1414, 0.15", "50.379, 4.24461, -32.3574, 0.29", "50.4628, 4.80496, -32.7634, 0.81", "50.5362, 5.84303, -33.4632, 0.22", "50.5339, 6.66606, -33.9773, 0.22", "50.505, 7.28844, -34.3522, 0.22", "50.4678, 7.7721, -34.6567, 0.81", "50.4547, 8.26357, -35.0057, 0.59", "50.5111, 8.80185, -35.5005, 0.59", "53.8607, 17.3304, -38.3618, 0.59", "55.6479, 26.4695, -40.4256, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "44.1386, -9.40872, -26.6073, 0.29", "45.9158, -10.2668, -25.6833, 0.29", "46.7386, -10.5834, -25.3112, 0.22", "47.4613, -10.5197, -25.2251, 0.22", "47.7477, -10.4365, -25.2536, 0.22", "48.2521, -10.3234, -25.3776, 0.44", "48.8908, -10.2665, -25.6046, 0.66", "49.7057, -10.2476, -26.1805, 0.22", "50.0614, -10.2892, -26.4487, 0.22", "50.5321, -10.4537, -26.8008, 0.52", "51.2728, -10.8644, -27.356, 0.81", "51.8826, -11.2421, -27.7999, 0.59", "52.6097, -11.7068, -28.3568, 0.88", "53.1992, -12.0682, -28.8236, 0.96", "53.9901, -12.468, -29.4914, 0.66", "55.1635, -12.952, -30.5252, 0.22", "56.0223, -13.2246, -31.2911, 0.15", "56.8067, -13.4032, -31.963, 0.15", "57.3966, -13.4804, -32.4489, 1.4", "58.501, -13.5122, -33.2815, 0.22", "59.3488, -13.4712, -33.8303, 0.22", "59.7795, -13.4368, -34.0558, 0.22", "60.6803, -13.4514, -34.4062, 0.66", "61.3444, -13.5778, -34.5335, 0.66", "62.1351, -14.0221, -34.5296, 0.22", "62.4879, -14.5123, -34.4282, 0.22", "62.6954, -14.9751, -34.3708, 0.22", "62.9937, -15.7199, -34.3435, 0.22", "63.3345, -16.5455, -34.3779, 0.96", "63.693, -17.2556, -34.4432, 1.25", "64.257, -18.0667, -34.5796, 0.22", "64.9918, -18.8128, -34.7625, 0.22", "65.5687, -19.2833, -34.8995, 0.29", "66.1631, -19.6936, -35.05, 0.81", "66.9318, -20.16, -35.2608, 0.88", "67.8854, -20.6715, -35.5139, 1.03", "68.6878, -21.0452, -35.7368, 0.66", "69.7079, -21.4938, -36.0099, 0.22", "70.5131, -21.8221, -36.2261, 0.44", "71.2575, -22.0992, -36.4136, 0.88", "72.104, -22.3928, -36.5962, 0.96", "73.087, -22.744, -36.7737, 1.55", "74.1563, -23.1616, -36.9533, 0.29", "75.0697, -23.5789, -37.1304, 0.15", "75.681, -23.985, -37.2665, 0.22", "76.3003, -24.5882, -37.4713, 0.66", "77.0214, -25.5226, -37.8179, 0.22", "77.5446, -26.3432, -38.1427, 0.59", "77.9102, -26.9606, -38.4242, 0.88", "78.4695, -27.8866, -38.8801, 0.22", "78.9743, -28.5843, -39.2484, 0.29", "79.48, -29.1172, -39.5385, 0.29", "79.8486, -29.3937, -39.6903, 0.74", "80.6312, -29.7883, -39.9, 1.18", "81.3638, -30.024, -40.0047, 1.25", "82.7116, -30.292, -40.0961, 0.52", "83.5816, -30.4336, -40.1017, 0.22", "84.5957, -30.6053, -40.0742, 0.22", "85.6529, -30.8744, -40.0268, 0.29", "86.7789, -31.2936, -39.9544, 0.22", "87.4614, -31.6347, -39.8982, 1.25", "87.977, -31.9753, -39.8479, 1.03", "88.6442, -32.4881, -39.7797, 1.18", "90.0263, -33.6376, -39.6227, 0.22", "90.6432, -34.1583, -39.5602, 0.22", "90.8911, -34.3362, -39.5411, 0.22", "91.6986, -34.7885, -39.4703, 0.29", "92.5775, -35.1744, -39.3842, 0.22", "93.4114, -35.4741, -39.2955, 0.81", "93.8991, -35.6298, -39.2205, 1.11", "95.1287, -36.048, -39.0284, 0.22", "95.7131, -36.266, -38.9404, 0.22", "96.4657, -36.5649, -38.8518, 0.88", "96.9478, -36.7641, -38.8163, 0.88", "98.0622, -37.2289, -38.8444, 0.22", "98.7392, -37.5384, -38.9662, 0.22", "99.3059, -37.8134, -39.1976, 0.88", "100.205, -38.2089, -39.772, 1.03", "100.639, -38.3569, -40.1774, 0.59", "101.235, -38.4984, -40.8833, 0.22", "101.927, -38.5893, -41.8694, 0.22", "102.246, -38.6159, -42.3689, 0.22", "102.486, -38.6294, -42.7123, 0.22", "103.09, -38.6662, -43.5232, 0.22", "103.347, -38.697, -43.837, 0.22", "103.693, -38.764, -44.1909, 0.81", "104.185, -38.9249, -44.6039, 1.18", "105.648, -39.5412, -45.7013, 0.15", "106.188, -39.8009, -46.0679, 0.15", "106.883, -40.1345, -46.5038, 1.03", "107.398, -40.387, -46.8269, 1.33", "108.551, -40.9601, -47.5231, 0.07", "109.032, -41.1967, -47.8038, 0.22", "109.305, -41.3206, -47.948, 0.22", "110.413, -41.7032, -48.4437, 0.15", "111.041, -41.8482, -48.6932, 0.15", "111.964, -41.9763, -49.0654, 0.15", "121.034, -45.2636, -51.4661, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "39.234, -8.80241, -11.9486, 0.22", "39.9722, -8.24604, -11.4642, 0.22", "40.4477, -7.94723, -11.128, 0.22", "41.0265, -7.6369, -10.7121, 0.22", "41.6178, -7.36577, -10.3225, 0.66", "42.3358, -7.10551, -9.90368, 0.66", "43.1868, -6.86089, -9.48161, 0.22", "43.7792, -6.77125, -9.23737, 0.22", "44.0474, -6.76923, -9.16, 0.22", "44.9586, -6.88774, -9.02262, 0.44", "45.913, -7.10939, -8.95591, 0.88", "46.909, -7.36723, -8.91346, 0.22", "47.6271, -7.51981, -8.88781, 0.22", "48.5515, -7.65465, -8.85597, 0.29", "49.4232, -7.70886, -8.82052, 0.15", "50.11, -7.69569, -8.76031, 0.52", "51.6485, -7.52125, -8.52957, 0.37", "52.7065, -7.31922, -8.31276, 0.22", "53.5124, -7.11035, -8.11444, 1.03", "54.551, -6.75188, -7.81264, 0.29", "55.3088, -6.42933, -7.55897, 0.22", "56.2055, -5.99477, -7.2321, 0.22", "56.5811, -5.80126, -7.1059, 0.22", "57.2322, -5.46678, -6.9015, 0.22", "58.0296, -5.07937, -6.72832, 0.22", "58.7639, -4.75822, -6.66681, 0.66", "59.7117, -4.38542, -6.63991, 0.22", "60.8622, -3.97282, -6.59278, 0.66", "61.488, -3.78518, -6.55273, 0.81", "62.8063, -3.47505, -6.47531, 0.22", "63.4506, -3.34952, -6.40775, 0.22", "64.7254, -3.13182, -6.23569, 0.37", "65.5903, -2.97874, -6.06801, 0.74", "66.3059, -2.84166, -5.88298, 0.74", "67.1107, -2.66976, -5.66736, 0.59", "68.5192, -2.32739, -5.34618, 0.74", "69.6084, -2.05202, -5.21797, 0.07", "70.7732, -1.76589, -5.22988, 0.07", "71.1408, -1.68151, -5.26822, 0.59", "71.8086, -1.5534, -5.41322, 0.59", "72.8983, -1.36207, -5.78683, 0.15", "73.6262, -1.25208, -6.16737, 0.15", "74.2111, -1.16685, -6.52845, 0.37", "74.9436, -1.09595, -6.99379, 0.81", "76.27, -0.996858, -7.86459, 0.07", "77.0192, -0.972948, -8.35348, 0.44", "77.9853, -0.947048, -8.97954, 0.22", "78.8904, -0.909388, -9.58008, 0.96", "80.2274, -0.862698, -10.5206, 0.15", "80.8951, -0.868638, -11.0019, 0.15", "81.5584, -0.898298, -11.4929, 0.44", "82.4368, -0.960578, -12.2046, 0.29", "82.6792, -0.967658, -12.4276, 0.29", "82.9229, -0.953428, -12.725, 0.29", "83.307, -0.870938, -13.2723, 0.22", "83.7547, -0.761948, -13.8158, 0.22", "84.3658, -0.613183, -14.3564, 0.22", "84.7998, -0.521191, -14.6456, 0.22", "85.1788, -0.458148, -14.866, 0.22", "85.9818, -0.366028, -15.254, 0.07", "87.0088, -0.303096, -15.6702, 0.96", "88.5857, -0.365321, -16.1745, 0.07", "88.8969, -0.426446, -16.2501, 0.07", "89.7489, -0.717891, -16.4254, 0.07", "90.6578, -1.21406, -16.584, 0.07", "91.0513, -1.53737, -16.6434, 0.88", "91.6586, -2.15897, -16.7233, 0.37", "92.6821, -3.46531, -16.8745, 0.22", "92.9763, -3.87672, -16.909, 0.29", "93.5898, -4.83631, -16.9341, 0.07", "93.8587, -5.35499, -16.9478, 0.07", "103.54, -4.52964, -19.2952, 0.07", "113.431, -3.15578, -19.5699, 0.07", "123.283, -3.45306, -21.2575, 0.07", "132.589, -5.34607, -24.328, 0.07", "142.311, -6.79819, -26.1016, 0.07", "151.795, -6.57548, -29.2625, 0.07", "160.215, -4.62697, -34.2515, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "39.234, -8.80241, -11.9486, 0.74", "39.5005, -9.78893, -11.2289, 0.74", "39.7405, -10.5878, -10.6549, 0.44", "40.0186, -11.271, -10.1446, 0.22", "40.2437, -11.7011, -9.8054, 0.22", "40.3881, -11.902, -9.62962, 0.22", "40.7835, -12.3498, -9.22665, 0.22", "41.142, -12.6507, -8.96632, 0.22", "41.722, -13.0219, -8.632, 0.88", "42.0595, -13.1933, -8.4665, 0.81", "43.0715, -13.6217, -8.01599, 0.22", "43.8199, -13.9196, -7.75098, 0.74", "44.3812, -14.1573, -7.61365, 0.81", "45.2609, -14.605, -7.46394, 0.15", "45.7253, -14.9078, -7.42463, 0.15", "46.067, -15.174, -7.41635, 0.22", "46.7353, -15.7736, -7.4064, 0.22", "47.5229, -16.4933, -7.30854, 0.22", "48.1271, -17.0041, -7.18241, 0.66", "48.8154, -17.5105, -6.99268, 0.88", "49.5065, -17.9774, -6.76245, 0.74", "50.2659, -18.4665, -6.46559, 0.74", "51.2474, -19.0343, -6.0197, 0.22", "52.0584, -19.4369, -5.65826, 0.15", "52.6537, -19.7069, -5.43661, 0.15", "53.2506, -19.9682, -5.26066, 0.22", "53.992, -20.2879, -5.07996, 0.15", "54.3596, -20.447, -5.00919, 0.15", "55.0206, -20.7236, -4.87823, 0.59", "56.3692, -21.2505, -4.57445, 0.22", "57.0592, -21.4818, -4.42182, 0.22", "57.9883, -21.7597, -4.19511, 0.22", "58.5559, -21.9198, -4.0535, 0.37", "59.6785, -22.2295, -3.77049, 0.88", "60.3546, -22.4036, -3.60003, 0.74", "61.8253, -22.7341, -3.24671, 0.22", "62.7801, -22.9296, -3.03787, 0.29", "63.4864, -23.0708, -2.89356, 0.59", "64.1889, -23.2022, -2.73503, 0.07", "64.638, -23.2931, -2.60831, 0.07", "65.1936, -23.4025, -2.42794, 0.59", "66.24, -23.631, -2.10152, 0.15", "66.9723, -23.8257, -1.91507, 0.66", "68.0049, -24.1647, -1.70243, 0.96", "69.4416, -24.7312, -1.48047, 0.29", "70.3906, -25.1725, -1.3866, 0.29", "71.6928, -25.8562, -1.27726, 0.66", "72.911, -26.5663, -1.18055, 0.22", "73.6466, -27.0375, -1.12416, 0.22", "74.4903, -27.642, -1.05492, 0.37", "75.4078, -28.3759, -0.948171, 0.29", "76.284, -29.1825, -0.765625, 0.22", "77.2434, -30.2088, -0.411417, 0.74", "77.8015, -30.8926, -0.125575, 0.44", "78.3899, -31.6683, 0.222539, 0.15", "78.866, -32.3245, 0.512841, 0.44", "79.131, -32.6858, 0.677663, 0.44", "79.885, -33.6956, 1.13421, 0.22", "80.7319, -34.7713, 1.64734, 1.11", "82.0326, -36.3172, 2.41659, 0.15", "82.4816, -36.8108, 2.67998, 0.29", "83.3243, -37.6673, 3.14599, 0.15", "83.7155, -38.0456, 3.36354, 0.29", "84.4299, -38.6814, 3.76238, 0.74", "85.0267, -39.1554, 4.14311, 0.22", "85.6693, -39.6176, 4.63238, 0.22", "86.4228, -40.1012, 5.28281, 0.29", "87.0051, -40.4243, 5.84115, 0.22", "87.6437, -40.7151, 6.53988, 0.59", "88.3207, -40.928, 7.39826, 0.22", "89.0969, -41.0731, 8.47492, 0.74", "89.8075, -41.138, 9.55727, 0.59", "90.4527, -41.1502, 10.6151, 0.37", "91.0366, -41.1323, 11.6081, 0.15", "91.7073, -41.1198, 12.7073, 0.22", "91.8599, -41.1157, 12.9503, 0.22", "92.4139, -41.0863, 13.7954, 0.22", "93.0583, -41.0453, 14.7654, 0.59", "93.5423, -41.0045, 15.479, 1.03", "94.4587, -40.9315, 16.8466, 0.22", "95.097, -40.8918, 17.7974, 0.22", "95.7208, -40.8477, 18.7364, 0.22", "96.411, -40.7817, 19.7682, 0.15", "96.8858, -40.7435, 20.4537, 0.44", "97.7869, -40.7274, 21.6775, 0.37", "98.979, -40.7628, 23.2437, 0.15", "99.6049, -40.8206, 23.9638, 0.29", "100.531, -40.9553, 24.9102, 0.81", "101.779, -41.191, 26.0127, 0.22", "102.466, -41.333, 26.5309, 0.15", "103.308, -41.5016, 27.0605, 0.15", "104.332, -41.7002, 27.6095, 0.15", "104.819, -41.813, 27.8234, 0.52", "105.449, -41.981, 28.0623, 0.52", "107.117, -42.4714, 28.6354, 0.07", "108.008, -42.761, 28.9194, 0.22", "109.159, -43.1927, 29.2657, 0.29", "111.632, -44.2414, 30.0654, 0.07", "112.201, -44.5006, 30.2518, 0.07", "112.74, -44.7635, 30.427, 0.37", "113.416, -45.1122, 30.6675, 0.37", "115.025, -45.9119, 31.4369, 0.07", "115.838, -46.2955, 31.9567, 0.07", "116.456, -46.563, 32.452, 0.52", "116.771, -46.695, 32.7327, 0.52", "118.003, -47.2253, 33.9152, 0.22", "119.334, -47.8801, 35.2971, 0.07", "120.207, -48.3657, 36.253, 0.07", "120.603, -48.6051, 36.697, 0.29", "121.674, -49.2562, 37.7782, 0.07", "122.51, -49.7552, 38.478, 0.29", "124.102, -50.7147, 39.4721, 0.07", "124.882, -51.1735, 39.7919, 0.22", "125.664, -51.6046, 39.9583, 0.22", "127.588, -52.6747, 39.961, 0.07", "128.584, -53.2616, 39.6908, 0.07", "129.048, -53.5716, 39.4841, 0.07", "129.861, -54.2304, 38.9699, 0.15", "130.604, -55.0801, 38.3248, 0.07", "131.061, -55.8436, 37.7704, 0.22", "131.33, -56.5501, 37.3118, 0.22", "131.604, -57.5457, 36.6461, 0.07", "131.768, -58.4047, 36.049, 0.44", "131.926, -59.8061, 35.0258, 0.15", "131.986, -60.7818, 34.3076, 0.52", "132.004, -61.2921, 33.9143, 0.52", "132.027, -62.0447, 33.3296, 0.52", "132.063, -63.0069, 32.5722, 0.15", "132.136, -64.0467, 31.7995, 0.15", "132.18, -64.3979, 31.5649, 0.29", "132.405, -65.78, 30.6975, 0.15", "132.513, -66.407, 30.3118, 0.37", "132.699, -67.2768, 29.7872, 0.22", "132.867, -67.9527, 29.3617, 0.07", "133.1, -68.8184, 28.8132, 0.22", "133.471, -70.1843, 27.9233, 0.07", "133.847, -71.5473, 27.0378, 0.07", "134.213, -72.858, 26.1735, 0.07", "134.424, -73.6086, 25.6825, 0.22", "134.657, -74.4269, 25.153, 0.07", "134.834, -75.0357, 24.7396, 0.15" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-64.9248, 63.5588, -13.864, 0.22", "-65.9522, 64.2652, -13.2632, 0.22", "-66.347, 64.471, -13.0853, 0.22", "-67.0431, 64.7979, -12.8411, 0.52", "-67.4576, 64.988, -12.7163, 0.52", "-68.5109, 65.489, -12.4354, 0.15", "-69.2209, 65.8174, -12.2551, 0.66", "-70.0159, 66.1487, -12.0951, 0.22", "-71.0695, 66.5976, -11.9013, 0.07", "-71.8008, 66.892, -11.7774, 0.07", "-72.5175, 67.1763, -11.6543, 0.52", "-73.6013, 67.6171, -11.4589, 0.07", "-74.5321, 67.9824, -11.2517, 0.07", "-75.0068, 68.1462, -11.1147, 0.59", "-75.8177, 68.364, -10.8266, 0.07", "-76.5027, 68.5271, -10.5373, 0.15", "-77.1491, 68.6682, -10.1952, 0.37", "-77.7526, 68.8094, -9.76731, 0.59", "-78.3283, 68.9338, -9.20474, 0.22", "-78.7129, 69.0238, -8.7529, 0.22", "-79.2481, 69.145, -8.07092, 0.22", "-79.6408, 69.1899, -7.52284, 0.22", "-80.201, 69.1688, -6.69979, 0.44", "-80.6155, 69.0863, -6.10814, 0.44", "-81.0972, 68.9451, -5.53531, 0.22", "-81.8986, 68.6578, -4.74438, 0.07", "-82.489, 68.451, -4.27684, 0.07", "-82.9805, 68.2903, -3.96454, 0.07", "-83.4402, 68.1958, -3.76086, 0.07", "-84.2616, 68.0844, -3.47768, 0.07", "-84.8218, 68.0323, -3.31623, 0.29", "-85.8024, 68.0074, -3.07724, 0.66", "-86.5345, 68.0148, -2.90843, 0.88", "-88.2978, 68.0703, -2.51235, 0.22", "-89.3724, 68.1137, -2.27882, 0.15", "-90.3132, 68.1655, -2.07919, 0.22", "-91.055, 68.2307, -1.96825, 0.07", "-91.6046, 68.2931, -1.92077, 0.07", "-92.2606, 68.3804, -1.89862, 0.59", "-92.9147, 68.4877, -1.89975, 0.07", "-93.6227, 68.6484, -1.94689, 0.52", "-94.9526, 68.981, -2.12491, 0.07", "-95.376, 69.0813, -2.22287, 0.07", "-96.0659, 69.2659, -2.46043, 0.22", "-105.191, 70.1361, 1.52772, 0.22", "-114.089, 70.9212, 6.01555, 0.22", "-122.047, 73.1665, 11.5905, 0.22", "-129.653, 74.2132, 17.9887, 0.22", "-137.107, 73.8312, 24.6424, 0.22", "-145.774, 73.0474, 29.5629, 0.22", "-153.622, 71.0761, 35.403, 0.22", "-160.888, 68.405, 41.672, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-64.9248, 63.5588, -13.864, 0.15", "-65.9669, 63.5051, -13.939, 0.15", "-66.8624, 63.4503, -14.0029, 0.15", "-67.7187, 63.4242, -14.0821, 0.15", "-68.2456, 63.4142, -14.1333, 0.15", "-69.3295, 63.4154, -14.2466, 0.15", "-70.0648, 63.4021, -14.3287, 0.15", "-70.9394, 63.3602, -14.4401, 0.81", "-72.0028, 63.2609, -14.5791, 0.15", "-72.8844, 63.173, -14.6913, 0.44", "-74.0888, 63.0655, -14.8399, 0.15", "-75.0307, 62.999, -14.9493, 0.15", "-75.5995, 62.9522, -15.0174, 0.15", "-76.1164, 62.9012, -15.0785, 0.15", "-77.5854, 62.7108, -15.2293, 0.07", "-78.27, 62.6309, -15.3011, 0.07", "-78.9614, 62.578, -15.3627, 0.15", "-88.8802, 61.3723, -15.4494, 0.15" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-44.6958, -22.7711, 19.0824, 0.15", "-44.3647, -23.8681, 19.8697, 0.15", "-44.0897, -24.7796, 20.5237, 0.66", "-43.8511, -25.5703, 21.0911, 0.44", "-43.408, -27.0387, 22.1448, 0.15", "-43.0669, -28.1689, 22.9558, 0.15", "-42.6304, -29.6157, 23.9939, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-44.6958, -22.7711, 19.0824, 0.29", "-46.1111, -23.3613, 18.9423, 0.29", "-46.944, -23.7257, 18.8479, 0.15", "-47.7557, -24.121, 18.7553, 0.22", "-48.7107, -24.586, 18.6463, 0.07", "-49.4762, -24.9588, 18.559, 0.52", "-50.2168, -25.3195, 18.4745, 0.15", "-51.1338, -25.7539, 18.3472, 0.29", "-52.0128, -26.1918, 18.2076, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "55.6479, 26.4695, -40.4256, 0.15", "58.2343, 34.9957, -43.9979, 0.15", "60.1618, 43.6041, -47.7626, 0.15", "61.4178, 52.2538, -51.7026, 0.15", "61.3005, 60.5635, -56.5478, 0.15", "60.0746, 68.326, -62.1808, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "55.6479, 26.4695, -40.4256, 0.29", "58.5774, 35.0927, -43.4298, 0.15", "60.7391, 43.5276, -47.4911, 0.15", "61.7602, 52.0401, -51.8114, 0.15", "61.5147, 60.2559, -56.8262, 0.15", "61.2539, 69.3544, -59.6909, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_33", "dend_24", "dend_13", "dend_2", "dend_1", "dend_0", "dend_36", "dend_35", "dend_30", "dend_25", "dend_15", "dend_14", "dend_8", "dend_3", "dend_38", "dend_37", "dend_32", "dend_31", "dend_27", "dend_26", "dend_19", "dend_16", "dend_10", "dend_9", "dend_5", "dend_4", "dend_29", "dend_28", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_6", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_33", "dend_24", "dend_13", "dend_2", "dend_1", "dend_0", "dend_36", "dend_35", "dend_30", "dend_25", "dend_15", "dend_14", "dend_8", "dend_3", "dend_38", "dend_37", "dend_32", "dend_31", "dend_27", "dend_26", "dend_19", "dend_16", "dend_10", "dend_9", "dend_5", "dend_4", "dend_29", "dend_28", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_6", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_SBC_3845e9299a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: soma_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.49999994695550876)
    connect dend_33(0), soma_0(0.49999994695550876)
    connect dend_24(0), soma_0(0.49999994695550876)
    connect dend_13(0), soma_0(0.49999994695550876)
    connect dend_2(0), soma_0(0.49999994695550876)
    connect dend_1(0), soma_0(0.49999994695550876)
    connect dend_0(0), soma_0(0.49999994695550876)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.8534, -3.68898, 0.0, 3.87803 ) }
    soma_0 { pt3dadd( -5.27984, -3.22888, 0.0, 6.96449 ) }
    soma_0 { pt3dadd( -4.70627, -2.76878, 0.0, 8.7585 ) }
    soma_0 { pt3dadd( -4.1327, -2.30868, 0.0, 10.0498 ) }
    soma_0 { pt3dadd( -3.55914, -1.84858, 0.0, 11.0032 ) }
    soma_0 { pt3dadd( -2.98557, -1.38848, 0.0, 12.0695 ) }
    soma_0 { pt3dadd( -2.41201, -0.928385, 0.0, 12.4861 ) }
    soma_0 { pt3dadd( -1.83844, -0.468287, 0.0, 12.8863 ) }
    soma_0 { pt3dadd( -1.26487, -0.0081878, 0.0, 13.1702 ) }
    soma_0 { pt3dadd( -0.691307, 0.451911, 0.0, 13.2491 ) }
    soma_0 { pt3dadd( -0.117741, 0.91201, 0.0, 13.2672 ) }
    soma_0 { pt3dadd( 0.455825, 1.37211, 0.0, 13.2354 ) }
    soma_0 { pt3dadd( 1.02939, 1.83221, 0.0, 13.09 ) }
    soma_0 { pt3dadd( 1.60296, 2.29231, 0.0, 12.7829 ) }
    soma_0 { pt3dadd( 2.17652, 2.75241, 0.0, 12.3841 ) }
    soma_0 { pt3dadd( 2.75009, 3.2125, 0.0, 11.4175 ) }
    soma_0 { pt3dadd( 3.32366, 3.6726, 0.0, 10.2262 ) }
    soma_0 { pt3dadd( 3.89722, 4.1327, 0.0, 8.70811 ) }
    soma_0 { pt3dadd( 4.47079, 4.5928, 0.0, 6.9837 ) }
    soma_0 { pt3dadd( 5.04435, 5.0529, 0.0, 4.97808 ) }
    soma_0 { pt3dadd( 5.61792, 5.513, 0.0, 2.90913 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.59355, 4.20833, 7.71, 0.96 ) }
    dend_34 { pt3dadd( -3.2793, 6.4207, 9.24973, 0.96 ) }
    dend_34 { pt3dadd( -3.23548, 7.21295, 9.78031, 0.96 ) }
    dend_34 { pt3dadd( -3.23166, 8.601, 10.7915, 0.74 ) }
    dend_34 { pt3dadd( -3.24755, 9.58827, 11.5714, 1.03 ) }
    dend_34 { pt3dadd( -3.25604, 10.6741, 12.5876, 0.81 ) }
    dend_34 { pt3dadd( -3.22964, 11.3893, 13.4566, 0.59 ) }
    dend_34 { pt3dadd( -3.16743, 12.0294, 14.5702, 0.59 ) }
    dend_34 { pt3dadd( -3.06501, 12.3275, 15.5021, 0.59 ) }
    dend_34 { pt3dadd( -2.96989, 12.4046, 16.1573, 0.59 ) }
    dend_34 { pt3dadd( -2.67849, 12.3859, 17.8267, 0.59 ) }
    dend_34 { pt3dadd( -2.26411, 12.1231, 19.7626, 0.88 ) }
    dend_34 { pt3dadd( -1.8974, 11.8415, 21.0793, 1.18 ) }
    dend_34 { pt3dadd( -1.39076, 11.5041, 22.4212, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 35/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.04355, -3.45817, 15.73, 0.66 ) }
    dend_33 { pt3dadd( -4.26616, -4.2171, 16.1823, 0.66 ) }
    dend_33 { pt3dadd( -4.37676, -4.55687, 16.3948, 0.66 ) }
    dend_33 { pt3dadd( -4.57291, -5.06088, 16.7049, 0.66 ) }
    dend_33 { pt3dadd( -4.92047, -5.87265, 17.1967, 0.96 ) }
    dend_33 { pt3dadd( -5.54721, -7.31497, 18.0465, 0.66 ) }
    dend_33 { pt3dadd( -5.76579, -7.84827, 18.3621, 0.66 ) }
    dend_33 { pt3dadd( -5.9872, -8.57106, 18.7989, 0.66 ) }
    dend_33 { pt3dadd( -6.17163, -9.3387, 19.2748, 0.66 ) }
    dend_33 { pt3dadd( -6.27673, -9.85963, 19.5993, 0.88 ) }
    dend_33 { pt3dadd( -6.42422, -10.4851, 19.982, 0.88 ) }
    dend_33 { pt3dadd( -6.75196, -11.6136, 20.6165, 0.29 ) }
    dend_33 { pt3dadd( -6.99656, -12.4016, 21.0356, 0.29 ) }
    dend_33 { pt3dadd( -7.0983, -12.709, 21.2038, 0.29 ) }
    dend_33 { pt3dadd( -7.32067, -13.3544, 21.529, 0.66 ) }
    dend_33 { pt3dadd( -7.54355, -14.1651, 21.8942, 0.22 ) }
    dend_33 { pt3dadd( -7.63769, -14.6263, 22.0597, 0.22 ) }
    dend_33 { pt3dadd( -7.7741, -15.4997, 22.3334, 1.03 ) }
    dend_33 { pt3dadd( -7.87246, -16.2537, 22.5597, 1.03 ) }
    dend_33 { pt3dadd( -7.98259, -17.5907, 22.9707, 0.37 ) }
    dend_33 { pt3dadd( -8.00697, -19.0953, 23.4243, 0.07 ) }
    dend_33 { pt3dadd( -7.95805, -19.9652, 23.701, 0.29 ) }
    dend_33 { pt3dadd( -7.85553, -20.8396, 23.9771, 0.29 ) }
    dend_33 { pt3dadd( -7.73544, -21.5018, 24.1967, 0.37 ) }
    dend_33 { pt3dadd( -7.54516, -22.233, 24.4407, 0.52 ) }
    dend_33 { pt3dadd( -7.40443, -22.6806, 24.624, 0.52 ) }
    dend_33 { pt3dadd( -7.16574, -23.4202, 24.9826, 0.52 ) }
    dend_33 { pt3dadd( -6.8716, -24.2349, 25.4598, 0.52 ) }
    dend_33 { pt3dadd( -6.6534, -24.7098, 25.7608, 0.66 ) }
    dend_33 { pt3dadd( -6.11956, -25.6862, 26.3943, 0.22 ) }
    dend_33 { pt3dadd( -5.55686, -26.5613, 26.9597, 0.88 ) }
    dend_33 { pt3dadd( -5.05505, -27.2633, 27.4055, 0.88 ) }
    dend_33 { pt3dadd( -4.44222, -28.0909, 27.9044, 0.22 ) }
    dend_33 { pt3dadd( -4.03499, -28.6363, 28.2271, 0.22 ) }
    dend_33 { pt3dadd( -3.26882, -29.6173, 28.7624, 0.29 ) }
    dend_33 { pt3dadd( -2.7154, -30.2701, 29.0843, 0.29 ) }
    dend_33 { pt3dadd( -2.12034, -30.9223, 29.3694, 0.22 ) }
    dend_33 { pt3dadd( -1.27271, -31.8787, 29.7349, 0.59 ) }
    dend_33 { pt3dadd( -0.597919, -32.675, 30.04, 0.22 ) }
    dend_33 { pt3dadd( 0.00882885, -33.4224, 30.3212, 0.22 ) }
    dend_33 { pt3dadd( 0.404931, -33.9217, 30.5468, 0.52 ) }
    dend_33 { pt3dadd( 1.13418, -34.9428, 31.0658, 0.15 ) }
    dend_33 { pt3dadd( 1.63532, -35.7059, 31.481, 0.15 ) }
    dend_33 { pt3dadd( 2.17085, -36.5824, 31.983, 0.15 ) }
    dend_33 { pt3dadd( 2.58686, -37.319, 32.4327, 0.22 ) }
    dend_33 { pt3dadd( 3.14445, -38.3904, 33.147, 0.22 ) }
    dend_33 { pt3dadd( 3.55373, -39.1132, 33.6574, 0.22 ) }
    dend_33 { pt3dadd( 3.7639, -39.4188, 33.9049, 0.22 ) }
    dend_33 { pt3dadd( 4.13436, -39.8947, 34.3157, 0.22 ) }
    dend_33 { pt3dadd( 4.40251, -40.2512, 34.6126, 0.44 ) }
    dend_33 { pt3dadd( 4.64477, -40.5654, 34.8975, 0.44 ) }
    dend_33 { pt3dadd( 5.12405, -41.1419, 35.4297, 0.44 ) }
    dend_33 { pt3dadd( 5.66408, -41.7042, 36.0177, 0.44 ) }
    dend_33 { pt3dadd( 6.3301, -42.3522, 36.7372, 0.15 ) }
    dend_33 { pt3dadd( 6.83632, -42.8438, 37.2686, 0.15 ) }
    dend_33 { pt3dadd( 7.40835, -43.4105, 37.8327, 0.15 ) }
    dend_33 { pt3dadd( 8.12328, -44.1928, 38.4784, 0.59 ) }
    dend_33 { pt3dadd( 8.72094, -44.8816, 38.9518, 0.15 ) }
    dend_33 { pt3dadd( 9.26865, -45.5335, 39.306, 0.15 ) }
    dend_33 { pt3dadd( 9.7387, -46.1395, 39.5857, 0.15 ) }
    dend_33 { pt3dadd( 10.2109, -46.8259, 39.856, 0.74 ) }
    dend_33 { pt3dadd( 11.2815, -48.6039, 40.4499, 0.15 ) }
    dend_33 { pt3dadd( 11.9408, -49.8508, 40.7684, 0.15 ) }
    dend_33 { pt3dadd( 12.3691, -50.7768, 40.9637, 0.37 ) }
    dend_33 { pt3dadd( 12.9743, -52.1735, 41.2592, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 13.664, -53.8456, 41.6368, 0.22 ) }
    dend_33 { pt3dadd( 14.1084, -54.9656, 41.9328, 0.22 ) }
    dend_33 { pt3dadd( 14.7754, -56.6401, 42.424, 0.07 ) }
    dend_33 { pt3dadd( 15.0571, -57.37, 42.6521, 0.96 ) }
    dend_33 { pt3dadd( 15.6696, -58.8977, 43.1543, 0.22 ) }
    dend_33 { pt3dadd( 15.9555, -59.6024, 43.3997, 0.37 ) }
    dend_33 { pt3dadd( 16.403, -60.7369, 43.8449, 0.07 ) }
    dend_33 { pt3dadd( 16.5599, -61.1438, 44.0292, 0.22 ) }
    dend_33 { pt3dadd( 16.9298, -62.1066, 44.5553, 0.07 ) }
    dend_33 { pt3dadd( 17.1556, -62.7036, 44.8789, 0.22 ) }
    dend_33 { pt3dadd( 17.6129, -63.9136, 45.4508, 0.07 ) }
    dend_33 { pt3dadd( 17.8803, -64.5846, 45.7524, 0.66 ) }
    dend_33 { pt3dadd( 18.27, -65.5197, 46.1328, 0.66 ) }
    dend_33 { pt3dadd( 18.8778, -66.8897, 46.7023, 0.22 ) }
    dend_33 { pt3dadd( 19.0039, -67.1343, 46.8214, 0.22 ) }
    dend_33 { pt3dadd( 19.6792, -68.2724, 47.4735, 0.07 ) }
    dend_33 { pt3dadd( 19.9615, -68.7163, 47.7282, 0.29 ) }
    dend_33 { pt3dadd( 20.6412, -69.8001, 48.324, 0.07 ) }
    dend_33 { pt3dadd( 20.9103, -70.255, 48.5721, 0.22 ) }
    dend_33 { pt3dadd( 21.6137, -71.5377, 49.227, 0.07 ) }
    dend_33 { pt3dadd( 22.2194, -72.7408, 49.8418, 0.74 ) }
    dend_33 { pt3dadd( 22.9868, -74.436, 50.6971, 0.15 ) }
    dend_33 { pt3dadd( 23.335, -75.2978, 51.0936, 0.29 ) }
    dend_33 { pt3dadd( 23.7773, -76.4945, 51.6175, 0.15 ) }
    dend_33 { pt3dadd( 24.1583, -77.5973, 52.069, 0.37 ) }
    dend_33 { pt3dadd( 24.6583, -79.1943, 52.6555, 0.22 ) }
    dend_33 { pt3dadd( 24.9107, -80.0616, 52.9975, 0.74 ) }
    dend_33 { pt3dadd( 25.1821, -81.0045, 53.4397, 0.22 ) }
    dend_33 { pt3dadd( 25.4881, -82.028, 53.9175, 0.07 ) }
    dend_33 { pt3dadd( 25.6898, -82.6572, 54.2107, 0.07 ) }
    dend_33 { pt3dadd( 25.8697, -83.1594, 54.4728, 0.66 ) }
    dend_33 { pt3dadd( 26.8325, -85.5414, 55.7855, 0.15 ) }
    dend_33 { pt3dadd( 27.0781, -86.1097, 56.0985, 0.15 ) }
    dend_33 { pt3dadd( 27.4957, -87.0982, 56.6488, 0.52 ) }
    dend_33 { pt3dadd( 28.0122, -88.3794, 57.3155, 0.66 ) }
    dend_33 { pt3dadd( 28.7132, -90.1527, 58.1937, 0.15 ) }
    dend_33 { pt3dadd( 28.951, -90.7802, 58.4967, 0.15 ) }
    dend_33 { pt3dadd( 29.3411, -91.812, 59.0592, 0.29 ) }
    dend_33 { pt3dadd( 29.5871, -92.5317, 59.4929, 0.29 ) }
    dend_33 { pt3dadd( 29.8286, -93.3428, 60.017, 0.07 ) }
    dend_33 { pt3dadd( 29.9354, -93.708, 60.2412, 0.22 ) }
    dend_33 { pt3dadd( 30.2981, -94.9835, 61.0469, 0.22 ) }
    dend_33 { pt3dadd( 30.8142, -96.744, 62.2109, 0.59 ) }
    dend_33 { pt3dadd( 31.3449, -98.3571, 63.3216, 0.07 ) }
    dend_33 { pt3dadd( 31.5441, -98.8736, 63.6701, 0.66 ) }
    dend_33 { pt3dadd( 31.9611, -99.8211, 64.3402, 0.07 ) }
    dend_33 { pt3dadd( 32.5699, -101.041, 65.2466, 0.07 ) }
    dend_33 { pt3dadd( 32.955, -101.705, 65.7556, 0.22 ) }
    dend_33 { pt3dadd( 33.3459, -102.31, 66.2249, 0.07 ) }
    dend_33 { pt3dadd( 33.8013, -102.955, 66.8044, 0.52 ) }
    dend_33 { pt3dadd( 34.713, -104.237, 68.0888, 0.15 ) }
    dend_33 { pt3dadd( 35.4608, -105.295, 69.2288, 0.59 ) }
    dend_33 { pt3dadd( 36.0573, -106.139, 70.1677, 0.07 ) }
    dend_33 { pt3dadd( 36.3528, -106.591, 70.685, 0.29 ) }
    dend_33 { pt3dadd( 37.0115, -107.613, 71.8688, 0.07 ) }
    dend_33 { pt3dadd( 37.4899, -108.332, 72.7262, 0.07 ) }
    dend_33 { pt3dadd( 37.703, -108.637, 73.1061, 0.44 ) }
    dend_33 { pt3dadd( 38.1474, -109.247, 73.9083, 0.44 ) }
    dend_33 { pt3dadd( 38.8504, -110.229, 75.2266, 0.15 ) }
    dend_33 { pt3dadd( 39.3937, -110.982, 76.2608, 0.15 ) }
    dend_33 { pt3dadd( 39.8536, -111.556, 77.1345, 0.22 ) }
    dend_33 { pt3dadd( 40.5582, -112.397, 78.5111, 0.22 ) }
    dend_33 { pt3dadd( 40.775, -112.663, 78.9804, 0.15 ) }
    dend_33 { pt3dadd( 41.0572, -113.044, 79.6801, 0.29 ) }
    dend_33 { pt3dadd( 41.5044, -113.731, 80.9789, 0.29 ) }
    dend_33 { pt3dadd( 42.0221, -114.625, 82.566, 0.52 ) }
    dend_33 { pt3dadd( 42.2866, -115.068, 83.3254, 0.07 ) }
    dend_33 { pt3dadd( 42.7278, -115.758, 84.426, 0.07 ) }
    dend_33 { pt3dadd( 43.1364, -116.389, 85.3167, 0.22 ) }
    dend_33 { pt3dadd( 43.4993, -116.945, 86.0172, 0.22 ) }
    dend_33 { pt3dadd( 43.9681, -117.673, 86.7766, 0.22 ) }
    dend_33 { pt3dadd( 44.2127, -118.048, 87.0982, 0.22 ) }
    dend_33 { pt3dadd( 44.799, -118.913, 87.7859, 0.22 ) }
    dend_33 { pt3dadd( 45.5127, -119.983, 88.5601, 0.15 ) }
    dend_33 { pt3dadd( 46.2053, -121.136, 89.3426, 0.15 ) }
    dend_33 { pt3dadd( 46.5743, -121.886, 89.8369, 0.15 ) }
    dend_33 { pt3dadd( 46.8323, -122.541, 90.2697, 0.29 ) }
    dend_33 { pt3dadd( 47.0672, -123.286, 90.7693, 0.29 ) }
    dend_33 { pt3dadd( 47.2574, -124.238, 91.4535, 0.07 ) }
    dend_33 { pt3dadd( 47.3265, -124.803, 91.881, 0.07 ) }
    dend_33 { pt3dadd( 47.3612, -125.617, 92.4386, 0.07 ) }
    dend_33 { pt3dadd( 47.3591, -125.977, 92.6759, 0.22 ) }
    dend_33 { pt3dadd( 47.3131, -127.248, 93.4957, 0.07 ) }
    dend_33 { pt3dadd( 47.2533, -128.637, 94.4211, 0.07 ) }
    dend_33 { pt3dadd( 47.2309, -129.271, 94.8865, 0.07 ) }
    dend_33 { pt3dadd( 47.2141, -130.279, 95.6855, 0.07 ) }
    dend_33 { pt3dadd( 47.2187, -130.827, 96.1703, 0.74 ) }
    dend_33 { pt3dadd( 47.2319, -131.339, 96.6656, 0.29 ) }
    dend_33 { pt3dadd( 47.2687, -132.549, 97.9192, 0.07 ) }
    dend_33 { pt3dadd( 47.2803, -133.586, 99.0182, 0.07 ) }
    dend_33 { pt3dadd( 47.2658, -133.942, 99.3932, 0.59 ) }
    dend_33 { pt3dadd( 47.1171, -135.791, 101.429, 0.07 ) }
    dend_33 { pt3dadd( 47.0735, -136.295, 101.994, 0.07 ) }
    dend_33 { pt3dadd( 47.0118, -136.958, 102.728, 0.07 ) }
    dend_33 { pt3dadd( 46.8675, -138.196, 104.007, 0.07 ) }
    dend_33 { pt3dadd( 46.7773, -138.739, 104.533, 0.07 ) }
    dend_33 { pt3dadd( 46.4557, -140.064, 105.762, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 97/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 5.16645, 6.13683, 4.66, 1.99 ) }
    dend_24 { pt3dadd( 5.16645, 6.13683, 4.66, 1.99 ) }
    dend_24 { pt3dadd( 5.52266, 6.70327, 4.71101, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( 6.21095, 7.77591, 4.83904, 1.18 ) }
    dend_24 { pt3dadd( 7.02473, 9.06314, 5.0398, 1.11 ) }
    dend_24 { pt3dadd( 7.74616, 10.2333, 5.28212, 1.33 ) }
    dend_24 { pt3dadd( 8.40801, 11.3892, 5.53562, 1.55 ) }
    dend_24 { pt3dadd( 9.10989, 12.7188, 5.83868, 1.11 ) }
    dend_24 { pt3dadd( 9.72927, 14.0188, 6.10054, 1.11 ) }
    dend_24 { pt3dadd( 10.2602, 15.2166, 6.26805, 0.74 ) }
    dend_24 { pt3dadd( 10.6103, 16.0715, 6.29818, 0.74 ) }
    dend_24 { pt3dadd( 10.9858, 17.0289, 6.20714, 0.66 ) }
    dend_24 { pt3dadd( 11.2404, 17.6448, 6.05575, 0.66 ) }
    dend_24 { pt3dadd( 11.8567, 18.85, 5.60147, 0.96 ) }
    dend_24 { pt3dadd( 12.5239, 19.9641, 5.09279, 1.4 ) }
    dend_24 { pt3dadd( 13.1145, 20.9174, 4.64932, 1.62 ) }
    dend_24 { pt3dadd( 13.7856, 22.0272, 4.21353, 1.25 ) }
    dend_24 { pt3dadd( 14.6619, 23.6323, 3.769, 0.81 ) }
    dend_24 { pt3dadd( 15.2352, 24.9393, 3.57139, 0.81 ) }
    dend_24 { pt3dadd( 15.5381, 25.9636, 3.5542, 0.59 ) }
    dend_24 { pt3dadd( 15.7708, 27.1812, 3.63141, 0.59 ) }
    dend_24 { pt3dadd( 15.8827, 28.8664, 3.86065, 0.59 ) }
    dend_24 { pt3dadd( 15.734, 30.3492, 4.18152, 0.44 ) }
    dend_24 { pt3dadd( 15.4745, 31.2522, 4.48158, 0.29 ) }
    dend_24 { pt3dadd( 15.2321, 31.7918, 4.68432, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.61645, -2.25167, -6.09, 2.95 ) }
    dend_13 { pt3dadd( 6.61645, -2.25167, -6.09, 2.95 ) }
    dend_13 { pt3dadd( 7.80205, -2.76459, -6.82956, 1.7 ) }
    dend_13 { pt3dadd( 8.77991, -3.18141, -7.42065, 1.33 ) }
    dend_13 { pt3dadd( 9.9606, -3.71146, -8.15253, 1.33 ) }
    dend_13 { pt3dadd( 10.5506, -3.9917, -8.4984, 1.33 ) }
    dend_13 { pt3dadd( 11.5252, -4.52432, -9.02135, 1.47 ) }
    dend_13 { pt3dadd( 12.4478, -5.11174, -9.48842, 1.33 ) }
    dend_13 { pt3dadd( 13.4271, -5.8359, -9.94331, 1.77 ) }
    dend_13 { pt3dadd( 14.4973, -6.7536, -10.3676, 1.99 ) }
    dend_13 { pt3dadd( 15.6767, -7.84772, -10.7956, 1.62 ) }
    dend_13 { pt3dadd( 17.211, -9.34371, -11.2906, 1.4 ) }
    dend_13 { pt3dadd( 18.4071, -10.6149, -11.6251, 1.25 ) }
    dend_13 { pt3dadd( 19.0159, -11.3295, -11.7677, 1.62 ) }
    dend_13 { pt3dadd( 19.5588, -12.0477, -11.867, 2.14 ) }
    // Section: dend_2, id: dend_2, parent: soma_0 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.25355, -0.0191701, -0.42, 2.8 ) }
    dend_2 { pt3dadd( -7.25355, -0.0191701, -0.42, 2.8 ) }
    dend_2 { pt3dadd( -8.54527, -0.390368, 0.162819, 1.92 ) }
    dend_2 { pt3dadd( -9.32975, -0.615802, 0.516772, 1.47 ) }
    dend_2 { pt3dadd( -10.8377, -1.04915, 1.19718, 1.18 ) }
    dend_2 { pt3dadd( -12.1387, -1.42302, 1.78417, 1.18 ) }
    dend_2 { pt3dadd( -13.4272, -1.79329, 2.36554, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.47645, -5.45317, -0.0300001, 0.74 ) }
    dend_1 { pt3dadd( 1.56206, -6.60285, -0.241248, 0.52 ) }
    dend_1 { pt3dadd( 1.67565, -7.55543, -0.378878, 0.74 ) }
    dend_1 { pt3dadd( 1.77487, -8.24922, -0.460867, 0.96 ) }
    dend_1 { pt3dadd( 1.94072, -9.23241, -0.53495, 1.18 ) }
    dend_1 { pt3dadd( 2.10453, -9.98383, -0.595723, 1.18 ) }
    dend_1 { pt3dadd( 2.35094, -10.9036, -0.67303, 0.96 ) }
    dend_1 { pt3dadd( 2.73684, -11.8888, -0.745404, 0.88 ) }
    dend_1 { pt3dadd( 3.13724, -12.655, -0.808046, 0.52 ) }
    dend_1 { pt3dadd( 3.53886, -13.2378, -0.895895, 0.22 ) }
    dend_1 { pt3dadd( 4.12848, -13.9223, -1.05401, 0.22 ) }
    dend_1 { pt3dadd( 4.43324, -14.2515, -1.16363, 0.44 ) }
    dend_1 { pt3dadd( 4.91253, -14.7779, -1.37927, 0.88 ) }
    dend_1 { pt3dadd( 5.41224, -15.3446, -1.63577, 0.29 ) }
    dend_1 { pt3dadd( 5.98341, -16.1031, -1.94872, 0.59 ) }
    dend_1 { pt3dadd( 6.35946, -16.7032, -2.16265, 0.22 ) }
    dend_1 { pt3dadd( 6.78875, -17.539, -2.38324, 0.22 ) }
    dend_1 { pt3dadd( 7.03302, -18.0396, -2.48693, 0.74 ) }
    dend_1 { pt3dadd( 7.25444, -18.4942, -2.55454, 1.25 ) }
    dend_1 { pt3dadd( 7.84943, -19.6815, -2.69529, 0.44 ) }
    dend_1 { pt3dadd( 8.08088, -20.1291, -2.7411, 0.44 ) }
    dend_1 { pt3dadd( 8.41878, -20.7361, -2.79766, 0.74 ) }
    dend_1 { pt3dadd( 8.98747, -21.6829, -2.86977, 0.29 ) }
    dend_1 { pt3dadd( 9.19351, -22.0419, -2.87683, 0.22 ) }
    dend_1 { pt3dadd( 9.36208, -22.3798, -2.86744, 0.29 ) }
    dend_1 { pt3dadd( 9.6681, -23.1829, -2.812, 0.29 ) }
    dend_1 { pt3dadd( 9.788, -23.658, -2.76654, 0.74 ) }
    dend_1 { pt3dadd( 9.9051, -24.465, -2.67424, 1.25 ) }
    dend_1 { pt3dadd( 10.009, -25.8969, -2.49315, 0.66 ) }
    dend_1 { pt3dadd( 10.0569, -26.6614, -2.38728, 0.44 ) }
    dend_1 { pt3dadd( 10.121, -27.5728, -2.24686, 0.29 ) }
    dend_1 { pt3dadd( 10.1935, -28.2524, -2.1311, 0.22 ) }
    dend_1 { pt3dadd( 10.3036, -29.0174, -2.00796, 0.22 ) }
    dend_1 { pt3dadd( 10.3975, -29.5748, -1.92208, 0.44 ) }
    dend_1 { pt3dadd( 10.5059, -30.1125, -1.84181, 0.81 ) }
    dend_1 { pt3dadd( 10.5891, -30.5006, -1.77043, 1.11 ) }
    dend_1 { pt3dadd( 10.7609, -31.4172, -1.56053, 1.11 ) }
    dend_1 { pt3dadd( 10.8979, -32.3694, -1.32162, 0.81 ) }
    dend_1 { pt3dadd( 11.0341, -33.899, -0.914637, 0.44 ) }
    dend_1 { pt3dadd( 11.0651, -34.6032, -0.725333, 0.22 ) }
    dend_1 { pt3dadd( 11.0729, -35.044, -0.617339, 0.22 ) }
    dend_1 { pt3dadd( 11.0979, -36.1744, -0.390023, 0.22 ) }
    dend_1 { pt3dadd( 11.1264, -36.8178, -0.294703, 0.37 ) }
    dend_1 { pt3dadd( 11.2115, -37.5773, -0.22428, 0.59 ) }
    dend_1 { pt3dadd( 11.3192, -38.0739, -0.211444, 0.66 ) }
    dend_1 { pt3dadd( 11.5457, -38.8517, -0.22215, 0.22 ) }
    dend_1 { pt3dadd( 11.7747, -39.5856, -0.227745, 0.15 ) }
    dend_1 { pt3dadd( 11.917, -40.0501, -0.231144, 0.29 ) }
    dend_1 { pt3dadd( 12.0799, -40.7049, -0.212818, 0.59 ) }
    dend_1 { pt3dadd( 12.2214, -41.4994, -0.166031, 0.15 ) }
    dend_1 { pt3dadd( 12.2823, -41.9837, -0.12858, 0.15 ) }
    dend_1 { pt3dadd( 12.3773, -43.0684, -0.0341785, 0.22 ) }
    dend_1 { pt3dadd( 12.4261, -43.6439, 0.0340792, 0.59 ) }
    dend_1 { pt3dadd( 12.5006, -44.4081, 0.12574, 0.59 ) }
    dend_1 { pt3dadd( 12.6017, -45.1943, 0.223213, 0.22 ) }
    dend_1 { pt3dadd( 12.7801, -46.4001, 0.35976, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 12.8514, -46.8179, 0.404547, 0.07 ) }
    dend_1 { pt3dadd( 13.007, -47.7559, 0.468639, 0.07 ) }
    dend_1 { pt3dadd( 13.0512, -48.1291, 0.486732, 0.22 ) }
    dend_1 { pt3dadd( 13.0907, -48.6827, 0.498688, 0.22 ) }
    dend_1 { pt3dadd( 13.1127, -49.5626, 0.492278, 0.59 ) }
    dend_1 { pt3dadd( 13.0984, -50.5436, 0.461869, 0.59 ) }
    dend_1 { pt3dadd( 13.0688, -51.5197, 0.393922, 0.81 ) }
    dend_1 { pt3dadd( 13.0611, -52.0804, 0.32545, 0.81 ) }
    dend_1 { pt3dadd( 13.1131, -53.5194, 0.1196, 0.15 ) }
    dend_1 { pt3dadd( 13.1913, -54.2819, -0.00565521, 0.15 ) }
    dend_1 { pt3dadd( 13.3154, -54.8935, -0.116726, 0.59 ) }
    dend_1 { pt3dadd( 13.5852, -55.6747, -0.289602, 0.15 ) }
    dend_1 { pt3dadd( 13.9171, -56.3028, -0.440721, 0.15 ) }
    dend_1 { pt3dadd( 14.1759, -56.6904, -0.533364, 0.15 ) }
    dend_1 { pt3dadd( 14.5417, -57.1449, -0.621978, 0.66 ) }
    dend_1 { pt3dadd( 14.8548, -57.4983, -0.664231, 0.81 ) }
    dend_1 { pt3dadd( 15.7273, -58.4621, -0.672198, 0.22 ) }
    dend_1 { pt3dadd( 16.3554, -59.1979, -0.573347, 0.29 ) }
    dend_1 { pt3dadd( 16.9054, -59.8911, -0.412383, 0.37 ) }
    dend_1 { pt3dadd( 17.2629, -60.3324, -0.273384, 0.81 ) }
    dend_1 { pt3dadd( 17.8398, -60.9942, 0.0165175, 1.03 ) }
    dend_1 { pt3dadd( 18.464, -61.6392, 0.391276, 0.22 ) }
    dend_1 { pt3dadd( 19.0647, -62.1901, 0.804313, 0.22 ) }
    dend_1 { pt3dadd( 19.5076, -62.5559, 1.08227, 0.22 ) }
    dend_1 { pt3dadd( 19.9606, -62.8796, 1.31842, 0.74 ) }
    dend_1 { pt3dadd( 20.495, -63.2057, 1.54257, 1.03 ) }
    dend_1 { pt3dadd( 21.3714, -63.6418, 1.83341, 0.96 ) }
    dend_1 { pt3dadd( 22.1561, -63.983, 2.00025, 0.22 ) }
    dend_1 { pt3dadd( 22.9269, -64.3211, 2.12526, 0.15 ) }
    dend_1 { pt3dadd( 23.2585, -64.4869, 2.17934, 0.22 ) }
    dend_1 { pt3dadd( 23.7558, -64.7924, 2.25883, 0.22 ) }
    dend_1 { pt3dadd( 24.2239, -65.1515, 2.35345, 0.22 ) }
    dend_1 { pt3dadd( 24.9257, -65.7966, 2.55408, 0.22 ) }
    dend_1 { pt3dadd( 25.5628, -66.418, 2.78298, 0.88 ) }
    dend_1 { pt3dadd( 25.9664, -66.8397, 2.96113, 0.81 ) }
    dend_1 { pt3dadd( 26.3708, -67.2991, 3.15686, 0.52 ) }
    dend_1 { pt3dadd( 26.9125, -67.9992, 3.43696, 0.15 ) }
    dend_1 { pt3dadd( 27.1855, -68.3818, 3.56625, 0.15 ) }
    dend_1 { pt3dadd( 27.6302, -69.0168, 3.75716, 0.44 ) }
    dend_1 { pt3dadd( 28.1067, -69.6814, 3.9174, 0.22 ) }
    dend_1 { pt3dadd( 28.3551, -70.0253, 3.98693, 0.66 ) }
    dend_1 { pt3dadd( 28.8858, -70.7063, 4.12573, 1.11 ) }
    dend_1 { pt3dadd( 29.7774, -71.8229, 4.33114, 0.22 ) }
    dend_1 { pt3dadd( 30.3512, -72.5805, 4.47588, 0.22 ) }
    dend_1 { pt3dadd( 30.6686, -73.029, 4.56778, 0.74 ) }
    dend_1 { pt3dadd( 31.0793, -73.6231, 4.70436, 0.66 ) }
    dend_1 { pt3dadd( 31.6428, -74.4753, 4.90425, 0.22 ) }
    dend_1 { pt3dadd( 31.9332, -74.9429, 5.01744, 0.29 ) }
    dend_1 { pt3dadd( 32.2521, -75.5563, 5.15637, 0.52 ) }
    dend_1 { pt3dadd( 32.8114, -76.8426, 5.43865, 0.15 ) }
    dend_1 { pt3dadd( 33.0478, -77.5814, 5.59774, 0.96 ) }
    dend_1 { pt3dadd( 33.2118, -78.4316, 5.77292, 0.07 ) }
    dend_1 { pt3dadd( 33.2453, -78.8571, 5.84784, 0.07 ) }
    dend_1 { pt3dadd( 33.2515, -79.6856, 5.98514, 0.22 ) }
    dend_1 { pt3dadd( 33.2174, -80.3394, 6.07879, 0.59 ) }
    dend_1 { pt3dadd( 33.0865, -81.3016, 6.17458, 0.66 ) }
    dend_1 { pt3dadd( 32.9288, -82.1805, 6.23064, 0.22 ) }
    dend_1 { pt3dadd( 32.6796, -83.423, 6.28244, 0.22 ) }
    dend_1 { pt3dadd( 32.5822, -83.8836, 6.28072, 0.22 ) }
    dend_1 { pt3dadd( 32.4216, -84.5774, 6.2474, 0.81 ) }
    dend_1 { pt3dadd( 32.1925, -85.3823, 6.20017, 0.66 ) }
    dend_1 { pt3dadd( 31.9227, -86.2005, 6.17731, 0.15 ) }
    dend_1 { pt3dadd( 31.6683, -86.8505, 6.17895, 0.15 ) }
    dend_1 { pt3dadd( 31.2394, -87.696, 6.22127, 0.15 ) }
    dend_1 { pt3dadd( 31.0076, -88.0834, 6.25399, 0.96 ) }
    dend_1 { pt3dadd( 30.2709, -89.2024, 6.37646, 0.15 ) }
    dend_1 { pt3dadd( 29.951, -89.6933, 6.42081, 0.15 ) }
    dend_1 { pt3dadd( 29.7585, -90.0002, 6.44069, 0.66 ) }
    dend_1 { pt3dadd( 28.8954, -91.426, 6.4996, 0.29 ) }
    dend_1 { pt3dadd( 28.306, -92.4157, 6.51657, 0.15 ) }
    dend_1 { pt3dadd( 27.9577, -93.0392, 6.48124, 0.22 ) }
    dend_1 { pt3dadd( 27.41, -94.1415, 6.33458, 0.07 ) }
    dend_1 { pt3dadd( 27.2161, -94.5919, 6.26957, 0.88 ) }
    dend_1 { pt3dadd( 27.0723, -95.0138, 6.22837, 0.88 ) }
    dend_1 { pt3dadd( 26.8045, -96.0191, 6.20886, 0.15 ) }
    dend_1 { pt3dadd( 26.59, -96.877, 6.25436, 0.22 ) }
    dend_1 { pt3dadd( 26.3445, -97.7536, 6.37562, 0.66 ) }
    dend_1 { pt3dadd( 26.0495, -98.7473, 6.60797, 0.15 ) }
    dend_1 { pt3dadd( 25.7635, -99.8291, 6.94876, 0.07 ) }
    dend_1 { pt3dadd( 25.5326, -100.877, 7.36519, 0.07 ) }
    dend_1 { pt3dadd( 25.4692, -101.235, 7.53116, 0.22 ) }
    dend_1 { pt3dadd( 25.3299, -102.068, 7.98553, 0.15 ) }
    dend_1 { pt3dadd( 25.2567, -102.65, 8.33982, 0.81 ) }
    dend_1 { pt3dadd( 25.1904, -103.819, 9.16013, 0.15 ) }
    dend_1 { pt3dadd( 25.2175, -104.428, 9.64373, 0.15 ) }
    dend_1 { pt3dadd( 25.2984, -104.904, 10.0717, 0.59 ) }
    dend_1 { pt3dadd( 25.4789, -105.668, 10.8118, 0.07 ) }
    dend_1 { pt3dadd( 25.6742, -106.336, 11.5021, 0.29 ) }
    dend_1 { pt3dadd( 26.0308, -107.46, 12.6954, 0.07 ) }
    dend_1 { pt3dadd( 26.2201, -108.012, 13.317, 0.29 ) }
    dend_1 { pt3dadd( 26.4867, -108.791, 14.1994, 0.15 ) }
    dend_1 { pt3dadd( 26.5767, -109.101, 14.5513, 0.22 ) }
    dend_1 { pt3dadd( 26.6966, -109.685, 15.153, 0.07 ) }
    dend_1 { pt3dadd( 26.7393, -110.009, 15.4553, 0.22 ) }
    dend_1 { pt3dadd( 26.8446, -110.959, 16.2538, 0.07 ) }
    dend_1 { pt3dadd( 26.8909, -111.297, 16.5197, 0.29 ) }
    dend_1 { pt3dadd( 27.0899, -112.409, 17.3213, 0.07 ) }
    dend_1 { pt3dadd( 27.3013, -113.312, 17.9308, 0.96 ) }
    dend_1 { pt3dadd( 27.5676, -114.282, 18.5517, 0.07 ) }
    dend_1 { pt3dadd( 27.6546, -114.575, 18.7365, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 27.8989, -115.4, 19.2577, 0.07 ) }
    dend_1 { pt3dadd( 28.1529, -116.205, 19.7858, 0.07 ) }
    dend_1 { pt3dadd( 28.3092, -116.674, 20.0937, 0.15 ) }
    dend_1 { pt3dadd( 28.6156, -117.551, 20.675, 0.07 ) }
    dend_1 { pt3dadd( 28.8064, -118.102, 21.047, 0.81 ) }
    dend_1 { pt3dadd( 29.2418, -119.39, 21.9345, 0.07 ) }
    dend_1 { pt3dadd( 29.5746, -120.36, 22.6165, 0.07 ) }
    dend_1 { pt3dadd( 29.7164, -120.748, 22.8947, 0.22 ) }
    dend_1 { pt3dadd( 30.0551, -121.587, 23.4727, 0.44 ) }
    dend_1 { pt3dadd( 30.4539, -122.438, 23.9869, 0.07 ) }
    dend_1 { pt3dadd( 30.8886, -123.26, 24.4423, 0.07 ) }
    dend_1 { pt3dadd( 31.1278, -123.661, 24.644, 0.29 ) }
    dend_1 { pt3dadd( 31.6365, -124.448, 25.0385, 0.07 ) }
    dend_1 { pt3dadd( 31.9877, -124.956, 25.29, 0.44 ) }
    dend_1 { pt3dadd( 32.8596, -126.141, 25.915, 0.15 ) }
    dend_1 { pt3dadd( 33.0309, -126.362, 26.0238, 0.15 ) }
    dend_1 { pt3dadd( 33.3689, -126.761, 26.2278, 0.29 ) }
    dend_1 { pt3dadd( 34.0351, -127.515, 26.6312, 0.07 ) }
    dend_1 { pt3dadd( 34.2365, -127.718, 26.7442, 0.44 ) }
    dend_1 { pt3dadd( 34.7717, -128.215, 27.0909, 0.44 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 20/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.763546, 6.42183, -3.9, 0.96 ) }
    dend_0 { pt3dadd( -0.763546, 6.42183, -3.9, 0.96 ) }
    dend_0 { pt3dadd( -0.702946, 7.21416, -3.72446, 0.29 ) }
    dend_0 { pt3dadd( -0.750696, 7.89672, -3.71459, 0.29 ) }
    dend_0 { pt3dadd( -0.811396, 8.26543, -3.78591, 0.29 ) }
    dend_0 { pt3dadd( -0.899486, 8.60813, -3.91005, 0.29 ) }
    dend_0 { pt3dadd( -1.13349, 9.31916, -4.27289, 0.88 ) }
    dend_0 { pt3dadd( -1.38313, 9.99076, -4.71325, 0.88 ) }
    dend_0 { pt3dadd( -1.64608, 10.703, -5.23043, 0.29 ) }
    dend_0 { pt3dadd( -1.88339, 11.4278, -5.72567, 0.66 ) }
    dend_0 { pt3dadd( -2.04811, 12.0885, -6.10581, 0.66 ) }
    dend_0 { pt3dadd( -2.20087, 13.0541, -6.55933, 0.29 ) }
    dend_0 { pt3dadd( -2.25041, 14.0227, -6.926, 0.59 ) }
    dend_0 { pt3dadd( -2.19077, 14.9257, -7.18588, 0.88 ) }
    dend_0 { pt3dadd( -2.04701, 15.9843, -7.42806, 0.66 ) }
    dend_0 { pt3dadd( -1.84372, 17.1467, -7.66398, 0.22 ) }
    dend_0 { pt3dadd( -1.73615, 17.6301, -7.77458, 0.22 ) }
    dend_0 { pt3dadd( -1.55228, 18.2621, -7.95915, 0.22 ) }
    dend_0 { pt3dadd( -1.29458, 19.0297, -8.27884, 0.44 ) }
    dend_0 { pt3dadd( -1.02715, 19.7267, -8.70186, 0.96 ) }
    dend_0 { pt3dadd( -0.777316, 20.3051, -9.13822, 0.96 ) }
    dend_0 { pt3dadd( -0.416533, 21.1231, -9.82231, 0.22 ) }
    dend_0 { pt3dadd( -0.135186, 21.7334, -10.3204, 0.22 ) }
    dend_0 { pt3dadd( -0.0222202, 21.9745, -10.505, 0.37 ) }
    dend_0 { pt3dadd( 0.250547, 22.5533, -10.9426, 0.52 ) }
    dend_0 { pt3dadd( 0.447703, 22.9909, -11.2733, 0.29 ) }
    dend_0 { pt3dadd( 0.695689, 23.6865, -11.8084, 0.22 ) }
    dend_0 { pt3dadd( 0.855345, 24.301, -12.2761, 0.37 ) }
    dend_0 { pt3dadd( 0.98059, 24.9133, -12.7113, 0.37 ) }
    dend_0 { pt3dadd( 1.10926, 25.5217, -13.1293, 0.52 ) }
    dend_0 { pt3dadd( 1.28806, 26.3061, -13.6887, 0.88 ) }
    dend_0 { pt3dadd( 1.46443, 26.9915, -14.1911, 0.88 ) }
    dend_0 { pt3dadd( 1.74048, 27.899, -14.8445, 0.29 ) }
    dend_0 { pt3dadd( 1.95537, 28.5284, -15.2909, 0.29 ) }
    dend_0 { pt3dadd( 2.20904, 29.184, -15.7399, 0.15 ) }
    dend_0 { pt3dadd( 2.5169, 29.9477, -16.2481, 0.22 ) }
    dend_0 { pt3dadd( 2.77579, 30.5827, -16.6702, 0.96 ) }
    dend_0 { pt3dadd( 3.16299, 31.5206, -17.3013, 0.22 ) }
    dend_0 { pt3dadd( 3.30389, 31.9049, -17.5548, 0.22 ) }
    dend_0 { pt3dadd( 3.4107, 32.2763, -17.7825, 0.15 ) }
    dend_0 { pt3dadd( 3.51964, 32.8412, -18.0653, 0.15 ) }
    dend_0 { pt3dadd( 3.55635, 33.1574, -18.1855, 0.15 ) }
    dend_0 { pt3dadd( 3.61473, 34.0806, -18.4769, 0.15 ) }
    dend_0 { pt3dadd( 3.65361, 34.7686, -18.6444, 0.66 ) }
    dend_0 { pt3dadd( 3.69058, 35.2559, -18.7413, 0.81 ) }
    dend_0 { pt3dadd( 3.74504, 36.2036, -18.9025, 0.15 ) }
    dend_0 { pt3dadd( 3.76137, 36.9119, -19.0072, 0.22 ) }
    dend_0 { pt3dadd( 3.71814, 37.5452, -19.1021, 0.66 ) }
    dend_0 { pt3dadd( 3.61128, 38.4124, -19.2195, 0.81 ) }
    dend_0 { pt3dadd( 3.54471, 38.9156, -19.2901, 0.52 ) }
    dend_0 { pt3dadd( 3.41135, 39.9733, -19.4393, 0.15 ) }
    dend_0 { pt3dadd( 3.28938, 40.6312, -19.5295, 0.22 ) }
    dend_0 { pt3dadd( 3.07638, 41.3843, -19.6664, 0.29 ) }
    dend_0 { pt3dadd( 2.08702, 50.2986, -22.9789, 0.29 ) }
    dend_0 { pt3dadd( -0.400475, 59.3397, -24.7786, 0.29 ) }
    dend_0 { pt3dadd( -3.3619, 68.3117, -26.2061, 0.29 ) }
    dend_0 { pt3dadd( -6.03148, 77.3399, -27.8055, 0.29 ) }
    dend_0 { pt3dadd( -8.88763, 86.3931, -28.8196, 0.29 ) }
    dend_0 { pt3dadd( -10.6445, 95.3728, -31.5705, 0.29 ) }
    dend_0 { pt3dadd( -11.0236, 104.825, -32.4985, 0.29 ) }
    dend_0 { pt3dadd( -9.6346, 114.204, -31.7221, 0.29 ) }
    dend_0 { pt3dadd( -7.59643, 123.488, -32.2985, 0.29 ) }
    dend_0 { pt3dadd( -3.5022, 132.156, -32.355, 0.29 ) }
    dend_0 { pt3dadd( 1.47142, 140.367, -31.6157, 0.29 ) }
    dend_0 { pt3dadd( 6.36573, 148.611, -32.4751, 0.29 ) }
    dend_0 { pt3dadd( 12.203, 156.319, -32.7927, 0.29 ) }
    dend_0 { pt3dadd( 19.5512, 162.761, -32.9104, 0.29 ) }
    dend_0 { pt3dadd( 26.1066, 169.932, -32.6733, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.61792, 5.513, 0.0, 0.779143 ) }
    axon_0 { pt3dadd( 17.3185, 14.8989, 0.0, 0.779143 ) }
    axon_0 { pt3dadd( 29.0192, 24.2848, 0.0, 0.779143 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 91/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.39076, 11.5041, 22.4212, 0.15 ) }
    dend_36 { pt3dadd( -1.74992, 12.757, 23.2363, 0.15 ) }
    dend_36 { pt3dadd( -1.93229, 13.787, 23.9089, 0.15 ) }
    dend_36 { pt3dadd( -2.14705, 14.9359, 24.612, 0.15 ) }
    dend_36 { pt3dadd( -2.31887, 15.7266, 25.0641, 0.15 ) }
    dend_36 { pt3dadd( -2.38137, 15.9915, 25.2042, 0.37 ) }
    dend_36 { pt3dadd( -2.55001, 16.6805, 25.5402, 0.88 ) }
    dend_36 { pt3dadd( -2.77092, 17.4541, 25.8132, 0.22 ) }
    dend_36 { pt3dadd( -3.15039, 18.4509, 26.0909, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -3.51467, 19.1963, 26.2939, 0.22 ) }
    dend_36 { pt3dadd( -3.81474, 19.6865, 26.4138, 0.29 ) }
    dend_36 { pt3dadd( -4.31796, 20.3963, 26.5734, 0.66 ) }
    dend_36 { pt3dadd( -5.25711, 21.5796, 26.7982, 0.81 ) }
    dend_36 { pt3dadd( -6.06825, 22.5475, 26.9989, 0.22 ) }
    dend_36 { pt3dadd( -6.80734, 23.4269, 27.2199, 0.22 ) }
    dend_36 { pt3dadd( -7.26569, 23.9554, 27.3688, 0.81 ) }
    dend_36 { pt3dadd( -7.82075, 24.5855, 27.5579, 0.81 ) }
    dend_36 { pt3dadd( -8.58842, 25.5018, 27.8558, 0.22 ) }
    dend_36 { pt3dadd( -9.26001, 26.4145, 28.1665, 0.44 ) }
    dend_36 { pt3dadd( -9.89405, 27.4186, 28.5264, 0.81 ) }
    dend_36 { pt3dadd( -10.2161, 28.01, 28.758, 0.81 ) }
    dend_36 { pt3dadd( -10.7144, 29.0009, 29.1833, 0.37 ) }
    dend_36 { pt3dadd( -11.1311, 29.8736, 29.5675, 0.37 ) }
    dend_36 { pt3dadd( -11.4195, 30.4817, 29.8124, 0.37 ) }
    dend_36 { pt3dadd( -11.8801, 31.3769, 30.1332, 0.37 ) }
    dend_36 { pt3dadd( -12.2775, 32.1078, 30.381, 0.59 ) }
    dend_36 { pt3dadd( -12.7662, 33.0079, 30.6774, 0.74 ) }
    dend_36 { pt3dadd( -13.2116, 33.8715, 30.9364, 0.88 ) }
    dend_36 { pt3dadd( -13.7511, 34.9778, 31.2303, 0.22 ) }
    dend_36 { pt3dadd( -14.2079, 35.9727, 31.4854, 0.22 ) }
    dend_36 { pt3dadd( -14.5183, 36.7004, 31.6347, 0.22 ) }
    dend_36 { pt3dadd( -14.9174, 37.7436, 31.8583, 0.44 ) }
    dend_36 { pt3dadd( -15.441, 39.3173, 32.2546, 0.52 ) }
    dend_36 { pt3dadd( -15.7844, 40.42, 32.5734, 0.74 ) }
    dend_36 { pt3dadd( -16.1439, 41.6757, 32.9575, 0.37 ) }
    dend_36 { pt3dadd( -16.5881, 43.3204, 33.4555, 0.22 ) }
    dend_36 { pt3dadd( -16.8847, 44.3367, 33.7794, 0.22 ) }
    dend_36 { pt3dadd( -17.2722, 45.4839, 34.1595, 0.81 ) }
    dend_36 { pt3dadd( -17.6923, 46.5659, 34.5641, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 30/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.39076, 11.5041, 22.4212, 0.52 ) }
    dend_35 { pt3dadd( 0.0577928, 11.5773, 24.0166, 0.52 ) }
    dend_35 { pt3dadd( 1.25557, 12.0091, 25.3815, 0.52 ) }
    dend_35 { pt3dadd( 2.05296, 12.4323, 26.2454, 0.37 ) }
    dend_35 { pt3dadd( 2.60356, 12.8383, 26.8032, 0.22 ) }
    dend_35 { pt3dadd( 3.19954, 13.3111, 27.4066, 0.22 ) }
    dend_35 { pt3dadd( 4.03329, 13.9749, 28.215, 0.44 ) }
    dend_35 { pt3dadd( 5.00389, 14.9433, 29.1058, 0.44 ) }
    dend_35 { pt3dadd( 5.45248, 15.4269, 29.5036, 0.44 ) }
    dend_35 { pt3dadd( 6.30584, 16.4074, 30.2737, 0.22 ) }
    dend_35 { pt3dadd( 6.86011, 17.0247, 30.7846, 0.22 ) }
    dend_35 { pt3dadd( 7.24954, 17.4492, 31.1318, 0.22 ) }
    dend_35 { pt3dadd( 7.76214, 18.0458, 31.6322, 0.22 ) }
    dend_35 { pt3dadd( 8.09702, 18.5055, 31.9909, 0.22 ) }
    dend_35 { pt3dadd( 8.75208, 19.503, 32.7858, 0.88 ) }
    dend_35 { pt3dadd( 9.45075, 20.6046, 33.7342, 0.15 ) }
    dend_35 { pt3dadd( 9.87436, 21.2691, 34.3026, 0.37 ) }
    dend_35 { pt3dadd( 10.2679, 21.8481, 34.857, 0.15 ) }
    dend_35 { pt3dadd( 10.7116, 22.4392, 35.5126, 0.29 ) }
    dend_35 { pt3dadd( 11.2681, 23.0866, 36.3635, 0.15 ) }
    dend_35 { pt3dadd( 11.8665, 23.6793, 37.3025, 0.15 ) }
    dend_35 { pt3dadd( 12.3022, 24.0765, 37.9601, 0.66 ) }
    dend_35 { pt3dadd( 13.2845, 24.9517, 39.3836, 0.29 ) }
    dend_35 { pt3dadd( 13.9589, 25.5459, 40.3648, 0.29 ) }
    dend_35 { pt3dadd( 14.2846, 25.8581, 40.8638, 0.29 ) }
    dend_35 { pt3dadd( 14.6926, 26.3329, 41.5875, 0.29 ) }
    dend_35 { pt3dadd( 15.0323, 26.8174, 42.2762, 0.07 ) }
    dend_35 { pt3dadd( 15.3737, 27.379, 43.046, 0.59 ) }
    dend_35 { pt3dadd( 16.0623, 28.614, 44.6541, 0.22 ) }
    dend_35 { pt3dadd( 16.5655, 29.4984, 45.8529, 0.66 ) }
    dend_35 { pt3dadd( 17.3655, 30.8039, 47.7441, 0.15 ) }
    dend_35 { pt3dadd( 17.7379, 31.3607, 48.5732, 0.15 ) }
    dend_35 { pt3dadd( 18.0388, 31.753, 49.2027, 0.15 ) }
    dend_35 { pt3dadd( 18.4748, 32.2417, 50.0592, 0.59 ) }
    dend_35 { pt3dadd( 19.331, 33.0827, 51.609, 0.22 ) }
    dend_35 { pt3dadd( 19.9975, 33.6078, 52.7361, 0.81 ) }
    dend_35 { pt3dadd( 20.7293, 34.0584, 53.8961, 0.15 ) }
    dend_35 { pt3dadd( 21.6821, 34.5405, 55.4519, 0.37 ) }
    dend_35 { pt3dadd( 22.2931, 34.791, 56.4694, 0.37 ) }
    dend_35 { pt3dadd( 23.1487, 35.088, 57.9333, 0.22 ) }
    dend_35 { pt3dadd( 23.7448, 35.2951, 58.9752, 0.22 ) }
    dend_35 { pt3dadd( 24.4087, 35.5387, 60.1707, 0.59 ) }
    dend_35 { pt3dadd( 25.2387, 35.8643, 61.627, 0.22 ) }
    dend_35 { pt3dadd( 25.882, 36.1727, 62.6355, 0.74 ) }
    dend_35 { pt3dadd( 27.1828, 36.8969, 64.4122, 0.07 ) }
    dend_35 { pt3dadd( 28.0865, 37.4688, 65.5108, 0.07 ) }
    dend_35 { pt3dadd( 28.5909, 37.8405, 66.0314, 0.07 ) }
    dend_35 { pt3dadd( 29.2494, 38.3412, 66.588, 0.22 ) }
    dend_35 { pt3dadd( 30.3854, 39.1887, 67.3788, 0.07 ) }
    dend_35 { pt3dadd( 31.0774, 39.6994, 67.8006, 0.22 ) }
    dend_35 { pt3dadd( 32.4149, 40.6578, 68.5095, 0.07 ) }
    dend_35 { pt3dadd( 33.8539, 41.6565, 69.2212, 0.22 ) }
    dend_35 { pt3dadd( 35.5082, 42.7786, 70.0357, 0.07 ) }
    dend_35 { pt3dadd( 36.0257, 43.1542, 70.2803, 0.07 ) }
    dend_35 { pt3dadd( 36.9759, 43.9061, 70.7045, 0.07 ) }
    dend_35 { pt3dadd( 37.2383, 44.1281, 70.8097, 0.22 ) }
    dend_35 { pt3dadd( 38.1213, 44.9375, 71.107, 0.29 ) }
    dend_35 { pt3dadd( 39.5493, 46.4434, 71.5588, 0.07 ) }
    dend_35 { pt3dadd( 40.7186, 47.8432, 71.938, 0.07 ) }
    dend_35 { pt3dadd( 41.6392, 49.0139, 72.3274, 0.15 ) }
    dend_35 { pt3dadd( 42.122, 49.674, 72.6469, 0.29 ) }
    dend_35 { pt3dadd( 42.7313, 50.554, 73.2203, 0.29 ) }
    dend_35 { pt3dadd( 43.4777, 51.7038, 74.1544, 0.07 ) }
    dend_35 { pt3dadd( 44.1181, 52.7058, 75.1836, 0.22 ) }
    dend_35 { pt3dadd( 44.811, 53.6876, 76.4793, 0.22 ) }
    dend_35 { pt3dadd( 45.9751, 55.2412, 78.8044, 0.44 ) }
    dend_35 { pt3dadd( 46.401, 55.7971, 79.7282, 0.44 ) }
    dend_35 { pt3dadd( 46.8331, 56.3157, 80.7219, 0.15 ) }
    dend_35 { pt3dadd( 47.4656, 56.98, 82.2052, 0.15 ) }
    dend_35 { pt3dadd( 48.1013, 57.5904, 83.6447, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_35 { pt3dadd( 48.432, 57.8604, 84.247, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 15.2321, 31.7918, 4.68432, 0.44 ) }
    dend_30 { pt3dadd( 15.6246, 33.0038, 3.55645, 0.44 ) }
    dend_30 { pt3dadd( 15.9315, 33.8803, 2.82558, 0.44 ) }
    dend_30 { pt3dadd( 16.3069, 35.0059, 2.01622, 0.44 ) }
    dend_30 { pt3dadd( 16.4542, 35.5229, 1.66778, 0.74 ) }
    dend_30 { pt3dadd( 16.599, 36.1729, 1.25621, 1.33 ) }
    dend_30 { pt3dadd( 16.7868, 37.4252, 0.518045, 0.66 ) }
    dend_30 { pt3dadd( 16.8065, 37.8999, 0.302512, 0.88 ) }
    dend_30 { pt3dadd( 16.7001, 38.8768, -0.0781635, 0.29 ) }
    dend_30 { pt3dadd( 16.5312, 39.5439, -0.310022, 0.29 ) }
    dend_30 { pt3dadd( 16.3235, 40.1863, -0.515038, 0.44 ) }
    dend_30 { pt3dadd( 16.0017, 41.0235, -0.745274, 0.52 ) }
    dend_30 { pt3dadd( 15.5035, 42.2359, -1.0068, 0.66 ) }
    dend_30 { pt3dadd( 15.2177, 42.9726, -1.15831, 0.22 ) }
    dend_30 { pt3dadd( 15.033, 43.5149, -1.26289, 0.22 ) }
    dend_30 { pt3dadd( 14.7817, 44.3344, -1.4453, 0.29 ) }
    dend_30 { pt3dadd( 14.599, 44.9165, -1.62343, 0.29 ) }
    dend_30 { pt3dadd( 14.3117, 45.7402, -1.95044, 0.66 ) }
    dend_30 { pt3dadd( 14.048, 46.3763, -2.26115, 0.81 ) }
    dend_30 { pt3dadd( 13.6427, 47.2225, -2.74687, 0.88 ) }
    dend_30 { pt3dadd( 12.9052, 48.5768, -3.58987, 0.59 ) }
    dend_30 { pt3dadd( 12.4403, 49.3303, -4.10539, 0.37 ) }
    dend_30 { pt3dadd( 12.1818, 49.7248, -4.40585, 0.22 ) }
    dend_30 { pt3dadd( 11.757, 50.3215, -4.90945, 0.22 ) }
    dend_30 { pt3dadd( 11.4142, 50.7862, -5.32328, 0.37 ) }
    dend_30 { pt3dadd( 10.9468, 51.3847, -5.88335, 0.37 ) }
    dend_30 { pt3dadd( 10.378, 52.1023, -6.55815, 0.66 ) }
    dend_30 { pt3dadd( 9.80942, 52.798, -7.21499, 1.11 ) }
    dend_30 { pt3dadd( 9.16643, 53.5299, -7.96576, 0.29 ) }
    dend_30 { pt3dadd( 8.72144, 53.9938, -8.53458, 0.29 ) }
    dend_30 { pt3dadd( 8.5427, 54.1757, -8.79756, 0.29 ) }
    dend_30 { pt3dadd( 8.28789, 54.4577, -9.23104, 0.29 ) }
    dend_30 { pt3dadd( 8.21402, 54.6285, -9.41328, 0.29 ) }
    dend_30 { pt3dadd( 8.21551, 54.9998, -9.62728, 0.29 ) }
    dend_30 { pt3dadd( 8.33682, 55.7079, -9.91238, 0.29 ) }
    dend_30 { pt3dadd( 8.54421, 56.6803, -10.2613, 0.29 ) }
    dend_30 { pt3dadd( 8.73043, 57.5325, -10.5481, 0.74 ) }
    dend_30 { pt3dadd( 8.97529, 58.8337, -10.9551, 1.25 ) }
    dend_30 { pt3dadd( 9.14342, 60.0838, -11.3146, 0.81 ) }
    dend_30 { pt3dadd( 9.23149, 61.3491, -11.6436, 0.29 ) }
    dend_30 { pt3dadd( 9.23981, 62.3012, -11.8642, 0.29 ) }
    dend_30 { pt3dadd( 9.22171, 63.2893, -12.0827, 0.52 ) }
    dend_30 { pt3dadd( 9.19839, 64.5404, -12.2948, 0.66 ) }
    dend_30 { pt3dadd( 9.15165, 65.7293, -12.428, 0.22 ) }
    dend_30 { pt3dadd( 9.06439, 66.5996, -12.4818, 0.22 ) }
    dend_30 { pt3dadd( 8.88541, 67.5711, -12.4886, 0.37 ) }
    dend_30 { pt3dadd( 8.62948, 68.6255, -12.4567, 0.96 ) }
    dend_30 { pt3dadd( 8.19147, 70.2128, -12.3705, 0.22 ) }
    dend_30 { pt3dadd( 8.01567, 70.8829, -12.3241, 0.37 ) }
    dend_30 { pt3dadd( 7.87399, 71.5113, -12.3019, 0.52 ) }
    dend_30 { pt3dadd( 7.65506, 72.4677, -12.3356, 0.22 ) }
    dend_30 { pt3dadd( 7.42124, 73.2879, -12.4255, 0.22 ) }
    dend_30 { pt3dadd( 7.25244, 73.7652, -12.5356, 0.81 ) }
    dend_30 { pt3dadd( 6.98275, 74.5588, -12.8178, 0.81 ) }
    dend_30 { pt3dadd( 6.72709, 75.5808, -13.1893, 0.22 ) }
    dend_30 { pt3dadd( 6.61138, 76.3664, -13.4688, 0.44 ) }
    dend_30 { pt3dadd( 6.5661, 76.7822, -13.612, 0.74 ) }
    dend_30 { pt3dadd( 6.42059, 77.6976, -13.9263, 0.22 ) }
    dend_30 { pt3dadd( 6.34111, 78.1125, -14.0655, 0.22 ) }
    dend_30 { pt3dadd( 6.20413, 78.8083, -14.2685, 0.29 ) }
    dend_30 { pt3dadd( 6.13759, 79.4514, -14.4182, 0.29 ) }
    dend_30 { pt3dadd( 6.13001, 80.1115, -14.5336, 0.22 ) }
    dend_30 { pt3dadd( 6.14676, 80.7927, -14.6394, 0.22 ) }
    dend_30 { pt3dadd( 6.14883, 81.6328, -14.7682, 0.59 ) }
    dend_30 { pt3dadd( 6.10782, 82.533, -14.9169, 0.88 ) }
    dend_30 { pt3dadd( 6.01078, 83.7863, -15.1855, 0.81 ) }
    dend_30 { pt3dadd( 5.90442, 85.1355, -15.5561, 0.37 ) }
    dend_30 { pt3dadd( 5.87846, 85.8208, -15.7599, 0.22 ) }
    dend_30 { pt3dadd( 5.88302, 86.6144, -16.0053, 0.22 ) }
    dend_30 { pt3dadd( 5.89312, 87.1832, -16.2156, 0.22 ) }
    dend_30 { pt3dadd( 5.9111, 88.0648, -16.6449, 0.22 ) }
    dend_30 { pt3dadd( 5.88268, 88.7702, -17.074, 0.22 ) }
    dend_30 { pt3dadd( 5.82034, 89.4044, -17.5179, 0.44 ) }
    dend_30 { pt3dadd( 5.7344, 90.0768, -17.9699, 0.88 ) }
    dend_30 { pt3dadd( 5.63747, 90.8136, -18.4019, 0.66 ) }
    dend_30 { pt3dadd( 5.44915, 91.8303, -18.8922, 0.22 ) }
    dend_30 { pt3dadd( 5.27387, 92.6273, -19.189, 0.15 ) }
    dend_30 { pt3dadd( 5.12599, 93.3614, -19.4152, 0.22 ) }
    dend_30 { pt3dadd( 4.92841, 94.2209, -19.6873, 0.29 ) }
    dend_30 { pt3dadd( 4.7517, 94.9529, -19.877, 0.74 ) }
    dend_30 { pt3dadd( 4.59494, 95.8675, -20.0131, 0.81 ) }
    dend_30 { pt3dadd( 4.56194, 96.3153, -20.03, 0.52 ) }
    dend_30 { pt3dadd( 4.61798, 97.262, -20.046, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 84/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.2321, 31.7918, 4.68432, 0.29 ) }
    dend_25 { pt3dadd( 15.3905, 31.8662, 4.64841, 0.29 ) }
    dend_25 { pt3dadd( 16.1072, 32.2958, 4.44572, 0.29 ) }
    dend_25 { pt3dadd( 16.56, 32.6502, 4.31805, 0.29 ) }
    dend_25 { pt3dadd( 17.0189, 33.0777, 4.1681, 0.29 ) }
    dend_25 { pt3dadd( 17.2395, 33.3109, 4.10834, 0.29 ) }
    dend_25 { pt3dadd( 17.7799, 33.9594, 3.94801, 0.59 ) }
    dend_25 { pt3dadd( 18.2744, 34.7015, 3.76747, 1.11 ) }
    dend_25 { pt3dadd( 18.8159, 35.7556, 3.53127, 0.74 ) }
    dend_25 { pt3dadd( 19.2331, 36.8302, 3.29401, 0.74 ) }
    dend_25 { pt3dadd( 19.5709, 38.0462, 3.08057, 0.74 ) }
    dend_25 { pt3dadd( 19.8116, 39.3342, 2.93199, 0.52 ) }
    dend_25 { pt3dadd( 19.9449, 40.5854, 2.91403, 0.74 ) }
    dend_25 { pt3dadd( 20.0146, 41.4927, 2.98327, 0.52 ) }
    dend_25 { pt3dadd( 20.0813, 42.1973, 3.10784, 0.88 ) }
    dend_25 { pt3dadd( 20.2673, 43.2863, 3.42464, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( 20.5124, 44.0985, 3.74145, 0.52 ) }
    dend_25 { pt3dadd( 21.0759, 45.2687, 4.32183, 0.44 ) }
    dend_25 { pt3dadd( 21.4934, 45.9008, 4.65948, 0.44 ) }
    dend_25 { pt3dadd( 22.3051, 46.9762, 5.13126, 0.66 ) }
    dend_25 { pt3dadd( 22.8603, 47.629, 5.39436, 0.44 ) }
    dend_25 { pt3dadd( 23.4681, 48.2736, 5.59623, 0.74 ) }
    dend_25 { pt3dadd( 24.0681, 48.8778, 5.74214, 0.88 ) }
    dend_25 { pt3dadd( 24.6432, 49.4888, 5.82996, 1.03 ) }
    dend_25 { pt3dadd( 25.472, 50.6307, 5.96389, 1.18 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 19.5588, -12.0477, -11.867, 0.59 ) }
    dend_15 { pt3dadd( 21.0364, -12.4053, -11.7573, 0.59 ) }
    dend_15 { pt3dadd( 22.0237, -12.2232, -12.0631, 0.59 ) }
    dend_15 { pt3dadd( 22.7977, -11.8409, -12.5395, 0.44 ) }
    dend_15 { pt3dadd( 23.4347, -11.452, -13.0525, 0.44 ) }
    dend_15 { pt3dadd( 24.4113, -10.7896, -13.8262, 0.81 ) }
    dend_15 { pt3dadd( 25.2629, -10.2121, -14.4664, 0.81 ) }
    dend_15 { pt3dadd( 26.0497, -9.59549, -15.0833, 1.11 ) }
    dend_15 { pt3dadd( 26.9161, -8.92481, -15.7131, 0.88 ) }
    dend_15 { pt3dadd( 27.6232, -8.43342, -16.1588, 1.03 ) }
    dend_15 { pt3dadd( 28.7617, -7.81898, -16.6811, 0.37 ) }
    dend_15 { pt3dadd( 29.2298, -7.62917, -16.7878, 0.37 ) }
    dend_15 { pt3dadd( 30.0623, -7.41231, -16.7883, 0.74 ) }
    dend_15 { pt3dadd( 31.1391, -7.3197, -16.55, 1.03 ) }
    dend_15 { pt3dadd( 32.3818, -7.38282, -16.0111, 1.25 ) }
    dend_15 { pt3dadd( 32.788, -7.44822, -15.772, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 25/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.5588, -12.0477, -11.867, 0.29 ) }
    dend_14 { pt3dadd( 19.2439, -13.1728, -11.1163, 0.29 ) }
    dend_14 { pt3dadd( 18.9424, -13.9207, -10.6375, 0.22 ) }
    dend_14 { pt3dadd( 18.7139, -14.233, -10.4147, 0.22 ) }
    dend_14 { pt3dadd( 18.2374, -14.6869, -10.0223, 0.22 ) }
    dend_14 { pt3dadd( 17.9213, -14.978, -9.75068, 0.22 ) }
    dend_14 { pt3dadd( 17.7396, -15.1684, -9.57373, 0.22 ) }
    dend_14 { pt3dadd( 17.2212, -15.7852, -9.00648, 0.96 ) }
    dend_14 { pt3dadd( 16.6219, -16.6388, -8.29114, 0.59 ) }
    dend_14 { pt3dadd( 16.2442, -17.3451, -7.70066, 0.22 ) }
    dend_14 { pt3dadd( 15.972, -18.0076, -7.16246, 0.22 ) }
    dend_14 { pt3dadd( 15.7679, -18.7812, -6.53486, 0.22 ) }
    dend_14 { pt3dadd( 15.707, -19.4249, -6.02095, 1.03 ) }
    dend_14 { pt3dadd( 15.7598, -20.0467, -5.52528, 1.03 ) }
    dend_14 { pt3dadd( 15.9553, -21.0586, -4.75807, 0.15 ) }
    dend_14 { pt3dadd( 16.032, -21.4359, -4.47809, 0.74 ) }
    dend_14 { pt3dadd( 16.1272, -22.1179, -3.95597, 0.37 ) }
    dend_14 { pt3dadd( 16.1626, -22.7186, -3.49096, 0.44 ) }
    dend_14 { pt3dadd( 16.1587, -23.6263, -2.8071, 0.22 ) }
    dend_14 { pt3dadd( 16.1407, -24.0309, -2.51593, 0.29 ) }
    dend_14 { pt3dadd( 16.0885, -24.9104, -1.91688, 0.22 ) }
    dend_14 { pt3dadd( 16.0609, -25.6839, -1.38649, 0.74 ) }
    dend_14 { pt3dadd( 16.0633, -26.1089, -1.09936, 0.74 ) }
    dend_14 { pt3dadd( 16.0921, -27.2893, -0.281322, 0.37 ) }
    dend_14 { pt3dadd( 16.1284, -28.1756, 0.342283, 0.22 ) }
    dend_14 { pt3dadd( 16.1684, -28.8658, 0.835446, 0.15 ) }
    dend_14 { pt3dadd( 16.2364, -29.5541, 1.3244, 0.74 ) }
    dend_14 { pt3dadd( 16.3515, -30.5351, 2.02215, 0.22 ) }
    dend_14 { pt3dadd( 16.4129, -31.2527, 2.5243, 0.74 ) }
    dend_14 { pt3dadd( 16.4307, -31.843, 2.91531, 0.88 ) }
    dend_14 { pt3dadd( 16.3585, -32.9256, 3.52421, 0.22 ) }
    dend_14 { pt3dadd( 16.2193, -33.741, 3.89846, 0.22 ) }
    dend_14 { pt3dadd( 16.0882, -34.2253, 4.07679, 0.29 ) }
    dend_14 { pt3dadd( 15.8143, -35.0408, 4.31924, 0.81 ) }
    dend_14 { pt3dadd( 15.602, -35.6813, 4.47144, 0.44 ) }
    dend_14 { pt3dadd( 15.2457, -36.8517, 4.68034, 0.52 ) }
    dend_14 { pt3dadd( 15.016, -37.7118, 4.78036, 0.22 ) }
    dend_14 { pt3dadd( 14.7672, -38.711, 4.849, 0.74 ) }
    dend_14 { pt3dadd( 14.6194, -39.4282, 4.87501, 0.15 ) }
    dend_14 { pt3dadd( 14.5185, -40.0267, 4.88774, 0.15 ) }
    dend_14 { pt3dadd( 14.3854, -40.7833, 4.9287, 0.15 ) }
    dend_14 { pt3dadd( 14.2992, -41.2779, 4.99963, 0.81 ) }
    dend_14 { pt3dadd( 14.1822, -41.8544, 5.12025, 0.52 ) }
    dend_14 { pt3dadd( 13.928, -43.0521, 5.43939, 0.15 ) }
    dend_14 { pt3dadd( 13.8011, -43.6211, 5.6133, 0.37 ) }
    dend_14 { pt3dadd( 13.5974, -44.6831, 5.97049, 0.22 ) }
    dend_14 { pt3dadd( 13.4348, -45.8062, 6.37455, 0.37 ) }
    dend_14 { pt3dadd( 13.3746, -46.4711, 6.60841, 0.22 ) }
    dend_14 { pt3dadd( 13.3638, -47.2828, 6.87298, 0.74 ) }
    dend_14 { pt3dadd( 13.4048, -47.9666, 7.09705, 0.29 ) }
    dend_14 { pt3dadd( 13.5545, -49.2424, 7.49519, 0.07 ) }
    dend_14 { pt3dadd( 13.6395, -49.7166, 7.63243, 0.29 ) }
    dend_14 { pt3dadd( 13.7867, -50.4556, 7.85362, 0.07 ) }
    dend_14 { pt3dadd( 13.9345, -51.2584, 8.09461, 0.22 ) }
    dend_14 { pt3dadd( 14.1062, -52.3517, 8.40172, 0.22 ) }
    dend_14 { pt3dadd( 14.2102, -53.1241, 8.5777, 0.96 ) }
    dend_14 { pt3dadd( 14.3547, -54.4808, 8.77982, 0.22 ) }
    dend_14 { pt3dadd( 14.4544, -55.5741, 8.86285, 0.15 ) }
    dend_14 { pt3dadd( 14.5207, -56.2911, 8.86428, 0.29 ) }
    dend_14 { pt3dadd( 14.6275, -57.3735, 8.78574, 0.66 ) }
    dend_14 { pt3dadd( 14.7894, -58.8572, 8.5459, 0.22 ) }
    dend_14 { pt3dadd( 14.878, -59.7705, 8.35063, 0.15 ) }
    dend_14 { pt3dadd( 14.9542, -60.7291, 8.11932, 0.15 ) }
    dend_14 { pt3dadd( 14.9864, -61.45, 7.95073, 0.74 ) }
    dend_14 { pt3dadd( 14.9923, -62.2545, 7.79549, 0.88 ) }
    dend_14 { pt3dadd( 14.9685, -63.1612, 7.67881, 0.15 ) }
    dend_14 { pt3dadd( 14.9255, -63.8438, 7.63696, 0.22 ) }
    dend_14 { pt3dadd( 14.8359, -64.7244, 7.64507, 0.07 ) }
    dend_14 { pt3dadd( 14.6432, -65.86, 7.70348, 0.22 ) }
    dend_14 { pt3dadd( 14.4339, -66.7356, 7.79269, 0.15 ) }
    dend_14 { pt3dadd( 14.2695, -67.3218, 7.87232, 0.15 ) }
    dend_14 { pt3dadd( 14.1177, -67.8324, 7.95459, 0.15 ) }
    dend_14 { pt3dadd( 13.9537, -68.4728, 8.06668, 0.88 ) }
    dend_14 { pt3dadd( 13.8475, -68.957, 8.15085, 0.88 ) }
    dend_14 { pt3dadd( 13.5772, -70.3165, 8.38419, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 13.4216, -71.009, 8.505, 0.74 ) }
    dend_14 { pt3dadd( 13.25, -71.7602, 8.62803, 0.22 ) }
    dend_14 { pt3dadd( 13.0213, -72.8504, 8.82163, 0.15 ) }
    dend_14 { pt3dadd( 12.8989, -73.5356, 8.95329, 0.29 ) }
    dend_14 { pt3dadd( 12.7786, -74.3347, 9.12091, 0.81 ) }
    dend_14 { pt3dadd( 12.6375, -75.3023, 9.33294, 0.22 ) }
    dend_14 { pt3dadd( 12.4885, -76.2489, 9.54475, 0.15 ) }
    dend_14 { pt3dadd( 12.3908, -76.8084, 9.66663, 0.15 ) }
    dend_14 { pt3dadd( 12.2495, -77.4974, 9.78677, 0.74 ) }
    dend_14 { pt3dadd( 11.9771, -78.7736, 9.91009, 0.15 ) }
    dend_14 { pt3dadd( 11.8591, -79.3155, 9.92093, 0.15 ) }
    dend_14 { pt3dadd( 11.6902, -79.918, 9.88192, 0.88 ) }
    dend_14 { pt3dadd( 11.4972, -80.4872, 9.81336, 0.96 ) }
    dend_14 { pt3dadd( 11.1165, -81.5171, 9.65521, 0.22 ) }
    dend_14 { pt3dadd( 10.629, -82.8445, 9.40403, 0.15 ) }
    dend_14 { pt3dadd( 10.3008, -83.7753, 9.18964, 0.29 ) }
    dend_14 { pt3dadd( 9.8773, -85.0838, 8.87642, 0.15 ) }
    dend_14 { pt3dadd( 9.72737, -85.5887, 8.75841, 0.66 ) }
    dend_14 { pt3dadd( 9.51143, -86.3422, 8.58883, 0.74 ) }
    dend_14 { pt3dadd( 9.16792, -87.4795, 8.35915, 0.15 ) }
    dend_14 { pt3dadd( 8.94783, -88.1832, 8.23001, 0.15 ) }
    dend_14 { pt3dadd( 8.76592, -88.844, 8.10377, 0.66 ) }
    dend_14 { pt3dadd( 8.54506, -89.9384, 7.90594, 0.15 ) }
    dend_14 { pt3dadd( 8.50635, -90.1892, 7.85919, 0.15 ) }
    dend_14 { pt3dadd( 8.41853, -90.9808, 7.72756, 0.29 ) }
    dend_14 { pt3dadd( 8.34086, -91.901, 7.58629, 0.15 ) }
    dend_14 { pt3dadd( 8.26402, -92.8804, 7.43782, 0.59 ) }
    dend_14 { pt3dadd( 8.19613, -93.751, 7.2954, 0.22 ) }
    dend_14 { pt3dadd( 8.13828, -94.4722, 7.1756, 0.22 ) }
    dend_14 { pt3dadd( 8.09663, -95.0761, 7.12016, 0.07 ) }
    dend_14 { pt3dadd( 8.06134, -95.8624, 7.10718, 0.07 ) }
    dend_14 { pt3dadd( 8.01079, -96.5581, 7.15119, 0.15 ) }
    dend_14 { pt3dadd( 7.94275, -97.2078, 7.259, 0.81 ) }
    dend_14 { pt3dadd( 7.86847, -97.8112, 7.41145, 0.22 ) }
    dend_14 { pt3dadd( 7.72446, -99.0055, 7.77533, 0.22 ) }
    dend_14 { pt3dadd( 7.61172, -99.8921, 8.07684, 0.59 ) }
    dend_14 { pt3dadd( 7.51794, -100.553, 8.32617, 0.59 ) }
    dend_14 { pt3dadd( 7.34766, -101.65, 8.77095, 0.88 ) }
    dend_14 { pt3dadd( 7.16157, -102.708, 9.23492, 0.07 ) }
    dend_14 { pt3dadd( 7.02261, -103.411, 9.54931, 0.15 ) }
    dend_14 { pt3dadd( 6.85608, -104.138, 9.86617, 0.59 ) }
    dend_14 { pt3dadd( 6.73489, -104.643, 10.1071, 0.74 ) }
    dend_14 { pt3dadd( 6.47794, -105.67, 10.6243, 0.22 ) }
    dend_14 { pt3dadd( 6.23306, -106.494, 11.0685, 0.22 ) }
    dend_14 { pt3dadd( 5.96551, -107.287, 11.5377, 0.96 ) }
    dend_14 { pt3dadd( 5.4613, -108.587, 12.3439, 0.15 ) }
    dend_14 { pt3dadd( 5.18074, -109.239, 12.7527, 0.15 ) }
    dend_14 { pt3dadd( 4.87158, -109.858, 13.1527, 0.88 ) }
    dend_14 { pt3dadd( 4.25035, -110.861, 13.8072, 0.15 ) }
    dend_14 { pt3dadd( 3.84219, -111.421, 14.1793, 0.15 ) }
    dend_14 { pt3dadd( 3.43341, -111.911, 14.5084, 0.74 ) }
    dend_14 { pt3dadd( 3.01091, -112.37, 14.8091, 0.74 ) }
    dend_14 { pt3dadd( 2.53535, -112.916, 15.1585, 0.15 ) }
    dend_14 { pt3dadd( 2.06576, -113.498, 15.5211, 0.29 ) }
    dend_14 { pt3dadd( 1.77212, -113.901, 15.7515, 0.29 ) }
    dend_14 { pt3dadd( 1.23952, -114.689, 16.1815, 0.15 ) }
    dend_14 { pt3dadd( 0.779737, -115.425, 16.5838, 0.74 ) }
    dend_14 { pt3dadd( -0.0176888, -116.769, 17.3005, 0.22 ) }
    dend_14 { pt3dadd( -0.356511, -117.351, 17.6012, 0.22 ) }
    dend_14 { pt3dadd( -0.796906, -118.1, 17.9954, 0.44 ) }
    dend_14 { pt3dadd( -1.052, -118.507, 18.2102, 0.96 ) }
    dend_14 { pt3dadd( -1.78632, -119.633, 18.7719, 0.07 ) }
    dend_14 { pt3dadd( -1.99564, -119.942, 18.9006, 0.07 ) }
    dend_14 { pt3dadd( -2.3528, -120.436, 19.0759, 0.88 ) }
    dend_14 { pt3dadd( -2.96697, -121.258, 19.3418, 0.15 ) }
    dend_14 { pt3dadd( -3.43738, -121.853, 19.4958, 0.52 ) }
    dend_14 { pt3dadd( -4.13234, -122.679, 19.6308, 0.07 ) }
    dend_14 { pt3dadd( -4.82014, -123.44, 19.662, 0.07 ) }
    dend_14 { pt3dadd( -5.3781, -124.028, 19.6448, 0.66 ) }
    dend_14 { pt3dadd( -5.8551, -124.522, 19.597, 0.22 ) }
    dend_14 { pt3dadd( -6.55495, -125.214, 19.4883, 0.22 ) }
    dend_14 { pt3dadd( -7.24342, -125.86, 19.4209, 0.44 ) }
    dend_14 { pt3dadd( -7.82117, -126.381, 19.4157, 0.15 ) }
    dend_14 { pt3dadd( -8.45415, -126.933, 19.4655, 0.15 ) }
    dend_14 { pt3dadd( -9.03952, -127.448, 19.5473, 0.81 ) }
    dend_14 { pt3dadd( -9.68615, -128.051, 19.7137, 0.22 ) }
    dend_14 { pt3dadd( -10.5215, -128.922, 20.064, 0.22 ) }
    dend_14 { pt3dadd( -11.1443, -129.665, 20.4214, 0.22 ) }
    dend_14 { pt3dadd( -11.511, -130.165, 20.6925, 0.15 ) }
    dend_14 { pt3dadd( -11.7591, -130.551, 20.9099, 0.59 ) }
    dend_14 { pt3dadd( -12.0881, -131.071, 21.2023, 0.15 ) }
    dend_14 { pt3dadd( -12.4061, -131.584, 21.4664, 0.15 ) }
    dend_14 { pt3dadd( -12.7034, -132.028, 21.6489, 0.74 ) }
    dend_14 { pt3dadd( -13.2465, -132.761, 21.9307, 0.22 ) }
    dend_14 { pt3dadd( -13.5224, -133.107, 22.0628, 0.22 ) }
    dend_14 { pt3dadd( -14.0585, -133.686, 22.2758, 0.22 ) }
    dend_14 { pt3dadd( -14.413, -134.03, 22.4088, 0.22 ) }
    dend_14 { pt3dadd( -14.9487, -134.534, 22.6082, 0.52 ) }
    dend_14 { pt3dadd( -15.6906, -135.233, 22.8901, 0.15 ) }
    dend_14 { pt3dadd( -16.2267, -135.728, 23.0865, 0.15 ) }
    dend_14 { pt3dadd( -16.7775, -136.208, 23.2831, 0.81 ) }
    dend_14 { pt3dadd( -17.8775, -137.152, 23.6656, 0.07 ) }
    dend_14 { pt3dadd( -18.1957, -137.415, 23.7672, 0.52 ) }
    dend_14 { pt3dadd( -19.0956, -138.137, 24.01, 0.15 ) }
    dend_14 { pt3dadd( -19.597, -138.53, 24.1122, 0.59 ) }
    dend_14 { pt3dadd( -20.2153, -139.032, 24.2124, 0.15 ) }
    dend_14 { pt3dadd( -20.7991, -139.521, 24.2604, 0.81 ) }
    dend_14 { pt3dadd( -21.2717, -139.929, 24.2569, 0.29 ) }
    dend_14 { pt3dadd( -22.2707, -140.802, 24.2095, 0.07 ) }
    dend_14 { pt3dadd( -22.7973, -141.289, 24.1702, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -23.4941, -141.978, 24.109, 0.15 ) }
    dend_14 { pt3dadd( -24.059, -142.574, 24.0731, 0.52 ) }
    dend_14 { pt3dadd( -24.574, -143.12, 24.0544, 0.81 ) }
    dend_14 { pt3dadd( -25.6273, -144.201, 24.0968, 0.07 ) }
    dend_14 { pt3dadd( -26.2319, -144.783, 24.1886, 0.07 ) }
    dend_14 { pt3dadd( -26.6499, -145.162, 24.291, 0.59 ) }
    dend_14 { pt3dadd( -27.4538, -145.831, 24.548, 0.15 ) }
    dend_14 { pt3dadd( -28.033, -146.287, 24.7818, 0.74 ) }
    dend_14 { pt3dadd( -29.1515, -147.15, 25.3148, 0.07 ) }
    dend_14 { pt3dadd( -30.0471, -147.859, 25.7971, 0.22 ) }
    dend_14 { pt3dadd( -30.3023, -148.061, 25.9336, 0.22 ) }
    dend_14 { pt3dadd( -30.692, -148.397, 26.1394, 0.44 ) }
    dend_14 { pt3dadd( -30.9426, -148.641, 26.2589, 0.44 ) }
    dend_14 { pt3dadd( -31.6013, -149.412, 26.5691, 0.22 ) }
    dend_14 { pt3dadd( -32.1626, -150.163, 26.8071, 0.88 ) }
    dend_14 { pt3dadd( -32.5782, -150.745, 26.9659, 0.66 ) }
    dend_14 { pt3dadd( -33.1566, -151.525, 27.1764, 0.15 ) }
    dend_14 { pt3dadd( -33.8707, -152.427, 27.4177, 0.15 ) }
    dend_14 { pt3dadd( -34.3663, -152.964, 27.568, 0.59 ) }
    dend_14 { pt3dadd( -34.952, -153.472, 27.724, 0.07 ) }
    dend_14 { pt3dadd( -35.2526, -153.678, 27.8013, 0.15 ) }
    dend_14 { pt3dadd( -35.8325, -153.969, 27.9399, 0.07 ) }
    dend_14 { pt3dadd( -36.3262, -154.162, 28.0272, 0.22 ) }
    dend_14 { pt3dadd( -37.1455, -154.445, 28.1573, 0.07 ) }
    dend_14 { pt3dadd( -37.9098, -154.668, 28.2864, 0.07 ) }
    dend_14 { pt3dadd( -38.2699, -154.771, 28.331, 0.37 ) }
    dend_14 { pt3dadd( -39.4122, -155.11, 28.4362, 0.15 ) }
    dend_14 { pt3dadd( -40.1751, -155.358, 28.4784, 0.59 ) }
    dend_14 { pt3dadd( -41.4196, -155.784, 28.5157, 0.07 ) }
    dend_14 { pt3dadd( -42.7794, -156.282, 28.5587, 0.07 ) }
    dend_14 { pt3dadd( -43.9438, -156.733, 28.6087, 0.07 ) }
    dend_14 { pt3dadd( -44.4752, -156.942, 28.6345, 0.66 ) }
    dend_14 { pt3dadd( -45.8272, -157.488, 28.6806, 0.07 ) }
    dend_14 { pt3dadd( -46.5674, -157.81, 28.718, 0.52 ) }
    dend_14 { pt3dadd( -47.3339, -158.199, 28.7431, 0.07 ) }
    dend_14 { pt3dadd( -47.929, -158.543, 28.7451, 0.22 ) }
    dend_14 { pt3dadd( -48.883, -159.1, 28.7365, 0.07 ) }
    dend_14 { pt3dadd( -49.4806, -159.458, 28.6753, 0.29 ) }
    dend_14 { pt3dadd( -50.2455, -159.953, 28.5176, 0.07 ) }
    dend_14 { pt3dadd( -50.7628, -160.334, 28.359, 0.59 ) }
    dend_14 { pt3dadd( -51.7449, -161.143, 27.9506, 0.15 ) }
    dend_14 { pt3dadd( -52.3389, -161.694, 27.6383, 0.66 ) }
    dend_14 { pt3dadd( -52.8734, -162.227, 27.2742, 0.07 ) }
    dend_14 { pt3dadd( -53.105, -162.456, 27.0889, 0.07 ) }
    dend_14 { pt3dadd( -53.5106, -162.882, 26.6553, 0.07 ) }
    dend_14 { pt3dadd( -53.6969, -163.114, 26.4047, 0.22 ) }
    dend_14 { pt3dadd( -53.9929, -163.556, 25.8998, 0.22 ) }
    dend_14 { pt3dadd( -54.3921, -164.149, 25.1765, 0.15 ) }
    dend_14 { pt3dadd( -54.7523, -164.637, 24.5272, 0.81 ) }
    dend_14 { pt3dadd( -55.336, -165.369, 23.4976, 0.07 ) }
    dend_14 { pt3dadd( -55.6118, -165.712, 22.9745, 0.15 ) }
    dend_14 { pt3dadd( -55.9413, -166.146, 22.2622, 0.29 ) }
    dend_14 { pt3dadd( -56.4227, -166.887, 21.0563, 0.15 ) }
    dend_14 { pt3dadd( -56.5952, -167.193, 20.5411, 0.15 ) }
    dend_14 { pt3dadd( -56.7893, -167.541, 19.9056, 0.74 ) }
    dend_14 { pt3dadd( -57.1188, -168.049, 18.7515, 0.37 ) }
    dend_14 { pt3dadd( -57.4553, -168.56, 17.3788, 0.81 ) }
    dend_14 { pt3dadd( -57.6573, -168.897, 16.3502, 0.59 ) }
    dend_14 { pt3dadd( -57.8426, -169.235, 15.132, 0.59 ) }
    dend_14 { pt3dadd( -57.939, -169.386, 14.5108, 0.59 ) }
    dend_14 { pt3dadd( -58.2822, -169.734, 12.4496, 0.44 ) }
    dend_14 { pt3dadd( -58.379, -169.781, 11.9367, 0.44 ) }
    dend_14 { pt3dadd( -58.4841, -169.806, 11.3896, 0.44 ) }
    dend_14 { pt3dadd( -58.6009, -169.801, 10.7846, 0.44 ) }
    dend_14 { pt3dadd( -58.8684, -169.756, 9.48411, 0.66 ) }
    dend_14 { pt3dadd( -59.2167, -169.689, 7.87854, 0.07 ) }
    dend_14 { pt3dadd( -59.3847, -169.655, 7.28074, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.4272, -1.79329, 2.36554, 0.37 ) }
    dend_8 { pt3dadd( -13.7648, -0.776878, 1.36943, 0.37 ) }
    dend_8 { pt3dadd( -13.9162, -0.34206, 0.97637, 0.37 ) }
    dend_8 { pt3dadd( -14.2124, 0.253642, 0.447752, 0.44 ) }
    dend_8 { pt3dadd( -14.4347, 0.606909, 0.124018, 0.44 ) }
    dend_8 { pt3dadd( -14.6298, 0.85339, -0.127447, 0.44 ) }
    dend_8 { pt3dadd( -14.9848, 1.23875, -0.536695, 0.59 ) }
    dend_8 { pt3dadd( -15.5391, 1.81713, -1.13233, 1.03 ) }
    dend_8 { pt3dadd( -16.2039, 2.44645, -1.70303, 0.74 ) }
    dend_8 { pt3dadd( -16.7327, 2.95114, -2.05845, 0.74 ) }
    dend_8 { pt3dadd( -17.4986, 3.7341, -2.48053, 1.03 ) }
    dend_8 { pt3dadd( -17.8386, 4.10425, -2.63089, 1.25 ) }
    dend_8 { pt3dadd( -18.4871, 4.91174, -2.82761, 0.37 ) }
    dend_8 { pt3dadd( -18.9039, 5.53687, -2.88803, 0.74 ) }
    dend_8 { pt3dadd( -19.391, 6.41958, -2.88448, 0.37 ) }
    dend_8 { pt3dadd( -19.6559, 6.9929, -2.84966, 0.37 ) }
    dend_8 { pt3dadd( -19.8367, 7.46148, -2.8081, 0.74 ) }
    dend_8 { pt3dadd( -20.1573, 8.48456, -2.72375, 0.66 ) }
    dend_8 { pt3dadd( -20.431, 9.46105, -2.63032, 0.52 ) }
    dend_8 { pt3dadd( -20.5778, 10.0416, -2.56714, 0.52 ) }
    dend_8 { pt3dadd( -20.8571, 11.3551, -2.41392, 0.66 ) }
    dend_8 { pt3dadd( -20.9889, 12.2572, -2.31917, 1.25 ) }
    dend_8 { pt3dadd( -21.0881, 13.8178, -2.21319, 1.33 ) }
    dend_8 { pt3dadd( -21.0678, 14.8087, -2.1908, 1.03 ) }
    dend_8 { pt3dadd( -20.9768, 15.8299, -2.23476, 0.66 ) }
    dend_8 { pt3dadd( -20.8399, 16.9592, -2.37297, 0.29 ) }
    dend_8 { pt3dadd( -20.7157, 17.9028, -2.59704, 0.15 ) }
    dend_8 { pt3dadd( -20.6254, 18.879, -2.92671, 0.52 ) }
    dend_8 { pt3dadd( -20.6101, 19.3182, -3.11495, 0.52 ) }
    dend_8 { pt3dadd( -20.6344, 19.8897, -3.37039, 0.74 ) }
    dend_8 { pt3dadd( -20.8048, 21.1088, -3.84987, 0.37 ) }
    dend_8 { pt3dadd( -20.9808, 21.9822, -4.12981, 0.59 ) }
    dend_8 { pt3dadd( -21.2374, 23.0163, -4.39696, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_8 { pt3dadd( -21.3899, 23.5156, -4.50466, 0.74 ) }
    dend_8 { pt3dadd( -21.7688, 24.5658, -4.732, 1.03 ) }
    dend_8 { pt3dadd( -22.1666, 25.5477, -4.96427, 0.74 ) }
    dend_8 { pt3dadd( -22.5253, 26.3638, -5.20877, 0.22 ) }
    dend_8 { pt3dadd( -22.7449, 26.864, -5.38459, 0.22 ) }
    dend_8 { pt3dadd( -23.0808, 27.6561, -5.70616, 0.22 ) }
    dend_8 { pt3dadd( -23.4086, 28.5469, -6.09985, 0.22 ) }
    dend_8 { pt3dadd( -23.6134, 29.2696, -6.45586, 0.29 ) }
    dend_8 { pt3dadd( -23.7318, 30.0297, -6.86045, 0.59 ) }
    dend_8 { pt3dadd( -23.7036, 30.7465, -7.23661, 1.18 ) }
    dend_8 { pt3dadd( -23.6419, 31.0536, -7.39231, 1.18 ) }
    dend_8 { pt3dadd( -23.4185, 31.818, -7.77287, 0.52 ) }
    dend_8 { pt3dadd( -23.24, 32.4018, -8.04315, 0.52 ) }
    dend_8 { pt3dadd( -23.0596, 33.0823, -8.33639, 0.52 ) }
    dend_8 { pt3dadd( -22.8789, 34.157, -8.77807, 0.22 ) }
    dend_8 { pt3dadd( -22.8678, 34.4906, -8.90473, 0.22 ) }
    dend_8 { pt3dadd( -22.9495, 35.2666, -9.1561, 0.22 ) }
    dend_8 { pt3dadd( -23.1079, 36.073, -9.36017, 0.59 ) }
    dend_8 { pt3dadd( -23.1767, 36.3673, -9.40359, 0.59 ) }
    dend_8 { pt3dadd( -23.4424, 37.4309, -9.47104, 1.03 ) }
    dend_8 { pt3dadd( -23.6744, 38.34, -9.49283, 1.47 ) }
    dend_8 { pt3dadd( -23.9656, 39.5766, -9.53639, 0.22 ) }
    dend_8 { pt3dadd( -24.2064, 40.5748, -9.60362, 0.37 ) }
    dend_8 { pt3dadd( -24.488, 41.6257, -9.72172, 0.37 ) }
    dend_8 { pt3dadd( -24.7965, 42.5861, -9.89421, 0.52 ) }
    dend_8 { pt3dadd( -25.0785, 43.3177, -10.0862, 0.29 ) }
    dend_8 { pt3dadd( -25.4292, 44.1395, -10.3974, 0.59 ) }
    dend_8 { pt3dadd( -25.8213, 44.98, -10.7851, 0.44 ) }
    dend_8 { pt3dadd( -26.1022, 45.5323, -11.0653, 0.29 ) }
    dend_8 { pt3dadd( -26.5348, 46.3477, -11.4994, 0.52 ) }
    dend_8 { pt3dadd( -26.799, 46.877, -11.7615, 0.88 ) }
    dend_8 { pt3dadd( -27.0685, 47.5008, -12.019, 1.03 ) }
    dend_8 { pt3dadd( -27.5473, 48.8079, -12.4501, 1.33 ) }
    dend_8 { pt3dadd( -27.921, 49.8989, -12.7332, 0.29 ) }
    dend_8 { pt3dadd( -28.0284, 50.171, -12.79, 0.29 ) }
    dend_8 { pt3dadd( -28.2386, 50.623, -12.8725, 0.29 ) }
    dend_8 { pt3dadd( -28.453, 50.9785, -12.9482, 0.29 ) }
    dend_8 { pt3dadd( -28.8428, 51.5036, -13.1003, 0.29 ) }
    dend_8 { pt3dadd( -29.4857, 52.2386, -13.3828, 0.37 ) }
    dend_8 { pt3dadd( -30.1952, 52.9912, -13.7017, 0.81 ) }
    dend_8 { pt3dadd( -30.8964, 53.723, -14.0371, 1.18 ) }
    dend_8 { pt3dadd( -31.9614, 54.8313, -14.5678, 0.88 ) }
    dend_8 { pt3dadd( -32.5287, 55.4358, -14.875, 0.59 ) }
    dend_8 { pt3dadd( -33.1386, 56.1199, -15.2364, 0.37 ) }
    dend_8 { pt3dadd( -33.3978, 56.4357, -15.4333, 0.29 ) }
    dend_8 { pt3dadd( -33.7667, 56.8969, -15.7335, 0.29 ) }
    dend_8 { pt3dadd( -34.099, 57.2952, -15.9745, 0.29 ) }
    dend_8 { pt3dadd( -34.3951, 57.6752, -16.1582, 0.29 ) }
    dend_8 { pt3dadd( -34.9127, 58.3389, -16.4074, 0.66 ) }
    dend_8 { pt3dadd( -35.6299, 59.2579, -16.6838, 1.47 ) }
    dend_8 { pt3dadd( -36.8966, 60.8112, -17.1425, 0.52 ) }
    dend_8 { pt3dadd( -37.6718, 61.7205, -17.3997, 0.37 ) }
    dend_8 { pt3dadd( -38.5218, 62.6905, -17.6592, 0.37 ) }
    dend_8 { pt3dadd( -39.0391, 63.3013, -17.7975, 0.88 ) }
    dend_8 { pt3dadd( -39.6179, 64.0471, -17.9283, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.4272, -1.79329, 2.36554, 0.81 ) }
    dend_3 { pt3dadd( -13.5417, -2.44119, 1.99642, 0.81 ) }
    dend_3 { pt3dadd( -13.6632, -2.70214, 1.85716, 0.81 ) }
    dend_3 { pt3dadd( -14.2823, -3.56221, 1.50955, 0.22 ) }
    dend_3 { pt3dadd( -14.6447, -3.95885, 1.41282, 0.22 ) }
    dend_3 { pt3dadd( -15.1448, -4.43955, 1.35326, 0.44 ) }
    dend_3 { pt3dadd( -15.7488, -4.97003, 1.32763, 0.88 ) }
    dend_3 { pt3dadd( -16.6755, -5.65741, 1.34318, 0.44 ) }
    dend_3 { pt3dadd( -17.5998, -6.23043, 1.3791, 0.59 ) }
    dend_3 { pt3dadd( -18.5481, -6.70227, 1.41552, 0.52 ) }
    dend_3 { pt3dadd( -19.6052, -7.16584, 1.44969, 0.22 ) }
    dend_3 { pt3dadd( -20.7424, -7.59923, 1.4893, 0.22 ) }
    dend_3 { pt3dadd( -21.3288, -7.78103, 1.52625, 0.66 ) }
    dend_3 { pt3dadd( -22.2733, -7.99556, 1.62316, 0.96 ) }
    dend_3 { pt3dadd( -23.3066, -8.17445, 1.75789, 1.11 ) }
    dend_3 { pt3dadd( -23.6617, -8.22413, 1.81879, 0.96 ) }
    dend_3 { pt3dadd( -24.7272, -8.33602, 2.07433, 0.22 ) }
    dend_3 { pt3dadd( -26.1469, -8.48545, 2.52225, 0.66 ) }
    dend_3 { pt3dadd( -26.8371, -8.59419, 2.77429, 0.15 ) }
    dend_3 { pt3dadd( -27.2331, -8.67137, 2.94713, 0.15 ) }
    dend_3 { pt3dadd( -27.9941, -8.84167, 3.31964, 0.52 ) }
    dend_3 { pt3dadd( -28.6717, -8.99671, 3.63785, 0.22 ) }
    dend_3 { pt3dadd( -29.4442, -9.20666, 3.93894, 0.66 ) }
    dend_3 { pt3dadd( -30.2133, -9.46925, 4.12356, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 79/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.0192, 24.2848, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 40.7198, 33.6708, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 52.4204, 43.0567, 0.0, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 82/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -17.6923, 46.5659, 34.5641, 0.29 ) }
    dend_38 { pt3dadd( -18.3478, 47.419, 34.7742, 0.29 ) }
    dend_38 { pt3dadd( -18.7732, 48.0285, 34.9656, 0.29 ) }
    dend_38 { pt3dadd( -19.2233, 48.7544, 35.2683, 0.29 ) }
    dend_38 { pt3dadd( -19.6505, 49.559, 35.6648, 0.22 ) }
    dend_38 { pt3dadd( -20.0513, 50.4589, 36.1138, 0.22 ) }
    dend_38 { pt3dadd( -20.4139, 51.3235, 36.5449, 0.22 ) }
    dend_38 { pt3dadd( -20.8379, 52.5137, 37.1913, 0.22 ) }
    dend_38 { pt3dadd( -21.1054, 53.3982, 37.6652, 0.52 ) }
    dend_38 { pt3dadd( -21.3563, 54.3456, 38.1638, 0.81 ) }
    dend_38 { pt3dadd( -21.5674, 55.1938, 38.6387, 0.44 ) }
    dend_38 { pt3dadd( -21.8759, 56.4596, 39.3963, 0.22 ) }
    dend_38 { pt3dadd( -22.0382, 57.1398, 39.7861, 0.22 ) }
    dend_38 { pt3dadd( -22.24, 57.9048, 40.1517, 0.29 ) }
    dend_38 { pt3dadd( -22.4637, 58.7035, 40.4956, 0.29 ) }
    dend_38 { pt3dadd( -22.726, 59.4622, 40.8043, 0.29 ) }
    dend_38 { pt3dadd( -22.9352, 59.9832, 41.0065, 0.66 ) }
    dend_38 { pt3dadd( -23.3124, 60.8654, 41.2839, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -23.5905, 61.492, 41.4273, 0.37 ) }
    dend_38 { pt3dadd( -24.0247, 62.5021, 41.6036, 0.15 ) }
    dend_38 { pt3dadd( -24.523, 63.7662, 41.7492, 0.15 ) }
    dend_38 { pt3dadd( -24.7502, 64.3899, 41.7978, 1.11 ) }
    dend_38 { pt3dadd( -25.2057, 65.7353, 41.8802, 0.59 ) }
    dend_38 { pt3dadd( -25.7227, 67.4353, 41.96, 0.22 ) }
    dend_38 { pt3dadd( -25.9147, 68.1826, 41.9821, 0.37 ) }
    dend_38 { pt3dadd( -26.2076, 69.5687, 41.9935, 0.22 ) }
    dend_38 { pt3dadd( -26.342, 70.4073, 41.9982, 0.74 ) }
    dend_38 { pt3dadd( -26.4373, 71.0439, 41.9953, 0.74 ) }
    dend_38 { pt3dadd( -26.6104, 72.238, 42.0042, 0.22 ) }
    dend_38 { pt3dadd( -26.7542, 73.2172, 41.9866, 0.22 ) }
    dend_38 { pt3dadd( -26.9493, 74.515, 41.9075, 0.22 ) }
    dend_38 { pt3dadd( -27.1646, 75.7586, 41.7895, 0.29 ) }
    dend_38 { pt3dadd( -27.365, 76.8407, 41.6637, 0.29 ) }
    dend_38 { pt3dadd( -27.647, 78.3097, 41.47, 0.44 ) }
    dend_38 { pt3dadd( -27.906, 79.6564, 41.272, 0.22 ) }
    dend_38 { pt3dadd( -28.1538, 80.9582, 41.0654, 0.15 ) }
    dend_38 { pt3dadd( -28.3375, 81.9766, 40.9214, 0.15 ) }
    dend_38 { pt3dadd( -28.5746, 83.2179, 40.8157, 0.15 ) }
    dend_38 { pt3dadd( -28.7435, 84.0473, 40.7771, 0.52 ) }
    dend_38 { pt3dadd( -28.945, 84.8909, 40.7654, 0.74 ) }
    dend_38 { pt3dadd( -29.0075, 85.1048, 40.7779, 0.74 ) }
    dend_38 { pt3dadd( -29.3387, 86.059, 40.8606, 0.22 ) }
    dend_38 { pt3dadd( -29.8398, 87.2896, 40.9588, 0.37 ) }
    dend_38 { pt3dadd( -30.5196, 88.6765, 41.0545, 0.22 ) }
    dend_38 { pt3dadd( -30.9217, 89.4251, 41.0887, 0.22 ) }
    dend_38 { pt3dadd( -31.4124, 90.3031, 41.1059, 0.29 ) }
    dend_38 { pt3dadd( -31.9148, 91.1895, 41.1262, 0.15 ) }
    dend_38 { pt3dadd( -32.2521, 91.7684, 41.1326, 0.74 ) }
    dend_38 { pt3dadd( -32.5092, 92.2206, 41.1491, 0.22 ) }
    dend_38 { pt3dadd( -33.2035, 93.5081, 41.34, 0.15 ) }
    dend_38 { pt3dadd( -33.4958, 94.1065, 41.4633, 0.15 ) }
    dend_38 { pt3dadd( -33.9193, 95.0197, 41.6897, 0.37 ) }
    dend_38 { pt3dadd( -34.2104, 95.6664, 41.8638, 0.37 ) }
    dend_38 { pt3dadd( -34.7239, 96.7915, 42.1782, 0.15 ) }
    dend_38 { pt3dadd( -35.3301, 97.9815, 42.5061, 0.66 ) }
    dend_38 { pt3dadd( -35.6792, 98.5618, 42.6571, 0.15 ) }
    dend_38 { pt3dadd( -36.0735, 99.1415, 42.7708, 0.15 ) }
    dend_38 { pt3dadd( -36.7322, 100.054, 42.8796, 0.07 ) }
    dend_38 { pt3dadd( -36.9741, 100.392, 42.9084, 0.15 ) }
    dend_38 { pt3dadd( -37.4502, 101.073, 42.9407, 0.15 ) }
    dend_38 { pt3dadd( -38.0342, 101.979, 42.9431, 0.37 ) }
    dend_38 { pt3dadd( -38.8825, 103.464, 42.9432, 0.15 ) }
    dend_38 { pt3dadd( -39.2286, 104.184, 42.9774, 0.29 ) }
    dend_38 { pt3dadd( -39.736, 105.484, 43.0862, 0.07 ) }
    dend_38 { pt3dadd( -39.899, 106.02, 43.1477, 0.37 ) }
    dend_38 { pt3dadd( -40.0351, 106.635, 43.2191, 0.15 ) }
    dend_38 { pt3dadd( -40.156, 107.405, 43.2994, 0.37 ) }
    dend_38 { pt3dadd( -40.3544, 109.082, 43.453, 0.15 ) }
    dend_38 { pt3dadd( -40.4264, 109.701, 43.4971, 0.29 ) }
    dend_38 { pt3dadd( -40.484, 110.286, 43.5227, 0.29 ) }
    dend_38 { pt3dadd( -40.5838, 111.648, 43.6039, 0.15 ) }
    dend_38 { pt3dadd( -40.6281, 112.7, 43.6756, 0.15 ) }
    dend_38 { pt3dadd( -40.6211, 113.197, 43.7092, 0.37 ) }
    dend_38 { pt3dadd( -40.5644, 113.836, 43.7249, 0.37 ) }
    dend_38 { pt3dadd( -40.4548, 114.783, 43.7319, 0.07 ) }
    dend_38 { pt3dadd( -40.2615, 116.013, 43.7285, 0.29 ) }
    dend_38 { pt3dadd( -40.1019, 116.781, 43.7289, 0.07 ) }
    dend_38 { pt3dadd( -39.9124, 117.579, 43.7366, 0.15 ) }
    dend_38 { pt3dadd( -39.5729, 118.937, 43.7631, 0.07 ) }
    dend_38 { pt3dadd( -39.4017, 119.628, 43.7782, 0.22 ) }
    dend_38 { pt3dadd( -39.2414, 120.241, 43.7928, 0.66 ) }
    dend_38 { pt3dadd( -39.1355, 120.623, 43.8162, 0.66 ) }
    dend_38 { pt3dadd( -38.5801, 122.45, 44.0622, 0.07 ) }
    dend_38 { pt3dadd( -38.1881, 123.69, 44.2931, 0.07 ) }
    dend_38 { pt3dadd( -37.9762, 124.35, 44.4483, 0.66 ) }
    dend_38 { pt3dadd( -37.5539, 125.717, 44.7901, 0.22 ) }
    dend_38 { pt3dadd( -37.2459, 126.854, 45.0703, 0.81 ) }
    dend_38 { pt3dadd( -37.0643, 127.7, 45.2668, 0.59 ) }
    dend_38 { pt3dadd( -36.8479, 129.644, 45.6538, 0.07 ) }
    dend_38 { pt3dadd( -36.8469, 130.096, 45.7352, 0.07 ) }
    dend_38 { pt3dadd( -36.9336, 130.867, 45.845, 0.22 ) }
    dend_38 { pt3dadd( -37.1219, 131.692, 45.9275, 0.07 ) }
    dend_38 { pt3dadd( -37.3388, 132.416, 45.9856, 0.22 ) }
    dend_38 { pt3dadd( -37.8902, 133.966, 46.1187, 0.15 ) }
    dend_38 { pt3dadd( -38.2389, 134.869, 46.2127, 0.74 ) }
    dend_38 { pt3dadd( -38.8455, 136.513, 46.3885, 0.15 ) }
    dend_38 { pt3dadd( -39.0985, 137.228, 46.4661, 0.29 ) }
    dend_38 { pt3dadd( -39.6548, 138.864, 46.6457, 0.07 ) }
    dend_38 { pt3dadd( -39.7804, 139.259, 46.6881, 0.22 ) }
    dend_38 { pt3dadd( -40.0713, 140.21, 46.8135, 0.22 ) }
    dend_38 { pt3dadd( -40.3297, 141.088, 46.9617, 0.44 ) }
    dend_38 { pt3dadd( -40.594, 142.105, 47.2171, 1.03 ) }
    dend_38 { pt3dadd( -40.7955, 142.958, 47.5013, 0.44 ) }
    dend_38 { pt3dadd( -41.045, 144.068, 47.896, 0.44 ) }
    dend_38 { pt3dadd( -41.3795, 145.607, 48.4999, 0.15 ) }
    dend_38 { pt3dadd( -41.5671, 146.479, 48.8934, 0.52 ) }
    dend_38 { pt3dadd( -41.8629, 147.926, 49.665, 0.15 ) }
    dend_38 { pt3dadd( -42.0231, 148.829, 50.2422, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 90/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -17.6923, 46.5659, 34.5641, 0.15 ) }
    dend_37 { pt3dadd( -17.4011, 47.4408, 34.9771, 0.15 ) }
    dend_37 { pt3dadd( -17.1951, 47.9858, 35.2956, 0.15 ) }
    dend_37 { pt3dadd( -16.8765, 48.7632, 35.7841, 0.22 ) }
    dend_37 { pt3dadd( -16.7102, 49.1852, 36.0085, 0.22 ) }
    dend_37 { pt3dadd( -16.4701, 49.8792, 36.3259, 0.22 ) }
    dend_37 { pt3dadd( -16.3248, 50.3511, 36.5426, 0.22 ) }
    dend_37 { pt3dadd( -16.0975, 51.2618, 37.0061, 0.22 ) }
    dend_37 { pt3dadd( -15.9422, 52.1175, 37.4593, 0.22 ) }
    dend_37 { pt3dadd( -15.8428, 53.0663, 37.9191, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( -15.797, 53.9337, 38.3112, 0.59 ) }
    dend_37 { pt3dadd( -15.7951, 55.3393, 38.8799, 0.07 ) }
    dend_37 { pt3dadd( -15.8467, 56.4174, 39.2299, 0.15 ) }
    dend_37 { pt3dadd( -15.9331, 57.1636, 39.4434, 0.15 ) }
    dend_37 { pt3dadd( -16.1615, 58.6033, 39.8798, 0.29 ) }
    dend_37 { pt3dadd( -16.3503, 59.6099, 40.2171, 0.07 ) }
    dend_37 { pt3dadd( -16.5214, 60.42, 40.484, 0.59 ) }
    dend_37 { pt3dadd( -16.8512, 61.635, 40.8433, 0.07 ) }
    dend_37 { pt3dadd( -17.1953, 62.6929, 41.1443, 0.22 ) }
    dend_37 { pt3dadd( -17.4836, 63.5148, 41.4082, 0.22 ) }
    dend_37 { pt3dadd( -17.7119, 64.1539, 41.6693, 0.37 ) }
    dend_37 { pt3dadd( -18.013, 65.0216, 42.0927, 0.29 ) }
    dend_37 { pt3dadd( -18.3609, 66.0872, 42.6713, 0.29 ) }
    dend_37 { pt3dadd( -18.6196, 66.9345, 43.1812, 0.22 ) }
    dend_37 { pt3dadd( -18.8099, 67.7888, 43.6638, 0.59 ) }
    dend_37 { pt3dadd( -18.9998, 68.9665, 44.301, 0.37 ) }
    dend_37 { pt3dadd( -19.0636, 69.6131, 44.6444, 0.37 ) }
    dend_37 { pt3dadd( -19.079, 70.0947, 44.8924, 0.44 ) }
    dend_37 { pt3dadd( -19.0511, 70.7016, 45.1893, 0.44 ) }
    dend_37 { pt3dadd( -18.8727, 72.7738, 46.1775, 0.15 ) }
    dend_37 { pt3dadd( -18.7471, 73.8853, 46.6786, 0.15 ) }
    dend_37 { pt3dadd( -18.6659, 74.3763, 46.8913, 0.15 ) }
    dend_37 { pt3dadd( -18.5148, 75.0396, 47.1839, 0.29 ) }
    dend_37 { pt3dadd( -18.2467, 75.9289, 47.5909, 0.15 ) }
    dend_37 { pt3dadd( -17.8493, 76.9292, 48.0736, 0.52 ) }
    dend_37 { pt3dadd( -17.5839, 77.47, 48.3597, 0.52 ) }
    dend_37 { pt3dadd( -17.0445, 78.5105, 48.9289, 0.15 ) }
    dend_37 { pt3dadd( -16.7279, 79.1925, 49.3054, 0.15 ) }
    dend_37 { pt3dadd( -16.4845, 79.7812, 49.6304, 0.44 ) }
    dend_37 { pt3dadd( -16.1146, 80.7866, 50.1771, 0.44 ) }
    dend_37 { pt3dadd( -15.6382, 82.2603, 50.9744, 0.29 ) }
    dend_37 { pt3dadd( -15.3958, 83.1274, 51.4966, 0.44 ) }
    dend_37 { pt3dadd( -15.0107, 84.6205, 52.5659, 0.15 ) }
    dend_37 { pt3dadd( -14.806, 85.4193, 53.2275, 0.15 ) }
    dend_37 { pt3dadd( -14.6782, 85.9101, 53.7085, 0.37 ) }
    dend_37 { pt3dadd( -14.3743, 87.0213, 55.0269, 0.15 ) }
    dend_37 { pt3dadd( -14.0969, 87.8627, 56.2104, 0.15 ) }
    dend_37 { pt3dadd( -13.7199, 88.7476, 57.7338, 0.66 ) }
    dend_37 { pt3dadd( -13.5237, 89.1414, 58.5402, 0.88 ) }
    dend_37 { pt3dadd( -13.1223, 89.9419, 60.3137, 0.15 ) }
    dend_37 { pt3dadd( -12.8723, 90.606, 61.7039, 0.15 ) }
    dend_37 { pt3dadd( -12.7403, 91.1606, 62.7647, 0.29 ) }
    dend_37 { pt3dadd( -12.6704, 92.2797, 64.5677, 0.29 ) }
    dend_37 { pt3dadd( -12.6926, 93.25, 66.0384, 0.29 ) }
    dend_37 { pt3dadd( -12.7232, 93.5314, 66.4443, 0.29 ) }
    dend_37 { pt3dadd( -13.0428, 94.8922, 68.1544, 0.07 ) }
    dend_37 { pt3dadd( -13.2052, 95.3365, 68.5938, 0.15 ) }
    dend_37 { pt3dadd( -13.7687, 96.4168, 69.4095, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 4.61798, 97.262, -20.046, 0.74 ) }
    dend_32 { pt3dadd( 4.43412, 97.8812, -20.5518, 0.74 ) }
    dend_32 { pt3dadd( 4.39778, 98.4696, -21.0991, 0.22 ) }
    dend_32 { pt3dadd( 4.44504, 99.1242, -21.7737, 0.22 ) }
    dend_32 { pt3dadd( 4.47335, 99.5104, -22.1777, 0.22 ) }
    dend_32 { pt3dadd( 4.49961, 100.057, -22.7532, 0.22 ) }
    dend_32 { pt3dadd( 4.48704, 100.619, -23.3324, 0.59 ) }
    dend_32 { pt3dadd( 4.39301, 101.277, -24.0164, 0.22 ) }
    dend_32 { pt3dadd( 4.22569, 101.868, -24.5488, 0.22 ) }
    dend_32 { pt3dadd( 4.02374, 102.315, -24.8277, 0.22 ) }
    dend_32 { pt3dadd( 3.77104, 102.761, -24.9958, 0.59 ) }
    dend_32 { pt3dadd( 3.36383, 103.362, -25.1095, 0.88 ) }
    dend_32 { pt3dadd( 2.35919, 104.628, -25.288, 0.22 ) }
    dend_32 { pt3dadd( 1.81612, 105.261, -25.3742, 0.22 ) }
    dend_32 { pt3dadd( 1.27095, 105.913, -25.4899, 0.96 ) }
    dend_32 { pt3dadd( 0.623866, 106.754, -25.7205, 0.15 ) }
    dend_32 { pt3dadd( 0.150922, 107.422, -25.9825, 0.15 ) }
    dend_32 { pt3dadd( -0.476051, 108.384, -26.5545, 0.15 ) }
    dend_32 { pt3dadd( -0.885726, 108.993, -27.072, 0.37 ) }
    dend_32 { pt3dadd( -1.32842, 109.564, -27.7056, 0.81 ) }
    dend_32 { pt3dadd( -1.68225, 109.998, -28.2739, 0.81 ) }
    dend_32 { pt3dadd( -1.9055, 110.292, -28.7177, 0.22 ) }
    dend_32 { pt3dadd( -2.10606, 110.745, -29.4203, 0.22 ) }
    dend_32 { pt3dadd( -2.13377, 111.231, -30.0513, 0.22 ) }
    dend_32 { pt3dadd( -2.09168, 111.535, -30.3942, 0.22 ) }
    dend_32 { pt3dadd( -2.03564, 111.892, -30.7665, 0.59 ) }
    dend_32 { pt3dadd( -1.94338, 112.614, -31.4344, 0.37 ) }
    dend_32 { pt3dadd( -1.8098, 113.625, -32.3425, 0.81 ) }
    dend_32 { pt3dadd( -1.72603, 114.419, -33.0327, 0.22 ) }
    dend_32 { pt3dadd( -1.69968, 115.096, -33.631, 0.22 ) }
    dend_32 { pt3dadd( -1.78405, 115.815, -34.2933, 0.22 ) }
    dend_32 { pt3dadd( -1.9828, 116.523, -34.9587, 1.03 ) }
    dend_32 { pt3dadd( -2.34557, 117.403, -35.7713, 0.22 ) }
    dend_32 { pt3dadd( -2.55033, 117.87, -36.2204, 0.22 ) }
    dend_32 { pt3dadd( -2.74326, 118.329, -36.6892, 0.37 ) }
    dend_32 { pt3dadd( -3.00783, 119.073, -37.4577, 0.15 ) }
    dend_32 { pt3dadd( -3.20725, 119.73, -38.122, 1.03 ) }
    dend_32 { pt3dadd( -3.4131, 120.508, -38.8961, 0.15 ) }
    dend_32 { pt3dadd( -3.66208, 121.607, -39.8883, 0.15 ) }
    dend_32 { pt3dadd( -3.74461, 122.148, -40.3679, 0.22 ) }
    dend_32 { pt3dadd( -3.78244, 122.564, -40.7321, 0.22 ) }
    dend_32 { pt3dadd( -3.8205, 123.023, -41.1398, 0.81 ) }
    dend_32 { pt3dadd( -3.86827, 123.603, -41.6556, 1.25 ) }
    dend_32 { pt3dadd( -3.9452, 124.337, -42.2908, 0.15 ) }
    dend_32 { pt3dadd( -4.06358, 125.152, -42.9622, 0.29 ) }
    dend_32 { pt3dadd( -4.13389, 125.864, -43.5536, 0.07 ) }
    dend_32 { pt3dadd( -4.18228, 126.446, -44.0639, 0.22 ) }
    dend_32 { pt3dadd( -8.37284, 133.044, -49.9116, 0.22 ) }
    dend_32 { pt3dadd( -12.9995, 137.77, -57.2495, 0.22 ) }
    dend_32 { pt3dadd( -19.9477, 141.738, -63.1041, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.61798, 97.262, -20.046, 0.15 ) }
    dend_31 { pt3dadd( 5.76865, 96.8152, -19.8311, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 6.22672, 96.6325, -19.7428, 0.15 ) }
    dend_31 { pt3dadd( 6.72254, 96.4841, -19.7303, 0.29 ) }
    dend_31 { pt3dadd( 7.02665, 96.4121, -19.7858, 0.29 ) }
    dend_31 { pt3dadd( 8.18752, 96.2004, -20.1943, 0.15 ) }
    dend_31 { pt3dadd( 8.74043, 96.1222, -20.4744, 0.37 ) }
    dend_31 { pt3dadd( 9.00564, 96.1074, -20.6861, 0.37 ) }
    dend_31 { pt3dadd( 10.0583, 96.1629, -21.7633, 0.15 ) }
    dend_31 { pt3dadd( 10.7013, 96.2696, -22.6142, 0.15 ) }
    dend_31 { pt3dadd( 11.0953, 96.3591, -23.2381, 0.15 ) }
    dend_31 { pt3dadd( 11.443, 96.431, -23.9064, 0.22 ) }
    dend_31 { pt3dadd( 11.7151, 96.4899, -24.4968, 0.22 ) }
    dend_31 { pt3dadd( 11.8373, 96.5039, -24.7792, 0.22 ) }
    dend_31 { pt3dadd( 12.0341, 96.4743, -25.3685, 0.22 ) }
    dend_31 { pt3dadd( 12.2025, 96.3919, -26.2124, 0.22 ) }
    dend_31 { pt3dadd( 12.3516, 95.9905, -27.0913, 0.44 ) }
    dend_31 { pt3dadd( 19.3162, 96.5505, -34.2431, 0.44 ) }
    dend_31 { pt3dadd( 26.06, 98.0701, -41.4515, 0.44 ) }
    dend_31 { pt3dadd( 32.9715, 99.2349, -48.5739, 0.44 ) }
    dend_31 { pt3dadd( 41.5425, 98.5659, -53.6771, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 19/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 25.472, 50.6307, 5.96389, 0.22 ) }
    dend_27 { pt3dadd( 26.7857, 51.2051, 6.46844, 0.22 ) }
    dend_27 { pt3dadd( 27.5413, 51.5283, 6.73103, 0.22 ) }
    dend_27 { pt3dadd( 28.1248, 51.79, 6.92131, 0.37 ) }
    dend_27 { pt3dadd( 28.8796, 52.1432, 7.15038, 0.96 ) }
    dend_27 { pt3dadd( 29.6641, 52.5414, 7.35257, 0.96 ) }
    dend_27 { pt3dadd( 30.8942, 53.2207, 7.62624, 0.59 ) }
    dend_27 { pt3dadd( 31.5972, 53.6358, 7.74589, 0.37 ) }
    dend_27 { pt3dadd( 32.639, 54.2719, 7.86306, 0.59 ) }
    dend_27 { pt3dadd( 33.2463, 54.6621, 7.92856, 0.29 ) }
    dend_27 { pt3dadd( 33.9869, 55.17, 8.02402, 0.29 ) }
    dend_27 { pt3dadd( 34.593, 55.6438, 8.13871, 0.29 ) }
    dend_27 { pt3dadd( 35.2577, 56.2244, 8.32642, 0.44 ) }
    dend_27 { pt3dadd( 35.8661, 56.781, 8.56097, 0.74 ) }
    dend_27 { pt3dadd( 36.6893, 57.544, 8.94056, 0.81 ) }
    dend_27 { pt3dadd( 37.3849, 58.2054, 9.29333, 0.29 ) }
    dend_27 { pt3dadd( 38.0945, 58.911, 9.67759, 0.22 ) }
    dend_27 { pt3dadd( 38.5802, 59.4472, 9.90934, 0.22 ) }
    dend_27 { pt3dadd( 38.9524, 59.9205, 10.0484, 0.59 ) }
    dend_27 { pt3dadd( 39.5616, 60.8153, 10.1699, 0.81 ) }
    dend_27 { pt3dadd( 40.1242, 61.7428, 10.1709, 0.22 ) }
    dend_27 { pt3dadd( 40.416, 62.2405, 10.147, 0.22 ) }
    dend_27 { pt3dadd( 41.039, 63.3284, 10.0996, 0.29 ) }
    dend_27 { pt3dadd( 41.4154, 64.039, 10.087, 0.52 ) }
    dend_27 { pt3dadd( 41.6984, 64.6603, 10.1055, 0.74 ) }
    dend_27 { pt3dadd( 42.0527, 65.5913, 10.1988, 1.11 ) }
    dend_27 { pt3dadd( 42.4616, 66.6703, 10.4093, 0.52 ) }
    dend_27 { pt3dadd( 42.753, 67.395, 10.6361, 0.22 ) }
    dend_27 { pt3dadd( 42.9281, 67.8015, 10.7995, 0.22 ) }
    dend_27 { pt3dadd( 43.2926, 68.5152, 11.1075, 0.29 ) }
    dend_27 { pt3dadd( 43.6664, 69.1589, 11.3735, 0.29 ) }
    dend_27 { pt3dadd( 44.4369, 70.3698, 11.8185, 0.22 ) }
    dend_27 { pt3dadd( 45.0073, 71.218, 12.0815, 0.81 ) }
    dend_27 { pt3dadd( 45.5954, 72.0154, 12.315, 0.66 ) }
    dend_27 { pt3dadd( 46.3972, 73.033, 12.6013, 0.29 ) }
    dend_27 { pt3dadd( 47.0883, 73.8795, 12.8776, 0.22 ) }
    dend_27 { pt3dadd( 47.5438, 74.4152, 13.0654, 0.59 ) }
    dend_27 { pt3dadd( 47.7866, 74.6949, 13.1695, 0.59 ) }
    dend_27 { pt3dadd( 48.6105, 75.6756, 13.534, 0.81 ) }
    dend_27 { pt3dadd( 48.9265, 76.0848, 13.717, 0.37 ) }
    dend_27 { pt3dadd( 49.5961, 77.0613, 14.1941, 0.22 ) }
    dend_27 { pt3dadd( 49.9032, 77.5605, 14.4494, 0.22 ) }
    dend_27 { pt3dadd( 50.1744, 78.0652, 14.6763, 0.22 ) }
    dend_27 { pt3dadd( 50.4561, 78.6783, 14.9205, 0.22 ) }
    dend_27 { pt3dadd( 50.7001, 79.3443, 15.1307, 0.22 ) }
    dend_27 { pt3dadd( 50.9791, 80.1647, 15.2997, 0.81 ) }
    dend_27 { pt3dadd( 51.4145, 81.4492, 15.461, 0.81 ) }
    dend_27 { pt3dadd( 51.8228, 82.6027, 15.5689, 0.29 ) }
    dend_27 { pt3dadd( 52.2506, 83.6716, 15.6344, 0.59 ) }
    dend_27 { pt3dadd( 52.8387, 84.9694, 15.663, 0.22 ) }
    dend_27 { pt3dadd( 53.4391, 86.2018, 15.6282, 0.22 ) }
    dend_27 { pt3dadd( 53.8728, 87.0155, 15.5785, 0.44 ) }
    dend_27 { pt3dadd( 54.3582, 87.8405, 15.4968, 0.52 ) }
    dend_27 { pt3dadd( 54.9566, 88.8365, 15.3875, 0.15 ) }
    dend_27 { pt3dadd( 55.1227, 89.115, 15.3552, 0.15 ) }
    dend_27 { pt3dadd( 55.6781, 90.0934, 15.2767, 0.59 ) }
    dend_27 { pt3dadd( 55.9765, 90.691, 15.2607, 0.59 ) }
    dend_27 { pt3dadd( 56.3175, 91.4398, 15.2087, 0.22 ) }
    dend_27 { pt3dadd( 56.7212, 92.3391, 15.1262, 0.22 ) }
    dend_27 { pt3dadd( 56.9672, 92.8513, 15.0846, 0.22 ) }
    dend_27 { pt3dadd( 57.2554, 93.4123, 15.0641, 0.44 ) }
    dend_27 { pt3dadd( 57.7311, 94.3115, 15.083, 0.52 ) }
    dend_27 { pt3dadd( 58.1003, 95.0026, 15.1334, 0.52 ) }
    dend_27 { pt3dadd( 58.6144, 95.9178, 15.2396, 0.74 ) }
    dend_27 { pt3dadd( 59.3688, 97.1713, 15.431, 0.22 ) }
    dend_27 { pt3dadd( 59.7651, 97.7812, 15.5423, 0.22 ) }
    dend_27 { pt3dadd( 60.1968, 98.4173, 15.6796, 0.29 ) }
    dend_27 { pt3dadd( 60.7219, 99.2053, 15.8703, 0.37 ) }
    dend_27 { pt3dadd( 61.1243, 99.8278, 16.0308, 0.81 ) }
    dend_27 { pt3dadd( 61.2981, 100.095, 16.0873, 0.81 ) }
    dend_27 { pt3dadd( 61.8523, 100.911, 16.2017, 0.15 ) }
    dend_27 { pt3dadd( 62.3663, 101.674, 16.2984, 0.22 ) }
    dend_27 { pt3dadd( 62.8174, 102.305, 16.4083, 0.22 ) }
    dend_27 { pt3dadd( 63.2561, 102.838, 16.5348, 0.29 ) }
    dend_27 { pt3dadd( 64.0646, 103.733, 16.7915, 0.59 ) }
    dend_27 { pt3dadd( 64.6432, 104.363, 17.0003, 0.44 ) }
    dend_27 { pt3dadd( 65.2354, 105.02, 17.2415, 0.66 ) }
    dend_27 { pt3dadd( 66.0545, 105.915, 17.5927, 0.22 ) }
    dend_27 { pt3dadd( 67.0001, 106.935, 17.9968, 0.22 ) }
    dend_27 { pt3dadd( 67.2512, 107.232, 18.1095, 0.29 ) }
    dend_27 { pt3dadd( 67.8813, 108.109, 18.4276, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_27 { pt3dadd( 68.2807, 108.763, 18.6374, 0.29 ) }
    dend_27 { pt3dadd( 68.6594, 109.523, 18.8328, 0.88 ) }
    dend_27 { pt3dadd( 68.9673, 110.363, 19.0339, 0.74 ) }
    dend_27 { pt3dadd( 69.4725, 112.156, 19.465, 0.22 ) }
    dend_27 { pt3dadd( 69.6913, 113.041, 19.6747, 0.22 ) }
    dend_27 { pt3dadd( 69.8356, 113.653, 19.823, 0.81 ) }
    dend_27 { pt3dadd( 70.0894, 114.655, 20.0707, 0.74 ) }
    dend_27 { pt3dadd( 70.3591, 115.713, 20.33, 0.22 ) }
    dend_27 { pt3dadd( 70.5121, 116.273, 20.4662, 0.22 ) }
    dend_27 { pt3dadd( 70.6966, 116.866, 20.5987, 0.22 ) }
    dend_27 { pt3dadd( 70.9809, 117.608, 20.7655, 0.22 ) }
    dend_27 { pt3dadd( 71.415, 118.536, 20.9776, 0.22 ) }
    dend_27 { pt3dadd( 71.7427, 119.158, 21.1146, 0.37 ) }
    dend_27 { pt3dadd( 72.1917, 119.933, 21.2647, 0.88 ) }
    dend_27 { pt3dadd( 72.3842, 120.238, 21.3222, 0.74 ) }
    dend_27 { pt3dadd( 73.2357, 121.462, 21.5485, 0.15 ) }
    dend_27 { pt3dadd( 73.9011, 122.349, 21.7021, 0.15 ) }
    dend_27 { pt3dadd( 74.4767, 123.074, 21.8488, 0.52 ) }
    dend_27 { pt3dadd( 74.9785, 123.636, 21.976, 0.22 ) }
    dend_27 { pt3dadd( 75.3274, 123.993, 22.0629, 0.22 ) }
    dend_27 { pt3dadd( 75.9283, 124.548, 22.2258, 0.29 ) }
    dend_27 { pt3dadd( 76.3733, 124.888, 22.3602, 0.29 ) }
    dend_27 { pt3dadd( 77.0673, 125.361, 22.6074, 0.29 ) }
    dend_27 { pt3dadd( 77.7964, 125.815, 22.8812, 0.29 ) }
    dend_27 { pt3dadd( 78.2588, 126.099, 23.0656, 0.59 ) }
    dend_27 { pt3dadd( 79.0468, 126.565, 23.3823, 1.11 ) }
    dend_27 { pt3dadd( 80.3196, 127.251, 23.89, 0.15 ) }
    dend_27 { pt3dadd( 80.6548, 127.412, 24.0145, 0.15 ) }
    dend_27 { pt3dadd( 81.1084, 127.582, 24.161, 0.15 ) }
    dend_27 { pt3dadd( 81.673, 127.769, 24.3294, 0.15 ) }
    dend_27 { pt3dadd( 82.0962, 127.894, 24.4703, 0.15 ) }
    dend_27 { pt3dadd( 82.7104, 128.068, 24.6936, 0.15 ) }
    dend_27 { pt3dadd( 83.5341, 128.315, 25.0161, 0.44 ) }
    dend_27 { pt3dadd( 85.0279, 128.804, 25.6307, 0.22 ) }
    dend_27 { pt3dadd( 85.5636, 129.0, 25.8773, 0.15 ) }
    dend_27 { pt3dadd( 86.8662, 129.558, 26.5182, 0.29 ) }
    dend_27 { pt3dadd( 87.4554, 129.844, 26.8279, 0.29 ) }
    dend_27 { pt3dadd( 87.8749, 130.061, 27.0638, 0.29 ) }
    dend_27 { pt3dadd( 88.5309, 130.42, 27.4454, 0.22 ) }
    dend_27 { pt3dadd( 89.0823, 130.753, 27.7339, 0.22 ) }
    dend_27 { pt3dadd( 89.7136, 131.124, 27.9933, 0.22 ) }
    dend_27 { pt3dadd( 90.338, 131.487, 28.1188, 0.37 ) }
    dend_27 { pt3dadd( 90.9104, 131.771, 28.1666, 0.37 ) }
    dend_27 { pt3dadd( 91.808, 132.154, 28.1687, 0.22 ) }
    dend_27 { pt3dadd( 92.5771, 132.452, 28.1091, 0.59 ) }
    dend_27 { pt3dadd( 93.1279, 132.664, 28.0182, 0.96 ) }
    dend_27 { pt3dadd( 94.1639, 133.108, 27.7964, 0.22 ) }
    dend_27 { pt3dadd( 94.9453, 133.51, 27.5714, 0.15 ) }
    dend_27 { pt3dadd( 95.46, 133.814, 27.4011, 0.15 ) }
    dend_27 { pt3dadd( 96.0476, 134.21, 27.2102, 0.37 ) }
    dend_27 { pt3dadd( 96.7756, 134.746, 27.0065, 0.66 ) }
    dend_27 { pt3dadd( 97.5763, 135.396, 26.8306, 0.74 ) }
    dend_27 { pt3dadd( 98.3709, 136.108, 26.7154, 0.52 ) }
    dend_27 { pt3dadd( 98.6717, 136.4, 26.6958, 0.52 ) }
    dend_27 { pt3dadd( 99.3464, 137.074, 26.7219, 0.15 ) }
    dend_27 { pt3dadd( 100.091, 137.824, 26.7962, 0.22 ) }
    dend_27 { pt3dadd( 100.567, 138.299, 26.8888, 0.22 ) }
    dend_27 { pt3dadd( 101.068, 138.773, 27.0287, 0.66 ) }
    dend_27 { pt3dadd( 101.843, 139.484, 27.3385, 0.96 ) }
    dend_27 { pt3dadd( 102.271, 139.866, 27.5289, 0.96 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 60/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 25.472, 50.6307, 5.96389, 0.22 ) }
    dend_26 { pt3dadd( 25.2334, 51.9623, 4.93786, 0.22 ) }
    dend_26 { pt3dadd( 25.0911, 52.7373, 4.40334, 0.22 ) }
    dend_26 { pt3dadd( 24.9659, 53.4258, 3.97038, 0.44 ) }
    dend_26 { pt3dadd( 24.8139, 54.3218, 3.46849, 0.37 ) }
    dend_26 { pt3dadd( 24.6225, 55.2682, 2.97039, 0.37 ) }
    dend_26 { pt3dadd( 24.3929, 56.2743, 2.42518, 0.29 ) }
    dend_26 { pt3dadd( 24.1837, 57.002, 2.05301, 0.29 ) }
    dend_26 { pt3dadd( 23.8026, 58.0346, 1.5375, 0.52 ) }
    dend_26 { pt3dadd( 23.5234, 58.6933, 1.20012, 0.15 ) }
    dend_26 { pt3dadd( 23.2757, 59.2859, 0.881363, 0.37 ) }
    dend_26 { pt3dadd( 23.0684, 59.877, 0.516401, 0.37 ) }
    dend_26 { pt3dadd( 22.8743, 60.5595, 0.072157, 0.22 ) }
    dend_26 { pt3dadd( 22.7252, 61.1619, -0.275077, 0.22 ) }
    dend_26 { pt3dadd( 22.6323, 61.6689, -0.558414, 0.59 ) }
    dend_26 { pt3dadd( 22.5357, 62.4271, -1.00302, 0.22 ) }
    dend_26 { pt3dadd( 22.4766, 63.2669, -1.47878, 0.37 ) }
    dend_26 { pt3dadd( 22.4043, 64.0788, -1.94394, 0.81 ) }
    dend_26 { pt3dadd( 22.3572, 64.5252, -2.21, 0.81 ) }
    dend_26 { pt3dadd( 22.1885, 65.6236, -2.85877, 0.52 ) }
    dend_26 { pt3dadd( 22.0241, 66.5285, -3.42242, 0.52 ) }
    dend_26 { pt3dadd( 21.8075, 67.6727, -4.16165, 0.22 ) }
    dend_26 { pt3dadd( 21.6339, 68.5641, -4.74032, 0.15 ) }
    dend_26 { pt3dadd( 21.4816, 69.2933, -5.20761, 0.37 ) }
    dend_26 { pt3dadd( 21.3711, 69.8086, -5.50764, 0.37 ) }
    dend_26 { pt3dadd( 21.2318, 70.5458, -5.88988, 0.15 ) }
    dend_26 { pt3dadd( 21.1569, 71.0491, -6.12571, 0.15 ) }
    dend_26 { pt3dadd( 21.0892, 71.6221, -6.37908, 0.15 ) }
    dend_26 { pt3dadd( 20.9886, 72.4984, -6.72331, 0.74 ) }
    dend_26 { pt3dadd( 20.853, 73.3223, -7.03359, 0.22 ) }
    dend_26 { pt3dadd( 20.6423, 74.239, -7.36229, 0.22 ) }
    dend_26 { pt3dadd( 20.4656, 74.8222, -7.54909, 0.22 ) }
    dend_26 { pt3dadd( 20.0985, 75.8716, -7.85325, 0.96 ) }
    dend_26 { pt3dadd( 19.7829, 76.7501, -8.07569, 0.96 ) }
    dend_26 { pt3dadd( 19.5969, 77.2913, -8.17954, 0.15 ) }
    dend_26 { pt3dadd( 19.3819, 77.8901, -8.28037, 0.15 ) }
    dend_26 { pt3dadd( 19.1624, 78.445, -8.36486, 0.15 ) }
    dend_26 { pt3dadd( 18.9017, 79.1104, -8.47197, 0.44 ) }
    dend_26 { pt3dadd( 18.7836, 79.439, -8.52967, 0.44 ) }
    dend_26 { pt3dadd( 18.3189, 80.8303, -8.74524, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_26 { pt3dadd( 18.0819, 81.5942, -8.82188, 0.22 ) }
    dend_26 { pt3dadd( 17.8586, 82.3067, -8.857, 0.22 ) }
    dend_26 { pt3dadd( 17.6722, 82.7892, -8.8417, 0.59 ) }
    dend_26 { pt3dadd( 17.3981, 83.3721, -8.78159, 0.74 ) }
    dend_26 { pt3dadd( 16.9903, 84.1379, -8.66421, 0.22 ) }
    dend_26 { pt3dadd( 16.6244, 84.7757, -8.5287, 0.22 ) }
    dend_26 { pt3dadd( 16.2973, 85.3871, -8.377, 0.88 ) }
    dend_26 { pt3dadd( 15.6224, 86.7801, -8.02875, 0.15 ) }
    dend_26 { pt3dadd( 15.2801, 87.544, -7.85798, 0.15 ) }
    dend_26 { pt3dadd( 14.8959, 88.4406, -7.68958, 0.15 ) }
    dend_26 { pt3dadd( 14.5685, 89.1901, -7.58533, 0.66 ) }
    dend_26 { pt3dadd( 14.0925, 90.1554, -7.45449, 0.07 ) }
    dend_26 { pt3dadd( 13.8137, 90.689, -7.37147, 0.15 ) }
    dend_26 { pt3dadd( 13.4986, 91.2507, -7.27334, 0.15 ) }
    dend_26 { pt3dadd( 13.1886, 91.7012, -7.17565, 0.15 ) }
    dend_26 { pt3dadd( 12.647, 92.2559, -7.02809, 0.22 ) }
    dend_26 { pt3dadd( 11.6836, 92.9422, -6.83382, 0.07 ) }
    dend_26 { pt3dadd( 11.4038, 93.0973, -6.79277, 0.07 ) }
    dend_26 { pt3dadd( 10.6725, 93.4996, -6.71149, 0.07 ) }
    dend_26 { pt3dadd( 10.2479, 93.7348, -6.68964, 0.52 ) }
    dend_26 { pt3dadd( 9.72775, 94.0353, -6.68799, 0.96 ) }
    dend_26 { pt3dadd( 9.27511, 94.312, -6.70489, 0.96 ) }
    dend_26 { pt3dadd( 8.41763, 94.883, -6.79678, 0.52 ) }
    dend_26 { pt3dadd( 7.48673, 95.504, -6.93211, 0.22 ) }
    dend_26 { pt3dadd( 6.76641, 95.9995, -7.07968, 0.29 ) }
    dend_26 { pt3dadd( 6.11281, 96.479, -7.2439, 0.74 ) }
    dend_26 { pt3dadd( 5.46578, 96.9812, -7.45166, 0.22 ) }
    dend_26 { pt3dadd( 4.72347, 97.5372, -7.72844, 0.15 ) }
    dend_26 { pt3dadd( 4.0967, 97.9635, -7.98801, 0.15 ) }
    dend_26 { pt3dadd( 3.28428, 98.4684, -8.34205, 0.15 ) }
    dend_26 { pt3dadd( 2.77898, 98.7748, -8.56308, 0.59 ) }
    dend_26 { pt3dadd( 2.09129, 99.1811, -8.9034, 0.15 ) }
    dend_26 { pt3dadd( 1.41127, 99.5688, -9.25847, 0.15 ) }
    dend_26 { pt3dadd( 0.940949, 99.833, -9.52444, 0.15 ) }
    dend_26 { pt3dadd( 0.428066, 100.139, -9.86661, 0.37 ) }
    dend_26 { pt3dadd( -0.116954, 100.481, -10.2708, 0.22 ) }
    dend_26 { pt3dadd( -0.662554, 100.855, -10.7511, 0.22 ) }
    dend_26 { pt3dadd( -1.26156, 101.331, -11.3594, 1.03 ) }
    dend_26 { pt3dadd( -1.89283, 101.919, -12.0785, 0.22 ) }
    dend_26 { pt3dadd( -2.38333, 102.398, -12.6564, 0.52 ) }
    dend_26 { pt3dadd( -2.69253, 102.689, -13.0103, 0.74 ) }
    dend_26 { pt3dadd( -3.34884, 103.25, -13.6703, 0.22 ) }
    dend_26 { pt3dadd( -3.71964, 103.549, -13.9759, 0.22 ) }
    dend_26 { pt3dadd( -4.16621, 103.924, -14.2964, 0.22 ) }
    dend_26 { pt3dadd( -4.69085, 104.432, -14.6249, 0.22 ) }
    dend_26 { pt3dadd( -4.92301, 104.708, -14.7698, 0.22 ) }
    dend_26 { pt3dadd( -5.34966, 105.292, -15.0505, 0.22 ) }
    dend_26 { pt3dadd( -5.65112, 105.73, -15.2522, 0.74 ) }
    dend_26 { pt3dadd( -5.95639, 106.178, -15.4738, 0.15 ) }
    dend_26 { pt3dadd( -6.35836, 106.754, -15.7527, 0.15 ) }
    dend_26 { pt3dadd( -6.80417, 107.392, -16.0617, 0.15 ) }
    dend_26 { pt3dadd( -7.11574, 107.829, -16.2472, 0.15 ) }
    dend_26 { pt3dadd( -7.45696, 108.308, -16.4071, 0.74 ) }
    dend_26 { pt3dadd( -7.89534, 108.922, -16.5608, 0.96 ) }
    dend_26 { pt3dadd( -8.81778, 110.227, -16.778, 0.15 ) }
    dend_26 { pt3dadd( -9.01868, 110.529, -16.8013, 0.15 ) }
    dend_26 { pt3dadd( -9.46794, 111.312, -16.8128, 0.37 ) }
    dend_26 { pt3dadd( -10.0619, 112.531, -16.7416, 0.15 ) }
    dend_26 { pt3dadd( -10.3134, 113.098, -16.6604, 0.22 ) }
    dend_26 { pt3dadd( -10.4733, 113.48, -16.5819, 0.22 ) }
    dend_26 { pt3dadd( -10.7767, 114.272, -16.3503, 0.81 ) }
    dend_26 { pt3dadd( -11.0149, 114.909, -16.1296, 0.29 ) }
    dend_26 { pt3dadd( -11.2796, 115.625, -15.8468, 0.07 ) }
    dend_26 { pt3dadd( -11.614, 116.425, -15.4662, 0.07 ) }
    dend_26 { pt3dadd( -11.8475, 116.901, -15.234, 0.52 ) }
    dend_26 { pt3dadd( -12.1896, 117.556, -14.9292, 0.15 ) }
    dend_26 { pt3dadd( -12.4589, 118.037, -14.7266, 0.15 ) }
    dend_26 { pt3dadd( -12.6481, 118.351, -14.6159, 0.15 ) }
    dend_26 { pt3dadd( -12.9544, 118.918, -14.5063, 0.59 ) }
    dend_26 { pt3dadd( -13.3176, 119.695, -14.4458, 0.15 ) }
    dend_26 { pt3dadd( -13.5338, 120.149, -14.4514, 0.29 ) }
    dend_26 { pt3dadd( -13.8051, 120.628, -14.5052, 0.15 ) }
    dend_26 { pt3dadd( -14.2621, 121.3, -14.6131, 0.15 ) }
    dend_26 { pt3dadd( -14.7833, 121.983, -14.7446, 0.22 ) }
    dend_26 { pt3dadd( -15.0063, 122.278, -14.8029, 0.22 ) }
    dend_26 { pt3dadd( -15.374, 122.78, -14.8946, 0.22 ) }
    dend_26 { pt3dadd( -15.7906, 123.344, -14.9837, 0.66 ) }
    dend_26 { pt3dadd( -16.2351, 123.956, -15.062, 0.74 ) }
    dend_26 { pt3dadd( -16.8015, 124.787, -15.139, 0.15 ) }
    dend_26 { pt3dadd( -17.181, 125.39, -15.1615, 0.15 ) }
    dend_26 { pt3dadd( -17.5864, 126.251, -15.1502, 0.15 ) }
    dend_26 { pt3dadd( -17.8275, 126.863, -15.1292, 0.22 ) }
    dend_26 { pt3dadd( -18.0228, 127.497, -15.1029, 0.07 ) }
    dend_26 { pt3dadd( -18.1912, 128.249, -15.0638, 0.07 ) }
    dend_26 { pt3dadd( -18.2637, 128.789, -15.026, 0.15 ) }
    dend_26 { pt3dadd( -18.3577, 130.08, -14.9026, 0.07 ) }
    dend_26 { pt3dadd( -21.1655, 138.835, -17.5819, 0.07 ) }
    dend_26 { pt3dadd( -24.3897, 147.806, -18.2381, 0.07 ) }
    dend_26 { pt3dadd( -26.7076, 157.014, -19.0656, 0.07 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 32.788, -7.44822, -15.772, 0.37 ) }
    dend_19 { pt3dadd( 33.2603, -8.32344, -16.5437, 0.37 ) }
    dend_19 { pt3dadd( 33.5798, -8.92094, -17.0997, 0.44 ) }
    dend_19 { pt3dadd( 33.9481, -9.5556, -17.7511, 0.44 ) }
    dend_19 { pt3dadd( 34.3745, -10.2033, -18.5137, 0.81 ) }
    dend_19 { pt3dadd( 34.8862, -10.8779, -19.4575, 1.03 ) }
    dend_19 { pt3dadd( 35.3585, -11.4033, -20.3499, 1.18 ) }
    dend_19 { pt3dadd( 35.796, -11.8205, -21.2691, 0.44 ) }
    dend_19 { pt3dadd( 36.1111, -11.9923, -21.8841, 0.81 ) }
    dend_19 { pt3dadd( 36.6305, -11.9637, -22.5939, 1.11 ) }
    dend_19 { pt3dadd( 37.3104, -11.6572, -23.1336, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 37.933, -11.3055, -23.4681, 0.74 ) }
    dend_19 { pt3dadd( 38.7645, -10.8531, -23.8626, 0.15 ) }
    dend_19 { pt3dadd( 39.6006, -10.4482, -24.2673, 0.44 ) }
    dend_19 { pt3dadd( 40.474, -10.0875, -24.647, 0.22 ) }
    dend_19 { pt3dadd( 41.2267, -9.85183, -24.9543, 0.59 ) }
    dend_19 { pt3dadd( 42.2432, -9.62843, -25.3882, 0.74 ) }
    dend_19 { pt3dadd( 43.4627, -9.4617, -26.0628, 1.25 ) }
    dend_19 { pt3dadd( 44.1386, -9.40872, -26.6073, 1.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 8/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 32.788, -7.44822, -15.772, 0.29 ) }
    dend_16 { pt3dadd( 34.0214, -7.70734, -15.0404, 0.29 ) }
    dend_16 { pt3dadd( 35.287, -7.97321, -14.2897, 0.29 ) }
    dend_16 { pt3dadd( 36.4442, -8.21633, -13.6033, 0.81 ) }
    dend_16 { pt3dadd( 37.4752, -8.43291, -12.9918, 0.96 ) }
    dend_16 { pt3dadd( 38.3665, -8.62017, -12.4631, 0.88 ) }
    dend_16 { pt3dadd( 39.234, -8.80241, -11.9486, 0.74 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -39.6179, 64.0471, -17.9283, 0.66 ) }
    dend_10 { pt3dadd( -40.7027, 63.8417, -17.5662, 0.66 ) }
    dend_10 { pt3dadd( -42.186, 63.5593, -17.1648, 0.44 ) }
    dend_10 { pt3dadd( -42.9646, 63.4058, -16.9909, 0.44 ) }
    dend_10 { pt3dadd( -44.1052, 63.1567, -16.7853, 0.59 ) }
    dend_10 { pt3dadd( -45.111, 62.942, -16.6416, 0.74 ) }
    dend_10 { pt3dadd( -46.1413, 62.7475, -16.5177, 0.44 ) }
    dend_10 { pt3dadd( -47.0933, 62.595, -16.4878, 0.44 ) }
    dend_10 { pt3dadd( -47.732, 62.533, -16.522, 0.22 ) }
    dend_10 { pt3dadd( -48.7505, 62.4935, -16.5959, 0.15 ) }
    dend_10 { pt3dadd( -49.256, 62.5449, -16.6468, 0.15 ) }
    dend_10 { pt3dadd( -49.9002, 62.7176, -16.7234, 0.29 ) }
    dend_10 { pt3dadd( -50.5919, 62.977, -16.7759, 0.15 ) }
    dend_10 { pt3dadd( -51.0427, 63.1743, -16.762, 0.15 ) }
    dend_10 { pt3dadd( -51.3174, 63.3013, -16.7222, 0.15 ) }
    dend_10 { pt3dadd( -52.0555, 63.6238, -16.5656, 0.88 ) }
    dend_10 { pt3dadd( -53.0383, 63.964, -16.3273, 0.74 ) }
    dend_10 { pt3dadd( -54.3301, 64.2863, -16.0175, 0.29 ) }
    dend_10 { pt3dadd( -55.3484, 64.4544, -15.8117, 0.22 ) }
    dend_10 { pt3dadd( -55.9627, 64.5029, -15.7161, 0.22 ) }
    dend_10 { pt3dadd( -56.4002, 64.5084, -15.6699, 0.22 ) }
    dend_10 { pt3dadd( -56.9382, 64.4825, -15.6183, 0.66 ) }
    dend_10 { pt3dadd( -57.7678, 64.3863, -15.5401, 1.03 ) }
    dend_10 { pt3dadd( -59.1066, 64.12, -15.4379, 0.52 ) }
    dend_10 { pt3dadd( -60.3481, 63.8171, -15.363, 0.37 ) }
    dend_10 { pt3dadd( -61.004, 63.6655, -15.3108, 0.22 ) }
    dend_10 { pt3dadd( -61.928, 63.5031, -15.1753, 0.15 ) }
    dend_10 { pt3dadd( -62.6942, 63.3834, -15.0301, 0.15 ) }
    dend_10 { pt3dadd( -63.2631, 63.3158, -14.8742, 0.15 ) }
    dend_10 { pt3dadd( -63.5059, 63.3057, -14.7653, 0.81 ) }
    dend_10 { pt3dadd( -64.2114, 63.389, -14.3323, 1.11 ) }
    dend_10 { pt3dadd( -64.9248, 63.5588, -13.864, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 47/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -39.6179, 64.0471, -17.9283, 0.88 ) }
    dend_9 { pt3dadd( -39.5343, 65.1172, -17.8587, 0.88 ) }
    dend_9 { pt3dadd( -39.4261, 65.8917, -17.8124, 0.29 ) }
    dend_9 { pt3dadd( -39.3051, 66.6842, -17.6239, 0.29 ) }
    dend_9 { pt3dadd( -39.2471, 67.2513, -17.4198, 0.29 ) }
    dend_9 { pt3dadd( -39.2201, 67.9502, -17.1104, 0.88 ) }
    dend_9 { pt3dadd( -39.2322, 68.2014, -16.992, 0.88 ) }
    dend_9 { pt3dadd( -39.3476, 69.0642, -16.5184, 0.74 ) }
    dend_9 { pt3dadd( -39.5777, 70.6586, -15.5746, 0.52 ) }
    dend_9 { pt3dadd( -39.7193, 71.6496, -14.9705, 0.37 ) }
    dend_9 { pt3dadd( -39.8442, 72.2876, -14.5802, 0.37 ) }
    dend_9 { pt3dadd( -40.0963, 73.2106, -14.0279, 0.37 ) }
    dend_9 { pt3dadd( -40.2567, 73.702, -13.7639, 0.29 ) }
    dend_9 { pt3dadd( -40.6432, 74.7637, -13.3038, 0.66 ) }
    dend_9 { pt3dadd( -40.8028, 75.2333, -13.1814, 0.22 ) }
    dend_9 { pt3dadd( -40.9922, 75.8273, -13.0605, 0.22 ) }
    dend_9 { pt3dadd( -41.2281, 76.5318, -12.9471, 0.44 ) }
    dend_9 { pt3dadd( -41.4295, 77.2181, -12.8588, 0.15 ) }
    dend_9 { pt3dadd( -41.6488, 77.8424, -12.7956, 0.29 ) }
    dend_9 { pt3dadd( -41.873, 78.371, -12.7402, 0.15 ) }
    dend_9 { pt3dadd( -42.047, 78.7767, -12.6821, 0.15 ) }
    dend_9 { pt3dadd( -42.3958, 79.548, -12.5293, 0.96 ) }
    dend_9 { pt3dadd( -43.1187, 80.981, -12.1696, 0.15 ) }
    dend_9 { pt3dadd( -43.5561, 81.8036, -11.9265, 0.22 ) }
    dend_9 { pt3dadd( -44.0039, 82.6039, -11.6751, 0.22 ) }
    dend_9 { pt3dadd( -44.3589, 83.24, -11.4555, 0.59 ) }
    dend_9 { pt3dadd( -44.8354, 84.0911, -11.1287, 0.37 ) }
    dend_9 { pt3dadd( -45.4437, 85.1428, -10.6619, 0.74 ) }
    dend_9 { pt3dadd( -46.1946, 86.3774, -10.0391, 0.74 ) }
    dend_9 { pt3dadd( -46.8843, 87.6209, -9.40104, 0.22 ) }
    dend_9 { pt3dadd( -47.1694, 88.21, -9.1065, 0.74 ) }
    dend_9 { pt3dadd( -47.3651, 88.6902, -8.88354, 1.03 ) }
    dend_9 { pt3dadd( -47.767, 89.8914, -8.36965, 0.22 ) }
    dend_9 { pt3dadd( -47.9596, 90.6096, -8.08787, 0.22 ) }
    dend_9 { pt3dadd( -48.0899, 91.2646, -7.87374, 0.81 ) }
    dend_9 { pt3dadd( -48.1813, 91.9859, -7.6901, 0.81 ) }
    dend_9 { pt3dadd( -48.3419, 93.5263, -7.41831, 0.15 ) }
    dend_9 { pt3dadd( -48.4261, 94.1878, -7.34525, 0.37 ) }
    dend_9 { pt3dadd( -48.5662, 94.9731, -7.3047, 0.15 ) }
    dend_9 { pt3dadd( -48.7714, 95.8638, -7.27946, 0.22 ) }
    dend_9 { pt3dadd( -48.9014, 96.3533, -7.2663, 0.37 ) }
    dend_9 { pt3dadd( -49.0578, 96.8985, -7.24158, 0.74 ) }
    dend_9 { pt3dadd( -49.4094, 98.1899, -7.13667, 0.29 ) }
    dend_9 { pt3dadd( -49.6555, 99.1682, -7.02913, 0.22 ) }
    dend_9 { pt3dadd( -49.8178, 99.8525, -6.9436, 0.22 ) }
    dend_9 { pt3dadd( -49.9998, 100.674, -6.83005, 0.37 ) }
    dend_9 { pt3dadd( -50.1395, 101.439, -6.71479, 0.22 ) }
    dend_9 { pt3dadd( -50.2636, 102.476, -6.54322, 0.22 ) }
    dend_9 { pt3dadd( -50.2877, 103.461, -6.36112, 0.81 ) }
    dend_9 { pt3dadd( -50.28, 104.796, -6.09914, 0.22 ) }
    dend_9 { pt3dadd( -51.3165, 113.79, -3.04882, 0.22 ) }
    dend_9 { pt3dadd( -52.2408, 122.814, -0.0645092, 0.22 ) }
    dend_9 { pt3dadd( -54.8165, 130.986, 4.33681, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_9 { pt3dadd( -56.5924, 138.72, 9.86588, 0.22 ) }
    dend_9 { pt3dadd( -58.9339, 147.111, 13.9282, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -30.2133, -9.46925, 4.12356, 0.07 ) }
    dend_5 { pt3dadd( -30.7568, -10.3607, 5.01245, 0.07 ) }
    dend_5 { pt3dadd( -31.0238, -10.8287, 5.48967, 0.59 ) }
    dend_5 { pt3dadd( -31.3712, -11.4405, 6.09493, 0.07 ) }
    dend_5 { pt3dadd( -31.6448, -11.9024, 6.53488, 0.29 ) }
    dend_5 { pt3dadd( -31.8794, -12.2946, 6.89706, 0.29 ) }
    dend_5 { pt3dadd( -32.3513, -13.0298, 7.57918, 0.15 ) }
    dend_5 { pt3dadd( -32.6889, -13.49, 8.06408, 0.22 ) }
    dend_5 { pt3dadd( -33.1228, -14.0556, 8.72842, 0.88 ) }
    dend_5 { pt3dadd( -33.546, -14.606, 9.39567, 0.22 ) }
    dend_5 { pt3dadd( -33.9158, -15.092, 9.99368, 0.37 ) }
    dend_5 { pt3dadd( -34.3821, -15.6613, 10.669, 0.59 ) }
    dend_5 { pt3dadd( -34.9879, -16.3279, 11.4578, 0.22 ) }
    dend_5 { pt3dadd( -35.5941, -16.9442, 12.1941, 0.22 ) }
    dend_5 { pt3dadd( -35.966, -17.3092, 12.6134, 0.22 ) }
    dend_5 { pt3dadd( -36.2495, -17.5967, 12.9102, 0.22 ) }
    dend_5 { pt3dadd( -37.0377, -18.352, 13.5912, 0.15 ) }
    dend_5 { pt3dadd( -37.5341, -18.7863, 13.946, 0.15 ) }
    dend_5 { pt3dadd( -38.1919, -19.2868, 14.3388, 0.59 ) }
    dend_5 { pt3dadd( -39.1737, -19.9592, 14.9011, 0.15 ) }
    dend_5 { pt3dadd( -39.847, -20.3794, 15.3147, 0.59 ) }
    dend_5 { pt3dadd( -40.6591, -20.845, 15.8775, 0.07 ) }
    dend_5 { pt3dadd( -41.5147, -21.3177, 16.5133, 0.15 ) }
    dend_5 { pt3dadd( -42.027, -21.5927, 16.8996, 0.66 ) }
    dend_5 { pt3dadd( -42.8987, -22.0358, 17.5827, 0.29 ) }
    dend_5 { pt3dadd( -43.7979, -22.4153, 18.3054, 0.29 ) }
    dend_5 { pt3dadd( -44.6958, -22.7711, 19.0824, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 29/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -30.2133, -9.46925, 4.12356, 0.22 ) }
    dend_4 { pt3dadd( -30.9722, -10.0975, 4.32752, 0.22 ) }
    dend_4 { pt3dadd( -31.8032, -10.8144, 4.54685, 0.22 ) }
    dend_4 { pt3dadd( -32.4678, -11.4661, 4.72161, 0.22 ) }
    dend_4 { pt3dadd( -32.942, -11.9821, 4.86961, 0.15 ) }
    dend_4 { pt3dadd( -33.3922, -12.4826, 5.03655, 0.15 ) }
    dend_4 { pt3dadd( -33.8254, -12.9751, 5.20575, 0.59 ) }
    dend_4 { pt3dadd( -34.0912, -13.3155, 5.32444, 0.66 ) }
    dend_4 { pt3dadd( -34.5333, -13.9333, 5.53092, 0.29 ) }
    dend_4 { pt3dadd( -34.9794, -14.6154, 5.78027, 0.22 ) }
    dend_4 { pt3dadd( -35.4661, -15.4457, 6.0948, 0.22 ) }
    dend_4 { pt3dadd( -35.8585, -16.1774, 6.3616, 0.59 ) }
    dend_4 { pt3dadd( -36.1615, -16.788, 6.57973, 0.59 ) }
    dend_4 { pt3dadd( -36.5002, -17.5371, 6.83571, 0.22 ) }
    dend_4 { pt3dadd( -36.7796, -18.2235, 7.06663, 0.22 ) }
    dend_4 { pt3dadd( -36.9838, -18.8026, 7.25554, 0.74 ) }
    dend_4 { pt3dadd( -37.1618, -19.4055, 7.47819, 0.74 ) }
    dend_4 { pt3dadd( -37.3996, -20.2146, 7.85202, 0.59 ) }
    dend_4 { pt3dadd( -37.5746, -20.778, 8.15096, 0.37 ) }
    dend_4 { pt3dadd( -37.812, -21.4803, 8.53096, 0.22 ) }
    dend_4 { pt3dadd( -38.1221, -22.2387, 8.96007, 0.59 ) }
    dend_4 { pt3dadd( -38.5121, -23.0303, 9.42721, 0.52 ) }
    dend_4 { pt3dadd( -38.853, -23.5902, 9.77165, 0.52 ) }
    dend_4 { pt3dadd( -39.2226, -24.1093, 10.0912, 0.52 ) }
    dend_4 { pt3dadd( -39.9134, -25.0197, 10.6044, 0.22 ) }
    dend_4 { pt3dadd( -40.3748, -25.6446, 10.8896, 0.66 ) }
    dend_4 { pt3dadd( -40.6904, -26.0924, 11.0393, 0.66 ) }
    dend_4 { pt3dadd( -41.0758, -26.6365, 11.1834, 0.22 ) }
    dend_4 { pt3dadd( -41.515, -27.2672, 11.337, 0.22 ) }
    dend_4 { pt3dadd( -41.7624, -27.6105, 11.4193, 0.22 ) }
    dend_4 { pt3dadd( -42.3091, -28.34, 11.6144, 0.74 ) }
    dend_4 { pt3dadd( -42.9013, -29.0793, 11.8328, 0.22 ) }
    dend_4 { pt3dadd( -43.7567, -30.046, 12.1548, 0.15 ) }
    dend_4 { pt3dadd( -44.3926, -30.6435, 12.3887, 0.81 ) }
    dend_4 { pt3dadd( -45.576, -31.4313, 12.816, 0.07 ) }
    dend_4 { pt3dadd( -46.3535, -31.7729, 13.103, 0.22 ) }
    dend_4 { pt3dadd( -47.0546, -31.9156, 13.3447, 0.59 ) }
    dend_4 { pt3dadd( -47.6205, -31.9135, 13.5116, 0.81 ) }
    dend_4 { pt3dadd( -48.679, -31.7018, 13.7303, 0.22 ) }
    dend_4 { pt3dadd( -50.1638, -31.1755, 13.8942, 0.15 ) }
    dend_4 { pt3dadd( -51.0158, -30.7483, 13.9013, 0.81 ) }
    dend_4 { pt3dadd( -52.2444, -29.9634, 13.7398, 0.22 ) }
    dend_4 { pt3dadd( -53.1195, -29.2685, 13.4745, 0.66 ) }
    dend_4 { pt3dadd( -53.7635, -28.6352, 13.1649, 0.22 ) }
    dend_4 { pt3dadd( -54.2668, -28.0133, 12.79, 0.22 ) }
    dend_4 { pt3dadd( -54.6143, -27.4861, 12.4154, 0.59 ) }
    dend_4 { pt3dadd( -55.0656, -26.6289, 11.7848, 0.15 ) }
    dend_4 { pt3dadd( -55.4055, -25.8173, 11.1985, 0.15 ) }
    dend_4 { pt3dadd( -55.5816, -25.3719, 10.8759, 0.66 ) }
    dend_4 { pt3dadd( -55.8051, -24.8148, 10.4725, 0.66 ) }
    dend_4 { pt3dadd( -56.1218, -24.0825, 9.94074, 0.15 ) }
    dend_4 { pt3dadd( -56.4479, -23.4707, 9.48101, 0.15 ) }
    dend_4 { pt3dadd( -56.7529, -23.0552, 9.19216, 0.52 ) }
    dend_4 { pt3dadd( -57.4093, -22.4387, 8.85875, 0.15 ) }
    dend_4 { pt3dadd( -58.1218, -22.0442, 8.75259, 0.22 ) }
    dend_4 { pt3dadd( -58.5362, -21.9056, 8.77277, 0.59 ) }
    dend_4 { pt3dadd( -59.2109, -21.7834, 8.90256, 0.59 ) }
    dend_4 { pt3dadd( -60.4976, -21.6782, 9.2567, 0.15 ) }
    dend_4 { pt3dadd( -61.9317, -21.6766, 9.75197, 0.66 ) }
    dend_4 { pt3dadd( -63.6999, -21.7888, 10.4883, 0.15 ) }
    dend_4 { pt3dadd( -64.6427, -21.91, 10.9245, 0.59 ) }
    dend_4 { pt3dadd( -66.0597, -22.2137, 11.6131, 0.15 ) }
    dend_4 { pt3dadd( -66.8989, -22.5115, 12.0233, 0.22 ) }
    dend_4 { pt3dadd( -67.5387, -22.8399, 12.3208, 0.22 ) }
    dend_4 { pt3dadd( -67.9916, -23.1428, 12.5308, 0.52 ) }
    dend_4 { pt3dadd( -68.4362, -23.5142, 12.7351, 0.22 ) }
    dend_4 { pt3dadd( -69.0536, -24.0886, 12.9819, 0.81 ) }
    dend_4 { pt3dadd( -70.2102, -25.2234, 13.3267, 0.07 ) }
    dend_4 { pt3dadd( -70.7214, -25.6637, 13.4208, 0.22 ) }
    dend_4 { pt3dadd( -71.2158, -26.0182, 13.4667, 0.07 ) }
    dend_4 { pt3dadd( -71.8284, -26.3922, 13.4835, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_4 { pt3dadd( -72.6981, -26.8649, 13.472, 0.07 ) }
    dend_4 { pt3dadd( -73.0302, -27.0231, 13.4516, 0.44 ) }
    dend_4 { pt3dadd( -74.7382, -27.7295, 13.3009, 0.15 ) }
    dend_4 { pt3dadd( -75.4409, -28.0055, 13.2196, 0.37 ) }
    dend_4 { pt3dadd( -76.5407, -28.4126, 13.0525, 0.07 ) }
    dend_4 { pt3dadd( -77.3091, -28.6777, 12.9246, 0.22 ) }
    dend_4 { pt3dadd( -78.3936, -29.0463, 12.7248, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 102.271, 139.866, 27.5289, 0.52 ) }
    dend_29 { pt3dadd( 102.707, 140.559, 27.6747, 0.52 ) }
    dend_29 { pt3dadd( 103.563, 141.773, 27.967, 0.22 ) }
    dend_29 { pt3dadd( 104.056, 142.431, 28.1762, 0.66 ) }
    dend_29 { pt3dadd( 104.339, 142.78, 28.3292, 0.96 ) }
    dend_29 { pt3dadd( 104.97, 143.53, 28.7024, 0.22 ) }
    dend_29 { pt3dadd( 105.477, 144.15, 29.0204, 0.22 ) }
    dend_29 { pt3dadd( 106.165, 144.977, 29.454, 0.52 ) }
    dend_29 { pt3dadd( 106.582, 145.458, 29.6914, 0.96 ) }
    dend_29 { pt3dadd( 107.567, 146.612, 30.1684, 0.52 ) }
    dend_29 { pt3dadd( 108.457, 147.606, 30.4908, 0.22 ) }
    dend_29 { pt3dadd( 109.056, 148.239, 30.6374, 0.66 ) }
    dend_29 { pt3dadd( 110.012, 149.116, 30.7311, 0.15 ) }
    dend_29 { pt3dadd( 110.61, 149.587, 30.7198, 0.15 ) }
    dend_29 { pt3dadd( 111.295, 150.045, 30.6558, 0.44 ) }
    dend_29 { pt3dadd( 112.427, 150.671, 30.4946, 0.15 ) }
    dend_29 { pt3dadd( 113.137, 150.985, 30.3968, 0.74 ) }
    dend_29 { pt3dadd( 115.23, 151.747, 30.1646, 0.15 ) }
    dend_29 { pt3dadd( 115.859, 151.958, 30.1067, 0.59 ) }
    dend_29 { pt3dadd( 116.888, 152.325, 30.0221, 0.15 ) }
    dend_29 { pt3dadd( 117.257, 152.466, 29.9866, 0.22 ) }
    dend_29 { pt3dadd( 117.928, 152.755, 29.9155, 0.15 ) }
    dend_29 { pt3dadd( 118.971, 153.264, 29.7452, 0.66 ) }
    dend_29 { pt3dadd( 120.123, 153.919, 29.4758, 0.15 ) }
    dend_29 { pt3dadd( 120.977, 154.471, 29.2482, 0.37 ) }
    dend_29 { pt3dadd( 121.533, 154.856, 29.0472, 0.07 ) }
    dend_29 { pt3dadd( 121.926, 155.135, 28.8657, 0.22 ) }
    dend_29 { pt3dadd( 122.878, 155.831, 28.2837, 0.07 ) }
    dend_29 { pt3dadd( 123.425, 156.205, 27.8609, 0.59 ) }
    dend_29 { pt3dadd( 124.041, 156.6, 27.2405, 0.07 ) }
    dend_29 { pt3dadd( 124.861, 157.088, 26.2082, 0.15 ) }
    dend_29 { pt3dadd( 125.243, 157.297, 25.6618, 0.37 ) }
    dend_29 { pt3dadd( 125.871, 157.589, 24.6454, 0.22 ) }
    dend_29 { pt3dadd( 126.346, 157.798, 23.7637, 0.52 ) }
    dend_29 { pt3dadd( 126.984, 158.061, 22.4582, 0.22 ) }
    dend_29 { pt3dadd( 127.296, 158.187, 21.7825, 0.22 ) }
    dend_29 { pt3dadd( 127.5, 158.27, 21.3565, 0.44 ) }
    dend_29 { pt3dadd( 128.007, 158.489, 20.2217, 0.22 ) }
    dend_29 { pt3dadd( 128.417, 158.691, 19.1829, 0.22 ) }
    dend_29 { pt3dadd( 128.795, 158.935, 18.0812, 0.22 ) }
    dend_29 { pt3dadd( 128.976, 159.061, 17.5355, 0.37 ) }
    dend_29 { pt3dadd( 129.113, 159.174, 17.0714, 0.37 ) }
    dend_29 { pt3dadd( 129.317, 159.384, 16.2252, 0.22 ) }
    dend_29 { pt3dadd( 129.418, 159.512, 15.7194, 0.37 ) }
    dend_29 { pt3dadd( 129.509, 159.628, 15.2764, 0.37 ) }
    dend_29 { pt3dadd( 129.603, 159.816, 14.6715, 0.37 ) }
    dend_29 { pt3dadd( 129.643, 159.961, 14.2473, 0.37 ) }
    dend_29 { pt3dadd( 129.672, 160.267, 13.5161, 0.22 ) }
    dend_29 { pt3dadd( 129.64, 161.022, 12.1622, 0.44 ) }
    dend_29 { pt3dadd( 129.542, 161.565, 11.3864, 0.59 ) }
    dend_29 { pt3dadd( 129.353, 162.327, 10.3819, 0.15 ) }
    dend_29 { pt3dadd( 129.166, 162.896, 9.71412, 0.37 ) }
    dend_29 { pt3dadd( 128.831, 163.719, 8.86604, 0.07 ) }
    dend_29 { pt3dadd( 128.354, 164.673, 8.07565, 0.07 ) }
    dend_29 { pt3dadd( 128.185, 164.951, 7.9188, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 62/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 102.271, 139.866, 27.5289, 0.15 ) }
    dend_28 { pt3dadd( 103.727, 139.472, 28.2387, 0.15 ) }
    dend_28 { pt3dadd( 104.889, 139.106, 28.8064, 0.15 ) }
    dend_28 { pt3dadd( 105.829, 138.775, 29.2678, 0.37 ) }
    dend_28 { pt3dadd( 106.571, 138.483, 29.6176, 0.37 ) }
    dend_28 { pt3dadd( 107.917, 137.935, 30.2486, 0.15 ) }
    dend_28 { pt3dadd( 109.415, 137.329, 30.9569, 0.15 ) }
    dend_28 { pt3dadd( 110.013, 137.073, 31.2556, 0.15 ) }
    dend_28 { pt3dadd( 110.684, 136.783, 31.5676, 0.15 ) }
    dend_28 { pt3dadd( 111.518, 136.434, 31.957, 0.66 ) }
    dend_28 { pt3dadd( 113.084, 135.805, 32.6755, 0.07 ) }
    dend_28 { pt3dadd( 114.11, 135.401, 33.1611, 0.07 ) }
    dend_28 { pt3dadd( 114.571, 135.231, 33.3606, 0.07 ) }
    dend_28 { pt3dadd( 115.171, 135.01, 33.6325, 0.52 ) }
    dend_28 { pt3dadd( 115.856, 134.744, 33.9564, 0.74 ) }
    dend_28 { pt3dadd( 116.91, 134.292, 34.4816, 0.07 ) }
    dend_28 { pt3dadd( 117.979, 133.741, 35.0666, 0.07 ) }
    dend_28 { pt3dadd( 118.715, 133.311, 35.4965, 0.22 ) }
    dend_28 { pt3dadd( 119.448, 132.842, 35.9677, 0.22 ) }
    dend_28 { pt3dadd( 120.693, 131.972, 36.8614, 0.07 ) }
    dend_28 { pt3dadd( 121.633, 131.269, 37.6016, 0.52 ) }
    dend_28 { pt3dadd( 122.983, 130.198, 38.819, 0.15 ) }
    dend_28 { pt3dadd( 123.494, 129.771, 39.359, 0.59 ) }
    dend_28 { pt3dadd( 124.308, 129.069, 40.3458, 0.07 ) }
    dend_28 { pt3dadd( 124.989, 128.458, 41.2229, 0.07 ) }
    dend_28 { pt3dadd( 125.371, 128.108, 41.7696, 0.29 ) }
    dend_28 { pt3dadd( 125.865, 127.648, 42.5609, 0.29 ) }
    dend_28 { pt3dadd( 126.574, 127.011, 43.8162, 0.15 ) }
    dend_28 { pt3dadd( 127.096, 126.559, 44.8396, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 44.1386, -9.40872, -26.6073, 0.15 ) }
    dend_21 { pt3dadd( 44.1263, -8.28736, -26.7977, 0.15 ) }
    dend_21 { pt3dadd( 44.1842, -7.52775, -26.8765, 0.15 ) }
    dend_21 { pt3dadd( 44.2782, -6.64282, -26.937, 0.81 ) }
    dend_21 { pt3dadd( 44.3537, -5.9245, -26.97, 0.22 ) }
    dend_21 { pt3dadd( 44.4308, -5.15507, -26.9937, 0.15 ) }
    dend_21 { pt3dadd( 44.5115, -4.39987, -27.0092, 0.15 ) }
    dend_21 { pt3dadd( 44.6062, -3.45544, -27.0045, 0.15 ) }
    dend_21 { pt3dadd( 44.7024, -3.0422, -26.9982, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_21 { pt3dadd( 44.9167, -2.50093, -26.991, 0.66 ) }
    dend_21 { pt3dadd( 45.2165, -2.01911, -27.0227, 0.22 ) }
    dend_21 { pt3dadd( 45.6465, -1.50714, -27.1156, 0.22 ) }
    dend_21 { pt3dadd( 45.9012, -1.2535, -27.2, 0.22 ) }
    dend_21 { pt3dadd( 46.644, -0.633828, -27.5522, 0.88 ) }
    dend_21 { pt3dadd( 46.9588, -0.397417, -27.7326, 0.88 ) }
    dend_21 { pt3dadd( 47.6475, 0.0809573, -28.2053, 0.22 ) }
    dend_21 { pt3dadd( 48.1644, 0.445504, -28.6338, 0.22 ) }
    dend_21 { pt3dadd( 48.5809, 0.785163, -29.0521, 0.22 ) }
    dend_21 { pt3dadd( 49.022, 1.218, -29.574, 0.22 ) }
    dend_21 { pt3dadd( 49.3692, 1.65415, -30.0636, 0.59 ) }
    dend_21 { pt3dadd( 49.7847, 2.36359, -30.7603, 0.88 ) }
    dend_21 { pt3dadd( 50.0408, 2.99166, -31.3169, 0.88 ) }
    dend_21 { pt3dadd( 50.3211, 3.96918, -32.1414, 0.15 ) }
    dend_21 { pt3dadd( 50.379, 4.24461, -32.3574, 0.29 ) }
    dend_21 { pt3dadd( 50.4628, 4.80496, -32.7634, 0.81 ) }
    dend_21 { pt3dadd( 50.5362, 5.84303, -33.4632, 0.22 ) }
    dend_21 { pt3dadd( 50.5339, 6.66606, -33.9773, 0.22 ) }
    dend_21 { pt3dadd( 50.505, 7.28844, -34.3522, 0.22 ) }
    dend_21 { pt3dadd( 50.4678, 7.7721, -34.6567, 0.81 ) }
    dend_21 { pt3dadd( 50.4547, 8.26357, -35.0057, 0.59 ) }
    dend_21 { pt3dadd( 50.5111, 8.80185, -35.5005, 0.59 ) }
    dend_21 { pt3dadd( 53.8607, 17.3304, -38.3618, 0.59 ) }
    dend_21 { pt3dadd( 55.6479, 26.4695, -40.4256, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 24/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 44.1386, -9.40872, -26.6073, 0.29 ) }
    dend_20 { pt3dadd( 45.9158, -10.2668, -25.6833, 0.29 ) }
    dend_20 { pt3dadd( 46.7386, -10.5834, -25.3112, 0.22 ) }
    dend_20 { pt3dadd( 47.4613, -10.5197, -25.2251, 0.22 ) }
    dend_20 { pt3dadd( 47.7477, -10.4365, -25.2536, 0.22 ) }
    dend_20 { pt3dadd( 48.2521, -10.3234, -25.3776, 0.44 ) }
    dend_20 { pt3dadd( 48.8908, -10.2665, -25.6046, 0.66 ) }
    dend_20 { pt3dadd( 49.7057, -10.2476, -26.1805, 0.22 ) }
    dend_20 { pt3dadd( 50.0614, -10.2892, -26.4487, 0.22 ) }
    dend_20 { pt3dadd( 50.5321, -10.4537, -26.8008, 0.52 ) }
    dend_20 { pt3dadd( 51.2728, -10.8644, -27.356, 0.81 ) }
    dend_20 { pt3dadd( 51.8826, -11.2421, -27.7999, 0.59 ) }
    dend_20 { pt3dadd( 52.6097, -11.7068, -28.3568, 0.88 ) }
    dend_20 { pt3dadd( 53.1992, -12.0682, -28.8236, 0.96 ) }
    dend_20 { pt3dadd( 53.9901, -12.468, -29.4914, 0.66 ) }
    dend_20 { pt3dadd( 55.1635, -12.952, -30.5252, 0.22 ) }
    dend_20 { pt3dadd( 56.0223, -13.2246, -31.2911, 0.15 ) }
    dend_20 { pt3dadd( 56.8067, -13.4032, -31.963, 0.15 ) }
    dend_20 { pt3dadd( 57.3966, -13.4804, -32.4489, 1.4 ) }
    dend_20 { pt3dadd( 58.501, -13.5122, -33.2815, 0.22 ) }
    dend_20 { pt3dadd( 59.3488, -13.4712, -33.8303, 0.22 ) }
    dend_20 { pt3dadd( 59.7795, -13.4368, -34.0558, 0.22 ) }
    dend_20 { pt3dadd( 60.6803, -13.4514, -34.4062, 0.66 ) }
    dend_20 { pt3dadd( 61.3444, -13.5778, -34.5335, 0.66 ) }
    dend_20 { pt3dadd( 62.1351, -14.0221, -34.5296, 0.22 ) }
    dend_20 { pt3dadd( 62.4879, -14.5123, -34.4282, 0.22 ) }
    dend_20 { pt3dadd( 62.6954, -14.9751, -34.3708, 0.22 ) }
    dend_20 { pt3dadd( 62.9937, -15.7199, -34.3435, 0.22 ) }
    dend_20 { pt3dadd( 63.3345, -16.5455, -34.3779, 0.96 ) }
    dend_20 { pt3dadd( 63.693, -17.2556, -34.4432, 1.25 ) }
    dend_20 { pt3dadd( 64.257, -18.0667, -34.5796, 0.22 ) }
    dend_20 { pt3dadd( 64.9918, -18.8128, -34.7625, 0.22 ) }
    dend_20 { pt3dadd( 65.5687, -19.2833, -34.8995, 0.29 ) }
    dend_20 { pt3dadd( 66.1631, -19.6936, -35.05, 0.81 ) }
    dend_20 { pt3dadd( 66.9318, -20.16, -35.2608, 0.88 ) }
    dend_20 { pt3dadd( 67.8854, -20.6715, -35.5139, 1.03 ) }
    dend_20 { pt3dadd( 68.6878, -21.0452, -35.7368, 0.66 ) }
    dend_20 { pt3dadd( 69.7079, -21.4938, -36.0099, 0.22 ) }
    dend_20 { pt3dadd( 70.5131, -21.8221, -36.2261, 0.44 ) }
    dend_20 { pt3dadd( 71.2575, -22.0992, -36.4136, 0.88 ) }
    dend_20 { pt3dadd( 72.104, -22.3928, -36.5962, 0.96 ) }
    dend_20 { pt3dadd( 73.087, -22.744, -36.7737, 1.55 ) }
    dend_20 { pt3dadd( 74.1563, -23.1616, -36.9533, 0.29 ) }
    dend_20 { pt3dadd( 75.0697, -23.5789, -37.1304, 0.15 ) }
    dend_20 { pt3dadd( 75.681, -23.985, -37.2665, 0.22 ) }
    dend_20 { pt3dadd( 76.3003, -24.5882, -37.4713, 0.66 ) }
    dend_20 { pt3dadd( 77.0214, -25.5226, -37.8179, 0.22 ) }
    dend_20 { pt3dadd( 77.5446, -26.3432, -38.1427, 0.59 ) }
    dend_20 { pt3dadd( 77.9102, -26.9606, -38.4242, 0.88 ) }
    dend_20 { pt3dadd( 78.4695, -27.8866, -38.8801, 0.22 ) }
    dend_20 { pt3dadd( 78.9743, -28.5843, -39.2484, 0.29 ) }
    dend_20 { pt3dadd( 79.48, -29.1172, -39.5385, 0.29 ) }
    dend_20 { pt3dadd( 79.8486, -29.3937, -39.6903, 0.74 ) }
    dend_20 { pt3dadd( 80.6312, -29.7883, -39.9, 1.18 ) }
    dend_20 { pt3dadd( 81.3638, -30.024, -40.0047, 1.25 ) }
    dend_20 { pt3dadd( 82.7116, -30.292, -40.0961, 0.52 ) }
    dend_20 { pt3dadd( 83.5816, -30.4336, -40.1017, 0.22 ) }
    dend_20 { pt3dadd( 84.5957, -30.6053, -40.0742, 0.22 ) }
    dend_20 { pt3dadd( 85.6529, -30.8744, -40.0268, 0.29 ) }
    dend_20 { pt3dadd( 86.7789, -31.2936, -39.9544, 0.22 ) }
    dend_20 { pt3dadd( 87.4614, -31.6347, -39.8982, 1.25 ) }
    dend_20 { pt3dadd( 87.977, -31.9753, -39.8479, 1.03 ) }
    dend_20 { pt3dadd( 88.6442, -32.4881, -39.7797, 1.18 ) }
    dend_20 { pt3dadd( 90.0263, -33.6376, -39.6227, 0.22 ) }
    dend_20 { pt3dadd( 90.6432, -34.1583, -39.5602, 0.22 ) }
    dend_20 { pt3dadd( 90.8911, -34.3362, -39.5411, 0.22 ) }
    dend_20 { pt3dadd( 91.6986, -34.7885, -39.4703, 0.29 ) }
    dend_20 { pt3dadd( 92.5775, -35.1744, -39.3842, 0.22 ) }
    dend_20 { pt3dadd( 93.4114, -35.4741, -39.2955, 0.81 ) }
    dend_20 { pt3dadd( 93.8991, -35.6298, -39.2205, 1.11 ) }
    dend_20 { pt3dadd( 95.1287, -36.048, -39.0284, 0.22 ) }
    dend_20 { pt3dadd( 95.7131, -36.266, -38.9404, 0.22 ) }
    dend_20 { pt3dadd( 96.4657, -36.5649, -38.8518, 0.88 ) }
    dend_20 { pt3dadd( 96.9478, -36.7641, -38.8163, 0.88 ) }
    dend_20 { pt3dadd( 98.0622, -37.2289, -38.8444, 0.22 ) }
    dend_20 { pt3dadd( 98.7392, -37.5384, -38.9662, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_20 { pt3dadd( 99.3059, -37.8134, -39.1976, 0.88 ) }
    dend_20 { pt3dadd( 100.205, -38.2089, -39.772, 1.03 ) }
    dend_20 { pt3dadd( 100.639, -38.3569, -40.1774, 0.59 ) }
    dend_20 { pt3dadd( 101.235, -38.4984, -40.8833, 0.22 ) }
    dend_20 { pt3dadd( 101.927, -38.5893, -41.8694, 0.22 ) }
    dend_20 { pt3dadd( 102.246, -38.6159, -42.3689, 0.22 ) }
    dend_20 { pt3dadd( 102.486, -38.6294, -42.7123, 0.22 ) }
    dend_20 { pt3dadd( 103.09, -38.6662, -43.5232, 0.22 ) }
    dend_20 { pt3dadd( 103.347, -38.697, -43.837, 0.22 ) }
    dend_20 { pt3dadd( 103.693, -38.764, -44.1909, 0.81 ) }
    dend_20 { pt3dadd( 104.185, -38.9249, -44.6039, 1.18 ) }
    dend_20 { pt3dadd( 105.648, -39.5412, -45.7013, 0.15 ) }
    dend_20 { pt3dadd( 106.188, -39.8009, -46.0679, 0.15 ) }
    dend_20 { pt3dadd( 106.883, -40.1345, -46.5038, 1.03 ) }
    dend_20 { pt3dadd( 107.398, -40.387, -46.8269, 1.33 ) }
    dend_20 { pt3dadd( 108.551, -40.9601, -47.5231, 0.07 ) }
    dend_20 { pt3dadd( 109.032, -41.1967, -47.8038, 0.22 ) }
    dend_20 { pt3dadd( 109.305, -41.3206, -47.948, 0.22 ) }
    dend_20 { pt3dadd( 110.413, -41.7032, -48.4437, 0.15 ) }
    dend_20 { pt3dadd( 111.041, -41.8482, -48.6932, 0.15 ) }
    dend_20 { pt3dadd( 111.964, -41.9763, -49.0654, 0.15 ) }
    dend_20 { pt3dadd( 121.034, -45.2636, -51.4661, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 39.234, -8.80241, -11.9486, 0.22 ) }
    dend_18 { pt3dadd( 39.9722, -8.24604, -11.4642, 0.22 ) }
    dend_18 { pt3dadd( 40.4477, -7.94723, -11.128, 0.22 ) }
    dend_18 { pt3dadd( 41.0265, -7.6369, -10.7121, 0.22 ) }
    dend_18 { pt3dadd( 41.6178, -7.36577, -10.3225, 0.66 ) }
    dend_18 { pt3dadd( 42.3358, -7.10551, -9.90368, 0.66 ) }
    dend_18 { pt3dadd( 43.1868, -6.86089, -9.48161, 0.22 ) }
    dend_18 { pt3dadd( 43.7792, -6.77125, -9.23737, 0.22 ) }
    dend_18 { pt3dadd( 44.0474, -6.76923, -9.16, 0.22 ) }
    dend_18 { pt3dadd( 44.9586, -6.88774, -9.02262, 0.44 ) }
    dend_18 { pt3dadd( 45.913, -7.10939, -8.95591, 0.88 ) }
    dend_18 { pt3dadd( 46.909, -7.36723, -8.91346, 0.22 ) }
    dend_18 { pt3dadd( 47.6271, -7.51981, -8.88781, 0.22 ) }
    dend_18 { pt3dadd( 48.5515, -7.65465, -8.85597, 0.29 ) }
    dend_18 { pt3dadd( 49.4232, -7.70886, -8.82052, 0.15 ) }
    dend_18 { pt3dadd( 50.11, -7.69569, -8.76031, 0.52 ) }
    dend_18 { pt3dadd( 51.6485, -7.52125, -8.52957, 0.37 ) }
    dend_18 { pt3dadd( 52.7065, -7.31922, -8.31276, 0.22 ) }
    dend_18 { pt3dadd( 53.5124, -7.11035, -8.11444, 1.03 ) }
    dend_18 { pt3dadd( 54.551, -6.75188, -7.81264, 0.29 ) }
    dend_18 { pt3dadd( 55.3088, -6.42933, -7.55897, 0.22 ) }
    dend_18 { pt3dadd( 56.2055, -5.99477, -7.2321, 0.22 ) }
    dend_18 { pt3dadd( 56.5811, -5.80126, -7.1059, 0.22 ) }
    dend_18 { pt3dadd( 57.2322, -5.46678, -6.9015, 0.22 ) }
    dend_18 { pt3dadd( 58.0296, -5.07937, -6.72832, 0.22 ) }
    dend_18 { pt3dadd( 58.7639, -4.75822, -6.66681, 0.66 ) }
    dend_18 { pt3dadd( 59.7117, -4.38542, -6.63991, 0.22 ) }
    dend_18 { pt3dadd( 60.8622, -3.97282, -6.59278, 0.66 ) }
    dend_18 { pt3dadd( 61.488, -3.78518, -6.55273, 0.81 ) }
    dend_18 { pt3dadd( 62.8063, -3.47505, -6.47531, 0.22 ) }
    dend_18 { pt3dadd( 63.4506, -3.34952, -6.40775, 0.22 ) }
    dend_18 { pt3dadd( 64.7254, -3.13182, -6.23569, 0.37 ) }
    dend_18 { pt3dadd( 65.5903, -2.97874, -6.06801, 0.74 ) }
    dend_18 { pt3dadd( 66.3059, -2.84166, -5.88298, 0.74 ) }
    dend_18 { pt3dadd( 67.1107, -2.66976, -5.66736, 0.59 ) }
    dend_18 { pt3dadd( 68.5192, -2.32739, -5.34618, 0.74 ) }
    dend_18 { pt3dadd( 69.6084, -2.05202, -5.21797, 0.07 ) }
    dend_18 { pt3dadd( 70.7732, -1.76589, -5.22988, 0.07 ) }
    dend_18 { pt3dadd( 71.1408, -1.68151, -5.26822, 0.59 ) }
    dend_18 { pt3dadd( 71.8086, -1.5534, -5.41322, 0.59 ) }
    dend_18 { pt3dadd( 72.8983, -1.36207, -5.78683, 0.15 ) }
    dend_18 { pt3dadd( 73.6262, -1.25208, -6.16737, 0.15 ) }
    dend_18 { pt3dadd( 74.2111, -1.16685, -6.52845, 0.37 ) }
    dend_18 { pt3dadd( 74.9436, -1.09595, -6.99379, 0.81 ) }
    dend_18 { pt3dadd( 76.27, -0.996858, -7.86459, 0.07 ) }
    dend_18 { pt3dadd( 77.0192, -0.972948, -8.35348, 0.44 ) }
    dend_18 { pt3dadd( 77.9853, -0.947048, -8.97954, 0.22 ) }
    dend_18 { pt3dadd( 78.8904, -0.909388, -9.58008, 0.96 ) }
    dend_18 { pt3dadd( 80.2274, -0.862698, -10.5206, 0.15 ) }
    dend_18 { pt3dadd( 80.8951, -0.868638, -11.0019, 0.15 ) }
    dend_18 { pt3dadd( 81.5584, -0.898298, -11.4929, 0.44 ) }
    dend_18 { pt3dadd( 82.4368, -0.960578, -12.2046, 0.29 ) }
    dend_18 { pt3dadd( 82.6792, -0.967658, -12.4276, 0.29 ) }
    dend_18 { pt3dadd( 82.9229, -0.953428, -12.725, 0.29 ) }
    dend_18 { pt3dadd( 83.307, -0.870938, -13.2723, 0.22 ) }
    dend_18 { pt3dadd( 83.7547, -0.761948, -13.8158, 0.22 ) }
    dend_18 { pt3dadd( 84.3658, -0.613183, -14.3564, 0.22 ) }
    dend_18 { pt3dadd( 84.7998, -0.521191, -14.6456, 0.22 ) }
    dend_18 { pt3dadd( 85.1788, -0.458148, -14.866, 0.22 ) }
    dend_18 { pt3dadd( 85.9818, -0.366028, -15.254, 0.07 ) }
    dend_18 { pt3dadd( 87.0088, -0.303096, -15.6702, 0.96 ) }
    dend_18 { pt3dadd( 88.5857, -0.365321, -16.1745, 0.07 ) }
    dend_18 { pt3dadd( 88.8969, -0.426446, -16.2501, 0.07 ) }
    dend_18 { pt3dadd( 89.7489, -0.717891, -16.4254, 0.07 ) }
    dend_18 { pt3dadd( 90.6578, -1.21406, -16.584, 0.07 ) }
    dend_18 { pt3dadd( 91.0513, -1.53737, -16.6434, 0.88 ) }
    dend_18 { pt3dadd( 91.6586, -2.15897, -16.7233, 0.37 ) }
    dend_18 { pt3dadd( 92.6821, -3.46531, -16.8745, 0.22 ) }
    dend_18 { pt3dadd( 92.9763, -3.87672, -16.909, 0.29 ) }
    dend_18 { pt3dadd( 93.5898, -4.83631, -16.9341, 0.07 ) }
    dend_18 { pt3dadd( 93.8587, -5.35499, -16.9478, 0.07 ) }
    dend_18 { pt3dadd( 103.54, -4.52964, -19.2952, 0.07 ) }
    dend_18 { pt3dadd( 113.431, -3.15578, -19.5699, 0.07 ) }
    dend_18 { pt3dadd( 123.283, -3.45306, -21.2575, 0.07 ) }
    dend_18 { pt3dadd( 132.589, -5.34607, -24.328, 0.07 ) }
    dend_18 { pt3dadd( 142.311, -6.79819, -26.1016, 0.07 ) }
    dend_18 { pt3dadd( 151.795, -6.57548, -29.2625, 0.07 ) }
    dend_18 { pt3dadd( 160.215, -4.62697, -34.2515, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 0/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 39.234, -8.80241, -11.9486, 0.74 ) }
    dend_17 { pt3dadd( 39.5005, -9.78893, -11.2289, 0.74 ) }
    dend_17 { pt3dadd( 39.7405, -10.5878, -10.6549, 0.44 ) }
    dend_17 { pt3dadd( 40.0186, -11.271, -10.1446, 0.22 ) }
    dend_17 { pt3dadd( 40.2437, -11.7011, -9.8054, 0.22 ) }
    dend_17 { pt3dadd( 40.3881, -11.902, -9.62962, 0.22 ) }
    dend_17 { pt3dadd( 40.7835, -12.3498, -9.22665, 0.22 ) }
    dend_17 { pt3dadd( 41.142, -12.6507, -8.96632, 0.22 ) }
    dend_17 { pt3dadd( 41.722, -13.0219, -8.632, 0.88 ) }
    dend_17 { pt3dadd( 42.0595, -13.1933, -8.4665, 0.81 ) }
    dend_17 { pt3dadd( 43.0715, -13.6217, -8.01599, 0.22 ) }
    dend_17 { pt3dadd( 43.8199, -13.9196, -7.75098, 0.74 ) }
    dend_17 { pt3dadd( 44.3812, -14.1573, -7.61365, 0.81 ) }
    dend_17 { pt3dadd( 45.2609, -14.605, -7.46394, 0.15 ) }
    dend_17 { pt3dadd( 45.7253, -14.9078, -7.42463, 0.15 ) }
    dend_17 { pt3dadd( 46.067, -15.174, -7.41635, 0.22 ) }
    dend_17 { pt3dadd( 46.7353, -15.7736, -7.4064, 0.22 ) }
    dend_17 { pt3dadd( 47.5229, -16.4933, -7.30854, 0.22 ) }
    dend_17 { pt3dadd( 48.1271, -17.0041, -7.18241, 0.66 ) }
    dend_17 { pt3dadd( 48.8154, -17.5105, -6.99268, 0.88 ) }
    dend_17 { pt3dadd( 49.5065, -17.9774, -6.76245, 0.74 ) }
    dend_17 { pt3dadd( 50.2659, -18.4665, -6.46559, 0.74 ) }
    dend_17 { pt3dadd( 51.2474, -19.0343, -6.0197, 0.22 ) }
    dend_17 { pt3dadd( 52.0584, -19.4369, -5.65826, 0.15 ) }
    dend_17 { pt3dadd( 52.6537, -19.7069, -5.43661, 0.15 ) }
    dend_17 { pt3dadd( 53.2506, -19.9682, -5.26066, 0.22 ) }
    dend_17 { pt3dadd( 53.992, -20.2879, -5.07996, 0.15 ) }
    dend_17 { pt3dadd( 54.3596, -20.447, -5.00919, 0.15 ) }
    dend_17 { pt3dadd( 55.0206, -20.7236, -4.87823, 0.59 ) }
    dend_17 { pt3dadd( 56.3692, -21.2505, -4.57445, 0.22 ) }
    dend_17 { pt3dadd( 57.0592, -21.4818, -4.42182, 0.22 ) }
    dend_17 { pt3dadd( 57.9883, -21.7597, -4.19511, 0.22 ) }
    dend_17 { pt3dadd( 58.5559, -21.9198, -4.0535, 0.37 ) }
    dend_17 { pt3dadd( 59.6785, -22.2295, -3.77049, 0.88 ) }
    dend_17 { pt3dadd( 60.3546, -22.4036, -3.60003, 0.74 ) }
    dend_17 { pt3dadd( 61.8253, -22.7341, -3.24671, 0.22 ) }
    dend_17 { pt3dadd( 62.7801, -22.9296, -3.03787, 0.29 ) }
    dend_17 { pt3dadd( 63.4864, -23.0708, -2.89356, 0.59 ) }
    dend_17 { pt3dadd( 64.1889, -23.2022, -2.73503, 0.07 ) }
    dend_17 { pt3dadd( 64.638, -23.2931, -2.60831, 0.07 ) }
    dend_17 { pt3dadd( 65.1936, -23.4025, -2.42794, 0.59 ) }
    dend_17 { pt3dadd( 66.24, -23.631, -2.10152, 0.15 ) }
    dend_17 { pt3dadd( 66.9723, -23.8257, -1.91507, 0.66 ) }
    dend_17 { pt3dadd( 68.0049, -24.1647, -1.70243, 0.96 ) }
    dend_17 { pt3dadd( 69.4416, -24.7312, -1.48047, 0.29 ) }
    dend_17 { pt3dadd( 70.3906, -25.1725, -1.3866, 0.29 ) }
    dend_17 { pt3dadd( 71.6928, -25.8562, -1.27726, 0.66 ) }
    dend_17 { pt3dadd( 72.911, -26.5663, -1.18055, 0.22 ) }
    dend_17 { pt3dadd( 73.6466, -27.0375, -1.12416, 0.22 ) }
    dend_17 { pt3dadd( 74.4903, -27.642, -1.05492, 0.37 ) }
    dend_17 { pt3dadd( 75.4078, -28.3759, -0.948171, 0.29 ) }
    dend_17 { pt3dadd( 76.284, -29.1825, -0.765625, 0.22 ) }
    dend_17 { pt3dadd( 77.2434, -30.2088, -0.411417, 0.74 ) }
    dend_17 { pt3dadd( 77.8015, -30.8926, -0.125575, 0.44 ) }
    dend_17 { pt3dadd( 78.3899, -31.6683, 0.222539, 0.15 ) }
    dend_17 { pt3dadd( 78.866, -32.3245, 0.512841, 0.44 ) }
    dend_17 { pt3dadd( 79.131, -32.6858, 0.677663, 0.44 ) }
    dend_17 { pt3dadd( 79.885, -33.6956, 1.13421, 0.22 ) }
    dend_17 { pt3dadd( 80.7319, -34.7713, 1.64734, 1.11 ) }
    dend_17 { pt3dadd( 82.0326, -36.3172, 2.41659, 0.15 ) }
    dend_17 { pt3dadd( 82.4816, -36.8108, 2.67998, 0.29 ) }
    dend_17 { pt3dadd( 83.3243, -37.6673, 3.14599, 0.15 ) }
    dend_17 { pt3dadd( 83.7155, -38.0456, 3.36354, 0.29 ) }
    dend_17 { pt3dadd( 84.4299, -38.6814, 3.76238, 0.74 ) }
    dend_17 { pt3dadd( 85.0267, -39.1554, 4.14311, 0.22 ) }
    dend_17 { pt3dadd( 85.6693, -39.6176, 4.63238, 0.22 ) }
    dend_17 { pt3dadd( 86.4228, -40.1012, 5.28281, 0.29 ) }
    dend_17 { pt3dadd( 87.0051, -40.4243, 5.84115, 0.22 ) }
    dend_17 { pt3dadd( 87.6437, -40.7151, 6.53988, 0.59 ) }
    dend_17 { pt3dadd( 88.3207, -40.928, 7.39826, 0.22 ) }
    dend_17 { pt3dadd( 89.0969, -41.0731, 8.47492, 0.74 ) }
    dend_17 { pt3dadd( 89.8075, -41.138, 9.55727, 0.59 ) }
    dend_17 { pt3dadd( 90.4527, -41.1502, 10.6151, 0.37 ) }
    dend_17 { pt3dadd( 91.0366, -41.1323, 11.6081, 0.15 ) }
    dend_17 { pt3dadd( 91.7073, -41.1198, 12.7073, 0.22 ) }
    dend_17 { pt3dadd( 91.8599, -41.1157, 12.9503, 0.22 ) }
    dend_17 { pt3dadd( 92.4139, -41.0863, 13.7954, 0.22 ) }
    dend_17 { pt3dadd( 93.0583, -41.0453, 14.7654, 0.59 ) }
    dend_17 { pt3dadd( 93.5423, -41.0045, 15.479, 1.03 ) }
    dend_17 { pt3dadd( 94.4587, -40.9315, 16.8466, 0.22 ) }
    dend_17 { pt3dadd( 95.097, -40.8918, 17.7974, 0.22 ) }
    dend_17 { pt3dadd( 95.7208, -40.8477, 18.7364, 0.22 ) }
    dend_17 { pt3dadd( 96.411, -40.7817, 19.7682, 0.15 ) }
    dend_17 { pt3dadd( 96.8858, -40.7435, 20.4537, 0.44 ) }
    dend_17 { pt3dadd( 97.7869, -40.7274, 21.6775, 0.37 ) }
    dend_17 { pt3dadd( 98.979, -40.7628, 23.2437, 0.15 ) }
    dend_17 { pt3dadd( 99.6049, -40.8206, 23.9638, 0.29 ) }
    dend_17 { pt3dadd( 100.531, -40.9553, 24.9102, 0.81 ) }
    dend_17 { pt3dadd( 101.779, -41.191, 26.0127, 0.22 ) }
    dend_17 { pt3dadd( 102.466, -41.333, 26.5309, 0.15 ) }
    dend_17 { pt3dadd( 103.308, -41.5016, 27.0605, 0.15 ) }
    dend_17 { pt3dadd( 104.332, -41.7002, 27.6095, 0.15 ) }
    dend_17 { pt3dadd( 104.819, -41.813, 27.8234, 0.52 ) }
    dend_17 { pt3dadd( 105.449, -41.981, 28.0623, 0.52 ) }
    dend_17 { pt3dadd( 107.117, -42.4714, 28.6354, 0.07 ) }
    dend_17 { pt3dadd( 108.008, -42.761, 28.9194, 0.22 ) }
    dend_17 { pt3dadd( 109.159, -43.1927, 29.2657, 0.29 ) }
    dend_17 { pt3dadd( 111.632, -44.2414, 30.0654, 0.07 ) }
    dend_17 { pt3dadd( 112.201, -44.5006, 30.2518, 0.07 ) }
    dend_17 { pt3dadd( 112.74, -44.7635, 30.427, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( 113.416, -45.1122, 30.6675, 0.37 ) }
    dend_17 { pt3dadd( 115.025, -45.9119, 31.4369, 0.07 ) }
    dend_17 { pt3dadd( 115.838, -46.2955, 31.9567, 0.07 ) }
    dend_17 { pt3dadd( 116.456, -46.563, 32.452, 0.52 ) }
    dend_17 { pt3dadd( 116.771, -46.695, 32.7327, 0.52 ) }
    dend_17 { pt3dadd( 118.003, -47.2253, 33.9152, 0.22 ) }
    dend_17 { pt3dadd( 119.334, -47.8801, 35.2971, 0.07 ) }
    dend_17 { pt3dadd( 120.207, -48.3657, 36.253, 0.07 ) }
    dend_17 { pt3dadd( 120.603, -48.6051, 36.697, 0.29 ) }
    dend_17 { pt3dadd( 121.674, -49.2562, 37.7782, 0.07 ) }
    dend_17 { pt3dadd( 122.51, -49.7552, 38.478, 0.29 ) }
    dend_17 { pt3dadd( 124.102, -50.7147, 39.4721, 0.07 ) }
    dend_17 { pt3dadd( 124.882, -51.1735, 39.7919, 0.22 ) }
    dend_17 { pt3dadd( 125.664, -51.6046, 39.9583, 0.22 ) }
    dend_17 { pt3dadd( 127.588, -52.6747, 39.961, 0.07 ) }
    dend_17 { pt3dadd( 128.584, -53.2616, 39.6908, 0.07 ) }
    dend_17 { pt3dadd( 129.048, -53.5716, 39.4841, 0.07 ) }
    dend_17 { pt3dadd( 129.861, -54.2304, 38.9699, 0.15 ) }
    dend_17 { pt3dadd( 130.604, -55.0801, 38.3248, 0.07 ) }
    dend_17 { pt3dadd( 131.061, -55.8436, 37.7704, 0.22 ) }
    dend_17 { pt3dadd( 131.33, -56.5501, 37.3118, 0.22 ) }
    dend_17 { pt3dadd( 131.604, -57.5457, 36.6461, 0.07 ) }
    dend_17 { pt3dadd( 131.768, -58.4047, 36.049, 0.44 ) }
    dend_17 { pt3dadd( 131.926, -59.8061, 35.0258, 0.15 ) }
    dend_17 { pt3dadd( 131.986, -60.7818, 34.3076, 0.52 ) }
    dend_17 { pt3dadd( 132.004, -61.2921, 33.9143, 0.52 ) }
    dend_17 { pt3dadd( 132.027, -62.0447, 33.3296, 0.52 ) }
    dend_17 { pt3dadd( 132.063, -63.0069, 32.5722, 0.15 ) }
    dend_17 { pt3dadd( 132.136, -64.0467, 31.7995, 0.15 ) }
    dend_17 { pt3dadd( 132.18, -64.3979, 31.5649, 0.29 ) }
    dend_17 { pt3dadd( 132.405, -65.78, 30.6975, 0.15 ) }
    dend_17 { pt3dadd( 132.513, -66.407, 30.3118, 0.37 ) }
    dend_17 { pt3dadd( 132.699, -67.2768, 29.7872, 0.22 ) }
    dend_17 { pt3dadd( 132.867, -67.9527, 29.3617, 0.07 ) }
    dend_17 { pt3dadd( 133.1, -68.8184, 28.8132, 0.22 ) }
    dend_17 { pt3dadd( 133.471, -70.1843, 27.9233, 0.07 ) }
    dend_17 { pt3dadd( 133.847, -71.5473, 27.0378, 0.07 ) }
    dend_17 { pt3dadd( 134.213, -72.858, 26.1735, 0.07 ) }
    dend_17 { pt3dadd( 134.424, -73.6086, 25.6825, 0.22 ) }
    dend_17 { pt3dadd( 134.657, -74.4269, 25.153, 0.07 ) }
    dend_17 { pt3dadd( 134.834, -75.0357, 24.7396, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 41/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -64.9248, 63.5588, -13.864, 0.22 ) }
    dend_12 { pt3dadd( -65.9522, 64.2652, -13.2632, 0.22 ) }
    dend_12 { pt3dadd( -66.347, 64.471, -13.0853, 0.22 ) }
    dend_12 { pt3dadd( -67.0431, 64.7979, -12.8411, 0.52 ) }
    dend_12 { pt3dadd( -67.4576, 64.988, -12.7163, 0.52 ) }
    dend_12 { pt3dadd( -68.5109, 65.489, -12.4354, 0.15 ) }
    dend_12 { pt3dadd( -69.2209, 65.8174, -12.2551, 0.66 ) }
    dend_12 { pt3dadd( -70.0159, 66.1487, -12.0951, 0.22 ) }
    dend_12 { pt3dadd( -71.0695, 66.5976, -11.9013, 0.07 ) }
    dend_12 { pt3dadd( -71.8008, 66.892, -11.7774, 0.07 ) }
    dend_12 { pt3dadd( -72.5175, 67.1763, -11.6543, 0.52 ) }
    dend_12 { pt3dadd( -73.6013, 67.6171, -11.4589, 0.07 ) }
    dend_12 { pt3dadd( -74.5321, 67.9824, -11.2517, 0.07 ) }
    dend_12 { pt3dadd( -75.0068, 68.1462, -11.1147, 0.59 ) }
    dend_12 { pt3dadd( -75.8177, 68.364, -10.8266, 0.07 ) }
    dend_12 { pt3dadd( -76.5027, 68.5271, -10.5373, 0.15 ) }
    dend_12 { pt3dadd( -77.1491, 68.6682, -10.1952, 0.37 ) }
    dend_12 { pt3dadd( -77.7526, 68.8094, -9.76731, 0.59 ) }
    dend_12 { pt3dadd( -78.3283, 68.9338, -9.20474, 0.22 ) }
    dend_12 { pt3dadd( -78.7129, 69.0238, -8.7529, 0.22 ) }
    dend_12 { pt3dadd( -79.2481, 69.145, -8.07092, 0.22 ) }
    dend_12 { pt3dadd( -79.6408, 69.1899, -7.52284, 0.22 ) }
    dend_12 { pt3dadd( -80.201, 69.1688, -6.69979, 0.44 ) }
    dend_12 { pt3dadd( -80.6155, 69.0863, -6.10814, 0.44 ) }
    dend_12 { pt3dadd( -81.0972, 68.9451, -5.53531, 0.22 ) }
    dend_12 { pt3dadd( -81.8986, 68.6578, -4.74438, 0.07 ) }
    dend_12 { pt3dadd( -82.489, 68.451, -4.27684, 0.07 ) }
    dend_12 { pt3dadd( -82.9805, 68.2903, -3.96454, 0.07 ) }
    dend_12 { pt3dadd( -83.4402, 68.1958, -3.76086, 0.07 ) }
    dend_12 { pt3dadd( -84.2616, 68.0844, -3.47768, 0.07 ) }
    dend_12 { pt3dadd( -84.8218, 68.0323, -3.31623, 0.29 ) }
    dend_12 { pt3dadd( -85.8024, 68.0074, -3.07724, 0.66 ) }
    dend_12 { pt3dadd( -86.5345, 68.0148, -2.90843, 0.88 ) }
    dend_12 { pt3dadd( -88.2978, 68.0703, -2.51235, 0.22 ) }
    dend_12 { pt3dadd( -89.3724, 68.1137, -2.27882, 0.15 ) }
    dend_12 { pt3dadd( -90.3132, 68.1655, -2.07919, 0.22 ) }
    dend_12 { pt3dadd( -91.055, 68.2307, -1.96825, 0.07 ) }
    dend_12 { pt3dadd( -91.6046, 68.2931, -1.92077, 0.07 ) }
    dend_12 { pt3dadd( -92.2606, 68.3804, -1.89862, 0.59 ) }
    dend_12 { pt3dadd( -92.9147, 68.4877, -1.89975, 0.07 ) }
    dend_12 { pt3dadd( -93.6227, 68.6484, -1.94689, 0.52 ) }
    dend_12 { pt3dadd( -94.9526, 68.981, -2.12491, 0.07 ) }
    dend_12 { pt3dadd( -95.376, 69.0813, -2.22287, 0.07 ) }
    dend_12 { pt3dadd( -96.0659, 69.2659, -2.46043, 0.22 ) }
    dend_12 { pt3dadd( -105.191, 70.1361, 1.52772, 0.22 ) }
    dend_12 { pt3dadd( -114.089, 70.9212, 6.01555, 0.22 ) }
    dend_12 { pt3dadd( -122.047, 73.1665, 11.5905, 0.22 ) }
    dend_12 { pt3dadd( -129.653, 74.2132, 17.9887, 0.22 ) }
    dend_12 { pt3dadd( -137.107, 73.8312, 24.6424, 0.22 ) }
    dend_12 { pt3dadd( -145.774, 73.0474, 29.5629, 0.22 ) }
    dend_12 { pt3dadd( -153.622, 71.0761, 35.403, 0.22 ) }
    dend_12 { pt3dadd( -160.888, 68.405, 41.672, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 93/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -64.9248, 63.5588, -13.864, 0.15 ) }
    dend_11 { pt3dadd( -65.9669, 63.5051, -13.939, 0.15 ) }
    dend_11 { pt3dadd( -66.8624, 63.4503, -14.0029, 0.15 ) }
    dend_11 { pt3dadd( -67.7187, 63.4242, -14.0821, 0.15 ) }
    dend_11 { pt3dadd( -68.2456, 63.4142, -14.1333, 0.15 ) }
    dend_11 { pt3dadd( -69.3295, 63.4154, -14.2466, 0.15 ) }
    dend_11 { pt3dadd( -70.0648, 63.4021, -14.3287, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_11 { pt3dadd( -70.9394, 63.3602, -14.4401, 0.81 ) }
    dend_11 { pt3dadd( -72.0028, 63.2609, -14.5791, 0.15 ) }
    dend_11 { pt3dadd( -72.8844, 63.173, -14.6913, 0.44 ) }
    dend_11 { pt3dadd( -74.0888, 63.0655, -14.8399, 0.15 ) }
    dend_11 { pt3dadd( -75.0307, 62.999, -14.9493, 0.15 ) }
    dend_11 { pt3dadd( -75.5995, 62.9522, -15.0174, 0.15 ) }
    dend_11 { pt3dadd( -76.1164, 62.9012, -15.0785, 0.15 ) }
    dend_11 { pt3dadd( -77.5854, 62.7108, -15.2293, 0.07 ) }
    dend_11 { pt3dadd( -78.27, 62.6309, -15.3011, 0.07 ) }
    dend_11 { pt3dadd( -78.9614, 62.578, -15.3627, 0.15 ) }
    dend_11 { pt3dadd( -88.8802, 61.3723, -15.4494, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -44.6958, -22.7711, 19.0824, 0.15 ) }
    dend_7 { pt3dadd( -44.3647, -23.8681, 19.8697, 0.15 ) }
    dend_7 { pt3dadd( -44.0897, -24.7796, 20.5237, 0.66 ) }
    dend_7 { pt3dadd( -43.8511, -25.5703, 21.0911, 0.44 ) }
    dend_7 { pt3dadd( -43.408, -27.0387, 22.1448, 0.15 ) }
    dend_7 { pt3dadd( -43.0669, -28.1689, 22.9558, 0.15 ) }
    dend_7 { pt3dadd( -42.6304, -29.6157, 23.9939, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 18/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -44.6958, -22.7711, 19.0824, 0.29 ) }
    dend_6 { pt3dadd( -46.1111, -23.3613, 18.9423, 0.29 ) }
    dend_6 { pt3dadd( -46.944, -23.7257, 18.8479, 0.15 ) }
    dend_6 { pt3dadd( -47.7557, -24.121, 18.7553, 0.22 ) }
    dend_6 { pt3dadd( -48.7107, -24.586, 18.6463, 0.07 ) }
    dend_6 { pt3dadd( -49.4762, -24.9588, 18.559, 0.52 ) }
    dend_6 { pt3dadd( -50.2168, -25.3195, 18.4745, 0.15 ) }
    dend_6 { pt3dadd( -51.1338, -25.7539, 18.3472, 0.29 ) }
    dend_6 { pt3dadd( -52.0128, -26.1918, 18.2076, 0.07 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 55.6479, 26.4695, -40.4256, 0.15 ) }
    dend_23 { pt3dadd( 58.2343, 34.9957, -43.9979, 0.15 ) }
    dend_23 { pt3dadd( 60.1618, 43.6041, -47.7626, 0.15 ) }
    dend_23 { pt3dadd( 61.4178, 52.2538, -51.7026, 0.15 ) }
    dend_23 { pt3dadd( 61.3005, 60.5635, -56.5478, 0.15 ) }
    dend_23 { pt3dadd( 60.0746, 68.326, -62.1808, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 33/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 55.6479, 26.4695, -40.4256, 0.29 ) }
    dend_22 { pt3dadd( 58.5774, 35.0927, -43.4298, 0.15 ) }
    dend_22 { pt3dadd( 60.7391, 43.5276, -47.4911, 0.15 ) }
    dend_22 { pt3dadd( 61.7602, 52.0401, -51.8114, 0.15 ) }
    dend_22 { pt3dadd( 61.5147, 60.2559, -56.8262, 0.15 ) }
    dend_22 { pt3dadd( 61.2539, 69.3544, -59.6909, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_33 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_8 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_38 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_27 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_21 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_20 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_18 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_2 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_13 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_16 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_10 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_11 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 9
    dend_1 nseg = 7
    dend_0 nseg = 9
    dend_36 nseg = 3
    dend_35 nseg = 5
    dend_30 nseg = 3
    dend_14 nseg = 11
    dend_8 nseg = 3
    dend_38 nseg = 5
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 7
    dend_9 nseg = 5
    dend_4 nseg = 3
    dend_29 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    dend_18 nseg = 7
    dend_17 nseg = 7
    dend_12 nseg = 5
    dend_23 nseg = 3
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_SBC_3845e9299a_0_0


