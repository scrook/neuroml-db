// Cell: cACint209_L6_BTC_045fb87685_0_0
/*
{
  "id" : "cACint209_L6_BTC_045fb87685_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -12.2915, -4.59, 1.84", "3.21969, -12.2915, -4.59, 1.84", "3.49444, -13.1793, -4.64114, 1.84", "4.08051, -15.0731, -4.75022, 2.14", "4.45566, -16.2853, -4.82004, 1.92", "4.93267, -17.8268, -4.90882, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -12.74, -1.64, 2.43", "0.219697, -12.74, -1.64, 2.43", "-0.417845, -14.2205, -1.83135, 1.92", "-0.948366, -15.4525, -1.99058, 2.14", "-1.27681, -16.2152, -2.08916, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 12.22, 0.0, 3.02", "1.5397, 12.22, 0.0, 3.02", "1.8796, 13.4622, -0.0771401, 2.36", "2.3333, 14.9988, -0.161725, 2.36", "3.08701, 17.4672, -0.282954, 2.29", "3.66715, 19.297, -0.384068, 2.21", "4.26191, 21.1069, -0.488803, 2.29", "4.78398, 22.666, -0.582278, 2.43", "5.38235, 24.3905, -0.692661, 2.36", "5.88501, 25.7388, -0.769945, 2.51", "6.42441, 27.0543, -0.8461, 3.17", "6.77471, 27.8639, -0.880689, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475434", "-3.29794, 27.9334, 0.0, 0.475434", "-5.29297, 42.8002, 0.0, 0.475434" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.93267, -17.8268, -4.90882, 0.88", "3.94359, -17.6517, -5.94997, 0.88", "2.97359, -17.5914, -6.95267, 0.81", "2.00671, -17.6319, -7.97719, 0.81", "0.890573, -17.7796, -9.19572, 0.96", "-0.16359, -18.0123, -10.3954, 1.4", "-1.16618, -18.345, -11.6295, 1.77", "-2.04298, -18.7129, -12.7723, 0.44", "-2.79831, -19.1573, -13.8033, 0.44", "-3.22597, -19.5139, -14.3827, 0.44", "-3.56038, -19.9618, -14.9021, 0.66", "-3.92143, -20.8578, -15.742, 1.03", "-11.1027, -21.3317, -26.8298, 1.03", "-16.5258, -21.2341, -38.8863, 1.03", "-19.1925, -19.4821, -51.7134, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.93267, -17.8268, -4.90882, 1.11", "6.03752, -19.088, -4.87627, 1.11", "7.02235, -20.2694, -4.77108, 1.25", "7.40607, -20.7505, -4.69924, 1.7", "8.0813, -21.6338, -4.54762, 1.77", "9.23284, -23.1467, -4.28812, 1.33", "10.1216, -24.3265, -4.09838, 1.03", "10.7958, -25.2517, -3.90621, 1.03", "11.4664, -26.213, -3.73175, 1.03", "12.0336, -27.0662, -3.62621, 1.33", "12.8521, -28.3836, -3.56182, 1.33", "13.5938, -29.6777, -3.62531, 0.74", "14.3151, -31.0522, -3.81857, 0.74", "15.0588, -32.4617, -4.0819, 0.88", "15.6166, -33.5187, -4.30209, 1.33", "16.0597, -34.3199, -4.43462, 2.06", "17.0024, -35.9843, -4.63269, 0.96", "17.8125, -37.3114, -4.71387, 0.74", "18.4376, -38.2705, -4.72362, 1.18", "18.8769, -38.9074, -4.67168, 1.55", "20.0253, -40.5365, -4.48949, 0.88", "20.704, -41.5173, -4.41495, 0.81", "21.6109, -42.884, -4.41576, 0.88", "22.0966, -43.6726, -4.48865, 1.4", "22.4944, -44.4002, -4.62848, 1.4", "23.0562, -45.5544, -4.94192, 0.81", "23.5602, -46.7032, -5.34471, 0.88", "23.9561, -47.6216, -5.70493, 0.52", "24.1893, -48.1474, -5.92773, 0.96", "24.6249, -49.0129, -6.2743, 1.92", "25.2366, -50.0998, -6.65268, 0.74", "25.8583, -51.113, -6.96397, 0.74", "26.5091, -52.0714, -7.21962, 0.96", "27.1678, -52.9419, -7.45541, 1.55", "28.3567, -54.3618, -7.89017, 0.81", "29.379, -55.4717, -8.26441, 0.81", "30.3618, -56.468, -8.62684, 1.25", "31.3349, -57.4239, -8.98262, 1.4", "32.7746, -58.8439, -9.45146, 0.81", "34.0086, -60.1159, -9.79341, 0.81", "34.7101, -60.8495, -9.96642, 1.18", "35.5207, -61.6473, -10.1381, 1.55", "36.3902, -62.4953, -10.2815, 1.55", "37.4465, -63.5957, -10.411, 0.59", "38.4717, -64.7621, -10.4259, 0.81", "39.1388, -65.5782, -10.3556, 1.33", "40.1397, -66.8542, -10.1952, 0.37", "40.6825, -67.5934, -10.0556, 0.22", "47.0814, -75.5807, -11.122, 0.22", "54.5096, -82.2403, -13.8414, 0.22", "62.6759, -88.539, -14.7102, 0.22", "70.4777, -95.2349, -13.6594, 0.22", "79.0872, -100.771, -11.9898, 0.22", "86.7659, -107.656, -11.4229, 0.22", "93.9083, -115.018, -12.4982, 0.22", "100.729, -122.393, -14.8385, 0.22", "108.063, -129.612, -15.5963, 0.22", "114.767, -137.353, -16.692, 0.22", "120.743, -145.475, -18.7238, 0.22", "125.929, -153.601, -22.3201, 0.22", "132.246, -160.534, -26.6572, 0.22", "136.785, -167.952, -32.2146, 0.22", "142.258, -175.816, -35.9942, 0.22", "146.898, -184.686, -38.223, 0.22", "152.787, -193.071, -38.9729, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.27681, -16.2152, -2.08916, 0.96", "-2.44051, -16.8683, -2.29534, 0.96", "-3.07583, -17.2464, -2.41589, 0.96", "-3.72479, -17.6566, -2.54707, 1.25", "-4.06678, -17.8892, -2.6203, 1.25", "-4.69452, -18.338, -2.76808, 0.96", "-5.28785, -18.7727, -2.92206, 0.96", "-5.80998, -19.1695, -3.06989, 1.47", "-6.46722, -19.6275, -3.26323, 1.62", "-7.27998, -20.1122, -3.49607, 0.96", "-7.94539, -20.4539, -3.68918, 0.96", "-8.88648, -20.8554, -3.95744, 1.11", "-9.56289, -21.0808, -4.14411, 1.4", "-10.7472, -21.3783, -4.46545, 1.33", "-11.7231, -21.5659, -4.74128, 0.96", "-12.7212, -21.7353, -5.03473, 1.18", "-13.2221, -21.8181, -5.18529, 1.18", "-14.4972, -22.0534, -5.58592, 0.88", "-15.2252, -22.2383, -5.83041, 0.88", "-15.7182, -22.4196, -6.01976, 1.03", "-16.6254, -22.8794, -6.3862, 1.25", "-17.2055, -23.2426, -6.61828, 0.88", "-17.7643, -23.6557, -6.83836, 0.88", "-18.2646, -24.0683, -7.02956, 1.11", "-18.8295, -24.5222, -7.24795, 1.25", "-19.5582, -25.0834, -7.57948, 0.88", "-20.0994, -25.5118, -7.90749, 1.03", "-20.4744, -25.8393, -8.21425, 1.4", "-20.9155, -26.2613, -8.69604, 1.18", "-21.43, -26.771, -9.44457, 1.25", "-21.7274, -27.1942, -10.2803, 1.4", "-21.0834, -27.298, -11.0347, 1.4", "-20.3414, -27.2006, -11.3361, 1.47", "-18.8474, -26.8966, -11.696, 0.52", "-18.0487, -26.7101, -11.7608, 0.52", "-17.2163, -26.5032, -11.7305, 0.59", "-15.8263, -26.1717, -11.5204, 0.59", "-14.9875, -25.9889, -11.3113, 0.66", "-14.0995, -25.8428, -11.0071, 0.74", "-12.9195, -25.6972, -10.5385, 0.59", "-12.0377, -25.637, -10.1545, 0.88", "-10.8585, -25.6143, -9.59011, 0.37", "-10.2383, -25.6509, -9.27338, 0.37", "-9.6389, -25.7428, -8.92659, 0.37", "-15.2626, -30.5149, -12.106, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.27681, -16.2152, -2.08916, 1.4", "-1.14967, -17.574, -1.88366, 1.4", "-1.00625, -18.9718, -1.69515, 1.03", "-0.860275, -20.3307, -1.51273, 1.33", "-0.694647, -21.9004, -1.29335, 1.25", "-0.537111, -23.3267, -1.07433, 1.25", "-0.387987, -24.6863, -0.842894, 1.11", "-0.263491, -25.9939, -0.632614, 1.84", "-0.177723, -26.8389, -0.50992, 1.62", "-3.11632E-4, -28.4519, -0.254161, 1.18", "0.176923, -30.1623, 0.03966, 1.11", "0.345446, -31.8829, 0.346495, 1.25", "0.446419, -33.0205, 0.5407, 1.55", "0.546355, -34.2581, 0.761271, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.77471, 27.8639, -0.880689, 2.88", "6.89229, 28.7186, -0.783046, 2.88", "7.0407, 29.7975, -0.659795, 2.58", "7.20842, 31.0169, -0.520503, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.77471, 27.8639, -0.880689, 1.62", "8.0382, 27.3885, -1.4343, 1.62", "9.52168, 26.6687, -2.01691, 0.96", "10.5053, 26.1148, -2.37111, 0.96", "11.5878, 25.4202, -2.73995, 1.11", "12.168, 25.0149, -2.92718, 1.25", "13.2673, 24.1685, -3.2801, 0.96", "14.5728, 22.959, -3.66591, 0.81", "15.2971, 22.2473, -3.87017, 0.81", "15.9289, 21.6464, -4.05451, 0.81", "16.5224, 21.114, -4.26773, 0.88", "17.5145, 20.3112, -4.67377, 0.74", "18.5789, 19.5664, -5.14775, 0.59", "19.5216, 18.9909, -5.57128, 0.74", "20.1878, 18.6129, -5.85842, 0.66", "20.8939, 18.2167, -6.1201, 0.66", "21.9115, 17.6358, -6.43934, 0.96", "22.9682, 17.04, -6.70588, 1.11", "24.2767, 16.2419, -6.97952, 0.81", "25.3253, 15.5295, -7.17296, 0.81", "26.3351, 14.7908, -7.36245, 0.52", "26.9862, 14.2702, -7.51825, 0.52", "27.4643, 13.8393, -7.7084, 0.52", "28.0514, 13.2308, -8.10981, 0.74", "28.7006, 12.4756, -8.77464, 0.96", "29.0981, 11.9605, -9.28835, 1.03", "29.5868, 11.29, -10.0085, 0.81", "30.2102, 10.479, -10.876, 0.52", "30.7293, 9.76082, -11.6387, 0.88", "30.9908, 9.40262, -12.027, 1.11", "31.5486, 8.68854, -12.8057, 0.81", "32.1518, 8.03552, -13.4806, 0.22", "33.0194, 7.30852, -14.1385, 0.15", "40.1373, 1.37506, -17.3892, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-19.1925, -19.4821, -51.7134, 0.15", "-25.4488, -19.8282, -60.3126, 0.15", "-32.3334, -19.5815, -68.4236, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-19.1925, -19.4821, -51.7134, 0.59", "-21.6444, -19.5267, -61.0307, 0.15", "-24.1719, -18.6552, -70.2873, 0.15", "-28.8663, -16.7102, -78.4646, 0.15", "-34.7953, -15.889, -86.0136, 0.15", "-39.4839, -15.7023, -94.4292, 0.15", "-44.0689, -17.3269, -102.736, 0.15", "-49.1171, -18.2027, -110.892, 0.15", "-53.8136, -19.7905, -119.144, 0.15", "-58.8151, -21.4792, -127.193, 0.15", "-65.096, -21.722, -134.496, 0.15", "-70.6505, -21.7651, -142.369, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "152.787, -193.071, -38.9729, 0.15", "159.7, -200.492, -41.6293, 0.15", "166.026, -208.714, -42.8853, 0.15", "172.278, -217.062, -42.4726, 0.15", "178.576, -225.321, -41.421, 0.15", "185.118, -233.463, -41.7032, 0.15", "192.582, -240.816, -41.7371, 0.15", "201.693, -246.098, -41.2707, 0.15", "209.471, -253.027, -42.5611, 0.15", "217.006, -260.306, -42.8382, 0.15", "224.095, -267.761, -44.8425, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "152.787, -193.071, -38.9729, 0.59", "157.063, -198.738, -39.1649, 0.15", "160.499, -204.806, -40.4486, 0.15", "162.65, -211.258, -42.4108, 0.15", "163.984, -218.119, -43.3931, 0.15", "166.214, -224.59, -45.1939, 0.15", "168.51, -231.143, -46.5273, 0.15", "172.029, -237.057, -48.2707, 0.15", "175.509, -242.849, -50.4677, 0.15", "178.971, -249.001, -51.0602, 0.15", "181.685, -255.489, -51.793, 0.15", "184.929, -261.698, -52.8434, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-15.2626, -30.5149, -12.106, 0.15", "-22.3249, -35.8853, -12.9067, 0.15", "-28.5482, -42.142, -13.8782, 0.15", "-33.5856, -49.3878, -13.312, 0.15", "-38.7315, -56.5139, -14.2823, 0.15", "-44.0171, -63.3249, -16.2944, 0.15", "-47.613, -71.2495, -17.6303, 0.15", "-51.4867, -78.9695, -19.3801, 0.15", "-54.9311, -87.0571, -19.7807, 0.15", "-58.98, -94.8683, -19.2057, 0.15", "-62.683, -102.67, -17.4057, 0.15", "-65.4578, -110.942, -16.3031, 0.15", "-68.907, -119.021, -16.8296, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-15.2626, -30.5149, -12.106, 0.59", "-18.8929, -35.3119, -17.3296, 0.15", "-21.7558, -40.2831, -22.8456, 0.15", "-25.3292, -44.81, -28.3531, 0.15", "-27.698, -49.2983, -34.4997, 0.15", "-29.3376, -53.783, -40.8791, 0.15", "-31.5225, -58.8167, -46.6365, 0.15", "-32.5191, -64.1235, -52.4581, 0.15", "-33.3984, -69.9006, -57.8091, 0.15", "-33.2015, -74.9971, -63.8994, 0.15", "-33.7065, -80.1751, -69.9015, 0.15", "-34.0496, -84.6498, -76.482, 0.15", "-33.6544, -89.6417, -82.6526, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.546355, -34.2581, 0.761271, 0.44", "-0.508226, -36.1985, 2.01899, 0.44", "-0.993316, -37.0091, 2.6279, 0.44", "-1.62792, -38.0967, 3.64926, 0.44", "-2.10506, -39.0392, 4.64922, 0.66", "-2.44296, -39.9119, 5.5155, 0.66", "-2.61024, -40.5355, 6.05668, 0.44", "-2.73838, -41.3734, 6.78359, 0.52", "-2.73562, -42.5953, 7.64467, 0.66", "-2.55079, -43.9375, 8.30567, 0.66", "-2.2345, -45.497, 8.90582, 0.88", "-1.89112, -47.0997, 9.41108, 1.11", "-1.59796, -48.6147, 9.79944, 0.74", "-1.43303, -49.7424, 9.96799, 0.29", "-1.34532, -50.8988, 10.012, 0.22", "-1.33687, -51.586, 9.98993, 0.22", "-1.4017, -52.4896, 9.94011, 0.22", "-1.50485, -53.3414, 9.87109, 0.22", "-1.73243, -55.1711, 9.7081, 0.29", "-1.85566, -56.5883, 9.58897, 0.52", "-1.88448, -57.5902, 9.51038, 0.52", "-1.80974, -58.9658, 9.4158, 0.44", "-1.54175, -61.0036, 9.3177, 0.29", "-1.358, -61.9984, 9.2988, 0.66", "-1.19877, -62.6958, 9.34393, 1.77", "-0.887356, -63.9586, 9.51044, 1.18", "-0.544661, -65.569, 9.82989, 0.52", "-0.276673, -67.0685, 10.2076, 0.52", "-0.123265, -68.0387, 10.4949, 0.81", "0.141377, -69.489, 10.9387, 0.96", "0.416042, -70.7539, 11.3565, 0.52", "0.829911, -72.4649, 12.0043, 0.22", "1.04851, -73.2668, 12.3502, 0.29", "1.37192, -74.3173, 12.8624, 0.29", "1.8288, -75.8131, 13.615, 0.22", "2.13371, -76.7922, 14.1289, 0.37", "2.4353, -77.803, 14.6721, 0.74", "2.6737, -78.7736, 15.1935, 1.03", "2.82175, -79.8723, 15.7482, 1.25", "2.88348, -82.0243, 16.7668, 0.37", "2.8428, -83.2768, 17.3476, 1.18", "2.79923, -84.4338, 17.8463, 2.65", "2.77674, -86.322, 18.5865, 2.21", "2.82831, -88.1505, 19.2584, 0.96", "2.94672, -89.6602, 19.7775, 0.29", "3.07699, -90.73, 20.1454, 0.29", "3.19443, -91.7283, 20.4855, 0.66", "3.31791, -92.9215, 20.9479, 0.44", "3.42071, -93.9824, 21.3949, 0.22", "3.47664, -94.5148, 21.6361, 0.22", "3.52539, -95.1626, 21.9115, 0.22", "3.54402, -96.4838, 22.4169, 0.29", "3.53914, -97.4822, 22.7683, 0.29", "3.55491, -98.1675, 22.9812, 0.22", "3.59012, -98.9577, 23.1833, 0.22", "3.67087, -99.6511, 23.3426, 0.81", "3.80733, -100.306, 23.4725, 1.55", "4.22067, -101.72, 23.7503, 1.84", "4.93537, -103.838, 24.1534, 0.15", "5.15094, -104.503, 24.2968, 0.15", "5.32932, -105.059, 24.4225, 0.15", "5.52518, -105.732, 24.5785, 0.15", "5.78965, -106.729, 24.807, 0.88", "5.99893, -107.558, 24.9872, 1.92", "6.44009, -109.202, 25.2876, 1.99", "6.56264, -109.623, 25.3547, 1.99", "7.08894, -111.568, 25.6097, 0.15", "7.21847, -112.106, 25.6612, 0.15", "7.33272, -112.661, 25.6885, 0.37", "7.4209, -113.225, 25.6986, 0.37", "7.59726, -114.563, 25.7167, 0.15", "7.67741, -115.395, 25.7471, 0.15", "7.76966, -116.374, 25.8041, 0.22", "7.80994, -116.944, 25.8608, 0.22", "7.82888, -117.976, 25.9956, 0.15", "7.80847, -118.765, 26.1171, 0.15", "7.77928, -119.39, 26.2256, 0.59", "7.78252, -120.053, 26.3514, 1.03", "7.85279, -121.078, 26.5267, 0.22", "7.9845, -122.155, 26.7117, 0.07", "8.1006, -122.846, 26.842, 0.07", "8.19326, -123.281, 26.9363, 0.66", "8.49215, -124.414, 27.2468, 0.96", "9.14829, -126.456, 27.8784, 0.22", "9.58709, -127.562, 28.268, 0.22", "9.92371, -128.276, 28.5729, 0.44", "10.334, -129.081, 28.9532, 1.25", "10.7251, -129.782, 29.2968, 1.92", "11.3052, -130.662, 29.7555, 1.11", "11.9411, -131.498, 30.2348, 0.22", "12.4438, -132.155, 30.5883, 0.22", "12.9917, -132.931, 30.9656, 0.52", "13.6293, -134.011, 31.4441, 0.22", "14.192, -135.184, 31.9679, 0.22", "14.5688, -136.132, 32.4106, 0.22", "14.7265, -136.615, 32.6379, 0.81", "15.0527, -137.765, 33.2, 1.77", "15.5994, -139.949, 34.3396, 0.37", "15.8743, -141.093, 34.9543, 0.15", "15.9965, -141.62, 35.226, 0.15", "16.1576, -142.274, 35.5477, 0.37", "16.3688, -143.073, 35.9385, 1.18", "16.6418, -144.015, 36.3899, 1.55", "17.0784, -145.462, 37.0129, 0.81", "17.3508, -146.48, 37.3875, 0.15", "17.4957, -147.136, 37.6169, 0.22", "17.6982, -148.125, 37.9444, 0.15", "17.8616, -149.035, 38.2303, 0.96", "18.0444, -150.043, 38.543, 1.18", "18.3417, -151.596, 39.007, 0.22", "18.5125, -152.325, 39.2189, 0.22", "18.7697, -153.242, 39.485, 0.37", "18.853, -153.496, 39.5543, 0.37", "19.1895, -154.419, 39.8042, 0.22", "19.3685, -154.845, 39.9311, 0.22", "19.7486, -155.573, 40.1265, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.546355, -34.2581, 0.761271, 1.84", "0.372515, -35.0981, 0.430048, 1.84", "0.214985, -36.1057, 0.0632854, 1.55", "0.0926492, -37.1931, -0.297948, 1.55", "-0.020765, -38.3297, -0.63484, 1.55", "-0.132342, -39.4581, -0.923807, 1.47", "-0.234232, -40.4465, -1.15145, 0.96", "-0.315412, -41.2347, -1.29559, 1.55", "-0.475705, -42.6486, -1.47111, 1.25", "-0.654461, -44.1093, -1.60458, 1.47", "-0.856767, -45.6149, -1.7019, 1.03", "-1.01994, -46.6322, -1.74965, 1.18", "-1.28724, -48.0675, -1.78646, 1.99", "-1.56098, -49.2855, -1.79449, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.20842, 31.0169, -0.520503, 2.14", "8.32515, 32.3417, -0.397971, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.20842, 31.0169, -0.520503, 1.47", "6.70525, 32.3331, 0.54464, 1.47", "6.31616, 33.1232, 1.19013, 1.18", "5.8341, 33.8491, 1.81255, 1.18", "5.17543, 34.5977, 2.51173, 1.47", "4.5179, 35.1447, 3.08246, 1.47", "4.13451, 35.3513, 3.34696, 1.47", "3.18011, 35.4888, 3.75731, 1.47", "1.92584, 35.3232, 4.0583, 1.03", "1.18393, 35.0832, 4.14307, 1.62", "0.51118, 34.7709, 4.1707, 1.77", "-0.342326, 34.2613, 4.1799, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "40.1373, 1.37506, -17.3892, 0.15", "49.2333, -5.62305, -21.1182, 0.15", "58.8601, -11.8259, -24.9926, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "40.1373, 1.37506, -17.3892, 0.59", "48.553, -5.03082, -20.4836, 0.15", "55.7994, -12.7789, -23.3063, 0.15", "61.2339, -21.8138, -26.2075, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-32.3334, -19.5815, -68.4236, 0.15", "-41.9135, -15.792, -74.22, 0.15", "-49.3052, -10.3639, -81.6314, 0.15", "-55.0662, -3.06915, -88.8039, 0.15", "-62.3975, 3.23735, -95.5146, 0.15", "-70.3327, 8.43524, -102.527, 0.15", "-77.7479, 13.3515, -110.28, 0.15", "-83.9089, 19.4251, -118.267, 0.15", "-90.264, 26.3413, -125.332, 0.15", "-95.2989, 32.205, -134.219, 0.15", "-101.998, 36.926, -142.715, 0.15", "-110.47, 42.399, -148.823, 0.15", "-118.914, 47.3506, -155.415, 0.15", "-126.829, 53.9208, -161.125, 0.15", "-135.944, 59.5921, -165.995, 0.15", "-146.181, 64.6804, -168.924, 0.15", "-156.072, 71.0144, -169.732, 0.15", "-165.845, 77.2224, -171.885, 0.15", "-176.414, 82.4611, -172.103, 0.15", "-186.858, 87.935, -172.294, 0.15", "-196.589, 94.1064, -174.728, 0.15", "-205.748, 101.118, -176.992, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-32.3334, -19.5815, -68.4236, 0.59", "-34.449, -21.7821, -75.7408, 0.15", "-37.4897, -23.4167, -82.8909, 0.15", "-39.7615, -25.6082, -90.1647, 0.15", "-41.7489, -27.7045, -97.5496, 0.15", "-43.4008, -29.0748, -105.194, 0.15", "-45.3175, -31.2194, -112.582, 0.15", "-46.4168, -33.0739, -120.214, 0.15", "-48.2032, -34.8046, -127.749, 0.15", "-48.4021, -37.9688, -134.986, 0.15", "-47.6015, -41.2797, -142.107, 0.15", "-46.6839, -44.7264, -149.143, 0.15", "-46.7448, -48.5256, -156.051, 0.15", "-45.4894, -52.8808, -162.474, 0.15", "-45.1251, -58.3371, -168.078, 0.15", "-46.011, -63.7248, -173.705, 0.15", "-46.849, -68.6849, -179.736, 0.15", "-46.7766, -72.6173, -186.564, 0.15", "-46.7137, -76.5527, -193.39, 0.15", "-45.1696, -81.7748, -199.018, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-70.6505, -21.7651, -142.369, 0.15", "-75.2483, -22.0333, -149.633, 0.15", "-80.5599, -22.0663, -156.399, 0.15", "-86.5745, -21.4666, -162.519, 0.15", "-91.1446, -20.1213, -169.677, 0.15", "-95.7873, -17.7193, -176.491, 0.15", "-101.82, -16.7219, -182.54, 0.15", "-108.232, -16.251, -188.254, 0.15", "-114.102, -17.0634, -194.484, 0.15", "-120.193, -19.3613, -200.076, 0.15", "-126.174, -21.913, -205.669, 0.15", "-132.24, -26.0792, -210.007, 0.15", "-137.695, -30.3331, -215.014, 0.15", "-142.894, -34.7398, -220.154, 0.15", "-148.385, -39.9624, -224.028, 0.15", "-153.84, -45.98, -226.478, 0.15", "-159.378, -51.5835, -229.664, 0.15", "-163.951, -58.3415, -231.876, 0.15", "-167.356, -65.2755, -235.297, 0.15", "-169.837, -73.0831, -237.2, 0.15", "-173.859, -80.1795, -239.371, 0.15", "-178.662, -87.0458, -240.468, 0.15", "-182.644, -94.1914, -242.541, 0.15", "-187.612, -100.502, -245.24, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-70.6505, -21.7651, -142.369, 0.59", "-71.9602, -21.7358, -146.856, 0.15", "-73.1012, -21.9096, -151.385, 0.15", "-74.7756, -22.3146, -155.729, 0.15", "-76.2614, -23.4086, -160.017, 0.15", "-77.3075, -24.1675, -164.506, 0.15", "-77.6669, -25.5993, -168.932, 0.15", "-78.3176, -26.1201, -173.53, 0.15", "-79.2085, -26.4277, -178.109, 0.15", "-80.2436, -26.9368, -182.637, 0.15", "-80.7011, -28.1834, -187.112, 0.15", "-81.6153, -30.1968, -191.207, 0.15", "-82.0953, -31.7993, -195.559, 0.15", "-82.1444, -33.2711, -199.987, 0.15", "-82.199, -34.6853, -204.434, 0.15", "-81.747, -35.8908, -208.923, 0.15", "-81.8395, -36.5571, -213.547, 0.15", "-82.3746, -36.8201, -218.183, 0.15", "-82.3174, -37.9015, -222.727, 0.15", "-82.9255, -39.2952, -227.138, 0.15", "-84.1929, -40.6612, -231.413, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-68.907, -119.021, -16.8296, 0.15", "-72.3785, -124.768, -17.1522, 0.15", "-75.1424, -130.875, -16.9176, 0.15", "-77.3515, -137.194, -17.0283, 0.15", "-79.889, -143.314, -15.9642, 0.15", "-82.2185, -149.47, -14.6667, 0.15", "-83.3281, -155.973, -13.5626, 0.15", "-84.3529, -162.565, -13.8559, 0.15", "-85.7348, -168.929, -15.3643, 0.15", "-87.5109, -174.856, -17.9386, 0.15", "-88.7695, -180.186, -21.8343, 0.15", "-90.3871, -184.909, -26.3694, 0.15", "-92.196, -189.532, -30.9406, 0.15", "-94.753, -193.617, -35.6928, 0.15", "-96.9409, -196.503, -41.4485, 0.15", "-99.0699, -199.322, -47.2604, 0.15", "-99.8967, -202.643, -53.1204, 0.15", "-99.9407, -206.501, -58.6829, 0.15", "-99.953, -210.258, -64.3171, 0.15", "-101.039, -213.905, -69.9257, 0.15", "-102.501, -217.034, -75.7744, 0.15", "-105.068, -219.937, -81.363, 0.15", "-107.843, -222.735, -86.909, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-68.907, -119.021, -16.8296, 0.59", "-72.3637, -124.797, -17.0966, 0.15", "-75.6914, -130.603, -17.8474, 0.15", "-79.9344, -135.847, -17.3578, 0.15", "-83.975, -141.232, -16.7648, 0.15", "-88.4792, -146.222, -15.929, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-33.6544, -89.6417, -82.6526, 0.15", "-34.6918, -97.1261, -90.4653, 0.15", "-37.1664, -105.277, -97.1861, 0.15", "-38.8854, -112.632, -105.01, 0.15", "-41.6196, -121.29, -110.918, 0.15", "-44.9047, -130.698, -115.103, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-33.6544, -89.6417, -82.6526, 0.59", "-37.2254, -95.4711, -90.843, 0.15", "-40.6352, -101.438, -98.9974, 0.15", "-43.1258, -109.412, -105.514, 0.15", "-44.6563, -118.565, -110.531, 0.15", "-44.1115, -128.15, -114.834, 0.15", "-42.627, -137.838, -118.639, 0.15", "-39.8443, -147.216, -122.515, 0.15", "-38.3441, -157.359, -124.785, 0.15", "-35.2946, -166.827, -128.206, 0.15", "-33.9643, -176.272, -132.649, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "19.7486, -155.573, 40.1265, 0.22", "19.585, -156.014, 40.0325, 0.22", "19.3662, -156.604, 39.9069, 0.22", "19.1761, -157.117, 39.7978, 0.22", "18.8371, -158.031, 39.6031, 0.22", "18.6841, -158.443, 39.5153, 0.15", "18.5316, -158.855, 39.4277, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "19.7486, -155.573, 40.1265, 1.18", "20.0701, -156.544, 40.5668, 1.18", "20.4152, -157.666, 41.0342, 0.29", "20.708, -158.699, 41.4588, 0.15", "20.8604, -159.287, 41.6961, 0.15", "20.9967, -159.865, 41.9232, 0.29", "21.1571, -160.688, 42.2502, 0.66", "21.274, -161.54, 42.5918, 1.4", "21.3251, -162.801, 43.0881, 0.22", "21.3032, -163.675, 43.4258, 0.22", "21.2789, -164.057, 43.5692, 0.22", "21.2104, -164.872, 43.8483, 0.22", "21.1366, -165.575, 44.0709, 0.66", "21.0162, -166.453, 44.3285, 0.15", "20.8735, -167.195, 44.5391, 0.15", "20.6687, -168.099, 44.797, 0.52", "20.4088, -169.218, 45.1271, 0.29", "20.307, -169.663, 45.261, 0.15", "20.2044, -170.114, 45.4066, 0.15", "20.0034, -170.939, 45.6665, 0.15", "19.8534, -171.495, 45.8364, 0.29", "19.6544, -172.258, 46.079, 1.11", "19.4761, -173.033, 46.3344, 1.77", "19.2879, -174.113, 46.6876, 1.77", "19.1454, -175.244, 47.0603, 1.33", "18.9928, -176.817, 47.5716, 0.15", "18.9109, -177.865, 47.9236, 0.22", "18.8591, -178.619, 48.1849, 0.66", "18.8148, -179.345, 48.4443, 0.81", "18.7638, -180.696, 48.9385, 0.15", "18.788, -181.491, 49.2342, 0.22", "18.8709, -182.163, 49.4849, 0.22", "19.0128, -183.026, 49.7927, 0.22", "19.108, -183.532, 49.9644, 0.66", "19.3501, -184.524, 50.2876, 1.4", "19.8077, -185.922, 50.7567, 0.88", "20.1201, -186.795, 51.0563, 0.15", "20.4291, -187.632, 51.3378, 0.15", "20.6618, -188.24, 51.5375, 0.22", "21.0201, -189.192, 51.8588, 0.29", "21.268, -189.936, 52.1071, 0.15", "21.5012, -190.96, 52.43, 0.15", "21.5447, -191.315, 52.5414, 0.15", "21.5872, -192.06, 52.7946, 0.22", "21.5785, -193.141, 53.1801, 0.22", "21.5532, -193.608, 53.3502, 0.22", "21.4978, -194.591, 53.701, 0.37", "21.4712, -195.595, 54.0684, 0.22", "21.4695, -196.271, 54.3064, 0.88", "21.5226, -197.78, 54.8085, 2.06", "21.6533, -199.546, 55.2952, 0.59", "21.7952, -200.746, 55.5446, 0.22", "21.9256, -201.539, 55.6462, 0.22", "22.0524, -202.242, 55.7056, 0.22", "22.2317, -203.21, 55.742, 0.59", "22.5138, -204.582, 55.6947, 0.07", "22.7058, -205.415, 55.5629, 0.15", "22.9389, -206.404, 55.3119, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.56098, -49.2855, -1.79449, 0.74", "-1.7062, -51.5043, -2.21006, 0.74", "-1.83974, -53.4803, -2.61395, 0.74", "-1.94694, -54.5976, -2.84791, 0.81", "-2.1971, -56.4399, -3.25646, 0.88", "-2.38486, -57.6235, -3.52431, 0.81", "-2.66855, -59.1516, -3.88227, 1.18", "-2.91822, -60.2873, -4.1789, 1.18", "-3.31664, -61.6778, -4.55467, 1.03", "-3.80582, -63.1528, -4.97889, 1.11", "-4.24998, -64.3054, -5.32002, 0.74", "-4.82784, -65.6012, -5.69358, 1.11", "-5.35484, -66.7034, -5.99349, 0.81", "-5.98137, -68.0028, -6.31914, 0.81", "-6.17696, -68.4773, -6.42165, 0.81", "-6.49654, -69.4791, -6.59795, 0.88", "-6.75464, -70.5892, -6.73021, 0.88", "-7.0508, -72.4234, -6.84869, 1.11", "-7.15973, -73.2983, -6.85095, 1.33", "-7.40872, -75.4138, -6.68852, 0.74", "-7.528, -76.6689, -6.56401, 0.74", "-7.62633, -78.5149, -6.33919, 0.88", "-7.64979, -79.6012, -6.16762, 1.25", "-7.68097, -80.7215, -5.94115, 1.03", "-7.82142, -82.2169, -5.54078, 0.74", "-8.12746, -94.1203, -5.77699, 0.74", "-9.50802, -105.884, -4.4581, 0.74", "-10.4983, -117.614, -2.58946, 0.74", "-11.217, -128.813, 1.50666, 0.74", "-10.8342, -140.09, 5.4168, 0.74", "-11.2762, -151.003, 10.2884, 0.74", "-13.6915, -162.239, 13.5429, 0.74", "-13.6973, -173.865, 16.1948, 0.74", "-13.0815, -185.398, 19.1772, 0.74", "-12.5498, -196.996, 21.9025, 0.74", "-11.9004, -208.623, 24.4689, 0.74", "-11.982, -219.892, 28.423, 0.74", "-14.4494, -230.41, 33.5956, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.56098, -49.2855, -1.79449, 1.03", "-1.44413, -50.3097, -1.25234, 1.03", "-1.29866, -51.8255, -0.528666, 1.03", "-1.21728, -52.9964, -0.079114, 1.03", "-1.08914, -54.7279, 0.466682, 1.03", "-0.949146, -56.1896, 0.837098, 0.96", "-0.813097, -57.225, 1.06581, 0.96", "-0.66361, -58.0948, 1.20545, 0.96", "-0.112288, -60.4605, 1.44994, 0.88", "0.337947, -61.8598, 1.53439, 0.88", "1.14284, -63.6747, 1.61045, 0.88", "2.18168, -65.4659, 1.68153, 0.81", "3.05497, -66.6746, 1.74814, 0.81", "3.77052, -67.4929, 1.82443, 0.81", "4.87009, -68.5429, 1.96387, 0.88", "6.01874, -69.6247, 2.1577, 1.03", "6.77884, -70.4265, 2.33442, 1.03", "7.70671, -71.6566, 2.61557, 0.81", "8.34477, -72.8071, 2.87096, 1.4", "8.64178, -73.5265, 3.02198, 1.92", "9.21258, -75.4464, 3.33943, 1.4", "9.7428, -77.7093, 3.56932, 0.88", "10.0645, -79.299, 3.64655, 0.88", "10.3742, -80.9564, 3.64587, 1.03", "10.5565, -81.8796, 3.60663, 1.03", "10.8838, -83.3828, 3.48548, 0.81", "11.219, -84.7683, 3.29283, 1.18", "11.3106, -85.1868, 3.2204, 1.18", "11.4219, -86.0062, 3.09225, 0.74", "11.4006, -87.0725, 3.00535, 0.44", "11.2951, -87.7071, 3.00486, 0.44", "11.0333, -88.6395, 3.06972, 0.66", "10.6169, -89.8773, 3.18701, 0.81", "10.2324, -90.9975, 3.29393, 0.96", "9.64159, -92.75, 3.45438, 1.33", "9.2675, -93.9083, 3.55284, 0.88", "8.93498, -95.0461, 3.65504, 1.11", "8.59286, -96.3793, 3.80314, 1.18", "8.29605, -97.6455, 3.97092, 1.18", "7.89584, -99.4138, 4.23947, 0.52", "7.51653, -101.249, 4.56974, 0.52", "7.24472, -102.617, 4.83651, 0.74", "7.00461, -103.892, 5.09769, 0.96", "6.79329, -105.084, 5.3274, 1.62", "6.59596, -106.274, 5.52754, 1.62", "6.37311, -107.762, 5.72432, 1.33", "6.21843, -108.984, 5.82657, 0.44", "6.1057, -109.709, 5.85234, 0.59", "5.81488, -111.066, 5.88725, 0.59", "5.40726, -112.523, 5.94822, 0.88", "5.0108, -113.643, 6.0192, 1.25", "4.72346, -114.325, 6.08609, 2.21", "3.99712, -115.914, 6.3134, 1.84", "3.14462, -117.708, 6.63959, 1.33", "2.3678, -119.349, 7.01903, 0.66", "1.99169, -120.212, 7.23104, 0.44", "1.62367, -121.14, 7.45956, 0.44", "1.27675, -122.134, 7.69492, 0.81", "0.938444, -123.4, 7.95247, 1.11", "0.663958, -124.813, 8.17239, 0.74", "0.424507, -126.342, 8.36713, 0.37", "0.246173, -127.521, 8.48535, 0.37", "0.121894, -128.266, 8.55483, 0.74", "-0.095905, -129.393, 8.6689, 0.88", "-0.455478, -131.041, 8.87572, 0.44", "-0.658205, -131.805, 9.01611, 0.44", "-0.896833, -132.536, 9.23646, 0.59", "-1.22771, -133.341, 9.57721, 0.96", "-1.54202, -133.993, 9.92892, 1.25", "-1.89247, -134.673, 10.3726, 1.25", "-2.2882, -135.486, 10.9555, 0.81", "-2.51596, -136.134, 11.3886, 1.11", "-2.71112, -137.26, 11.9504, 0.22", "-2.73757, -137.78, 12.1058, 0.22", "-2.73705, -138.604, 12.2747, 0.22", "-2.7423, -139.35, 12.3832, 0.74", "-2.76507, -140.099, 12.4748, 1.18", "-2.87368, -141.807, 12.6934, 0.66", "-3.03207, -143.282, 12.9287, 0.37", "-3.31548, -144.574, 13.2108, 0.66", "-3.63047, -145.651, 13.5245, 0.66", "-3.89232, -146.472, 13.8225, 1.25", "-4.13643, -147.247, 14.1672, 2.06", "-4.45593, -148.387, 14.7626, 2.21", "-4.94781, -150.52, 15.9405, 1.03", "-5.17419, -151.742, 16.5976, 0.59", "-5.35378, -153.016, 17.2016, 0.37", "-5.44682, -153.962, 17.606, 0.66", "-5.50629, -155.111, 18.0498, 0.37", "-5.49379, -156.355, 18.5017, 0.29", "-5.438, -157.166, 18.7658, 0.52", "-5.36063, -158.575, 19.2137, 0.22", "-5.29508, -159.294, 19.5114, 0.22", "-5.16289, -160.075, 19.9494, 0.29", "-4.96582, -160.788, 20.4988, 0.96", "-4.73752, -161.475, 21.1301, 1.77", "-4.51213, -162.154, 21.7522, 1.77", "-4.02884, -163.733, 23.0357, 0.29", "-3.84822, -164.428, 23.4587, 0.29", "-3.73061, -165.042, 23.7164, 0.29", "-3.60537, -165.986, 23.9527, 0.29", "-3.52998, -167.231, 24.1109, 0.29", "-3.56948, -168.691, 24.1603, 0.29", "-3.65473, -169.411, 24.1498, 0.29", "-3.87336, -170.478, 24.1445, 0.29", "-4.22696, -171.725, 24.196, 0.29", "-4.66252, -173.022, 24.3414, 0.29", "-4.96018, -173.833, 24.4746, 1.03", "-5.33116, -174.777, 24.6698, 1.92", "-5.95811, -176.366, 25.0326, 3.02", "-6.64367, -178.147, 25.4786, 2.36", "-7.4063, -180.197, 26.0324, 0.22", "-7.6642, -180.957, 26.252, 0.22", "-7.96522, -181.985, 26.5634, 0.22", "-8.07754, -182.444, 26.7036, 0.52", "-8.21885, -183.195, 26.9463, 0.96", "-8.3973, -184.302, 27.3021, 0.44", "-8.61121, -185.684, 27.7277, 0.22", "-8.74486, -186.572, 27.9856, 0.37", "-8.89632, -187.617, 28.2679, 0.81", "-9.04646, -188.53, 28.5059, 0.96", "-9.29525, -189.77, 28.7983, 1.25", "-9.55635, -190.956, 29.0329, 0.66", "-9.67324, -191.512, 29.1166, 0.22", "-9.8933, -192.732, 29.2595, 0.22", "-9.96797, -193.31, 29.3212, 0.44", "-10.101, -194.792, 29.4858, 0.22", "-10.1358, -195.821, 29.6286, 0.22", "-10.1334, -197.06, 29.846, 0.29", "-10.1335, -198.081, 30.046, 0.52", "-10.1346, -199.139, 30.2568, 0.52", "-10.1643, -200.259, 30.4869, 0.52", "-10.2351, -201.317, 30.7111, 1.18", "-10.3537, -202.295, 30.9182, 2.43", "-10.6323, -203.969, 31.2776, 1.33", "-10.8954, -205.324, 31.551, 0.59", "-11.1237, -206.43, 31.7565, 0.81", "-11.3218, -207.386, 31.9247, 0.15", "-11.4571, -208.022, 32.0312, 0.15", "-11.513, -208.342, 32.0857, 0.15", "-11.5769, -208.743, 32.1682, 0.22", "-11.7307, -209.512, 32.3501, 0.37", "-11.9746, -210.406, 32.5402, 0.37", "-12.331, -211.36, 32.6943, 0.22", "-12.8288, -212.383, 32.8128, 0.22", "-13.1836, -212.97, 32.8505, 0.22", "-13.5789, -213.514, 32.8704, 0.74", "-14.2188, -214.297, 32.8772, 1.77", "-14.9854, -215.183, 32.8648, 2.21", "-15.5522, -215.819, 32.8824, 2.21", "-16.788, -217.187, 32.9829, 0.37", "-17.554, -218.098, 33.0954, 0.37", "-18.1324, -218.882, 33.2357, 0.22", "-18.6004, -219.62, 33.4277, 0.22", "-19.1257, -220.53, 33.7304, 0.22", "-19.4139, -221.063, 33.9489, 0.81", "-19.8294, -221.87, 34.3932, 1.25", "-20.3124, -222.783, 35.0202, 0.88", "-20.8811, -223.751, 35.7791, 0.22", "-21.1763, -224.242, 36.1711, 0.22", "-21.4985, -224.839, 36.5856, 0.22", "-21.8064, -225.577, 37.036, 0.22", "-22.0386, -226.553, 37.4798, 0.44", "-22.155, -227.485, 37.7786, 1.47", "-22.2562, -228.505, 38.0042, 1.47", "-22.4062, -229.789, 38.2126, 0.44", "-22.5605, -230.987, 38.3537, 0.96", "-22.8453, -232.732, 38.4997, 0.22", "-23.0206, -233.656, 38.5711, 0.22", "-23.3496, -235.059, 38.6965, 0.22", "-23.6611, -236.103, 38.7853, 0.22", "-23.9353, -236.867, 38.8445, 0.22", "-24.3158, -237.776, 38.9073, 0.22", "-24.8631, -238.985, 39.0121, 0.22", "-25.1852, -239.745, 39.0856, 0.81", "-25.6409, -240.919, 39.2116, 1.77", "-26.0539, -242.062, 39.3652, 1.18", "-26.7861, -244.264, 39.7091, 0.22", "-26.9971, -244.999, 39.8506, 0.22", "-27.3124, -246.263, 40.1547, 0.88", "-27.6321, -247.836, 40.6257, 0.15", "-27.7635, -248.756, 40.9849, 0.15", "-27.8056, -249.658, 41.3872, 0.29", "-27.7438, -250.572, 41.8372, 0.74", "-27.6585, -251.271, 42.193, 1.4", "-27.4887, -252.317, 42.7708, 0.59", "-27.2493, -253.705, 43.5439, 0.15", "-27.076, -254.765, 44.1079, 0.15", "-26.9165, -255.723, 44.5977, 0.15", "-26.744, -256.605, 44.9972, 0.29", "-26.487, -257.71, 45.476, 0.96", "-26.1858, -258.927, 45.9944, 0.44", "-25.941, -259.909, 46.4184, 0.22", "-25.641, -261.092, 46.979, 0.22", "-25.3192, -262.226, 47.5343, 0.15", "-25.0189, -263.194, 47.9902, 0.15", "-24.8199, -263.847, 48.2822, 0.15", "-24.6585, -264.499, 48.5463, 0.29", "-24.483, -265.658, 48.9427, 0.44", "-24.4168, -266.798, 49.2638, 0.44", "-24.4374, -268.375, 49.6558, 0.44", "-24.5155, -269.68, 49.9029, 0.44", "-24.6714, -271.283, 50.1461, 0.88", "-24.8657, -272.532, 50.2985, 1.03", "-25.1396, -273.728, 50.4255, 0.37", "-25.4658, -274.725, 50.5401, 0.15", "-25.8921, -275.688, 50.6851, 0.15", "-26.3442, -276.507, 50.8377, 0.37", "-27.0181, -277.523, 51.0709, 0.22", "-27.581, -278.243, 51.2632, 0.81", "-28.5997, -279.351, 51.5983, 1.25", "-29.8574, -280.498, 51.9887, 0.88", "-30.7133, -281.17, 52.2355, 0.22", "-31.5813, -281.787, 52.4408, 0.22", "-32.4537, -282.386, 52.5977, 0.74", "-33.6646, -283.262, 52.729, 1.47", "-34.6343, -284.031, 52.7527, 0.37", "-36.0557, -285.306, 52.6261, 0.22", "-36.9995, -286.304, 52.4097, 0.29", "-37.7453, -287.284, 52.1131, 0.29", "-38.2599, -288.221, 51.7641, 0.29", "-38.636, -289.258, 51.3389, 0.37", "-38.9466, -290.635, 50.8014, 0.22", "-39.1213, -292.186, 50.2545, 0.22", "-39.1566, -292.943, 50.0212, 0.22", "-39.1581, -294.102, 49.7625, 0.37", "-39.1513, -294.977, 49.6505, 0.59", "-39.191, -297.066, 49.5388, 0.66", "-39.2703, -298.507, 49.5618, 0.88", "-39.3505, -299.475, 49.6703, 0.88", "-39.5503, -301.213, 49.9552, 0.52", "-39.8051, -303.096, 50.3355, 0.22", "-40.0379, -304.986, 50.8052, 0.22", "-40.1266, -305.759, 51.0352, 0.81", "-40.3722, -307.814, 51.702, 1.25", "-40.4848, -308.994, 52.086, 1.03", "-40.5372, -309.756, 52.3254, 1.03", "-40.5929, -311.628, 52.9354, 0.22", "-40.5944, -313.011, 53.3832, 0.22", "-40.6189, -313.943, 53.6604, 0.22", "-40.7312, -315.458, 54.0496, 0.22", "-40.8617, -316.322, 54.2706, 0.22", "-41.2491, -317.911, 54.6495, 0.22", "-41.6596, -318.969, 54.8747, 0.74", "-42.1592, -319.981, 55.0578, 1.11", "-42.5993, -320.731, 55.1394, 1.11", "-43.5871, -322.152, 55.1759, 0.74", "-44.3637, -323.174, 55.0781, 1.4", "-45.6076, -324.732, 54.7307, 0.66", "-46.4624, -325.82, 54.3936, 0.07", "-47.5014, -327.205, 53.9042, 0.07", "-48.182, -328.146, 53.5517, 0.22", "-48.9178, -329.263, 53.1356, 0.22", "-49.4055, -330.056, 52.8696, 0.44", "-49.982, -331.1, 52.5846, 0.44", "-50.7254, -332.51, 52.4147, 0.44", "-51.1917, -333.43, 52.4704, 0.22", "-51.8276, -334.722, 52.7198, 0.15", "-52.2195, -335.442, 52.9701, 0.37", "-52.5102, -335.887, 53.2017, 0.37", "-53.2734, -336.932, 53.9026, 0.15", "-54.0007, -337.825, 54.623, 0.15", "-54.2436, -338.089, 54.8611, 0.52", "-54.9465, -338.692, 55.478, 1.03", "-55.9317, -339.431, 56.2462, 0.15", "-56.6816, -339.932, 56.7376, 0.15", "-57.4329, -340.404, 57.1202, 0.15", "-57.9296, -340.735, 57.3193, 0.59", "-59.0138, -341.538, 57.6843, 0.15", "-59.3726, -341.824, 57.782, 0.15", "-59.9325, -342.338, 57.9078, 0.66", "-60.4066, -342.828, 58.01, 0.81", "-61.6961, -344.349, 58.283, 0.15", "-62.6971, -345.668, 58.4925, 0.15", "-63.5491, -346.918, 58.6682, 0.29", "-64.7139, -348.714, 58.9045, 0.22", "-65.7112, -350.338, 59.1065, 0.15", "-66.1156, -351.004, 59.1884, 0.66", "-66.7752, -352.029, 59.296, 0.81", "-67.6255, -353.202, 59.4003, 0.44", "-68.1532, -353.897, 59.4572, 1.03", "-68.7353, -354.562, 59.5111, 1.25", "-70.3485, -356.218, 59.6306, 0.52", "-71.6204, -357.39, 59.7065, 0.22", "-72.4462, -358.047, 59.7373, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.32515, 32.3417, -0.397971, 0.96", "9.84315, 33.5204, -1.04773, 0.96", "10.5825, 34.0908, -1.36137, 1.03", "11.5418, 34.8135, -1.62137, 1.03", "12.392, 35.454, -1.85178, 1.62", "13.2158, 36.0746, -2.07504, 1.33", "14.3725, 36.946, -2.38853, 1.03", "15.2487, 37.6104, -2.59489, 0.96", "16.9298, 38.8752, -2.90941, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "8.32515, 32.3417, -0.397971, 0.88", "9.16148, 34.1888, -0.632321, 0.88", "10.1812, 36.0309, -0.89676, 0.81", "10.6725, 36.891, -1.0659, 0.66", "11.1548, 37.7839, -1.2758, 1.11", "11.735, 38.9924, -1.58021, 0.74", "12.1171, 39.8913, -1.82248, 0.52", "12.5852, 41.1521, -2.28979, 0.22", "12.7318, 42.1617, -2.65573, 0.29", "12.5814, 42.8777, -2.92965, 0.29", "12.1738, 43.6342, -3.26215, 0.66", "11.8675, 44.0174, -3.45978, 0.66", "10.9995, 44.9234, -3.92617, 0.81", "9.88267, 46.0634, -4.51668, 1.18", "9.04766, 47.0179, -5.00172, 1.03", "8.22945, 48.1425, -5.58462, 0.81", "7.54498, 49.335, -6.20942, 1.11", "6.82579, 50.966, -7.06747, 0.88", "6.38049, 52.3264, -7.79845, 0.66", "6.08567, 53.5805, -8.45594, 0.66", "5.8661, 54.6378, -8.94099, 0.66", "5.65832, 55.6023, -9.32104, 0.66", "5.3877, 56.7544, -9.75355, 0.81", "5.14942, 57.6345, -10.106, 1.18", "4.85096, 58.6041, -10.4812, 1.18", "4.18904, 60.7534, -11.2409, 0.52", "3.79604, 61.8887, -11.6296, 0.52", "3.49871, 62.7871, -11.9285, 0.52", "3.33323, 63.4336, -12.1282, 1.03", "3.17894, 64.6011, -12.4894, 1.03", "3.27559, 66.018, -12.9784, 0.66", "2.55465, 77.2842, -18.1696, 0.66", "1.47902, 88.9935, -22.1198, 0.66", "-2.24285, 100.296, -25.6888, 0.66", "-6.84298, 111.363, -29.0046, 0.66", "-11.7166, 121.936, -33.438, 0.66", "-18.7059, 131.755, -36.7111, 0.66", "-25.2519, 141.195, -41.6513, 0.66", "-30.7418, 151.004, -47.0949, 0.66", "-36.7343, 161.296, -50.7908, 0.66", "-43.1895, 170.626, -56.0595, 0.66", "-47.4531, 180.168, -62.9166, 0.66", "-52.2998, 189.866, -69.1272, 0.66", "-57.3699, 199.373, -75.4688, 0.66", "-62.3776, 208.421, -82.5254, 0.66", "-68.5146, 216.228, -90.2204, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.342326, 34.2613, 4.1799, 0.96", "-0.933339, 34.6596, 4.02189, 0.96", "-1.51387, 34.9078, 3.91165, 0.66", "-2.35479, 34.9967, 3.82578, 0.52", "-2.70996, 34.8362, 3.84666, 0.52", "-3.20754, 34.2794, 3.96065, 0.52", "-3.46032, 33.9726, 4.03272, 0.88", "-3.99902, 33.243, 4.22602, 1.11", "-4.49703, 32.5776, 4.4112, 1.25", "-4.91911, 32.0724, 4.54266, 1.25", "-5.79598, 31.1685, 4.73502, 0.66", "-6.30008, 30.7184, 4.80436, 0.96", "-6.85731, 30.2991, 4.85707, 1.33", "-7.58675, 29.8403, 4.90566, 1.33", "-8.70053, 29.2443, 4.9703, 1.33", "-9.93155, 28.6433, 5.0596, 0.88", "-10.6725, 28.3107, 5.10514, 0.88", "-11.5135, 27.9273, 5.15268, 1.4", "-12.0599, 27.668, 5.19118, 1.55", "-12.9112, 27.2414, 5.27705, 2.06", "-13.5824, 26.8663, 5.41598, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.342326, 34.2613, 4.1799, 0.74", "-0.59426, 33.2636, 3.97794, 0.74", "-0.964726, 31.9978, 3.75977, 0.52", "-1.31218, 30.8958, 3.60395, 0.88", "-1.71117, 29.7287, 3.51232, 0.44", "-1.98745, 28.9813, 3.49134, 0.44", "-2.20649, 28.4207, 3.49309, 0.37", "-2.62828, 27.4245, 3.5644, 0.88", "-3.04418, 26.3852, 3.71884, 0.44", "-3.4652, 25.241, 3.92993, 0.44", "-3.71518, 24.4187, 4.08873, 0.74", "-3.88008, 23.7703, 4.22216, 1.11", "-4.1845, 22.3574, 4.54545, 0.96", "-4.41644, 21.0463, 4.90176, 1.18", "-4.59155, 19.9284, 5.26249, 1.18", "-4.78789, 18.6588, 5.72267, 0.88", "-4.95477, 17.6113, 6.15076, 0.66", "-5.10421, 16.7631, 6.54786, 0.66", "-5.26961, 15.8625, 7.00003, 0.66", "-5.46678, 14.8349, 7.53605, 0.66", "-5.67914, 13.6598, 8.13524, 0.66", "-5.9636, 11.9953, 8.86271, 0.52", "-6.0932, 11.0906, 9.18029, 0.52", "-6.2622, 9.51613, 9.60211, 0.52", "-6.34124, 8.42297, 9.79995, 0.52", "-6.38332, 7.30002, 9.93062, 0.52", "-6.41235, 5.84312, 10.0514, 0.96", "-6.44417, 5.10155, 10.0913, 1.11", "-6.50007, 4.34061, 10.1186, 1.11", "-6.70745, 2.46362, 10.1851, 0.44", "-6.83548, 1.57437, 10.2044, 0.44", "-7.15365, -0.0136558, 10.2437, 0.66", "-7.42021, -1.09444, 10.2648, 0.52", "-7.57969, -1.6538, 10.2559, 0.88", "-7.73184, -2.14494, 10.2329, 1.33", "-8.05775, -3.24109, 10.1452, 0.96", "-8.46556, -4.81534, 9.99323, 0.59", "-8.69736, -5.94015, 9.86447, 0.59", "-8.8084, -6.6695, 9.78938, 0.96", "-8.92806, -7.69128, 9.70303, 0.52", "-9.0449, -9.07384, 9.62646, 0.22", "-9.10343, -9.95981, 9.60974, 0.29", "-9.17489, -10.7498, 9.60623, 0.29", "-9.26368, -11.3542, 9.61216, 1.03", "-9.44736, -12.2674, 9.6196, 1.84", "-9.81895, -13.6044, 9.62613, 0.74", "-10.3251, -14.984, 9.63147, 0.29", "-10.9467, -16.2437, 9.63228, 0.29", "-11.3467, -16.9146, 9.63323, 0.29", "-11.6358, -17.3588, 9.63337, 0.88", "-12.0328, -17.9462, 9.63557, 1.47", "-12.4554, -18.5969, 9.63311, 0.88", "-13.3931, -20.2491, 9.62493, 0.22", "-13.6822, -20.8856, 9.62206, 0.15", "-13.9827, -21.6881, 9.63252, 0.37", "-14.2412, -22.4086, 9.65408, 0.22", "-14.6527, -23.4859, 9.69993, 0.22", "-15.0464, -24.3783, 9.74332, 0.52", "-15.31, -24.8752, 9.77347, 0.96", "-15.9477, -25.7839, 9.83244, 1.62", "-16.8514, -26.8127, 9.8968, 0.96", "-17.8863, -27.8429, 9.97155, 0.59", "-18.7086, -28.5954, 10.0402, 0.88", "-19.4942, -29.3085, 10.1056, 1.55", "-20.1788, -29.9408, 10.1597, 1.55", "-21.1882, -30.9534, 10.2297, 0.37", "-22.0105, -31.8875, 10.3146, 0.22", "-22.4729, -32.4695, 10.3767, 0.44", "-23.1126, -33.3536, 10.4773, 1.11", "-23.4028, -33.8188, 10.5268, 1.11", "-23.9881, -34.8949, 10.642, 0.44", "-24.4493, -35.8615, 10.7186, 0.22", "-24.8161, -36.7604, 10.7547, 0.29", "-25.0251, -37.3126, 10.749, 0.15", "-25.3654, -38.2492, 10.7058, 0.29", "-25.4984, -38.624, 10.6796, 0.96", "-25.8118, -39.5043, 10.5973, 1.62", "-26.3175, -40.9963, 10.4384, 2.06", "-26.7965, -42.4553, 10.3021, 1.4", "-27.0261, -43.1596, 10.249, 0.59", "-27.389, -44.2608, 10.1916, 0.22", "-27.6107, -44.9983, 10.1714, 0.22", "-27.8123, -45.7406, 10.1742, 0.66", "-28.0111, -46.5588, 10.1918, 0.74", "-28.207, -47.4357, 10.2294, 0.22", "-28.442, -48.4168, 10.2898, 0.15", "-28.6493, -49.2219, 10.3666, 0.22", "-28.7885, -49.7848, 10.4362, 0.66", "-28.9687, -50.488, 10.5407, 1.25", "-29.2404, -51.4554, 10.6989, 1.47", "-29.6128, -52.6147, 10.8936, 0.88", "-29.9785, -53.5996, 11.0526, 0.22", "-30.2673, -54.2782, 11.1527, 0.22", "-30.5745, -54.9318, 11.2369, 0.22", "-31.1117, -55.9583, 11.3424, 0.37", "-31.6125, -56.8401, 11.3991, 0.37", "-32.1613, -57.7694, 11.4348, 0.52", "-32.4932, -58.3281, 11.4523, 0.22", "-32.8026, -58.8713, 11.4759, 0.37", "-33.0699, -59.4227, 11.5097, 0.74", "-33.4253, -60.4043, 11.5958, 0.22", "-33.6949, -61.4616, 11.7058, 0.22", "-33.8603, -62.313, 11.7903, 0.29", "-33.9823, -62.947, 11.8448, 0.52", "-34.1593, -63.8606, 11.9122, 1.11", "-34.3163, -64.6678, 11.9615, 1.7", "-34.5444, -65.7856, 12.0094, 1.33", "-34.7972, -67.0554, 12.0384, 0.22", "-34.9681, -68.0621, 12.0656, 0.22", "-35.0225, -68.4104, 12.0759, 0.22", "-35.0822, -68.8165, 12.0897, 0.29", "-35.1715, -69.4445, 12.1147, 0.52", "-35.277, -70.2537, 12.1551, 0.22", "-35.3896, -70.928, 12.1931, 0.22", "-35.5314, -71.4899, 12.2169, 0.22", "-35.7726, -72.0704, 12.2259, 0.81", "-36.0619, -72.5432, 12.2176, 1.47", "-36.3316, -72.8937, 12.2022, 1.47", "-37.0428, -73.714, 12.1523, 0.22", "-37.4385, -74.1598, 12.1233, 0.22", "-37.9069, -74.7265, 12.0916, 0.37", "-38.4804, -75.4885, 12.0571, 0.44", "-38.8556, -76.0252, 12.0376, 0.22", "-39.0022, -76.26, 12.027, 0.22", "-39.176, -76.5672, 12.0107, 0.22", "-39.5008, -77.1735, 11.9768, 0.22", "-39.7622, -77.662, 11.9481, 0.74", "-40.0819, -78.2648, 11.9134, 1.47", "-40.5836, -79.1189, 11.8707, 1.99", "-41.1009, -79.8926, 11.8513, 1.77", "-42.0042, -81.0792, 11.8436, 0.66", "-42.5423, -81.7083, 11.8501, 0.15", "-43.1175, -82.3354, 11.8606, 0.15", "-43.7355, -83.0013, 11.8723, 0.22", "-44.2782, -83.5591, 11.8796, 0.22", "-44.8361, -84.1325, 11.8559, 0.29", "-45.3001, -84.6328, 11.8055, 0.81", "-45.9044, -85.3619, 11.6943, 1.47", "-46.5486, -86.2649, 11.5061, 0.52", "-47.0536, -87.196, 11.2779, 0.22", "-47.3599, -87.9507, 11.0844, 0.22", "-47.5432, -88.5759, 10.945, 0.22", "-47.6088, -88.8984, 10.8798, 0.22", "-47.6815, -89.4298, 10.784, 0.29", "-47.7656, -90.238, 10.645, 0.74", "-47.8266, -90.8494, 10.5359, 1.03", "-48.0212, -92.1411, 10.3059, 0.37", "-48.2015, -93.0182, 10.1456, 0.88", "-48.4031, -93.8576, 9.99304, 1.18", "-48.6002, -94.6185, 9.85674, 1.18", "-48.9789, -96.0179, 9.6359, 0.29", "-49.3456, -97.2198, 9.46912, 0.29", "-49.6289, -98.0403, 9.37968, 0.37", "-49.8541, -98.6104, 9.34357, 0.88", "-50.0958, -99.1887, 9.33417, 0.66", "-50.4022, -99.9776, 9.3678, 0.22", "-50.6208, -100.619, 9.43385, 0.22", "-50.8152, -101.33, 9.5232, 0.37", "-50.9297, -101.836, 9.59707, 0.66", "-51.0966, -102.634, 9.72721, 1.11", "-51.299, -103.583, 9.88821, 0.66", "-51.4445, -104.181, 9.98783, 0.29", "-51.662, -105.01, 10.1348, 0.22", "-51.818, -105.574, 10.222, 0.29", "-52.0858, -106.567, 10.3277, 0.96", "-52.2745, -107.277, 10.3646, 1.03", "-52.5754, -108.505, 10.3685, 0.81", "-52.7833, -109.495, 10.3283, 0.29", "-52.9556, -110.317, 10.262, 0.22", "-53.1378, -111.18, 10.1663, 0.29", "-53.2961, -111.933, 10.0621, 0.74", "-53.4332, -112.596, 9.96689, 0.52", "-53.7653, -114.047, 9.7612, 0.29", "-54.1485, -115.39, 9.59974, 0.29", "-54.5914, -116.605, 9.51519, 0.29", "-54.8721, -117.259, 9.491, 0.29", "-55.1728, -117.891, 9.47471, 1.03", "-55.4809, -118.502, 9.45776, 1.7", "-56.025, -119.57, 9.43383, 1.4", "-56.8458, -121.171, 9.41324, 0.44", "-57.3348, -122.078, 9.41958, 0.15", "-57.5547, -122.476, 9.4256, 0.37", "-57.9071, -123.111, 9.42655, 0.59", "-58.2383, -123.737, 9.41267, 0.59", "-58.8376, -124.918, 9.34684, 0.22", "-59.2946, -125.799, 9.26526, 0.22", "-59.6417, -126.449, 9.20119, 0.22", "-59.9138, -126.971, 9.14684, 0.88", "-60.1772, -127.498, 9.1152, 1.47", "-60.5473, -128.277, 9.08555, 1.84", "-61.583, -130.571, 9.04834, 0.22", "-61.7354, -130.929, 9.042, 0.22", "-61.936, -131.407, 9.04029, 0.22", "-62.4038, -132.467, 9.02718, 0.22", "-62.7294, -133.134, 9.00773, 0.22", "-63.0048, -133.647, 8.9737, 0.74", "-63.5088, -134.556, 8.86395, 1.33", "-64.159, -135.648, 8.69424, 0.22", "-64.5504, -136.265, 8.57753, 0.22", "-64.9859, -136.957, 8.45575, 0.22", "-65.3044, -137.516, 8.41809, 0.15", "-65.5312, -137.967, 8.43899, 0.15", "-65.8548, -138.615, 8.54825, 0.37", "-66.0101, -138.935, 8.63132, 0.96", "-66.5936, -140.127, 9.019, 2.14", "-67.3017, -141.508, 9.52714, 0.66", "-67.8459, -142.455, 9.91847, 0.15", "-68.3773, -143.251, 10.2885, 0.15", "-68.7245, -143.712, 10.5251, 0.44", "-69.067, -144.133, 10.7518, 1.03", "-69.644, -144.815, 11.1189, 1.55", "-70.3609, -145.657, 11.5902, 0.44", "-70.8226, -146.254, 11.8786, 0.22", "-71.14, -146.733, 12.0715, 0.22", "-71.5971, -147.486, 12.3252, 0.22", "-72.0112, -148.209, 12.5206, 0.29", "-72.4688, -149.048, 12.6823, 0.29", "-73.0284, -150.11, 12.8091, 0.15", "-73.4454, -150.899, 12.859, 0.22", "-73.8827, -151.716, 12.8423, 0.88", "-74.5025, -152.866, 12.7187, 0.74", "-74.9125, -153.609, 12.5758, 0.88", "-75.3272, -154.377, 12.3695, 1.77", "-75.7767, -155.248, 12.075, 2.29", "-76.4043, -156.591, 11.5308, 0.07", "-76.7389, -157.416, 11.1384, 0.15", "-76.9134, -157.938, 10.8485, 0.15", "-76.9914, -158.229, 10.6773, 0.15", "-77.0839, -158.795, 10.3558, 0.15", "-77.0993, -159.242, 10.141, 0.15", "-77.0905, -160.036, 9.86487, 0.15", "-77.0853, -160.331, 9.7842, 0.15", "-77.0725, -161.165, 9.59284, 0.66", "-77.0896, -162.679, 9.28341, 0.29", "-77.1381, -163.664, 9.11245, 0.22", "-77.2059, -164.563, 8.98402, 0.22", "-77.3065, -165.342, 8.89531, 0.22", "-77.4007, -165.738, 8.85504, 0.59", "-77.555, -166.113, 8.81838, 0.74", "-77.7973, -166.476, 8.80073, 0.37", "-78.1783, -166.904, 8.80565, 0.15", "-78.9903, -167.696, 8.85216, 0.15", "-79.4577, -168.109, 8.88845, 0.22", "-79.9359, -168.528, 8.9275, 0.29", "-80.429, -168.975, 8.98509, 0.22", "-81.0546, -169.595, 9.07998, 0.22", "-81.7352, -170.353, 9.20858, 0.29", "-82.1974, -170.93, 9.31941, 0.29", "-82.7814, -171.65, 9.45326, 0.22", "-83.2752, -172.215, 9.54424, 0.37", "-83.7614, -172.749, 9.60742, 0.74", "-84.1122, -173.132, 9.6463, 1.03", "-84.8096, -173.906, 9.72317, 0.22", "-85.4314, -174.633, 9.79072, 0.22", "-85.9663, -175.274, 9.83432, 0.15", "-86.3664, -175.783, 9.85225, 0.15", "-86.645, -176.172, 9.864, 0.15", "-87.0654, -176.857, 9.86775, 0.22", "-87.6173, -177.909, 9.85197, 0.29", "-88.0272, -178.847, 9.84042, 0.74", "-88.426, -179.912, 9.85391, 0.74", "-88.714, -180.75, 9.87739, 0.37", "-88.9984, -181.647, 9.91272, 0.37", "-89.2096, -182.335, 9.96124, 1.4", "-89.5243, -183.321, 10.0513, 2.95", "-90.0208, -184.698, 10.2041, 1.18", "-90.4771, -185.766, 10.3355, 0.22", "-91.0626, -186.997, 10.5168, 0.29", "-91.513, -187.908, 10.6679, 0.74", "-91.8549, -188.583, 10.7787, 1.33", "-92.433, -189.602, 10.9237, 0.81", "-92.9393, -190.44, 10.9789, 1.18", "-93.7461, -191.833, 10.9949, 0.66", "-94.2174, -192.752, 10.9696, 0.29", "-94.3851, -193.114, 10.9497, 0.44", "-95.0131, -194.624, 10.8553, 0.29", "-95.445, -195.756, 10.7604, 0.81", "-96.0583, -197.39, 10.554, 0.22", "-96.3761, -198.136, 10.3913, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "58.8601, -11.8259, -24.9926, 0.15", "67.4215, -17.7518, -28.0306, 0.15", "75.6197, -24.2899, -30.7273, 0.15", "83.6125, -30.4267, -34.7449, 0.15", "92.2381, -36.3737, -37.5422, 0.15", "100.857, -41.0415, -42.2766, 0.15", "109.274, -45.8101, -47.2676, 0.15", "117.478, -51.7327, -51.1925, 0.15", "124.247, -59.2562, -54.9878, 0.15", "132.576, -65.5966, -57.7797, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "58.8601, -11.8259, -24.9926, 0.59", "67.0292, -16.0796, -25.9773, 0.15", "75.024, -20.6062, -27.1233, 0.15", "83.3156, -24.7129, -27.4374, 0.15", "91.7281, -28.5799, -27.3444, 0.15", "99.9957, -32.5904, -28.5738, 0.15", "107.975, -37.099, -29.9061, 0.15", "115.525, -42.3642, -30.6577, 0.15", "122.539, -48.2029, -32.0422, 0.15", "128.954, -54.7218, -33.1038, 0.15", "134.869, -61.715, -32.6492, 0.15", "141.523, -68.0643, -32.734, 0.15", "147.962, -74.5433, -33.9111, 0.15", "153.92, -81.3716, -35.5521, 0.15", "160.906, -86.9585, -37.9076, 0.15", "169.412, -90.1854, -39.8009, 0.15", "177.988, -93.4217, -41.3086, 0.15", "186.769, -95.3969, -43.7102, 0.15", "195.519, -97.8893, -45.6605, 0.15", "204.129, -99.1061, -49.0377, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "61.2339, -21.8138, -26.2075, 0.15", "66.8536, -29.0196, -30.7444, 0.15", "72.0221, -36.9508, -34.4717, 0.15", "77.4392, -44.2274, -39.1349, 0.15", "81.2365, -53.1822, -41.9634, 0.15", "84.7704, -62.5707, -43.1979, 0.15", "88.1886, -71.851, -45.3135, 0.15", "92.6459, -80.1157, -49.1954, 0.15", "98.4645, -88.0437, -51.7975, 0.15", "103.027, -96.8681, -53.8002, 0.15", "108.773, -105.141, -55.1093, 0.15", "113.886, -113.771, -56.6052, 0.15", "118.503, -122.337, -59.4791, 0.15", "121.146, -131.52, -62.8114, 0.15", "124.474, -140.765, -65.2162, 0.15", "129.69, -149.376, -66.4408, 0.15", "134.272, -157.842, -69.6656, 0.15", "140.213, -165.672, -72.3024, 0.15", "145.762, -174.008, -73.9877, 0.15", "150.925, -182.149, -77.2095, 0.15", "156.205, -190.501, -79.5514, 0.15", "160.612, -198.845, -83.3102, 0.15", "164.59, -207.742, -86.0829, 0.15", "168.372, -217.0, -87.5913, 0.15", "171.814, -226.028, -90.6238, 0.15", "175.81, -234.906, -93.4296, 0.15", "178.623, -244.41, -95.3912, 0.15", "182.024, -253.912, -95.792, 0.15", "186.968, -262.654, -94.4404, 0.15", "192.836, -270.514, -91.76, 0.15", "199.59, -277.496, -88.6411, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "61.2339, -21.8138, -26.2075, 0.59", "69.3866, -29.3302, -27.7012, 0.15", "78.8505, -35.1647, -29.3613, 0.15", "88.5456, -40.7108, -30.6889, 0.15", "96.5508, -48.0098, -33.5323, 0.15", "103.646, -55.9568, -36.9225, 0.15", "111.502, -63.0326, -40.6464, 0.15", "120.178, -68.9851, -44.6085, 0.15", "129.685, -73.8117, -48.2617, 0.15", "139.533, -78.8532, -50.366, 0.15", "148.9, -84.9541, -51.4609, 0.15", "158.62, -90.5394, -50.6051, 0.15", "167.173, -97.4321, -48.4144, 0.15", "174.305, -105.163, -44.658, 0.15", "179.521, -113.055, -38.7417, 0.15", "185.031, -121.238, -33.5472, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-88.4792, -146.222, -15.929, 0.15", "-93.2425, -152.151, -16.1666, 0.15", "-97.4437, -158.302, -17.7196, 0.15", "-102.097, -164.27, -18.5302, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-88.4792, -146.222, -15.929, 0.59", "-94.9548, -154.871, -15.6935, 0.15", "-99.7178, -164.415, -14.2575, 0.15", "-105.2, -173.488, -12.2875, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-44.9047, -130.698, -115.103, 0.15", "-47.0122, -137.642, -120.092, 0.15", "-49.1621, -145.24, -123.944, 0.15", "-50.8549, -152.409, -128.75, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-44.9047, -130.698, -115.103, 0.59", "-46.1783, -136.603, -120.241, 0.15", "-45.8153, -142.713, -125.263, 0.15", "-46.5648, -148.787, -130.294, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "22.9389, -206.404, 55.3119, 0.15", "23.5836, -207.014, 55.1413, 0.15", "23.8807, -207.296, 55.0627, 0.37", "24.3788, -207.768, 54.9309, 1.18", "24.7414, -208.111, 54.8349, 0.88", "25.3783, -208.715, 54.6664, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "22.9389, -206.404, 55.3119, 0.22", "22.9389, -207.544, 55.0451, 0.22", "22.919, -208.392, 54.8142, 0.81", "22.8745, -209.213, 54.5971, 1.18", "22.7412, -210.455, 54.3078, 0.22", "22.5407, -211.504, 54.1132, 0.22", "22.2752, -212.537, 53.961, 0.29", "21.9571, -213.506, 53.8597, 0.66", "21.5567, -214.477, 53.8187, 0.81", "21.0535, -215.521, 53.8413, 0.22", "20.3265, -216.867, 53.9684, 0.22", "19.9679, -217.527, 54.0715, 0.29", "19.6247, -218.19, 54.1961, 0.96", "19.3184, -218.842, 54.3376, 1.7", "18.7484, -220.281, 54.6761, 0.52", "18.3538, -221.579, 55.0049, 0.22", "18.2092, -222.264, 55.1924, 0.15", "18.0448, -223.361, 55.5246, 0.22", "17.9285, -224.325, 55.8017, 0.15", "17.8386, -225.145, 56.0329, 0.15", "17.7786, -225.703, 56.1838, 0.15", "17.7162, -226.328, 56.3337, 0.37", "17.6166, -227.139, 56.479, 0.59", "17.3784, -228.637, 56.639, 0.07", "17.203, -229.487, 56.6754, 0.07", "16.9923, -230.413, 56.6792, 0.15", "16.85, -231.05, 56.667, 0.66", "16.6818, -231.835, 56.6462, 0.74", "16.4271, -233.158, 56.628, 0.15", "16.2859, -234.007, 56.651, 0.22", "16.1772, -234.699, 56.6773, 0.15", "16.0674, -235.298, 56.7134, 0.81", "15.9277, -235.929, 56.7696, 0.66", "15.6427, -236.99, 56.8724, 0.15", "15.378, -237.834, 56.944, 0.22", "15.0131, -238.884, 57.0216, 0.52", "14.6614, -239.723, 57.1049, 0.59", "14.1859, -240.819, 57.2707, 0.07", "13.8127, -241.685, 57.435, 0.22", "13.676, -241.996, 57.4981, 0.22", "13.3646, -242.708, 57.6523, 0.96", "12.7724, -244.055, 57.9759, 0.07", "12.3018, -245.232, 58.3148, 0.07", "12.1097, -245.771, 58.5221, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-14.4494, -230.41, 33.5956, 0.15", "-14.3487, -239.617, 35.3833, 0.15", "-15.2605, -248.807, 37.0242, 0.15", "-16.138, -257.96, 38.8843, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-14.4494, -230.41, 33.5956, 0.59", "-15.1902, -241.117, 35.7212, 0.15", "-17.4375, -251.818, 35.881, 0.15", "-19.9167, -262.126, 38.6483, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "16.9298, 38.8752, -2.90941, 0.52", "17.6129, 39.6554, -3.52862, 0.52", "18.3363, 40.0596, -4.30153, 0.37", "18.8643, 40.2273, -4.85737, 0.37", "19.1345, 40.3053, -5.14878, 0.52", "19.6295, 40.4856, -5.70932, 0.52", "20.3796, 40.8345, -6.60767, 0.44", "20.7285, 41.0031, -7.08039, 0.44", "21.1135, 41.2402, -7.6078, 0.66", "21.4459, 41.5233, -8.01308, 0.66", "21.8646, 41.9917, -8.44073, 0.88", "22.1375, 42.3696, -8.64502, 1.03", "22.7163, 43.2445, -8.91449, 0.52", "23.1658, 43.9224, -9.05461, 0.52", "23.5627, 44.5026, -9.141, 0.52", "23.9346, 45.003, -9.19674, 0.52", "24.5617, 45.7988, -9.29689, 0.22", "25.1664, 46.5338, -9.38367, 0.44", "25.7684, 47.2609, -9.46232, 0.74", "26.3975, 48.0784, -9.56193, 1.18", "26.8385, 48.6941, -9.65796, 0.88", "27.5377, 49.6819, -9.85787, 0.29", "33.151, 56.4627, -11.6598, 0.29", "38.8213, 63.0617, -13.937, 0.29", "44.2219, 70.167, -14.8317, 0.29", "49.9758, 77.0396, -14.3852, 0.29", "55.4129, 84.1366, -13.7257, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "16.9298, 38.8752, -2.90941, 0.88", "17.6205, 39.4031, -2.5251, 0.88", "18.0999, 39.7451, -2.29441, 0.81", "18.6802, 40.1466, -2.08271, 0.96", "19.3049, 40.5668, -1.91944, 1.33", "20.045, 41.077, -1.77539, 1.33", "20.4752, 41.3807, -1.7015, 1.33", "20.9539, 41.7429, -1.64294, 1.33", "21.557, 42.2088, -1.59896, 1.18", "22.1328, 42.6537, -1.57665, 1.03", "22.6455, 43.0375, -1.55288, 0.88", "23.2777, 43.5169, -1.51015, 1.4", "24.0403, 44.1222, -1.43326, 0.74", "24.6595, 44.6262, -1.35412, 1.25", "25.3281, 45.162, -1.26081, 1.77", "26.2063, 45.8659, -1.16235, 0.96", "26.941, 46.461, -1.12202, 0.59", "27.4825, 46.9169, -1.13013, 0.74", "27.8851, 47.273, -1.15997, 0.96", "28.579, 47.9282, -1.22786, 1.11", "29.0688, 48.4194, -1.26885, 1.4", "29.5024, 48.8738, -1.28778, 1.4", "30.2248, 49.6101, -1.27778, 0.96", "30.5331, 49.916, -1.24192, 0.96", "31.1738, 50.5311, -1.08089, 1.18", "31.7057, 51.012, -0.871142, 1.18", "32.2693, 51.4759, -0.615239, 1.03", "32.6713, 51.7733, -0.442227, 0.96", "33.2322, 52.1552, -0.241278, 0.81", "33.8642, 52.5643, -0.0744915, 0.74", "34.5554, 52.9998, 0.0389321, 0.96", "35.275, 53.4641, 0.108624, 1.25", "36.0698, 53.996, 0.147708, 1.55", "36.7486, 54.4848, 0.155537, 0.88", "37.4957, 55.0856, 0.118424, 0.59", "37.9325, 55.4908, 0.0824845, 0.81", "38.3798, 55.98, 0.0383155, 0.96", "38.8428, 56.5302, 0.00391865, 1.33", "39.5141, 57.4172, -0.0228517, 1.55", "40.0675, 58.2245, -0.0429623, 1.7", "40.5696, 59.0332, -0.0796566, 1.62", "41.1019, 59.9628, -0.146635, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-68.5146, 216.228, -90.2204, 0.15", "-71.3644, 224.672, -94.8622, 0.15", "-73.0571, 233.746, -98.781, 0.15", "-76.7343, 242.323, -102.46, 0.15", "-80.3454, 251.1, -105.673, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-68.5146, 216.228, -90.2204, 0.59", "-73.4097, 225.165, -93.5018, 0.15", "-79.0073, 233.566, -97.1295, 0.15", "-83.1534, 243.294, -98.5283, 0.15", "-85.8824, 253.413, -100.46, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.5824, 26.8663, 5.41598, 0.81", "-11.939, 27.8546, 6.73779, 0.81", "-10.9913, 28.5053, 7.39427, 0.44", "-9.63475, 29.6559, 8.362, 0.59", "-8.55857, 30.7045, 9.20362, 0.59", "-7.68098, 31.6229, 9.93662, 0.88", "-7.02182, 32.3431, 10.5157, 1.11", "-6.15621, 33.2413, 11.0929, 1.11", "-5.35833, 34.3327, 11.6225, 0.29", "-5.25041, 35.0256, 11.8716, 0.29", "-5.6028, 35.5915, 12.0591, 0.29", "-5.88164, 35.8884, 12.1649, 0.29", "-6.18891, 36.2292, 12.3552, 0.29", "-6.6389, 36.8173, 12.8589, 0.59", "-6.91297, 37.3638, 13.4779, 1.11", "-7.22125, 38.2163, 14.5978, 1.84", "-7.41759, 38.892, 15.6233, 1.84", "-7.62142, 39.7231, 17.0021, 0.96", "-7.74064, 40.2655, 17.9998, 0.74", "-7.83866, 40.8606, 19.0881, 0.74", "-7.98827, 41.57, 20.2946, 0.74", "-8.15985, 42.1626, 21.1954, 1.11", "-8.37034, 42.9397, 22.159, 1.47", "-8.55851, 43.7758, 23.0538, 1.47", "-8.76, 44.9164, 24.16, 0.74", "-8.98479, 46.4409, 25.5476, 0.52", "-9.08607, 47.2729, 26.2899, 0.52", "-9.2352, 48.4159, 27.3549, 0.37", "-9.33235, 49.2766, 28.3364, 0.37", "-9.35256, 49.4926, 28.8227, 0.37", "-9.37463, 49.5564, 29.4917, 0.37", "-9.39187, 49.5477, 30.0004, 0.37", "-9.57439, 49.5808, 31.2549, 0.37", "-9.88291, 49.7286, 32.197, 0.37", "-10.423, 50.2013, 33.4576, 0.37", "-10.8363, 50.6589, 34.2868, 0.37", "-11.318, 51.2214, 35.097, 0.59", "-11.8573, 51.8913, 35.8922, 0.88", "-12.8192, 53.2063, 37.1206, 0.88", "-13.6364, 54.3417, 38.01, 0.59", "-14.6414, 55.7871, 38.9648, 0.59", "-15.2045, 56.701, 39.5008, 0.29", "-15.7129, 57.6954, 40.0219, 0.29", "-16.1877, 58.8593, 40.5707, 0.29", "-16.462, 59.7286, 40.9442, 0.96", "-16.6686, 60.5823, 41.3315, 1.84", "-16.916, 61.896, 41.9288, 0.37", "-17.1269, 62.9108, 42.4142, 0.81", "-17.4794, 64.111, 43.0382, 1.55", "-17.9564, 65.3092, 43.7507, 0.22", "-18.3718, 66.2091, 44.3111, 0.22", "-18.6993, 66.8442, 44.7439, 0.22", "-19.0474, 67.6461, 45.3061, 0.29", "-19.2758, 68.4228, 45.8302, 0.29", "-19.4324, 69.3277, 46.4264, 0.59", "-19.5498, 70.659, 47.3306, 1.77", "-19.5844, 71.6038, 47.9795, 2.14", "-19.5307, 73.3604, 49.2049, 0.29", "-19.4533, 74.1935, 49.7829, 0.29", "-19.369, 75.0032, 50.3314, 0.29", "-19.3092, 75.4608, 50.6482, 0.29", "-19.231, 76.0935, 51.1317, 0.88", "-19.1412, 76.871, 51.7897, 1.62", "-19.0623, 77.4991, 52.3984, 1.62", "-18.9075, 78.3127, 53.1902, 2.21", "-18.3711, 80.2416, 55.0659, 0.22", "-18.1027, 81.0224, 55.8175, 0.22", "-17.8999, 81.5428, 56.3252, 0.22", "-17.6726, 82.0674, 56.8316, 0.22", "-17.2018, 83.0405, 57.746, 0.44", "-16.5809, 84.1094, 58.7316, 0.66", "-16.4784, 84.2856, 58.8775, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-13.5824, 26.8663, 5.41598, 0.96", "-13.301, 26.0389, 6.17446, 0.96", "-12.9836, 25.1739, 6.95386, 0.37", "-12.9229, 24.8412, 7.18708, 0.29", "-12.8836, 24.2045, 7.53102, 0.22", "-12.9131, 23.7707, 7.73566, 0.22", "-13.0168, 23.0891, 8.03238, 0.52", "-13.2138, 22.2572, 8.36537, 0.74", "-13.6384, 21.0964, 8.74428, 0.52", "-13.9865, 20.2498, 8.99116, 1.11", "-14.5314, 18.955, 9.36233, 1.62", "-15.0044, 17.8038, 9.68326, 1.33", "-15.6332, 16.1789, 10.1406, 1.11", "-16.4517, 13.9554, 10.7759, 0.44", "-16.8615, 12.7796, 11.1095, 0.44", "-17.2811, 11.5586, 11.4389, 0.44", "-17.612, 10.5798, 11.6736, 0.96", "-18.0944, 9.16504, 11.9976, 1.47", "-18.6893, 7.52643, 12.3433, 1.7", "-19.4272, 5.71187, 12.7215, 1.7", "-20.2238, 4.11218, 13.0485, 1.7", "-21.0925, 2.63145, 13.3417, 0.59", "-21.9924, 1.27304, 13.6279, 0.44", "-22.8666, 0.0732982, 13.9108, 0.44", "-23.4065, -0.614846, 14.12, 0.44", "-24.2407, -1.62698, 14.5531, 0.44", "-24.518, -1.97372, 14.7634, 0.44", "-24.7742, -2.41796, 15.0873, 0.44", "-25.0226, -3.12014, 15.6036, 0.44", "-25.1623, -3.58985, 15.9303, 0.88", "-25.5245, -4.71418, 16.618, 1.4", "-25.8376, -5.49228, 17.0425, 1.4", "-26.4893, -6.74453, 17.6478, 0.66", "-27.0562, -7.66938, 18.0396, 0.22", "-27.6643, -8.5715, 18.4113, 0.22", "-28.0229, -9.08747, 18.633, 1.03", "-28.6342, -9.97107, 19.0321, 2.36", "-29.3082, -11.0002, 19.5404, 2.65", "-30.4133, -12.8282, 20.5701, 0.81", "-30.8573, -13.8543, 21.1898, 0.22", "-31.0017, -14.3566, 21.5125, 0.22", "-31.0951, -14.8362, 21.8395, 0.66", "-31.1607, -15.4265, 22.2687, 0.66", "-31.1776, -15.792, 22.5592, 0.66", "-31.1691, -16.7897, 23.4451, 0.22", "-31.2118, -17.3009, 23.8809, 0.22", "-31.2719, -17.5359, 24.0796, 0.22", "-31.451, -17.9265, 24.4043, 0.22", "-31.7752, -18.4587, 24.8116, 0.22", "-31.9453, -18.6845, 24.9627, 0.22", "-32.4193, -19.2222, 25.2617, 0.22", "-32.6992, -19.5434, 25.3916, 0.29", "-33.405, -20.3856, 25.6454, 0.29", "-33.7388, -20.8331, 25.7592, 0.59", "-34.288, -21.6704, 25.9546, 0.88", "-34.7639, -22.5079, 26.1663, 0.66", "-35.241, -23.5967, 26.4877, 0.22", "-35.4033, -24.1172, 26.6793, 0.22", "-35.7078, -25.3962, 27.2508, 0.59", "-35.9081, -26.466, 27.7962, 1.03", "-36.0815, -27.5236, 28.3693, 1.62", "-36.3306, -28.9398, 29.1772, 0.59", "-36.6346, -30.3908, 29.9839, 0.22", "-36.914, -31.3985, 30.5262, 0.52", "-37.1426, -31.9924, 30.8394, 1.25", "-37.6356, -32.9599, 31.3503, 2.14", "-38.2019, -33.8329, 31.7953, 1.33", "-39.1038, -34.9622, 32.3949, 0.52", "-39.6374, -35.5897, 32.7547, 0.22", "-40.2126, -36.2916, 33.2041, 0.44", "-40.6511, -36.85, 33.6155, 0.44", "-41.0311, -37.4324, 34.0682, 0.22", "-41.3248, -38.0162, 34.4515, 0.22", "-41.6465, -38.7555, 34.8773, 0.22", "-41.8517, -39.288, 35.1219, 0.52", "-42.1319, -40.0471, 35.3999, 0.74", "-42.6795, -41.2713, 35.8018, 0.81", "-43.3452, -42.3085, 36.1895, 0.22", "-43.9308, -42.8965, 36.4592, 0.22", "-44.2472, -43.1261, 36.6048, 0.22", "-44.7462, -43.4647, 36.8679, 0.66", "-45.6082, -44.0316, 37.4034, 1.33", "-46.3179, -44.5295, 37.9198, 1.55", "-47.0112, -45.1279, 38.5016, 0.88", "-47.8183, -45.9704, 39.156, 0.15", "-48.6142, -46.8623, 39.7602, 0.29", "-49.0299, -47.3631, 40.0623, 0.88", "-49.4465, -47.8922, 40.3162, 1.25", "-49.8928, -48.4651, 40.5583, 1.33", "-51.0858, -49.969, 41.1683, 0.22", "-51.6117, -50.6359, 41.4354, 0.74", "-52.1114, -51.2732, 41.6943, 1.25", "-52.8998, -52.384, 42.1436, 0.44", "-53.3408, -53.2317, 42.5226, 0.22", "-53.5106, -53.7458, 42.7623, 0.22", "-53.6247, -54.4791, 43.0897, 0.96", "-53.6646, -54.9496, 43.2997, 1.55", "-53.7115, -55.905, 43.7315, 1.33", "-53.8009, -58.0797, 44.7583, 0.15", "-53.8414, -58.6039, 44.9976, 0.37", "-53.976, -59.5787, 45.4438, 0.15", "-54.168, -60.3949, 45.8408, 0.15", "-54.4154, -61.1332, 46.2245, 0.52", "-54.756, -61.9168, 46.6514, 1.18", "-55.2629, -62.8542, 47.1861, 2.06", "-55.9474, -64.0431, 47.8944, 0.96", "-56.6806, -65.2606, 48.6424, 0.22", "-57.2228, -66.1243, 49.1655, 0.22", "-57.8839, -67.1396, 49.7906, 0.22", "-58.3139, -67.791, 50.1961, 0.22", "-58.9664, -68.755, 50.8327, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "185.031, -121.238, -33.5472, 0.15", "191.672, -126.765, -34.0176, 0.15", "197.748, -132.886, -33.805, 0.15", "203.918, -138.918, -34.1523, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "185.031, -121.238, -33.5472, 0.59", "194.344, -127.251, -33.5267, 0.15", "203.919, -132.702, -32.3003, 0.15", "211.892, -139.941, -29.9649, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "55.4129, 84.1366, -13.7257, 0.15", "59.471, 89.9398, -17.0867, 0.15", "61.9766, 96.6205, -20.2603, 0.15", "62.7294, 103.702, -23.4362, 0.15", "62.5365, 111.026, -26.0735, 0.15", "61.076, 118.089, -29.0548, 0.15", "60.544, 125.041, -32.5759, 0.15", "60.4682, 132.105, -35.8874, 0.15", "60.2871, 139.154, -39.2331, 0.15", "60.7461, 146.583, -41.4835, 0.15", "60.3979, 154.309, -41.9531, 0.15", "61.7703, 161.891, -41.252, 0.15", "64.1503, 169.212, -40.3968, 0.15", "65.9767, 176.336, -37.9828, 0.15", "68.5362, 183.174, -35.3825, 0.15", "71.6268, 190.03, -33.4914, 0.15", "73.1463, 197.414, -31.7544, 0.15", "74.258, 204.992, -30.6766, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "55.4129, 84.1366, -13.7257, 0.59", "64.4578, 90.9584, -11.0975, 0.15", "72.9151, 98.0337, -7.45589, 0.15", "82.1748, 103.248, -2.65651, 0.15", "89.9978, 109.199, 3.55724, 0.15", "98.6363, 113.691, 9.99126, 0.15", "106.682, 118.88, 16.6275, 0.15", "113.868, 124.531, 23.819, 0.15", "122.897, 129.857, 28.9151, 0.15", "131.861, 135.065, 34.245, 0.15", "140.008, 141.391, 39.6013, 0.15", "146.914, 148.831, 45.1806, 0.15", "155.443, 154.44, 50.7817, 0.15", "165.277, 157.419, 56.4073, 0.15", "175.712, 159.657, 61.2856, 0.15", "186.259, 162.352, 65.6488, 0.15", "196.607, 167.013, 68.4566, 0.15", "207.548, 171.115, 69.3556, 0.15", "217.999, 176.107, 70.9499, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "41.1019, 59.9628, -0.146635, 0.66", "41.9293, 61.5667, -0.296096, 0.66", "42.4039, 62.3928, -0.39401, 0.66", "42.9886, 63.3834, -0.519862, 0.44", "43.4131, 64.1035, -0.594877, 0.37", "43.9655, 65.0612, -0.661031, 0.37", "44.4484, 65.9172, -0.675228, 0.37", "44.6926, 66.3252, -0.661694, 0.59", "45.1119, 67.0822, -0.611032, 1.11", "45.6905, 68.3222, -0.497276, 0.37", "46.0672, 69.3223, -0.319352, 0.59", "46.4436, 70.5565, -0.0124419, 0.37", "46.7892, 71.7761, 0.357392, 0.44", "46.9895, 72.4404, 0.5796, 0.22", "47.2032, 73.0318, 0.793311, 0.22", "47.8803, 74.5709, 1.36938, 0.22", "48.3288, 75.3738, 1.66132, 0.22", "48.6208, 75.7795, 1.79727, 0.44", "49.1575, 76.3682, 1.96767, 0.66", "50.0449, 77.1753, 2.13946, 0.22", "50.4514, 77.4968, 2.17941, 0.22", "50.9937, 77.8827, 2.19711, 0.66", "51.4569, 78.1983, 2.22194, 1.03", "52.5135, 78.9255, 2.29083, 0.22", "53.4102, 79.5749, 2.35601, 0.66", "53.954, 79.9923, 2.40753, 0.81", "55.1782, 80.9526, 2.54068, 1.03", "56.1113, 81.6896, 2.65344, 0.74", "57.0321, 82.4104, 2.77955, 0.37", "57.7087, 82.9075, 2.87686, 0.37", "58.2827, 83.319, 2.95848, 0.29", "58.8826, 83.7428, 3.03968, 0.29", "59.383, 84.0946, 3.09745, 0.66", "60.1191, 84.602, 3.19473, 1.25", "61.4349, 85.4867, 3.36951, 0.29", "61.8365, 85.7569, 3.41793, 0.29", "62.6752, 86.3538, 3.50388, 0.88", "63.4763, 86.974, 3.57932, 0.52", "64.1277, 87.5148, 3.63308, 1.11", "65.0235, 88.3023, 3.69403, 0.66", "65.866, 89.071, 3.763, 0.29", "66.4781, 89.6078, 3.81581, 0.59", "67.5843, 90.5019, 3.90985, 0.22", "68.1053, 90.882, 3.95447, 0.59", "68.8333, 91.3709, 4.01229, 1.18", "69.7441, 91.9261, 4.09506, 0.22", "70.3565, 92.2751, 4.15391, 0.22", "70.8715, 92.5649, 4.20278, 0.22", "71.4275, 92.8989, 4.27072, 0.22", "71.798, 93.1733, 4.32117, 0.22", "72.2158, 93.574, 4.38009, 0.37", "72.8236, 94.3127, 4.47551, 0.37", "73.2152, 94.8658, 4.552, 0.22", "73.6524, 95.5489, 4.66028, 0.52", "74.2301, 96.4883, 4.84533, 0.52", "74.6233, 97.0994, 4.98898, 0.96", "75.0312, 97.6679, 5.14591, 1.77", "75.5012, 98.2525, 5.32754, 1.77", "76.1798, 99.0493, 5.57967, 0.22", "76.6722, 99.6044, 5.74823, 0.22", "77.1538, 100.099, 5.90961, 0.22", "77.649, 100.586, 6.06026, 0.22", "78.1121, 101.028, 6.17244, 0.22", "78.6622, 101.579, 6.27701, 0.22", "79.2405, 102.192, 6.34497, 0.22", "79.5356, 102.529, 6.37159, 0.66", "79.9714, 103.043, 6.41156, 0.81", "80.6115, 103.809, 6.49058, 0.22", "81.1207, 104.393, 6.57555, 0.22", "81.5478, 104.907, 6.66464, 0.74", "82.0475, 105.588, 6.78579, 0.88", "82.3271, 106.022, 6.86704, 1.11", "82.9364, 107.109, 7.09973, 1.11", "83.428, 108.136, 7.33384, 0.37", "83.9369, 109.296, 7.62716, 0.22", "84.2338, 110.026, 7.83464, 0.29", "84.4968, 110.692, 8.05001, 0.29", "84.7766, 111.358, 8.29818, 0.37", "85.102, 111.946, 8.57193, 0.37", "85.414, 112.315, 8.80672, 0.22", "85.8394, 112.645, 9.08413, 0.22", "86.4898, 113.047, 9.47631, 0.22", "87.1384, 113.393, 9.83168, 0.29", "88.1072, 113.881, 10.3406, 0.22", "88.6871, 114.187, 10.6376, 1.4", "89.2967, 114.561, 10.9553, 2.21", "89.7128, 114.888, 11.2001, 1.7", "90.2288, 115.402, 11.573, 0.96", "90.7924, 116.044, 12.0785, 0.96", "91.1086, 116.414, 12.4026, 1.47", "91.4478, 116.788, 12.7596, 1.47", "92.1327, 117.487, 13.4715, 0.22", "92.5796, 117.917, 13.9045, 0.22", "93.0559, 118.383, 14.3331, 0.22", "93.5375, 118.853, 14.7058, 0.22", "93.96, 119.253, 14.9871, 0.22", "94.2878, 119.566, 15.1542, 0.88", "94.7968, 120.053, 15.3489, 1.99", "95.531, 120.773, 15.5582, 1.55", "96.4009, 121.675, 15.7447, 0.22", "97.0369, 122.351, 15.8646, 0.22", "97.8932, 123.221, 16.0072, 0.29", "98.4282, 123.74, 16.0855, 0.59", "99.2816, 124.488, 16.1582, 0.96", "100.296, 125.278, 16.1888, 0.15", "101.159, 125.892, 16.1979, 1.18", "102.274, 126.64, 16.2007, 1.18", "103.227, 127.248, 16.2039, 1.4", "104.605, 128.089, 16.2076, 0.22", "105.231, 128.473, 16.2066, 0.37", "105.891, 128.899, 16.2161, 1.03", "106.187, 129.111, 16.2293, 0.88", "106.595, 129.431, 16.2774, 0.74", "107.161, 129.891, 16.387, 0.96", "107.922, 130.615, 16.6168, 0.22", "108.604, 131.303, 16.8214, 0.96", "108.97, 131.662, 16.9121, 0.74", "109.615, 132.252, 17.073, 0.22", "110.258, 132.817, 17.2345, 0.29", "111.216, 133.635, 17.4687, 0.29", "111.885, 134.176, 17.6104, 0.29", "112.938, 135.007, 17.783, 0.22", "113.464, 135.424, 17.8534, 0.66", "113.899, 135.792, 17.9056, 1.55", "114.175, 136.02, 17.9321, 1.55", "115.214, 136.84, 17.9948, 0.15", "116.026, 137.517, 18.034, 0.15", "116.715, 138.136, 18.0522, 0.15", "117.298, 138.688, 18.0299, 0.15", "117.828, 139.219, 17.9977, 0.15", "118.238, 139.67, 17.9821, 0.88", "118.739, 140.273, 17.9718, 1.18", "119.329, 141.051, 17.9688, 1.18", "120.178, 142.181, 17.9687, 0.22", "121.082, 143.348, 17.9758, 0.22", "121.638, 144.104, 17.9854, 1.18", "121.904, 144.471, 17.9949, 1.92", "122.34, 145.083, 18.0259, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "41.1019, 59.9628, -0.146635, 0.44", "41.8328, 60.2142, -0.023917, 0.44", "42.6098, 60.4889, 0.116125, 0.44", "42.9968, 60.6048, 0.197382, 0.96", "43.8619, 60.8131, 0.404314, 1.7", "44.6292, 60.9795, 0.594934, 1.99", "45.7851, 61.2067, 0.87511, 1.11", "46.5691, 61.337, 1.04316, 0.37", "47.3015, 61.4426, 1.15768, 0.37", "48.2092, 61.5642, 1.25375, 0.37", "48.7875, 61.6447, 1.2684, 0.37", "49.344, 61.7259, 1.24512, 0.44", "50.1614, 61.8414, 1.16103, 0.96", "51.1984, 61.9858, 1.00101, 1.62", "52.231, 62.1508, 0.845974, 1.18", "53.5966, 62.3961, 0.68191, 0.29", "54.2983, 62.5219, 0.639194, 0.44", "54.8172, 62.6151, 0.646079, 0.59", "55.6191, 62.7509, 0.710571, 0.29", "56.6897, 62.9435, 0.86305, 0.29", "57.9045, 63.1986, 1.09198, 0.59", "58.731, 63.4322, 1.27036, 1.03", "59.7159, 63.7924, 1.48745, 1.7", "60.6442, 64.1941, 1.69174, 1.7", "61.7587, 64.6973, 1.93885, 0.96", "62.4328, 64.9869, 2.07169, 1.33", "63.7017, 65.5175, 2.31372, 1.62", "64.7171, 65.9404, 2.481, 0.52", "65.504, 66.2668, 2.59885, 0.22", "66.3489, 66.6179, 2.7128, 0.22", "67.4231, 67.046, 2.82319, 0.22", "68.2459, 67.3925, 2.87533, 0.74", "68.9938, 67.7513, 2.8905, 1.33", "69.6521, 68.1472, 2.86919, 1.77", "70.6226, 68.8641, 2.79308, 0.44", "71.5108, 69.6491, 2.69421, 0.22", "72.2082, 70.3237, 2.60979, 0.66", "72.7577, 70.8414, 2.54637, 0.29", "73.2398, 71.2652, 2.50236, 0.29", "73.5478, 71.4945, 2.48579, 0.22", "73.9701, 71.7593, 2.48907, 0.22", "74.5945, 72.0891, 2.53058, 0.52", "75.3566, 72.4109, 2.59848, 0.88", "76.0326, 72.6435, 2.64838, 0.88", "76.814, 72.8975, 2.69442, 0.22", "77.5102, 73.1456, 2.73919, 0.22", "77.854, 73.2808, 2.76092, 0.52", "78.4667, 73.5376, 2.80021, 1.4", "79.294, 73.8695, 2.83919, 1.18", "80.5737, 74.3502, 2.87891, 0.22", "81.509, 74.6909, 2.87039, 0.59", "82.2026, 74.937, 2.85644, 0.22", "82.9921, 75.2395, 2.82586, 0.88", "83.9992, 75.6853, 2.76841, 1.55", "84.3814, 75.8823, 2.73292, 1.55", "85.6708, 76.6454, 2.53899, 0.88", "86.2801, 77.0419, 2.41911, 0.44", "86.8355, 77.4305, 2.30145, 0.22", "87.3977, 77.8143, 2.18313, 0.22", "87.9882, 78.2092, 2.06348, 0.37", "88.6351, 78.6134, 1.94283, 1.11", "89.4715, 79.0976, 1.80892, 1.18", "90.2481, 79.5369, 1.6982, 0.29", "91.3176, 80.1252, 1.56626, 0.22", "91.9026, 80.4423, 1.5131, 0.22", "92.4959, 80.7779, 1.48524, 1.11", "92.9148, 81.0379, 1.48991, 1.18", "93.7477, 81.63, 1.55798, 0.29", "94.5121, 82.1867, 1.68001, 0.29", "94.9894, 82.522, 1.7858, 1.03", "95.6307, 82.9137, 1.95694, 1.92", "96.0855, 83.1529, 2.06667, 1.92", "97.5677, 83.8177, 2.3601, 0.15", "98.3532, 84.1081, 2.48984, 0.15", "98.8199, 84.2696, 2.5631, 0.37", "99.4836, 84.502, 2.65875, 1.11", "100.601, 84.8977, 2.82016, 1.47", "101.688, 85.26, 2.97504, 0.44", "102.835, 85.6139, 3.13826, 0.22", "103.745, 85.8818, 3.27161, 0.74", "104.471, 86.059, 3.39529, 0.88", "105.717, 86.2154, 3.6326, 0.22", "106.296, 86.2004, 3.76374, 0.22", "106.865, 86.0869, 3.89245, 0.44", "107.423, 85.9039, 4.01434, 0.81", "108.102, 85.634, 4.15947, 1.03", "109.208, 85.2006, 4.39128, 0.81", "110.104, 84.8788, 4.59104, 0.22", "110.745, 84.7053, 4.73252, 0.22", "111.284, 84.6331, 4.83886, 0.22", "112.331, 84.645, 5.02287, 0.37", "113.49, 84.8125, 5.19812, 0.22", "113.918, 84.9273, 5.24423, 0.96", "114.697, 85.2069, 5.28219, 1.84", "116.194, 85.8462, 5.25459, 0.22", "116.896, 86.1991, 5.18857, 0.22", "117.186, 86.3823, 5.13683, 0.22", "117.707, 86.8024, 5.00932, 0.22", "118.186, 87.2589, 4.8766, 0.44", "118.832, 87.922, 4.71245, 1.18", "119.386, 88.4809, 4.60398, 1.62", "119.943, 89.0002, 4.53535, 1.7", "120.818, 89.8148, 4.49235, 1.25", "121.942, 90.8198, 4.51131, 0.29", "122.652, 91.3729, 4.55801, 1.03", "123.287, 91.7938, 4.60627, 1.47", "124.51, 92.4793, 4.71423, 0.22", "125.504, 92.9548, 4.79913, 0.88", "126.259, 93.2756, 4.86242, 0.44", "127.382, 93.7464, 4.94329, 0.22", "128.188, 94.1181, 4.99673, 0.22", "128.812, 94.441, 5.03714, 1.03", "129.548, 94.8716, 5.09342, 1.47", "130.175, 95.3044, 5.1385, 1.25", "131.11, 96.0798, 5.18281, 0.52", "132.122, 97.0338, 5.2003, 0.37", "132.652, 97.5411, 5.18904, 1.03", "132.964, 97.8263, 5.15994, 1.4", "133.944, 98.6646, 5.01373, 0.96", "134.624, 99.1687, 4.87579, 0.81", "135.662, 99.8414, 4.6306, 0.22", "136.309, 100.199, 4.4662, 0.22", "136.861, 100.467, 4.34528, 0.74", "137.275, 100.662, 4.27322, 0.81", "138.062, 101.058, 4.17617, 0.22", "138.443, 101.286, 4.14035, 0.22", "139.002, 101.668, 4.0747, 0.88", "139.852, 102.328, 3.96861, 1.33", "140.539, 102.929, 3.85554, 1.7", "141.393, 103.765, 3.68328, 1.47", "142.306, 104.758, 3.4637, 0.22", "142.847, 105.387, 3.31858, 0.22", "143.451, 106.178, 3.12097, 0.29", "143.832, 106.797, 2.96074, 0.15", "144.064, 107.279, 2.83875, 0.15", "144.325, 108.011, 2.66293, 0.59", "144.531, 108.726, 2.49955, 0.37", "144.805, 109.687, 2.25832, 0.22", "145.116, 110.703, 1.96317, 0.22", "145.292, 111.198, 1.80696, 1.11", "145.681, 112.201, 1.44959, 0.22", "145.984, 112.941, 1.15284, 0.07", "146.26, 113.647, 0.867701, 0.07", "146.419, 114.082, 0.712401, 0.88", "146.529, 114.447, 0.610175, 1.11", "146.661, 115.229, 0.473904, 0.81", "146.698, 116.077, 0.432728, 0.37", "146.661, 117.291, 0.501544, 0.15", "146.59, 118.306, 0.6531, 0.15", "146.498, 119.186, 0.856695, 0.15", "146.415, 120.008, 1.09498, 0.59", "146.282, 121.188, 1.50588, 0.29", "146.198, 121.819, 1.7646, 0.66", "146.101, 122.545, 2.10519, 1.47", "145.949, 123.677, 2.67357, 0.22", "145.851, 124.489, 3.08753, 0.15", "145.785, 125.359, 3.53694, 0.15", "145.756, 125.969, 3.85304, 0.44", "145.753, 126.535, 4.12589, 0.44", "145.782, 127.396, 4.52566, 0.22", "145.799, 127.779, 4.68748, 0.15", "145.769, 128.581, 4.99732, 0.15", "145.739, 128.894, 5.10168, 0.15", "145.636, 129.365, 5.23175, 0.44", "145.523, 129.726, 5.32461, 0.44", "145.166, 130.78, 5.61664, 0.15", "144.938, 131.526, 5.85175, 0.22", "144.794, 132.031, 6.02184, 0.29", "144.665, 132.861, 6.31588, 0.29", "144.663, 133.511, 6.53942, 0.74", "144.786, 134.29, 6.7944, 0.66", "144.994, 134.978, 7.00239, 1.55", "145.14, 135.351, 7.09771, 1.55", "145.694, 136.504, 7.32542, 0.15", "146.152, 137.323, 7.45385, 0.22", "146.616, 138.101, 7.54958, 0.22", "146.923, 138.588, 7.59384, 0.22", "147.366, 139.237, 7.63872, 0.37", "148.274, 140.484, 7.70699, 0.22", "149.071, 141.585, 7.77179, 0.15", "149.428, 142.101, 7.81963, 1.18", "149.835, 142.743, 7.8969, 2.21", "149.976, 142.983, 7.93076, 2.21", "150.657, 144.38, 8.15434, 0.22", "151.042, 145.462, 8.33481, 0.22", "151.354, 146.658, 8.50863, 0.22", "151.436, 147.062, 8.56092, 0.66", "151.483, 147.36, 8.58923, 1.25", "151.623, 148.363, 8.64266, 1.62", "151.76, 149.586, 8.64433, 0.22", "151.918, 150.826, 8.55474, 0.22", "151.979, 151.306, 8.49243, 0.37", "152.085, 152.022, 8.38011, 0.88", "152.164, 152.574, 8.28536, 0.88", "152.255, 153.366, 8.1176, 0.22", "152.299, 154.274, 7.90837, 0.15", "152.284, 154.989, 7.75878, 0.15", "152.263, 155.337, 7.6347, 0.52", "152.203, 156.073, 7.31148, 0.88", "152.128, 156.92, 6.89996, 0.22", "152.085, 157.507, 6.57981, 0.22", "151.964, 158.929, 5.79283, 0.15", "151.825, 161.36, 4.49846, 0.22", "151.809, 162.118, 4.11295, 0.44", "151.836, 162.923, 3.74025, 0.22", "151.911, 163.782, 3.3959, 0.29", "152.0, 164.477, 3.16695, 0.22", "152.182, 165.673, 2.88615, 0.15", "152.27, 166.217, 2.86234, 0.15", "152.435, 167.181, 2.83029, 0.15", "152.538, 167.698, 2.82671, 0.29", "152.654, 168.21, 2.85269, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-16.4784, 84.2856, 58.8775, 0.07", "-16.5812, 84.7802, 58.8463, 0.07", "-16.6697, 85.2407, 58.846, 0.07", "-16.8063, 86.1193, 58.9183, 0.07", "-16.8885, 86.8557, 58.9948, 0.29", "-16.9291, 87.4328, 59.0688, 0.07", "-16.9477, 88.3638, 59.2051, 0.07", "-16.9294, 88.8219, 59.2929, 0.52", "-16.8462, 89.9698, 59.5463, 1.03", "-16.7423, 91.2128, 59.8601, 0.15", "-16.7045, 91.7183, 59.9892, 0.15", "-16.6699, 92.3513, 60.1376, 0.15", "-16.6447, 92.9291, 60.2442, 0.15", "-16.6545, 93.4517, 60.3283, 0.07", "-16.6919, 93.8637, 60.3904, 0.07", "-16.7478, 94.3946, 60.4796, 0.44", "-16.7808, 94.6988, 60.5394, 0.74", "-16.804, 95.035, 60.6267, 0.74", "-16.8093, 96.124, 60.9794, 0.15", "-16.7768, 96.7796, 61.2183, 0.15", "-16.7087, 97.5792, 61.5219, 0.37", "-16.6289, 98.3231, 61.8128, 1.7", "-16.5343, 99.1431, 62.1178, 1.03", "-16.3892, 100.243, 62.5187, 0.15", "-16.2421, 101.202, 62.8796, 0.15", "-16.1794, 101.594, 63.0242, 0.66", "-16.0964, 102.09, 63.2142, 1.03", "-15.9256, 102.919, 63.5299, 0.15", "-15.689, 103.908, 63.9134, 0.15", "-15.5052, 104.573, 64.205, 0.15", "-15.3387, 105.103, 64.4501, 0.29", "-15.1558, 105.662, 64.7042, 0.29", "-15.0035, 106.191, 64.9148, 0.74", "-14.8664, 106.826, 65.1377, 0.81", "-14.8025, 107.269, 65.2679, 0.81", "-14.7091, 108.508, 65.5656, 0.15", "-14.7286, 109.15, 65.7127, 0.74", "-14.928, 110.565, 66.0041, 0.15", "-15.1296, 111.265, 66.1346, 0.15", "-15.442, 111.896, 66.2171, 0.15", "-15.7471, 112.349, 66.2512, 0.29", "-16.3777, 113.061, 66.2806, 0.15", "-16.5945, 113.266, 66.2796, 0.52", "-17.363, 113.863, 66.2744, 1.4", "-18.808, 114.865, 66.2644, 0.15", "-19.2082, 115.102, 66.2618, 0.15", "-19.4125, 115.203, 66.2698, 0.15", "-20.3327, 115.559, 66.3485, 0.81", "-21.3618, 115.844, 66.48, 0.15", "-21.7317, 115.901, 66.5428, 0.15", "-22.276, 115.94, 66.6395, 1.18", "-23.8271, 116.008, 66.9042, 0.07", "-24.8387, 116.029, 67.0561, 0.07", "-25.304, 116.035, 67.1099, 0.59", "-25.7752, 116.057, 67.1402, 1.77", "-27.3376, 116.163, 67.1861, 0.07", "-28.0452, 116.22, 67.1916, 0.07", "-28.5029, 116.252, 67.1743, 0.37", "-28.9537, 116.287, 67.1381, 0.52", "-29.9848, 116.355, 67.0556, 0.07", "-30.9571, 116.419, 66.9579, 0.07", "-31.3521, 116.435, 66.9062, 0.07", "-31.6777, 116.438, 66.8631, 0.29", "-32.4274, 116.411, 66.7753, 0.66", "-33.3169, 116.312, 66.6941, 0.07", "-33.9776, 116.202, 66.6386, 0.29", "-34.5711, 116.095, 66.593, 0.88", "-35.8352, 115.894, 66.5309, 0.15", "-36.489, 115.799, 66.5207, 0.52", "-37.8673, 115.61, 66.5214, 0.07", "-38.3124, 115.555, 66.5212, 0.59", "-38.9218, 115.482, 66.5268, 1.47", "-40.3625, 115.329, 66.5488, 0.07", "-40.9082, 115.275, 66.5626, 0.07", "-41.7388, 115.195, 66.5883, 0.07", "-41.9929, 115.171, 66.5934, 0.37", "-42.5224, 115.123, 66.5878, 0.81", "-43.5055, 115.047, 66.5486, 0.07", "-44.2706, 114.997, 66.4812, 0.07", "-44.6537, 115.001, 66.4316, 0.44", "-45.0484, 115.032, 66.3734, 0.88", "-46.1191, 115.187, 66.1787, 0.15", "-46.68, 115.304, 66.0529, 0.37", "-46.9832, 115.382, 65.9692, 0.37", "-48.2126, 115.693, 65.5762, 0.15", "-48.6143, 115.789, 65.442, 0.15", "-49.2154, 115.939, 65.2286, 0.37", "-50.2878, 116.195, 64.8192, 0.07", "-50.973, 116.366, 64.5491, 0.29", "-51.5939, 116.528, 64.3067, 0.07", "-52.2081, 116.7, 64.0663, 0.07", "-53.5195, 117.084, 63.5474, 0.07", "-55.2585, 117.606, 62.8604, 0.07", "-55.8174, 117.784, 62.6391, 0.07", "-56.621, 118.054, 62.3306, 0.07", "-57.1047, 118.228, 62.154, 0.59", "-57.8356, 118.487, 61.8907, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-16.4784, 84.2856, 58.8775, 0.37", "-16.1761, 83.4549, 59.9719, 0.37", "-15.9079, 82.9247, 60.666, 0.37", "-15.6844, 82.5782, 61.1322, 0.59", "-15.2357, 81.9769, 61.8696, 0.22", "-14.8856, 81.5183, 62.3715, 0.22", "-14.6415, 81.1559, 62.7101, 0.15", "-14.4164, 80.7953, 63.0509, 0.15", "-14.113, 80.2734, 63.4776, 0.15", "-13.8559, 79.747, 63.8511, 0.59", "-13.712, 79.3239, 64.0936, 0.88", "-13.461, 78.1844, 64.6532, 0.15", "-13.367, 77.3385, 65.07, 0.15", "-13.3495, 76.8575, 65.2908, 0.44", "-13.3632, 76.391, 65.4906, 0.81", "-13.4162, 75.6894, 65.7807, 0.07", "-13.4944, 74.8251, 66.1079, 0.22", "-13.58, 73.9137, 66.4185, 0.22", "-13.6913, 72.6291, 66.8133, 0.07", "-13.7923, 71.5663, 67.1158, 0.07", "-13.8799, 70.557, 67.3922, 0.07", "-13.9146, 69.9885, 67.5331, 0.29", "-13.9842, 68.6064, 67.86, 0.07", "-14.0073, 67.9578, 67.9978, 0.88", "-14.034, 67.1418, 68.1762, 1.25", "-14.0391, 66.61, 68.2915, 1.25", "-14.0236, 64.8888, 68.659, 0.07", "-14.0072, 63.7499, 68.8934, 0.07", "-13.9917, 63.1081, 69.0167, 0.07", "-13.9827, 62.7308, 69.0869, 0.52", "-13.963, 61.72, 69.2621, 0.66", "-13.9662, 61.1957, 69.3405, 0.22", "-13.9799, 60.5051, 69.4249, 0.52", "-14.0028, 59.9255, 69.4755, 0.29", "-14.0783, 58.8371, 69.5616, 0.07", "-14.1742, 57.8951, 69.6279, 0.07", "-14.2659, 57.2064, 69.6795, 0.22", "-14.3435, 56.7296, 69.7164, 0.22", "-14.574, 55.4074, 69.8202, 0.07", "-14.6409, 55.0621, 69.8474, 0.37", "-14.725, 54.6614, 69.881, 0.59", "-14.9368, 53.7279, 69.9657, 0.07", "-15.1181, 52.9722, 70.0419, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-58.9664, -68.755, 50.8327, 0.15", "-60.1468, -69.1091, 50.5299, 0.15", "-61.294, -69.4443, 50.2086, 0.15", "-62.3333, -69.7465, 49.8874, 0.15", "-63.395, -70.0543, 49.546, 0.37", "-64.5627, -70.3882, 49.1571, 0.15", "-65.7345, -70.715, 48.7565, 0.07", "-66.3272, -70.8788, 48.5569, 0.22", "-68.0658, -71.38, 47.8833, 0.15", "-68.1869, -71.4119, 47.8317, 0.59", "-68.9568, -71.6011, 47.5008, 1.11", "-69.3049, -71.6874, 47.3513, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-58.9664, -68.755, 50.8327, 0.59", "-59.2638, -69.3901, 51.0479, 0.59", "-59.4913, -69.8494, 51.2086, 0.96", "-59.7999, -70.5707, 51.4699, 1.47", "-59.9696, -71.0585, 51.645, 1.47", "-60.2199, -71.9405, 51.9657, 0.22", "-60.3252, -72.2689, 52.0893, 0.15", "-60.4584, -72.5738, 52.2149, 0.15", "-60.7167, -73.0854, 52.4452, 0.15", "-60.9513, -73.5162, 52.6476, 0.37", "-61.2172, -73.9449, 52.8835, 0.37", "-61.7454, -74.6882, 53.3798, 0.22", "-62.0678, -75.1058, 53.7058, 0.22", "-62.2623, -75.351, 53.9101, 0.96", "-62.7546, -75.9583, 54.4539, 2.06", "-63.2243, -76.5385, 55.0106, 1.11", "-63.8367, -77.3099, 55.7822, 0.22", "-64.2782, -77.9078, 56.3957, 0.22", "-64.4775, -78.1737, 56.663, 0.22", "-64.6433, -78.3848, 56.87, 0.22", "-64.797, -78.5645, 57.0452, 0.22", "-65.0469, -78.8285, 57.2641, 0.22", "-65.3608, -79.1137, 57.4562, 0.22", "-65.8747, -79.5475, 57.7144, 0.22", "-66.3131, -79.9349, 57.9225, 0.22", "-66.588, -80.2008, 58.051, 0.66", "-67.1137, -80.7679, 58.3143, 1.11", "-67.8581, -81.6253, 58.7141, 0.29", "-68.5023, -82.3734, 59.0562, 0.22", "-69.0424, -82.9973, 59.3435, 0.22", "-69.2991, -83.2819, 59.4635, 0.29", "-69.9451, -83.9892, 59.7426, 0.22", "-70.2378, -84.3083, 59.8656, 0.96", "-70.7405, -84.849, 60.0665, 1.84", "-71.5901, -85.7329, 60.3894, 0.29", "-72.3005, -86.4095, 60.6578, 0.22", "-72.7769, -86.8426, 60.8463, 0.22", "-73.0761, -87.1155, 60.9714, 0.22", "-73.3464, -87.3923, 61.103, 0.37", "-73.751, -87.8925, 61.3411, 0.52", "-74.1495, -88.5211, 61.6008, 0.29", "-74.4501, -89.0955, 61.829, 0.29", "-74.6107, -89.4419, 61.9462, 0.29", "-74.9031, -90.1326, 62.1652, 0.44", "-75.2087, -90.9521, 62.4236, 0.52", "-75.5888, -92.112, 62.7769, 0.15", "-75.7635, -92.6972, 62.9531, 0.59", "-76.0682, -93.6474, 63.2543, 1.7", "-76.4914, -94.795, 63.6511, 0.15", "-76.7194, -95.3234, 63.8624, 0.44", "-76.8801, -95.681, 64.0224, 0.44", "-77.1218, -96.1828, 64.2765, 0.07", "-77.346, -96.6129, 64.502, 0.07", "-77.5456, -96.9303, 64.6743, 0.07", "-77.8567, -97.3525, 64.8956, 0.29", "-78.411, -98.0409, 65.2363, 0.52", "-78.8157, -98.5295, 65.4797, 0.22", "-79.1616, -98.9384, 65.6861, 0.22", "-79.5505, -99.3855, 65.9201, 0.37", "-79.9408, -99.8056, 66.1648, 0.74", "-80.546, -100.385, 66.5376, 1.33", "-81.2056, -100.93, 66.9207, 0.22", "-81.7054, -101.308, 67.1927, 0.15", "-82.0955, -101.586, 67.3991, 0.29", "-82.634, -101.96, 67.6891, 0.15", "-83.0687, -102.249, 67.9098, 0.59", "-83.5348, -102.528, 68.1422, 0.74", "-84.2267, -102.899, 68.4517, 0.07", "-84.8772, -103.232, 68.7358, 0.15", "-85.3408, -103.464, 68.9355, 0.15", "-85.7207, -103.656, 69.0947, 0.15", "-86.1529, -103.873, 69.2588, 0.15", "-86.7612, -104.177, 69.4661, 0.29", "-87.258, -104.413, 69.6096, 0.74", "-87.9981, -104.763, 69.7883, 1.03", "-88.7283, -105.119, 69.9434, 0.29", "-89.753, -105.628, 70.1697, 0.22", "-90.3859, -105.96, 70.2994, 0.88", "-91.0992, -106.323, 70.4464, 1.33", "-91.7265, -106.629, 70.5679, 1.47", "-92.9241, -107.179, 70.7943, 0.22", "-93.5488, -107.445, 70.9074, 0.22", "-94.2775, -107.744, 71.0494, 1.03", "-95.0557, -108.052, 71.1972, 1.55", "-96.1759, -108.502, 71.415, 0.74", "-97.2773, -108.98, 71.6687, 0.22", "-97.8412, -109.263, 71.8125, 0.22", "-98.3522, -109.542, 71.9421, 0.22", "-98.9422, -109.898, 72.1084, 0.15", "-99.4803, -110.29, 72.2795, 0.37", "-100.142, -110.876, 72.5361, 0.15", "-100.585, -111.36, 72.7393, 0.15", "-101.133, -112.043, 73.0403, 0.22", "-101.37, -112.365, 73.1802, 0.15", "-101.717, -112.87, 73.4079, 0.15", "-101.914, -113.192, 73.564, 0.74", "-102.124, -113.591, 73.7714, 0.88", "-102.493, -114.442, 74.2723, 0.15", "-102.629, -114.769, 74.473, 0.22", "-102.852, -115.133, 74.713, 0.22", "-103.314, -115.691, 75.1067, 0.22", "-103.463, -115.84, 75.218, 0.22", "-103.832, -116.16, 75.4628, 0.88", "-104.473, -116.638, 75.8081, 1.84", "-105.499, -117.299, 76.2578, 0.15", "-106.112, -117.679, 76.4719, 0.15", "-106.568, -117.958, 76.5834, 0.29", "-107.228, -118.389, 76.7533, 0.74", "-107.801, -118.796, 76.9197, 1.11", "-108.331, -119.215, 77.1049, 0.52", "-109.058, -119.821, 77.3901, 0.22", "-110.226, -120.713, 77.8596, 0.29", "-111.17, -121.379, 78.2694, 0.15", "-111.699, -121.73, 78.5202, 0.37", "-112.393, -122.148, 78.8755, 1.18", "-113.347, -122.693, 79.4282, 0.44", "-114.194, -123.111, 79.9717, 0.29", "-114.798, -123.387, 80.3908, 0.15", "-115.286, -123.593, 80.7132, 0.88", "-116.008, -123.89, 81.1933, 1.03", "-117.011, -124.287, 81.9008, 0.22", "-117.946, -124.657, 82.6513, 0.22", "-118.389, -124.829, 83.034, 0.59", "-118.906, -125.017, 83.4855, 0.96", "-119.626, -125.231, 84.109, 0.37", "-120.587, -125.437, 84.9347, 0.15", "-121.363, -125.522, 85.5816, 0.59", "-121.832, -125.54, 85.9694, 1.77", "-123.018, -125.532, 86.9469, 0.22", "-123.762, -125.512, 87.5727, 0.22", "-124.308, -125.489, 88.0111, 0.37", "-124.855, -125.479, 88.4121, 0.37", "-125.29, -125.49, 88.7161, 0.37", "-125.873, -125.52, 89.1403, 0.81", "-126.368, -125.585, 89.5448, 0.81", "-127.122, -125.817, 90.2571, 0.29", "-127.541, -126.022, 90.7405, 0.29", "-127.782, -126.214, 91.1597, 0.29", "-127.861, -126.315, 91.396, 0.29", "-128.057, -126.685, 92.3768, 0.29", "-128.107, -126.837, 92.7862, 0.44", "-128.183, -127.121, 93.5466, 0.44", "-128.342, -127.511, 94.5943, 0.81", "-128.562, -127.827, 95.4976, 0.81", "-128.805, -128.069, 96.1934, 0.81", "-128.998, -128.199, 96.5898, 0.22", "-129.527, -128.483, 97.4937, 0.22", "-130.216, -128.79, 98.4668, 0.22", "-130.897, -129.072, 99.2961, 0.81", "-131.569, -129.356, 100.033, 0.52", "-132.62, -129.832, 101.047, 0.22", "-133.09, -130.061, 101.44, 0.22", "-133.458, -130.255, 101.679, 0.52", "-134.131, -130.633, 101.962, 0.15", "-134.454, -130.82, 102.021, 0.59", "-135.302, -131.334, 102.029, 0.15", "-135.899, -131.725, 101.905, 0.37", "-136.553, -132.161, 101.698, 0.15", "-137.134, -132.515, 101.452, 0.37", "-137.498, -132.686, 101.233, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "122.34, 145.083, 18.0259, 0.96", "123.389, 146.011, 18.0881, 0.96", "124.115, 146.712, 18.1096, 1.25", "124.773, 147.412, 18.1055, 0.66", "125.176, 147.87, 18.0922, 0.22", "125.66, 148.435, 18.0712, 0.15", "125.972, 148.789, 18.0607, 0.37", "126.606, 149.546, 18.026, 0.15", "127.063, 150.067, 18.0098, 0.37", "127.413, 150.432, 18.0097, 0.88", "127.845, 150.815, 18.0061, 0.88", "128.879, 151.545, 17.9486, 0.22", "129.595, 152.005, 17.9117, 0.22", "130.327, 152.401, 17.8837, 0.22", "130.836, 152.639, 17.8643, 0.22", "131.936, 153.089, 17.803, 1.25", "133.107, 153.491, 17.6844, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "122.34, 145.083, 18.0259, 0.29", "122.46, 146.181, 17.935, 0.29", "122.615, 146.709, 17.9027, 0.22", "122.788, 147.136, 17.8753, 0.66", "123.077, 147.76, 17.8258, 0.22", "123.382, 148.361, 17.774, 0.15", "123.667, 148.92, 17.7158, 0.15", "124.066, 149.611, 17.6195, 0.15", "124.516, 150.325, 17.4947, 0.22", "124.948, 150.963, 17.3649, 0.29", "125.327, 151.484, 17.2495, 0.22", "125.748, 152.004, 17.1338, 0.29", "126.401, 152.686, 17.0089, 0.22", "127.023, 153.264, 16.9239, 0.66", "127.397, 153.593, 16.8856, 1.11", "127.864, 153.994, 16.8406, 1.18", "128.518, 154.551, 16.7678, 0.37", "129.233, 155.166, 16.6837, 0.37", "129.803, 155.716, 16.5918, 0.22", "130.298, 156.334, 16.4615, 0.22", "130.611, 156.802, 16.3356, 0.22", "130.835, 157.2, 16.2184, 0.59", "130.974, 157.497, 16.1347, 1.03", "131.252, 158.172, 15.9573, 1.18", "131.761, 159.477, 15.6907, 0.44", "131.984, 160.041, 15.596, 0.88", "132.228, 160.687, 15.511, 1.7", "132.502, 161.444, 15.434, 2.29", "132.745, 162.129, 15.38, 2.29", "132.92, 162.642, 15.3629, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "132.92, 162.642, 15.3629, 0.22", "134.28, 164.35, 15.1437, 0.22", "134.918, 165.152, 15.0407, 0.22", "135.594, 166.0, 14.9318, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "132.92, 162.642, 15.3629, 0.29", "134.012, 163.419, 15.6393, 0.29", "134.737, 163.935, 15.8229, 0.29", "135.468, 164.455, 16.0079, 0.29", "136.087, 164.895, 16.1644, 0.52", "136.717, 165.343, 16.3238, 0.52", "137.759, 166.084, 16.5876, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "axon_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "axon_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_BTC_045fb87685_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_35, dend_0, axon_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, axon_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -12.2915, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -12.2915, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.49444, -13.1793, -4.64114, 1.84 ) }
    dend_58 { pt3dadd( 4.08051, -15.0731, -4.75022, 2.14 ) }
    dend_58 { pt3dadd( 4.45566, -16.2853, -4.82004, 1.92 ) }
    dend_58 { pt3dadd( 4.93267, -17.8268, -4.90882, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -12.74, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -12.74, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.417845, -14.2205, -1.83135, 1.92 ) }
    dend_35 { pt3dadd( -0.948366, -15.4525, -1.99058, 2.14 ) }
    dend_35 { pt3dadd( -1.27681, -16.2152, -2.08916, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 12.22, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 12.22, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.8796, 13.4622, -0.0771401, 2.36 ) }
    dend_0 { pt3dadd( 2.3333, 14.9988, -0.161725, 2.36 ) }
    dend_0 { pt3dadd( 3.08701, 17.4672, -0.282954, 2.29 ) }
    dend_0 { pt3dadd( 3.66715, 19.297, -0.384068, 2.21 ) }
    dend_0 { pt3dadd( 4.26191, 21.1069, -0.488803, 2.29 ) }
    dend_0 { pt3dadd( 4.78398, 22.666, -0.582278, 2.43 ) }
    dend_0 { pt3dadd( 5.38235, 24.3905, -0.692661, 2.36 ) }
    dend_0 { pt3dadd( 5.88501, 25.7388, -0.769945, 2.51 ) }
    dend_0 { pt3dadd( 6.42441, 27.0543, -0.8461, 3.17 ) }
    dend_0 { pt3dadd( 6.77471, 27.8639, -0.880689, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475434 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475434 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475434 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.93267, -17.8268, -4.90882, 0.88 ) }
    dend_62 { pt3dadd( 3.94359, -17.6517, -5.94997, 0.88 ) }
    dend_62 { pt3dadd( 2.97359, -17.5914, -6.95267, 0.81 ) }
    dend_62 { pt3dadd( 2.00671, -17.6319, -7.97719, 0.81 ) }
    dend_62 { pt3dadd( 0.890573, -17.7796, -9.19572, 0.96 ) }
    dend_62 { pt3dadd( -0.16359, -18.0123, -10.3954, 1.4 ) }
    dend_62 { pt3dadd( -1.16618, -18.345, -11.6295, 1.77 ) }
    dend_62 { pt3dadd( -2.04298, -18.7129, -12.7723, 0.44 ) }
    dend_62 { pt3dadd( -2.79831, -19.1573, -13.8033, 0.44 ) }
    dend_62 { pt3dadd( -3.22597, -19.5139, -14.3827, 0.44 ) }
    dend_62 { pt3dadd( -3.56038, -19.9618, -14.9021, 0.66 ) }
    dend_62 { pt3dadd( -3.92143, -20.8578, -15.742, 1.03 ) }
    dend_62 { pt3dadd( -11.1027, -21.3317, -26.8298, 1.03 ) }
    dend_62 { pt3dadd( -16.5258, -21.2341, -38.8863, 1.03 ) }
    dend_62 { pt3dadd( -19.1925, -19.4821, -51.7134, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.93267, -17.8268, -4.90882, 1.11 ) }
    dend_59 { pt3dadd( 6.03752, -19.088, -4.87627, 1.11 ) }
    dend_59 { pt3dadd( 7.02235, -20.2694, -4.77108, 1.25 ) }
    dend_59 { pt3dadd( 7.40607, -20.7505, -4.69924, 1.7 ) }
    dend_59 { pt3dadd( 8.0813, -21.6338, -4.54762, 1.77 ) }
    dend_59 { pt3dadd( 9.23284, -23.1467, -4.28812, 1.33 ) }
    dend_59 { pt3dadd( 10.1216, -24.3265, -4.09838, 1.03 ) }
    dend_59 { pt3dadd( 10.7958, -25.2517, -3.90621, 1.03 ) }
    dend_59 { pt3dadd( 11.4664, -26.213, -3.73175, 1.03 ) }
    dend_59 { pt3dadd( 12.0336, -27.0662, -3.62621, 1.33 ) }
    dend_59 { pt3dadd( 12.8521, -28.3836, -3.56182, 1.33 ) }
    dend_59 { pt3dadd( 13.5938, -29.6777, -3.62531, 0.74 ) }
    dend_59 { pt3dadd( 14.3151, -31.0522, -3.81857, 0.74 ) }
    dend_59 { pt3dadd( 15.0588, -32.4617, -4.0819, 0.88 ) }
    dend_59 { pt3dadd( 15.6166, -33.5187, -4.30209, 1.33 ) }
    dend_59 { pt3dadd( 16.0597, -34.3199, -4.43462, 2.06 ) }
    dend_59 { pt3dadd( 17.0024, -35.9843, -4.63269, 0.96 ) }
    dend_59 { pt3dadd( 17.8125, -37.3114, -4.71387, 0.74 ) }
    dend_59 { pt3dadd( 18.4376, -38.2705, -4.72362, 1.18 ) }
    dend_59 { pt3dadd( 18.8769, -38.9074, -4.67168, 1.55 ) }
    dend_59 { pt3dadd( 20.0253, -40.5365, -4.48949, 0.88 ) }
    dend_59 { pt3dadd( 20.704, -41.5173, -4.41495, 0.81 ) }
    dend_59 { pt3dadd( 21.6109, -42.884, -4.41576, 0.88 ) }
    dend_59 { pt3dadd( 22.0966, -43.6726, -4.48865, 1.4 ) }
    dend_59 { pt3dadd( 22.4944, -44.4002, -4.62848, 1.4 ) }
    dend_59 { pt3dadd( 23.0562, -45.5544, -4.94192, 0.81 ) }
    dend_59 { pt3dadd( 23.5602, -46.7032, -5.34471, 0.88 ) }
    dend_59 { pt3dadd( 23.9561, -47.6216, -5.70493, 0.52 ) }
    dend_59 { pt3dadd( 24.1893, -48.1474, -5.92773, 0.96 ) }
    dend_59 { pt3dadd( 24.6249, -49.0129, -6.2743, 1.92 ) }
    dend_59 { pt3dadd( 25.2366, -50.0998, -6.65268, 0.74 ) }
    dend_59 { pt3dadd( 25.8583, -51.113, -6.96397, 0.74 ) }
    dend_59 { pt3dadd( 26.5091, -52.0714, -7.21962, 0.96 ) }
    dend_59 { pt3dadd( 27.1678, -52.9419, -7.45541, 1.55 ) }
    dend_59 { pt3dadd( 28.3567, -54.3618, -7.89017, 0.81 ) }
    dend_59 { pt3dadd( 29.379, -55.4717, -8.26441, 0.81 ) }
    dend_59 { pt3dadd( 30.3618, -56.468, -8.62684, 1.25 ) }
    dend_59 { pt3dadd( 31.3349, -57.4239, -8.98262, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 32.7746, -58.8439, -9.45146, 0.81 ) }
    dend_59 { pt3dadd( 34.0086, -60.1159, -9.79341, 0.81 ) }
    dend_59 { pt3dadd( 34.7101, -60.8495, -9.96642, 1.18 ) }
    dend_59 { pt3dadd( 35.5207, -61.6473, -10.1381, 1.55 ) }
    dend_59 { pt3dadd( 36.3902, -62.4953, -10.2815, 1.55 ) }
    dend_59 { pt3dadd( 37.4465, -63.5957, -10.411, 0.59 ) }
    dend_59 { pt3dadd( 38.4717, -64.7621, -10.4259, 0.81 ) }
    dend_59 { pt3dadd( 39.1388, -65.5782, -10.3556, 1.33 ) }
    dend_59 { pt3dadd( 40.1397, -66.8542, -10.1952, 0.37 ) }
    dend_59 { pt3dadd( 40.6825, -67.5934, -10.0556, 0.22 ) }
    dend_59 { pt3dadd( 47.0814, -75.5807, -11.122, 0.22 ) }
    dend_59 { pt3dadd( 54.5096, -82.2403, -13.8414, 0.22 ) }
    dend_59 { pt3dadd( 62.6759, -88.539, -14.7102, 0.22 ) }
    dend_59 { pt3dadd( 70.4777, -95.2349, -13.6594, 0.22 ) }
    dend_59 { pt3dadd( 79.0872, -100.771, -11.9898, 0.22 ) }
    dend_59 { pt3dadd( 86.7659, -107.656, -11.4229, 0.22 ) }
    dend_59 { pt3dadd( 93.9083, -115.018, -12.4982, 0.22 ) }
    dend_59 { pt3dadd( 100.729, -122.393, -14.8385, 0.22 ) }
    dend_59 { pt3dadd( 108.063, -129.612, -15.5963, 0.22 ) }
    dend_59 { pt3dadd( 114.767, -137.353, -16.692, 0.22 ) }
    dend_59 { pt3dadd( 120.743, -145.475, -18.7238, 0.22 ) }
    dend_59 { pt3dadd( 125.929, -153.601, -22.3201, 0.22 ) }
    dend_59 { pt3dadd( 132.246, -160.534, -26.6572, 0.22 ) }
    dend_59 { pt3dadd( 136.785, -167.952, -32.2146, 0.22 ) }
    dend_59 { pt3dadd( 142.258, -175.816, -35.9942, 0.22 ) }
    dend_59 { pt3dadd( 146.898, -184.686, -38.223, 0.22 ) }
    dend_59 { pt3dadd( 152.787, -193.071, -38.9729, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.27681, -16.2152, -2.08916, 0.96 ) }
    dend_47 { pt3dadd( -2.44051, -16.8683, -2.29534, 0.96 ) }
    dend_47 { pt3dadd( -3.07583, -17.2464, -2.41589, 0.96 ) }
    dend_47 { pt3dadd( -3.72479, -17.6566, -2.54707, 1.25 ) }
    dend_47 { pt3dadd( -4.06678, -17.8892, -2.6203, 1.25 ) }
    dend_47 { pt3dadd( -4.69452, -18.338, -2.76808, 0.96 ) }
    dend_47 { pt3dadd( -5.28785, -18.7727, -2.92206, 0.96 ) }
    dend_47 { pt3dadd( -5.80998, -19.1695, -3.06989, 1.47 ) }
    dend_47 { pt3dadd( -6.46722, -19.6275, -3.26323, 1.62 ) }
    dend_47 { pt3dadd( -7.27998, -20.1122, -3.49607, 0.96 ) }
    dend_47 { pt3dadd( -7.94539, -20.4539, -3.68918, 0.96 ) }
    dend_47 { pt3dadd( -8.88648, -20.8554, -3.95744, 1.11 ) }
    dend_47 { pt3dadd( -9.56289, -21.0808, -4.14411, 1.4 ) }
    dend_47 { pt3dadd( -10.7472, -21.3783, -4.46545, 1.33 ) }
    dend_47 { pt3dadd( -11.7231, -21.5659, -4.74128, 0.96 ) }
    dend_47 { pt3dadd( -12.7212, -21.7353, -5.03473, 1.18 ) }
    dend_47 { pt3dadd( -13.2221, -21.8181, -5.18529, 1.18 ) }
    dend_47 { pt3dadd( -14.4972, -22.0534, -5.58592, 0.88 ) }
    dend_47 { pt3dadd( -15.2252, -22.2383, -5.83041, 0.88 ) }
    dend_47 { pt3dadd( -15.7182, -22.4196, -6.01976, 1.03 ) }
    dend_47 { pt3dadd( -16.6254, -22.8794, -6.3862, 1.25 ) }
    dend_47 { pt3dadd( -17.2055, -23.2426, -6.61828, 0.88 ) }
    dend_47 { pt3dadd( -17.7643, -23.6557, -6.83836, 0.88 ) }
    dend_47 { pt3dadd( -18.2646, -24.0683, -7.02956, 1.11 ) }
    dend_47 { pt3dadd( -18.8295, -24.5222, -7.24795, 1.25 ) }
    dend_47 { pt3dadd( -19.5582, -25.0834, -7.57948, 0.88 ) }
    dend_47 { pt3dadd( -20.0994, -25.5118, -7.90749, 1.03 ) }
    dend_47 { pt3dadd( -20.4744, -25.8393, -8.21425, 1.4 ) }
    dend_47 { pt3dadd( -20.9155, -26.2613, -8.69604, 1.18 ) }
    dend_47 { pt3dadd( -21.43, -26.771, -9.44457, 1.25 ) }
    dend_47 { pt3dadd( -21.7274, -27.1942, -10.2803, 1.4 ) }
    dend_47 { pt3dadd( -21.0834, -27.298, -11.0347, 1.4 ) }
    dend_47 { pt3dadd( -20.3414, -27.2006, -11.3361, 1.47 ) }
    dend_47 { pt3dadd( -18.8474, -26.8966, -11.696, 0.52 ) }
    dend_47 { pt3dadd( -18.0487, -26.7101, -11.7608, 0.52 ) }
    dend_47 { pt3dadd( -17.2163, -26.5032, -11.7305, 0.59 ) }
    dend_47 { pt3dadd( -15.8263, -26.1717, -11.5204, 0.59 ) }
    dend_47 { pt3dadd( -14.9875, -25.9889, -11.3113, 0.66 ) }
    dend_47 { pt3dadd( -14.0995, -25.8428, -11.0071, 0.74 ) }
    dend_47 { pt3dadd( -12.9195, -25.6972, -10.5385, 0.59 ) }
    dend_47 { pt3dadd( -12.0377, -25.637, -10.1545, 0.88 ) }
    dend_47 { pt3dadd( -10.8585, -25.6143, -9.59011, 0.37 ) }
    dend_47 { pt3dadd( -10.2383, -25.6509, -9.27338, 0.37 ) }
    dend_47 { pt3dadd( -9.6389, -25.7428, -8.92659, 0.37 ) }
    dend_47 { pt3dadd( -15.2626, -30.5149, -12.106, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.27681, -16.2152, -2.08916, 1.4 ) }
    dend_36 { pt3dadd( -1.14967, -17.574, -1.88366, 1.4 ) }
    dend_36 { pt3dadd( -1.00625, -18.9718, -1.69515, 1.03 ) }
    dend_36 { pt3dadd( -0.860275, -20.3307, -1.51273, 1.33 ) }
    dend_36 { pt3dadd( -0.694647, -21.9004, -1.29335, 1.25 ) }
    dend_36 { pt3dadd( -0.537111, -23.3267, -1.07433, 1.25 ) }
    dend_36 { pt3dadd( -0.387987, -24.6863, -0.842894, 1.11 ) }
    dend_36 { pt3dadd( -0.263491, -25.9939, -0.632614, 1.84 ) }
    dend_36 { pt3dadd( -0.177723, -26.8389, -0.50992, 1.62 ) }
    dend_36 { pt3dadd( -3.11632E-4, -28.4519, -0.254161, 1.18 ) }
    dend_36 { pt3dadd( 0.176923, -30.1623, 0.03966, 1.11 ) }
    dend_36 { pt3dadd( 0.345446, -31.8829, 0.346495, 1.25 ) }
    dend_36 { pt3dadd( 0.446419, -33.0205, 0.5407, 1.55 ) }
    dend_36 { pt3dadd( 0.546355, -34.2581, 0.761271, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.77471, 27.8639, -0.880689, 2.88 ) }
    dend_10 { pt3dadd( 6.89229, 28.7186, -0.783046, 2.88 ) }
    dend_10 { pt3dadd( 7.0407, 29.7975, -0.659795, 2.58 ) }
    dend_10 { pt3dadd( 7.20842, 31.0169, -0.520503, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.77471, 27.8639, -0.880689, 1.62 ) }
    dend_1 { pt3dadd( 8.0382, 27.3885, -1.4343, 1.62 ) }
    dend_1 { pt3dadd( 9.52168, 26.6687, -2.01691, 0.96 ) }
    dend_1 { pt3dadd( 10.5053, 26.1148, -2.37111, 0.96 ) }
    dend_1 { pt3dadd( 11.5878, 25.4202, -2.73995, 1.11 ) }
    dend_1 { pt3dadd( 12.168, 25.0149, -2.92718, 1.25 ) }
    dend_1 { pt3dadd( 13.2673, 24.1685, -3.2801, 0.96 ) }
    dend_1 { pt3dadd( 14.5728, 22.959, -3.66591, 0.81 ) }
    dend_1 { pt3dadd( 15.2971, 22.2473, -3.87017, 0.81 ) }
    dend_1 { pt3dadd( 15.9289, 21.6464, -4.05451, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 16.5224, 21.114, -4.26773, 0.88 ) }
    dend_1 { pt3dadd( 17.5145, 20.3112, -4.67377, 0.74 ) }
    dend_1 { pt3dadd( 18.5789, 19.5664, -5.14775, 0.59 ) }
    dend_1 { pt3dadd( 19.5216, 18.9909, -5.57128, 0.74 ) }
    dend_1 { pt3dadd( 20.1878, 18.6129, -5.85842, 0.66 ) }
    dend_1 { pt3dadd( 20.8939, 18.2167, -6.1201, 0.66 ) }
    dend_1 { pt3dadd( 21.9115, 17.6358, -6.43934, 0.96 ) }
    dend_1 { pt3dadd( 22.9682, 17.04, -6.70588, 1.11 ) }
    dend_1 { pt3dadd( 24.2767, 16.2419, -6.97952, 0.81 ) }
    dend_1 { pt3dadd( 25.3253, 15.5295, -7.17296, 0.81 ) }
    dend_1 { pt3dadd( 26.3351, 14.7908, -7.36245, 0.52 ) }
    dend_1 { pt3dadd( 26.9862, 14.2702, -7.51825, 0.52 ) }
    dend_1 { pt3dadd( 27.4643, 13.8393, -7.7084, 0.52 ) }
    dend_1 { pt3dadd( 28.0514, 13.2308, -8.10981, 0.74 ) }
    dend_1 { pt3dadd( 28.7006, 12.4756, -8.77464, 0.96 ) }
    dend_1 { pt3dadd( 29.0981, 11.9605, -9.28835, 1.03 ) }
    dend_1 { pt3dadd( 29.5868, 11.29, -10.0085, 0.81 ) }
    dend_1 { pt3dadd( 30.2102, 10.479, -10.876, 0.52 ) }
    dend_1 { pt3dadd( 30.7293, 9.76082, -11.6387, 0.88 ) }
    dend_1 { pt3dadd( 30.9908, 9.40262, -12.027, 1.11 ) }
    dend_1 { pt3dadd( 31.5486, 8.68854, -12.8057, 0.81 ) }
    dend_1 { pt3dadd( 32.1518, 8.03552, -13.4806, 0.22 ) }
    dend_1 { pt3dadd( 33.0194, 7.30852, -14.1385, 0.15 ) }
    dend_1 { pt3dadd( 40.1373, 1.37506, -17.3892, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -19.1925, -19.4821, -51.7134, 0.15 ) }
    dend_66 { pt3dadd( -25.4488, -19.8282, -60.3126, 0.15 ) }
    dend_66 { pt3dadd( -32.3334, -19.5815, -68.4236, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -19.1925, -19.4821, -51.7134, 0.59 ) }
    dend_63 { pt3dadd( -21.6444, -19.5267, -61.0307, 0.15 ) }
    dend_63 { pt3dadd( -24.1719, -18.6552, -70.2873, 0.15 ) }
    dend_63 { pt3dadd( -28.8663, -16.7102, -78.4646, 0.15 ) }
    dend_63 { pt3dadd( -34.7953, -15.889, -86.0136, 0.15 ) }
    dend_63 { pt3dadd( -39.4839, -15.7023, -94.4292, 0.15 ) }
    dend_63 { pt3dadd( -44.0689, -17.3269, -102.736, 0.15 ) }
    dend_63 { pt3dadd( -49.1171, -18.2027, -110.892, 0.15 ) }
    dend_63 { pt3dadd( -53.8136, -19.7905, -119.144, 0.15 ) }
    dend_63 { pt3dadd( -58.8151, -21.4792, -127.193, 0.15 ) }
    dend_63 { pt3dadd( -65.096, -21.722, -134.496, 0.15 ) }
    dend_63 { pt3dadd( -70.6505, -21.7651, -142.369, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 152.787, -193.071, -38.9729, 0.15 ) }
    dend_61 { pt3dadd( 159.7, -200.492, -41.6293, 0.15 ) }
    dend_61 { pt3dadd( 166.026, -208.714, -42.8853, 0.15 ) }
    dend_61 { pt3dadd( 172.278, -217.062, -42.4726, 0.15 ) }
    dend_61 { pt3dadd( 178.576, -225.321, -41.421, 0.15 ) }
    dend_61 { pt3dadd( 185.118, -233.463, -41.7032, 0.15 ) }
    dend_61 { pt3dadd( 192.582, -240.816, -41.7371, 0.15 ) }
    dend_61 { pt3dadd( 201.693, -246.098, -41.2707, 0.15 ) }
    dend_61 { pt3dadd( 209.471, -253.027, -42.5611, 0.15 ) }
    dend_61 { pt3dadd( 217.006, -260.306, -42.8382, 0.15 ) }
    dend_61 { pt3dadd( 224.095, -267.761, -44.8425, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 152.787, -193.071, -38.9729, 0.59 ) }
    dend_60 { pt3dadd( 157.063, -198.738, -39.1649, 0.15 ) }
    dend_60 { pt3dadd( 160.499, -204.806, -40.4486, 0.15 ) }
    dend_60 { pt3dadd( 162.65, -211.258, -42.4108, 0.15 ) }
    dend_60 { pt3dadd( 163.984, -218.119, -43.3931, 0.15 ) }
    dend_60 { pt3dadd( 166.214, -224.59, -45.1939, 0.15 ) }
    dend_60 { pt3dadd( 168.51, -231.143, -46.5273, 0.15 ) }
    dend_60 { pt3dadd( 172.029, -237.057, -48.2707, 0.15 ) }
    dend_60 { pt3dadd( 175.509, -242.849, -50.4677, 0.15 ) }
    dend_60 { pt3dadd( 178.971, -249.001, -51.0602, 0.15 ) }
    dend_60 { pt3dadd( 181.685, -255.489, -51.793, 0.15 ) }
    dend_60 { pt3dadd( 184.929, -261.698, -52.8434, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -15.2626, -30.5149, -12.106, 0.15 ) }
    dend_53 { pt3dadd( -22.3249, -35.8853, -12.9067, 0.15 ) }
    dend_53 { pt3dadd( -28.5482, -42.142, -13.8782, 0.15 ) }
    dend_53 { pt3dadd( -33.5856, -49.3878, -13.312, 0.15 ) }
    dend_53 { pt3dadd( -38.7315, -56.5139, -14.2823, 0.15 ) }
    dend_53 { pt3dadd( -44.0171, -63.3249, -16.2944, 0.15 ) }
    dend_53 { pt3dadd( -47.613, -71.2495, -17.6303, 0.15 ) }
    dend_53 { pt3dadd( -51.4867, -78.9695, -19.3801, 0.15 ) }
    dend_53 { pt3dadd( -54.9311, -87.0571, -19.7807, 0.15 ) }
    dend_53 { pt3dadd( -58.98, -94.8683, -19.2057, 0.15 ) }
    dend_53 { pt3dadd( -62.683, -102.67, -17.4057, 0.15 ) }
    dend_53 { pt3dadd( -65.4578, -110.942, -16.3031, 0.15 ) }
    dend_53 { pt3dadd( -68.907, -119.021, -16.8296, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -15.2626, -30.5149, -12.106, 0.59 ) }
    dend_48 { pt3dadd( -18.8929, -35.3119, -17.3296, 0.15 ) }
    dend_48 { pt3dadd( -21.7558, -40.2831, -22.8456, 0.15 ) }
    dend_48 { pt3dadd( -25.3292, -44.81, -28.3531, 0.15 ) }
    dend_48 { pt3dadd( -27.698, -49.2983, -34.4997, 0.15 ) }
    dend_48 { pt3dadd( -29.3376, -53.783, -40.8791, 0.15 ) }
    dend_48 { pt3dadd( -31.5225, -58.8167, -46.6365, 0.15 ) }
    dend_48 { pt3dadd( -32.5191, -64.1235, -52.4581, 0.15 ) }
    dend_48 { pt3dadd( -33.3984, -69.9006, -57.8091, 0.15 ) }
    dend_48 { pt3dadd( -33.2015, -74.9971, -63.8994, 0.15 ) }
    dend_48 { pt3dadd( -33.7065, -80.1751, -69.9015, 0.15 ) }
    dend_48 { pt3dadd( -34.0496, -84.6498, -76.482, 0.15 ) }
    dend_48 { pt3dadd( -33.6544, -89.6417, -82.6526, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.546355, -34.2581, 0.761271, 0.44 ) }
    dend_42 { pt3dadd( -0.508226, -36.1985, 2.01899, 0.44 ) }
    dend_42 { pt3dadd( -0.993316, -37.0091, 2.6279, 0.44 ) }
    dend_42 { pt3dadd( -1.62792, -38.0967, 3.64926, 0.44 ) }
    dend_42 { pt3dadd( -2.10506, -39.0392, 4.64922, 0.66 ) }
    dend_42 { pt3dadd( -2.44296, -39.9119, 5.5155, 0.66 ) }
    dend_42 { pt3dadd( -2.61024, -40.5355, 6.05668, 0.44 ) }
    dend_42 { pt3dadd( -2.73838, -41.3734, 6.78359, 0.52 ) }
    dend_42 { pt3dadd( -2.73562, -42.5953, 7.64467, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -2.55079, -43.9375, 8.30567, 0.66 ) }
    dend_42 { pt3dadd( -2.2345, -45.497, 8.90582, 0.88 ) }
    dend_42 { pt3dadd( -1.89112, -47.0997, 9.41108, 1.11 ) }
    dend_42 { pt3dadd( -1.59796, -48.6147, 9.79944, 0.74 ) }
    dend_42 { pt3dadd( -1.43303, -49.7424, 9.96799, 0.29 ) }
    dend_42 { pt3dadd( -1.34532, -50.8988, 10.012, 0.22 ) }
    dend_42 { pt3dadd( -1.33687, -51.586, 9.98993, 0.22 ) }
    dend_42 { pt3dadd( -1.4017, -52.4896, 9.94011, 0.22 ) }
    dend_42 { pt3dadd( -1.50485, -53.3414, 9.87109, 0.22 ) }
    dend_42 { pt3dadd( -1.73243, -55.1711, 9.7081, 0.29 ) }
    dend_42 { pt3dadd( -1.85566, -56.5883, 9.58897, 0.52 ) }
    dend_42 { pt3dadd( -1.88448, -57.5902, 9.51038, 0.52 ) }
    dend_42 { pt3dadd( -1.80974, -58.9658, 9.4158, 0.44 ) }
    dend_42 { pt3dadd( -1.54175, -61.0036, 9.3177, 0.29 ) }
    dend_42 { pt3dadd( -1.358, -61.9984, 9.2988, 0.66 ) }
    dend_42 { pt3dadd( -1.19877, -62.6958, 9.34393, 1.77 ) }
    dend_42 { pt3dadd( -0.887356, -63.9586, 9.51044, 1.18 ) }
    dend_42 { pt3dadd( -0.544661, -65.569, 9.82989, 0.52 ) }
    dend_42 { pt3dadd( -0.276673, -67.0685, 10.2076, 0.52 ) }
    dend_42 { pt3dadd( -0.123265, -68.0387, 10.4949, 0.81 ) }
    dend_42 { pt3dadd( 0.141377, -69.489, 10.9387, 0.96 ) }
    dend_42 { pt3dadd( 0.416042, -70.7539, 11.3565, 0.52 ) }
    dend_42 { pt3dadd( 0.829911, -72.4649, 12.0043, 0.22 ) }
    dend_42 { pt3dadd( 1.04851, -73.2668, 12.3502, 0.29 ) }
    dend_42 { pt3dadd( 1.37192, -74.3173, 12.8624, 0.29 ) }
    dend_42 { pt3dadd( 1.8288, -75.8131, 13.615, 0.22 ) }
    dend_42 { pt3dadd( 2.13371, -76.7922, 14.1289, 0.37 ) }
    dend_42 { pt3dadd( 2.4353, -77.803, 14.6721, 0.74 ) }
    dend_42 { pt3dadd( 2.6737, -78.7736, 15.1935, 1.03 ) }
    dend_42 { pt3dadd( 2.82175, -79.8723, 15.7482, 1.25 ) }
    dend_42 { pt3dadd( 2.88348, -82.0243, 16.7668, 0.37 ) }
    dend_42 { pt3dadd( 2.8428, -83.2768, 17.3476, 1.18 ) }
    dend_42 { pt3dadd( 2.79923, -84.4338, 17.8463, 2.65 ) }
    dend_42 { pt3dadd( 2.77674, -86.322, 18.5865, 2.21 ) }
    dend_42 { pt3dadd( 2.82831, -88.1505, 19.2584, 0.96 ) }
    dend_42 { pt3dadd( 2.94672, -89.6602, 19.7775, 0.29 ) }
    dend_42 { pt3dadd( 3.07699, -90.73, 20.1454, 0.29 ) }
    dend_42 { pt3dadd( 3.19443, -91.7283, 20.4855, 0.66 ) }
    dend_42 { pt3dadd( 3.31791, -92.9215, 20.9479, 0.44 ) }
    dend_42 { pt3dadd( 3.42071, -93.9824, 21.3949, 0.22 ) }
    dend_42 { pt3dadd( 3.47664, -94.5148, 21.6361, 0.22 ) }
    dend_42 { pt3dadd( 3.52539, -95.1626, 21.9115, 0.22 ) }
    dend_42 { pt3dadd( 3.54402, -96.4838, 22.4169, 0.29 ) }
    dend_42 { pt3dadd( 3.53914, -97.4822, 22.7683, 0.29 ) }
    dend_42 { pt3dadd( 3.55491, -98.1675, 22.9812, 0.22 ) }
    dend_42 { pt3dadd( 3.59012, -98.9577, 23.1833, 0.22 ) }
    dend_42 { pt3dadd( 3.67087, -99.6511, 23.3426, 0.81 ) }
    dend_42 { pt3dadd( 3.80733, -100.306, 23.4725, 1.55 ) }
    dend_42 { pt3dadd( 4.22067, -101.72, 23.7503, 1.84 ) }
    dend_42 { pt3dadd( 4.93537, -103.838, 24.1534, 0.15 ) }
    dend_42 { pt3dadd( 5.15094, -104.503, 24.2968, 0.15 ) }
    dend_42 { pt3dadd( 5.32932, -105.059, 24.4225, 0.15 ) }
    dend_42 { pt3dadd( 5.52518, -105.732, 24.5785, 0.15 ) }
    dend_42 { pt3dadd( 5.78965, -106.729, 24.807, 0.88 ) }
    dend_42 { pt3dadd( 5.99893, -107.558, 24.9872, 1.92 ) }
    dend_42 { pt3dadd( 6.44009, -109.202, 25.2876, 1.99 ) }
    dend_42 { pt3dadd( 6.56264, -109.623, 25.3547, 1.99 ) }
    dend_42 { pt3dadd( 7.08894, -111.568, 25.6097, 0.15 ) }
    dend_42 { pt3dadd( 7.21847, -112.106, 25.6612, 0.15 ) }
    dend_42 { pt3dadd( 7.33272, -112.661, 25.6885, 0.37 ) }
    dend_42 { pt3dadd( 7.4209, -113.225, 25.6986, 0.37 ) }
    dend_42 { pt3dadd( 7.59726, -114.563, 25.7167, 0.15 ) }
    dend_42 { pt3dadd( 7.67741, -115.395, 25.7471, 0.15 ) }
    dend_42 { pt3dadd( 7.76966, -116.374, 25.8041, 0.22 ) }
    dend_42 { pt3dadd( 7.80994, -116.944, 25.8608, 0.22 ) }
    dend_42 { pt3dadd( 7.82888, -117.976, 25.9956, 0.15 ) }
    dend_42 { pt3dadd( 7.80847, -118.765, 26.1171, 0.15 ) }
    dend_42 { pt3dadd( 7.77928, -119.39, 26.2256, 0.59 ) }
    dend_42 { pt3dadd( 7.78252, -120.053, 26.3514, 1.03 ) }
    dend_42 { pt3dadd( 7.85279, -121.078, 26.5267, 0.22 ) }
    dend_42 { pt3dadd( 7.9845, -122.155, 26.7117, 0.07 ) }
    dend_42 { pt3dadd( 8.1006, -122.846, 26.842, 0.07 ) }
    dend_42 { pt3dadd( 8.19326, -123.281, 26.9363, 0.66 ) }
    dend_42 { pt3dadd( 8.49215, -124.414, 27.2468, 0.96 ) }
    dend_42 { pt3dadd( 9.14829, -126.456, 27.8784, 0.22 ) }
    dend_42 { pt3dadd( 9.58709, -127.562, 28.268, 0.22 ) }
    dend_42 { pt3dadd( 9.92371, -128.276, 28.5729, 0.44 ) }
    dend_42 { pt3dadd( 10.334, -129.081, 28.9532, 1.25 ) }
    dend_42 { pt3dadd( 10.7251, -129.782, 29.2968, 1.92 ) }
    dend_42 { pt3dadd( 11.3052, -130.662, 29.7555, 1.11 ) }
    dend_42 { pt3dadd( 11.9411, -131.498, 30.2348, 0.22 ) }
    dend_42 { pt3dadd( 12.4438, -132.155, 30.5883, 0.22 ) }
    dend_42 { pt3dadd( 12.9917, -132.931, 30.9656, 0.52 ) }
    dend_42 { pt3dadd( 13.6293, -134.011, 31.4441, 0.22 ) }
    dend_42 { pt3dadd( 14.192, -135.184, 31.9679, 0.22 ) }
    dend_42 { pt3dadd( 14.5688, -136.132, 32.4106, 0.22 ) }
    dend_42 { pt3dadd( 14.7265, -136.615, 32.6379, 0.81 ) }
    dend_42 { pt3dadd( 15.0527, -137.765, 33.2, 1.77 ) }
    dend_42 { pt3dadd( 15.5994, -139.949, 34.3396, 0.37 ) }
    dend_42 { pt3dadd( 15.8743, -141.093, 34.9543, 0.15 ) }
    dend_42 { pt3dadd( 15.9965, -141.62, 35.226, 0.15 ) }
    dend_42 { pt3dadd( 16.1576, -142.274, 35.5477, 0.37 ) }
    dend_42 { pt3dadd( 16.3688, -143.073, 35.9385, 1.18 ) }
    dend_42 { pt3dadd( 16.6418, -144.015, 36.3899, 1.55 ) }
    dend_42 { pt3dadd( 17.0784, -145.462, 37.0129, 0.81 ) }
    dend_42 { pt3dadd( 17.3508, -146.48, 37.3875, 0.15 ) }
    dend_42 { pt3dadd( 17.4957, -147.136, 37.6169, 0.22 ) }
    dend_42 { pt3dadd( 17.6982, -148.125, 37.9444, 0.15 ) }
    dend_42 { pt3dadd( 17.8616, -149.035, 38.2303, 0.96 ) }
    dend_42 { pt3dadd( 18.0444, -150.043, 38.543, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 18.3417, -151.596, 39.007, 0.22 ) }
    dend_42 { pt3dadd( 18.5125, -152.325, 39.2189, 0.22 ) }
    dend_42 { pt3dadd( 18.7697, -153.242, 39.485, 0.37 ) }
    dend_42 { pt3dadd( 18.853, -153.496, 39.5543, 0.37 ) }
    dend_42 { pt3dadd( 19.1895, -154.419, 39.8042, 0.22 ) }
    dend_42 { pt3dadd( 19.3685, -154.845, 39.9311, 0.22 ) }
    dend_42 { pt3dadd( 19.7486, -155.573, 40.1265, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.546355, -34.2581, 0.761271, 1.84 ) }
    dend_37 { pt3dadd( 0.372515, -35.0981, 0.430048, 1.84 ) }
    dend_37 { pt3dadd( 0.214985, -36.1057, 0.0632854, 1.55 ) }
    dend_37 { pt3dadd( 0.0926492, -37.1931, -0.297948, 1.55 ) }
    dend_37 { pt3dadd( -0.020765, -38.3297, -0.63484, 1.55 ) }
    dend_37 { pt3dadd( -0.132342, -39.4581, -0.923807, 1.47 ) }
    dend_37 { pt3dadd( -0.234232, -40.4465, -1.15145, 0.96 ) }
    dend_37 { pt3dadd( -0.315412, -41.2347, -1.29559, 1.55 ) }
    dend_37 { pt3dadd( -0.475705, -42.6486, -1.47111, 1.25 ) }
    dend_37 { pt3dadd( -0.654461, -44.1093, -1.60458, 1.47 ) }
    dend_37 { pt3dadd( -0.856767, -45.6149, -1.7019, 1.03 ) }
    dend_37 { pt3dadd( -1.01994, -46.6322, -1.74965, 1.18 ) }
    dend_37 { pt3dadd( -1.28724, -48.0675, -1.78646, 1.99 ) }
    dend_37 { pt3dadd( -1.56098, -49.2855, -1.79449, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.20842, 31.0169, -0.520503, 2.14 ) }
    dend_20 { pt3dadd( 8.32515, 32.3417, -0.397971, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.20842, 31.0169, -0.520503, 1.47 ) }
    dend_11 { pt3dadd( 6.70525, 32.3331, 0.54464, 1.47 ) }
    dend_11 { pt3dadd( 6.31616, 33.1232, 1.19013, 1.18 ) }
    dend_11 { pt3dadd( 5.8341, 33.8491, 1.81255, 1.18 ) }
    dend_11 { pt3dadd( 5.17543, 34.5977, 2.51173, 1.47 ) }
    dend_11 { pt3dadd( 4.5179, 35.1447, 3.08246, 1.47 ) }
    dend_11 { pt3dadd( 4.13451, 35.3513, 3.34696, 1.47 ) }
    dend_11 { pt3dadd( 3.18011, 35.4888, 3.75731, 1.47 ) }
    dend_11 { pt3dadd( 1.92584, 35.3232, 4.0583, 1.03 ) }
    dend_11 { pt3dadd( 1.18393, 35.0832, 4.14307, 1.62 ) }
    dend_11 { pt3dadd( 0.51118, 34.7709, 4.1707, 1.77 ) }
    dend_11 { pt3dadd( -0.342326, 34.2613, 4.1799, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 40.1373, 1.37506, -17.3892, 0.15 ) }
    dend_7 { pt3dadd( 49.2333, -5.62305, -21.1182, 0.15 ) }
    dend_7 { pt3dadd( 58.8601, -11.8259, -24.9926, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 40.1373, 1.37506, -17.3892, 0.59 ) }
    dend_2 { pt3dadd( 48.553, -5.03082, -20.4836, 0.15 ) }
    dend_2 { pt3dadd( 55.7994, -12.7789, -23.3063, 0.15 ) }
    dend_2 { pt3dadd( 61.2339, -21.8138, -26.2075, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -32.3334, -19.5815, -68.4236, 0.15 ) }
    dend_68 { pt3dadd( -41.9135, -15.792, -74.22, 0.15 ) }
    dend_68 { pt3dadd( -49.3052, -10.3639, -81.6314, 0.15 ) }
    dend_68 { pt3dadd( -55.0662, -3.06915, -88.8039, 0.15 ) }
    dend_68 { pt3dadd( -62.3975, 3.23735, -95.5146, 0.15 ) }
    dend_68 { pt3dadd( -70.3327, 8.43524, -102.527, 0.15 ) }
    dend_68 { pt3dadd( -77.7479, 13.3515, -110.28, 0.15 ) }
    dend_68 { pt3dadd( -83.9089, 19.4251, -118.267, 0.15 ) }
    dend_68 { pt3dadd( -90.264, 26.3413, -125.332, 0.15 ) }
    dend_68 { pt3dadd( -95.2989, 32.205, -134.219, 0.15 ) }
    dend_68 { pt3dadd( -101.998, 36.926, -142.715, 0.15 ) }
    dend_68 { pt3dadd( -110.47, 42.399, -148.823, 0.15 ) }
    dend_68 { pt3dadd( -118.914, 47.3506, -155.415, 0.15 ) }
    dend_68 { pt3dadd( -126.829, 53.9208, -161.125, 0.15 ) }
    dend_68 { pt3dadd( -135.944, 59.5921, -165.995, 0.15 ) }
    dend_68 { pt3dadd( -146.181, 64.6804, -168.924, 0.15 ) }
    dend_68 { pt3dadd( -156.072, 71.0144, -169.732, 0.15 ) }
    dend_68 { pt3dadd( -165.845, 77.2224, -171.885, 0.15 ) }
    dend_68 { pt3dadd( -176.414, 82.4611, -172.103, 0.15 ) }
    dend_68 { pt3dadd( -186.858, 87.935, -172.294, 0.15 ) }
    dend_68 { pt3dadd( -196.589, 94.1064, -174.728, 0.15 ) }
    dend_68 { pt3dadd( -205.748, 101.118, -176.992, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -32.3334, -19.5815, -68.4236, 0.59 ) }
    dend_67 { pt3dadd( -34.449, -21.7821, -75.7408, 0.15 ) }
    dend_67 { pt3dadd( -37.4897, -23.4167, -82.8909, 0.15 ) }
    dend_67 { pt3dadd( -39.7615, -25.6082, -90.1647, 0.15 ) }
    dend_67 { pt3dadd( -41.7489, -27.7045, -97.5496, 0.15 ) }
    dend_67 { pt3dadd( -43.4008, -29.0748, -105.194, 0.15 ) }
    dend_67 { pt3dadd( -45.3175, -31.2194, -112.582, 0.15 ) }
    dend_67 { pt3dadd( -46.4168, -33.0739, -120.214, 0.15 ) }
    dend_67 { pt3dadd( -48.2032, -34.8046, -127.749, 0.15 ) }
    dend_67 { pt3dadd( -48.4021, -37.9688, -134.986, 0.15 ) }
    dend_67 { pt3dadd( -47.6015, -41.2797, -142.107, 0.15 ) }
    dend_67 { pt3dadd( -46.6839, -44.7264, -149.143, 0.15 ) }
    dend_67 { pt3dadd( -46.7448, -48.5256, -156.051, 0.15 ) }
    dend_67 { pt3dadd( -45.4894, -52.8808, -162.474, 0.15 ) }
    dend_67 { pt3dadd( -45.1251, -58.3371, -168.078, 0.15 ) }
    dend_67 { pt3dadd( -46.011, -63.7248, -173.705, 0.15 ) }
    dend_67 { pt3dadd( -46.849, -68.6849, -179.736, 0.15 ) }
    dend_67 { pt3dadd( -46.7766, -72.6173, -186.564, 0.15 ) }
    dend_67 { pt3dadd( -46.7137, -76.5527, -193.39, 0.15 ) }
    dend_67 { pt3dadd( -45.1696, -81.7748, -199.018, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -70.6505, -21.7651, -142.369, 0.15 ) }
    dend_65 { pt3dadd( -75.2483, -22.0333, -149.633, 0.15 ) }
    dend_65 { pt3dadd( -80.5599, -22.0663, -156.399, 0.15 ) }
    dend_65 { pt3dadd( -86.5745, -21.4666, -162.519, 0.15 ) }
    dend_65 { pt3dadd( -91.1446, -20.1213, -169.677, 0.15 ) }
    dend_65 { pt3dadd( -95.7873, -17.7193, -176.491, 0.15 ) }
    dend_65 { pt3dadd( -101.82, -16.7219, -182.54, 0.15 ) }
    dend_65 { pt3dadd( -108.232, -16.251, -188.254, 0.15 ) }
    dend_65 { pt3dadd( -114.102, -17.0634, -194.484, 0.15 ) }
    dend_65 { pt3dadd( -120.193, -19.3613, -200.076, 0.15 ) }
    dend_65 { pt3dadd( -126.174, -21.913, -205.669, 0.15 ) }
    dend_65 { pt3dadd( -132.24, -26.0792, -210.007, 0.15 ) }
    dend_65 { pt3dadd( -137.695, -30.3331, -215.014, 0.15 ) }
    dend_65 { pt3dadd( -142.894, -34.7398, -220.154, 0.15 ) }
    dend_65 { pt3dadd( -148.385, -39.9624, -224.028, 0.15 ) }
    dend_65 { pt3dadd( -153.84, -45.98, -226.478, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -159.378, -51.5835, -229.664, 0.15 ) }
    dend_65 { pt3dadd( -163.951, -58.3415, -231.876, 0.15 ) }
    dend_65 { pt3dadd( -167.356, -65.2755, -235.297, 0.15 ) }
    dend_65 { pt3dadd( -169.837, -73.0831, -237.2, 0.15 ) }
    dend_65 { pt3dadd( -173.859, -80.1795, -239.371, 0.15 ) }
    dend_65 { pt3dadd( -178.662, -87.0458, -240.468, 0.15 ) }
    dend_65 { pt3dadd( -182.644, -94.1914, -242.541, 0.15 ) }
    dend_65 { pt3dadd( -187.612, -100.502, -245.24, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -70.6505, -21.7651, -142.369, 0.59 ) }
    dend_64 { pt3dadd( -71.9602, -21.7358, -146.856, 0.15 ) }
    dend_64 { pt3dadd( -73.1012, -21.9096, -151.385, 0.15 ) }
    dend_64 { pt3dadd( -74.7756, -22.3146, -155.729, 0.15 ) }
    dend_64 { pt3dadd( -76.2614, -23.4086, -160.017, 0.15 ) }
    dend_64 { pt3dadd( -77.3075, -24.1675, -164.506, 0.15 ) }
    dend_64 { pt3dadd( -77.6669, -25.5993, -168.932, 0.15 ) }
    dend_64 { pt3dadd( -78.3176, -26.1201, -173.53, 0.15 ) }
    dend_64 { pt3dadd( -79.2085, -26.4277, -178.109, 0.15 ) }
    dend_64 { pt3dadd( -80.2436, -26.9368, -182.637, 0.15 ) }
    dend_64 { pt3dadd( -80.7011, -28.1834, -187.112, 0.15 ) }
    dend_64 { pt3dadd( -81.6153, -30.1968, -191.207, 0.15 ) }
    dend_64 { pt3dadd( -82.0953, -31.7993, -195.559, 0.15 ) }
    dend_64 { pt3dadd( -82.1444, -33.2711, -199.987, 0.15 ) }
    dend_64 { pt3dadd( -82.199, -34.6853, -204.434, 0.15 ) }
    dend_64 { pt3dadd( -81.747, -35.8908, -208.923, 0.15 ) }
    dend_64 { pt3dadd( -81.8395, -36.5571, -213.547, 0.15 ) }
    dend_64 { pt3dadd( -82.3746, -36.8201, -218.183, 0.15 ) }
    dend_64 { pt3dadd( -82.3174, -37.9015, -222.727, 0.15 ) }
    dend_64 { pt3dadd( -82.9255, -39.2952, -227.138, 0.15 ) }
    dend_64 { pt3dadd( -84.1929, -40.6612, -231.413, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -68.907, -119.021, -16.8296, 0.15 ) }
    dend_57 { pt3dadd( -72.3785, -124.768, -17.1522, 0.15 ) }
    dend_57 { pt3dadd( -75.1424, -130.875, -16.9176, 0.15 ) }
    dend_57 { pt3dadd( -77.3515, -137.194, -17.0283, 0.15 ) }
    dend_57 { pt3dadd( -79.889, -143.314, -15.9642, 0.15 ) }
    dend_57 { pt3dadd( -82.2185, -149.47, -14.6667, 0.15 ) }
    dend_57 { pt3dadd( -83.3281, -155.973, -13.5626, 0.15 ) }
    dend_57 { pt3dadd( -84.3529, -162.565, -13.8559, 0.15 ) }
    dend_57 { pt3dadd( -85.7348, -168.929, -15.3643, 0.15 ) }
    dend_57 { pt3dadd( -87.5109, -174.856, -17.9386, 0.15 ) }
    dend_57 { pt3dadd( -88.7695, -180.186, -21.8343, 0.15 ) }
    dend_57 { pt3dadd( -90.3871, -184.909, -26.3694, 0.15 ) }
    dend_57 { pt3dadd( -92.196, -189.532, -30.9406, 0.15 ) }
    dend_57 { pt3dadd( -94.753, -193.617, -35.6928, 0.15 ) }
    dend_57 { pt3dadd( -96.9409, -196.503, -41.4485, 0.15 ) }
    dend_57 { pt3dadd( -99.0699, -199.322, -47.2604, 0.15 ) }
    dend_57 { pt3dadd( -99.8967, -202.643, -53.1204, 0.15 ) }
    dend_57 { pt3dadd( -99.9407, -206.501, -58.6829, 0.15 ) }
    dend_57 { pt3dadd( -99.953, -210.258, -64.3171, 0.15 ) }
    dend_57 { pt3dadd( -101.039, -213.905, -69.9257, 0.15 ) }
    dend_57 { pt3dadd( -102.501, -217.034, -75.7744, 0.15 ) }
    dend_57 { pt3dadd( -105.068, -219.937, -81.363, 0.15 ) }
    dend_57 { pt3dadd( -107.843, -222.735, -86.909, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -68.907, -119.021, -16.8296, 0.59 ) }
    dend_54 { pt3dadd( -72.3637, -124.797, -17.0966, 0.15 ) }
    dend_54 { pt3dadd( -75.6914, -130.603, -17.8474, 0.15 ) }
    dend_54 { pt3dadd( -79.9344, -135.847, -17.3578, 0.15 ) }
    dend_54 { pt3dadd( -83.975, -141.232, -16.7648, 0.15 ) }
    dend_54 { pt3dadd( -88.4792, -146.222, -15.929, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -33.6544, -89.6417, -82.6526, 0.15 ) }
    dend_50 { pt3dadd( -34.6918, -97.1261, -90.4653, 0.15 ) }
    dend_50 { pt3dadd( -37.1664, -105.277, -97.1861, 0.15 ) }
    dend_50 { pt3dadd( -38.8854, -112.632, -105.01, 0.15 ) }
    dend_50 { pt3dadd( -41.6196, -121.29, -110.918, 0.15 ) }
    dend_50 { pt3dadd( -44.9047, -130.698, -115.103, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -33.6544, -89.6417, -82.6526, 0.59 ) }
    dend_49 { pt3dadd( -37.2254, -95.4711, -90.843, 0.15 ) }
    dend_49 { pt3dadd( -40.6352, -101.438, -98.9974, 0.15 ) }
    dend_49 { pt3dadd( -43.1258, -109.412, -105.514, 0.15 ) }
    dend_49 { pt3dadd( -44.6563, -118.565, -110.531, 0.15 ) }
    dend_49 { pt3dadd( -44.1115, -128.15, -114.834, 0.15 ) }
    dend_49 { pt3dadd( -42.627, -137.838, -118.639, 0.15 ) }
    dend_49 { pt3dadd( -39.8443, -147.216, -122.515, 0.15 ) }
    dend_49 { pt3dadd( -38.3441, -157.359, -124.785, 0.15 ) }
    dend_49 { pt3dadd( -35.2946, -166.827, -128.206, 0.15 ) }
    dend_49 { pt3dadd( -33.9643, -176.272, -132.649, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 19.7486, -155.573, 40.1265, 0.22 ) }
    dend_46 { pt3dadd( 19.585, -156.014, 40.0325, 0.22 ) }
    dend_46 { pt3dadd( 19.3662, -156.604, 39.9069, 0.22 ) }
    dend_46 { pt3dadd( 19.1761, -157.117, 39.7978, 0.22 ) }
    dend_46 { pt3dadd( 18.8371, -158.031, 39.6031, 0.22 ) }
    dend_46 { pt3dadd( 18.6841, -158.443, 39.5153, 0.15 ) }
    dend_46 { pt3dadd( 18.5316, -158.855, 39.4277, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 19.7486, -155.573, 40.1265, 1.18 ) }
    dend_43 { pt3dadd( 20.0701, -156.544, 40.5668, 1.18 ) }
    dend_43 { pt3dadd( 20.4152, -157.666, 41.0342, 0.29 ) }
    dend_43 { pt3dadd( 20.708, -158.699, 41.4588, 0.15 ) }
    dend_43 { pt3dadd( 20.8604, -159.287, 41.6961, 0.15 ) }
    dend_43 { pt3dadd( 20.9967, -159.865, 41.9232, 0.29 ) }
    dend_43 { pt3dadd( 21.1571, -160.688, 42.2502, 0.66 ) }
    dend_43 { pt3dadd( 21.274, -161.54, 42.5918, 1.4 ) }
    dend_43 { pt3dadd( 21.3251, -162.801, 43.0881, 0.22 ) }
    dend_43 { pt3dadd( 21.3032, -163.675, 43.4258, 0.22 ) }
    dend_43 { pt3dadd( 21.2789, -164.057, 43.5692, 0.22 ) }
    dend_43 { pt3dadd( 21.2104, -164.872, 43.8483, 0.22 ) }
    dend_43 { pt3dadd( 21.1366, -165.575, 44.0709, 0.66 ) }
    dend_43 { pt3dadd( 21.0162, -166.453, 44.3285, 0.15 ) }
    dend_43 { pt3dadd( 20.8735, -167.195, 44.5391, 0.15 ) }
    dend_43 { pt3dadd( 20.6687, -168.099, 44.797, 0.52 ) }
    dend_43 { pt3dadd( 20.4088, -169.218, 45.1271, 0.29 ) }
    dend_43 { pt3dadd( 20.307, -169.663, 45.261, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 20.2044, -170.114, 45.4066, 0.15 ) }
    dend_43 { pt3dadd( 20.0034, -170.939, 45.6665, 0.15 ) }
    dend_43 { pt3dadd( 19.8534, -171.495, 45.8364, 0.29 ) }
    dend_43 { pt3dadd( 19.6544, -172.258, 46.079, 1.11 ) }
    dend_43 { pt3dadd( 19.4761, -173.033, 46.3344, 1.77 ) }
    dend_43 { pt3dadd( 19.2879, -174.113, 46.6876, 1.77 ) }
    dend_43 { pt3dadd( 19.1454, -175.244, 47.0603, 1.33 ) }
    dend_43 { pt3dadd( 18.9928, -176.817, 47.5716, 0.15 ) }
    dend_43 { pt3dadd( 18.9109, -177.865, 47.9236, 0.22 ) }
    dend_43 { pt3dadd( 18.8591, -178.619, 48.1849, 0.66 ) }
    dend_43 { pt3dadd( 18.8148, -179.345, 48.4443, 0.81 ) }
    dend_43 { pt3dadd( 18.7638, -180.696, 48.9385, 0.15 ) }
    dend_43 { pt3dadd( 18.788, -181.491, 49.2342, 0.22 ) }
    dend_43 { pt3dadd( 18.8709, -182.163, 49.4849, 0.22 ) }
    dend_43 { pt3dadd( 19.0128, -183.026, 49.7927, 0.22 ) }
    dend_43 { pt3dadd( 19.108, -183.532, 49.9644, 0.66 ) }
    dend_43 { pt3dadd( 19.3501, -184.524, 50.2876, 1.4 ) }
    dend_43 { pt3dadd( 19.8077, -185.922, 50.7567, 0.88 ) }
    dend_43 { pt3dadd( 20.1201, -186.795, 51.0563, 0.15 ) }
    dend_43 { pt3dadd( 20.4291, -187.632, 51.3378, 0.15 ) }
    dend_43 { pt3dadd( 20.6618, -188.24, 51.5375, 0.22 ) }
    dend_43 { pt3dadd( 21.0201, -189.192, 51.8588, 0.29 ) }
    dend_43 { pt3dadd( 21.268, -189.936, 52.1071, 0.15 ) }
    dend_43 { pt3dadd( 21.5012, -190.96, 52.43, 0.15 ) }
    dend_43 { pt3dadd( 21.5447, -191.315, 52.5414, 0.15 ) }
    dend_43 { pt3dadd( 21.5872, -192.06, 52.7946, 0.22 ) }
    dend_43 { pt3dadd( 21.5785, -193.141, 53.1801, 0.22 ) }
    dend_43 { pt3dadd( 21.5532, -193.608, 53.3502, 0.22 ) }
    dend_43 { pt3dadd( 21.4978, -194.591, 53.701, 0.37 ) }
    dend_43 { pt3dadd( 21.4712, -195.595, 54.0684, 0.22 ) }
    dend_43 { pt3dadd( 21.4695, -196.271, 54.3064, 0.88 ) }
    dend_43 { pt3dadd( 21.5226, -197.78, 54.8085, 2.06 ) }
    dend_43 { pt3dadd( 21.6533, -199.546, 55.2952, 0.59 ) }
    dend_43 { pt3dadd( 21.7952, -200.746, 55.5446, 0.22 ) }
    dend_43 { pt3dadd( 21.9256, -201.539, 55.6462, 0.22 ) }
    dend_43 { pt3dadd( 22.0524, -202.242, 55.7056, 0.22 ) }
    dend_43 { pt3dadd( 22.2317, -203.21, 55.742, 0.59 ) }
    dend_43 { pt3dadd( 22.5138, -204.582, 55.6947, 0.07 ) }
    dend_43 { pt3dadd( 22.7058, -205.415, 55.5629, 0.15 ) }
    dend_43 { pt3dadd( 22.9389, -206.404, 55.3119, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.56098, -49.2855, -1.79449, 0.74 ) }
    dend_39 { pt3dadd( -1.7062, -51.5043, -2.21006, 0.74 ) }
    dend_39 { pt3dadd( -1.83974, -53.4803, -2.61395, 0.74 ) }
    dend_39 { pt3dadd( -1.94694, -54.5976, -2.84791, 0.81 ) }
    dend_39 { pt3dadd( -2.1971, -56.4399, -3.25646, 0.88 ) }
    dend_39 { pt3dadd( -2.38486, -57.6235, -3.52431, 0.81 ) }
    dend_39 { pt3dadd( -2.66855, -59.1516, -3.88227, 1.18 ) }
    dend_39 { pt3dadd( -2.91822, -60.2873, -4.1789, 1.18 ) }
    dend_39 { pt3dadd( -3.31664, -61.6778, -4.55467, 1.03 ) }
    dend_39 { pt3dadd( -3.80582, -63.1528, -4.97889, 1.11 ) }
    dend_39 { pt3dadd( -4.24998, -64.3054, -5.32002, 0.74 ) }
    dend_39 { pt3dadd( -4.82784, -65.6012, -5.69358, 1.11 ) }
    dend_39 { pt3dadd( -5.35484, -66.7034, -5.99349, 0.81 ) }
    dend_39 { pt3dadd( -5.98137, -68.0028, -6.31914, 0.81 ) }
    dend_39 { pt3dadd( -6.17696, -68.4773, -6.42165, 0.81 ) }
    dend_39 { pt3dadd( -6.49654, -69.4791, -6.59795, 0.88 ) }
    dend_39 { pt3dadd( -6.75464, -70.5892, -6.73021, 0.88 ) }
    dend_39 { pt3dadd( -7.0508, -72.4234, -6.84869, 1.11 ) }
    dend_39 { pt3dadd( -7.15973, -73.2983, -6.85095, 1.33 ) }
    dend_39 { pt3dadd( -7.40872, -75.4138, -6.68852, 0.74 ) }
    dend_39 { pt3dadd( -7.528, -76.6689, -6.56401, 0.74 ) }
    dend_39 { pt3dadd( -7.62633, -78.5149, -6.33919, 0.88 ) }
    dend_39 { pt3dadd( -7.64979, -79.6012, -6.16762, 1.25 ) }
    dend_39 { pt3dadd( -7.68097, -80.7215, -5.94115, 1.03 ) }
    dend_39 { pt3dadd( -7.82142, -82.2169, -5.54078, 0.74 ) }
    dend_39 { pt3dadd( -8.12746, -94.1203, -5.77699, 0.74 ) }
    dend_39 { pt3dadd( -9.50802, -105.884, -4.4581, 0.74 ) }
    dend_39 { pt3dadd( -10.4983, -117.614, -2.58946, 0.74 ) }
    dend_39 { pt3dadd( -11.217, -128.813, 1.50666, 0.74 ) }
    dend_39 { pt3dadd( -10.8342, -140.09, 5.4168, 0.74 ) }
    dend_39 { pt3dadd( -11.2762, -151.003, 10.2884, 0.74 ) }
    dend_39 { pt3dadd( -13.6915, -162.239, 13.5429, 0.74 ) }
    dend_39 { pt3dadd( -13.6973, -173.865, 16.1948, 0.74 ) }
    dend_39 { pt3dadd( -13.0815, -185.398, 19.1772, 0.74 ) }
    dend_39 { pt3dadd( -12.5498, -196.996, 21.9025, 0.74 ) }
    dend_39 { pt3dadd( -11.9004, -208.623, 24.4689, 0.74 ) }
    dend_39 { pt3dadd( -11.982, -219.892, 28.423, 0.74 ) }
    dend_39 { pt3dadd( -14.4494, -230.41, 33.5956, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.56098, -49.2855, -1.79449, 1.03 ) }
    dend_38 { pt3dadd( -1.44413, -50.3097, -1.25234, 1.03 ) }
    dend_38 { pt3dadd( -1.29866, -51.8255, -0.528666, 1.03 ) }
    dend_38 { pt3dadd( -1.21728, -52.9964, -0.079114, 1.03 ) }
    dend_38 { pt3dadd( -1.08914, -54.7279, 0.466682, 1.03 ) }
    dend_38 { pt3dadd( -0.949146, -56.1896, 0.837098, 0.96 ) }
    dend_38 { pt3dadd( -0.813097, -57.225, 1.06581, 0.96 ) }
    dend_38 { pt3dadd( -0.66361, -58.0948, 1.20545, 0.96 ) }
    dend_38 { pt3dadd( -0.112288, -60.4605, 1.44994, 0.88 ) }
    dend_38 { pt3dadd( 0.337947, -61.8598, 1.53439, 0.88 ) }
    dend_38 { pt3dadd( 1.14284, -63.6747, 1.61045, 0.88 ) }
    dend_38 { pt3dadd( 2.18168, -65.4659, 1.68153, 0.81 ) }
    dend_38 { pt3dadd( 3.05497, -66.6746, 1.74814, 0.81 ) }
    dend_38 { pt3dadd( 3.77052, -67.4929, 1.82443, 0.81 ) }
    dend_38 { pt3dadd( 4.87009, -68.5429, 1.96387, 0.88 ) }
    dend_38 { pt3dadd( 6.01874, -69.6247, 2.1577, 1.03 ) }
    dend_38 { pt3dadd( 6.77884, -70.4265, 2.33442, 1.03 ) }
    dend_38 { pt3dadd( 7.70671, -71.6566, 2.61557, 0.81 ) }
    dend_38 { pt3dadd( 8.34477, -72.8071, 2.87096, 1.4 ) }
    dend_38 { pt3dadd( 8.64178, -73.5265, 3.02198, 1.92 ) }
    dend_38 { pt3dadd( 9.21258, -75.4464, 3.33943, 1.4 ) }
    dend_38 { pt3dadd( 9.7428, -77.7093, 3.56932, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 10.0645, -79.299, 3.64655, 0.88 ) }
    dend_38 { pt3dadd( 10.3742, -80.9564, 3.64587, 1.03 ) }
    dend_38 { pt3dadd( 10.5565, -81.8796, 3.60663, 1.03 ) }
    dend_38 { pt3dadd( 10.8838, -83.3828, 3.48548, 0.81 ) }
    dend_38 { pt3dadd( 11.219, -84.7683, 3.29283, 1.18 ) }
    dend_38 { pt3dadd( 11.3106, -85.1868, 3.2204, 1.18 ) }
    dend_38 { pt3dadd( 11.4219, -86.0062, 3.09225, 0.74 ) }
    dend_38 { pt3dadd( 11.4006, -87.0725, 3.00535, 0.44 ) }
    dend_38 { pt3dadd( 11.2951, -87.7071, 3.00486, 0.44 ) }
    dend_38 { pt3dadd( 11.0333, -88.6395, 3.06972, 0.66 ) }
    dend_38 { pt3dadd( 10.6169, -89.8773, 3.18701, 0.81 ) }
    dend_38 { pt3dadd( 10.2324, -90.9975, 3.29393, 0.96 ) }
    dend_38 { pt3dadd( 9.64159, -92.75, 3.45438, 1.33 ) }
    dend_38 { pt3dadd( 9.2675, -93.9083, 3.55284, 0.88 ) }
    dend_38 { pt3dadd( 8.93498, -95.0461, 3.65504, 1.11 ) }
    dend_38 { pt3dadd( 8.59286, -96.3793, 3.80314, 1.18 ) }
    dend_38 { pt3dadd( 8.29605, -97.6455, 3.97092, 1.18 ) }
    dend_38 { pt3dadd( 7.89584, -99.4138, 4.23947, 0.52 ) }
    dend_38 { pt3dadd( 7.51653, -101.249, 4.56974, 0.52 ) }
    dend_38 { pt3dadd( 7.24472, -102.617, 4.83651, 0.74 ) }
    dend_38 { pt3dadd( 7.00461, -103.892, 5.09769, 0.96 ) }
    dend_38 { pt3dadd( 6.79329, -105.084, 5.3274, 1.62 ) }
    dend_38 { pt3dadd( 6.59596, -106.274, 5.52754, 1.62 ) }
    dend_38 { pt3dadd( 6.37311, -107.762, 5.72432, 1.33 ) }
    dend_38 { pt3dadd( 6.21843, -108.984, 5.82657, 0.44 ) }
    dend_38 { pt3dadd( 6.1057, -109.709, 5.85234, 0.59 ) }
    dend_38 { pt3dadd( 5.81488, -111.066, 5.88725, 0.59 ) }
    dend_38 { pt3dadd( 5.40726, -112.523, 5.94822, 0.88 ) }
    dend_38 { pt3dadd( 5.0108, -113.643, 6.0192, 1.25 ) }
    dend_38 { pt3dadd( 4.72346, -114.325, 6.08609, 2.21 ) }
    dend_38 { pt3dadd( 3.99712, -115.914, 6.3134, 1.84 ) }
    dend_38 { pt3dadd( 3.14462, -117.708, 6.63959, 1.33 ) }
    dend_38 { pt3dadd( 2.3678, -119.349, 7.01903, 0.66 ) }
    dend_38 { pt3dadd( 1.99169, -120.212, 7.23104, 0.44 ) }
    dend_38 { pt3dadd( 1.62367, -121.14, 7.45956, 0.44 ) }
    dend_38 { pt3dadd( 1.27675, -122.134, 7.69492, 0.81 ) }
    dend_38 { pt3dadd( 0.938444, -123.4, 7.95247, 1.11 ) }
    dend_38 { pt3dadd( 0.663958, -124.813, 8.17239, 0.74 ) }
    dend_38 { pt3dadd( 0.424507, -126.342, 8.36713, 0.37 ) }
    dend_38 { pt3dadd( 0.246173, -127.521, 8.48535, 0.37 ) }
    dend_38 { pt3dadd( 0.121894, -128.266, 8.55483, 0.74 ) }
    dend_38 { pt3dadd( -0.095905, -129.393, 8.6689, 0.88 ) }
    dend_38 { pt3dadd( -0.455478, -131.041, 8.87572, 0.44 ) }
    dend_38 { pt3dadd( -0.658205, -131.805, 9.01611, 0.44 ) }
    dend_38 { pt3dadd( -0.896833, -132.536, 9.23646, 0.59 ) }
    dend_38 { pt3dadd( -1.22771, -133.341, 9.57721, 0.96 ) }
    dend_38 { pt3dadd( -1.54202, -133.993, 9.92892, 1.25 ) }
    dend_38 { pt3dadd( -1.89247, -134.673, 10.3726, 1.25 ) }
    dend_38 { pt3dadd( -2.2882, -135.486, 10.9555, 0.81 ) }
    dend_38 { pt3dadd( -2.51596, -136.134, 11.3886, 1.11 ) }
    dend_38 { pt3dadd( -2.71112, -137.26, 11.9504, 0.22 ) }
    dend_38 { pt3dadd( -2.73757, -137.78, 12.1058, 0.22 ) }
    dend_38 { pt3dadd( -2.73705, -138.604, 12.2747, 0.22 ) }
    dend_38 { pt3dadd( -2.7423, -139.35, 12.3832, 0.74 ) }
    dend_38 { pt3dadd( -2.76507, -140.099, 12.4748, 1.18 ) }
    dend_38 { pt3dadd( -2.87368, -141.807, 12.6934, 0.66 ) }
    dend_38 { pt3dadd( -3.03207, -143.282, 12.9287, 0.37 ) }
    dend_38 { pt3dadd( -3.31548, -144.574, 13.2108, 0.66 ) }
    dend_38 { pt3dadd( -3.63047, -145.651, 13.5245, 0.66 ) }
    dend_38 { pt3dadd( -3.89232, -146.472, 13.8225, 1.25 ) }
    dend_38 { pt3dadd( -4.13643, -147.247, 14.1672, 2.06 ) }
    dend_38 { pt3dadd( -4.45593, -148.387, 14.7626, 2.21 ) }
    dend_38 { pt3dadd( -4.94781, -150.52, 15.9405, 1.03 ) }
    dend_38 { pt3dadd( -5.17419, -151.742, 16.5976, 0.59 ) }
    dend_38 { pt3dadd( -5.35378, -153.016, 17.2016, 0.37 ) }
    dend_38 { pt3dadd( -5.44682, -153.962, 17.606, 0.66 ) }
    dend_38 { pt3dadd( -5.50629, -155.111, 18.0498, 0.37 ) }
    dend_38 { pt3dadd( -5.49379, -156.355, 18.5017, 0.29 ) }
    dend_38 { pt3dadd( -5.438, -157.166, 18.7658, 0.52 ) }
    dend_38 { pt3dadd( -5.36063, -158.575, 19.2137, 0.22 ) }
    dend_38 { pt3dadd( -5.29508, -159.294, 19.5114, 0.22 ) }
    dend_38 { pt3dadd( -5.16289, -160.075, 19.9494, 0.29 ) }
    dend_38 { pt3dadd( -4.96582, -160.788, 20.4988, 0.96 ) }
    dend_38 { pt3dadd( -4.73752, -161.475, 21.1301, 1.77 ) }
    dend_38 { pt3dadd( -4.51213, -162.154, 21.7522, 1.77 ) }
    dend_38 { pt3dadd( -4.02884, -163.733, 23.0357, 0.29 ) }
    dend_38 { pt3dadd( -3.84822, -164.428, 23.4587, 0.29 ) }
    dend_38 { pt3dadd( -3.73061, -165.042, 23.7164, 0.29 ) }
    dend_38 { pt3dadd( -3.60537, -165.986, 23.9527, 0.29 ) }
    dend_38 { pt3dadd( -3.52998, -167.231, 24.1109, 0.29 ) }
    dend_38 { pt3dadd( -3.56948, -168.691, 24.1603, 0.29 ) }
    dend_38 { pt3dadd( -3.65473, -169.411, 24.1498, 0.29 ) }
    dend_38 { pt3dadd( -3.87336, -170.478, 24.1445, 0.29 ) }
    dend_38 { pt3dadd( -4.22696, -171.725, 24.196, 0.29 ) }
    dend_38 { pt3dadd( -4.66252, -173.022, 24.3414, 0.29 ) }
    dend_38 { pt3dadd( -4.96018, -173.833, 24.4746, 1.03 ) }
    dend_38 { pt3dadd( -5.33116, -174.777, 24.6698, 1.92 ) }
    dend_38 { pt3dadd( -5.95811, -176.366, 25.0326, 3.02 ) }
    dend_38 { pt3dadd( -6.64367, -178.147, 25.4786, 2.36 ) }
    dend_38 { pt3dadd( -7.4063, -180.197, 26.0324, 0.22 ) }
    dend_38 { pt3dadd( -7.6642, -180.957, 26.252, 0.22 ) }
    dend_38 { pt3dadd( -7.96522, -181.985, 26.5634, 0.22 ) }
    dend_38 { pt3dadd( -8.07754, -182.444, 26.7036, 0.52 ) }
    dend_38 { pt3dadd( -8.21885, -183.195, 26.9463, 0.96 ) }
    dend_38 { pt3dadd( -8.3973, -184.302, 27.3021, 0.44 ) }
    dend_38 { pt3dadd( -8.61121, -185.684, 27.7277, 0.22 ) }
    dend_38 { pt3dadd( -8.74486, -186.572, 27.9856, 0.37 ) }
    dend_38 { pt3dadd( -8.89632, -187.617, 28.2679, 0.81 ) }
    dend_38 { pt3dadd( -9.04646, -188.53, 28.5059, 0.96 ) }
    dend_38 { pt3dadd( -9.29525, -189.77, 28.7983, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -9.55635, -190.956, 29.0329, 0.66 ) }
    dend_38 { pt3dadd( -9.67324, -191.512, 29.1166, 0.22 ) }
    dend_38 { pt3dadd( -9.8933, -192.732, 29.2595, 0.22 ) }
    dend_38 { pt3dadd( -9.96797, -193.31, 29.3212, 0.44 ) }
    dend_38 { pt3dadd( -10.101, -194.792, 29.4858, 0.22 ) }
    dend_38 { pt3dadd( -10.1358, -195.821, 29.6286, 0.22 ) }
    dend_38 { pt3dadd( -10.1334, -197.06, 29.846, 0.29 ) }
    dend_38 { pt3dadd( -10.1335, -198.081, 30.046, 0.52 ) }
    dend_38 { pt3dadd( -10.1346, -199.139, 30.2568, 0.52 ) }
    dend_38 { pt3dadd( -10.1643, -200.259, 30.4869, 0.52 ) }
    dend_38 { pt3dadd( -10.2351, -201.317, 30.7111, 1.18 ) }
    dend_38 { pt3dadd( -10.3537, -202.295, 30.9182, 2.43 ) }
    dend_38 { pt3dadd( -10.6323, -203.969, 31.2776, 1.33 ) }
    dend_38 { pt3dadd( -10.8954, -205.324, 31.551, 0.59 ) }
    dend_38 { pt3dadd( -11.1237, -206.43, 31.7565, 0.81 ) }
    dend_38 { pt3dadd( -11.3218, -207.386, 31.9247, 0.15 ) }
    dend_38 { pt3dadd( -11.4571, -208.022, 32.0312, 0.15 ) }
    dend_38 { pt3dadd( -11.513, -208.342, 32.0857, 0.15 ) }
    dend_38 { pt3dadd( -11.5769, -208.743, 32.1682, 0.22 ) }
    dend_38 { pt3dadd( -11.7307, -209.512, 32.3501, 0.37 ) }
    dend_38 { pt3dadd( -11.9746, -210.406, 32.5402, 0.37 ) }
    dend_38 { pt3dadd( -12.331, -211.36, 32.6943, 0.22 ) }
    dend_38 { pt3dadd( -12.8288, -212.383, 32.8128, 0.22 ) }
    dend_38 { pt3dadd( -13.1836, -212.97, 32.8505, 0.22 ) }
    dend_38 { pt3dadd( -13.5789, -213.514, 32.8704, 0.74 ) }
    dend_38 { pt3dadd( -14.2188, -214.297, 32.8772, 1.77 ) }
    dend_38 { pt3dadd( -14.9854, -215.183, 32.8648, 2.21 ) }
    dend_38 { pt3dadd( -15.5522, -215.819, 32.8824, 2.21 ) }
    dend_38 { pt3dadd( -16.788, -217.187, 32.9829, 0.37 ) }
    dend_38 { pt3dadd( -17.554, -218.098, 33.0954, 0.37 ) }
    dend_38 { pt3dadd( -18.1324, -218.882, 33.2357, 0.22 ) }
    dend_38 { pt3dadd( -18.6004, -219.62, 33.4277, 0.22 ) }
    dend_38 { pt3dadd( -19.1257, -220.53, 33.7304, 0.22 ) }
    dend_38 { pt3dadd( -19.4139, -221.063, 33.9489, 0.81 ) }
    dend_38 { pt3dadd( -19.8294, -221.87, 34.3932, 1.25 ) }
    dend_38 { pt3dadd( -20.3124, -222.783, 35.0202, 0.88 ) }
    dend_38 { pt3dadd( -20.8811, -223.751, 35.7791, 0.22 ) }
    dend_38 { pt3dadd( -21.1763, -224.242, 36.1711, 0.22 ) }
    dend_38 { pt3dadd( -21.4985, -224.839, 36.5856, 0.22 ) }
    dend_38 { pt3dadd( -21.8064, -225.577, 37.036, 0.22 ) }
    dend_38 { pt3dadd( -22.0386, -226.553, 37.4798, 0.44 ) }
    dend_38 { pt3dadd( -22.155, -227.485, 37.7786, 1.47 ) }
    dend_38 { pt3dadd( -22.2562, -228.505, 38.0042, 1.47 ) }
    dend_38 { pt3dadd( -22.4062, -229.789, 38.2126, 0.44 ) }
    dend_38 { pt3dadd( -22.5605, -230.987, 38.3537, 0.96 ) }
    dend_38 { pt3dadd( -22.8453, -232.732, 38.4997, 0.22 ) }
    dend_38 { pt3dadd( -23.0206, -233.656, 38.5711, 0.22 ) }
    dend_38 { pt3dadd( -23.3496, -235.059, 38.6965, 0.22 ) }
    dend_38 { pt3dadd( -23.6611, -236.103, 38.7853, 0.22 ) }
    dend_38 { pt3dadd( -23.9353, -236.867, 38.8445, 0.22 ) }
    dend_38 { pt3dadd( -24.3158, -237.776, 38.9073, 0.22 ) }
    dend_38 { pt3dadd( -24.8631, -238.985, 39.0121, 0.22 ) }
    dend_38 { pt3dadd( -25.1852, -239.745, 39.0856, 0.81 ) }
    dend_38 { pt3dadd( -25.6409, -240.919, 39.2116, 1.77 ) }
    dend_38 { pt3dadd( -26.0539, -242.062, 39.3652, 1.18 ) }
    dend_38 { pt3dadd( -26.7861, -244.264, 39.7091, 0.22 ) }
    dend_38 { pt3dadd( -26.9971, -244.999, 39.8506, 0.22 ) }
    dend_38 { pt3dadd( -27.3124, -246.263, 40.1547, 0.88 ) }
    dend_38 { pt3dadd( -27.6321, -247.836, 40.6257, 0.15 ) }
    dend_38 { pt3dadd( -27.7635, -248.756, 40.9849, 0.15 ) }
    dend_38 { pt3dadd( -27.8056, -249.658, 41.3872, 0.29 ) }
    dend_38 { pt3dadd( -27.7438, -250.572, 41.8372, 0.74 ) }
    dend_38 { pt3dadd( -27.6585, -251.271, 42.193, 1.4 ) }
    dend_38 { pt3dadd( -27.4887, -252.317, 42.7708, 0.59 ) }
    dend_38 { pt3dadd( -27.2493, -253.705, 43.5439, 0.15 ) }
    dend_38 { pt3dadd( -27.076, -254.765, 44.1079, 0.15 ) }
    dend_38 { pt3dadd( -26.9165, -255.723, 44.5977, 0.15 ) }
    dend_38 { pt3dadd( -26.744, -256.605, 44.9972, 0.29 ) }
    dend_38 { pt3dadd( -26.487, -257.71, 45.476, 0.96 ) }
    dend_38 { pt3dadd( -26.1858, -258.927, 45.9944, 0.44 ) }
    dend_38 { pt3dadd( -25.941, -259.909, 46.4184, 0.22 ) }
    dend_38 { pt3dadd( -25.641, -261.092, 46.979, 0.22 ) }
    dend_38 { pt3dadd( -25.3192, -262.226, 47.5343, 0.15 ) }
    dend_38 { pt3dadd( -25.0189, -263.194, 47.9902, 0.15 ) }
    dend_38 { pt3dadd( -24.8199, -263.847, 48.2822, 0.15 ) }
    dend_38 { pt3dadd( -24.6585, -264.499, 48.5463, 0.29 ) }
    dend_38 { pt3dadd( -24.483, -265.658, 48.9427, 0.44 ) }
    dend_38 { pt3dadd( -24.4168, -266.798, 49.2638, 0.44 ) }
    dend_38 { pt3dadd( -24.4374, -268.375, 49.6558, 0.44 ) }
    dend_38 { pt3dadd( -24.5155, -269.68, 49.9029, 0.44 ) }
    dend_38 { pt3dadd( -24.6714, -271.283, 50.1461, 0.88 ) }
    dend_38 { pt3dadd( -24.8657, -272.532, 50.2985, 1.03 ) }
    dend_38 { pt3dadd( -25.1396, -273.728, 50.4255, 0.37 ) }
    dend_38 { pt3dadd( -25.4658, -274.725, 50.5401, 0.15 ) }
    dend_38 { pt3dadd( -25.8921, -275.688, 50.6851, 0.15 ) }
    dend_38 { pt3dadd( -26.3442, -276.507, 50.8377, 0.37 ) }
    dend_38 { pt3dadd( -27.0181, -277.523, 51.0709, 0.22 ) }
    dend_38 { pt3dadd( -27.581, -278.243, 51.2632, 0.81 ) }
    dend_38 { pt3dadd( -28.5997, -279.351, 51.5983, 1.25 ) }
    dend_38 { pt3dadd( -29.8574, -280.498, 51.9887, 0.88 ) }
    dend_38 { pt3dadd( -30.7133, -281.17, 52.2355, 0.22 ) }
    dend_38 { pt3dadd( -31.5813, -281.787, 52.4408, 0.22 ) }
    dend_38 { pt3dadd( -32.4537, -282.386, 52.5977, 0.74 ) }
    dend_38 { pt3dadd( -33.6646, -283.262, 52.729, 1.47 ) }
    dend_38 { pt3dadd( -34.6343, -284.031, 52.7527, 0.37 ) }
    dend_38 { pt3dadd( -36.0557, -285.306, 52.6261, 0.22 ) }
    dend_38 { pt3dadd( -36.9995, -286.304, 52.4097, 0.29 ) }
    dend_38 { pt3dadd( -37.7453, -287.284, 52.1131, 0.29 ) }
    dend_38 { pt3dadd( -38.2599, -288.221, 51.7641, 0.29 ) }
    dend_38 { pt3dadd( -38.636, -289.258, 51.3389, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -38.9466, -290.635, 50.8014, 0.22 ) }
    dend_38 { pt3dadd( -39.1213, -292.186, 50.2545, 0.22 ) }
    dend_38 { pt3dadd( -39.1566, -292.943, 50.0212, 0.22 ) }
    dend_38 { pt3dadd( -39.1581, -294.102, 49.7625, 0.37 ) }
    dend_38 { pt3dadd( -39.1513, -294.977, 49.6505, 0.59 ) }
    dend_38 { pt3dadd( -39.191, -297.066, 49.5388, 0.66 ) }
    dend_38 { pt3dadd( -39.2703, -298.507, 49.5618, 0.88 ) }
    dend_38 { pt3dadd( -39.3505, -299.475, 49.6703, 0.88 ) }
    dend_38 { pt3dadd( -39.5503, -301.213, 49.9552, 0.52 ) }
    dend_38 { pt3dadd( -39.8051, -303.096, 50.3355, 0.22 ) }
    dend_38 { pt3dadd( -40.0379, -304.986, 50.8052, 0.22 ) }
    dend_38 { pt3dadd( -40.1266, -305.759, 51.0352, 0.81 ) }
    dend_38 { pt3dadd( -40.3722, -307.814, 51.702, 1.25 ) }
    dend_38 { pt3dadd( -40.4848, -308.994, 52.086, 1.03 ) }
    dend_38 { pt3dadd( -40.5372, -309.756, 52.3254, 1.03 ) }
    dend_38 { pt3dadd( -40.5929, -311.628, 52.9354, 0.22 ) }
    dend_38 { pt3dadd( -40.5944, -313.011, 53.3832, 0.22 ) }
    dend_38 { pt3dadd( -40.6189, -313.943, 53.6604, 0.22 ) }
    dend_38 { pt3dadd( -40.7312, -315.458, 54.0496, 0.22 ) }
    dend_38 { pt3dadd( -40.8617, -316.322, 54.2706, 0.22 ) }
    dend_38 { pt3dadd( -41.2491, -317.911, 54.6495, 0.22 ) }
    dend_38 { pt3dadd( -41.6596, -318.969, 54.8747, 0.74 ) }
    dend_38 { pt3dadd( -42.1592, -319.981, 55.0578, 1.11 ) }
    dend_38 { pt3dadd( -42.5993, -320.731, 55.1394, 1.11 ) }
    dend_38 { pt3dadd( -43.5871, -322.152, 55.1759, 0.74 ) }
    dend_38 { pt3dadd( -44.3637, -323.174, 55.0781, 1.4 ) }
    dend_38 { pt3dadd( -45.6076, -324.732, 54.7307, 0.66 ) }
    dend_38 { pt3dadd( -46.4624, -325.82, 54.3936, 0.07 ) }
    dend_38 { pt3dadd( -47.5014, -327.205, 53.9042, 0.07 ) }
    dend_38 { pt3dadd( -48.182, -328.146, 53.5517, 0.22 ) }
    dend_38 { pt3dadd( -48.9178, -329.263, 53.1356, 0.22 ) }
    dend_38 { pt3dadd( -49.4055, -330.056, 52.8696, 0.44 ) }
    dend_38 { pt3dadd( -49.982, -331.1, 52.5846, 0.44 ) }
    dend_38 { pt3dadd( -50.7254, -332.51, 52.4147, 0.44 ) }
    dend_38 { pt3dadd( -51.1917, -333.43, 52.4704, 0.22 ) }
    dend_38 { pt3dadd( -51.8276, -334.722, 52.7198, 0.15 ) }
    dend_38 { pt3dadd( -52.2195, -335.442, 52.9701, 0.37 ) }
    dend_38 { pt3dadd( -52.5102, -335.887, 53.2017, 0.37 ) }
    dend_38 { pt3dadd( -53.2734, -336.932, 53.9026, 0.15 ) }
    dend_38 { pt3dadd( -54.0007, -337.825, 54.623, 0.15 ) }
    dend_38 { pt3dadd( -54.2436, -338.089, 54.8611, 0.52 ) }
    dend_38 { pt3dadd( -54.9465, -338.692, 55.478, 1.03 ) }
    dend_38 { pt3dadd( -55.9317, -339.431, 56.2462, 0.15 ) }
    dend_38 { pt3dadd( -56.6816, -339.932, 56.7376, 0.15 ) }
    dend_38 { pt3dadd( -57.4329, -340.404, 57.1202, 0.15 ) }
    dend_38 { pt3dadd( -57.9296, -340.735, 57.3193, 0.59 ) }
    dend_38 { pt3dadd( -59.0138, -341.538, 57.6843, 0.15 ) }
    dend_38 { pt3dadd( -59.3726, -341.824, 57.782, 0.15 ) }
    dend_38 { pt3dadd( -59.9325, -342.338, 57.9078, 0.66 ) }
    dend_38 { pt3dadd( -60.4066, -342.828, 58.01, 0.81 ) }
    dend_38 { pt3dadd( -61.6961, -344.349, 58.283, 0.15 ) }
    dend_38 { pt3dadd( -62.6971, -345.668, 58.4925, 0.15 ) }
    dend_38 { pt3dadd( -63.5491, -346.918, 58.6682, 0.29 ) }
    dend_38 { pt3dadd( -64.7139, -348.714, 58.9045, 0.22 ) }
    dend_38 { pt3dadd( -65.7112, -350.338, 59.1065, 0.15 ) }
    dend_38 { pt3dadd( -66.1156, -351.004, 59.1884, 0.66 ) }
    dend_38 { pt3dadd( -66.7752, -352.029, 59.296, 0.81 ) }
    dend_38 { pt3dadd( -67.6255, -353.202, 59.4003, 0.44 ) }
    dend_38 { pt3dadd( -68.1532, -353.897, 59.4572, 1.03 ) }
    dend_38 { pt3dadd( -68.7353, -354.562, 59.5111, 1.25 ) }
    dend_38 { pt3dadd( -70.3485, -356.218, 59.6306, 0.52 ) }
    dend_38 { pt3dadd( -71.6204, -357.39, 59.7065, 0.22 ) }
    dend_38 { pt3dadd( -72.4462, -358.047, 59.7373, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.32515, 32.3417, -0.397971, 0.96 ) }
    dend_24 { pt3dadd( 9.84315, 33.5204, -1.04773, 0.96 ) }
    dend_24 { pt3dadd( 10.5825, 34.0908, -1.36137, 1.03 ) }
    dend_24 { pt3dadd( 11.5418, 34.8135, -1.62137, 1.03 ) }
    dend_24 { pt3dadd( 12.392, 35.454, -1.85178, 1.62 ) }
    dend_24 { pt3dadd( 13.2158, 36.0746, -2.07504, 1.33 ) }
    dend_24 { pt3dadd( 14.3725, 36.946, -2.38853, 1.03 ) }
    dend_24 { pt3dadd( 15.2487, 37.6104, -2.59489, 0.96 ) }
    dend_24 { pt3dadd( 16.9298, 38.8752, -2.90941, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 8.32515, 32.3417, -0.397971, 0.88 ) }
    dend_21 { pt3dadd( 9.16148, 34.1888, -0.632321, 0.88 ) }
    dend_21 { pt3dadd( 10.1812, 36.0309, -0.89676, 0.81 ) }
    dend_21 { pt3dadd( 10.6725, 36.891, -1.0659, 0.66 ) }
    dend_21 { pt3dadd( 11.1548, 37.7839, -1.2758, 1.11 ) }
    dend_21 { pt3dadd( 11.735, 38.9924, -1.58021, 0.74 ) }
    dend_21 { pt3dadd( 12.1171, 39.8913, -1.82248, 0.52 ) }
    dend_21 { pt3dadd( 12.5852, 41.1521, -2.28979, 0.22 ) }
    dend_21 { pt3dadd( 12.7318, 42.1617, -2.65573, 0.29 ) }
    dend_21 { pt3dadd( 12.5814, 42.8777, -2.92965, 0.29 ) }
    dend_21 { pt3dadd( 12.1738, 43.6342, -3.26215, 0.66 ) }
    dend_21 { pt3dadd( 11.8675, 44.0174, -3.45978, 0.66 ) }
    dend_21 { pt3dadd( 10.9995, 44.9234, -3.92617, 0.81 ) }
    dend_21 { pt3dadd( 9.88267, 46.0634, -4.51668, 1.18 ) }
    dend_21 { pt3dadd( 9.04766, 47.0179, -5.00172, 1.03 ) }
    dend_21 { pt3dadd( 8.22945, 48.1425, -5.58462, 0.81 ) }
    dend_21 { pt3dadd( 7.54498, 49.335, -6.20942, 1.11 ) }
    dend_21 { pt3dadd( 6.82579, 50.966, -7.06747, 0.88 ) }
    dend_21 { pt3dadd( 6.38049, 52.3264, -7.79845, 0.66 ) }
    dend_21 { pt3dadd( 6.08567, 53.5805, -8.45594, 0.66 ) }
    dend_21 { pt3dadd( 5.8661, 54.6378, -8.94099, 0.66 ) }
    dend_21 { pt3dadd( 5.65832, 55.6023, -9.32104, 0.66 ) }
    dend_21 { pt3dadd( 5.3877, 56.7544, -9.75355, 0.81 ) }
    dend_21 { pt3dadd( 5.14942, 57.6345, -10.106, 1.18 ) }
    dend_21 { pt3dadd( 4.85096, 58.6041, -10.4812, 1.18 ) }
    dend_21 { pt3dadd( 4.18904, 60.7534, -11.2409, 0.52 ) }
    dend_21 { pt3dadd( 3.79604, 61.8887, -11.6296, 0.52 ) }
    dend_21 { pt3dadd( 3.49871, 62.7871, -11.9285, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 3.33323, 63.4336, -12.1282, 1.03 ) }
    dend_21 { pt3dadd( 3.17894, 64.6011, -12.4894, 1.03 ) }
    dend_21 { pt3dadd( 3.27559, 66.018, -12.9784, 0.66 ) }
    dend_21 { pt3dadd( 2.55465, 77.2842, -18.1696, 0.66 ) }
    dend_21 { pt3dadd( 1.47902, 88.9935, -22.1198, 0.66 ) }
    dend_21 { pt3dadd( -2.24285, 100.296, -25.6888, 0.66 ) }
    dend_21 { pt3dadd( -6.84298, 111.363, -29.0046, 0.66 ) }
    dend_21 { pt3dadd( -11.7166, 121.936, -33.438, 0.66 ) }
    dend_21 { pt3dadd( -18.7059, 131.755, -36.7111, 0.66 ) }
    dend_21 { pt3dadd( -25.2519, 141.195, -41.6513, 0.66 ) }
    dend_21 { pt3dadd( -30.7418, 151.004, -47.0949, 0.66 ) }
    dend_21 { pt3dadd( -36.7343, 161.296, -50.7908, 0.66 ) }
    dend_21 { pt3dadd( -43.1895, 170.626, -56.0595, 0.66 ) }
    dend_21 { pt3dadd( -47.4531, 180.168, -62.9166, 0.66 ) }
    dend_21 { pt3dadd( -52.2998, 189.866, -69.1272, 0.66 ) }
    dend_21 { pt3dadd( -57.3699, 199.373, -75.4688, 0.66 ) }
    dend_21 { pt3dadd( -62.3776, 208.421, -82.5254, 0.66 ) }
    dend_21 { pt3dadd( -68.5146, 216.228, -90.2204, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.342326, 34.2613, 4.1799, 0.96 ) }
    dend_13 { pt3dadd( -0.933339, 34.6596, 4.02189, 0.96 ) }
    dend_13 { pt3dadd( -1.51387, 34.9078, 3.91165, 0.66 ) }
    dend_13 { pt3dadd( -2.35479, 34.9967, 3.82578, 0.52 ) }
    dend_13 { pt3dadd( -2.70996, 34.8362, 3.84666, 0.52 ) }
    dend_13 { pt3dadd( -3.20754, 34.2794, 3.96065, 0.52 ) }
    dend_13 { pt3dadd( -3.46032, 33.9726, 4.03272, 0.88 ) }
    dend_13 { pt3dadd( -3.99902, 33.243, 4.22602, 1.11 ) }
    dend_13 { pt3dadd( -4.49703, 32.5776, 4.4112, 1.25 ) }
    dend_13 { pt3dadd( -4.91911, 32.0724, 4.54266, 1.25 ) }
    dend_13 { pt3dadd( -5.79598, 31.1685, 4.73502, 0.66 ) }
    dend_13 { pt3dadd( -6.30008, 30.7184, 4.80436, 0.96 ) }
    dend_13 { pt3dadd( -6.85731, 30.2991, 4.85707, 1.33 ) }
    dend_13 { pt3dadd( -7.58675, 29.8403, 4.90566, 1.33 ) }
    dend_13 { pt3dadd( -8.70053, 29.2443, 4.9703, 1.33 ) }
    dend_13 { pt3dadd( -9.93155, 28.6433, 5.0596, 0.88 ) }
    dend_13 { pt3dadd( -10.6725, 28.3107, 5.10514, 0.88 ) }
    dend_13 { pt3dadd( -11.5135, 27.9273, 5.15268, 1.4 ) }
    dend_13 { pt3dadd( -12.0599, 27.668, 5.19118, 1.55 ) }
    dend_13 { pt3dadd( -12.9112, 27.2414, 5.27705, 2.06 ) }
    dend_13 { pt3dadd( -13.5824, 26.8663, 5.41598, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.342326, 34.2613, 4.1799, 0.74 ) }
    dend_12 { pt3dadd( -0.59426, 33.2636, 3.97794, 0.74 ) }
    dend_12 { pt3dadd( -0.964726, 31.9978, 3.75977, 0.52 ) }
    dend_12 { pt3dadd( -1.31218, 30.8958, 3.60395, 0.88 ) }
    dend_12 { pt3dadd( -1.71117, 29.7287, 3.51232, 0.44 ) }
    dend_12 { pt3dadd( -1.98745, 28.9813, 3.49134, 0.44 ) }
    dend_12 { pt3dadd( -2.20649, 28.4207, 3.49309, 0.37 ) }
    dend_12 { pt3dadd( -2.62828, 27.4245, 3.5644, 0.88 ) }
    dend_12 { pt3dadd( -3.04418, 26.3852, 3.71884, 0.44 ) }
    dend_12 { pt3dadd( -3.4652, 25.241, 3.92993, 0.44 ) }
    dend_12 { pt3dadd( -3.71518, 24.4187, 4.08873, 0.74 ) }
    dend_12 { pt3dadd( -3.88008, 23.7703, 4.22216, 1.11 ) }
    dend_12 { pt3dadd( -4.1845, 22.3574, 4.54545, 0.96 ) }
    dend_12 { pt3dadd( -4.41644, 21.0463, 4.90176, 1.18 ) }
    dend_12 { pt3dadd( -4.59155, 19.9284, 5.26249, 1.18 ) }
    dend_12 { pt3dadd( -4.78789, 18.6588, 5.72267, 0.88 ) }
    dend_12 { pt3dadd( -4.95477, 17.6113, 6.15076, 0.66 ) }
    dend_12 { pt3dadd( -5.10421, 16.7631, 6.54786, 0.66 ) }
    dend_12 { pt3dadd( -5.26961, 15.8625, 7.00003, 0.66 ) }
    dend_12 { pt3dadd( -5.46678, 14.8349, 7.53605, 0.66 ) }
    dend_12 { pt3dadd( -5.67914, 13.6598, 8.13524, 0.66 ) }
    dend_12 { pt3dadd( -5.9636, 11.9953, 8.86271, 0.52 ) }
    dend_12 { pt3dadd( -6.0932, 11.0906, 9.18029, 0.52 ) }
    dend_12 { pt3dadd( -6.2622, 9.51613, 9.60211, 0.52 ) }
    dend_12 { pt3dadd( -6.34124, 8.42297, 9.79995, 0.52 ) }
    dend_12 { pt3dadd( -6.38332, 7.30002, 9.93062, 0.52 ) }
    dend_12 { pt3dadd( -6.41235, 5.84312, 10.0514, 0.96 ) }
    dend_12 { pt3dadd( -6.44417, 5.10155, 10.0913, 1.11 ) }
    dend_12 { pt3dadd( -6.50007, 4.34061, 10.1186, 1.11 ) }
    dend_12 { pt3dadd( -6.70745, 2.46362, 10.1851, 0.44 ) }
    dend_12 { pt3dadd( -6.83548, 1.57437, 10.2044, 0.44 ) }
    dend_12 { pt3dadd( -7.15365, -0.0136558, 10.2437, 0.66 ) }
    dend_12 { pt3dadd( -7.42021, -1.09444, 10.2648, 0.52 ) }
    dend_12 { pt3dadd( -7.57969, -1.6538, 10.2559, 0.88 ) }
    dend_12 { pt3dadd( -7.73184, -2.14494, 10.2329, 1.33 ) }
    dend_12 { pt3dadd( -8.05775, -3.24109, 10.1452, 0.96 ) }
    dend_12 { pt3dadd( -8.46556, -4.81534, 9.99323, 0.59 ) }
    dend_12 { pt3dadd( -8.69736, -5.94015, 9.86447, 0.59 ) }
    dend_12 { pt3dadd( -8.8084, -6.6695, 9.78938, 0.96 ) }
    dend_12 { pt3dadd( -8.92806, -7.69128, 9.70303, 0.52 ) }
    dend_12 { pt3dadd( -9.0449, -9.07384, 9.62646, 0.22 ) }
    dend_12 { pt3dadd( -9.10343, -9.95981, 9.60974, 0.29 ) }
    dend_12 { pt3dadd( -9.17489, -10.7498, 9.60623, 0.29 ) }
    dend_12 { pt3dadd( -9.26368, -11.3542, 9.61216, 1.03 ) }
    dend_12 { pt3dadd( -9.44736, -12.2674, 9.6196, 1.84 ) }
    dend_12 { pt3dadd( -9.81895, -13.6044, 9.62613, 0.74 ) }
    dend_12 { pt3dadd( -10.3251, -14.984, 9.63147, 0.29 ) }
    dend_12 { pt3dadd( -10.9467, -16.2437, 9.63228, 0.29 ) }
    dend_12 { pt3dadd( -11.3467, -16.9146, 9.63323, 0.29 ) }
    dend_12 { pt3dadd( -11.6358, -17.3588, 9.63337, 0.88 ) }
    dend_12 { pt3dadd( -12.0328, -17.9462, 9.63557, 1.47 ) }
    dend_12 { pt3dadd( -12.4554, -18.5969, 9.63311, 0.88 ) }
    dend_12 { pt3dadd( -13.3931, -20.2491, 9.62493, 0.22 ) }
    dend_12 { pt3dadd( -13.6822, -20.8856, 9.62206, 0.15 ) }
    dend_12 { pt3dadd( -13.9827, -21.6881, 9.63252, 0.37 ) }
    dend_12 { pt3dadd( -14.2412, -22.4086, 9.65408, 0.22 ) }
    dend_12 { pt3dadd( -14.6527, -23.4859, 9.69993, 0.22 ) }
    dend_12 { pt3dadd( -15.0464, -24.3783, 9.74332, 0.52 ) }
    dend_12 { pt3dadd( -15.31, -24.8752, 9.77347, 0.96 ) }
    dend_12 { pt3dadd( -15.9477, -25.7839, 9.83244, 1.62 ) }
    dend_12 { pt3dadd( -16.8514, -26.8127, 9.8968, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -17.8863, -27.8429, 9.97155, 0.59 ) }
    dend_12 { pt3dadd( -18.7086, -28.5954, 10.0402, 0.88 ) }
    dend_12 { pt3dadd( -19.4942, -29.3085, 10.1056, 1.55 ) }
    dend_12 { pt3dadd( -20.1788, -29.9408, 10.1597, 1.55 ) }
    dend_12 { pt3dadd( -21.1882, -30.9534, 10.2297, 0.37 ) }
    dend_12 { pt3dadd( -22.0105, -31.8875, 10.3146, 0.22 ) }
    dend_12 { pt3dadd( -22.4729, -32.4695, 10.3767, 0.44 ) }
    dend_12 { pt3dadd( -23.1126, -33.3536, 10.4773, 1.11 ) }
    dend_12 { pt3dadd( -23.4028, -33.8188, 10.5268, 1.11 ) }
    dend_12 { pt3dadd( -23.9881, -34.8949, 10.642, 0.44 ) }
    dend_12 { pt3dadd( -24.4493, -35.8615, 10.7186, 0.22 ) }
    dend_12 { pt3dadd( -24.8161, -36.7604, 10.7547, 0.29 ) }
    dend_12 { pt3dadd( -25.0251, -37.3126, 10.749, 0.15 ) }
    dend_12 { pt3dadd( -25.3654, -38.2492, 10.7058, 0.29 ) }
    dend_12 { pt3dadd( -25.4984, -38.624, 10.6796, 0.96 ) }
    dend_12 { pt3dadd( -25.8118, -39.5043, 10.5973, 1.62 ) }
    dend_12 { pt3dadd( -26.3175, -40.9963, 10.4384, 2.06 ) }
    dend_12 { pt3dadd( -26.7965, -42.4553, 10.3021, 1.4 ) }
    dend_12 { pt3dadd( -27.0261, -43.1596, 10.249, 0.59 ) }
    dend_12 { pt3dadd( -27.389, -44.2608, 10.1916, 0.22 ) }
    dend_12 { pt3dadd( -27.6107, -44.9983, 10.1714, 0.22 ) }
    dend_12 { pt3dadd( -27.8123, -45.7406, 10.1742, 0.66 ) }
    dend_12 { pt3dadd( -28.0111, -46.5588, 10.1918, 0.74 ) }
    dend_12 { pt3dadd( -28.207, -47.4357, 10.2294, 0.22 ) }
    dend_12 { pt3dadd( -28.442, -48.4168, 10.2898, 0.15 ) }
    dend_12 { pt3dadd( -28.6493, -49.2219, 10.3666, 0.22 ) }
    dend_12 { pt3dadd( -28.7885, -49.7848, 10.4362, 0.66 ) }
    dend_12 { pt3dadd( -28.9687, -50.488, 10.5407, 1.25 ) }
    dend_12 { pt3dadd( -29.2404, -51.4554, 10.6989, 1.47 ) }
    dend_12 { pt3dadd( -29.6128, -52.6147, 10.8936, 0.88 ) }
    dend_12 { pt3dadd( -29.9785, -53.5996, 11.0526, 0.22 ) }
    dend_12 { pt3dadd( -30.2673, -54.2782, 11.1527, 0.22 ) }
    dend_12 { pt3dadd( -30.5745, -54.9318, 11.2369, 0.22 ) }
    dend_12 { pt3dadd( -31.1117, -55.9583, 11.3424, 0.37 ) }
    dend_12 { pt3dadd( -31.6125, -56.8401, 11.3991, 0.37 ) }
    dend_12 { pt3dadd( -32.1613, -57.7694, 11.4348, 0.52 ) }
    dend_12 { pt3dadd( -32.4932, -58.3281, 11.4523, 0.22 ) }
    dend_12 { pt3dadd( -32.8026, -58.8713, 11.4759, 0.37 ) }
    dend_12 { pt3dadd( -33.0699, -59.4227, 11.5097, 0.74 ) }
    dend_12 { pt3dadd( -33.4253, -60.4043, 11.5958, 0.22 ) }
    dend_12 { pt3dadd( -33.6949, -61.4616, 11.7058, 0.22 ) }
    dend_12 { pt3dadd( -33.8603, -62.313, 11.7903, 0.29 ) }
    dend_12 { pt3dadd( -33.9823, -62.947, 11.8448, 0.52 ) }
    dend_12 { pt3dadd( -34.1593, -63.8606, 11.9122, 1.11 ) }
    dend_12 { pt3dadd( -34.3163, -64.6678, 11.9615, 1.7 ) }
    dend_12 { pt3dadd( -34.5444, -65.7856, 12.0094, 1.33 ) }
    dend_12 { pt3dadd( -34.7972, -67.0554, 12.0384, 0.22 ) }
    dend_12 { pt3dadd( -34.9681, -68.0621, 12.0656, 0.22 ) }
    dend_12 { pt3dadd( -35.0225, -68.4104, 12.0759, 0.22 ) }
    dend_12 { pt3dadd( -35.0822, -68.8165, 12.0897, 0.29 ) }
    dend_12 { pt3dadd( -35.1715, -69.4445, 12.1147, 0.52 ) }
    dend_12 { pt3dadd( -35.277, -70.2537, 12.1551, 0.22 ) }
    dend_12 { pt3dadd( -35.3896, -70.928, 12.1931, 0.22 ) }
    dend_12 { pt3dadd( -35.5314, -71.4899, 12.2169, 0.22 ) }
    dend_12 { pt3dadd( -35.7726, -72.0704, 12.2259, 0.81 ) }
    dend_12 { pt3dadd( -36.0619, -72.5432, 12.2176, 1.47 ) }
    dend_12 { pt3dadd( -36.3316, -72.8937, 12.2022, 1.47 ) }
    dend_12 { pt3dadd( -37.0428, -73.714, 12.1523, 0.22 ) }
    dend_12 { pt3dadd( -37.4385, -74.1598, 12.1233, 0.22 ) }
    dend_12 { pt3dadd( -37.9069, -74.7265, 12.0916, 0.37 ) }
    dend_12 { pt3dadd( -38.4804, -75.4885, 12.0571, 0.44 ) }
    dend_12 { pt3dadd( -38.8556, -76.0252, 12.0376, 0.22 ) }
    dend_12 { pt3dadd( -39.0022, -76.26, 12.027, 0.22 ) }
    dend_12 { pt3dadd( -39.176, -76.5672, 12.0107, 0.22 ) }
    dend_12 { pt3dadd( -39.5008, -77.1735, 11.9768, 0.22 ) }
    dend_12 { pt3dadd( -39.7622, -77.662, 11.9481, 0.74 ) }
    dend_12 { pt3dadd( -40.0819, -78.2648, 11.9134, 1.47 ) }
    dend_12 { pt3dadd( -40.5836, -79.1189, 11.8707, 1.99 ) }
    dend_12 { pt3dadd( -41.1009, -79.8926, 11.8513, 1.77 ) }
    dend_12 { pt3dadd( -42.0042, -81.0792, 11.8436, 0.66 ) }
    dend_12 { pt3dadd( -42.5423, -81.7083, 11.8501, 0.15 ) }
    dend_12 { pt3dadd( -43.1175, -82.3354, 11.8606, 0.15 ) }
    dend_12 { pt3dadd( -43.7355, -83.0013, 11.8723, 0.22 ) }
    dend_12 { pt3dadd( -44.2782, -83.5591, 11.8796, 0.22 ) }
    dend_12 { pt3dadd( -44.8361, -84.1325, 11.8559, 0.29 ) }
    dend_12 { pt3dadd( -45.3001, -84.6328, 11.8055, 0.81 ) }
    dend_12 { pt3dadd( -45.9044, -85.3619, 11.6943, 1.47 ) }
    dend_12 { pt3dadd( -46.5486, -86.2649, 11.5061, 0.52 ) }
    dend_12 { pt3dadd( -47.0536, -87.196, 11.2779, 0.22 ) }
    dend_12 { pt3dadd( -47.3599, -87.9507, 11.0844, 0.22 ) }
    dend_12 { pt3dadd( -47.5432, -88.5759, 10.945, 0.22 ) }
    dend_12 { pt3dadd( -47.6088, -88.8984, 10.8798, 0.22 ) }
    dend_12 { pt3dadd( -47.6815, -89.4298, 10.784, 0.29 ) }
    dend_12 { pt3dadd( -47.7656, -90.238, 10.645, 0.74 ) }
    dend_12 { pt3dadd( -47.8266, -90.8494, 10.5359, 1.03 ) }
    dend_12 { pt3dadd( -48.0212, -92.1411, 10.3059, 0.37 ) }
    dend_12 { pt3dadd( -48.2015, -93.0182, 10.1456, 0.88 ) }
    dend_12 { pt3dadd( -48.4031, -93.8576, 9.99304, 1.18 ) }
    dend_12 { pt3dadd( -48.6002, -94.6185, 9.85674, 1.18 ) }
    dend_12 { pt3dadd( -48.9789, -96.0179, 9.6359, 0.29 ) }
    dend_12 { pt3dadd( -49.3456, -97.2198, 9.46912, 0.29 ) }
    dend_12 { pt3dadd( -49.6289, -98.0403, 9.37968, 0.37 ) }
    dend_12 { pt3dadd( -49.8541, -98.6104, 9.34357, 0.88 ) }
    dend_12 { pt3dadd( -50.0958, -99.1887, 9.33417, 0.66 ) }
    dend_12 { pt3dadd( -50.4022, -99.9776, 9.3678, 0.22 ) }
    dend_12 { pt3dadd( -50.6208, -100.619, 9.43385, 0.22 ) }
    dend_12 { pt3dadd( -50.8152, -101.33, 9.5232, 0.37 ) }
    dend_12 { pt3dadd( -50.9297, -101.836, 9.59707, 0.66 ) }
    dend_12 { pt3dadd( -51.0966, -102.634, 9.72721, 1.11 ) }
    dend_12 { pt3dadd( -51.299, -103.583, 9.88821, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -51.4445, -104.181, 9.98783, 0.29 ) }
    dend_12 { pt3dadd( -51.662, -105.01, 10.1348, 0.22 ) }
    dend_12 { pt3dadd( -51.818, -105.574, 10.222, 0.29 ) }
    dend_12 { pt3dadd( -52.0858, -106.567, 10.3277, 0.96 ) }
    dend_12 { pt3dadd( -52.2745, -107.277, 10.3646, 1.03 ) }
    dend_12 { pt3dadd( -52.5754, -108.505, 10.3685, 0.81 ) }
    dend_12 { pt3dadd( -52.7833, -109.495, 10.3283, 0.29 ) }
    dend_12 { pt3dadd( -52.9556, -110.317, 10.262, 0.22 ) }
    dend_12 { pt3dadd( -53.1378, -111.18, 10.1663, 0.29 ) }
    dend_12 { pt3dadd( -53.2961, -111.933, 10.0621, 0.74 ) }
    dend_12 { pt3dadd( -53.4332, -112.596, 9.96689, 0.52 ) }
    dend_12 { pt3dadd( -53.7653, -114.047, 9.7612, 0.29 ) }
    dend_12 { pt3dadd( -54.1485, -115.39, 9.59974, 0.29 ) }
    dend_12 { pt3dadd( -54.5914, -116.605, 9.51519, 0.29 ) }
    dend_12 { pt3dadd( -54.8721, -117.259, 9.491, 0.29 ) }
    dend_12 { pt3dadd( -55.1728, -117.891, 9.47471, 1.03 ) }
    dend_12 { pt3dadd( -55.4809, -118.502, 9.45776, 1.7 ) }
    dend_12 { pt3dadd( -56.025, -119.57, 9.43383, 1.4 ) }
    dend_12 { pt3dadd( -56.8458, -121.171, 9.41324, 0.44 ) }
    dend_12 { pt3dadd( -57.3348, -122.078, 9.41958, 0.15 ) }
    dend_12 { pt3dadd( -57.5547, -122.476, 9.4256, 0.37 ) }
    dend_12 { pt3dadd( -57.9071, -123.111, 9.42655, 0.59 ) }
    dend_12 { pt3dadd( -58.2383, -123.737, 9.41267, 0.59 ) }
    dend_12 { pt3dadd( -58.8376, -124.918, 9.34684, 0.22 ) }
    dend_12 { pt3dadd( -59.2946, -125.799, 9.26526, 0.22 ) }
    dend_12 { pt3dadd( -59.6417, -126.449, 9.20119, 0.22 ) }
    dend_12 { pt3dadd( -59.9138, -126.971, 9.14684, 0.88 ) }
    dend_12 { pt3dadd( -60.1772, -127.498, 9.1152, 1.47 ) }
    dend_12 { pt3dadd( -60.5473, -128.277, 9.08555, 1.84 ) }
    dend_12 { pt3dadd( -61.583, -130.571, 9.04834, 0.22 ) }
    dend_12 { pt3dadd( -61.7354, -130.929, 9.042, 0.22 ) }
    dend_12 { pt3dadd( -61.936, -131.407, 9.04029, 0.22 ) }
    dend_12 { pt3dadd( -62.4038, -132.467, 9.02718, 0.22 ) }
    dend_12 { pt3dadd( -62.7294, -133.134, 9.00773, 0.22 ) }
    dend_12 { pt3dadd( -63.0048, -133.647, 8.9737, 0.74 ) }
    dend_12 { pt3dadd( -63.5088, -134.556, 8.86395, 1.33 ) }
    dend_12 { pt3dadd( -64.159, -135.648, 8.69424, 0.22 ) }
    dend_12 { pt3dadd( -64.5504, -136.265, 8.57753, 0.22 ) }
    dend_12 { pt3dadd( -64.9859, -136.957, 8.45575, 0.22 ) }
    dend_12 { pt3dadd( -65.3044, -137.516, 8.41809, 0.15 ) }
    dend_12 { pt3dadd( -65.5312, -137.967, 8.43899, 0.15 ) }
    dend_12 { pt3dadd( -65.8548, -138.615, 8.54825, 0.37 ) }
    dend_12 { pt3dadd( -66.0101, -138.935, 8.63132, 0.96 ) }
    dend_12 { pt3dadd( -66.5936, -140.127, 9.019, 2.14 ) }
    dend_12 { pt3dadd( -67.3017, -141.508, 9.52714, 0.66 ) }
    dend_12 { pt3dadd( -67.8459, -142.455, 9.91847, 0.15 ) }
    dend_12 { pt3dadd( -68.3773, -143.251, 10.2885, 0.15 ) }
    dend_12 { pt3dadd( -68.7245, -143.712, 10.5251, 0.44 ) }
    dend_12 { pt3dadd( -69.067, -144.133, 10.7518, 1.03 ) }
    dend_12 { pt3dadd( -69.644, -144.815, 11.1189, 1.55 ) }
    dend_12 { pt3dadd( -70.3609, -145.657, 11.5902, 0.44 ) }
    dend_12 { pt3dadd( -70.8226, -146.254, 11.8786, 0.22 ) }
    dend_12 { pt3dadd( -71.14, -146.733, 12.0715, 0.22 ) }
    dend_12 { pt3dadd( -71.5971, -147.486, 12.3252, 0.22 ) }
    dend_12 { pt3dadd( -72.0112, -148.209, 12.5206, 0.29 ) }
    dend_12 { pt3dadd( -72.4688, -149.048, 12.6823, 0.29 ) }
    dend_12 { pt3dadd( -73.0284, -150.11, 12.8091, 0.15 ) }
    dend_12 { pt3dadd( -73.4454, -150.899, 12.859, 0.22 ) }
    dend_12 { pt3dadd( -73.8827, -151.716, 12.8423, 0.88 ) }
    dend_12 { pt3dadd( -74.5025, -152.866, 12.7187, 0.74 ) }
    dend_12 { pt3dadd( -74.9125, -153.609, 12.5758, 0.88 ) }
    dend_12 { pt3dadd( -75.3272, -154.377, 12.3695, 1.77 ) }
    dend_12 { pt3dadd( -75.7767, -155.248, 12.075, 2.29 ) }
    dend_12 { pt3dadd( -76.4043, -156.591, 11.5308, 0.07 ) }
    dend_12 { pt3dadd( -76.7389, -157.416, 11.1384, 0.15 ) }
    dend_12 { pt3dadd( -76.9134, -157.938, 10.8485, 0.15 ) }
    dend_12 { pt3dadd( -76.9914, -158.229, 10.6773, 0.15 ) }
    dend_12 { pt3dadd( -77.0839, -158.795, 10.3558, 0.15 ) }
    dend_12 { pt3dadd( -77.0993, -159.242, 10.141, 0.15 ) }
    dend_12 { pt3dadd( -77.0905, -160.036, 9.86487, 0.15 ) }
    dend_12 { pt3dadd( -77.0853, -160.331, 9.7842, 0.15 ) }
    dend_12 { pt3dadd( -77.0725, -161.165, 9.59284, 0.66 ) }
    dend_12 { pt3dadd( -77.0896, -162.679, 9.28341, 0.29 ) }
    dend_12 { pt3dadd( -77.1381, -163.664, 9.11245, 0.22 ) }
    dend_12 { pt3dadd( -77.2059, -164.563, 8.98402, 0.22 ) }
    dend_12 { pt3dadd( -77.3065, -165.342, 8.89531, 0.22 ) }
    dend_12 { pt3dadd( -77.4007, -165.738, 8.85504, 0.59 ) }
    dend_12 { pt3dadd( -77.555, -166.113, 8.81838, 0.74 ) }
    dend_12 { pt3dadd( -77.7973, -166.476, 8.80073, 0.37 ) }
    dend_12 { pt3dadd( -78.1783, -166.904, 8.80565, 0.15 ) }
    dend_12 { pt3dadd( -78.9903, -167.696, 8.85216, 0.15 ) }
    dend_12 { pt3dadd( -79.4577, -168.109, 8.88845, 0.22 ) }
    dend_12 { pt3dadd( -79.9359, -168.528, 8.9275, 0.29 ) }
    dend_12 { pt3dadd( -80.429, -168.975, 8.98509, 0.22 ) }
    dend_12 { pt3dadd( -81.0546, -169.595, 9.07998, 0.22 ) }
    dend_12 { pt3dadd( -81.7352, -170.353, 9.20858, 0.29 ) }
    dend_12 { pt3dadd( -82.1974, -170.93, 9.31941, 0.29 ) }
    dend_12 { pt3dadd( -82.7814, -171.65, 9.45326, 0.22 ) }
    dend_12 { pt3dadd( -83.2752, -172.215, 9.54424, 0.37 ) }
    dend_12 { pt3dadd( -83.7614, -172.749, 9.60742, 0.74 ) }
    dend_12 { pt3dadd( -84.1122, -173.132, 9.6463, 1.03 ) }
    dend_12 { pt3dadd( -84.8096, -173.906, 9.72317, 0.22 ) }
    dend_12 { pt3dadd( -85.4314, -174.633, 9.79072, 0.22 ) }
    dend_12 { pt3dadd( -85.9663, -175.274, 9.83432, 0.15 ) }
    dend_12 { pt3dadd( -86.3664, -175.783, 9.85225, 0.15 ) }
    dend_12 { pt3dadd( -86.645, -176.172, 9.864, 0.15 ) }
    dend_12 { pt3dadd( -87.0654, -176.857, 9.86775, 0.22 ) }
    dend_12 { pt3dadd( -87.6173, -177.909, 9.85197, 0.29 ) }
    dend_12 { pt3dadd( -88.0272, -178.847, 9.84042, 0.74 ) }
    dend_12 { pt3dadd( -88.426, -179.912, 9.85391, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -88.714, -180.75, 9.87739, 0.37 ) }
    dend_12 { pt3dadd( -88.9984, -181.647, 9.91272, 0.37 ) }
    dend_12 { pt3dadd( -89.2096, -182.335, 9.96124, 1.4 ) }
    dend_12 { pt3dadd( -89.5243, -183.321, 10.0513, 2.95 ) }
    dend_12 { pt3dadd( -90.0208, -184.698, 10.2041, 1.18 ) }
    dend_12 { pt3dadd( -90.4771, -185.766, 10.3355, 0.22 ) }
    dend_12 { pt3dadd( -91.0626, -186.997, 10.5168, 0.29 ) }
    dend_12 { pt3dadd( -91.513, -187.908, 10.6679, 0.74 ) }
    dend_12 { pt3dadd( -91.8549, -188.583, 10.7787, 1.33 ) }
    dend_12 { pt3dadd( -92.433, -189.602, 10.9237, 0.81 ) }
    dend_12 { pt3dadd( -92.9393, -190.44, 10.9789, 1.18 ) }
    dend_12 { pt3dadd( -93.7461, -191.833, 10.9949, 0.66 ) }
    dend_12 { pt3dadd( -94.2174, -192.752, 10.9696, 0.29 ) }
    dend_12 { pt3dadd( -94.3851, -193.114, 10.9497, 0.44 ) }
    dend_12 { pt3dadd( -95.0131, -194.624, 10.8553, 0.29 ) }
    dend_12 { pt3dadd( -95.445, -195.756, 10.7604, 0.81 ) }
    dend_12 { pt3dadd( -96.0583, -197.39, 10.554, 0.22 ) }
    dend_12 { pt3dadd( -96.3761, -198.136, 10.3913, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 58.8601, -11.8259, -24.9926, 0.15 ) }
    dend_9 { pt3dadd( 67.4215, -17.7518, -28.0306, 0.15 ) }
    dend_9 { pt3dadd( 75.6197, -24.2899, -30.7273, 0.15 ) }
    dend_9 { pt3dadd( 83.6125, -30.4267, -34.7449, 0.15 ) }
    dend_9 { pt3dadd( 92.2381, -36.3737, -37.5422, 0.15 ) }
    dend_9 { pt3dadd( 100.857, -41.0415, -42.2766, 0.15 ) }
    dend_9 { pt3dadd( 109.274, -45.8101, -47.2676, 0.15 ) }
    dend_9 { pt3dadd( 117.478, -51.7327, -51.1925, 0.15 ) }
    dend_9 { pt3dadd( 124.247, -59.2562, -54.9878, 0.15 ) }
    dend_9 { pt3dadd( 132.576, -65.5966, -57.7797, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 58.8601, -11.8259, -24.9926, 0.59 ) }
    dend_8 { pt3dadd( 67.0292, -16.0796, -25.9773, 0.15 ) }
    dend_8 { pt3dadd( 75.024, -20.6062, -27.1233, 0.15 ) }
    dend_8 { pt3dadd( 83.3156, -24.7129, -27.4374, 0.15 ) }
    dend_8 { pt3dadd( 91.7281, -28.5799, -27.3444, 0.15 ) }
    dend_8 { pt3dadd( 99.9957, -32.5904, -28.5738, 0.15 ) }
    dend_8 { pt3dadd( 107.975, -37.099, -29.9061, 0.15 ) }
    dend_8 { pt3dadd( 115.525, -42.3642, -30.6577, 0.15 ) }
    dend_8 { pt3dadd( 122.539, -48.2029, -32.0422, 0.15 ) }
    dend_8 { pt3dadd( 128.954, -54.7218, -33.1038, 0.15 ) }
    dend_8 { pt3dadd( 134.869, -61.715, -32.6492, 0.15 ) }
    dend_8 { pt3dadd( 141.523, -68.0643, -32.734, 0.15 ) }
    dend_8 { pt3dadd( 147.962, -74.5433, -33.9111, 0.15 ) }
    dend_8 { pt3dadd( 153.92, -81.3716, -35.5521, 0.15 ) }
    dend_8 { pt3dadd( 160.906, -86.9585, -37.9076, 0.15 ) }
    dend_8 { pt3dadd( 169.412, -90.1854, -39.8009, 0.15 ) }
    dend_8 { pt3dadd( 177.988, -93.4217, -41.3086, 0.15 ) }
    dend_8 { pt3dadd( 186.769, -95.3969, -43.7102, 0.15 ) }
    dend_8 { pt3dadd( 195.519, -97.8893, -45.6605, 0.15 ) }
    dend_8 { pt3dadd( 204.129, -99.1061, -49.0377, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 61.2339, -21.8138, -26.2075, 0.15 ) }
    dend_6 { pt3dadd( 66.8536, -29.0196, -30.7444, 0.15 ) }
    dend_6 { pt3dadd( 72.0221, -36.9508, -34.4717, 0.15 ) }
    dend_6 { pt3dadd( 77.4392, -44.2274, -39.1349, 0.15 ) }
    dend_6 { pt3dadd( 81.2365, -53.1822, -41.9634, 0.15 ) }
    dend_6 { pt3dadd( 84.7704, -62.5707, -43.1979, 0.15 ) }
    dend_6 { pt3dadd( 88.1886, -71.851, -45.3135, 0.15 ) }
    dend_6 { pt3dadd( 92.6459, -80.1157, -49.1954, 0.15 ) }
    dend_6 { pt3dadd( 98.4645, -88.0437, -51.7975, 0.15 ) }
    dend_6 { pt3dadd( 103.027, -96.8681, -53.8002, 0.15 ) }
    dend_6 { pt3dadd( 108.773, -105.141, -55.1093, 0.15 ) }
    dend_6 { pt3dadd( 113.886, -113.771, -56.6052, 0.15 ) }
    dend_6 { pt3dadd( 118.503, -122.337, -59.4791, 0.15 ) }
    dend_6 { pt3dadd( 121.146, -131.52, -62.8114, 0.15 ) }
    dend_6 { pt3dadd( 124.474, -140.765, -65.2162, 0.15 ) }
    dend_6 { pt3dadd( 129.69, -149.376, -66.4408, 0.15 ) }
    dend_6 { pt3dadd( 134.272, -157.842, -69.6656, 0.15 ) }
    dend_6 { pt3dadd( 140.213, -165.672, -72.3024, 0.15 ) }
    dend_6 { pt3dadd( 145.762, -174.008, -73.9877, 0.15 ) }
    dend_6 { pt3dadd( 150.925, -182.149, -77.2095, 0.15 ) }
    dend_6 { pt3dadd( 156.205, -190.501, -79.5514, 0.15 ) }
    dend_6 { pt3dadd( 160.612, -198.845, -83.3102, 0.15 ) }
    dend_6 { pt3dadd( 164.59, -207.742, -86.0829, 0.15 ) }
    dend_6 { pt3dadd( 168.372, -217.0, -87.5913, 0.15 ) }
    dend_6 { pt3dadd( 171.814, -226.028, -90.6238, 0.15 ) }
    dend_6 { pt3dadd( 175.81, -234.906, -93.4296, 0.15 ) }
    dend_6 { pt3dadd( 178.623, -244.41, -95.3912, 0.15 ) }
    dend_6 { pt3dadd( 182.024, -253.912, -95.792, 0.15 ) }
    dend_6 { pt3dadd( 186.968, -262.654, -94.4404, 0.15 ) }
    dend_6 { pt3dadd( 192.836, -270.514, -91.76, 0.15 ) }
    dend_6 { pt3dadd( 199.59, -277.496, -88.6411, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 61.2339, -21.8138, -26.2075, 0.59 ) }
    dend_3 { pt3dadd( 69.3866, -29.3302, -27.7012, 0.15 ) }
    dend_3 { pt3dadd( 78.8505, -35.1647, -29.3613, 0.15 ) }
    dend_3 { pt3dadd( 88.5456, -40.7108, -30.6889, 0.15 ) }
    dend_3 { pt3dadd( 96.5508, -48.0098, -33.5323, 0.15 ) }
    dend_3 { pt3dadd( 103.646, -55.9568, -36.9225, 0.15 ) }
    dend_3 { pt3dadd( 111.502, -63.0326, -40.6464, 0.15 ) }
    dend_3 { pt3dadd( 120.178, -68.9851, -44.6085, 0.15 ) }
    dend_3 { pt3dadd( 129.685, -73.8117, -48.2617, 0.15 ) }
    dend_3 { pt3dadd( 139.533, -78.8532, -50.366, 0.15 ) }
    dend_3 { pt3dadd( 148.9, -84.9541, -51.4609, 0.15 ) }
    dend_3 { pt3dadd( 158.62, -90.5394, -50.6051, 0.15 ) }
    dend_3 { pt3dadd( 167.173, -97.4321, -48.4144, 0.15 ) }
    dend_3 { pt3dadd( 174.305, -105.163, -44.658, 0.15 ) }
    dend_3 { pt3dadd( 179.521, -113.055, -38.7417, 0.15 ) }
    dend_3 { pt3dadd( 185.031, -121.238, -33.5472, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -88.4792, -146.222, -15.929, 0.15 ) }
    dend_56 { pt3dadd( -93.2425, -152.151, -16.1666, 0.15 ) }
    dend_56 { pt3dadd( -97.4437, -158.302, -17.7196, 0.15 ) }
    dend_56 { pt3dadd( -102.097, -164.27, -18.5302, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -88.4792, -146.222, -15.929, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -94.9548, -154.871, -15.6935, 0.15 ) }
    dend_55 { pt3dadd( -99.7178, -164.415, -14.2575, 0.15 ) }
    dend_55 { pt3dadd( -105.2, -173.488, -12.2875, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -44.9047, -130.698, -115.103, 0.15 ) }
    dend_52 { pt3dadd( -47.0122, -137.642, -120.092, 0.15 ) }
    dend_52 { pt3dadd( -49.1621, -145.24, -123.944, 0.15 ) }
    dend_52 { pt3dadd( -50.8549, -152.409, -128.75, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -44.9047, -130.698, -115.103, 0.59 ) }
    dend_51 { pt3dadd( -46.1783, -136.603, -120.241, 0.15 ) }
    dend_51 { pt3dadd( -45.8153, -142.713, -125.263, 0.15 ) }
    dend_51 { pt3dadd( -46.5648, -148.787, -130.294, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 22.9389, -206.404, 55.3119, 0.15 ) }
    dend_45 { pt3dadd( 23.5836, -207.014, 55.1413, 0.15 ) }
    dend_45 { pt3dadd( 23.8807, -207.296, 55.0627, 0.37 ) }
    dend_45 { pt3dadd( 24.3788, -207.768, 54.9309, 1.18 ) }
    dend_45 { pt3dadd( 24.7414, -208.111, 54.8349, 0.88 ) }
    dend_45 { pt3dadd( 25.3783, -208.715, 54.6664, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 22.9389, -206.404, 55.3119, 0.22 ) }
    dend_44 { pt3dadd( 22.9389, -207.544, 55.0451, 0.22 ) }
    dend_44 { pt3dadd( 22.919, -208.392, 54.8142, 0.81 ) }
    dend_44 { pt3dadd( 22.8745, -209.213, 54.5971, 1.18 ) }
    dend_44 { pt3dadd( 22.7412, -210.455, 54.3078, 0.22 ) }
    dend_44 { pt3dadd( 22.5407, -211.504, 54.1132, 0.22 ) }
    dend_44 { pt3dadd( 22.2752, -212.537, 53.961, 0.29 ) }
    dend_44 { pt3dadd( 21.9571, -213.506, 53.8597, 0.66 ) }
    dend_44 { pt3dadd( 21.5567, -214.477, 53.8187, 0.81 ) }
    dend_44 { pt3dadd( 21.0535, -215.521, 53.8413, 0.22 ) }
    dend_44 { pt3dadd( 20.3265, -216.867, 53.9684, 0.22 ) }
    dend_44 { pt3dadd( 19.9679, -217.527, 54.0715, 0.29 ) }
    dend_44 { pt3dadd( 19.6247, -218.19, 54.1961, 0.96 ) }
    dend_44 { pt3dadd( 19.3184, -218.842, 54.3376, 1.7 ) }
    dend_44 { pt3dadd( 18.7484, -220.281, 54.6761, 0.52 ) }
    dend_44 { pt3dadd( 18.3538, -221.579, 55.0049, 0.22 ) }
    dend_44 { pt3dadd( 18.2092, -222.264, 55.1924, 0.15 ) }
    dend_44 { pt3dadd( 18.0448, -223.361, 55.5246, 0.22 ) }
    dend_44 { pt3dadd( 17.9285, -224.325, 55.8017, 0.15 ) }
    dend_44 { pt3dadd( 17.8386, -225.145, 56.0329, 0.15 ) }
    dend_44 { pt3dadd( 17.7786, -225.703, 56.1838, 0.15 ) }
    dend_44 { pt3dadd( 17.7162, -226.328, 56.3337, 0.37 ) }
    dend_44 { pt3dadd( 17.6166, -227.139, 56.479, 0.59 ) }
    dend_44 { pt3dadd( 17.3784, -228.637, 56.639, 0.07 ) }
    dend_44 { pt3dadd( 17.203, -229.487, 56.6754, 0.07 ) }
    dend_44 { pt3dadd( 16.9923, -230.413, 56.6792, 0.15 ) }
    dend_44 { pt3dadd( 16.85, -231.05, 56.667, 0.66 ) }
    dend_44 { pt3dadd( 16.6818, -231.835, 56.6462, 0.74 ) }
    dend_44 { pt3dadd( 16.4271, -233.158, 56.628, 0.15 ) }
    dend_44 { pt3dadd( 16.2859, -234.007, 56.651, 0.22 ) }
    dend_44 { pt3dadd( 16.1772, -234.699, 56.6773, 0.15 ) }
    dend_44 { pt3dadd( 16.0674, -235.298, 56.7134, 0.81 ) }
    dend_44 { pt3dadd( 15.9277, -235.929, 56.7696, 0.66 ) }
    dend_44 { pt3dadd( 15.6427, -236.99, 56.8724, 0.15 ) }
    dend_44 { pt3dadd( 15.378, -237.834, 56.944, 0.22 ) }
    dend_44 { pt3dadd( 15.0131, -238.884, 57.0216, 0.52 ) }
    dend_44 { pt3dadd( 14.6614, -239.723, 57.1049, 0.59 ) }
    dend_44 { pt3dadd( 14.1859, -240.819, 57.2707, 0.07 ) }
    dend_44 { pt3dadd( 13.8127, -241.685, 57.435, 0.22 ) }
    dend_44 { pt3dadd( 13.676, -241.996, 57.4981, 0.22 ) }
    dend_44 { pt3dadd( 13.3646, -242.708, 57.6523, 0.96 ) }
    dend_44 { pt3dadd( 12.7724, -244.055, 57.9759, 0.07 ) }
    dend_44 { pt3dadd( 12.3018, -245.232, 58.3148, 0.07 ) }
    dend_44 { pt3dadd( 12.1097, -245.771, 58.5221, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -14.4494, -230.41, 33.5956, 0.15 ) }
    dend_41 { pt3dadd( -14.3487, -239.617, 35.3833, 0.15 ) }
    dend_41 { pt3dadd( -15.2605, -248.807, 37.0242, 0.15 ) }
    dend_41 { pt3dadd( -16.138, -257.96, 38.8843, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -14.4494, -230.41, 33.5956, 0.59 ) }
    dend_40 { pt3dadd( -15.1902, -241.117, 35.7212, 0.15 ) }
    dend_40 { pt3dadd( -17.4375, -251.818, 35.881, 0.15 ) }
    dend_40 { pt3dadd( -19.9167, -262.126, 38.6483, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 16.9298, 38.8752, -2.90941, 0.52 ) }
    dend_32 { pt3dadd( 17.6129, 39.6554, -3.52862, 0.52 ) }
    dend_32 { pt3dadd( 18.3363, 40.0596, -4.30153, 0.37 ) }
    dend_32 { pt3dadd( 18.8643, 40.2273, -4.85737, 0.37 ) }
    dend_32 { pt3dadd( 19.1345, 40.3053, -5.14878, 0.52 ) }
    dend_32 { pt3dadd( 19.6295, 40.4856, -5.70932, 0.52 ) }
    dend_32 { pt3dadd( 20.3796, 40.8345, -6.60767, 0.44 ) }
    dend_32 { pt3dadd( 20.7285, 41.0031, -7.08039, 0.44 ) }
    dend_32 { pt3dadd( 21.1135, 41.2402, -7.6078, 0.66 ) }
    dend_32 { pt3dadd( 21.4459, 41.5233, -8.01308, 0.66 ) }
    dend_32 { pt3dadd( 21.8646, 41.9917, -8.44073, 0.88 ) }
    dend_32 { pt3dadd( 22.1375, 42.3696, -8.64502, 1.03 ) }
    dend_32 { pt3dadd( 22.7163, 43.2445, -8.91449, 0.52 ) }
    dend_32 { pt3dadd( 23.1658, 43.9224, -9.05461, 0.52 ) }
    dend_32 { pt3dadd( 23.5627, 44.5026, -9.141, 0.52 ) }
    dend_32 { pt3dadd( 23.9346, 45.003, -9.19674, 0.52 ) }
    dend_32 { pt3dadd( 24.5617, 45.7988, -9.29689, 0.22 ) }
    dend_32 { pt3dadd( 25.1664, 46.5338, -9.38367, 0.44 ) }
    dend_32 { pt3dadd( 25.7684, 47.2609, -9.46232, 0.74 ) }
    dend_32 { pt3dadd( 26.3975, 48.0784, -9.56193, 1.18 ) }
    dend_32 { pt3dadd( 26.8385, 48.6941, -9.65796, 0.88 ) }
    dend_32 { pt3dadd( 27.5377, 49.6819, -9.85787, 0.29 ) }
    dend_32 { pt3dadd( 33.151, 56.4627, -11.6598, 0.29 ) }
    dend_32 { pt3dadd( 38.8213, 63.0617, -13.937, 0.29 ) }
    dend_32 { pt3dadd( 44.2219, 70.167, -14.8317, 0.29 ) }
    dend_32 { pt3dadd( 49.9758, 77.0396, -14.3852, 0.29 ) }
    dend_32 { pt3dadd( 55.4129, 84.1366, -13.7257, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 16.9298, 38.8752, -2.90941, 0.88 ) }
    dend_25 { pt3dadd( 17.6205, 39.4031, -2.5251, 0.88 ) }
    dend_25 { pt3dadd( 18.0999, 39.7451, -2.29441, 0.81 ) }
    dend_25 { pt3dadd( 18.6802, 40.1466, -2.08271, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 19.3049, 40.5668, -1.91944, 1.33 ) }
    dend_25 { pt3dadd( 20.045, 41.077, -1.77539, 1.33 ) }
    dend_25 { pt3dadd( 20.4752, 41.3807, -1.7015, 1.33 ) }
    dend_25 { pt3dadd( 20.9539, 41.7429, -1.64294, 1.33 ) }
    dend_25 { pt3dadd( 21.557, 42.2088, -1.59896, 1.18 ) }
    dend_25 { pt3dadd( 22.1328, 42.6537, -1.57665, 1.03 ) }
    dend_25 { pt3dadd( 22.6455, 43.0375, -1.55288, 0.88 ) }
    dend_25 { pt3dadd( 23.2777, 43.5169, -1.51015, 1.4 ) }
    dend_25 { pt3dadd( 24.0403, 44.1222, -1.43326, 0.74 ) }
    dend_25 { pt3dadd( 24.6595, 44.6262, -1.35412, 1.25 ) }
    dend_25 { pt3dadd( 25.3281, 45.162, -1.26081, 1.77 ) }
    dend_25 { pt3dadd( 26.2063, 45.8659, -1.16235, 0.96 ) }
    dend_25 { pt3dadd( 26.941, 46.461, -1.12202, 0.59 ) }
    dend_25 { pt3dadd( 27.4825, 46.9169, -1.13013, 0.74 ) }
    dend_25 { pt3dadd( 27.8851, 47.273, -1.15997, 0.96 ) }
    dend_25 { pt3dadd( 28.579, 47.9282, -1.22786, 1.11 ) }
    dend_25 { pt3dadd( 29.0688, 48.4194, -1.26885, 1.4 ) }
    dend_25 { pt3dadd( 29.5024, 48.8738, -1.28778, 1.4 ) }
    dend_25 { pt3dadd( 30.2248, 49.6101, -1.27778, 0.96 ) }
    dend_25 { pt3dadd( 30.5331, 49.916, -1.24192, 0.96 ) }
    dend_25 { pt3dadd( 31.1738, 50.5311, -1.08089, 1.18 ) }
    dend_25 { pt3dadd( 31.7057, 51.012, -0.871142, 1.18 ) }
    dend_25 { pt3dadd( 32.2693, 51.4759, -0.615239, 1.03 ) }
    dend_25 { pt3dadd( 32.6713, 51.7733, -0.442227, 0.96 ) }
    dend_25 { pt3dadd( 33.2322, 52.1552, -0.241278, 0.81 ) }
    dend_25 { pt3dadd( 33.8642, 52.5643, -0.0744915, 0.74 ) }
    dend_25 { pt3dadd( 34.5554, 52.9998, 0.0389321, 0.96 ) }
    dend_25 { pt3dadd( 35.275, 53.4641, 0.108624, 1.25 ) }
    dend_25 { pt3dadd( 36.0698, 53.996, 0.147708, 1.55 ) }
    dend_25 { pt3dadd( 36.7486, 54.4848, 0.155537, 0.88 ) }
    dend_25 { pt3dadd( 37.4957, 55.0856, 0.118424, 0.59 ) }
    dend_25 { pt3dadd( 37.9325, 55.4908, 0.0824845, 0.81 ) }
    dend_25 { pt3dadd( 38.3798, 55.98, 0.0383155, 0.96 ) }
    dend_25 { pt3dadd( 38.8428, 56.5302, 0.00391865, 1.33 ) }
    dend_25 { pt3dadd( 39.5141, 57.4172, -0.0228517, 1.55 ) }
    dend_25 { pt3dadd( 40.0675, 58.2245, -0.0429623, 1.7 ) }
    dend_25 { pt3dadd( 40.5696, 59.0332, -0.0796566, 1.62 ) }
    dend_25 { pt3dadd( 41.1019, 59.9628, -0.146635, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -68.5146, 216.228, -90.2204, 0.15 ) }
    dend_23 { pt3dadd( -71.3644, 224.672, -94.8622, 0.15 ) }
    dend_23 { pt3dadd( -73.0571, 233.746, -98.781, 0.15 ) }
    dend_23 { pt3dadd( -76.7343, 242.323, -102.46, 0.15 ) }
    dend_23 { pt3dadd( -80.3454, 251.1, -105.673, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -68.5146, 216.228, -90.2204, 0.59 ) }
    dend_22 { pt3dadd( -73.4097, 225.165, -93.5018, 0.15 ) }
    dend_22 { pt3dadd( -79.0073, 233.566, -97.1295, 0.15 ) }
    dend_22 { pt3dadd( -83.1534, 243.294, -98.5283, 0.15 ) }
    dend_22 { pt3dadd( -85.8824, 253.413, -100.46, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.5824, 26.8663, 5.41598, 0.81 ) }
    dend_17 { pt3dadd( -11.939, 27.8546, 6.73779, 0.81 ) }
    dend_17 { pt3dadd( -10.9913, 28.5053, 7.39427, 0.44 ) }
    dend_17 { pt3dadd( -9.63475, 29.6559, 8.362, 0.59 ) }
    dend_17 { pt3dadd( -8.55857, 30.7045, 9.20362, 0.59 ) }
    dend_17 { pt3dadd( -7.68098, 31.6229, 9.93662, 0.88 ) }
    dend_17 { pt3dadd( -7.02182, 32.3431, 10.5157, 1.11 ) }
    dend_17 { pt3dadd( -6.15621, 33.2413, 11.0929, 1.11 ) }
    dend_17 { pt3dadd( -5.35833, 34.3327, 11.6225, 0.29 ) }
    dend_17 { pt3dadd( -5.25041, 35.0256, 11.8716, 0.29 ) }
    dend_17 { pt3dadd( -5.6028, 35.5915, 12.0591, 0.29 ) }
    dend_17 { pt3dadd( -5.88164, 35.8884, 12.1649, 0.29 ) }
    dend_17 { pt3dadd( -6.18891, 36.2292, 12.3552, 0.29 ) }
    dend_17 { pt3dadd( -6.6389, 36.8173, 12.8589, 0.59 ) }
    dend_17 { pt3dadd( -6.91297, 37.3638, 13.4779, 1.11 ) }
    dend_17 { pt3dadd( -7.22125, 38.2163, 14.5978, 1.84 ) }
    dend_17 { pt3dadd( -7.41759, 38.892, 15.6233, 1.84 ) }
    dend_17 { pt3dadd( -7.62142, 39.7231, 17.0021, 0.96 ) }
    dend_17 { pt3dadd( -7.74064, 40.2655, 17.9998, 0.74 ) }
    dend_17 { pt3dadd( -7.83866, 40.8606, 19.0881, 0.74 ) }
    dend_17 { pt3dadd( -7.98827, 41.57, 20.2946, 0.74 ) }
    dend_17 { pt3dadd( -8.15985, 42.1626, 21.1954, 1.11 ) }
    dend_17 { pt3dadd( -8.37034, 42.9397, 22.159, 1.47 ) }
    dend_17 { pt3dadd( -8.55851, 43.7758, 23.0538, 1.47 ) }
    dend_17 { pt3dadd( -8.76, 44.9164, 24.16, 0.74 ) }
    dend_17 { pt3dadd( -8.98479, 46.4409, 25.5476, 0.52 ) }
    dend_17 { pt3dadd( -9.08607, 47.2729, 26.2899, 0.52 ) }
    dend_17 { pt3dadd( -9.2352, 48.4159, 27.3549, 0.37 ) }
    dend_17 { pt3dadd( -9.33235, 49.2766, 28.3364, 0.37 ) }
    dend_17 { pt3dadd( -9.35256, 49.4926, 28.8227, 0.37 ) }
    dend_17 { pt3dadd( -9.37463, 49.5564, 29.4917, 0.37 ) }
    dend_17 { pt3dadd( -9.39187, 49.5477, 30.0004, 0.37 ) }
    dend_17 { pt3dadd( -9.57439, 49.5808, 31.2549, 0.37 ) }
    dend_17 { pt3dadd( -9.88291, 49.7286, 32.197, 0.37 ) }
    dend_17 { pt3dadd( -10.423, 50.2013, 33.4576, 0.37 ) }
    dend_17 { pt3dadd( -10.8363, 50.6589, 34.2868, 0.37 ) }
    dend_17 { pt3dadd( -11.318, 51.2214, 35.097, 0.59 ) }
    dend_17 { pt3dadd( -11.8573, 51.8913, 35.8922, 0.88 ) }
    dend_17 { pt3dadd( -12.8192, 53.2063, 37.1206, 0.88 ) }
    dend_17 { pt3dadd( -13.6364, 54.3417, 38.01, 0.59 ) }
    dend_17 { pt3dadd( -14.6414, 55.7871, 38.9648, 0.59 ) }
    dend_17 { pt3dadd( -15.2045, 56.701, 39.5008, 0.29 ) }
    dend_17 { pt3dadd( -15.7129, 57.6954, 40.0219, 0.29 ) }
    dend_17 { pt3dadd( -16.1877, 58.8593, 40.5707, 0.29 ) }
    dend_17 { pt3dadd( -16.462, 59.7286, 40.9442, 0.96 ) }
    dend_17 { pt3dadd( -16.6686, 60.5823, 41.3315, 1.84 ) }
    dend_17 { pt3dadd( -16.916, 61.896, 41.9288, 0.37 ) }
    dend_17 { pt3dadd( -17.1269, 62.9108, 42.4142, 0.81 ) }
    dend_17 { pt3dadd( -17.4794, 64.111, 43.0382, 1.55 ) }
    dend_17 { pt3dadd( -17.9564, 65.3092, 43.7507, 0.22 ) }
    dend_17 { pt3dadd( -18.3718, 66.2091, 44.3111, 0.22 ) }
    dend_17 { pt3dadd( -18.6993, 66.8442, 44.7439, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( -19.0474, 67.6461, 45.3061, 0.29 ) }
    dend_17 { pt3dadd( -19.2758, 68.4228, 45.8302, 0.29 ) }
    dend_17 { pt3dadd( -19.4324, 69.3277, 46.4264, 0.59 ) }
    dend_17 { pt3dadd( -19.5498, 70.659, 47.3306, 1.77 ) }
    dend_17 { pt3dadd( -19.5844, 71.6038, 47.9795, 2.14 ) }
    dend_17 { pt3dadd( -19.5307, 73.3604, 49.2049, 0.29 ) }
    dend_17 { pt3dadd( -19.4533, 74.1935, 49.7829, 0.29 ) }
    dend_17 { pt3dadd( -19.369, 75.0032, 50.3314, 0.29 ) }
    dend_17 { pt3dadd( -19.3092, 75.4608, 50.6482, 0.29 ) }
    dend_17 { pt3dadd( -19.231, 76.0935, 51.1317, 0.88 ) }
    dend_17 { pt3dadd( -19.1412, 76.871, 51.7897, 1.62 ) }
    dend_17 { pt3dadd( -19.0623, 77.4991, 52.3984, 1.62 ) }
    dend_17 { pt3dadd( -18.9075, 78.3127, 53.1902, 2.21 ) }
    dend_17 { pt3dadd( -18.3711, 80.2416, 55.0659, 0.22 ) }
    dend_17 { pt3dadd( -18.1027, 81.0224, 55.8175, 0.22 ) }
    dend_17 { pt3dadd( -17.8999, 81.5428, 56.3252, 0.22 ) }
    dend_17 { pt3dadd( -17.6726, 82.0674, 56.8316, 0.22 ) }
    dend_17 { pt3dadd( -17.2018, 83.0405, 57.746, 0.44 ) }
    dend_17 { pt3dadd( -16.5809, 84.1094, 58.7316, 0.66 ) }
    dend_17 { pt3dadd( -16.4784, 84.2856, 58.8775, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -13.5824, 26.8663, 5.41598, 0.96 ) }
    dend_14 { pt3dadd( -13.301, 26.0389, 6.17446, 0.96 ) }
    dend_14 { pt3dadd( -12.9836, 25.1739, 6.95386, 0.37 ) }
    dend_14 { pt3dadd( -12.9229, 24.8412, 7.18708, 0.29 ) }
    dend_14 { pt3dadd( -12.8836, 24.2045, 7.53102, 0.22 ) }
    dend_14 { pt3dadd( -12.9131, 23.7707, 7.73566, 0.22 ) }
    dend_14 { pt3dadd( -13.0168, 23.0891, 8.03238, 0.52 ) }
    dend_14 { pt3dadd( -13.2138, 22.2572, 8.36537, 0.74 ) }
    dend_14 { pt3dadd( -13.6384, 21.0964, 8.74428, 0.52 ) }
    dend_14 { pt3dadd( -13.9865, 20.2498, 8.99116, 1.11 ) }
    dend_14 { pt3dadd( -14.5314, 18.955, 9.36233, 1.62 ) }
    dend_14 { pt3dadd( -15.0044, 17.8038, 9.68326, 1.33 ) }
    dend_14 { pt3dadd( -15.6332, 16.1789, 10.1406, 1.11 ) }
    dend_14 { pt3dadd( -16.4517, 13.9554, 10.7759, 0.44 ) }
    dend_14 { pt3dadd( -16.8615, 12.7796, 11.1095, 0.44 ) }
    dend_14 { pt3dadd( -17.2811, 11.5586, 11.4389, 0.44 ) }
    dend_14 { pt3dadd( -17.612, 10.5798, 11.6736, 0.96 ) }
    dend_14 { pt3dadd( -18.0944, 9.16504, 11.9976, 1.47 ) }
    dend_14 { pt3dadd( -18.6893, 7.52643, 12.3433, 1.7 ) }
    dend_14 { pt3dadd( -19.4272, 5.71187, 12.7215, 1.7 ) }
    dend_14 { pt3dadd( -20.2238, 4.11218, 13.0485, 1.7 ) }
    dend_14 { pt3dadd( -21.0925, 2.63145, 13.3417, 0.59 ) }
    dend_14 { pt3dadd( -21.9924, 1.27304, 13.6279, 0.44 ) }
    dend_14 { pt3dadd( -22.8666, 0.0732982, 13.9108, 0.44 ) }
    dend_14 { pt3dadd( -23.4065, -0.614846, 14.12, 0.44 ) }
    dend_14 { pt3dadd( -24.2407, -1.62698, 14.5531, 0.44 ) }
    dend_14 { pt3dadd( -24.518, -1.97372, 14.7634, 0.44 ) }
    dend_14 { pt3dadd( -24.7742, -2.41796, 15.0873, 0.44 ) }
    dend_14 { pt3dadd( -25.0226, -3.12014, 15.6036, 0.44 ) }
    dend_14 { pt3dadd( -25.1623, -3.58985, 15.9303, 0.88 ) }
    dend_14 { pt3dadd( -25.5245, -4.71418, 16.618, 1.4 ) }
    dend_14 { pt3dadd( -25.8376, -5.49228, 17.0425, 1.4 ) }
    dend_14 { pt3dadd( -26.4893, -6.74453, 17.6478, 0.66 ) }
    dend_14 { pt3dadd( -27.0562, -7.66938, 18.0396, 0.22 ) }
    dend_14 { pt3dadd( -27.6643, -8.5715, 18.4113, 0.22 ) }
    dend_14 { pt3dadd( -28.0229, -9.08747, 18.633, 1.03 ) }
    dend_14 { pt3dadd( -28.6342, -9.97107, 19.0321, 2.36 ) }
    dend_14 { pt3dadd( -29.3082, -11.0002, 19.5404, 2.65 ) }
    dend_14 { pt3dadd( -30.4133, -12.8282, 20.5701, 0.81 ) }
    dend_14 { pt3dadd( -30.8573, -13.8543, 21.1898, 0.22 ) }
    dend_14 { pt3dadd( -31.0017, -14.3566, 21.5125, 0.22 ) }
    dend_14 { pt3dadd( -31.0951, -14.8362, 21.8395, 0.66 ) }
    dend_14 { pt3dadd( -31.1607, -15.4265, 22.2687, 0.66 ) }
    dend_14 { pt3dadd( -31.1776, -15.792, 22.5592, 0.66 ) }
    dend_14 { pt3dadd( -31.1691, -16.7897, 23.4451, 0.22 ) }
    dend_14 { pt3dadd( -31.2118, -17.3009, 23.8809, 0.22 ) }
    dend_14 { pt3dadd( -31.2719, -17.5359, 24.0796, 0.22 ) }
    dend_14 { pt3dadd( -31.451, -17.9265, 24.4043, 0.22 ) }
    dend_14 { pt3dadd( -31.7752, -18.4587, 24.8116, 0.22 ) }
    dend_14 { pt3dadd( -31.9453, -18.6845, 24.9627, 0.22 ) }
    dend_14 { pt3dadd( -32.4193, -19.2222, 25.2617, 0.22 ) }
    dend_14 { pt3dadd( -32.6992, -19.5434, 25.3916, 0.29 ) }
    dend_14 { pt3dadd( -33.405, -20.3856, 25.6454, 0.29 ) }
    dend_14 { pt3dadd( -33.7388, -20.8331, 25.7592, 0.59 ) }
    dend_14 { pt3dadd( -34.288, -21.6704, 25.9546, 0.88 ) }
    dend_14 { pt3dadd( -34.7639, -22.5079, 26.1663, 0.66 ) }
    dend_14 { pt3dadd( -35.241, -23.5967, 26.4877, 0.22 ) }
    dend_14 { pt3dadd( -35.4033, -24.1172, 26.6793, 0.22 ) }
    dend_14 { pt3dadd( -35.7078, -25.3962, 27.2508, 0.59 ) }
    dend_14 { pt3dadd( -35.9081, -26.466, 27.7962, 1.03 ) }
    dend_14 { pt3dadd( -36.0815, -27.5236, 28.3693, 1.62 ) }
    dend_14 { pt3dadd( -36.3306, -28.9398, 29.1772, 0.59 ) }
    dend_14 { pt3dadd( -36.6346, -30.3908, 29.9839, 0.22 ) }
    dend_14 { pt3dadd( -36.914, -31.3985, 30.5262, 0.52 ) }
    dend_14 { pt3dadd( -37.1426, -31.9924, 30.8394, 1.25 ) }
    dend_14 { pt3dadd( -37.6356, -32.9599, 31.3503, 2.14 ) }
    dend_14 { pt3dadd( -38.2019, -33.8329, 31.7953, 1.33 ) }
    dend_14 { pt3dadd( -39.1038, -34.9622, 32.3949, 0.52 ) }
    dend_14 { pt3dadd( -39.6374, -35.5897, 32.7547, 0.22 ) }
    dend_14 { pt3dadd( -40.2126, -36.2916, 33.2041, 0.44 ) }
    dend_14 { pt3dadd( -40.6511, -36.85, 33.6155, 0.44 ) }
    dend_14 { pt3dadd( -41.0311, -37.4324, 34.0682, 0.22 ) }
    dend_14 { pt3dadd( -41.3248, -38.0162, 34.4515, 0.22 ) }
    dend_14 { pt3dadd( -41.6465, -38.7555, 34.8773, 0.22 ) }
    dend_14 { pt3dadd( -41.8517, -39.288, 35.1219, 0.52 ) }
    dend_14 { pt3dadd( -42.1319, -40.0471, 35.3999, 0.74 ) }
    dend_14 { pt3dadd( -42.6795, -41.2713, 35.8018, 0.81 ) }
    dend_14 { pt3dadd( -43.3452, -42.3085, 36.1895, 0.22 ) }
    dend_14 { pt3dadd( -43.9308, -42.8965, 36.4592, 0.22 ) }
    dend_14 { pt3dadd( -44.2472, -43.1261, 36.6048, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -44.7462, -43.4647, 36.8679, 0.66 ) }
    dend_14 { pt3dadd( -45.6082, -44.0316, 37.4034, 1.33 ) }
    dend_14 { pt3dadd( -46.3179, -44.5295, 37.9198, 1.55 ) }
    dend_14 { pt3dadd( -47.0112, -45.1279, 38.5016, 0.88 ) }
    dend_14 { pt3dadd( -47.8183, -45.9704, 39.156, 0.15 ) }
    dend_14 { pt3dadd( -48.6142, -46.8623, 39.7602, 0.29 ) }
    dend_14 { pt3dadd( -49.0299, -47.3631, 40.0623, 0.88 ) }
    dend_14 { pt3dadd( -49.4465, -47.8922, 40.3162, 1.25 ) }
    dend_14 { pt3dadd( -49.8928, -48.4651, 40.5583, 1.33 ) }
    dend_14 { pt3dadd( -51.0858, -49.969, 41.1683, 0.22 ) }
    dend_14 { pt3dadd( -51.6117, -50.6359, 41.4354, 0.74 ) }
    dend_14 { pt3dadd( -52.1114, -51.2732, 41.6943, 1.25 ) }
    dend_14 { pt3dadd( -52.8998, -52.384, 42.1436, 0.44 ) }
    dend_14 { pt3dadd( -53.3408, -53.2317, 42.5226, 0.22 ) }
    dend_14 { pt3dadd( -53.5106, -53.7458, 42.7623, 0.22 ) }
    dend_14 { pt3dadd( -53.6247, -54.4791, 43.0897, 0.96 ) }
    dend_14 { pt3dadd( -53.6646, -54.9496, 43.2997, 1.55 ) }
    dend_14 { pt3dadd( -53.7115, -55.905, 43.7315, 1.33 ) }
    dend_14 { pt3dadd( -53.8009, -58.0797, 44.7583, 0.15 ) }
    dend_14 { pt3dadd( -53.8414, -58.6039, 44.9976, 0.37 ) }
    dend_14 { pt3dadd( -53.976, -59.5787, 45.4438, 0.15 ) }
    dend_14 { pt3dadd( -54.168, -60.3949, 45.8408, 0.15 ) }
    dend_14 { pt3dadd( -54.4154, -61.1332, 46.2245, 0.52 ) }
    dend_14 { pt3dadd( -54.756, -61.9168, 46.6514, 1.18 ) }
    dend_14 { pt3dadd( -55.2629, -62.8542, 47.1861, 2.06 ) }
    dend_14 { pt3dadd( -55.9474, -64.0431, 47.8944, 0.96 ) }
    dend_14 { pt3dadd( -56.6806, -65.2606, 48.6424, 0.22 ) }
    dend_14 { pt3dadd( -57.2228, -66.1243, 49.1655, 0.22 ) }
    dend_14 { pt3dadd( -57.8839, -67.1396, 49.7906, 0.22 ) }
    dend_14 { pt3dadd( -58.3139, -67.791, 50.1961, 0.22 ) }
    dend_14 { pt3dadd( -58.9664, -68.755, 50.8327, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 185.031, -121.238, -33.5472, 0.15 ) }
    dend_5 { pt3dadd( 191.672, -126.765, -34.0176, 0.15 ) }
    dend_5 { pt3dadd( 197.748, -132.886, -33.805, 0.15 ) }
    dend_5 { pt3dadd( 203.918, -138.918, -34.1523, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 185.031, -121.238, -33.5472, 0.59 ) }
    dend_4 { pt3dadd( 194.344, -127.251, -33.5267, 0.15 ) }
    dend_4 { pt3dadd( 203.919, -132.702, -32.3003, 0.15 ) }
    dend_4 { pt3dadd( 211.892, -139.941, -29.9649, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 55.4129, 84.1366, -13.7257, 0.15 ) }
    dend_34 { pt3dadd( 59.471, 89.9398, -17.0867, 0.15 ) }
    dend_34 { pt3dadd( 61.9766, 96.6205, -20.2603, 0.15 ) }
    dend_34 { pt3dadd( 62.7294, 103.702, -23.4362, 0.15 ) }
    dend_34 { pt3dadd( 62.5365, 111.026, -26.0735, 0.15 ) }
    dend_34 { pt3dadd( 61.076, 118.089, -29.0548, 0.15 ) }
    dend_34 { pt3dadd( 60.544, 125.041, -32.5759, 0.15 ) }
    dend_34 { pt3dadd( 60.4682, 132.105, -35.8874, 0.15 ) }
    dend_34 { pt3dadd( 60.2871, 139.154, -39.2331, 0.15 ) }
    dend_34 { pt3dadd( 60.7461, 146.583, -41.4835, 0.15 ) }
    dend_34 { pt3dadd( 60.3979, 154.309, -41.9531, 0.15 ) }
    dend_34 { pt3dadd( 61.7703, 161.891, -41.252, 0.15 ) }
    dend_34 { pt3dadd( 64.1503, 169.212, -40.3968, 0.15 ) }
    dend_34 { pt3dadd( 65.9767, 176.336, -37.9828, 0.15 ) }
    dend_34 { pt3dadd( 68.5362, 183.174, -35.3825, 0.15 ) }
    dend_34 { pt3dadd( 71.6268, 190.03, -33.4914, 0.15 ) }
    dend_34 { pt3dadd( 73.1463, 197.414, -31.7544, 0.15 ) }
    dend_34 { pt3dadd( 74.258, 204.992, -30.6766, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 55.4129, 84.1366, -13.7257, 0.59 ) }
    dend_33 { pt3dadd( 64.4578, 90.9584, -11.0975, 0.15 ) }
    dend_33 { pt3dadd( 72.9151, 98.0337, -7.45589, 0.15 ) }
    dend_33 { pt3dadd( 82.1748, 103.248, -2.65651, 0.15 ) }
    dend_33 { pt3dadd( 89.9978, 109.199, 3.55724, 0.15 ) }
    dend_33 { pt3dadd( 98.6363, 113.691, 9.99126, 0.15 ) }
    dend_33 { pt3dadd( 106.682, 118.88, 16.6275, 0.15 ) }
    dend_33 { pt3dadd( 113.868, 124.531, 23.819, 0.15 ) }
    dend_33 { pt3dadd( 122.897, 129.857, 28.9151, 0.15 ) }
    dend_33 { pt3dadd( 131.861, 135.065, 34.245, 0.15 ) }
    dend_33 { pt3dadd( 140.008, 141.391, 39.6013, 0.15 ) }
    dend_33 { pt3dadd( 146.914, 148.831, 45.1806, 0.15 ) }
    dend_33 { pt3dadd( 155.443, 154.44, 50.7817, 0.15 ) }
    dend_33 { pt3dadd( 165.277, 157.419, 56.4073, 0.15 ) }
    dend_33 { pt3dadd( 175.712, 159.657, 61.2856, 0.15 ) }
    dend_33 { pt3dadd( 186.259, 162.352, 65.6488, 0.15 ) }
    dend_33 { pt3dadd( 196.607, 167.013, 68.4566, 0.15 ) }
    dend_33 { pt3dadd( 207.548, 171.115, 69.3556, 0.15 ) }
    dend_33 { pt3dadd( 217.999, 176.107, 70.9499, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 41.1019, 59.9628, -0.146635, 0.66 ) }
    dend_27 { pt3dadd( 41.9293, 61.5667, -0.296096, 0.66 ) }
    dend_27 { pt3dadd( 42.4039, 62.3928, -0.39401, 0.66 ) }
    dend_27 { pt3dadd( 42.9886, 63.3834, -0.519862, 0.44 ) }
    dend_27 { pt3dadd( 43.4131, 64.1035, -0.594877, 0.37 ) }
    dend_27 { pt3dadd( 43.9655, 65.0612, -0.661031, 0.37 ) }
    dend_27 { pt3dadd( 44.4484, 65.9172, -0.675228, 0.37 ) }
    dend_27 { pt3dadd( 44.6926, 66.3252, -0.661694, 0.59 ) }
    dend_27 { pt3dadd( 45.1119, 67.0822, -0.611032, 1.11 ) }
    dend_27 { pt3dadd( 45.6905, 68.3222, -0.497276, 0.37 ) }
    dend_27 { pt3dadd( 46.0672, 69.3223, -0.319352, 0.59 ) }
    dend_27 { pt3dadd( 46.4436, 70.5565, -0.0124419, 0.37 ) }
    dend_27 { pt3dadd( 46.7892, 71.7761, 0.357392, 0.44 ) }
    dend_27 { pt3dadd( 46.9895, 72.4404, 0.5796, 0.22 ) }
    dend_27 { pt3dadd( 47.2032, 73.0318, 0.793311, 0.22 ) }
    dend_27 { pt3dadd( 47.8803, 74.5709, 1.36938, 0.22 ) }
    dend_27 { pt3dadd( 48.3288, 75.3738, 1.66132, 0.22 ) }
    dend_27 { pt3dadd( 48.6208, 75.7795, 1.79727, 0.44 ) }
    dend_27 { pt3dadd( 49.1575, 76.3682, 1.96767, 0.66 ) }
    dend_27 { pt3dadd( 50.0449, 77.1753, 2.13946, 0.22 ) }
    dend_27 { pt3dadd( 50.4514, 77.4968, 2.17941, 0.22 ) }
    dend_27 { pt3dadd( 50.9937, 77.8827, 2.19711, 0.66 ) }
    dend_27 { pt3dadd( 51.4569, 78.1983, 2.22194, 1.03 ) }
    dend_27 { pt3dadd( 52.5135, 78.9255, 2.29083, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 53.4102, 79.5749, 2.35601, 0.66 ) }
    dend_27 { pt3dadd( 53.954, 79.9923, 2.40753, 0.81 ) }
    dend_27 { pt3dadd( 55.1782, 80.9526, 2.54068, 1.03 ) }
    dend_27 { pt3dadd( 56.1113, 81.6896, 2.65344, 0.74 ) }
    dend_27 { pt3dadd( 57.0321, 82.4104, 2.77955, 0.37 ) }
    dend_27 { pt3dadd( 57.7087, 82.9075, 2.87686, 0.37 ) }
    dend_27 { pt3dadd( 58.2827, 83.319, 2.95848, 0.29 ) }
    dend_27 { pt3dadd( 58.8826, 83.7428, 3.03968, 0.29 ) }
    dend_27 { pt3dadd( 59.383, 84.0946, 3.09745, 0.66 ) }
    dend_27 { pt3dadd( 60.1191, 84.602, 3.19473, 1.25 ) }
    dend_27 { pt3dadd( 61.4349, 85.4867, 3.36951, 0.29 ) }
    dend_27 { pt3dadd( 61.8365, 85.7569, 3.41793, 0.29 ) }
    dend_27 { pt3dadd( 62.6752, 86.3538, 3.50388, 0.88 ) }
    dend_27 { pt3dadd( 63.4763, 86.974, 3.57932, 0.52 ) }
    dend_27 { pt3dadd( 64.1277, 87.5148, 3.63308, 1.11 ) }
    dend_27 { pt3dadd( 65.0235, 88.3023, 3.69403, 0.66 ) }
    dend_27 { pt3dadd( 65.866, 89.071, 3.763, 0.29 ) }
    dend_27 { pt3dadd( 66.4781, 89.6078, 3.81581, 0.59 ) }
    dend_27 { pt3dadd( 67.5843, 90.5019, 3.90985, 0.22 ) }
    dend_27 { pt3dadd( 68.1053, 90.882, 3.95447, 0.59 ) }
    dend_27 { pt3dadd( 68.8333, 91.3709, 4.01229, 1.18 ) }
    dend_27 { pt3dadd( 69.7441, 91.9261, 4.09506, 0.22 ) }
    dend_27 { pt3dadd( 70.3565, 92.2751, 4.15391, 0.22 ) }
    dend_27 { pt3dadd( 70.8715, 92.5649, 4.20278, 0.22 ) }
    dend_27 { pt3dadd( 71.4275, 92.8989, 4.27072, 0.22 ) }
    dend_27 { pt3dadd( 71.798, 93.1733, 4.32117, 0.22 ) }
    dend_27 { pt3dadd( 72.2158, 93.574, 4.38009, 0.37 ) }
    dend_27 { pt3dadd( 72.8236, 94.3127, 4.47551, 0.37 ) }
    dend_27 { pt3dadd( 73.2152, 94.8658, 4.552, 0.22 ) }
    dend_27 { pt3dadd( 73.6524, 95.5489, 4.66028, 0.52 ) }
    dend_27 { pt3dadd( 74.2301, 96.4883, 4.84533, 0.52 ) }
    dend_27 { pt3dadd( 74.6233, 97.0994, 4.98898, 0.96 ) }
    dend_27 { pt3dadd( 75.0312, 97.6679, 5.14591, 1.77 ) }
    dend_27 { pt3dadd( 75.5012, 98.2525, 5.32754, 1.77 ) }
    dend_27 { pt3dadd( 76.1798, 99.0493, 5.57967, 0.22 ) }
    dend_27 { pt3dadd( 76.6722, 99.6044, 5.74823, 0.22 ) }
    dend_27 { pt3dadd( 77.1538, 100.099, 5.90961, 0.22 ) }
    dend_27 { pt3dadd( 77.649, 100.586, 6.06026, 0.22 ) }
    dend_27 { pt3dadd( 78.1121, 101.028, 6.17244, 0.22 ) }
    dend_27 { pt3dadd( 78.6622, 101.579, 6.27701, 0.22 ) }
    dend_27 { pt3dadd( 79.2405, 102.192, 6.34497, 0.22 ) }
    dend_27 { pt3dadd( 79.5356, 102.529, 6.37159, 0.66 ) }
    dend_27 { pt3dadd( 79.9714, 103.043, 6.41156, 0.81 ) }
    dend_27 { pt3dadd( 80.6115, 103.809, 6.49058, 0.22 ) }
    dend_27 { pt3dadd( 81.1207, 104.393, 6.57555, 0.22 ) }
    dend_27 { pt3dadd( 81.5478, 104.907, 6.66464, 0.74 ) }
    dend_27 { pt3dadd( 82.0475, 105.588, 6.78579, 0.88 ) }
    dend_27 { pt3dadd( 82.3271, 106.022, 6.86704, 1.11 ) }
    dend_27 { pt3dadd( 82.9364, 107.109, 7.09973, 1.11 ) }
    dend_27 { pt3dadd( 83.428, 108.136, 7.33384, 0.37 ) }
    dend_27 { pt3dadd( 83.9369, 109.296, 7.62716, 0.22 ) }
    dend_27 { pt3dadd( 84.2338, 110.026, 7.83464, 0.29 ) }
    dend_27 { pt3dadd( 84.4968, 110.692, 8.05001, 0.29 ) }
    dend_27 { pt3dadd( 84.7766, 111.358, 8.29818, 0.37 ) }
    dend_27 { pt3dadd( 85.102, 111.946, 8.57193, 0.37 ) }
    dend_27 { pt3dadd( 85.414, 112.315, 8.80672, 0.22 ) }
    dend_27 { pt3dadd( 85.8394, 112.645, 9.08413, 0.22 ) }
    dend_27 { pt3dadd( 86.4898, 113.047, 9.47631, 0.22 ) }
    dend_27 { pt3dadd( 87.1384, 113.393, 9.83168, 0.29 ) }
    dend_27 { pt3dadd( 88.1072, 113.881, 10.3406, 0.22 ) }
    dend_27 { pt3dadd( 88.6871, 114.187, 10.6376, 1.4 ) }
    dend_27 { pt3dadd( 89.2967, 114.561, 10.9553, 2.21 ) }
    dend_27 { pt3dadd( 89.7128, 114.888, 11.2001, 1.7 ) }
    dend_27 { pt3dadd( 90.2288, 115.402, 11.573, 0.96 ) }
    dend_27 { pt3dadd( 90.7924, 116.044, 12.0785, 0.96 ) }
    dend_27 { pt3dadd( 91.1086, 116.414, 12.4026, 1.47 ) }
    dend_27 { pt3dadd( 91.4478, 116.788, 12.7596, 1.47 ) }
    dend_27 { pt3dadd( 92.1327, 117.487, 13.4715, 0.22 ) }
    dend_27 { pt3dadd( 92.5796, 117.917, 13.9045, 0.22 ) }
    dend_27 { pt3dadd( 93.0559, 118.383, 14.3331, 0.22 ) }
    dend_27 { pt3dadd( 93.5375, 118.853, 14.7058, 0.22 ) }
    dend_27 { pt3dadd( 93.96, 119.253, 14.9871, 0.22 ) }
    dend_27 { pt3dadd( 94.2878, 119.566, 15.1542, 0.88 ) }
    dend_27 { pt3dadd( 94.7968, 120.053, 15.3489, 1.99 ) }
    dend_27 { pt3dadd( 95.531, 120.773, 15.5582, 1.55 ) }
    dend_27 { pt3dadd( 96.4009, 121.675, 15.7447, 0.22 ) }
    dend_27 { pt3dadd( 97.0369, 122.351, 15.8646, 0.22 ) }
    dend_27 { pt3dadd( 97.8932, 123.221, 16.0072, 0.29 ) }
    dend_27 { pt3dadd( 98.4282, 123.74, 16.0855, 0.59 ) }
    dend_27 { pt3dadd( 99.2816, 124.488, 16.1582, 0.96 ) }
    dend_27 { pt3dadd( 100.296, 125.278, 16.1888, 0.15 ) }
    dend_27 { pt3dadd( 101.159, 125.892, 16.1979, 1.18 ) }
    dend_27 { pt3dadd( 102.274, 126.64, 16.2007, 1.18 ) }
    dend_27 { pt3dadd( 103.227, 127.248, 16.2039, 1.4 ) }
    dend_27 { pt3dadd( 104.605, 128.089, 16.2076, 0.22 ) }
    dend_27 { pt3dadd( 105.231, 128.473, 16.2066, 0.37 ) }
    dend_27 { pt3dadd( 105.891, 128.899, 16.2161, 1.03 ) }
    dend_27 { pt3dadd( 106.187, 129.111, 16.2293, 0.88 ) }
    dend_27 { pt3dadd( 106.595, 129.431, 16.2774, 0.74 ) }
    dend_27 { pt3dadd( 107.161, 129.891, 16.387, 0.96 ) }
    dend_27 { pt3dadd( 107.922, 130.615, 16.6168, 0.22 ) }
    dend_27 { pt3dadd( 108.604, 131.303, 16.8214, 0.96 ) }
    dend_27 { pt3dadd( 108.97, 131.662, 16.9121, 0.74 ) }
    dend_27 { pt3dadd( 109.615, 132.252, 17.073, 0.22 ) }
    dend_27 { pt3dadd( 110.258, 132.817, 17.2345, 0.29 ) }
    dend_27 { pt3dadd( 111.216, 133.635, 17.4687, 0.29 ) }
    dend_27 { pt3dadd( 111.885, 134.176, 17.6104, 0.29 ) }
    dend_27 { pt3dadd( 112.938, 135.007, 17.783, 0.22 ) }
    dend_27 { pt3dadd( 113.464, 135.424, 17.8534, 0.66 ) }
    dend_27 { pt3dadd( 113.899, 135.792, 17.9056, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 114.175, 136.02, 17.9321, 1.55 ) }
    dend_27 { pt3dadd( 115.214, 136.84, 17.9948, 0.15 ) }
    dend_27 { pt3dadd( 116.026, 137.517, 18.034, 0.15 ) }
    dend_27 { pt3dadd( 116.715, 138.136, 18.0522, 0.15 ) }
    dend_27 { pt3dadd( 117.298, 138.688, 18.0299, 0.15 ) }
    dend_27 { pt3dadd( 117.828, 139.219, 17.9977, 0.15 ) }
    dend_27 { pt3dadd( 118.238, 139.67, 17.9821, 0.88 ) }
    dend_27 { pt3dadd( 118.739, 140.273, 17.9718, 1.18 ) }
    dend_27 { pt3dadd( 119.329, 141.051, 17.9688, 1.18 ) }
    dend_27 { pt3dadd( 120.178, 142.181, 17.9687, 0.22 ) }
    dend_27 { pt3dadd( 121.082, 143.348, 17.9758, 0.22 ) }
    dend_27 { pt3dadd( 121.638, 144.104, 17.9854, 1.18 ) }
    dend_27 { pt3dadd( 121.904, 144.471, 17.9949, 1.92 ) }
    dend_27 { pt3dadd( 122.34, 145.083, 18.0259, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 41.1019, 59.9628, -0.146635, 0.44 ) }
    dend_26 { pt3dadd( 41.8328, 60.2142, -0.023917, 0.44 ) }
    dend_26 { pt3dadd( 42.6098, 60.4889, 0.116125, 0.44 ) }
    dend_26 { pt3dadd( 42.9968, 60.6048, 0.197382, 0.96 ) }
    dend_26 { pt3dadd( 43.8619, 60.8131, 0.404314, 1.7 ) }
    dend_26 { pt3dadd( 44.6292, 60.9795, 0.594934, 1.99 ) }
    dend_26 { pt3dadd( 45.7851, 61.2067, 0.87511, 1.11 ) }
    dend_26 { pt3dadd( 46.5691, 61.337, 1.04316, 0.37 ) }
    dend_26 { pt3dadd( 47.3015, 61.4426, 1.15768, 0.37 ) }
    dend_26 { pt3dadd( 48.2092, 61.5642, 1.25375, 0.37 ) }
    dend_26 { pt3dadd( 48.7875, 61.6447, 1.2684, 0.37 ) }
    dend_26 { pt3dadd( 49.344, 61.7259, 1.24512, 0.44 ) }
    dend_26 { pt3dadd( 50.1614, 61.8414, 1.16103, 0.96 ) }
    dend_26 { pt3dadd( 51.1984, 61.9858, 1.00101, 1.62 ) }
    dend_26 { pt3dadd( 52.231, 62.1508, 0.845974, 1.18 ) }
    dend_26 { pt3dadd( 53.5966, 62.3961, 0.68191, 0.29 ) }
    dend_26 { pt3dadd( 54.2983, 62.5219, 0.639194, 0.44 ) }
    dend_26 { pt3dadd( 54.8172, 62.6151, 0.646079, 0.59 ) }
    dend_26 { pt3dadd( 55.6191, 62.7509, 0.710571, 0.29 ) }
    dend_26 { pt3dadd( 56.6897, 62.9435, 0.86305, 0.29 ) }
    dend_26 { pt3dadd( 57.9045, 63.1986, 1.09198, 0.59 ) }
    dend_26 { pt3dadd( 58.731, 63.4322, 1.27036, 1.03 ) }
    dend_26 { pt3dadd( 59.7159, 63.7924, 1.48745, 1.7 ) }
    dend_26 { pt3dadd( 60.6442, 64.1941, 1.69174, 1.7 ) }
    dend_26 { pt3dadd( 61.7587, 64.6973, 1.93885, 0.96 ) }
    dend_26 { pt3dadd( 62.4328, 64.9869, 2.07169, 1.33 ) }
    dend_26 { pt3dadd( 63.7017, 65.5175, 2.31372, 1.62 ) }
    dend_26 { pt3dadd( 64.7171, 65.9404, 2.481, 0.52 ) }
    dend_26 { pt3dadd( 65.504, 66.2668, 2.59885, 0.22 ) }
    dend_26 { pt3dadd( 66.3489, 66.6179, 2.7128, 0.22 ) }
    dend_26 { pt3dadd( 67.4231, 67.046, 2.82319, 0.22 ) }
    dend_26 { pt3dadd( 68.2459, 67.3925, 2.87533, 0.74 ) }
    dend_26 { pt3dadd( 68.9938, 67.7513, 2.8905, 1.33 ) }
    dend_26 { pt3dadd( 69.6521, 68.1472, 2.86919, 1.77 ) }
    dend_26 { pt3dadd( 70.6226, 68.8641, 2.79308, 0.44 ) }
    dend_26 { pt3dadd( 71.5108, 69.6491, 2.69421, 0.22 ) }
    dend_26 { pt3dadd( 72.2082, 70.3237, 2.60979, 0.66 ) }
    dend_26 { pt3dadd( 72.7577, 70.8414, 2.54637, 0.29 ) }
    dend_26 { pt3dadd( 73.2398, 71.2652, 2.50236, 0.29 ) }
    dend_26 { pt3dadd( 73.5478, 71.4945, 2.48579, 0.22 ) }
    dend_26 { pt3dadd( 73.9701, 71.7593, 2.48907, 0.22 ) }
    dend_26 { pt3dadd( 74.5945, 72.0891, 2.53058, 0.52 ) }
    dend_26 { pt3dadd( 75.3566, 72.4109, 2.59848, 0.88 ) }
    dend_26 { pt3dadd( 76.0326, 72.6435, 2.64838, 0.88 ) }
    dend_26 { pt3dadd( 76.814, 72.8975, 2.69442, 0.22 ) }
    dend_26 { pt3dadd( 77.5102, 73.1456, 2.73919, 0.22 ) }
    dend_26 { pt3dadd( 77.854, 73.2808, 2.76092, 0.52 ) }
    dend_26 { pt3dadd( 78.4667, 73.5376, 2.80021, 1.4 ) }
    dend_26 { pt3dadd( 79.294, 73.8695, 2.83919, 1.18 ) }
    dend_26 { pt3dadd( 80.5737, 74.3502, 2.87891, 0.22 ) }
    dend_26 { pt3dadd( 81.509, 74.6909, 2.87039, 0.59 ) }
    dend_26 { pt3dadd( 82.2026, 74.937, 2.85644, 0.22 ) }
    dend_26 { pt3dadd( 82.9921, 75.2395, 2.82586, 0.88 ) }
    dend_26 { pt3dadd( 83.9992, 75.6853, 2.76841, 1.55 ) }
    dend_26 { pt3dadd( 84.3814, 75.8823, 2.73292, 1.55 ) }
    dend_26 { pt3dadd( 85.6708, 76.6454, 2.53899, 0.88 ) }
    dend_26 { pt3dadd( 86.2801, 77.0419, 2.41911, 0.44 ) }
    dend_26 { pt3dadd( 86.8355, 77.4305, 2.30145, 0.22 ) }
    dend_26 { pt3dadd( 87.3977, 77.8143, 2.18313, 0.22 ) }
    dend_26 { pt3dadd( 87.9882, 78.2092, 2.06348, 0.37 ) }
    dend_26 { pt3dadd( 88.6351, 78.6134, 1.94283, 1.11 ) }
    dend_26 { pt3dadd( 89.4715, 79.0976, 1.80892, 1.18 ) }
    dend_26 { pt3dadd( 90.2481, 79.5369, 1.6982, 0.29 ) }
    dend_26 { pt3dadd( 91.3176, 80.1252, 1.56626, 0.22 ) }
    dend_26 { pt3dadd( 91.9026, 80.4423, 1.5131, 0.22 ) }
    dend_26 { pt3dadd( 92.4959, 80.7779, 1.48524, 1.11 ) }
    dend_26 { pt3dadd( 92.9148, 81.0379, 1.48991, 1.18 ) }
    dend_26 { pt3dadd( 93.7477, 81.63, 1.55798, 0.29 ) }
    dend_26 { pt3dadd( 94.5121, 82.1867, 1.68001, 0.29 ) }
    dend_26 { pt3dadd( 94.9894, 82.522, 1.7858, 1.03 ) }
    dend_26 { pt3dadd( 95.6307, 82.9137, 1.95694, 1.92 ) }
    dend_26 { pt3dadd( 96.0855, 83.1529, 2.06667, 1.92 ) }
    dend_26 { pt3dadd( 97.5677, 83.8177, 2.3601, 0.15 ) }
    dend_26 { pt3dadd( 98.3532, 84.1081, 2.48984, 0.15 ) }
    dend_26 { pt3dadd( 98.8199, 84.2696, 2.5631, 0.37 ) }
    dend_26 { pt3dadd( 99.4836, 84.502, 2.65875, 1.11 ) }
    dend_26 { pt3dadd( 100.601, 84.8977, 2.82016, 1.47 ) }
    dend_26 { pt3dadd( 101.688, 85.26, 2.97504, 0.44 ) }
    dend_26 { pt3dadd( 102.835, 85.6139, 3.13826, 0.22 ) }
    dend_26 { pt3dadd( 103.745, 85.8818, 3.27161, 0.74 ) }
    dend_26 { pt3dadd( 104.471, 86.059, 3.39529, 0.88 ) }
    dend_26 { pt3dadd( 105.717, 86.2154, 3.6326, 0.22 ) }
    dend_26 { pt3dadd( 106.296, 86.2004, 3.76374, 0.22 ) }
    dend_26 { pt3dadd( 106.865, 86.0869, 3.89245, 0.44 ) }
    dend_26 { pt3dadd( 107.423, 85.9039, 4.01434, 0.81 ) }
    dend_26 { pt3dadd( 108.102, 85.634, 4.15947, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 109.208, 85.2006, 4.39128, 0.81 ) }
    dend_26 { pt3dadd( 110.104, 84.8788, 4.59104, 0.22 ) }
    dend_26 { pt3dadd( 110.745, 84.7053, 4.73252, 0.22 ) }
    dend_26 { pt3dadd( 111.284, 84.6331, 4.83886, 0.22 ) }
    dend_26 { pt3dadd( 112.331, 84.645, 5.02287, 0.37 ) }
    dend_26 { pt3dadd( 113.49, 84.8125, 5.19812, 0.22 ) }
    dend_26 { pt3dadd( 113.918, 84.9273, 5.24423, 0.96 ) }
    dend_26 { pt3dadd( 114.697, 85.2069, 5.28219, 1.84 ) }
    dend_26 { pt3dadd( 116.194, 85.8462, 5.25459, 0.22 ) }
    dend_26 { pt3dadd( 116.896, 86.1991, 5.18857, 0.22 ) }
    dend_26 { pt3dadd( 117.186, 86.3823, 5.13683, 0.22 ) }
    dend_26 { pt3dadd( 117.707, 86.8024, 5.00932, 0.22 ) }
    dend_26 { pt3dadd( 118.186, 87.2589, 4.8766, 0.44 ) }
    dend_26 { pt3dadd( 118.832, 87.922, 4.71245, 1.18 ) }
    dend_26 { pt3dadd( 119.386, 88.4809, 4.60398, 1.62 ) }
    dend_26 { pt3dadd( 119.943, 89.0002, 4.53535, 1.7 ) }
    dend_26 { pt3dadd( 120.818, 89.8148, 4.49235, 1.25 ) }
    dend_26 { pt3dadd( 121.942, 90.8198, 4.51131, 0.29 ) }
    dend_26 { pt3dadd( 122.652, 91.3729, 4.55801, 1.03 ) }
    dend_26 { pt3dadd( 123.287, 91.7938, 4.60627, 1.47 ) }
    dend_26 { pt3dadd( 124.51, 92.4793, 4.71423, 0.22 ) }
    dend_26 { pt3dadd( 125.504, 92.9548, 4.79913, 0.88 ) }
    dend_26 { pt3dadd( 126.259, 93.2756, 4.86242, 0.44 ) }
    dend_26 { pt3dadd( 127.382, 93.7464, 4.94329, 0.22 ) }
    dend_26 { pt3dadd( 128.188, 94.1181, 4.99673, 0.22 ) }
    dend_26 { pt3dadd( 128.812, 94.441, 5.03714, 1.03 ) }
    dend_26 { pt3dadd( 129.548, 94.8716, 5.09342, 1.47 ) }
    dend_26 { pt3dadd( 130.175, 95.3044, 5.1385, 1.25 ) }
    dend_26 { pt3dadd( 131.11, 96.0798, 5.18281, 0.52 ) }
    dend_26 { pt3dadd( 132.122, 97.0338, 5.2003, 0.37 ) }
    dend_26 { pt3dadd( 132.652, 97.5411, 5.18904, 1.03 ) }
    dend_26 { pt3dadd( 132.964, 97.8263, 5.15994, 1.4 ) }
    dend_26 { pt3dadd( 133.944, 98.6646, 5.01373, 0.96 ) }
    dend_26 { pt3dadd( 134.624, 99.1687, 4.87579, 0.81 ) }
    dend_26 { pt3dadd( 135.662, 99.8414, 4.6306, 0.22 ) }
    dend_26 { pt3dadd( 136.309, 100.199, 4.4662, 0.22 ) }
    dend_26 { pt3dadd( 136.861, 100.467, 4.34528, 0.74 ) }
    dend_26 { pt3dadd( 137.275, 100.662, 4.27322, 0.81 ) }
    dend_26 { pt3dadd( 138.062, 101.058, 4.17617, 0.22 ) }
    dend_26 { pt3dadd( 138.443, 101.286, 4.14035, 0.22 ) }
    dend_26 { pt3dadd( 139.002, 101.668, 4.0747, 0.88 ) }
    dend_26 { pt3dadd( 139.852, 102.328, 3.96861, 1.33 ) }
    dend_26 { pt3dadd( 140.539, 102.929, 3.85554, 1.7 ) }
    dend_26 { pt3dadd( 141.393, 103.765, 3.68328, 1.47 ) }
    dend_26 { pt3dadd( 142.306, 104.758, 3.4637, 0.22 ) }
    dend_26 { pt3dadd( 142.847, 105.387, 3.31858, 0.22 ) }
    dend_26 { pt3dadd( 143.451, 106.178, 3.12097, 0.29 ) }
    dend_26 { pt3dadd( 143.832, 106.797, 2.96074, 0.15 ) }
    dend_26 { pt3dadd( 144.064, 107.279, 2.83875, 0.15 ) }
    dend_26 { pt3dadd( 144.325, 108.011, 2.66293, 0.59 ) }
    dend_26 { pt3dadd( 144.531, 108.726, 2.49955, 0.37 ) }
    dend_26 { pt3dadd( 144.805, 109.687, 2.25832, 0.22 ) }
    dend_26 { pt3dadd( 145.116, 110.703, 1.96317, 0.22 ) }
    dend_26 { pt3dadd( 145.292, 111.198, 1.80696, 1.11 ) }
    dend_26 { pt3dadd( 145.681, 112.201, 1.44959, 0.22 ) }
    dend_26 { pt3dadd( 145.984, 112.941, 1.15284, 0.07 ) }
    dend_26 { pt3dadd( 146.26, 113.647, 0.867701, 0.07 ) }
    dend_26 { pt3dadd( 146.419, 114.082, 0.712401, 0.88 ) }
    dend_26 { pt3dadd( 146.529, 114.447, 0.610175, 1.11 ) }
    dend_26 { pt3dadd( 146.661, 115.229, 0.473904, 0.81 ) }
    dend_26 { pt3dadd( 146.698, 116.077, 0.432728, 0.37 ) }
    dend_26 { pt3dadd( 146.661, 117.291, 0.501544, 0.15 ) }
    dend_26 { pt3dadd( 146.59, 118.306, 0.6531, 0.15 ) }
    dend_26 { pt3dadd( 146.498, 119.186, 0.856695, 0.15 ) }
    dend_26 { pt3dadd( 146.415, 120.008, 1.09498, 0.59 ) }
    dend_26 { pt3dadd( 146.282, 121.188, 1.50588, 0.29 ) }
    dend_26 { pt3dadd( 146.198, 121.819, 1.7646, 0.66 ) }
    dend_26 { pt3dadd( 146.101, 122.545, 2.10519, 1.47 ) }
    dend_26 { pt3dadd( 145.949, 123.677, 2.67357, 0.22 ) }
    dend_26 { pt3dadd( 145.851, 124.489, 3.08753, 0.15 ) }
    dend_26 { pt3dadd( 145.785, 125.359, 3.53694, 0.15 ) }
    dend_26 { pt3dadd( 145.756, 125.969, 3.85304, 0.44 ) }
    dend_26 { pt3dadd( 145.753, 126.535, 4.12589, 0.44 ) }
    dend_26 { pt3dadd( 145.782, 127.396, 4.52566, 0.22 ) }
    dend_26 { pt3dadd( 145.799, 127.779, 4.68748, 0.15 ) }
    dend_26 { pt3dadd( 145.769, 128.581, 4.99732, 0.15 ) }
    dend_26 { pt3dadd( 145.739, 128.894, 5.10168, 0.15 ) }
    dend_26 { pt3dadd( 145.636, 129.365, 5.23175, 0.44 ) }
    dend_26 { pt3dadd( 145.523, 129.726, 5.32461, 0.44 ) }
    dend_26 { pt3dadd( 145.166, 130.78, 5.61664, 0.15 ) }
    dend_26 { pt3dadd( 144.938, 131.526, 5.85175, 0.22 ) }
    dend_26 { pt3dadd( 144.794, 132.031, 6.02184, 0.29 ) }
    dend_26 { pt3dadd( 144.665, 132.861, 6.31588, 0.29 ) }
    dend_26 { pt3dadd( 144.663, 133.511, 6.53942, 0.74 ) }
    dend_26 { pt3dadd( 144.786, 134.29, 6.7944, 0.66 ) }
    dend_26 { pt3dadd( 144.994, 134.978, 7.00239, 1.55 ) }
    dend_26 { pt3dadd( 145.14, 135.351, 7.09771, 1.55 ) }
    dend_26 { pt3dadd( 145.694, 136.504, 7.32542, 0.15 ) }
    dend_26 { pt3dadd( 146.152, 137.323, 7.45385, 0.22 ) }
    dend_26 { pt3dadd( 146.616, 138.101, 7.54958, 0.22 ) }
    dend_26 { pt3dadd( 146.923, 138.588, 7.59384, 0.22 ) }
    dend_26 { pt3dadd( 147.366, 139.237, 7.63872, 0.37 ) }
    dend_26 { pt3dadd( 148.274, 140.484, 7.70699, 0.22 ) }
    dend_26 { pt3dadd( 149.071, 141.585, 7.77179, 0.15 ) }
    dend_26 { pt3dadd( 149.428, 142.101, 7.81963, 1.18 ) }
    dend_26 { pt3dadd( 149.835, 142.743, 7.8969, 2.21 ) }
    dend_26 { pt3dadd( 149.976, 142.983, 7.93076, 2.21 ) }
    dend_26 { pt3dadd( 150.657, 144.38, 8.15434, 0.22 ) }
    dend_26 { pt3dadd( 151.042, 145.462, 8.33481, 0.22 ) }
    dend_26 { pt3dadd( 151.354, 146.658, 8.50863, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 151.436, 147.062, 8.56092, 0.66 ) }
    dend_26 { pt3dadd( 151.483, 147.36, 8.58923, 1.25 ) }
    dend_26 { pt3dadd( 151.623, 148.363, 8.64266, 1.62 ) }
    dend_26 { pt3dadd( 151.76, 149.586, 8.64433, 0.22 ) }
    dend_26 { pt3dadd( 151.918, 150.826, 8.55474, 0.22 ) }
    dend_26 { pt3dadd( 151.979, 151.306, 8.49243, 0.37 ) }
    dend_26 { pt3dadd( 152.085, 152.022, 8.38011, 0.88 ) }
    dend_26 { pt3dadd( 152.164, 152.574, 8.28536, 0.88 ) }
    dend_26 { pt3dadd( 152.255, 153.366, 8.1176, 0.22 ) }
    dend_26 { pt3dadd( 152.299, 154.274, 7.90837, 0.15 ) }
    dend_26 { pt3dadd( 152.284, 154.989, 7.75878, 0.15 ) }
    dend_26 { pt3dadd( 152.263, 155.337, 7.6347, 0.52 ) }
    dend_26 { pt3dadd( 152.203, 156.073, 7.31148, 0.88 ) }
    dend_26 { pt3dadd( 152.128, 156.92, 6.89996, 0.22 ) }
    dend_26 { pt3dadd( 152.085, 157.507, 6.57981, 0.22 ) }
    dend_26 { pt3dadd( 151.964, 158.929, 5.79283, 0.15 ) }
    dend_26 { pt3dadd( 151.825, 161.36, 4.49846, 0.22 ) }
    dend_26 { pt3dadd( 151.809, 162.118, 4.11295, 0.44 ) }
    dend_26 { pt3dadd( 151.836, 162.923, 3.74025, 0.22 ) }
    dend_26 { pt3dadd( 151.911, 163.782, 3.3959, 0.29 ) }
    dend_26 { pt3dadd( 152.0, 164.477, 3.16695, 0.22 ) }
    dend_26 { pt3dadd( 152.182, 165.673, 2.88615, 0.15 ) }
    dend_26 { pt3dadd( 152.27, 166.217, 2.86234, 0.15 ) }
    dend_26 { pt3dadd( 152.435, 167.181, 2.83029, 0.15 ) }
    dend_26 { pt3dadd( 152.538, 167.698, 2.82671, 0.29 ) }
    dend_26 { pt3dadd( 152.654, 168.21, 2.85269, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -16.4784, 84.2856, 58.8775, 0.07 ) }
    dend_19 { pt3dadd( -16.5812, 84.7802, 58.8463, 0.07 ) }
    dend_19 { pt3dadd( -16.6697, 85.2407, 58.846, 0.07 ) }
    dend_19 { pt3dadd( -16.8063, 86.1193, 58.9183, 0.07 ) }
    dend_19 { pt3dadd( -16.8885, 86.8557, 58.9948, 0.29 ) }
    dend_19 { pt3dadd( -16.9291, 87.4328, 59.0688, 0.07 ) }
    dend_19 { pt3dadd( -16.9477, 88.3638, 59.2051, 0.07 ) }
    dend_19 { pt3dadd( -16.9294, 88.8219, 59.2929, 0.52 ) }
    dend_19 { pt3dadd( -16.8462, 89.9698, 59.5463, 1.03 ) }
    dend_19 { pt3dadd( -16.7423, 91.2128, 59.8601, 0.15 ) }
    dend_19 { pt3dadd( -16.7045, 91.7183, 59.9892, 0.15 ) }
    dend_19 { pt3dadd( -16.6699, 92.3513, 60.1376, 0.15 ) }
    dend_19 { pt3dadd( -16.6447, 92.9291, 60.2442, 0.15 ) }
    dend_19 { pt3dadd( -16.6545, 93.4517, 60.3283, 0.07 ) }
    dend_19 { pt3dadd( -16.6919, 93.8637, 60.3904, 0.07 ) }
    dend_19 { pt3dadd( -16.7478, 94.3946, 60.4796, 0.44 ) }
    dend_19 { pt3dadd( -16.7808, 94.6988, 60.5394, 0.74 ) }
    dend_19 { pt3dadd( -16.804, 95.035, 60.6267, 0.74 ) }
    dend_19 { pt3dadd( -16.8093, 96.124, 60.9794, 0.15 ) }
    dend_19 { pt3dadd( -16.7768, 96.7796, 61.2183, 0.15 ) }
    dend_19 { pt3dadd( -16.7087, 97.5792, 61.5219, 0.37 ) }
    dend_19 { pt3dadd( -16.6289, 98.3231, 61.8128, 1.7 ) }
    dend_19 { pt3dadd( -16.5343, 99.1431, 62.1178, 1.03 ) }
    dend_19 { pt3dadd( -16.3892, 100.243, 62.5187, 0.15 ) }
    dend_19 { pt3dadd( -16.2421, 101.202, 62.8796, 0.15 ) }
    dend_19 { pt3dadd( -16.1794, 101.594, 63.0242, 0.66 ) }
    dend_19 { pt3dadd( -16.0964, 102.09, 63.2142, 1.03 ) }
    dend_19 { pt3dadd( -15.9256, 102.919, 63.5299, 0.15 ) }
    dend_19 { pt3dadd( -15.689, 103.908, 63.9134, 0.15 ) }
    dend_19 { pt3dadd( -15.5052, 104.573, 64.205, 0.15 ) }
    dend_19 { pt3dadd( -15.3387, 105.103, 64.4501, 0.29 ) }
    dend_19 { pt3dadd( -15.1558, 105.662, 64.7042, 0.29 ) }
    dend_19 { pt3dadd( -15.0035, 106.191, 64.9148, 0.74 ) }
    dend_19 { pt3dadd( -14.8664, 106.826, 65.1377, 0.81 ) }
    dend_19 { pt3dadd( -14.8025, 107.269, 65.2679, 0.81 ) }
    dend_19 { pt3dadd( -14.7091, 108.508, 65.5656, 0.15 ) }
    dend_19 { pt3dadd( -14.7286, 109.15, 65.7127, 0.74 ) }
    dend_19 { pt3dadd( -14.928, 110.565, 66.0041, 0.15 ) }
    dend_19 { pt3dadd( -15.1296, 111.265, 66.1346, 0.15 ) }
    dend_19 { pt3dadd( -15.442, 111.896, 66.2171, 0.15 ) }
    dend_19 { pt3dadd( -15.7471, 112.349, 66.2512, 0.29 ) }
    dend_19 { pt3dadd( -16.3777, 113.061, 66.2806, 0.15 ) }
    dend_19 { pt3dadd( -16.5945, 113.266, 66.2796, 0.52 ) }
    dend_19 { pt3dadd( -17.363, 113.863, 66.2744, 1.4 ) }
    dend_19 { pt3dadd( -18.808, 114.865, 66.2644, 0.15 ) }
    dend_19 { pt3dadd( -19.2082, 115.102, 66.2618, 0.15 ) }
    dend_19 { pt3dadd( -19.4125, 115.203, 66.2698, 0.15 ) }
    dend_19 { pt3dadd( -20.3327, 115.559, 66.3485, 0.81 ) }
    dend_19 { pt3dadd( -21.3618, 115.844, 66.48, 0.15 ) }
    dend_19 { pt3dadd( -21.7317, 115.901, 66.5428, 0.15 ) }
    dend_19 { pt3dadd( -22.276, 115.94, 66.6395, 1.18 ) }
    dend_19 { pt3dadd( -23.8271, 116.008, 66.9042, 0.07 ) }
    dend_19 { pt3dadd( -24.8387, 116.029, 67.0561, 0.07 ) }
    dend_19 { pt3dadd( -25.304, 116.035, 67.1099, 0.59 ) }
    dend_19 { pt3dadd( -25.7752, 116.057, 67.1402, 1.77 ) }
    dend_19 { pt3dadd( -27.3376, 116.163, 67.1861, 0.07 ) }
    dend_19 { pt3dadd( -28.0452, 116.22, 67.1916, 0.07 ) }
    dend_19 { pt3dadd( -28.5029, 116.252, 67.1743, 0.37 ) }
    dend_19 { pt3dadd( -28.9537, 116.287, 67.1381, 0.52 ) }
    dend_19 { pt3dadd( -29.9848, 116.355, 67.0556, 0.07 ) }
    dend_19 { pt3dadd( -30.9571, 116.419, 66.9579, 0.07 ) }
    dend_19 { pt3dadd( -31.3521, 116.435, 66.9062, 0.07 ) }
    dend_19 { pt3dadd( -31.6777, 116.438, 66.8631, 0.29 ) }
    dend_19 { pt3dadd( -32.4274, 116.411, 66.7753, 0.66 ) }
    dend_19 { pt3dadd( -33.3169, 116.312, 66.6941, 0.07 ) }
    dend_19 { pt3dadd( -33.9776, 116.202, 66.6386, 0.29 ) }
    dend_19 { pt3dadd( -34.5711, 116.095, 66.593, 0.88 ) }
    dend_19 { pt3dadd( -35.8352, 115.894, 66.5309, 0.15 ) }
    dend_19 { pt3dadd( -36.489, 115.799, 66.5207, 0.52 ) }
    dend_19 { pt3dadd( -37.8673, 115.61, 66.5214, 0.07 ) }
    dend_19 { pt3dadd( -38.3124, 115.555, 66.5212, 0.59 ) }
    dend_19 { pt3dadd( -38.9218, 115.482, 66.5268, 1.47 ) }
    dend_19 { pt3dadd( -40.3625, 115.329, 66.5488, 0.07 ) }
    dend_19 { pt3dadd( -40.9082, 115.275, 66.5626, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -41.7388, 115.195, 66.5883, 0.07 ) }
    dend_19 { pt3dadd( -41.9929, 115.171, 66.5934, 0.37 ) }
    dend_19 { pt3dadd( -42.5224, 115.123, 66.5878, 0.81 ) }
    dend_19 { pt3dadd( -43.5055, 115.047, 66.5486, 0.07 ) }
    dend_19 { pt3dadd( -44.2706, 114.997, 66.4812, 0.07 ) }
    dend_19 { pt3dadd( -44.6537, 115.001, 66.4316, 0.44 ) }
    dend_19 { pt3dadd( -45.0484, 115.032, 66.3734, 0.88 ) }
    dend_19 { pt3dadd( -46.1191, 115.187, 66.1787, 0.15 ) }
    dend_19 { pt3dadd( -46.68, 115.304, 66.0529, 0.37 ) }
    dend_19 { pt3dadd( -46.9832, 115.382, 65.9692, 0.37 ) }
    dend_19 { pt3dadd( -48.2126, 115.693, 65.5762, 0.15 ) }
    dend_19 { pt3dadd( -48.6143, 115.789, 65.442, 0.15 ) }
    dend_19 { pt3dadd( -49.2154, 115.939, 65.2286, 0.37 ) }
    dend_19 { pt3dadd( -50.2878, 116.195, 64.8192, 0.07 ) }
    dend_19 { pt3dadd( -50.973, 116.366, 64.5491, 0.29 ) }
    dend_19 { pt3dadd( -51.5939, 116.528, 64.3067, 0.07 ) }
    dend_19 { pt3dadd( -52.2081, 116.7, 64.0663, 0.07 ) }
    dend_19 { pt3dadd( -53.5195, 117.084, 63.5474, 0.07 ) }
    dend_19 { pt3dadd( -55.2585, 117.606, 62.8604, 0.07 ) }
    dend_19 { pt3dadd( -55.8174, 117.784, 62.6391, 0.07 ) }
    dend_19 { pt3dadd( -56.621, 118.054, 62.3306, 0.07 ) }
    dend_19 { pt3dadd( -57.1047, 118.228, 62.154, 0.59 ) }
    dend_19 { pt3dadd( -57.8356, 118.487, 61.8907, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -16.4784, 84.2856, 58.8775, 0.37 ) }
    dend_18 { pt3dadd( -16.1761, 83.4549, 59.9719, 0.37 ) }
    dend_18 { pt3dadd( -15.9079, 82.9247, 60.666, 0.37 ) }
    dend_18 { pt3dadd( -15.6844, 82.5782, 61.1322, 0.59 ) }
    dend_18 { pt3dadd( -15.2357, 81.9769, 61.8696, 0.22 ) }
    dend_18 { pt3dadd( -14.8856, 81.5183, 62.3715, 0.22 ) }
    dend_18 { pt3dadd( -14.6415, 81.1559, 62.7101, 0.15 ) }
    dend_18 { pt3dadd( -14.4164, 80.7953, 63.0509, 0.15 ) }
    dend_18 { pt3dadd( -14.113, 80.2734, 63.4776, 0.15 ) }
    dend_18 { pt3dadd( -13.8559, 79.747, 63.8511, 0.59 ) }
    dend_18 { pt3dadd( -13.712, 79.3239, 64.0936, 0.88 ) }
    dend_18 { pt3dadd( -13.461, 78.1844, 64.6532, 0.15 ) }
    dend_18 { pt3dadd( -13.367, 77.3385, 65.07, 0.15 ) }
    dend_18 { pt3dadd( -13.3495, 76.8575, 65.2908, 0.44 ) }
    dend_18 { pt3dadd( -13.3632, 76.391, 65.4906, 0.81 ) }
    dend_18 { pt3dadd( -13.4162, 75.6894, 65.7807, 0.07 ) }
    dend_18 { pt3dadd( -13.4944, 74.8251, 66.1079, 0.22 ) }
    dend_18 { pt3dadd( -13.58, 73.9137, 66.4185, 0.22 ) }
    dend_18 { pt3dadd( -13.6913, 72.6291, 66.8133, 0.07 ) }
    dend_18 { pt3dadd( -13.7923, 71.5663, 67.1158, 0.07 ) }
    dend_18 { pt3dadd( -13.8799, 70.557, 67.3922, 0.07 ) }
    dend_18 { pt3dadd( -13.9146, 69.9885, 67.5331, 0.29 ) }
    dend_18 { pt3dadd( -13.9842, 68.6064, 67.86, 0.07 ) }
    dend_18 { pt3dadd( -14.0073, 67.9578, 67.9978, 0.88 ) }
    dend_18 { pt3dadd( -14.034, 67.1418, 68.1762, 1.25 ) }
    dend_18 { pt3dadd( -14.0391, 66.61, 68.2915, 1.25 ) }
    dend_18 { pt3dadd( -14.0236, 64.8888, 68.659, 0.07 ) }
    dend_18 { pt3dadd( -14.0072, 63.7499, 68.8934, 0.07 ) }
    dend_18 { pt3dadd( -13.9917, 63.1081, 69.0167, 0.07 ) }
    dend_18 { pt3dadd( -13.9827, 62.7308, 69.0869, 0.52 ) }
    dend_18 { pt3dadd( -13.963, 61.72, 69.2621, 0.66 ) }
    dend_18 { pt3dadd( -13.9662, 61.1957, 69.3405, 0.22 ) }
    dend_18 { pt3dadd( -13.9799, 60.5051, 69.4249, 0.52 ) }
    dend_18 { pt3dadd( -14.0028, 59.9255, 69.4755, 0.29 ) }
    dend_18 { pt3dadd( -14.0783, 58.8371, 69.5616, 0.07 ) }
    dend_18 { pt3dadd( -14.1742, 57.8951, 69.6279, 0.07 ) }
    dend_18 { pt3dadd( -14.2659, 57.2064, 69.6795, 0.22 ) }
    dend_18 { pt3dadd( -14.3435, 56.7296, 69.7164, 0.22 ) }
    dend_18 { pt3dadd( -14.574, 55.4074, 69.8202, 0.07 ) }
    dend_18 { pt3dadd( -14.6409, 55.0621, 69.8474, 0.37 ) }
    dend_18 { pt3dadd( -14.725, 54.6614, 69.881, 0.59 ) }
    dend_18 { pt3dadd( -14.9368, 53.7279, 69.9657, 0.07 ) }
    dend_18 { pt3dadd( -15.1181, 52.9722, 70.0419, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -58.9664, -68.755, 50.8327, 0.15 ) }
    dend_16 { pt3dadd( -60.1468, -69.1091, 50.5299, 0.15 ) }
    dend_16 { pt3dadd( -61.294, -69.4443, 50.2086, 0.15 ) }
    dend_16 { pt3dadd( -62.3333, -69.7465, 49.8874, 0.15 ) }
    dend_16 { pt3dadd( -63.395, -70.0543, 49.546, 0.37 ) }
    dend_16 { pt3dadd( -64.5627, -70.3882, 49.1571, 0.15 ) }
    dend_16 { pt3dadd( -65.7345, -70.715, 48.7565, 0.07 ) }
    dend_16 { pt3dadd( -66.3272, -70.8788, 48.5569, 0.22 ) }
    dend_16 { pt3dadd( -68.0658, -71.38, 47.8833, 0.15 ) }
    dend_16 { pt3dadd( -68.1869, -71.4119, 47.8317, 0.59 ) }
    dend_16 { pt3dadd( -68.9568, -71.6011, 47.5008, 1.11 ) }
    dend_16 { pt3dadd( -69.3049, -71.6874, 47.3513, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -58.9664, -68.755, 50.8327, 0.59 ) }
    dend_15 { pt3dadd( -59.2638, -69.3901, 51.0479, 0.59 ) }
    dend_15 { pt3dadd( -59.4913, -69.8494, 51.2086, 0.96 ) }
    dend_15 { pt3dadd( -59.7999, -70.5707, 51.4699, 1.47 ) }
    dend_15 { pt3dadd( -59.9696, -71.0585, 51.645, 1.47 ) }
    dend_15 { pt3dadd( -60.2199, -71.9405, 51.9657, 0.22 ) }
    dend_15 { pt3dadd( -60.3252, -72.2689, 52.0893, 0.15 ) }
    dend_15 { pt3dadd( -60.4584, -72.5738, 52.2149, 0.15 ) }
    dend_15 { pt3dadd( -60.7167, -73.0854, 52.4452, 0.15 ) }
    dend_15 { pt3dadd( -60.9513, -73.5162, 52.6476, 0.37 ) }
    dend_15 { pt3dadd( -61.2172, -73.9449, 52.8835, 0.37 ) }
    dend_15 { pt3dadd( -61.7454, -74.6882, 53.3798, 0.22 ) }
    dend_15 { pt3dadd( -62.0678, -75.1058, 53.7058, 0.22 ) }
    dend_15 { pt3dadd( -62.2623, -75.351, 53.9101, 0.96 ) }
    dend_15 { pt3dadd( -62.7546, -75.9583, 54.4539, 2.06 ) }
    dend_15 { pt3dadd( -63.2243, -76.5385, 55.0106, 1.11 ) }
    dend_15 { pt3dadd( -63.8367, -77.3099, 55.7822, 0.22 ) }
    dend_15 { pt3dadd( -64.2782, -77.9078, 56.3957, 0.22 ) }
    dend_15 { pt3dadd( -64.4775, -78.1737, 56.663, 0.22 ) }
    dend_15 { pt3dadd( -64.6433, -78.3848, 56.87, 0.22 ) }
    dend_15 { pt3dadd( -64.797, -78.5645, 57.0452, 0.22 ) }
    dend_15 { pt3dadd( -65.0469, -78.8285, 57.2641, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -65.3608, -79.1137, 57.4562, 0.22 ) }
    dend_15 { pt3dadd( -65.8747, -79.5475, 57.7144, 0.22 ) }
    dend_15 { pt3dadd( -66.3131, -79.9349, 57.9225, 0.22 ) }
    dend_15 { pt3dadd( -66.588, -80.2008, 58.051, 0.66 ) }
    dend_15 { pt3dadd( -67.1137, -80.7679, 58.3143, 1.11 ) }
    dend_15 { pt3dadd( -67.8581, -81.6253, 58.7141, 0.29 ) }
    dend_15 { pt3dadd( -68.5023, -82.3734, 59.0562, 0.22 ) }
    dend_15 { pt3dadd( -69.0424, -82.9973, 59.3435, 0.22 ) }
    dend_15 { pt3dadd( -69.2991, -83.2819, 59.4635, 0.29 ) }
    dend_15 { pt3dadd( -69.9451, -83.9892, 59.7426, 0.22 ) }
    dend_15 { pt3dadd( -70.2378, -84.3083, 59.8656, 0.96 ) }
    dend_15 { pt3dadd( -70.7405, -84.849, 60.0665, 1.84 ) }
    dend_15 { pt3dadd( -71.5901, -85.7329, 60.3894, 0.29 ) }
    dend_15 { pt3dadd( -72.3005, -86.4095, 60.6578, 0.22 ) }
    dend_15 { pt3dadd( -72.7769, -86.8426, 60.8463, 0.22 ) }
    dend_15 { pt3dadd( -73.0761, -87.1155, 60.9714, 0.22 ) }
    dend_15 { pt3dadd( -73.3464, -87.3923, 61.103, 0.37 ) }
    dend_15 { pt3dadd( -73.751, -87.8925, 61.3411, 0.52 ) }
    dend_15 { pt3dadd( -74.1495, -88.5211, 61.6008, 0.29 ) }
    dend_15 { pt3dadd( -74.4501, -89.0955, 61.829, 0.29 ) }
    dend_15 { pt3dadd( -74.6107, -89.4419, 61.9462, 0.29 ) }
    dend_15 { pt3dadd( -74.9031, -90.1326, 62.1652, 0.44 ) }
    dend_15 { pt3dadd( -75.2087, -90.9521, 62.4236, 0.52 ) }
    dend_15 { pt3dadd( -75.5888, -92.112, 62.7769, 0.15 ) }
    dend_15 { pt3dadd( -75.7635, -92.6972, 62.9531, 0.59 ) }
    dend_15 { pt3dadd( -76.0682, -93.6474, 63.2543, 1.7 ) }
    dend_15 { pt3dadd( -76.4914, -94.795, 63.6511, 0.15 ) }
    dend_15 { pt3dadd( -76.7194, -95.3234, 63.8624, 0.44 ) }
    dend_15 { pt3dadd( -76.8801, -95.681, 64.0224, 0.44 ) }
    dend_15 { pt3dadd( -77.1218, -96.1828, 64.2765, 0.07 ) }
    dend_15 { pt3dadd( -77.346, -96.6129, 64.502, 0.07 ) }
    dend_15 { pt3dadd( -77.5456, -96.9303, 64.6743, 0.07 ) }
    dend_15 { pt3dadd( -77.8567, -97.3525, 64.8956, 0.29 ) }
    dend_15 { pt3dadd( -78.411, -98.0409, 65.2363, 0.52 ) }
    dend_15 { pt3dadd( -78.8157, -98.5295, 65.4797, 0.22 ) }
    dend_15 { pt3dadd( -79.1616, -98.9384, 65.6861, 0.22 ) }
    dend_15 { pt3dadd( -79.5505, -99.3855, 65.9201, 0.37 ) }
    dend_15 { pt3dadd( -79.9408, -99.8056, 66.1648, 0.74 ) }
    dend_15 { pt3dadd( -80.546, -100.385, 66.5376, 1.33 ) }
    dend_15 { pt3dadd( -81.2056, -100.93, 66.9207, 0.22 ) }
    dend_15 { pt3dadd( -81.7054, -101.308, 67.1927, 0.15 ) }
    dend_15 { pt3dadd( -82.0955, -101.586, 67.3991, 0.29 ) }
    dend_15 { pt3dadd( -82.634, -101.96, 67.6891, 0.15 ) }
    dend_15 { pt3dadd( -83.0687, -102.249, 67.9098, 0.59 ) }
    dend_15 { pt3dadd( -83.5348, -102.528, 68.1422, 0.74 ) }
    dend_15 { pt3dadd( -84.2267, -102.899, 68.4517, 0.07 ) }
    dend_15 { pt3dadd( -84.8772, -103.232, 68.7358, 0.15 ) }
    dend_15 { pt3dadd( -85.3408, -103.464, 68.9355, 0.15 ) }
    dend_15 { pt3dadd( -85.7207, -103.656, 69.0947, 0.15 ) }
    dend_15 { pt3dadd( -86.1529, -103.873, 69.2588, 0.15 ) }
    dend_15 { pt3dadd( -86.7612, -104.177, 69.4661, 0.29 ) }
    dend_15 { pt3dadd( -87.258, -104.413, 69.6096, 0.74 ) }
    dend_15 { pt3dadd( -87.9981, -104.763, 69.7883, 1.03 ) }
    dend_15 { pt3dadd( -88.7283, -105.119, 69.9434, 0.29 ) }
    dend_15 { pt3dadd( -89.753, -105.628, 70.1697, 0.22 ) }
    dend_15 { pt3dadd( -90.3859, -105.96, 70.2994, 0.88 ) }
    dend_15 { pt3dadd( -91.0992, -106.323, 70.4464, 1.33 ) }
    dend_15 { pt3dadd( -91.7265, -106.629, 70.5679, 1.47 ) }
    dend_15 { pt3dadd( -92.9241, -107.179, 70.7943, 0.22 ) }
    dend_15 { pt3dadd( -93.5488, -107.445, 70.9074, 0.22 ) }
    dend_15 { pt3dadd( -94.2775, -107.744, 71.0494, 1.03 ) }
    dend_15 { pt3dadd( -95.0557, -108.052, 71.1972, 1.55 ) }
    dend_15 { pt3dadd( -96.1759, -108.502, 71.415, 0.74 ) }
    dend_15 { pt3dadd( -97.2773, -108.98, 71.6687, 0.22 ) }
    dend_15 { pt3dadd( -97.8412, -109.263, 71.8125, 0.22 ) }
    dend_15 { pt3dadd( -98.3522, -109.542, 71.9421, 0.22 ) }
    dend_15 { pt3dadd( -98.9422, -109.898, 72.1084, 0.15 ) }
    dend_15 { pt3dadd( -99.4803, -110.29, 72.2795, 0.37 ) }
    dend_15 { pt3dadd( -100.142, -110.876, 72.5361, 0.15 ) }
    dend_15 { pt3dadd( -100.585, -111.36, 72.7393, 0.15 ) }
    dend_15 { pt3dadd( -101.133, -112.043, 73.0403, 0.22 ) }
    dend_15 { pt3dadd( -101.37, -112.365, 73.1802, 0.15 ) }
    dend_15 { pt3dadd( -101.717, -112.87, 73.4079, 0.15 ) }
    dend_15 { pt3dadd( -101.914, -113.192, 73.564, 0.74 ) }
    dend_15 { pt3dadd( -102.124, -113.591, 73.7714, 0.88 ) }
    dend_15 { pt3dadd( -102.493, -114.442, 74.2723, 0.15 ) }
    dend_15 { pt3dadd( -102.629, -114.769, 74.473, 0.22 ) }
    dend_15 { pt3dadd( -102.852, -115.133, 74.713, 0.22 ) }
    dend_15 { pt3dadd( -103.314, -115.691, 75.1067, 0.22 ) }
    dend_15 { pt3dadd( -103.463, -115.84, 75.218, 0.22 ) }
    dend_15 { pt3dadd( -103.832, -116.16, 75.4628, 0.88 ) }
    dend_15 { pt3dadd( -104.473, -116.638, 75.8081, 1.84 ) }
    dend_15 { pt3dadd( -105.499, -117.299, 76.2578, 0.15 ) }
    dend_15 { pt3dadd( -106.112, -117.679, 76.4719, 0.15 ) }
    dend_15 { pt3dadd( -106.568, -117.958, 76.5834, 0.29 ) }
    dend_15 { pt3dadd( -107.228, -118.389, 76.7533, 0.74 ) }
    dend_15 { pt3dadd( -107.801, -118.796, 76.9197, 1.11 ) }
    dend_15 { pt3dadd( -108.331, -119.215, 77.1049, 0.52 ) }
    dend_15 { pt3dadd( -109.058, -119.821, 77.3901, 0.22 ) }
    dend_15 { pt3dadd( -110.226, -120.713, 77.8596, 0.29 ) }
    dend_15 { pt3dadd( -111.17, -121.379, 78.2694, 0.15 ) }
    dend_15 { pt3dadd( -111.699, -121.73, 78.5202, 0.37 ) }
    dend_15 { pt3dadd( -112.393, -122.148, 78.8755, 1.18 ) }
    dend_15 { pt3dadd( -113.347, -122.693, 79.4282, 0.44 ) }
    dend_15 { pt3dadd( -114.194, -123.111, 79.9717, 0.29 ) }
    dend_15 { pt3dadd( -114.798, -123.387, 80.3908, 0.15 ) }
    dend_15 { pt3dadd( -115.286, -123.593, 80.7132, 0.88 ) }
    dend_15 { pt3dadd( -116.008, -123.89, 81.1933, 1.03 ) }
    dend_15 { pt3dadd( -117.011, -124.287, 81.9008, 0.22 ) }
    dend_15 { pt3dadd( -117.946, -124.657, 82.6513, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -118.389, -124.829, 83.034, 0.59 ) }
    dend_15 { pt3dadd( -118.906, -125.017, 83.4855, 0.96 ) }
    dend_15 { pt3dadd( -119.626, -125.231, 84.109, 0.37 ) }
    dend_15 { pt3dadd( -120.587, -125.437, 84.9347, 0.15 ) }
    dend_15 { pt3dadd( -121.363, -125.522, 85.5816, 0.59 ) }
    dend_15 { pt3dadd( -121.832, -125.54, 85.9694, 1.77 ) }
    dend_15 { pt3dadd( -123.018, -125.532, 86.9469, 0.22 ) }
    dend_15 { pt3dadd( -123.762, -125.512, 87.5727, 0.22 ) }
    dend_15 { pt3dadd( -124.308, -125.489, 88.0111, 0.37 ) }
    dend_15 { pt3dadd( -124.855, -125.479, 88.4121, 0.37 ) }
    dend_15 { pt3dadd( -125.29, -125.49, 88.7161, 0.37 ) }
    dend_15 { pt3dadd( -125.873, -125.52, 89.1403, 0.81 ) }
    dend_15 { pt3dadd( -126.368, -125.585, 89.5448, 0.81 ) }
    dend_15 { pt3dadd( -127.122, -125.817, 90.2571, 0.29 ) }
    dend_15 { pt3dadd( -127.541, -126.022, 90.7405, 0.29 ) }
    dend_15 { pt3dadd( -127.782, -126.214, 91.1597, 0.29 ) }
    dend_15 { pt3dadd( -127.861, -126.315, 91.396, 0.29 ) }
    dend_15 { pt3dadd( -128.057, -126.685, 92.3768, 0.29 ) }
    dend_15 { pt3dadd( -128.107, -126.837, 92.7862, 0.44 ) }
    dend_15 { pt3dadd( -128.183, -127.121, 93.5466, 0.44 ) }
    dend_15 { pt3dadd( -128.342, -127.511, 94.5943, 0.81 ) }
    dend_15 { pt3dadd( -128.562, -127.827, 95.4976, 0.81 ) }
    dend_15 { pt3dadd( -128.805, -128.069, 96.1934, 0.81 ) }
    dend_15 { pt3dadd( -128.998, -128.199, 96.5898, 0.22 ) }
    dend_15 { pt3dadd( -129.527, -128.483, 97.4937, 0.22 ) }
    dend_15 { pt3dadd( -130.216, -128.79, 98.4668, 0.22 ) }
    dend_15 { pt3dadd( -130.897, -129.072, 99.2961, 0.81 ) }
    dend_15 { pt3dadd( -131.569, -129.356, 100.033, 0.52 ) }
    dend_15 { pt3dadd( -132.62, -129.832, 101.047, 0.22 ) }
    dend_15 { pt3dadd( -133.09, -130.061, 101.44, 0.22 ) }
    dend_15 { pt3dadd( -133.458, -130.255, 101.679, 0.52 ) }
    dend_15 { pt3dadd( -134.131, -130.633, 101.962, 0.15 ) }
    dend_15 { pt3dadd( -134.454, -130.82, 102.021, 0.59 ) }
    dend_15 { pt3dadd( -135.302, -131.334, 102.029, 0.15 ) }
    dend_15 { pt3dadd( -135.899, -131.725, 101.905, 0.37 ) }
    dend_15 { pt3dadd( -136.553, -132.161, 101.698, 0.15 ) }
    dend_15 { pt3dadd( -137.134, -132.515, 101.452, 0.37 ) }
    dend_15 { pt3dadd( -137.498, -132.686, 101.233, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 122.34, 145.083, 18.0259, 0.96 ) }
    dend_31 { pt3dadd( 123.389, 146.011, 18.0881, 0.96 ) }
    dend_31 { pt3dadd( 124.115, 146.712, 18.1096, 1.25 ) }
    dend_31 { pt3dadd( 124.773, 147.412, 18.1055, 0.66 ) }
    dend_31 { pt3dadd( 125.176, 147.87, 18.0922, 0.22 ) }
    dend_31 { pt3dadd( 125.66, 148.435, 18.0712, 0.15 ) }
    dend_31 { pt3dadd( 125.972, 148.789, 18.0607, 0.37 ) }
    dend_31 { pt3dadd( 126.606, 149.546, 18.026, 0.15 ) }
    dend_31 { pt3dadd( 127.063, 150.067, 18.0098, 0.37 ) }
    dend_31 { pt3dadd( 127.413, 150.432, 18.0097, 0.88 ) }
    dend_31 { pt3dadd( 127.845, 150.815, 18.0061, 0.88 ) }
    dend_31 { pt3dadd( 128.879, 151.545, 17.9486, 0.22 ) }
    dend_31 { pt3dadd( 129.595, 152.005, 17.9117, 0.22 ) }
    dend_31 { pt3dadd( 130.327, 152.401, 17.8837, 0.22 ) }
    dend_31 { pt3dadd( 130.836, 152.639, 17.8643, 0.22 ) }
    dend_31 { pt3dadd( 131.936, 153.089, 17.803, 1.25 ) }
    dend_31 { pt3dadd( 133.107, 153.491, 17.6844, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 122.34, 145.083, 18.0259, 0.29 ) }
    dend_28 { pt3dadd( 122.46, 146.181, 17.935, 0.29 ) }
    dend_28 { pt3dadd( 122.615, 146.709, 17.9027, 0.22 ) }
    dend_28 { pt3dadd( 122.788, 147.136, 17.8753, 0.66 ) }
    dend_28 { pt3dadd( 123.077, 147.76, 17.8258, 0.22 ) }
    dend_28 { pt3dadd( 123.382, 148.361, 17.774, 0.15 ) }
    dend_28 { pt3dadd( 123.667, 148.92, 17.7158, 0.15 ) }
    dend_28 { pt3dadd( 124.066, 149.611, 17.6195, 0.15 ) }
    dend_28 { pt3dadd( 124.516, 150.325, 17.4947, 0.22 ) }
    dend_28 { pt3dadd( 124.948, 150.963, 17.3649, 0.29 ) }
    dend_28 { pt3dadd( 125.327, 151.484, 17.2495, 0.22 ) }
    dend_28 { pt3dadd( 125.748, 152.004, 17.1338, 0.29 ) }
    dend_28 { pt3dadd( 126.401, 152.686, 17.0089, 0.22 ) }
    dend_28 { pt3dadd( 127.023, 153.264, 16.9239, 0.66 ) }
    dend_28 { pt3dadd( 127.397, 153.593, 16.8856, 1.11 ) }
    dend_28 { pt3dadd( 127.864, 153.994, 16.8406, 1.18 ) }
    dend_28 { pt3dadd( 128.518, 154.551, 16.7678, 0.37 ) }
    dend_28 { pt3dadd( 129.233, 155.166, 16.6837, 0.37 ) }
    dend_28 { pt3dadd( 129.803, 155.716, 16.5918, 0.22 ) }
    dend_28 { pt3dadd( 130.298, 156.334, 16.4615, 0.22 ) }
    dend_28 { pt3dadd( 130.611, 156.802, 16.3356, 0.22 ) }
    dend_28 { pt3dadd( 130.835, 157.2, 16.2184, 0.59 ) }
    dend_28 { pt3dadd( 130.974, 157.497, 16.1347, 1.03 ) }
    dend_28 { pt3dadd( 131.252, 158.172, 15.9573, 1.18 ) }
    dend_28 { pt3dadd( 131.761, 159.477, 15.6907, 0.44 ) }
    dend_28 { pt3dadd( 131.984, 160.041, 15.596, 0.88 ) }
    dend_28 { pt3dadd( 132.228, 160.687, 15.511, 1.7 ) }
    dend_28 { pt3dadd( 132.502, 161.444, 15.434, 2.29 ) }
    dend_28 { pt3dadd( 132.745, 162.129, 15.38, 2.29 ) }
    dend_28 { pt3dadd( 132.92, 162.642, 15.3629, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 132.92, 162.642, 15.3629, 0.22 ) }
    dend_30 { pt3dadd( 134.28, 164.35, 15.1437, 0.22 ) }
    dend_30 { pt3dadd( 134.918, 165.152, 15.0407, 0.22 ) }
    dend_30 { pt3dadd( 135.594, 166.0, 14.9318, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 132.92, 162.642, 15.3629, 0.29 ) }
    dend_29 { pt3dadd( 134.012, 163.419, 15.6393, 0.29 ) }
    dend_29 { pt3dadd( 134.737, 163.935, 15.8229, 0.29 ) }
    dend_29 { pt3dadd( 135.468, 164.455, 16.0079, 0.29 ) }
    dend_29 { pt3dadd( 136.087, 164.895, 16.1644, 0.52 ) }
    dend_29 { pt3dadd( 136.717, 165.343, 16.3238, 0.52 ) }
    dend_29 { pt3dadd( 137.759, 166.084, 16.5876, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_35, dend_0, axon_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, axon_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_58 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_62 nseg = 3
    dend_59 nseg = 11
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 5
    dend_61 nseg = 5
    dend_60 nseg = 3
    dend_53 nseg = 5
    dend_48 nseg = 5
    dend_42 nseg = 7
    dend_68 nseg = 13
    dend_67 nseg = 7
    dend_65 nseg = 9
    dend_64 nseg = 5
    dend_57 nseg = 7
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 3
    dend_39 nseg = 9
    dend_38 nseg = 17
    dend_21 nseg = 11
    dend_12 nseg = 13
    dend_9 nseg = 5
    dend_8 nseg = 9
    dend_6 nseg = 15
    dend_3 nseg = 9
    dend_44 nseg = 3
    dend_32 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 5
    dend_14 nseg = 5
    dend_34 nseg = 7
    dend_33 nseg = 11
    dend_27 nseg = 7
    dend_26 nseg = 9
    dend_19 nseg = 3
    dend_15 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_BTC_045fb87685_0_0


