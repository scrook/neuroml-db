// Cell: bIR215_L23_BTC_b7a569ac13_0_0
/*
{
  "id" : "bIR215_L23_BTC_b7a569ac13_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.636547, -11.2268, 0.0, 2.0961", "0.598333, -10.0461, 0.0, 3.03421", "0.560118, -8.86534, 0.0, 4.26504", "0.521904, -7.68461, 0.0, 5.45891", "0.483689, -6.50388, 0.0, 6.32885", "0.445475, -5.32315, 0.0, 7.1195", "0.40726, -4.14242, 0.0, 7.67098", "0.369046, -2.96169, 0.0, 8.08337", "0.330831, -1.78096, 0.0, 8.48415", "0.292617, -0.600232, 0.0, 8.88493", "0.254403, 0.580499, 0.0, 9.09061", "0.216188, 1.76123, 0.0, 8.76211", "0.177974, 2.94196, 0.0, 8.30944", "0.139759, 4.12269, 0.0, 7.83318", "0.101545, 5.30342, 0.0, 7.35692", "0.0633304, 6.48415, 0.0, 6.86553", "0.0251159, 7.66488, 0.0, 6.11195", "-0.0130985, 8.84561, 0.0, 5.27833", "-0.051313, 10.0263, 0.0, 4.23957", "-0.0895274, 11.2071, 0.0, 3.09571", "-0.127742, 12.3878, 0.0, 1.86556" ]
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "0.781648, -9.84779, 7.16, 0.83", "0.741566, -13.0738, 8.00469, 0.83", "0.877982, -14.8494, 8.67972, 0.55", "1.23801, -16.9015, 9.53476, 0.55", "1.6891, -18.7313, 10.28, 0.55", "2.66168, -21.9568, 11.5377, 0.28", "2.9379, -22.8371, 11.8608, 0.55", "3.77036, -24.9663, 12.6566, 0.55", "4.48489, -26.6672, 13.311, 0.55", "5.27724, -28.2686, 13.8573, 0.28", "5.82989, -29.3776, 14.1732, 0.55", "6.35689, -30.5572, 14.4497, 0.55", "7.14055, -32.6375, 14.9168, 0.55", "8.19449, -35.9326, 15.5872, 0.55", "8.83152, -38.3671, 16.1029, 0.55", "9.37311, -40.8324, 16.618, 0.55", "9.60475, -42.2999, 16.8996, 0.55", "9.86715, -44.7013, 17.3104, 0.55", "9.9352, -45.9856, 17.5033, 0.55", "9.88712, -47.111, 17.6054, 0.55", "9.63562, -49.0706, 17.7715, 0.55", "9.26342, -51.3029, 17.9023, 0.55", "9.21024, -51.6509, 17.9003, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.99836, -4.78679, -13.53, 0.83", "-1.872, -3.46784, -14.0632, 0.83", "-2.25506, -0.824677, -14.8458, 0.83", "-2.61111, -0.0193237, -16.0417, 0.83", "-3.02714, 0.860636, -17.4847, 0.83", "-3.40858, 1.66742, -18.8076, 0.83", "-3.75727, 2.40496, -20.017, 0.83", "-4.4171, 3.78448, -22.3722, 0.83", "-7.80343, 9.71569, -33.6017, 0.83", "-7.90741, 9.86854, -33.9456, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.60835, 11.7507, -0.19, 1.11", "-3.3472, 12.8797, -0.115279, 1.11", "-5.68039, 14.3945, -0.0150193, 1.11", "-7.77956, 15.7574, 0.0751845, 1.11", "-10.1197, 17.2767, 0.17574, 0.83", "-12.8975, 19.0802, 0.295109, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.641648, -12.3048, -8.79, 2.77", "0.366413, -17.1894, -8.79, 2.77", "-0.0270823, -24.1729, -8.79, 2.77", "-0.223059, -27.6509, -8.79, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.358352, 12.3177, -1.3, 0.83", "0.171684, 16.7969, -1.07849, 0.83", "0.488196, 18.9966, -0.829439, 1.11", "0.980181, 22.6648, -0.259242, 0.83", "1.41597, 26.2067, 0.347072, 0.83", "1.80108, 29.1183, 0.942015, 0.83", "2.42744, 33.7952, 1.8559, 0.83", "2.76593, 36.8454, 2.48012, 0.83", "3.04022, 39.278, 2.96039, 0.83", "3.51894, 43.1773, 3.77133, 0.83", "4.4074, 50.2116, 5.25967, 0.83", "4.84564, 53.731, 5.96871, 0.83", "5.09087, 56.0082, 6.28932, 0.83", "5.5324, 60.4392, 6.78118, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.127742, 12.3878, 0.0, 0.931205", "-0.612964, 27.38, 0.0, 0.931205", "-1.09819, 42.3721, 0.0, 0.931205" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.21024, -51.6509, 17.9003, 0.55", "9.12713, -52.1585, 18.2528, 0.55", "9.02898, -52.73, 18.6144, 0.55", "8.70242, -54.4125, 19.5479, 0.55", "8.50659, -55.4989, 20.0917, 0.55", "8.20878, -57.2683, 20.8802, 0.55", "8.00019, -58.7159, 21.4661, 0.28", "7.89139, -59.6845, 21.8082, 0.55", "7.81326, -60.761, 22.0995, 0.55", "7.77707, -61.5301, 22.234, 0.55", "7.74786, -62.4924, 22.3576, 0.55", "7.72473, -63.2492, 22.4579, 0.55", "7.67764, -64.1059, 22.6038, 0.55", "7.57636, -65.2023, 22.8215, 0.55", "7.3651, -66.9168, 23.1785, 0.55", "7.12136, -68.2727, 23.4352, 0.55", "6.6681, -70.5524, 23.806, 0.55", "6.46784, -71.4971, 23.9333, 0.55", "6.13713, -73.1812, 24.1092, 0.55", "5.9813, -74.2103, 24.1426, 0.55", "5.84583, -76.0262, 24.0377, 0.55", "5.8218, -77.0666, 23.8975, 0.55", "5.84551, -77.6645, 23.7684, 0.55", "5.95609, -78.8049, 23.5181, 0.55", "6.20411, -80.3093, 23.1174, 0.55", "6.3584, -81.218, 22.8437, 0.55", "6.56147, -82.3215, 22.5017, 0.28", "6.7256, -83.4919, 22.1504, 0.55", "6.77819, -83.9028, 22.0294, 0.55", "6.92453, -85.3183, 21.6512, 0.28", "7.02336, -86.2496, 21.3968, 0.55", "7.20142, -87.4032, 21.0479, 0.55", "7.34601, -88.0579, 20.8659, 0.55", "7.4804, -88.591, 20.7434, 0.28", "7.75147, -89.6642, 20.5469, 0.55", "8.21938, -91.5357, 20.2988, 0.28", "8.51499, -92.6643, 20.1591, 0.55", "8.7694, -93.7328, 20.067, 0.28", "9.14134, -95.3385, 19.989, 0.28", "9.26962, -95.9455, 20.0005, 0.55", "9.391, -96.5313, 20.055, 0.28", "9.53551, -97.208, 20.1695, 0.55", "9.96896, -99.0746, 20.5001, 0.28", "10.1224, -99.6517, 20.5992, 0.28", "10.475, -100.749, 20.8049, 0.55", "10.8399, -101.694, 20.9951, 0.55", "11.4543, -103.082, 21.2782, 0.55", "11.7814, -103.765, 21.4061, 0.55", "12.3868, -104.961, 21.5886, 0.55", "12.8373, -105.883, 21.7208, 0.55", "13.1826, -106.584, 21.8418, 0.55", "13.557, -107.327, 22.0218, 0.55", "14.1811, -108.5, 22.3812, 0.55", "14.5334, -109.167, 22.6236, 0.55", "14.9749, -109.953, 22.9386, 0.28", "15.5971, -111.075, 23.3812, 0.55", "16.0844, -111.936, 23.6543, 0.55", "16.6789, -112.847, 23.9166, 0.55", "17.4647, -113.919, 24.1805, 0.28", "18.0506, -114.693, 24.2781, 0.55", "18.5668, -115.372, 24.2825, 0.55", "19.8721, -117.011, 24.0867, 0.55", "20.2996, -117.531, 23.9691, 0.55", "20.7966, -118.119, 23.8005, 0.55", "21.8436, -119.301, 23.418, 0.55", "22.1973, -119.727, 23.2943, 0.55", "23.2125, -120.936, 22.9895, 0.28", "23.9055, -121.769, 22.8183, 0.55", "25.0809, -123.269, 22.5963, 0.28", "25.5338, -123.874, 22.5476, 0.28", "26.377, -125.07, 22.566, 0.55", "26.7994, -125.741, 22.6143, 0.28", "26.9335, -125.982, 22.6475, 0.55", "27.5209, -127.06, 22.8426, 0.28", "27.9027, -127.736, 22.9695, 0.55", "28.6622, -129.023, 23.2862, 0.28", "29.1342, -129.726, 23.4736, 0.55", "29.4739, -130.214, 23.5989, 0.55", "29.8104, -130.694, 23.7211, 0.55", "30.8041, -132.104, 24.0595, 0.28", "31.4557, -133.076, 24.28, 0.55", "32.291, -134.497, 24.5497, 0.28", "33.1724, -136.177, 24.8129, 0.28", "33.5816, -137.181, 24.9238, 0.55", "34.0681, -138.664, 24.9774, 0.55", "34.338, -139.755, 24.9335, 0.28", "34.6721, -141.544, 24.7492, 0.55", "34.7002, -141.805, 24.7154, 0.55", "34.8479, -143.831, 24.3771, 0.28", "34.9635, -145.136, 24.1356, 0.55", "35.108, -146.333, 23.9409, 0.28", "35.1835, -146.866, 23.8553, 0.55", "35.3986, -148.131, 23.6661, 0.55", "35.9218, -150.84, 23.3302, 0.28", "36.08, -151.522, 23.2819, 0.55", "36.4309, -153.08, 23.2813, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "9.21024, -51.6509, 17.9003, 0.55", "7.67616, -52.0571, 18.4475, 0.55", "5.60222, -52.1329, 18.3184, 0.55", "4.37437, -51.9573, 18.0299, 0.55", "3.14652, -51.8089, 17.7541, 0.55", "1.59045, -51.6465, 17.3763, 0.55", "0.445746, -51.5226, 17.1083, 0.55", "-3.42324, -50.9115, 16.2351, 0.28", "-4.78245, -50.7015, 15.9041, 0.28", "-6.27256, -50.4331, 15.571, 0.55", "-8.72501, -49.8986, 15.4036, 0.55", "-9.51012, -49.7224, 15.5096, 0.55", "-11.3896, -49.2939, 16.2481, 0.83", "-12.6665, -49.0033, 17.3507, 0.55", "-13.578, -48.8197, 18.4541, 0.55", "-16.6641, -48.3844, 23.2951, 0.55", "-16.9991, -48.3838, 24.031, 0.55", "-17.1941, -48.4526, 24.6388, 0.55", "-17.9369, -49.2238, 28.4845, 0.28", "-18.1096, -49.607, 29.8958, 0.55", "-18.2285, -50.0821, 31.2443, 0.55", "-18.4958, -51.8182, 34.7727, 0.55", "-18.682, -54.2343, 39.0103, 0.55", "-18.7218, -55.928, 41.5475, 0.55", "-18.7004, -56.6151, 42.4713, 0.55", "-18.6705, -57.1509, 43.2115, 0.55", "-18.534, -58.2961, 44.6441, 0.55", "-18.386, -59.3484, 45.3984, 0.28", "-18.3091, -60.6578, 45.6649, 0.28" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-7.90741, 9.86854, -33.9456, 0.83", "-6.98739, 12.9821, -34.5379, 0.83", "-6.07931, 16.0599, -35.3494, 0.83", "-5.39899, 18.5371, -36.046, 0.83", "-4.49222, 21.6042, -36.8959, 0.83", "-3.24538, 25.8431, -38.0137, 0.83", "-2.12136, 29.9518, -39.0326, 0.83", "-1.38973, 32.7945, -39.7185, 0.83", "-0.413948, 36.6158, -40.6129, 0.83", "0.803057, 41.755, -41.7271, 0.83", "1.66555, 45.3533, -42.4232, 0.83", "2.45756, 48.6256, -42.9377, 0.83", "3.35325, 51.9121, -43.2936, 0.83", "3.83623, 53.5438, -43.4625, 0.83", "4.72741, 56.2218, -43.7898, 0.83", "5.69556, 58.9435, -44.1651, 0.83", "6.59382, 61.1382, -44.4881, 0.55", "7.9264, 64.1326, -44.9355, 1.11", "8.82513, 66.0485, -45.2192, 0.83", "10.3845, 69.3528, -45.6933, 0.83", "12.2587, 73.0333, -46.2158, 0.83", "13.6902, 75.7259, -46.5835, 0.83", "15.6033, 79.3078, -47.0375, 0.83", "17.1504, 82.3678, -47.3818, 0.83", "17.9626, 83.9376, -47.5397, 0.83", "19.1571, 86.3214, -47.781, 0.83", "20.5084, 89.4091, -48.2757, 0.83", "21.8294, 92.8867, -48.9861, 0.83", "22.9045, 96.4782, -49.8692, 0.83", "23.5797, 99.2791, -50.6588, 0.83", "24.3448, 102.983, -51.8654, 0.83", "25.1629, 108.969, -53.9394, 0.83", "25.2219, 109.544, -54.1868, 0.83", "25.6383, 114.528, -56.6352, 0.83", "25.8041, 116.269, -57.5667, 0.83", "26.1122, 118.89, -59.0264, 0.83", "26.8435, 123.259, -61.5807, 0.83", "28.3395, 128.806, -64.5252, 0.83", "29.0122, 130.712, -65.5661, 0.83", "29.9291, 132.663, -66.6003, 0.83", "30.6418, 133.987, -67.2382, 0.83", "32.6213, 137.333, -68.5439, 0.83", "35.481, 142.008, -69.8226, 0.83", "36.9294, 144.645, -70.208, 0.83", "38.3765, 147.799, -70.5555, 0.83", "39.7155, 151.539, -70.8412, 0.83", "40.6767, 155.244, -71.1225, 0.83", "41.4709, 159.606, -71.528, 0.83", "41.7229, 163.345, -72.0096, 0.83", "41.7019, 166.917, -72.4747, 0.83", "41.5374, 168.856, -72.7952, 0.83", "40.9235, 173.261, -73.6532, 0.83", "40.2407, 176.876, -74.8579, 0.83", "39.7941, 179.344, -75.9854, 0.83", "39.5654, 181.686, -77.4887, 0.83", "39.5886, 183.009, -78.4996, 0.83", "39.6504, 184.081, -79.3882, 0.83", "40.2085, 188.57, -83.4498, 0.83", "40.6492, 190.93, -85.8381, 1.11", "41.8233, 194.901, -90.2989, 0.83", "42.3228, 196.217, -92.0157, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-7.90741, 9.86854, -33.9456, 0.55", "-8.54099, 9.2417, -36.876, 0.55", "-10.0813, 7.30866, -43.2993, 0.55", "-10.5079, 6.67062, -44.9526, 0.55", "-10.9305, 6.07106, -46.465, 0.55", "-11.3979, 5.68342, -47.9097, 0.55", "-12.9387, 4.53792, -53.5317, 0.55", "-13.5207, 4.04631, -55.9385, 0.55", "-13.8632, 3.76516, -57.2584, 0.55", "-14.784, 3.03244, -61.4155, 0.55", "-16.014, 1.91582, -67.6796, 1.11", "-17.4425, 0.482554, -75.1153, 0.83", "-17.7923, 0.135348, -76.8698, 0.83", "-18.1243, -0.163787, -78.6262, 0.83", "-19.4607, -1.49157, -86.2516, 0.83", "-19.6833, -1.84661, -87.7474, 0.83", "-19.931, -2.63948, -89.8721, 0.83", "-20.0414, -2.81717, -90.3778, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.8975, 19.0802, 0.295109, 0.83", "-14.2051, 23.2248, 2.3424, 0.83", "-15.0726, 25.3159, 3.82265, 0.83", "-15.7523, 26.7656, 4.98921, 0.83", "-19.3158, 32.9318, 10.2583, 0.83", "-20.9914, 35.5244, 12.4179, 0.83", "-23.0316, 38.5755, 14.97, 0.83", "-28.0132, 45.5789, 21.1213, 0.83", "-30.2563, 48.5325, 23.7004, 0.83", "-33.1141, 52.1696, 26.8837, 0.83", "-36.7882, 56.7219, 30.701, 0.83", "-40.269, 60.7935, 34.3582, 0.83", "-41.1725, 61.8137, 35.273, 0.83", "-42.3865, 63.2974, 36.2365, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.8975, 19.0802, 0.295109, 0.83", "-15.5342, 18.013, 1.47659, 0.83", "-19.6562, 16.5964, 3.13688, 0.83", "-21.1537, 16.0412, 3.69082, 0.83", "-23.5839, 15.1392, 4.21581, 0.83", "-24.9181, 14.6398, 4.37066, 0.83", "-26.4179, 14.0272, 4.47133, 0.83", "-26.6497, 13.9353, 4.46584, 0.83", "-28.5657, 13.019, 3.98527, 0.83", "-31.6466, 10.963, 2.84015, 0.83", "-33.275, 9.51581, 2.08911, 0.83", "-34.1218, 8.47405, 1.53095, 0.83", "-35.3931, 6.47313, 0.47987, 0.83", "-37.1663, 2.97537, -1.29329, 0.83", "-37.7702, 1.3994, -2.02642, 0.83", "-38.4244, -1.16245, -3.00389, 0.83", "-39.2462, -5.67416, -4.54667, 0.83", "-39.4225, -7.08822, -4.94706, 0.83", "-39.5907, -9.85645, -5.54725, 0.83", "-39.6458, -12.1025, -5.87057, 0.83", "-39.5892, -14.9179, -6.22646, 0.83", "-39.4299, -17.0289, -6.41964, 0.83", "-39.0955, -20.0153, -6.53944, 0.83", "-38.8315, -21.5666, -6.60114, 0.83", "-37.9857, -25.4059, -7.12133, 0.83", "-37.5822, -26.9723, -7.49491, 0.83", "-36.8647, -29.6336, -8.445, 0.83", "-36.5698, -30.6699, -8.90692, 0.83", "-35.9864, -32.7073, -9.93255, 0.83", "-34.434, -38.2477, -12.7641, 0.83", "-34.1437, -39.3426, -13.4609, 0.83", "-33.5996, -41.5901, -15.0394, 0.28", "-33.4298, -42.3079, -15.587, 1.38", "-32.9783, -44.3808, -17.1476, 0.28", "-32.6061, -46.0869, -18.3799, 1.11", "-31.3506, -51.3202, -21.6726, 0.28", "-31.0814, -52.383, -22.386, 1.11", "-30.9793, -52.7593, -22.6537, 1.11", "-30.712, -53.7874, -23.3995, 0.28", "-30.5793, -54.2518, -23.7253, 0.28", "-30.2249, -55.3618, -24.2944, 0.28", "-29.8053, -56.5989, -24.7045, 1.66", "-29.1469, -58.4885, -25.473, 0.28", "-28.8565, -59.3686, -25.8779, 0.55", "-28.4167, -60.7375, -26.5466, 0.28", "-28.0221, -61.8701, -27.1153, 0.55", "-27.0356, -64.5534, -29.1494, 0.28", "-26.8525, -65.0651, -29.6365, 0.28", "-26.5004, -66.0979, -30.7371, 0.83", "-26.2212, -67.1251, -31.8531, 0.83", "-26.1067, -67.7684, -32.517, 0.83", "-25.7386, -72.1673, -36.4266, 0.28", "-25.7508, -73.3292, -37.2067, 0.28", "-25.7979, -73.8484, -37.4899, 0.55", "-26.0494, -75.53, -38.2965, 0.28", "-26.3841, -77.0444, -38.9353, 0.55", "-26.7496, -78.5922, -39.4697, 0.28", "-27.0257, -80.1783, -39.826, 0.55", "-27.2666, -81.5838, -40.2632, 0.28", "-27.5687, -83.4169, -41.0099, 0.55", "-27.7372, -84.4435, -41.4923, 0.28", "-28.1066, -86.2827, -42.5319, 0.83", "-28.5786, -88.4595, -43.8856, 0.28", "-29.3015, -91.2551, -45.6283, 1.11", "-29.9196, -93.3381, -46.9784, 0.55", "-30.2246, -94.3053, -47.5734, 0.83", "-30.9691, -96.542, -49.1068, 0.28", "-31.1942, -97.1655, -49.5118, 0.28", "-31.7467, -98.8492, -50.5978, 0.55", "-32.266, -101.46, -52.1313, 0.28", "-32.4367, -102.591, -52.8158, 0.55", "-32.7925, -105.64, -54.639, 0.28", "-33.0443, -108.534, -56.4075, 0.55", "-33.2813, -110.756, -57.9019, 0.28", "-33.3993, -111.872, -58.6915, 0.55", "-33.7584, -114.628, -60.5152, 0.28", "-34.0608, -116.333, -61.5722, 0.55", "-34.4306, -117.989, -62.4431, 0.55", "-34.9843, -119.932, -63.4153, 0.28", "-35.2613, -120.801, -63.6793, 0.55", "-35.6826, -122.125, -63.8902, 0.28", "-36.2188, -123.903, -64.0605, 0.55", "-36.5894, -125.166, -64.2025, 0.28", "-36.9984, -126.62, -64.3397, 0.55", "-37.3713, -128.149, -64.5137, 0.28", "-37.5024, -128.711, -64.6042, 0.55", "-38.1907, -132.186, -65.6451, 0.28", "-38.2706, -132.733, -65.8455, 0.55", "-38.3958, -133.786, -66.2422, 0.28", "-38.6035, -135.456, -66.8645, 0.55", "-38.8572, -137.238, -67.467, 0.28", "-39.2665, -140.41, -68.2969, 0.28", "-39.4653, -142.032, -68.5999, 0.28", "-39.7278, -143.847, -68.9057, 0.55", "-40.2705, -147.703, -69.4848, 0.28", "-40.5116, -149.35, -69.71, 0.55", "-40.7808, -151.409, -69.931, 0.28", "-40.8727, -152.146, -70.0069, 0.55", "-41.3363, -156.383, -70.5514, 0.28", "-41.4556, -157.96, -70.7779, 0.83", "-41.746, -163.485, -71.6051, 0.28", "-41.8132, -165.044, -71.8678, 0.55", "-41.8959, -167.938, -72.4419, 0.28", "-41.9278, -169.325, -72.7154, 0.55", "-41.9668, -171.169, -73.0291, 0.28", "-42.0164, -172.11, -73.1523, 0.55", "-42.0949, -173.054, -73.2418, 0.55", "-42.2964, -174.677, -73.3649, 0.28", "-42.5481, -176.322, -73.4132, 0.55", "-43.2576, -180.28, -73.5461, 0.28", "-43.6584, -182.302, -73.5924, 0.55", "-44.0273, -184.194, -73.6924, 0.28", "-44.3432, -185.691, -73.7988, 0.55", "-44.6651, -187.18, -73.876, 0.28", "-44.88, -188.246, -73.9846, 0.55", "-45.1798, -189.592, -74.1771, 0.28", "-45.6435, -191.885, -74.5288, 0.55", "-45.9862, -193.742, -74.7838, 0.28", "-46.2891, -195.535, -75.1203, 0.83", "-46.8432, -199.427, -75.961, 0.28", "-46.905, -199.989, -76.072, 0.55", "-47.0002, -201.571, -76.3307, 0.28", "-46.9892, -203.265, -76.4955, 0.55", "-46.7584, -205.631, -76.6215, 0.28", "-46.5836, -206.686, -76.7092, 0.55", "-46.0735, -208.552, -76.8211, 0.28", "-45.5968, -210.035, -76.9334, 0.28", "-45.0728, -211.524, -77.0425, 0.55", "-44.0106, -214.182, -77.2037, 0.28", "-42.8042, -216.979, -77.2699, 0.55", "-41.8467, -219.14, -77.4308, 0.28", "-41.6379, -219.609, -77.5127, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-0.223059, -27.6509, -8.79, 2.77", "-0.111373, -29.5087, -8.76401, 2.77" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.223059, -27.6509, -8.79, 0.83", "-2.09787, -31.1508, -9.37573, 0.83", "-3.09339, -33.0092, -9.68675, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.5324, 60.4392, 6.78118, 0.55", "4.6902, 63.2032, 6.72388, 0.55", "3.26486, 67.8809, 6.62691, 0.55", "2.60303, 70.0529, 6.58188, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.5324, 60.4392, 6.78118, 0.55", "6.34651, 61.6777, 6.67775, 0.55", "7.24773, 62.9558, 6.55256, 0.55", "7.81873, 63.7327, 6.46032, 0.55", "9.33846, 65.833, 6.18616, 0.55", "10.3378, 67.3698, 6.0063, 0.55", "11.4329, 69.1792, 5.79659, 0.55", "12.3859, 70.8993, 5.59111, 0.55", "13.3101, 72.7459, 5.46743, 0.55", "14.3277, 74.8867, 5.39715, 0.55", "15.1433, 76.6897, 5.44057, 0.55", "15.8667, 78.5129, 5.59551, 0.55", "16.4962, 80.2982, 5.8152, 0.55", "17.2293, 82.6584, 6.17727, 0.55", "17.6501, 84.1289, 6.43594, 0.55", "18.1697, 85.9029, 6.75648, 0.55", "18.71, 87.7324, 7.07702, 0.55", "19.2594, 89.7089, 7.39816, 0.55", "19.9752, 92.2296, 7.73693, 0.55", "20.2502, 93.0757, 7.80443, 0.55", "20.7329, 94.478, 7.94797, 0.55", "21.1864, 95.7393, 8.07753, 0.55", "21.8256, 97.4115, 8.33826, 0.55", "22.9074, 100.111, 8.97131, 0.55", "23.7063, 102.026, 9.53604, 0.55", "24.7115, 104.198, 10.2217, 0.55", "25.5749, 105.932, 10.7597, 0.55", "26.7132, 108.065, 11.3785, 0.55", "28.2836, 110.833, 12.1146, 0.55", "29.7448, 113.234, 12.6805, 0.55", "31.3463, 115.713, 13.1575, 0.55", "32.9076, 118.064, 13.4632, 0.55", "33.9809, 119.671, 13.6058, 0.55", "35.3287, 121.742, 13.6428, 0.55", "36.7856, 124.032, 13.5455, 0.55", "37.7386, 125.637, 13.4408, 0.55", "38.6353, 127.352, 13.3327, 0.55", "39.1989, 128.503, 13.2706, 0.55", "40.1055, 130.503, 13.1565, 0.55", "40.7567, 132.145, 13.0373, 0.55", "41.3318, 133.677, 12.8641, 0.28", "41.604, 134.412, 12.7935, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.09819, 42.3721, 0.0, 0.28", "-1.58341, 57.3643, 0.0, 0.28", "-2.06863, 72.3564, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "36.4309, -153.08, 23.2813, 0.28", "36.7667, -155.178, 22.9479, 0.28", "36.9893, -157.284, 22.6332, 0.55", "37.2754, -160.72, 21.8954, 0.28", "37.4037, -162.641, 21.429, 0.55", "37.5813, -165.715, 20.657, 0.28", "37.597, -165.971, 20.594, 0.55", "37.8263, -169.111, 19.6235, 0.28", "38.114, -171.931, 18.5811, 0.55", "38.3044, -173.13, 18.1258, 0.55", "38.6498, -174.678, 17.428, 0.55", "39.1696, -176.517, 16.5119, 0.55", "40.2804, -179.908, 14.9785, 0.28", "41.0368, -181.801, 14.2191, 0.28", "41.7135, -183.489, 13.7681, 0.28", "42.5153, -185.531, 13.3887, 0.55", "42.985, -186.728, 13.276, 0.55", "44.1201, -189.885, 13.3167, 0.28", "44.4293, -190.861, 13.4287, 0.55", "45.5752, -194.85, 14.0143, 0.28", "46.1592, -197.142, 14.3767, 0.28", "46.7753, -199.901, 14.8302, 0.28", "47.0634, -201.341, 15.0085, 0.55", "47.1563, -201.911, 15.0383, 0.55", "47.3943, -203.883, 15.1003, 0.28", "47.4524, -204.464, 15.1068, 0.55", "47.6346, -206.663, 14.9628, 0.28", "47.679, -207.173, 14.8937, 0.55", "48.0922, -209.836, 14.5335, 0.28", "48.3979, -211.31, 14.3659, 0.55", "48.6413, -212.38, 14.2624, 0.55", "49.16, -214.674, 14.3159, 0.28", "49.3107, -215.426, 14.4252, 0.55", "49.541, -218.087, 15.0826, 0.28", "49.5426, -218.577, 15.2374, 0.55", "49.5, -219.987, 15.7667, 0.28", "49.2041, -223.522, 17.254, 0.28", "49.1128, -224.246, 17.6164, 0.55", "48.4553, -227.855, 19.3727, 0.28", "48.0107, -229.612, 20.1229, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "36.4309, -153.08, 23.2813, 0.28", "39.4256, -154.619, 24.5581, 0.28", "40.1995, -155.044, 24.7921, 0.55", "42.1426, -156.205, 25.2827, 0.28", "42.9132, -156.665, 25.4773, 0.55", "44.8679, -157.833, 25.9708, 0.28", "45.768, -158.371, 26.198, 0.55", "49.0144, -160.243, 26.9301, 0.28", "50.099, -160.894, 27.1058, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "42.3228, 196.217, -92.0157, 0.83", "43.8, 198.528, -92.2647, 0.83", "44.9451, 200.452, -92.4488, 0.83", "46.2552, 202.71, -92.659, 0.83", "47.3162, 204.615, -92.8331, 0.28", "47.9532, 205.809, -92.9395, 0.55", "48.6672, 207.185, -93.0617, 0.28", "49.6853, 209.25, -93.1986, 0.55", "50.0533, 210.086, -93.269, 0.28", "50.604, 211.617, -93.4325, 0.55", "50.8002, 212.181, -93.5073, 0.28", "51.1692, 213.198, -93.6211, 0.83", "51.6559, 214.486, -93.7439, 0.28", "52.2762, 215.995, -93.8478, 0.83", "53.4164, 218.56, -93.8728, 0.55", "54.2881, 220.346, -93.7825, 0.28", "54.807, 221.357, -93.7079, 0.55", "55.0322, 221.775, -93.6596, 0.28", "55.7003, 222.899, -93.4527, 0.55", "56.6201, 224.326, -93.0605, 0.28", "57.3078, 225.314, -92.6105, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "42.3228, 196.217, -92.0157, 0.28", "41.8745, 197.186, -92.7021, 0.28", "41.626, 198.192, -93.5596, 0.28", "41.5544, 198.518, -93.8571, 0.55", "41.268, 199.629, -94.86, 0.28", "41.0103, 200.43, -95.5426, 0.55", "40.7491, 201.117, -96.2833, 0.55", "40.1463, 202.46, -98.0554, 0.28", "39.8782, 202.95, -98.7787, 0.28", "39.5439, 203.517, -99.6232, 0.55", "39.1719, 204.167, -100.596, 0.55", "38.1913, 206.173, -103.684, 0.28", "38.0036, 206.585, -104.304, 0.55", "37.8038, 207.026, -104.93, 0.28", "37.6984, 207.346, -105.363, 0.55", "37.3264, 208.84, -107.192, 0.28", "37.1172, 210.063, -108.428, 0.55", "37.0258, 210.726, -108.937, 0.28", "36.9727, 211.143, -109.258, 0.55", "36.9049, 211.729, -109.705, 0.28", "36.8133, 212.698, -110.368, 0.55", "36.7308, 213.42, -110.798, 0.28", "36.5955, 214.547, -111.506, 0.28", "36.45, 215.8, -112.349, 0.28", "36.3134, 216.667, -112.959, 0.28", "36.2095, 217.206, -113.341, 0.55", "35.8053, 218.926, -114.419, 0.55", "35.4767, 220.081, -115.033, 0.83", "35.2635, 220.74, -115.315, 0.83", "34.4479, 223.078, -116.135, 0.55", "34.1042, 223.97, -116.422, 0.83", "33.4336, 225.625, -116.882, 0.28", "33.0817, 226.474, -117.05, 0.28", "32.8455, 227.019, -117.136, 0.28", "32.3404, 228.146, -117.292, 0.28", "31.8177, 229.218, -117.419, 0.55", "31.4956, 229.802, -117.524, 0.55", "30.9646, 230.61, -117.737, 0.55", "30.3942, 231.335, -117.934, 0.55", "30.0677, 231.697, -118.033, 0.28", "29.3309, 232.398, -118.227, 0.55", "28.4883, 233.168, -118.51, 0.55", "27.5617, 234.016, -118.919, 0.83", "27.0994, 234.429, -119.12, 0.28", "26.6361, 234.853, -119.321, 0.55", "26.0997, 235.369, -119.554, 0.55", "24.8661, 236.626, -120.062, 0.55", "23.9641, 237.544, -120.414, 0.55", "22.9447, 238.55, -120.776, 0.28", "22.2834, 239.187, -120.985, 0.28", "21.6551, 239.817, -121.183, 0.28", "21.3691, 240.113, -121.27, 0.55", "20.2552, 241.223, -121.569, 0.28", "19.4397, 242.013, -121.856, 0.28", "18.712, 242.747, -122.122, 0.83", "17.9804, 243.506, -122.341, 0.28", "17.4265, 244.094, -122.469, 0.28", "16.8629, 244.694, -122.562, 0.28", "16.4236, 245.18, -122.601, 0.55", "15.2672, 246.381, -122.66, 0.28", "14.6659, 246.928, -122.677, 0.55", "13.7752, 247.693, -122.7, 0.28", "13.2048, 248.21, -122.732, 0.55", "12.6614, 248.731, -122.791, 0.28", "11.9584, 249.411, -122.884, 0.28", "11.4134, 249.93, -122.981, 0.28", "10.5133, 250.839, -123.056, 0.55", "10.0357, 251.396, -123.066, 0.55", "9.29967, 252.323, -123.047, 0.55", "8.48612, 253.332, -123.005, 0.28", "8.01019, 253.938, -122.915, 0.55", "7.23764, 254.941, -122.689, 0.28", "6.58571, 255.694, -122.448, 0.28", "6.17203, 256.167, -122.255, 0.28", "5.59189, 256.828, -121.946, 0.28", "4.45252, 257.97, -121.399, 0.55", "3.54708, 258.787, -121.025, 0.28", "2.63337, 259.467, -120.775, 0.55", "1.53995, 260.159, -120.568, 0.55", "1.23545, 260.35, -120.536, 0.28", "0.108352, 261.054, -120.537, 0.55", "-0.720917, 261.569, -120.561, 0.55", "-1.75786, 262.203, -120.534, 0.28", "-2.5018, 262.735, -120.497, 0.55", "-3.23496, 263.356, -120.407, 0.28", "-3.91266, 264.123, -120.229, 0.28", "-5.02116, 265.661, -119.803, 0.55", "-5.67194, 266.689, -119.547, 0.28", "-6.22401, 267.652, -119.331, 0.28", "-6.97564, 269.051, -119.071, 0.55", "-8.32291, 271.542, -118.77, 0.28", "-8.50442, 271.863, -118.76, 0.55", "-9.5336, 273.598, -118.891, 0.28", "-9.81197, 274.051, -118.953, 0.55", "-10.1273, 274.495, -119.045, 0.28", "-10.9381, 275.5, -119.345, 0.55", "-12.0379, 276.713, -119.772, 0.28", "-12.5418, 277.256, -119.948, 0.55", "-13.1719, 277.917, -120.141, 0.28", "-14.0532, 278.864, -120.408, 0.55", "-15.8272, 280.735, -120.923, 0.28", "-16.1037, 281.031, -120.994, 0.55", "-17.3061, 282.251, -121.278, 0.28", "-17.8683, 282.786, -121.402, 0.55", "-18.4103, 283.262, -121.485, 0.28", "-19.2274, 283.925, -121.578, 0.55", "-20.1152, 284.537, -121.654, 0.28", "-21.2282, 285.23, -121.743, 0.28", "-22.6324, 286.034, -121.85, 0.28", "-24.0716, 286.814, -121.939, 0.55", "-25.3632, 287.453, -122.05, 0.28", "-26.2588, 287.864, -122.158, 0.28", "-27.66, 288.43, -122.363, 0.28", "-28.1637, 288.613, -122.453, 0.28", "-29.0202, 288.884, -122.666, 0.55", "-30.2137, 289.241, -123.062, 0.28", "-31.5349, 289.592, -123.547, 0.28", "-32.142, 289.743, -123.794, 0.55", "-32.7962, 289.933, -124.066, 0.28", "-33.555, 290.195, -124.383, 0.55", "-35.0924, 290.786, -125.059, 0.55", "-36.1035, 291.223, -125.476, 0.28", "-36.3234, 291.33, -125.572, 0.55", "-37.9139, 292.183, -126.277, 0.28", "-38.2408, 292.38, -126.399, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-20.0414, -2.81717, -90.3778, 0.55", "-20.2426, -4.16243, -99.8541, 0.55", "-20.322, -4.23652, -101.025, 0.55", "-20.5814, -4.15073, -103.318, 0.55", "-21.3115, -3.66105, -108.517, 0.55", "-21.5802, -3.43994, -110.2, 0.55", "-22.9623, -2.07838, -118.209, 0.55", "-23.343, -1.64465, -119.93, 0.55", "-24.7184, 0.11221, -125.684, 0.28", "-25.0244, 0.529561, -126.864, 0.55", "-25.1725, 0.73164, -127.469, 0.55", "-26.2437, 2.16476, -132.315, 0.55", "-27.0181, 2.92903, -136.0, 0.55", "-27.245, 3.09577, -137.135, 0.55", "-27.7204, 3.28943, -139.489, 0.55", "-30.1014, 3.65825, -150.851, 0.28", "-30.3563, 3.65979, -152.07, 0.55", "-30.8044, 3.59166, -154.095, 0.28", "-30.9989, 3.55408, -154.873, 0.55", "-32.2538, 3.24672, -159.388, 0.28", "-32.6388, 3.14828, -160.51, 0.55", "-36.7105, 2.20375, -169.683, 0.28", "-37.0804, 2.12565, -170.511, 0.55", "-37.9444, 2.00531, -172.397, 0.28", "-38.2216, 1.963, -172.963, 0.55", "-39.997, 1.68625, -176.038, 0.28", "-40.7901, 1.58021, -177.335, 0.55", "-41.5528, 1.46742, -178.377, 0.55", "-44.57, 1.37555, -182.476, 0.55", "-45.3439, 1.41953, -183.505, 0.55", "-46.147, 1.54789, -184.503, 0.55", "-49.3352, 2.34937, -187.893, 0.28", "-49.9835, 2.55314, -188.501, 0.55", "-52.5153, 3.5036, -190.589, 0.28", "-53.2465, 3.79543, -191.089, 0.55", "-55.72, 4.83016, -192.613, 0.28", "-57.5193, 5.56362, -193.55, 0.28", "-58.2932, 5.87029, -193.847, 0.55", "-60.1961, 6.60547, -194.583, 0.28", "-60.7816, 6.80887, -194.796, 0.55", "-62.2903, 7.32185, -195.287, 0.28", "-62.6871, 7.43842, -195.338, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-20.0414, -2.81717, -90.3778, 0.28", "-18.556, -4.23142, -91.2298, 0.28", "-17.274, -5.5148, -92.2724, 0.83", "-16.2472, -6.52014, -93.1325, 0.28", "-14.4548, -8.17019, -94.6983, 0.83", "-11.2793, -11.0611, -97.4836, 0.28", "-9.98098, -12.2211, -98.6414, 0.83", "-7.69768, -14.2355, -100.848, 0.28", "-5.97665, -15.7336, -102.588, 0.83", "-3.92676, -17.4026, -104.659, 0.28", "-2.67622, -18.3299, -105.864, 0.83", "-0.980633, -19.5411, -107.216, 0.28", "-0.761543, -19.6733, -107.359, 0.55", "0.110557, -20.1187, -107.746, 0.28", "0.825438, -20.4502, -107.969, 0.55", "1.97923, -20.9442, -108.213, 0.28", "3.84135, -21.6901, -108.548, 1.38", "6.57639, -22.7934, -108.99, 0.28", "8.34553, -23.5204, -109.283, 0.28", "11.5903, -24.8058, -109.65, 1.38", "13.5384, -25.5491, -109.778, 0.28", "13.8058, -25.6538, -109.797, 0.55", "15.1862, -26.2046, -109.894, 0.28", "16.817, -26.8469, -110.037, 0.55", "20.1079, -28.1787, -110.478, 0.28", "21.4123, -28.695, -110.754, 0.83", "24.6335, -30.111, -111.473, 0.28", "25.897, -30.7303, -111.776, 0.83", "27.6985, -31.7002, -112.215, 0.28", "28.4127, -32.0801, -112.375, 0.55", "31.0111, -33.4547, -112.897, 0.28", "33.4975, -34.7289, -113.236, 0.55", "36.1192, -35.9466, -113.432, 1.66", "39.0404, -37.2138, -113.583, 0.28", "42.995, -38.7468, -113.662, 0.83", "45.7351, -39.6503, -113.679, 0.28", "47.1142, -40.0112, -113.662, 0.83", "49.6227, -40.4399, -113.675, 0.28", "51.3177, -40.6157, -113.69, 0.55", "53.5234, -40.7494, -113.717, 0.55", "57.016, -40.8472, -113.784, 0.28", "58.529, -40.8173, -113.81, 0.83", "61.2814, -40.7138, -113.845, 0.28", "61.5638, -40.7083, -113.846, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-42.3865, 63.2974, 36.2365, 0.55", "-42.797, 67.986, 41.0409, 0.55", "-42.9819, 68.9213, 41.8652, 0.55", "-43.341, 70.3018, 42.8695, 0.55", "-43.4404, 70.7119, 43.1196, 0.55", "-44.1591, 73.6775, 44.9276, 0.55", "-44.6765, 75.8125, 46.2294, 0.55", "-45.0915, 76.8218, 46.6091, 0.55", "-45.7459, 78.3876, 47.2014, 0.55", "-46.4847, 79.8759, 47.733, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-42.3865, 63.2974, 36.2365, 0.55", "-46.0012, 64.0785, 36.6828, 0.55", "-47.4497, 64.1796, 37.0026, 0.55", "-49.1151, 64.1171, 37.6016, 0.55", "-51.0506, 63.9726, 38.3772, 0.55", "-52.4863, 63.7929, 38.9687, 0.55", "-53.8509, 63.5815, 39.5083, 0.55", "-57.451, 62.785, 40.8938, 0.55", "-60.2715, 62.0076, 42.0941, 0.55", "-61.3171, 61.6709, 42.5881, 0.55", "-62.4423, 61.2944, 43.1726, 0.55", "-64.0813, 60.6394, 44.0539, 0.55", "-65.7903, 59.9543, 44.933, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.111373, -29.5087, -8.76401, 1.38", "-0.761999, -31.4168, -8.93418, 1.38", "-1.22604, -32.5867, -9.09992, 1.38", "-1.80722, -33.8724, -9.33086, 1.38", "-3.38377, -36.8557, -9.96747, 1.38", "-5.13621, -39.9112, -10.6682, 1.94", "-6.28095, -41.8085, -11.1049, 1.38", "-6.80878, -42.629, -11.3189, 1.38", "-7.80991, -44.0631, -11.7284, 1.38", "-9.53034, -46.3743, -12.4408, 1.38", "-10.7704, -47.8317, -12.9614, 1.11", "-13.0149, -50.2757, -13.8091, 1.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.111373, -29.5087, -8.76401, 0.83", "0.356714, -30.9525, -8.54652, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.09339, -33.0092, -9.68675, 0.83", "-5.83452, -34.7368, -10.3524, 0.83", "-8.09285, -36.1601, -10.9008, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.09339, -33.0092, -9.68675, 0.55", "-2.80651, -33.9047, -8.13503, 0.55", "-2.77051, -34.0337, -7.90073, 0.55", "-2.44533, -35.772, -4.19612, 0.55", "-2.33885, -37.6349, 0.396727, 0.55", "-2.4633, -39.0445, 4.36131, 0.55", "-2.72701, -39.9575, 7.30113, 0.55", "-2.84397, -40.2195, 8.26477, 0.83", "-3.68087, -41.5952, 13.4387, 0.28", "-4.14109, -42.0798, 15.5923, 0.55", "-5.23549, -42.906, 19.1438, 0.55", "-6.38394, -43.8364, 22.7102, 0.28", "-6.90607, -44.4595, 24.5439, 0.55", "-7.33062, -45.269, 26.3662, 0.55", "-8.08619, -47.3053, 30.1277, 0.55", "-8.46817, -48.939, 32.7802, 0.28", "-8.71572, -50.6177, 35.1687, 0.55", "-8.7736, -51.6997, 36.5692, 0.55", "-8.83966, -52.6473, 37.888, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.60303, 70.0529, 6.58188, 0.55", "1.2065, 70.6027, 6.90292, 0.55", "0.405239, 70.9629, 7.08937, 0.83", "-1.52354, 71.9071, 7.51306, 0.28", "-2.85968, 72.5633, 7.86274, 0.55", "-4.10205, 73.2364, 8.19162, 0.28", "-4.75226, 73.6231, 8.40068, 0.55", "-5.44588, 74.1324, 8.68297, 0.28", "-6.31877, 74.9309, 9.17542, 0.55", "-7.37086, 76.0208, 9.87835, 0.28", "-8.47371, 77.2065, 10.6344, 0.83", "-9.84224, 78.6444, 11.5863, 0.83", "-10.8679, 79.6374, 12.3266, 0.55", "-12.3139, 80.9382, 13.3553, 0.28", "-13.006, 81.5377, 13.8422, 0.55", "-14.2835, 82.5683, 14.6472, 0.28", "-14.9393, 83.0414, 15.0175, 0.83", "-16.4604, 84.0757, 15.6892, 0.55", "-17.4318, 84.7326, 16.1315, 0.28", "-18.1858, 85.322, 16.4696, 0.83", "-18.8536, 85.8761, 16.7619, 0.83", "-20.0527, 86.8124, 17.2227, 0.28", "-20.848, 87.44, 17.487, 0.83", "-23.1135, 89.2901, 18.1662, 0.28", "-23.9003, 89.914, 18.3854, 0.55", "-25.8637, 91.4144, 18.8804, 0.55", "-27.2496, 92.4063, 19.1909, 0.28", "-28.3136, 93.0784, 19.3783, 0.55", "-29.4363, 93.7295, 19.5078, 0.28", "-30.052, 94.0723, 19.5474, 0.55", "-30.806, 94.5, 19.6262, 0.28", "-31.9059, 95.2527, 19.8236, 0.55", "-32.9585, 96.0619, 20.0469, 0.28", "-34.2706, 97.1142, 20.3572, 0.55", "-35.1166, 97.9641, 20.5547, 0.28", "-35.629, 98.5818, 20.6778, 0.55", "-36.3501, 99.6331, 20.7901, 0.28", "-36.6078, 100.071, 20.8222, 0.55", "-36.9742, 100.778, 20.8523, 0.28", "-37.7483, 102.39, 20.8648, 0.55", "-38.7995, 104.573, 20.7585, 0.55", "-39.4893, 105.965, 20.6593, 0.28", "-40.2368, 107.326, 20.4937, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.60303, 70.0529, 6.58188, 0.55", "2.7616, 73.3805, 6.63152, 0.55", "2.79275, 75.1235, 6.83474, 0.55", "2.8308, 76.9604, 7.16773, 0.55", "3.01425, 80.7962, 8.16775, 0.55", "3.21279, 85.4448, 9.50997, 0.55", "3.25986, 87.8273, 10.2212, 0.55", "3.36246, 93.0457, 11.8979, 0.55", "3.5108, 97.8201, 13.3998, 0.55", "3.63192, 103.691, 15.1972, 0.55", "3.63398, 106.054, 15.8812, 0.55", "3.54017, 110.195, 16.9676, 0.55", "3.43664, 114.409, 17.9694, 0.55", "3.07574, 120.693, 19.3314, 0.55", "2.83405, 123.787, 19.9412, 0.55", "2.3642, 128.715, 20.7945, 0.55", "2.05456, 132.156, 21.4215, 0.55", "1.41676, 138.514, 22.6644, 0.55", "0.629644, 143.477, 23.7589, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "57.3078, 225.314, -92.6105, 0.55", "58.9443, 225.987, -92.8246, 0.55", "59.6786, 226.363, -92.8926, 0.55", "61.2373, 227.238, -93.0746, 0.28", "62.1752, 227.788, -93.1799, 0.83", "63.0498, 228.331, -93.2877, 0.28", "64.2363, 229.102, -93.416, 0.55", "65.3811, 229.929, -93.519, 0.28", "67.604, 231.652, -93.6706, 0.83", "69.16, 232.93, -93.7708, 0.28", "70.3043, 233.858, -93.8061, 0.28", "71.4878, 234.831, -93.8164, 0.28", "71.9457, 235.2, -93.8039, 0.55", "74.0786, 236.832, -93.7353, 0.28", "74.9808, 237.554, -93.6769, 0.83", "76.7922, 239.022, -93.5608, 0.28", "77.942, 239.973, -93.4952, 0.55", "79.5108, 241.292, -93.4339, 0.28", "80.5689, 242.225, -93.4059, 0.28", "82.0159, 243.61, -93.4182, 0.55", "83.3658, 244.974, -93.4546, 0.28", "84.1492, 245.86, -93.5004, 0.55", "85.5965, 247.54, -93.6164, 0.28", "86.3029, 248.393, -93.6905, 0.83", "88.0423, 250.548, -93.7444, 0.28", "88.8132, 251.507, -93.7443, 0.55", "89.8849, 252.877, -93.719, 0.55", "91.5477, 255.05, -93.654, 0.28", "92.045, 255.716, -93.6064, 0.55", "94.2304, 258.681, -93.2768, 0.28", "95.1703, 260.034, -93.0772, 0.28", "95.673, 260.813, -92.95, 0.55", "96.4558, 262.095, -92.7475, 0.28", "97.5073, 264.027, -92.5951, 0.55", "98.0082, 264.993, -92.6045, 0.28", "98.3457, 265.689, -92.6831, 0.55", "98.6752, 266.395, -92.7861, 0.28", "100.169, 269.466, -93.2567, 0.55", "101.164, 271.439, -93.5999, 0.55", "102.07, 273.105, -93.8574, 0.28", "102.885, 274.387, -93.9464, 0.28", "103.362, 275.053, -93.9208, 0.28", "104.485, 276.472, -93.7241, 0.55", "105.09, 277.16, -93.5521, 0.28", "107.286, 279.528, -92.8103, 0.83", "108.665, 281.002, -92.3715, 0.28", "109.685, 282.101, -92.0594, 0.55", "110.42, 282.896, -91.8656, 0.28", "111.185, 283.744, -91.7163, 0.28", "112.195, 284.874, -91.5693, 0.28", "114.621, 287.516, -91.3487, 0.83", "116.018, 289.056, -91.2623, 0.28", "116.592, 289.663, -91.2396, 0.28", "117.617, 290.706, -91.1779, 0.28", "118.017, 291.098, -91.142, 0.28", "120.152, 293.118, -90.9226, 0.55", "120.758, 293.672, -90.8714, 0.55", "121.764, 294.621, -90.8032, 0.55", "123.032, 295.948, -90.6596, 0.28", "123.855, 296.889, -90.5195, 0.55", "124.491, 297.699, -90.374, 0.55", "124.955, 298.379, -90.258, 0.28", "125.642, 299.298, -90.1236, 0.55", "126.565, 300.389, -89.8391, 0.28", "127.683, 301.481, -89.4667, 0.83", "128.848, 302.561, -89.0795, 0.55", "129.912, 303.479, -88.7154, 0.55", "131.651, 304.898, -88.0922, 0.55", "135.387, 307.628, -86.7687, 0.28", "137.407, 308.929, -86.1098, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "57.3078, 225.314, -92.6105, 0.28", "56.8349, 226.947, -91.9514, 0.28", "56.1171, 229.34, -91.0187, 0.55", "55.4629, 231.449, -90.1026, 0.28", "55.0729, 232.892, -89.4396, 0.28", "54.6953, 234.451, -88.7046, 0.28", "54.2276, 236.492, -87.7569, 0.55", "53.9281, 237.991, -86.9709, 0.28", "53.6752, 239.282, -86.232, 0.55", "53.39, 240.727, -85.2644, 0.28", "53.2025, 241.705, -84.553, 0.55", "52.9981, 242.621, -83.8742, 0.55", "52.3151, 245.042, -82.2195, 0.28", "51.8744, 246.1, -81.5431, 0.55", "51.3926, 247.03, -81.0151, 0.55", "50.9085, 247.777, -80.5424, 0.55", "50.3005, 248.657, -79.9243, 0.55", "49.5733, 249.735, -79.1392, 0.55", "47.9477, 252.146, -77.442, 0.28", "47.7633, 252.434, -77.2371, 0.55", "46.1641, 255.182, -75.1237, 0.28", "45.4197, 256.628, -74.0195, 0.55", "44.8612, 257.877, -73.1099, 0.55", "44.6228, 258.502, -72.6967, 0.55", "44.0946, 260.126, -71.6823, 0.28", "43.2066, 263.149, -69.9612, 0.55", "42.7723, 264.928, -69.1677, 0.28", "42.4672, 266.225, -68.6522, 0.28", "42.2352, 267.25, -68.2552, 0.28" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "61.5638, -40.7083, -113.846, 0.28", "63.8922, -42.6686, -115.259, 0.28", "64.5083, -43.2742, -115.848, 0.83", "65.4389, -44.3461, -116.974, 0.28", "65.8082, -45.076, -117.887, 0.55", "66.1861, -46.3927, -119.515, 0.28", "66.4129, -47.5208, -120.859, 0.55", "66.3239, -49.1736, -122.929, 0.28", "66.1279, -50.1875, -124.222, 0.83", "65.3143, -52.7662, -127.444, 0.28", "64.9703, -53.7608, -128.592, 0.55", "64.7773, -54.3705, -129.208, 0.28", "64.6379, -55.0142, -129.819, 0.55", "64.4172, -56.7477, -131.148, 0.28", "64.3949, -57.1681, -131.431, 0.55", "64.5075, -58.3148, -131.999, 0.28", "64.7705, -59.7588, -132.672, 0.55", "65.3144, -61.9906, -133.577, 0.28", "65.7057, -63.0536, -134.095, 0.83", "66.3065, -64.4573, -134.849, 0.28", "66.7193, -65.3375, -135.418, 0.55", "67.2156, -66.3284, -136.149, 0.28", "67.6272, -67.11, -136.733, 0.55", "69.2229, -70.0382, -138.802, 0.28", "69.6795, -70.9133, -139.366, 0.83", "69.9747, -71.5793, -139.731, 0.28", "70.283, -72.347, -140.116, 0.55", "70.8614, -74.195, -140.884, 0.28", "71.091, -75.035, -141.157, 0.55", "71.5951, -77.0489, -141.604, 0.28", "71.8538, -77.9826, -141.884, 0.55", "72.5096, -80.3877, -142.755, 0.28", "72.8925, -81.8034, -143.402, 0.83", "73.3499, -83.3474, -144.193, 0.28", "73.5932, -84.0472, -144.53, 0.55", "74.5984, -86.5013, -145.66, 0.28", "75.4648, -88.2536, -146.292, 0.55", "76.2854, -89.7742, -146.699, 0.28", "76.9437, -90.8803, -147.028, 0.83", "78.4869, -93.4392, -147.808, 0.28", "78.8761, -94.0772, -147.982, 0.55", "80.4003, -96.5791, -148.526, 0.28", "80.7362, -97.1185, -148.659, 0.55", "82.0902, -99.437, -149.283, 0.28", "82.5797, -100.43, -149.607, 0.55", "83.0384, -101.551, -149.995, 0.28", "83.4299, -102.497, -150.254, 0.55", "83.8052, -103.348, -150.415, 0.28", "84.2997, -104.304, -150.61, 0.55", "85.0428, -105.648, -150.878, 0.28", "85.9212, -107.228, -151.216, 0.55", "87.0389, -109.335, -151.69, 0.28", "88.0348, -111.252, -152.107, 0.55", "89.4165, -114.208, -152.775, 0.28", "89.7593, -115.041, -152.959, 0.55", "90.3607, -116.941, -153.352, 0.28", "90.6234, -118.376, -153.586, 0.28", "90.6341, -119.087, -153.649, 0.55", "90.5242, -120.61, -153.681, 0.28", "90.2697, -122.332, -153.634, 0.55", "89.9361, -125.222, -153.623, 0.28", "89.8562, -126.353, -153.65, 0.83", "89.7857, -128.987, -153.725, 0.28", "89.8177, -131.127, -153.8, 0.28", "89.9398, -133.157, -153.918, 0.55", "90.2329, -136.198, -154.22, 0.28", "90.5374, -138.504, -154.371, 0.55", "90.9205, -140.566, -154.456, 0.28", "91.2419, -141.797, -154.374, 0.55", "91.8125, -143.677, -153.935, 0.28", "92.2512, -144.975, -153.524, 0.55", "93.1923, -147.816, -152.261, 0.28", "93.6869, -149.126, -151.494, 0.55", "95.0173, -152.141, -149.267, 0.28", "95.9335, -153.998, -147.586, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "61.5638, -40.7083, -113.846, 0.28", "63.1524, -40.4708, -113.665, 0.28", "63.9912, -40.4323, -113.595, 0.55", "65.6877, -40.4452, -113.472, 0.28", "66.0658, -40.4524, -113.438, 0.55", "67.6704, -40.5007, -113.288, 0.28", "68.7907, -40.5506, -113.208, 0.55", "70.4037, -40.7053, -113.136, 0.28", "71.3723, -40.8176, -113.105, 0.55", "73.4409, -41.1067, -113.055, 0.28", "73.7013, -41.145, -113.042, 0.55", "75.9621, -41.5024, -112.861, 0.28", "76.3281, -41.5601, -112.8, 0.55", "77.8226, -41.7587, -112.429, 0.28", "78.8429, -41.8832, -112.129, 0.83", "80.2441, -42.041, -111.667, 0.28", "81.0432, -42.1332, -111.415, 0.55", "83.6341, -42.5201, -110.628, 0.28", "84.5135, -42.7121, -110.293, 0.55", "85.5692, -42.9775, -109.835, 0.28", "86.7524, -43.2773, -109.291, 0.55", "89.2467, -44.0211, -108.172, 0.28", "90.5936, -44.4891, -107.451, 0.55", "94.0307, -45.7922, -105.431, 0.28", "94.4447, -45.9688, -105.148, 0.55", "95.6177, -46.5027, -104.256, 0.28", "97.0026, -47.1731, -103.186, 0.83", "99.7687, -48.5247, -101.028, 0.28", "100.789, -49.03, -100.322, 0.55", "102.619, -49.9808, -99.2893, 0.28", "103.108, -50.2453, -99.0509, 0.83", "106.387, -52.0371, -97.6775, 0.28", "107.381, -52.5534, -97.368, 0.83", "109.333, -53.5373, -97.0197, 0.28", "110.536, -54.1349, -96.8667, 0.55", "112.385, -54.9907, -96.7405, 0.28", "112.939, -55.2351, -96.7559, 0.83", "115.478, -56.2477, -97.1511, 0.28", "116.244, -56.5441, -97.365, 0.55", "117.244, -56.9111, -97.7368, 0.28", "117.712, -57.0737, -97.945, 0.55", "120.71, -58.1494, -99.4639, 0.28", "121.447, -58.4134, -99.9874, 0.55", "122.89, -58.9169, -101.177, 0.28", "123.332, -59.0696, -101.563, 0.83", "125.534, -59.8164, -103.583, 0.28", "125.846, -59.922, -103.879, 0.55", "129.482, -61.2043, -107.474, 0.28", "130.816, -61.6925, -108.805, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-13.0149, -50.2757, -13.8091, 1.38", "-14.227, -51.3455, -15.7734, 1.38", "-15.2198, -52.1218, -17.7571, 1.38", "-15.6743, -52.4897, -18.7627, 1.11", "-16.6467, -53.3485, -20.9007, 1.38", "-18.5969, -55.037, -24.7932, 1.38", "-19.7403, -56.0948, -26.933, 1.38", "-22.2219, -58.9212, -32.401, 1.38", "-23.3805, -60.6059, -35.2399, 1.38", "-24.0733, -61.7725, -36.9548, 1.38", "-24.9889, -63.4114, -39.0532, 1.38", "-26.1456, -65.3047, -41.145, 1.38", "-28.8785, -69.952, -45.7955, 1.38", "-29.9, -71.616, -47.2389, 1.38", "-31.3094, -73.5316, -48.9671, 1.38", "-33.4028, -76.097, -51.4048, 1.94", "-34.4393, -77.3266, -52.5414, 1.94", "-36.0223, -78.9838, -54.1473, 0.28", "-36.5847, -79.5316, -54.5796, 0.28", "-38.294, -81.3041, -56.0439, 1.38", "-39.2988, -82.4697, -56.9356, 0.28", "-40.4349, -83.8696, -57.8986, 1.11", "-42.5965, -86.4455, -60.1448, 0.28", "-44.0406, -88.062, -61.7586, 1.38", "-45.7283, -89.7474, -63.9041, 0.55", "-47.5236, -91.2626, -66.3294, 0.83", "-48.6919, -91.9878, -67.8005, 0.83", "-52.4398, -93.8324, -72.1644, 0.28", "-53.3638, -94.2343, -73.1485, 0.83", "-55.5063, -95.1142, -75.7833, 0.83", "-56.4553, -95.4671, -76.9668, 0.83", "-57.9237, -95.8779, -78.8437, 0.55", "-59.3095, -96.3154, -80.5179, 0.28", "-60.5716, -96.8129, -81.9185, 1.66", "-64.7729, -98.5436, -86.8579, 0.28", "-66.199, -99.2122, -88.6188, 0.83", "-67.8944, -100.093, -90.8614, 0.28", "-68.7503, -100.568, -92.0732, 0.83", "-70.508, -101.555, -94.5584, 0.28", "-72.4402, -102.845, -97.1511, 1.94", "-73.5614, -103.815, -98.4291, 0.28", "-74.464, -104.852, -99.483, 0.83", "-75.5715, -106.345, -100.718, 0.28", "-76.3163, -107.411, -101.497, 0.28", "-77.498, -109.298, -102.546, 1.38", "-78.778, -111.413, -103.539, 0.28", "-79.6137, -112.674, -104.088, 0.28", "-81.1979, -114.768, -104.99, 0.55", "-82.114, -115.758, -105.43, 0.28", "-83.8472, -117.429, -106.524, 0.83", "-84.9684, -118.5, -107.371, 0.28", "-85.665, -119.192, -107.945, 0.55", "-86.3775, -119.893, -108.583, 0.28", "-87.9657, -121.612, -110.139, 1.11", "-90.7004, -125.279, -113.193, 0.28", "-91.3995, -126.616, -114.342, 0.28", "-91.988, -128.106, -115.515, 0.28", "-92.199, -128.82, -116.043, 0.83", "-92.5116, -130.137, -117.123, 0.28", "-93.1325, -133.154, -119.853, 0.83", "-94.2145, -138.088, -124.821, 0.55", "-94.6266, -139.894, -126.904, 0.55", "-95.1741, -142.256, -129.822, 0.28", "-96.3599, -146.376, -135.301, 0.83", "-96.8855, -147.897, -137.679, 0.83", "-97.647, -149.823, -141.0, 0.83", "-98.3627, -151.45, -143.769, 0.28", "-98.8176, -152.383, -145.289, 0.83", "-99.5225, -153.799, -147.154, 1.11", "-101.655, -158.557, -151.302, 0.28", "-102.467, -160.763, -152.792, 0.55", "-103.19, -163.19, -154.028, 0.55", "-103.863, -166.235, -155.207, 0.55", "-104.434, -170.029, -156.589, 0.55", "-104.587, -171.567, -157.084, 0.55", "-104.818, -174.905, -158.198, 0.28", "-104.839, -176.531, -159.025, 0.83", "-104.805, -178.543, -160.246, 0.28", "-104.745, -181.493, -162.179, 0.55", "-104.73, -183.163, -163.301, 0.55", "-104.645, -186.621, -165.605, 0.55", "-104.602, -189.662, -167.511, 0.55", "-104.585, -191.715, -168.784, 1.11", "-104.628, -193.327, -169.735, 0.28", "-104.781, -196.069, -171.201, 0.83", "-104.993, -198.094, -172.254, 0.28", "-105.278, -199.694, -173.083, 0.28", "-105.834, -202.144, -174.57, 0.55", "-106.334, -204.155, -175.942, 0.28", "-106.935, -206.418, -177.543, 0.28", "-107.237, -207.564, -178.376, 0.83", "-107.755, -209.959, -180.066, 0.28", "-108.186, -212.292, -181.789, 0.83", "-108.56, -215.12, -183.918, 0.83", "-108.676, -216.913, -185.234, 0.83", "-108.67, -219.657, -187.018, 0.28", "-108.508, -222.199, -188.465, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-13.0149, -50.2757, -13.8091, 0.55", "-13.927, -50.5321, -13.5624, 0.55", "-15.1211, -50.8782, -13.2795, 0.28", "-16.5646, -51.2247, -12.9784, 0.55", "-17.5886, -51.3961, -12.8138, 0.28", "-22.0294, -51.8303, -12.0883, 0.55", "-24.1236, -51.9593, -11.7423, 0.55", "-25.8506, -51.965, -11.4656, 0.55", "-28.1769, -51.8651, -11.1369, 0.55", "-30.1848, -51.8059, -10.9273, 0.55", "-33.5379, -51.7602, -10.6758, 0.28", "-35.1998, -51.7408, -10.6319, 0.55", "-37.8459, -51.7838, -10.504, 0.55", "-40.7563, -51.9772, -10.3031, 0.83", "-44.3302, -52.4945, -9.86208, 0.55", "-46.2883, -52.9215, -9.44672, 0.28", "-46.9642, -53.0904, -9.26505, 0.55", "-48.9944, -53.5979, -8.43936, 0.28", "-50.1628, -53.8777, -7.79333, 0.55", "-52.9968, -54.3884, -6.0305, 0.83", "-55.0764, -54.6147, -4.70496, 0.55", "-56.3244, -54.7259, -3.97462, 0.55", "-59.0923, -54.9093, -2.36388, 0.55", "-61.452, -54.9809, -1.102, 0.28", "-63.4778, -54.9148, -0.132522, 1.38", "-64.5081, -54.8405, 0.286619, 0.28", "-65.9813, -54.6878, 0.81652, 0.83", "-70.2469, -54.1558, 2.31802, 0.28", "-72.9417, -53.7071, 3.29227, 0.55", "-74.4563, -53.4078, 3.87665, 0.28", "-75.6007, -53.216, 4.32031, 0.55", "-76.4731, -53.0814, 4.62887, 0.28", "-78.2928, -52.8908, 5.26104, 0.83", "-80.5553, -52.7561, 5.91141, 0.28", "-83.1673, -52.8487, 6.90596, 0.55", "-85.481, -53.1096, 7.91135, 0.55", "-86.4783, -53.3138, 8.36693, 0.55", "-89.0955, -54.1081, 9.75158, 0.28", "-90.4005, -54.6127, 10.5302, 0.83", "-92.7814, -55.6502, 12.3282, 0.28", "-93.1604, -55.8237, 12.6874, 0.28", "-94.8339, -56.4678, 14.3848, 0.55", "-96.9768, -57.318, 16.6005, 0.28", "-98.4957, -57.8844, 18.1625, 0.55", "-101.073, -58.8296, 20.8767, 0.28", "-102.893, -59.3596, 22.7231, 0.55", "-105.163, -59.951, 25.1382, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.356714, -30.9525, -8.54652, 0.55", "1.47376, -33.6994, -9.52767, 0.55", "2.38962, -35.9516, -10.3321, 0.83", "3.70267, -39.1805, -11.4854, 0.83", "4.70608, -41.6479, -12.3667, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.356714, -30.9525, -8.54652, 0.55", "0.912632, -29.5399, -11.1623, 0.55", "1.33278, -28.2873, -14.1899, 0.55", "1.41579, -27.935, -15.1076, 0.55", "1.49931, -27.2022, -17.4953, 0.55", "1.41151, -24.0651, -29.286, 0.55", "1.39026, -23.3057, -32.1402, 0.55", "1.02539, -20.7354, -42.9705, 0.55", "0.867806, -20.1015, -45.8972, 0.55", "0.127308, -18.0441, -56.6032, 0.55", "-0.370123, -17.2505, -61.5122, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.09285, -36.1601, -10.9008, 0.83", "-9.8719, -36.9115, -10.5936, 0.83", "-11.5595, -37.5845, -10.3085, 0.83", "-12.7428, -38.2328, -10.0544, 0.55", "-14.5734, -39.2603, -9.65056, 0.55", "-16.7686, -40.4178, -9.13731, 0.55", "-18.4723, -41.2684, -8.79324, 0.55", "-20.049, -42.006, -8.52355, 0.55", "-25.0326, -44.0216, -7.8931, 0.55", "-28.7948, -45.3948, -7.52665, 0.55", "-30.4756, -45.9666, -7.41541, 0.55", "-32.4574, -46.4907, -7.33926, 0.55", "-33.8501, -46.7577, -7.32898, 0.83", "-37.9155, -47.1166, -7.44022, 0.55", "-39.6283, -47.0314, -7.5087, 0.55", "-40.3876, -46.9575, -7.51976, 0.55", "-42.0384, -46.7927, -7.51536, 0.55", "-44.482, -46.5, -7.36987, 0.55", "-47.6899, -46.0221, -7.0811, 0.55", "-49.6136, -45.6531, -6.75016, 0.55", "-50.7673, -45.4346, -6.54473, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.09285, -36.1601, -10.9008, 0.55", "-8.3687, -36.057, -10.7491, 0.55", "-9.46446, -35.7319, -10.0844, 0.55", "-11.2361, -35.3323, -9.05654, 0.55", "-12.1831, -35.122, -8.27944, 0.55", "-13.3631, -34.8824, -7.15446, 0.83", "-15.105, -34.601, -5.42258, 0.55", "-16.2346, -34.4006, -4.24841, 0.55", "-17.0389, -34.2451, -3.34657, 0.55", "-20.1823, -33.7537, 0.508885, 0.55", "-22.2175, -33.4958, 3.07316, 0.55", "-23.7385, -33.3965, 5.0084, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "0.629644, 143.477, 23.7589, 0.28", "-0.26194, 144.038, 23.3233, 0.28", "-1.43679, 144.902, 22.7495, 0.55", "-2.80032, 145.938, 22.0835, 0.28", "-3.6892, 146.67, 21.6651, 0.83", "-4.53911, 147.374, 21.2939, 0.28", "-5.29602, 148.035, 20.9607, 0.83", "-6.51465, 149.216, 20.4276, 0.55", "-7.55777, 150.379, 19.8853, 0.55", "-8.65796, 151.627, 19.1818, 0.28", "-9.34331, 152.545, 18.4909, 0.55", "-9.82564, 153.249, 17.8754, 0.28", "-10.2421, 153.999, 17.2596, 0.83", "-11.1006, 155.628, 15.9508, 0.28", "-11.74, 156.92, 14.9709, 0.83", "-13.2196, 159.956, 12.772, 0.28", "-14.4862, 162.671, 10.8513, 0.55", "-16.2375, 166.333, 8.39335, 0.55", "-17.049, 167.992, 7.32912, 0.83", "-17.7834, 169.356, 6.48658, 0.28", "-18.4392, 170.518, 5.79197, 0.83", "-19.7213, 172.546, 4.58055, 0.28", "-21.073, 174.528, 3.18607, 0.83", "-22.5039, 176.291, 1.64443, 0.28", "-23.4304, 177.399, 0.609862, 0.55", "-24.4029, 178.456, -0.473571, 0.28", "-24.6296, 178.679, -0.718218, 0.83", "-26.0518, 179.861, -2.07531, 0.28", "-27.0219, 180.575, -3.11415, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "0.629644, 143.477, 23.7589, 0.55", "0.590201, 146.021, 24.4482, 0.55", "0.549516, 147.561, 24.9152, 0.55", "0.481212, 149.853, 25.5595, 0.55", "0.391211, 152.872, 26.4084, 0.55", "0.344769, 154.43, 26.8465, 0.55", "0.222247, 158.541, 28.0022, 0.55", "0.18616, 161.385, 28.7062, 0.55", "0.239272, 165.078, 29.6267, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-108.508, -222.199, -188.465, 0.55", "-107.178, -223.901, -188.674, 0.55", "-105.619, -225.875, -188.883, 0.55", "-104.179, -227.689, -189.055, 0.28", "-103.914, -228.008, -189.09, 0.55", "-102.751, -229.377, -189.255, 0.28", "-102.302, -229.874, -189.234, 0.55", "-101.112, -231.098, -188.847, 0.28", "-100.68, -231.506, -188.614, 0.55", "-99.0955, -232.914, -187.602, 0.55", "-98.69, -233.258, -187.297, 0.83", "-95.3079, -235.974, -184.656, 0.28", "-93.3502, -237.474, -183.064, 0.55", "-93.213, -237.575, -182.951, 0.28", "-92.5215, -238.084, -182.367, 0.83", "-90.5735, -239.552, -180.612, 0.28", "-89.5796, -240.309, -179.811, 0.55", "-89.1707, -240.628, -179.559, 0.28", "-88.2915, -241.331, -179.092, 0.28", "-86.8169, -242.534, -178.255, 0.28", "-85.2373, -243.895, -177.254, 0.28", "-84.6431, -244.474, -176.869, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-108.508, -222.199, -188.465, 0.28", "-109.141, -224.582, -189.709, 0.28", "-109.795, -227.37, -191.093, 0.28", "-110.108, -228.761, -191.793, 0.28", "-110.362, -229.862, -192.337, 0.55", "-111.347, -233.988, -194.243, 0.28", "-111.487, -234.597, -194.483, 0.28", "-111.91, -236.471, -195.027, 0.55", "-112.181, -237.803, -195.284, 0.28", "-112.327, -238.711, -195.469, 0.55", "-112.641, -240.791, -195.861, 0.28", "-112.857, -242.581, -196.138, 0.55", "-113.256, -246.562, -196.923, 0.28", "-113.309, -247.381, -197.157, 0.55", "-113.4, -251.774, -198.614, 0.28", "-113.365, -252.395, -198.857, 0.55", "-113.167, -254.039, -199.594, 0.28", "-112.975, -254.998, -200.054, 0.55", "-112.098, -257.939, -201.482, 0.28", "-111.883, -258.526, -201.738, 0.55", "-110.467, -261.667, -202.848, 0.28", "-110.105, -262.389, -203.092, 0.55", "-109.089, -264.259, -203.672, 0.28", "-108.938, -264.51, -203.742, 0.55", "-108.294, -265.521, -203.959, 0.28", "-107.986, -266.007, -204.075, 0.55", "-106.564, -268.288, -204.711, 0.28", "-106.418, -268.534, -204.77, 0.55", "-105.579, -270.075, -205.124, 0.28", "-105.442, -270.334, -205.173, 0.55", "-104.726, -271.75, -205.396, 0.28", "-104.475, -272.267, -205.53, 0.55", "-103.327, -274.818, -206.405, 0.28", "-102.893, -275.849, -206.822, 0.55", "-102.384, -277.139, -207.412, 0.28", "-102.083, -277.949, -207.787, 0.55", "-100.871, -281.491, -209.48, 0.28", "-100.331, -283.252, -210.277, 0.28", "-100.176, -283.846, -210.533, 0.28", "-99.9434, -284.716, -210.785, 0.55", "-99.2811, -287.105, -211.298, 0.28", "-99.089, -287.734, -211.403, 0.55", "-98.0787, -290.795, -211.783, 0.28", "-97.4593, -292.577, -211.982, 0.55", "-95.0328, -299.44, -212.73, 0.28", "-94.9356, -299.726, -212.761, 0.55", "-94.3372, -301.468, -212.93, 0.28", "-93.9846, -302.66, -213.025, 0.55", "-93.29, -305.705, -213.202, 0.28", "-92.9618, -307.394, -213.269, 0.28", "-92.836, -308.922, -213.286, 0.55", "-92.7531, -311.078, -213.261, 0.28", "-92.8859, -314.541, -213.09, 0.28", "-93.0074, -315.7, -213.016, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.70608, -41.6479, -12.3667, 0.55", "7.7979, -43.3819, -14.0105, 0.55", "8.98013, -44.0313, -14.6474, 0.55", "9.95669, -44.5459, -15.1793, 0.83", "12.0185, -45.5354, -16.2826, 0.55", "14.9218, -46.8082, -17.7916, 1.11", "17.434, -47.8065, -19.0361, 0.55", "19.0093, -48.3205, -19.7228, 0.55", "21.3255, -48.8192, -20.7662, 0.83", "22.4072, -48.9325, -21.2947, 0.55", "23.2698, -48.9234, -21.7309, 0.55", "24.6638, -48.7252, -22.4318, 0.55", "26.8626, -48.2926, -23.5102, 0.28", "29.1455, -47.7255, -24.5608, 0.83", "31.2601, -47.0853, -25.5206, 0.28", "32.5737, -46.6695, -26.1129, 0.55", "33.3115, -46.396, -26.435, 0.28", "34.3871, -45.9011, -26.871, 0.55", "36.0651, -44.9849, -27.4134, 0.55", "36.7631, -44.5143, -27.5886, 0.28", "37.5502, -43.9883, -27.7419, 0.55", "38.9698, -42.9817, -28.0525, 0.55", "40.2669, -42.0786, -28.3411, 1.11", "42.712, -40.5691, -28.6183, 0.55", "44.0522, -39.8987, -28.6615, 0.55", "45.4561, -39.3192, -28.6491, 0.55", "47.2895, -38.6554, -28.5759, 0.55", "49.5567, -37.8993, -28.4209, 1.11", "53.7807, -36.5577, -28.0405, 0.83", "56.9108, -35.5975, -27.698, 1.11", "58.9116, -34.9802, -27.4731, 0.28", "59.1399, -34.9091, -27.4493, 0.55", "60.6591, -34.5034, -27.3229, 0.28", "61.5763, -34.26, -27.3449, 0.55", "62.5338, -33.9725, -27.5119, 0.28", "63.4372, -33.6711, -27.6994, 0.55", "65.6367, -32.9216, -28.1748, 0.28", "66.743, -32.5061, -28.4989, 0.83", "69.263, -31.4468, -29.4093, 0.28", "71.4816, -30.3994, -30.312, 1.11", "73.0846, -29.5352, -30.9134, 0.28", "73.8957, -29.0442, -31.1697, 0.83", "76.8709, -27.0646, -31.8902, 0.55", "78.5119, -25.8663, -32.1168, 0.55", "79.4544, -25.1029, -32.1228, 0.55", "81.9099, -23.0624, -31.8728, 0.28", "83.1839, -21.9737, -31.6328, 0.55", "84.1286, -21.1372, -31.3841, 0.55", "85.1844, -20.2082, -31.0182, 0.55", "86.8933, -18.6445, -30.4872, 0.55", "88.3656, -17.2299, -30.1893, 0.55", "89.3093, -16.3397, -30.1431, 0.55", "90.2029, -15.5435, -30.1323, 0.55", "90.9691, -14.8948, -30.1204, 0.28", "91.7488, -14.2805, -30.1099, 0.55", "93.3428, -13.1368, -30.1025, 0.28", "94.9451, -12.0578, -30.1267, 0.83", "96.4937, -11.1364, -30.1437, 0.28", "97.3676, -10.68, -30.1525, 0.28", "98.1351, -10.2844, -30.1607, 0.28", "98.5499, -10.0681, -30.1681, 0.28", "99.4098, -9.64703, -30.1928, 0.28", "100.348, -9.16668, -30.2206, 0.28", "101.217, -8.72022, -30.254, 0.55", "102.133, -8.29669, -30.2176, 0.55", "103.892, -7.59591, -30.0591, 0.55", "104.99, -7.18654, -29.925, 0.55", "106.176, -6.74445, -29.7186, 0.28", "107.5, -6.24112, -29.4349, 0.28", "109.292, -5.63009, -29.0248, 0.28", "110.291, -5.36834, -28.8062, 0.55", "111.42, -5.08875, -28.5839, 0.28", "112.362, -4.85706, -28.4385, 0.28", "113.053, -4.72237, -28.3682, 0.28", "114.923, -4.35596, -28.2754, 0.55", "116.927, -4.02025, -28.2844, 0.28", "118.568, -3.78194, -28.3171, 0.83", "119.935, -3.59494, -28.3649, 0.28", "121.247, -3.42126, -28.4329, 0.83", "123.583, -3.0541, -28.5199, 0.28", "125.391, -2.6949, -28.5683, 0.83", "127.507, -2.20548, -28.61, 0.55", "128.439, -1.98157, -28.5644, 0.55", "130.174, -1.53359, -28.3804, 0.83", "132.54, -0.935997, -27.9514, 0.28", "133.892, -0.650816, -27.6111, 0.28", "135.012, -0.406732, -27.2711, 0.55", "137.613, -0.0342112, -26.1192, 0.55", "138.651, 0.0410314, -25.578, 0.83", "139.983, 0.165972, -24.7301, 0.28", "141.046, 0.296209, -23.9461, 0.28", "142.21, 0.50988, -23.0596, 0.83", "145.749, 1.47601, -20.3663, 0.28", "146.539, 1.75969, -19.8186, 0.55", "149.855, 3.22942, -17.5568, 0.28", "151.199, 3.96187, -16.7128, 0.55", "152.65, 4.86946, -15.8658, 0.28", "153.553, 5.52454, -15.428, 0.55", "154.735, 6.63598, -15.1071, 0.28", "154.956, 6.90335, -15.0819, 0.55", "155.89, 8.39081, -15.2687, 0.28", "156.025, 8.70298, -15.3187, 0.55", "156.366, 9.86058, -15.4742, 0.28", "156.556, 10.5453, -15.4818, 0.55", "157.383, 13.8008, -15.282, 0.28", "157.573, 14.555, -15.2086, 0.55", "158.171, 16.9986, -14.9064, 0.28", "158.474, 18.1828, -14.7419, 0.55", "159.564, 22.3175, -14.0991, 0.28", "159.657, 22.6543, -14.0448, 0.55", "160.42, 25.0844, -13.5131, 0.28", "160.618, 25.7356, -13.3627, 0.55", "160.902, 26.7154, -13.1378, 0.28", "161.213, 27.9595, -12.8004, 0.55", "161.686, 30.2857, -12.2466, 0.28", "162.286, 33.2708, -11.4367, 0.55", "162.602, 34.8729, -10.9033, 0.28", "162.851, 36.1562, -10.4241, 0.55", "163.347, 38.719, -9.30752, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.70608, -41.6479, -12.3667, 0.55", "3.71751, -42.3549, -13.8114, 0.55", "2.99335, -42.8721, -14.8797, 0.55", "1.19301, -44.0699, -17.3815, 0.55", "-2.76591, -46.6148, -22.5641, 0.55", "-3.94085, -47.4338, -24.4182, 0.55", "-4.48397, -47.8188, -25.3326, 0.55", "-5.9869, -48.9202, -28.0854, 0.55", "-6.76789, -49.4558, -29.5242, 0.55", "-7.77248, -50.0494, -31.1792, 0.83", "-11.5678, -52.093, -36.6403, 0.28", "-12.1697, -52.3848, -37.5398, 0.28", "-13.0679, -52.7179, -38.8682, 0.55", "-14.5622, -53.17, -40.9207, 0.28", "-16.4622, -53.7496, -43.5589, 1.11", "-19.8473, -54.7984, -47.8743, 0.55", "-21.419, -55.2703, -49.5565, 0.55", "-22.2393, -55.5377, -50.6448, 0.55", "-23.8284, -56.0555, -53.0566, 0.55", "-25.7134, -56.7274, -56.3785, 0.83", "-26.6946, -57.1018, -58.1885, 0.55", "-27.6335, -57.499, -59.7042, 0.55", "-31.425, -59.2726, -65.2142, 0.28", "-32.3666, -59.7012, -66.4309, 0.55", "-34.5012, -60.4941, -68.8784, 0.28", "-36.0851, -61.0263, -70.3512, 0.83", "-37.9489, -61.6829, -71.7853, 0.28", "-39.7603, -62.4387, -72.7681, 0.28", "-41.6972, -63.3087, -73.3541, 0.28", "-42.571, -63.7062, -73.578, 0.55", "-43.807, -64.2591, -73.8802, 0.55", "-46.0724, -65.2458, -74.5321, 0.28", "-48.0715, -66.0731, -75.1877, 0.83", "-51.4594, -67.4455, -76.3657, 0.28", "-52.7369, -67.919, -76.9069, 0.55", "-55.5304, -68.826, -78.0672, 0.28", "-57.305, -69.3325, -78.7944, 0.83", "-59.2747, -69.7878, -79.5975, 0.28", "-59.8029, -69.8882, -79.7895, 0.55", "-63.9594, -70.5347, -81.0714, 0.28", "-67.9718, -71.1351, -82.3004, 0.83", "-69.8043, -71.3826, -82.8306, 0.28", "-70.7005, -71.5044, -83.2025, 0.55", "-72.6379, -71.7393, -84.1918, 0.28", "-74.0236, -71.876, -84.982, 0.55", "-77.4204, -72.1307, -87.082, 0.28", "-78.2969, -72.1419, -87.7883, 0.55", "-82.6982, -71.9382, -91.5667, 0.28", "-83.5741, -71.8614, -92.3293, 0.55", "-85.6056, -71.5795, -94.1024, 0.28", "-87.7246, -71.1691, -95.8556, 0.55", "-90.7426, -70.3027, -98.2034, 0.28", "-92.8822, -69.5444, -99.8365, 0.28", "-94.6851, -68.7274, -101.091, 0.83", "-95.8232, -68.0994, -101.923, 0.28", "-96.3766, -67.6795, -102.354, 0.55", "-97.6471, -66.4416, -103.271, 0.28", "-97.8226, -66.254, -103.361, 0.55", "-98.7346, -65.1684, -103.813, 0.28", "-99.7866, -63.9364, -104.287, 0.55", "-101.61, -62.0167, -104.902, 0.28", "-103.106, -60.4965, -105.241, 0.55", "-105.592, -58.0364, -105.618, 0.28", "-105.876, -57.7597, -105.652, 0.55", "-107.157, -56.5417, -105.766, 0.28", "-109.696, -54.1234, -105.931, 0.55", "-112.35, -51.5299, -106.031, 0.28", "-112.547, -51.3292, -106.04, 0.55", "-113.356, -50.4786, -106.101, 0.28", "-114.06, -49.7675, -106.183, 0.83", "-116.083, -47.8326, -106.534, 0.28", "-116.734, -47.2812, -106.712, 0.55", "-118.125, -46.3124, -107.143, 0.28", "-118.336, -46.1643, -107.208, 0.55", "-120.111, -44.9472, -107.746, 0.28", "-120.746, -44.5209, -107.856, 0.55", "-122.416, -43.4715, -107.999, 0.28", "-124.048, -42.4328, -108.066, 0.55", "-126.458, -40.8927, -108.052, 0.28", "-127.193, -40.4287, -108.032, 0.55", "-131.082, -37.9558, -107.823, 0.28", "-131.94, -37.4555, -107.775, 0.55", "-134.556, -36.1069, -107.635, 0.28", "-135.664, -35.6599, -107.613, 0.83", "-137.309, -35.1127, -107.614, 0.28", "-137.686, -35.0014, -107.636, 0.55", "-139.535, -34.6627, -108.028, 0.28", "-140.714, -34.5216, -108.281, 0.55", "-143.11, -34.595, -108.837, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.370123, -17.2505, -61.5122, 0.28", "-2.54907, -13.1198, -60.8919, 0.28", "-3.49414, -11.2203, -60.5896, 0.83", "-4.53412, -8.95829, -60.2416, 0.28", "-5.03738, -7.73347, -60.2091, 0.55", "-5.99492, -5.16818, -60.3162, 0.55", "-6.41288, -3.92129, -60.416, 0.55", "-7.02866, -1.44995, -60.7253, 0.28", "-7.34989, 0.358739, -61.0684, 0.83", "-7.77885, 5.17256, -62.2756, 0.28", "-7.79523, 6.21883, -62.5694, 0.28", "-7.71835, 7.24178, -62.8736, 0.55", "-7.40311, 9.16069, -63.3897, 0.28", "-7.12178, 10.1908, -63.6125, 0.55", "-6.60635, 11.625, -63.7958, 0.28", "-5.95189, 13.1378, -63.7932, 0.55", "-4.88021, 15.5312, -63.7893, 0.28", "-4.57817, 16.1815, -63.7989, 0.55", "-3.91141, 17.5841, -63.8348, 0.28", "-3.66998, 18.1019, -63.8506, 0.55", "-2.82965, 19.9679, -63.8476, 0.28", "-2.22326, 21.2934, -63.8185, 0.55", "-0.680764, 24.7915, -63.7091, 0.28", "0.24675, 27.0202, -63.6272, 0.83", "1.30317, 29.5555, -63.5193, 0.28", "2.41757, 32.2021, -63.3949, 0.55", "2.71128, 32.8975, -63.3603, 0.55", "3.6996, 35.2695, -63.2384, 0.28", "4.29696, 36.7924, -63.1568, 0.55", "4.55335, 37.4696, -63.1107, 0.55", "5.37542, 39.7401, -62.9461, 0.28", "5.94692, 41.4919, -62.8311, 0.55", "6.4897, 43.2605, -62.6754, 0.55", "6.92537, 44.682, -62.5185, 0.28", "7.51251, 46.6699, -62.296, 0.55", "8.06952, 48.5343, -62.096, 0.28", "8.38781, 49.6243, -61.9824, 0.55", "8.67689, 50.6322, -61.8951, 0.55", "9.36874, 53.0734, -61.7488, 0.55", "9.941, 55.2009, -61.6283, 0.28", "10.4479, 56.9501, -61.5382, 0.28", "10.8455, 58.1957, -61.4356, 0.28", "11.1651, 59.0461, -61.3447, 0.28", "11.3768, 59.5809, -61.2554, 0.55", "12.062, 61.2245, -60.878, 0.28", "12.7816, 63.0876, -60.3288, 0.55", "12.9508, 63.5516, -60.1666, 0.55", "13.5413, 65.2073, -59.559, 0.28", "13.9898, 66.6179, -59.0417, 0.55", "14.2777, 67.6029, -58.6991, 0.55", "14.8565, 69.8751, -57.8441, 0.28", "15.0117, 70.59, -57.5478, 0.55", "15.2905, 71.8674, -56.9487, 0.28", "15.4203, 72.5016, -56.6359, 0.55", "15.8236, 74.5309, -55.6222, 0.28", "16.3305, 76.7844, -54.4898, 0.28", "16.5164, 77.4867, -54.1919, 0.55", "17.1534, 79.5574, -53.2375, 0.28", "17.5942, 80.8479, -52.6242, 0.28", "18.2645, 82.8712, -51.7148, 0.55", "18.7882, 84.4651, -50.9207, 0.28", "19.5913, 86.7851, -49.7444, 0.55", "20.9427, 90.5116, -47.8084, 0.55", "21.4398, 91.8416, -47.0145, 0.55", "22.0214, 93.3957, -46.0117, 0.55", "23.1406, 96.486, -43.6245, 0.55", "23.5438, 97.6815, -42.6252, 0.55", "24.0474, 99.2819, -41.2737, 0.55", "24.8207, 101.691, -39.5126, 0.55", "25.558, 103.672, -38.1063, 0.55", "26.8782, 106.796, -36.0393, 0.55", "27.7441, 108.868, -34.9135, 0.55", "28.3104, 110.232, -34.2308, 0.55", "29.2658, 112.444, -33.2785, 0.55", "29.6922, 113.364, -33.0092, 0.55", "30.068, 114.182, -32.8354, 0.55", "30.6335, 115.558, -32.7359, 0.83", "31.0342, 116.8, -32.644, 0.55", "31.1165, 117.152, -32.6199, 0.55", "31.2268, 118.304, -32.602, 0.55", "31.2481, 119.598, -32.6268, 0.55", "31.261, 121.059, -32.7483, 0.55", "31.3112, 122.912, -32.9627, 0.55", "31.3331, 123.477, -33.0398, 0.55", "31.5352, 127.075, -33.4648, 0.28", "31.6367, 128.393, -33.6001, 0.55", "31.9347, 131.203, -33.8515, 0.55", "32.2295, 133.267, -34.0, 0.55", "32.3373, 133.776, -34.0236, 0.55", "32.7587, 135.447, -33.8438, 0.55", "33.0811, 136.814, -33.4607, 0.55", "33.1378, 137.142, -33.3372, 0.55", "33.1897, 138.237, -32.9571, 0.55", "33.1415, 139.742, -32.567, 0.55", "32.6911, 144.431, -31.7843, 0.55", "32.3989, 146.506, -31.6223, 0.55", "32.1761, 147.781, -31.5895, 0.55", "31.4338, 151.702, -31.6877, 0.55", "31.1777, 152.977, -31.744, 0.55", "30.819, 154.569, -31.9291, 0.55", "30.6011, 155.636, -32.2065, 0.55", "30.4437, 156.746, -32.4707, 0.55", "30.2294, 158.547, -32.7492, 0.55", "30.1401, 160.391, -32.5712, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.370123, -17.2505, -61.5122, 0.55", "-2.01453, -17.5995, -63.072, 0.55", "-2.62264, -17.7219, -63.6449, 0.28", "-3.9421, -17.9392, -65.3338, 0.83", "-4.76548, -17.9096, -67.1328, 0.28", "-5.35411, -17.8009, -69.0709, 0.55", "-6.12159, -17.5449, -71.9757, 0.28", "-6.36151, -17.4255, -73.0272, 0.83", "-8.02326, -16.2258, -80.9932, 0.83", "-10.6075, -13.7357, -94.4288, 0.83", "-12.6215, -11.0393, -106.692, 0.55", "-13.0311, -10.3264, -109.486, 0.28", "-13.1283, -10.0752, -110.288, 0.55", "-13.4202, -8.94076, -113.207, 0.28", "-13.4673, -8.47372, -114.045, 0.55", "-13.5419, -5.86296, -116.744, 0.28", "-13.5347, -4.25806, -117.812, 0.28", "-13.4889, -2.48526, -119.175, 0.83", "-13.3829, -0.53102, -120.954, 0.28", "-13.3193, 0.222243, -121.742, 0.55", "-13.1294, 2.39935, -124.262, 0.28", "-13.091, 3.49447, -125.744, 0.55", "-13.1315, 5.45105, -128.97, 0.28", "-13.2789, 6.1836, -130.428, 0.55", "-13.5964, 6.85141, -131.998, 0.28", "-13.7455, 6.97222, -132.403, 0.55", "-14.5816, 7.27253, -134.195, 0.55", "-15.84, 7.317, -136.479, 0.55", "-17.1024, 7.05656, -138.663, 0.28", "-18.059, 6.67002, -140.382, 0.83", "-20.5734, 5.21102, -145.125, 0.28", "-21.1858, 4.73462, -146.41, 0.55", "-22.0903, 3.89899, -148.444, 0.55", "-23.2427, 2.7849, -151.069, 0.83", "-24.2504, 1.79447, -153.4, 0.28", "-24.3658, 1.69753, -153.663, 0.28", "-27.0528, -0.239722, -159.351, 0.28", "-28.1942, -0.898475, -161.569, 0.83", "-29.8412, -1.61042, -164.566, 0.28", "-31.2631, -2.07317, -166.781, 0.55", "-32.8405, -2.42928, -169.021, 0.55", "-33.7364, -2.57032, -170.212, 0.55", "-34.1596, -2.61888, -170.731, 0.83", "-35.9999, -2.90252, -172.966, 0.28", "-36.7709, -3.02268, -173.964, 0.55", "-39.075, -3.39324, -177.151, 0.28", "-40.041, -3.55141, -178.546, 0.55", "-42.0258, -3.80827, -181.541, 0.28", "-42.3694, -3.85148, -182.034, 0.55", "-45.7053, -4.2863, -186.382, 0.28", "-46.1021, -4.33319, -186.917, 0.83", "-47.763, -4.48541, -189.017, 0.28", "-49.1396, -4.5867, -190.86, 0.55", "-52.7247, -4.31823, -196.022, 0.28", "-53.201, -4.27114, -198.471, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-50.7673, -45.4346, -6.54473, 0.55", "-54.6556, -45.3618, -7.11393, 0.55", "-56.3999, -45.3292, -7.36929, 0.55", "-58.2811, -45.294, -7.64467, 0.55", "-60.8543, -45.2459, -8.02137, 1.11", "-62.252, -45.2198, -8.22598, 0.55", "-64.8308, -45.1715, -8.6035, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-50.7673, -45.4346, -6.54473, 0.55", "-51.3286, -44.0821, -6.72349, 0.55", "-51.9356, -42.7237, -6.9096, 0.28", "-52.3254, -41.8798, -7.05936, 0.55", "-53.163, -40.1592, -7.37413, 0.28", "-53.8077, -38.936, -7.55561, 0.55", "-55.6308, -35.5164, -7.974, 0.28", "-55.9774, -34.9031, -8.05018, 0.55", "-57.1668, -32.8764, -8.29062, 0.28", "-57.5783, -32.1997, -8.36704, 0.55", "-59.878, -28.4656, -8.71075, 0.28", "-60.3904, -27.6269, -8.78271, 0.55", "-61.5699, -25.7613, -8.8307, 0.28", "-62.1746, -24.7947, -8.84824, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-23.7385, -33.3965, 5.0084, 0.55", "-27.3307, -34.112, 6.34651, 0.55", "-28.6319, -34.3945, 7.20013, 0.83", "-30.4748, -34.7261, 8.61324, 0.55", "-31.8184, -34.8892, 9.77242, 0.55", "-34.0534, -35.0465, 11.6961, 0.55", "-35.5569, -35.0643, 13.0954, 0.83", "-39.3849, -34.7982, 17.1339, 0.55", "-40.2783, -34.6956, 18.1768, 0.83", "-42.0642, -34.4283, 20.2597, 0.28", "-44.0315, -34.1737, 22.3243, 0.55", "-46.1718, -34.0046, 24.1991, 0.28", "-46.94, -34.055, 24.7636, 0.55", "-50.0883, -34.433, 26.6095, 0.55", "-52.6777, -34.9422, 28.0281, 0.55", "-55.6754, -35.8062, 29.4437, 0.55", "-57.252, -36.4053, 30.0968, 0.55", "-60.8547, -38.0143, 31.2397, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-23.7385, -33.3965, 5.0084, 0.55", "-24.0724, -32.4132, 5.27349, 0.55", "-24.5925, -30.9796, 5.75907, 0.28", "-24.9472, -29.9965, 6.10359, 0.55", "-25.7532, -27.7923, 6.85203, 0.55", "-27.0429, -24.5165, 7.92853, 0.55", "-27.8261, -22.6604, 8.55756, 0.55", "-28.662, -20.6571, 9.24975, 0.28", "-29.5374, -18.4518, 9.97038, 0.28", "-30.0798, -16.9949, 10.3409, 0.28", "-30.5513, -15.7466, 10.5088, 0.55", "-31.36, -13.685, 10.5134, 0.55", "-32.1103, -11.6514, 10.4263, 0.55", "-32.7348, -9.94506, 10.2267, 0.55", "-33.5419, -7.66399, 9.90556, 0.55", "-34.2395, -5.48608, 9.58967, 0.28", "-34.8091, -3.6368, 9.334, 0.55", "-35.2723, -2.15049, 9.1457, 0.55", "-35.9937, -0.127071, 8.94268, 0.28", "-36.6823, 1.79998, 8.91725, 0.55", "-37.2659, 3.50044, 9.0246, 0.28", "-38.1024, 6.04376, 9.30281, 0.55", "-38.9065, 8.36144, 9.60636, 0.55", "-40.0189, 11.3314, 9.94668, 0.55", "-41.199, 14.0796, 10.2123, 0.28", "-41.7743, 15.3113, 10.2237, 0.55", "-42.1353, 16.0816, 10.162, 0.28", "-42.6952, 17.3244, 9.93811, 0.55", "-43.6012, 19.3944, 9.41279, 0.28", "-44.4971, 21.7392, 8.51443, 0.83", "-45.7689, 25.1936, 6.89869, 0.55", "-46.8049, 28.4878, 5.39037, 0.55", "-47.2973, 30.6307, 4.44418, 0.28", "-47.4707, 31.6591, 4.02158, 0.55", "-48.0201, 35.8544, 2.52572, 0.28", "-48.108, 36.8983, 2.17464, 0.55", "-48.4482, 40.5556, 1.06312, 0.55", "-48.7286, 43.7108, 0.0852089, 0.28", "-48.9258, 45.5473, -0.377263, 0.55", "-49.1338, 47.0798, -0.625848, 0.28", "-49.4138, 48.5018, -0.614443, 0.55", "-50.0314, 50.7887, -0.473429, 0.28", "-50.4444, 51.8522, -0.35781, 0.55", "-51.4641, 54.0382, 0.00731111, 0.28", "-52.6268, 56.4381, 0.32318, 0.55", "-54.1888, 59.6519, 0.670687, 0.28", "-55.3005, 61.921, 0.921951, 0.55", "-56.074, 63.7252, 1.02293, 0.28", "-56.567, 64.9361, 1.07345, 0.28", "-57.3989, 67.2172, 1.02927, 0.55", "-57.9888, 69.1096, 0.933645, 0.28", "-58.2462, 70.1636, 0.802474, 0.55", "-58.6728, 72.4771, 0.628222, 0.28", "-59.076, 75.4433, 0.410959, 0.55", "-59.2937, 77.994, 0.19188, 0.28", "-59.3112, 78.7535, 0.143207, 0.55", "-59.2724, 81.8277, -0.21772, 0.28", "-59.1254, 83.7531, -0.517282, 0.55", "-58.9286, 86.264, -0.996763, 0.28", "-58.819, 87.2021, -1.21183, 0.55", "-58.3459, 90.7062, -1.953, 0.28", "-58.1302, 92.3387, -2.2418, 0.55", "-57.7276, 95.2689, -2.61695, 0.28", "-57.4875, 97.5283, -2.83004, 0.55", "-57.2935, 99.8067, -2.99688, 0.55", "-57.2455, 101.157, -3.05817, 0.55", "-57.2175, 103.212, -3.14308, 0.28", "-57.2393, 104.942, -3.15945, 1.11", "-57.3777, 109.612, -3.07418, 0.55", "-57.4503, 112.492, -2.94432, 0.28", "-57.5678, 114.823, -2.803, 0.55", "-57.7249, 117.812, -2.58045, 0.28", "-57.8087, 119.121, -2.46627, 0.55", "-57.9678, 121.699, -2.17462, 0.55", "-58.0683, 123.441, -2.0041, 0.28", "-58.1044, 124.245, -1.96466, 0.55", "-58.1596, 126.934, -1.933, 0.28", "-58.2125, 127.917, -1.96962, 0.55", "-58.3434, 129.906, -2.08253, 0.28", "-58.5586, 132.214, -2.34149, 0.55", "-58.8075, 135.324, -2.86913, 0.55", "-59.0036, 138.017, -3.50972, 0.28", "-59.1363, 139.837, -4.03415, 0.55", "-59.2862, 142.872, -4.89971, 0.28", "-59.4169, 144.978, -5.46851, 0.55", "-59.5174, 147.478, -6.07947, 0.83", "-59.6104, 150.337, -6.71114, 0.28", "-59.6168, 150.689, -6.80682, 0.55", "-59.6314, 153.197, -7.47348, 0.55", "-59.6372, 155.022, -7.95095, 0.55", "-59.7189, 157.467, -8.448, 0.28", "-59.8125, 160.023, -8.75861, 0.55", "-59.8215, 162.492, -8.87725, 0.28", "-59.7894, 164.685, -8.91732, 0.55", "-59.7394, 166.734, -8.90237, 0.28", "-59.655, 168.814, -8.83102, 0.55", "-59.4901, 172.645, -8.52314, 0.55", "-59.2384, 176.458, -8.13322, 0.28", "-59.1025, 177.796, -7.90245, 0.28", "-58.9657, 178.85, -7.67796, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.239272, 165.078, 29.6267, 0.55", "-0.625217, 166.344, 29.2722, 0.55", "-0.795944, 166.594, 29.2022, 0.55", "-1.28851, 167.316, 29.0002, 0.28", "-2.0458, 168.425, 28.6897, 0.55", "-2.80675, 169.54, 28.3776, 0.28", "-4.03321, 171.337, 27.8747, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.239272, 165.078, 29.6267, 0.55", "0.629094, 166.857, 29.7011, 0.55", "0.871064, 168.447, 29.7676, 0.55", "1.13073, 170.095, 29.8346, 0.55", "1.48196, 172.369, 29.9327, 0.55", "2.07029, 175.722, 30.0261, 0.55", "2.22966, 176.547, 30.0405, 0.28", "2.42454, 177.778, 30.0492, 0.55", "2.83572, 180.32, 30.0272, 0.55", "3.02657, 181.426, 29.9992, 0.55", "3.33776, 182.862, 29.9289, 0.55", "3.6472, 184.237, 29.8231, 0.55", "3.93789, 185.542, 29.6931, 0.83", "4.08913, 186.301, 29.608, 0.28", "4.20429, 187.056, 29.4696, 0.55", "4.26938, 187.563, 29.3539, 0.28", "4.3729, 188.565, 29.1612, 0.55", "4.55582, 189.832, 28.9402, 0.28", "4.67546, 190.512, 28.814, 0.55", "5.13339, 192.812, 28.3985, 0.28", "5.26815, 193.354, 28.2963, 0.55", "5.76133, 194.96, 28.0009, 0.28", "6.16062, 195.987, 27.8137, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-64.8308, -45.1715, -8.6035, 0.55", "-66.6611, -45.62, -10.0435, 0.55", "-69.8618, -46.4437, -12.4561, 0.28", "-71.079, -46.7834, -13.3133, 0.55", "-72.8437, -47.2759, -14.4505, 1.38", "-74.7798, -47.7955, -15.5583, 0.55", "-75.4468, -47.9469, -15.8726, 0.28", "-75.8876, -48.0394, -16.0163, 0.55", "-76.9157, -48.2317, -16.0928, 0.28", "-77.8003, -48.4241, -16.0979, 0.55", "-79.2387, -48.7852, -16.0037, 0.55", "-81.2755, -49.2857, -15.8329, 0.55", "-83.126, -49.7414, -15.6966, 0.55", "-83.5305, -49.8479, -15.6714, 1.11", "-87.279, -50.9272, -15.4705, 0.28", "-88.846, -51.4188, -15.3891, 0.83", "-90.3134, -51.9146, -15.2827, 0.28", "-91.3443, -52.2459, -15.2315, 0.55", "-92.2103, -52.4699, -15.1807, 0.28", "-93.5163, -52.7119, -15.0931, 0.55", "-94.8449, -52.8367, -14.9363, 0.28", "-95.6929, -52.8881, -14.8167, 0.83", "-98.6647, -52.9839, -14.1689, 0.28", "-100.136, -52.9675, -13.755, 0.83", "-101.995, -52.8453, -13.1138, 0.28", "-103.373, -52.7091, -12.5567, 0.83", "-104.76, -52.5279, -11.8432, 0.55", "-106.296, -52.2603, -10.8815, 0.28", "-106.885, -52.142, -10.4011, 0.55", "-107.738, -51.9532, -9.65418, 0.28", "-108.289, -51.8278, -9.1525, 0.55", "-109.956, -51.509, -7.83479, 0.28", "-110.842, -51.3749, -7.25808, 0.55", "-112.293, -51.2206, -6.4961, 0.28", "-112.568, -51.2115, -6.35708, 0.55", "-113.361, -51.258, -5.98293, 0.28", "-115.629, -51.5971, -5.06874, 0.55", "-116.791, -51.8779, -4.67413, 0.28", "-117.962, -52.2848, -4.3311, 0.83", "-120.546, -53.4467, -3.72894, 0.28", "-121.462, -53.9456, -3.53518, 0.55", "-122.81, -54.7812, -3.30716, 0.28", "-124.192, -55.7468, -3.12101, 0.83", "-125.774, -56.8583, -2.97067, 0.55", "-127.055, -57.784, -2.88384, 0.28", "-127.692, -58.2997, -2.85366, 0.55", "-128.683, -59.1632, -2.76248, 0.28", "-129.401, -59.9727, -2.61892, 0.55", "-130.38, -61.4562, -2.35121, 0.28", "-130.963, -62.6519, -2.10835, 0.55", "-131.801, -64.9387, -1.68126, 0.28", "-132.069, -65.7989, -1.55289, 0.55", "-132.73, -68.3073, -1.20477, 0.28", "-132.848, -68.7885, -1.15049, 0.83", "-133.248, -70.4512, -0.947175, 0.28", "-133.413, -71.0423, -0.910253, 0.55", "-133.965, -72.8272, -0.850573, 0.28", "-134.109, -73.2363, -0.831972, 0.55", "-135.021, -75.6353, -0.740403, 0.28", "-135.601, -77.1431, -0.654877, 0.55", "-136.385, -79.2161, -0.520788, 0.28", "-137.005, -80.8611, -0.406415, 0.55", "-137.561, -82.3345, -0.315921, 0.28", "-137.67, -82.6317, -0.300866, 0.55", "-138.126, -83.8399, -0.261094, 0.28", "-138.551, -85.0018, -0.214928, 0.55", "-138.774, -85.6155, -0.154189, 0.28", "-139.01, -86.3417, -0.0764241, 0.55", "-139.451, -87.8291, 0.0828533, 0.28", "-139.717, -88.7568, 0.229349, 0.55", "-140.037, -90.0085, 0.454422, 0.28", "-140.194, -90.6566, 0.627768, 0.55", "-140.391, -91.584, 0.908588, 0.28", "-140.525, -92.1972, 1.08986, 0.55", "-140.89, -93.6502, 1.4903, 0.28", "-141.227, -94.8477, 1.74469, 0.55", "-141.861, -96.938, 1.97809, 0.28", "-142.071, -97.5557, 1.99449, 0.55", "-142.553, -98.7967, 1.93126, 0.28", "-142.743, -99.2378, 1.87432, 0.55", "-143.425, -100.608, 1.58039, 0.28", "-143.959, -101.619, 1.30436, 0.83", "-144.761, -103.213, 0.736277, 0.28", "-145.052, -103.802, 0.532679, 0.55", "-145.437, -104.66, 0.264703, 0.28", "-145.73, -105.366, 0.0598879, 0.55", "-146.196, -106.641, -0.316526, 1.11", "-146.778, -108.327, -0.811187, 0.28", "-146.898, -108.742, -0.929328, 0.55", "-147.342, -110.349, -1.34685, 0.28", "-147.832, -112.109, -1.83668, 0.55", "-148.189, -113.315, -2.20976, 0.28", "-148.537, -114.311, -2.66029, 0.55", "-148.799, -114.988, -3.05139, 0.28", "-149.076, -115.654, -3.55189, 0.55", "-149.807, -117.207, -4.97619, 0.28", "-149.973, -117.558, -5.31613, 0.55", "-151.051, -119.768, -7.41324, 0.28", "-151.4, -120.507, -8.12465, 0.55", "-151.808, -121.441, -8.97507, 0.28", "-152.081, -122.14, -9.59701, 0.55", "-152.53, -123.343, -10.5089, 0.28", "-152.737, -123.901, -10.8648, 0.55", "-152.962, -124.567, -11.1975, 0.28", "-153.246, -125.216, -11.5619, 0.55", "-153.992, -126.832, -12.581, 0.28", "-154.334, -127.604, -13.082, 0.83", "-155.271, -129.758, -14.4332, 0.28", "-155.626, -130.745, -14.9689, 0.83", "-156.414, -133.355, -16.2108, 0.28", "-156.875, -135.102, -16.9546, 0.83", "-157.296, -137.059, -17.6684, 0.28", "-157.481, -138.213, -18.0916, 0.55", "-157.708, -140.481, -18.9005, 0.28", "-157.754, -141.343, -19.2363, 0.55", "-157.73, -142.314, -19.6238, 0.28", "-157.712, -142.762, -19.8119, 0.28", "-157.574, -145.447, -21.1383, 0.28", "-157.548, -145.827, -21.3621, 0.55", "-157.392, -147.724, -22.4629, 0.28", "-157.234, -148.651, -22.898, 0.55", "-156.963, -149.68, -23.2532, 0.28", "-156.791, -150.26, -23.4173, 0.55", "-156.253, -151.773, -23.6303, 0.28", "-155.563, -153.65, -23.7399, 0.55", "-154.789, -155.383, -23.5434, 0.28", "-154.461, -156.02, -23.4392, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-64.8308, -45.1715, -8.6035, 0.28", "-69.9601, -43.5393, -7.63441, 0.28", "-71.4714, -42.9237, -7.42722, 0.55", "-73.6507, -41.9881, -7.16694, 0.28", "-74.5045, -41.5033, -7.16084, 0.55", "-75.6293, -40.7747, -7.18315, 0.28", "-76.8345, -39.9114, -7.1358, 0.55", "-79.8489, -37.3098, -6.97515, 0.28", "-80.7383, -36.5131, -6.85392, 0.55", "-85.7404, -31.9462, -5.86768, 0.28", "-87.2394, -30.6059, -5.62282, 0.55", "-90.1819, -27.9676, -4.99542, 0.28", "-91.184, -27.065, -4.75901, 0.55", "-95.3104, -23.3593, -3.57363, 0.28", "-95.713, -23.0058, -3.44011, 0.55", "-99.4257, -20.203, -1.79394, 0.28", "-102.282, -18.2477, -0.862392, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_50", "dend_39", "dend_34", "dend_9", "dend_0", "dend_52", "dend_51", "dend_45", "dend_40", "dend_36", "dend_35", "dend_21", "dend_10", "dend_2", "dend_1", "dend_54", "dend_53", "dend_47", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_29", "dend_22", "dend_12", "dend_11", "dend_8", "dend_3", "dend_49", "dend_48", "dend_43", "dend_42", "dend_31", "dend_30", "dend_26", "dend_23", "dend_16", "dend_13", "dend_7", "dend_4", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_5", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_50", "dend_39", "dend_34", "dend_9", "dend_0", "dend_52", "dend_51", "dend_45", "dend_40", "dend_36", "dend_35", "dend_21", "dend_10", "dend_2", "dend_1", "dend_54", "dend_53", "dend_47", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_29", "dend_22", "dend_12", "dend_11", "dend_8", "dend_3", "dend_49", "dend_48", "dend_43", "dend_42", "dend_31", "dend_30", "dend_26", "dend_23", "dend_16", "dend_13", "dend_7", "dend_4", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_5", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_21", "dend_10", "dend_10", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_BTC_b7a569ac13_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_21, id: dend_21, parent: dend_9
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_29, id: dend_29, parent: dend_21
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_21, dend_10, dend_10, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_50(0), soma_0(0.49999995701300415)
    connect dend_39(0), soma_0(0.49999995701300415)
    connect dend_34(0), soma_0(0.49999995701300415)
    connect dend_9(0), soma_0(0.49999995701300415)
    connect dend_0(0), soma_0(0.49999995701300415)
    connect axon_0(0), soma_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_21(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_29(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.636547, -11.2268, 0.0, 2.0961 ) }
    soma_0 { pt3dadd( 0.598333, -10.0461, 0.0, 3.03421 ) }
    soma_0 { pt3dadd( 0.560118, -8.86534, 0.0, 4.26504 ) }
    soma_0 { pt3dadd( 0.521904, -7.68461, 0.0, 5.45891 ) }
    soma_0 { pt3dadd( 0.483689, -6.50388, 0.0, 6.32885 ) }
    soma_0 { pt3dadd( 0.445475, -5.32315, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( 0.40726, -4.14242, 0.0, 7.67098 ) }
    soma_0 { pt3dadd( 0.369046, -2.96169, 0.0, 8.08337 ) }
    soma_0 { pt3dadd( 0.330831, -1.78096, 0.0, 8.48415 ) }
    soma_0 { pt3dadd( 0.292617, -0.600232, 0.0, 8.88493 ) }
    soma_0 { pt3dadd( 0.254403, 0.580499, 0.0, 9.09061 ) }
    soma_0 { pt3dadd( 0.216188, 1.76123, 0.0, 8.76211 ) }
    soma_0 { pt3dadd( 0.177974, 2.94196, 0.0, 8.30944 ) }
    soma_0 { pt3dadd( 0.139759, 4.12269, 0.0, 7.83318 ) }
    soma_0 { pt3dadd( 0.101545, 5.30342, 0.0, 7.35692 ) }
    soma_0 { pt3dadd( 0.0633304, 6.48415, 0.0, 6.86553 ) }
    soma_0 { pt3dadd( 0.0251159, 7.66488, 0.0, 6.11195 ) }
    soma_0 { pt3dadd( -0.0130985, 8.84561, 0.0, 5.27833 ) }
    soma_0 { pt3dadd( -0.051313, 10.0263, 0.0, 4.23957 ) }
    soma_0 { pt3dadd( -0.0895274, 11.2071, 0.0, 3.09571 ) }
    soma_0 { pt3dadd( -0.127742, 12.3878, 0.0, 1.86556 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 21/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 0.781648, -9.84779, 7.16, 0.83 ) }
    dend_50 { pt3dadd( 0.741566, -13.0738, 8.00469, 0.83 ) }
    dend_50 { pt3dadd( 0.877982, -14.8494, 8.67972, 0.55 ) }
    dend_50 { pt3dadd( 1.23801, -16.9015, 9.53476, 0.55 ) }
    dend_50 { pt3dadd( 1.6891, -18.7313, 10.28, 0.55 ) }
    dend_50 { pt3dadd( 2.66168, -21.9568, 11.5377, 0.28 ) }
    dend_50 { pt3dadd( 2.9379, -22.8371, 11.8608, 0.55 ) }
    dend_50 { pt3dadd( 3.77036, -24.9663, 12.6566, 0.55 ) }
    dend_50 { pt3dadd( 4.48489, -26.6672, 13.311, 0.55 ) }
    dend_50 { pt3dadd( 5.27724, -28.2686, 13.8573, 0.28 ) }
    dend_50 { pt3dadd( 5.82989, -29.3776, 14.1732, 0.55 ) }
    dend_50 { pt3dadd( 6.35689, -30.5572, 14.4497, 0.55 ) }
    dend_50 { pt3dadd( 7.14055, -32.6375, 14.9168, 0.55 ) }
    dend_50 { pt3dadd( 8.19449, -35.9326, 15.5872, 0.55 ) }
    dend_50 { pt3dadd( 8.83152, -38.3671, 16.1029, 0.55 ) }
    dend_50 { pt3dadd( 9.37311, -40.8324, 16.618, 0.55 ) }
    dend_50 { pt3dadd( 9.60475, -42.2999, 16.8996, 0.55 ) }
    dend_50 { pt3dadd( 9.86715, -44.7013, 17.3104, 0.55 ) }
    dend_50 { pt3dadd( 9.9352, -45.9856, 17.5033, 0.55 ) }
    dend_50 { pt3dadd( 9.88712, -47.111, 17.6054, 0.55 ) }
    dend_50 { pt3dadd( 9.63562, -49.0706, 17.7715, 0.55 ) }
    dend_50 { pt3dadd( 9.26342, -51.3029, 17.9023, 0.55 ) }
    dend_50 { pt3dadd( 9.21024, -51.6509, 17.9003, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.99836, -4.78679, -13.53, 0.83 ) }
    dend_39 { pt3dadd( -1.872, -3.46784, -14.0632, 0.83 ) }
    dend_39 { pt3dadd( -2.25506, -0.824677, -14.8458, 0.83 ) }
    dend_39 { pt3dadd( -2.61111, -0.0193237, -16.0417, 0.83 ) }
    dend_39 { pt3dadd( -3.02714, 0.860636, -17.4847, 0.83 ) }
    dend_39 { pt3dadd( -3.40858, 1.66742, -18.8076, 0.83 ) }
    dend_39 { pt3dadd( -3.75727, 2.40496, -20.017, 0.83 ) }
    dend_39 { pt3dadd( -4.4171, 3.78448, -22.3722, 0.83 ) }
    dend_39 { pt3dadd( -7.80343, 9.71569, -33.6017, 0.83 ) }
    dend_39 { pt3dadd( -7.90741, 9.86854, -33.9456, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 54/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.60835, 11.7507, -0.19, 1.11 ) }
    dend_34 { pt3dadd( -3.3472, 12.8797, -0.115279, 1.11 ) }
    dend_34 { pt3dadd( -5.68039, 14.3945, -0.0150193, 1.11 ) }
    dend_34 { pt3dadd( -7.77956, 15.7574, 0.0751845, 1.11 ) }
    dend_34 { pt3dadd( -10.1197, 17.2767, 0.17574, 0.83 ) }
    dend_34 { pt3dadd( -12.8975, 19.0802, 0.295109, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 60/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.641648, -12.3048, -8.79, 2.77 ) }
    dend_9 { pt3dadd( 0.366413, -17.1894, -8.79, 2.77 ) }
    dend_9 { pt3dadd( -0.0270823, -24.1729, -8.79, 2.77 ) }
    dend_9 { pt3dadd( -0.223059, -27.6509, -8.79, 2.77 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.358352, 12.3177, -1.3, 0.83 ) }
    dend_0 { pt3dadd( 0.171684, 16.7969, -1.07849, 0.83 ) }
    dend_0 { pt3dadd( 0.488196, 18.9966, -0.829439, 1.11 ) }
    dend_0 { pt3dadd( 0.980181, 22.6648, -0.259242, 0.83 ) }
    dend_0 { pt3dadd( 1.41597, 26.2067, 0.347072, 0.83 ) }
    dend_0 { pt3dadd( 1.80108, 29.1183, 0.942015, 0.83 ) }
    dend_0 { pt3dadd( 2.42744, 33.7952, 1.8559, 0.83 ) }
    dend_0 { pt3dadd( 2.76593, 36.8454, 2.48012, 0.83 ) }
    dend_0 { pt3dadd( 3.04022, 39.278, 2.96039, 0.83 ) }
    dend_0 { pt3dadd( 3.51894, 43.1773, 3.77133, 0.83 ) }
    dend_0 { pt3dadd( 4.4074, 50.2116, 5.25967, 0.83 ) }
    dend_0 { pt3dadd( 4.84564, 53.731, 5.96871, 0.83 ) }
    dend_0 { pt3dadd( 5.09087, 56.0082, 6.28932, 0.83 ) }
    dend_0 { pt3dadd( 5.5324, 60.4392, 6.78118, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.127742, 12.3878, 0.0, 0.931205 ) }
    axon_0 { pt3dadd( -0.612964, 27.38, 0.0, 0.931205 ) }
    axon_0 { pt3dadd( -1.09819, 42.3721, 0.0, 0.931205 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 81/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.21024, -51.6509, 17.9003, 0.55 ) }
    dend_52 { pt3dadd( 9.12713, -52.1585, 18.2528, 0.55 ) }
    dend_52 { pt3dadd( 9.02898, -52.73, 18.6144, 0.55 ) }
    dend_52 { pt3dadd( 8.70242, -54.4125, 19.5479, 0.55 ) }
    dend_52 { pt3dadd( 8.50659, -55.4989, 20.0917, 0.55 ) }
    dend_52 { pt3dadd( 8.20878, -57.2683, 20.8802, 0.55 ) }
    dend_52 { pt3dadd( 8.00019, -58.7159, 21.4661, 0.28 ) }
    dend_52 { pt3dadd( 7.89139, -59.6845, 21.8082, 0.55 ) }
    dend_52 { pt3dadd( 7.81326, -60.761, 22.0995, 0.55 ) }
    dend_52 { pt3dadd( 7.77707, -61.5301, 22.234, 0.55 ) }
    dend_52 { pt3dadd( 7.74786, -62.4924, 22.3576, 0.55 ) }
    dend_52 { pt3dadd( 7.72473, -63.2492, 22.4579, 0.55 ) }
    dend_52 { pt3dadd( 7.67764, -64.1059, 22.6038, 0.55 ) }
    dend_52 { pt3dadd( 7.57636, -65.2023, 22.8215, 0.55 ) }
    dend_52 { pt3dadd( 7.3651, -66.9168, 23.1785, 0.55 ) }
    dend_52 { pt3dadd( 7.12136, -68.2727, 23.4352, 0.55 ) }
    dend_52 { pt3dadd( 6.6681, -70.5524, 23.806, 0.55 ) }
    dend_52 { pt3dadd( 6.46784, -71.4971, 23.9333, 0.55 ) }
    dend_52 { pt3dadd( 6.13713, -73.1812, 24.1092, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_52 { pt3dadd( 5.9813, -74.2103, 24.1426, 0.55 ) }
    dend_52 { pt3dadd( 5.84583, -76.0262, 24.0377, 0.55 ) }
    dend_52 { pt3dadd( 5.8218, -77.0666, 23.8975, 0.55 ) }
    dend_52 { pt3dadd( 5.84551, -77.6645, 23.7684, 0.55 ) }
    dend_52 { pt3dadd( 5.95609, -78.8049, 23.5181, 0.55 ) }
    dend_52 { pt3dadd( 6.20411, -80.3093, 23.1174, 0.55 ) }
    dend_52 { pt3dadd( 6.3584, -81.218, 22.8437, 0.55 ) }
    dend_52 { pt3dadd( 6.56147, -82.3215, 22.5017, 0.28 ) }
    dend_52 { pt3dadd( 6.7256, -83.4919, 22.1504, 0.55 ) }
    dend_52 { pt3dadd( 6.77819, -83.9028, 22.0294, 0.55 ) }
    dend_52 { pt3dadd( 6.92453, -85.3183, 21.6512, 0.28 ) }
    dend_52 { pt3dadd( 7.02336, -86.2496, 21.3968, 0.55 ) }
    dend_52 { pt3dadd( 7.20142, -87.4032, 21.0479, 0.55 ) }
    dend_52 { pt3dadd( 7.34601, -88.0579, 20.8659, 0.55 ) }
    dend_52 { pt3dadd( 7.4804, -88.591, 20.7434, 0.28 ) }
    dend_52 { pt3dadd( 7.75147, -89.6642, 20.5469, 0.55 ) }
    dend_52 { pt3dadd( 8.21938, -91.5357, 20.2988, 0.28 ) }
    dend_52 { pt3dadd( 8.51499, -92.6643, 20.1591, 0.55 ) }
    dend_52 { pt3dadd( 8.7694, -93.7328, 20.067, 0.28 ) }
    dend_52 { pt3dadd( 9.14134, -95.3385, 19.989, 0.28 ) }
    dend_52 { pt3dadd( 9.26962, -95.9455, 20.0005, 0.55 ) }
    dend_52 { pt3dadd( 9.391, -96.5313, 20.055, 0.28 ) }
    dend_52 { pt3dadd( 9.53551, -97.208, 20.1695, 0.55 ) }
    dend_52 { pt3dadd( 9.96896, -99.0746, 20.5001, 0.28 ) }
    dend_52 { pt3dadd( 10.1224, -99.6517, 20.5992, 0.28 ) }
    dend_52 { pt3dadd( 10.475, -100.749, 20.8049, 0.55 ) }
    dend_52 { pt3dadd( 10.8399, -101.694, 20.9951, 0.55 ) }
    dend_52 { pt3dadd( 11.4543, -103.082, 21.2782, 0.55 ) }
    dend_52 { pt3dadd( 11.7814, -103.765, 21.4061, 0.55 ) }
    dend_52 { pt3dadd( 12.3868, -104.961, 21.5886, 0.55 ) }
    dend_52 { pt3dadd( 12.8373, -105.883, 21.7208, 0.55 ) }
    dend_52 { pt3dadd( 13.1826, -106.584, 21.8418, 0.55 ) }
    dend_52 { pt3dadd( 13.557, -107.327, 22.0218, 0.55 ) }
    dend_52 { pt3dadd( 14.1811, -108.5, 22.3812, 0.55 ) }
    dend_52 { pt3dadd( 14.5334, -109.167, 22.6236, 0.55 ) }
    dend_52 { pt3dadd( 14.9749, -109.953, 22.9386, 0.28 ) }
    dend_52 { pt3dadd( 15.5971, -111.075, 23.3812, 0.55 ) }
    dend_52 { pt3dadd( 16.0844, -111.936, 23.6543, 0.55 ) }
    dend_52 { pt3dadd( 16.6789, -112.847, 23.9166, 0.55 ) }
    dend_52 { pt3dadd( 17.4647, -113.919, 24.1805, 0.28 ) }
    dend_52 { pt3dadd( 18.0506, -114.693, 24.2781, 0.55 ) }
    dend_52 { pt3dadd( 18.5668, -115.372, 24.2825, 0.55 ) }
    dend_52 { pt3dadd( 19.8721, -117.011, 24.0867, 0.55 ) }
    dend_52 { pt3dadd( 20.2996, -117.531, 23.9691, 0.55 ) }
    dend_52 { pt3dadd( 20.7966, -118.119, 23.8005, 0.55 ) }
    dend_52 { pt3dadd( 21.8436, -119.301, 23.418, 0.55 ) }
    dend_52 { pt3dadd( 22.1973, -119.727, 23.2943, 0.55 ) }
    dend_52 { pt3dadd( 23.2125, -120.936, 22.9895, 0.28 ) }
    dend_52 { pt3dadd( 23.9055, -121.769, 22.8183, 0.55 ) }
    dend_52 { pt3dadd( 25.0809, -123.269, 22.5963, 0.28 ) }
    dend_52 { pt3dadd( 25.5338, -123.874, 22.5476, 0.28 ) }
    dend_52 { pt3dadd( 26.377, -125.07, 22.566, 0.55 ) }
    dend_52 { pt3dadd( 26.7994, -125.741, 22.6143, 0.28 ) }
    dend_52 { pt3dadd( 26.9335, -125.982, 22.6475, 0.55 ) }
    dend_52 { pt3dadd( 27.5209, -127.06, 22.8426, 0.28 ) }
    dend_52 { pt3dadd( 27.9027, -127.736, 22.9695, 0.55 ) }
    dend_52 { pt3dadd( 28.6622, -129.023, 23.2862, 0.28 ) }
    dend_52 { pt3dadd( 29.1342, -129.726, 23.4736, 0.55 ) }
    dend_52 { pt3dadd( 29.4739, -130.214, 23.5989, 0.55 ) }
    dend_52 { pt3dadd( 29.8104, -130.694, 23.7211, 0.55 ) }
    dend_52 { pt3dadd( 30.8041, -132.104, 24.0595, 0.28 ) }
    dend_52 { pt3dadd( 31.4557, -133.076, 24.28, 0.55 ) }
    dend_52 { pt3dadd( 32.291, -134.497, 24.5497, 0.28 ) }
    dend_52 { pt3dadd( 33.1724, -136.177, 24.8129, 0.28 ) }
    dend_52 { pt3dadd( 33.5816, -137.181, 24.9238, 0.55 ) }
    dend_52 { pt3dadd( 34.0681, -138.664, 24.9774, 0.55 ) }
    dend_52 { pt3dadd( 34.338, -139.755, 24.9335, 0.28 ) }
    dend_52 { pt3dadd( 34.6721, -141.544, 24.7492, 0.55 ) }
    dend_52 { pt3dadd( 34.7002, -141.805, 24.7154, 0.55 ) }
    dend_52 { pt3dadd( 34.8479, -143.831, 24.3771, 0.28 ) }
    dend_52 { pt3dadd( 34.9635, -145.136, 24.1356, 0.55 ) }
    dend_52 { pt3dadd( 35.108, -146.333, 23.9409, 0.28 ) }
    dend_52 { pt3dadd( 35.1835, -146.866, 23.8553, 0.55 ) }
    dend_52 { pt3dadd( 35.3986, -148.131, 23.6661, 0.55 ) }
    dend_52 { pt3dadd( 35.9218, -150.84, 23.3302, 0.28 ) }
    dend_52 { pt3dadd( 36.08, -151.522, 23.2819, 0.55 ) }
    dend_52 { pt3dadd( 36.4309, -153.08, 23.2813, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 9.21024, -51.6509, 17.9003, 0.55 ) }
    dend_51 { pt3dadd( 7.67616, -52.0571, 18.4475, 0.55 ) }
    dend_51 { pt3dadd( 5.60222, -52.1329, 18.3184, 0.55 ) }
    dend_51 { pt3dadd( 4.37437, -51.9573, 18.0299, 0.55 ) }
    dend_51 { pt3dadd( 3.14652, -51.8089, 17.7541, 0.55 ) }
    dend_51 { pt3dadd( 1.59045, -51.6465, 17.3763, 0.55 ) }
    dend_51 { pt3dadd( 0.445746, -51.5226, 17.1083, 0.55 ) }
    dend_51 { pt3dadd( -3.42324, -50.9115, 16.2351, 0.28 ) }
    dend_51 { pt3dadd( -4.78245, -50.7015, 15.9041, 0.28 ) }
    dend_51 { pt3dadd( -6.27256, -50.4331, 15.571, 0.55 ) }
    dend_51 { pt3dadd( -8.72501, -49.8986, 15.4036, 0.55 ) }
    dend_51 { pt3dadd( -9.51012, -49.7224, 15.5096, 0.55 ) }
    dend_51 { pt3dadd( -11.3896, -49.2939, 16.2481, 0.83 ) }
    dend_51 { pt3dadd( -12.6665, -49.0033, 17.3507, 0.55 ) }
    dend_51 { pt3dadd( -13.578, -48.8197, 18.4541, 0.55 ) }
    dend_51 { pt3dadd( -16.6641, -48.3844, 23.2951, 0.55 ) }
    dend_51 { pt3dadd( -16.9991, -48.3838, 24.031, 0.55 ) }
    dend_51 { pt3dadd( -17.1941, -48.4526, 24.6388, 0.55 ) }
    dend_51 { pt3dadd( -17.9369, -49.2238, 28.4845, 0.28 ) }
    dend_51 { pt3dadd( -18.1096, -49.607, 29.8958, 0.55 ) }
    dend_51 { pt3dadd( -18.2285, -50.0821, 31.2443, 0.55 ) }
    dend_51 { pt3dadd( -18.4958, -51.8182, 34.7727, 0.55 ) }
    dend_51 { pt3dadd( -18.682, -54.2343, 39.0103, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_51 { pt3dadd( -18.7218, -55.928, 41.5475, 0.55 ) }
    dend_51 { pt3dadd( -18.7004, -56.6151, 42.4713, 0.55 ) }
    dend_51 { pt3dadd( -18.6705, -57.1509, 43.2115, 0.55 ) }
    dend_51 { pt3dadd( -18.534, -58.2961, 44.6441, 0.55 ) }
    dend_51 { pt3dadd( -18.386, -59.3484, 45.3984, 0.28 ) }
    dend_51 { pt3dadd( -18.3091, -60.6578, 45.6649, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -7.90741, 9.86854, -33.9456, 0.83 ) }
    dend_45 { pt3dadd( -6.98739, 12.9821, -34.5379, 0.83 ) }
    dend_45 { pt3dadd( -6.07931, 16.0599, -35.3494, 0.83 ) }
    dend_45 { pt3dadd( -5.39899, 18.5371, -36.046, 0.83 ) }
    dend_45 { pt3dadd( -4.49222, 21.6042, -36.8959, 0.83 ) }
    dend_45 { pt3dadd( -3.24538, 25.8431, -38.0137, 0.83 ) }
    dend_45 { pt3dadd( -2.12136, 29.9518, -39.0326, 0.83 ) }
    dend_45 { pt3dadd( -1.38973, 32.7945, -39.7185, 0.83 ) }
    dend_45 { pt3dadd( -0.413948, 36.6158, -40.6129, 0.83 ) }
    dend_45 { pt3dadd( 0.803057, 41.755, -41.7271, 0.83 ) }
    dend_45 { pt3dadd( 1.66555, 45.3533, -42.4232, 0.83 ) }
    dend_45 { pt3dadd( 2.45756, 48.6256, -42.9377, 0.83 ) }
    dend_45 { pt3dadd( 3.35325, 51.9121, -43.2936, 0.83 ) }
    dend_45 { pt3dadd( 3.83623, 53.5438, -43.4625, 0.83 ) }
    dend_45 { pt3dadd( 4.72741, 56.2218, -43.7898, 0.83 ) }
    dend_45 { pt3dadd( 5.69556, 58.9435, -44.1651, 0.83 ) }
    dend_45 { pt3dadd( 6.59382, 61.1382, -44.4881, 0.55 ) }
    dend_45 { pt3dadd( 7.9264, 64.1326, -44.9355, 1.11 ) }
    dend_45 { pt3dadd( 8.82513, 66.0485, -45.2192, 0.83 ) }
    dend_45 { pt3dadd( 10.3845, 69.3528, -45.6933, 0.83 ) }
    dend_45 { pt3dadd( 12.2587, 73.0333, -46.2158, 0.83 ) }
    dend_45 { pt3dadd( 13.6902, 75.7259, -46.5835, 0.83 ) }
    dend_45 { pt3dadd( 15.6033, 79.3078, -47.0375, 0.83 ) }
    dend_45 { pt3dadd( 17.1504, 82.3678, -47.3818, 0.83 ) }
    dend_45 { pt3dadd( 17.9626, 83.9376, -47.5397, 0.83 ) }
    dend_45 { pt3dadd( 19.1571, 86.3214, -47.781, 0.83 ) }
    dend_45 { pt3dadd( 20.5084, 89.4091, -48.2757, 0.83 ) }
    dend_45 { pt3dadd( 21.8294, 92.8867, -48.9861, 0.83 ) }
    dend_45 { pt3dadd( 22.9045, 96.4782, -49.8692, 0.83 ) }
    dend_45 { pt3dadd( 23.5797, 99.2791, -50.6588, 0.83 ) }
    dend_45 { pt3dadd( 24.3448, 102.983, -51.8654, 0.83 ) }
    dend_45 { pt3dadd( 25.1629, 108.969, -53.9394, 0.83 ) }
    dend_45 { pt3dadd( 25.2219, 109.544, -54.1868, 0.83 ) }
    dend_45 { pt3dadd( 25.6383, 114.528, -56.6352, 0.83 ) }
    dend_45 { pt3dadd( 25.8041, 116.269, -57.5667, 0.83 ) }
    dend_45 { pt3dadd( 26.1122, 118.89, -59.0264, 0.83 ) }
    dend_45 { pt3dadd( 26.8435, 123.259, -61.5807, 0.83 ) }
    dend_45 { pt3dadd( 28.3395, 128.806, -64.5252, 0.83 ) }
    dend_45 { pt3dadd( 29.0122, 130.712, -65.5661, 0.83 ) }
    dend_45 { pt3dadd( 29.9291, 132.663, -66.6003, 0.83 ) }
    dend_45 { pt3dadd( 30.6418, 133.987, -67.2382, 0.83 ) }
    dend_45 { pt3dadd( 32.6213, 137.333, -68.5439, 0.83 ) }
    dend_45 { pt3dadd( 35.481, 142.008, -69.8226, 0.83 ) }
    dend_45 { pt3dadd( 36.9294, 144.645, -70.208, 0.83 ) }
    dend_45 { pt3dadd( 38.3765, 147.799, -70.5555, 0.83 ) }
    dend_45 { pt3dadd( 39.7155, 151.539, -70.8412, 0.83 ) }
    dend_45 { pt3dadd( 40.6767, 155.244, -71.1225, 0.83 ) }
    dend_45 { pt3dadd( 41.4709, 159.606, -71.528, 0.83 ) }
    dend_45 { pt3dadd( 41.7229, 163.345, -72.0096, 0.83 ) }
    dend_45 { pt3dadd( 41.7019, 166.917, -72.4747, 0.83 ) }
    dend_45 { pt3dadd( 41.5374, 168.856, -72.7952, 0.83 ) }
    dend_45 { pt3dadd( 40.9235, 173.261, -73.6532, 0.83 ) }
    dend_45 { pt3dadd( 40.2407, 176.876, -74.8579, 0.83 ) }
    dend_45 { pt3dadd( 39.7941, 179.344, -75.9854, 0.83 ) }
    dend_45 { pt3dadd( 39.5654, 181.686, -77.4887, 0.83 ) }
    dend_45 { pt3dadd( 39.5886, 183.009, -78.4996, 0.83 ) }
    dend_45 { pt3dadd( 39.6504, 184.081, -79.3882, 0.83 ) }
    dend_45 { pt3dadd( 40.2085, 188.57, -83.4498, 0.83 ) }
    dend_45 { pt3dadd( 40.6492, 190.93, -85.8381, 1.11 ) }
    dend_45 { pt3dadd( 41.8233, 194.901, -90.2989, 0.83 ) }
    dend_45 { pt3dadd( 42.3228, 196.217, -92.0157, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -7.90741, 9.86854, -33.9456, 0.55 ) }
    dend_40 { pt3dadd( -8.54099, 9.2417, -36.876, 0.55 ) }
    dend_40 { pt3dadd( -10.0813, 7.30866, -43.2993, 0.55 ) }
    dend_40 { pt3dadd( -10.5079, 6.67062, -44.9526, 0.55 ) }
    dend_40 { pt3dadd( -10.9305, 6.07106, -46.465, 0.55 ) }
    dend_40 { pt3dadd( -11.3979, 5.68342, -47.9097, 0.55 ) }
    dend_40 { pt3dadd( -12.9387, 4.53792, -53.5317, 0.55 ) }
    dend_40 { pt3dadd( -13.5207, 4.04631, -55.9385, 0.55 ) }
    dend_40 { pt3dadd( -13.8632, 3.76516, -57.2584, 0.55 ) }
    dend_40 { pt3dadd( -14.784, 3.03244, -61.4155, 0.55 ) }
    dend_40 { pt3dadd( -16.014, 1.91582, -67.6796, 1.11 ) }
    dend_40 { pt3dadd( -17.4425, 0.482554, -75.1153, 0.83 ) }
    dend_40 { pt3dadd( -17.7923, 0.135348, -76.8698, 0.83 ) }
    dend_40 { pt3dadd( -18.1243, -0.163787, -78.6262, 0.83 ) }
    dend_40 { pt3dadd( -19.4607, -1.49157, -86.2516, 0.83 ) }
    dend_40 { pt3dadd( -19.6833, -1.84661, -87.7474, 0.83 ) }
    dend_40 { pt3dadd( -19.931, -2.63948, -89.8721, 0.83 ) }
    dend_40 { pt3dadd( -20.0414, -2.81717, -90.3778, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.8975, 19.0802, 0.295109, 0.83 ) }
    dend_36 { pt3dadd( -14.2051, 23.2248, 2.3424, 0.83 ) }
    dend_36 { pt3dadd( -15.0726, 25.3159, 3.82265, 0.83 ) }
    dend_36 { pt3dadd( -15.7523, 26.7656, 4.98921, 0.83 ) }
    dend_36 { pt3dadd( -19.3158, 32.9318, 10.2583, 0.83 ) }
    dend_36 { pt3dadd( -20.9914, 35.5244, 12.4179, 0.83 ) }
    dend_36 { pt3dadd( -23.0316, 38.5755, 14.97, 0.83 ) }
    dend_36 { pt3dadd( -28.0132, 45.5789, 21.1213, 0.83 ) }
    dend_36 { pt3dadd( -30.2563, 48.5325, 23.7004, 0.83 ) }
    dend_36 { pt3dadd( -33.1141, 52.1696, 26.8837, 0.83 ) }
    dend_36 { pt3dadd( -36.7882, 56.7219, 30.701, 0.83 ) }
    dend_36 { pt3dadd( -40.269, 60.7935, 34.3582, 0.83 ) }
    dend_36 { pt3dadd( -41.1725, 61.8137, 35.273, 0.83 ) }
    dend_36 { pt3dadd( -42.3865, 63.2974, 36.2365, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.8975, 19.0802, 0.295109, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_35 { pt3dadd( -15.5342, 18.013, 1.47659, 0.83 ) }
    dend_35 { pt3dadd( -19.6562, 16.5964, 3.13688, 0.83 ) }
    dend_35 { pt3dadd( -21.1537, 16.0412, 3.69082, 0.83 ) }
    dend_35 { pt3dadd( -23.5839, 15.1392, 4.21581, 0.83 ) }
    dend_35 { pt3dadd( -24.9181, 14.6398, 4.37066, 0.83 ) }
    dend_35 { pt3dadd( -26.4179, 14.0272, 4.47133, 0.83 ) }
    dend_35 { pt3dadd( -26.6497, 13.9353, 4.46584, 0.83 ) }
    dend_35 { pt3dadd( -28.5657, 13.019, 3.98527, 0.83 ) }
    dend_35 { pt3dadd( -31.6466, 10.963, 2.84015, 0.83 ) }
    dend_35 { pt3dadd( -33.275, 9.51581, 2.08911, 0.83 ) }
    dend_35 { pt3dadd( -34.1218, 8.47405, 1.53095, 0.83 ) }
    dend_35 { pt3dadd( -35.3931, 6.47313, 0.47987, 0.83 ) }
    dend_35 { pt3dadd( -37.1663, 2.97537, -1.29329, 0.83 ) }
    dend_35 { pt3dadd( -37.7702, 1.3994, -2.02642, 0.83 ) }
    dend_35 { pt3dadd( -38.4244, -1.16245, -3.00389, 0.83 ) }
    dend_35 { pt3dadd( -39.2462, -5.67416, -4.54667, 0.83 ) }
    dend_35 { pt3dadd( -39.4225, -7.08822, -4.94706, 0.83 ) }
    dend_35 { pt3dadd( -39.5907, -9.85645, -5.54725, 0.83 ) }
    dend_35 { pt3dadd( -39.6458, -12.1025, -5.87057, 0.83 ) }
    dend_35 { pt3dadd( -39.5892, -14.9179, -6.22646, 0.83 ) }
    dend_35 { pt3dadd( -39.4299, -17.0289, -6.41964, 0.83 ) }
    dend_35 { pt3dadd( -39.0955, -20.0153, -6.53944, 0.83 ) }
    dend_35 { pt3dadd( -38.8315, -21.5666, -6.60114, 0.83 ) }
    dend_35 { pt3dadd( -37.9857, -25.4059, -7.12133, 0.83 ) }
    dend_35 { pt3dadd( -37.5822, -26.9723, -7.49491, 0.83 ) }
    dend_35 { pt3dadd( -36.8647, -29.6336, -8.445, 0.83 ) }
    dend_35 { pt3dadd( -36.5698, -30.6699, -8.90692, 0.83 ) }
    dend_35 { pt3dadd( -35.9864, -32.7073, -9.93255, 0.83 ) }
    dend_35 { pt3dadd( -34.434, -38.2477, -12.7641, 0.83 ) }
    dend_35 { pt3dadd( -34.1437, -39.3426, -13.4609, 0.83 ) }
    dend_35 { pt3dadd( -33.5996, -41.5901, -15.0394, 0.28 ) }
    dend_35 { pt3dadd( -33.4298, -42.3079, -15.587, 1.38 ) }
    dend_35 { pt3dadd( -32.9783, -44.3808, -17.1476, 0.28 ) }
    dend_35 { pt3dadd( -32.6061, -46.0869, -18.3799, 1.11 ) }
    dend_35 { pt3dadd( -31.3506, -51.3202, -21.6726, 0.28 ) }
    dend_35 { pt3dadd( -31.0814, -52.383, -22.386, 1.11 ) }
    dend_35 { pt3dadd( -30.9793, -52.7593, -22.6537, 1.11 ) }
    dend_35 { pt3dadd( -30.712, -53.7874, -23.3995, 0.28 ) }
    dend_35 { pt3dadd( -30.5793, -54.2518, -23.7253, 0.28 ) }
    dend_35 { pt3dadd( -30.2249, -55.3618, -24.2944, 0.28 ) }
    dend_35 { pt3dadd( -29.8053, -56.5989, -24.7045, 1.66 ) }
    dend_35 { pt3dadd( -29.1469, -58.4885, -25.473, 0.28 ) }
    dend_35 { pt3dadd( -28.8565, -59.3686, -25.8779, 0.55 ) }
    dend_35 { pt3dadd( -28.4167, -60.7375, -26.5466, 0.28 ) }
    dend_35 { pt3dadd( -28.0221, -61.8701, -27.1153, 0.55 ) }
    dend_35 { pt3dadd( -27.0356, -64.5534, -29.1494, 0.28 ) }
    dend_35 { pt3dadd( -26.8525, -65.0651, -29.6365, 0.28 ) }
    dend_35 { pt3dadd( -26.5004, -66.0979, -30.7371, 0.83 ) }
    dend_35 { pt3dadd( -26.2212, -67.1251, -31.8531, 0.83 ) }
    dend_35 { pt3dadd( -26.1067, -67.7684, -32.517, 0.83 ) }
    dend_35 { pt3dadd( -25.7386, -72.1673, -36.4266, 0.28 ) }
    dend_35 { pt3dadd( -25.7508, -73.3292, -37.2067, 0.28 ) }
    dend_35 { pt3dadd( -25.7979, -73.8484, -37.4899, 0.55 ) }
    dend_35 { pt3dadd( -26.0494, -75.53, -38.2965, 0.28 ) }
    dend_35 { pt3dadd( -26.3841, -77.0444, -38.9353, 0.55 ) }
    dend_35 { pt3dadd( -26.7496, -78.5922, -39.4697, 0.28 ) }
    dend_35 { pt3dadd( -27.0257, -80.1783, -39.826, 0.55 ) }
    dend_35 { pt3dadd( -27.2666, -81.5838, -40.2632, 0.28 ) }
    dend_35 { pt3dadd( -27.5687, -83.4169, -41.0099, 0.55 ) }
    dend_35 { pt3dadd( -27.7372, -84.4435, -41.4923, 0.28 ) }
    dend_35 { pt3dadd( -28.1066, -86.2827, -42.5319, 0.83 ) }
    dend_35 { pt3dadd( -28.5786, -88.4595, -43.8856, 0.28 ) }
    dend_35 { pt3dadd( -29.3015, -91.2551, -45.6283, 1.11 ) }
    dend_35 { pt3dadd( -29.9196, -93.3381, -46.9784, 0.55 ) }
    dend_35 { pt3dadd( -30.2246, -94.3053, -47.5734, 0.83 ) }
    dend_35 { pt3dadd( -30.9691, -96.542, -49.1068, 0.28 ) }
    dend_35 { pt3dadd( -31.1942, -97.1655, -49.5118, 0.28 ) }
    dend_35 { pt3dadd( -31.7467, -98.8492, -50.5978, 0.55 ) }
    dend_35 { pt3dadd( -32.266, -101.46, -52.1313, 0.28 ) }
    dend_35 { pt3dadd( -32.4367, -102.591, -52.8158, 0.55 ) }
    dend_35 { pt3dadd( -32.7925, -105.64, -54.639, 0.28 ) }
    dend_35 { pt3dadd( -33.0443, -108.534, -56.4075, 0.55 ) }
    dend_35 { pt3dadd( -33.2813, -110.756, -57.9019, 0.28 ) }
    dend_35 { pt3dadd( -33.3993, -111.872, -58.6915, 0.55 ) }
    dend_35 { pt3dadd( -33.7584, -114.628, -60.5152, 0.28 ) }
    dend_35 { pt3dadd( -34.0608, -116.333, -61.5722, 0.55 ) }
    dend_35 { pt3dadd( -34.4306, -117.989, -62.4431, 0.55 ) }
    dend_35 { pt3dadd( -34.9843, -119.932, -63.4153, 0.28 ) }
    dend_35 { pt3dadd( -35.2613, -120.801, -63.6793, 0.55 ) }
    dend_35 { pt3dadd( -35.6826, -122.125, -63.8902, 0.28 ) }
    dend_35 { pt3dadd( -36.2188, -123.903, -64.0605, 0.55 ) }
    dend_35 { pt3dadd( -36.5894, -125.166, -64.2025, 0.28 ) }
    dend_35 { pt3dadd( -36.9984, -126.62, -64.3397, 0.55 ) }
    dend_35 { pt3dadd( -37.3713, -128.149, -64.5137, 0.28 ) }
    dend_35 { pt3dadd( -37.5024, -128.711, -64.6042, 0.55 ) }
    dend_35 { pt3dadd( -38.1907, -132.186, -65.6451, 0.28 ) }
    dend_35 { pt3dadd( -38.2706, -132.733, -65.8455, 0.55 ) }
    dend_35 { pt3dadd( -38.3958, -133.786, -66.2422, 0.28 ) }
    dend_35 { pt3dadd( -38.6035, -135.456, -66.8645, 0.55 ) }
    dend_35 { pt3dadd( -38.8572, -137.238, -67.467, 0.28 ) }
    dend_35 { pt3dadd( -39.2665, -140.41, -68.2969, 0.28 ) }
    dend_35 { pt3dadd( -39.4653, -142.032, -68.5999, 0.28 ) }
    dend_35 { pt3dadd( -39.7278, -143.847, -68.9057, 0.55 ) }
    dend_35 { pt3dadd( -40.2705, -147.703, -69.4848, 0.28 ) }
    dend_35 { pt3dadd( -40.5116, -149.35, -69.71, 0.55 ) }
    dend_35 { pt3dadd( -40.7808, -151.409, -69.931, 0.28 ) }
    dend_35 { pt3dadd( -40.8727, -152.146, -70.0069, 0.55 ) }
    dend_35 { pt3dadd( -41.3363, -156.383, -70.5514, 0.28 ) }
    dend_35 { pt3dadd( -41.4556, -157.96, -70.7779, 0.83 ) }
    dend_35 { pt3dadd( -41.746, -163.485, -71.6051, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( -41.8132, -165.044, -71.8678, 0.55 ) }
    dend_35 { pt3dadd( -41.8959, -167.938, -72.4419, 0.28 ) }
    dend_35 { pt3dadd( -41.9278, -169.325, -72.7154, 0.55 ) }
    dend_35 { pt3dadd( -41.9668, -171.169, -73.0291, 0.28 ) }
    dend_35 { pt3dadd( -42.0164, -172.11, -73.1523, 0.55 ) }
    dend_35 { pt3dadd( -42.0949, -173.054, -73.2418, 0.55 ) }
    dend_35 { pt3dadd( -42.2964, -174.677, -73.3649, 0.28 ) }
    dend_35 { pt3dadd( -42.5481, -176.322, -73.4132, 0.55 ) }
    dend_35 { pt3dadd( -43.2576, -180.28, -73.5461, 0.28 ) }
    dend_35 { pt3dadd( -43.6584, -182.302, -73.5924, 0.55 ) }
    dend_35 { pt3dadd( -44.0273, -184.194, -73.6924, 0.28 ) }
    dend_35 { pt3dadd( -44.3432, -185.691, -73.7988, 0.55 ) }
    dend_35 { pt3dadd( -44.6651, -187.18, -73.876, 0.28 ) }
    dend_35 { pt3dadd( -44.88, -188.246, -73.9846, 0.55 ) }
    dend_35 { pt3dadd( -45.1798, -189.592, -74.1771, 0.28 ) }
    dend_35 { pt3dadd( -45.6435, -191.885, -74.5288, 0.55 ) }
    dend_35 { pt3dadd( -45.9862, -193.742, -74.7838, 0.28 ) }
    dend_35 { pt3dadd( -46.2891, -195.535, -75.1203, 0.83 ) }
    dend_35 { pt3dadd( -46.8432, -199.427, -75.961, 0.28 ) }
    dend_35 { pt3dadd( -46.905, -199.989, -76.072, 0.55 ) }
    dend_35 { pt3dadd( -47.0002, -201.571, -76.3307, 0.28 ) }
    dend_35 { pt3dadd( -46.9892, -203.265, -76.4955, 0.55 ) }
    dend_35 { pt3dadd( -46.7584, -205.631, -76.6215, 0.28 ) }
    dend_35 { pt3dadd( -46.5836, -206.686, -76.7092, 0.55 ) }
    dend_35 { pt3dadd( -46.0735, -208.552, -76.8211, 0.28 ) }
    dend_35 { pt3dadd( -45.5968, -210.035, -76.9334, 0.28 ) }
    dend_35 { pt3dadd( -45.0728, -211.524, -77.0425, 0.55 ) }
    dend_35 { pt3dadd( -44.0106, -214.182, -77.2037, 0.28 ) }
    dend_35 { pt3dadd( -42.8042, -216.979, -77.2699, 0.55 ) }
    dend_35 { pt3dadd( -41.8467, -219.14, -77.4308, 0.28 ) }
    dend_35 { pt3dadd( -41.6379, -219.609, -77.5127, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_9 (entry count 31/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -0.223059, -27.6509, -8.79, 2.77 ) }
    dend_21 { pt3dadd( -0.111373, -29.5087, -8.76401, 2.77 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.223059, -27.6509, -8.79, 0.83 ) }
    dend_10 { pt3dadd( -2.09787, -31.1508, -9.37573, 0.83 ) }
    dend_10 { pt3dadd( -3.09339, -33.0092, -9.68675, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.5324, 60.4392, 6.78118, 0.55 ) }
    dend_2 { pt3dadd( 4.6902, 63.2032, 6.72388, 0.55 ) }
    dend_2 { pt3dadd( 3.26486, 67.8809, 6.62691, 0.55 ) }
    dend_2 { pt3dadd( 2.60303, 70.0529, 6.58188, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.5324, 60.4392, 6.78118, 0.55 ) }
    dend_1 { pt3dadd( 6.34651, 61.6777, 6.67775, 0.55 ) }
    dend_1 { pt3dadd( 7.24773, 62.9558, 6.55256, 0.55 ) }
    dend_1 { pt3dadd( 7.81873, 63.7327, 6.46032, 0.55 ) }
    dend_1 { pt3dadd( 9.33846, 65.833, 6.18616, 0.55 ) }
    dend_1 { pt3dadd( 10.3378, 67.3698, 6.0063, 0.55 ) }
    dend_1 { pt3dadd( 11.4329, 69.1792, 5.79659, 0.55 ) }
    dend_1 { pt3dadd( 12.3859, 70.8993, 5.59111, 0.55 ) }
    dend_1 { pt3dadd( 13.3101, 72.7459, 5.46743, 0.55 ) }
    dend_1 { pt3dadd( 14.3277, 74.8867, 5.39715, 0.55 ) }
    dend_1 { pt3dadd( 15.1433, 76.6897, 5.44057, 0.55 ) }
    dend_1 { pt3dadd( 15.8667, 78.5129, 5.59551, 0.55 ) }
    dend_1 { pt3dadd( 16.4962, 80.2982, 5.8152, 0.55 ) }
    dend_1 { pt3dadd( 17.2293, 82.6584, 6.17727, 0.55 ) }
    dend_1 { pt3dadd( 17.6501, 84.1289, 6.43594, 0.55 ) }
    dend_1 { pt3dadd( 18.1697, 85.9029, 6.75648, 0.55 ) }
    dend_1 { pt3dadd( 18.71, 87.7324, 7.07702, 0.55 ) }
    dend_1 { pt3dadd( 19.2594, 89.7089, 7.39816, 0.55 ) }
    dend_1 { pt3dadd( 19.9752, 92.2296, 7.73693, 0.55 ) }
    dend_1 { pt3dadd( 20.2502, 93.0757, 7.80443, 0.55 ) }
    dend_1 { pt3dadd( 20.7329, 94.478, 7.94797, 0.55 ) }
    dend_1 { pt3dadd( 21.1864, 95.7393, 8.07753, 0.55 ) }
    dend_1 { pt3dadd( 21.8256, 97.4115, 8.33826, 0.55 ) }
    dend_1 { pt3dadd( 22.9074, 100.111, 8.97131, 0.55 ) }
    dend_1 { pt3dadd( 23.7063, 102.026, 9.53604, 0.55 ) }
    dend_1 { pt3dadd( 24.7115, 104.198, 10.2217, 0.55 ) }
    dend_1 { pt3dadd( 25.5749, 105.932, 10.7597, 0.55 ) }
    dend_1 { pt3dadd( 26.7132, 108.065, 11.3785, 0.55 ) }
    dend_1 { pt3dadd( 28.2836, 110.833, 12.1146, 0.55 ) }
    dend_1 { pt3dadd( 29.7448, 113.234, 12.6805, 0.55 ) }
    dend_1 { pt3dadd( 31.3463, 115.713, 13.1575, 0.55 ) }
    dend_1 { pt3dadd( 32.9076, 118.064, 13.4632, 0.55 ) }
    dend_1 { pt3dadd( 33.9809, 119.671, 13.6058, 0.55 ) }
    dend_1 { pt3dadd( 35.3287, 121.742, 13.6428, 0.55 ) }
    dend_1 { pt3dadd( 36.7856, 124.032, 13.5455, 0.55 ) }
    dend_1 { pt3dadd( 37.7386, 125.637, 13.4408, 0.55 ) }
    dend_1 { pt3dadd( 38.6353, 127.352, 13.3327, 0.55 ) }
    dend_1 { pt3dadd( 39.1989, 128.503, 13.2706, 0.55 ) }
    dend_1 { pt3dadd( 40.1055, 130.503, 13.1565, 0.55 ) }
    dend_1 { pt3dadd( 40.7567, 132.145, 13.0373, 0.55 ) }
    dend_1 { pt3dadd( 41.3318, 133.677, 12.8641, 0.28 ) }
    dend_1 { pt3dadd( 41.604, 134.412, 12.7935, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 82/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.09819, 42.3721, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -1.58341, 57.3643, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -2.06863, 72.3564, 0.0, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 85/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 36.4309, -153.08, 23.2813, 0.28 ) }
    dend_54 { pt3dadd( 36.7667, -155.178, 22.9479, 0.28 ) }
    dend_54 { pt3dadd( 36.9893, -157.284, 22.6332, 0.55 ) }
    dend_54 { pt3dadd( 37.2754, -160.72, 21.8954, 0.28 ) }
    dend_54 { pt3dadd( 37.4037, -162.641, 21.429, 0.55 ) }
    dend_54 { pt3dadd( 37.5813, -165.715, 20.657, 0.28 ) }
    dend_54 { pt3dadd( 37.597, -165.971, 20.594, 0.55 ) }
    dend_54 { pt3dadd( 37.8263, -169.111, 19.6235, 0.28 ) }
    dend_54 { pt3dadd( 38.114, -171.931, 18.5811, 0.55 ) }
    dend_54 { pt3dadd( 38.3044, -173.13, 18.1258, 0.55 ) }
    dend_54 { pt3dadd( 38.6498, -174.678, 17.428, 0.55 ) }
    dend_54 { pt3dadd( 39.1696, -176.517, 16.5119, 0.55 ) }
    dend_54 { pt3dadd( 40.2804, -179.908, 14.9785, 0.28 ) }
    dend_54 { pt3dadd( 41.0368, -181.801, 14.2191, 0.28 ) }
    dend_54 { pt3dadd( 41.7135, -183.489, 13.7681, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( 42.5153, -185.531, 13.3887, 0.55 ) }
    dend_54 { pt3dadd( 42.985, -186.728, 13.276, 0.55 ) }
    dend_54 { pt3dadd( 44.1201, -189.885, 13.3167, 0.28 ) }
    dend_54 { pt3dadd( 44.4293, -190.861, 13.4287, 0.55 ) }
    dend_54 { pt3dadd( 45.5752, -194.85, 14.0143, 0.28 ) }
    dend_54 { pt3dadd( 46.1592, -197.142, 14.3767, 0.28 ) }
    dend_54 { pt3dadd( 46.7753, -199.901, 14.8302, 0.28 ) }
    dend_54 { pt3dadd( 47.0634, -201.341, 15.0085, 0.55 ) }
    dend_54 { pt3dadd( 47.1563, -201.911, 15.0383, 0.55 ) }
    dend_54 { pt3dadd( 47.3943, -203.883, 15.1003, 0.28 ) }
    dend_54 { pt3dadd( 47.4524, -204.464, 15.1068, 0.55 ) }
    dend_54 { pt3dadd( 47.6346, -206.663, 14.9628, 0.28 ) }
    dend_54 { pt3dadd( 47.679, -207.173, 14.8937, 0.55 ) }
    dend_54 { pt3dadd( 48.0922, -209.836, 14.5335, 0.28 ) }
    dend_54 { pt3dadd( 48.3979, -211.31, 14.3659, 0.55 ) }
    dend_54 { pt3dadd( 48.6413, -212.38, 14.2624, 0.55 ) }
    dend_54 { pt3dadd( 49.16, -214.674, 14.3159, 0.28 ) }
    dend_54 { pt3dadd( 49.3107, -215.426, 14.4252, 0.55 ) }
    dend_54 { pt3dadd( 49.541, -218.087, 15.0826, 0.28 ) }
    dend_54 { pt3dadd( 49.5426, -218.577, 15.2374, 0.55 ) }
    dend_54 { pt3dadd( 49.5, -219.987, 15.7667, 0.28 ) }
    dend_54 { pt3dadd( 49.2041, -223.522, 17.254, 0.28 ) }
    dend_54 { pt3dadd( 49.1128, -224.246, 17.6164, 0.55 ) }
    dend_54 { pt3dadd( 48.4553, -227.855, 19.3727, 0.28 ) }
    dend_54 { pt3dadd( 48.0107, -229.612, 20.1229, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 25/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 36.4309, -153.08, 23.2813, 0.28 ) }
    dend_53 { pt3dadd( 39.4256, -154.619, 24.5581, 0.28 ) }
    dend_53 { pt3dadd( 40.1995, -155.044, 24.7921, 0.55 ) }
    dend_53 { pt3dadd( 42.1426, -156.205, 25.2827, 0.28 ) }
    dend_53 { pt3dadd( 42.9132, -156.665, 25.4773, 0.55 ) }
    dend_53 { pt3dadd( 44.8679, -157.833, 25.9708, 0.28 ) }
    dend_53 { pt3dadd( 45.768, -158.371, 26.198, 0.55 ) }
    dend_53 { pt3dadd( 49.0144, -160.243, 26.9301, 0.28 ) }
    dend_53 { pt3dadd( 50.099, -160.894, 27.1058, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 42.3228, 196.217, -92.0157, 0.83 ) }
    dend_47 { pt3dadd( 43.8, 198.528, -92.2647, 0.83 ) }
    dend_47 { pt3dadd( 44.9451, 200.452, -92.4488, 0.83 ) }
    dend_47 { pt3dadd( 46.2552, 202.71, -92.659, 0.83 ) }
    dend_47 { pt3dadd( 47.3162, 204.615, -92.8331, 0.28 ) }
    dend_47 { pt3dadd( 47.9532, 205.809, -92.9395, 0.55 ) }
    dend_47 { pt3dadd( 48.6672, 207.185, -93.0617, 0.28 ) }
    dend_47 { pt3dadd( 49.6853, 209.25, -93.1986, 0.55 ) }
    dend_47 { pt3dadd( 50.0533, 210.086, -93.269, 0.28 ) }
    dend_47 { pt3dadd( 50.604, 211.617, -93.4325, 0.55 ) }
    dend_47 { pt3dadd( 50.8002, 212.181, -93.5073, 0.28 ) }
    dend_47 { pt3dadd( 51.1692, 213.198, -93.6211, 0.83 ) }
    dend_47 { pt3dadd( 51.6559, 214.486, -93.7439, 0.28 ) }
    dend_47 { pt3dadd( 52.2762, 215.995, -93.8478, 0.83 ) }
    dend_47 { pt3dadd( 53.4164, 218.56, -93.8728, 0.55 ) }
    dend_47 { pt3dadd( 54.2881, 220.346, -93.7825, 0.28 ) }
    dend_47 { pt3dadd( 54.807, 221.357, -93.7079, 0.55 ) }
    dend_47 { pt3dadd( 55.0322, 221.775, -93.6596, 0.28 ) }
    dend_47 { pt3dadd( 55.7003, 222.899, -93.4527, 0.55 ) }
    dend_47 { pt3dadd( 56.6201, 224.326, -93.0605, 0.28 ) }
    dend_47 { pt3dadd( 57.3078, 225.314, -92.6105, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 55/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 42.3228, 196.217, -92.0157, 0.28 ) }
    dend_46 { pt3dadd( 41.8745, 197.186, -92.7021, 0.28 ) }
    dend_46 { pt3dadd( 41.626, 198.192, -93.5596, 0.28 ) }
    dend_46 { pt3dadd( 41.5544, 198.518, -93.8571, 0.55 ) }
    dend_46 { pt3dadd( 41.268, 199.629, -94.86, 0.28 ) }
    dend_46 { pt3dadd( 41.0103, 200.43, -95.5426, 0.55 ) }
    dend_46 { pt3dadd( 40.7491, 201.117, -96.2833, 0.55 ) }
    dend_46 { pt3dadd( 40.1463, 202.46, -98.0554, 0.28 ) }
    dend_46 { pt3dadd( 39.8782, 202.95, -98.7787, 0.28 ) }
    dend_46 { pt3dadd( 39.5439, 203.517, -99.6232, 0.55 ) }
    dend_46 { pt3dadd( 39.1719, 204.167, -100.596, 0.55 ) }
    dend_46 { pt3dadd( 38.1913, 206.173, -103.684, 0.28 ) }
    dend_46 { pt3dadd( 38.0036, 206.585, -104.304, 0.55 ) }
    dend_46 { pt3dadd( 37.8038, 207.026, -104.93, 0.28 ) }
    dend_46 { pt3dadd( 37.6984, 207.346, -105.363, 0.55 ) }
    dend_46 { pt3dadd( 37.3264, 208.84, -107.192, 0.28 ) }
    dend_46 { pt3dadd( 37.1172, 210.063, -108.428, 0.55 ) }
    dend_46 { pt3dadd( 37.0258, 210.726, -108.937, 0.28 ) }
    dend_46 { pt3dadd( 36.9727, 211.143, -109.258, 0.55 ) }
    dend_46 { pt3dadd( 36.9049, 211.729, -109.705, 0.28 ) }
    dend_46 { pt3dadd( 36.8133, 212.698, -110.368, 0.55 ) }
    dend_46 { pt3dadd( 36.7308, 213.42, -110.798, 0.28 ) }
    dend_46 { pt3dadd( 36.5955, 214.547, -111.506, 0.28 ) }
    dend_46 { pt3dadd( 36.45, 215.8, -112.349, 0.28 ) }
    dend_46 { pt3dadd( 36.3134, 216.667, -112.959, 0.28 ) }
    dend_46 { pt3dadd( 36.2095, 217.206, -113.341, 0.55 ) }
    dend_46 { pt3dadd( 35.8053, 218.926, -114.419, 0.55 ) }
    dend_46 { pt3dadd( 35.4767, 220.081, -115.033, 0.83 ) }
    dend_46 { pt3dadd( 35.2635, 220.74, -115.315, 0.83 ) }
    dend_46 { pt3dadd( 34.4479, 223.078, -116.135, 0.55 ) }
    dend_46 { pt3dadd( 34.1042, 223.97, -116.422, 0.83 ) }
    dend_46 { pt3dadd( 33.4336, 225.625, -116.882, 0.28 ) }
    dend_46 { pt3dadd( 33.0817, 226.474, -117.05, 0.28 ) }
    dend_46 { pt3dadd( 32.8455, 227.019, -117.136, 0.28 ) }
    dend_46 { pt3dadd( 32.3404, 228.146, -117.292, 0.28 ) }
    dend_46 { pt3dadd( 31.8177, 229.218, -117.419, 0.55 ) }
    dend_46 { pt3dadd( 31.4956, 229.802, -117.524, 0.55 ) }
    dend_46 { pt3dadd( 30.9646, 230.61, -117.737, 0.55 ) }
    dend_46 { pt3dadd( 30.3942, 231.335, -117.934, 0.55 ) }
    dend_46 { pt3dadd( 30.0677, 231.697, -118.033, 0.28 ) }
    dend_46 { pt3dadd( 29.3309, 232.398, -118.227, 0.55 ) }
    dend_46 { pt3dadd( 28.4883, 233.168, -118.51, 0.55 ) }
    dend_46 { pt3dadd( 27.5617, 234.016, -118.919, 0.83 ) }
    dend_46 { pt3dadd( 27.0994, 234.429, -119.12, 0.28 ) }
    dend_46 { pt3dadd( 26.6361, 234.853, -119.321, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( 26.0997, 235.369, -119.554, 0.55 ) }
    dend_46 { pt3dadd( 24.8661, 236.626, -120.062, 0.55 ) }
    dend_46 { pt3dadd( 23.9641, 237.544, -120.414, 0.55 ) }
    dend_46 { pt3dadd( 22.9447, 238.55, -120.776, 0.28 ) }
    dend_46 { pt3dadd( 22.2834, 239.187, -120.985, 0.28 ) }
    dend_46 { pt3dadd( 21.6551, 239.817, -121.183, 0.28 ) }
    dend_46 { pt3dadd( 21.3691, 240.113, -121.27, 0.55 ) }
    dend_46 { pt3dadd( 20.2552, 241.223, -121.569, 0.28 ) }
    dend_46 { pt3dadd( 19.4397, 242.013, -121.856, 0.28 ) }
    dend_46 { pt3dadd( 18.712, 242.747, -122.122, 0.83 ) }
    dend_46 { pt3dadd( 17.9804, 243.506, -122.341, 0.28 ) }
    dend_46 { pt3dadd( 17.4265, 244.094, -122.469, 0.28 ) }
    dend_46 { pt3dadd( 16.8629, 244.694, -122.562, 0.28 ) }
    dend_46 { pt3dadd( 16.4236, 245.18, -122.601, 0.55 ) }
    dend_46 { pt3dadd( 15.2672, 246.381, -122.66, 0.28 ) }
    dend_46 { pt3dadd( 14.6659, 246.928, -122.677, 0.55 ) }
    dend_46 { pt3dadd( 13.7752, 247.693, -122.7, 0.28 ) }
    dend_46 { pt3dadd( 13.2048, 248.21, -122.732, 0.55 ) }
    dend_46 { pt3dadd( 12.6614, 248.731, -122.791, 0.28 ) }
    dend_46 { pt3dadd( 11.9584, 249.411, -122.884, 0.28 ) }
    dend_46 { pt3dadd( 11.4134, 249.93, -122.981, 0.28 ) }
    dend_46 { pt3dadd( 10.5133, 250.839, -123.056, 0.55 ) }
    dend_46 { pt3dadd( 10.0357, 251.396, -123.066, 0.55 ) }
    dend_46 { pt3dadd( 9.29967, 252.323, -123.047, 0.55 ) }
    dend_46 { pt3dadd( 8.48612, 253.332, -123.005, 0.28 ) }
    dend_46 { pt3dadd( 8.01019, 253.938, -122.915, 0.55 ) }
    dend_46 { pt3dadd( 7.23764, 254.941, -122.689, 0.28 ) }
    dend_46 { pt3dadd( 6.58571, 255.694, -122.448, 0.28 ) }
    dend_46 { pt3dadd( 6.17203, 256.167, -122.255, 0.28 ) }
    dend_46 { pt3dadd( 5.59189, 256.828, -121.946, 0.28 ) }
    dend_46 { pt3dadd( 4.45252, 257.97, -121.399, 0.55 ) }
    dend_46 { pt3dadd( 3.54708, 258.787, -121.025, 0.28 ) }
    dend_46 { pt3dadd( 2.63337, 259.467, -120.775, 0.55 ) }
    dend_46 { pt3dadd( 1.53995, 260.159, -120.568, 0.55 ) }
    dend_46 { pt3dadd( 1.23545, 260.35, -120.536, 0.28 ) }
    dend_46 { pt3dadd( 0.108352, 261.054, -120.537, 0.55 ) }
    dend_46 { pt3dadd( -0.720917, 261.569, -120.561, 0.55 ) }
    dend_46 { pt3dadd( -1.75786, 262.203, -120.534, 0.28 ) }
    dend_46 { pt3dadd( -2.5018, 262.735, -120.497, 0.55 ) }
    dend_46 { pt3dadd( -3.23496, 263.356, -120.407, 0.28 ) }
    dend_46 { pt3dadd( -3.91266, 264.123, -120.229, 0.28 ) }
    dend_46 { pt3dadd( -5.02116, 265.661, -119.803, 0.55 ) }
    dend_46 { pt3dadd( -5.67194, 266.689, -119.547, 0.28 ) }
    dend_46 { pt3dadd( -6.22401, 267.652, -119.331, 0.28 ) }
    dend_46 { pt3dadd( -6.97564, 269.051, -119.071, 0.55 ) }
    dend_46 { pt3dadd( -8.32291, 271.542, -118.77, 0.28 ) }
    dend_46 { pt3dadd( -8.50442, 271.863, -118.76, 0.55 ) }
    dend_46 { pt3dadd( -9.5336, 273.598, -118.891, 0.28 ) }
    dend_46 { pt3dadd( -9.81197, 274.051, -118.953, 0.55 ) }
    dend_46 { pt3dadd( -10.1273, 274.495, -119.045, 0.28 ) }
    dend_46 { pt3dadd( -10.9381, 275.5, -119.345, 0.55 ) }
    dend_46 { pt3dadd( -12.0379, 276.713, -119.772, 0.28 ) }
    dend_46 { pt3dadd( -12.5418, 277.256, -119.948, 0.55 ) }
    dend_46 { pt3dadd( -13.1719, 277.917, -120.141, 0.28 ) }
    dend_46 { pt3dadd( -14.0532, 278.864, -120.408, 0.55 ) }
    dend_46 { pt3dadd( -15.8272, 280.735, -120.923, 0.28 ) }
    dend_46 { pt3dadd( -16.1037, 281.031, -120.994, 0.55 ) }
    dend_46 { pt3dadd( -17.3061, 282.251, -121.278, 0.28 ) }
    dend_46 { pt3dadd( -17.8683, 282.786, -121.402, 0.55 ) }
    dend_46 { pt3dadd( -18.4103, 283.262, -121.485, 0.28 ) }
    dend_46 { pt3dadd( -19.2274, 283.925, -121.578, 0.55 ) }
    dend_46 { pt3dadd( -20.1152, 284.537, -121.654, 0.28 ) }
    dend_46 { pt3dadd( -21.2282, 285.23, -121.743, 0.28 ) }
    dend_46 { pt3dadd( -22.6324, 286.034, -121.85, 0.28 ) }
    dend_46 { pt3dadd( -24.0716, 286.814, -121.939, 0.55 ) }
    dend_46 { pt3dadd( -25.3632, 287.453, -122.05, 0.28 ) }
    dend_46 { pt3dadd( -26.2588, 287.864, -122.158, 0.28 ) }
    dend_46 { pt3dadd( -27.66, 288.43, -122.363, 0.28 ) }
    dend_46 { pt3dadd( -28.1637, 288.613, -122.453, 0.28 ) }
    dend_46 { pt3dadd( -29.0202, 288.884, -122.666, 0.55 ) }
    dend_46 { pt3dadd( -30.2137, 289.241, -123.062, 0.28 ) }
    dend_46 { pt3dadd( -31.5349, 289.592, -123.547, 0.28 ) }
    dend_46 { pt3dadd( -32.142, 289.743, -123.794, 0.55 ) }
    dend_46 { pt3dadd( -32.7962, 289.933, -124.066, 0.28 ) }
    dend_46 { pt3dadd( -33.555, 290.195, -124.383, 0.55 ) }
    dend_46 { pt3dadd( -35.0924, 290.786, -125.059, 0.55 ) }
    dend_46 { pt3dadd( -36.1035, 291.223, -125.476, 0.28 ) }
    dend_46 { pt3dadd( -36.3234, 291.33, -125.572, 0.55 ) }
    dend_46 { pt3dadd( -37.9139, 292.183, -126.277, 0.28 ) }
    dend_46 { pt3dadd( -38.2408, 292.38, -126.399, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 80/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -20.0414, -2.81717, -90.3778, 0.55 ) }
    dend_44 { pt3dadd( -20.2426, -4.16243, -99.8541, 0.55 ) }
    dend_44 { pt3dadd( -20.322, -4.23652, -101.025, 0.55 ) }
    dend_44 { pt3dadd( -20.5814, -4.15073, -103.318, 0.55 ) }
    dend_44 { pt3dadd( -21.3115, -3.66105, -108.517, 0.55 ) }
    dend_44 { pt3dadd( -21.5802, -3.43994, -110.2, 0.55 ) }
    dend_44 { pt3dadd( -22.9623, -2.07838, -118.209, 0.55 ) }
    dend_44 { pt3dadd( -23.343, -1.64465, -119.93, 0.55 ) }
    dend_44 { pt3dadd( -24.7184, 0.11221, -125.684, 0.28 ) }
    dend_44 { pt3dadd( -25.0244, 0.529561, -126.864, 0.55 ) }
    dend_44 { pt3dadd( -25.1725, 0.73164, -127.469, 0.55 ) }
    dend_44 { pt3dadd( -26.2437, 2.16476, -132.315, 0.55 ) }
    dend_44 { pt3dadd( -27.0181, 2.92903, -136.0, 0.55 ) }
    dend_44 { pt3dadd( -27.245, 3.09577, -137.135, 0.55 ) }
    dend_44 { pt3dadd( -27.7204, 3.28943, -139.489, 0.55 ) }
    dend_44 { pt3dadd( -30.1014, 3.65825, -150.851, 0.28 ) }
    dend_44 { pt3dadd( -30.3563, 3.65979, -152.07, 0.55 ) }
    dend_44 { pt3dadd( -30.8044, 3.59166, -154.095, 0.28 ) }
    dend_44 { pt3dadd( -30.9989, 3.55408, -154.873, 0.55 ) }
    dend_44 { pt3dadd( -32.2538, 3.24672, -159.388, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_44 { pt3dadd( -32.6388, 3.14828, -160.51, 0.55 ) }
    dend_44 { pt3dadd( -36.7105, 2.20375, -169.683, 0.28 ) }
    dend_44 { pt3dadd( -37.0804, 2.12565, -170.511, 0.55 ) }
    dend_44 { pt3dadd( -37.9444, 2.00531, -172.397, 0.28 ) }
    dend_44 { pt3dadd( -38.2216, 1.963, -172.963, 0.55 ) }
    dend_44 { pt3dadd( -39.997, 1.68625, -176.038, 0.28 ) }
    dend_44 { pt3dadd( -40.7901, 1.58021, -177.335, 0.55 ) }
    dend_44 { pt3dadd( -41.5528, 1.46742, -178.377, 0.55 ) }
    dend_44 { pt3dadd( -44.57, 1.37555, -182.476, 0.55 ) }
    dend_44 { pt3dadd( -45.3439, 1.41953, -183.505, 0.55 ) }
    dend_44 { pt3dadd( -46.147, 1.54789, -184.503, 0.55 ) }
    dend_44 { pt3dadd( -49.3352, 2.34937, -187.893, 0.28 ) }
    dend_44 { pt3dadd( -49.9835, 2.55314, -188.501, 0.55 ) }
    dend_44 { pt3dadd( -52.5153, 3.5036, -190.589, 0.28 ) }
    dend_44 { pt3dadd( -53.2465, 3.79543, -191.089, 0.55 ) }
    dend_44 { pt3dadd( -55.72, 4.83016, -192.613, 0.28 ) }
    dend_44 { pt3dadd( -57.5193, 5.56362, -193.55, 0.28 ) }
    dend_44 { pt3dadd( -58.2932, 5.87029, -193.847, 0.55 ) }
    dend_44 { pt3dadd( -60.1961, 6.60547, -194.583, 0.28 ) }
    dend_44 { pt3dadd( -60.7816, 6.80887, -194.796, 0.55 ) }
    dend_44 { pt3dadd( -62.2903, 7.32185, -195.287, 0.28 ) }
    dend_44 { pt3dadd( -62.6871, 7.43842, -195.338, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 22/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -20.0414, -2.81717, -90.3778, 0.28 ) }
    dend_41 { pt3dadd( -18.556, -4.23142, -91.2298, 0.28 ) }
    dend_41 { pt3dadd( -17.274, -5.5148, -92.2724, 0.83 ) }
    dend_41 { pt3dadd( -16.2472, -6.52014, -93.1325, 0.28 ) }
    dend_41 { pt3dadd( -14.4548, -8.17019, -94.6983, 0.83 ) }
    dend_41 { pt3dadd( -11.2793, -11.0611, -97.4836, 0.28 ) }
    dend_41 { pt3dadd( -9.98098, -12.2211, -98.6414, 0.83 ) }
    dend_41 { pt3dadd( -7.69768, -14.2355, -100.848, 0.28 ) }
    dend_41 { pt3dadd( -5.97665, -15.7336, -102.588, 0.83 ) }
    dend_41 { pt3dadd( -3.92676, -17.4026, -104.659, 0.28 ) }
    dend_41 { pt3dadd( -2.67622, -18.3299, -105.864, 0.83 ) }
    dend_41 { pt3dadd( -0.980633, -19.5411, -107.216, 0.28 ) }
    dend_41 { pt3dadd( -0.761543, -19.6733, -107.359, 0.55 ) }
    dend_41 { pt3dadd( 0.110557, -20.1187, -107.746, 0.28 ) }
    dend_41 { pt3dadd( 0.825438, -20.4502, -107.969, 0.55 ) }
    dend_41 { pt3dadd( 1.97923, -20.9442, -108.213, 0.28 ) }
    dend_41 { pt3dadd( 3.84135, -21.6901, -108.548, 1.38 ) }
    dend_41 { pt3dadd( 6.57639, -22.7934, -108.99, 0.28 ) }
    dend_41 { pt3dadd( 8.34553, -23.5204, -109.283, 0.28 ) }
    dend_41 { pt3dadd( 11.5903, -24.8058, -109.65, 1.38 ) }
    dend_41 { pt3dadd( 13.5384, -25.5491, -109.778, 0.28 ) }
    dend_41 { pt3dadd( 13.8058, -25.6538, -109.797, 0.55 ) }
    dend_41 { pt3dadd( 15.1862, -26.2046, -109.894, 0.28 ) }
    dend_41 { pt3dadd( 16.817, -26.8469, -110.037, 0.55 ) }
    dend_41 { pt3dadd( 20.1079, -28.1787, -110.478, 0.28 ) }
    dend_41 { pt3dadd( 21.4123, -28.695, -110.754, 0.83 ) }
    dend_41 { pt3dadd( 24.6335, -30.111, -111.473, 0.28 ) }
    dend_41 { pt3dadd( 25.897, -30.7303, -111.776, 0.83 ) }
    dend_41 { pt3dadd( 27.6985, -31.7002, -112.215, 0.28 ) }
    dend_41 { pt3dadd( 28.4127, -32.0801, -112.375, 0.55 ) }
    dend_41 { pt3dadd( 31.0111, -33.4547, -112.897, 0.28 ) }
    dend_41 { pt3dadd( 33.4975, -34.7289, -113.236, 0.55 ) }
    dend_41 { pt3dadd( 36.1192, -35.9466, -113.432, 1.66 ) }
    dend_41 { pt3dadd( 39.0404, -37.2138, -113.583, 0.28 ) }
    dend_41 { pt3dadd( 42.995, -38.7468, -113.662, 0.83 ) }
    dend_41 { pt3dadd( 45.7351, -39.6503, -113.679, 0.28 ) }
    dend_41 { pt3dadd( 47.1142, -40.0112, -113.662, 0.83 ) }
    dend_41 { pt3dadd( 49.6227, -40.4399, -113.675, 0.28 ) }
    dend_41 { pt3dadd( 51.3177, -40.6157, -113.69, 0.55 ) }
    dend_41 { pt3dadd( 53.5234, -40.7494, -113.717, 0.55 ) }
    dend_41 { pt3dadd( 57.016, -40.8472, -113.784, 0.28 ) }
    dend_41 { pt3dadd( 58.529, -40.8173, -113.81, 0.83 ) }
    dend_41 { pt3dadd( 61.2814, -40.7138, -113.845, 0.28 ) }
    dend_41 { pt3dadd( 61.5638, -40.7083, -113.846, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -42.3865, 63.2974, 36.2365, 0.55 ) }
    dend_38 { pt3dadd( -42.797, 67.986, 41.0409, 0.55 ) }
    dend_38 { pt3dadd( -42.9819, 68.9213, 41.8652, 0.55 ) }
    dend_38 { pt3dadd( -43.341, 70.3018, 42.8695, 0.55 ) }
    dend_38 { pt3dadd( -43.4404, 70.7119, 43.1196, 0.55 ) }
    dend_38 { pt3dadd( -44.1591, 73.6775, 44.9276, 0.55 ) }
    dend_38 { pt3dadd( -44.6765, 75.8125, 46.2294, 0.55 ) }
    dend_38 { pt3dadd( -45.0915, 76.8218, 46.6091, 0.55 ) }
    dend_38 { pt3dadd( -45.7459, 78.3876, 47.2014, 0.55 ) }
    dend_38 { pt3dadd( -46.4847, 79.8759, 47.733, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -42.3865, 63.2974, 36.2365, 0.55 ) }
    dend_37 { pt3dadd( -46.0012, 64.0785, 36.6828, 0.55 ) }
    dend_37 { pt3dadd( -47.4497, 64.1796, 37.0026, 0.55 ) }
    dend_37 { pt3dadd( -49.1151, 64.1171, 37.6016, 0.55 ) }
    dend_37 { pt3dadd( -51.0506, 63.9726, 38.3772, 0.55 ) }
    dend_37 { pt3dadd( -52.4863, 63.7929, 38.9687, 0.55 ) }
    dend_37 { pt3dadd( -53.8509, 63.5815, 39.5083, 0.55 ) }
    dend_37 { pt3dadd( -57.451, 62.785, 40.8938, 0.55 ) }
    dend_37 { pt3dadd( -60.2715, 62.0076, 42.0941, 0.55 ) }
    dend_37 { pt3dadd( -61.3171, 61.6709, 42.5881, 0.55 ) }
    dend_37 { pt3dadd( -62.4423, 61.2944, 43.1726, 0.55 ) }
    dend_37 { pt3dadd( -64.0813, 60.6394, 44.0539, 0.55 ) }
    dend_37 { pt3dadd( -65.7903, 59.9543, 44.933, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_21 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.111373, -29.5087, -8.76401, 1.38 ) }
    dend_29 { pt3dadd( -0.761999, -31.4168, -8.93418, 1.38 ) }
    dend_29 { pt3dadd( -1.22604, -32.5867, -9.09992, 1.38 ) }
    dend_29 { pt3dadd( -1.80722, -33.8724, -9.33086, 1.38 ) }
    dend_29 { pt3dadd( -3.38377, -36.8557, -9.96747, 1.38 ) }
    dend_29 { pt3dadd( -5.13621, -39.9112, -10.6682, 1.94 ) }
    dend_29 { pt3dadd( -6.28095, -41.8085, -11.1049, 1.38 ) }
    dend_29 { pt3dadd( -6.80878, -42.629, -11.3189, 1.38 ) }
    dend_29 { pt3dadd( -7.80991, -44.0631, -11.7284, 1.38 ) }
    dend_29 { pt3dadd( -9.53034, -46.3743, -12.4408, 1.38 ) }
    dend_29 { pt3dadd( -10.7704, -47.8317, -12.9614, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -13.0149, -50.2757, -13.8091, 1.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 1/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.111373, -29.5087, -8.76401, 0.83 ) }
    dend_22 { pt3dadd( 0.356714, -30.9525, -8.54652, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 3/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.09339, -33.0092, -9.68675, 0.83 ) }
    dend_12 { pt3dadd( -5.83452, -34.7368, -10.3524, 0.83 ) }
    dend_12 { pt3dadd( -8.09285, -36.1601, -10.9008, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 6/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.09339, -33.0092, -9.68675, 0.55 ) }
    dend_11 { pt3dadd( -2.80651, -33.9047, -8.13503, 0.55 ) }
    dend_11 { pt3dadd( -2.77051, -34.0337, -7.90073, 0.55 ) }
    dend_11 { pt3dadd( -2.44533, -35.772, -4.19612, 0.55 ) }
    dend_11 { pt3dadd( -2.33885, -37.6349, 0.396727, 0.55 ) }
    dend_11 { pt3dadd( -2.4633, -39.0445, 4.36131, 0.55 ) }
    dend_11 { pt3dadd( -2.72701, -39.9575, 7.30113, 0.55 ) }
    dend_11 { pt3dadd( -2.84397, -40.2195, 8.26477, 0.83 ) }
    dend_11 { pt3dadd( -3.68087, -41.5952, 13.4387, 0.28 ) }
    dend_11 { pt3dadd( -4.14109, -42.0798, 15.5923, 0.55 ) }
    dend_11 { pt3dadd( -5.23549, -42.906, 19.1438, 0.55 ) }
    dend_11 { pt3dadd( -6.38394, -43.8364, 22.7102, 0.28 ) }
    dend_11 { pt3dadd( -6.90607, -44.4595, 24.5439, 0.55 ) }
    dend_11 { pt3dadd( -7.33062, -45.269, 26.3662, 0.55 ) }
    dend_11 { pt3dadd( -8.08619, -47.3053, 30.1277, 0.55 ) }
    dend_11 { pt3dadd( -8.46817, -48.939, 32.7802, 0.28 ) }
    dend_11 { pt3dadd( -8.71572, -50.6177, 35.1687, 0.55 ) }
    dend_11 { pt3dadd( -8.7736, -51.6997, 36.5692, 0.55 ) }
    dend_11 { pt3dadd( -8.83966, -52.6473, 37.888, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.60303, 70.0529, 6.58188, 0.55 ) }
    dend_8 { pt3dadd( 1.2065, 70.6027, 6.90292, 0.55 ) }
    dend_8 { pt3dadd( 0.405239, 70.9629, 7.08937, 0.83 ) }
    dend_8 { pt3dadd( -1.52354, 71.9071, 7.51306, 0.28 ) }
    dend_8 { pt3dadd( -2.85968, 72.5633, 7.86274, 0.55 ) }
    dend_8 { pt3dadd( -4.10205, 73.2364, 8.19162, 0.28 ) }
    dend_8 { pt3dadd( -4.75226, 73.6231, 8.40068, 0.55 ) }
    dend_8 { pt3dadd( -5.44588, 74.1324, 8.68297, 0.28 ) }
    dend_8 { pt3dadd( -6.31877, 74.9309, 9.17542, 0.55 ) }
    dend_8 { pt3dadd( -7.37086, 76.0208, 9.87835, 0.28 ) }
    dend_8 { pt3dadd( -8.47371, 77.2065, 10.6344, 0.83 ) }
    dend_8 { pt3dadd( -9.84224, 78.6444, 11.5863, 0.83 ) }
    dend_8 { pt3dadd( -10.8679, 79.6374, 12.3266, 0.55 ) }
    dend_8 { pt3dadd( -12.3139, 80.9382, 13.3553, 0.28 ) }
    dend_8 { pt3dadd( -13.006, 81.5377, 13.8422, 0.55 ) }
    dend_8 { pt3dadd( -14.2835, 82.5683, 14.6472, 0.28 ) }
    dend_8 { pt3dadd( -14.9393, 83.0414, 15.0175, 0.83 ) }
    dend_8 { pt3dadd( -16.4604, 84.0757, 15.6892, 0.55 ) }
    dend_8 { pt3dadd( -17.4318, 84.7326, 16.1315, 0.28 ) }
    dend_8 { pt3dadd( -18.1858, 85.322, 16.4696, 0.83 ) }
    dend_8 { pt3dadd( -18.8536, 85.8761, 16.7619, 0.83 ) }
    dend_8 { pt3dadd( -20.0527, 86.8124, 17.2227, 0.28 ) }
    dend_8 { pt3dadd( -20.848, 87.44, 17.487, 0.83 ) }
    dend_8 { pt3dadd( -23.1135, 89.2901, 18.1662, 0.28 ) }
    dend_8 { pt3dadd( -23.9003, 89.914, 18.3854, 0.55 ) }
    dend_8 { pt3dadd( -25.8637, 91.4144, 18.8804, 0.55 ) }
    dend_8 { pt3dadd( -27.2496, 92.4063, 19.1909, 0.28 ) }
    dend_8 { pt3dadd( -28.3136, 93.0784, 19.3783, 0.55 ) }
    dend_8 { pt3dadd( -29.4363, 93.7295, 19.5078, 0.28 ) }
    dend_8 { pt3dadd( -30.052, 94.0723, 19.5474, 0.55 ) }
    dend_8 { pt3dadd( -30.806, 94.5, 19.6262, 0.28 ) }
    dend_8 { pt3dadd( -31.9059, 95.2527, 19.8236, 0.55 ) }
    dend_8 { pt3dadd( -32.9585, 96.0619, 20.0469, 0.28 ) }
    dend_8 { pt3dadd( -34.2706, 97.1142, 20.3572, 0.55 ) }
    dend_8 { pt3dadd( -35.1166, 97.9641, 20.5547, 0.28 ) }
    dend_8 { pt3dadd( -35.629, 98.5818, 20.6778, 0.55 ) }
    dend_8 { pt3dadd( -36.3501, 99.6331, 20.7901, 0.28 ) }
    dend_8 { pt3dadd( -36.6078, 100.071, 20.8222, 0.55 ) }
    dend_8 { pt3dadd( -36.9742, 100.778, 20.8523, 0.28 ) }
    dend_8 { pt3dadd( -37.7483, 102.39, 20.8648, 0.55 ) }
    dend_8 { pt3dadd( -38.7995, 104.573, 20.7585, 0.55 ) }
    dend_8 { pt3dadd( -39.4893, 105.965, 20.6593, 0.28 ) }
    dend_8 { pt3dadd( -40.2368, 107.326, 20.4937, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 68/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.60303, 70.0529, 6.58188, 0.55 ) }
    dend_3 { pt3dadd( 2.7616, 73.3805, 6.63152, 0.55 ) }
    dend_3 { pt3dadd( 2.79275, 75.1235, 6.83474, 0.55 ) }
    dend_3 { pt3dadd( 2.8308, 76.9604, 7.16773, 0.55 ) }
    dend_3 { pt3dadd( 3.01425, 80.7962, 8.16775, 0.55 ) }
    dend_3 { pt3dadd( 3.21279, 85.4448, 9.50997, 0.55 ) }
    dend_3 { pt3dadd( 3.25986, 87.8273, 10.2212, 0.55 ) }
    dend_3 { pt3dadd( 3.36246, 93.0457, 11.8979, 0.55 ) }
    dend_3 { pt3dadd( 3.5108, 97.8201, 13.3998, 0.55 ) }
    dend_3 { pt3dadd( 3.63192, 103.691, 15.1972, 0.55 ) }
    dend_3 { pt3dadd( 3.63398, 106.054, 15.8812, 0.55 ) }
    dend_3 { pt3dadd( 3.54017, 110.195, 16.9676, 0.55 ) }
    dend_3 { pt3dadd( 3.43664, 114.409, 17.9694, 0.55 ) }
    dend_3 { pt3dadd( 3.07574, 120.693, 19.3314, 0.55 ) }
    dend_3 { pt3dadd( 2.83405, 123.787, 19.9412, 0.55 ) }
    dend_3 { pt3dadd( 2.3642, 128.715, 20.7945, 0.55 ) }
    dend_3 { pt3dadd( 2.05456, 132.156, 21.4215, 0.55 ) }
    dend_3 { pt3dadd( 1.41676, 138.514, 22.6644, 0.55 ) }
    dend_3 { pt3dadd( 0.629644, 143.477, 23.7589, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 87/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 57.3078, 225.314, -92.6105, 0.55 ) }
    dend_49 { pt3dadd( 58.9443, 225.987, -92.8246, 0.55 ) }
    dend_49 { pt3dadd( 59.6786, 226.363, -92.8926, 0.55 ) }
    dend_49 { pt3dadd( 61.2373, 227.238, -93.0746, 0.28 ) }
    dend_49 { pt3dadd( 62.1752, 227.788, -93.1799, 0.83 ) }
    dend_49 { pt3dadd( 63.0498, 228.331, -93.2877, 0.28 ) }
    dend_49 { pt3dadd( 64.2363, 229.102, -93.416, 0.55 ) }
    dend_49 { pt3dadd( 65.3811, 229.929, -93.519, 0.28 ) }
    dend_49 { pt3dadd( 67.604, 231.652, -93.6706, 0.83 ) }
    dend_49 { pt3dadd( 69.16, 232.93, -93.7708, 0.28 ) }
    dend_49 { pt3dadd( 70.3043, 233.858, -93.8061, 0.28 ) }
    dend_49 { pt3dadd( 71.4878, 234.831, -93.8164, 0.28 ) }
    dend_49 { pt3dadd( 71.9457, 235.2, -93.8039, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 74.0786, 236.832, -93.7353, 0.28 ) }
    dend_49 { pt3dadd( 74.9808, 237.554, -93.6769, 0.83 ) }
    dend_49 { pt3dadd( 76.7922, 239.022, -93.5608, 0.28 ) }
    dend_49 { pt3dadd( 77.942, 239.973, -93.4952, 0.55 ) }
    dend_49 { pt3dadd( 79.5108, 241.292, -93.4339, 0.28 ) }
    dend_49 { pt3dadd( 80.5689, 242.225, -93.4059, 0.28 ) }
    dend_49 { pt3dadd( 82.0159, 243.61, -93.4182, 0.55 ) }
    dend_49 { pt3dadd( 83.3658, 244.974, -93.4546, 0.28 ) }
    dend_49 { pt3dadd( 84.1492, 245.86, -93.5004, 0.55 ) }
    dend_49 { pt3dadd( 85.5965, 247.54, -93.6164, 0.28 ) }
    dend_49 { pt3dadd( 86.3029, 248.393, -93.6905, 0.83 ) }
    dend_49 { pt3dadd( 88.0423, 250.548, -93.7444, 0.28 ) }
    dend_49 { pt3dadd( 88.8132, 251.507, -93.7443, 0.55 ) }
    dend_49 { pt3dadd( 89.8849, 252.877, -93.719, 0.55 ) }
    dend_49 { pt3dadd( 91.5477, 255.05, -93.654, 0.28 ) }
    dend_49 { pt3dadd( 92.045, 255.716, -93.6064, 0.55 ) }
    dend_49 { pt3dadd( 94.2304, 258.681, -93.2768, 0.28 ) }
    dend_49 { pt3dadd( 95.1703, 260.034, -93.0772, 0.28 ) }
    dend_49 { pt3dadd( 95.673, 260.813, -92.95, 0.55 ) }
    dend_49 { pt3dadd( 96.4558, 262.095, -92.7475, 0.28 ) }
    dend_49 { pt3dadd( 97.5073, 264.027, -92.5951, 0.55 ) }
    dend_49 { pt3dadd( 98.0082, 264.993, -92.6045, 0.28 ) }
    dend_49 { pt3dadd( 98.3457, 265.689, -92.6831, 0.55 ) }
    dend_49 { pt3dadd( 98.6752, 266.395, -92.7861, 0.28 ) }
    dend_49 { pt3dadd( 100.169, 269.466, -93.2567, 0.55 ) }
    dend_49 { pt3dadd( 101.164, 271.439, -93.5999, 0.55 ) }
    dend_49 { pt3dadd( 102.07, 273.105, -93.8574, 0.28 ) }
    dend_49 { pt3dadd( 102.885, 274.387, -93.9464, 0.28 ) }
    dend_49 { pt3dadd( 103.362, 275.053, -93.9208, 0.28 ) }
    dend_49 { pt3dadd( 104.485, 276.472, -93.7241, 0.55 ) }
    dend_49 { pt3dadd( 105.09, 277.16, -93.5521, 0.28 ) }
    dend_49 { pt3dadd( 107.286, 279.528, -92.8103, 0.83 ) }
    dend_49 { pt3dadd( 108.665, 281.002, -92.3715, 0.28 ) }
    dend_49 { pt3dadd( 109.685, 282.101, -92.0594, 0.55 ) }
    dend_49 { pt3dadd( 110.42, 282.896, -91.8656, 0.28 ) }
    dend_49 { pt3dadd( 111.185, 283.744, -91.7163, 0.28 ) }
    dend_49 { pt3dadd( 112.195, 284.874, -91.5693, 0.28 ) }
    dend_49 { pt3dadd( 114.621, 287.516, -91.3487, 0.83 ) }
    dend_49 { pt3dadd( 116.018, 289.056, -91.2623, 0.28 ) }
    dend_49 { pt3dadd( 116.592, 289.663, -91.2396, 0.28 ) }
    dend_49 { pt3dadd( 117.617, 290.706, -91.1779, 0.28 ) }
    dend_49 { pt3dadd( 118.017, 291.098, -91.142, 0.28 ) }
    dend_49 { pt3dadd( 120.152, 293.118, -90.9226, 0.55 ) }
    dend_49 { pt3dadd( 120.758, 293.672, -90.8714, 0.55 ) }
    dend_49 { pt3dadd( 121.764, 294.621, -90.8032, 0.55 ) }
    dend_49 { pt3dadd( 123.032, 295.948, -90.6596, 0.28 ) }
    dend_49 { pt3dadd( 123.855, 296.889, -90.5195, 0.55 ) }
    dend_49 { pt3dadd( 124.491, 297.699, -90.374, 0.55 ) }
    dend_49 { pt3dadd( 124.955, 298.379, -90.258, 0.28 ) }
    dend_49 { pt3dadd( 125.642, 299.298, -90.1236, 0.55 ) }
    dend_49 { pt3dadd( 126.565, 300.389, -89.8391, 0.28 ) }
    dend_49 { pt3dadd( 127.683, 301.481, -89.4667, 0.83 ) }
    dend_49 { pt3dadd( 128.848, 302.561, -89.0795, 0.55 ) }
    dend_49 { pt3dadd( 129.912, 303.479, -88.7154, 0.55 ) }
    dend_49 { pt3dadd( 131.651, 304.898, -88.0922, 0.55 ) }
    dend_49 { pt3dadd( 135.387, 307.628, -86.7687, 0.28 ) }
    dend_49 { pt3dadd( 137.407, 308.929, -86.1098, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 57/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 57.3078, 225.314, -92.6105, 0.28 ) }
    dend_48 { pt3dadd( 56.8349, 226.947, -91.9514, 0.28 ) }
    dend_48 { pt3dadd( 56.1171, 229.34, -91.0187, 0.55 ) }
    dend_48 { pt3dadd( 55.4629, 231.449, -90.1026, 0.28 ) }
    dend_48 { pt3dadd( 55.0729, 232.892, -89.4396, 0.28 ) }
    dend_48 { pt3dadd( 54.6953, 234.451, -88.7046, 0.28 ) }
    dend_48 { pt3dadd( 54.2276, 236.492, -87.7569, 0.55 ) }
    dend_48 { pt3dadd( 53.9281, 237.991, -86.9709, 0.28 ) }
    dend_48 { pt3dadd( 53.6752, 239.282, -86.232, 0.55 ) }
    dend_48 { pt3dadd( 53.39, 240.727, -85.2644, 0.28 ) }
    dend_48 { pt3dadd( 53.2025, 241.705, -84.553, 0.55 ) }
    dend_48 { pt3dadd( 52.9981, 242.621, -83.8742, 0.55 ) }
    dend_48 { pt3dadd( 52.3151, 245.042, -82.2195, 0.28 ) }
    dend_48 { pt3dadd( 51.8744, 246.1, -81.5431, 0.55 ) }
    dend_48 { pt3dadd( 51.3926, 247.03, -81.0151, 0.55 ) }
    dend_48 { pt3dadd( 50.9085, 247.777, -80.5424, 0.55 ) }
    dend_48 { pt3dadd( 50.3005, 248.657, -79.9243, 0.55 ) }
    dend_48 { pt3dadd( 49.5733, 249.735, -79.1392, 0.55 ) }
    dend_48 { pt3dadd( 47.9477, 252.146, -77.442, 0.28 ) }
    dend_48 { pt3dadd( 47.7633, 252.434, -77.2371, 0.55 ) }
    dend_48 { pt3dadd( 46.1641, 255.182, -75.1237, 0.28 ) }
    dend_48 { pt3dadd( 45.4197, 256.628, -74.0195, 0.55 ) }
    dend_48 { pt3dadd( 44.8612, 257.877, -73.1099, 0.55 ) }
    dend_48 { pt3dadd( 44.6228, 258.502, -72.6967, 0.55 ) }
    dend_48 { pt3dadd( 44.0946, 260.126, -71.6823, 0.28 ) }
    dend_48 { pt3dadd( 43.2066, 263.149, -69.9612, 0.55 ) }
    dend_48 { pt3dadd( 42.7723, 264.928, -69.1677, 0.28 ) }
    dend_48 { pt3dadd( 42.4672, 266.225, -68.6522, 0.28 ) }
    dend_48 { pt3dadd( 42.2352, 267.25, -68.2552, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 86/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 61.5638, -40.7083, -113.846, 0.28 ) }
    dend_43 { pt3dadd( 63.8922, -42.6686, -115.259, 0.28 ) }
    dend_43 { pt3dadd( 64.5083, -43.2742, -115.848, 0.83 ) }
    dend_43 { pt3dadd( 65.4389, -44.3461, -116.974, 0.28 ) }
    dend_43 { pt3dadd( 65.8082, -45.076, -117.887, 0.55 ) }
    dend_43 { pt3dadd( 66.1861, -46.3927, -119.515, 0.28 ) }
    dend_43 { pt3dadd( 66.4129, -47.5208, -120.859, 0.55 ) }
    dend_43 { pt3dadd( 66.3239, -49.1736, -122.929, 0.28 ) }
    dend_43 { pt3dadd( 66.1279, -50.1875, -124.222, 0.83 ) }
    dend_43 { pt3dadd( 65.3143, -52.7662, -127.444, 0.28 ) }
    dend_43 { pt3dadd( 64.9703, -53.7608, -128.592, 0.55 ) }
    dend_43 { pt3dadd( 64.7773, -54.3705, -129.208, 0.28 ) }
    dend_43 { pt3dadd( 64.6379, -55.0142, -129.819, 0.55 ) }
    dend_43 { pt3dadd( 64.4172, -56.7477, -131.148, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_43 { pt3dadd( 64.3949, -57.1681, -131.431, 0.55 ) }
    dend_43 { pt3dadd( 64.5075, -58.3148, -131.999, 0.28 ) }
    dend_43 { pt3dadd( 64.7705, -59.7588, -132.672, 0.55 ) }
    dend_43 { pt3dadd( 65.3144, -61.9906, -133.577, 0.28 ) }
    dend_43 { pt3dadd( 65.7057, -63.0536, -134.095, 0.83 ) }
    dend_43 { pt3dadd( 66.3065, -64.4573, -134.849, 0.28 ) }
    dend_43 { pt3dadd( 66.7193, -65.3375, -135.418, 0.55 ) }
    dend_43 { pt3dadd( 67.2156, -66.3284, -136.149, 0.28 ) }
    dend_43 { pt3dadd( 67.6272, -67.11, -136.733, 0.55 ) }
    dend_43 { pt3dadd( 69.2229, -70.0382, -138.802, 0.28 ) }
    dend_43 { pt3dadd( 69.6795, -70.9133, -139.366, 0.83 ) }
    dend_43 { pt3dadd( 69.9747, -71.5793, -139.731, 0.28 ) }
    dend_43 { pt3dadd( 70.283, -72.347, -140.116, 0.55 ) }
    dend_43 { pt3dadd( 70.8614, -74.195, -140.884, 0.28 ) }
    dend_43 { pt3dadd( 71.091, -75.035, -141.157, 0.55 ) }
    dend_43 { pt3dadd( 71.5951, -77.0489, -141.604, 0.28 ) }
    dend_43 { pt3dadd( 71.8538, -77.9826, -141.884, 0.55 ) }
    dend_43 { pt3dadd( 72.5096, -80.3877, -142.755, 0.28 ) }
    dend_43 { pt3dadd( 72.8925, -81.8034, -143.402, 0.83 ) }
    dend_43 { pt3dadd( 73.3499, -83.3474, -144.193, 0.28 ) }
    dend_43 { pt3dadd( 73.5932, -84.0472, -144.53, 0.55 ) }
    dend_43 { pt3dadd( 74.5984, -86.5013, -145.66, 0.28 ) }
    dend_43 { pt3dadd( 75.4648, -88.2536, -146.292, 0.55 ) }
    dend_43 { pt3dadd( 76.2854, -89.7742, -146.699, 0.28 ) }
    dend_43 { pt3dadd( 76.9437, -90.8803, -147.028, 0.83 ) }
    dend_43 { pt3dadd( 78.4869, -93.4392, -147.808, 0.28 ) }
    dend_43 { pt3dadd( 78.8761, -94.0772, -147.982, 0.55 ) }
    dend_43 { pt3dadd( 80.4003, -96.5791, -148.526, 0.28 ) }
    dend_43 { pt3dadd( 80.7362, -97.1185, -148.659, 0.55 ) }
    dend_43 { pt3dadd( 82.0902, -99.437, -149.283, 0.28 ) }
    dend_43 { pt3dadd( 82.5797, -100.43, -149.607, 0.55 ) }
    dend_43 { pt3dadd( 83.0384, -101.551, -149.995, 0.28 ) }
    dend_43 { pt3dadd( 83.4299, -102.497, -150.254, 0.55 ) }
    dend_43 { pt3dadd( 83.8052, -103.348, -150.415, 0.28 ) }
    dend_43 { pt3dadd( 84.2997, -104.304, -150.61, 0.55 ) }
    dend_43 { pt3dadd( 85.0428, -105.648, -150.878, 0.28 ) }
    dend_43 { pt3dadd( 85.9212, -107.228, -151.216, 0.55 ) }
    dend_43 { pt3dadd( 87.0389, -109.335, -151.69, 0.28 ) }
    dend_43 { pt3dadd( 88.0348, -111.252, -152.107, 0.55 ) }
    dend_43 { pt3dadd( 89.4165, -114.208, -152.775, 0.28 ) }
    dend_43 { pt3dadd( 89.7593, -115.041, -152.959, 0.55 ) }
    dend_43 { pt3dadd( 90.3607, -116.941, -153.352, 0.28 ) }
    dend_43 { pt3dadd( 90.6234, -118.376, -153.586, 0.28 ) }
    dend_43 { pt3dadd( 90.6341, -119.087, -153.649, 0.55 ) }
    dend_43 { pt3dadd( 90.5242, -120.61, -153.681, 0.28 ) }
    dend_43 { pt3dadd( 90.2697, -122.332, -153.634, 0.55 ) }
    dend_43 { pt3dadd( 89.9361, -125.222, -153.623, 0.28 ) }
    dend_43 { pt3dadd( 89.8562, -126.353, -153.65, 0.83 ) }
    dend_43 { pt3dadd( 89.7857, -128.987, -153.725, 0.28 ) }
    dend_43 { pt3dadd( 89.8177, -131.127, -153.8, 0.28 ) }
    dend_43 { pt3dadd( 89.9398, -133.157, -153.918, 0.55 ) }
    dend_43 { pt3dadd( 90.2329, -136.198, -154.22, 0.28 ) }
    dend_43 { pt3dadd( 90.5374, -138.504, -154.371, 0.55 ) }
    dend_43 { pt3dadd( 90.9205, -140.566, -154.456, 0.28 ) }
    dend_43 { pt3dadd( 91.2419, -141.797, -154.374, 0.55 ) }
    dend_43 { pt3dadd( 91.8125, -143.677, -153.935, 0.28 ) }
    dend_43 { pt3dadd( 92.2512, -144.975, -153.524, 0.55 ) }
    dend_43 { pt3dadd( 93.1923, -147.816, -152.261, 0.28 ) }
    dend_43 { pt3dadd( 93.6869, -149.126, -151.494, 0.55 ) }
    dend_43 { pt3dadd( 95.0173, -152.141, -149.267, 0.28 ) }
    dend_43 { pt3dadd( 95.9335, -153.998, -147.586, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 61/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 61.5638, -40.7083, -113.846, 0.28 ) }
    dend_42 { pt3dadd( 63.1524, -40.4708, -113.665, 0.28 ) }
    dend_42 { pt3dadd( 63.9912, -40.4323, -113.595, 0.55 ) }
    dend_42 { pt3dadd( 65.6877, -40.4452, -113.472, 0.28 ) }
    dend_42 { pt3dadd( 66.0658, -40.4524, -113.438, 0.55 ) }
    dend_42 { pt3dadd( 67.6704, -40.5007, -113.288, 0.28 ) }
    dend_42 { pt3dadd( 68.7907, -40.5506, -113.208, 0.55 ) }
    dend_42 { pt3dadd( 70.4037, -40.7053, -113.136, 0.28 ) }
    dend_42 { pt3dadd( 71.3723, -40.8176, -113.105, 0.55 ) }
    dend_42 { pt3dadd( 73.4409, -41.1067, -113.055, 0.28 ) }
    dend_42 { pt3dadd( 73.7013, -41.145, -113.042, 0.55 ) }
    dend_42 { pt3dadd( 75.9621, -41.5024, -112.861, 0.28 ) }
    dend_42 { pt3dadd( 76.3281, -41.5601, -112.8, 0.55 ) }
    dend_42 { pt3dadd( 77.8226, -41.7587, -112.429, 0.28 ) }
    dend_42 { pt3dadd( 78.8429, -41.8832, -112.129, 0.83 ) }
    dend_42 { pt3dadd( 80.2441, -42.041, -111.667, 0.28 ) }
    dend_42 { pt3dadd( 81.0432, -42.1332, -111.415, 0.55 ) }
    dend_42 { pt3dadd( 83.6341, -42.5201, -110.628, 0.28 ) }
    dend_42 { pt3dadd( 84.5135, -42.7121, -110.293, 0.55 ) }
    dend_42 { pt3dadd( 85.5692, -42.9775, -109.835, 0.28 ) }
    dend_42 { pt3dadd( 86.7524, -43.2773, -109.291, 0.55 ) }
    dend_42 { pt3dadd( 89.2467, -44.0211, -108.172, 0.28 ) }
    dend_42 { pt3dadd( 90.5936, -44.4891, -107.451, 0.55 ) }
    dend_42 { pt3dadd( 94.0307, -45.7922, -105.431, 0.28 ) }
    dend_42 { pt3dadd( 94.4447, -45.9688, -105.148, 0.55 ) }
    dend_42 { pt3dadd( 95.6177, -46.5027, -104.256, 0.28 ) }
    dend_42 { pt3dadd( 97.0026, -47.1731, -103.186, 0.83 ) }
    dend_42 { pt3dadd( 99.7687, -48.5247, -101.028, 0.28 ) }
    dend_42 { pt3dadd( 100.789, -49.03, -100.322, 0.55 ) }
    dend_42 { pt3dadd( 102.619, -49.9808, -99.2893, 0.28 ) }
    dend_42 { pt3dadd( 103.108, -50.2453, -99.0509, 0.83 ) }
    dend_42 { pt3dadd( 106.387, -52.0371, -97.6775, 0.28 ) }
    dend_42 { pt3dadd( 107.381, -52.5534, -97.368, 0.83 ) }
    dend_42 { pt3dadd( 109.333, -53.5373, -97.0197, 0.28 ) }
    dend_42 { pt3dadd( 110.536, -54.1349, -96.8667, 0.55 ) }
    dend_42 { pt3dadd( 112.385, -54.9907, -96.7405, 0.28 ) }
    dend_42 { pt3dadd( 112.939, -55.2351, -96.7559, 0.83 ) }
    dend_42 { pt3dadd( 115.478, -56.2477, -97.1511, 0.28 ) }
    dend_42 { pt3dadd( 116.244, -56.5441, -97.365, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_42 { pt3dadd( 117.244, -56.9111, -97.7368, 0.28 ) }
    dend_42 { pt3dadd( 117.712, -57.0737, -97.945, 0.55 ) }
    dend_42 { pt3dadd( 120.71, -58.1494, -99.4639, 0.28 ) }
    dend_42 { pt3dadd( 121.447, -58.4134, -99.9874, 0.55 ) }
    dend_42 { pt3dadd( 122.89, -58.9169, -101.177, 0.28 ) }
    dend_42 { pt3dadd( 123.332, -59.0696, -101.563, 0.83 ) }
    dend_42 { pt3dadd( 125.534, -59.8164, -103.583, 0.28 ) }
    dend_42 { pt3dadd( 125.846, -59.922, -103.879, 0.55 ) }
    dend_42 { pt3dadd( 129.482, -61.2043, -107.474, 0.28 ) }
    dend_42 { pt3dadd( 130.816, -61.6925, -108.805, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 10/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -13.0149, -50.2757, -13.8091, 1.38 ) }
    dend_31 { pt3dadd( -14.227, -51.3455, -15.7734, 1.38 ) }
    dend_31 { pt3dadd( -15.2198, -52.1218, -17.7571, 1.38 ) }
    dend_31 { pt3dadd( -15.6743, -52.4897, -18.7627, 1.11 ) }
    dend_31 { pt3dadd( -16.6467, -53.3485, -20.9007, 1.38 ) }
    dend_31 { pt3dadd( -18.5969, -55.037, -24.7932, 1.38 ) }
    dend_31 { pt3dadd( -19.7403, -56.0948, -26.933, 1.38 ) }
    dend_31 { pt3dadd( -22.2219, -58.9212, -32.401, 1.38 ) }
    dend_31 { pt3dadd( -23.3805, -60.6059, -35.2399, 1.38 ) }
    dend_31 { pt3dadd( -24.0733, -61.7725, -36.9548, 1.38 ) }
    dend_31 { pt3dadd( -24.9889, -63.4114, -39.0532, 1.38 ) }
    dend_31 { pt3dadd( -26.1456, -65.3047, -41.145, 1.38 ) }
    dend_31 { pt3dadd( -28.8785, -69.952, -45.7955, 1.38 ) }
    dend_31 { pt3dadd( -29.9, -71.616, -47.2389, 1.38 ) }
    dend_31 { pt3dadd( -31.3094, -73.5316, -48.9671, 1.38 ) }
    dend_31 { pt3dadd( -33.4028, -76.097, -51.4048, 1.94 ) }
    dend_31 { pt3dadd( -34.4393, -77.3266, -52.5414, 1.94 ) }
    dend_31 { pt3dadd( -36.0223, -78.9838, -54.1473, 0.28 ) }
    dend_31 { pt3dadd( -36.5847, -79.5316, -54.5796, 0.28 ) }
    dend_31 { pt3dadd( -38.294, -81.3041, -56.0439, 1.38 ) }
    dend_31 { pt3dadd( -39.2988, -82.4697, -56.9356, 0.28 ) }
    dend_31 { pt3dadd( -40.4349, -83.8696, -57.8986, 1.11 ) }
    dend_31 { pt3dadd( -42.5965, -86.4455, -60.1448, 0.28 ) }
    dend_31 { pt3dadd( -44.0406, -88.062, -61.7586, 1.38 ) }
    dend_31 { pt3dadd( -45.7283, -89.7474, -63.9041, 0.55 ) }
    dend_31 { pt3dadd( -47.5236, -91.2626, -66.3294, 0.83 ) }
    dend_31 { pt3dadd( -48.6919, -91.9878, -67.8005, 0.83 ) }
    dend_31 { pt3dadd( -52.4398, -93.8324, -72.1644, 0.28 ) }
    dend_31 { pt3dadd( -53.3638, -94.2343, -73.1485, 0.83 ) }
    dend_31 { pt3dadd( -55.5063, -95.1142, -75.7833, 0.83 ) }
    dend_31 { pt3dadd( -56.4553, -95.4671, -76.9668, 0.83 ) }
    dend_31 { pt3dadd( -57.9237, -95.8779, -78.8437, 0.55 ) }
    dend_31 { pt3dadd( -59.3095, -96.3154, -80.5179, 0.28 ) }
    dend_31 { pt3dadd( -60.5716, -96.8129, -81.9185, 1.66 ) }
    dend_31 { pt3dadd( -64.7729, -98.5436, -86.8579, 0.28 ) }
    dend_31 { pt3dadd( -66.199, -99.2122, -88.6188, 0.83 ) }
    dend_31 { pt3dadd( -67.8944, -100.093, -90.8614, 0.28 ) }
    dend_31 { pt3dadd( -68.7503, -100.568, -92.0732, 0.83 ) }
    dend_31 { pt3dadd( -70.508, -101.555, -94.5584, 0.28 ) }
    dend_31 { pt3dadd( -72.4402, -102.845, -97.1511, 1.94 ) }
    dend_31 { pt3dadd( -73.5614, -103.815, -98.4291, 0.28 ) }
    dend_31 { pt3dadd( -74.464, -104.852, -99.483, 0.83 ) }
    dend_31 { pt3dadd( -75.5715, -106.345, -100.718, 0.28 ) }
    dend_31 { pt3dadd( -76.3163, -107.411, -101.497, 0.28 ) }
    dend_31 { pt3dadd( -77.498, -109.298, -102.546, 1.38 ) }
    dend_31 { pt3dadd( -78.778, -111.413, -103.539, 0.28 ) }
    dend_31 { pt3dadd( -79.6137, -112.674, -104.088, 0.28 ) }
    dend_31 { pt3dadd( -81.1979, -114.768, -104.99, 0.55 ) }
    dend_31 { pt3dadd( -82.114, -115.758, -105.43, 0.28 ) }
    dend_31 { pt3dadd( -83.8472, -117.429, -106.524, 0.83 ) }
    dend_31 { pt3dadd( -84.9684, -118.5, -107.371, 0.28 ) }
    dend_31 { pt3dadd( -85.665, -119.192, -107.945, 0.55 ) }
    dend_31 { pt3dadd( -86.3775, -119.893, -108.583, 0.28 ) }
    dend_31 { pt3dadd( -87.9657, -121.612, -110.139, 1.11 ) }
    dend_31 { pt3dadd( -90.7004, -125.279, -113.193, 0.28 ) }
    dend_31 { pt3dadd( -91.3995, -126.616, -114.342, 0.28 ) }
    dend_31 { pt3dadd( -91.988, -128.106, -115.515, 0.28 ) }
    dend_31 { pt3dadd( -92.199, -128.82, -116.043, 0.83 ) }
    dend_31 { pt3dadd( -92.5116, -130.137, -117.123, 0.28 ) }
    dend_31 { pt3dadd( -93.1325, -133.154, -119.853, 0.83 ) }
    dend_31 { pt3dadd( -94.2145, -138.088, -124.821, 0.55 ) }
    dend_31 { pt3dadd( -94.6266, -139.894, -126.904, 0.55 ) }
    dend_31 { pt3dadd( -95.1741, -142.256, -129.822, 0.28 ) }
    dend_31 { pt3dadd( -96.3599, -146.376, -135.301, 0.83 ) }
    dend_31 { pt3dadd( -96.8855, -147.897, -137.679, 0.83 ) }
    dend_31 { pt3dadd( -97.647, -149.823, -141.0, 0.83 ) }
    dend_31 { pt3dadd( -98.3627, -151.45, -143.769, 0.28 ) }
    dend_31 { pt3dadd( -98.8176, -152.383, -145.289, 0.83 ) }
    dend_31 { pt3dadd( -99.5225, -153.799, -147.154, 1.11 ) }
    dend_31 { pt3dadd( -101.655, -158.557, -151.302, 0.28 ) }
    dend_31 { pt3dadd( -102.467, -160.763, -152.792, 0.55 ) }
    dend_31 { pt3dadd( -103.19, -163.19, -154.028, 0.55 ) }
    dend_31 { pt3dadd( -103.863, -166.235, -155.207, 0.55 ) }
    dend_31 { pt3dadd( -104.434, -170.029, -156.589, 0.55 ) }
    dend_31 { pt3dadd( -104.587, -171.567, -157.084, 0.55 ) }
    dend_31 { pt3dadd( -104.818, -174.905, -158.198, 0.28 ) }
    dend_31 { pt3dadd( -104.839, -176.531, -159.025, 0.83 ) }
    dend_31 { pt3dadd( -104.805, -178.543, -160.246, 0.28 ) }
    dend_31 { pt3dadd( -104.745, -181.493, -162.179, 0.55 ) }
    dend_31 { pt3dadd( -104.73, -183.163, -163.301, 0.55 ) }
    dend_31 { pt3dadd( -104.645, -186.621, -165.605, 0.55 ) }
    dend_31 { pt3dadd( -104.602, -189.662, -167.511, 0.55 ) }
    dend_31 { pt3dadd( -104.585, -191.715, -168.784, 1.11 ) }
    dend_31 { pt3dadd( -104.628, -193.327, -169.735, 0.28 ) }
    dend_31 { pt3dadd( -104.781, -196.069, -171.201, 0.83 ) }
    dend_31 { pt3dadd( -104.993, -198.094, -172.254, 0.28 ) }
    dend_31 { pt3dadd( -105.278, -199.694, -173.083, 0.28 ) }
    dend_31 { pt3dadd( -105.834, -202.144, -174.57, 0.55 ) }
    dend_31 { pt3dadd( -106.334, -204.155, -175.942, 0.28 ) }
    dend_31 { pt3dadd( -106.935, -206.418, -177.543, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( -107.237, -207.564, -178.376, 0.83 ) }
    dend_31 { pt3dadd( -107.755, -209.959, -180.066, 0.28 ) }
    dend_31 { pt3dadd( -108.186, -212.292, -181.789, 0.83 ) }
    dend_31 { pt3dadd( -108.56, -215.12, -183.918, 0.83 ) }
    dend_31 { pt3dadd( -108.676, -216.913, -185.234, 0.83 ) }
    dend_31 { pt3dadd( -108.67, -219.657, -187.018, 0.28 ) }
    dend_31 { pt3dadd( -108.508, -222.199, -188.465, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -13.0149, -50.2757, -13.8091, 0.55 ) }
    dend_30 { pt3dadd( -13.927, -50.5321, -13.5624, 0.55 ) }
    dend_30 { pt3dadd( -15.1211, -50.8782, -13.2795, 0.28 ) }
    dend_30 { pt3dadd( -16.5646, -51.2247, -12.9784, 0.55 ) }
    dend_30 { pt3dadd( -17.5886, -51.3961, -12.8138, 0.28 ) }
    dend_30 { pt3dadd( -22.0294, -51.8303, -12.0883, 0.55 ) }
    dend_30 { pt3dadd( -24.1236, -51.9593, -11.7423, 0.55 ) }
    dend_30 { pt3dadd( -25.8506, -51.965, -11.4656, 0.55 ) }
    dend_30 { pt3dadd( -28.1769, -51.8651, -11.1369, 0.55 ) }
    dend_30 { pt3dadd( -30.1848, -51.8059, -10.9273, 0.55 ) }
    dend_30 { pt3dadd( -33.5379, -51.7602, -10.6758, 0.28 ) }
    dend_30 { pt3dadd( -35.1998, -51.7408, -10.6319, 0.55 ) }
    dend_30 { pt3dadd( -37.8459, -51.7838, -10.504, 0.55 ) }
    dend_30 { pt3dadd( -40.7563, -51.9772, -10.3031, 0.83 ) }
    dend_30 { pt3dadd( -44.3302, -52.4945, -9.86208, 0.55 ) }
    dend_30 { pt3dadd( -46.2883, -52.9215, -9.44672, 0.28 ) }
    dend_30 { pt3dadd( -46.9642, -53.0904, -9.26505, 0.55 ) }
    dend_30 { pt3dadd( -48.9944, -53.5979, -8.43936, 0.28 ) }
    dend_30 { pt3dadd( -50.1628, -53.8777, -7.79333, 0.55 ) }
    dend_30 { pt3dadd( -52.9968, -54.3884, -6.0305, 0.83 ) }
    dend_30 { pt3dadd( -55.0764, -54.6147, -4.70496, 0.55 ) }
    dend_30 { pt3dadd( -56.3244, -54.7259, -3.97462, 0.55 ) }
    dend_30 { pt3dadd( -59.0923, -54.9093, -2.36388, 0.55 ) }
    dend_30 { pt3dadd( -61.452, -54.9809, -1.102, 0.28 ) }
    dend_30 { pt3dadd( -63.4778, -54.9148, -0.132522, 1.38 ) }
    dend_30 { pt3dadd( -64.5081, -54.8405, 0.286619, 0.28 ) }
    dend_30 { pt3dadd( -65.9813, -54.6878, 0.81652, 0.83 ) }
    dend_30 { pt3dadd( -70.2469, -54.1558, 2.31802, 0.28 ) }
    dend_30 { pt3dadd( -72.9417, -53.7071, 3.29227, 0.55 ) }
    dend_30 { pt3dadd( -74.4563, -53.4078, 3.87665, 0.28 ) }
    dend_30 { pt3dadd( -75.6007, -53.216, 4.32031, 0.55 ) }
    dend_30 { pt3dadd( -76.4731, -53.0814, 4.62887, 0.28 ) }
    dend_30 { pt3dadd( -78.2928, -52.8908, 5.26104, 0.83 ) }
    dend_30 { pt3dadd( -80.5553, -52.7561, 5.91141, 0.28 ) }
    dend_30 { pt3dadd( -83.1673, -52.8487, 6.90596, 0.55 ) }
    dend_30 { pt3dadd( -85.481, -53.1096, 7.91135, 0.55 ) }
    dend_30 { pt3dadd( -86.4783, -53.3138, 8.36693, 0.55 ) }
    dend_30 { pt3dadd( -89.0955, -54.1081, 9.75158, 0.28 ) }
    dend_30 { pt3dadd( -90.4005, -54.6127, 10.5302, 0.83 ) }
    dend_30 { pt3dadd( -92.7814, -55.6502, 12.3282, 0.28 ) }
    dend_30 { pt3dadd( -93.1604, -55.8237, 12.6874, 0.28 ) }
    dend_30 { pt3dadd( -94.8339, -56.4678, 14.3848, 0.55 ) }
    dend_30 { pt3dadd( -96.9768, -57.318, 16.6005, 0.28 ) }
    dend_30 { pt3dadd( -98.4957, -57.8844, 18.1625, 0.55 ) }
    dend_30 { pt3dadd( -101.073, -58.8296, 20.8767, 0.28 ) }
    dend_30 { pt3dadd( -102.893, -59.3596, 22.7231, 0.55 ) }
    dend_30 { pt3dadd( -105.163, -59.951, 25.1382, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 54/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.356714, -30.9525, -8.54652, 0.55 ) }
    dend_26 { pt3dadd( 1.47376, -33.6994, -9.52767, 0.55 ) }
    dend_26 { pt3dadd( 2.38962, -35.9516, -10.3321, 0.83 ) }
    dend_26 { pt3dadd( 3.70267, -39.1805, -11.4854, 0.83 ) }
    dend_26 { pt3dadd( 4.70608, -41.6479, -12.3667, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 59/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.356714, -30.9525, -8.54652, 0.55 ) }
    dend_23 { pt3dadd( 0.912632, -29.5399, -11.1623, 0.55 ) }
    dend_23 { pt3dadd( 1.33278, -28.2873, -14.1899, 0.55 ) }
    dend_23 { pt3dadd( 1.41579, -27.935, -15.1076, 0.55 ) }
    dend_23 { pt3dadd( 1.49931, -27.2022, -17.4953, 0.55 ) }
    dend_23 { pt3dadd( 1.41151, -24.0651, -29.286, 0.55 ) }
    dend_23 { pt3dadd( 1.39026, -23.3057, -32.1402, 0.55 ) }
    dend_23 { pt3dadd( 1.02539, -20.7354, -42.9705, 0.55 ) }
    dend_23 { pt3dadd( 0.867806, -20.1015, -45.8972, 0.55 ) }
    dend_23 { pt3dadd( 0.127308, -18.0441, -56.6032, 0.55 ) }
    dend_23 { pt3dadd( -0.370123, -17.2505, -61.5122, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.09285, -36.1601, -10.9008, 0.83 ) }
    dend_16 { pt3dadd( -9.8719, -36.9115, -10.5936, 0.83 ) }
    dend_16 { pt3dadd( -11.5595, -37.5845, -10.3085, 0.83 ) }
    dend_16 { pt3dadd( -12.7428, -38.2328, -10.0544, 0.55 ) }
    dend_16 { pt3dadd( -14.5734, -39.2603, -9.65056, 0.55 ) }
    dend_16 { pt3dadd( -16.7686, -40.4178, -9.13731, 0.55 ) }
    dend_16 { pt3dadd( -18.4723, -41.2684, -8.79324, 0.55 ) }
    dend_16 { pt3dadd( -20.049, -42.006, -8.52355, 0.55 ) }
    dend_16 { pt3dadd( -25.0326, -44.0216, -7.8931, 0.55 ) }
    dend_16 { pt3dadd( -28.7948, -45.3948, -7.52665, 0.55 ) }
    dend_16 { pt3dadd( -30.4756, -45.9666, -7.41541, 0.55 ) }
    dend_16 { pt3dadd( -32.4574, -46.4907, -7.33926, 0.55 ) }
    dend_16 { pt3dadd( -33.8501, -46.7577, -7.32898, 0.83 ) }
    dend_16 { pt3dadd( -37.9155, -47.1166, -7.44022, 0.55 ) }
    dend_16 { pt3dadd( -39.6283, -47.0314, -7.5087, 0.55 ) }
    dend_16 { pt3dadd( -40.3876, -46.9575, -7.51976, 0.55 ) }
    dend_16 { pt3dadd( -42.0384, -46.7927, -7.51536, 0.55 ) }
    dend_16 { pt3dadd( -44.482, -46.5, -7.36987, 0.55 ) }
    dend_16 { pt3dadd( -47.6899, -46.0221, -7.0811, 0.55 ) }
    dend_16 { pt3dadd( -49.6136, -45.6531, -6.75016, 0.55 ) }
    dend_16 { pt3dadd( -50.7673, -45.4346, -6.54473, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 91/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.09285, -36.1601, -10.9008, 0.55 ) }
    dend_13 { pt3dadd( -8.3687, -36.057, -10.7491, 0.55 ) }
    dend_13 { pt3dadd( -9.46446, -35.7319, -10.0844, 0.55 ) }
    dend_13 { pt3dadd( -11.2361, -35.3323, -9.05654, 0.55 ) }
    dend_13 { pt3dadd( -12.1831, -35.122, -8.27944, 0.55 ) }
    dend_13 { pt3dadd( -13.3631, -34.8824, -7.15446, 0.83 ) }
    dend_13 { pt3dadd( -15.105, -34.601, -5.42258, 0.55 ) }
    dend_13 { pt3dadd( -16.2346, -34.4006, -4.24841, 0.55 ) }
    dend_13 { pt3dadd( -17.0389, -34.2451, -3.34657, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -20.1823, -33.7537, 0.508885, 0.55 ) }
    dend_13 { pt3dadd( -22.2175, -33.4958, 3.07316, 0.55 ) }
    dend_13 { pt3dadd( -23.7385, -33.3965, 5.0084, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 0.629644, 143.477, 23.7589, 0.28 ) }
    dend_7 { pt3dadd( -0.26194, 144.038, 23.3233, 0.28 ) }
    dend_7 { pt3dadd( -1.43679, 144.902, 22.7495, 0.55 ) }
    dend_7 { pt3dadd( -2.80032, 145.938, 22.0835, 0.28 ) }
    dend_7 { pt3dadd( -3.6892, 146.67, 21.6651, 0.83 ) }
    dend_7 { pt3dadd( -4.53911, 147.374, 21.2939, 0.28 ) }
    dend_7 { pt3dadd( -5.29602, 148.035, 20.9607, 0.83 ) }
    dend_7 { pt3dadd( -6.51465, 149.216, 20.4276, 0.55 ) }
    dend_7 { pt3dadd( -7.55777, 150.379, 19.8853, 0.55 ) }
    dend_7 { pt3dadd( -8.65796, 151.627, 19.1818, 0.28 ) }
    dend_7 { pt3dadd( -9.34331, 152.545, 18.4909, 0.55 ) }
    dend_7 { pt3dadd( -9.82564, 153.249, 17.8754, 0.28 ) }
    dend_7 { pt3dadd( -10.2421, 153.999, 17.2596, 0.83 ) }
    dend_7 { pt3dadd( -11.1006, 155.628, 15.9508, 0.28 ) }
    dend_7 { pt3dadd( -11.74, 156.92, 14.9709, 0.83 ) }
    dend_7 { pt3dadd( -13.2196, 159.956, 12.772, 0.28 ) }
    dend_7 { pt3dadd( -14.4862, 162.671, 10.8513, 0.55 ) }
    dend_7 { pt3dadd( -16.2375, 166.333, 8.39335, 0.55 ) }
    dend_7 { pt3dadd( -17.049, 167.992, 7.32912, 0.83 ) }
    dend_7 { pt3dadd( -17.7834, 169.356, 6.48658, 0.28 ) }
    dend_7 { pt3dadd( -18.4392, 170.518, 5.79197, 0.83 ) }
    dend_7 { pt3dadd( -19.7213, 172.546, 4.58055, 0.28 ) }
    dend_7 { pt3dadd( -21.073, 174.528, 3.18607, 0.83 ) }
    dend_7 { pt3dadd( -22.5039, 176.291, 1.64443, 0.28 ) }
    dend_7 { pt3dadd( -23.4304, 177.399, 0.609862, 0.55 ) }
    dend_7 { pt3dadd( -24.4029, 178.456, -0.473571, 0.28 ) }
    dend_7 { pt3dadd( -24.6296, 178.679, -0.718218, 0.83 ) }
    dend_7 { pt3dadd( -26.0518, 179.861, -2.07531, 0.28 ) }
    dend_7 { pt3dadd( -27.0219, 180.575, -3.11415, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 32/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 0.629644, 143.477, 23.7589, 0.55 ) }
    dend_4 { pt3dadd( 0.590201, 146.021, 24.4482, 0.55 ) }
    dend_4 { pt3dadd( 0.549516, 147.561, 24.9152, 0.55 ) }
    dend_4 { pt3dadd( 0.481212, 149.853, 25.5595, 0.55 ) }
    dend_4 { pt3dadd( 0.391211, 152.872, 26.4084, 0.55 ) }
    dend_4 { pt3dadd( 0.344769, 154.43, 26.8465, 0.55 ) }
    dend_4 { pt3dadd( 0.222247, 158.541, 28.0022, 0.55 ) }
    dend_4 { pt3dadd( 0.18616, 161.385, 28.7062, 0.55 ) }
    dend_4 { pt3dadd( 0.239272, 165.078, 29.6267, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -108.508, -222.199, -188.465, 0.55 ) }
    dend_33 { pt3dadd( -107.178, -223.901, -188.674, 0.55 ) }
    dend_33 { pt3dadd( -105.619, -225.875, -188.883, 0.55 ) }
    dend_33 { pt3dadd( -104.179, -227.689, -189.055, 0.28 ) }
    dend_33 { pt3dadd( -103.914, -228.008, -189.09, 0.55 ) }
    dend_33 { pt3dadd( -102.751, -229.377, -189.255, 0.28 ) }
    dend_33 { pt3dadd( -102.302, -229.874, -189.234, 0.55 ) }
    dend_33 { pt3dadd( -101.112, -231.098, -188.847, 0.28 ) }
    dend_33 { pt3dadd( -100.68, -231.506, -188.614, 0.55 ) }
    dend_33 { pt3dadd( -99.0955, -232.914, -187.602, 0.55 ) }
    dend_33 { pt3dadd( -98.69, -233.258, -187.297, 0.83 ) }
    dend_33 { pt3dadd( -95.3079, -235.974, -184.656, 0.28 ) }
    dend_33 { pt3dadd( -93.3502, -237.474, -183.064, 0.55 ) }
    dend_33 { pt3dadd( -93.213, -237.575, -182.951, 0.28 ) }
    dend_33 { pt3dadd( -92.5215, -238.084, -182.367, 0.83 ) }
    dend_33 { pt3dadd( -90.5735, -239.552, -180.612, 0.28 ) }
    dend_33 { pt3dadd( -89.5796, -240.309, -179.811, 0.55 ) }
    dend_33 { pt3dadd( -89.1707, -240.628, -179.559, 0.28 ) }
    dend_33 { pt3dadd( -88.2915, -241.331, -179.092, 0.28 ) }
    dend_33 { pt3dadd( -86.8169, -242.534, -178.255, 0.28 ) }
    dend_33 { pt3dadd( -85.2373, -243.895, -177.254, 0.28 ) }
    dend_33 { pt3dadd( -84.6431, -244.474, -176.869, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -108.508, -222.199, -188.465, 0.28 ) }
    dend_32 { pt3dadd( -109.141, -224.582, -189.709, 0.28 ) }
    dend_32 { pt3dadd( -109.795, -227.37, -191.093, 0.28 ) }
    dend_32 { pt3dadd( -110.108, -228.761, -191.793, 0.28 ) }
    dend_32 { pt3dadd( -110.362, -229.862, -192.337, 0.55 ) }
    dend_32 { pt3dadd( -111.347, -233.988, -194.243, 0.28 ) }
    dend_32 { pt3dadd( -111.487, -234.597, -194.483, 0.28 ) }
    dend_32 { pt3dadd( -111.91, -236.471, -195.027, 0.55 ) }
    dend_32 { pt3dadd( -112.181, -237.803, -195.284, 0.28 ) }
    dend_32 { pt3dadd( -112.327, -238.711, -195.469, 0.55 ) }
    dend_32 { pt3dadd( -112.641, -240.791, -195.861, 0.28 ) }
    dend_32 { pt3dadd( -112.857, -242.581, -196.138, 0.55 ) }
    dend_32 { pt3dadd( -113.256, -246.562, -196.923, 0.28 ) }
    dend_32 { pt3dadd( -113.309, -247.381, -197.157, 0.55 ) }
    dend_32 { pt3dadd( -113.4, -251.774, -198.614, 0.28 ) }
    dend_32 { pt3dadd( -113.365, -252.395, -198.857, 0.55 ) }
    dend_32 { pt3dadd( -113.167, -254.039, -199.594, 0.28 ) }
    dend_32 { pt3dadd( -112.975, -254.998, -200.054, 0.55 ) }
    dend_32 { pt3dadd( -112.098, -257.939, -201.482, 0.28 ) }
    dend_32 { pt3dadd( -111.883, -258.526, -201.738, 0.55 ) }
    dend_32 { pt3dadd( -110.467, -261.667, -202.848, 0.28 ) }
    dend_32 { pt3dadd( -110.105, -262.389, -203.092, 0.55 ) }
    dend_32 { pt3dadd( -109.089, -264.259, -203.672, 0.28 ) }
    dend_32 { pt3dadd( -108.938, -264.51, -203.742, 0.55 ) }
    dend_32 { pt3dadd( -108.294, -265.521, -203.959, 0.28 ) }
    dend_32 { pt3dadd( -107.986, -266.007, -204.075, 0.55 ) }
    dend_32 { pt3dadd( -106.564, -268.288, -204.711, 0.28 ) }
    dend_32 { pt3dadd( -106.418, -268.534, -204.77, 0.55 ) }
    dend_32 { pt3dadd( -105.579, -270.075, -205.124, 0.28 ) }
    dend_32 { pt3dadd( -105.442, -270.334, -205.173, 0.55 ) }
    dend_32 { pt3dadd( -104.726, -271.75, -205.396, 0.28 ) }
    dend_32 { pt3dadd( -104.475, -272.267, -205.53, 0.55 ) }
    dend_32 { pt3dadd( -103.327, -274.818, -206.405, 0.28 ) }
    dend_32 { pt3dadd( -102.893, -275.849, -206.822, 0.55 ) }
    dend_32 { pt3dadd( -102.384, -277.139, -207.412, 0.28 ) }
    dend_32 { pt3dadd( -102.083, -277.949, -207.787, 0.55 ) }
    dend_32 { pt3dadd( -100.871, -281.491, -209.48, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -100.331, -283.252, -210.277, 0.28 ) }
    dend_32 { pt3dadd( -100.176, -283.846, -210.533, 0.28 ) }
    dend_32 { pt3dadd( -99.9434, -284.716, -210.785, 0.55 ) }
    dend_32 { pt3dadd( -99.2811, -287.105, -211.298, 0.28 ) }
    dend_32 { pt3dadd( -99.089, -287.734, -211.403, 0.55 ) }
    dend_32 { pt3dadd( -98.0787, -290.795, -211.783, 0.28 ) }
    dend_32 { pt3dadd( -97.4593, -292.577, -211.982, 0.55 ) }
    dend_32 { pt3dadd( -95.0328, -299.44, -212.73, 0.28 ) }
    dend_32 { pt3dadd( -94.9356, -299.726, -212.761, 0.55 ) }
    dend_32 { pt3dadd( -94.3372, -301.468, -212.93, 0.28 ) }
    dend_32 { pt3dadd( -93.9846, -302.66, -213.025, 0.55 ) }
    dend_32 { pt3dadd( -93.29, -305.705, -213.202, 0.28 ) }
    dend_32 { pt3dadd( -92.9618, -307.394, -213.269, 0.28 ) }
    dend_32 { pt3dadd( -92.836, -308.922, -213.286, 0.55 ) }
    dend_32 { pt3dadd( -92.7531, -311.078, -213.261, 0.28 ) }
    dend_32 { pt3dadd( -92.8859, -314.541, -213.09, 0.28 ) }
    dend_32 { pt3dadd( -93.0074, -315.7, -213.016, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 17/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.70608, -41.6479, -12.3667, 0.55 ) }
    dend_28 { pt3dadd( 7.7979, -43.3819, -14.0105, 0.55 ) }
    dend_28 { pt3dadd( 8.98013, -44.0313, -14.6474, 0.55 ) }
    dend_28 { pt3dadd( 9.95669, -44.5459, -15.1793, 0.83 ) }
    dend_28 { pt3dadd( 12.0185, -45.5354, -16.2826, 0.55 ) }
    dend_28 { pt3dadd( 14.9218, -46.8082, -17.7916, 1.11 ) }
    dend_28 { pt3dadd( 17.434, -47.8065, -19.0361, 0.55 ) }
    dend_28 { pt3dadd( 19.0093, -48.3205, -19.7228, 0.55 ) }
    dend_28 { pt3dadd( 21.3255, -48.8192, -20.7662, 0.83 ) }
    dend_28 { pt3dadd( 22.4072, -48.9325, -21.2947, 0.55 ) }
    dend_28 { pt3dadd( 23.2698, -48.9234, -21.7309, 0.55 ) }
    dend_28 { pt3dadd( 24.6638, -48.7252, -22.4318, 0.55 ) }
    dend_28 { pt3dadd( 26.8626, -48.2926, -23.5102, 0.28 ) }
    dend_28 { pt3dadd( 29.1455, -47.7255, -24.5608, 0.83 ) }
    dend_28 { pt3dadd( 31.2601, -47.0853, -25.5206, 0.28 ) }
    dend_28 { pt3dadd( 32.5737, -46.6695, -26.1129, 0.55 ) }
    dend_28 { pt3dadd( 33.3115, -46.396, -26.435, 0.28 ) }
    dend_28 { pt3dadd( 34.3871, -45.9011, -26.871, 0.55 ) }
    dend_28 { pt3dadd( 36.0651, -44.9849, -27.4134, 0.55 ) }
    dend_28 { pt3dadd( 36.7631, -44.5143, -27.5886, 0.28 ) }
    dend_28 { pt3dadd( 37.5502, -43.9883, -27.7419, 0.55 ) }
    dend_28 { pt3dadd( 38.9698, -42.9817, -28.0525, 0.55 ) }
    dend_28 { pt3dadd( 40.2669, -42.0786, -28.3411, 1.11 ) }
    dend_28 { pt3dadd( 42.712, -40.5691, -28.6183, 0.55 ) }
    dend_28 { pt3dadd( 44.0522, -39.8987, -28.6615, 0.55 ) }
    dend_28 { pt3dadd( 45.4561, -39.3192, -28.6491, 0.55 ) }
    dend_28 { pt3dadd( 47.2895, -38.6554, -28.5759, 0.55 ) }
    dend_28 { pt3dadd( 49.5567, -37.8993, -28.4209, 1.11 ) }
    dend_28 { pt3dadd( 53.7807, -36.5577, -28.0405, 0.83 ) }
    dend_28 { pt3dadd( 56.9108, -35.5975, -27.698, 1.11 ) }
    dend_28 { pt3dadd( 58.9116, -34.9802, -27.4731, 0.28 ) }
    dend_28 { pt3dadd( 59.1399, -34.9091, -27.4493, 0.55 ) }
    dend_28 { pt3dadd( 60.6591, -34.5034, -27.3229, 0.28 ) }
    dend_28 { pt3dadd( 61.5763, -34.26, -27.3449, 0.55 ) }
    dend_28 { pt3dadd( 62.5338, -33.9725, -27.5119, 0.28 ) }
    dend_28 { pt3dadd( 63.4372, -33.6711, -27.6994, 0.55 ) }
    dend_28 { pt3dadd( 65.6367, -32.9216, -28.1748, 0.28 ) }
    dend_28 { pt3dadd( 66.743, -32.5061, -28.4989, 0.83 ) }
    dend_28 { pt3dadd( 69.263, -31.4468, -29.4093, 0.28 ) }
    dend_28 { pt3dadd( 71.4816, -30.3994, -30.312, 1.11 ) }
    dend_28 { pt3dadd( 73.0846, -29.5352, -30.9134, 0.28 ) }
    dend_28 { pt3dadd( 73.8957, -29.0442, -31.1697, 0.83 ) }
    dend_28 { pt3dadd( 76.8709, -27.0646, -31.8902, 0.55 ) }
    dend_28 { pt3dadd( 78.5119, -25.8663, -32.1168, 0.55 ) }
    dend_28 { pt3dadd( 79.4544, -25.1029, -32.1228, 0.55 ) }
    dend_28 { pt3dadd( 81.9099, -23.0624, -31.8728, 0.28 ) }
    dend_28 { pt3dadd( 83.1839, -21.9737, -31.6328, 0.55 ) }
    dend_28 { pt3dadd( 84.1286, -21.1372, -31.3841, 0.55 ) }
    dend_28 { pt3dadd( 85.1844, -20.2082, -31.0182, 0.55 ) }
    dend_28 { pt3dadd( 86.8933, -18.6445, -30.4872, 0.55 ) }
    dend_28 { pt3dadd( 88.3656, -17.2299, -30.1893, 0.55 ) }
    dend_28 { pt3dadd( 89.3093, -16.3397, -30.1431, 0.55 ) }
    dend_28 { pt3dadd( 90.2029, -15.5435, -30.1323, 0.55 ) }
    dend_28 { pt3dadd( 90.9691, -14.8948, -30.1204, 0.28 ) }
    dend_28 { pt3dadd( 91.7488, -14.2805, -30.1099, 0.55 ) }
    dend_28 { pt3dadd( 93.3428, -13.1368, -30.1025, 0.28 ) }
    dend_28 { pt3dadd( 94.9451, -12.0578, -30.1267, 0.83 ) }
    dend_28 { pt3dadd( 96.4937, -11.1364, -30.1437, 0.28 ) }
    dend_28 { pt3dadd( 97.3676, -10.68, -30.1525, 0.28 ) }
    dend_28 { pt3dadd( 98.1351, -10.2844, -30.1607, 0.28 ) }
    dend_28 { pt3dadd( 98.5499, -10.0681, -30.1681, 0.28 ) }
    dend_28 { pt3dadd( 99.4098, -9.64703, -30.1928, 0.28 ) }
    dend_28 { pt3dadd( 100.348, -9.16668, -30.2206, 0.28 ) }
    dend_28 { pt3dadd( 101.217, -8.72022, -30.254, 0.55 ) }
    dend_28 { pt3dadd( 102.133, -8.29669, -30.2176, 0.55 ) }
    dend_28 { pt3dadd( 103.892, -7.59591, -30.0591, 0.55 ) }
    dend_28 { pt3dadd( 104.99, -7.18654, -29.925, 0.55 ) }
    dend_28 { pt3dadd( 106.176, -6.74445, -29.7186, 0.28 ) }
    dend_28 { pt3dadd( 107.5, -6.24112, -29.4349, 0.28 ) }
    dend_28 { pt3dadd( 109.292, -5.63009, -29.0248, 0.28 ) }
    dend_28 { pt3dadd( 110.291, -5.36834, -28.8062, 0.55 ) }
    dend_28 { pt3dadd( 111.42, -5.08875, -28.5839, 0.28 ) }
    dend_28 { pt3dadd( 112.362, -4.85706, -28.4385, 0.28 ) }
    dend_28 { pt3dadd( 113.053, -4.72237, -28.3682, 0.28 ) }
    dend_28 { pt3dadd( 114.923, -4.35596, -28.2754, 0.55 ) }
    dend_28 { pt3dadd( 116.927, -4.02025, -28.2844, 0.28 ) }
    dend_28 { pt3dadd( 118.568, -3.78194, -28.3171, 0.83 ) }
    dend_28 { pt3dadd( 119.935, -3.59494, -28.3649, 0.28 ) }
    dend_28 { pt3dadd( 121.247, -3.42126, -28.4329, 0.83 ) }
    dend_28 { pt3dadd( 123.583, -3.0541, -28.5199, 0.28 ) }
    dend_28 { pt3dadd( 125.391, -2.6949, -28.5683, 0.83 ) }
    dend_28 { pt3dadd( 127.507, -2.20548, -28.61, 0.55 ) }
    dend_28 { pt3dadd( 128.439, -1.98157, -28.5644, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_28 { pt3dadd( 130.174, -1.53359, -28.3804, 0.83 ) }
    dend_28 { pt3dadd( 132.54, -0.935997, -27.9514, 0.28 ) }
    dend_28 { pt3dadd( 133.892, -0.650816, -27.6111, 0.28 ) }
    dend_28 { pt3dadd( 135.012, -0.406732, -27.2711, 0.55 ) }
    dend_28 { pt3dadd( 137.613, -0.0342112, -26.1192, 0.55 ) }
    dend_28 { pt3dadd( 138.651, 0.0410314, -25.578, 0.83 ) }
    dend_28 { pt3dadd( 139.983, 0.165972, -24.7301, 0.28 ) }
    dend_28 { pt3dadd( 141.046, 0.296209, -23.9461, 0.28 ) }
    dend_28 { pt3dadd( 142.21, 0.50988, -23.0596, 0.83 ) }
    dend_28 { pt3dadd( 145.749, 1.47601, -20.3663, 0.28 ) }
    dend_28 { pt3dadd( 146.539, 1.75969, -19.8186, 0.55 ) }
    dend_28 { pt3dadd( 149.855, 3.22942, -17.5568, 0.28 ) }
    dend_28 { pt3dadd( 151.199, 3.96187, -16.7128, 0.55 ) }
    dend_28 { pt3dadd( 152.65, 4.86946, -15.8658, 0.28 ) }
    dend_28 { pt3dadd( 153.553, 5.52454, -15.428, 0.55 ) }
    dend_28 { pt3dadd( 154.735, 6.63598, -15.1071, 0.28 ) }
    dend_28 { pt3dadd( 154.956, 6.90335, -15.0819, 0.55 ) }
    dend_28 { pt3dadd( 155.89, 8.39081, -15.2687, 0.28 ) }
    dend_28 { pt3dadd( 156.025, 8.70298, -15.3187, 0.55 ) }
    dend_28 { pt3dadd( 156.366, 9.86058, -15.4742, 0.28 ) }
    dend_28 { pt3dadd( 156.556, 10.5453, -15.4818, 0.55 ) }
    dend_28 { pt3dadd( 157.383, 13.8008, -15.282, 0.28 ) }
    dend_28 { pt3dadd( 157.573, 14.555, -15.2086, 0.55 ) }
    dend_28 { pt3dadd( 158.171, 16.9986, -14.9064, 0.28 ) }
    dend_28 { pt3dadd( 158.474, 18.1828, -14.7419, 0.55 ) }
    dend_28 { pt3dadd( 159.564, 22.3175, -14.0991, 0.28 ) }
    dend_28 { pt3dadd( 159.657, 22.6543, -14.0448, 0.55 ) }
    dend_28 { pt3dadd( 160.42, 25.0844, -13.5131, 0.28 ) }
    dend_28 { pt3dadd( 160.618, 25.7356, -13.3627, 0.55 ) }
    dend_28 { pt3dadd( 160.902, 26.7154, -13.1378, 0.28 ) }
    dend_28 { pt3dadd( 161.213, 27.9595, -12.8004, 0.55 ) }
    dend_28 { pt3dadd( 161.686, 30.2857, -12.2466, 0.28 ) }
    dend_28 { pt3dadd( 162.286, 33.2708, -11.4367, 0.55 ) }
    dend_28 { pt3dadd( 162.602, 34.8729, -10.9033, 0.28 ) }
    dend_28 { pt3dadd( 162.851, 36.1562, -10.4241, 0.55 ) }
    dend_28 { pt3dadd( 163.347, 38.719, -9.30752, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 36/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.70608, -41.6479, -12.3667, 0.55 ) }
    dend_27 { pt3dadd( 3.71751, -42.3549, -13.8114, 0.55 ) }
    dend_27 { pt3dadd( 2.99335, -42.8721, -14.8797, 0.55 ) }
    dend_27 { pt3dadd( 1.19301, -44.0699, -17.3815, 0.55 ) }
    dend_27 { pt3dadd( -2.76591, -46.6148, -22.5641, 0.55 ) }
    dend_27 { pt3dadd( -3.94085, -47.4338, -24.4182, 0.55 ) }
    dend_27 { pt3dadd( -4.48397, -47.8188, -25.3326, 0.55 ) }
    dend_27 { pt3dadd( -5.9869, -48.9202, -28.0854, 0.55 ) }
    dend_27 { pt3dadd( -6.76789, -49.4558, -29.5242, 0.55 ) }
    dend_27 { pt3dadd( -7.77248, -50.0494, -31.1792, 0.83 ) }
    dend_27 { pt3dadd( -11.5678, -52.093, -36.6403, 0.28 ) }
    dend_27 { pt3dadd( -12.1697, -52.3848, -37.5398, 0.28 ) }
    dend_27 { pt3dadd( -13.0679, -52.7179, -38.8682, 0.55 ) }
    dend_27 { pt3dadd( -14.5622, -53.17, -40.9207, 0.28 ) }
    dend_27 { pt3dadd( -16.4622, -53.7496, -43.5589, 1.11 ) }
    dend_27 { pt3dadd( -19.8473, -54.7984, -47.8743, 0.55 ) }
    dend_27 { pt3dadd( -21.419, -55.2703, -49.5565, 0.55 ) }
    dend_27 { pt3dadd( -22.2393, -55.5377, -50.6448, 0.55 ) }
    dend_27 { pt3dadd( -23.8284, -56.0555, -53.0566, 0.55 ) }
    dend_27 { pt3dadd( -25.7134, -56.7274, -56.3785, 0.83 ) }
    dend_27 { pt3dadd( -26.6946, -57.1018, -58.1885, 0.55 ) }
    dend_27 { pt3dadd( -27.6335, -57.499, -59.7042, 0.55 ) }
    dend_27 { pt3dadd( -31.425, -59.2726, -65.2142, 0.28 ) }
    dend_27 { pt3dadd( -32.3666, -59.7012, -66.4309, 0.55 ) }
    dend_27 { pt3dadd( -34.5012, -60.4941, -68.8784, 0.28 ) }
    dend_27 { pt3dadd( -36.0851, -61.0263, -70.3512, 0.83 ) }
    dend_27 { pt3dadd( -37.9489, -61.6829, -71.7853, 0.28 ) }
    dend_27 { pt3dadd( -39.7603, -62.4387, -72.7681, 0.28 ) }
    dend_27 { pt3dadd( -41.6972, -63.3087, -73.3541, 0.28 ) }
    dend_27 { pt3dadd( -42.571, -63.7062, -73.578, 0.55 ) }
    dend_27 { pt3dadd( -43.807, -64.2591, -73.8802, 0.55 ) }
    dend_27 { pt3dadd( -46.0724, -65.2458, -74.5321, 0.28 ) }
    dend_27 { pt3dadd( -48.0715, -66.0731, -75.1877, 0.83 ) }
    dend_27 { pt3dadd( -51.4594, -67.4455, -76.3657, 0.28 ) }
    dend_27 { pt3dadd( -52.7369, -67.919, -76.9069, 0.55 ) }
    dend_27 { pt3dadd( -55.5304, -68.826, -78.0672, 0.28 ) }
    dend_27 { pt3dadd( -57.305, -69.3325, -78.7944, 0.83 ) }
    dend_27 { pt3dadd( -59.2747, -69.7878, -79.5975, 0.28 ) }
    dend_27 { pt3dadd( -59.8029, -69.8882, -79.7895, 0.55 ) }
    dend_27 { pt3dadd( -63.9594, -70.5347, -81.0714, 0.28 ) }
    dend_27 { pt3dadd( -67.9718, -71.1351, -82.3004, 0.83 ) }
    dend_27 { pt3dadd( -69.8043, -71.3826, -82.8306, 0.28 ) }
    dend_27 { pt3dadd( -70.7005, -71.5044, -83.2025, 0.55 ) }
    dend_27 { pt3dadd( -72.6379, -71.7393, -84.1918, 0.28 ) }
    dend_27 { pt3dadd( -74.0236, -71.876, -84.982, 0.55 ) }
    dend_27 { pt3dadd( -77.4204, -72.1307, -87.082, 0.28 ) }
    dend_27 { pt3dadd( -78.2969, -72.1419, -87.7883, 0.55 ) }
    dend_27 { pt3dadd( -82.6982, -71.9382, -91.5667, 0.28 ) }
    dend_27 { pt3dadd( -83.5741, -71.8614, -92.3293, 0.55 ) }
    dend_27 { pt3dadd( -85.6056, -71.5795, -94.1024, 0.28 ) }
    dend_27 { pt3dadd( -87.7246, -71.1691, -95.8556, 0.55 ) }
    dend_27 { pt3dadd( -90.7426, -70.3027, -98.2034, 0.28 ) }
    dend_27 { pt3dadd( -92.8822, -69.5444, -99.8365, 0.28 ) }
    dend_27 { pt3dadd( -94.6851, -68.7274, -101.091, 0.83 ) }
    dend_27 { pt3dadd( -95.8232, -68.0994, -101.923, 0.28 ) }
    dend_27 { pt3dadd( -96.3766, -67.6795, -102.354, 0.55 ) }
    dend_27 { pt3dadd( -97.6471, -66.4416, -103.271, 0.28 ) }
    dend_27 { pt3dadd( -97.8226, -66.254, -103.361, 0.55 ) }
    dend_27 { pt3dadd( -98.7346, -65.1684, -103.813, 0.28 ) }
    dend_27 { pt3dadd( -99.7866, -63.9364, -104.287, 0.55 ) }
    dend_27 { pt3dadd( -101.61, -62.0167, -104.902, 0.28 ) }
    dend_27 { pt3dadd( -103.106, -60.4965, -105.241, 0.55 ) }
    dend_27 { pt3dadd( -105.592, -58.0364, -105.618, 0.28 ) }
    dend_27 { pt3dadd( -105.876, -57.7597, -105.652, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -107.157, -56.5417, -105.766, 0.28 ) }
    dend_27 { pt3dadd( -109.696, -54.1234, -105.931, 0.55 ) }
    dend_27 { pt3dadd( -112.35, -51.5299, -106.031, 0.28 ) }
    dend_27 { pt3dadd( -112.547, -51.3292, -106.04, 0.55 ) }
    dend_27 { pt3dadd( -113.356, -50.4786, -106.101, 0.28 ) }
    dend_27 { pt3dadd( -114.06, -49.7675, -106.183, 0.83 ) }
    dend_27 { pt3dadd( -116.083, -47.8326, -106.534, 0.28 ) }
    dend_27 { pt3dadd( -116.734, -47.2812, -106.712, 0.55 ) }
    dend_27 { pt3dadd( -118.125, -46.3124, -107.143, 0.28 ) }
    dend_27 { pt3dadd( -118.336, -46.1643, -107.208, 0.55 ) }
    dend_27 { pt3dadd( -120.111, -44.9472, -107.746, 0.28 ) }
    dend_27 { pt3dadd( -120.746, -44.5209, -107.856, 0.55 ) }
    dend_27 { pt3dadd( -122.416, -43.4715, -107.999, 0.28 ) }
    dend_27 { pt3dadd( -124.048, -42.4328, -108.066, 0.55 ) }
    dend_27 { pt3dadd( -126.458, -40.8927, -108.052, 0.28 ) }
    dend_27 { pt3dadd( -127.193, -40.4287, -108.032, 0.55 ) }
    dend_27 { pt3dadd( -131.082, -37.9558, -107.823, 0.28 ) }
    dend_27 { pt3dadd( -131.94, -37.4555, -107.775, 0.55 ) }
    dend_27 { pt3dadd( -134.556, -36.1069, -107.635, 0.28 ) }
    dend_27 { pt3dadd( -135.664, -35.6599, -107.613, 0.83 ) }
    dend_27 { pt3dadd( -137.309, -35.1127, -107.614, 0.28 ) }
    dend_27 { pt3dadd( -137.686, -35.0014, -107.636, 0.55 ) }
    dend_27 { pt3dadd( -139.535, -34.6627, -108.028, 0.28 ) }
    dend_27 { pt3dadd( -140.714, -34.5216, -108.281, 0.55 ) }
    dend_27 { pt3dadd( -143.11, -34.595, -108.837, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 25/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.370123, -17.2505, -61.5122, 0.28 ) }
    dend_25 { pt3dadd( -2.54907, -13.1198, -60.8919, 0.28 ) }
    dend_25 { pt3dadd( -3.49414, -11.2203, -60.5896, 0.83 ) }
    dend_25 { pt3dadd( -4.53412, -8.95829, -60.2416, 0.28 ) }
    dend_25 { pt3dadd( -5.03738, -7.73347, -60.2091, 0.55 ) }
    dend_25 { pt3dadd( -5.99492, -5.16818, -60.3162, 0.55 ) }
    dend_25 { pt3dadd( -6.41288, -3.92129, -60.416, 0.55 ) }
    dend_25 { pt3dadd( -7.02866, -1.44995, -60.7253, 0.28 ) }
    dend_25 { pt3dadd( -7.34989, 0.358739, -61.0684, 0.83 ) }
    dend_25 { pt3dadd( -7.77885, 5.17256, -62.2756, 0.28 ) }
    dend_25 { pt3dadd( -7.79523, 6.21883, -62.5694, 0.28 ) }
    dend_25 { pt3dadd( -7.71835, 7.24178, -62.8736, 0.55 ) }
    dend_25 { pt3dadd( -7.40311, 9.16069, -63.3897, 0.28 ) }
    dend_25 { pt3dadd( -7.12178, 10.1908, -63.6125, 0.55 ) }
    dend_25 { pt3dadd( -6.60635, 11.625, -63.7958, 0.28 ) }
    dend_25 { pt3dadd( -5.95189, 13.1378, -63.7932, 0.55 ) }
    dend_25 { pt3dadd( -4.88021, 15.5312, -63.7893, 0.28 ) }
    dend_25 { pt3dadd( -4.57817, 16.1815, -63.7989, 0.55 ) }
    dend_25 { pt3dadd( -3.91141, 17.5841, -63.8348, 0.28 ) }
    dend_25 { pt3dadd( -3.66998, 18.1019, -63.8506, 0.55 ) }
    dend_25 { pt3dadd( -2.82965, 19.9679, -63.8476, 0.28 ) }
    dend_25 { pt3dadd( -2.22326, 21.2934, -63.8185, 0.55 ) }
    dend_25 { pt3dadd( -0.680764, 24.7915, -63.7091, 0.28 ) }
    dend_25 { pt3dadd( 0.24675, 27.0202, -63.6272, 0.83 ) }
    dend_25 { pt3dadd( 1.30317, 29.5555, -63.5193, 0.28 ) }
    dend_25 { pt3dadd( 2.41757, 32.2021, -63.3949, 0.55 ) }
    dend_25 { pt3dadd( 2.71128, 32.8975, -63.3603, 0.55 ) }
    dend_25 { pt3dadd( 3.6996, 35.2695, -63.2384, 0.28 ) }
    dend_25 { pt3dadd( 4.29696, 36.7924, -63.1568, 0.55 ) }
    dend_25 { pt3dadd( 4.55335, 37.4696, -63.1107, 0.55 ) }
    dend_25 { pt3dadd( 5.37542, 39.7401, -62.9461, 0.28 ) }
    dend_25 { pt3dadd( 5.94692, 41.4919, -62.8311, 0.55 ) }
    dend_25 { pt3dadd( 6.4897, 43.2605, -62.6754, 0.55 ) }
    dend_25 { pt3dadd( 6.92537, 44.682, -62.5185, 0.28 ) }
    dend_25 { pt3dadd( 7.51251, 46.6699, -62.296, 0.55 ) }
    dend_25 { pt3dadd( 8.06952, 48.5343, -62.096, 0.28 ) }
    dend_25 { pt3dadd( 8.38781, 49.6243, -61.9824, 0.55 ) }
    dend_25 { pt3dadd( 8.67689, 50.6322, -61.8951, 0.55 ) }
    dend_25 { pt3dadd( 9.36874, 53.0734, -61.7488, 0.55 ) }
    dend_25 { pt3dadd( 9.941, 55.2009, -61.6283, 0.28 ) }
    dend_25 { pt3dadd( 10.4479, 56.9501, -61.5382, 0.28 ) }
    dend_25 { pt3dadd( 10.8455, 58.1957, -61.4356, 0.28 ) }
    dend_25 { pt3dadd( 11.1651, 59.0461, -61.3447, 0.28 ) }
    dend_25 { pt3dadd( 11.3768, 59.5809, -61.2554, 0.55 ) }
    dend_25 { pt3dadd( 12.062, 61.2245, -60.878, 0.28 ) }
    dend_25 { pt3dadd( 12.7816, 63.0876, -60.3288, 0.55 ) }
    dend_25 { pt3dadd( 12.9508, 63.5516, -60.1666, 0.55 ) }
    dend_25 { pt3dadd( 13.5413, 65.2073, -59.559, 0.28 ) }
    dend_25 { pt3dadd( 13.9898, 66.6179, -59.0417, 0.55 ) }
    dend_25 { pt3dadd( 14.2777, 67.6029, -58.6991, 0.55 ) }
    dend_25 { pt3dadd( 14.8565, 69.8751, -57.8441, 0.28 ) }
    dend_25 { pt3dadd( 15.0117, 70.59, -57.5478, 0.55 ) }
    dend_25 { pt3dadd( 15.2905, 71.8674, -56.9487, 0.28 ) }
    dend_25 { pt3dadd( 15.4203, 72.5016, -56.6359, 0.55 ) }
    dend_25 { pt3dadd( 15.8236, 74.5309, -55.6222, 0.28 ) }
    dend_25 { pt3dadd( 16.3305, 76.7844, -54.4898, 0.28 ) }
    dend_25 { pt3dadd( 16.5164, 77.4867, -54.1919, 0.55 ) }
    dend_25 { pt3dadd( 17.1534, 79.5574, -53.2375, 0.28 ) }
    dend_25 { pt3dadd( 17.5942, 80.8479, -52.6242, 0.28 ) }
    dend_25 { pt3dadd( 18.2645, 82.8712, -51.7148, 0.55 ) }
    dend_25 { pt3dadd( 18.7882, 84.4651, -50.9207, 0.28 ) }
    dend_25 { pt3dadd( 19.5913, 86.7851, -49.7444, 0.55 ) }
    dend_25 { pt3dadd( 20.9427, 90.5116, -47.8084, 0.55 ) }
    dend_25 { pt3dadd( 21.4398, 91.8416, -47.0145, 0.55 ) }
    dend_25 { pt3dadd( 22.0214, 93.3957, -46.0117, 0.55 ) }
    dend_25 { pt3dadd( 23.1406, 96.486, -43.6245, 0.55 ) }
    dend_25 { pt3dadd( 23.5438, 97.6815, -42.6252, 0.55 ) }
    dend_25 { pt3dadd( 24.0474, 99.2819, -41.2737, 0.55 ) }
    dend_25 { pt3dadd( 24.8207, 101.691, -39.5126, 0.55 ) }
    dend_25 { pt3dadd( 25.558, 103.672, -38.1063, 0.55 ) }
    dend_25 { pt3dadd( 26.8782, 106.796, -36.0393, 0.55 ) }
    dend_25 { pt3dadd( 27.7441, 108.868, -34.9135, 0.55 ) }
    dend_25 { pt3dadd( 28.3104, 110.232, -34.2308, 0.55 ) }
    dend_25 { pt3dadd( 29.2658, 112.444, -33.2785, 0.55 ) }
    dend_25 { pt3dadd( 29.6922, 113.364, -33.0092, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_25 { pt3dadd( 30.068, 114.182, -32.8354, 0.55 ) }
    dend_25 { pt3dadd( 30.6335, 115.558, -32.7359, 0.83 ) }
    dend_25 { pt3dadd( 31.0342, 116.8, -32.644, 0.55 ) }
    dend_25 { pt3dadd( 31.1165, 117.152, -32.6199, 0.55 ) }
    dend_25 { pt3dadd( 31.2268, 118.304, -32.602, 0.55 ) }
    dend_25 { pt3dadd( 31.2481, 119.598, -32.6268, 0.55 ) }
    dend_25 { pt3dadd( 31.261, 121.059, -32.7483, 0.55 ) }
    dend_25 { pt3dadd( 31.3112, 122.912, -32.9627, 0.55 ) }
    dend_25 { pt3dadd( 31.3331, 123.477, -33.0398, 0.55 ) }
    dend_25 { pt3dadd( 31.5352, 127.075, -33.4648, 0.28 ) }
    dend_25 { pt3dadd( 31.6367, 128.393, -33.6001, 0.55 ) }
    dend_25 { pt3dadd( 31.9347, 131.203, -33.8515, 0.55 ) }
    dend_25 { pt3dadd( 32.2295, 133.267, -34.0, 0.55 ) }
    dend_25 { pt3dadd( 32.3373, 133.776, -34.0236, 0.55 ) }
    dend_25 { pt3dadd( 32.7587, 135.447, -33.8438, 0.55 ) }
    dend_25 { pt3dadd( 33.0811, 136.814, -33.4607, 0.55 ) }
    dend_25 { pt3dadd( 33.1378, 137.142, -33.3372, 0.55 ) }
    dend_25 { pt3dadd( 33.1897, 138.237, -32.9571, 0.55 ) }
    dend_25 { pt3dadd( 33.1415, 139.742, -32.567, 0.55 ) }
    dend_25 { pt3dadd( 32.6911, 144.431, -31.7843, 0.55 ) }
    dend_25 { pt3dadd( 32.3989, 146.506, -31.6223, 0.55 ) }
    dend_25 { pt3dadd( 32.1761, 147.781, -31.5895, 0.55 ) }
    dend_25 { pt3dadd( 31.4338, 151.702, -31.6877, 0.55 ) }
    dend_25 { pt3dadd( 31.1777, 152.977, -31.744, 0.55 ) }
    dend_25 { pt3dadd( 30.819, 154.569, -31.9291, 0.55 ) }
    dend_25 { pt3dadd( 30.6011, 155.636, -32.2065, 0.55 ) }
    dend_25 { pt3dadd( 30.4437, 156.746, -32.4707, 0.55 ) }
    dend_25 { pt3dadd( 30.2294, 158.547, -32.7492, 0.55 ) }
    dend_25 { pt3dadd( 30.1401, 160.391, -32.5712, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.370123, -17.2505, -61.5122, 0.55 ) }
    dend_24 { pt3dadd( -2.01453, -17.5995, -63.072, 0.55 ) }
    dend_24 { pt3dadd( -2.62264, -17.7219, -63.6449, 0.28 ) }
    dend_24 { pt3dadd( -3.9421, -17.9392, -65.3338, 0.83 ) }
    dend_24 { pt3dadd( -4.76548, -17.9096, -67.1328, 0.28 ) }
    dend_24 { pt3dadd( -5.35411, -17.8009, -69.0709, 0.55 ) }
    dend_24 { pt3dadd( -6.12159, -17.5449, -71.9757, 0.28 ) }
    dend_24 { pt3dadd( -6.36151, -17.4255, -73.0272, 0.83 ) }
    dend_24 { pt3dadd( -8.02326, -16.2258, -80.9932, 0.83 ) }
    dend_24 { pt3dadd( -10.6075, -13.7357, -94.4288, 0.83 ) }
    dend_24 { pt3dadd( -12.6215, -11.0393, -106.692, 0.55 ) }
    dend_24 { pt3dadd( -13.0311, -10.3264, -109.486, 0.28 ) }
    dend_24 { pt3dadd( -13.1283, -10.0752, -110.288, 0.55 ) }
    dend_24 { pt3dadd( -13.4202, -8.94076, -113.207, 0.28 ) }
    dend_24 { pt3dadd( -13.4673, -8.47372, -114.045, 0.55 ) }
    dend_24 { pt3dadd( -13.5419, -5.86296, -116.744, 0.28 ) }
    dend_24 { pt3dadd( -13.5347, -4.25806, -117.812, 0.28 ) }
    dend_24 { pt3dadd( -13.4889, -2.48526, -119.175, 0.83 ) }
    dend_24 { pt3dadd( -13.3829, -0.53102, -120.954, 0.28 ) }
    dend_24 { pt3dadd( -13.3193, 0.222243, -121.742, 0.55 ) }
    dend_24 { pt3dadd( -13.1294, 2.39935, -124.262, 0.28 ) }
    dend_24 { pt3dadd( -13.091, 3.49447, -125.744, 0.55 ) }
    dend_24 { pt3dadd( -13.1315, 5.45105, -128.97, 0.28 ) }
    dend_24 { pt3dadd( -13.2789, 6.1836, -130.428, 0.55 ) }
    dend_24 { pt3dadd( -13.5964, 6.85141, -131.998, 0.28 ) }
    dend_24 { pt3dadd( -13.7455, 6.97222, -132.403, 0.55 ) }
    dend_24 { pt3dadd( -14.5816, 7.27253, -134.195, 0.55 ) }
    dend_24 { pt3dadd( -15.84, 7.317, -136.479, 0.55 ) }
    dend_24 { pt3dadd( -17.1024, 7.05656, -138.663, 0.28 ) }
    dend_24 { pt3dadd( -18.059, 6.67002, -140.382, 0.83 ) }
    dend_24 { pt3dadd( -20.5734, 5.21102, -145.125, 0.28 ) }
    dend_24 { pt3dadd( -21.1858, 4.73462, -146.41, 0.55 ) }
    dend_24 { pt3dadd( -22.0903, 3.89899, -148.444, 0.55 ) }
    dend_24 { pt3dadd( -23.2427, 2.7849, -151.069, 0.83 ) }
    dend_24 { pt3dadd( -24.2504, 1.79447, -153.4, 0.28 ) }
    dend_24 { pt3dadd( -24.3658, 1.69753, -153.663, 0.28 ) }
    dend_24 { pt3dadd( -27.0528, -0.239722, -159.351, 0.28 ) }
    dend_24 { pt3dadd( -28.1942, -0.898475, -161.569, 0.83 ) }
    dend_24 { pt3dadd( -29.8412, -1.61042, -164.566, 0.28 ) }
    dend_24 { pt3dadd( -31.2631, -2.07317, -166.781, 0.55 ) }
    dend_24 { pt3dadd( -32.8405, -2.42928, -169.021, 0.55 ) }
    dend_24 { pt3dadd( -33.7364, -2.57032, -170.212, 0.55 ) }
    dend_24 { pt3dadd( -34.1596, -2.61888, -170.731, 0.83 ) }
    dend_24 { pt3dadd( -35.9999, -2.90252, -172.966, 0.28 ) }
    dend_24 { pt3dadd( -36.7709, -3.02268, -173.964, 0.55 ) }
    dend_24 { pt3dadd( -39.075, -3.39324, -177.151, 0.28 ) }
    dend_24 { pt3dadd( -40.041, -3.55141, -178.546, 0.55 ) }
    dend_24 { pt3dadd( -42.0258, -3.80827, -181.541, 0.28 ) }
    dend_24 { pt3dadd( -42.3694, -3.85148, -182.034, 0.55 ) }
    dend_24 { pt3dadd( -45.7053, -4.2863, -186.382, 0.28 ) }
    dend_24 { pt3dadd( -46.1021, -4.33319, -186.917, 0.83 ) }
    dend_24 { pt3dadd( -47.763, -4.48541, -189.017, 0.28 ) }
    dend_24 { pt3dadd( -49.1396, -4.5867, -190.86, 0.55 ) }
    dend_24 { pt3dadd( -52.7247, -4.31823, -196.022, 0.28 ) }
    dend_24 { pt3dadd( -53.201, -4.27114, -198.471, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 84/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -50.7673, -45.4346, -6.54473, 0.55 ) }
    dend_18 { pt3dadd( -54.6556, -45.3618, -7.11393, 0.55 ) }
    dend_18 { pt3dadd( -56.3999, -45.3292, -7.36929, 0.55 ) }
    dend_18 { pt3dadd( -58.2811, -45.294, -7.64467, 0.55 ) }
    dend_18 { pt3dadd( -60.8543, -45.2459, -8.02137, 1.11 ) }
    dend_18 { pt3dadd( -62.252, -45.2198, -8.22598, 0.55 ) }
    dend_18 { pt3dadd( -64.8308, -45.1715, -8.6035, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -50.7673, -45.4346, -6.54473, 0.55 ) }
    dend_17 { pt3dadd( -51.3286, -44.0821, -6.72349, 0.55 ) }
    dend_17 { pt3dadd( -51.9356, -42.7237, -6.9096, 0.28 ) }
    dend_17 { pt3dadd( -52.3254, -41.8798, -7.05936, 0.55 ) }
    dend_17 { pt3dadd( -53.163, -40.1592, -7.37413, 0.28 ) }
    dend_17 { pt3dadd( -53.8077, -38.936, -7.55561, 0.55 ) }
    dend_17 { pt3dadd( -55.6308, -35.5164, -7.974, 0.28 ) }
    dend_17 { pt3dadd( -55.9774, -34.9031, -8.05018, 0.55 ) }
    dend_17 { pt3dadd( -57.1668, -32.8764, -8.29062, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -57.5783, -32.1997, -8.36704, 0.55 ) }
    dend_17 { pt3dadd( -59.878, -28.4656, -8.71075, 0.28 ) }
    dend_17 { pt3dadd( -60.3904, -27.6269, -8.78271, 0.55 ) }
    dend_17 { pt3dadd( -61.5699, -25.7613, -8.8307, 0.28 ) }
    dend_17 { pt3dadd( -62.1746, -24.7947, -8.84824, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 5/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -23.7385, -33.3965, 5.0084, 0.55 ) }
    dend_15 { pt3dadd( -27.3307, -34.112, 6.34651, 0.55 ) }
    dend_15 { pt3dadd( -28.6319, -34.3945, 7.20013, 0.83 ) }
    dend_15 { pt3dadd( -30.4748, -34.7261, 8.61324, 0.55 ) }
    dend_15 { pt3dadd( -31.8184, -34.8892, 9.77242, 0.55 ) }
    dend_15 { pt3dadd( -34.0534, -35.0465, 11.6961, 0.55 ) }
    dend_15 { pt3dadd( -35.5569, -35.0643, 13.0954, 0.83 ) }
    dend_15 { pt3dadd( -39.3849, -34.7982, 17.1339, 0.55 ) }
    dend_15 { pt3dadd( -40.2783, -34.6956, 18.1768, 0.83 ) }
    dend_15 { pt3dadd( -42.0642, -34.4283, 20.2597, 0.28 ) }
    dend_15 { pt3dadd( -44.0315, -34.1737, 22.3243, 0.55 ) }
    dend_15 { pt3dadd( -46.1718, -34.0046, 24.1991, 0.28 ) }
    dend_15 { pt3dadd( -46.94, -34.055, 24.7636, 0.55 ) }
    dend_15 { pt3dadd( -50.0883, -34.433, 26.6095, 0.55 ) }
    dend_15 { pt3dadd( -52.6777, -34.9422, 28.0281, 0.55 ) }
    dend_15 { pt3dadd( -55.6754, -35.8062, 29.4437, 0.55 ) }
    dend_15 { pt3dadd( -57.252, -36.4053, 30.0968, 0.55 ) }
    dend_15 { pt3dadd( -60.8547, -38.0143, 31.2397, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -23.7385, -33.3965, 5.0084, 0.55 ) }
    dend_14 { pt3dadd( -24.0724, -32.4132, 5.27349, 0.55 ) }
    dend_14 { pt3dadd( -24.5925, -30.9796, 5.75907, 0.28 ) }
    dend_14 { pt3dadd( -24.9472, -29.9965, 6.10359, 0.55 ) }
    dend_14 { pt3dadd( -25.7532, -27.7923, 6.85203, 0.55 ) }
    dend_14 { pt3dadd( -27.0429, -24.5165, 7.92853, 0.55 ) }
    dend_14 { pt3dadd( -27.8261, -22.6604, 8.55756, 0.55 ) }
    dend_14 { pt3dadd( -28.662, -20.6571, 9.24975, 0.28 ) }
    dend_14 { pt3dadd( -29.5374, -18.4518, 9.97038, 0.28 ) }
    dend_14 { pt3dadd( -30.0798, -16.9949, 10.3409, 0.28 ) }
    dend_14 { pt3dadd( -30.5513, -15.7466, 10.5088, 0.55 ) }
    dend_14 { pt3dadd( -31.36, -13.685, 10.5134, 0.55 ) }
    dend_14 { pt3dadd( -32.1103, -11.6514, 10.4263, 0.55 ) }
    dend_14 { pt3dadd( -32.7348, -9.94506, 10.2267, 0.55 ) }
    dend_14 { pt3dadd( -33.5419, -7.66399, 9.90556, 0.55 ) }
    dend_14 { pt3dadd( -34.2395, -5.48608, 9.58967, 0.28 ) }
    dend_14 { pt3dadd( -34.8091, -3.6368, 9.334, 0.55 ) }
    dend_14 { pt3dadd( -35.2723, -2.15049, 9.1457, 0.55 ) }
    dend_14 { pt3dadd( -35.9937, -0.127071, 8.94268, 0.28 ) }
    dend_14 { pt3dadd( -36.6823, 1.79998, 8.91725, 0.55 ) }
    dend_14 { pt3dadd( -37.2659, 3.50044, 9.0246, 0.28 ) }
    dend_14 { pt3dadd( -38.1024, 6.04376, 9.30281, 0.55 ) }
    dend_14 { pt3dadd( -38.9065, 8.36144, 9.60636, 0.55 ) }
    dend_14 { pt3dadd( -40.0189, 11.3314, 9.94668, 0.55 ) }
    dend_14 { pt3dadd( -41.199, 14.0796, 10.2123, 0.28 ) }
    dend_14 { pt3dadd( -41.7743, 15.3113, 10.2237, 0.55 ) }
    dend_14 { pt3dadd( -42.1353, 16.0816, 10.162, 0.28 ) }
    dend_14 { pt3dadd( -42.6952, 17.3244, 9.93811, 0.55 ) }
    dend_14 { pt3dadd( -43.6012, 19.3944, 9.41279, 0.28 ) }
    dend_14 { pt3dadd( -44.4971, 21.7392, 8.51443, 0.83 ) }
    dend_14 { pt3dadd( -45.7689, 25.1936, 6.89869, 0.55 ) }
    dend_14 { pt3dadd( -46.8049, 28.4878, 5.39037, 0.55 ) }
    dend_14 { pt3dadd( -47.2973, 30.6307, 4.44418, 0.28 ) }
    dend_14 { pt3dadd( -47.4707, 31.6591, 4.02158, 0.55 ) }
    dend_14 { pt3dadd( -48.0201, 35.8544, 2.52572, 0.28 ) }
    dend_14 { pt3dadd( -48.108, 36.8983, 2.17464, 0.55 ) }
    dend_14 { pt3dadd( -48.4482, 40.5556, 1.06312, 0.55 ) }
    dend_14 { pt3dadd( -48.7286, 43.7108, 0.0852089, 0.28 ) }
    dend_14 { pt3dadd( -48.9258, 45.5473, -0.377263, 0.55 ) }
    dend_14 { pt3dadd( -49.1338, 47.0798, -0.625848, 0.28 ) }
    dend_14 { pt3dadd( -49.4138, 48.5018, -0.614443, 0.55 ) }
    dend_14 { pt3dadd( -50.0314, 50.7887, -0.473429, 0.28 ) }
    dend_14 { pt3dadd( -50.4444, 51.8522, -0.35781, 0.55 ) }
    dend_14 { pt3dadd( -51.4641, 54.0382, 0.00731111, 0.28 ) }
    dend_14 { pt3dadd( -52.6268, 56.4381, 0.32318, 0.55 ) }
    dend_14 { pt3dadd( -54.1888, 59.6519, 0.670687, 0.28 ) }
    dend_14 { pt3dadd( -55.3005, 61.921, 0.921951, 0.55 ) }
    dend_14 { pt3dadd( -56.074, 63.7252, 1.02293, 0.28 ) }
    dend_14 { pt3dadd( -56.567, 64.9361, 1.07345, 0.28 ) }
    dend_14 { pt3dadd( -57.3989, 67.2172, 1.02927, 0.55 ) }
    dend_14 { pt3dadd( -57.9888, 69.1096, 0.933645, 0.28 ) }
    dend_14 { pt3dadd( -58.2462, 70.1636, 0.802474, 0.55 ) }
    dend_14 { pt3dadd( -58.6728, 72.4771, 0.628222, 0.28 ) }
    dend_14 { pt3dadd( -59.076, 75.4433, 0.410959, 0.55 ) }
    dend_14 { pt3dadd( -59.2937, 77.994, 0.19188, 0.28 ) }
    dend_14 { pt3dadd( -59.3112, 78.7535, 0.143207, 0.55 ) }
    dend_14 { pt3dadd( -59.2724, 81.8277, -0.21772, 0.28 ) }
    dend_14 { pt3dadd( -59.1254, 83.7531, -0.517282, 0.55 ) }
    dend_14 { pt3dadd( -58.9286, 86.264, -0.996763, 0.28 ) }
    dend_14 { pt3dadd( -58.819, 87.2021, -1.21183, 0.55 ) }
    dend_14 { pt3dadd( -58.3459, 90.7062, -1.953, 0.28 ) }
    dend_14 { pt3dadd( -58.1302, 92.3387, -2.2418, 0.55 ) }
    dend_14 { pt3dadd( -57.7276, 95.2689, -2.61695, 0.28 ) }
    dend_14 { pt3dadd( -57.4875, 97.5283, -2.83004, 0.55 ) }
    dend_14 { pt3dadd( -57.2935, 99.8067, -2.99688, 0.55 ) }
    dend_14 { pt3dadd( -57.2455, 101.157, -3.05817, 0.55 ) }
    dend_14 { pt3dadd( -57.2175, 103.212, -3.14308, 0.28 ) }
    dend_14 { pt3dadd( -57.2393, 104.942, -3.15945, 1.11 ) }
    dend_14 { pt3dadd( -57.3777, 109.612, -3.07418, 0.55 ) }
    dend_14 { pt3dadd( -57.4503, 112.492, -2.94432, 0.28 ) }
    dend_14 { pt3dadd( -57.5678, 114.823, -2.803, 0.55 ) }
    dend_14 { pt3dadd( -57.7249, 117.812, -2.58045, 0.28 ) }
    dend_14 { pt3dadd( -57.8087, 119.121, -2.46627, 0.55 ) }
    dend_14 { pt3dadd( -57.9678, 121.699, -2.17462, 0.55 ) }
    dend_14 { pt3dadd( -58.0683, 123.441, -2.0041, 0.28 ) }
    dend_14 { pt3dadd( -58.1044, 124.245, -1.96466, 0.55 ) }
    dend_14 { pt3dadd( -58.1596, 126.934, -1.933, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_14 { pt3dadd( -58.2125, 127.917, -1.96962, 0.55 ) }
    dend_14 { pt3dadd( -58.3434, 129.906, -2.08253, 0.28 ) }
    dend_14 { pt3dadd( -58.5586, 132.214, -2.34149, 0.55 ) }
    dend_14 { pt3dadd( -58.8075, 135.324, -2.86913, 0.55 ) }
    dend_14 { pt3dadd( -59.0036, 138.017, -3.50972, 0.28 ) }
    dend_14 { pt3dadd( -59.1363, 139.837, -4.03415, 0.55 ) }
    dend_14 { pt3dadd( -59.2862, 142.872, -4.89971, 0.28 ) }
    dend_14 { pt3dadd( -59.4169, 144.978, -5.46851, 0.55 ) }
    dend_14 { pt3dadd( -59.5174, 147.478, -6.07947, 0.83 ) }
    dend_14 { pt3dadd( -59.6104, 150.337, -6.71114, 0.28 ) }
    dend_14 { pt3dadd( -59.6168, 150.689, -6.80682, 0.55 ) }
    dend_14 { pt3dadd( -59.6314, 153.197, -7.47348, 0.55 ) }
    dend_14 { pt3dadd( -59.6372, 155.022, -7.95095, 0.55 ) }
    dend_14 { pt3dadd( -59.7189, 157.467, -8.448, 0.28 ) }
    dend_14 { pt3dadd( -59.8125, 160.023, -8.75861, 0.55 ) }
    dend_14 { pt3dadd( -59.8215, 162.492, -8.87725, 0.28 ) }
    dend_14 { pt3dadd( -59.7894, 164.685, -8.91732, 0.55 ) }
    dend_14 { pt3dadd( -59.7394, 166.734, -8.90237, 0.28 ) }
    dend_14 { pt3dadd( -59.655, 168.814, -8.83102, 0.55 ) }
    dend_14 { pt3dadd( -59.4901, 172.645, -8.52314, 0.55 ) }
    dend_14 { pt3dadd( -59.2384, 176.458, -8.13322, 0.28 ) }
    dend_14 { pt3dadd( -59.1025, 177.796, -7.90245, 0.28 ) }
    dend_14 { pt3dadd( -58.9657, 178.85, -7.67796, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.239272, 165.078, 29.6267, 0.55 ) }
    dend_6 { pt3dadd( -0.625217, 166.344, 29.2722, 0.55 ) }
    dend_6 { pt3dadd( -0.795944, 166.594, 29.2022, 0.55 ) }
    dend_6 { pt3dadd( -1.28851, 167.316, 29.0002, 0.28 ) }
    dend_6 { pt3dadd( -2.0458, 168.425, 28.6897, 0.55 ) }
    dend_6 { pt3dadd( -2.80675, 169.54, 28.3776, 0.28 ) }
    dend_6 { pt3dadd( -4.03321, 171.337, 27.8747, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 30/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.239272, 165.078, 29.6267, 0.55 ) }
    dend_5 { pt3dadd( 0.629094, 166.857, 29.7011, 0.55 ) }
    dend_5 { pt3dadd( 0.871064, 168.447, 29.7676, 0.55 ) }
    dend_5 { pt3dadd( 1.13073, 170.095, 29.8346, 0.55 ) }
    dend_5 { pt3dadd( 1.48196, 172.369, 29.9327, 0.55 ) }
    dend_5 { pt3dadd( 2.07029, 175.722, 30.0261, 0.55 ) }
    dend_5 { pt3dadd( 2.22966, 176.547, 30.0405, 0.28 ) }
    dend_5 { pt3dadd( 2.42454, 177.778, 30.0492, 0.55 ) }
    dend_5 { pt3dadd( 2.83572, 180.32, 30.0272, 0.55 ) }
    dend_5 { pt3dadd( 3.02657, 181.426, 29.9992, 0.55 ) }
    dend_5 { pt3dadd( 3.33776, 182.862, 29.9289, 0.55 ) }
    dend_5 { pt3dadd( 3.6472, 184.237, 29.8231, 0.55 ) }
    dend_5 { pt3dadd( 3.93789, 185.542, 29.6931, 0.83 ) }
    dend_5 { pt3dadd( 4.08913, 186.301, 29.608, 0.28 ) }
    dend_5 { pt3dadd( 4.20429, 187.056, 29.4696, 0.55 ) }
    dend_5 { pt3dadd( 4.26938, 187.563, 29.3539, 0.28 ) }
    dend_5 { pt3dadd( 4.3729, 188.565, 29.1612, 0.55 ) }
    dend_5 { pt3dadd( 4.55582, 189.832, 28.9402, 0.28 ) }
    dend_5 { pt3dadd( 4.67546, 190.512, 28.814, 0.55 ) }
    dend_5 { pt3dadd( 5.13339, 192.812, 28.3985, 0.28 ) }
    dend_5 { pt3dadd( 5.26815, 193.354, 28.2963, 0.55 ) }
    dend_5 { pt3dadd( 5.76133, 194.96, 28.0009, 0.28 ) }
    dend_5 { pt3dadd( 6.16062, 195.987, 27.8137, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 53/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -64.8308, -45.1715, -8.6035, 0.55 ) }
    dend_20 { pt3dadd( -66.6611, -45.62, -10.0435, 0.55 ) }
    dend_20 { pt3dadd( -69.8618, -46.4437, -12.4561, 0.28 ) }
    dend_20 { pt3dadd( -71.079, -46.7834, -13.3133, 0.55 ) }
    dend_20 { pt3dadd( -72.8437, -47.2759, -14.4505, 1.38 ) }
    dend_20 { pt3dadd( -74.7798, -47.7955, -15.5583, 0.55 ) }
    dend_20 { pt3dadd( -75.4468, -47.9469, -15.8726, 0.28 ) }
    dend_20 { pt3dadd( -75.8876, -48.0394, -16.0163, 0.55 ) }
    dend_20 { pt3dadd( -76.9157, -48.2317, -16.0928, 0.28 ) }
    dend_20 { pt3dadd( -77.8003, -48.4241, -16.0979, 0.55 ) }
    dend_20 { pt3dadd( -79.2387, -48.7852, -16.0037, 0.55 ) }
    dend_20 { pt3dadd( -81.2755, -49.2857, -15.8329, 0.55 ) }
    dend_20 { pt3dadd( -83.126, -49.7414, -15.6966, 0.55 ) }
    dend_20 { pt3dadd( -83.5305, -49.8479, -15.6714, 1.11 ) }
    dend_20 { pt3dadd( -87.279, -50.9272, -15.4705, 0.28 ) }
    dend_20 { pt3dadd( -88.846, -51.4188, -15.3891, 0.83 ) }
    dend_20 { pt3dadd( -90.3134, -51.9146, -15.2827, 0.28 ) }
    dend_20 { pt3dadd( -91.3443, -52.2459, -15.2315, 0.55 ) }
    dend_20 { pt3dadd( -92.2103, -52.4699, -15.1807, 0.28 ) }
    dend_20 { pt3dadd( -93.5163, -52.7119, -15.0931, 0.55 ) }
    dend_20 { pt3dadd( -94.8449, -52.8367, -14.9363, 0.28 ) }
    dend_20 { pt3dadd( -95.6929, -52.8881, -14.8167, 0.83 ) }
    dend_20 { pt3dadd( -98.6647, -52.9839, -14.1689, 0.28 ) }
    dend_20 { pt3dadd( -100.136, -52.9675, -13.755, 0.83 ) }
    dend_20 { pt3dadd( -101.995, -52.8453, -13.1138, 0.28 ) }
    dend_20 { pt3dadd( -103.373, -52.7091, -12.5567, 0.83 ) }
    dend_20 { pt3dadd( -104.76, -52.5279, -11.8432, 0.55 ) }
    dend_20 { pt3dadd( -106.296, -52.2603, -10.8815, 0.28 ) }
    dend_20 { pt3dadd( -106.885, -52.142, -10.4011, 0.55 ) }
    dend_20 { pt3dadd( -107.738, -51.9532, -9.65418, 0.28 ) }
    dend_20 { pt3dadd( -108.289, -51.8278, -9.1525, 0.55 ) }
    dend_20 { pt3dadd( -109.956, -51.509, -7.83479, 0.28 ) }
    dend_20 { pt3dadd( -110.842, -51.3749, -7.25808, 0.55 ) }
    dend_20 { pt3dadd( -112.293, -51.2206, -6.4961, 0.28 ) }
    dend_20 { pt3dadd( -112.568, -51.2115, -6.35708, 0.55 ) }
    dend_20 { pt3dadd( -113.361, -51.258, -5.98293, 0.28 ) }
    dend_20 { pt3dadd( -115.629, -51.5971, -5.06874, 0.55 ) }
    dend_20 { pt3dadd( -116.791, -51.8779, -4.67413, 0.28 ) }
    dend_20 { pt3dadd( -117.962, -52.2848, -4.3311, 0.83 ) }
    dend_20 { pt3dadd( -120.546, -53.4467, -3.72894, 0.28 ) }
    dend_20 { pt3dadd( -121.462, -53.9456, -3.53518, 0.55 ) }
    dend_20 { pt3dadd( -122.81, -54.7812, -3.30716, 0.28 ) }
    dend_20 { pt3dadd( -124.192, -55.7468, -3.12101, 0.83 ) }
    dend_20 { pt3dadd( -125.774, -56.8583, -2.97067, 0.55 ) }
    dend_20 { pt3dadd( -127.055, -57.784, -2.88384, 0.28 ) }
    dend_20 { pt3dadd( -127.692, -58.2997, -2.85366, 0.55 ) }
    dend_20 { pt3dadd( -128.683, -59.1632, -2.76248, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_20 { pt3dadd( -129.401, -59.9727, -2.61892, 0.55 ) }
    dend_20 { pt3dadd( -130.38, -61.4562, -2.35121, 0.28 ) }
    dend_20 { pt3dadd( -130.963, -62.6519, -2.10835, 0.55 ) }
    dend_20 { pt3dadd( -131.801, -64.9387, -1.68126, 0.28 ) }
    dend_20 { pt3dadd( -132.069, -65.7989, -1.55289, 0.55 ) }
    dend_20 { pt3dadd( -132.73, -68.3073, -1.20477, 0.28 ) }
    dend_20 { pt3dadd( -132.848, -68.7885, -1.15049, 0.83 ) }
    dend_20 { pt3dadd( -133.248, -70.4512, -0.947175, 0.28 ) }
    dend_20 { pt3dadd( -133.413, -71.0423, -0.910253, 0.55 ) }
    dend_20 { pt3dadd( -133.965, -72.8272, -0.850573, 0.28 ) }
    dend_20 { pt3dadd( -134.109, -73.2363, -0.831972, 0.55 ) }
    dend_20 { pt3dadd( -135.021, -75.6353, -0.740403, 0.28 ) }
    dend_20 { pt3dadd( -135.601, -77.1431, -0.654877, 0.55 ) }
    dend_20 { pt3dadd( -136.385, -79.2161, -0.520788, 0.28 ) }
    dend_20 { pt3dadd( -137.005, -80.8611, -0.406415, 0.55 ) }
    dend_20 { pt3dadd( -137.561, -82.3345, -0.315921, 0.28 ) }
    dend_20 { pt3dadd( -137.67, -82.6317, -0.300866, 0.55 ) }
    dend_20 { pt3dadd( -138.126, -83.8399, -0.261094, 0.28 ) }
    dend_20 { pt3dadd( -138.551, -85.0018, -0.214928, 0.55 ) }
    dend_20 { pt3dadd( -138.774, -85.6155, -0.154189, 0.28 ) }
    dend_20 { pt3dadd( -139.01, -86.3417, -0.0764241, 0.55 ) }
    dend_20 { pt3dadd( -139.451, -87.8291, 0.0828533, 0.28 ) }
    dend_20 { pt3dadd( -139.717, -88.7568, 0.229349, 0.55 ) }
    dend_20 { pt3dadd( -140.037, -90.0085, 0.454422, 0.28 ) }
    dend_20 { pt3dadd( -140.194, -90.6566, 0.627768, 0.55 ) }
    dend_20 { pt3dadd( -140.391, -91.584, 0.908588, 0.28 ) }
    dend_20 { pt3dadd( -140.525, -92.1972, 1.08986, 0.55 ) }
    dend_20 { pt3dadd( -140.89, -93.6502, 1.4903, 0.28 ) }
    dend_20 { pt3dadd( -141.227, -94.8477, 1.74469, 0.55 ) }
    dend_20 { pt3dadd( -141.861, -96.938, 1.97809, 0.28 ) }
    dend_20 { pt3dadd( -142.071, -97.5557, 1.99449, 0.55 ) }
    dend_20 { pt3dadd( -142.553, -98.7967, 1.93126, 0.28 ) }
    dend_20 { pt3dadd( -142.743, -99.2378, 1.87432, 0.55 ) }
    dend_20 { pt3dadd( -143.425, -100.608, 1.58039, 0.28 ) }
    dend_20 { pt3dadd( -143.959, -101.619, 1.30436, 0.83 ) }
    dend_20 { pt3dadd( -144.761, -103.213, 0.736277, 0.28 ) }
    dend_20 { pt3dadd( -145.052, -103.802, 0.532679, 0.55 ) }
    dend_20 { pt3dadd( -145.437, -104.66, 0.264703, 0.28 ) }
    dend_20 { pt3dadd( -145.73, -105.366, 0.0598879, 0.55 ) }
    dend_20 { pt3dadd( -146.196, -106.641, -0.316526, 1.11 ) }
    dend_20 { pt3dadd( -146.778, -108.327, -0.811187, 0.28 ) }
    dend_20 { pt3dadd( -146.898, -108.742, -0.929328, 0.55 ) }
    dend_20 { pt3dadd( -147.342, -110.349, -1.34685, 0.28 ) }
    dend_20 { pt3dadd( -147.832, -112.109, -1.83668, 0.55 ) }
    dend_20 { pt3dadd( -148.189, -113.315, -2.20976, 0.28 ) }
    dend_20 { pt3dadd( -148.537, -114.311, -2.66029, 0.55 ) }
    dend_20 { pt3dadd( -148.799, -114.988, -3.05139, 0.28 ) }
    dend_20 { pt3dadd( -149.076, -115.654, -3.55189, 0.55 ) }
    dend_20 { pt3dadd( -149.807, -117.207, -4.97619, 0.28 ) }
    dend_20 { pt3dadd( -149.973, -117.558, -5.31613, 0.55 ) }
    dend_20 { pt3dadd( -151.051, -119.768, -7.41324, 0.28 ) }
    dend_20 { pt3dadd( -151.4, -120.507, -8.12465, 0.55 ) }
    dend_20 { pt3dadd( -151.808, -121.441, -8.97507, 0.28 ) }
    dend_20 { pt3dadd( -152.081, -122.14, -9.59701, 0.55 ) }
    dend_20 { pt3dadd( -152.53, -123.343, -10.5089, 0.28 ) }
    dend_20 { pt3dadd( -152.737, -123.901, -10.8648, 0.55 ) }
    dend_20 { pt3dadd( -152.962, -124.567, -11.1975, 0.28 ) }
    dend_20 { pt3dadd( -153.246, -125.216, -11.5619, 0.55 ) }
    dend_20 { pt3dadd( -153.992, -126.832, -12.581, 0.28 ) }
    dend_20 { pt3dadd( -154.334, -127.604, -13.082, 0.83 ) }
    dend_20 { pt3dadd( -155.271, -129.758, -14.4332, 0.28 ) }
    dend_20 { pt3dadd( -155.626, -130.745, -14.9689, 0.83 ) }
    dend_20 { pt3dadd( -156.414, -133.355, -16.2108, 0.28 ) }
    dend_20 { pt3dadd( -156.875, -135.102, -16.9546, 0.83 ) }
    dend_20 { pt3dadd( -157.296, -137.059, -17.6684, 0.28 ) }
    dend_20 { pt3dadd( -157.481, -138.213, -18.0916, 0.55 ) }
    dend_20 { pt3dadd( -157.708, -140.481, -18.9005, 0.28 ) }
    dend_20 { pt3dadd( -157.754, -141.343, -19.2363, 0.55 ) }
    dend_20 { pt3dadd( -157.73, -142.314, -19.6238, 0.28 ) }
    dend_20 { pt3dadd( -157.712, -142.762, -19.8119, 0.28 ) }
    dend_20 { pt3dadd( -157.574, -145.447, -21.1383, 0.28 ) }
    dend_20 { pt3dadd( -157.548, -145.827, -21.3621, 0.55 ) }
    dend_20 { pt3dadd( -157.392, -147.724, -22.4629, 0.28 ) }
    dend_20 { pt3dadd( -157.234, -148.651, -22.898, 0.55 ) }
    dend_20 { pt3dadd( -156.963, -149.68, -23.2532, 0.28 ) }
    dend_20 { pt3dadd( -156.791, -150.26, -23.4173, 0.55 ) }
    dend_20 { pt3dadd( -156.253, -151.773, -23.6303, 0.28 ) }
    dend_20 { pt3dadd( -155.563, -153.65, -23.7399, 0.55 ) }
    dend_20 { pt3dadd( -154.789, -155.383, -23.5434, 0.28 ) }
    dend_20 { pt3dadd( -154.461, -156.02, -23.4392, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 80/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -64.8308, -45.1715, -8.6035, 0.28 ) }
    dend_19 { pt3dadd( -69.9601, -43.5393, -7.63441, 0.28 ) }
    dend_19 { pt3dadd( -71.4714, -42.9237, -7.42722, 0.55 ) }
    dend_19 { pt3dadd( -73.6507, -41.9881, -7.16694, 0.28 ) }
    dend_19 { pt3dadd( -74.5045, -41.5033, -7.16084, 0.55 ) }
    dend_19 { pt3dadd( -75.6293, -40.7747, -7.18315, 0.28 ) }
    dend_19 { pt3dadd( -76.8345, -39.9114, -7.1358, 0.55 ) }
    dend_19 { pt3dadd( -79.8489, -37.3098, -6.97515, 0.28 ) }
    dend_19 { pt3dadd( -80.7383, -36.5131, -6.85392, 0.55 ) }
    dend_19 { pt3dadd( -85.7404, -31.9462, -5.86768, 0.28 ) }
    dend_19 { pt3dadd( -87.2394, -30.6059, -5.62282, 0.55 ) }
    dend_19 { pt3dadd( -90.1819, -27.9676, -4.99542, 0.28 ) }
    dend_19 { pt3dadd( -91.184, -27.065, -4.75901, 0.55 ) }
    dend_19 { pt3dadd( -95.3104, -23.3593, -3.57363, 0.28 ) }
    dend_19 { pt3dadd( -95.713, -23.0058, -3.44011, 0.55 ) }
    dend_19 { pt3dadd( -99.4257, -20.203, -1.79394, 0.28 ) }
    dend_19 { pt3dadd( -102.282, -18.2477, -0.862392, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_50 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_50 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_52 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_54 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_46 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_49 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_48 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_43 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_42 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_30 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_32 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_28 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_25 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_24 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_14 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_22 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_12 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_17 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_38 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_37 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_53 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_33 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_21, dend_10, dend_10, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_50 nseg = 3
    dend_0 nseg = 3
    dend_52 nseg = 5
    dend_51 nseg = 3
    dend_45 nseg = 11
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 13
    dend_1 nseg = 5
    dend_54 nseg = 5
    dend_46 nseg = 7
    dend_44 nseg = 7
    dend_41 nseg = 5
    dend_11 nseg = 3
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_49 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 7
    dend_42 nseg = 5
    dend_31 nseg = 13
    dend_30 nseg = 5
    dend_23 nseg = 3
    dend_16 nseg = 3
    dend_7 nseg = 3
    dend_32 nseg = 5
    dend_28 nseg = 11
    dend_27 nseg = 11
    dend_25 nseg = 9
    dend_24 nseg = 7
    dend_15 nseg = 3
    dend_14 nseg = 11
    dend_20 nseg = 9
    dend_19 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_BTC_b7a569ac13_0_0


