// Cell: cSTUT189_L5_LBC_640a1cef1d_0_0
/*
{
  "id" : "cSTUT189_L5_LBC_640a1cef1d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.18524, -4.81916, 0.0, 3.9822", "-8.34327, -4.32353, 0.0, 6.87607", "-7.5013, -3.82789, 0.0, 10.1189", "-6.65933, -3.33226, 0.0, 12.2867", "-5.81736, -2.83662, 0.0, 13.8376", "-4.97539, -2.34099, 0.0, 14.8265", "-4.13342, -1.84535, 0.0, 15.382", "-3.29145, -1.34972, 0.0, 16.0094", "-2.44948, -0.854082, 0.0, 16.562", "-1.60751, -0.358447, 0.0, 16.8144", "-0.765536, 0.137188, 0.0, 17.0145", "0.0764342, 0.632823, 0.0, 17.0541", "0.918405, 1.12846, 0.0, 16.8224", "1.76037, 1.62409, 0.0, 16.2232", "2.60235, 2.11973, 0.0, 15.3709", "3.44432, 2.61536, 0.0, 14.0738", "4.28629, 3.111, 0.0, 12.5479", "5.12826, 3.60663, 0.0, 11.1251", "5.97023, 4.10227, 0.0, 9.76121", "6.8122, 4.5979, 0.0, 7.58188", "7.65417, 5.09354, 0.0, 4.50057" ]
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-4.45607, 3.5103, -15.4, 1.55", "-4.45607, 3.5103, -15.4, 1.55", "-6.00097, 4.02122, -15.4, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.93607, -7.4727, -8.99, 1.77", "-4.93607, -7.4727, -8.99, 1.62", "-5.59854, -8.14842, -9.17928, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.77393, 3.3843, 4.25, 0.96", "8.77393, 3.3843, 4.25, 0.96", "9.6613, 3.46963, 4.12213, 0.81", "10.5283, 3.49881, 3.98994, 0.74", "11.4677, 3.53043, 3.8467, 0.66", "12.4141, 3.56228, 3.70239, 0.66", "13.2844, 3.59158, 3.56969, 1.25", "14.1785, 3.59521, 3.42048, 1.92", "14.7751, 3.55334, 3.29935, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.38393, 7.2693, 4.97, 0.74", "5.15846, 7.51066, 5.23024, 0.74", "4.80717, 7.83417, 5.54642, 0.74", "4.2239, 8.312, 6.02704, 0.74", "3.58453, 8.80859, 6.5569, 0.59", "2.8874, 9.35231, 7.15191, 0.74", "2.27303, 9.85522, 7.68698, 0.96", "1.55525, 10.4689, 8.29989, 0.52", "1.03438, 10.949, 8.76196, 0.22", "0.627641, 11.3865, 9.18499, 0.22", "0.350369, 11.7726, 9.55205, 0.66", "0.160289, 12.1253, 9.89631, 0.66", "-0.138498, 12.8254, 10.5965, 0.29", "-0.286211, 13.3183, 11.0664, 0.29", "-0.434875, 13.9886, 11.6665, 1.03", "-0.532249, 14.4953, 12.1076, 2.51", "-0.672906, 15.2068, 12.7556, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.87607, 3.8673, 6.38, 0.52", "-8.32831, 3.82359, 6.21975, 0.52", "-9.17655, 3.75898, 5.889, 0.52", "-9.70336, 3.72433, 5.68806, 0.74", "-10.7714, 3.71394, 5.30195, 1.25", "-11.6502, 3.77493, 5.00688, 1.33", "-12.9357, 3.96562, 4.6083, 0.74", "-14.1391, 4.26247, 4.26316, 0.59", "-15.1085, 4.60796, 4.0038, 0.29", "-16.0571, 5.07121, 3.76899, 0.44", "-17.1157, 5.75128, 3.55739, 0.59", "-17.9925, 6.40982, 3.41383, 0.44", "-18.4875, 6.80937, 3.35209, 0.81", "-19.1436, 7.33349, 3.29461, 1.62", "-20.0141, 7.94296, 3.20806, 1.77", "-21.4661, 8.6596, 3.04517, 0.37", "-22.0841, 8.8368, 2.98039, 0.37", "-22.6968, 8.92562, 2.91725, 0.52", "-23.4389, 8.96508, 2.85034, 0.59", "-24.4602, 8.97856, 2.77947, 0.22", "-25.1146, 9.01033, 2.70597, 0.29", "-25.7972, 9.07592, 2.61704, 0.74", "-26.7398, 9.2189, 2.50004, 1.77", "-27.6825, 9.42291, 2.39184, 2.8", "-29.092, 9.80564, 2.25196, 3.17", "-31.0991, 10.4307, 2.09443, 0.44", "-32.4753, 10.9074, 2.01839, 0.29", "-34.3838, 11.6125, 1.95291, 0.37", "-35.5578, 12.0885, 1.97644, 0.37", "-36.574, 12.5301, 2.05554, 0.52", "-37.1844, 12.8136, 2.14411, 1.03", "-38.3187, 13.3602, 2.39499, 1.84", "-39.2124, 13.799, 2.61027, 1.4", "-40.4466, 14.3674, 2.91324, 0.22", "-41.4742, 14.7369, 3.14754, 0.59", "-41.8061, 14.8324, 3.2176, 0.59", "-43.3014, 15.1972, 3.50546, 0.44", "-44.0273, 15.3338, 3.65029, 1.47", "-44.8456, 15.4578, 3.82044, 2.51", "-46.0528, 15.5994, 4.05466, 2.36", "-48.1929, 15.8318, 4.48855, 0.15", "-48.5464, 15.8583, 4.56524, 0.22", "-49.6463, 15.8946, 4.81702, 0.22", "-50.3597, 15.8759, 4.9615, 0.22", "-51.6977, 15.7729, 5.20748, 0.22", "-52.0962, 15.7276, 5.26825, 0.96", "-53.0026, 15.5934, 5.37775, 2.06", "-54.132, 15.4519, 5.4892, 2.58", "-56.5157, 15.2689, 5.65329, 0.22", "-57.2069, 15.243, 5.70637, 0.81", "-58.0125, 15.2477, 5.7721, 1.77", "-58.605, 15.2792, 5.81961, 1.99", "-60.217, 15.4491, 5.94148, 0.44", "-62.1688, 15.6964, 6.07448, 0.29", "-62.808, 15.7868, 6.11898, 0.29", "-63.3898, 15.8632, 6.15482, 0.81", "-64.2082, 15.9608, 6.20952, 1.99", "-65.1843, 16.0542, 6.27781, 2.06", "-67.1407, 16.1881, 6.41449, 0.15", "-67.6864, 16.2015, 6.45078, 0.22", "-68.227, 16.1965, 6.48192, 0.15", "-68.5622, 16.1926, 6.50452, 0.37", "-69.053, 16.1919, 6.54051, 0.66", "-70.0271, 16.2536, 6.62388, 0.37", "-70.9365, 16.3578, 6.67023, 0.22", "-71.6528, 16.4417, 6.68623, 0.88", "-72.6627, 16.5531, 6.69399, 1.99", "-73.705, 16.6625, 6.68902, 1.4", "-75.3346, 16.819, 6.65961, 0.22", "-76.5631, 16.9485, 6.62711, 0.22", "-76.9745, 17.0061, 6.61348, 0.37", "-77.5196, 17.0978, 6.59515, 0.81", "-77.884, 17.1699, 6.59175, 1.11", "-79.2097, 17.5018, 6.65428, 0.59", "-80.0433, 17.7473, 6.7564, 0.15", "-80.6835, 17.9714, 6.90242, 0.66", "-81.2826, 18.1929, 7.05777, 0.66", "-82.5663, 18.7138, 7.40875, 0.15", "-83.3602, 19.0509, 7.62829, 0.88", "-84.4144, 19.5077, 7.92069, 1.7", "-86.4496, 20.3394, 8.43963, 0.22", "-87.1969, 20.6308, 8.62125, 0.29", "-88.2473, 21.0334, 8.8519, 0.29", "-88.9645, 21.2939, 8.98204, 0.66", "-89.5317, 21.4833, 9.06894, 0.81", "-90.6603, 21.791, 9.24854, 0.29", "-91.9183, 22.0172, 9.50711, 0.22", "-92.4316, 22.0669, 9.64115, 1.03", "-93.3693, 22.0864, 9.92374, 1.92", "-94.0868, 22.0695, 10.1731, 1.92", "-95.623, 21.9745, 10.7577, 0.37", "-97.024, 21.8197, 11.3192, 0.29", "-97.6656, 21.7138, 11.5659, 0.22", "-98.3374, 21.5777, 11.8206, 0.59", "-99.2034, 21.3783, 12.1292, 0.22", "-99.4981, 21.3036, 12.2198, 0.44", "-100.315, 21.0772, 12.4252, 0.96", "-101.478, 20.7625, 12.6619, 0.22", "-102.618, 20.4957, 12.8854, 0.22", "-102.776, 20.4584, 12.9133, 0.52", "-103.247, 20.3508, 12.9856, 1.03", "-103.98, 20.2092, 13.0976, 1.62", "-104.87, 20.0887, 13.2313, 1.47", "-106.333, 20.0017, 13.4324, 0.22", "-107.009, 20.0128, 13.4976, 0.22", "-107.569, 20.0658, 13.546, 0.15", "-107.956, 20.1453, 13.5741, 0.15", "-108.277, 20.2463, 13.6305, 0.29", "-108.748, 20.4362, 13.7474, 0.29", "-109.329, 20.7002, 13.9283, 0.22", "-110.027, 21.0241, 14.1698, 1.25", "-110.819, 21.3711, 14.4447, 1.99", "-112.816, 22.1612, 15.1139, 0.29", "-114.043, 22.6165, 15.5123, 0.22", "-114.665, 22.8419, 15.7055, 0.66", "-115.373, 23.1015, 15.9142, 1.62", "-116.59, 23.6143, 16.2181, 0.52", "-117.874, 24.242, 16.4956, 0.22", "-118.281, 24.4743, 16.5608, 0.59", "-118.955, 24.8987, 16.6846, 1.25", "-119.295, 25.1307, 16.7564, 1.25", "-120.627, 26.0845, 17.1438, 0.15", "-121.75, 26.9146, 17.599, 0.15", "-122.052, 27.138, 17.754, 0.66", "-122.655, 27.5643, 18.117, 1.55", "-123.207, 27.9354, 18.4816, 0.96", "-124.464, 28.7437, 19.3823, 0.15", "-125.355, 29.3166, 20.0844, 0.15", "-125.874, 29.6953, 20.5254, 0.44", "-126.563, 30.2479, 21.1295, 0.88", "-126.96, 30.6012, 21.4704, 0.44", "-127.616, 31.2663, 21.9688, 0.15", "-128.511, 32.2983, 22.5305, 0.74", "-129.321, 33.3041, 22.8192, 0.22", "-129.614, 33.6825, 22.8681, 1.03", "-130.125, 34.359, 22.8791, 1.99", "-131.419, 36.1098, 22.7728, 0.15", "-132.104, 37.0358, 22.6428, 1.25", "-133.467, 38.851, 22.2564, 0.07", "-134.148, 39.7373, 22.0208, 0.07", "-134.819, 40.6108, 21.7817, 0.88", "-135.338, 41.2952, 21.5888, 1.62", "-135.678, 41.762, 21.4443, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.12393, -6.7062, 1.7, 0.88", "5.15762, -7.36637, 1.82934, 0.74", "5.16223, -7.97864, 1.96212, 0.88", "5.15319, -8.66426, 2.11364, 1.25", "5.1399, -9.72882, 2.3422, 0.88", "5.12809, -11.0062, 2.60049, 0.74", "5.12104, -12.2161, 2.83199, 0.66", "5.11741, -13.3158, 3.0199, 0.96", "5.12761, -14.3845, 3.18286, 1.18", "5.17448, -15.3849, 3.32222, 1.25", "5.35052, -16.695, 3.47738, 0.81", "5.5841, -17.6693, 3.56421, 0.74", "5.96389, -18.9044, 3.65306, 0.52", "6.1981, -19.5596, 3.69759, 1.4", "6.56263, -20.5063, 3.77981, 2.43", "7.08491, -21.8381, 3.92365, 3.1", "7.77161, -23.5684, 4.1581, 0.22", "8.00267, -24.2261, 4.25981, 0.22", "8.13113, -24.6856, 4.34696, 0.74", "8.26779, -25.3349, 4.47432, 1.25", "8.34402, -25.8294, 4.5758, 1.7", "8.45529, -26.7969, 4.7964, 1.03", "8.66166, -28.0638, 5.11734, 0.52", "8.89638, -28.9973, 5.34444, 0.22", "9.02677, -29.3937, 5.4322, 0.22", "9.19927, -29.7998, 5.52173, 0.22", "9.30158, -30.0014, 5.56647, 0.22", "9.55381, -30.489, 5.65742, 0.22", "9.85407, -31.1139, 5.74892, 0.81", "10.086, -31.7142, 5.80956, 1.7", "10.4764, -32.819, 5.88577, 2.88", "10.8366, -33.9188, 5.93603, 2.06", "11.2871, -35.4025, 5.99947, 1.47", "11.6125, -36.5587, 6.05416, 1.33", "11.9878, -37.9674, 6.11917, 0.22", "12.1968, -38.8145, 6.1641, 0.15", "12.3679, -39.5581, 6.20555, 0.29", "12.5905, -40.5059, 6.27199, 0.29", "12.7905, -41.2846, 6.33732, 1.03", "12.9384, -41.8654, 6.39085, 1.99", "13.1699, -42.8547, 6.48361, 2.21", "13.3911, -44.0046, 6.6086, 0.37", "13.5571, -44.9369, 6.70585, 0.15", "13.6174, -45.3161, 6.74004, 0.15", "13.7331, -46.116, 6.81118, 0.22", "13.8534, -46.9613, 6.89363, 0.37", "13.9599, -47.7234, 6.9865, 0.96", "14.037, -48.3867, 7.07551, 1.7", "14.1062, -49.0569, 7.1702, 1.99", "14.2021, -49.9073, 7.28954, 1.7", "14.4653, -51.7912, 7.53074, 0.37", "14.617, -52.8099, 7.64978, 0.22", "14.7238, -53.4431, 7.70905, 0.22", "14.8407, -54.0448, 7.7823, 0.22", "15.0028, -54.7728, 7.90372, 0.37", "15.1238, -55.2892, 8.01118, 1.03", "15.2596, -55.8348, 8.14577, 1.77", "15.4954, -56.7541, 8.36658, 0.88", "15.7909, -57.879, 8.66925, 0.29", "16.002, -58.6736, 8.90677, 0.52", "16.1535, -59.2322, 9.09135, 1.03", "16.4027, -60.1476, 9.42531, 1.55", "16.7036, -61.2984, 9.8613, 0.88", "16.934, -62.2475, 10.2415, 0.22", "17.0384, -62.7099, 10.4164, 0.22", "17.0967, -62.9917, 10.5193, 0.22", "17.1997, -63.5601, 10.7373, 0.29", "17.3166, -64.3292, 11.0289, 0.52", "17.362, -64.7241, 11.1676, 1.18", "17.4289, -65.4912, 11.3913, 1.33", "17.5074, -66.4626, 11.6362, 0.59", "17.5969, -67.3416, 11.8269, 0.22", "17.6701, -67.9985, 11.9559, 0.22", "17.731, -68.4643, 12.0428, 0.59", "17.8607, -69.3412, 12.1976, 0.29", "18.0057, -70.1499, 12.3476, 1.18", "18.1973, -71.0452, 12.5052, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.70607, -9.5937, 3.08, 0.66", "-1.70607, -9.5937, 3.08, 0.66", "-1.53063, -10.3579, 3.08491, 0.66", "-1.33355, -11.4661, 3.03868, 0.88", "-1.19253, -12.6023, 2.96758, 1.03", "-1.06168, -14.1642, 2.85628, 0.81", "-1.00137, -15.6193, 2.75119, 0.96", "-1.04852, -16.7471, 2.66807, 1.33", "-1.28106, -18.1269, 2.593, 1.77", "-1.66197, -19.3327, 2.57409, 2.21", "-1.99336, -20.0591, 2.60177, 2.58", "-2.89515, -21.5743, 2.7822, 2.73", "-3.9401, -23.0025, 3.10415, 0.81", "-5.16892, -24.5182, 3.54239, 0.52", "-6.07902, -25.5308, 3.92762, 0.59", "-6.67887, -26.1273, 4.20096, 1.25", "-7.53016, -26.8796, 4.62072, 2.73", "-8.46193, -27.559, 5.13951, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.65417, 5.09354, 0.0, 0.688515", "20.5808, 12.7029, 0.0, 0.688515", "33.5074, 20.3123, 0.0, 0.688515" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-6.00097, 4.02122, -15.4, 0.74", "-7.51573, 4.26224, -15.5205, 0.74", "-8.22333, 4.44688, -15.6891, 0.81", "-9.16823, 4.749, -16.0719, 0.74", "-10.1222, 5.05403, -16.4585, 0.96", "-11.1452, 5.3811, -16.873, 1.03", "-12.3771, 5.77499, -17.3722, 1.03", "-13.375, 6.24641, -17.9019, 1.47", "-14.4975, 6.88503, -18.6362, 2.29" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-6.00097, 4.02122, -15.4, 0.37", "-5.6251, 5.17343, -15.2814, 0.37", "-5.5729, 6.24906, -15.176, 0.22", "-5.66627, 7.09892, -15.1088, 0.22", "-5.82396, 8.15069, -15.076, 0.66", "-5.86685, 8.44692, -15.0876, 0.66", "-6.0297, 9.60924, -15.1744, 0.96", "-6.22275, 10.6852, -15.3284, 0.52", "-6.40126, 11.7212, -15.543, 0.81", "-6.4818, 12.5849, -15.7867, 0.88", "-6.4047, 13.8092, -16.2241, 0.81", "-6.20854, 14.6335, -16.581, 0.22", "-5.94322, 15.3202, -16.9192, 0.29", "-5.60994, 16.088, -17.3406, 0.37", "-5.357, 16.8313, -17.7644, 0.15", "-5.32549, 17.3637, -18.048, 0.22", "-5.43287, 17.9901, -18.3635, 0.22", "-5.64109, 18.8911, -18.7797, 0.52", "-5.82753, 19.7957, -19.1401, 0.37", "-5.98569, 20.7206, -19.4818, 0.44", "-6.18499, 22.2134, -19.987, 0.37", "-6.23296, 22.8391, -20.1952, 0.37", "-6.27786, 24.1805, -20.642, 0.52", "-6.29105, 25.4771, -21.0547, 0.59", "-6.31506, 27.1663, -21.5446, 0.44", "-6.39445, 28.3535, -21.8531, 0.29", "-6.55963, 29.4205, -22.0759, 0.22", "-6.8232, 30.221, -22.214, 0.88", "-7.26775, 31.1224, -22.3526, 0.29", "-7.80409, 31.8968, -22.4456, 0.66", "-8.79771, 32.9535, -22.4798, 0.22", "-9.28432, 33.365, -22.4629, 0.22", "-9.99503, 33.8815, -22.3745, 0.59", "-12.3661, 44.7162, -22.8935, 0.59", "-13.4902, 55.4654, -25.4869, 0.59", "-13.4444, 66.5965, -26.1783, 0.59", "-12.2727, 77.4256, -28.5232, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.59854, -8.14842, -9.17928, 1.03", "-6.64675, -9.60468, -9.12393, 1.03", "-7.30188, -10.6316, -9.03878, 0.88", "-7.97654, -11.6892, -8.95108, 1.33", "-8.59241, -12.6546, -8.87102, 1.92", "-9.32102, -13.7968, -8.77631, 2.29", "-10.3441, -15.4005, -8.64332, 1.7", "-11.023, -16.6623, -8.52129, 1.47" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-5.59854, -8.14842, -9.17928, 0.37", "-5.21218, -9.36215, -8.81438, 0.37", "-4.9424, -10.0441, -8.60668, 0.59", "-4.7013, -10.5348, -8.47307, 0.52", "-4.15142, -11.4125, -8.26283, 0.37", "-3.43346, -12.2276, -8.09378, 0.37", "-2.83577, -12.8017, -8.0109, 0.37", "-2.46872, -13.0852, -7.99408, 0.88", "-1.70876, -13.6163, -7.99199, 1.4", "-0.871526, -14.1622, -8.00372, 1.18", "0.819455, -15.2927, -8.04329, 0.37", "2.17107, -16.291, -8.07752, 0.22", "2.7699, -16.7977, -8.0776, 0.81", "3.50896, -17.5269, -8.04406, 1.92", "4.98836, -19.3452, -7.90633, 0.59", "5.68637, -20.4803, -7.81493, 0.66", "6.05198, -21.3385, -7.74298, 0.52", "6.37273, -22.4776, -7.66249, 0.59", "6.53216, -23.4009, -7.61659, 0.44", "6.66154, -24.6418, -7.60511, 0.44", "6.71711, -25.4415, -7.61248, 0.44", "6.79985, -26.1487, -7.63502, 0.66", "7.07686, -27.6025, -7.70986, 1.03", "7.51665, -29.1668, -7.81158, 0.74", "8.08297, -30.5083, -7.87872, 0.59", "8.647, -31.5059, -7.89567, 0.44", "9.10659, -32.1772, -7.88618, 0.81", "9.55808, -32.7348, -7.86629, 1.47", "10.0322, -33.2454, -7.83574, 1.47", "11.4957, -34.6525, -7.75277, 0.29", "12.3493, -35.4261, -7.69046, 0.37", "13.0514, -36.0453, -7.63844, 0.29", "13.4706, -36.4219, -7.58654, 0.15", "18.7347, -44.2939, -7.2869, 0.15", "24.495, -51.7761, -7.23032, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "14.7751, 3.55334, 3.29935, 0.88", "14.9986, 2.61736, 4.09893, 0.88", "15.0998, 1.80128, 4.76891, 0.44", "15.1384, 1.33647, 5.13141, 0.44", "15.189, 0.786775, 5.53714, 0.59", "15.2531, 0.293959, 5.88415, 0.44", "15.383, -0.323485, 6.27772, 0.29", "15.4754, -0.634508, 6.45069, 0.29", "15.7357, -1.09376, 6.66513, 0.52", "16.0046, -1.3887, 6.79227, 0.96", "16.4203, -1.7102, 6.9262, 1.92", "17.3228, -2.22224, 7.11912, 2.8", "18.4395, -2.69099, 7.28526, 1.18", "19.2938, -2.99776, 7.39821, 0.29", "19.7551, -3.13279, 7.44901, 0.29", "20.2144, -3.23803, 7.49304, 0.74", "20.9441, -3.33736, 7.54202, 1.47", "21.4975, -3.32385, 7.55917, 1.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "14.7751, 3.55334, 3.29935, 0.44", "15.6868, 4.09785, 2.47074, 0.44", "15.9857, 4.29479, 2.06408, 0.44", "16.3266, 4.4315, 1.54667, 0.44", "16.6741, 4.52095, 1.05184, 0.44", "17.1788, 4.65913, 0.330474, 0.52", "17.8122, 4.859, -0.581213, 0.37", "18.7915, 5.23106, -2.01231, 1.4", "19.7699, 5.59652, -3.40326, 2.29", "21.0608, 5.95125, -5.02049, 0.22", "21.4141, 6.01378, -5.43328, 0.22", "21.7386, 6.0275, -5.78657, 0.22", "22.3147, 6.00957, -6.2602, 0.37", "22.7875, 5.97252, -6.56677, 0.37", "24.3233, 5.83042, -7.42307, 0.22", "25.3686, 5.71049, -7.91179, 0.74", "26.7309, 5.55691, -8.49851, 2.36", "29.1868, 5.28705, -9.48895, 0.15", "29.7761, 5.22583, -9.71838, 1.11", "30.1615, 5.19004, -9.87748, 1.62", "32.0894, 5.04598, -10.7488, 0.15", "33.125, 4.99563, -11.2317, 0.15", "33.5277, 4.99019, -11.4424, 0.59", "33.8837, 4.97495, -11.6982, 0.59", "34.9637, 4.91869, -12.6718, 0.22", "35.6736, 4.87897, -13.4032, 0.37", "36.0582, 4.86248, -13.8659, 0.59", "36.4174, 4.87405, -14.2735, 0.22", "37.1843, 4.94983, -15.0155, 0.15", "38.0713, 5.06661, -15.7879, 0.15", "38.634, 5.15035, -16.2026, 0.66", "39.203, 5.22642, -16.595, 1.47", "40.112, 5.33181, -17.2533, 1.11", "41.6327, 5.54229, -18.3641, 0.22", "49.2929, 3.92105, -26.7707, 0.22", "57.5813, 2.55904, -34.597, 0.22", "66.1056, 0.413746, -42.0105, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.672906, 15.2068, 12.7556, 0.29", "-2.53504, 16.0042, 14.7995, 0.29", "-3.83297, 16.6946, 16.2486, 0.15", "-4.43303, 17.0956, 16.9803, 0.96", "-5.04816, 17.6004, 17.8068, 2.06", "-6.38963, 18.953, 19.806, 0.22", "-6.73728, 19.4434, 20.4407, 0.37", "-6.8832, 19.8449, 20.8755, 0.37", "-7.0817, 20.7695, 21.8067, 0.29", "-7.22054, 21.7794, 22.7925, 1.99", "-7.26496, 22.4886, 23.4794, 2.06", "-7.31643, 24.4502, 25.4371, 0.15", "-7.38227, 25.8297, 26.8375, 0.15", "-7.43805, 26.5611, 27.5853, 1.18", "-7.49669, 27.1748, 28.2042, 2.14", "-7.69078, 28.9485, 30.0212, 0.15", "-7.84117, 29.9217, 31.0205, 0.44", "-8.04216, 30.8785, 32.0145, 0.15", "-8.23947, 31.7398, 32.9173, 0.29", "-8.41199, 32.482, 33.7567, 0.44", "-8.59268, 33.2637, 34.7141, 1.03", "-8.71874, 33.8166, 35.4423, 1.7", "-8.99585, 35.3085, 37.5382, 0.15", "-9.09832, 36.0205, 38.6171, 0.22", "-9.1517, 36.937, 40.0529, 0.15", "-9.14992, 37.6105, 41.1491, 0.52", "-9.11073, 38.3792, 42.4868, 0.88", "-9.01655, 39.3144, 44.2856, 1.25", "-8.94138, 39.8944, 45.4662, 1.62", "-8.80644, 41.0966, 47.941, 0.15", "-8.77854, 41.6414, 49.0849, 0.22", "-8.79917, 42.4061, 50.6918, 0.22", "-8.84179, 42.8661, 51.6343, 0.37", "-8.9127, 43.436, 52.7369, 0.88", "-8.97488, 43.8273, 53.4836, 1.4", "-9.22531, 45.0077, 55.7308, 0.37", "-9.45175, 46.1298, 57.6817, 0.22", "-9.60731, 46.9703, 58.996, 0.88", "-9.73683, 47.677, 60.0449, 1.7" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.672906, 15.2068, 12.7556, 0.22", "-0.213546, 15.8472, 12.3336, 0.22", "0.225295, 16.4977, 11.9464, 0.15", "0.484061, 16.8847, 11.7525, 0.15", "0.764485, 17.3034, 11.5678, 0.44", "1.22498, 17.9901, 11.2991, 0.15", "1.49287, 18.3858, 11.161, 0.66", "1.74176, 18.766, 11.0585, 1.7", "2.13802, 19.365, 10.9417, 0.22", "2.53471, 19.9549, 10.8401, 0.22", "2.76213, 20.2921, 10.7833, 0.44", "2.98042, 20.6154, 10.7408, 0.81", "3.16246, 20.8901, 10.7042, 0.37", "3.62756, 21.6369, 10.5891, 0.22", "3.81618, 21.9769, 10.5323, 0.59", "3.93994, 22.2214, 10.4951, 1.18", "4.15976, 22.7147, 10.4526, 1.11", "4.62708, 23.8568, 10.4078, 0.22", "4.79807, 24.2999, 10.4098, 0.66", "4.97979, 24.781, 10.4347, 1.7", "5.14507, 25.2298, 10.4681, 1.62", "5.77586, 26.9665, 10.6272, 0.15", "5.88578, 27.2747, 10.6627, 0.66", "6.01428, 27.6249, 10.7134, 0.22", "6.15861, 27.9908, 10.7667, 0.07", "6.35196, 28.455, 10.8307, 0.07", "6.48227, 28.7598, 10.8663, 0.37", "6.65008, 29.1181, 10.8965, 0.22", "7.03107, 29.8949, 10.9628, 0.15", "7.2648, 30.3546, 11.0002, 0.44", "7.51351, 30.8305, 11.0381, 0.81", "7.85794, 31.4552, 11.0866, 1.84", "8.56514, 32.7288, 11.1959, 0.07", "8.80394, 33.1598, 11.2407, 0.29", "9.27504, 34.0134, 11.3454, 0.07", "9.40338, 34.2491, 11.3796, 0.66", "9.62025, 34.6583, 11.451, 1.33", "10.0862, 35.5865, 11.6476, 0.07", "10.2955, 36.0454, 11.7635, 0.07", "10.3837, 36.2514, 11.8203, 0.22", "10.5455, 36.6476, 11.9415, 0.74", "10.6616, 36.9409, 12.0337, 1.55", "11.1074, 38.0979, 12.4101, 0.07", "11.2112, 38.3552, 12.4936, 0.22", "11.3886, 38.7865, 12.6261, 0.07", "11.5754, 39.2324, 12.7592, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-135.678, 41.762, 21.4443, 0.15", "-135.992, 43.4693, 22.4354, 0.15", "-136.158, 44.3685, 22.9574, 0.66", "-136.239, 44.8129, 23.2154, 0.66", "-136.452, 45.9676, 23.8858, 0.07", "-136.553, 46.5187, 24.2057, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-135.678, 41.762, 21.4443, 0.07", "-136.481, 42.4288, 21.1791, 0.07", "-137.17, 42.9978, 20.9964, 0.07", "-137.572, 43.3146, 20.9325, 0.52", "-138.018, 43.6675, 20.894, 1.11", "-139.349, 44.7727, 20.8503, 0.07", "-139.615, 45.0069, 20.8505, 0.07", "-140.068, 45.4528, 20.9169, 0.52", "-140.682, 46.1029, 21.0742, 0.15", "-141.084, 46.5544, 21.2035, 0.22", "-141.429, 46.9543, 21.3324, 0.59", "-141.724, 47.2813, 21.4521, 0.59", "-142.318, 47.8772, 21.6945, 0.15", "-142.649, 48.1587, 21.8185, 0.22", "-143.046, 48.433, 21.9428, 0.66", "-143.428, 48.6524, 22.048, 1.62", "-143.98, 48.9376, 22.1987, 1.62", "-145.138, 49.5231, 22.5069, 0.22", "-145.767, 49.8211, 22.669, 0.22", "-146.312, 50.0759, 22.8117, 0.22", "-146.911, 50.3607, 22.9673, 0.22", "-147.612, 50.7135, 23.1583, 0.22", "-148.246, 51.0872, 23.3315, 1.77" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "18.1973, -71.0452, 12.5052, 0.22", "19.6455, -73.0243, 13.1213, 0.22", "20.9388, -74.8426, 13.7236, 0.22", "21.3618, -75.4824, 13.9502, 0.66", "21.8007, -76.1896, 14.2051, 0.88", "22.3285, -77.1478, 14.5665, 0.22", "22.8434, -78.1741, 14.9599, 0.07", "23.1379, -78.9336, 15.2574, 0.15", "23.454, -79.9007, 15.6407, 0.07", "23.6489, -80.5316, 15.9065, 0.15", "24.1019, -82.123, 16.5976, 0.07", "24.2646, -82.7889, 16.8715, 0.52", "24.4133, -83.5755, 17.17, 0.88" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.1973, -71.0452, 12.5052, 2.8", "19.0681, -72.9466, 12.5056, 2.8", "20.2327, -75.503, 12.598, 0.37", "20.8466, -76.9351, 12.6952, 0.22", "21.6618, -79.0351, 12.8811, 0.22", "22.1397, -80.4072, 13.0608, 0.22", "22.5366, -81.6476, 13.2654, 0.29", "22.8135, -82.6229, 13.4776, 0.88", "23.2172, -84.1355, 13.8784, 0.96", "23.5644, -85.5353, 14.265, 0.52", "24.0876, -87.8277, 14.8968, 0.37", "24.4023, -89.2279, 15.2401, 0.81", "24.7307, -90.4438, 15.516, 0.44", "25.3234, -92.2846, 15.9476, 0.29", "25.7627, -93.478, 16.2603, 0.88", "26.2101, -94.6021, 16.6039, 1.92", "26.8523, -96.2332, 17.1505, 2.06", "27.8238, -98.8075, 18.0579, 0.29", "28.4645, -100.636, 18.7379, 0.37", "28.9777, -102.249, 19.31, 0.29", "29.4048, -103.662, 19.7734, 0.37", "29.9699, -105.739, 20.3019, 0.37", "30.4486, -107.849, 20.683, 0.29", "30.5718, -108.653, 20.7419, 0.88", "30.7685, -110.487, 20.6797, 1.84", "30.86, -111.581, 20.549, 2.06", "31.0693, -114.517, 19.9822, 0.29", "31.1461, -115.814, 19.6734, 0.37", "31.215, -117.104, 19.3477, 0.22", "31.2868, -118.059, 19.109, 0.22", "31.4218, -119.254, 18.8439, 0.37", "31.7055, -120.775, 18.5478, 0.29", "31.8476, -121.342, 18.466, 1.03", "32.1812, -122.459, 18.3588, 1.62", "32.5157, -123.48, 18.311, 1.92", "33.2109, -125.507, 18.2804, 0.81", "33.8732, -127.411, 18.3154, 0.22", "34.5757, -129.261, 18.468, 0.22", "35.319, -131.163, 18.7188, 0.22", "35.5647, -131.779, 18.8287, 1.03", "36.0201, -132.902, 19.0749, 2.14", "36.6964, -134.56, 19.4993, 1.4", "37.7438, -136.999, 20.1843, 0.22", "38.3983, -138.457, 20.6102, 0.29", "38.9081, -139.575, 20.9417, 0.66", "39.295, -140.423, 21.1663, 0.66", "39.9154, -141.751, 21.4595, 0.22", "40.7348, -143.406, 21.7435, 0.22", "41.1094, -144.146, 21.839, 0.74", "41.6503, -145.154, 21.9711, 1.62", "42.4524, -146.674, 22.1899, 0.96", "43.4024, -148.613, 22.5324, 0.22", "43.8978, -149.74, 22.7699, 0.15", "44.1115, -150.348, 22.9148, 0.15", "44.2502, -150.794, 23.0326, 0.44", "44.4634, -151.625, 23.2714, 0.66", "44.7348, -152.945, 23.6721, 0.15", "44.8675, -153.643, 23.9027, 0.15", "45.0339, -154.447, 24.1666, 0.29", "45.243, -155.24, 24.4392, 0.29", "45.7115, -156.706, 24.9439, 0.07", "45.8562, -157.117, 25.0778, 0.44", "46.3413, -158.46, 25.5048, 1.18", "46.6662, -159.443, 25.8294, 2.06", "46.999, -160.543, 26.1919, 1.55", "47.7267, -163.134, 27.0208, 0.44", "48.2035, -164.926, 27.556, 0.66", "48.6162, -166.586, 27.9826, 0.22", "49.1602, -168.911, 28.4547, 0.22", "49.3283, -169.688, 28.5905, 0.96", "49.5117, -170.65, 28.7322, 1.92", "49.6569, -171.553, 28.841, 1.99", "50.0997, -174.414, 29.1113, 0.29", "50.4484, -176.434, 29.2556, 0.15", "50.6195, -177.359, 29.2908, 0.74", "50.747, -178.043, 29.3117, 0.74", "51.047, -179.755, 29.3576, 0.22", "51.2162, -180.89, 29.3919, 0.37", "51.4242, -182.538, 29.4622, 0.22", "51.5638, -183.805, 29.5486, 0.22", "51.6432, -184.616, 29.6173, 0.59", "51.7304, -185.794, 29.7377, 1.18", "51.9011, -188.982, 30.1465, 0.22", "51.9506, -190.173, 30.3173, 0.44", "51.9998, -191.336, 30.4701, 0.22", "52.0361, -192.145, 30.5773, 0.81", "52.0815, -193.058, 30.6923, 1.47", "52.1477, -194.302, 30.8424, 1.55", "52.2339, -196.042, 31.0408, 0.22", "52.3343, -197.967, 31.2665, 0.15", "52.4461, -199.823, 31.4899, 0.15", "52.5133, -200.729, 31.6296, 0.29", "52.5816, -201.549, 31.7886, 0.59", "52.644, -202.214, 31.9515, 0.96", "52.8052, -203.465, 32.3526, 0.22", "53.0086, -204.73, 32.8176, 0.15", "53.3407, -206.433, 33.4748, 0.15", "53.5159, -207.358, 33.8353, 0.96", "53.7905, -208.835, 34.4313, 1.92", "54.161, -210.907, 35.2942, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.46193, -27.559, 5.13951, 1.03", "-8.06669, -28.4825, 5.94554, 1.03", "-7.66156, -29.3841, 6.7672, 0.37", "-7.35618, -30.0265, 7.34382, 0.66", "-7.03524, -30.669, 7.88552, 1.11", "-6.70042, -31.3199, 8.39264, 1.55", "-6.31109, -32.0894, 8.92553, 0.52", "-5.92876, -32.8516, 9.39557, 0.44", "-5.47871, -33.7939, 9.88898, 0.88", "-5.08176, -34.646, 10.2839, 0.74", "-4.71437, -35.4538, 10.6169, 0.44", "-4.28557, -36.4101, 10.9436, 0.37", "-4.06858, -36.9327, 11.0906, 1.18", "-3.65322, -38.0313, 11.3109, 2.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.46193, -27.559, 5.13951, 1.03", "-9.48612, -27.9303, 5.39747, 1.03", "-11.0513, -28.6044, 5.86414, 0.52", "-12.256, -29.2255, 6.31605, 0.44", "-13.2302, -29.8458, 6.77012, 0.29", "-13.8188, -30.3188, 7.08677, 0.29", "-14.175, -30.6739, 7.32527, 0.29", "-14.6851, -31.3755, 7.78789, 0.96", "-15.1289, -32.219, 8.29683, 2.14", "-15.6149, -33.3646, 8.93988, 2.06", "-16.0769, -34.665, 9.64244, 0.74", "-16.6327, -36.4006, 10.5282, 0.44", "-16.8328, -37.0652, 10.8542, 0.59", "-17.0401, -37.8259, 11.1978, 0.88", "-17.2885, -38.8059, 11.6169, 0.29", "-17.5293, -39.8709, 12.052, 0.15", "-17.6401, -40.3742, 12.2559, 0.29", "-17.9259, -41.702, 12.7031, 0.22", "-18.0378, -42.2106, 12.8725, 0.66", "-18.2364, -43.1229, 13.1522, 1.7", "-18.4053, -43.8854, 13.3546, 2.21", "-18.6032, -44.7301, 13.5743, 1.92", "-19.1357, -47.0007, 14.1714, 0.37", "-19.3621, -47.993, 14.4426, 1.25", "-19.6106, -49.1455, 14.7711, 0.96", "-19.899, -50.6013, 15.1817, 0.22", "-20.1458, -51.8623, 15.5327, 0.22", "-20.3371, -52.806, 15.7742, 0.44", "-20.542, -53.6951, 15.9897, 1.18", "-20.7503, -54.4532, 16.1347, 2.29", "-21.101, -55.5327, 16.3027, 2.51", "-21.6197, -57.0103, 16.4661, 0.44", "-22.133, -58.4012, 16.5478, 0.44", "-22.3828, -59.0366, 16.5702, 0.37", "-22.9645, -60.4478, 16.587, 0.37", "-23.1784, -60.9432, 16.5993, 0.22", "-23.3862, -61.4136, 16.6199, 0.22", "-23.7245, -62.2328, 16.6725, 0.22", "-23.8925, -62.6392, 16.7122, 0.74", "-24.1243, -63.2249, 16.7971, 1.4", "-24.445, -64.1113, 16.9552, 2.14", "-24.9303, -65.4574, 17.2039, 0.66", "-25.4149, -66.7827, 17.4468, 0.37", "-25.7911, -67.9178, 17.616, 0.22", "-26.0625, -68.8805, 17.7304, 0.22", "-26.2507, -69.6935, 17.8021, 1.11", "-26.4216, -70.5273, 17.8659, 1.25", "-26.6289, -71.623, 17.9431, 0.59", "-26.8725, -72.8738, 18.0083, 0.22", "-26.9753, -73.3806, 18.0221, 0.22", "-27.3002, -74.68, 18.0368, 0.29", "-27.8235, -76.4006, 18.0684, 0.29", "-28.0418, -77.0132, 18.1027, 0.29", "-28.3089, -77.6723, 18.1628, 0.96", "-28.5616, -78.2269, 18.2315, 1.99", "-28.7783, -78.6825, 18.2832, 2.51", "-29.4785, -80.132, 18.4246, 0.81", "-30.2146, -81.7069, 18.5345, 0.22", "-30.5787, -82.5174, 18.5698, 0.22", "-30.8463, -83.1596, 18.5838, 0.22", "-30.9916, -83.532, 18.5819, 0.44", "-31.2129, -84.1443, 18.5594, 0.96", "-31.4593, -84.883, 18.5058, 0.44", "-31.7787, -85.9325, 18.3748, 0.15", "-31.9798, -86.6161, 18.2891, 0.15", "-32.1349, -87.1636, 18.225, 0.44", "-32.3105, -87.764, 18.1674, 0.52", "-32.5002, -88.4558, 18.0935, 0.22", "-32.6901, -89.0994, 18.0087, 0.22", "-32.8927, -89.7144, 17.9216, 0.74", "-33.199, -90.5811, 17.781, 1.33", "-33.543, -91.511, 17.6298, 0.29", "-34.0351, -92.7499, 17.4336, 0.22", "-34.3937, -93.5933, 17.3057, 0.22", "-34.9315, -94.7988, 17.1451, 0.22", "-35.1437, -95.2675, 17.0893, 0.52", "-35.6202, -96.3233, 16.9849, 1.7", "-36.2596, -97.7517, 16.8703, 0.44", "-36.744, -98.8225, 16.8122, 0.37", "-37.3058, -100.14, 16.7611, 0.15", "-37.5697, -100.777, 16.7351, 0.81", "-37.8755, -101.531, 16.6999, 1.7", "-38.1159, -102.158, 16.6626, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "33.5074, 20.3123, 0.0, 0.160008", "46.434, 27.9217, 0.0, 0.160008", "59.3606, 35.5311, 0.0, 0.160008" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-14.4975, 6.88503, -18.6362, 0.52", "-13.3753, 6.98374, -19.3513, 0.52", "-12.1447, 7.30149, -20.1992, 0.37", "-11.1321, 7.91669, -21.0233, 0.22", "-10.8013, 8.35144, -21.4034, 0.29", "-10.586, 8.72377, -21.7262, 0.29", "-10.2794, 9.23293, -22.2422, 0.66", "-9.94293, 9.82966, -22.9226, 1.03", "-9.7134, 10.4238, -23.557, 0.81", "-9.4648, 11.159, -24.2855, 0.44", "-9.0857, 12.0941, -25.1801, 0.74", "-8.66498, 12.9061, -25.9102, 0.66", "-8.2341, 13.6146, -26.4473, 0.66", "-7.3937, 14.8337, -27.3792, 0.29", "-6.85553, 15.5641, -27.8855, 0.29", "-6.18065, 16.4886, -28.3751, 0.52", "-5.63961, 17.335, -28.6333, 0.52", "-5.02065, 18.4179, -28.785, 1.03", "0.847795, 27.0688, -33.1013, 1.03", "6.36129, 35.5707, -38.1003, 1.03", "11.7141, 43.1282, -44.4628, 1.03", "16.9057, 50.1869, -51.4463, 1.03", "21.3838, 58.2549, -57.9135, 1.03", "24.6583, 66.6719, -64.6872, 1.03", "29.4035, 74.5435, -71.184, 1.03", "34.9346, 82.841, -76.4671, 1.03", "41.3092, 91.3853, -80.2216, 1.03", "47.6617, 99.5994, -84.6271, 1.03", "54.5661, 108.026, -87.6027, 1.03", "62.2555, 115.422, -91.0949, 1.03" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-14.4975, 6.88503, -18.6362, 1.25", "-14.504, 5.35704, -19.0125, 1.25", "-14.4087, 3.83757, -19.3426, 0.59", "-14.3085, 2.62877, -19.6279, 0.81", "-14.1874, 1.19179, -20.0428, 1.11", "-14.0288, -0.360324, -20.5143, 1.4", "-13.8493, -1.72003, -20.9097, 1.11", "-13.2725, -4.21299, -21.6263, 0.52", "-12.7701, -5.86287, -22.0981, 0.74", "-12.2343, -7.33817, -22.5774, 1.7", "-11.6117, -8.78188, -23.1213, 1.84", "-10.8362, -10.2725, -23.7561, 1.92", "-9.41262, -12.6911, -24.8459, 0.96", "-8.6534, -13.7755, -25.3495, 0.96", "-7.91206, -14.7021, -25.7702, 0.44", "-7.04963, -15.6656, -26.2004, 1.18", "-6.65096, -16.058, -26.4263, 1.18", "-1.93598, -26.0022, -28.4266, 1.18", "3.28089, -35.7903, -29.769, 1.18", "6.58231, -46.2552, -32.1471, 1.18", "9.78446, -57.0346, -32.5331, 1.18", "13.9023, -67.356, -31.0614, 1.18", "17.2273, -78.0998, -30.914, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-12.2727, 77.4256, -28.5232, 0.07", "-14.5944, 88.2931, -30.0349, 0.07", "-17.1576, 99.2072, -29.7435, 0.07", "-22.0545, 109.188, -29.4175, 0.07", "-27.8361, 118.552, -30.6317, 0.07", "-35.0608, 126.796, -31.3633, 0.07", "-43.3958, 133.818, -30.9459, 0.07", "-50.4464, 142.007, -29.004, 0.07", "-59.3411, 147.903, -27.0589, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-12.2727, 77.4256, -28.5232, 0.81", "-12.5477, 88.9394, -30.9335, 0.07", "-11.9668, 99.9452, -34.9795, 0.07", "-9.85853, 111.192, -37.7428, 0.07", "-8.46688, 122.557, -40.4895, 0.07", "-6.29307, 133.849, -43.0209, 0.07", "-6.21479, 144.919, -46.9284, 0.07", "-7.37716, 156.227, -49.8669, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-11.023, -16.6623, -8.52129, 0.37", "-12.4395, -16.4727, -8.97074, 0.37", "-13.4911, -16.3391, -9.47373, 0.37", "-14.1739, -16.3461, -9.83272, 0.22", "-14.8864, -16.4689, -10.3301, 0.22", "-15.2435, -16.5624, -10.6061, 0.22", "-15.7587, -16.7037, -11.0027, 0.44", "-16.2691, -16.8737, -11.4401, 0.52", "-17.0539, -17.142, -12.0701, 1.18", "-18.4115, -17.6552, -13.0179, 0.22", "-19.2859, -18.0106, -13.5631, 0.22", "-19.9294, -18.2741, -13.9184, 0.22", "-20.5794, -18.5544, -14.2641, 0.22", "-21.3748, -18.9071, -14.6629, 0.29", "-22.0684, -19.2343, -14.9921, 0.59", "-22.6185, -19.5274, -15.2185, 0.96", "-23.4969, -20.0937, -15.5728, 0.37", "-24.3605, -20.7797, -15.9333, 0.22", "-25.1015, -21.4983, -16.2515, 0.07", "-25.8909, -22.3467, -16.5974, 0.07", "-26.5019, -23.0476, -16.8594, 0.22", "-27.1535, -23.8226, -17.1071, 0.07", "-27.6479, -24.484, -17.2854, 0.07", "-28.0744, -25.1081, -17.3846, 0.74", "-38.0416, -30.9243, -20.2338, 0.74", "-48.8052, -35.359, -22.3481, 0.74", "-59.2446, -40.1466, -25.2318, 0.74", "-70.0935, -44.1878, -27.594, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-11.023, -16.6623, -8.52129, 0.96", "-10.9939, -18.2647, -8.65285, 0.96", "-10.9661, -19.4929, -8.8196, 0.88", "-10.9399, -21.1051, -9.09578, 0.81", "-10.9326, -22.0584, -9.29256, 1.03", "-10.9512, -22.9428, -9.50325, 1.33", "-11.0511, -24.7357, -9.95674, 0.88", "-11.2216, -26.2994, -10.4359, 1.03", "-11.46, -27.6764, -10.9132, 1.62", "-11.8519, -29.6477, -11.6518, 0.37", "-12.0984, -30.7037, -12.0574, 0.37", "-12.3294, -31.5309, -12.3974, 0.74", "-12.583, -32.1839, -12.6823, 1.25", "-13.0355, -33.038, -13.0746, 1.77" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "21.4975, -3.32385, 7.55917, 0.15", "22.6643, -2.43374, 6.76829, 0.15", "23.2511, -1.97673, 6.38088, 0.15", "23.7355, -1.579, 6.02611, 0.88", "24.2789, -1.09652, 5.59503, 1.55", "25.5361, 0.156779, 4.49004, 0.22", "26.1056, 0.724564, 3.98944, 0.22", "26.4766, 1.1196, 3.67117, 0.37", "27.1158, 1.82412, 3.13238, 0.07", "27.3879, 2.15715, 2.87283, 0.07", "27.7339, 2.6942, 2.3998, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "21.4975, -3.32385, 7.55917, 0.29", "22.2498, -3.63785, 8.72764, 0.29", "22.778, -3.78028, 9.45191, 0.29", "23.6052, -3.89997, 10.4538, 0.66", "23.8472, -3.91296, 10.7171, 0.66", "24.5619, -3.90634, 11.4219, 0.22", "24.9754, -3.90086, 11.8003, 0.22", "25.5777, -3.87293, 12.3335, 0.66", "26.4347, -3.84043, 13.0603, 1.84", "27.4838, -3.83703, 13.9487, 3.02", "28.6417, -3.90081, 14.9952, 1.55", "29.8277, -4.10781, 16.1149, 0.44", "30.7399, -4.38273, 17.0203, 0.44", "31.6801, -4.77524, 18.0022, 0.22", "32.4796, -5.18543, 18.8545, 1.03", "33.1012, -5.55934, 19.5066, 2.29", "34.4725, -6.4579, 20.8915, 0.22", "35.161, -6.87136, 21.5632, 0.22", "35.5816, -7.0953, 21.9389, 0.22", "36.111, -7.33703, 22.3742, 1.47", "36.9699, -7.67149, 23.0138, 2.88", "37.7067, -7.9123, 23.5152, 2.14", "40.2131, -8.63197, 25.0796, 0.29", "41.1833, -8.88982, 25.6524, 0.29", "41.7708, -9.03488, 25.9905, 0.29", "42.3073, -9.15487, 26.2987, 0.66", "43.0483, -9.29164, 26.7011, 1.03", "43.8316, -9.41687, 27.0464, 0.22", "44.7169, -9.49451, 27.348, 0.22", "45.3245, -9.49619, 27.5737, 0.22", "45.9696, -9.46769, 27.8266, 0.59", "46.7612, -9.41102, 28.1424, 1.4", "47.9985, -9.32213, 28.6414, 0.37", "48.9359, -9.32301, 29.0196, 0.22", "49.8071, -9.38889, 29.3408, 0.22", "50.2709, -9.46256, 29.5054, 1.33", "51.0186, -9.62911, 29.7648, 2.73", "51.6717, -9.81037, 29.9964, 2.73", "53.8077, -10.5351, 30.7736, 0.22", "54.6279, -10.8662, 31.076, 0.52", "55.6104, -11.2892, 31.4688, 0.15", "56.1019, -11.5067, 31.6806, 0.52", "56.7362, -11.79, 31.9666, 0.96", "58.1815, -12.4325, 32.6419, 0.22", "59.0084, -12.7797, 33.0384, 0.96", "59.8896, -13.125, 33.4983, 2.29", "61.7887, -13.8129, 34.5088, 0.22", "62.313, -13.9965, 34.7927, 0.74", "63.1268, -14.2741, 35.2428, 1.11", "64.7287, -14.8053, 36.1429, 0.15", "65.6348, -15.1058, 36.6476, 0.44", "66.3309, -15.342, 37.0387, 1.25", "67.8728, -15.8402, 37.9628, 0.15", "68.3145, -15.9847, 38.231, 0.15", "68.7023, -16.1175, 38.4686, 0.44", "69.1874, -16.3074, 38.7639, 0.66", "70.1048, -16.6755, 39.2683, 0.15", "70.8994, -16.9822, 39.6857, 1.03", "71.6054, -17.256, 40.0217, 2.14", "73.0775, -17.801, 40.6929, 0.15", "73.5449, -17.9535, 40.9186, 0.15", "74.2844, -18.1357, 41.3021, 0.15", "75.0755, -18.2608, 41.7525, 0.15", "75.4557, -18.2874, 41.9944, 0.74", "76.2695, -18.2515, 42.5867, 1.92", "77.683, -18.0398, 43.7501, 0.15", "78.5819, -17.8451, 44.5919, 0.59", "79.2956, -17.6587, 45.3391, 0.15", "79.942, -17.4644, 46.0482, 1.03", "80.6012, -17.2649, 46.7667, 1.33", "81.7839, -16.911, 48.0529, 0.15", "82.8948, -16.5951, 49.2525, 0.15", "83.5228, -16.4527, 49.924, 1.03", "84.3427, -16.3051, 50.7942, 1.77", "85.393, -16.1703, 51.9167, 0.15", "86.2667, -16.1128, 52.832, 0.15", "86.9766, -16.1285, 53.5007, 0.59", "87.8937, -16.215, 54.2955, 0.15", "88.3412, -16.2756, 54.6761, 0.15", "88.8182, -16.3577, 55.0771, 1.03", "89.4753, -16.4611, 55.5985, 1.62", "91.2146, -16.6987, 56.8606, 0.15", "91.8312, -16.7542, 57.2779, 0.15", "92.4995, -16.7732, 57.7055, 0.81", "93.3977, -16.7298, 58.2766, 1.62", "94.7138, -16.5813, 59.1133, 0.07", "95.6142, -16.4257, 59.7013, 0.07", "96.0382, -16.3227, 59.9728, 0.59", "96.3554, -16.2392, 60.1572, 0.59", "97.2056, -15.9954, 60.6289, 0.07", "97.8388, -15.8124, 60.9639, 0.07", "98.1726, -15.7173, 61.132, 0.07", "98.7656, -15.5358, 61.41, 0.59", "99.4385, -15.3278, 61.7305, 1.33", "100.414, -15.0447, 62.1977, 0.15", "101.113, -14.8437, 62.5535, 0.52", "101.789, -14.628, 62.9325, 0.07", "102.238, -14.4853, 63.2017, 0.22", "102.918, -14.2598, 63.6312, 0.07", "103.784, -13.9581, 64.2233, 0.66", "104.845, -13.5938, 64.9862, 0.22", "105.545, -13.3772, 65.4905, 0.96", "106.272, -13.1981, 66.0613, 1.62", "107.671, -12.9108, 67.1913, 0.15", "108.456, -12.7559, 67.8266, 0.74", "109.177, -12.6204, 68.4075, 1.11", "110.401, -12.4253, 69.3584, 0.22", "112.089, -12.2034, 70.6367, 0.29", "112.496, -12.1619, 70.9293, 0.15", "112.818, -12.1533, 71.14, 0.15", "113.437, -12.1536, 71.4834, 0.22", "113.756, -12.1466, 71.6333, 0.74", "114.522, -12.0926, 71.8935, 1.47", "115.275, -12.0036, 72.0691, 1.18", "116.623, -11.8127, 72.4119, 0.15", "117.039, -11.745, 72.5363, 0.37", "117.519, -11.6656, 72.6949, 0.37", "118.442, -11.5097, 72.9942, 0.15", "119.178, -11.3574, 73.2417, 1.25", "119.581, -11.2595, 73.3887, 1.25", "120.831, -10.9314, 73.839, 0.15", "121.425, -10.79, 74.0513, 0.15", "122.219, -10.6267, 74.3198, 0.22", "123.021, -10.4922, 74.5452, 0.15", "123.689, -10.3717, 74.6815, 0.22", "124.327, -10.2432, 74.7901, 0.96", "125.216, -10.0437, 74.9039, 1.62", "125.769, -9.91902, 74.9623, 1.33", "127.412, -9.57417, 75.1285, 0.15", "128.362, -9.38754, 75.2088, 0.15", "128.904, -9.27903, 75.2545, 0.66", "129.597, -9.13774, 75.2952, 1.11", "130.981, -8.84595, 75.3356, 0.15", "131.701, -8.69413, 75.3286, 0.44", "132.038, -8.62279, 75.3084, 0.44", "132.959, -8.4651, 75.2205, 0.15", "134.051, -8.31357, 75.0854, 0.15", "134.412, -8.26432, 75.0338, 0.88", "135.346, -8.14354, 74.8574, 1.7", "136.609, -8.00372, 74.586, 0.15", "137.296, -7.93594, 74.4416, 0.29", "137.984, -7.87827, 74.3051, 0.07", "138.777, -7.82751, 74.1848, 0.22", "139.877, -7.78337, 74.0307, 0.15", "140.434, -7.77008, 73.9608, 0.59", "141.28, -7.76191, 73.8651, 1.4", "141.851, -7.75991, 73.8089, 1.25", "143.455, -7.80565, 73.6874, 0.15", "144.349, -7.86822, 73.647, 0.37", "145.177, -7.94271, 73.6364, 0.15", "145.865, -8.00696, 73.66, 0.37", "146.281, -8.04056, 73.7104, 0.37", "146.873, -8.06681, 73.8224, 0.88", "147.439, -8.08658, 73.9615, 1.62", "147.785, -8.09444, 74.0674, 1.62", "149.471, -8.13265, 74.664, 0.07", "150.619, -8.14931, 75.1151, 0.07", "151.136, -8.13421, 75.34, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "66.1056, 0.413746, -42.0105, 0.07", "73.2025, -0.0154355, -48.4475, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "66.1056, 0.413746, -42.0105, 0.81", "72.5496, 0.421252, -47.8111, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-9.73683, 47.677, 60.0449, 0.07", "-8.22229, 49.237, 59.6632, 0.07", "-7.22808, 50.287, 59.3291, 0.07", "-6.56342, 51.0304, 59.076, 0.81", "-5.6093, 52.1785, 58.632, 0.07", "-5.19243, 52.7154, 58.3986, 0.15", "-4.2917, 53.8753, 57.8943, 0.07", "-3.85209, 54.4837, 57.5754, 0.66", "-3.52555, 54.9815, 57.2783, 0.88", "-2.83012, 56.1437, 56.574, 0.15", "-2.40339, 56.9983, 55.9947, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.73683, 47.677, 60.0449, 0.07", "-10.081, 49.1536, 61.4787, 0.07", "-10.3275, 50.2309, 62.5471, 0.07", "-10.4829, 51.057, 63.4679, 0.07", "-10.6233, 51.7111, 64.3043, 0.96", "-10.6779, 51.9106, 64.5962, 0.96", "-10.9512, 52.8217, 66.0866, 0.07", "-11.1267, 53.376, 67.1906, 0.59", "-11.3594, 54.1535, 68.9842, 0.22", "-11.5506, 54.7392, 70.5119, 1.25", "-11.8771, 55.5168, 72.7594, 0.22", "-12.1218, 56.0212, 74.3382, 0.22", "-12.4191, 56.5864, 76.2259, 0.22", "-12.6865, 57.0909, 77.9224, 0.22", "-12.8796, 57.4263, 79.0339, 1.33", "-13.2917, 58.2381, 81.6117, 0.15", "-13.4797, 58.6777, 83.0462, 0.29", "-13.6547, 59.1419, 84.5365, 0.29", "-13.7271, 59.4244, 85.3739, 0.44", "-13.7865, 60.2096, 87.6316, 0.22", "-13.7115, 60.8579, 89.4652, 0.22", "-13.4273, 61.7797, 92.0947, 0.29", "-13.3694, 61.9168, 92.4967, 1.11", "-12.9916, 62.5603, 94.6124, 0.29", "-12.6534, 62.9933, 96.3132, 0.29", "-12.5349, 63.0961, 96.8337, 0.29", "-12.311, 63.274, 98.2976, 0.29", "-12.2949, 63.2944, 98.6981, 0.29", "-12.3726, 63.2884, 100.14, 0.29", "-12.5457, 63.2113, 101.421, 0.29", "-12.7052, 63.1453, 102.277, 0.29", "-13.0111, 62.9667, 104.065, 0.29", "-13.2657, 62.7718, 105.703, 0.29", "-13.5341, 62.5545, 107.433, 0.29", "-13.7882, 62.3574, 108.976, 0.29", "-14.1267, 62.1018, 111.183, 0.29", "-14.4186, 61.9038, 113.307, 0.52", "-14.5855, 61.8267, 114.784, 0.52", "-14.7014, 61.8409, 115.936, 0.52", "-14.7755, 61.937, 116.784, 0.22", "-14.9662, 62.4172, 119.213, 0.22", "-15.0896, 62.8613, 120.762, 0.22", "-15.2541, 63.4697, 122.502, 0.44", "-15.4031, 64.1417, 124.297, 0.88", "-15.5809, 65.2943, 127.427, 0.15", "-15.6475, 65.8676, 129.024, 0.15", "-15.7034, 66.2575, 130.072, 0.22", "-15.7658, 66.5234, 130.835, 0.22", "-15.8421, 66.7159, 131.418, 0.22", "-15.9257, 66.8936, 131.995, 0.22", "-16.0055, 67.0755, 132.668, 0.22", "-16.1016, 67.3981, 133.737, 0.22", "-16.2742, 67.8601, 135.333, 0.22", "-16.3608, 68.0334, 135.961, 0.22", "-16.573, 68.433, 137.536, 0.22", "-16.7646, 68.8403, 139.293, 0.22", "-16.809, 68.9995, 140.108, 0.22", "-16.7785, 69.2412, 141.515, 0.22", "-16.6627, 69.4796, 142.822, 0.22", "-16.533, 69.6547, 143.977, 0.22", "-16.3798, 69.7932, 145.205, 0.22", "-16.0504, 69.9571, 146.927, 0.22", "-15.7435, 70.0681, 148.111, 0.22", "-15.3985, 70.2275, 149.038, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-148.246, 51.0872, 23.3315, 0.29", "-149.233, 52.2475, 23.5609, 0.29", "-150.207, 53.3424, 23.7464, 0.07", "-150.516, 53.6838, 23.7974, 0.15", "-150.97, 54.1588, 23.8787, 0.07", "-151.331, 54.5172, 23.945, 0.29", "-152.099, 55.2442, 24.0799, 0.07", "-152.426, 55.5235, 24.1288, 0.37", "-152.627, 55.697, 24.1479, 0.37", "-153.313, 56.3008, 24.2187, 0.07", "-153.521, 56.4917, 24.2448, 0.15", "-154.124, 57.108, 24.36, 0.07", "-154.636, 57.7115, 24.4886, 0.07", "-154.946, 58.1806, 24.6111, 0.74", "-155.139, 58.5298, 24.7186, 0.74", "-155.567, 59.4502, 25.0223, 0.07", "-155.873, 60.2274, 25.3413, 0.07", "-156.008, 60.6177, 25.5505, 0.29", "-156.355, 61.6678, 26.2928, 0.07", "-156.558, 62.2961, 26.8478, 0.07", "-156.68, 62.6968, 27.2595, 0.66", "-156.927, 63.5021, 28.1741, 0.07", "-157.17, 64.162, 28.9957, 0.29", "-157.475, 64.9166, 30.0351, 0.22", "-157.804, 65.6757, 31.1326, 1.33", "-158.146, 66.4425, 32.2617, 0.07", "-158.347, 66.9187, 32.9816, 0.44", "-158.67, 67.7659, 34.2408, 0.15", "-158.801, 68.1783, 34.8132, 0.15", "-158.955, 68.8051, 35.6088, 1.4", "-159.149, 69.9913, 37.0277, 0.22", "-159.242, 70.7126, 37.8855, 0.15", "-159.277, 71.2584, 38.5175, 0.22", "-159.266, 72.059, 39.3781, 1.7", "-159.203, 73.4213, 40.7645, 0.07", "-159.135, 74.004, 41.3523, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-148.246, 51.0872, 23.3315, 0.96", "-149.767, 51.2784, 23.6914, 0.96", "-151.146, 51.3488, 23.9594, 0.07", "-151.578, 51.3584, 24.0303, 0.07", "-152.186, 51.3619, 24.127, 0.15", "-152.425, 51.3632, 24.1649, 0.37", "-153.03, 51.3666, 24.2611, 0.44", "-154.371, 51.2621, 24.4572, 0.22", "-155.136, 51.1705, 24.5247, 0.96", "-155.847, 51.1151, 24.587, 1.7" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "54.161, -210.907, 35.2942, 0.07", "55.0266, -212.199, 36.4866, 0.07", "55.4959, -212.833, 37.1785, 0.07", "55.5531, -212.908, 37.2659, 0.59", "55.8132, -213.256, 37.6727, 1.11", "56.2791, -213.916, 38.4092, 0.07", "56.486, -214.226, 38.7227, 0.52", "57.2867, -215.54, 39.9109, 0.07", "57.4449, -215.81, 40.1412, 0.07", "57.6129, -216.125, 40.4049, 1.03", "57.7856, -216.489, 40.7159, 1.25", "58.2828, -217.554, 41.7321, 0.15", "58.6046, -218.245, 42.4542, 0.15", "58.7961, -218.683, 42.9191, 1.03", "59.1082, -219.466, 43.7881, 0.07", "59.2943, -219.969, 44.3733, 0.81", "59.7204, -221.24, 45.9109, 0.07", "59.843, -221.705, 46.474, 0.66", "59.9292, -222.075, 46.9052, 1.18", "60.1278, -223.009, 47.9324, 0.15", "60.2263, -223.599, 48.5038, 0.44", "60.2472, -223.836, 48.6943, 0.44", "60.2913, -224.986, 49.4738, 0.22", "60.3323, -225.831, 50.0021, 0.66", "60.3793, -226.476, 50.3901, 1.47", "60.4432, -227.176, 50.7761, 0.52", "60.5523, -228.096, 51.3025, 0.15", "60.6831, -229.036, 51.8436, 0.15", "60.7916, -229.719, 52.2249, 0.15", "60.8614, -230.179, 52.4695, 0.96", "60.9336, -230.62, 52.7137, 1.11", "61.2206, -232.328, 53.6903, 0.07", "61.2694, -232.664, 53.8844, 0.07", "61.2958, -233.112, 54.1261, 0.52", "61.3094, -234.145, 54.6571, 0.07", "61.294, -234.953, 55.0229, 0.07", "61.2834, -235.25, 55.1356, 0.22", "61.2656, -235.531, 55.215, 0.52", "61.2089, -236.684, 55.5366, 0.07", "61.201, -236.928, 55.6029, 0.52", "61.1999, -237.52, 55.7516, 1.03", "61.243, -238.84, 56.0904, 0.07", "61.2717, -239.21, 56.1997, 0.15", "61.3247, -239.694, 56.36, 0.07", "61.3626, -239.956, 56.4534, 0.44", "61.4144, -240.303, 56.5857, 0.81", "61.5976, -241.507, 57.0918, 0.22", "61.699, -242.089, 57.3549, 0.81", "61.7931, -242.564, 57.5905, 1.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "54.161, -210.907, 35.2942, 0.07", "54.4101, -212.547, 35.6543, 0.07", "54.4753, -212.956, 35.7354, 0.22", "54.664, -214.091, 35.9331, 0.07", "54.7111, -214.368, 35.9759, 0.15", "54.9913, -215.923, 36.1863, 0.07", "55.0657, -216.339, 36.2351, 0.66", "55.1485, -216.764, 36.2663, 0.66", "55.3122, -217.549, 36.3087, 0.07", "55.4534, -218.177, 36.3263, 0.74", "55.5649, -218.666, 36.3369, 1.55", "55.8566, -220.038, 36.3686, 0.22", "56.1199, -221.336, 36.38, 0.07", "56.187, -221.711, 36.3686, 0.74", "56.3145, -222.511, 36.3011, 1.77", "56.5095, -223.798, 36.1059, 0.22", "56.6303, -224.604, 35.887, 0.22", "56.7226, -225.247, 35.585, 0.22", "56.8202, -225.988, 35.0755, 0.22", "56.8902, -226.456, 34.6857, 0.81", "56.9703, -226.958, 34.1876, 1.55", "57.1234, -227.836, 33.2136, 0.22", "57.2203, -228.437, 32.5089, 0.66", "57.2899, -229.059, 31.7628, 1.25", "57.3342, -229.662, 31.0324, 0.22", "57.3469, -230.341, 30.2169, 0.22", "57.3213, -230.874, 29.6359, 0.22", "57.2772, -231.454, 29.0826, 0.22", "57.2061, -232.281, 28.3631, 0.29", "57.1688, -232.713, 28.0114, 1.03", "57.15, -233.01, 27.7776, 1.92", "57.1344, -234.764, 26.4631, 0.22", "57.1901, -235.798, 25.7323, 0.15", "57.2498, -236.395, 25.3504, 0.74", "57.3185, -236.987, 25.0031, 1.33", "57.4523, -238.096, 24.3869, 0.07", "57.504, -238.456, 24.1916, 0.22", "57.6165, -238.984, 23.9319, 0.15", "57.7094, -239.379, 23.7569, 0.22", "57.8681, -240.114, 23.4514, 0.22", "57.9532, -240.608, 23.259, 0.66", "58.0271, -241.068, 23.1027, 1.18", "58.1428, -241.85, 22.8283, 0.15", "58.2612, -242.561, 22.5645, 0.15", "58.4305, -243.351, 22.2591, 0.22", "58.5796, -243.935, 22.0456, 0.66", "58.7785, -244.636, 21.7932, 0.15", "59.1382, -245.728, 21.4102, 0.22", "59.3237, -246.215, 21.2472, 0.74", "59.5698, -246.78, 21.0762, 1.18", "60.1212, -247.909, 20.7535, 0.15", "60.3862, -248.445, 20.6128, 0.22", "60.7531, -249.231, 20.4479, 0.15", "60.9146, -249.594, 20.3974, 0.59", "61.0141, -249.846, 20.3713, 0.96", "61.1631, -250.298, 20.3406, 0.59", "61.3828, -251.029, 20.3024, 0.15", "61.5507, -251.601, 20.2746, 0.37", "61.8569, -252.637, 20.2232, 0.15", "61.9629, -252.968, 20.2025, 0.52", "62.1653, -253.576, 20.1602, 0.88", "62.5498, -254.634, 20.0693, 0.15", "62.7675, -255.181, 20.0122, 0.29", "62.9566, -255.636, 19.9604, 0.22", "63.0932, -255.988, 19.9255, 0.44", "63.2909, -256.506, 19.8761, 0.44", "63.7426, -257.704, 19.7643, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-3.65322, -38.0313, 11.3109, 0.29", "-2.59724, -39.2336, 10.9, 0.29", "-1.64862, -40.5962, 10.4139, 0.07", "-1.29584, -41.1871, 10.1622, 0.29", "-0.705605, -42.307, 9.68408, 0.15", "-0.349285, -43.0343, 9.36379, 0.52", "0.079891, -43.9865, 8.95114, 0.59", "0.79399, -45.7969, 8.21762, 0.15", "1.26005, -47.1519, 7.68191, 0.74", "1.61738, -48.2688, 7.23356, 1.99", "1.86942, -49.09, 6.91624, 1.99", "2.64274, -51.563, 6.02344, 0.15", "2.89151, -52.2868, 5.79508, 0.29", "3.44393, -53.8066, 5.44184, 0.22", "3.61026, -54.2488, 5.36387, 0.81", "3.96565, -55.1795, 5.22983, 1.18", "4.31726, -56.0763, 5.12928, 0.59", "5.05302, -57.8877, 4.97932, 0.07", "5.48589, -58.96, 4.90657, 0.07", "5.64806, -59.3435, 4.89585, 0.07", "6.05252, -60.2735, 4.86776, 0.29", "6.6453, -61.6294, 4.83041, 0.22", "7.14389, -62.7243, 4.8114, 0.96", "7.653, -63.8698, 4.81726, 0.22", "8.38373, -65.6637, 4.80418, 0.15", "8.98607, -67.2989, 4.78662, 0.15", "9.38449, -68.4621, 4.77819, 1.03", "9.83649, -69.894, 4.78778, 2.14", "10.4441, -71.9854, 4.79012, 0.22", "10.9027, -73.7376, 4.79123, 0.22", "11.1019, -74.6569, 4.79708, 0.66", "11.2676, -75.5893, 4.79543, 0.96", "11.5152, -77.2509, 4.77134, 0.52", "11.7168, -79.0109, 4.73857, 0.22", "11.8631, -80.5711, 4.70751, 0.88", "12.0404, -82.9415, 4.67441, 0.22", "12.108, -84.9302, 4.66679, 0.15", "12.1013, -86.2899, 4.65795, 0.22", "12.012, -88.4838, 4.65282, 0.15", "11.9479, -89.651, 4.6656, 0.81", "11.8896, -90.691, 4.68805, 0.81", "11.837, -93.1315, 4.79942, 0.15", "11.8605, -94.6112, 4.97244, 0.22", "11.9152, -95.4548, 5.08412, 0.88", "12.0407, -96.5272, 5.22504, 1.84", "12.2447, -97.6607, 5.36919, 1.03", "12.7637, -99.8631, 5.57068, 0.22", "13.3124, -101.826, 5.71636, 0.22", "13.6709, -103.046, 5.7417, 0.22", "13.9597, -104.094, 5.72192, 0.81", "14.293, -105.338, 5.66913, 1.47", "14.919, -107.753, 5.49, 0.37", "15.2774, -109.221, 5.3003, 0.44", "15.8222, -111.386, 4.91177, 0.74", "16.3223, -113.538, 4.61697, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.65322, -38.0313, 11.3109, 0.22", "-4.06396, -40.1156, 12.7945, 0.22", "-4.19428, -40.8603, 13.373, 0.66", "-4.33968, -41.7516, 14.072, 1.03", "-4.48922, -42.7463, 14.8356, 0.22", "-4.61054, -43.5406, 15.4265, 0.22", "-4.73364, -44.3641, 16.0052, 0.37", "-4.83235, -45.2364, 16.5771, 0.37", "-4.91231, -45.8202, 16.9492, 0.88", "-4.98219, -46.2806, 17.2272, 1.92", "-5.07912, -46.9067, 17.575, 2.14", "-5.29793, -48.4558, 18.3877, 0.22", "-5.4621, -49.7412, 19.0652, 0.22", "-5.54786, -50.4889, 19.4729, 0.88", "-5.60888, -51.1939, 19.8963, 1.7", "-5.64431, -51.8936, 20.3548, 2.06", "-5.66296, -53.6754, 21.6137, 0.29", "-5.63769, -54.7268, 22.3746, 0.29", "-5.59027, -55.5491, 22.9679, 0.81", "-5.53963, -56.3099, 23.4739, 1.25", "-5.47955, -57.9736, 24.5131, 0.15", "-5.47741, -58.6724, 24.9056, 0.15", "-5.4947, -59.3109, 25.2208, 0.88", "-5.54907, -60.3976, 25.688, 2.43", "-5.67613, -62.1399, 26.3413, 0.66", "-5.85601, -63.9614, 26.938, 0.29", "-5.94939, -64.8381, 27.1918, 0.88", "-6.10428, -66.4025, 27.6203, 0.22", "-6.14698, -66.9261, 27.7772, 0.52", "-6.17702, -67.5864, 27.972, 0.88", "-6.16822, -68.2496, 28.1744, 0.37", "-6.10012, -69.1315, 28.4271, 0.15", "-6.0207, -70.0551, 28.7004, 0.52", "-5.93331, -71.0854, 29.0152, 0.15", "-5.86943, -71.895, 29.2862, 0.15", "-5.84525, -72.2757, 29.4295, 0.66", "-5.82532, -72.7845, 29.6332, 0.96", "-5.78865, -74.1949, 30.2272, 0.22", "-5.76826, -75.0902, 30.6096, 1.25", "-5.76124, -75.6655, 30.8557, 2.43", "-5.7545, -76.318, 31.1516, 1.99", "-5.73182, -78.0241, 31.9555, 0.22", "-5.70815, -79.1577, 32.5027, 0.07", "-5.69405, -79.9183, 32.8851, 0.96", "-5.70655, -81.3175, 33.6219, 0.15", "-5.73992, -81.8647, 33.9276, 0.15", "-5.81483, -82.3973, 34.2503, 0.88", "-6.00218, -83.0197, 34.6969, 1.47", "-6.64204, -84.2566, 35.7132, 0.15", "-6.98871, -84.7014, 36.1349, 0.22", "-7.56645, -85.2131, 36.7048, 0.22", "-8.1156, -85.5965, 37.1874, 0.37", "-8.84605, -86.0122, 37.7798, 0.81", "-9.55952, -86.3536, 38.2974, 1.25", "-10.2536, -86.6459, 38.7489, 0.22", "-11.1315, -87.0315, 39.2996, 0.22", "-11.8736, -87.3717, 39.7589, 0.66", "-12.5285, -87.6881, 40.1538, 1.11", "-13.5642, -88.2214, 40.7946, 0.15", "-13.8169, -88.3618, 40.9577, 0.37", "-14.649, -88.8553, 41.4999, 0.15", "-15.2741, -89.2392, 41.889, 0.66", "-15.697, -89.5285, 42.1325, 1.18", "-16.967, -90.4358, 42.9016, 0.29", "-18.0094, -91.2126, 43.5838, 0.15", "-18.2957, -91.4493, 43.7876, 0.74", "-18.8435, -91.9445, 44.2058, 1.7", "-20.2081, -93.2745, 45.3429, 0.22", "-21.2824, -94.4456, 46.3691, 0.22", "-21.9225, -95.24, 47.0676, 1.18", "-22.7617, -96.4006, 48.1337, 0.07", "-23.0598, -96.8758, 48.577, 0.29", "-23.5083, -97.7536, 49.4225, 0.66", "-23.8064, -98.5252, 50.2027, 0.15", "-23.9141, -98.8933, 50.5548, 0.29", "-24.0393, -99.4043, 51.058, 0.37", "-24.1621, -99.9979, 51.6964, 1.11", "-24.2818, -100.763, 52.6018, 0.29", "-24.3577, -101.601, 53.6769, 0.88", "-24.3919, -102.687, 55.2417, 0.15", "-24.3597, -103.218, 56.1214, 1.11", "-24.2313, -104.03, 57.646, 0.66", "-24.0668, -104.814, 59.2709, 0.22", "-23.9492, -105.28, 60.2398, 0.96", "-23.72, -106.067, 61.8596, 0.88", "-23.4806, -106.933, 63.6985, 0.22", "-23.3486, -107.514, 64.9297, 0.74", "-23.2646, -107.969, 65.8699, 1.03", "-23.1354, -108.905, 67.71, 0.15", "-23.0558, -109.642, 69.0863, 1.33", "-22.9323, -111.043, 71.556, 0.37", "-22.873, -111.736, 72.7128, 0.37", "-22.8209, -112.333, 73.6617, 0.22", "-22.7924, -112.625, 74.1172, 0.74", "-22.723, -113.522, 75.4602, 0.22", "-22.698, -114.15, 76.2718, 0.52", "-22.6879, -114.608, 76.7463, 1.11", "-22.7335, -115.637, 77.712, 0.07", "-22.7937, -116.23, 78.2198, 0.15", "-22.8732, -116.817, 78.6797, 0.66", "-23.0201, -117.677, 79.246, 0.07", "-23.0896, -118.05, 79.475, 0.22", "-23.2207, -118.678, 79.8692, 0.07", "-23.3655, -119.248, 80.2261, 1.03", "-23.5179, -119.811, 80.5726, 1.4", "-23.88, -121.15, 81.3765, 0.22", "-24.1799, -122.237, 82.0356, 0.07", "-24.3804, -122.935, 82.4711, 0.59", "-24.7007, -124.027, 83.1844, 0.07", "-24.9055, -124.682, 83.6466, 0.15", "-25.1518, -125.353, 84.1602, 1.18", "-25.4281, -126.026, 84.6958, 0.15", "-25.7084, -126.647, 85.249, 0.88", "-26.1036, -127.469, 86.0329, 0.07", "-26.3295, -127.916, 86.4934, 0.44", "-26.864, -128.832, 87.5473, 0.15", "-27.2398, -129.418, 88.2801, 0.96", "-28.0192, -130.585, 89.8042, 0.29", "-28.2997, -130.994, 90.3381, 0.15", "-28.5345, -131.326, 90.744, 0.52", "-29.1341, -132.192, 91.717, 0.37", "-29.6545, -133.01, 92.5287, 1.25", "-30.0373, -133.669, 93.0914, 0.07", "-30.2782, -134.144, 93.4332, 0.22", "-30.7682, -135.224, 94.1567, 0.07", "-30.9021, -135.569, 94.3679, 0.59", "-31.1324, -136.263, 94.7558, 1.33", "-31.6066, -137.802, 95.5808, 0.07", "-31.9329, -138.943, 96.1991, 0.07", "-32.0752, -139.492, 96.5239, 0.59", "-32.2457, -140.262, 97.0237, 0.15", "-32.4049, -140.965, 97.512, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-38.1159, -102.158, 16.6626, 0.22", "-39.3721, -103.417, 17.0435, 0.22", "-40.1907, -104.333, 17.2147, 0.22", "-40.5185, -104.692, 17.2404, 0.15", "-40.9782, -105.185, 17.272, 0.44", "-41.4125, -105.642, 17.304, 0.96", "-41.8618, -106.113, 17.3377, 1.11", "-42.7785, -107.094, 17.3684, 0.29", "-44.0921, -108.538, 17.4524, 0.22", "-44.5866, -109.069, 17.4751, 0.59", "-44.9229, -109.418, 17.4866, 0.96", "-45.4329, -109.924, 17.5125, 0.96", "-46.1947, -110.652, 17.5679, 0.22", "-46.8716, -111.289, 17.643, 0.22", "-47.7757, -112.182, 17.7878, 0.22", "-48.1745, -112.571, 17.8611, 0.52", "-48.857, -113.234, 18.0149, 1.33", "-49.67, -114.011, 18.2275, 0.22", "-50.3677, -114.679, 18.4264, 0.52", "-51.2766, -115.564, 18.7352, 0.15", "-51.9262, -116.243, 18.9937, 0.15", "-52.295, -116.653, 19.144, 0.22", "-52.4702, -116.867, 19.2258, 0.37", "-52.9156, -117.435, 19.4564, 0.81", "-53.5072, -118.22, 19.8103, 0.15", "-53.6832, -118.464, 19.935, 0.07", "-53.9442, -118.847, 20.1465, 0.15", "-54.4295, -119.486, 20.5325, 0.22", "-54.9409, -120.061, 20.9499, 0.15", "-55.3664, -120.45, 21.2862, 0.15", "-55.69, -120.684, 21.5199, 0.44", "-56.1536, -120.967, 21.8317, 0.66", "-57.4025, -121.646, 22.6734, 0.22", "-58.2922, -122.117, 23.2642, 0.74", "-59.2287, -122.599, 23.8854, 1.7", "-60.5583, -123.276, 24.7669, 0.22", "-61.2877, -123.652, 25.2615, 0.15", "-62.0824, -124.052, 25.8125, 0.52", "-62.5371, -124.27, 26.1392, 0.66", "-63.5003, -124.721, 26.8034, 0.22", "-64.2959, -125.074, 27.3292, 0.37", "-65.0093, -125.363, 27.7633, 0.22", "-65.6444, -125.575, 28.0921, 0.37", "-66.2334, -125.735, 28.3292, 0.37", "-66.8389, -125.876, 28.5508, 0.15", "-67.7293, -126.109, 28.8387, 0.15", "-68.093, -126.21, 28.9427, 0.74", "-69.0804, -126.536, 29.1941, 1.55", "-70.6564, -127.148, 29.6074, 0.07", "-71.7669, -127.642, 29.924, 0.15", "-72.6196, -128.067, 30.1902, 0.07", "-72.9033, -128.233, 30.2894, 0.44", "-73.3183, -128.508, 30.4547, 0.44", "-74.2524, -129.221, 30.8727, 0.22", "-74.8636, -129.754, 31.1742, 0.88", "-75.301, -130.174, 31.384, 1.47", "-76.4582, -131.358, 31.9589, 0.07", "-77.066, -132.018, 32.2621, 0.07", "-77.253, -132.235, 32.355, 0.29", "-77.7745, -132.894, 32.5918, 0.81", "-78.475, -133.812, 32.8632, 0.07", "-79.0704, -134.627, 33.0515, 0.07", "-79.6757, -135.538, 33.1769, 0.07", "-79.8988, -135.897, 33.215, 0.59", "-80.2298, -136.445, 33.2671, 0.96", "-81.0283, -137.819, 33.4073, 0.15", "-81.4072, -138.505, 33.4863, 0.88", "-82.322, -140.17, 33.6922, 0.07", "-82.704, -140.878, 33.8124, 0.37", "-82.7409, -140.947, 33.8282, 0.37", "-83.303, -142.036, 34.1586, 0.07", "-83.6738, -142.797, 34.4664, 0.88", "-84.2693, -144.013, 35.071, 0.07", "-84.6518, -144.826, 35.5308, 0.07", "-84.8167, -145.21, 35.7522, 0.29", "-84.9442, -145.517, 35.9315, 0.29", "-85.3938, -146.619, 36.5816, 0.07", "-85.7213, -147.375, 37.0183, 0.81", "-85.9458, -147.87, 37.2895, 1.4", "-87.1498, -150.256, 38.5763, 0.07", "-87.4715, -150.834, 38.8935, 0.74", "-87.7395, -151.283, 39.1376, 0.74", "-88.5963, -152.626, 39.8803, 0.07", "-88.9363, -153.122, 40.1598, 0.22", "-89.6624, -154.072, 40.7195, 0.07", "-90.1653, -154.645, 41.0872, 0.81", "-90.5167, -155.032, 41.3642, 1.25", "-91.4879, -156.022, 42.2004, 0.22", "-91.9748, -156.483, 42.6322, 0.07", "-92.3407, -156.82, 42.958, 0.44", "-93.5922, -157.923, 44.0318, 0.07", "-94.3848, -158.586, 44.7128, 1.03", "-95.3871, -159.373, 45.5967, 0.07", "-95.818, -159.687, 45.9821, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-38.1159, -102.158, 16.6626, 0.07", "-38.3256, -102.704, 16.6984, 0.07", "-38.4896, -103.09, 16.7255, 0.29", "-38.7529, -103.628, 16.7608, 0.15", "-38.9389, -103.966, 16.7767, 0.15", "-39.1842, -104.386, 16.789, 0.74", "-39.2804, -104.553, 16.7906, 0.74", "-39.7021, -105.305, 16.7616, 0.15", "-39.9878, -105.858, 16.7187, 0.15", "-40.1582, -106.237, 16.6794, 0.29", "-40.356, -106.744, 16.6132, 0.15", "-40.473, -107.139, 16.5569, 0.29", "-40.6118, -107.856, 16.4702, 0.07", "-40.6324, -108.095, 16.4464, 0.52", "-40.6387, -108.392, 16.4254, 0.88", "-40.6408, -108.831, 16.4192, 0.88", "-40.6664, -109.642, 16.4522, 0.07", "-40.7054, -110.199, 16.4979, 0.07", "-40.7435, -110.537, 16.5348, 0.29", "-40.7894, -110.864, 16.5711, 0.74", "-40.8925, -111.44, 16.6288, 0.22", "-41.1184, -112.548, 16.7, 0.22", "-41.1994, -112.87, 16.7065, 0.59", "-41.2998, -113.211, 16.697, 1.11", "-41.3471, -113.368, 16.686, 1.25", "-41.5009, -113.893, 16.6278, 0.74", "-41.6754, -114.528, 16.529, 0.22", "-41.8129, -115.075, 16.4288, 0.15", "-41.9245, -115.573, 16.3346, 0.15", "-41.9986, -115.939, 16.2672, 0.15", "-42.0843, -116.363, 16.1958, 0.15", "-42.16, -116.749, 16.1306, 0.37", "-42.2867, -117.374, 16.0319, 0.22", "-42.3742, -117.827, 15.9604, 0.74", "-42.4437, -118.258, 15.8836, 1.25", "-42.539, -118.93, 15.7632, 0.22", "-42.6292, -119.701, 15.6269, 0.15", "-42.6565, -119.998, 15.5792, 0.74", "-42.6867, -120.436, 15.5233, 0.88", "-42.7347, -121.588, 15.3883, 0.15", "-42.7387, -122.263, 15.3132, 0.15", "-42.7305, -122.492, 15.2912, 0.29", "-42.7006, -122.956, 15.2638, 0.37", "-42.6665, -123.471, 15.2346, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-13.0355, -33.038, -13.0746, 0.66", "-12.2704, -34.4805, -12.8059, 0.66", "-11.4644, -35.6734, -12.708, 0.29", "-11.0664, -36.2533, -12.6908, 0.29", "-10.5873, -37.0221, -12.6849, 0.66", "-9.80493, -38.398, -12.6327, 0.81", "-8.95401, -39.9916, -12.5439, 0.37", "-8.25681, -41.2243, -12.4835, 0.37", "-7.67721, -42.2804, -12.4004, 0.22", "-7.14815, -43.3086, -12.308, 0.29", "-6.56477, -44.6022, -12.1318, 0.29", "-6.32904, -45.2662, -11.9911, 1.4", "-6.12461, -46.0202, -11.7485, 2.58", "-5.83146, -47.4456, -11.1263, 2.58" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.0355, -33.038, -13.0746, 0.59", "-12.7786, -33.3532, -13.7792, 0.59", "-12.2191, -33.7676, -14.9853, 0.59", "-11.6511, -34.0581, -16.1644, 0.59", "-11.3958, -34.1508, -16.7753, 0.59", "-10.94, -34.2882, -18.1227, 0.44", "-10.4843, -34.4256, -19.4697, 0.44", "-10.0954, -34.4921, -20.4141, 0.74", "-9.7241, -34.4726, -21.1999, 0.74", "-9.20693, -34.2876, -22.362, 0.22", "-8.95501, -34.0665, -23.1766, 0.37", "-2.09312, -36.0529, -32.2283, 0.37", "3.63458, -36.9759, -42.1807, 0.37", "8.23633, -36.1092, -52.7087, 0.37", "11.5355, -35.2268, -63.7137, 0.37", "13.8941, -34.2776, -74.9531, 0.37" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "151.136, -8.13421, 75.34, 0.07", "151.566, -6.85891, 75.2552, 0.07", "151.898, -5.90245, 75.2616, 0.22", "152.485, -4.31408, 75.3255, 0.07", "152.727, -3.71018, 75.3703, 0.59", "152.947, -3.19343, 75.4153, 0.96", "153.961, -0.87748, 75.6228, 0.07", "154.529, 0.270051, 75.7363, 0.15", "155.319, 1.76217, 75.9052, 0.07", "156.14, 3.22223, 76.0408, 0.07", "156.491, 3.80718, 76.078, 0.29", "156.938, 4.50085, 76.0897, 0.96", "158.083, 6.17327, 76.0479, 0.07", "158.806, 7.23691, 75.969, 0.07", "159.387, 8.11226, 75.9126, 0.29", "160.122, 9.25093, 75.8515, 1.18", "161.454, 11.3769, 75.7978, 0.07", "162.172, 12.5727, 75.8074, 0.07", "162.632, 13.3916, 75.8368, 0.22", "163.52, 15.0878, 76.0148, 0.07", "163.799, 15.6582, 76.1211, 0.29", "164.156, 16.4616, 76.2864, 0.52", "164.915, 18.3811, 76.6769, 0.07", "165.08, 18.8326, 76.7791, 0.29", "166.021, 21.4253, 77.5901, 0.07", "166.44, 22.5592, 78.0615, 0.07", "166.82, 23.6003, 78.5246, 1.11", "167.419, 25.2548, 79.3391, 0.07", "167.973, 26.7797, 80.2108, 0.07", "168.777, 28.8879, 81.5574, 0.29", "169.286, 30.0941, 82.5094, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "151.136, -8.13421, 75.34, 0.07", "151.911, -8.76967, 75.7212, 0.07", "152.394, -9.16537, 75.9586, 0.15", "152.916, -9.59226, 76.2147, 1.4", "153.659, -10.201, 76.58, 0.52", "154.234, -10.6727, 76.863, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-155.847, 51.1151, 24.587, 0.22", "-157.075, 51.6221, 23.9588, 0.22", "-157.434, 51.7766, 23.7741, 0.44", "-157.978, 52.018, 23.4843, 0.66", "-158.824, 52.4123, 23.0232, 0.15", "-159.639, 52.8278, 22.5748, 0.15", "-159.913, 52.9811, 22.4286, 0.52", "-160.413, 53.3065, 22.1298, 1.18", "-160.913, 53.659, 21.8218, 0.37", "-161.36, 54.0082, 21.5526, 0.07", "-161.646, 54.2442, 21.407, 0.07", "-162.11, 54.6482, 21.1826, 0.15", "-162.69, 55.1827, 20.8878, 0.07", "-162.946, 55.4242, 20.752, 0.59", "-163.194, 55.6498, 20.611, 1.11", "-164.262, 56.5957, 19.9398, 0.15", "-164.845, 57.1194, 19.5316, 0.15", "-165.165, 57.4276, 19.2862, 0.59", "-165.396, 57.6807, 19.0756, 0.52", "-165.86, 58.2367, 18.5839, 0.15", "-166.134, 58.6043, 18.2482, 0.15", "-166.339, 58.9577, 17.9, 0.15", "-166.515, 59.3675, 17.5233, 0.66", "-166.807, 60.201, 16.7849, 0.15", "-166.93, 60.6418, 16.4126, 0.37", "-167.044, 61.1601, 16.0017, 0.22", "-167.2, 61.9799, 15.3334, 0.22", "-167.276, 62.4586, 14.9249, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-155.847, 51.1151, 24.587, 0.15", "-157.926, 50.8464, 25.2942, 0.15", "-158.562, 50.7594, 25.4869, 0.59", "-159.125, 50.728, 25.618, 0.81", "-160.008, 50.7265, 25.7903, 0.15", "-161.515, 50.7867, 26.0456, 0.15", "-161.871, 50.8199, 26.1069, 0.59", "-162.339, 50.896, 26.1632, 1.03", "-164.304, 51.3412, 26.4033, 0.07", "-164.9, 51.503, 26.4789, 0.74", "-165.485, 51.6908, 26.5516, 0.74", "-167.13, 52.2425, 26.7299, 0.07", "-168.319, 52.6251, 26.8751, 0.07", "-169.575, 53.028, 27.0395, 0.07", "-169.838, 53.1037, 27.0765, 0.88", "-170.789, 53.3686, 27.2068, 1.4", "-172.564, 53.8609, 27.4325, 0.44", "-174.144, 54.2986, 27.5933, 0.07", "-174.965, 54.5313, 27.6899, 0.07", "-175.962, 54.8197, 27.8316, 0.07", "-176.845, 55.0965, 27.9831, 0.07", "-177.458, 55.3074, 28.1027, 0.81", "-179.311, 56.01, 28.5033, 0.07", "-180.362, 56.4364, 28.7533, 0.96", "-182.175, 57.1322, 29.2697, 0.15", "-182.96, 57.425, 29.5346, 0.15", "-183.604, 57.6499, 29.783, 0.74", "-184.323, 57.8954, 30.09, 1.18", "-185.594, 58.3016, 30.6895, 0.07", "-186.737, 58.6127, 31.1895, 0.15", "-187.652, 58.816, 31.557, 0.15", "-188.096, 58.8939, 31.7082, 0.15", "-188.723, 58.9896, 31.8917, 0.81", "-189.757, 59.1626, 32.1163, 1.25", "-191.112, 59.418, 32.3421, 0.15", "-191.961, 59.6035, 32.4541, 0.15", "-192.682, 59.7448, 32.5367, 0.66", "-193.335, 59.8656, 32.6097, 0.22", "-194.667, 60.151, 32.7803, 0.15", "-195.561, 60.3965, 32.9115, 0.96", "-196.091, 60.5634, 33.0078, 1.11", "-196.854, 60.8408, 33.1622, 0.52", "-197.87, 61.2831, 33.3823, 0.15", "-198.549, 61.6592, 33.5277, 0.22", "-198.924, 61.9515, 33.6209, 0.15", "-199.246, 62.2965, 33.7031, 0.15", "-199.706, 62.9282, 33.8405, 0.37", "-199.927, 63.254, 33.9151, 0.37", "-200.641, 64.2396, 34.1536, 0.15", "-201.42, 65.1355, 34.413, 0.22", "-201.936, 65.6792, 34.6057, 0.74", "-202.317, 66.055, 34.7568, 1.18", "-203.764, 67.3793, 35.4111, 0.07", "-204.454, 67.9944, 35.7524, 0.81", "-205.613, 69.0459, 36.4158, 0.15", "-206.153, 69.5624, 36.7614, 0.59", "-206.589, 70.0397, 37.1298, 1.18", "-207.753, 71.4326, 38.3318, 0.15", "-208.19, 71.9936, 38.8672, 0.29", "-208.735, 72.6857, 39.5737, 0.52", "-209.098, 73.1323, 40.0422, 0.96", "-210.312, 74.427, 41.4614, 0.22", "-210.867, 74.8909, 42.0495, 0.29", "-211.649, 75.3124, 42.7742, 0.15", "-212.513, 75.5851, 43.4996, 0.15", "-213.036, 75.6433, 43.9245, 0.88", "-213.525, 75.5935, 44.3898, 1.4", "-214.693, 75.134, 45.9258, 0.22", "-215.157, 74.7754, 46.943, 0.29", "-215.355, 74.4414, 47.7665, 0.15", "-215.478, 73.9107, 48.9389, 0.37", "-215.525, 73.1884, 50.5148, 0.15", "-215.466, 72.5795, 51.7935, 0.81", "-215.35, 72.0436, 52.9191, 0.15", "-215.223, 71.575, 53.9951, 0.66", "-215.006, 70.8527, 55.8696, 0.15", "-214.833, 70.2978, 57.4383, 0.74", "-214.65, 69.6952, 59.2999, 0.22", "-214.486, 69.1511, 61.031, 0.22", "-214.296, 68.4298, 63.334, 0.81", "-214.189, 67.9746, 64.8077, 1.25", "-213.971, 67.098, 67.8299, 0.15", "-213.815, 66.5735, 69.8329, 0.44", "-213.721, 66.3344, 70.8821, 0.44", "-213.642, 66.2001, 71.5718, 0.44", "-213.585, 66.1273, 72.0001, 0.44", "-213.449, 65.9832, 73.0701, 0.44", "-213.293, 65.8746, 74.2508, 0.44", "-213.165, 65.7967, 74.9458, 0.44", "-212.757, 65.5664, 76.6056, 0.44", "-212.535, 65.4087, 77.3138, 0.44", "-211.75, 64.7003, 79.2926, 0.44", "-211.509, 64.4456, 79.7697, 0.07", "-210.956, 63.8435, 80.6741, 0.07", "-210.301, 63.1773, 81.5823, 0.37", "-209.443, 62.4423, 82.5726, 0.15", "-208.763, 61.9556, 83.3104, 1.47", "-207.728, 61.2573, 84.3341, 0.07", "-207.364, 61.0285, 84.7272, 0.22", "-206.445, 60.5019, 85.8431, 0.07", "-205.746, 60.1619, 86.7804, 0.44", "-205.006, 59.9146, 87.7201, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "61.7931, -242.564, 57.5905, 0.15", "62.9886, -244.499, 57.2397, 0.15", "63.2368, -244.921, 57.1688, 0.29", "63.5356, -245.437, 57.0841, 0.66", "64.2676, -246.718, 56.8783, 0.15", "64.6092, -247.269, 56.7779, 0.29", "65.3431, -248.414, 56.5585, 0.07", "65.7201, -248.997, 56.4453, 0.07", "65.9624, -249.361, 56.3716, 0.74", "66.3679, -249.956, 56.2469, 1.47", "67.7901, -251.94, 55.7998, 0.22", "68.1168, -252.366, 55.6942, 0.81", "68.5355, -252.848, 55.5531, 1.4" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "61.7931, -242.564, 57.5905, 0.22", "62.8037, -243.793, 59.5382, 0.22", "63.258, -244.38, 60.3955, 0.29", "63.7976, -245.042, 61.2843, 0.15", "64.3928, -245.749, 62.1849, 0.37", "64.6215, -246.019, 62.5177, 0.52", "65.1955, -246.701, 63.3394, 0.22", "65.688, -247.276, 64.0013, 0.81", "66.3697, -248.098, 64.8866, 0.15", "66.5707, -248.335, 65.1379, 0.22", "66.8744, -248.646, 65.5055, 0.52", "67.6568, -249.372, 66.4499, 0.15", "68.3204, -249.984, 67.2837, 0.88", "68.6149, -250.271, 67.6804, 0.96", "69.4363, -251.119, 68.8816, 0.22", "70.254, -251.996, 70.092, 1.33", "71.0092, -252.826, 71.3047, 0.22", "71.3461, -253.193, 71.8917, 0.07", "71.5967, -253.458, 72.3497, 0.15", "72.2441, -254.083, 73.5946, 0.15", "72.4544, -254.279, 74.0179, 1.18", "73.524, -255.21, 76.1484, 0.22", "74.3602, -255.809, 77.6546, 0.22", "74.7769, -256.073, 78.3274, 0.37", "75.6299, -256.583, 79.5857, 0.37", "76.1098, -256.866, 80.2447, 1.25", "77.3264, -257.578, 81.7629, 0.15", "78.1145, -258.053, 82.6283, 0.15", "78.507, -258.314, 83.0471, 0.37", "79.648, -259.155, 84.2627, 0.22", "80.1791, -259.588, 84.8183, 0.81", "81.3803, -260.658, 86.1868, 0.07", "81.6551, -260.951, 86.5465, 0.29", "82.0136, -261.378, 87.066, 0.44", "82.1856, -261.597, 87.339, 0.22", "82.3178, -261.793, 87.5693, 0.37", "83.0916, -263.199, 89.1419, 0.15", "83.3178, -263.844, 89.8715, 1.47" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.3223, -113.538, 4.61697, 0.59", "16.2385, -113.584, 2.16154, 0.59", "16.1161, -113.947, 0.817667, 0.59", "16.0857, -114.112, 0.526333, 0.59", "16.0833, -115.069, -0.53793, 0.59", "16.14, -115.733, -1.08853, 0.59", "16.209, -116.54, -1.75789, 1.11", "16.3225, -118.262, -2.67103, 0.15", "16.4159, -119.403, -3.14591, 1.03", "16.6582, -121.408, -3.84605, 0.15", "16.9042, -122.706, -4.16031, 0.22", "18.8546, -131.576, -10.7527, 0.22", "19.3775, -141.369, -16.3492, 0.22", "20.084, -151.44, -21.4617, 0.22", "19.9501, -162.262, -24.9985, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.3223, -113.538, 4.61697, 0.07", "16.3477, -116.199, 4.76748, 0.07", "16.3793, -117.526, 4.84718, 0.07", "16.3947, -118.169, 4.88587, 0.81", "16.4219, -119.31, 4.95439, 1.62", "16.4675, -121.224, 5.06941, 0.15", "16.4868, -122.031, 5.11791, 0.15", "16.513, -122.51, 5.15013, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-42.6665, -123.471, 15.2346, 0.07", "-43.2654, -123.743, 15.3992, 0.07", "-43.8995, -124.031, 15.5735, 0.07", "-44.2959, -124.211, 15.6824, 0.15", "-44.9431, -124.505, 15.8603, 0.07", "-45.3918, -124.708, 15.9835, 0.07", "-45.7733, -124.882, 16.0884, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-42.6665, -123.471, 15.2346, 0.81", "-42.4956, -124.329, 15.0944, 0.81", "-42.2333, -125.566, 14.9147, 0.22", "-41.9813, -126.782, 14.7657, 0.22", "-41.8285, -127.63, 14.6421, 0.15", "-41.6389, -128.771, 14.466, 0.15", "-41.6191, -128.897, 14.448, 0.15", "-41.5215, -129.452, 14.3552, 0.66", "-41.4023, -130.062, 14.2382, 1.03", "-41.1035, -131.652, 13.944, 0.22", "-40.981, -132.456, 13.7767, 0.66", "-40.8731, -133.334, 13.598, 0.22", "-40.7538, -134.395, 13.3977, 0.15", "-40.6841, -135.077, 13.2813, 0.15", "-40.6351, -135.537, 13.2239, 0.66", "-40.5473, -136.36, 13.1853, 0.29", "-40.4223, -137.827, 13.1875, 0.15", "-40.3957, -138.468, 13.213, 0.15", "-40.3999, -139.01, 13.2589, 0.15", "-40.4405, -139.837, 13.3378, 0.22", "-40.4971, -140.643, 13.4112, 0.59", "-40.6076, -141.738, 13.5008, 1.18", "-40.7496, -142.685, 13.5628, 1.7", "-40.9442, -143.792, 13.6133, 1.99", "-41.1559, -144.91, 13.6453, 1.25", "-41.471, -146.493, 13.6671, 0.22", "-41.6658, -147.459, 13.6718, 0.37", "-41.893, -148.581, 13.6438, 0.15", "-42.17, -149.999, 13.5707, 0.22", "-42.2846, -150.559, 13.525, 0.59", "-42.4196, -151.189, 13.4553, 1.11", "-42.6575, -152.115, 13.3455, 0.52", "-43.0993, -153.69, 13.1653, 0.22", "-43.2932, -154.268, 13.096, 0.88", "-43.6265, -155.152, 12.9849, 0.96", "-44.1672, -156.497, 12.8234, 0.07", "-44.6105, -157.536, 12.7085, 0.07", "-44.685, -157.699, 12.6956, 0.44", "-44.9601, -158.259, 12.7109, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-5.83146, -47.4456, -11.1263, 0.44", "-7.55059, -50.1305, -10.5939, 0.44", "-8.3692, -51.4048, -10.3249, 0.66", "-9.11026, -52.599, -10.0821, 0.66", "-10.0892, -54.2218, -9.77621, 0.44", "-10.6517, -55.1815, -9.60923, 0.81", "-11.078, -55.9423, -9.48776, 1.33", "-11.881, -57.4708, -9.25352, 0.74", "-12.5577, -58.8541, -9.05651, 0.37", "-12.9703, -59.7835, -8.9456, 0.22", "-13.4331, -60.901, -8.85525, 0.96", "-13.7593, -61.729, -8.84071, 0.15", "-13.9881, -62.3914, -8.84011, 0.29", "-19.087, -73.0462, -8.54069, 0.29", "-25.4016, -82.6044, -6.08005, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-5.83146, -47.4456, -11.1263, 0.59", "-5.1335, -48.1585, -11.3041, 0.59", "-4.69927, -48.6316, -11.3715, 0.29", "-4.50308, -48.8454, -11.4019, 0.81", "-4.03966, -49.3504, -11.4737, 0.52", "-3.53643, -49.8987, -11.5517, 0.22", "-3.22638, -50.2366, -11.5998, 0.66", "-2.88914, -50.7165, -11.6018, 1.18" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "13.8941, -34.2776, -74.9531, 0.07", "19.8816, -36.4491, -82.8912, 0.07", "26.4939, -36.8795, -90.6203, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "13.8941, -34.2776, -74.9531, 0.81", "18.9902, -34.5417, -86.4086, 0.07", "24.1832, -33.4193, -97.7785, 0.07", "27.6094, -32.1088, -109.781, 0.07", "30.7147, -32.7927, -121.912, 0.07", "33.861, -32.9842, -134.05, 0.07", "38.2457, -33.405, -145.791, 0.07", "42.941, -33.1988, -157.42, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "154.234, -10.6727, 76.863, 0.15", "155.088, -11.1898, 76.54, 0.15", "155.582, -11.4795, 76.3491, 0.66", "156.022, -11.7367, 76.1716, 0.66", "157.225, -12.4384, 75.6732, 0.07", "158.135, -12.9851, 75.2686, 0.07", "158.793, -13.3821, 74.9728, 0.96", "160.108, -14.1723, 74.3975, 0.07", "160.555, -14.419, 74.189, 0.07", "160.822, -14.5528, 74.0562, 0.22", "161.463, -14.849, 73.6897, 0.07", "162.047, -15.1245, 73.3328, 0.66", "162.256, -15.2259, 73.1955, 0.66", "163.48, -15.8514, 72.3129, 0.07", "163.972, -16.1183, 71.932, 0.44", "164.706, -16.5473, 71.3363, 0.22", "165.165, -16.8436, 70.9577, 0.96", "166.033, -17.5081, 70.2042, 0.22", "166.704, -18.1076, 69.6558, 0.07", "167.394, -18.8067, 69.1406, 0.74", "167.655, -19.0746, 68.9782, 1.03", "168.138, -19.5618, 68.7365, 0.59", "168.987, -20.4077, 68.3804, 0.15", "170.048, -21.4567, 68.0353, 0.15", "170.34, -21.7268, 67.9404, 0.59", "171.478, -22.6972, 67.5755, 0.07", "171.839, -22.9649, 67.4421, 0.74", "172.227, -23.2067, 67.2687, 0.96", "173.544, -23.8873, 66.593, 0.07", "174.585, -24.3619, 65.9897, 0.07", "174.992, -24.5317, 65.7329, 0.66", "175.886, -24.84, 65.1002, 0.22", "176.687, -25.088, 64.4974, 0.66", "177.047, -25.172, 64.1999, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "154.234, -10.6727, 76.863, 0.07", "155.612, -10.2418, 77.8863, 0.07", "156.502, -9.97742, 78.5394, 0.07", "157.076, -9.81772, 78.947, 0.81", "157.718, -9.64902, 79.4112, 0.22", "158.403, -9.47981, 79.9046, 0.96", "160.026, -9.12512, 81.0686, 0.07", "160.467, -9.04072, 81.3632, 0.07", "160.886, -8.95884, 81.6532, 0.29", "161.611, -8.81347, 82.1954, 1.11", "162.102, -8.72364, 82.5804, 1.55", "163.364, -8.52529, 83.5723, 0.22", "164.398, -8.37503, 84.4003, 0.88", "165.516, -8.18403, 85.3797, 0.22", "166.101, -8.06026, 85.9575, 0.22", "166.737, -7.87891, 86.6844, 0.66", "166.919, -7.80786, 86.9331, 1.33", "167.979, -7.29378, 88.6465, 0.22", "168.694, -6.91009, 89.9792, 0.22", "169.32, -6.54387, 91.2543, 0.66", "169.964, -6.1138, 92.6022, 0.88", "170.638, -5.60676, 94.0157, 0.37", "171.047, -5.27807, 94.9057, 0.37", "171.42, -4.95436, 95.7576, 0.81", "171.656, -4.76677, 96.2538, 1.11", "172.166, -4.4173, 97.192, 0.22", "172.591, -4.18985, 97.826, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-25.4016, -82.6044, -6.08005, 0.07", "-29.8783, -89.01, -6.29318, 0.07", "-34.1196, -95.5907, -6.4926, 0.07", "-38.8467, -101.8, -6.43108, 0.07", "-43.3223, -108.091, -7.58084, 0.07", "-47.635, -114.413, -9.12358, 0.07", "-52.8266, -119.945, -10.7152, 0.07", "-58.1579, -125.248, -12.5325, 0.07", "-63.0498, -130.952, -14.4773, 0.07", "-67.9471, -136.93, -15.4087, 0.07", "-73.057, -142.791, -15.5912, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-25.4016, -82.6044, -6.08005, 0.81", "-30.3697, -94.2209, -3.26582, 0.07", "-37.075, -104.678, 0.00877023, 0.07", "-42.7419, -116.069, 2.28309, 0.07", "-48.5391, -127.619, 2.97064, 0.07", "-55.0186, -138.586, 4.93146, 0.07", "-62.6651, -148.902, 5.09163, 0.07", "-69.8657, -159.277, 7.41451, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-2.88914, -50.7165, -11.6018, 0.15", "-3.28558, -52.0509, -11.4134, 0.15", "-3.3812, -52.3727, -11.368, 0.59", "-3.5469, -52.9304, -11.2892, 1.33", "-3.7232, -53.5238, -11.2055, 0.22", "-6.43024, -60.8387, -11.0884, 0.22", "-8.67406, -68.2314, -10.0084, 0.22", "-11.317, -75.5756, -10.0675, 0.22", "-13.9911, -82.7755, -8.82812, 0.22" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-2.88914, -50.7165, -11.6018, 0.44", "-2.43146, -51.8668, -11.7344, 0.44", "-1.98943, -53.0007, -11.8482, 0.15", "-1.66594, -53.8067, -11.9134, 0.15", "-1.47393, -54.2653, -11.9429, 0.88", "-1.11808, -55.1156, -11.9904, 1.92", "0.013633, -57.8197, -12.1415, 0.22", "0.339989, -58.6213, -12.1765, 0.66", "0.663271, -59.3895, -12.2136, 1.33", "0.942281, -60.0841, -12.2548, 2.06", "1.25129, -60.8598, -12.2867, 1.62", "5.31572, -70.2194, -11.0557, 1.62", "10.6736, -78.6584, -8.99695, 1.62" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "26.4939, -36.8795, -90.6203, 0.07", "33.8912, -38.5547, -99.6598, 0.07", "41.1361, -39.7647, -108.896, 0.07", "47.464, -41.8994, -118.626, 0.07", "52.8894, -46.7959, -127.952, 0.07", "60.7502, -50.6088, -135.901, 0.07", "68.9732, -54.8291, -143.26, 0.07", "77.0354, -60.3014, -149.986, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "26.4939, -36.8795, -90.6203, 0.07", "31.3645, -37.3463, -97.4945, 0.07", "37.3207, -37.2572, -103.478, 0.07", "44.4585, -38.0548, -107.907, 0.07", "52.1727, -37.9579, -111.346, 0.07", "59.6674, -37.3613, -115.214, 0.07", "67.6753, -35.6124, -117.413, 0.07", "75.8745, -34.3093, -119.11, 0.07", "83.8371, -33.0951, -121.732, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "42.941, -33.1988, -157.42, 0.07", "47.0994, -33.2477, -168.06, 0.07", "50.6438, -34.0752, -178.888, 0.07", "53.4481, -34.5933, -189.95, 0.07", "53.9925, -35.2931, -201.341, 0.07", "55.4477, -37.4025, -212.49, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "42.941, -33.1988, -157.42, 0.07", "46.8856, -33.0465, -168.41, 0.07", "52.133, -34.7989, -178.698, 0.07", "58.0143, -37.5372, -188.424, 0.07", "63.9518, -38.7997, -198.4, 0.07", "69.4182, -38.5666, -208.72, 0.07", "73.5361, -39.4129, -219.614, 0.07", "76.3182, -39.1034, -230.952, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "172.591, -4.18985, 97.826, 0.29", "173.68, -3.90072, 99.5975, 0.29", "174.399, -3.73103, 100.515, 0.52", "174.986, -3.5598, 101.133, 0.52", "175.632, -3.34017, 101.779, 0.52", "176.078, -3.18514, 102.225, 0.52", "176.461, -3.03448, 102.621, 0.52", "177.542, -2.59697, 103.671, 0.15", "178.629, -2.10482, 104.813, 0.15", "179.274, -1.82046, 105.454, 0.15", "179.768, -1.61747, 105.926, 0.59", "180.635, -1.28763, 106.777, 0.59", "181.109, -1.10489, 107.281, 0.59", "181.885, -0.768392, 108.199, 0.81", "182.509, -0.530172, 108.947, 0.15", "183.179, -0.30676, 109.715, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "172.591, -4.18985, 97.826, 0.15", "173.434, -2.67427, 97.6732, 0.15", "174.223, -1.27267, 97.5681, 0.15", "174.617, -0.580521, 97.5204, 0.52", "175.098, 0.21232, 97.463, 0.88", "175.454, 0.79746, 97.4166, 1.11", "176.604, 2.67964, 97.2574, 0.07", "177.297, 3.84292, 97.1594, 0.07", "177.764, 4.6488, 97.0723, 1.11", "178.673, 6.24409, 96.9, 0.15", "179.016, 6.87086, 96.8332, 0.15", "179.163, 7.15039, 96.8039, 0.29", "179.596, 8.01375, 96.7007, 0.15", "180.087, 8.99129, 96.5604, 0.74", "180.567, 9.96341, 96.4562, 0.07", "180.898, 10.6346, 96.4056, 0.07", "181.26, 11.3284, 96.3841, 0.07", "181.715, 12.1723, 96.3398, 0.74", "182.475, 13.5198, 96.2902, 0.07", "183.181, 14.7071, 96.308, 0.07", "183.725, 15.5742, 96.3688, 0.44", "184.753, 17.1414, 96.5322, 0.07", "185.433, 18.1694, 96.6533, 0.59", "186.13, 19.2094, 96.788, 1.11", "187.449, 21.1069, 97.0371, 0.15", "188.151, 22.073, 97.141, 0.15", "188.823, 22.9689, 97.2286, 0.96", "189.915, 24.3985, 97.3393, 0.07", "190.271, 24.8719, 97.3645, 0.22", "190.862, 25.6359, 97.3327, 0.07", "191.403, 26.3193, 97.2437, 0.22", "192.263, 27.3783, 97.0871, 0.07", "192.633, 27.8113, 97.0279, 0.22", "193.645, 28.9259, 96.895, 0.07", "194.364, 29.6724, 96.819, 0.96", "195.532, 30.8171, 96.7145, 0.07", "196.46, 31.6513, 96.6454, 0.07", "197.092, 32.1886, 96.602, 0.52", "197.614, 32.6115, 96.5542, 0.29", "198.929, 33.6176, 96.3849, 0.15", "199.719, 34.2123, 96.254, 0.59", "201.362, 35.3388, 95.9524, 0.07", "202.363, 35.9736, 95.7486, 0.07", "203.23, 36.4876, 95.5632, 0.44", "205.35, 37.7305, 95.0887, 0.07", "205.887, 38.0339, 94.9609, 0.22", "207.724, 39.0203, 94.5168, 0.07", "208.527, 39.4132, 94.3253, 0.29", "209.317, 39.7604, 94.1587, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-13.9911, -82.7755, -8.82812, 0.07", "-17.993, -93.0397, -8.49927, 0.07", "-22.9531, -102.723, -7.16601, 0.07", "-26.848, -113.015, -6.52887, 0.07", "-29.7588, -123.653, -7.51313, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-13.9911, -82.7755, -8.82812, 0.81", "-17.7342, -93.0925, -8.03396, 0.07", "-22.8238, -102.775, -7.66405, 0.07", "-28.5968, -112.031, -7.57698, 0.07", "-33.0454, -122.0, -8.78799, 0.07", "-34.7516, -132.952, -8.95441, 0.07", "-37.1291, -143.703, -7.99142, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "10.6736, -78.6584, -8.99695, 0.22", "15.2463, -87.2371, -8.95846, 0.22", "19.2354, -96.1256, -8.90806, 0.22", "21.8502, -105.543, -9.28291, 0.22", "23.716, -115.15, -9.58176, 0.22", "27.3956, -124.165, -10.1987, 0.22", "31.9113, -132.776, -10.3766, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "10.6736, -78.6584, -8.99695, 0.07", "16.1962, -89.5661, -8.25347, 0.22", "21.8313, -100.145, -5.93184, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "77.0354, -60.3014, -149.986, 0.07", "84.0771, -63.7737, -158.186, 0.07", "89.1008, -68.5095, -167.248, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "77.0354, -60.3014, -149.986, 0.07", "83.5874, -63.763, -157.412, 0.07", "90.1869, -68.7831, -163.884, 0.07", "97.9947, -73.6713, -168.929, 0.07", "104.445, -78.814, -175.462, 0.07", "110.094, -84.4208, -182.38, 0.07", "115.336, -90.9078, -188.891, 0.07", "121.175, -97.7204, -194.501, 0.07", "126.146, -105.408, -199.909, 0.07", "130.362, -113.093, -205.957, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "83.8371, -33.0951, -121.732, 0.07", "95.3442, -34.891, -124.722, 0.07", "107.148, -36.2064, -126.583, 0.07", "118.427, -38.3753, -130.151, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "83.8371, -33.0951, -121.732, 0.07", "95.1092, -29.511, -130.552, 0.07", "106.243, -26.737, -139.789, 0.07", "118.323, -26.6573, -148.128, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "55.4477, -37.4025, -212.49, 0.07", "59.4139, -37.5128, -224.019, 0.07", "62.7305, -36.5915, -235.721, 0.07", "65.7143, -34.421, -247.366, 0.07", "67.7258, -30.7912, -258.89, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "55.4477, -37.4025, -212.49, 0.07", "54.4458, -39.0345, -227.605, 0.07", "53.8125, -42.474, -242.471, 0.07", "54.3003, -44.2449, -257.584, 0.07", "54.6872, -46.4452, -272.652, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-37.1291, -143.703, -7.99142, 0.07", "-41.9291, -156.848, -6.42027, 0.07", "-45.368, -170.357, -4.1307, 0.07", "-50.0984, -182.725, 0.481656, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-37.1291, -143.703, -7.99142, 0.07", "-39.3376, -148.835, -9.12689, 0.07", "-41.2452, -154.005, -10.6121, 0.07", "-42.6232, -159.001, -12.9794, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "21.8313, -100.145, -5.93184, 0.07", "27.7576, -110.75, -5.15112, 0.07", "31.9563, -122.196, -4.18802, 0.07", "37.1552, -133.24, -3.94111, 0.07", "41.566, -144.606, -5.02764, 0.07", "47.5774, -155.194, -4.83273, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "21.8313, -100.145, -5.93184, 0.81", "25.6405, -107.944, -4.49234, 0.07", "29.2156, -115.941, -3.49641, 0.07", "31.9306, -124.359, -3.141, 0.07", "33.8995, -132.991, -2.72867, 0.07", "36.3374, -141.4, -4.12891, 0.07", "40.4759, -149.172, -4.57207, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "118.323, -26.6573, -148.128, 0.07", "127.118, -25.961, -153.142, 0.07", "135.983, -24.5032, -157.897, 0.07", "145.193, -22.5884, -161.778, 0.07", "153.975, -19.5207, -165.996, 0.07", "163.191, -15.5775, -168.137, 0.07", "171.93, -10.7015, -170.551, 0.07", "180.737, -5.69155, -172.409, 0.07", "189.037, -0.171731, -175.11, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "118.323, -26.6573, -148.128, 0.07", "124.047, -25.1801, -152.96, 0.07", "129.408, -24.3095, -158.298, 0.07", "135.568, -23.5058, -162.715, 0.07", "142.319, -22.7673, -166.193, 0.07", "148.767, -21.0356, -169.942, 0.07", "155.348, -18.4003, -172.949, 0.07", "162.253, -15.782, -175.169, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "67.7258, -30.7912, -258.89, 0.07", "67.1568, -28.411, -269.208, 0.07", "66.7025, -24.384, -279.058, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "67.7258, -30.7912, -258.89, 0.07", "72.8185, -30.6202, -268.809, 0.07", "78.4689, -32.3584, -278.257, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "54.6872, -46.4452, -272.652, 0.07", "54.733, -47.4635, -283.77, 0.07", "55.8271, -48.3959, -294.832, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "54.6872, -46.4452, -272.652, 0.07", "54.2665, -49.3881, -284.776, 0.07", "50.6496, -53.2007, -296.195, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "47.5774, -155.194, -4.83273, 0.07", "52.2795, -167.025, -3.58245, 0.07", "59.2016, -177.658, -2.66092, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "47.5774, -155.194, -4.83273, 0.07", "51.3773, -162.832, -5.5513, 0.07", "54.9459, -170.518, -4.38928, 0.07", "60.2917, -176.906, -2.90235, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "40.4759, -149.172, -4.57207, 0.07", "44.0293, -158.465, -4.41273, 0.07", "47.4816, -167.523, -6.66003, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "40.4759, -149.172, -4.57207, 0.07", "46.3162, -164.236, -4.20396, 0.07", "51.0048, -179.674, -3.02628, 0.07", "52.9155, -195.771, -2.51434, 0.07", "51.6025, -211.912, -3.08329, 0.07", "47.1088, -227.356, -4.15453, 0.07", "44.1078, -243.2, -5.33227, 0.07", "40.3608, -258.449, -9.02377, 0.07", "33.9733, -272.394, -13.6114, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "59.2016, -177.658, -2.66092, 0.07", "63.7733, -185.985, -2.0227, 0.07", "68.2283, -194.419, -2.09271, 0.07", "73.3682, -202.411, -2.65019, 0.07", "78.9475, -210.074, -2.32641, 0.07", "84.5572, -217.534, -0.834554, 0.07", "90.2197, -225.0, 0.434516, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "59.2016, -177.658, -2.66092, 0.07", "62.4546, -184.186, -1.83672, 0.07", "65.8853, -190.61, -0.983151, 0.07", "69.4765, -197.012, -0.888863, 0.07", "71.9481, -203.964, -1.02602, 0.07", "74.636, -210.814, -1.56891, 0.07", "77.5029, -217.555, -2.41353, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "33.9733, -272.394, -13.6114, 0.07", "33.421, -282.534, -14.4345, 0.07", "30.7549, -292.254, -15.5067, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "33.9733, -272.394, -13.6114, 0.07", "33.2339, -285.919, -14.519, 0.07", "31.6622, -299.025, -17.5762, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "90.2197, -225.0, 0.434516, 0.07", "97.6706, -227.446, -1.61005, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "90.2197, -225.0, 0.434516, 0.07", "92.8033, -232.795, 1.20758, 0.07", "94.204, -240.952, 1.12912, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "77.5029, -217.555, -2.41353, 0.07", "86.2822, -228.944, -1.88615, 0.07", "94.5453, -240.763, -2.17853, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "77.5029, -217.555, -2.41353, 0.07", "77.382, -226.754, -6.06932, 0.07", "78.2034, -235.017, -11.3787, 0.07", "78.6298, -243.9, -15.7042, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_94", "dend_94", "dend_43", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_69", "dend_69", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_55", "dend_55", "dend_53", "dend_53", "dend_52", "dend_52", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_73", "dend_73", "dend_72", "dend_72", "dend_83", "dend_82", "dend_82", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_LBC_640a1cef1d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_94, id: dend_94, parent: soma_0
create dend_94
public dend_94
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_94
create dend_98
public dend_98
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_100, id: dend_100, parent: dend_98
create dend_100
public dend_100
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_95
create dend_97
public dend_97
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_93, id: dend_93, parent: dend_45
create dend_93
public dend_93
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_66, id: dend_66, parent: dend_46
create dend_66
public dend_66
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_90, id: dend_90, parent: dend_66
create dend_90
public dend_90
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_57, id: dend_57, parent: dend_47
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_92, id: dend_92, parent: dend_90
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_85, id: dend_85, parent: dend_67
create dend_85
public dend_85
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_89, id: dend_89, parent: dend_85
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_84, id: dend_84, parent: dend_68
create dend_84
public dend_84
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_75, id: dend_75, parent: dend_69
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_81, id: dend_81, parent: dend_77
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_94(0), soma_0(0.4999999039757195)
    connect dend_43(0), soma_0(0.4999999039757195)
    connect dend_30(0), soma_0(0.4999999039757195)
    connect dend_25(0), soma_0(0.4999999039757195)
    connect dend_18(0), soma_0(0.4999999039757195)
    connect dend_11(0), soma_0(0.4999999039757195)
    connect dend_0(0), soma_0(0.4999999039757195)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_100(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_93(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_66(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_90(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_57(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_92(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_85(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_89(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_84(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_75(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_81(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.18524, -4.81916, 0.0, 3.9822 ) }
    soma_0 { pt3dadd( -8.34327, -4.32353, 0.0, 6.87607 ) }
    soma_0 { pt3dadd( -7.5013, -3.82789, 0.0, 10.1189 ) }
    soma_0 { pt3dadd( -6.65933, -3.33226, 0.0, 12.2867 ) }
    soma_0 { pt3dadd( -5.81736, -2.83662, 0.0, 13.8376 ) }
    soma_0 { pt3dadd( -4.97539, -2.34099, 0.0, 14.8265 ) }
    soma_0 { pt3dadd( -4.13342, -1.84535, 0.0, 15.382 ) }
    soma_0 { pt3dadd( -3.29145, -1.34972, 0.0, 16.0094 ) }
    soma_0 { pt3dadd( -2.44948, -0.854082, 0.0, 16.562 ) }
    soma_0 { pt3dadd( -1.60751, -0.358447, 0.0, 16.8144 ) }
    soma_0 { pt3dadd( -0.765536, 0.137188, 0.0, 17.0145 ) }
    soma_0 { pt3dadd( 0.0764342, 0.632823, 0.0, 17.0541 ) }
    soma_0 { pt3dadd( 0.918405, 1.12846, 0.0, 16.8224 ) }
    soma_0 { pt3dadd( 1.76037, 1.62409, 0.0, 16.2232 ) }
    soma_0 { pt3dadd( 2.60235, 2.11973, 0.0, 15.3709 ) }
    soma_0 { pt3dadd( 3.44432, 2.61536, 0.0, 14.0738 ) }
    soma_0 { pt3dadd( 4.28629, 3.111, 0.0, 12.5479 ) }
    soma_0 { pt3dadd( 5.12826, 3.60663, 0.0, 11.1251 ) }
    soma_0 { pt3dadd( 5.97023, 4.10227, 0.0, 9.76121 ) }
    soma_0 { pt3dadd( 6.8122, 4.5979, 0.0, 7.58188 ) }
    soma_0 { pt3dadd( 7.65417, 5.09354, 0.0, 4.50057 ) }
    // Section: dend_94, id: dend_94, parent: soma_0 (entry count 21/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -4.45607, 3.5103, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -4.45607, 3.5103, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -6.00097, 4.02122, -15.4, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 24/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.93607, -7.4727, -8.99, 1.77 ) }
    dend_43 { pt3dadd( -4.93607, -7.4727, -8.99, 1.62 ) }
    dend_43 { pt3dadd( -5.59854, -8.14842, -9.17928, 1.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.77393, 3.3843, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 8.77393, 3.3843, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 9.6613, 3.46963, 4.12213, 0.81 ) }
    dend_30 { pt3dadd( 10.5283, 3.49881, 3.98994, 0.74 ) }
    dend_30 { pt3dadd( 11.4677, 3.53043, 3.8467, 0.66 ) }
    dend_30 { pt3dadd( 12.4141, 3.56228, 3.70239, 0.66 ) }
    dend_30 { pt3dadd( 13.2844, 3.59158, 3.56969, 1.25 ) }
    dend_30 { pt3dadd( 14.1785, 3.59521, 3.42048, 1.92 ) }
    dend_30 { pt3dadd( 14.7751, 3.55334, 3.29935, 1.77 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 36/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.38393, 7.2693, 4.97, 0.74 ) }
    dend_25 { pt3dadd( 5.15846, 7.51066, 5.23024, 0.74 ) }
    dend_25 { pt3dadd( 4.80717, 7.83417, 5.54642, 0.74 ) }
    dend_25 { pt3dadd( 4.2239, 8.312, 6.02704, 0.74 ) }
    dend_25 { pt3dadd( 3.58453, 8.80859, 6.5569, 0.59 ) }
    dend_25 { pt3dadd( 2.8874, 9.35231, 7.15191, 0.74 ) }
    dend_25 { pt3dadd( 2.27303, 9.85522, 7.68698, 0.96 ) }
    dend_25 { pt3dadd( 1.55525, 10.4689, 8.29989, 0.52 ) }
    dend_25 { pt3dadd( 1.03438, 10.949, 8.76196, 0.22 ) }
    dend_25 { pt3dadd( 0.627641, 11.3865, 9.18499, 0.22 ) }
    dend_25 { pt3dadd( 0.350369, 11.7726, 9.55205, 0.66 ) }
    dend_25 { pt3dadd( 0.160289, 12.1253, 9.89631, 0.66 ) }
    dend_25 { pt3dadd( -0.138498, 12.8254, 10.5965, 0.29 ) }
    dend_25 { pt3dadd( -0.286211, 13.3183, 11.0664, 0.29 ) }
    dend_25 { pt3dadd( -0.434875, 13.9886, 11.6665, 1.03 ) }
    dend_25 { pt3dadd( -0.532249, 14.4953, 12.1076, 2.51 ) }
    dend_25 { pt3dadd( -0.672906, 15.2068, 12.7556, 3.32 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 53/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.87607, 3.8673, 6.38, 0.52 ) }
    dend_18 { pt3dadd( -8.32831, 3.82359, 6.21975, 0.52 ) }
    dend_18 { pt3dadd( -9.17655, 3.75898, 5.889, 0.52 ) }
    dend_18 { pt3dadd( -9.70336, 3.72433, 5.68806, 0.74 ) }
    dend_18 { pt3dadd( -10.7714, 3.71394, 5.30195, 1.25 ) }
    dend_18 { pt3dadd( -11.6502, 3.77493, 5.00688, 1.33 ) }
    dend_18 { pt3dadd( -12.9357, 3.96562, 4.6083, 0.74 ) }
    dend_18 { pt3dadd( -14.1391, 4.26247, 4.26316, 0.59 ) }
    dend_18 { pt3dadd( -15.1085, 4.60796, 4.0038, 0.29 ) }
    dend_18 { pt3dadd( -16.0571, 5.07121, 3.76899, 0.44 ) }
    dend_18 { pt3dadd( -17.1157, 5.75128, 3.55739, 0.59 ) }
    dend_18 { pt3dadd( -17.9925, 6.40982, 3.41383, 0.44 ) }
    dend_18 { pt3dadd( -18.4875, 6.80937, 3.35209, 0.81 ) }
    dend_18 { pt3dadd( -19.1436, 7.33349, 3.29461, 1.62 ) }
    dend_18 { pt3dadd( -20.0141, 7.94296, 3.20806, 1.77 ) }
    dend_18 { pt3dadd( -21.4661, 8.6596, 3.04517, 0.37 ) }
    dend_18 { pt3dadd( -22.0841, 8.8368, 2.98039, 0.37 ) }
    dend_18 { pt3dadd( -22.6968, 8.92562, 2.91725, 0.52 ) }
    dend_18 { pt3dadd( -23.4389, 8.96508, 2.85034, 0.59 ) }
    dend_18 { pt3dadd( -24.4602, 8.97856, 2.77947, 0.22 ) }
    dend_18 { pt3dadd( -25.1146, 9.01033, 2.70597, 0.29 ) }
    dend_18 { pt3dadd( -25.7972, 9.07592, 2.61704, 0.74 ) }
    dend_18 { pt3dadd( -26.7398, 9.2189, 2.50004, 1.77 ) }
    dend_18 { pt3dadd( -27.6825, 9.42291, 2.39184, 2.8 ) }
    dend_18 { pt3dadd( -29.092, 9.80564, 2.25196, 3.17 ) }
    dend_18 { pt3dadd( -31.0991, 10.4307, 2.09443, 0.44 ) }
    dend_18 { pt3dadd( -32.4753, 10.9074, 2.01839, 0.29 ) }
    dend_18 { pt3dadd( -34.3838, 11.6125, 1.95291, 0.37 ) }
    dend_18 { pt3dadd( -35.5578, 12.0885, 1.97644, 0.37 ) }
    dend_18 { pt3dadd( -36.574, 12.5301, 2.05554, 0.52 ) }
    dend_18 { pt3dadd( -37.1844, 12.8136, 2.14411, 1.03 ) }
    dend_18 { pt3dadd( -38.3187, 13.3602, 2.39499, 1.84 ) }
    dend_18 { pt3dadd( -39.2124, 13.799, 2.61027, 1.4 ) }
    dend_18 { pt3dadd( -40.4466, 14.3674, 2.91324, 0.22 ) }
    dend_18 { pt3dadd( -41.4742, 14.7369, 3.14754, 0.59 ) }
    dend_18 { pt3dadd( -41.8061, 14.8324, 3.2176, 0.59 ) }
    dend_18 { pt3dadd( -43.3014, 15.1972, 3.50546, 0.44 ) }
    dend_18 { pt3dadd( -44.0273, 15.3338, 3.65029, 1.47 ) }
    dend_18 { pt3dadd( -44.8456, 15.4578, 3.82044, 2.51 ) }
    dend_18 { pt3dadd( -46.0528, 15.5994, 4.05466, 2.36 ) }
    dend_18 { pt3dadd( -48.1929, 15.8318, 4.48855, 0.15 ) }
    dend_18 { pt3dadd( -48.5464, 15.8583, 4.56524, 0.22 ) }
    dend_18 { pt3dadd( -49.6463, 15.8946, 4.81702, 0.22 ) }
    dend_18 { pt3dadd( -50.3597, 15.8759, 4.9615, 0.22 ) }
    dend_18 { pt3dadd( -51.6977, 15.7729, 5.20748, 0.22 ) }
    dend_18 { pt3dadd( -52.0962, 15.7276, 5.26825, 0.96 ) }
    dend_18 { pt3dadd( -53.0026, 15.5934, 5.37775, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( -54.132, 15.4519, 5.4892, 2.58 ) }
    dend_18 { pt3dadd( -56.5157, 15.2689, 5.65329, 0.22 ) }
    dend_18 { pt3dadd( -57.2069, 15.243, 5.70637, 0.81 ) }
    dend_18 { pt3dadd( -58.0125, 15.2477, 5.7721, 1.77 ) }
    dend_18 { pt3dadd( -58.605, 15.2792, 5.81961, 1.99 ) }
    dend_18 { pt3dadd( -60.217, 15.4491, 5.94148, 0.44 ) }
    dend_18 { pt3dadd( -62.1688, 15.6964, 6.07448, 0.29 ) }
    dend_18 { pt3dadd( -62.808, 15.7868, 6.11898, 0.29 ) }
    dend_18 { pt3dadd( -63.3898, 15.8632, 6.15482, 0.81 ) }
    dend_18 { pt3dadd( -64.2082, 15.9608, 6.20952, 1.99 ) }
    dend_18 { pt3dadd( -65.1843, 16.0542, 6.27781, 2.06 ) }
    dend_18 { pt3dadd( -67.1407, 16.1881, 6.41449, 0.15 ) }
    dend_18 { pt3dadd( -67.6864, 16.2015, 6.45078, 0.22 ) }
    dend_18 { pt3dadd( -68.227, 16.1965, 6.48192, 0.15 ) }
    dend_18 { pt3dadd( -68.5622, 16.1926, 6.50452, 0.37 ) }
    dend_18 { pt3dadd( -69.053, 16.1919, 6.54051, 0.66 ) }
    dend_18 { pt3dadd( -70.0271, 16.2536, 6.62388, 0.37 ) }
    dend_18 { pt3dadd( -70.9365, 16.3578, 6.67023, 0.22 ) }
    dend_18 { pt3dadd( -71.6528, 16.4417, 6.68623, 0.88 ) }
    dend_18 { pt3dadd( -72.6627, 16.5531, 6.69399, 1.99 ) }
    dend_18 { pt3dadd( -73.705, 16.6625, 6.68902, 1.4 ) }
    dend_18 { pt3dadd( -75.3346, 16.819, 6.65961, 0.22 ) }
    dend_18 { pt3dadd( -76.5631, 16.9485, 6.62711, 0.22 ) }
    dend_18 { pt3dadd( -76.9745, 17.0061, 6.61348, 0.37 ) }
    dend_18 { pt3dadd( -77.5196, 17.0978, 6.59515, 0.81 ) }
    dend_18 { pt3dadd( -77.884, 17.1699, 6.59175, 1.11 ) }
    dend_18 { pt3dadd( -79.2097, 17.5018, 6.65428, 0.59 ) }
    dend_18 { pt3dadd( -80.0433, 17.7473, 6.7564, 0.15 ) }
    dend_18 { pt3dadd( -80.6835, 17.9714, 6.90242, 0.66 ) }
    dend_18 { pt3dadd( -81.2826, 18.1929, 7.05777, 0.66 ) }
    dend_18 { pt3dadd( -82.5663, 18.7138, 7.40875, 0.15 ) }
    dend_18 { pt3dadd( -83.3602, 19.0509, 7.62829, 0.88 ) }
    dend_18 { pt3dadd( -84.4144, 19.5077, 7.92069, 1.7 ) }
    dend_18 { pt3dadd( -86.4496, 20.3394, 8.43963, 0.22 ) }
    dend_18 { pt3dadd( -87.1969, 20.6308, 8.62125, 0.29 ) }
    dend_18 { pt3dadd( -88.2473, 21.0334, 8.8519, 0.29 ) }
    dend_18 { pt3dadd( -88.9645, 21.2939, 8.98204, 0.66 ) }
    dend_18 { pt3dadd( -89.5317, 21.4833, 9.06894, 0.81 ) }
    dend_18 { pt3dadd( -90.6603, 21.791, 9.24854, 0.29 ) }
    dend_18 { pt3dadd( -91.9183, 22.0172, 9.50711, 0.22 ) }
    dend_18 { pt3dadd( -92.4316, 22.0669, 9.64115, 1.03 ) }
    dend_18 { pt3dadd( -93.3693, 22.0864, 9.92374, 1.92 ) }
    dend_18 { pt3dadd( -94.0868, 22.0695, 10.1731, 1.92 ) }
    dend_18 { pt3dadd( -95.623, 21.9745, 10.7577, 0.37 ) }
    dend_18 { pt3dadd( -97.024, 21.8197, 11.3192, 0.29 ) }
    dend_18 { pt3dadd( -97.6656, 21.7138, 11.5659, 0.22 ) }
    dend_18 { pt3dadd( -98.3374, 21.5777, 11.8206, 0.59 ) }
    dend_18 { pt3dadd( -99.2034, 21.3783, 12.1292, 0.22 ) }
    dend_18 { pt3dadd( -99.4981, 21.3036, 12.2198, 0.44 ) }
    dend_18 { pt3dadd( -100.315, 21.0772, 12.4252, 0.96 ) }
    dend_18 { pt3dadd( -101.478, 20.7625, 12.6619, 0.22 ) }
    dend_18 { pt3dadd( -102.618, 20.4957, 12.8854, 0.22 ) }
    dend_18 { pt3dadd( -102.776, 20.4584, 12.9133, 0.52 ) }
    dend_18 { pt3dadd( -103.247, 20.3508, 12.9856, 1.03 ) }
    dend_18 { pt3dadd( -103.98, 20.2092, 13.0976, 1.62 ) }
    dend_18 { pt3dadd( -104.87, 20.0887, 13.2313, 1.47 ) }
    dend_18 { pt3dadd( -106.333, 20.0017, 13.4324, 0.22 ) }
    dend_18 { pt3dadd( -107.009, 20.0128, 13.4976, 0.22 ) }
    dend_18 { pt3dadd( -107.569, 20.0658, 13.546, 0.15 ) }
    dend_18 { pt3dadd( -107.956, 20.1453, 13.5741, 0.15 ) }
    dend_18 { pt3dadd( -108.277, 20.2463, 13.6305, 0.29 ) }
    dend_18 { pt3dadd( -108.748, 20.4362, 13.7474, 0.29 ) }
    dend_18 { pt3dadd( -109.329, 20.7002, 13.9283, 0.22 ) }
    dend_18 { pt3dadd( -110.027, 21.0241, 14.1698, 1.25 ) }
    dend_18 { pt3dadd( -110.819, 21.3711, 14.4447, 1.99 ) }
    dend_18 { pt3dadd( -112.816, 22.1612, 15.1139, 0.29 ) }
    dend_18 { pt3dadd( -114.043, 22.6165, 15.5123, 0.22 ) }
    dend_18 { pt3dadd( -114.665, 22.8419, 15.7055, 0.66 ) }
    dend_18 { pt3dadd( -115.373, 23.1015, 15.9142, 1.62 ) }
    dend_18 { pt3dadd( -116.59, 23.6143, 16.2181, 0.52 ) }
    dend_18 { pt3dadd( -117.874, 24.242, 16.4956, 0.22 ) }
    dend_18 { pt3dadd( -118.281, 24.4743, 16.5608, 0.59 ) }
    dend_18 { pt3dadd( -118.955, 24.8987, 16.6846, 1.25 ) }
    dend_18 { pt3dadd( -119.295, 25.1307, 16.7564, 1.25 ) }
    dend_18 { pt3dadd( -120.627, 26.0845, 17.1438, 0.15 ) }
    dend_18 { pt3dadd( -121.75, 26.9146, 17.599, 0.15 ) }
    dend_18 { pt3dadd( -122.052, 27.138, 17.754, 0.66 ) }
    dend_18 { pt3dadd( -122.655, 27.5643, 18.117, 1.55 ) }
    dend_18 { pt3dadd( -123.207, 27.9354, 18.4816, 0.96 ) }
    dend_18 { pt3dadd( -124.464, 28.7437, 19.3823, 0.15 ) }
    dend_18 { pt3dadd( -125.355, 29.3166, 20.0844, 0.15 ) }
    dend_18 { pt3dadd( -125.874, 29.6953, 20.5254, 0.44 ) }
    dend_18 { pt3dadd( -126.563, 30.2479, 21.1295, 0.88 ) }
    dend_18 { pt3dadd( -126.96, 30.6012, 21.4704, 0.44 ) }
    dend_18 { pt3dadd( -127.616, 31.2663, 21.9688, 0.15 ) }
    dend_18 { pt3dadd( -128.511, 32.2983, 22.5305, 0.74 ) }
    dend_18 { pt3dadd( -129.321, 33.3041, 22.8192, 0.22 ) }
    dend_18 { pt3dadd( -129.614, 33.6825, 22.8681, 1.03 ) }
    dend_18 { pt3dadd( -130.125, 34.359, 22.8791, 1.99 ) }
    dend_18 { pt3dadd( -131.419, 36.1098, 22.7728, 0.15 ) }
    dend_18 { pt3dadd( -132.104, 37.0358, 22.6428, 1.25 ) }
    dend_18 { pt3dadd( -133.467, 38.851, 22.2564, 0.07 ) }
    dend_18 { pt3dadd( -134.148, 39.7373, 22.0208, 0.07 ) }
    dend_18 { pt3dadd( -134.819, 40.6108, 21.7817, 0.88 ) }
    dend_18 { pt3dadd( -135.338, 41.2952, 21.5888, 1.62 ) }
    dend_18 { pt3dadd( -135.678, 41.762, 21.4443, 1.62 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 96/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.12393, -6.7062, 1.7, 0.88 ) }
    dend_11 { pt3dadd( 5.15762, -7.36637, 1.82934, 0.74 ) }
    dend_11 { pt3dadd( 5.16223, -7.97864, 1.96212, 0.88 ) }
    dend_11 { pt3dadd( 5.15319, -8.66426, 2.11364, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_11 { pt3dadd( 5.1399, -9.72882, 2.3422, 0.88 ) }
    dend_11 { pt3dadd( 5.12809, -11.0062, 2.60049, 0.74 ) }
    dend_11 { pt3dadd( 5.12104, -12.2161, 2.83199, 0.66 ) }
    dend_11 { pt3dadd( 5.11741, -13.3158, 3.0199, 0.96 ) }
    dend_11 { pt3dadd( 5.12761, -14.3845, 3.18286, 1.18 ) }
    dend_11 { pt3dadd( 5.17448, -15.3849, 3.32222, 1.25 ) }
    dend_11 { pt3dadd( 5.35052, -16.695, 3.47738, 0.81 ) }
    dend_11 { pt3dadd( 5.5841, -17.6693, 3.56421, 0.74 ) }
    dend_11 { pt3dadd( 5.96389, -18.9044, 3.65306, 0.52 ) }
    dend_11 { pt3dadd( 6.1981, -19.5596, 3.69759, 1.4 ) }
    dend_11 { pt3dadd( 6.56263, -20.5063, 3.77981, 2.43 ) }
    dend_11 { pt3dadd( 7.08491, -21.8381, 3.92365, 3.1 ) }
    dend_11 { pt3dadd( 7.77161, -23.5684, 4.1581, 0.22 ) }
    dend_11 { pt3dadd( 8.00267, -24.2261, 4.25981, 0.22 ) }
    dend_11 { pt3dadd( 8.13113, -24.6856, 4.34696, 0.74 ) }
    dend_11 { pt3dadd( 8.26779, -25.3349, 4.47432, 1.25 ) }
    dend_11 { pt3dadd( 8.34402, -25.8294, 4.5758, 1.7 ) }
    dend_11 { pt3dadd( 8.45529, -26.7969, 4.7964, 1.03 ) }
    dend_11 { pt3dadd( 8.66166, -28.0638, 5.11734, 0.52 ) }
    dend_11 { pt3dadd( 8.89638, -28.9973, 5.34444, 0.22 ) }
    dend_11 { pt3dadd( 9.02677, -29.3937, 5.4322, 0.22 ) }
    dend_11 { pt3dadd( 9.19927, -29.7998, 5.52173, 0.22 ) }
    dend_11 { pt3dadd( 9.30158, -30.0014, 5.56647, 0.22 ) }
    dend_11 { pt3dadd( 9.55381, -30.489, 5.65742, 0.22 ) }
    dend_11 { pt3dadd( 9.85407, -31.1139, 5.74892, 0.81 ) }
    dend_11 { pt3dadd( 10.086, -31.7142, 5.80956, 1.7 ) }
    dend_11 { pt3dadd( 10.4764, -32.819, 5.88577, 2.88 ) }
    dend_11 { pt3dadd( 10.8366, -33.9188, 5.93603, 2.06 ) }
    dend_11 { pt3dadd( 11.2871, -35.4025, 5.99947, 1.47 ) }
    dend_11 { pt3dadd( 11.6125, -36.5587, 6.05416, 1.33 ) }
    dend_11 { pt3dadd( 11.9878, -37.9674, 6.11917, 0.22 ) }
    dend_11 { pt3dadd( 12.1968, -38.8145, 6.1641, 0.15 ) }
    dend_11 { pt3dadd( 12.3679, -39.5581, 6.20555, 0.29 ) }
    dend_11 { pt3dadd( 12.5905, -40.5059, 6.27199, 0.29 ) }
    dend_11 { pt3dadd( 12.7905, -41.2846, 6.33732, 1.03 ) }
    dend_11 { pt3dadd( 12.9384, -41.8654, 6.39085, 1.99 ) }
    dend_11 { pt3dadd( 13.1699, -42.8547, 6.48361, 2.21 ) }
    dend_11 { pt3dadd( 13.3911, -44.0046, 6.6086, 0.37 ) }
    dend_11 { pt3dadd( 13.5571, -44.9369, 6.70585, 0.15 ) }
    dend_11 { pt3dadd( 13.6174, -45.3161, 6.74004, 0.15 ) }
    dend_11 { pt3dadd( 13.7331, -46.116, 6.81118, 0.22 ) }
    dend_11 { pt3dadd( 13.8534, -46.9613, 6.89363, 0.37 ) }
    dend_11 { pt3dadd( 13.9599, -47.7234, 6.9865, 0.96 ) }
    dend_11 { pt3dadd( 14.037, -48.3867, 7.07551, 1.7 ) }
    dend_11 { pt3dadd( 14.1062, -49.0569, 7.1702, 1.99 ) }
    dend_11 { pt3dadd( 14.2021, -49.9073, 7.28954, 1.7 ) }
    dend_11 { pt3dadd( 14.4653, -51.7912, 7.53074, 0.37 ) }
    dend_11 { pt3dadd( 14.617, -52.8099, 7.64978, 0.22 ) }
    dend_11 { pt3dadd( 14.7238, -53.4431, 7.70905, 0.22 ) }
    dend_11 { pt3dadd( 14.8407, -54.0448, 7.7823, 0.22 ) }
    dend_11 { pt3dadd( 15.0028, -54.7728, 7.90372, 0.37 ) }
    dend_11 { pt3dadd( 15.1238, -55.2892, 8.01118, 1.03 ) }
    dend_11 { pt3dadd( 15.2596, -55.8348, 8.14577, 1.77 ) }
    dend_11 { pt3dadd( 15.4954, -56.7541, 8.36658, 0.88 ) }
    dend_11 { pt3dadd( 15.7909, -57.879, 8.66925, 0.29 ) }
    dend_11 { pt3dadd( 16.002, -58.6736, 8.90677, 0.52 ) }
    dend_11 { pt3dadd( 16.1535, -59.2322, 9.09135, 1.03 ) }
    dend_11 { pt3dadd( 16.4027, -60.1476, 9.42531, 1.55 ) }
    dend_11 { pt3dadd( 16.7036, -61.2984, 9.8613, 0.88 ) }
    dend_11 { pt3dadd( 16.934, -62.2475, 10.2415, 0.22 ) }
    dend_11 { pt3dadd( 17.0384, -62.7099, 10.4164, 0.22 ) }
    dend_11 { pt3dadd( 17.0967, -62.9917, 10.5193, 0.22 ) }
    dend_11 { pt3dadd( 17.1997, -63.5601, 10.7373, 0.29 ) }
    dend_11 { pt3dadd( 17.3166, -64.3292, 11.0289, 0.52 ) }
    dend_11 { pt3dadd( 17.362, -64.7241, 11.1676, 1.18 ) }
    dend_11 { pt3dadd( 17.4289, -65.4912, 11.3913, 1.33 ) }
    dend_11 { pt3dadd( 17.5074, -66.4626, 11.6362, 0.59 ) }
    dend_11 { pt3dadd( 17.5969, -67.3416, 11.8269, 0.22 ) }
    dend_11 { pt3dadd( 17.6701, -67.9985, 11.9559, 0.22 ) }
    dend_11 { pt3dadd( 17.731, -68.4643, 12.0428, 0.59 ) }
    dend_11 { pt3dadd( 17.8607, -69.3412, 12.1976, 0.29 ) }
    dend_11 { pt3dadd( 18.0057, -70.1499, 12.3476, 1.18 ) }
    dend_11 { pt3dadd( 18.1973, -71.0452, 12.5052, 2.88 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 73/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.70607, -9.5937, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.70607, -9.5937, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.53063, -10.3579, 3.08491, 0.66 ) }
    dend_0 { pt3dadd( -1.33355, -11.4661, 3.03868, 0.88 ) }
    dend_0 { pt3dadd( -1.19253, -12.6023, 2.96758, 1.03 ) }
    dend_0 { pt3dadd( -1.06168, -14.1642, 2.85628, 0.81 ) }
    dend_0 { pt3dadd( -1.00137, -15.6193, 2.75119, 0.96 ) }
    dend_0 { pt3dadd( -1.04852, -16.7471, 2.66807, 1.33 ) }
    dend_0 { pt3dadd( -1.28106, -18.1269, 2.593, 1.77 ) }
    dend_0 { pt3dadd( -1.66197, -19.3327, 2.57409, 2.21 ) }
    dend_0 { pt3dadd( -1.99336, -20.0591, 2.60177, 2.58 ) }
    dend_0 { pt3dadd( -2.89515, -21.5743, 2.7822, 2.73 ) }
    dend_0 { pt3dadd( -3.9401, -23.0025, 3.10415, 0.81 ) }
    dend_0 { pt3dadd( -5.16892, -24.5182, 3.54239, 0.52 ) }
    dend_0 { pt3dadd( -6.07902, -25.5308, 3.92762, 0.59 ) }
    dend_0 { pt3dadd( -6.67887, -26.1273, 4.20096, 1.25 ) }
    dend_0 { pt3dadd( -7.53016, -26.8796, 4.62072, 2.73 ) }
    dend_0 { pt3dadd( -8.46193, -27.559, 5.13951, 3.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 91/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.65417, 5.09354, 0.0, 0.688515 ) }
    axon_0 { pt3dadd( 20.5808, 12.7029, 0.0, 0.688515 ) }
    axon_0 { pt3dadd( 33.5074, 20.3123, 0.0, 0.688515 ) }
    // Section: dend_98, id: dend_98, parent: dend_94 (entry count 94/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -6.00097, 4.02122, -15.4, 0.74 ) }
    dend_98 { pt3dadd( -7.51573, 4.26224, -15.5205, 0.74 ) }
    dend_98 { pt3dadd( -8.22333, 4.44688, -15.6891, 0.81 ) }
    dend_98 { pt3dadd( -9.16823, 4.749, -16.0719, 0.74 ) }
    dend_98 { pt3dadd( -10.1222, 5.05403, -16.4585, 0.96 ) }
    dend_98 { pt3dadd( -11.1452, 5.3811, -16.873, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_98 { pt3dadd( -12.3771, 5.77499, -17.3722, 1.03 ) }
    dend_98 { pt3dadd( -13.375, 6.24641, -17.9019, 1.47 ) }
    dend_98 { pt3dadd( -14.4975, 6.88503, -18.6362, 2.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 3/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -6.00097, 4.02122, -15.4, 0.37 ) }
    dend_95 { pt3dadd( -5.6251, 5.17343, -15.2814, 0.37 ) }
    dend_95 { pt3dadd( -5.5729, 6.24906, -15.176, 0.22 ) }
    dend_95 { pt3dadd( -5.66627, 7.09892, -15.1088, 0.22 ) }
    dend_95 { pt3dadd( -5.82396, 8.15069, -15.076, 0.66 ) }
    dend_95 { pt3dadd( -5.86685, 8.44692, -15.0876, 0.66 ) }
    dend_95 { pt3dadd( -6.0297, 9.60924, -15.1744, 0.96 ) }
    dend_95 { pt3dadd( -6.22275, 10.6852, -15.3284, 0.52 ) }
    dend_95 { pt3dadd( -6.40126, 11.7212, -15.543, 0.81 ) }
    dend_95 { pt3dadd( -6.4818, 12.5849, -15.7867, 0.88 ) }
    dend_95 { pt3dadd( -6.4047, 13.8092, -16.2241, 0.81 ) }
    dend_95 { pt3dadd( -6.20854, 14.6335, -16.581, 0.22 ) }
    dend_95 { pt3dadd( -5.94322, 15.3202, -16.9192, 0.29 ) }
    dend_95 { pt3dadd( -5.60994, 16.088, -17.3406, 0.37 ) }
    dend_95 { pt3dadd( -5.357, 16.8313, -17.7644, 0.15 ) }
    dend_95 { pt3dadd( -5.32549, 17.3637, -18.048, 0.22 ) }
    dend_95 { pt3dadd( -5.43287, 17.9901, -18.3635, 0.22 ) }
    dend_95 { pt3dadd( -5.64109, 18.8911, -18.7797, 0.52 ) }
    dend_95 { pt3dadd( -5.82753, 19.7957, -19.1401, 0.37 ) }
    dend_95 { pt3dadd( -5.98569, 20.7206, -19.4818, 0.44 ) }
    dend_95 { pt3dadd( -6.18499, 22.2134, -19.987, 0.37 ) }
    dend_95 { pt3dadd( -6.23296, 22.8391, -20.1952, 0.37 ) }
    dend_95 { pt3dadd( -6.27786, 24.1805, -20.642, 0.52 ) }
    dend_95 { pt3dadd( -6.29105, 25.4771, -21.0547, 0.59 ) }
    dend_95 { pt3dadd( -6.31506, 27.1663, -21.5446, 0.44 ) }
    dend_95 { pt3dadd( -6.39445, 28.3535, -21.8531, 0.29 ) }
    dend_95 { pt3dadd( -6.55963, 29.4205, -22.0759, 0.22 ) }
    dend_95 { pt3dadd( -6.8232, 30.221, -22.214, 0.88 ) }
    dend_95 { pt3dadd( -7.26775, 31.1224, -22.3526, 0.29 ) }
    dend_95 { pt3dadd( -7.80409, 31.8968, -22.4456, 0.66 ) }
    dend_95 { pt3dadd( -8.79771, 32.9535, -22.4798, 0.22 ) }
    dend_95 { pt3dadd( -9.28432, 33.365, -22.4629, 0.22 ) }
    dend_95 { pt3dadd( -9.99503, 33.8815, -22.3745, 0.59 ) }
    dend_95 { pt3dadd( -12.3661, 44.7162, -22.8935, 0.59 ) }
    dend_95 { pt3dadd( -13.4902, 55.4654, -25.4869, 0.59 ) }
    dend_95 { pt3dadd( -13.4444, 66.5965, -26.1783, 0.59 ) }
    dend_95 { pt3dadd( -12.2727, 77.4256, -28.5232, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.59854, -8.14842, -9.17928, 1.03 ) }
    dend_45 { pt3dadd( -6.64675, -9.60468, -9.12393, 1.03 ) }
    dend_45 { pt3dadd( -7.30188, -10.6316, -9.03878, 0.88 ) }
    dend_45 { pt3dadd( -7.97654, -11.6892, -8.95108, 1.33 ) }
    dend_45 { pt3dadd( -8.59241, -12.6546, -8.87102, 1.92 ) }
    dend_45 { pt3dadd( -9.32102, -13.7968, -8.77631, 2.29 ) }
    dend_45 { pt3dadd( -10.3441, -15.4005, -8.64332, 1.7 ) }
    dend_45 { pt3dadd( -11.023, -16.6623, -8.52129, 1.47 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -5.59854, -8.14842, -9.17928, 0.37 ) }
    dend_44 { pt3dadd( -5.21218, -9.36215, -8.81438, 0.37 ) }
    dend_44 { pt3dadd( -4.9424, -10.0441, -8.60668, 0.59 ) }
    dend_44 { pt3dadd( -4.7013, -10.5348, -8.47307, 0.52 ) }
    dend_44 { pt3dadd( -4.15142, -11.4125, -8.26283, 0.37 ) }
    dend_44 { pt3dadd( -3.43346, -12.2276, -8.09378, 0.37 ) }
    dend_44 { pt3dadd( -2.83577, -12.8017, -8.0109, 0.37 ) }
    dend_44 { pt3dadd( -2.46872, -13.0852, -7.99408, 0.88 ) }
    dend_44 { pt3dadd( -1.70876, -13.6163, -7.99199, 1.4 ) }
    dend_44 { pt3dadd( -0.871526, -14.1622, -8.00372, 1.18 ) }
    dend_44 { pt3dadd( 0.819455, -15.2927, -8.04329, 0.37 ) }
    dend_44 { pt3dadd( 2.17107, -16.291, -8.07752, 0.22 ) }
    dend_44 { pt3dadd( 2.7699, -16.7977, -8.0776, 0.81 ) }
    dend_44 { pt3dadd( 3.50896, -17.5269, -8.04406, 1.92 ) }
    dend_44 { pt3dadd( 4.98836, -19.3452, -7.90633, 0.59 ) }
    dend_44 { pt3dadd( 5.68637, -20.4803, -7.81493, 0.66 ) }
    dend_44 { pt3dadd( 6.05198, -21.3385, -7.74298, 0.52 ) }
    dend_44 { pt3dadd( 6.37273, -22.4776, -7.66249, 0.59 ) }
    dend_44 { pt3dadd( 6.53216, -23.4009, -7.61659, 0.44 ) }
    dend_44 { pt3dadd( 6.66154, -24.6418, -7.60511, 0.44 ) }
    dend_44 { pt3dadd( 6.71711, -25.4415, -7.61248, 0.44 ) }
    dend_44 { pt3dadd( 6.79985, -26.1487, -7.63502, 0.66 ) }
    dend_44 { pt3dadd( 7.07686, -27.6025, -7.70986, 1.03 ) }
    dend_44 { pt3dadd( 7.51665, -29.1668, -7.81158, 0.74 ) }
    dend_44 { pt3dadd( 8.08297, -30.5083, -7.87872, 0.59 ) }
    dend_44 { pt3dadd( 8.647, -31.5059, -7.89567, 0.44 ) }
    dend_44 { pt3dadd( 9.10659, -32.1772, -7.88618, 0.81 ) }
    dend_44 { pt3dadd( 9.55808, -32.7348, -7.86629, 1.47 ) }
    dend_44 { pt3dadd( 10.0322, -33.2454, -7.83574, 1.47 ) }
    dend_44 { pt3dadd( 11.4957, -34.6525, -7.75277, 0.29 ) }
    dend_44 { pt3dadd( 12.3493, -35.4261, -7.69046, 0.37 ) }
    dend_44 { pt3dadd( 13.0514, -36.0453, -7.63844, 0.29 ) }
    dend_44 { pt3dadd( 13.4706, -36.4219, -7.58654, 0.15 ) }
    dend_44 { pt3dadd( 18.7347, -44.2939, -7.2869, 0.15 ) }
    dend_44 { pt3dadd( 24.495, -51.7761, -7.23032, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 14.7751, 3.55334, 3.29935, 0.88 ) }
    dend_34 { pt3dadd( 14.9986, 2.61736, 4.09893, 0.88 ) }
    dend_34 { pt3dadd( 15.0998, 1.80128, 4.76891, 0.44 ) }
    dend_34 { pt3dadd( 15.1384, 1.33647, 5.13141, 0.44 ) }
    dend_34 { pt3dadd( 15.189, 0.786775, 5.53714, 0.59 ) }
    dend_34 { pt3dadd( 15.2531, 0.293959, 5.88415, 0.44 ) }
    dend_34 { pt3dadd( 15.383, -0.323485, 6.27772, 0.29 ) }
    dend_34 { pt3dadd( 15.4754, -0.634508, 6.45069, 0.29 ) }
    dend_34 { pt3dadd( 15.7357, -1.09376, 6.66513, 0.52 ) }
    dend_34 { pt3dadd( 16.0046, -1.3887, 6.79227, 0.96 ) }
    dend_34 { pt3dadd( 16.4203, -1.7102, 6.9262, 1.92 ) }
    dend_34 { pt3dadd( 17.3228, -2.22224, 7.11912, 2.8 ) }
    dend_34 { pt3dadd( 18.4395, -2.69099, 7.28526, 1.18 ) }
    dend_34 { pt3dadd( 19.2938, -2.99776, 7.39821, 0.29 ) }
    dend_34 { pt3dadd( 19.7551, -3.13279, 7.44901, 0.29 ) }
    dend_34 { pt3dadd( 20.2144, -3.23803, 7.49304, 0.74 ) }
    dend_34 { pt3dadd( 20.9441, -3.33736, 7.54202, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 21.4975, -3.32385, 7.55917, 1.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 1/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 14.7751, 3.55334, 3.29935, 0.44 ) }
    dend_31 { pt3dadd( 15.6868, 4.09785, 2.47074, 0.44 ) }
    dend_31 { pt3dadd( 15.9857, 4.29479, 2.06408, 0.44 ) }
    dend_31 { pt3dadd( 16.3266, 4.4315, 1.54667, 0.44 ) }
    dend_31 { pt3dadd( 16.6741, 4.52095, 1.05184, 0.44 ) }
    dend_31 { pt3dadd( 17.1788, 4.65913, 0.330474, 0.52 ) }
    dend_31 { pt3dadd( 17.8122, 4.859, -0.581213, 0.37 ) }
    dend_31 { pt3dadd( 18.7915, 5.23106, -2.01231, 1.4 ) }
    dend_31 { pt3dadd( 19.7699, 5.59652, -3.40326, 2.29 ) }
    dend_31 { pt3dadd( 21.0608, 5.95125, -5.02049, 0.22 ) }
    dend_31 { pt3dadd( 21.4141, 6.01378, -5.43328, 0.22 ) }
    dend_31 { pt3dadd( 21.7386, 6.0275, -5.78657, 0.22 ) }
    dend_31 { pt3dadd( 22.3147, 6.00957, -6.2602, 0.37 ) }
    dend_31 { pt3dadd( 22.7875, 5.97252, -6.56677, 0.37 ) }
    dend_31 { pt3dadd( 24.3233, 5.83042, -7.42307, 0.22 ) }
    dend_31 { pt3dadd( 25.3686, 5.71049, -7.91179, 0.74 ) }
    dend_31 { pt3dadd( 26.7309, 5.55691, -8.49851, 2.36 ) }
    dend_31 { pt3dadd( 29.1868, 5.28705, -9.48895, 0.15 ) }
    dend_31 { pt3dadd( 29.7761, 5.22583, -9.71838, 1.11 ) }
    dend_31 { pt3dadd( 30.1615, 5.19004, -9.87748, 1.62 ) }
    dend_31 { pt3dadd( 32.0894, 5.04598, -10.7488, 0.15 ) }
    dend_31 { pt3dadd( 33.125, 4.99563, -11.2317, 0.15 ) }
    dend_31 { pt3dadd( 33.5277, 4.99019, -11.4424, 0.59 ) }
    dend_31 { pt3dadd( 33.8837, 4.97495, -11.6982, 0.59 ) }
    dend_31 { pt3dadd( 34.9637, 4.91869, -12.6718, 0.22 ) }
    dend_31 { pt3dadd( 35.6736, 4.87897, -13.4032, 0.37 ) }
    dend_31 { pt3dadd( 36.0582, 4.86248, -13.8659, 0.59 ) }
    dend_31 { pt3dadd( 36.4174, 4.87405, -14.2735, 0.22 ) }
    dend_31 { pt3dadd( 37.1843, 4.94983, -15.0155, 0.15 ) }
    dend_31 { pt3dadd( 38.0713, 5.06661, -15.7879, 0.15 ) }
    dend_31 { pt3dadd( 38.634, 5.15035, -16.2026, 0.66 ) }
    dend_31 { pt3dadd( 39.203, 5.22642, -16.595, 1.47 ) }
    dend_31 { pt3dadd( 40.112, 5.33181, -17.2533, 1.11 ) }
    dend_31 { pt3dadd( 41.6327, 5.54229, -18.3641, 0.22 ) }
    dend_31 { pt3dadd( 49.2929, 3.92105, -26.7707, 0.22 ) }
    dend_31 { pt3dadd( 57.5813, 2.55904, -34.597, 0.22 ) }
    dend_31 { pt3dadd( 66.1056, 0.413746, -42.0105, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.672906, 15.2068, 12.7556, 0.29 ) }
    dend_27 { pt3dadd( -2.53504, 16.0042, 14.7995, 0.29 ) }
    dend_27 { pt3dadd( -3.83297, 16.6946, 16.2486, 0.15 ) }
    dend_27 { pt3dadd( -4.43303, 17.0956, 16.9803, 0.96 ) }
    dend_27 { pt3dadd( -5.04816, 17.6004, 17.8068, 2.06 ) }
    dend_27 { pt3dadd( -6.38963, 18.953, 19.806, 0.22 ) }
    dend_27 { pt3dadd( -6.73728, 19.4434, 20.4407, 0.37 ) }
    dend_27 { pt3dadd( -6.8832, 19.8449, 20.8755, 0.37 ) }
    dend_27 { pt3dadd( -7.0817, 20.7695, 21.8067, 0.29 ) }
    dend_27 { pt3dadd( -7.22054, 21.7794, 22.7925, 1.99 ) }
    dend_27 { pt3dadd( -7.26496, 22.4886, 23.4794, 2.06 ) }
    dend_27 { pt3dadd( -7.31643, 24.4502, 25.4371, 0.15 ) }
    dend_27 { pt3dadd( -7.38227, 25.8297, 26.8375, 0.15 ) }
    dend_27 { pt3dadd( -7.43805, 26.5611, 27.5853, 1.18 ) }
    dend_27 { pt3dadd( -7.49669, 27.1748, 28.2042, 2.14 ) }
    dend_27 { pt3dadd( -7.69078, 28.9485, 30.0212, 0.15 ) }
    dend_27 { pt3dadd( -7.84117, 29.9217, 31.0205, 0.44 ) }
    dend_27 { pt3dadd( -8.04216, 30.8785, 32.0145, 0.15 ) }
    dend_27 { pt3dadd( -8.23947, 31.7398, 32.9173, 0.29 ) }
    dend_27 { pt3dadd( -8.41199, 32.482, 33.7567, 0.44 ) }
    dend_27 { pt3dadd( -8.59268, 33.2637, 34.7141, 1.03 ) }
    dend_27 { pt3dadd( -8.71874, 33.8166, 35.4423, 1.7 ) }
    dend_27 { pt3dadd( -8.99585, 35.3085, 37.5382, 0.15 ) }
    dend_27 { pt3dadd( -9.09832, 36.0205, 38.6171, 0.22 ) }
    dend_27 { pt3dadd( -9.1517, 36.937, 40.0529, 0.15 ) }
    dend_27 { pt3dadd( -9.14992, 37.6105, 41.1491, 0.52 ) }
    dend_27 { pt3dadd( -9.11073, 38.3792, 42.4868, 0.88 ) }
    dend_27 { pt3dadd( -9.01655, 39.3144, 44.2856, 1.25 ) }
    dend_27 { pt3dadd( -8.94138, 39.8944, 45.4662, 1.62 ) }
    dend_27 { pt3dadd( -8.80644, 41.0966, 47.941, 0.15 ) }
    dend_27 { pt3dadd( -8.77854, 41.6414, 49.0849, 0.22 ) }
    dend_27 { pt3dadd( -8.79917, 42.4061, 50.6918, 0.22 ) }
    dend_27 { pt3dadd( -8.84179, 42.8661, 51.6343, 0.37 ) }
    dend_27 { pt3dadd( -8.9127, 43.436, 52.7369, 0.88 ) }
    dend_27 { pt3dadd( -8.97488, 43.8273, 53.4836, 1.4 ) }
    dend_27 { pt3dadd( -9.22531, 45.0077, 55.7308, 0.37 ) }
    dend_27 { pt3dadd( -9.45175, 46.1298, 57.6817, 0.22 ) }
    dend_27 { pt3dadd( -9.60731, 46.9703, 58.996, 0.88 ) }
    dend_27 { pt3dadd( -9.73683, 47.677, 60.0449, 1.7 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 77/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.672906, 15.2068, 12.7556, 0.22 ) }
    dend_26 { pt3dadd( -0.213546, 15.8472, 12.3336, 0.22 ) }
    dend_26 { pt3dadd( 0.225295, 16.4977, 11.9464, 0.15 ) }
    dend_26 { pt3dadd( 0.484061, 16.8847, 11.7525, 0.15 ) }
    dend_26 { pt3dadd( 0.764485, 17.3034, 11.5678, 0.44 ) }
    dend_26 { pt3dadd( 1.22498, 17.9901, 11.2991, 0.15 ) }
    dend_26 { pt3dadd( 1.49287, 18.3858, 11.161, 0.66 ) }
    dend_26 { pt3dadd( 1.74176, 18.766, 11.0585, 1.7 ) }
    dend_26 { pt3dadd( 2.13802, 19.365, 10.9417, 0.22 ) }
    dend_26 { pt3dadd( 2.53471, 19.9549, 10.8401, 0.22 ) }
    dend_26 { pt3dadd( 2.76213, 20.2921, 10.7833, 0.44 ) }
    dend_26 { pt3dadd( 2.98042, 20.6154, 10.7408, 0.81 ) }
    dend_26 { pt3dadd( 3.16246, 20.8901, 10.7042, 0.37 ) }
    dend_26 { pt3dadd( 3.62756, 21.6369, 10.5891, 0.22 ) }
    dend_26 { pt3dadd( 3.81618, 21.9769, 10.5323, 0.59 ) }
    dend_26 { pt3dadd( 3.93994, 22.2214, 10.4951, 1.18 ) }
    dend_26 { pt3dadd( 4.15976, 22.7147, 10.4526, 1.11 ) }
    dend_26 { pt3dadd( 4.62708, 23.8568, 10.4078, 0.22 ) }
    dend_26 { pt3dadd( 4.79807, 24.2999, 10.4098, 0.66 ) }
    dend_26 { pt3dadd( 4.97979, 24.781, 10.4347, 1.7 ) }
    dend_26 { pt3dadd( 5.14507, 25.2298, 10.4681, 1.62 ) }
    dend_26 { pt3dadd( 5.77586, 26.9665, 10.6272, 0.15 ) }
    dend_26 { pt3dadd( 5.88578, 27.2747, 10.6627, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 6.01428, 27.6249, 10.7134, 0.22 ) }
    dend_26 { pt3dadd( 6.15861, 27.9908, 10.7667, 0.07 ) }
    dend_26 { pt3dadd( 6.35196, 28.455, 10.8307, 0.07 ) }
    dend_26 { pt3dadd( 6.48227, 28.7598, 10.8663, 0.37 ) }
    dend_26 { pt3dadd( 6.65008, 29.1181, 10.8965, 0.22 ) }
    dend_26 { pt3dadd( 7.03107, 29.8949, 10.9628, 0.15 ) }
    dend_26 { pt3dadd( 7.2648, 30.3546, 11.0002, 0.44 ) }
    dend_26 { pt3dadd( 7.51351, 30.8305, 11.0381, 0.81 ) }
    dend_26 { pt3dadd( 7.85794, 31.4552, 11.0866, 1.84 ) }
    dend_26 { pt3dadd( 8.56514, 32.7288, 11.1959, 0.07 ) }
    dend_26 { pt3dadd( 8.80394, 33.1598, 11.2407, 0.29 ) }
    dend_26 { pt3dadd( 9.27504, 34.0134, 11.3454, 0.07 ) }
    dend_26 { pt3dadd( 9.40338, 34.2491, 11.3796, 0.66 ) }
    dend_26 { pt3dadd( 9.62025, 34.6583, 11.451, 1.33 ) }
    dend_26 { pt3dadd( 10.0862, 35.5865, 11.6476, 0.07 ) }
    dend_26 { pt3dadd( 10.2955, 36.0454, 11.7635, 0.07 ) }
    dend_26 { pt3dadd( 10.3837, 36.2514, 11.8203, 0.22 ) }
    dend_26 { pt3dadd( 10.5455, 36.6476, 11.9415, 0.74 ) }
    dend_26 { pt3dadd( 10.6616, 36.9409, 12.0337, 1.55 ) }
    dend_26 { pt3dadd( 11.1074, 38.0979, 12.4101, 0.07 ) }
    dend_26 { pt3dadd( 11.2112, 38.3552, 12.4936, 0.22 ) }
    dend_26 { pt3dadd( 11.3886, 38.7865, 12.6261, 0.07 ) }
    dend_26 { pt3dadd( 11.5754, 39.2324, 12.7592, 1.03 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -135.678, 41.762, 21.4443, 0.15 ) }
    dend_24 { pt3dadd( -135.992, 43.4693, 22.4354, 0.15 ) }
    dend_24 { pt3dadd( -136.158, 44.3685, 22.9574, 0.66 ) }
    dend_24 { pt3dadd( -136.239, 44.8129, 23.2154, 0.66 ) }
    dend_24 { pt3dadd( -136.452, 45.9676, 23.8858, 0.07 ) }
    dend_24 { pt3dadd( -136.553, 46.5187, 24.2057, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 29/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -135.678, 41.762, 21.4443, 0.07 ) }
    dend_19 { pt3dadd( -136.481, 42.4288, 21.1791, 0.07 ) }
    dend_19 { pt3dadd( -137.17, 42.9978, 20.9964, 0.07 ) }
    dend_19 { pt3dadd( -137.572, 43.3146, 20.9325, 0.52 ) }
    dend_19 { pt3dadd( -138.018, 43.6675, 20.894, 1.11 ) }
    dend_19 { pt3dadd( -139.349, 44.7727, 20.8503, 0.07 ) }
    dend_19 { pt3dadd( -139.615, 45.0069, 20.8505, 0.07 ) }
    dend_19 { pt3dadd( -140.068, 45.4528, 20.9169, 0.52 ) }
    dend_19 { pt3dadd( -140.682, 46.1029, 21.0742, 0.15 ) }
    dend_19 { pt3dadd( -141.084, 46.5544, 21.2035, 0.22 ) }
    dend_19 { pt3dadd( -141.429, 46.9543, 21.3324, 0.59 ) }
    dend_19 { pt3dadd( -141.724, 47.2813, 21.4521, 0.59 ) }
    dend_19 { pt3dadd( -142.318, 47.8772, 21.6945, 0.15 ) }
    dend_19 { pt3dadd( -142.649, 48.1587, 21.8185, 0.22 ) }
    dend_19 { pt3dadd( -143.046, 48.433, 21.9428, 0.66 ) }
    dend_19 { pt3dadd( -143.428, 48.6524, 22.048, 1.62 ) }
    dend_19 { pt3dadd( -143.98, 48.9376, 22.1987, 1.62 ) }
    dend_19 { pt3dadd( -145.138, 49.5231, 22.5069, 0.22 ) }
    dend_19 { pt3dadd( -145.767, 49.8211, 22.669, 0.22 ) }
    dend_19 { pt3dadd( -146.312, 50.0759, 22.8117, 0.22 ) }
    dend_19 { pt3dadd( -146.911, 50.3607, 22.9673, 0.22 ) }
    dend_19 { pt3dadd( -147.612, 50.7135, 23.1583, 0.22 ) }
    dend_19 { pt3dadd( -148.246, 51.0872, 23.3315, 1.77 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 18.1973, -71.0452, 12.5052, 0.22 ) }
    dend_17 { pt3dadd( 19.6455, -73.0243, 13.1213, 0.22 ) }
    dend_17 { pt3dadd( 20.9388, -74.8426, 13.7236, 0.22 ) }
    dend_17 { pt3dadd( 21.3618, -75.4824, 13.9502, 0.66 ) }
    dend_17 { pt3dadd( 21.8007, -76.1896, 14.2051, 0.88 ) }
    dend_17 { pt3dadd( 22.3285, -77.1478, 14.5665, 0.22 ) }
    dend_17 { pt3dadd( 22.8434, -78.1741, 14.9599, 0.07 ) }
    dend_17 { pt3dadd( 23.1379, -78.9336, 15.2574, 0.15 ) }
    dend_17 { pt3dadd( 23.454, -79.9007, 15.6407, 0.07 ) }
    dend_17 { pt3dadd( 23.6489, -80.5316, 15.9065, 0.15 ) }
    dend_17 { pt3dadd( 24.1019, -82.123, 16.5976, 0.07 ) }
    dend_17 { pt3dadd( 24.2646, -82.7889, 16.8715, 0.52 ) }
    dend_17 { pt3dadd( 24.4133, -83.5755, 17.17, 0.88 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 65/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.1973, -71.0452, 12.5052, 2.8 ) }
    dend_12 { pt3dadd( 19.0681, -72.9466, 12.5056, 2.8 ) }
    dend_12 { pt3dadd( 20.2327, -75.503, 12.598, 0.37 ) }
    dend_12 { pt3dadd( 20.8466, -76.9351, 12.6952, 0.22 ) }
    dend_12 { pt3dadd( 21.6618, -79.0351, 12.8811, 0.22 ) }
    dend_12 { pt3dadd( 22.1397, -80.4072, 13.0608, 0.22 ) }
    dend_12 { pt3dadd( 22.5366, -81.6476, 13.2654, 0.29 ) }
    dend_12 { pt3dadd( 22.8135, -82.6229, 13.4776, 0.88 ) }
    dend_12 { pt3dadd( 23.2172, -84.1355, 13.8784, 0.96 ) }
    dend_12 { pt3dadd( 23.5644, -85.5353, 14.265, 0.52 ) }
    dend_12 { pt3dadd( 24.0876, -87.8277, 14.8968, 0.37 ) }
    dend_12 { pt3dadd( 24.4023, -89.2279, 15.2401, 0.81 ) }
    dend_12 { pt3dadd( 24.7307, -90.4438, 15.516, 0.44 ) }
    dend_12 { pt3dadd( 25.3234, -92.2846, 15.9476, 0.29 ) }
    dend_12 { pt3dadd( 25.7627, -93.478, 16.2603, 0.88 ) }
    dend_12 { pt3dadd( 26.2101, -94.6021, 16.6039, 1.92 ) }
    dend_12 { pt3dadd( 26.8523, -96.2332, 17.1505, 2.06 ) }
    dend_12 { pt3dadd( 27.8238, -98.8075, 18.0579, 0.29 ) }
    dend_12 { pt3dadd( 28.4645, -100.636, 18.7379, 0.37 ) }
    dend_12 { pt3dadd( 28.9777, -102.249, 19.31, 0.29 ) }
    dend_12 { pt3dadd( 29.4048, -103.662, 19.7734, 0.37 ) }
    dend_12 { pt3dadd( 29.9699, -105.739, 20.3019, 0.37 ) }
    dend_12 { pt3dadd( 30.4486, -107.849, 20.683, 0.29 ) }
    dend_12 { pt3dadd( 30.5718, -108.653, 20.7419, 0.88 ) }
    dend_12 { pt3dadd( 30.7685, -110.487, 20.6797, 1.84 ) }
    dend_12 { pt3dadd( 30.86, -111.581, 20.549, 2.06 ) }
    dend_12 { pt3dadd( 31.0693, -114.517, 19.9822, 0.29 ) }
    dend_12 { pt3dadd( 31.1461, -115.814, 19.6734, 0.37 ) }
    dend_12 { pt3dadd( 31.215, -117.104, 19.3477, 0.22 ) }
    dend_12 { pt3dadd( 31.2868, -118.059, 19.109, 0.22 ) }
    dend_12 { pt3dadd( 31.4218, -119.254, 18.8439, 0.37 ) }
    dend_12 { pt3dadd( 31.7055, -120.775, 18.5478, 0.29 ) }
    dend_12 { pt3dadd( 31.8476, -121.342, 18.466, 1.03 ) }
    dend_12 { pt3dadd( 32.1812, -122.459, 18.3588, 1.62 ) }
    dend_12 { pt3dadd( 32.5157, -123.48, 18.311, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 33.2109, -125.507, 18.2804, 0.81 ) }
    dend_12 { pt3dadd( 33.8732, -127.411, 18.3154, 0.22 ) }
    dend_12 { pt3dadd( 34.5757, -129.261, 18.468, 0.22 ) }
    dend_12 { pt3dadd( 35.319, -131.163, 18.7188, 0.22 ) }
    dend_12 { pt3dadd( 35.5647, -131.779, 18.8287, 1.03 ) }
    dend_12 { pt3dadd( 36.0201, -132.902, 19.0749, 2.14 ) }
    dend_12 { pt3dadd( 36.6964, -134.56, 19.4993, 1.4 ) }
    dend_12 { pt3dadd( 37.7438, -136.999, 20.1843, 0.22 ) }
    dend_12 { pt3dadd( 38.3983, -138.457, 20.6102, 0.29 ) }
    dend_12 { pt3dadd( 38.9081, -139.575, 20.9417, 0.66 ) }
    dend_12 { pt3dadd( 39.295, -140.423, 21.1663, 0.66 ) }
    dend_12 { pt3dadd( 39.9154, -141.751, 21.4595, 0.22 ) }
    dend_12 { pt3dadd( 40.7348, -143.406, 21.7435, 0.22 ) }
    dend_12 { pt3dadd( 41.1094, -144.146, 21.839, 0.74 ) }
    dend_12 { pt3dadd( 41.6503, -145.154, 21.9711, 1.62 ) }
    dend_12 { pt3dadd( 42.4524, -146.674, 22.1899, 0.96 ) }
    dend_12 { pt3dadd( 43.4024, -148.613, 22.5324, 0.22 ) }
    dend_12 { pt3dadd( 43.8978, -149.74, 22.7699, 0.15 ) }
    dend_12 { pt3dadd( 44.1115, -150.348, 22.9148, 0.15 ) }
    dend_12 { pt3dadd( 44.2502, -150.794, 23.0326, 0.44 ) }
    dend_12 { pt3dadd( 44.4634, -151.625, 23.2714, 0.66 ) }
    dend_12 { pt3dadd( 44.7348, -152.945, 23.6721, 0.15 ) }
    dend_12 { pt3dadd( 44.8675, -153.643, 23.9027, 0.15 ) }
    dend_12 { pt3dadd( 45.0339, -154.447, 24.1666, 0.29 ) }
    dend_12 { pt3dadd( 45.243, -155.24, 24.4392, 0.29 ) }
    dend_12 { pt3dadd( 45.7115, -156.706, 24.9439, 0.07 ) }
    dend_12 { pt3dadd( 45.8562, -157.117, 25.0778, 0.44 ) }
    dend_12 { pt3dadd( 46.3413, -158.46, 25.5048, 1.18 ) }
    dend_12 { pt3dadd( 46.6662, -159.443, 25.8294, 2.06 ) }
    dend_12 { pt3dadd( 46.999, -160.543, 26.1919, 1.55 ) }
    dend_12 { pt3dadd( 47.7267, -163.134, 27.0208, 0.44 ) }
    dend_12 { pt3dadd( 48.2035, -164.926, 27.556, 0.66 ) }
    dend_12 { pt3dadd( 48.6162, -166.586, 27.9826, 0.22 ) }
    dend_12 { pt3dadd( 49.1602, -168.911, 28.4547, 0.22 ) }
    dend_12 { pt3dadd( 49.3283, -169.688, 28.5905, 0.96 ) }
    dend_12 { pt3dadd( 49.5117, -170.65, 28.7322, 1.92 ) }
    dend_12 { pt3dadd( 49.6569, -171.553, 28.841, 1.99 ) }
    dend_12 { pt3dadd( 50.0997, -174.414, 29.1113, 0.29 ) }
    dend_12 { pt3dadd( 50.4484, -176.434, 29.2556, 0.15 ) }
    dend_12 { pt3dadd( 50.6195, -177.359, 29.2908, 0.74 ) }
    dend_12 { pt3dadd( 50.747, -178.043, 29.3117, 0.74 ) }
    dend_12 { pt3dadd( 51.047, -179.755, 29.3576, 0.22 ) }
    dend_12 { pt3dadd( 51.2162, -180.89, 29.3919, 0.37 ) }
    dend_12 { pt3dadd( 51.4242, -182.538, 29.4622, 0.22 ) }
    dend_12 { pt3dadd( 51.5638, -183.805, 29.5486, 0.22 ) }
    dend_12 { pt3dadd( 51.6432, -184.616, 29.6173, 0.59 ) }
    dend_12 { pt3dadd( 51.7304, -185.794, 29.7377, 1.18 ) }
    dend_12 { pt3dadd( 51.9011, -188.982, 30.1465, 0.22 ) }
    dend_12 { pt3dadd( 51.9506, -190.173, 30.3173, 0.44 ) }
    dend_12 { pt3dadd( 51.9998, -191.336, 30.4701, 0.22 ) }
    dend_12 { pt3dadd( 52.0361, -192.145, 30.5773, 0.81 ) }
    dend_12 { pt3dadd( 52.0815, -193.058, 30.6923, 1.47 ) }
    dend_12 { pt3dadd( 52.1477, -194.302, 30.8424, 1.55 ) }
    dend_12 { pt3dadd( 52.2339, -196.042, 31.0408, 0.22 ) }
    dend_12 { pt3dadd( 52.3343, -197.967, 31.2665, 0.15 ) }
    dend_12 { pt3dadd( 52.4461, -199.823, 31.4899, 0.15 ) }
    dend_12 { pt3dadd( 52.5133, -200.729, 31.6296, 0.29 ) }
    dend_12 { pt3dadd( 52.5816, -201.549, 31.7886, 0.59 ) }
    dend_12 { pt3dadd( 52.644, -202.214, 31.9515, 0.96 ) }
    dend_12 { pt3dadd( 52.8052, -203.465, 32.3526, 0.22 ) }
    dend_12 { pt3dadd( 53.0086, -204.73, 32.8176, 0.15 ) }
    dend_12 { pt3dadd( 53.3407, -206.433, 33.4748, 0.15 ) }
    dend_12 { pt3dadd( 53.5159, -207.358, 33.8353, 0.96 ) }
    dend_12 { pt3dadd( 53.7905, -208.835, 34.4313, 1.92 ) }
    dend_12 { pt3dadd( 54.161, -210.907, 35.2942, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 65/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.46193, -27.559, 5.13951, 1.03 ) }
    dend_6 { pt3dadd( -8.06669, -28.4825, 5.94554, 1.03 ) }
    dend_6 { pt3dadd( -7.66156, -29.3841, 6.7672, 0.37 ) }
    dend_6 { pt3dadd( -7.35618, -30.0265, 7.34382, 0.66 ) }
    dend_6 { pt3dadd( -7.03524, -30.669, 7.88552, 1.11 ) }
    dend_6 { pt3dadd( -6.70042, -31.3199, 8.39264, 1.55 ) }
    dend_6 { pt3dadd( -6.31109, -32.0894, 8.92553, 0.52 ) }
    dend_6 { pt3dadd( -5.92876, -32.8516, 9.39557, 0.44 ) }
    dend_6 { pt3dadd( -5.47871, -33.7939, 9.88898, 0.88 ) }
    dend_6 { pt3dadd( -5.08176, -34.646, 10.2839, 0.74 ) }
    dend_6 { pt3dadd( -4.71437, -35.4538, 10.6169, 0.44 ) }
    dend_6 { pt3dadd( -4.28557, -36.4101, 10.9436, 0.37 ) }
    dend_6 { pt3dadd( -4.06858, -36.9327, 11.0906, 1.18 ) }
    dend_6 { pt3dadd( -3.65322, -38.0313, 11.3109, 2.51 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 79/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.46193, -27.559, 5.13951, 1.03 ) }
    dend_1 { pt3dadd( -9.48612, -27.9303, 5.39747, 1.03 ) }
    dend_1 { pt3dadd( -11.0513, -28.6044, 5.86414, 0.52 ) }
    dend_1 { pt3dadd( -12.256, -29.2255, 6.31605, 0.44 ) }
    dend_1 { pt3dadd( -13.2302, -29.8458, 6.77012, 0.29 ) }
    dend_1 { pt3dadd( -13.8188, -30.3188, 7.08677, 0.29 ) }
    dend_1 { pt3dadd( -14.175, -30.6739, 7.32527, 0.29 ) }
    dend_1 { pt3dadd( -14.6851, -31.3755, 7.78789, 0.96 ) }
    dend_1 { pt3dadd( -15.1289, -32.219, 8.29683, 2.14 ) }
    dend_1 { pt3dadd( -15.6149, -33.3646, 8.93988, 2.06 ) }
    dend_1 { pt3dadd( -16.0769, -34.665, 9.64244, 0.74 ) }
    dend_1 { pt3dadd( -16.6327, -36.4006, 10.5282, 0.44 ) }
    dend_1 { pt3dadd( -16.8328, -37.0652, 10.8542, 0.59 ) }
    dend_1 { pt3dadd( -17.0401, -37.8259, 11.1978, 0.88 ) }
    dend_1 { pt3dadd( -17.2885, -38.8059, 11.6169, 0.29 ) }
    dend_1 { pt3dadd( -17.5293, -39.8709, 12.052, 0.15 ) }
    dend_1 { pt3dadd( -17.6401, -40.3742, 12.2559, 0.29 ) }
    dend_1 { pt3dadd( -17.9259, -41.702, 12.7031, 0.22 ) }
    dend_1 { pt3dadd( -18.0378, -42.2106, 12.8725, 0.66 ) }
    dend_1 { pt3dadd( -18.2364, -43.1229, 13.1522, 1.7 ) }
    dend_1 { pt3dadd( -18.4053, -43.8854, 13.3546, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -18.6032, -44.7301, 13.5743, 1.92 ) }
    dend_1 { pt3dadd( -19.1357, -47.0007, 14.1714, 0.37 ) }
    dend_1 { pt3dadd( -19.3621, -47.993, 14.4426, 1.25 ) }
    dend_1 { pt3dadd( -19.6106, -49.1455, 14.7711, 0.96 ) }
    dend_1 { pt3dadd( -19.899, -50.6013, 15.1817, 0.22 ) }
    dend_1 { pt3dadd( -20.1458, -51.8623, 15.5327, 0.22 ) }
    dend_1 { pt3dadd( -20.3371, -52.806, 15.7742, 0.44 ) }
    dend_1 { pt3dadd( -20.542, -53.6951, 15.9897, 1.18 ) }
    dend_1 { pt3dadd( -20.7503, -54.4532, 16.1347, 2.29 ) }
    dend_1 { pt3dadd( -21.101, -55.5327, 16.3027, 2.51 ) }
    dend_1 { pt3dadd( -21.6197, -57.0103, 16.4661, 0.44 ) }
    dend_1 { pt3dadd( -22.133, -58.4012, 16.5478, 0.44 ) }
    dend_1 { pt3dadd( -22.3828, -59.0366, 16.5702, 0.37 ) }
    dend_1 { pt3dadd( -22.9645, -60.4478, 16.587, 0.37 ) }
    dend_1 { pt3dadd( -23.1784, -60.9432, 16.5993, 0.22 ) }
    dend_1 { pt3dadd( -23.3862, -61.4136, 16.6199, 0.22 ) }
    dend_1 { pt3dadd( -23.7245, -62.2328, 16.6725, 0.22 ) }
    dend_1 { pt3dadd( -23.8925, -62.6392, 16.7122, 0.74 ) }
    dend_1 { pt3dadd( -24.1243, -63.2249, 16.7971, 1.4 ) }
    dend_1 { pt3dadd( -24.445, -64.1113, 16.9552, 2.14 ) }
    dend_1 { pt3dadd( -24.9303, -65.4574, 17.2039, 0.66 ) }
    dend_1 { pt3dadd( -25.4149, -66.7827, 17.4468, 0.37 ) }
    dend_1 { pt3dadd( -25.7911, -67.9178, 17.616, 0.22 ) }
    dend_1 { pt3dadd( -26.0625, -68.8805, 17.7304, 0.22 ) }
    dend_1 { pt3dadd( -26.2507, -69.6935, 17.8021, 1.11 ) }
    dend_1 { pt3dadd( -26.4216, -70.5273, 17.8659, 1.25 ) }
    dend_1 { pt3dadd( -26.6289, -71.623, 17.9431, 0.59 ) }
    dend_1 { pt3dadd( -26.8725, -72.8738, 18.0083, 0.22 ) }
    dend_1 { pt3dadd( -26.9753, -73.3806, 18.0221, 0.22 ) }
    dend_1 { pt3dadd( -27.3002, -74.68, 18.0368, 0.29 ) }
    dend_1 { pt3dadd( -27.8235, -76.4006, 18.0684, 0.29 ) }
    dend_1 { pt3dadd( -28.0418, -77.0132, 18.1027, 0.29 ) }
    dend_1 { pt3dadd( -28.3089, -77.6723, 18.1628, 0.96 ) }
    dend_1 { pt3dadd( -28.5616, -78.2269, 18.2315, 1.99 ) }
    dend_1 { pt3dadd( -28.7783, -78.6825, 18.2832, 2.51 ) }
    dend_1 { pt3dadd( -29.4785, -80.132, 18.4246, 0.81 ) }
    dend_1 { pt3dadd( -30.2146, -81.7069, 18.5345, 0.22 ) }
    dend_1 { pt3dadd( -30.5787, -82.5174, 18.5698, 0.22 ) }
    dend_1 { pt3dadd( -30.8463, -83.1596, 18.5838, 0.22 ) }
    dend_1 { pt3dadd( -30.9916, -83.532, 18.5819, 0.44 ) }
    dend_1 { pt3dadd( -31.2129, -84.1443, 18.5594, 0.96 ) }
    dend_1 { pt3dadd( -31.4593, -84.883, 18.5058, 0.44 ) }
    dend_1 { pt3dadd( -31.7787, -85.9325, 18.3748, 0.15 ) }
    dend_1 { pt3dadd( -31.9798, -86.6161, 18.2891, 0.15 ) }
    dend_1 { pt3dadd( -32.1349, -87.1636, 18.225, 0.44 ) }
    dend_1 { pt3dadd( -32.3105, -87.764, 18.1674, 0.52 ) }
    dend_1 { pt3dadd( -32.5002, -88.4558, 18.0935, 0.22 ) }
    dend_1 { pt3dadd( -32.6901, -89.0994, 18.0087, 0.22 ) }
    dend_1 { pt3dadd( -32.8927, -89.7144, 17.9216, 0.74 ) }
    dend_1 { pt3dadd( -33.199, -90.5811, 17.781, 1.33 ) }
    dend_1 { pt3dadd( -33.543, -91.511, 17.6298, 0.29 ) }
    dend_1 { pt3dadd( -34.0351, -92.7499, 17.4336, 0.22 ) }
    dend_1 { pt3dadd( -34.3937, -93.5933, 17.3057, 0.22 ) }
    dend_1 { pt3dadd( -34.9315, -94.7988, 17.1451, 0.22 ) }
    dend_1 { pt3dadd( -35.1437, -95.2675, 17.0893, 0.52 ) }
    dend_1 { pt3dadd( -35.6202, -96.3233, 16.9849, 1.7 ) }
    dend_1 { pt3dadd( -36.2596, -97.7517, 16.8703, 0.44 ) }
    dend_1 { pt3dadd( -36.744, -98.8225, 16.8122, 0.37 ) }
    dend_1 { pt3dadd( -37.3058, -100.14, 16.7611, 0.15 ) }
    dend_1 { pt3dadd( -37.5697, -100.777, 16.7351, 0.81 ) }
    dend_1 { pt3dadd( -37.8755, -101.531, 16.6999, 1.7 ) }
    dend_1 { pt3dadd( -38.1159, -102.158, 16.6626, 0.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 33.5074, 20.3123, 0.0, 0.160008 ) }
    axon_1 { pt3dadd( 46.434, 27.9217, 0.0, 0.160008 ) }
    axon_1 { pt3dadd( 59.3606, 35.5311, 0.0, 0.160008 ) }
    // Section: dend_100, id: dend_100, parent: dend_98 (entry count 65/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -14.4975, 6.88503, -18.6362, 0.52 ) }
    dend_100 { pt3dadd( -13.3753, 6.98374, -19.3513, 0.52 ) }
    dend_100 { pt3dadd( -12.1447, 7.30149, -20.1992, 0.37 ) }
    dend_100 { pt3dadd( -11.1321, 7.91669, -21.0233, 0.22 ) }
    dend_100 { pt3dadd( -10.8013, 8.35144, -21.4034, 0.29 ) }
    dend_100 { pt3dadd( -10.586, 8.72377, -21.7262, 0.29 ) }
    dend_100 { pt3dadd( -10.2794, 9.23293, -22.2422, 0.66 ) }
    dend_100 { pt3dadd( -9.94293, 9.82966, -22.9226, 1.03 ) }
    dend_100 { pt3dadd( -9.7134, 10.4238, -23.557, 0.81 ) }
    dend_100 { pt3dadd( -9.4648, 11.159, -24.2855, 0.44 ) }
    dend_100 { pt3dadd( -9.0857, 12.0941, -25.1801, 0.74 ) }
    dend_100 { pt3dadd( -8.66498, 12.9061, -25.9102, 0.66 ) }
    dend_100 { pt3dadd( -8.2341, 13.6146, -26.4473, 0.66 ) }
    dend_100 { pt3dadd( -7.3937, 14.8337, -27.3792, 0.29 ) }
    dend_100 { pt3dadd( -6.85553, 15.5641, -27.8855, 0.29 ) }
    dend_100 { pt3dadd( -6.18065, 16.4886, -28.3751, 0.52 ) }
    dend_100 { pt3dadd( -5.63961, 17.335, -28.6333, 0.52 ) }
    dend_100 { pt3dadd( -5.02065, 18.4179, -28.785, 1.03 ) }
    dend_100 { pt3dadd( 0.847795, 27.0688, -33.1013, 1.03 ) }
    dend_100 { pt3dadd( 6.36129, 35.5707, -38.1003, 1.03 ) }
    dend_100 { pt3dadd( 11.7141, 43.1282, -44.4628, 1.03 ) }
    dend_100 { pt3dadd( 16.9057, 50.1869, -51.4463, 1.03 ) }
    dend_100 { pt3dadd( 21.3838, 58.2549, -57.9135, 1.03 ) }
    dend_100 { pt3dadd( 24.6583, 66.6719, -64.6872, 1.03 ) }
    dend_100 { pt3dadd( 29.4035, 74.5435, -71.184, 1.03 ) }
    dend_100 { pt3dadd( 34.9346, 82.841, -76.4671, 1.03 ) }
    dend_100 { pt3dadd( 41.3092, 91.3853, -80.2216, 1.03 ) }
    dend_100 { pt3dadd( 47.6617, 99.5994, -84.6271, 1.03 ) }
    dend_100 { pt3dadd( 54.5661, 108.026, -87.6027, 1.03 ) }
    dend_100 { pt3dadd( 62.2555, 115.422, -91.0949, 1.03 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 95/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -14.4975, 6.88503, -18.6362, 1.25 ) }
    dend_99 { pt3dadd( -14.504, 5.35704, -19.0125, 1.25 ) }
    dend_99 { pt3dadd( -14.4087, 3.83757, -19.3426, 0.59 ) }
    dend_99 { pt3dadd( -14.3085, 2.62877, -19.6279, 0.81 ) }
    dend_99 { pt3dadd( -14.1874, 1.19179, -20.0428, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_99 { pt3dadd( -14.0288, -0.360324, -20.5143, 1.4 ) }
    dend_99 { pt3dadd( -13.8493, -1.72003, -20.9097, 1.11 ) }
    dend_99 { pt3dadd( -13.2725, -4.21299, -21.6263, 0.52 ) }
    dend_99 { pt3dadd( -12.7701, -5.86287, -22.0981, 0.74 ) }
    dend_99 { pt3dadd( -12.2343, -7.33817, -22.5774, 1.7 ) }
    dend_99 { pt3dadd( -11.6117, -8.78188, -23.1213, 1.84 ) }
    dend_99 { pt3dadd( -10.8362, -10.2725, -23.7561, 1.92 ) }
    dend_99 { pt3dadd( -9.41262, -12.6911, -24.8459, 0.96 ) }
    dend_99 { pt3dadd( -8.6534, -13.7755, -25.3495, 0.96 ) }
    dend_99 { pt3dadd( -7.91206, -14.7021, -25.7702, 0.44 ) }
    dend_99 { pt3dadd( -7.04963, -15.6656, -26.2004, 1.18 ) }
    dend_99 { pt3dadd( -6.65096, -16.058, -26.4263, 1.18 ) }
    dend_99 { pt3dadd( -1.93598, -26.0022, -28.4266, 1.18 ) }
    dend_99 { pt3dadd( 3.28089, -35.7903, -29.769, 1.18 ) }
    dend_99 { pt3dadd( 6.58231, -46.2552, -32.1471, 1.18 ) }
    dend_99 { pt3dadd( 9.78446, -57.0346, -32.5331, 1.18 ) }
    dend_99 { pt3dadd( 13.9023, -67.356, -31.0614, 1.18 ) }
    dend_99 { pt3dadd( 17.2273, -78.0998, -30.914, 1.18 ) }
    // Section: dend_97, id: dend_97, parent: dend_95 (entry count 18/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -12.2727, 77.4256, -28.5232, 0.07 ) }
    dend_97 { pt3dadd( -14.5944, 88.2931, -30.0349, 0.07 ) }
    dend_97 { pt3dadd( -17.1576, 99.2072, -29.7435, 0.07 ) }
    dend_97 { pt3dadd( -22.0545, 109.188, -29.4175, 0.07 ) }
    dend_97 { pt3dadd( -27.8361, 118.552, -30.6317, 0.07 ) }
    dend_97 { pt3dadd( -35.0608, 126.796, -31.3633, 0.07 ) }
    dend_97 { pt3dadd( -43.3958, 133.818, -30.9459, 0.07 ) }
    dend_97 { pt3dadd( -50.4464, 142.007, -29.004, 0.07 ) }
    dend_97 { pt3dadd( -59.3411, 147.903, -27.0589, 0.07 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 27/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -12.2727, 77.4256, -28.5232, 0.81 ) }
    dend_96 { pt3dadd( -12.5477, 88.9394, -30.9335, 0.07 ) }
    dend_96 { pt3dadd( -11.9668, 99.9452, -34.9795, 0.07 ) }
    dend_96 { pt3dadd( -9.85853, 111.192, -37.7428, 0.07 ) }
    dend_96 { pt3dadd( -8.46688, 122.557, -40.4895, 0.07 ) }
    dend_96 { pt3dadd( -6.29307, 133.849, -43.0209, 0.07 ) }
    dend_96 { pt3dadd( -6.21479, 144.919, -46.9284, 0.07 ) }
    dend_96 { pt3dadd( -7.37716, 156.227, -49.8669, 0.07 ) }
    // Section: dend_93, id: dend_93, parent: dend_45 (entry count 35/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -11.023, -16.6623, -8.52129, 0.37 ) }
    dend_93 { pt3dadd( -12.4395, -16.4727, -8.97074, 0.37 ) }
    dend_93 { pt3dadd( -13.4911, -16.3391, -9.47373, 0.37 ) }
    dend_93 { pt3dadd( -14.1739, -16.3461, -9.83272, 0.22 ) }
    dend_93 { pt3dadd( -14.8864, -16.4689, -10.3301, 0.22 ) }
    dend_93 { pt3dadd( -15.2435, -16.5624, -10.6061, 0.22 ) }
    dend_93 { pt3dadd( -15.7587, -16.7037, -11.0027, 0.44 ) }
    dend_93 { pt3dadd( -16.2691, -16.8737, -11.4401, 0.52 ) }
    dend_93 { pt3dadd( -17.0539, -17.142, -12.0701, 1.18 ) }
    dend_93 { pt3dadd( -18.4115, -17.6552, -13.0179, 0.22 ) }
    dend_93 { pt3dadd( -19.2859, -18.0106, -13.5631, 0.22 ) }
    dend_93 { pt3dadd( -19.9294, -18.2741, -13.9184, 0.22 ) }
    dend_93 { pt3dadd( -20.5794, -18.5544, -14.2641, 0.22 ) }
    dend_93 { pt3dadd( -21.3748, -18.9071, -14.6629, 0.29 ) }
    dend_93 { pt3dadd( -22.0684, -19.2343, -14.9921, 0.59 ) }
    dend_93 { pt3dadd( -22.6185, -19.5274, -15.2185, 0.96 ) }
    dend_93 { pt3dadd( -23.4969, -20.0937, -15.5728, 0.37 ) }
    dend_93 { pt3dadd( -24.3605, -20.7797, -15.9333, 0.22 ) }
    dend_93 { pt3dadd( -25.1015, -21.4983, -16.2515, 0.07 ) }
    dend_93 { pt3dadd( -25.8909, -22.3467, -16.5974, 0.07 ) }
    dend_93 { pt3dadd( -26.5019, -23.0476, -16.8594, 0.22 ) }
    dend_93 { pt3dadd( -27.1535, -23.8226, -17.1071, 0.07 ) }
    dend_93 { pt3dadd( -27.6479, -24.484, -17.2854, 0.07 ) }
    dend_93 { pt3dadd( -28.0744, -25.1081, -17.3846, 0.74 ) }
    dend_93 { pt3dadd( -38.0416, -30.9243, -20.2338, 0.74 ) }
    dend_93 { pt3dadd( -48.8052, -35.359, -22.3481, 0.74 ) }
    dend_93 { pt3dadd( -59.2446, -40.1466, -25.2318, 0.74 ) }
    dend_93 { pt3dadd( -70.0935, -44.1878, -27.594, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 63/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -11.023, -16.6623, -8.52129, 0.96 ) }
    dend_46 { pt3dadd( -10.9939, -18.2647, -8.65285, 0.96 ) }
    dend_46 { pt3dadd( -10.9661, -19.4929, -8.8196, 0.88 ) }
    dend_46 { pt3dadd( -10.9399, -21.1051, -9.09578, 0.81 ) }
    dend_46 { pt3dadd( -10.9326, -22.0584, -9.29256, 1.03 ) }
    dend_46 { pt3dadd( -10.9512, -22.9428, -9.50325, 1.33 ) }
    dend_46 { pt3dadd( -11.0511, -24.7357, -9.95674, 0.88 ) }
    dend_46 { pt3dadd( -11.2216, -26.2994, -10.4359, 1.03 ) }
    dend_46 { pt3dadd( -11.46, -27.6764, -10.9132, 1.62 ) }
    dend_46 { pt3dadd( -11.8519, -29.6477, -11.6518, 0.37 ) }
    dend_46 { pt3dadd( -12.0984, -30.7037, -12.0574, 0.37 ) }
    dend_46 { pt3dadd( -12.3294, -31.5309, -12.3974, 0.74 ) }
    dend_46 { pt3dadd( -12.583, -32.1839, -12.6823, 1.25 ) }
    dend_46 { pt3dadd( -13.0355, -33.038, -13.0746, 1.77 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 21.4975, -3.32385, 7.55917, 0.15 ) }
    dend_42 { pt3dadd( 22.6643, -2.43374, 6.76829, 0.15 ) }
    dend_42 { pt3dadd( 23.2511, -1.97673, 6.38088, 0.15 ) }
    dend_42 { pt3dadd( 23.7355, -1.579, 6.02611, 0.88 ) }
    dend_42 { pt3dadd( 24.2789, -1.09652, 5.59503, 1.55 ) }
    dend_42 { pt3dadd( 25.5361, 0.156779, 4.49004, 0.22 ) }
    dend_42 { pt3dadd( 26.1056, 0.724564, 3.98944, 0.22 ) }
    dend_42 { pt3dadd( 26.4766, 1.1196, 3.67117, 0.37 ) }
    dend_42 { pt3dadd( 27.1158, 1.82412, 3.13238, 0.07 ) }
    dend_42 { pt3dadd( 27.3879, 2.15715, 2.87283, 0.07 ) }
    dend_42 { pt3dadd( 27.7339, 2.6942, 2.3998, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 21.4975, -3.32385, 7.55917, 0.29 ) }
    dend_35 { pt3dadd( 22.2498, -3.63785, 8.72764, 0.29 ) }
    dend_35 { pt3dadd( 22.778, -3.78028, 9.45191, 0.29 ) }
    dend_35 { pt3dadd( 23.6052, -3.89997, 10.4538, 0.66 ) }
    dend_35 { pt3dadd( 23.8472, -3.91296, 10.7171, 0.66 ) }
    dend_35 { pt3dadd( 24.5619, -3.90634, 11.4219, 0.22 ) }
    dend_35 { pt3dadd( 24.9754, -3.90086, 11.8003, 0.22 ) }
    dend_35 { pt3dadd( 25.5777, -3.87293, 12.3335, 0.66 ) }
    dend_35 { pt3dadd( 26.4347, -3.84043, 13.0603, 1.84 ) }
    dend_35 { pt3dadd( 27.4838, -3.83703, 13.9487, 3.02 ) }
    dend_35 { pt3dadd( 28.6417, -3.90081, 14.9952, 1.55 ) }
    dend_35 { pt3dadd( 29.8277, -4.10781, 16.1149, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( 30.7399, -4.38273, 17.0203, 0.44 ) }
    dend_35 { pt3dadd( 31.6801, -4.77524, 18.0022, 0.22 ) }
    dend_35 { pt3dadd( 32.4796, -5.18543, 18.8545, 1.03 ) }
    dend_35 { pt3dadd( 33.1012, -5.55934, 19.5066, 2.29 ) }
    dend_35 { pt3dadd( 34.4725, -6.4579, 20.8915, 0.22 ) }
    dend_35 { pt3dadd( 35.161, -6.87136, 21.5632, 0.22 ) }
    dend_35 { pt3dadd( 35.5816, -7.0953, 21.9389, 0.22 ) }
    dend_35 { pt3dadd( 36.111, -7.33703, 22.3742, 1.47 ) }
    dend_35 { pt3dadd( 36.9699, -7.67149, 23.0138, 2.88 ) }
    dend_35 { pt3dadd( 37.7067, -7.9123, 23.5152, 2.14 ) }
    dend_35 { pt3dadd( 40.2131, -8.63197, 25.0796, 0.29 ) }
    dend_35 { pt3dadd( 41.1833, -8.88982, 25.6524, 0.29 ) }
    dend_35 { pt3dadd( 41.7708, -9.03488, 25.9905, 0.29 ) }
    dend_35 { pt3dadd( 42.3073, -9.15487, 26.2987, 0.66 ) }
    dend_35 { pt3dadd( 43.0483, -9.29164, 26.7011, 1.03 ) }
    dend_35 { pt3dadd( 43.8316, -9.41687, 27.0464, 0.22 ) }
    dend_35 { pt3dadd( 44.7169, -9.49451, 27.348, 0.22 ) }
    dend_35 { pt3dadd( 45.3245, -9.49619, 27.5737, 0.22 ) }
    dend_35 { pt3dadd( 45.9696, -9.46769, 27.8266, 0.59 ) }
    dend_35 { pt3dadd( 46.7612, -9.41102, 28.1424, 1.4 ) }
    dend_35 { pt3dadd( 47.9985, -9.32213, 28.6414, 0.37 ) }
    dend_35 { pt3dadd( 48.9359, -9.32301, 29.0196, 0.22 ) }
    dend_35 { pt3dadd( 49.8071, -9.38889, 29.3408, 0.22 ) }
    dend_35 { pt3dadd( 50.2709, -9.46256, 29.5054, 1.33 ) }
    dend_35 { pt3dadd( 51.0186, -9.62911, 29.7648, 2.73 ) }
    dend_35 { pt3dadd( 51.6717, -9.81037, 29.9964, 2.73 ) }
    dend_35 { pt3dadd( 53.8077, -10.5351, 30.7736, 0.22 ) }
    dend_35 { pt3dadd( 54.6279, -10.8662, 31.076, 0.52 ) }
    dend_35 { pt3dadd( 55.6104, -11.2892, 31.4688, 0.15 ) }
    dend_35 { pt3dadd( 56.1019, -11.5067, 31.6806, 0.52 ) }
    dend_35 { pt3dadd( 56.7362, -11.79, 31.9666, 0.96 ) }
    dend_35 { pt3dadd( 58.1815, -12.4325, 32.6419, 0.22 ) }
    dend_35 { pt3dadd( 59.0084, -12.7797, 33.0384, 0.96 ) }
    dend_35 { pt3dadd( 59.8896, -13.125, 33.4983, 2.29 ) }
    dend_35 { pt3dadd( 61.7887, -13.8129, 34.5088, 0.22 ) }
    dend_35 { pt3dadd( 62.313, -13.9965, 34.7927, 0.74 ) }
    dend_35 { pt3dadd( 63.1268, -14.2741, 35.2428, 1.11 ) }
    dend_35 { pt3dadd( 64.7287, -14.8053, 36.1429, 0.15 ) }
    dend_35 { pt3dadd( 65.6348, -15.1058, 36.6476, 0.44 ) }
    dend_35 { pt3dadd( 66.3309, -15.342, 37.0387, 1.25 ) }
    dend_35 { pt3dadd( 67.8728, -15.8402, 37.9628, 0.15 ) }
    dend_35 { pt3dadd( 68.3145, -15.9847, 38.231, 0.15 ) }
    dend_35 { pt3dadd( 68.7023, -16.1175, 38.4686, 0.44 ) }
    dend_35 { pt3dadd( 69.1874, -16.3074, 38.7639, 0.66 ) }
    dend_35 { pt3dadd( 70.1048, -16.6755, 39.2683, 0.15 ) }
    dend_35 { pt3dadd( 70.8994, -16.9822, 39.6857, 1.03 ) }
    dend_35 { pt3dadd( 71.6054, -17.256, 40.0217, 2.14 ) }
    dend_35 { pt3dadd( 73.0775, -17.801, 40.6929, 0.15 ) }
    dend_35 { pt3dadd( 73.5449, -17.9535, 40.9186, 0.15 ) }
    dend_35 { pt3dadd( 74.2844, -18.1357, 41.3021, 0.15 ) }
    dend_35 { pt3dadd( 75.0755, -18.2608, 41.7525, 0.15 ) }
    dend_35 { pt3dadd( 75.4557, -18.2874, 41.9944, 0.74 ) }
    dend_35 { pt3dadd( 76.2695, -18.2515, 42.5867, 1.92 ) }
    dend_35 { pt3dadd( 77.683, -18.0398, 43.7501, 0.15 ) }
    dend_35 { pt3dadd( 78.5819, -17.8451, 44.5919, 0.59 ) }
    dend_35 { pt3dadd( 79.2956, -17.6587, 45.3391, 0.15 ) }
    dend_35 { pt3dadd( 79.942, -17.4644, 46.0482, 1.03 ) }
    dend_35 { pt3dadd( 80.6012, -17.2649, 46.7667, 1.33 ) }
    dend_35 { pt3dadd( 81.7839, -16.911, 48.0529, 0.15 ) }
    dend_35 { pt3dadd( 82.8948, -16.5951, 49.2525, 0.15 ) }
    dend_35 { pt3dadd( 83.5228, -16.4527, 49.924, 1.03 ) }
    dend_35 { pt3dadd( 84.3427, -16.3051, 50.7942, 1.77 ) }
    dend_35 { pt3dadd( 85.393, -16.1703, 51.9167, 0.15 ) }
    dend_35 { pt3dadd( 86.2667, -16.1128, 52.832, 0.15 ) }
    dend_35 { pt3dadd( 86.9766, -16.1285, 53.5007, 0.59 ) }
    dend_35 { pt3dadd( 87.8937, -16.215, 54.2955, 0.15 ) }
    dend_35 { pt3dadd( 88.3412, -16.2756, 54.6761, 0.15 ) }
    dend_35 { pt3dadd( 88.8182, -16.3577, 55.0771, 1.03 ) }
    dend_35 { pt3dadd( 89.4753, -16.4611, 55.5985, 1.62 ) }
    dend_35 { pt3dadd( 91.2146, -16.6987, 56.8606, 0.15 ) }
    dend_35 { pt3dadd( 91.8312, -16.7542, 57.2779, 0.15 ) }
    dend_35 { pt3dadd( 92.4995, -16.7732, 57.7055, 0.81 ) }
    dend_35 { pt3dadd( 93.3977, -16.7298, 58.2766, 1.62 ) }
    dend_35 { pt3dadd( 94.7138, -16.5813, 59.1133, 0.07 ) }
    dend_35 { pt3dadd( 95.6142, -16.4257, 59.7013, 0.07 ) }
    dend_35 { pt3dadd( 96.0382, -16.3227, 59.9728, 0.59 ) }
    dend_35 { pt3dadd( 96.3554, -16.2392, 60.1572, 0.59 ) }
    dend_35 { pt3dadd( 97.2056, -15.9954, 60.6289, 0.07 ) }
    dend_35 { pt3dadd( 97.8388, -15.8124, 60.9639, 0.07 ) }
    dend_35 { pt3dadd( 98.1726, -15.7173, 61.132, 0.07 ) }
    dend_35 { pt3dadd( 98.7656, -15.5358, 61.41, 0.59 ) }
    dend_35 { pt3dadd( 99.4385, -15.3278, 61.7305, 1.33 ) }
    dend_35 { pt3dadd( 100.414, -15.0447, 62.1977, 0.15 ) }
    dend_35 { pt3dadd( 101.113, -14.8437, 62.5535, 0.52 ) }
    dend_35 { pt3dadd( 101.789, -14.628, 62.9325, 0.07 ) }
    dend_35 { pt3dadd( 102.238, -14.4853, 63.2017, 0.22 ) }
    dend_35 { pt3dadd( 102.918, -14.2598, 63.6312, 0.07 ) }
    dend_35 { pt3dadd( 103.784, -13.9581, 64.2233, 0.66 ) }
    dend_35 { pt3dadd( 104.845, -13.5938, 64.9862, 0.22 ) }
    dend_35 { pt3dadd( 105.545, -13.3772, 65.4905, 0.96 ) }
    dend_35 { pt3dadd( 106.272, -13.1981, 66.0613, 1.62 ) }
    dend_35 { pt3dadd( 107.671, -12.9108, 67.1913, 0.15 ) }
    dend_35 { pt3dadd( 108.456, -12.7559, 67.8266, 0.74 ) }
    dend_35 { pt3dadd( 109.177, -12.6204, 68.4075, 1.11 ) }
    dend_35 { pt3dadd( 110.401, -12.4253, 69.3584, 0.22 ) }
    dend_35 { pt3dadd( 112.089, -12.2034, 70.6367, 0.29 ) }
    dend_35 { pt3dadd( 112.496, -12.1619, 70.9293, 0.15 ) }
    dend_35 { pt3dadd( 112.818, -12.1533, 71.14, 0.15 ) }
    dend_35 { pt3dadd( 113.437, -12.1536, 71.4834, 0.22 ) }
    dend_35 { pt3dadd( 113.756, -12.1466, 71.6333, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 114.522, -12.0926, 71.8935, 1.47 ) }
    dend_35 { pt3dadd( 115.275, -12.0036, 72.0691, 1.18 ) }
    dend_35 { pt3dadd( 116.623, -11.8127, 72.4119, 0.15 ) }
    dend_35 { pt3dadd( 117.039, -11.745, 72.5363, 0.37 ) }
    dend_35 { pt3dadd( 117.519, -11.6656, 72.6949, 0.37 ) }
    dend_35 { pt3dadd( 118.442, -11.5097, 72.9942, 0.15 ) }
    dend_35 { pt3dadd( 119.178, -11.3574, 73.2417, 1.25 ) }
    dend_35 { pt3dadd( 119.581, -11.2595, 73.3887, 1.25 ) }
    dend_35 { pt3dadd( 120.831, -10.9314, 73.839, 0.15 ) }
    dend_35 { pt3dadd( 121.425, -10.79, 74.0513, 0.15 ) }
    dend_35 { pt3dadd( 122.219, -10.6267, 74.3198, 0.22 ) }
    dend_35 { pt3dadd( 123.021, -10.4922, 74.5452, 0.15 ) }
    dend_35 { pt3dadd( 123.689, -10.3717, 74.6815, 0.22 ) }
    dend_35 { pt3dadd( 124.327, -10.2432, 74.7901, 0.96 ) }
    dend_35 { pt3dadd( 125.216, -10.0437, 74.9039, 1.62 ) }
    dend_35 { pt3dadd( 125.769, -9.91902, 74.9623, 1.33 ) }
    dend_35 { pt3dadd( 127.412, -9.57417, 75.1285, 0.15 ) }
    dend_35 { pt3dadd( 128.362, -9.38754, 75.2088, 0.15 ) }
    dend_35 { pt3dadd( 128.904, -9.27903, 75.2545, 0.66 ) }
    dend_35 { pt3dadd( 129.597, -9.13774, 75.2952, 1.11 ) }
    dend_35 { pt3dadd( 130.981, -8.84595, 75.3356, 0.15 ) }
    dend_35 { pt3dadd( 131.701, -8.69413, 75.3286, 0.44 ) }
    dend_35 { pt3dadd( 132.038, -8.62279, 75.3084, 0.44 ) }
    dend_35 { pt3dadd( 132.959, -8.4651, 75.2205, 0.15 ) }
    dend_35 { pt3dadd( 134.051, -8.31357, 75.0854, 0.15 ) }
    dend_35 { pt3dadd( 134.412, -8.26432, 75.0338, 0.88 ) }
    dend_35 { pt3dadd( 135.346, -8.14354, 74.8574, 1.7 ) }
    dend_35 { pt3dadd( 136.609, -8.00372, 74.586, 0.15 ) }
    dend_35 { pt3dadd( 137.296, -7.93594, 74.4416, 0.29 ) }
    dend_35 { pt3dadd( 137.984, -7.87827, 74.3051, 0.07 ) }
    dend_35 { pt3dadd( 138.777, -7.82751, 74.1848, 0.22 ) }
    dend_35 { pt3dadd( 139.877, -7.78337, 74.0307, 0.15 ) }
    dend_35 { pt3dadd( 140.434, -7.77008, 73.9608, 0.59 ) }
    dend_35 { pt3dadd( 141.28, -7.76191, 73.8651, 1.4 ) }
    dend_35 { pt3dadd( 141.851, -7.75991, 73.8089, 1.25 ) }
    dend_35 { pt3dadd( 143.455, -7.80565, 73.6874, 0.15 ) }
    dend_35 { pt3dadd( 144.349, -7.86822, 73.647, 0.37 ) }
    dend_35 { pt3dadd( 145.177, -7.94271, 73.6364, 0.15 ) }
    dend_35 { pt3dadd( 145.865, -8.00696, 73.66, 0.37 ) }
    dend_35 { pt3dadd( 146.281, -8.04056, 73.7104, 0.37 ) }
    dend_35 { pt3dadd( 146.873, -8.06681, 73.8224, 0.88 ) }
    dend_35 { pt3dadd( 147.439, -8.08658, 73.9615, 1.62 ) }
    dend_35 { pt3dadd( 147.785, -8.09444, 74.0674, 1.62 ) }
    dend_35 { pt3dadd( 149.471, -8.13265, 74.664, 0.07 ) }
    dend_35 { pt3dadd( 150.619, -8.14931, 75.1151, 0.07 ) }
    dend_35 { pt3dadd( 151.136, -8.13421, 75.34, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 46/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 66.1056, 0.413746, -42.0105, 0.07 ) }
    dend_33 { pt3dadd( 73.2025, -0.0154355, -48.4475, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 66.1056, 0.413746, -42.0105, 0.81 ) }
    dend_32 { pt3dadd( 72.5496, 0.421252, -47.8111, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 50/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -9.73683, 47.677, 60.0449, 0.07 ) }
    dend_29 { pt3dadd( -8.22229, 49.237, 59.6632, 0.07 ) }
    dend_29 { pt3dadd( -7.22808, 50.287, 59.3291, 0.07 ) }
    dend_29 { pt3dadd( -6.56342, 51.0304, 59.076, 0.81 ) }
    dend_29 { pt3dadd( -5.6093, 52.1785, 58.632, 0.07 ) }
    dend_29 { pt3dadd( -5.19243, 52.7154, 58.3986, 0.15 ) }
    dend_29 { pt3dadd( -4.2917, 53.8753, 57.8943, 0.07 ) }
    dend_29 { pt3dadd( -3.85209, 54.4837, 57.5754, 0.66 ) }
    dend_29 { pt3dadd( -3.52555, 54.9815, 57.2783, 0.88 ) }
    dend_29 { pt3dadd( -2.83012, 56.1437, 56.574, 0.15 ) }
    dend_29 { pt3dadd( -2.40339, 56.9983, 55.9947, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 61/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.73683, 47.677, 60.0449, 0.07 ) }
    dend_28 { pt3dadd( -10.081, 49.1536, 61.4787, 0.07 ) }
    dend_28 { pt3dadd( -10.3275, 50.2309, 62.5471, 0.07 ) }
    dend_28 { pt3dadd( -10.4829, 51.057, 63.4679, 0.07 ) }
    dend_28 { pt3dadd( -10.6233, 51.7111, 64.3043, 0.96 ) }
    dend_28 { pt3dadd( -10.6779, 51.9106, 64.5962, 0.96 ) }
    dend_28 { pt3dadd( -10.9512, 52.8217, 66.0866, 0.07 ) }
    dend_28 { pt3dadd( -11.1267, 53.376, 67.1906, 0.59 ) }
    dend_28 { pt3dadd( -11.3594, 54.1535, 68.9842, 0.22 ) }
    dend_28 { pt3dadd( -11.5506, 54.7392, 70.5119, 1.25 ) }
    dend_28 { pt3dadd( -11.8771, 55.5168, 72.7594, 0.22 ) }
    dend_28 { pt3dadd( -12.1218, 56.0212, 74.3382, 0.22 ) }
    dend_28 { pt3dadd( -12.4191, 56.5864, 76.2259, 0.22 ) }
    dend_28 { pt3dadd( -12.6865, 57.0909, 77.9224, 0.22 ) }
    dend_28 { pt3dadd( -12.8796, 57.4263, 79.0339, 1.33 ) }
    dend_28 { pt3dadd( -13.2917, 58.2381, 81.6117, 0.15 ) }
    dend_28 { pt3dadd( -13.4797, 58.6777, 83.0462, 0.29 ) }
    dend_28 { pt3dadd( -13.6547, 59.1419, 84.5365, 0.29 ) }
    dend_28 { pt3dadd( -13.7271, 59.4244, 85.3739, 0.44 ) }
    dend_28 { pt3dadd( -13.7865, 60.2096, 87.6316, 0.22 ) }
    dend_28 { pt3dadd( -13.7115, 60.8579, 89.4652, 0.22 ) }
    dend_28 { pt3dadd( -13.4273, 61.7797, 92.0947, 0.29 ) }
    dend_28 { pt3dadd( -13.3694, 61.9168, 92.4967, 1.11 ) }
    dend_28 { pt3dadd( -12.9916, 62.5603, 94.6124, 0.29 ) }
    dend_28 { pt3dadd( -12.6534, 62.9933, 96.3132, 0.29 ) }
    dend_28 { pt3dadd( -12.5349, 63.0961, 96.8337, 0.29 ) }
    dend_28 { pt3dadd( -12.311, 63.274, 98.2976, 0.29 ) }
    dend_28 { pt3dadd( -12.2949, 63.2944, 98.6981, 0.29 ) }
    dend_28 { pt3dadd( -12.3726, 63.2884, 100.14, 0.29 ) }
    dend_28 { pt3dadd( -12.5457, 63.2113, 101.421, 0.29 ) }
    dend_28 { pt3dadd( -12.7052, 63.1453, 102.277, 0.29 ) }
    dend_28 { pt3dadd( -13.0111, 62.9667, 104.065, 0.29 ) }
    dend_28 { pt3dadd( -13.2657, 62.7718, 105.703, 0.29 ) }
    dend_28 { pt3dadd( -13.5341, 62.5545, 107.433, 0.29 ) }
    dend_28 { pt3dadd( -13.7882, 62.3574, 108.976, 0.29 ) }
    dend_28 { pt3dadd( -14.1267, 62.1018, 111.183, 0.29 ) }
    dend_28 { pt3dadd( -14.4186, 61.9038, 113.307, 0.52 ) }
    dend_28 { pt3dadd( -14.5855, 61.8267, 114.784, 0.52 ) }
    dend_28 { pt3dadd( -14.7014, 61.8409, 115.936, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -14.7755, 61.937, 116.784, 0.22 ) }
    dend_28 { pt3dadd( -14.9662, 62.4172, 119.213, 0.22 ) }
    dend_28 { pt3dadd( -15.0896, 62.8613, 120.762, 0.22 ) }
    dend_28 { pt3dadd( -15.2541, 63.4697, 122.502, 0.44 ) }
    dend_28 { pt3dadd( -15.4031, 64.1417, 124.297, 0.88 ) }
    dend_28 { pt3dadd( -15.5809, 65.2943, 127.427, 0.15 ) }
    dend_28 { pt3dadd( -15.6475, 65.8676, 129.024, 0.15 ) }
    dend_28 { pt3dadd( -15.7034, 66.2575, 130.072, 0.22 ) }
    dend_28 { pt3dadd( -15.7658, 66.5234, 130.835, 0.22 ) }
    dend_28 { pt3dadd( -15.8421, 66.7159, 131.418, 0.22 ) }
    dend_28 { pt3dadd( -15.9257, 66.8936, 131.995, 0.22 ) }
    dend_28 { pt3dadd( -16.0055, 67.0755, 132.668, 0.22 ) }
    dend_28 { pt3dadd( -16.1016, 67.3981, 133.737, 0.22 ) }
    dend_28 { pt3dadd( -16.2742, 67.8601, 135.333, 0.22 ) }
    dend_28 { pt3dadd( -16.3608, 68.0334, 135.961, 0.22 ) }
    dend_28 { pt3dadd( -16.573, 68.433, 137.536, 0.22 ) }
    dend_28 { pt3dadd( -16.7646, 68.8403, 139.293, 0.22 ) }
    dend_28 { pt3dadd( -16.809, 68.9995, 140.108, 0.22 ) }
    dend_28 { pt3dadd( -16.7785, 69.2412, 141.515, 0.22 ) }
    dend_28 { pt3dadd( -16.6627, 69.4796, 142.822, 0.22 ) }
    dend_28 { pt3dadd( -16.533, 69.6547, 143.977, 0.22 ) }
    dend_28 { pt3dadd( -16.3798, 69.7932, 145.205, 0.22 ) }
    dend_28 { pt3dadd( -16.0504, 69.9571, 146.927, 0.22 ) }
    dend_28 { pt3dadd( -15.7435, 70.0681, 148.111, 0.22 ) }
    dend_28 { pt3dadd( -15.3985, 70.2275, 149.038, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -148.246, 51.0872, 23.3315, 0.29 ) }
    dend_23 { pt3dadd( -149.233, 52.2475, 23.5609, 0.29 ) }
    dend_23 { pt3dadd( -150.207, 53.3424, 23.7464, 0.07 ) }
    dend_23 { pt3dadd( -150.516, 53.6838, 23.7974, 0.15 ) }
    dend_23 { pt3dadd( -150.97, 54.1588, 23.8787, 0.07 ) }
    dend_23 { pt3dadd( -151.331, 54.5172, 23.945, 0.29 ) }
    dend_23 { pt3dadd( -152.099, 55.2442, 24.0799, 0.07 ) }
    dend_23 { pt3dadd( -152.426, 55.5235, 24.1288, 0.37 ) }
    dend_23 { pt3dadd( -152.627, 55.697, 24.1479, 0.37 ) }
    dend_23 { pt3dadd( -153.313, 56.3008, 24.2187, 0.07 ) }
    dend_23 { pt3dadd( -153.521, 56.4917, 24.2448, 0.15 ) }
    dend_23 { pt3dadd( -154.124, 57.108, 24.36, 0.07 ) }
    dend_23 { pt3dadd( -154.636, 57.7115, 24.4886, 0.07 ) }
    dend_23 { pt3dadd( -154.946, 58.1806, 24.6111, 0.74 ) }
    dend_23 { pt3dadd( -155.139, 58.5298, 24.7186, 0.74 ) }
    dend_23 { pt3dadd( -155.567, 59.4502, 25.0223, 0.07 ) }
    dend_23 { pt3dadd( -155.873, 60.2274, 25.3413, 0.07 ) }
    dend_23 { pt3dadd( -156.008, 60.6177, 25.5505, 0.29 ) }
    dend_23 { pt3dadd( -156.355, 61.6678, 26.2928, 0.07 ) }
    dend_23 { pt3dadd( -156.558, 62.2961, 26.8478, 0.07 ) }
    dend_23 { pt3dadd( -156.68, 62.6968, 27.2595, 0.66 ) }
    dend_23 { pt3dadd( -156.927, 63.5021, 28.1741, 0.07 ) }
    dend_23 { pt3dadd( -157.17, 64.162, 28.9957, 0.29 ) }
    dend_23 { pt3dadd( -157.475, 64.9166, 30.0351, 0.22 ) }
    dend_23 { pt3dadd( -157.804, 65.6757, 31.1326, 1.33 ) }
    dend_23 { pt3dadd( -158.146, 66.4425, 32.2617, 0.07 ) }
    dend_23 { pt3dadd( -158.347, 66.9187, 32.9816, 0.44 ) }
    dend_23 { pt3dadd( -158.67, 67.7659, 34.2408, 0.15 ) }
    dend_23 { pt3dadd( -158.801, 68.1783, 34.8132, 0.15 ) }
    dend_23 { pt3dadd( -158.955, 68.8051, 35.6088, 1.4 ) }
    dend_23 { pt3dadd( -159.149, 69.9913, 37.0277, 0.22 ) }
    dend_23 { pt3dadd( -159.242, 70.7126, 37.8855, 0.15 ) }
    dend_23 { pt3dadd( -159.277, 71.2584, 38.5175, 0.22 ) }
    dend_23 { pt3dadd( -159.266, 72.059, 39.3781, 1.7 ) }
    dend_23 { pt3dadd( -159.203, 73.4213, 40.7645, 0.07 ) }
    dend_23 { pt3dadd( -159.135, 74.004, 41.3523, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 61/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -148.246, 51.0872, 23.3315, 0.96 ) }
    dend_20 { pt3dadd( -149.767, 51.2784, 23.6914, 0.96 ) }
    dend_20 { pt3dadd( -151.146, 51.3488, 23.9594, 0.07 ) }
    dend_20 { pt3dadd( -151.578, 51.3584, 24.0303, 0.07 ) }
    dend_20 { pt3dadd( -152.186, 51.3619, 24.127, 0.15 ) }
    dend_20 { pt3dadd( -152.425, 51.3632, 24.1649, 0.37 ) }
    dend_20 { pt3dadd( -153.03, 51.3666, 24.2611, 0.44 ) }
    dend_20 { pt3dadd( -154.371, 51.2621, 24.4572, 0.22 ) }
    dend_20 { pt3dadd( -155.136, 51.1705, 24.5247, 0.96 ) }
    dend_20 { pt3dadd( -155.847, 51.1151, 24.587, 1.7 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 71/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 54.161, -210.907, 35.2942, 0.07 ) }
    dend_14 { pt3dadd( 55.0266, -212.199, 36.4866, 0.07 ) }
    dend_14 { pt3dadd( 55.4959, -212.833, 37.1785, 0.07 ) }
    dend_14 { pt3dadd( 55.5531, -212.908, 37.2659, 0.59 ) }
    dend_14 { pt3dadd( 55.8132, -213.256, 37.6727, 1.11 ) }
    dend_14 { pt3dadd( 56.2791, -213.916, 38.4092, 0.07 ) }
    dend_14 { pt3dadd( 56.486, -214.226, 38.7227, 0.52 ) }
    dend_14 { pt3dadd( 57.2867, -215.54, 39.9109, 0.07 ) }
    dend_14 { pt3dadd( 57.4449, -215.81, 40.1412, 0.07 ) }
    dend_14 { pt3dadd( 57.6129, -216.125, 40.4049, 1.03 ) }
    dend_14 { pt3dadd( 57.7856, -216.489, 40.7159, 1.25 ) }
    dend_14 { pt3dadd( 58.2828, -217.554, 41.7321, 0.15 ) }
    dend_14 { pt3dadd( 58.6046, -218.245, 42.4542, 0.15 ) }
    dend_14 { pt3dadd( 58.7961, -218.683, 42.9191, 1.03 ) }
    dend_14 { pt3dadd( 59.1082, -219.466, 43.7881, 0.07 ) }
    dend_14 { pt3dadd( 59.2943, -219.969, 44.3733, 0.81 ) }
    dend_14 { pt3dadd( 59.7204, -221.24, 45.9109, 0.07 ) }
    dend_14 { pt3dadd( 59.843, -221.705, 46.474, 0.66 ) }
    dend_14 { pt3dadd( 59.9292, -222.075, 46.9052, 1.18 ) }
    dend_14 { pt3dadd( 60.1278, -223.009, 47.9324, 0.15 ) }
    dend_14 { pt3dadd( 60.2263, -223.599, 48.5038, 0.44 ) }
    dend_14 { pt3dadd( 60.2472, -223.836, 48.6943, 0.44 ) }
    dend_14 { pt3dadd( 60.2913, -224.986, 49.4738, 0.22 ) }
    dend_14 { pt3dadd( 60.3323, -225.831, 50.0021, 0.66 ) }
    dend_14 { pt3dadd( 60.3793, -226.476, 50.3901, 1.47 ) }
    dend_14 { pt3dadd( 60.4432, -227.176, 50.7761, 0.52 ) }
    dend_14 { pt3dadd( 60.5523, -228.096, 51.3025, 0.15 ) }
    dend_14 { pt3dadd( 60.6831, -229.036, 51.8436, 0.15 ) }
    dend_14 { pt3dadd( 60.7916, -229.719, 52.2249, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( 60.8614, -230.179, 52.4695, 0.96 ) }
    dend_14 { pt3dadd( 60.9336, -230.62, 52.7137, 1.11 ) }
    dend_14 { pt3dadd( 61.2206, -232.328, 53.6903, 0.07 ) }
    dend_14 { pt3dadd( 61.2694, -232.664, 53.8844, 0.07 ) }
    dend_14 { pt3dadd( 61.2958, -233.112, 54.1261, 0.52 ) }
    dend_14 { pt3dadd( 61.3094, -234.145, 54.6571, 0.07 ) }
    dend_14 { pt3dadd( 61.294, -234.953, 55.0229, 0.07 ) }
    dend_14 { pt3dadd( 61.2834, -235.25, 55.1356, 0.22 ) }
    dend_14 { pt3dadd( 61.2656, -235.531, 55.215, 0.52 ) }
    dend_14 { pt3dadd( 61.2089, -236.684, 55.5366, 0.07 ) }
    dend_14 { pt3dadd( 61.201, -236.928, 55.6029, 0.52 ) }
    dend_14 { pt3dadd( 61.1999, -237.52, 55.7516, 1.03 ) }
    dend_14 { pt3dadd( 61.243, -238.84, 56.0904, 0.07 ) }
    dend_14 { pt3dadd( 61.2717, -239.21, 56.1997, 0.15 ) }
    dend_14 { pt3dadd( 61.3247, -239.694, 56.36, 0.07 ) }
    dend_14 { pt3dadd( 61.3626, -239.956, 56.4534, 0.44 ) }
    dend_14 { pt3dadd( 61.4144, -240.303, 56.5857, 0.81 ) }
    dend_14 { pt3dadd( 61.5976, -241.507, 57.0918, 0.22 ) }
    dend_14 { pt3dadd( 61.699, -242.089, 57.3549, 0.81 ) }
    dend_14 { pt3dadd( 61.7931, -242.564, 57.5905, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 54.161, -210.907, 35.2942, 0.07 ) }
    dend_13 { pt3dadd( 54.4101, -212.547, 35.6543, 0.07 ) }
    dend_13 { pt3dadd( 54.4753, -212.956, 35.7354, 0.22 ) }
    dend_13 { pt3dadd( 54.664, -214.091, 35.9331, 0.07 ) }
    dend_13 { pt3dadd( 54.7111, -214.368, 35.9759, 0.15 ) }
    dend_13 { pt3dadd( 54.9913, -215.923, 36.1863, 0.07 ) }
    dend_13 { pt3dadd( 55.0657, -216.339, 36.2351, 0.66 ) }
    dend_13 { pt3dadd( 55.1485, -216.764, 36.2663, 0.66 ) }
    dend_13 { pt3dadd( 55.3122, -217.549, 36.3087, 0.07 ) }
    dend_13 { pt3dadd( 55.4534, -218.177, 36.3263, 0.74 ) }
    dend_13 { pt3dadd( 55.5649, -218.666, 36.3369, 1.55 ) }
    dend_13 { pt3dadd( 55.8566, -220.038, 36.3686, 0.22 ) }
    dend_13 { pt3dadd( 56.1199, -221.336, 36.38, 0.07 ) }
    dend_13 { pt3dadd( 56.187, -221.711, 36.3686, 0.74 ) }
    dend_13 { pt3dadd( 56.3145, -222.511, 36.3011, 1.77 ) }
    dend_13 { pt3dadd( 56.5095, -223.798, 36.1059, 0.22 ) }
    dend_13 { pt3dadd( 56.6303, -224.604, 35.887, 0.22 ) }
    dend_13 { pt3dadd( 56.7226, -225.247, 35.585, 0.22 ) }
    dend_13 { pt3dadd( 56.8202, -225.988, 35.0755, 0.22 ) }
    dend_13 { pt3dadd( 56.8902, -226.456, 34.6857, 0.81 ) }
    dend_13 { pt3dadd( 56.9703, -226.958, 34.1876, 1.55 ) }
    dend_13 { pt3dadd( 57.1234, -227.836, 33.2136, 0.22 ) }
    dend_13 { pt3dadd( 57.2203, -228.437, 32.5089, 0.66 ) }
    dend_13 { pt3dadd( 57.2899, -229.059, 31.7628, 1.25 ) }
    dend_13 { pt3dadd( 57.3342, -229.662, 31.0324, 0.22 ) }
    dend_13 { pt3dadd( 57.3469, -230.341, 30.2169, 0.22 ) }
    dend_13 { pt3dadd( 57.3213, -230.874, 29.6359, 0.22 ) }
    dend_13 { pt3dadd( 57.2772, -231.454, 29.0826, 0.22 ) }
    dend_13 { pt3dadd( 57.2061, -232.281, 28.3631, 0.29 ) }
    dend_13 { pt3dadd( 57.1688, -232.713, 28.0114, 1.03 ) }
    dend_13 { pt3dadd( 57.15, -233.01, 27.7776, 1.92 ) }
    dend_13 { pt3dadd( 57.1344, -234.764, 26.4631, 0.22 ) }
    dend_13 { pt3dadd( 57.1901, -235.798, 25.7323, 0.15 ) }
    dend_13 { pt3dadd( 57.2498, -236.395, 25.3504, 0.74 ) }
    dend_13 { pt3dadd( 57.3185, -236.987, 25.0031, 1.33 ) }
    dend_13 { pt3dadd( 57.4523, -238.096, 24.3869, 0.07 ) }
    dend_13 { pt3dadd( 57.504, -238.456, 24.1916, 0.22 ) }
    dend_13 { pt3dadd( 57.6165, -238.984, 23.9319, 0.15 ) }
    dend_13 { pt3dadd( 57.7094, -239.379, 23.7569, 0.22 ) }
    dend_13 { pt3dadd( 57.8681, -240.114, 23.4514, 0.22 ) }
    dend_13 { pt3dadd( 57.9532, -240.608, 23.259, 0.66 ) }
    dend_13 { pt3dadd( 58.0271, -241.068, 23.1027, 1.18 ) }
    dend_13 { pt3dadd( 58.1428, -241.85, 22.8283, 0.15 ) }
    dend_13 { pt3dadd( 58.2612, -242.561, 22.5645, 0.15 ) }
    dend_13 { pt3dadd( 58.4305, -243.351, 22.2591, 0.22 ) }
    dend_13 { pt3dadd( 58.5796, -243.935, 22.0456, 0.66 ) }
    dend_13 { pt3dadd( 58.7785, -244.636, 21.7932, 0.15 ) }
    dend_13 { pt3dadd( 59.1382, -245.728, 21.4102, 0.22 ) }
    dend_13 { pt3dadd( 59.3237, -246.215, 21.2472, 0.74 ) }
    dend_13 { pt3dadd( 59.5698, -246.78, 21.0762, 1.18 ) }
    dend_13 { pt3dadd( 60.1212, -247.909, 20.7535, 0.15 ) }
    dend_13 { pt3dadd( 60.3862, -248.445, 20.6128, 0.22 ) }
    dend_13 { pt3dadd( 60.7531, -249.231, 20.4479, 0.15 ) }
    dend_13 { pt3dadd( 60.9146, -249.594, 20.3974, 0.59 ) }
    dend_13 { pt3dadd( 61.0141, -249.846, 20.3713, 0.96 ) }
    dend_13 { pt3dadd( 61.1631, -250.298, 20.3406, 0.59 ) }
    dend_13 { pt3dadd( 61.3828, -251.029, 20.3024, 0.15 ) }
    dend_13 { pt3dadd( 61.5507, -251.601, 20.2746, 0.37 ) }
    dend_13 { pt3dadd( 61.8569, -252.637, 20.2232, 0.15 ) }
    dend_13 { pt3dadd( 61.9629, -252.968, 20.2025, 0.52 ) }
    dend_13 { pt3dadd( 62.1653, -253.576, 20.1602, 0.88 ) }
    dend_13 { pt3dadd( 62.5498, -254.634, 20.0693, 0.15 ) }
    dend_13 { pt3dadd( 62.7675, -255.181, 20.0122, 0.29 ) }
    dend_13 { pt3dadd( 62.9566, -255.636, 19.9604, 0.22 ) }
    dend_13 { pt3dadd( 63.0932, -255.988, 19.9255, 0.44 ) }
    dend_13 { pt3dadd( 63.2909, -256.506, 19.8761, 0.44 ) }
    dend_13 { pt3dadd( 63.7426, -257.704, 19.7643, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 87/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -3.65322, -38.0313, 11.3109, 0.29 ) }
    dend_8 { pt3dadd( -2.59724, -39.2336, 10.9, 0.29 ) }
    dend_8 { pt3dadd( -1.64862, -40.5962, 10.4139, 0.07 ) }
    dend_8 { pt3dadd( -1.29584, -41.1871, 10.1622, 0.29 ) }
    dend_8 { pt3dadd( -0.705605, -42.307, 9.68408, 0.15 ) }
    dend_8 { pt3dadd( -0.349285, -43.0343, 9.36379, 0.52 ) }
    dend_8 { pt3dadd( 0.079891, -43.9865, 8.95114, 0.59 ) }
    dend_8 { pt3dadd( 0.79399, -45.7969, 8.21762, 0.15 ) }
    dend_8 { pt3dadd( 1.26005, -47.1519, 7.68191, 0.74 ) }
    dend_8 { pt3dadd( 1.61738, -48.2688, 7.23356, 1.99 ) }
    dend_8 { pt3dadd( 1.86942, -49.09, 6.91624, 1.99 ) }
    dend_8 { pt3dadd( 2.64274, -51.563, 6.02344, 0.15 ) }
    dend_8 { pt3dadd( 2.89151, -52.2868, 5.79508, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( 3.44393, -53.8066, 5.44184, 0.22 ) }
    dend_8 { pt3dadd( 3.61026, -54.2488, 5.36387, 0.81 ) }
    dend_8 { pt3dadd( 3.96565, -55.1795, 5.22983, 1.18 ) }
    dend_8 { pt3dadd( 4.31726, -56.0763, 5.12928, 0.59 ) }
    dend_8 { pt3dadd( 5.05302, -57.8877, 4.97932, 0.07 ) }
    dend_8 { pt3dadd( 5.48589, -58.96, 4.90657, 0.07 ) }
    dend_8 { pt3dadd( 5.64806, -59.3435, 4.89585, 0.07 ) }
    dend_8 { pt3dadd( 6.05252, -60.2735, 4.86776, 0.29 ) }
    dend_8 { pt3dadd( 6.6453, -61.6294, 4.83041, 0.22 ) }
    dend_8 { pt3dadd( 7.14389, -62.7243, 4.8114, 0.96 ) }
    dend_8 { pt3dadd( 7.653, -63.8698, 4.81726, 0.22 ) }
    dend_8 { pt3dadd( 8.38373, -65.6637, 4.80418, 0.15 ) }
    dend_8 { pt3dadd( 8.98607, -67.2989, 4.78662, 0.15 ) }
    dend_8 { pt3dadd( 9.38449, -68.4621, 4.77819, 1.03 ) }
    dend_8 { pt3dadd( 9.83649, -69.894, 4.78778, 2.14 ) }
    dend_8 { pt3dadd( 10.4441, -71.9854, 4.79012, 0.22 ) }
    dend_8 { pt3dadd( 10.9027, -73.7376, 4.79123, 0.22 ) }
    dend_8 { pt3dadd( 11.1019, -74.6569, 4.79708, 0.66 ) }
    dend_8 { pt3dadd( 11.2676, -75.5893, 4.79543, 0.96 ) }
    dend_8 { pt3dadd( 11.5152, -77.2509, 4.77134, 0.52 ) }
    dend_8 { pt3dadd( 11.7168, -79.0109, 4.73857, 0.22 ) }
    dend_8 { pt3dadd( 11.8631, -80.5711, 4.70751, 0.88 ) }
    dend_8 { pt3dadd( 12.0404, -82.9415, 4.67441, 0.22 ) }
    dend_8 { pt3dadd( 12.108, -84.9302, 4.66679, 0.15 ) }
    dend_8 { pt3dadd( 12.1013, -86.2899, 4.65795, 0.22 ) }
    dend_8 { pt3dadd( 12.012, -88.4838, 4.65282, 0.15 ) }
    dend_8 { pt3dadd( 11.9479, -89.651, 4.6656, 0.81 ) }
    dend_8 { pt3dadd( 11.8896, -90.691, 4.68805, 0.81 ) }
    dend_8 { pt3dadd( 11.837, -93.1315, 4.79942, 0.15 ) }
    dend_8 { pt3dadd( 11.8605, -94.6112, 4.97244, 0.22 ) }
    dend_8 { pt3dadd( 11.9152, -95.4548, 5.08412, 0.88 ) }
    dend_8 { pt3dadd( 12.0407, -96.5272, 5.22504, 1.84 ) }
    dend_8 { pt3dadd( 12.2447, -97.6607, 5.36919, 1.03 ) }
    dend_8 { pt3dadd( 12.7637, -99.8631, 5.57068, 0.22 ) }
    dend_8 { pt3dadd( 13.3124, -101.826, 5.71636, 0.22 ) }
    dend_8 { pt3dadd( 13.6709, -103.046, 5.7417, 0.22 ) }
    dend_8 { pt3dadd( 13.9597, -104.094, 5.72192, 0.81 ) }
    dend_8 { pt3dadd( 14.293, -105.338, 5.66913, 1.47 ) }
    dend_8 { pt3dadd( 14.919, -107.753, 5.49, 0.37 ) }
    dend_8 { pt3dadd( 15.2774, -109.221, 5.3003, 0.44 ) }
    dend_8 { pt3dadd( 15.8222, -111.386, 4.91177, 0.74 ) }
    dend_8 { pt3dadd( 16.3223, -113.538, 4.61697, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.65322, -38.0313, 11.3109, 0.22 ) }
    dend_7 { pt3dadd( -4.06396, -40.1156, 12.7945, 0.22 ) }
    dend_7 { pt3dadd( -4.19428, -40.8603, 13.373, 0.66 ) }
    dend_7 { pt3dadd( -4.33968, -41.7516, 14.072, 1.03 ) }
    dend_7 { pt3dadd( -4.48922, -42.7463, 14.8356, 0.22 ) }
    dend_7 { pt3dadd( -4.61054, -43.5406, 15.4265, 0.22 ) }
    dend_7 { pt3dadd( -4.73364, -44.3641, 16.0052, 0.37 ) }
    dend_7 { pt3dadd( -4.83235, -45.2364, 16.5771, 0.37 ) }
    dend_7 { pt3dadd( -4.91231, -45.8202, 16.9492, 0.88 ) }
    dend_7 { pt3dadd( -4.98219, -46.2806, 17.2272, 1.92 ) }
    dend_7 { pt3dadd( -5.07912, -46.9067, 17.575, 2.14 ) }
    dend_7 { pt3dadd( -5.29793, -48.4558, 18.3877, 0.22 ) }
    dend_7 { pt3dadd( -5.4621, -49.7412, 19.0652, 0.22 ) }
    dend_7 { pt3dadd( -5.54786, -50.4889, 19.4729, 0.88 ) }
    dend_7 { pt3dadd( -5.60888, -51.1939, 19.8963, 1.7 ) }
    dend_7 { pt3dadd( -5.64431, -51.8936, 20.3548, 2.06 ) }
    dend_7 { pt3dadd( -5.66296, -53.6754, 21.6137, 0.29 ) }
    dend_7 { pt3dadd( -5.63769, -54.7268, 22.3746, 0.29 ) }
    dend_7 { pt3dadd( -5.59027, -55.5491, 22.9679, 0.81 ) }
    dend_7 { pt3dadd( -5.53963, -56.3099, 23.4739, 1.25 ) }
    dend_7 { pt3dadd( -5.47955, -57.9736, 24.5131, 0.15 ) }
    dend_7 { pt3dadd( -5.47741, -58.6724, 24.9056, 0.15 ) }
    dend_7 { pt3dadd( -5.4947, -59.3109, 25.2208, 0.88 ) }
    dend_7 { pt3dadd( -5.54907, -60.3976, 25.688, 2.43 ) }
    dend_7 { pt3dadd( -5.67613, -62.1399, 26.3413, 0.66 ) }
    dend_7 { pt3dadd( -5.85601, -63.9614, 26.938, 0.29 ) }
    dend_7 { pt3dadd( -5.94939, -64.8381, 27.1918, 0.88 ) }
    dend_7 { pt3dadd( -6.10428, -66.4025, 27.6203, 0.22 ) }
    dend_7 { pt3dadd( -6.14698, -66.9261, 27.7772, 0.52 ) }
    dend_7 { pt3dadd( -6.17702, -67.5864, 27.972, 0.88 ) }
    dend_7 { pt3dadd( -6.16822, -68.2496, 28.1744, 0.37 ) }
    dend_7 { pt3dadd( -6.10012, -69.1315, 28.4271, 0.15 ) }
    dend_7 { pt3dadd( -6.0207, -70.0551, 28.7004, 0.52 ) }
    dend_7 { pt3dadd( -5.93331, -71.0854, 29.0152, 0.15 ) }
    dend_7 { pt3dadd( -5.86943, -71.895, 29.2862, 0.15 ) }
    dend_7 { pt3dadd( -5.84525, -72.2757, 29.4295, 0.66 ) }
    dend_7 { pt3dadd( -5.82532, -72.7845, 29.6332, 0.96 ) }
    dend_7 { pt3dadd( -5.78865, -74.1949, 30.2272, 0.22 ) }
    dend_7 { pt3dadd( -5.76826, -75.0902, 30.6096, 1.25 ) }
    dend_7 { pt3dadd( -5.76124, -75.6655, 30.8557, 2.43 ) }
    dend_7 { pt3dadd( -5.7545, -76.318, 31.1516, 1.99 ) }
    dend_7 { pt3dadd( -5.73182, -78.0241, 31.9555, 0.22 ) }
    dend_7 { pt3dadd( -5.70815, -79.1577, 32.5027, 0.07 ) }
    dend_7 { pt3dadd( -5.69405, -79.9183, 32.8851, 0.96 ) }
    dend_7 { pt3dadd( -5.70655, -81.3175, 33.6219, 0.15 ) }
    dend_7 { pt3dadd( -5.73992, -81.8647, 33.9276, 0.15 ) }
    dend_7 { pt3dadd( -5.81483, -82.3973, 34.2503, 0.88 ) }
    dend_7 { pt3dadd( -6.00218, -83.0197, 34.6969, 1.47 ) }
    dend_7 { pt3dadd( -6.64204, -84.2566, 35.7132, 0.15 ) }
    dend_7 { pt3dadd( -6.98871, -84.7014, 36.1349, 0.22 ) }
    dend_7 { pt3dadd( -7.56645, -85.2131, 36.7048, 0.22 ) }
    dend_7 { pt3dadd( -8.1156, -85.5965, 37.1874, 0.37 ) }
    dend_7 { pt3dadd( -8.84605, -86.0122, 37.7798, 0.81 ) }
    dend_7 { pt3dadd( -9.55952, -86.3536, 38.2974, 1.25 ) }
    dend_7 { pt3dadd( -10.2536, -86.6459, 38.7489, 0.22 ) }
    dend_7 { pt3dadd( -11.1315, -87.0315, 39.2996, 0.22 ) }
    dend_7 { pt3dadd( -11.8736, -87.3717, 39.7589, 0.66 ) }
    dend_7 { pt3dadd( -12.5285, -87.6881, 40.1538, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( -13.5642, -88.2214, 40.7946, 0.15 ) }
    dend_7 { pt3dadd( -13.8169, -88.3618, 40.9577, 0.37 ) }
    dend_7 { pt3dadd( -14.649, -88.8553, 41.4999, 0.15 ) }
    dend_7 { pt3dadd( -15.2741, -89.2392, 41.889, 0.66 ) }
    dend_7 { pt3dadd( -15.697, -89.5285, 42.1325, 1.18 ) }
    dend_7 { pt3dadd( -16.967, -90.4358, 42.9016, 0.29 ) }
    dend_7 { pt3dadd( -18.0094, -91.2126, 43.5838, 0.15 ) }
    dend_7 { pt3dadd( -18.2957, -91.4493, 43.7876, 0.74 ) }
    dend_7 { pt3dadd( -18.8435, -91.9445, 44.2058, 1.7 ) }
    dend_7 { pt3dadd( -20.2081, -93.2745, 45.3429, 0.22 ) }
    dend_7 { pt3dadd( -21.2824, -94.4456, 46.3691, 0.22 ) }
    dend_7 { pt3dadd( -21.9225, -95.24, 47.0676, 1.18 ) }
    dend_7 { pt3dadd( -22.7617, -96.4006, 48.1337, 0.07 ) }
    dend_7 { pt3dadd( -23.0598, -96.8758, 48.577, 0.29 ) }
    dend_7 { pt3dadd( -23.5083, -97.7536, 49.4225, 0.66 ) }
    dend_7 { pt3dadd( -23.8064, -98.5252, 50.2027, 0.15 ) }
    dend_7 { pt3dadd( -23.9141, -98.8933, 50.5548, 0.29 ) }
    dend_7 { pt3dadd( -24.0393, -99.4043, 51.058, 0.37 ) }
    dend_7 { pt3dadd( -24.1621, -99.9979, 51.6964, 1.11 ) }
    dend_7 { pt3dadd( -24.2818, -100.763, 52.6018, 0.29 ) }
    dend_7 { pt3dadd( -24.3577, -101.601, 53.6769, 0.88 ) }
    dend_7 { pt3dadd( -24.3919, -102.687, 55.2417, 0.15 ) }
    dend_7 { pt3dadd( -24.3597, -103.218, 56.1214, 1.11 ) }
    dend_7 { pt3dadd( -24.2313, -104.03, 57.646, 0.66 ) }
    dend_7 { pt3dadd( -24.0668, -104.814, 59.2709, 0.22 ) }
    dend_7 { pt3dadd( -23.9492, -105.28, 60.2398, 0.96 ) }
    dend_7 { pt3dadd( -23.72, -106.067, 61.8596, 0.88 ) }
    dend_7 { pt3dadd( -23.4806, -106.933, 63.6985, 0.22 ) }
    dend_7 { pt3dadd( -23.3486, -107.514, 64.9297, 0.74 ) }
    dend_7 { pt3dadd( -23.2646, -107.969, 65.8699, 1.03 ) }
    dend_7 { pt3dadd( -23.1354, -108.905, 67.71, 0.15 ) }
    dend_7 { pt3dadd( -23.0558, -109.642, 69.0863, 1.33 ) }
    dend_7 { pt3dadd( -22.9323, -111.043, 71.556, 0.37 ) }
    dend_7 { pt3dadd( -22.873, -111.736, 72.7128, 0.37 ) }
    dend_7 { pt3dadd( -22.8209, -112.333, 73.6617, 0.22 ) }
    dend_7 { pt3dadd( -22.7924, -112.625, 74.1172, 0.74 ) }
    dend_7 { pt3dadd( -22.723, -113.522, 75.4602, 0.22 ) }
    dend_7 { pt3dadd( -22.698, -114.15, 76.2718, 0.52 ) }
    dend_7 { pt3dadd( -22.6879, -114.608, 76.7463, 1.11 ) }
    dend_7 { pt3dadd( -22.7335, -115.637, 77.712, 0.07 ) }
    dend_7 { pt3dadd( -22.7937, -116.23, 78.2198, 0.15 ) }
    dend_7 { pt3dadd( -22.8732, -116.817, 78.6797, 0.66 ) }
    dend_7 { pt3dadd( -23.0201, -117.677, 79.246, 0.07 ) }
    dend_7 { pt3dadd( -23.0896, -118.05, 79.475, 0.22 ) }
    dend_7 { pt3dadd( -23.2207, -118.678, 79.8692, 0.07 ) }
    dend_7 { pt3dadd( -23.3655, -119.248, 80.2261, 1.03 ) }
    dend_7 { pt3dadd( -23.5179, -119.811, 80.5726, 1.4 ) }
    dend_7 { pt3dadd( -23.88, -121.15, 81.3765, 0.22 ) }
    dend_7 { pt3dadd( -24.1799, -122.237, 82.0356, 0.07 ) }
    dend_7 { pt3dadd( -24.3804, -122.935, 82.4711, 0.59 ) }
    dend_7 { pt3dadd( -24.7007, -124.027, 83.1844, 0.07 ) }
    dend_7 { pt3dadd( -24.9055, -124.682, 83.6466, 0.15 ) }
    dend_7 { pt3dadd( -25.1518, -125.353, 84.1602, 1.18 ) }
    dend_7 { pt3dadd( -25.4281, -126.026, 84.6958, 0.15 ) }
    dend_7 { pt3dadd( -25.7084, -126.647, 85.249, 0.88 ) }
    dend_7 { pt3dadd( -26.1036, -127.469, 86.0329, 0.07 ) }
    dend_7 { pt3dadd( -26.3295, -127.916, 86.4934, 0.44 ) }
    dend_7 { pt3dadd( -26.864, -128.832, 87.5473, 0.15 ) }
    dend_7 { pt3dadd( -27.2398, -129.418, 88.2801, 0.96 ) }
    dend_7 { pt3dadd( -28.0192, -130.585, 89.8042, 0.29 ) }
    dend_7 { pt3dadd( -28.2997, -130.994, 90.3381, 0.15 ) }
    dend_7 { pt3dadd( -28.5345, -131.326, 90.744, 0.52 ) }
    dend_7 { pt3dadd( -29.1341, -132.192, 91.717, 0.37 ) }
    dend_7 { pt3dadd( -29.6545, -133.01, 92.5287, 1.25 ) }
    dend_7 { pt3dadd( -30.0373, -133.669, 93.0914, 0.07 ) }
    dend_7 { pt3dadd( -30.2782, -134.144, 93.4332, 0.22 ) }
    dend_7 { pt3dadd( -30.7682, -135.224, 94.1567, 0.07 ) }
    dend_7 { pt3dadd( -30.9021, -135.569, 94.3679, 0.59 ) }
    dend_7 { pt3dadd( -31.1324, -136.263, 94.7558, 1.33 ) }
    dend_7 { pt3dadd( -31.6066, -137.802, 95.5808, 0.07 ) }
    dend_7 { pt3dadd( -31.9329, -138.943, 96.1991, 0.07 ) }
    dend_7 { pt3dadd( -32.0752, -139.492, 96.5239, 0.59 ) }
    dend_7 { pt3dadd( -32.2457, -140.262, 97.0237, 0.15 ) }
    dend_7 { pt3dadd( -32.4049, -140.965, 97.512, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -38.1159, -102.158, 16.6626, 0.22 ) }
    dend_5 { pt3dadd( -39.3721, -103.417, 17.0435, 0.22 ) }
    dend_5 { pt3dadd( -40.1907, -104.333, 17.2147, 0.22 ) }
    dend_5 { pt3dadd( -40.5185, -104.692, 17.2404, 0.15 ) }
    dend_5 { pt3dadd( -40.9782, -105.185, 17.272, 0.44 ) }
    dend_5 { pt3dadd( -41.4125, -105.642, 17.304, 0.96 ) }
    dend_5 { pt3dadd( -41.8618, -106.113, 17.3377, 1.11 ) }
    dend_5 { pt3dadd( -42.7785, -107.094, 17.3684, 0.29 ) }
    dend_5 { pt3dadd( -44.0921, -108.538, 17.4524, 0.22 ) }
    dend_5 { pt3dadd( -44.5866, -109.069, 17.4751, 0.59 ) }
    dend_5 { pt3dadd( -44.9229, -109.418, 17.4866, 0.96 ) }
    dend_5 { pt3dadd( -45.4329, -109.924, 17.5125, 0.96 ) }
    dend_5 { pt3dadd( -46.1947, -110.652, 17.5679, 0.22 ) }
    dend_5 { pt3dadd( -46.8716, -111.289, 17.643, 0.22 ) }
    dend_5 { pt3dadd( -47.7757, -112.182, 17.7878, 0.22 ) }
    dend_5 { pt3dadd( -48.1745, -112.571, 17.8611, 0.52 ) }
    dend_5 { pt3dadd( -48.857, -113.234, 18.0149, 1.33 ) }
    dend_5 { pt3dadd( -49.67, -114.011, 18.2275, 0.22 ) }
    dend_5 { pt3dadd( -50.3677, -114.679, 18.4264, 0.52 ) }
    dend_5 { pt3dadd( -51.2766, -115.564, 18.7352, 0.15 ) }
    dend_5 { pt3dadd( -51.9262, -116.243, 18.9937, 0.15 ) }
    dend_5 { pt3dadd( -52.295, -116.653, 19.144, 0.22 ) }
    dend_5 { pt3dadd( -52.4702, -116.867, 19.2258, 0.37 ) }
    dend_5 { pt3dadd( -52.9156, -117.435, 19.4564, 0.81 ) }
    dend_5 { pt3dadd( -53.5072, -118.22, 19.8103, 0.15 ) }
    dend_5 { pt3dadd( -53.6832, -118.464, 19.935, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -53.9442, -118.847, 20.1465, 0.15 ) }
    dend_5 { pt3dadd( -54.4295, -119.486, 20.5325, 0.22 ) }
    dend_5 { pt3dadd( -54.9409, -120.061, 20.9499, 0.15 ) }
    dend_5 { pt3dadd( -55.3664, -120.45, 21.2862, 0.15 ) }
    dend_5 { pt3dadd( -55.69, -120.684, 21.5199, 0.44 ) }
    dend_5 { pt3dadd( -56.1536, -120.967, 21.8317, 0.66 ) }
    dend_5 { pt3dadd( -57.4025, -121.646, 22.6734, 0.22 ) }
    dend_5 { pt3dadd( -58.2922, -122.117, 23.2642, 0.74 ) }
    dend_5 { pt3dadd( -59.2287, -122.599, 23.8854, 1.7 ) }
    dend_5 { pt3dadd( -60.5583, -123.276, 24.7669, 0.22 ) }
    dend_5 { pt3dadd( -61.2877, -123.652, 25.2615, 0.15 ) }
    dend_5 { pt3dadd( -62.0824, -124.052, 25.8125, 0.52 ) }
    dend_5 { pt3dadd( -62.5371, -124.27, 26.1392, 0.66 ) }
    dend_5 { pt3dadd( -63.5003, -124.721, 26.8034, 0.22 ) }
    dend_5 { pt3dadd( -64.2959, -125.074, 27.3292, 0.37 ) }
    dend_5 { pt3dadd( -65.0093, -125.363, 27.7633, 0.22 ) }
    dend_5 { pt3dadd( -65.6444, -125.575, 28.0921, 0.37 ) }
    dend_5 { pt3dadd( -66.2334, -125.735, 28.3292, 0.37 ) }
    dend_5 { pt3dadd( -66.8389, -125.876, 28.5508, 0.15 ) }
    dend_5 { pt3dadd( -67.7293, -126.109, 28.8387, 0.15 ) }
    dend_5 { pt3dadd( -68.093, -126.21, 28.9427, 0.74 ) }
    dend_5 { pt3dadd( -69.0804, -126.536, 29.1941, 1.55 ) }
    dend_5 { pt3dadd( -70.6564, -127.148, 29.6074, 0.07 ) }
    dend_5 { pt3dadd( -71.7669, -127.642, 29.924, 0.15 ) }
    dend_5 { pt3dadd( -72.6196, -128.067, 30.1902, 0.07 ) }
    dend_5 { pt3dadd( -72.9033, -128.233, 30.2894, 0.44 ) }
    dend_5 { pt3dadd( -73.3183, -128.508, 30.4547, 0.44 ) }
    dend_5 { pt3dadd( -74.2524, -129.221, 30.8727, 0.22 ) }
    dend_5 { pt3dadd( -74.8636, -129.754, 31.1742, 0.88 ) }
    dend_5 { pt3dadd( -75.301, -130.174, 31.384, 1.47 ) }
    dend_5 { pt3dadd( -76.4582, -131.358, 31.9589, 0.07 ) }
    dend_5 { pt3dadd( -77.066, -132.018, 32.2621, 0.07 ) }
    dend_5 { pt3dadd( -77.253, -132.235, 32.355, 0.29 ) }
    dend_5 { pt3dadd( -77.7745, -132.894, 32.5918, 0.81 ) }
    dend_5 { pt3dadd( -78.475, -133.812, 32.8632, 0.07 ) }
    dend_5 { pt3dadd( -79.0704, -134.627, 33.0515, 0.07 ) }
    dend_5 { pt3dadd( -79.6757, -135.538, 33.1769, 0.07 ) }
    dend_5 { pt3dadd( -79.8988, -135.897, 33.215, 0.59 ) }
    dend_5 { pt3dadd( -80.2298, -136.445, 33.2671, 0.96 ) }
    dend_5 { pt3dadd( -81.0283, -137.819, 33.4073, 0.15 ) }
    dend_5 { pt3dadd( -81.4072, -138.505, 33.4863, 0.88 ) }
    dend_5 { pt3dadd( -82.322, -140.17, 33.6922, 0.07 ) }
    dend_5 { pt3dadd( -82.704, -140.878, 33.8124, 0.37 ) }
    dend_5 { pt3dadd( -82.7409, -140.947, 33.8282, 0.37 ) }
    dend_5 { pt3dadd( -83.303, -142.036, 34.1586, 0.07 ) }
    dend_5 { pt3dadd( -83.6738, -142.797, 34.4664, 0.88 ) }
    dend_5 { pt3dadd( -84.2693, -144.013, 35.071, 0.07 ) }
    dend_5 { pt3dadd( -84.6518, -144.826, 35.5308, 0.07 ) }
    dend_5 { pt3dadd( -84.8167, -145.21, 35.7522, 0.29 ) }
    dend_5 { pt3dadd( -84.9442, -145.517, 35.9315, 0.29 ) }
    dend_5 { pt3dadd( -85.3938, -146.619, 36.5816, 0.07 ) }
    dend_5 { pt3dadd( -85.7213, -147.375, 37.0183, 0.81 ) }
    dend_5 { pt3dadd( -85.9458, -147.87, 37.2895, 1.4 ) }
    dend_5 { pt3dadd( -87.1498, -150.256, 38.5763, 0.07 ) }
    dend_5 { pt3dadd( -87.4715, -150.834, 38.8935, 0.74 ) }
    dend_5 { pt3dadd( -87.7395, -151.283, 39.1376, 0.74 ) }
    dend_5 { pt3dadd( -88.5963, -152.626, 39.8803, 0.07 ) }
    dend_5 { pt3dadd( -88.9363, -153.122, 40.1598, 0.22 ) }
    dend_5 { pt3dadd( -89.6624, -154.072, 40.7195, 0.07 ) }
    dend_5 { pt3dadd( -90.1653, -154.645, 41.0872, 0.81 ) }
    dend_5 { pt3dadd( -90.5167, -155.032, 41.3642, 1.25 ) }
    dend_5 { pt3dadd( -91.4879, -156.022, 42.2004, 0.22 ) }
    dend_5 { pt3dadd( -91.9748, -156.483, 42.6322, 0.07 ) }
    dend_5 { pt3dadd( -92.3407, -156.82, 42.958, 0.44 ) }
    dend_5 { pt3dadd( -93.5922, -157.923, 44.0318, 0.07 ) }
    dend_5 { pt3dadd( -94.3848, -158.586, 44.7128, 1.03 ) }
    dend_5 { pt3dadd( -95.3871, -159.373, 45.5967, 0.07 ) }
    dend_5 { pt3dadd( -95.818, -159.687, 45.9821, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -38.1159, -102.158, 16.6626, 0.07 ) }
    dend_2 { pt3dadd( -38.3256, -102.704, 16.6984, 0.07 ) }
    dend_2 { pt3dadd( -38.4896, -103.09, 16.7255, 0.29 ) }
    dend_2 { pt3dadd( -38.7529, -103.628, 16.7608, 0.15 ) }
    dend_2 { pt3dadd( -38.9389, -103.966, 16.7767, 0.15 ) }
    dend_2 { pt3dadd( -39.1842, -104.386, 16.789, 0.74 ) }
    dend_2 { pt3dadd( -39.2804, -104.553, 16.7906, 0.74 ) }
    dend_2 { pt3dadd( -39.7021, -105.305, 16.7616, 0.15 ) }
    dend_2 { pt3dadd( -39.9878, -105.858, 16.7187, 0.15 ) }
    dend_2 { pt3dadd( -40.1582, -106.237, 16.6794, 0.29 ) }
    dend_2 { pt3dadd( -40.356, -106.744, 16.6132, 0.15 ) }
    dend_2 { pt3dadd( -40.473, -107.139, 16.5569, 0.29 ) }
    dend_2 { pt3dadd( -40.6118, -107.856, 16.4702, 0.07 ) }
    dend_2 { pt3dadd( -40.6324, -108.095, 16.4464, 0.52 ) }
    dend_2 { pt3dadd( -40.6387, -108.392, 16.4254, 0.88 ) }
    dend_2 { pt3dadd( -40.6408, -108.831, 16.4192, 0.88 ) }
    dend_2 { pt3dadd( -40.6664, -109.642, 16.4522, 0.07 ) }
    dend_2 { pt3dadd( -40.7054, -110.199, 16.4979, 0.07 ) }
    dend_2 { pt3dadd( -40.7435, -110.537, 16.5348, 0.29 ) }
    dend_2 { pt3dadd( -40.7894, -110.864, 16.5711, 0.74 ) }
    dend_2 { pt3dadd( -40.8925, -111.44, 16.6288, 0.22 ) }
    dend_2 { pt3dadd( -41.1184, -112.548, 16.7, 0.22 ) }
    dend_2 { pt3dadd( -41.1994, -112.87, 16.7065, 0.59 ) }
    dend_2 { pt3dadd( -41.2998, -113.211, 16.697, 1.11 ) }
    dend_2 { pt3dadd( -41.3471, -113.368, 16.686, 1.25 ) }
    dend_2 { pt3dadd( -41.5009, -113.893, 16.6278, 0.74 ) }
    dend_2 { pt3dadd( -41.6754, -114.528, 16.529, 0.22 ) }
    dend_2 { pt3dadd( -41.8129, -115.075, 16.4288, 0.15 ) }
    dend_2 { pt3dadd( -41.9245, -115.573, 16.3346, 0.15 ) }
    dend_2 { pt3dadd( -41.9986, -115.939, 16.2672, 0.15 ) }
    dend_2 { pt3dadd( -42.0843, -116.363, 16.1958, 0.15 ) }
    dend_2 { pt3dadd( -42.16, -116.749, 16.1306, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -42.2867, -117.374, 16.0319, 0.22 ) }
    dend_2 { pt3dadd( -42.3742, -117.827, 15.9604, 0.74 ) }
    dend_2 { pt3dadd( -42.4437, -118.258, 15.8836, 1.25 ) }
    dend_2 { pt3dadd( -42.539, -118.93, 15.7632, 0.22 ) }
    dend_2 { pt3dadd( -42.6292, -119.701, 15.6269, 0.15 ) }
    dend_2 { pt3dadd( -42.6565, -119.998, 15.5792, 0.74 ) }
    dend_2 { pt3dadd( -42.6867, -120.436, 15.5233, 0.88 ) }
    dend_2 { pt3dadd( -42.7347, -121.588, 15.3883, 0.15 ) }
    dend_2 { pt3dadd( -42.7387, -122.263, 15.3132, 0.15 ) }
    dend_2 { pt3dadd( -42.7305, -122.492, 15.2912, 0.29 ) }
    dend_2 { pt3dadd( -42.7006, -122.956, 15.2638, 0.37 ) }
    dend_2 { pt3dadd( -42.6665, -123.471, 15.2346, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_46 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -13.0355, -33.038, -13.0746, 0.66 ) }
    dend_66 { pt3dadd( -12.2704, -34.4805, -12.8059, 0.66 ) }
    dend_66 { pt3dadd( -11.4644, -35.6734, -12.708, 0.29 ) }
    dend_66 { pt3dadd( -11.0664, -36.2533, -12.6908, 0.29 ) }
    dend_66 { pt3dadd( -10.5873, -37.0221, -12.6849, 0.66 ) }
    dend_66 { pt3dadd( -9.80493, -38.398, -12.6327, 0.81 ) }
    dend_66 { pt3dadd( -8.95401, -39.9916, -12.5439, 0.37 ) }
    dend_66 { pt3dadd( -8.25681, -41.2243, -12.4835, 0.37 ) }
    dend_66 { pt3dadd( -7.67721, -42.2804, -12.4004, 0.22 ) }
    dend_66 { pt3dadd( -7.14815, -43.3086, -12.308, 0.29 ) }
    dend_66 { pt3dadd( -6.56477, -44.6022, -12.1318, 0.29 ) }
    dend_66 { pt3dadd( -6.32904, -45.2662, -11.9911, 1.4 ) }
    dend_66 { pt3dadd( -6.12461, -46.0202, -11.7485, 2.58 ) }
    dend_66 { pt3dadd( -5.83146, -47.4456, -11.1263, 2.58 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 26/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.0355, -33.038, -13.0746, 0.59 ) }
    dend_47 { pt3dadd( -12.7786, -33.3532, -13.7792, 0.59 ) }
    dend_47 { pt3dadd( -12.2191, -33.7676, -14.9853, 0.59 ) }
    dend_47 { pt3dadd( -11.6511, -34.0581, -16.1644, 0.59 ) }
    dend_47 { pt3dadd( -11.3958, -34.1508, -16.7753, 0.59 ) }
    dend_47 { pt3dadd( -10.94, -34.2882, -18.1227, 0.44 ) }
    dend_47 { pt3dadd( -10.4843, -34.4256, -19.4697, 0.44 ) }
    dend_47 { pt3dadd( -10.0954, -34.4921, -20.4141, 0.74 ) }
    dend_47 { pt3dadd( -9.7241, -34.4726, -21.1999, 0.74 ) }
    dend_47 { pt3dadd( -9.20693, -34.2876, -22.362, 0.22 ) }
    dend_47 { pt3dadd( -8.95501, -34.0665, -23.1766, 0.37 ) }
    dend_47 { pt3dadd( -2.09312, -36.0529, -32.2283, 0.37 ) }
    dend_47 { pt3dadd( 3.63458, -36.9759, -42.1807, 0.37 ) }
    dend_47 { pt3dadd( 8.23633, -36.1092, -52.7087, 0.37 ) }
    dend_47 { pt3dadd( 11.5355, -35.2268, -63.7137, 0.37 ) }
    dend_47 { pt3dadd( 13.8941, -34.2776, -74.9531, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 151.136, -8.13421, 75.34, 0.07 ) }
    dend_41 { pt3dadd( 151.566, -6.85891, 75.2552, 0.07 ) }
    dend_41 { pt3dadd( 151.898, -5.90245, 75.2616, 0.22 ) }
    dend_41 { pt3dadd( 152.485, -4.31408, 75.3255, 0.07 ) }
    dend_41 { pt3dadd( 152.727, -3.71018, 75.3703, 0.59 ) }
    dend_41 { pt3dadd( 152.947, -3.19343, 75.4153, 0.96 ) }
    dend_41 { pt3dadd( 153.961, -0.87748, 75.6228, 0.07 ) }
    dend_41 { pt3dadd( 154.529, 0.270051, 75.7363, 0.15 ) }
    dend_41 { pt3dadd( 155.319, 1.76217, 75.9052, 0.07 ) }
    dend_41 { pt3dadd( 156.14, 3.22223, 76.0408, 0.07 ) }
    dend_41 { pt3dadd( 156.491, 3.80718, 76.078, 0.29 ) }
    dend_41 { pt3dadd( 156.938, 4.50085, 76.0897, 0.96 ) }
    dend_41 { pt3dadd( 158.083, 6.17327, 76.0479, 0.07 ) }
    dend_41 { pt3dadd( 158.806, 7.23691, 75.969, 0.07 ) }
    dend_41 { pt3dadd( 159.387, 8.11226, 75.9126, 0.29 ) }
    dend_41 { pt3dadd( 160.122, 9.25093, 75.8515, 1.18 ) }
    dend_41 { pt3dadd( 161.454, 11.3769, 75.7978, 0.07 ) }
    dend_41 { pt3dadd( 162.172, 12.5727, 75.8074, 0.07 ) }
    dend_41 { pt3dadd( 162.632, 13.3916, 75.8368, 0.22 ) }
    dend_41 { pt3dadd( 163.52, 15.0878, 76.0148, 0.07 ) }
    dend_41 { pt3dadd( 163.799, 15.6582, 76.1211, 0.29 ) }
    dend_41 { pt3dadd( 164.156, 16.4616, 76.2864, 0.52 ) }
    dend_41 { pt3dadd( 164.915, 18.3811, 76.6769, 0.07 ) }
    dend_41 { pt3dadd( 165.08, 18.8326, 76.7791, 0.29 ) }
    dend_41 { pt3dadd( 166.021, 21.4253, 77.5901, 0.07 ) }
    dend_41 { pt3dadd( 166.44, 22.5592, 78.0615, 0.07 ) }
    dend_41 { pt3dadd( 166.82, 23.6003, 78.5246, 1.11 ) }
    dend_41 { pt3dadd( 167.419, 25.2548, 79.3391, 0.07 ) }
    dend_41 { pt3dadd( 167.973, 26.7797, 80.2108, 0.07 ) }
    dend_41 { pt3dadd( 168.777, 28.8879, 81.5574, 0.29 ) }
    dend_41 { pt3dadd( 169.286, 30.0941, 82.5094, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 151.136, -8.13421, 75.34, 0.07 ) }
    dend_36 { pt3dadd( 151.911, -8.76967, 75.7212, 0.07 ) }
    dend_36 { pt3dadd( 152.394, -9.16537, 75.9586, 0.15 ) }
    dend_36 { pt3dadd( 152.916, -9.59226, 76.2147, 1.4 ) }
    dend_36 { pt3dadd( 153.659, -10.201, 76.58, 0.52 ) }
    dend_36 { pt3dadd( 154.234, -10.6727, 76.863, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 79/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -155.847, 51.1151, 24.587, 0.22 ) }
    dend_22 { pt3dadd( -157.075, 51.6221, 23.9588, 0.22 ) }
    dend_22 { pt3dadd( -157.434, 51.7766, 23.7741, 0.44 ) }
    dend_22 { pt3dadd( -157.978, 52.018, 23.4843, 0.66 ) }
    dend_22 { pt3dadd( -158.824, 52.4123, 23.0232, 0.15 ) }
    dend_22 { pt3dadd( -159.639, 52.8278, 22.5748, 0.15 ) }
    dend_22 { pt3dadd( -159.913, 52.9811, 22.4286, 0.52 ) }
    dend_22 { pt3dadd( -160.413, 53.3065, 22.1298, 1.18 ) }
    dend_22 { pt3dadd( -160.913, 53.659, 21.8218, 0.37 ) }
    dend_22 { pt3dadd( -161.36, 54.0082, 21.5526, 0.07 ) }
    dend_22 { pt3dadd( -161.646, 54.2442, 21.407, 0.07 ) }
    dend_22 { pt3dadd( -162.11, 54.6482, 21.1826, 0.15 ) }
    dend_22 { pt3dadd( -162.69, 55.1827, 20.8878, 0.07 ) }
    dend_22 { pt3dadd( -162.946, 55.4242, 20.752, 0.59 ) }
    dend_22 { pt3dadd( -163.194, 55.6498, 20.611, 1.11 ) }
    dend_22 { pt3dadd( -164.262, 56.5957, 19.9398, 0.15 ) }
    dend_22 { pt3dadd( -164.845, 57.1194, 19.5316, 0.15 ) }
    dend_22 { pt3dadd( -165.165, 57.4276, 19.2862, 0.59 ) }
    dend_22 { pt3dadd( -165.396, 57.6807, 19.0756, 0.52 ) }
    dend_22 { pt3dadd( -165.86, 58.2367, 18.5839, 0.15 ) }
    dend_22 { pt3dadd( -166.134, 58.6043, 18.2482, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( -166.339, 58.9577, 17.9, 0.15 ) }
    dend_22 { pt3dadd( -166.515, 59.3675, 17.5233, 0.66 ) }
    dend_22 { pt3dadd( -166.807, 60.201, 16.7849, 0.15 ) }
    dend_22 { pt3dadd( -166.93, 60.6418, 16.4126, 0.37 ) }
    dend_22 { pt3dadd( -167.044, 61.1601, 16.0017, 0.22 ) }
    dend_22 { pt3dadd( -167.2, 61.9799, 15.3334, 0.22 ) }
    dend_22 { pt3dadd( -167.276, 62.4586, 14.9249, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 7/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -155.847, 51.1151, 24.587, 0.15 ) }
    dend_21 { pt3dadd( -157.926, 50.8464, 25.2942, 0.15 ) }
    dend_21 { pt3dadd( -158.562, 50.7594, 25.4869, 0.59 ) }
    dend_21 { pt3dadd( -159.125, 50.728, 25.618, 0.81 ) }
    dend_21 { pt3dadd( -160.008, 50.7265, 25.7903, 0.15 ) }
    dend_21 { pt3dadd( -161.515, 50.7867, 26.0456, 0.15 ) }
    dend_21 { pt3dadd( -161.871, 50.8199, 26.1069, 0.59 ) }
    dend_21 { pt3dadd( -162.339, 50.896, 26.1632, 1.03 ) }
    dend_21 { pt3dadd( -164.304, 51.3412, 26.4033, 0.07 ) }
    dend_21 { pt3dadd( -164.9, 51.503, 26.4789, 0.74 ) }
    dend_21 { pt3dadd( -165.485, 51.6908, 26.5516, 0.74 ) }
    dend_21 { pt3dadd( -167.13, 52.2425, 26.7299, 0.07 ) }
    dend_21 { pt3dadd( -168.319, 52.6251, 26.8751, 0.07 ) }
    dend_21 { pt3dadd( -169.575, 53.028, 27.0395, 0.07 ) }
    dend_21 { pt3dadd( -169.838, 53.1037, 27.0765, 0.88 ) }
    dend_21 { pt3dadd( -170.789, 53.3686, 27.2068, 1.4 ) }
    dend_21 { pt3dadd( -172.564, 53.8609, 27.4325, 0.44 ) }
    dend_21 { pt3dadd( -174.144, 54.2986, 27.5933, 0.07 ) }
    dend_21 { pt3dadd( -174.965, 54.5313, 27.6899, 0.07 ) }
    dend_21 { pt3dadd( -175.962, 54.8197, 27.8316, 0.07 ) }
    dend_21 { pt3dadd( -176.845, 55.0965, 27.9831, 0.07 ) }
    dend_21 { pt3dadd( -177.458, 55.3074, 28.1027, 0.81 ) }
    dend_21 { pt3dadd( -179.311, 56.01, 28.5033, 0.07 ) }
    dend_21 { pt3dadd( -180.362, 56.4364, 28.7533, 0.96 ) }
    dend_21 { pt3dadd( -182.175, 57.1322, 29.2697, 0.15 ) }
    dend_21 { pt3dadd( -182.96, 57.425, 29.5346, 0.15 ) }
    dend_21 { pt3dadd( -183.604, 57.6499, 29.783, 0.74 ) }
    dend_21 { pt3dadd( -184.323, 57.8954, 30.09, 1.18 ) }
    dend_21 { pt3dadd( -185.594, 58.3016, 30.6895, 0.07 ) }
    dend_21 { pt3dadd( -186.737, 58.6127, 31.1895, 0.15 ) }
    dend_21 { pt3dadd( -187.652, 58.816, 31.557, 0.15 ) }
    dend_21 { pt3dadd( -188.096, 58.8939, 31.7082, 0.15 ) }
    dend_21 { pt3dadd( -188.723, 58.9896, 31.8917, 0.81 ) }
    dend_21 { pt3dadd( -189.757, 59.1626, 32.1163, 1.25 ) }
    dend_21 { pt3dadd( -191.112, 59.418, 32.3421, 0.15 ) }
    dend_21 { pt3dadd( -191.961, 59.6035, 32.4541, 0.15 ) }
    dend_21 { pt3dadd( -192.682, 59.7448, 32.5367, 0.66 ) }
    dend_21 { pt3dadd( -193.335, 59.8656, 32.6097, 0.22 ) }
    dend_21 { pt3dadd( -194.667, 60.151, 32.7803, 0.15 ) }
    dend_21 { pt3dadd( -195.561, 60.3965, 32.9115, 0.96 ) }
    dend_21 { pt3dadd( -196.091, 60.5634, 33.0078, 1.11 ) }
    dend_21 { pt3dadd( -196.854, 60.8408, 33.1622, 0.52 ) }
    dend_21 { pt3dadd( -197.87, 61.2831, 33.3823, 0.15 ) }
    dend_21 { pt3dadd( -198.549, 61.6592, 33.5277, 0.22 ) }
    dend_21 { pt3dadd( -198.924, 61.9515, 33.6209, 0.15 ) }
    dend_21 { pt3dadd( -199.246, 62.2965, 33.7031, 0.15 ) }
    dend_21 { pt3dadd( -199.706, 62.9282, 33.8405, 0.37 ) }
    dend_21 { pt3dadd( -199.927, 63.254, 33.9151, 0.37 ) }
    dend_21 { pt3dadd( -200.641, 64.2396, 34.1536, 0.15 ) }
    dend_21 { pt3dadd( -201.42, 65.1355, 34.413, 0.22 ) }
    dend_21 { pt3dadd( -201.936, 65.6792, 34.6057, 0.74 ) }
    dend_21 { pt3dadd( -202.317, 66.055, 34.7568, 1.18 ) }
    dend_21 { pt3dadd( -203.764, 67.3793, 35.4111, 0.07 ) }
    dend_21 { pt3dadd( -204.454, 67.9944, 35.7524, 0.81 ) }
    dend_21 { pt3dadd( -205.613, 69.0459, 36.4158, 0.15 ) }
    dend_21 { pt3dadd( -206.153, 69.5624, 36.7614, 0.59 ) }
    dend_21 { pt3dadd( -206.589, 70.0397, 37.1298, 1.18 ) }
    dend_21 { pt3dadd( -207.753, 71.4326, 38.3318, 0.15 ) }
    dend_21 { pt3dadd( -208.19, 71.9936, 38.8672, 0.29 ) }
    dend_21 { pt3dadd( -208.735, 72.6857, 39.5737, 0.52 ) }
    dend_21 { pt3dadd( -209.098, 73.1323, 40.0422, 0.96 ) }
    dend_21 { pt3dadd( -210.312, 74.427, 41.4614, 0.22 ) }
    dend_21 { pt3dadd( -210.867, 74.8909, 42.0495, 0.29 ) }
    dend_21 { pt3dadd( -211.649, 75.3124, 42.7742, 0.15 ) }
    dend_21 { pt3dadd( -212.513, 75.5851, 43.4996, 0.15 ) }
    dend_21 { pt3dadd( -213.036, 75.6433, 43.9245, 0.88 ) }
    dend_21 { pt3dadd( -213.525, 75.5935, 44.3898, 1.4 ) }
    dend_21 { pt3dadd( -214.693, 75.134, 45.9258, 0.22 ) }
    dend_21 { pt3dadd( -215.157, 74.7754, 46.943, 0.29 ) }
    dend_21 { pt3dadd( -215.355, 74.4414, 47.7665, 0.15 ) }
    dend_21 { pt3dadd( -215.478, 73.9107, 48.9389, 0.37 ) }
    dend_21 { pt3dadd( -215.525, 73.1884, 50.5148, 0.15 ) }
    dend_21 { pt3dadd( -215.466, 72.5795, 51.7935, 0.81 ) }
    dend_21 { pt3dadd( -215.35, 72.0436, 52.9191, 0.15 ) }
    dend_21 { pt3dadd( -215.223, 71.575, 53.9951, 0.66 ) }
    dend_21 { pt3dadd( -215.006, 70.8527, 55.8696, 0.15 ) }
    dend_21 { pt3dadd( -214.833, 70.2978, 57.4383, 0.74 ) }
    dend_21 { pt3dadd( -214.65, 69.6952, 59.2999, 0.22 ) }
    dend_21 { pt3dadd( -214.486, 69.1511, 61.031, 0.22 ) }
    dend_21 { pt3dadd( -214.296, 68.4298, 63.334, 0.81 ) }
    dend_21 { pt3dadd( -214.189, 67.9746, 64.8077, 1.25 ) }
    dend_21 { pt3dadd( -213.971, 67.098, 67.8299, 0.15 ) }
    dend_21 { pt3dadd( -213.815, 66.5735, 69.8329, 0.44 ) }
    dend_21 { pt3dadd( -213.721, 66.3344, 70.8821, 0.44 ) }
    dend_21 { pt3dadd( -213.642, 66.2001, 71.5718, 0.44 ) }
    dend_21 { pt3dadd( -213.585, 66.1273, 72.0001, 0.44 ) }
    dend_21 { pt3dadd( -213.449, 65.9832, 73.0701, 0.44 ) }
    dend_21 { pt3dadd( -213.293, 65.8746, 74.2508, 0.44 ) }
    dend_21 { pt3dadd( -213.165, 65.7967, 74.9458, 0.44 ) }
    dend_21 { pt3dadd( -212.757, 65.5664, 76.6056, 0.44 ) }
    dend_21 { pt3dadd( -212.535, 65.4087, 77.3138, 0.44 ) }
    dend_21 { pt3dadd( -211.75, 64.7003, 79.2926, 0.44 ) }
    dend_21 { pt3dadd( -211.509, 64.4456, 79.7697, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_21 { pt3dadd( -210.956, 63.8435, 80.6741, 0.07 ) }
    dend_21 { pt3dadd( -210.301, 63.1773, 81.5823, 0.37 ) }
    dend_21 { pt3dadd( -209.443, 62.4423, 82.5726, 0.15 ) }
    dend_21 { pt3dadd( -208.763, 61.9556, 83.3104, 1.47 ) }
    dend_21 { pt3dadd( -207.728, 61.2573, 84.3341, 0.07 ) }
    dend_21 { pt3dadd( -207.364, 61.0285, 84.7272, 0.22 ) }
    dend_21 { pt3dadd( -206.445, 60.5019, 85.8431, 0.07 ) }
    dend_21 { pt3dadd( -205.746, 60.1619, 86.7804, 0.44 ) }
    dend_21 { pt3dadd( -205.006, 59.9146, 87.7201, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 61.7931, -242.564, 57.5905, 0.15 ) }
    dend_16 { pt3dadd( 62.9886, -244.499, 57.2397, 0.15 ) }
    dend_16 { pt3dadd( 63.2368, -244.921, 57.1688, 0.29 ) }
    dend_16 { pt3dadd( 63.5356, -245.437, 57.0841, 0.66 ) }
    dend_16 { pt3dadd( 64.2676, -246.718, 56.8783, 0.15 ) }
    dend_16 { pt3dadd( 64.6092, -247.269, 56.7779, 0.29 ) }
    dend_16 { pt3dadd( 65.3431, -248.414, 56.5585, 0.07 ) }
    dend_16 { pt3dadd( 65.7201, -248.997, 56.4453, 0.07 ) }
    dend_16 { pt3dadd( 65.9624, -249.361, 56.3716, 0.74 ) }
    dend_16 { pt3dadd( 66.3679, -249.956, 56.2469, 1.47 ) }
    dend_16 { pt3dadd( 67.7901, -251.94, 55.7998, 0.22 ) }
    dend_16 { pt3dadd( 68.1168, -252.366, 55.6942, 0.81 ) }
    dend_16 { pt3dadd( 68.5355, -252.848, 55.5531, 1.4 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 61.7931, -242.564, 57.5905, 0.22 ) }
    dend_15 { pt3dadd( 62.8037, -243.793, 59.5382, 0.22 ) }
    dend_15 { pt3dadd( 63.258, -244.38, 60.3955, 0.29 ) }
    dend_15 { pt3dadd( 63.7976, -245.042, 61.2843, 0.15 ) }
    dend_15 { pt3dadd( 64.3928, -245.749, 62.1849, 0.37 ) }
    dend_15 { pt3dadd( 64.6215, -246.019, 62.5177, 0.52 ) }
    dend_15 { pt3dadd( 65.1955, -246.701, 63.3394, 0.22 ) }
    dend_15 { pt3dadd( 65.688, -247.276, 64.0013, 0.81 ) }
    dend_15 { pt3dadd( 66.3697, -248.098, 64.8866, 0.15 ) }
    dend_15 { pt3dadd( 66.5707, -248.335, 65.1379, 0.22 ) }
    dend_15 { pt3dadd( 66.8744, -248.646, 65.5055, 0.52 ) }
    dend_15 { pt3dadd( 67.6568, -249.372, 66.4499, 0.15 ) }
    dend_15 { pt3dadd( 68.3204, -249.984, 67.2837, 0.88 ) }
    dend_15 { pt3dadd( 68.6149, -250.271, 67.6804, 0.96 ) }
    dend_15 { pt3dadd( 69.4363, -251.119, 68.8816, 0.22 ) }
    dend_15 { pt3dadd( 70.254, -251.996, 70.092, 1.33 ) }
    dend_15 { pt3dadd( 71.0092, -252.826, 71.3047, 0.22 ) }
    dend_15 { pt3dadd( 71.3461, -253.193, 71.8917, 0.07 ) }
    dend_15 { pt3dadd( 71.5967, -253.458, 72.3497, 0.15 ) }
    dend_15 { pt3dadd( 72.2441, -254.083, 73.5946, 0.15 ) }
    dend_15 { pt3dadd( 72.4544, -254.279, 74.0179, 1.18 ) }
    dend_15 { pt3dadd( 73.524, -255.21, 76.1484, 0.22 ) }
    dend_15 { pt3dadd( 74.3602, -255.809, 77.6546, 0.22 ) }
    dend_15 { pt3dadd( 74.7769, -256.073, 78.3274, 0.37 ) }
    dend_15 { pt3dadd( 75.6299, -256.583, 79.5857, 0.37 ) }
    dend_15 { pt3dadd( 76.1098, -256.866, 80.2447, 1.25 ) }
    dend_15 { pt3dadd( 77.3264, -257.578, 81.7629, 0.15 ) }
    dend_15 { pt3dadd( 78.1145, -258.053, 82.6283, 0.15 ) }
    dend_15 { pt3dadd( 78.507, -258.314, 83.0471, 0.37 ) }
    dend_15 { pt3dadd( 79.648, -259.155, 84.2627, 0.22 ) }
    dend_15 { pt3dadd( 80.1791, -259.588, 84.8183, 0.81 ) }
    dend_15 { pt3dadd( 81.3803, -260.658, 86.1868, 0.07 ) }
    dend_15 { pt3dadd( 81.6551, -260.951, 86.5465, 0.29 ) }
    dend_15 { pt3dadd( 82.0136, -261.378, 87.066, 0.44 ) }
    dend_15 { pt3dadd( 82.1856, -261.597, 87.339, 0.22 ) }
    dend_15 { pt3dadd( 82.3178, -261.793, 87.5693, 0.37 ) }
    dend_15 { pt3dadd( 83.0916, -263.199, 89.1419, 0.15 ) }
    dend_15 { pt3dadd( 83.3178, -263.844, 89.8715, 1.47 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 60/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.3223, -113.538, 4.61697, 0.59 ) }
    dend_10 { pt3dadd( 16.2385, -113.584, 2.16154, 0.59 ) }
    dend_10 { pt3dadd( 16.1161, -113.947, 0.817667, 0.59 ) }
    dend_10 { pt3dadd( 16.0857, -114.112, 0.526333, 0.59 ) }
    dend_10 { pt3dadd( 16.0833, -115.069, -0.53793, 0.59 ) }
    dend_10 { pt3dadd( 16.14, -115.733, -1.08853, 0.59 ) }
    dend_10 { pt3dadd( 16.209, -116.54, -1.75789, 1.11 ) }
    dend_10 { pt3dadd( 16.3225, -118.262, -2.67103, 0.15 ) }
    dend_10 { pt3dadd( 16.4159, -119.403, -3.14591, 1.03 ) }
    dend_10 { pt3dadd( 16.6582, -121.408, -3.84605, 0.15 ) }
    dend_10 { pt3dadd( 16.9042, -122.706, -4.16031, 0.22 ) }
    dend_10 { pt3dadd( 18.8546, -131.576, -10.7527, 0.22 ) }
    dend_10 { pt3dadd( 19.3775, -141.369, -16.3492, 0.22 ) }
    dend_10 { pt3dadd( 20.084, -151.44, -21.4617, 0.22 ) }
    dend_10 { pt3dadd( 19.9501, -162.262, -24.9985, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 75/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.3223, -113.538, 4.61697, 0.07 ) }
    dend_9 { pt3dadd( 16.3477, -116.199, 4.76748, 0.07 ) }
    dend_9 { pt3dadd( 16.3793, -117.526, 4.84718, 0.07 ) }
    dend_9 { pt3dadd( 16.3947, -118.169, 4.88587, 0.81 ) }
    dend_9 { pt3dadd( 16.4219, -119.31, 4.95439, 1.62 ) }
    dend_9 { pt3dadd( 16.4675, -121.224, 5.06941, 0.15 ) }
    dend_9 { pt3dadd( 16.4868, -122.031, 5.11791, 0.15 ) }
    dend_9 { pt3dadd( 16.513, -122.51, 5.15013, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 83/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -42.6665, -123.471, 15.2346, 0.07 ) }
    dend_4 { pt3dadd( -43.2654, -123.743, 15.3992, 0.07 ) }
    dend_4 { pt3dadd( -43.8995, -124.031, 15.5735, 0.07 ) }
    dend_4 { pt3dadd( -44.2959, -124.211, 15.6824, 0.15 ) }
    dend_4 { pt3dadd( -44.9431, -124.505, 15.8603, 0.07 ) }
    dend_4 { pt3dadd( -45.3918, -124.708, 15.9835, 0.07 ) }
    dend_4 { pt3dadd( -45.7733, -124.882, 16.0884, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -42.6665, -123.471, 15.2346, 0.81 ) }
    dend_3 { pt3dadd( -42.4956, -124.329, 15.0944, 0.81 ) }
    dend_3 { pt3dadd( -42.2333, -125.566, 14.9147, 0.22 ) }
    dend_3 { pt3dadd( -41.9813, -126.782, 14.7657, 0.22 ) }
    dend_3 { pt3dadd( -41.8285, -127.63, 14.6421, 0.15 ) }
    dend_3 { pt3dadd( -41.6389, -128.771, 14.466, 0.15 ) }
    dend_3 { pt3dadd( -41.6191, -128.897, 14.448, 0.15 ) }
    dend_3 { pt3dadd( -41.5215, -129.452, 14.3552, 0.66 ) }
    dend_3 { pt3dadd( -41.4023, -130.062, 14.2382, 1.03 ) }
    dend_3 { pt3dadd( -41.1035, -131.652, 13.944, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( -40.981, -132.456, 13.7767, 0.66 ) }
    dend_3 { pt3dadd( -40.8731, -133.334, 13.598, 0.22 ) }
    dend_3 { pt3dadd( -40.7538, -134.395, 13.3977, 0.15 ) }
    dend_3 { pt3dadd( -40.6841, -135.077, 13.2813, 0.15 ) }
    dend_3 { pt3dadd( -40.6351, -135.537, 13.2239, 0.66 ) }
    dend_3 { pt3dadd( -40.5473, -136.36, 13.1853, 0.29 ) }
    dend_3 { pt3dadd( -40.4223, -137.827, 13.1875, 0.15 ) }
    dend_3 { pt3dadd( -40.3957, -138.468, 13.213, 0.15 ) }
    dend_3 { pt3dadd( -40.3999, -139.01, 13.2589, 0.15 ) }
    dend_3 { pt3dadd( -40.4405, -139.837, 13.3378, 0.22 ) }
    dend_3 { pt3dadd( -40.4971, -140.643, 13.4112, 0.59 ) }
    dend_3 { pt3dadd( -40.6076, -141.738, 13.5008, 1.18 ) }
    dend_3 { pt3dadd( -40.7496, -142.685, 13.5628, 1.7 ) }
    dend_3 { pt3dadd( -40.9442, -143.792, 13.6133, 1.99 ) }
    dend_3 { pt3dadd( -41.1559, -144.91, 13.6453, 1.25 ) }
    dend_3 { pt3dadd( -41.471, -146.493, 13.6671, 0.22 ) }
    dend_3 { pt3dadd( -41.6658, -147.459, 13.6718, 0.37 ) }
    dend_3 { pt3dadd( -41.893, -148.581, 13.6438, 0.15 ) }
    dend_3 { pt3dadd( -42.17, -149.999, 13.5707, 0.22 ) }
    dend_3 { pt3dadd( -42.2846, -150.559, 13.525, 0.59 ) }
    dend_3 { pt3dadd( -42.4196, -151.189, 13.4553, 1.11 ) }
    dend_3 { pt3dadd( -42.6575, -152.115, 13.3455, 0.52 ) }
    dend_3 { pt3dadd( -43.0993, -153.69, 13.1653, 0.22 ) }
    dend_3 { pt3dadd( -43.2932, -154.268, 13.096, 0.88 ) }
    dend_3 { pt3dadd( -43.6265, -155.152, 12.9849, 0.96 ) }
    dend_3 { pt3dadd( -44.1672, -156.497, 12.8234, 0.07 ) }
    dend_3 { pt3dadd( -44.6105, -157.536, 12.7085, 0.07 ) }
    dend_3 { pt3dadd( -44.685, -157.699, 12.6956, 0.44 ) }
    dend_3 { pt3dadd( -44.9601, -158.259, 12.7109, 0.52 ) }
    // Section: dend_90, id: dend_90, parent: dend_66 (entry count 29/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -5.83146, -47.4456, -11.1263, 0.44 ) }
    dend_90 { pt3dadd( -7.55059, -50.1305, -10.5939, 0.44 ) }
    dend_90 { pt3dadd( -8.3692, -51.4048, -10.3249, 0.66 ) }
    dend_90 { pt3dadd( -9.11026, -52.599, -10.0821, 0.66 ) }
    dend_90 { pt3dadd( -10.0892, -54.2218, -9.77621, 0.44 ) }
    dend_90 { pt3dadd( -10.6517, -55.1815, -9.60923, 0.81 ) }
    dend_90 { pt3dadd( -11.078, -55.9423, -9.48776, 1.33 ) }
    dend_90 { pt3dadd( -11.881, -57.4708, -9.25352, 0.74 ) }
    dend_90 { pt3dadd( -12.5577, -58.8541, -9.05651, 0.37 ) }
    dend_90 { pt3dadd( -12.9703, -59.7835, -8.9456, 0.22 ) }
    dend_90 { pt3dadd( -13.4331, -60.901, -8.85525, 0.96 ) }
    dend_90 { pt3dadd( -13.7593, -61.729, -8.84071, 0.15 ) }
    dend_90 { pt3dadd( -13.9881, -62.3914, -8.84011, 0.29 ) }
    dend_90 { pt3dadd( -19.087, -73.0462, -8.54069, 0.29 ) }
    dend_90 { pt3dadd( -25.4016, -82.6044, -6.08005, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 44/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -5.83146, -47.4456, -11.1263, 0.59 ) }
    dend_67 { pt3dadd( -5.1335, -48.1585, -11.3041, 0.59 ) }
    dend_67 { pt3dadd( -4.69927, -48.6316, -11.3715, 0.29 ) }
    dend_67 { pt3dadd( -4.50308, -48.8454, -11.4019, 0.81 ) }
    dend_67 { pt3dadd( -4.03966, -49.3504, -11.4737, 0.52 ) }
    dend_67 { pt3dadd( -3.53643, -49.8987, -11.5517, 0.22 ) }
    dend_67 { pt3dadd( -3.22638, -50.2366, -11.5998, 0.66 ) }
    dend_67 { pt3dadd( -2.88914, -50.7165, -11.6018, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_47 (entry count 52/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 13.8941, -34.2776, -74.9531, 0.07 ) }
    dend_57 { pt3dadd( 19.8816, -36.4491, -82.8912, 0.07 ) }
    dend_57 { pt3dadd( 26.4939, -36.8795, -90.6203, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 55/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 13.8941, -34.2776, -74.9531, 0.81 ) }
    dend_48 { pt3dadd( 18.9902, -34.5417, -86.4086, 0.07 ) }
    dend_48 { pt3dadd( 24.1832, -33.4193, -97.7785, 0.07 ) }
    dend_48 { pt3dadd( 27.6094, -32.1088, -109.781, 0.07 ) }
    dend_48 { pt3dadd( 30.7147, -32.7927, -121.912, 0.07 ) }
    dend_48 { pt3dadd( 33.861, -32.9842, -134.05, 0.07 ) }
    dend_48 { pt3dadd( 38.2457, -33.405, -145.791, 0.07 ) }
    dend_48 { pt3dadd( 42.941, -33.1988, -157.42, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 63/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 154.234, -10.6727, 76.863, 0.15 ) }
    dend_40 { pt3dadd( 155.088, -11.1898, 76.54, 0.15 ) }
    dend_40 { pt3dadd( 155.582, -11.4795, 76.3491, 0.66 ) }
    dend_40 { pt3dadd( 156.022, -11.7367, 76.1716, 0.66 ) }
    dend_40 { pt3dadd( 157.225, -12.4384, 75.6732, 0.07 ) }
    dend_40 { pt3dadd( 158.135, -12.9851, 75.2686, 0.07 ) }
    dend_40 { pt3dadd( 158.793, -13.3821, 74.9728, 0.96 ) }
    dend_40 { pt3dadd( 160.108, -14.1723, 74.3975, 0.07 ) }
    dend_40 { pt3dadd( 160.555, -14.419, 74.189, 0.07 ) }
    dend_40 { pt3dadd( 160.822, -14.5528, 74.0562, 0.22 ) }
    dend_40 { pt3dadd( 161.463, -14.849, 73.6897, 0.07 ) }
    dend_40 { pt3dadd( 162.047, -15.1245, 73.3328, 0.66 ) }
    dend_40 { pt3dadd( 162.256, -15.2259, 73.1955, 0.66 ) }
    dend_40 { pt3dadd( 163.48, -15.8514, 72.3129, 0.07 ) }
    dend_40 { pt3dadd( 163.972, -16.1183, 71.932, 0.44 ) }
    dend_40 { pt3dadd( 164.706, -16.5473, 71.3363, 0.22 ) }
    dend_40 { pt3dadd( 165.165, -16.8436, 70.9577, 0.96 ) }
    dend_40 { pt3dadd( 166.033, -17.5081, 70.2042, 0.22 ) }
    dend_40 { pt3dadd( 166.704, -18.1076, 69.6558, 0.07 ) }
    dend_40 { pt3dadd( 167.394, -18.8067, 69.1406, 0.74 ) }
    dend_40 { pt3dadd( 167.655, -19.0746, 68.9782, 1.03 ) }
    dend_40 { pt3dadd( 168.138, -19.5618, 68.7365, 0.59 ) }
    dend_40 { pt3dadd( 168.987, -20.4077, 68.3804, 0.15 ) }
    dend_40 { pt3dadd( 170.048, -21.4567, 68.0353, 0.15 ) }
    dend_40 { pt3dadd( 170.34, -21.7268, 67.9404, 0.59 ) }
    dend_40 { pt3dadd( 171.478, -22.6972, 67.5755, 0.07 ) }
    dend_40 { pt3dadd( 171.839, -22.9649, 67.4421, 0.74 ) }
    dend_40 { pt3dadd( 172.227, -23.2067, 67.2687, 0.96 ) }
    dend_40 { pt3dadd( 173.544, -23.8873, 66.593, 0.07 ) }
    dend_40 { pt3dadd( 174.585, -24.3619, 65.9897, 0.07 ) }
    dend_40 { pt3dadd( 174.992, -24.5317, 65.7329, 0.66 ) }
    dend_40 { pt3dadd( 175.886, -24.84, 65.1002, 0.22 ) }
    dend_40 { pt3dadd( 176.687, -25.088, 64.4974, 0.66 ) }
    dend_40 { pt3dadd( 177.047, -25.172, 64.1999, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 97/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 154.234, -10.6727, 76.863, 0.07 ) }
    dend_37 { pt3dadd( 155.612, -10.2418, 77.8863, 0.07 ) }
    dend_37 { pt3dadd( 156.502, -9.97742, 78.5394, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_37 { pt3dadd( 157.076, -9.81772, 78.947, 0.81 ) }
    dend_37 { pt3dadd( 157.718, -9.64902, 79.4112, 0.22 ) }
    dend_37 { pt3dadd( 158.403, -9.47981, 79.9046, 0.96 ) }
    dend_37 { pt3dadd( 160.026, -9.12512, 81.0686, 0.07 ) }
    dend_37 { pt3dadd( 160.467, -9.04072, 81.3632, 0.07 ) }
    dend_37 { pt3dadd( 160.886, -8.95884, 81.6532, 0.29 ) }
    dend_37 { pt3dadd( 161.611, -8.81347, 82.1954, 1.11 ) }
    dend_37 { pt3dadd( 162.102, -8.72364, 82.5804, 1.55 ) }
    dend_37 { pt3dadd( 163.364, -8.52529, 83.5723, 0.22 ) }
    dend_37 { pt3dadd( 164.398, -8.37503, 84.4003, 0.88 ) }
    dend_37 { pt3dadd( 165.516, -8.18403, 85.3797, 0.22 ) }
    dend_37 { pt3dadd( 166.101, -8.06026, 85.9575, 0.22 ) }
    dend_37 { pt3dadd( 166.737, -7.87891, 86.6844, 0.66 ) }
    dend_37 { pt3dadd( 166.919, -7.80786, 86.9331, 1.33 ) }
    dend_37 { pt3dadd( 167.979, -7.29378, 88.6465, 0.22 ) }
    dend_37 { pt3dadd( 168.694, -6.91009, 89.9792, 0.22 ) }
    dend_37 { pt3dadd( 169.32, -6.54387, 91.2543, 0.66 ) }
    dend_37 { pt3dadd( 169.964, -6.1138, 92.6022, 0.88 ) }
    dend_37 { pt3dadd( 170.638, -5.60676, 94.0157, 0.37 ) }
    dend_37 { pt3dadd( 171.047, -5.27807, 94.9057, 0.37 ) }
    dend_37 { pt3dadd( 171.42, -4.95436, 95.7576, 0.81 ) }
    dend_37 { pt3dadd( 171.656, -4.76677, 96.2538, 1.11 ) }
    dend_37 { pt3dadd( 172.166, -4.4173, 97.192, 0.22 ) }
    dend_37 { pt3dadd( 172.591, -4.18985, 97.826, 0.74 ) }
    // Section: dend_92, id: dend_92, parent: dend_90 (entry count 24/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -25.4016, -82.6044, -6.08005, 0.07 ) }
    dend_92 { pt3dadd( -29.8783, -89.01, -6.29318, 0.07 ) }
    dend_92 { pt3dadd( -34.1196, -95.5907, -6.4926, 0.07 ) }
    dend_92 { pt3dadd( -38.8467, -101.8, -6.43108, 0.07 ) }
    dend_92 { pt3dadd( -43.3223, -108.091, -7.58084, 0.07 ) }
    dend_92 { pt3dadd( -47.635, -114.413, -9.12358, 0.07 ) }
    dend_92 { pt3dadd( -52.8266, -119.945, -10.7152, 0.07 ) }
    dend_92 { pt3dadd( -58.1579, -125.248, -12.5325, 0.07 ) }
    dend_92 { pt3dadd( -63.0498, -130.952, -14.4773, 0.07 ) }
    dend_92 { pt3dadd( -67.9471, -136.93, -15.4087, 0.07 ) }
    dend_92 { pt3dadd( -73.057, -142.791, -15.5912, 0.07 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 35/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -25.4016, -82.6044, -6.08005, 0.81 ) }
    dend_91 { pt3dadd( -30.3697, -94.2209, -3.26582, 0.07 ) }
    dend_91 { pt3dadd( -37.075, -104.678, 0.00877023, 0.07 ) }
    dend_91 { pt3dadd( -42.7419, -116.069, 2.28309, 0.07 ) }
    dend_91 { pt3dadd( -48.5391, -127.619, 2.97064, 0.07 ) }
    dend_91 { pt3dadd( -55.0186, -138.586, 4.93146, 0.07 ) }
    dend_91 { pt3dadd( -62.6651, -148.902, 5.09163, 0.07 ) }
    dend_91 { pt3dadd( -69.8657, -159.277, 7.41451, 0.07 ) }
    // Section: dend_85, id: dend_85, parent: dend_67 (entry count 43/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -2.88914, -50.7165, -11.6018, 0.15 ) }
    dend_85 { pt3dadd( -3.28558, -52.0509, -11.4134, 0.15 ) }
    dend_85 { pt3dadd( -3.3812, -52.3727, -11.368, 0.59 ) }
    dend_85 { pt3dadd( -3.5469, -52.9304, -11.2892, 1.33 ) }
    dend_85 { pt3dadd( -3.7232, -53.5238, -11.2055, 0.22 ) }
    dend_85 { pt3dadd( -6.43024, -60.8387, -11.0884, 0.22 ) }
    dend_85 { pt3dadd( -8.67406, -68.2314, -10.0084, 0.22 ) }
    dend_85 { pt3dadd( -11.317, -75.5756, -10.0675, 0.22 ) }
    dend_85 { pt3dadd( -13.9911, -82.7755, -8.82812, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 52/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -2.88914, -50.7165, -11.6018, 0.44 ) }
    dend_68 { pt3dadd( -2.43146, -51.8668, -11.7344, 0.44 ) }
    dend_68 { pt3dadd( -1.98943, -53.0007, -11.8482, 0.15 ) }
    dend_68 { pt3dadd( -1.66594, -53.8067, -11.9134, 0.15 ) }
    dend_68 { pt3dadd( -1.47393, -54.2653, -11.9429, 0.88 ) }
    dend_68 { pt3dadd( -1.11808, -55.1156, -11.9904, 1.92 ) }
    dend_68 { pt3dadd( 0.013633, -57.8197, -12.1415, 0.22 ) }
    dend_68 { pt3dadd( 0.339989, -58.6213, -12.1765, 0.66 ) }
    dend_68 { pt3dadd( 0.663271, -59.3895, -12.2136, 1.33 ) }
    dend_68 { pt3dadd( 0.942281, -60.0841, -12.2548, 2.06 ) }
    dend_68 { pt3dadd( 1.25129, -60.8598, -12.2867, 1.62 ) }
    dend_68 { pt3dadd( 5.31572, -70.2194, -11.0557, 1.62 ) }
    dend_68 { pt3dadd( 10.6736, -78.6584, -8.99695, 1.62 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 65/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 26.4939, -36.8795, -90.6203, 0.07 ) }
    dend_63 { pt3dadd( 33.8912, -38.5547, -99.6598, 0.07 ) }
    dend_63 { pt3dadd( 41.1361, -39.7647, -108.896, 0.07 ) }
    dend_63 { pt3dadd( 47.464, -41.8994, -118.626, 0.07 ) }
    dend_63 { pt3dadd( 52.8894, -46.7959, -127.952, 0.07 ) }
    dend_63 { pt3dadd( 60.7502, -50.6088, -135.901, 0.07 ) }
    dend_63 { pt3dadd( 68.9732, -54.8291, -143.26, 0.07 ) }
    dend_63 { pt3dadd( 77.0354, -60.3014, -149.986, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 73/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 26.4939, -36.8795, -90.6203, 0.07 ) }
    dend_58 { pt3dadd( 31.3645, -37.3463, -97.4945, 0.07 ) }
    dend_58 { pt3dadd( 37.3207, -37.2572, -103.478, 0.07 ) }
    dend_58 { pt3dadd( 44.4585, -38.0548, -107.907, 0.07 ) }
    dend_58 { pt3dadd( 52.1727, -37.9579, -111.346, 0.07 ) }
    dend_58 { pt3dadd( 59.6674, -37.3613, -115.214, 0.07 ) }
    dend_58 { pt3dadd( 67.6753, -35.6124, -117.413, 0.07 ) }
    dend_58 { pt3dadd( 75.8745, -34.3093, -119.11, 0.07 ) }
    dend_58 { pt3dadd( 83.8371, -33.0951, -121.732, 0.07 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 82/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 42.941, -33.1988, -157.42, 0.07 ) }
    dend_50 { pt3dadd( 47.0994, -33.2477, -168.06, 0.07 ) }
    dend_50 { pt3dadd( 50.6438, -34.0752, -178.888, 0.07 ) }
    dend_50 { pt3dadd( 53.4481, -34.5933, -189.95, 0.07 ) }
    dend_50 { pt3dadd( 53.9925, -35.2931, -201.341, 0.07 ) }
    dend_50 { pt3dadd( 55.4477, -37.4025, -212.49, 0.07 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 88/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 42.941, -33.1988, -157.42, 0.07 ) }
    dend_49 { pt3dadd( 46.8856, -33.0465, -168.41, 0.07 ) }
    dend_49 { pt3dadd( 52.133, -34.7989, -178.698, 0.07 ) }
    dend_49 { pt3dadd( 58.0143, -37.5372, -188.424, 0.07 ) }
    dend_49 { pt3dadd( 63.9518, -38.7997, -198.4, 0.07 ) }
    dend_49 { pt3dadd( 69.4182, -38.5666, -208.72, 0.07 ) }
    dend_49 { pt3dadd( 73.5361, -39.4129, -219.614, 0.07 ) }
    dend_49 { pt3dadd( 76.3182, -39.1034, -230.952, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 172.591, -4.18985, 97.826, 0.29 ) }
    dend_39 { pt3dadd( 173.68, -3.90072, 99.5975, 0.29 ) }
    dend_39 { pt3dadd( 174.399, -3.73103, 100.515, 0.52 ) }
    dend_39 { pt3dadd( 174.986, -3.5598, 101.133, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_39 { pt3dadd( 175.632, -3.34017, 101.779, 0.52 ) }
    dend_39 { pt3dadd( 176.078, -3.18514, 102.225, 0.52 ) }
    dend_39 { pt3dadd( 176.461, -3.03448, 102.621, 0.52 ) }
    dend_39 { pt3dadd( 177.542, -2.59697, 103.671, 0.15 ) }
    dend_39 { pt3dadd( 178.629, -2.10482, 104.813, 0.15 ) }
    dend_39 { pt3dadd( 179.274, -1.82046, 105.454, 0.15 ) }
    dend_39 { pt3dadd( 179.768, -1.61747, 105.926, 0.59 ) }
    dend_39 { pt3dadd( 180.635, -1.28763, 106.777, 0.59 ) }
    dend_39 { pt3dadd( 181.109, -1.10489, 107.281, 0.59 ) }
    dend_39 { pt3dadd( 181.885, -0.768392, 108.199, 0.81 ) }
    dend_39 { pt3dadd( 182.509, -0.530172, 108.947, 0.15 ) }
    dend_39 { pt3dadd( 183.179, -0.30676, 109.715, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 172.591, -4.18985, 97.826, 0.15 ) }
    dend_38 { pt3dadd( 173.434, -2.67427, 97.6732, 0.15 ) }
    dend_38 { pt3dadd( 174.223, -1.27267, 97.5681, 0.15 ) }
    dend_38 { pt3dadd( 174.617, -0.580521, 97.5204, 0.52 ) }
    dend_38 { pt3dadd( 175.098, 0.21232, 97.463, 0.88 ) }
    dend_38 { pt3dadd( 175.454, 0.79746, 97.4166, 1.11 ) }
    dend_38 { pt3dadd( 176.604, 2.67964, 97.2574, 0.07 ) }
    dend_38 { pt3dadd( 177.297, 3.84292, 97.1594, 0.07 ) }
    dend_38 { pt3dadd( 177.764, 4.6488, 97.0723, 1.11 ) }
    dend_38 { pt3dadd( 178.673, 6.24409, 96.9, 0.15 ) }
    dend_38 { pt3dadd( 179.016, 6.87086, 96.8332, 0.15 ) }
    dend_38 { pt3dadd( 179.163, 7.15039, 96.8039, 0.29 ) }
    dend_38 { pt3dadd( 179.596, 8.01375, 96.7007, 0.15 ) }
    dend_38 { pt3dadd( 180.087, 8.99129, 96.5604, 0.74 ) }
    dend_38 { pt3dadd( 180.567, 9.96341, 96.4562, 0.07 ) }
    dend_38 { pt3dadd( 180.898, 10.6346, 96.4056, 0.07 ) }
    dend_38 { pt3dadd( 181.26, 11.3284, 96.3841, 0.07 ) }
    dend_38 { pt3dadd( 181.715, 12.1723, 96.3398, 0.74 ) }
    dend_38 { pt3dadd( 182.475, 13.5198, 96.2902, 0.07 ) }
    dend_38 { pt3dadd( 183.181, 14.7071, 96.308, 0.07 ) }
    dend_38 { pt3dadd( 183.725, 15.5742, 96.3688, 0.44 ) }
    dend_38 { pt3dadd( 184.753, 17.1414, 96.5322, 0.07 ) }
    dend_38 { pt3dadd( 185.433, 18.1694, 96.6533, 0.59 ) }
    dend_38 { pt3dadd( 186.13, 19.2094, 96.788, 1.11 ) }
    dend_38 { pt3dadd( 187.449, 21.1069, 97.0371, 0.15 ) }
    dend_38 { pt3dadd( 188.151, 22.073, 97.141, 0.15 ) }
    dend_38 { pt3dadd( 188.823, 22.9689, 97.2286, 0.96 ) }
    dend_38 { pt3dadd( 189.915, 24.3985, 97.3393, 0.07 ) }
    dend_38 { pt3dadd( 190.271, 24.8719, 97.3645, 0.22 ) }
    dend_38 { pt3dadd( 190.862, 25.6359, 97.3327, 0.07 ) }
    dend_38 { pt3dadd( 191.403, 26.3193, 97.2437, 0.22 ) }
    dend_38 { pt3dadd( 192.263, 27.3783, 97.0871, 0.07 ) }
    dend_38 { pt3dadd( 192.633, 27.8113, 97.0279, 0.22 ) }
    dend_38 { pt3dadd( 193.645, 28.9259, 96.895, 0.07 ) }
    dend_38 { pt3dadd( 194.364, 29.6724, 96.819, 0.96 ) }
    dend_38 { pt3dadd( 195.532, 30.8171, 96.7145, 0.07 ) }
    dend_38 { pt3dadd( 196.46, 31.6513, 96.6454, 0.07 ) }
    dend_38 { pt3dadd( 197.092, 32.1886, 96.602, 0.52 ) }
    dend_38 { pt3dadd( 197.614, 32.6115, 96.5542, 0.29 ) }
    dend_38 { pt3dadd( 198.929, 33.6176, 96.3849, 0.15 ) }
    dend_38 { pt3dadd( 199.719, 34.2123, 96.254, 0.59 ) }
    dend_38 { pt3dadd( 201.362, 35.3388, 95.9524, 0.07 ) }
    dend_38 { pt3dadd( 202.363, 35.9736, 95.7486, 0.07 ) }
    dend_38 { pt3dadd( 203.23, 36.4876, 95.5632, 0.44 ) }
    dend_38 { pt3dadd( 205.35, 37.7305, 95.0887, 0.07 ) }
    dend_38 { pt3dadd( 205.887, 38.0339, 94.9609, 0.22 ) }
    dend_38 { pt3dadd( 207.724, 39.0203, 94.5168, 0.07 ) }
    dend_38 { pt3dadd( 208.527, 39.4132, 94.3253, 0.29 ) }
    dend_38 { pt3dadd( 209.317, 39.7604, 94.1587, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_85 (entry count 61/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -13.9911, -82.7755, -8.82812, 0.07 ) }
    dend_89 { pt3dadd( -17.993, -93.0397, -8.49927, 0.07 ) }
    dend_89 { pt3dadd( -22.9531, -102.723, -7.16601, 0.07 ) }
    dend_89 { pt3dadd( -26.848, -113.015, -6.52887, 0.07 ) }
    dend_89 { pt3dadd( -29.7588, -123.653, -7.51313, 0.07 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 66/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -13.9911, -82.7755, -8.82812, 0.81 ) }
    dend_86 { pt3dadd( -17.7342, -93.0925, -8.03396, 0.07 ) }
    dend_86 { pt3dadd( -22.8238, -102.775, -7.66405, 0.07 ) }
    dend_86 { pt3dadd( -28.5968, -112.031, -7.57698, 0.07 ) }
    dend_86 { pt3dadd( -33.0454, -122.0, -8.78799, 0.07 ) }
    dend_86 { pt3dadd( -34.7516, -132.952, -8.95441, 0.07 ) }
    dend_86 { pt3dadd( -37.1291, -143.703, -7.99142, 0.07 ) }
    // Section: dend_84, id: dend_84, parent: dend_68 (entry count 73/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 10.6736, -78.6584, -8.99695, 0.22 ) }
    dend_84 { pt3dadd( 15.2463, -87.2371, -8.95846, 0.22 ) }
    dend_84 { pt3dadd( 19.2354, -96.1256, -8.90806, 0.22 ) }
    dend_84 { pt3dadd( 21.8502, -105.543, -9.28291, 0.22 ) }
    dend_84 { pt3dadd( 23.716, -115.15, -9.58176, 0.22 ) }
    dend_84 { pt3dadd( 27.3956, -124.165, -10.1987, 0.22 ) }
    dend_84 { pt3dadd( 31.9113, -132.776, -10.3766, 0.22 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 80/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 10.6736, -78.6584, -8.99695, 0.07 ) }
    dend_69 { pt3dadd( 16.1962, -89.5661, -8.25347, 0.22 ) }
    dend_69 { pt3dadd( 21.8313, -100.145, -5.93184, 0.22 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 83/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 77.0354, -60.3014, -149.986, 0.07 ) }
    dend_65 { pt3dadd( 84.0771, -63.7737, -158.186, 0.07 ) }
    dend_65 { pt3dadd( 89.1008, -68.5095, -167.248, 0.07 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 86/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 77.0354, -60.3014, -149.986, 0.07 ) }
    dend_64 { pt3dadd( 83.5874, -63.763, -157.412, 0.07 ) }
    dend_64 { pt3dadd( 90.1869, -68.7831, -163.884, 0.07 ) }
    dend_64 { pt3dadd( 97.9947, -73.6713, -168.929, 0.07 ) }
    dend_64 { pt3dadd( 104.445, -78.814, -175.462, 0.07 ) }
    dend_64 { pt3dadd( 110.094, -84.4208, -182.38, 0.07 ) }
    dend_64 { pt3dadd( 115.336, -90.9078, -188.891, 0.07 ) }
    dend_64 { pt3dadd( 121.175, -97.7204, -194.501, 0.07 ) }
    dend_64 { pt3dadd( 126.146, -105.408, -199.909, 0.07 ) }
    dend_64 { pt3dadd( 130.362, -113.093, -205.957, 0.07 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 83.8371, -33.0951, -121.732, 0.07 ) }
    dend_62 { pt3dadd( 95.3442, -34.891, -124.722, 0.07 ) }
    dend_62 { pt3dadd( 107.148, -36.2064, -126.583, 0.07 ) }
    dend_62 { pt3dadd( 118.427, -38.3753, -130.151, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 0/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 83.8371, -33.0951, -121.732, 0.07 ) }
    dend_59 { pt3dadd( 95.1092, -29.511, -130.552, 0.07 ) }
    dend_59 { pt3dadd( 106.243, -26.737, -139.789, 0.07 ) }
    dend_59 { pt3dadd( 118.323, -26.6573, -148.128, 0.07 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 55.4477, -37.4025, -212.49, 0.07 ) }
    dend_54 { pt3dadd( 59.4139, -37.5128, -224.019, 0.07 ) }
    dend_54 { pt3dadd( 62.7305, -36.5915, -235.721, 0.07 ) }
    dend_54 { pt3dadd( 65.7143, -34.421, -247.366, 0.07 ) }
    dend_54 { pt3dadd( 67.7258, -30.7912, -258.89, 0.07 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 9/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 55.4477, -37.4025, -212.49, 0.07 ) }
    dend_51 { pt3dadd( 54.4458, -39.0345, -227.605, 0.07 ) }
    dend_51 { pt3dadd( 53.8125, -42.474, -242.471, 0.07 ) }
    dend_51 { pt3dadd( 54.3003, -44.2449, -257.584, 0.07 ) }
    dend_51 { pt3dadd( 54.6872, -46.4452, -272.652, 0.07 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 14/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -37.1291, -143.703, -7.99142, 0.07 ) }
    dend_88 { pt3dadd( -41.9291, -156.848, -6.42027, 0.07 ) }
    dend_88 { pt3dadd( -45.368, -170.357, -4.1307, 0.07 ) }
    dend_88 { pt3dadd( -50.0984, -182.725, 0.481656, 0.07 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 18/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -37.1291, -143.703, -7.99142, 0.07 ) }
    dend_87 { pt3dadd( -39.3376, -148.835, -9.12689, 0.07 ) }
    dend_87 { pt3dadd( -41.2452, -154.005, -10.6121, 0.07 ) }
    dend_87 { pt3dadd( -42.6232, -159.001, -12.9794, 0.07 ) }
    // Section: dend_75, id: dend_75, parent: dend_69 (entry count 22/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 21.8313, -100.145, -5.93184, 0.07 ) }
    dend_75 { pt3dadd( 27.7576, -110.75, -5.15112, 0.07 ) }
    dend_75 { pt3dadd( 31.9563, -122.196, -4.18802, 0.07 ) }
    dend_75 { pt3dadd( 37.1552, -133.24, -3.94111, 0.07 ) }
    dend_75 { pt3dadd( 41.566, -144.606, -5.02764, 0.07 ) }
    dend_75 { pt3dadd( 47.5774, -155.194, -4.83273, 0.07 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 28/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 21.8313, -100.145, -5.93184, 0.81 ) }
    dend_70 { pt3dadd( 25.6405, -107.944, -4.49234, 0.07 ) }
    dend_70 { pt3dadd( 29.2156, -115.941, -3.49641, 0.07 ) }
    dend_70 { pt3dadd( 31.9306, -124.359, -3.141, 0.07 ) }
    dend_70 { pt3dadd( 33.8995, -132.991, -2.72867, 0.07 ) }
    dend_70 { pt3dadd( 36.3374, -141.4, -4.12891, 0.07 ) }
    dend_70 { pt3dadd( 40.4759, -149.172, -4.57207, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 35/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 118.323, -26.6573, -148.128, 0.07 ) }
    dend_61 { pt3dadd( 127.118, -25.961, -153.142, 0.07 ) }
    dend_61 { pt3dadd( 135.983, -24.5032, -157.897, 0.07 ) }
    dend_61 { pt3dadd( 145.193, -22.5884, -161.778, 0.07 ) }
    dend_61 { pt3dadd( 153.975, -19.5207, -165.996, 0.07 ) }
    dend_61 { pt3dadd( 163.191, -15.5775, -168.137, 0.07 ) }
    dend_61 { pt3dadd( 171.93, -10.7015, -170.551, 0.07 ) }
    dend_61 { pt3dadd( 180.737, -5.69155, -172.409, 0.07 ) }
    dend_61 { pt3dadd( 189.037, -0.171731, -175.11, 0.07 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 44/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 118.323, -26.6573, -148.128, 0.07 ) }
    dend_60 { pt3dadd( 124.047, -25.1801, -152.96, 0.07 ) }
    dend_60 { pt3dadd( 129.408, -24.3095, -158.298, 0.07 ) }
    dend_60 { pt3dadd( 135.568, -23.5058, -162.715, 0.07 ) }
    dend_60 { pt3dadd( 142.319, -22.7673, -166.193, 0.07 ) }
    dend_60 { pt3dadd( 148.767, -21.0356, -169.942, 0.07 ) }
    dend_60 { pt3dadd( 155.348, -18.4003, -172.949, 0.07 ) }
    dend_60 { pt3dadd( 162.253, -15.782, -175.169, 0.07 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 67.7258, -30.7912, -258.89, 0.07 ) }
    dend_56 { pt3dadd( 67.1568, -28.411, -269.208, 0.07 ) }
    dend_56 { pt3dadd( 66.7025, -24.384, -279.058, 0.07 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 55/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 67.7258, -30.7912, -258.89, 0.07 ) }
    dend_55 { pt3dadd( 72.8185, -30.6202, -268.809, 0.07 ) }
    dend_55 { pt3dadd( 78.4689, -32.3584, -278.257, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 54.6872, -46.4452, -272.652, 0.07 ) }
    dend_53 { pt3dadd( 54.733, -47.4635, -283.77, 0.07 ) }
    dend_53 { pt3dadd( 55.8271, -48.3959, -294.832, 0.07 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 61/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 54.6872, -46.4452, -272.652, 0.07 ) }
    dend_52 { pt3dadd( 54.2665, -49.3881, -284.776, 0.07 ) }
    dend_52 { pt3dadd( 50.6496, -53.2007, -296.195, 0.07 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 64/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 47.5774, -155.194, -4.83273, 0.07 ) }
    dend_77 { pt3dadd( 52.2795, -167.025, -3.58245, 0.07 ) }
    dend_77 { pt3dadd( 59.2016, -177.658, -2.66092, 0.07 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 67/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 47.5774, -155.194, -4.83273, 0.07 ) }
    dend_76 { pt3dadd( 51.3773, -162.832, -5.5513, 0.07 ) }
    dend_76 { pt3dadd( 54.9459, -170.518, -4.38928, 0.07 ) }
    dend_76 { pt3dadd( 60.2917, -176.906, -2.90235, 0.07 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 71/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 40.4759, -149.172, -4.57207, 0.07 ) }
    dend_74 { pt3dadd( 44.0293, -158.465, -4.41273, 0.07 ) }
    dend_74 { pt3dadd( 47.4816, -167.523, -6.66003, 0.07 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 74/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 40.4759, -149.172, -4.57207, 0.07 ) }
    dend_71 { pt3dadd( 46.3162, -164.236, -4.20396, 0.07 ) }
    dend_71 { pt3dadd( 51.0048, -179.674, -3.02628, 0.07 ) }
    dend_71 { pt3dadd( 52.9155, -195.771, -2.51434, 0.07 ) }
    dend_71 { pt3dadd( 51.6025, -211.912, -3.08329, 0.07 ) }
    dend_71 { pt3dadd( 47.1088, -227.356, -4.15453, 0.07 ) }
    dend_71 { pt3dadd( 44.1078, -243.2, -5.33227, 0.07 ) }
    dend_71 { pt3dadd( 40.3608, -258.449, -9.02377, 0.07 ) }
    dend_71 { pt3dadd( 33.9733, -272.394, -13.6114, 0.07 ) }
    // Section: dend_81, id: dend_81, parent: dend_77 (entry count 83/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 59.2016, -177.658, -2.66092, 0.07 ) }
    dend_81 { pt3dadd( 63.7733, -185.985, -2.0227, 0.07 ) }
    dend_81 { pt3dadd( 68.2283, -194.419, -2.09271, 0.07 ) }
    dend_81 { pt3dadd( 73.3682, -202.411, -2.65019, 0.07 ) }
    dend_81 { pt3dadd( 78.9475, -210.074, -2.32641, 0.07 ) }
    dend_81 { pt3dadd( 84.5572, -217.534, -0.834554, 0.07 ) }
    dend_81 { pt3dadd( 90.2197, -225.0, 0.434516, 0.07 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 90/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 59.2016, -177.658, -2.66092, 0.07 ) }
    dend_78 { pt3dadd( 62.4546, -184.186, -1.83672, 0.07 ) }
    dend_78 { pt3dadd( 65.8853, -190.61, -0.983151, 0.07 ) }
    dend_78 { pt3dadd( 69.4765, -197.012, -0.888863, 0.07 ) }
    dend_78 { pt3dadd( 71.9481, -203.964, -1.02602, 0.07 ) }
    dend_78 { pt3dadd( 74.636, -210.814, -1.56891, 0.07 ) }
    dend_78 { pt3dadd( 77.5029, -217.555, -2.41353, 0.07 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 33.9733, -272.394, -13.6114, 0.07 ) }
    dend_73 { pt3dadd( 33.421, -282.534, -14.4345, 0.07 ) }
    dend_73 { pt3dadd( 30.7549, -292.254, -15.5067, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 0/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 33.9733, -272.394, -13.6114, 0.07 ) }
    dend_72 { pt3dadd( 33.2339, -285.919, -14.519, 0.07 ) }
    dend_72 { pt3dadd( 31.6622, -299.025, -17.5762, 0.07 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 3/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 90.2197, -225.0, 0.434516, 0.07 ) }
    dend_83 { pt3dadd( 97.6706, -227.446, -1.61005, 0.07 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 5/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 90.2197, -225.0, 0.434516, 0.07 ) }
    dend_82 { pt3dadd( 92.8033, -232.795, 1.20758, 0.07 ) }
    dend_82 { pt3dadd( 94.204, -240.952, 1.12912, 0.07 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 8/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 77.5029, -217.555, -2.41353, 0.07 ) }
    dend_80 { pt3dadd( 86.2822, -228.944, -1.88615, 0.07 ) }
    dend_80 { pt3dadd( 94.5453, -240.763, -2.17853, 0.07 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 11/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 77.5029, -217.555, -2.41353, 0.07 ) }
    dend_79 { pt3dadd( 77.382, -226.754, -6.06932, 0.07 ) }
    dend_79 { pt3dadd( 78.2034, -235.017, -11.3787, 0.07 ) }
    dend_79 { pt3dadd( 78.6298, -243.9, -15.7042, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_94 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_81 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_11 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_95 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_44 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_100 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_99 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_97 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_96 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_93 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_35 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_8 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_90 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_48 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_92 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_91 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_63 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_58 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_50 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_49 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_38 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_89 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_86 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_84 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_64 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_59 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_54 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_51 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_88 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_75 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_70 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_61 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_60 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_71 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_81 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_78 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_43 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_94 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_98 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_67 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_68 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_85 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_32 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_29 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_69 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_57 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_2 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_3 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_87 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_74 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_77 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_76 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_23 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_37 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_40 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_62 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_39 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_83 OneSecGrp_SectionRef_101.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_80 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_82 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_79 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_73 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_56 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_55 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_72 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_53 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_52 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_90 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_85 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_71 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 7
    dend_11 nseg = 3
    dend_95 nseg = 3
    dend_44 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 3
    dend_12 nseg = 7
    dend_1 nseg = 5
    dend_100 nseg = 7
    dend_99 nseg = 5
    dend_97 nseg = 5
    dend_96 nseg = 5
    dend_93 nseg = 3
    dend_35 nseg = 7
    dend_28 nseg = 5
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_8 nseg = 5
    dend_7 nseg = 7
    dend_5 nseg = 5
    dend_47 nseg = 3
    dend_41 nseg = 3
    dend_21 nseg = 5
    dend_15 nseg = 3
    dend_10 nseg = 3
    dend_90 nseg = 3
    dend_48 nseg = 5
    dend_92 nseg = 3
    dend_91 nseg = 5
    dend_63 nseg = 5
    dend_58 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_38 nseg = 3
    dend_89 nseg = 3
    dend_86 nseg = 3
    dend_84 nseg = 3
    dend_64 nseg = 5
    dend_59 nseg = 3
    dend_54 nseg = 3
    dend_51 nseg = 3
    dend_88 nseg = 3
    dend_75 nseg = 3
    dend_70 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 3
    dend_71 nseg = 7
    dend_81 nseg = 3
    dend_78 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_LBC_640a1cef1d_0_0


