// Cell: cNAC187_L4_BP_29d7636cbc_0_0
/*
{
  "id" : "cNAC187_L4_BP_29d7636cbc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -5.87753, -1.26548, 1.33", "2.32997, -8.9791, -1.83771, 1.33", "3.51323, -14.1214, -2.78646, 0.66", "4.42935, -18.1028, -3.521, 0.66", "5.40555, -22.3453, -4.30373, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.40555, -22.3453, -4.30373, 0.66", "6.13191, -35.3288, -1.08244, 0.66", "7.19281, -54.6137, 3.72752, 0.66", "8.4865, -78.1534, 9.78192, 0.66", "9.56267, -96.3196, 14.4747, 0.66", "10.2003, -106.86, 17.1887, 0.66", "10.399, -110.358, 18.083, 0.66", "10.6859, -115.103, 19.3296, 0.66", "10.8801, -119.542, 20.5297, 0.66", "11.0986, -124.664, 21.8216, 0.66", "11.2163, -127.434, 22.1778, 0.66", "11.3127, -130.895, 22.3128, 0.66", "11.48, -136.118, 21.9231, 0.66", "11.6465, -142.987, 21.0882, 0.66", "11.7758, -145.979, 20.6973, 0.66", "12.4868, -160.025, 18.731, 0.66", "12.7315, -163.34, 18.2109, 0.66", "13.6641, -173.577, 16.3481, 0.66", "14.1037, -177.899, 15.5243, 0.66", "15.0515, -185.835, 14.1085, 0.66", "15.6127, -190.38, 13.5921, 0.66", "16.1823, -194.799, 13.5301, 0.66", "16.7397, -199.062, 13.6201, 0.66", "17.1213, -203.175, 13.7218, 0.66", "17.4533, -207.532, 13.6635, 0.66", "17.7282, -214.268, 13.4841, 0.66", "17.9427, -218.361, 13.5628, 0.66", "18.1366, -223.325, 13.7302, 0.66", "18.3759, -230.046, 13.9255, 0.66", "18.4823, -234.339, 13.8549, 0.66", "18.6535, -240.115, 13.5083, 0.66", "18.983, -245.554, 13.1286, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.40555, -22.3453, -4.30373, 0.66", "8.70615, -25.372, -3.78368, 0.66", "16.294, -32.3302, -2.58814, 0.33", "33.6629, -48.2577, 0.148497, 0.33", "34.3182, -48.8587, 0.251753, 0.66", "41.3274, -55.2862, 1.35612, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.983, -245.554, 13.1286, 0.66", "20.992, -248.019, 14.5823, 0.66", "22.0261, -249.427, 15.6017, 0.66", "23.4112, -251.611, 17.799, 0.66", "24.2219, -252.917, 19.3275, 0.66", "25.6799, -255.321, 22.4269, 0.66", "26.8009, -257.069, 24.8016, 0.66", "27.8103, -258.665, 27.2521, 0.66", "30.0127, -261.744, 32.5062, 0.66", "31.2851, -263.348, 35.4835, 0.66", "32.7493, -265.204, 39.0068, 0.33", "33.3682, -265.931, 40.3724, 0.33", "33.6031, -266.159, 40.8282, 0.66", "35.116, -267.355, 43.4067, 0.33", "35.5168, -267.576, 43.8198, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "18.983, -245.554, 13.1286, 0.66", "19.4973, -250.424, 14.7266, 0.66", "20.1471, -256.718, 16.8213, 0.66", "21.6592, -269.301, 20.8612, 0.66", "22.2754, -274.785, 22.5528, 0.66", "23.1213, -281.458, 24.6788, 0.66", "23.9489, -288.239, 26.6373, 0.66", "24.4238, -292.051, 27.6175, 0.66", "24.9339, -297.332, 28.7343, 0.66", "25.88, -307.489, 30.4951, 0.66", "26.4498, -313.262, 31.2354, 0.66", "27.0744, -320.035, 31.9887, 0.66", "27.5036, -325.772, 32.2534, 0.66", "27.6599, -328.884, 32.3528, 0.66", "28.0278, -339.347, 32.5102, 0.66", "28.2157, -344.763, 32.4266, 0.66", "28.3563, -352.272, 32.2314, 0.66", "28.5854, -358.284, 32.3286, 0.66", "28.6914, -360.952, 32.3429, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "28.6914, -360.952, 32.3429, 0.66", "29.1424, -363.983, 32.6658, 0.66", "29.5351, -368.921, 33.6244, 0.66", "29.8447, -374.192, 34.7902, 0.66", "29.9561, -377.655, 35.5589, 0.66", "30.1037, -382.441, 36.5128, 0.66", "30.2946, -390.91, 37.9178, 0.66", "30.3004, -396.708, 38.7461, 0.66", "30.2286, -400.689, 39.3407, 0.66", "30.211, -404.851, 39.8681, 0.66", "30.2414, -409.518, 40.4202, 0.66", "30.3047, -412.709, 40.773, 0.66", "30.5277, -417.085, 41.1676, 0.66", "30.8231, -421.106, 41.5267, 0.66", "31.4865, -430.563, 42.5854, 0.66", "31.8018, -434.32, 43.0824, 0.66", "32.5154, -443.755, 44.2405, 0.66", "32.7958, -447.56, 44.5712, 0.66", "33.0415, -451.226, 44.7489, 0.66", "33.2627, -454.525, 44.7722, 0.66", "33.5682, -459.928, 44.7294, 0.66", "33.7767, -464.553, 44.6305, 0.66", "34.1915, -473.443, 44.1302, 0.66", "34.4957, -477.93, 43.9095, 0.66", "34.7498, -481.421, 43.7611, 0.66", "35.1305, -486.118, 43.6025, 0.66", "36.5984, -503.786, 42.9745, 0.66", "37.2484, -510.273, 42.6573, 0.66", "39.0781, -527.297, 41.6172, 0.66", "39.8099, -533.728, 41.151, 0.66", "40.5489, -540.056, 40.7447, 0.66", "41.0939, -544.455, 40.4988, 0.66", "41.9154, -550.474, 40.1472, 0.66", "42.6983, -557.174, 39.7495, 0.66", "43.5497, -564.478, 39.044, 0.66", "43.9975, -568.56, 38.6512, 0.66", "44.295, -571.407, 38.4594, 0.66", "45.2799, -582.456, 38.2999, 0.66", "45.5816, -585.901, 38.2588, 0.66", "46.0687, -591.553, 37.9377, 0.66", "46.5878, -597.203, 37.5336, 0.66", "47.0541, -601.579, 37.2769, 0.66", "48.1962, -612.292, 37.0885, 0.66", "49.5859, -624.592, 37.2128, 0.66", "50.5957, -632.963, 37.2714, 0.66", "51.111, -637.169, 37.2217, 0.66", "53.0973, -652.556, 36.7635, 0.66", "54.3257, -662.428, 36.0767, 0.66", "54.6994, -665.311, 35.8196, 0.66", "55.35, -669.983, 35.3036, 0.66", "56.3506, -676.829, 34.3471, 0.66", "56.7463, -679.787, 33.8139, 0.66", "57.7564, -687.706, 32.0333, 0.66", "59.9997, -704.216, 28.0825, 0.66", "61.1506, -712.736, 26.3207, 0.66", "61.594, -715.918, 25.7813, 0.33", "61.904, -718.043, 25.505, 1.33", "62.7205, -723.083, 25.1799, 0.66", "63.8709, -729.16, 25.2125, 0.66", "64.7585, -733.472, 25.393, 0.66", "65.6896, -737.838, 25.7246, 0.66", "66.5414, -741.406, 25.9992, 0.66", "70.0152, -756.069, 27.5179, 0.66", "70.4801, -758.139, 27.7808, 0.33", "71.0898, -761.098, 28.1367, 1.33", "71.6962, -764.035, 28.4228, 0.66", "72.1446, -766.343, 28.6315, 0.33", "73.3046, -772.721, 29.224, 0.66", "73.5799, -776.031, 29.7864, 0.66", "73.7949, -780.412, 30.7089, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "28.6914, -360.952, 32.3429, 0.66", "25.2029, -371.452, 31.8685, 0.66", "22.3512, -380.365, 31.363, 0.66", "20.3796, -387.054, 31.4323, 0.33", "17.6609, -396.464, 31.8877, 0.33", "17.2098, -398.001, 32.0383, 0.66", "15.8275, -402.988, 32.6565, 0.33", "14.8843, -406.623, 33.3223, 0.66", "12.9412, -415.232, 34.6831, 0.33", "12.6566, -416.594, 34.9397, 0.66", "10.7187, -425.81, 36.6494, 0.33", "9.91777, -430.581, 37.719, 0.33", "9.26433, -435.762, 39.0283, 0.66", "8.62032, -441.964, 40.7723, 0.33", "8.38438, -445.311, 41.6634, 0.33", "8.36444, -447.185, 42.2684, 0.66", "8.84428, -455.05, 45.9981, 0.33", "8.91433, -456.195, 46.6972, 0.66", "9.19037, -459.079, 48.7544, 0.33", "9.3025, -460.561, 49.8406, 0.33", "9.38023, -462.134, 50.8236, 0.66", "9.43807, -468.036, 53.8595, 0.33", "9.23424, -471.656, 55.1047, 0.33", "9.18183, -473.025, 55.4846, 0.66", "9.16382, -475.68, 55.9991, 0.33", "9.14552, -477.088, 56.1757, 0.66", "9.11654, -478.878, 56.2944, 0.33", "9.08162, -480.733, 56.2839, 0.66", "8.98321, -483.452, 56.3148, 0.33", "8.92661, -484.444, 56.3453, 0.66", "8.31266, -492.664, 56.7782, 0.33", "8.26183, -493.189, 56.8076, 0.66", "8.01517, -495.081, 56.921, 0.33", "7.85936, -496.067, 56.9828, 0.66", "7.50335, -498.751, 57.4189, 0.33", "7.37361, -499.98, 57.7022, 0.66", "7.21925, -502.174, 58.3169, 0.33", "7.13417, -503.727, 58.7746, 0.66", "7.0878, -505.504, 59.3484, 0.33", "6.99845, -513.77, 62.2958, 0.33", "7.01687, -516.182, 63.2787, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "73.7949, -780.412, 30.7089, 0.66", "74.8134, -785.32, 29.7256, 0.66", "75.3726, -787.864, 29.8109, 1.33", "75.8256, -790.053, 30.0724, 0.66", "76.3358, -792.807, 30.3269, 0.66", "77.425, -798.743, 31.1568, 0.33", "78.8048, -805.92, 32.3418, 0.66", "80.5805, -815.192, 34.4534, 0.66", "81.5386, -819.805, 35.6773, 0.66", "82.7155, -824.942, 36.9192, 0.33", "84.2686, -831.51, 38.2443, 0.33", "84.6824, -833.368, 38.4856, 0.66", "85.0938, -834.903, 38.3996, 0.33", "85.4409, -836.231, 38.1166, 0.66", "87.5187, -843.971, 36.109, 0.33", "88.425, -847.201, 35.2675, 0.66", "89.2485, -850.264, 34.3581, 0.33", "91.4006, -858.976, 32.157, 0.33", "92.6792, -864.081, 31.0786, 0.66", "95.0017, -873.327, 29.4888, 0.33", "96.0574, -877.692, 28.9669, 0.66", "97.1071, -882.001, 28.5567, 1.33", "99.4916, -891.84, 28.0177, 0.33", "100.598, -896.717, 28.0597, 0.33", "101.023, -898.636, 28.1243, 0.66", "101.995, -903.478, 28.4646, 0.33", "103.21, -909.979, 29.0314, 0.33", "103.668, -912.353, 29.3136, 1.33", "104.946, -919.173, 30.1205, 0.33", "105.286, -921.54, 30.4247, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "73.7949, -780.412, 30.7089, 0.66", "73.2312, -782.614, 28.0959, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "105.286, -921.54, 30.4247, 0.66", "103.503, -921.259, 31.2853, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "105.286, -921.54, 30.4247, 0.66", "105.629, -923.68, 30.1631, 0.66", "107.155, -933.208, 28.9981, 0.33", "107.64, -936.239, 28.6275, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "107.64, -936.239, 28.6275, 0.33", "113.48, -946.045, 34.9185, 0.33", "114.04, -947.0, 35.4572, 1.33", "115.64, -949.672, 36.8056, 0.33", "115.979, -950.227, 37.0128, 0.66", "117.641, -952.877, 37.7268, 0.33", "118.146, -953.682, 37.9435, 0.66", "118.567, -954.419, 37.7902, 0.33", "119.153, -955.339, 37.5513, 0.66", "121.322, -958.198, 36.5145, 0.33", "122.184, -959.231, 36.0588, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "107.64, -936.239, 28.6275, 0.33", "110.284, -952.527, 33.8951, 0.33", "111.726, -961.41, 36.7679, 0.33", "111.952, -962.806, 37.2194, 0.66", "113.44, -971.974, 40.1845, 0.33", "113.639, -973.196, 40.5798, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_BP_29d7636cbc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -5.87753, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.32997, -8.9791, -1.83771, 1.33 ) }
    dend_0 { pt3dadd( 3.51323, -14.1214, -2.78646, 0.66 ) }
    dend_0 { pt3dadd( 4.42935, -18.1028, -3.521, 0.66 ) }
    dend_0 { pt3dadd( 5.40555, -22.3453, -4.30373, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.40555, -22.3453, -4.30373, 0.66 ) }
    dend_2 { pt3dadd( 6.13191, -35.3288, -1.08244, 0.66 ) }
    dend_2 { pt3dadd( 7.19281, -54.6137, 3.72752, 0.66 ) }
    dend_2 { pt3dadd( 8.4865, -78.1534, 9.78192, 0.66 ) }
    dend_2 { pt3dadd( 9.56267, -96.3196, 14.4747, 0.66 ) }
    dend_2 { pt3dadd( 10.2003, -106.86, 17.1887, 0.66 ) }
    dend_2 { pt3dadd( 10.399, -110.358, 18.083, 0.66 ) }
    dend_2 { pt3dadd( 10.6859, -115.103, 19.3296, 0.66 ) }
    dend_2 { pt3dadd( 10.8801, -119.542, 20.5297, 0.66 ) }
    dend_2 { pt3dadd( 11.0986, -124.664, 21.8216, 0.66 ) }
    dend_2 { pt3dadd( 11.2163, -127.434, 22.1778, 0.66 ) }
    dend_2 { pt3dadd( 11.3127, -130.895, 22.3128, 0.66 ) }
    dend_2 { pt3dadd( 11.48, -136.118, 21.9231, 0.66 ) }
    dend_2 { pt3dadd( 11.6465, -142.987, 21.0882, 0.66 ) }
    dend_2 { pt3dadd( 11.7758, -145.979, 20.6973, 0.66 ) }
    dend_2 { pt3dadd( 12.4868, -160.025, 18.731, 0.66 ) }
    dend_2 { pt3dadd( 12.7315, -163.34, 18.2109, 0.66 ) }
    dend_2 { pt3dadd( 13.6641, -173.577, 16.3481, 0.66 ) }
    dend_2 { pt3dadd( 14.1037, -177.899, 15.5243, 0.66 ) }
    dend_2 { pt3dadd( 15.0515, -185.835, 14.1085, 0.66 ) }
    dend_2 { pt3dadd( 15.6127, -190.38, 13.5921, 0.66 ) }
    dend_2 { pt3dadd( 16.1823, -194.799, 13.5301, 0.66 ) }
    dend_2 { pt3dadd( 16.7397, -199.062, 13.6201, 0.66 ) }
    dend_2 { pt3dadd( 17.1213, -203.175, 13.7218, 0.66 ) }
    dend_2 { pt3dadd( 17.4533, -207.532, 13.6635, 0.66 ) }
    dend_2 { pt3dadd( 17.7282, -214.268, 13.4841, 0.66 ) }
    dend_2 { pt3dadd( 17.9427, -218.361, 13.5628, 0.66 ) }
    dend_2 { pt3dadd( 18.1366, -223.325, 13.7302, 0.66 ) }
    dend_2 { pt3dadd( 18.3759, -230.046, 13.9255, 0.66 ) }
    dend_2 { pt3dadd( 18.4823, -234.339, 13.8549, 0.66 ) }
    dend_2 { pt3dadd( 18.6535, -240.115, 13.5083, 0.66 ) }
    dend_2 { pt3dadd( 18.983, -245.554, 13.1286, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.40555, -22.3453, -4.30373, 0.66 ) }
    dend_1 { pt3dadd( 8.70615, -25.372, -3.78368, 0.66 ) }
    dend_1 { pt3dadd( 16.294, -32.3302, -2.58814, 0.33 ) }
    dend_1 { pt3dadd( 33.6629, -48.2577, 0.148497, 0.33 ) }
    dend_1 { pt3dadd( 34.3182, -48.8587, 0.251753, 0.66 ) }
    dend_1 { pt3dadd( 41.3274, -55.2862, 1.35612, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.983, -245.554, 13.1286, 0.66 ) }
    dend_12 { pt3dadd( 20.992, -248.019, 14.5823, 0.66 ) }
    dend_12 { pt3dadd( 22.0261, -249.427, 15.6017, 0.66 ) }
    dend_12 { pt3dadd( 23.4112, -251.611, 17.799, 0.66 ) }
    dend_12 { pt3dadd( 24.2219, -252.917, 19.3275, 0.66 ) }
    dend_12 { pt3dadd( 25.6799, -255.321, 22.4269, 0.66 ) }
    dend_12 { pt3dadd( 26.8009, -257.069, 24.8016, 0.66 ) }
    dend_12 { pt3dadd( 27.8103, -258.665, 27.2521, 0.66 ) }
    dend_12 { pt3dadd( 30.0127, -261.744, 32.5062, 0.66 ) }
    dend_12 { pt3dadd( 31.2851, -263.348, 35.4835, 0.66 ) }
    dend_12 { pt3dadd( 32.7493, -265.204, 39.0068, 0.33 ) }
    dend_12 { pt3dadd( 33.3682, -265.931, 40.3724, 0.33 ) }
    dend_12 { pt3dadd( 33.6031, -266.159, 40.8282, 0.66 ) }
    dend_12 { pt3dadd( 35.116, -267.355, 43.4067, 0.33 ) }
    dend_12 { pt3dadd( 35.5168, -267.576, 43.8198, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 18.983, -245.554, 13.1286, 0.66 ) }
    dend_3 { pt3dadd( 19.4973, -250.424, 14.7266, 0.66 ) }
    dend_3 { pt3dadd( 20.1471, -256.718, 16.8213, 0.66 ) }
    dend_3 { pt3dadd( 21.6592, -269.301, 20.8612, 0.66 ) }
    dend_3 { pt3dadd( 22.2754, -274.785, 22.5528, 0.66 ) }
    dend_3 { pt3dadd( 23.1213, -281.458, 24.6788, 0.66 ) }
    dend_3 { pt3dadd( 23.9489, -288.239, 26.6373, 0.66 ) }
    dend_3 { pt3dadd( 24.4238, -292.051, 27.6175, 0.66 ) }
    dend_3 { pt3dadd( 24.9339, -297.332, 28.7343, 0.66 ) }
    dend_3 { pt3dadd( 25.88, -307.489, 30.4951, 0.66 ) }
    dend_3 { pt3dadd( 26.4498, -313.262, 31.2354, 0.66 ) }
    dend_3 { pt3dadd( 27.0744, -320.035, 31.9887, 0.66 ) }
    dend_3 { pt3dadd( 27.5036, -325.772, 32.2534, 0.66 ) }
    dend_3 { pt3dadd( 27.6599, -328.884, 32.3528, 0.66 ) }
    dend_3 { pt3dadd( 28.0278, -339.347, 32.5102, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 28.2157, -344.763, 32.4266, 0.66 ) }
    dend_3 { pt3dadd( 28.3563, -352.272, 32.2314, 0.66 ) }
    dend_3 { pt3dadd( 28.5854, -358.284, 32.3286, 0.66 ) }
    dend_3 { pt3dadd( 28.6914, -360.952, 32.3429, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 28.6914, -360.952, 32.3429, 0.66 ) }
    dend_5 { pt3dadd( 29.1424, -363.983, 32.6658, 0.66 ) }
    dend_5 { pt3dadd( 29.5351, -368.921, 33.6244, 0.66 ) }
    dend_5 { pt3dadd( 29.8447, -374.192, 34.7902, 0.66 ) }
    dend_5 { pt3dadd( 29.9561, -377.655, 35.5589, 0.66 ) }
    dend_5 { pt3dadd( 30.1037, -382.441, 36.5128, 0.66 ) }
    dend_5 { pt3dadd( 30.2946, -390.91, 37.9178, 0.66 ) }
    dend_5 { pt3dadd( 30.3004, -396.708, 38.7461, 0.66 ) }
    dend_5 { pt3dadd( 30.2286, -400.689, 39.3407, 0.66 ) }
    dend_5 { pt3dadd( 30.211, -404.851, 39.8681, 0.66 ) }
    dend_5 { pt3dadd( 30.2414, -409.518, 40.4202, 0.66 ) }
    dend_5 { pt3dadd( 30.3047, -412.709, 40.773, 0.66 ) }
    dend_5 { pt3dadd( 30.5277, -417.085, 41.1676, 0.66 ) }
    dend_5 { pt3dadd( 30.8231, -421.106, 41.5267, 0.66 ) }
    dend_5 { pt3dadd( 31.4865, -430.563, 42.5854, 0.66 ) }
    dend_5 { pt3dadd( 31.8018, -434.32, 43.0824, 0.66 ) }
    dend_5 { pt3dadd( 32.5154, -443.755, 44.2405, 0.66 ) }
    dend_5 { pt3dadd( 32.7958, -447.56, 44.5712, 0.66 ) }
    dend_5 { pt3dadd( 33.0415, -451.226, 44.7489, 0.66 ) }
    dend_5 { pt3dadd( 33.2627, -454.525, 44.7722, 0.66 ) }
    dend_5 { pt3dadd( 33.5682, -459.928, 44.7294, 0.66 ) }
    dend_5 { pt3dadd( 33.7767, -464.553, 44.6305, 0.66 ) }
    dend_5 { pt3dadd( 34.1915, -473.443, 44.1302, 0.66 ) }
    dend_5 { pt3dadd( 34.4957, -477.93, 43.9095, 0.66 ) }
    dend_5 { pt3dadd( 34.7498, -481.421, 43.7611, 0.66 ) }
    dend_5 { pt3dadd( 35.1305, -486.118, 43.6025, 0.66 ) }
    dend_5 { pt3dadd( 36.5984, -503.786, 42.9745, 0.66 ) }
    dend_5 { pt3dadd( 37.2484, -510.273, 42.6573, 0.66 ) }
    dend_5 { pt3dadd( 39.0781, -527.297, 41.6172, 0.66 ) }
    dend_5 { pt3dadd( 39.8099, -533.728, 41.151, 0.66 ) }
    dend_5 { pt3dadd( 40.5489, -540.056, 40.7447, 0.66 ) }
    dend_5 { pt3dadd( 41.0939, -544.455, 40.4988, 0.66 ) }
    dend_5 { pt3dadd( 41.9154, -550.474, 40.1472, 0.66 ) }
    dend_5 { pt3dadd( 42.6983, -557.174, 39.7495, 0.66 ) }
    dend_5 { pt3dadd( 43.5497, -564.478, 39.044, 0.66 ) }
    dend_5 { pt3dadd( 43.9975, -568.56, 38.6512, 0.66 ) }
    dend_5 { pt3dadd( 44.295, -571.407, 38.4594, 0.66 ) }
    dend_5 { pt3dadd( 45.2799, -582.456, 38.2999, 0.66 ) }
    dend_5 { pt3dadd( 45.5816, -585.901, 38.2588, 0.66 ) }
    dend_5 { pt3dadd( 46.0687, -591.553, 37.9377, 0.66 ) }
    dend_5 { pt3dadd( 46.5878, -597.203, 37.5336, 0.66 ) }
    dend_5 { pt3dadd( 47.0541, -601.579, 37.2769, 0.66 ) }
    dend_5 { pt3dadd( 48.1962, -612.292, 37.0885, 0.66 ) }
    dend_5 { pt3dadd( 49.5859, -624.592, 37.2128, 0.66 ) }
    dend_5 { pt3dadd( 50.5957, -632.963, 37.2714, 0.66 ) }
    dend_5 { pt3dadd( 51.111, -637.169, 37.2217, 0.66 ) }
    dend_5 { pt3dadd( 53.0973, -652.556, 36.7635, 0.66 ) }
    dend_5 { pt3dadd( 54.3257, -662.428, 36.0767, 0.66 ) }
    dend_5 { pt3dadd( 54.6994, -665.311, 35.8196, 0.66 ) }
    dend_5 { pt3dadd( 55.35, -669.983, 35.3036, 0.66 ) }
    dend_5 { pt3dadd( 56.3506, -676.829, 34.3471, 0.66 ) }
    dend_5 { pt3dadd( 56.7463, -679.787, 33.8139, 0.66 ) }
    dend_5 { pt3dadd( 57.7564, -687.706, 32.0333, 0.66 ) }
    dend_5 { pt3dadd( 59.9997, -704.216, 28.0825, 0.66 ) }
    dend_5 { pt3dadd( 61.1506, -712.736, 26.3207, 0.66 ) }
    dend_5 { pt3dadd( 61.594, -715.918, 25.7813, 0.33 ) }
    dend_5 { pt3dadd( 61.904, -718.043, 25.505, 1.33 ) }
    dend_5 { pt3dadd( 62.7205, -723.083, 25.1799, 0.66 ) }
    dend_5 { pt3dadd( 63.8709, -729.16, 25.2125, 0.66 ) }
    dend_5 { pt3dadd( 64.7585, -733.472, 25.393, 0.66 ) }
    dend_5 { pt3dadd( 65.6896, -737.838, 25.7246, 0.66 ) }
    dend_5 { pt3dadd( 66.5414, -741.406, 25.9992, 0.66 ) }
    dend_5 { pt3dadd( 70.0152, -756.069, 27.5179, 0.66 ) }
    dend_5 { pt3dadd( 70.4801, -758.139, 27.7808, 0.33 ) }
    dend_5 { pt3dadd( 71.0898, -761.098, 28.1367, 1.33 ) }
    dend_5 { pt3dadd( 71.6962, -764.035, 28.4228, 0.66 ) }
    dend_5 { pt3dadd( 72.1446, -766.343, 28.6315, 0.33 ) }
    dend_5 { pt3dadd( 73.3046, -772.721, 29.224, 0.66 ) }
    dend_5 { pt3dadd( 73.5799, -776.031, 29.7864, 0.66 ) }
    dend_5 { pt3dadd( 73.7949, -780.412, 30.7089, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 28.6914, -360.952, 32.3429, 0.66 ) }
    dend_4 { pt3dadd( 25.2029, -371.452, 31.8685, 0.66 ) }
    dend_4 { pt3dadd( 22.3512, -380.365, 31.363, 0.66 ) }
    dend_4 { pt3dadd( 20.3796, -387.054, 31.4323, 0.33 ) }
    dend_4 { pt3dadd( 17.6609, -396.464, 31.8877, 0.33 ) }
    dend_4 { pt3dadd( 17.2098, -398.001, 32.0383, 0.66 ) }
    dend_4 { pt3dadd( 15.8275, -402.988, 32.6565, 0.33 ) }
    dend_4 { pt3dadd( 14.8843, -406.623, 33.3223, 0.66 ) }
    dend_4 { pt3dadd( 12.9412, -415.232, 34.6831, 0.33 ) }
    dend_4 { pt3dadd( 12.6566, -416.594, 34.9397, 0.66 ) }
    dend_4 { pt3dadd( 10.7187, -425.81, 36.6494, 0.33 ) }
    dend_4 { pt3dadd( 9.91777, -430.581, 37.719, 0.33 ) }
    dend_4 { pt3dadd( 9.26433, -435.762, 39.0283, 0.66 ) }
    dend_4 { pt3dadd( 8.62032, -441.964, 40.7723, 0.33 ) }
    dend_4 { pt3dadd( 8.38438, -445.311, 41.6634, 0.33 ) }
    dend_4 { pt3dadd( 8.36444, -447.185, 42.2684, 0.66 ) }
    dend_4 { pt3dadd( 8.84428, -455.05, 45.9981, 0.33 ) }
    dend_4 { pt3dadd( 8.91433, -456.195, 46.6972, 0.66 ) }
    dend_4 { pt3dadd( 9.19037, -459.079, 48.7544, 0.33 ) }
    dend_4 { pt3dadd( 9.3025, -460.561, 49.8406, 0.33 ) }
    dend_4 { pt3dadd( 9.38023, -462.134, 50.8236, 0.66 ) }
    dend_4 { pt3dadd( 9.43807, -468.036, 53.8595, 0.33 ) }
    dend_4 { pt3dadd( 9.23424, -471.656, 55.1047, 0.33 ) }
    dend_4 { pt3dadd( 9.18183, -473.025, 55.4846, 0.66 ) }
    dend_4 { pt3dadd( 9.16382, -475.68, 55.9991, 0.33 ) }
    dend_4 { pt3dadd( 9.14552, -477.088, 56.1757, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 9.11654, -478.878, 56.2944, 0.33 ) }
    dend_4 { pt3dadd( 9.08162, -480.733, 56.2839, 0.66 ) }
    dend_4 { pt3dadd( 8.98321, -483.452, 56.3148, 0.33 ) }
    dend_4 { pt3dadd( 8.92661, -484.444, 56.3453, 0.66 ) }
    dend_4 { pt3dadd( 8.31266, -492.664, 56.7782, 0.33 ) }
    dend_4 { pt3dadd( 8.26183, -493.189, 56.8076, 0.66 ) }
    dend_4 { pt3dadd( 8.01517, -495.081, 56.921, 0.33 ) }
    dend_4 { pt3dadd( 7.85936, -496.067, 56.9828, 0.66 ) }
    dend_4 { pt3dadd( 7.50335, -498.751, 57.4189, 0.33 ) }
    dend_4 { pt3dadd( 7.37361, -499.98, 57.7022, 0.66 ) }
    dend_4 { pt3dadd( 7.21925, -502.174, 58.3169, 0.33 ) }
    dend_4 { pt3dadd( 7.13417, -503.727, 58.7746, 0.66 ) }
    dend_4 { pt3dadd( 7.0878, -505.504, 59.3484, 0.33 ) }
    dend_4 { pt3dadd( 6.99845, -513.77, 62.2958, 0.33 ) }
    dend_4 { pt3dadd( 7.01687, -516.182, 63.2787, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 73.7949, -780.412, 30.7089, 0.66 ) }
    dend_7 { pt3dadd( 74.8134, -785.32, 29.7256, 0.66 ) }
    dend_7 { pt3dadd( 75.3726, -787.864, 29.8109, 1.33 ) }
    dend_7 { pt3dadd( 75.8256, -790.053, 30.0724, 0.66 ) }
    dend_7 { pt3dadd( 76.3358, -792.807, 30.3269, 0.66 ) }
    dend_7 { pt3dadd( 77.425, -798.743, 31.1568, 0.33 ) }
    dend_7 { pt3dadd( 78.8048, -805.92, 32.3418, 0.66 ) }
    dend_7 { pt3dadd( 80.5805, -815.192, 34.4534, 0.66 ) }
    dend_7 { pt3dadd( 81.5386, -819.805, 35.6773, 0.66 ) }
    dend_7 { pt3dadd( 82.7155, -824.942, 36.9192, 0.33 ) }
    dend_7 { pt3dadd( 84.2686, -831.51, 38.2443, 0.33 ) }
    dend_7 { pt3dadd( 84.6824, -833.368, 38.4856, 0.66 ) }
    dend_7 { pt3dadd( 85.0938, -834.903, 38.3996, 0.33 ) }
    dend_7 { pt3dadd( 85.4409, -836.231, 38.1166, 0.66 ) }
    dend_7 { pt3dadd( 87.5187, -843.971, 36.109, 0.33 ) }
    dend_7 { pt3dadd( 88.425, -847.201, 35.2675, 0.66 ) }
    dend_7 { pt3dadd( 89.2485, -850.264, 34.3581, 0.33 ) }
    dend_7 { pt3dadd( 91.4006, -858.976, 32.157, 0.33 ) }
    dend_7 { pt3dadd( 92.6792, -864.081, 31.0786, 0.66 ) }
    dend_7 { pt3dadd( 95.0017, -873.327, 29.4888, 0.33 ) }
    dend_7 { pt3dadd( 96.0574, -877.692, 28.9669, 0.66 ) }
    dend_7 { pt3dadd( 97.1071, -882.001, 28.5567, 1.33 ) }
    dend_7 { pt3dadd( 99.4916, -891.84, 28.0177, 0.33 ) }
    dend_7 { pt3dadd( 100.598, -896.717, 28.0597, 0.33 ) }
    dend_7 { pt3dadd( 101.023, -898.636, 28.1243, 0.66 ) }
    dend_7 { pt3dadd( 101.995, -903.478, 28.4646, 0.33 ) }
    dend_7 { pt3dadd( 103.21, -909.979, 29.0314, 0.33 ) }
    dend_7 { pt3dadd( 103.668, -912.353, 29.3136, 1.33 ) }
    dend_7 { pt3dadd( 104.946, -919.173, 30.1205, 0.33 ) }
    dend_7 { pt3dadd( 105.286, -921.54, 30.4247, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 73.7949, -780.412, 30.7089, 0.66 ) }
    dend_6 { pt3dadd( 73.2312, -782.614, 28.0959, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 105.286, -921.54, 30.4247, 0.66 ) }
    dend_11 { pt3dadd( 103.503, -921.259, 31.2853, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 105.286, -921.54, 30.4247, 0.66 ) }
    dend_8 { pt3dadd( 105.629, -923.68, 30.1631, 0.66 ) }
    dend_8 { pt3dadd( 107.155, -933.208, 28.9981, 0.33 ) }
    dend_8 { pt3dadd( 107.64, -936.239, 28.6275, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 107.64, -936.239, 28.6275, 0.33 ) }
    dend_10 { pt3dadd( 113.48, -946.045, 34.9185, 0.33 ) }
    dend_10 { pt3dadd( 114.04, -947.0, 35.4572, 1.33 ) }
    dend_10 { pt3dadd( 115.64, -949.672, 36.8056, 0.33 ) }
    dend_10 { pt3dadd( 115.979, -950.227, 37.0128, 0.66 ) }
    dend_10 { pt3dadd( 117.641, -952.877, 37.7268, 0.33 ) }
    dend_10 { pt3dadd( 118.146, -953.682, 37.9435, 0.66 ) }
    dend_10 { pt3dadd( 118.567, -954.419, 37.7902, 0.33 ) }
    dend_10 { pt3dadd( 119.153, -955.339, 37.5513, 0.66 ) }
    dend_10 { pt3dadd( 121.322, -958.198, 36.5145, 0.33 ) }
    dend_10 { pt3dadd( 122.184, -959.231, 36.0588, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 107.64, -936.239, 28.6275, 0.33 ) }
    dend_9 { pt3dadd( 110.284, -952.527, 33.8951, 0.33 ) }
    dend_9 { pt3dadd( 111.726, -961.41, 36.7679, 0.33 ) }
    dend_9 { pt3dadd( 111.952, -962.806, 37.2194, 0.66 ) }
    dend_9 { pt3dadd( 113.44, -971.974, 40.1845, 0.33 ) }
    dend_9 { pt3dadd( 113.639, -973.196, 40.5798, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 11
    dend_1 nseg = 3
    dend_12 nseg = 3
    dend_3 nseg = 5
    dend_5 nseg = 21
    dend_4 nseg = 9
    dend_7 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_BP_29d7636cbc_0_0


