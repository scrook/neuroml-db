// Cell: dNAC222_L5_LBC_99ab75ea98_0_0
/*
{
  "id" : "dNAC222_L5_LBC_99ab75ea98_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.291345, -11.9572, -0.745668, 2.83924", "0.329834, -10.8055, -0.67345, 4.66212", "0.368323, -9.65383, -0.601232, 6.28225", "0.406811, -8.50213, -0.529013, 7.64969", "0.4453, -7.35043, -0.456795, 8.93084", "0.483789, -6.19873, -0.384577, 10.0574", "0.522278, -5.04703, -0.312359, 10.8977", "0.560767, -3.89533, -0.24014, 11.5145", "0.599255, -2.74363, -0.167922, 11.78", "0.637744, -1.59192, -0.0957039, 11.9272", "0.676233, -0.440222, -0.0234857, 12.0017", "0.714722, 0.711479, 0.0487325, 11.8836", "0.75321, 1.86318, 0.120951, 11.6932", "0.791699, 3.01488, 0.193169, 11.3303", "0.830188, 4.16658, 0.265387, 10.9521", "0.868677, 5.31828, 0.337605, 9.94576", "0.907166, 6.46999, 0.409824, 8.97095", "0.945654, 7.62169, 0.482042, 7.75467", "0.984143, 8.77339, 0.55426, 5.92032", "1.02263, 9.92509, 0.626478, 4.15016", "1.06112, 11.0768, 0.698697, 2.55961" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.13709, 10.8469, -8.92677, 1.08", "-2.17411, 11.1644, -8.86829, 0.96", "-3.27649, 11.477, -8.7449, 1.44", "-3.969, 11.6698, -8.65302, 1.68", "-4.81624, 11.8833, -8.53669, 1.68", "-6.36834, 12.2456, -8.32809, 1.2", "-7.65815, 12.5154, -8.18913, 0.72", "-8.64005, 12.6942, -8.13455, 0.6", "-8.95267, 12.7514, -8.15536, 0.6", "-9.92612, 12.9555, -8.31494, 1.44", "-10.7362, 13.1629, -8.54391, 2.28", "-11.9177, 13.5608, -9.05984, 2.16", "-13.2608, 14.1878, -9.99097, 1.08", "-14.5683, 15.0558, -11.3049, 0.48", "-14.8738, 15.3609, -11.7405, 0.48", "-15.1841, 15.8644, -12.4241, 1.08", "-15.3698, 16.3746, -13.0774, 1.68", "-15.6313, 18.0508, -15.0682, 1.8", "-15.6452, 18.791, -15.8834, 1.44", "-15.6042, 19.6591, -16.7711, 0.72", "-15.594, 20.1931, -17.3028, 0.12", "-15.6285, 20.5321, -17.6009, 0.12", "-15.7008, 20.7737, -17.7656, 0.12", "-15.9563, 21.2163, -17.9014, 0.48", "-16.0507, 21.3378, -17.9302, 0.12", "-16.6563, 22.0126, -18.0603, 0.12", "-17.4459, 22.8654, -18.2336, 1.8", "-18.1196, 23.6035, -18.3872, 2.76", "-18.6537, 24.1974, -18.5051, 3.0", "-19.4351, 25.0949, -18.6712, 1.92", "-20.2368, 25.9962, -18.8203, 0.48", "-20.9028, 26.7454, -18.9111, 0.36", "-21.5964, 27.5375, -18.962, 0.84", "-22.2525, 28.3081, -18.9817, 0.6", "-22.7719, 28.9079, -18.9711, 0.36", "-23.5811, 29.8321, -18.9458, 0.36", "-24.1733, 30.4954, -18.9611, 1.56", "-25.1757, 31.5744, -19.0242, 3.49", "-25.4796, 31.8968, -19.0588, 3.85", "-26.2259, 32.6986, -19.1363, 4.33", "-27.0958, 33.6408, -19.2236, 3.25", "-28.5432, 35.2773, -19.3581, 0.12", "-29.0967, 35.9094, -19.4035, 0.12", "-29.3826, 36.2504, -19.4149, 0.12", "-30.2108, 37.3039, -19.4111, 0.96", "-30.4481, 37.6367, -19.3945, 1.08", "-31.1637, 38.6969, -19.2862, 0.72", "-31.7842, 39.6734, -19.3027, 0.12", "-32.513, 40.8068, -19.4509, 0.12", "-32.7913, 41.2374, -19.5479, 1.2", "-33.2286, 41.9185, -19.7626, 2.16", "-33.7112, 42.6502, -20.0591, 1.92", "-35.1868, 44.8293, -21.1037, 0.12", "-35.4484, 45.2136, -21.3221, 0.24", "-35.8865, 45.8613, -21.7198, 0.24", "-36.1999, 46.3253, -22.0175, 0.24", "-37.2094, 47.8276, -23.0206, 3.25", "-37.5235, 48.3047, -23.3314, 3.97", "-38.0838, 49.179, -23.7853, 3.97", "-38.4928, 49.8163, -24.1525, 3.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.302907, 11.4619, 4.01323, 1.8", "-0.0313093, 12.0915, 4.42167, 1.32", "-0.416129, 12.745, 5.13655, 0.72", "-0.635399, 13.1591, 5.70938, 0.48", "-0.843152, 13.6301, 6.46092, 0.48", "-1.00177, 14.1582, 7.37372, 0.6", "-1.08925, 14.9121, 8.77224, 1.68", "-1.02499, 15.551, 10.2045, 1.68", "-0.88072, 15.8645, 11.06, 1.56", "-0.600794, 16.1475, 11.9596, 1.44", "-0.165321, 16.3815, 12.8721, 0.72", "0.562486, 16.5896, 13.8868, 0.84", "0.826297, 16.6166, 14.1398, 0.84", "1.61896, 16.5882, 14.7661, 0.6", "2.21749, 16.5251, 15.3224, 0.84", "2.87487, 16.3909, 15.9863, 1.08", "3.51571, 16.2347, 16.7019, 1.08", "4.08886, 16.0925, 17.3983, 1.2", "5.09135, 15.874, 18.6506, 1.32", "6.84419, 15.6461, 20.9685, 1.32", "7.29689, 15.6448, 21.5898, 0.6", "7.62428, 15.6862, 22.0662, 0.96", "7.79319, 15.7391, 22.3342, 1.92", "8.17657, 15.9622, 22.9092, 2.16", "9.17626, 16.8416, 23.9761, 1.44", "9.73207, 17.4735, 24.2646, 0.84", "10.1788, 17.994, 24.4576, 0.84", "10.7292, 18.5908, 24.6649, 0.84", "11.1944, 19.2014, 24.821, 0.84", "11.4966, 19.7222, 24.901, 0.48", "11.9502, 20.5623, 24.8996, 0.48", "12.3794, 21.3198, 24.9014, 1.32", "12.4186, 21.3763, 24.9018, 1.56", "13.1088, 22.1599, 24.9198, 1.2", "13.4208, 22.53, 24.9425, 1.68", "18.661, 25.5942, 32.4829, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.672909, -11.7953, -3.94677, 2.52", "0.703943, -13.0043, -4.42462, 1.8", "0.718607, -14.6115, -5.05242, 1.92", "0.723875, -16.9697, -5.8807, 1.68", "0.720556, -19.3777, -6.64888, 2.64", "0.702412, -21.5022, -7.26968, 4.09", "0.660443, -24.3035, -8.02554, 3.49", "0.566024, -26.7377, -8.61684, 2.16", "0.452889, -28.2843, -8.93459, 1.56", "0.301778, -29.6737, -9.13578, 1.32", "0.119849, -30.9752, -9.24506, 1.2", "-0.0645799, -32.129, -9.29622, 1.44", "-0.428133, -34.0247, -9.32667, 1.92", "-0.762168, -35.502, -9.32452, 2.88", "-1.14214, -36.9667, -9.37694, 3.0", "-1.36233, -37.7194, -9.40783, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.06112, 11.0768, 0.698697, 0.617912", "1.56213, 26.0684, 0.698697, 0.617912", "2.06313, 41.0601, 0.698697, 0.617912" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-38.4928, 49.8163, -24.1525, 0.12", "-40.8898, 50.8584, -23.9226, 0.12", "-42.6419, 51.5664, -23.7531, 0.12", "-44.2681, 52.1635, -23.5931, 0.12", "-44.9135, 52.3996, -23.5065, 1.08", "-45.5439, 52.6314, -23.411, 0.12", "-46.9532, 53.1516, -23.1398, 0.12", "-47.7933, 53.4379, -22.9255, 1.8", "-48.8741, 53.7893, -22.5848, 2.76", "-50.707, 54.3992, -21.8889, 0.12", "-51.0381, 54.5237, -21.7523, 0.12", "-52.0056, 54.9241, -21.3321, 0.12", "-52.6179, 55.1974, -21.132, 0.12", "-53.592, 55.6171, -20.9662, 0.96", "-54.2098, 55.8686, -20.958, 0.12", "-55.4162, 56.3251, -21.1193, 0.12", "-56.0635, 56.5612, -21.2409, 0.96", "-58.2915, 57.3543, -21.7413, 0.12", "-59.3988, 57.7412, -21.9929, 0.12", "-60.0297, 57.9499, -22.13, 0.96", "-60.8296, 58.1975, -22.3363, 0.12", "-61.4574, 58.3903, -22.5061, 0.12", "-62.6296, 58.7428, -22.6655, 0.12", "-63.6672, 59.0257, -22.6203, 1.56", "-64.4842, 59.2348, -22.5394, 2.4", "-66.0365, 59.5759, -22.3006, 2.4", "-66.3974, 59.6485, -22.2118, 2.16", "-68.9369, 60.1263, -21.4113, 0.12", "-70.0082, 60.2963, -20.9045, 0.12", "-70.4706, 60.3722, -20.6455, 0.24", "-71.3475, 60.5275, -20.128, 0.24", "-72.5154, 60.7399, -19.4111, 1.92", "-72.9758, 60.8184, -19.1582, 2.16", "-75.1883, 61.2505, -18.1204, 0.12", "-76.3481, 61.4932, -17.5925, 0.12", "-77.4297, 61.7136, -17.1281, 0.96", "-77.9283, 61.8225, -16.9364, 0.12", "-79.1996, 62.1027, -16.5243, 0.12", "-79.9822, 62.2895, -16.2597, 0.84", "-80.6095, 62.4493, -16.0592, 0.12", "-82.0727, 62.8538, -15.5312, 0.12", "-83.0969, 63.1757, -15.1571, 1.8", "-83.582, 63.3482, -14.9911, 2.04", "-84.9939, 63.941, -14.5613, 1.92", "-86.0978, 64.44, -14.2712, 0.12", "-87.569, 65.1635, -13.9388, 0.12", "-89.1155, 65.9786, -13.6593, 2.52", "-90.5896, 66.7601, -13.5204, 0.12", "-92.8687, 67.9861, -13.488, 0.12", "-93.866, 68.5474, -13.538, 1.08", "-94.2756, 68.7787, -13.567, 0.12", "-95.611, 69.524, -13.6908, 0.12", "-97.4076, 70.4772, -13.8111, 0.12", "-98.0969, 70.7963, -13.825, 0.12", "-99.3815, 71.3093, -13.7701, 1.68", "-100.24, 71.6106, -13.692, 2.28", "-100.748, 71.7685, -13.6226, 2.4", "-102.571, 72.2882, -13.2716, 0.12", "-103.508, 72.5798, -13.0024, 0.12", "-104.287, 72.8336, -12.7852, 0.84", "-105.019, 73.1084, -12.5539, 0.12", "-105.763, 73.4651, -12.293, 0.12", "-106.524, 73.8815, -12.0194, 0.48", "-108.118, 74.837, -11.4351, 2.4", "-108.724, 75.2259, -11.1891, 2.64", "-110.564, 76.4588, -10.3637, 0.12", "-111.639, 77.2412, -9.8268, 0.12", "-112.588, 77.969, -9.32533, 1.08" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-38.4928, 49.8163, -24.1525, 0.72", "-39.2707, 51.4984, -24.984, 0.72", "-39.5909, 52.2251, -25.3563, 0.72", "-40.0023, 53.137, -25.8534, 0.72", "-40.378, 53.9533, -26.2926, 0.36", "-40.6835, 54.6221, -26.6589, 0.24", "-40.8251, 54.9521, -26.834, 0.24", "-41.1041, 55.7583, -27.2424, 0.6", "-41.3126, 56.4176, -27.5481, 0.84", "-41.5357, 57.1408, -27.811, 0.48", "-41.7047, 57.6504, -27.992, 0.24", "-41.9229, 58.296, -28.2196, 0.24", "-42.0522, 58.6782, -28.3484, 0.36", "-42.3632, 59.6338, -28.6408, 0.6", "-42.6704, 60.5846, -28.9155, 0.6", "-43.0143, 61.6161, -29.2752, 0.12", "-43.2281, 62.2307, -29.5331, 0.12", "-43.601, 63.2145, -29.998, 2.04", "-43.6989, 63.4745, -30.1276, 2.64", "-43.9447, 64.2047, -30.5019, 2.76", "-44.2391, 65.1557, -30.9603, 2.64", "-44.6669, 66.7377, -31.5623, 0.12", "-44.9141, 67.7329, -31.8824, 0.12", "-44.9984, 68.1133, -31.9793, 0.12", "-45.1652, 68.8802, -32.1484, 0.12", "-45.3796, 69.8237, -32.3241, 0.12", "-45.6244, 70.908, -32.4656, 1.68", "-45.7819, 71.6167, -32.5511, 2.64", "-45.8768, 72.0372, -32.6125, 2.64", "-46.0264, 72.663, -32.7121, 2.4", "-46.3982, 74.1493, -32.9627, 0.36", "-46.7851, 75.718, -33.3063, 0.36", "-46.8591, 76.0028, -33.3956, 0.36", "-46.9333, 76.2902, -33.4764, 0.12", "-47.3369, 77.8447, -33.8603, 0.12", "-47.5892, 78.7765, -34.0826, 1.92", "-47.961, 80.0224, -34.5083, 2.76", "-48.5912, 81.9523, -35.3094, 0.12", "-49.3399, 84.186, -36.3004, 0.12", "-49.7003, 85.18, -36.7803, 2.04", "-50.0282, 86.0162, -37.224, 2.76", "-51.2128, 88.8736, -38.7615, 0.12", "-51.5857, 89.727, -39.2177, 0.12", "-52.177, 90.9851, -39.9029, 0.12", "-52.7342, 92.0834, -40.585, 0.48", "-52.9852, 92.5434, -40.8685, 0.12", "-53.6722, 93.7829, -41.5557, 0.12", "-54.4285, 95.1392, -42.2108, 2.88", "-54.742, 95.6819, -42.4839, 3.12", "-55.3768, 96.7735, -43.0301, 2.16", "-56.1918, 98.2558, -43.7012, 0.12", "-56.6169, 99.0257, -44.0763, 0.12", "-56.8628, 99.4746, -44.313, 0.12", "-57.283, 100.255, -44.7319, 0.12", "-57.5754, 100.815, -45.027, 1.2", "-57.874, 101.413, -45.3118, 1.44", "-58.6856, 103.04, -46.0742, 0.12", "-58.9402, 103.525, -46.3453, 0.12", "-59.5221, 104.639, -47.0059, 0.12", "-59.8265, 105.242, -47.3745, 1.56", "-60.122, 105.811, -47.7154, 2.16", "-60.3262, 106.203, -47.9335, 2.28", "-61.3163, 108.152, -48.8053, 0.48", "-61.6342, 108.766, -49.0629, 0.48", "-61.7971, 109.088, -49.2024, 0.48", "-62.0201, 109.531, -49.4876, 0.24", "-62.2053, 109.898, -49.7591, 0.24", "-62.5929, 110.688, -50.4034, 1.8", "-62.7614, 111.045, -50.6972, 2.64", "-63.2533, 112.147, -51.6401, 2.88", "-64.1936, 114.475, -53.6902, 0.36", "-64.4512, 115.195, -54.3109, 0.36", "-64.6158, 115.717, -54.7401, 0.12", "-64.8544, 116.587, -55.3998, 1.56", "-64.9084, 116.808, -55.5513, 1.68", "-65.1411, 117.867, -56.171, 0.24", "-65.3584, 118.973, -56.7345, 0.24", "-65.6119, 120.314, -57.4382, 2.64", "-65.7515, 121.032, -57.8167, 3.0", "-66.201, 123.265, -59.0559, 0.24", "-66.4493, 124.438, -59.7155, 1.68", "-66.5683, 124.962, -60.0115, 1.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "18.661, 25.5942, 32.4829, 0.12", "25.3175, 31.3462, 44.7247, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "18.661, 25.5942, 32.4829, 0.12", "25.4353, 30.5308, 42.089, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.36233, -37.7194, -9.40783, 0.12", "-0.897029, -38.4651, -9.59173, 0.12", "-0.590967, -38.9896, -9.74992, 0.12", "-0.352768, -39.4384, -9.88968, 0.12", "0.125924, -40.4114, -10.1919, 1.56", "0.25355, -40.679, -10.2816, 1.56", "0.732825, -41.7266, -10.6034, 0.12", "0.937208, -42.1915, -10.7815, 0.12", "1.09972, -42.5609, -10.927, 0.12", "1.1793, -42.7396, -10.9904, 0.12", "1.46862, -43.4018, -11.1805, 1.44", "1.7929, -43.9929, -11.3527, 1.68", "2.4105, -44.9504, -11.5962, 0.12", "2.77216, -45.4479, -11.6973, 0.12", "3.04454, -45.7998, -11.7407, 0.12", "3.24525, -46.0495, -11.7479, 0.12", "4.08816, -47.0089, -11.756, 1.56", "4.38803, -47.3303, -11.7551, 1.56", "4.99606, -47.963, -11.688, 0.12", "5.52189, -48.5, -11.6352, 0.12", "5.88069, -48.885, -11.5952, 1.08", "6.62016, -49.7818, -11.4652, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.36233, -37.7194, -9.40783, 1.32", "-1.94871, -39.0432, -9.8983, 1.32", "-2.31835, -39.8776, -10.2074, 1.32", "-2.58855, -40.4876, -10.4334, 2.04", "-2.96385, -41.3349, -10.7474, 2.52", "-3.13757, -41.727, -10.8927, 2.52" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.06313, 41.0601, 0.698697, 0.718232", "2.56414, 56.0517, 0.698697, 0.718232", "3.06515, 71.0433, 0.698697, 0.718232" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-66.5683, 124.962, -60.0115, 0.12", "-66.9043, 125.469, -60.2035, 0.12", "-67.0914, 125.818, -60.3757, 0.12", "-67.3103, 126.245, -60.5834, 0.72", "-67.5027, 126.593, -60.8209, 0.12", "-67.7695, 127.066, -61.156, 0.12", "-68.3162, 128.061, -61.8529, 0.12", "-68.6798, 128.762, -62.3886, 2.28", "-68.8468, 129.09, -62.642, 2.52", "-69.678, 130.741, -63.9116, 0.12", "-69.9146, 131.191, -64.2469, 0.12", "-70.0936, 131.482, -64.4707, 0.48", "-70.3869, 131.908, -64.7788, 0.12", "-70.7308, 132.355, -65.1218, 0.12", "-70.9063, 132.553, -65.3263, 1.2", "-71.1682, 132.8, -65.6366, 1.56", "-72.075, 133.581, -66.7062, 0.24", "-72.3283, 133.789, -66.9989, 0.24", "-72.5681, 133.99, -67.3294, 0.96", "-73.8089, 135.099, -69.2893, 0.12", "-73.9594, 135.249, -69.5386, 0.12", "-74.4432, 135.783, -70.3632, 2.52", "-74.5433, 135.9, -70.5369, 2.52", "-75.7014, 137.278, -72.5564, 0.12", "-75.8402, 137.45, -72.7876, 0.12", "-76.2414, 137.973, -73.411, 0.84", "-76.4007, 138.174, -73.6733, 0.96", "-77.0293, 138.993, -74.7404, 0.12", "-77.1562, 139.166, -74.9418, 0.12", "-77.3173, 139.408, -75.1676, 0.6", "-77.8917, 140.371, -76.1003, 0.12", "-78.0034, 140.597, -76.3134, 0.12", "-78.258, 141.299, -76.8806, 0.12", "-78.3732, 141.842, -77.2137, 1.08", "-78.4207, 142.22, -77.4192, 1.08", "-78.4613, 142.892, -77.7543, 0.12", "-78.4541, 143.467, -77.9925, 0.12", "-78.4435, 143.812, -78.1622, 0.24", "-78.4121, 144.365, -78.4634, 0.12", "-78.3811, 144.734, -78.6632, 0.12", "-78.2945, 145.345, -78.995, 0.96", "-78.2173, 145.648, -79.1102, 0.96", "-77.9064, 146.592, -79.3656, 0.12", "-77.7411, 147.075, -79.5315, 0.12", "-77.6427, 147.363, -79.643, 0.36", "-77.3926, 148.225, -80.0473, 0.36", "-77.1972, 149.572, -81.0473, 0.72", "-77.1949, 149.745, -81.2051, 0.72", "-77.2886, 151.214, -82.6448, 1.56", "-77.3288, 151.574, -83.0206, 2.04", "-77.4488, 152.229, -83.701, 2.52", "-77.837, 153.638, -85.2488, 0.12", "-77.958, 154.055, -85.6993, 0.24", "-78.0514, 154.449, -86.0538, 0.12", "-78.1054, 154.753, -86.2725, 0.12", "-78.223, 155.495, -86.7578, 0.12", "-78.3324, 156.248, -87.1553, 0.12", "-78.4416, 156.937, -87.45, 1.56", "-78.4924, 157.219, -87.5822, 1.92", "-78.7985, 158.674, -88.2665, 0.12", "-79.0209, 159.658, -88.7057, 0.12", "-79.1963, 160.408, -89.0372, 1.56", "-79.3034, 160.797, -89.1934, 1.92", "-79.6143, 161.82, -89.6168, 0.12", "-79.8581, 162.65, -89.9621, 0.12", "-79.9894, 163.156, -90.1574, 0.48", "-80.0978, 163.6, -90.3537, 0.12", "-80.2142, 164.18, -90.6725, 0.12", "-80.3099, 164.81, -91.0433, 0.12", "-80.3673, 165.4, -91.3851, 0.12", "-80.3933, 166.018, -91.7655, 1.32", "-80.3949, 166.297, -91.9293, 1.56", "-80.3778, 167.76, -92.7218, 0.12", "-80.3903, 168.326, -93.0677, 0.12", "-80.4253, 168.866, -93.3917, 0.12", "-80.4492, 169.208, -93.5927, 0.12", "-80.5166, 170.023, -94.0539, 1.68", "-80.538, 170.22, -94.1646, 1.8", "-80.7413, 171.951, -95.0442, 0.12", "-80.8649, 173.054, -95.6335, 0.12", "-80.9333, 173.601, -95.9194, 1.08", "-80.9841, 173.996, -96.1204, 1.2", "-81.0671, 174.856, -96.535, 0.12", "-81.1448, 175.913, -96.9911, 0.12", "-81.1952, 176.915, -97.36, 1.8", "-81.2267, 177.505, -97.5911, 2.04", "-81.2569, 178.41, -97.9478, 0.12", "-81.2481, 179.338, -98.2956, 0.12", "-81.2264, 179.765, -98.4265, 0.48" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-66.5683, 124.962, -60.0115, 0.12", "-66.2901, 125.85, -60.0176, 0.12", "-66.0347, 126.705, -60.0212, 0.12", "-65.7649, 127.666, -59.9786, 0.72", "-65.573, 128.532, -59.934, 0.12", "-65.284, 129.985, -59.8641, 0.12", "-65.2067, 130.416, -59.8452, 1.2", "-65.1514, 130.782, -59.8095, 0.72", "-65.0418, 131.758, -59.6993, 0.12", "-64.8778, 133.953, -59.4525, 0.12", "-64.8398, 134.571, -59.3942, 0.96", "-64.8091, 135.077, -59.3242, 1.44", "-64.7324, 136.388, -59.1231, 0.12", "-64.6803, 137.263, -58.9538, 0.12", "-64.6325, 137.989, -58.8021, 0.24", "-64.5799, 138.6, -58.6533, 0.24", "-64.4814, 139.582, -58.4166, 0.24", "-64.3267, 140.878, -58.0456, 2.52", "-64.0975, 142.595, -57.5334, 0.24", "-63.936, 143.642, -57.2041, 0.24", "-63.8668, 144.062, -57.071, 0.48", "-63.82, 144.329, -56.9956, 0.12", "-63.2745, 147.285, -56.2629, 0.12", "-63.1327, 148.005, -56.089, 1.92", "-62.9995, 148.602, -55.9777, 2.16", "-62.6875, 149.858, -55.7655, 0.12", "-62.2327, 151.535, -55.5348, 0.12", "-62.1956, 151.653, -55.5284, 0.36", "-62.0622, 151.999, -55.5504, 0.12", "-61.3762, 153.68, -55.6991, 0.12", "-60.8991, 154.828, -55.7712, 2.04", "-60.6775, 155.34, -55.7956, 1.56", "-60.1191, 156.591, -55.8145, 0.12", "-59.867, 157.147, -55.8136, 0.12", "-59.5989, 157.717, -55.7953, 0.12", "-59.0075, 158.993, -55.7093, 0.12", "-58.7179, 159.642, -55.6647, 1.56", "-58.5713, 159.957, -55.6224, 2.16", "-58.1853, 160.74, -55.4509, 1.32", "-57.7855, 161.493, -55.2889, 0.12", "-57.5439, 161.905, -55.215, 0.12", "-57.1513, 162.575, -55.1409, 0.12", "-56.711, 163.353, -55.0552, 0.12", "-56.3876, 163.931, -54.9997, 1.08", "-56.13, 164.408, -54.9663, 1.8", "-55.5973, 165.368, -54.8486, 0.12", "-55.1097, 166.201, -54.657, 0.12", "-54.8078, 166.718, -54.5126, 0.12", "-54.5097, 167.234, -54.3625, 0.12", "-54.0784, 167.95, -54.1584, 0.12", "-53.256, 169.259, -53.7768, 1.32", "-52.5084, 170.412, -53.476, 0.12", "-51.7443, 171.604, -53.2578, 0.12", "-51.5681, 171.905, -53.2339, 0.96", "-51.1488, 172.708, -53.2836, 0.48", "-50.9677, 173.108, -53.3621, 0.48", "-50.6946, 173.862, -53.5923, 0.12", "-50.3702, 174.998, -53.9775, 2.04", "-50.1867, 175.712, -54.1944, 2.28", "-49.8929, 176.94, -54.5112, 0.12", "-49.702, 177.766, -54.6464, 0.12", "-49.5245, 178.495, -54.7218, 0.12", "-49.3922, 178.978, -54.7461, 0.12", "-49.0008, 180.144, -54.7832, 0.12", "-48.6742, 180.945, -54.7987, 0.12", "-48.1664, 181.966, -54.8085, 1.32", "-47.9453, 182.343, -54.8159, 1.32", "-47.5633, 182.905, -54.841, 0.12", "-46.7914, 183.976, -55.0054, 0.12", "-46.4399, 184.453, -55.1419, 0.12", "-46.0305, 184.975, -55.3511, 1.2", "-45.7702, 185.286, -55.5242, 1.56", "-45.0973, 186.057, -56.0074, 0.12", "-44.1268, 187.136, -56.7362, 0.12", "-43.5589, 187.777, -57.2042, 1.44", "-43.2372, 188.131, -57.4718, 2.16", "-42.295, 189.118, -58.2807, 0.12", "-42.0293, 189.374, -58.507, 0.12", "-41.6343, 189.702, -58.8389, 0.12", "-41.2709, 189.954, -59.1086, 0.12", "-40.6494, 190.377, -59.5765, 0.12", "-39.949, 190.839, -60.0887, 1.2", "-39.7748, 190.953, -60.216, 1.2", "-39.0238, 191.437, -60.7795, 0.12", "-38.7959, 191.591, -60.9875, 0.12", "-38.4045, 191.865, -61.3702, 0.12", "-37.7992, 192.345, -62.0152, 0.12", "-37.4114, 192.711, -62.4834, 1.32", "-37.2432, 192.891, -62.7257, 1.44", "-36.5062, 193.764, -63.904, 0.12", "-36.2781, 194.049, -64.3111, 0.12", "-36.1701, 194.186, -64.521, 0.12", "-35.6856, 194.87, -65.5426, 0.12", "-35.3079, 195.426, -66.287, 1.44", "-35.1443, 195.676, -66.6006, 1.92", "-34.827, 196.165, -67.1479, 1.44", "-34.3726, 196.936, -67.9806, 0.12", "-34.1984, 197.22, -68.271, 0.12", "-33.7174, 197.861, -68.8716, 0.12", "-33.192, 198.518, -69.4468, 1.44", "-32.909, 198.845, -69.7233, 1.92", "-31.9425, 199.857, -70.5635, 0.12", "-31.4356, 200.365, -70.9649, 0.12", "-30.4431, 201.268, -71.7311, 0.12", "-30.2573, 201.414, -71.8681, 0.84", "-29.8692, 201.7, -72.1255, 0.96", "-29.0985, 202.228, -72.6259, 0.12", "-28.5199, 202.599, -72.9781, 0.12", "-27.9884, 202.977, -73.3668, 0.72", "-27.446, 203.461, -73.8783, 0.12", "-26.9728, 203.978, -74.387, 0.12", "-26.6936, 204.366, -74.7294, 1.2", "-26.5293, 204.685, -75.0087, 1.44", "-26.1431, 205.612, -75.8198, 0.12", "-25.7959, 206.672, -76.689, 0.12", "-25.5924, 207.425, -77.2912, 2.52", "-25.4974, 207.877, -77.7063, 2.52", "-25.1826, 209.587, -79.3525, 0.24", "-25.0776, 210.07, -79.841, 0.24", "-24.9703, 210.478, -80.2893, 0.24", "-24.7936, 210.959, -80.876, 1.32", "-24.0813, 212.337, -82.8474, 0.12", "-23.8403, 212.675, -83.4858, 0.12", "-23.4816, 213.053, -84.3184, 0.72", "-22.9302, 213.552, -85.5455, 0.12", "-22.7139, 213.722, -86.0214, 0.12", "-21.9581, 214.278, -87.6172, 2.76", "-20.4669, 215.355, -90.6124, 0.12", "-20.157, 215.601, -91.3359, 0.12", "-20.0672, 215.69, -91.577, 1.32", "-19.4208, 216.446, -93.4205, 0.12", "-19.247, 216.708, -93.9567, 0.12", "-19.1129, 216.96, -94.3601, 0.96", "-18.5078, 218.183, -95.913, 0.12", "-18.2459, 218.692, -96.5498, 0.12", "-17.7169, 219.61, -97.5965, 2.4", "-16.9888, 220.728, -98.7462, 0.12", "-16.5606, 221.317, -99.3557, 0.12", "-16.258, 221.688, -99.7377, 1.44", "-15.392, 222.665, -100.704, 0.12", "-14.5789, 223.519, -101.608, 0.12", "-14.443, 223.655, -101.759, 0.84", "-13.9485, 224.123, -102.329, 0.12", "-13.2491, 224.757, -103.145, 0.48", "-12.7401, 225.208, -103.715, 0.12", "-12.3793, 225.52, -104.097, 0.12", "-11.6109, 226.169, -104.893, 1.8", "-10.9755, 226.713, -105.474, 0.12", "-10.5096, 227.115, -105.825, 0.12", "-10.0941, 227.488, -106.076, 0.72", "-9.61903, 227.914, -106.28, 0.12", "-8.8622, 228.586, -106.52, 0.12", "-8.37381, 229.032, -106.654, 0.72", "-7.96013, 229.357, -106.804, 0.12", "-7.53997, 229.661, -106.978, 0.12", "-5.91229, 230.731, -107.932, 0.12", "-5.26294, 231.127, -108.374, 1.92", "-4.35278, 231.617, -109.172, 0.12", "-2.34493, 232.579, -111.315, 0.12", "-1.50503, 232.953, -112.328, 0.12", "0.208897, 233.654, -114.612, 0.12", "0.906013, 233.924, -115.695, 2.28", "2.25513, 234.388, -118.219, 0.72", "2.64628, 234.454, -119.547, 0.12", "2.69726, 234.55, -118.789, 0.12", "2.83392, 234.68, -118.183, 1.2", "3.14666, 234.948, -117.219, 0.6", "6.28457, 237.78, -108.013, 0.12", "6.4783, 237.965, -107.456, 0.12", "6.59498, 238.08, -107.109, 0.6", "6.69029, 238.172, -106.801, 0.12", "7.05683, 238.496, -105.271, 0.12", "7.03306, 238.246, -104.386, 0.12", "7.40724, 239.106, -105.209, 1.56", "7.48829, 239.297, -105.39, 1.8", "8.04343, 240.503, -106.465, 0.12", "8.59716, 241.593, -107.378, 0.12", "8.93338, 242.179, -107.851, 0.12", "9.52513, 243.087, -108.572, 1.8", "10.3041, 244.106, -109.329, 0.12", "11.2078, 245.141, -110.075, 0.12", "11.587, 245.514, -110.367, 1.08", "12.3609, 246.169, -110.962, 0.12", "13.0, 246.663, -111.456, 0.12", "13.7093, 247.165, -112.038, 0.12", "14.0127, 247.36, -112.304, 1.08", "15.4412, 248.198, -113.699, 0.12", "15.8719, 248.449, -114.124, 0.12", "16.2907, 248.701, -114.556, 1.44", "16.9365, 249.139, -115.43, 1.92", "17.0569, 249.231, -115.62, 1.92", "17.6391, 249.713, -116.586, 0.12", "18.0395, 250.07, -117.261, 0.12", "18.4553, 250.471, -118.024, 1.08", "19.4304, 251.469, -119.932, 0.12", "19.579, 251.624, -120.249, 0.12", "19.7334, 251.774, -120.631, 0.6", "20.0334, 252.027, -121.428, 0.12", "20.1259, 252.096, -121.674, 0.12", "20.3778, 252.244, -122.274, 1.2", "20.9809, 252.591, -123.484, 1.2", "21.6957, 253.043, -124.878, 0.24", "21.9351, 253.208, -125.338, 0.24", "22.0392, 253.291, -125.529, 0.84", "22.4647, 253.676, -126.272, 0.12", "23.0695, 254.242, -127.204, 0.12", "23.2417, 254.425, -127.442, 0.12", "23.8095, 255.1, -128.239, 0.96", "23.9705, 255.302, -128.485, 0.96", "24.0881, 255.468, -128.682, 0.96", "24.4216, 256.033, -129.378, 0.48", "24.557, 256.285, -129.715, 0.48", "24.7682, 256.752, -130.319, 0.12", "24.929, 257.105, -130.706, 0.12", "25.4378, 258.179, -131.752, 0.12", "25.7587, 258.826, -132.293, 0.84", "25.9154, 259.157, -132.544, 1.08", "26.3214, 259.962, -133.142, 0.12", "26.8313, 260.997, -133.843, 0.12", "27.0398, 261.391, -134.088, 1.08", "27.4053, 261.954, -134.301, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.13757, -41.727, -10.8927, 0.48", "-4.33626, -42.0758, -11.2271, 0.48", "-4.98958, -42.2808, -11.4229, 0.48", "-6.02492, -42.6218, -11.7457, 0.84", "-6.89906, -42.9312, -12.0238, 0.96", "-7.54703, -43.1682, -12.2313, 0.96", "-8.21146, -43.42, -12.4434, 0.12", "-8.50439, -43.5494, -12.5756, 0.12", "-8.66117, -43.6223, -12.6677, 0.12", "-8.91599, -43.7424, -12.8804, 0.48", "-9.11269, -43.8392, -13.0757, 0.48", "-9.34684, -43.9507, -13.3149, 0.6", "-10.2048, -44.3129, -14.1869, 0.12", "-10.5015, -44.4278, -14.4816, 0.12", "-11.1213, -44.6627, -15.0707, 2.16", "-11.3402, -44.7462, -15.2724, 3.0", "-11.8158, -44.9329, -15.684, 3.12", "-13.1695, -45.4819, -16.7359, 0.12", "-13.4264, -45.5905, -16.9006, 0.12", "-13.7104, -45.7119, -17.0716, 0.12", "-13.9391, -45.8098, -17.1933, 0.12", "-14.2676, -45.9545, -17.3741, 0.12", "-14.6054, -46.1085, -17.5608, 0.12", "-15.6136, -46.6036, -18.0744, 2.28", "-15.8621, -46.7321, -18.2082, 3.25", "-16.1789, -46.9094, -18.3821, 3.25", "-16.8369, -47.309, -18.7603, 2.52", "-17.6987, -47.8741, -19.2642, 0.12", "-17.936, -48.0413, -19.4667, 0.12", "-18.0681, -48.1452, -19.6079, 0.12", "-18.5009, -48.5036, -20.1278, 1.68", "-18.8345, -48.7908, -20.541, 2.04", "-19.0751, -49.0031, -20.8355, 2.04", "-20.5042, -50.2949, -22.7788, 0.12", "-20.6845, -50.4537, -23.0383, 0.12", "-20.819, -50.5695, -23.2439, 0.12", "-21.2416, -50.9281, -23.9572, 2.4", "-21.4638, -51.1222, -24.3402, 3.12" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.13757, -41.727, -10.8927, 0.96", "-2.70985, -43.196, -10.9556, 0.96", "-2.52417, -43.8529, -10.9827, 0.48", "-2.38327, -44.3845, -11.0227, 0.48", "-2.20451, -45.1697, -11.1123, 0.6", "-2.00978, -46.2178, -11.2973, 0.6", "-1.87558, -47.2303, -11.518, 0.6", "-1.7928, -48.396, -11.8399, 0.6", "-1.77956, -49.4121, -12.1573, 1.44", "-1.8272, -50.2466, -12.4309, 2.04", "-2.00986, -51.466, -12.8503, 1.92", "-2.33828, -52.772, -13.3253, 1.08", "-2.7175, -53.8635, -13.7267, 0.48", "-3.00364, -54.547, -13.9633, 0.36", "-3.25242, -55.0767, -14.1295, 0.36", "-3.44565, -55.4572, -14.2304, 0.36", "-3.78581, -56.0445, -14.3411, 0.36", "-4.27324, -56.7685, -14.4511, 2.04", "-4.99432, -57.7535, -14.556, 3.97" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-81.2264, 179.765, -98.4265, 0.12", "-81.0608, 179.739, -98.8312, 0.12", "-80.5811, 179.666, -100.003, 0.12", "-80.4613, 179.648, -100.296, 0.84", "-79.8229, 179.551, -101.855, 0.12", "-79.6667, 179.527, -102.237, 0.12", "-79.5909, 179.515, -102.422, 0.6" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-81.2264, 179.765, -98.4265, 0.24", "-81.48, 180.407, -98.7121, 0.24", "-81.6819, 180.874, -98.9178, 0.24", "-81.8739, 181.307, -99.0948, 0.24", "-82.009, 181.601, -99.2032, 1.44", "-82.1693, 181.95, -99.332, 2.04", "-82.6062, 182.9, -99.6828, 0.12", "-82.8721, 183.466, -99.8644, 0.24", "-83.0896, 183.902, -100.02, 0.24", "-83.3426, 184.393, -100.21, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-21.4638, -51.1222, -24.3402, 1.68", "-22.6376, -52.5397, -24.7092, 1.68", "-23.2548, -53.3174, -24.8913, 2.28", "-24.1397, -54.3597, -25.1331, 0.12", "-24.5583, -54.8038, -25.236, 0.12", "-25.0793, -55.3161, -25.3557, 0.12", "-25.2826, -55.498, -25.3994, 0.12", "-26.3289, -56.2529, -25.5251, 2.04", "-27.0265, -56.7154, -25.5547, 2.28", "-28.279, -57.526, -25.5295, 0.12", "-28.7985, -57.8555, -25.5108, 0.12", "-29.95, -58.5657, -25.4361, 0.12", "-31.3028, -59.3583, -25.3315, 1.68", "-32.071, -59.7805, -25.2546, 2.04", "-32.9194, -60.2684, -25.1424, 0.12", "-33.9246, -60.8542, -24.9704, 0.12", "-34.6342, -61.2831, -24.84, 1.2" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-21.4638, -51.1222, -24.3402, 0.12", "-22.063, -51.6389, -25.4768, 0.12", "-22.1678, -51.7222, -25.6432, 0.12", "-22.3059, -51.8222, -25.835, 0.84", "-22.4634, -51.9257, -26.0094, 0.84", "-23.1977, -52.3965, -26.7226, 0.12", "-23.3574, -52.4913, -26.8598, 0.12", "-23.7907, -52.7183, -27.1604, 0.12", "-23.9579, -52.7955, -27.2683, 0.12", "-24.552, -53.0398, -27.6139, 2.28", "-24.6866, -53.0909, -27.6815, 2.64", "-25.0025, -53.2026, -27.8199, 2.76", "-25.8146, -53.4884, -28.2205, 0.12", "-26.2973, -53.6543, -28.481, 0.12", "-26.5069, -53.7279, -28.6088, 0.48", "-26.6627, -53.7845, -28.7225, 0.48", "-26.9734, -53.9144, -28.9585, 0.12", "-27.2341, -54.0461, -29.218, 0.84", "-27.3743, -54.1288, -29.3788, 1.2", "-27.6138, -54.2918, -29.67, 1.2", "-27.9199, -54.5114, -30.0296, 0.12", "-28.2586, -54.7647, -30.3859, 0.12", "-29.0227, -55.3554, -31.0954, 0.12", "-29.2546, -55.541, -31.2935, 1.92", "-29.6533, -55.8788, -31.6108, 2.88", "-30.3482, -56.4961, -32.0862, 0.12", "-30.8528, -56.9755, -32.3856, 0.12", "-31.1587, -57.2875, -32.5418, 1.68", "-31.3554, -57.5066, -32.6211, 2.04", "-31.7486, -57.9845, -32.7878, 1.44", "-32.007, -58.3359, -32.8982, 0.12", "-32.2018, -58.6316, -32.9729, 0.12", "-32.3357, -58.8474, -33.0293, 0.6", "-32.5825, -59.255, -33.1302, 0.12", "-32.6696, -59.3856, -33.1673, 0.12", "-32.9444, -59.7386, -33.2781, 0.12", "-33.075, -59.884, -33.334, 0.36", "-33.183, -59.9875, -33.3842, 0.12", "-33.6122, -60.3646, -33.5875, 0.12", "-34.104, -60.7584, -33.8141, 1.2", "-34.3417, -60.9327, -33.9377, 1.92", "-34.5568, -61.0839, -34.0701, 1.92", "-35.0993, -61.4508, -34.4279, 0.12", "-35.2492, -61.5418, -34.5274, 0.12", "-35.4144, -61.6292, -34.6529, 0.12", "-35.9531, -61.8907, -35.0838, 0.72", "-36.2178, -62.008, -35.3195, 0.12", "-36.5363, -62.1304, -35.6148, 0.12", "-36.8445, -62.2239, -35.9932, 1.32", "-37.3585, -62.3472, -36.7028, 0.12", "-37.5555, -62.3849, -36.9952, 0.12", "-37.9796, -62.4458, -37.6474, 1.92", "-38.1192, -62.4754, -37.906, 1.92", "-38.9114, -62.7137, -39.6163, 0.12", "-39.0712, -62.7807, -40.0051, 0.12", "-39.4306, -62.9635, -40.8779, 2.4", "-39.482, -62.9948, -41.0065, 2.64", "-40.3224, -63.5695, -43.0634, 0.12", "-40.6191, -63.7863, -43.7523, 0.84", "-40.8742, -63.986, -44.2844, 0.12", "-41.1336, -64.1996, -44.8213, 0.12", "-41.4972, -64.5062, -45.5435, 1.44", "-41.6366, -64.6169, -45.7839, 1.68", "-42.1814, -64.9701, -46.4457, 0.12", "-42.3751, -65.0909, -46.6599, 0.12", "-42.4783, -65.1506, -46.7732, 0.48", "-42.7449, -65.2929, -47.1062, 0.12", "-42.9865, -65.4084, -47.4004, 0.12", "-43.3533, -65.5599, -47.841, 1.68", "-43.4465, -65.5893, -47.9439, 1.8", "-43.9154, -65.6887, -48.45, 1.08", "-44.371, -65.7634, -48.9156, 0.12", "-44.5905, -65.7893, -49.143, 0.12", "-45.0603, -65.8218, -49.6415, 2.16", "-45.26, -65.828, -49.8549, 2.4", "-46.0763, -65.8072, -50.6966, 0.48", "-46.2848, -65.7882, -50.9006, 0.48", "-46.9095, -65.6854, -51.5018, 0.12", "-47.0899, -65.641, -51.6776, 0.12", "-47.2707, -65.5782, -51.8475, 0.12", "-47.5932, -65.4252, -52.1255, 0.12", "-47.8722, -65.2618, -52.371, 0.6", "-48.0229, -65.172, -52.5178, 0.96", "-48.4601, -64.9328, -52.9382, 0.12", "-48.6712, -64.8355, -53.2066, 0.12", "-49.094, -64.6735, -53.807, 2.4", "-49.7701, -64.4652, -54.8741, 0.12", "-50.0398, -64.385, -55.4025, 0.36", "-50.1522, -64.354, -55.6706, 0.72", "-50.8117, -64.2179, -57.4856, 1.44", "-50.8839, -64.2085, -57.6977, 1.68", "-50.9767, -64.2037, -57.9749, 1.92", "-51.6398, -64.1798, -59.9797, 0.48", "-51.833, -64.1703, -60.5408, 0.12", "-51.9238, -64.1644, -60.7796, 0.12", "-52.0575, -64.1592, -61.0491, 0.12", "-52.2325, -64.1691, -61.3653, 0.48", "-52.5937, -64.218, -61.9242, 0.12", "-52.7262, -64.256, -62.0865, 0.12", "-53.1148, -64.3878, -62.5357, 1.68", "-53.3625, -64.489, -62.8299, 2.64", "-54.5414, -65.0924, -64.2333, 0.24", "-54.696, -65.185, -64.4159, 0.24", "-54.9684, -65.3636, -64.7296, 0.24", "-55.217, -65.5356, -65.0144, 0.36", "-55.4864, -65.7257, -65.3084, 0.12", "-55.733, -65.8835, -65.5476, 0.12", "-56.2077, -66.1639, -65.9186, 0.6", "-56.4831, -66.3024, -66.1244, 0.12", "-57.2852, -66.6348, -66.6864, 2.16", "-57.4683, -66.6947, -66.802, 2.64", "-58.2289, -66.8641, -67.2036, 0.12", "-58.5485, -66.904, -67.3508, 0.12", "-58.8717, -66.92, -67.5094, 0.96", "-59.118, -66.9143, -67.65, 0.96", "-59.3586, -66.8873, -67.8115, 0.12", "-59.7536, -66.8284, -68.1386, 0.12", "-60.2123, -66.7593, -68.6258, 1.68", "-60.8974, -66.6451, -69.537, 1.68", "-61.2227, -66.5846, -70.0266, 0.12", "-61.3778, -66.5547, -70.2726, 0.12", "-61.623, -66.5074, -70.6776, 0.12", "-62.0257, -66.4244, -71.3482, 1.68", "-62.5913, -66.3059, -72.2529, 0.12", "-62.741, -66.2787, -72.4584, 0.12", "-62.9638, -66.2374, -72.7403, 0.12", "-63.5463, -66.1132, -73.3865, 1.8", "-63.7305, -66.0685, -73.5582, 1.8", "-64.4101, -65.893, -74.0787, 0.12", "-64.7101, -65.8236, -74.2794, 0.12", "-65.1549, -65.7243, -74.5696, 0.12", "-65.6628, -65.5964, -74.8749, 1.2", "-65.7244, -65.5795, -74.9059, 1.68", "-65.912, -65.5284, -74.9926, 1.68", "-66.5798, -65.3388, -75.2502, 0.12", "-66.8439, -65.2735, -75.3539, 0.12", "-67.261, -65.1942, -75.5156, 0.12", "-67.4573, -65.1555, -75.588, 0.12", "-67.6966, -65.1096, -75.6657, 1.08", "-67.9672, -65.0642, -75.7379, 1.08", "-68.4724, -65.01, -75.7753, 0.12", "-68.6963, -64.9988, -75.7717, 0.12", "-69.1106, -64.9965, -75.7397, 0.24", "-69.4915, -64.9993, -75.7137, 0.24", "-69.8522, -65.0151, -75.694, 0.24", "-70.7989, -65.0984, -75.6784, 1.68", "-71.092, -65.135, -75.6833, 2.52", "-71.4425, -65.1863, -75.7028, 2.52", "-72.2527, -65.299, -75.7856, 0.12", "-72.7538, -65.3394, -75.8599, 0.48", "-73.1199, -65.342, -75.9379, 0.12", "-73.3237, -65.3284, -75.997, 0.12", "-73.5699, -65.3002, -76.0601, 0.12", "-73.9511, -65.2542, -76.169, 0.36", "-74.2249, -65.216, -76.2504, 0.12", "-74.77, -65.1743, -76.4176, 0.12", "-74.9896, -65.1934, -76.4849, 1.56", "-75.1665, -65.26, -76.5538, 1.56", "-75.7433, -65.7127, -76.8155, 1.2", "-75.813, -65.7906, -76.8493, 0.12", "-76.0838, -66.1627, -76.9873, 0.12", "-76.1545, -66.2762, -77.041, 0.12", "-76.2288, -66.3837, -77.101, 0.12", "-76.5015, -66.7422, -77.3495, 0.12", "-76.6141, -66.8634, -77.4661, 1.2", "-76.7533, -67.0058, -77.6296, 1.44", "-77.2526, -67.4698, -78.3028, 0.12", "-77.4515, -67.6444, -78.5808, 0.96", "-77.7252, -67.8668, -78.9574, 1.2", "-78.2097, -68.2125, -79.5968, 0.12", "-78.3737, -68.3246, -79.8128, 0.12", "-78.753, -68.5674, -80.2954, 0.12", "-78.9097, -68.6601, -80.4716, 0.12", "-79.1921, -68.8194, -80.7835, 0.12", "-79.8586, -69.1374, -81.3884, 2.64" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.99432, -57.7535, -14.556, 0.12", "-7.09846, -59.1976, -14.0726, 0.12", "-7.32007, -59.3562, -14.0115, 0.12", "-8.09327, -59.9246, -13.7846, 0.12", "-8.64037, -60.3258, -13.6189, 0.12", "-9.58364, -61.0171, -13.3317, 0.12", "-10.4903, -61.6814, -13.0575, 1.32", "-10.8765, -61.9769, -12.926, 1.68", "-11.6369, -62.5766, -12.671, 0.72", "-12.1914, -63.0565, -12.4798, 0.12", "-12.5543, -63.3851, -12.3572, 0.12", "-12.8984, -63.73, -12.2494, 0.12", "-13.2152, -64.1034, -12.1212, 0.6", "-13.5014, -64.488, -11.9575, 0.6", "-13.8964, -65.042, -11.6786, 0.12", "-14.0847, -65.2684, -11.5705, 0.12", "-14.3017, -65.4785, -11.4876, 0.12", "-15.6698, -66.5624, -11.1432, 1.92", "-16.2716, -66.929, -11.0473, 2.76", "-16.8911, -67.2406, -10.9847, 3.0", "-18.4312, -67.8971, -10.8999, 1.68", "-19.4643, -68.2735, -10.8953, 0.12", "-20.1782, -68.4954, -10.9217, 0.12", "-21.3812, -68.82, -11.0198, 0.12", "-21.9781, -68.9872, -11.0582, 0.6", "-22.243, -69.0663, -11.0864, 0.84", "-23.1699, -69.3623, -11.1969, 0.12", "-24.2426, -69.731, -11.3603, 0.12", "-24.8115, -69.9427, -11.495, 0.6", "-25.2112, -70.1128, -11.6157, 0.12", "-26.8112, -70.8373, -12.1403, 0.12", "-27.1526, -71.0163, -12.2555, 0.12", "-27.4129, -71.1664, -12.3381, 0.12", "-28.2846, -71.6823, -12.6363, 1.32", "-28.8496, -72.0494, -12.8176, 2.4", "-29.3604, -72.4088, -12.9595, 2.88", "-29.9513, -72.8608, -13.075, 1.92", "-30.7038, -73.4829, -13.2545, 1.2", "-31.7615, -74.442, -13.5264, 0.12", "-32.4573, -75.1529, -13.7007, 0.12", "-32.7255, -75.4494, -13.7682, 0.72", "-33.2336, -76.0458, -13.9019, 0.96", "-34.0119, -77.0202, -14.0731, 0.12", "-34.4199, -77.5781, -14.1412, 0.12", "-35.1218, -78.5644, -14.1908, 0.12", "-35.5347, -79.1196, -14.2493, 0.12", "-36.2156, -80.0357, -14.3728, 1.44", "-36.812, -80.8398, -14.4959, 2.4", "-36.9989, -81.0901, -14.5346, 2.4", "-37.4676, -81.7128, -14.649, 1.32", "-38.5763, -83.184, -14.9986, 0.12", "-39.1111, -83.8846, -15.1838, 0.12", "-39.4118, -84.2669, -15.2875, 0.48", "-39.5358, -84.4148, -15.3347, 0.12", "-40.1056, -85.0824, -15.531, 0.12", "-40.7629, -85.8116, -15.7109, 0.96", "-41.0692, -86.1213, -15.7942, 1.56", "-41.5075, -86.5264, -15.9839, 1.56", "-42.2642, -87.1912, -16.4471, 0.12", "-42.6005, -87.476, -16.6912, 0.12", "-42.8774, -87.7384, -16.9149, 0.12", "-43.9535, -88.8575, -17.7994, 0.48", "-44.6522, -89.652, -18.396, 0.48", "-45.7206, -90.9074, -19.3577, 2.64", "-46.3256, -91.6408, -19.9201, 3.61", "-47.4969, -93.1089, -21.0275, 0.12", "-47.9632, -93.7406, -21.4645, 0.12", "-48.1035, -93.9569, -21.5769, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.99432, -57.7535, -14.556, 3.25", "-4.81702, -58.4954, -14.8101, 3.25", "-4.41704, -60.3101, -15.2912, 0.36", "-4.35018, -60.6503, -15.3629, 0.36", "-4.25553, -61.1777, -15.4519, 0.36", "-4.1299, -61.8777, -15.5556, 0.36", "-4.02368, -62.6061, -15.6234, 0.36", "-3.90275, -63.6998, -15.6622, 2.64", "-3.83503, -64.5479, -15.6411, 3.85", "-3.77027, -65.6263, -15.6087, 4.21", "-3.74519, -66.2841, -15.5872, 3.61", "-3.67787, -68.3057, -15.5203, 0.24", "-3.67391, -68.4463, -15.5234, 0.24", "-3.6464, -69.5344, -15.5976, 0.36", "-3.59352, -70.499, -15.6866, 1.08", "-3.48915, -71.6818, -15.8234, 2.04", "-3.37812, -72.6389, -15.9529, 1.56", "-3.11991, -74.3483, -16.1688, 0.48", "-3.03513, -74.8831, -16.2144, 0.48", "-2.84927, -76.1147, -16.2662, 0.48", "-2.76173, -76.8688, -16.2574, 0.48", "-2.69808, -77.7148, -16.212, 0.48", "-2.68182, -78.8183, -16.1811, 0.48", "-2.71549, -79.5402, -16.1684, 2.04", "-2.81778, -80.4536, -16.2168, 3.0", "-2.94058, -81.206, -16.3109, 3.49", "-3.11174, -82.2054, -16.4797, 2.52", "-3.3652, -83.8969, -16.8342, 0.48", "-3.42631, -84.4964, -16.9762, 0.36", "-3.44975, -84.9154, -17.0674, 0.36", "-3.45581, -85.6295, -17.2134, 0.6", "-3.44614, -86.3387, -17.3317, 0.6", "-3.42929, -87.1812, -17.4389, 0.36", "-3.38597, -88.4349, -17.5535, 0.36", "-3.36709, -88.921, -17.6218, 0.36", "-3.34275, -89.8376, -17.7959, 1.68", "-3.33772, -91.0274, -18.0607, 3.49", "-3.37422, -91.7941, -18.2517, 4.09", "-3.45497, -92.6095, -18.4709, 3.49", "-3.74406, -94.6302, -19.0141, 0.96", "-3.86396, -95.4051, -19.2266, 0.36", "-3.92059, -95.7783, -19.3255, 0.36", "-4.03613, -96.6042, -19.5394, 0.36", "-4.12107, -97.1779, -19.6799, 0.36", "-4.27723, -98.1126, -19.8922, 1.2", "-4.44199, -99.1137, -20.0455, 2.88", "-4.52657, -99.943, -20.1526, 2.76", "-4.54775, -100.556, -20.2443, 2.64" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-83.3426, 184.393, -100.21, 0.24", "-84.1492, 184.309, -100.721, 0.24", "-84.6176, 184.311, -100.97, 0.24", "-86.4589, 184.33, -101.753, 1.2", "-86.8322, 184.3, -101.911, 1.2", "-87.8113, 184.143, -102.294, 0.12", "-88.5338, 183.983, -102.586, 0.12", "-89.3449, 183.746, -102.937, 0.12", "-90.0838, 183.472, -103.224, 0.12", "-91.5009, 182.848, -103.663, 0.12", "-92.0989, 182.535, -103.876, 0.12", "-92.6944, 182.164, -104.1, 0.96", "-92.93, 181.989, -104.206, 1.08", "-93.1338, 181.823, -104.305, 1.08", "-93.6407, 181.464, -104.599, 0.48", "-94.1221, 181.169, -104.881, 0.48", "-94.226, 181.111, -104.942, 0.48", "-94.4716, 180.973, -105.079, 0.48", "-94.7961, 180.788, -105.27, 0.12", "-95.7577, 180.235, -105.814, 0.12", "-95.9388, 180.136, -105.912, 0.12", "-96.4633, 179.851, -106.194, 1.44", "-97.1404, 179.487, -106.563, 1.8", "-98.1102, 178.97, -107.088, 0.12", "-98.4452, 178.782, -107.258, 0.12", "-98.9819, 178.477, -107.493, 1.08" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-83.3426, 184.393, -100.21, 0.12", "-83.317, 185.055, -100.554, 0.12", "-83.2758, 185.767, -100.924, 0.12", "-83.2105, 186.875, -101.448, 2.4", "-83.1958, 187.211, -101.611, 2.4", "-83.1721, 187.982, -101.968, 2.16", "-83.1387, 189.367, -102.583, 0.12", "-83.1254, 190.092, -102.923, 0.12", "-83.1442, 190.709, -103.209, 0.12", "-83.1897, 191.312, -103.503, 0.12", "-83.2664, 191.898, -103.864, 1.08", "-83.321, 192.202, -104.072, 1.08", "-83.5507, 193.149, -104.878, 0.12", "-83.6878, 193.599, -105.306, 0.12", "-83.9587, 194.32, -106.091, 0.84", "-84.3888, 195.378, -107.287, 0.12", "-84.5828, 195.853, -107.849, 0.12", "-84.8313, 196.488, -108.592, 1.32", "-84.9191, 196.711, -108.858, 1.32", "-85.3069, 197.81, -110.168, 0.12", "-85.4099, 198.138, -110.541, 0.12", "-85.5231, 198.566, -110.985, 0.12", "-85.6982, 199.349, -111.775, 0.12", "-85.9997, 200.929, -113.36, 1.8", "-86.0289, 201.13, -113.552, 1.8", "-86.0925, 201.842, -114.15, 0.12", "-86.1517, 202.719, -114.882, 0.12", "-86.1679, 203.115, -115.186, 0.6", "-86.1619, 204.096, -115.814, 0.12", "-86.1124, 205.108, -116.356, 0.12", "-86.0733, 205.91, -116.752, 1.32", "-86.0069, 207.2, -117.321, 0.12", "-85.9868, 208.028, -117.638, 0.12", "-86.0008, 209.271, -118.014, 0.12", "-86.0053, 209.397, -118.039, 0.12", "-86.0833, 210.273, -118.157, 1.44", "-86.1715, 210.958, -118.175, 1.92", "-86.3714, 212.157, -118.062, 0.12", "-86.5064, 212.816, -117.963, 0.12", "-86.6563, 213.476, -117.788, 0.12", "-86.8203, 214.109, -117.575, 0.12", "-87.0691, 214.921, -117.245, 0.12", "-87.3507, 215.759, -116.871, 1.68", "-87.4728, 216.075, -116.73, 1.68", "-88.0826, 217.379, -116.2, 0.12", "-88.4059, 217.99, -115.999, 0.12", "-88.7375, 218.602, -115.85, 1.08", "-88.9647, 218.998, -115.796, 1.08", "-89.306, 219.541, -115.757, 0.12", "-89.7933, 220.296, -115.721, 0.12", "-90.1516, 220.824, -115.721, 0.12", "-90.3769, 221.157, -115.703, 0.12", "-90.7438, 221.734, -115.665, 0.12", "-91.4022, 222.799, -115.582, 0.12", "-91.803, 223.455, -115.493, 1.32", "-91.9882, 223.751, -115.446, 1.68", "-92.6929, 224.781, -115.289, 0.24", "-93.3799, 225.741, -115.161, 0.12", "-93.7929, 226.324, -115.085, 0.12", "-94.5603, 227.424, -114.897, 1.8", "-94.8668, 227.86, -114.816, 2.04", "-95.6449, 228.994, -114.547, 0.12", "-96.2537, 229.939, -114.25, 0.12", "-96.7173, 230.701, -113.981, 0.72", "-97.1962, 231.584, -113.674, 0.12", "-97.7763, 232.83, -113.269, 0.12", "-98.0898, 233.667, -112.99, 1.32", "-98.3234, 234.561, -112.661, 0.12", "-98.5876, 235.995, -112.138, 0.12", "-98.6388, 236.47, -111.987, 1.32", "-98.6482, 236.981, -111.856, 1.44", "-98.589, 237.891, -111.647, 0.96", "-98.4678, 239.173, -111.418, 0.12", "-98.4119, 239.678, -111.352, 0.12", "-98.2865, 240.592, -111.292, 0.24", "-98.1653, 241.552, -111.302, 0.24", "-98.0641, 242.461, -111.379, 0.24", "-97.9631, 243.479, -111.541, 1.68", "-97.9005, 244.105, -111.671, 1.92", "-97.7803, 245.25, -111.91, 0.12", "-97.6595, 246.393, -112.147, 0.12", "-97.5772, 247.13, -112.314, 0.96", "-97.4439, 248.112, -112.55, 0.12", "-97.2585, 249.468, -112.881, 0.12", "-97.1885, 249.969, -112.996, 1.32", "-97.1072, 250.594, -113.12, 1.32", "-97.0306, 251.302, -113.263, 0.24", "-96.9294, 252.294, -113.464, 0.24", "-96.8744, 252.921, -113.589, 0.24", "-96.8038, 253.828, -113.759, 0.24", "-96.7471, 255.077, -114.03, 1.08", "-96.7416, 255.457, -114.131, 0.12", "-96.7574, 256.317, -114.383, 0.12", "-96.795, 256.925, -114.593, 0.96", "-96.8477, 257.418, -114.775, 0.12", "-97.1674, 259.435, -115.533, 0.12", "-97.3671, 260.516, -115.943, 1.44", "-97.4735, 261.044, -116.136, 1.8", "-97.7118, 262.061, -116.514, 0.12", "-97.9559, 263.055, -116.868, 0.12", "-98.2189, 264.107, -117.207, 0.12", "-98.3016, 264.46, -117.297, 0.84", "-98.4061, 264.972, -117.379, 0.84", "-98.5715, 265.918, -117.469, 0.12", "-98.6926, 266.934, -117.509, 0.12", "-98.734, 267.446, -117.531, 0.12", "-98.7727, 268.215, -117.551, 1.08", "-98.8231, 269.664, -117.567, 0.12", "-98.8455, 270.994, -117.56, 0.12", "-98.8264, 271.716, -117.487, 0.12", "-98.7823, 272.562, -117.367, 0.48", "-98.7402, 273.206, -117.265, 0.12", "-98.7006, 273.825, -117.154, 0.12", "-98.634, 274.582, -117.03, 1.8", "-98.4382, 276.287, -116.618, 0.12", "-98.3658, 276.89, -116.452, 0.12", "-98.2862, 277.382, -116.316, 0.36", "-98.1517, 278.06, -116.167, 0.12", "-97.9618, 278.833, -116.011, 0.12", "-97.7649, 279.538, -115.902, 0.12", "-97.5638, 280.275, -115.814, 0.12", "-97.3306, 281.16, -115.695, 1.08", "-97.1528, 281.826, -115.613, 0.12", "-96.8812, 282.89, -115.505, 0.12", "-96.746, 283.503, -115.449, 0.12", "-96.4698, 284.872, -115.408, 2.04", "-96.2784, 286.133, -115.436, 0.12", "-96.1336, 287.208, -115.516, 0.12", "-96.0231, 288.082, -115.629, 1.8", "-95.987, 288.364, -115.673, 1.8", "-95.7936, 289.774, -115.89, 0.12", "-95.5668, 291.348, -116.149, 0.12", "-95.4624, 292.157, -116.257, 0.12", "-95.3783, 293.047, -116.334, 0.72", "-95.2979, 294.172, -116.343, 0.12", "-95.2397, 295.319, -116.267, 0.12", "-95.2298, 295.942, -116.171, 1.44", "-95.2481, 296.501, -116.046, 1.44", "-95.3248, 297.128, -115.891, 0.72", "-95.5184, 298.126, -115.629, 0.12", "-95.7048, 298.849, -115.454, 0.12", "-95.8516, 299.325, -115.32, 0.12", "-96.1165, 300.135, -115.071, 0.12", "-96.3496, 300.915, -114.84, 0.96", "-96.471, 301.369, -114.722, 0.12", "-96.5873, 301.787, -114.6, 0.12", "-96.6915, 302.156, -114.472, 0.12", "-96.8323, 302.643, -114.307, 0.36", "-97.0022, 303.274, -114.126, 0.36", "-97.0801, 303.625, -113.995, 0.36", "-97.2771, 304.736, -113.559, 0.96", "-97.3392, 305.152, -113.397, 0.96", "-97.4376, 305.838, -113.139, 0.12", "-97.5343, 306.437, -112.932, 0.12", "-97.759, 307.772, -112.476, 0.12", "-97.8451, 308.382, -112.289, 1.8", "-97.9037, 308.989, -112.136, 2.04", "-98.0295, 310.864, -111.705, 0.12", "-98.0409, 311.481, -111.569, 0.24", "-98.04, 311.555, -111.556, 0.36", "-98.0231, 312.08, -111.498, 0.12", "-97.992, 312.473, -111.462, 0.12", "-97.8531, 313.487, -111.418, 1.32", "-97.5928, 314.599, -111.291, 0.12", "-97.405, 315.346, -111.175, 0.12", "-97.3201, 315.707, -111.123, 1.2", "-97.1292, 316.458, -111.04, 1.92", "-96.972, 317.033, -110.988, 1.92", "-96.332, 319.313, -110.788, 0.12", "-95.6868, 321.636, -110.61, 0.12", "-95.1379, 323.589, -110.455, 0.12", "-94.5312, 325.718, -110.294, 0.12", "-94.4497, 326.002, -110.276, 1.08" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-79.8586, -69.1374, -81.3884, 0.96", "-81.9773, -68.0867, -84.5193, 0.96", "-82.8335, -67.6923, -85.7167, 0.12", "-83.2335, -67.5027, -86.3559, 0.12", "-83.5641, -67.346, -86.8841, 0.12", "-83.7815, -67.243, -87.2315, 1.56", "-85.5922, -66.3848, -90.1248, 0.84", "-85.9909, -66.2266, -90.8054, 1.08", "-87.4994, -65.5348, -93.5764, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-79.8586, -69.1374, -81.3884, 0.36", "-80.8514, -70.3688, -82.0051, 0.36", "-81.0792, -70.6733, -82.1642, 0.36", "-81.4826, -71.2605, -82.5092, 0.36", "-81.8896, -71.8906, -82.8924, 0.36", "-82.0788, -72.1964, -83.0731, 0.96", "-82.4793, -72.8642, -83.4832, 1.44", "-82.5671, -73.0162, -83.5787, 1.44", "-82.9812, -73.701, -84.0479, 0.36", "-83.118, -73.9123, -84.1951, 0.36", "-83.5313, -74.5057, -84.5947, 0.12", "-84.2347, -75.4485, -85.1909, 1.68", "-84.5583, -75.8726, -85.4136, 2.52", "-85.5857, -77.1735, -86.052, 0.12", "-86.0842, -77.7867, -86.3185, 0.12", "-86.6081, -78.4259, -86.5702, 0.12", "-86.8989, -78.7735, -86.6929, 0.12", "-87.5339, -79.5211, -86.9025, 0.84", "-87.9083, -79.9772, -87.013, 0.12", "-88.5513, -80.7546, -87.1622, 0.12", "-89.0776, -81.3805, -87.3166, 0.72", "-89.3566, -81.7102, -87.4136, 0.12", "-89.7622, -82.1929, -87.5759, 0.12", "-90.6616, -83.2582, -88.0336, 0.12", "-90.9034, -83.5647, -88.1654, 1.44", "-91.3451, -84.1683, -88.4371, 1.92", "-91.4837, -84.3698, -88.5282, 1.92", "-91.7768, -84.8452, -88.683, 1.92", "-92.3304, -85.8398, -88.8982, 0.12", "-92.705, -86.5491, -89.0553, 0.12", "-93.1526, -87.4081, -89.2436, 0.12", "-93.4644, -87.9711, -89.3598, 0.12", "-94.3283, -89.3746, -89.8012, 1.56", "-94.7358, -89.9783, -90.0222, 1.56", "-95.6009, -90.856, -90.9479, 1.56", "-95.9522, -91.1297, -91.4084, 0.12", "-96.5964, -91.5564, -92.3259, 0.12", "-97.3004, -92.0067, -93.3976, 0.12", "-97.9911, -92.434, -94.5134, 2.76", "-100.162, -93.8059, -98.2429, 0.48", "-100.382, -93.9598, -98.624, 0.48", "-100.515, -94.0568, -98.8732, 0.12", "-100.799, -94.275, -99.4188, 0.12", "-101.184, -94.6057, -100.14, 1.08", "-101.836, -95.2007, -101.348, 0.12", "-102.235, -95.6534, -101.908, 0.12", "-102.768, -96.2826, -102.63, 0.84", "-103.139, -96.7372, -103.101, 0.84", "-103.434, -97.0886, -103.407, 0.12", "-103.754, -97.4922, -103.679, 0.12", "-104.382, -98.3038, -104.108, 0.12", "-104.663, -98.6876, -104.294, 0.12", "-104.877, -99.0175, -104.419, 0.12", "-105.369, -99.8311, -104.713, 0.12", "-105.897, -100.715, -104.991, 1.32" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.54775, -100.556, -20.2443, 0.12", "-3.7846, -101.629, -20.3825, 0.12", "-3.37861, -102.169, -20.4575, 0.12", "-2.98774, -102.681, -20.5306, 0.96", "-2.32637, -103.447, -20.5353, 0.36", "-1.77289, -104.003, -20.4598, 0.12", "-1.09771, -104.595, -20.3013, 0.12", "-0.673526, -104.95, -20.1782, 0.48", "-0.401957, -105.162, -20.0876, 0.12", "1.20507, -106.287, -19.485, 0.12", "2.9544, -107.379, -18.7351, 2.76", "4.18449, -108.096, -18.1354, 1.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.54775, -100.556, -20.2443, 0.48", "-5.12055, -102.359, -20.5874, 0.48", "-5.37757, -103.565, -20.7739, 0.48", "-5.53172, -104.528, -21.0002, 0.48", "-5.57043, -104.828, -21.0749, 0.48", "-5.6414, -105.494, -21.2291, 0.48", "-5.70618, -106.1, -21.3532, 0.48", "-5.8373, -107.324, -21.6675, 0.48", "-6.02134, -108.85, -22.1187, 2.04", "-6.15531, -109.896, -22.4591, 3.49", "-6.25866, -110.577, -22.6831, 3.85", "-6.47222, -111.687, -23.0415, 3.49", "-7.08134, -114.491, -23.9176, 0.48", "-7.33264, -115.644, -24.2775, 0.48", "-7.58155, -116.858, -24.6291, 0.48", "-7.65834, -117.299, -24.7681, 0.48", "-7.76221, -118.052, -25.0436, 0.48", "-7.83535, -118.699, -25.2904, 0.48", "-7.90586, -119.458, -25.5514, 1.32", "-7.98874, -120.141, -25.8414, 1.44", "-8.15845, -121.336, -26.4347, 0.24", "-8.29485, -122.25, -26.8799, 0.24", "-8.45686, -123.309, -27.4016, 0.24", "-8.57857, -123.969, -27.7022, 0.24", "-8.79447, -125.089, -28.1331, 1.8", "-9.01895, -126.218, -28.513, 2.76", "-9.25394, -127.483, -28.86, 3.12", "-9.47067, -129.022, -29.1951, 1.92", "-9.57363, -130.214, -29.4261, 0.24", "-9.65538, -131.447, -29.6207, 0.24", "-9.65538, -131.447, -29.6207, 0.96", "-9.69483, -131.996, -29.6608, 1.32", "-9.77754, -132.827, -29.7321, 1.44", "-9.90431, -133.933, -29.7553, 0.48", "-9.94227, -134.22, -29.7714, 0.24", "-10.0106, -134.618, -29.8042, 0.36", "-10.2039, -135.673, -29.9033, 0.36", "-10.2814, -136.105, -29.9375, 0.36", "-10.4567, -137.045, -30.0388, 0.36", "-10.5708, -137.705, -30.1176, 1.08", "-10.6964, -138.529, -30.2123, 2.04", "-10.7855, -139.227, -30.2942, 2.64", "-10.9126, -140.359, -30.4652, 1.56", "-11.0551, -141.42, -30.673, 0.12", "-11.1572, -142.082, -30.8078, 0.12", "-11.3064, -143.039, -30.9929, 0.12", "-11.3921, -143.569, -31.1128, 0.12", "-11.5305, -144.416, -31.3653, 1.32", "-11.7389, -145.637, -31.7922, 2.4", "-11.8482, -146.363, -32.0208, 3.25", "-11.954, -147.142, -32.2569, 3.37", "-12.0803, -148.273, -32.5705, 2.28", "-12.2242, -149.975, -32.9673, 0.48", "-12.2471, -150.414, -33.0483, 0.48", "-12.2938, -151.563, -33.2312, 0.48", "-12.3193, -152.697, -33.409, 0.6", "-12.3175, -153.526, -33.5124, 0.6", "-12.3064, -154.209, -33.5564, 0.48", "-12.3051, -154.486, -33.5779, 0.48", "-12.322, -155.233, -33.6982, 0.36", "-12.3597, -155.906, -33.8648, 0.24", "-12.3959, -156.315, -33.9891, 0.24", "-12.4756, -157.078, -34.2471, 0.24", "-12.5998, -158.501, -34.6796, 0.36", "-12.652, -159.304, -34.8983, 0.36", "-12.6796, -159.845, -35.0265, 1.56", "-12.7582, -161.151, -35.2898, 2.88", "-12.8034, -161.96, -35.4365, 2.88", "-12.8792, -163.618, -35.7277, 0.24", "-12.9069, -164.186, -35.8094, 0.12", "-12.9569, -165.012, -35.9211, 0.12", "-13.0087, -165.623, -36.0209, 0.12", "-13.084, -166.464, -36.1716, 1.8", "-13.1864, -167.504, -36.3728, 2.64", "-13.2828, -168.464, -36.5648, 2.64", "-13.4222, -169.98, -36.853, 0.36", "-13.4892, -171.008, -37.0267, 0.12", "-13.5284, -171.995, -37.1926, 0.12", "-13.5502, -172.701, -37.316, 0.36", "-13.5922, -173.782, -37.5203, 0.36", "-13.6032, -174.087, -37.59, 0.84", "-13.6235, -175.001, -37.8846, 1.2", "-13.6224, -176.065, -38.1889, 0.48", "-13.6134, -176.696, -38.3724, 0.12", "-13.5823, -177.405, -38.576, 0.12", "-13.4745, -178.643, -38.8429, 0.12", "-13.3254, -179.839, -39.0225, 0.12", "-13.1346, -181.104, -39.1364, 1.68", "-12.953, -182.198, -39.2039, 2.64", "-12.8524, -182.762, -39.235, 3.0", "-12.5682, -184.397, -39.4198, 0.12", "-12.5077, -184.827, -39.491, 0.12", "-12.4293, -185.629, -39.6546, 0.12", "-12.386, -186.454, -39.9212, 0.48", "-12.3793, -186.977, -40.1231, 0.48", "-12.3722, -188.045, -40.6192, 0.48", "-12.3514, -188.769, -41.0016, 0.48", "-12.3001, -189.211, -41.2287, 0.48", "-12.2296, -189.595, -41.4275, 0.48", "-12.1388, -189.973, -41.6042, 0.48", "-11.9064, -190.92, -42.0169, 1.2", "-11.7058, -191.705, -42.323, 1.8", "-11.3193, -193.256, -42.9276, 0.6", "-11.1096, -194.126, -43.27, 0.12", "-10.9713, -194.822, -43.5185, 0.12", "-10.874, -195.584, -43.7438, 0.12", "-10.8581, -195.992, -43.8278, 0.24", "-10.8715, -196.548, -43.9124, 0.24", "-10.9197, -197.143, -43.9591, 1.32", "-11.0119, -198.086, -43.9961, 1.8", "-11.1045, -198.915, -44.0345, 2.88", "-11.1744, -199.746, -44.0775, 3.25", "-11.2627, -200.767, -44.1261, 2.64" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-11.2627, -200.767, -44.1261, 1.08", "-10.5218, -201.62, -47.959, 1.08", "-9.82495, -202.396, -51.0718, 0.48", "-9.54359, -202.724, -52.2288, 1.32", "-9.16954, -203.139, -53.6197, 1.08", "-8.96894, -203.349, -54.3005, 1.44", "-8.2759, -204.016, -56.3824, 1.2", "-7.69578, -204.513, -57.6457, 1.2", "-7.42289, -204.741, -58.1428, 1.56", "-6.70927, -205.316, -59.5015, 1.32", "-6.28141, -205.657, -60.3627, 0.72", "-5.77624, -206.103, -61.4346, 0.72", "-5.18212, -206.726, -62.778, 0.72", "-4.85789, -207.084, -63.6233, 1.92", "-3.66156, -208.516, -67.9507, 0.84", "-3.2516, -209.095, -69.8661, 0.6", "-3.06812, -209.405, -70.9595, 1.44", "-2.99394, -209.561, -71.5343, 1.44", "-2.51136, -210.902, -76.9528, 2.52", "-2.21129, -212.089, -82.4178, 0.96", "-2.20224, -212.174, -82.8392, 0.96", "-2.20529, -212.254, -83.2701, 0.96", "-2.21615, -212.338, -83.7489, 0.96", "-2.32012, -212.823, -86.4383, 1.56", "-2.43978, -213.25, -88.5641, 1.56", "-2.52483, -213.802, -91.1207, 1.2", "-2.53726, -214.154, -92.7662, 1.92", "-2.38269, -215.319, -98.4321, 1.8", "-2.10259, -216.293, -103.298, 1.32", "-1.80762, -216.879, -106.223, 1.8", "-1.68747, -217.03, -107.018, 0.96", "-1.45593, -217.213, -108.08, 0.96", "-0.626066, -217.587, -110.698, 0.84", "-0.453667, -217.62, -111.039, 0.84", "0.72598, -217.721, -112.783, 0.12", "1.40478, -217.747, -113.713, 0.12", "2.03896, -217.786, -114.631, 1.08", "3.25628, -217.963, -116.401, 0.36", "3.88751, -218.165, -117.284, 1.44", "4.25341, -218.391, -117.854, 0.12", "4.35319, -218.513, -118.028, 0.12", "4.53858, -218.939, -118.448, 0.12", "4.6812, -219.524, -118.878, 1.2", "4.70951, -219.833, -119.081, 1.2", "4.73422, -221.223, -120.13, 0.12", "4.73663, -221.511, -120.362, 0.12", "4.72928, -221.978, -120.748, 0.12", "4.68794, -222.786, -121.408, 1.08", "4.61276, -223.807, -122.307, 1.68", "4.51608, -224.908, -123.263, 0.12", "4.47028, -225.295, -123.572, 0.12", "4.44609, -225.519, -123.741, 0.12", "4.38398, -226.226, -124.274, 1.08", "4.31355, -227.939, -125.437, 0.12", "4.31275, -228.36, -125.697, 0.12", "4.32553, -228.93, -126.022, 0.12", "4.36399, -229.912, -126.54, 1.68", "4.43492, -231.227, -127.214, 0.12", "4.53083, -232.623, -127.876, 0.12", "4.57529, -233.336, -128.137, 0.12", "4.61187, -233.806, -128.317, 0.12", "4.69499, -234.603, -128.633, 1.56" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-11.2627, -200.767, -44.1261, 0.12", "-11.6422, -202.617, -44.6669, 0.12", "-11.7728, -203.302, -44.8461, 0.24", "-11.9628, -204.3, -45.1775, 0.24", "-12.131, -205.225, -45.5084, 0.24", "-12.1782, -205.524, -45.6151, 0.72", "-12.2382, -206.032, -45.7872, 1.08", "-12.2579, -206.524, -45.9315, 1.08", "-12.2583, -207.797, -46.3657, 0.24", "-12.2345, -208.261, -46.5804, 0.24", "-12.1705, -208.963, -46.948, 0.36", "-12.0759, -209.774, -47.4129, 0.36", "-11.9546, -210.666, -47.9803, 0.36", "-11.8115, -211.835, -48.7302, 1.8", "-11.7275, -212.776, -49.2924, 2.76", "-11.717, -213.309, -49.671, 2.76", "-11.7386, -214.843, -50.8345, 0.6", "-11.7457, -215.422, -51.2712, 0.12", "-11.7038, -216.244, -51.8256, 0.12", "-11.6057, -217.001, -52.2658, 0.48", "-11.1652, -219.275, -53.5076, 0.48", "-10.9363, -220.208, -53.9942, 2.04", "-10.6859, -221.033, -54.3766, 2.28", "-10.1644, -222.599, -55.0119, 0.48", "-9.83844, -223.52, -55.3368, 0.12", "-9.70557, -223.898, -55.4392, 0.12", "-9.59197, -224.28, -55.5078, 0.12", "-9.52111, -224.677, -55.6011, 0.12", "-9.43689, -225.597, -55.812, 0.12", "-9.37861, -226.598, -56.0782, 0.12", "-9.35031, -226.99, -56.2077, 0.12", "-9.25982, -228.229, -56.6863, 1.44", "-9.18123, -229.179, -57.0893, 2.52", "-9.08935, -230.026, -57.4763, 2.4", "-8.91117, -231.368, -58.1402, 1.2", "-8.78808, -232.492, -58.7073, 0.12", "-8.74021, -233.069, -58.9893, 0.12", "-8.71733, -233.545, -59.205, 0.12", "-8.71145, -233.97, -59.4082, 0.12", "-8.7268, -234.765, -59.7783, 1.2", "-8.76021, -235.854, -60.211, 2.16", "-8.77501, -236.822, -60.5562, 1.08", "-8.76867, -237.997, -61.0228, 0.36", "-8.75766, -238.681, -61.3236, 0.12", "-8.7582, -239.15, -61.555, 0.12", "-8.7556, -239.509, -61.7371, 0.48", "-8.7464, -240.207, -62.094, 0.6", "-8.75117, -241.431, -62.6892, 0.48", "-8.78796, -242.238, -63.0443, 0.36", "-8.88886, -243.175, -63.4161, 0.72", "-9.01471, -243.949, -63.705, 1.8", "-9.16862, -244.725, -63.9625, 2.52", "-9.32721, -245.472, -64.1473, 2.76", "-9.68449, -247.103, -64.3605, 0.6", "-9.81279, -247.684, -64.3963, 0.24", "-9.93305, -248.293, -64.4024, 0.36", "-10.0606, -248.938, -64.4031, 0.36", "-10.2095, -249.769, -64.3742, 0.36", "-10.3367, -250.545, -64.3409, 0.36", "-10.3853, -250.912, -64.329, 1.08", "-10.4984, -251.691, -64.3309, 1.68", "-10.5678, -252.09, -64.3429, 1.92", "-10.7003, -252.743, -64.3909, 2.04", "-10.8927, -253.686, -64.5016, 1.32", "-11.0177, -254.396, -64.5882, 0.36", "-11.1026, -255.042, -64.6598, 0.36", "-11.1734, -255.812, -64.732, 0.36", "-11.196, -256.204, -64.7587, 0.6", "-11.2226, -256.734, -64.778, 0.72", "-11.2522, -257.258, -64.7781, 0.72", "-11.3091, -257.931, -64.7523, 0.36", "-11.3976, -258.701, -64.7116, 0.36", "-11.5097, -259.489, -64.6621, 0.36", "-11.5776, -260.032, -64.618, 0.6", "-11.6348, -260.619, -64.5655, 0.48", "-11.7043, -261.647, -64.471, 0.36", "-11.7077, -262.061, -64.4368, 0.36", "-11.6932, -262.636, -64.3857, 0.36", "-11.6019, -263.783, -64.281, 1.68", "-11.4696, -264.686, -64.2013, 3.12", "-11.3875, -265.07, -64.1699, 3.37", "-11.0792, -266.134, -64.1153, 2.16" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-11.0792, -266.134, -64.1153, 0.24", "-11.705, -267.179, -64.5859, 0.24", "-11.9604, -267.574, -64.7062, 0.24", "-12.1516, -267.852, -64.769, 0.24", "-12.3388, -268.128, -64.799, 0.24", "-12.5747, -268.493, -64.8117, 0.24", "-12.8312, -268.907, -64.8089, 0.24", "-13.1371, -269.421, -64.7299, 0.96", "-13.2944, -269.682, -64.6882, 1.32", "-13.5556, -270.095, -64.6089, 0.72", "-13.8057, -270.458, -64.5324, 0.12", "-14.0943, -270.84, -64.4513, 0.12", "-14.3658, -271.229, -64.3736, 0.12", "-14.5409, -271.502, -64.3359, 0.12", "-14.9161, -272.187, -64.2685, 1.44", "-15.1034, -272.58, -64.2552, 1.68", "-15.3324, -273.13, -64.247, 1.08", "-15.5216, -273.639, -64.2081, 0.48", "-15.6245, -273.97, -64.1462, 0.12", "-15.8071, -274.633, -64.0212, 0.12", "-15.9835, -275.272, -63.8226, 0.48", "-16.048, -275.489, -63.7349, 0.48", "-16.3028, -276.243, -63.336, 0.48", "-16.5918, -276.913, -62.9389, 0.96", "-16.8148, -277.386, -62.6354, 0.96", "-17.2756, -278.304, -62.0441, 0.12", "-17.422, -278.607, -61.8453, 0.12", "-17.6819, -279.172, -61.5016, 1.2", "-17.9111, -279.692, -61.2228, 1.68", "-18.0509, -279.999, -61.0606, 2.16", "-18.1862, -280.3, -60.9035, 2.16", "-18.6873, -281.476, -60.4464, 0.36", "-18.8535, -281.83, -60.2785, 0.36", "-18.9942, -282.09, -60.1431, 1.08", "-19.2695, -282.552, -59.8819, 1.32", "-19.435, -282.803, -59.7379, 1.2", "-19.8042, -283.305, -59.4535, 1.2", "-20.933, -284.57, -58.686, 0.12", "-21.1903, -284.805, -58.5254, 0.24", "-21.5049, -285.051, -58.3516, 0.24", "-21.6849, -285.186, -58.2655, 0.36", "-22.0892, -285.471, -58.0689, 0.36", "-22.6427, -285.848, -57.8004, 0.12", "-23.0156, -286.078, -57.7345, 0.12", "-23.3444, -286.267, -57.6552, 0.96", "-23.8076, -286.499, -57.5086, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.0792, -266.134, -64.1153, 0.12", "-10.6051, -267.126, -64.4398, 0.12", "-10.3666, -267.619, -64.5469, 0.12", "-9.95493, -268.479, -64.7037, 0.84", "-9.47083, -269.546, -64.8629, 0.84", "-9.14867, -270.283, -64.968, 0.12", "-8.85739, -271.0, -65.063, 0.12", "-8.54289, -271.879, -65.1633, 0.48", "-8.3537, -272.526, -65.2182, 0.6", "-8.17719, -273.333, -65.2563, 0.24", "-8.10224, -273.814, -65.263, 0.12", "-8.02893, -274.613, -65.3215, 0.24", "-7.99314, -275.419, -65.4434, 0.24", "-7.98518, -276.207, -65.6042, 0.24", "-7.99435, -276.607, -65.6831, 0.84", "-8.03928, -277.549, -65.9043, 1.32", "-8.07611, -278.309, -66.1122, 1.8", "-8.12218, -279.523, -66.4917, 2.4", "-8.16252, -280.295, -66.7484, 1.92", "-8.26051, -281.433, -67.1665, 0.48", "-8.34249, -282.15, -67.4453, 0.12", "-8.4432, -282.861, -67.7206, 0.12", "-8.49576, -283.263, -67.8613, 0.12", "-8.55674, -284.075, -68.149, 0.6", "-8.56552, -284.842, -68.4411, 0.24", "-8.53762, -285.511, -68.6836, 0.24", "-8.50615, -286.035, -68.8431, 0.96", "-8.41401, -287.267, -69.1738, 1.8", "-8.26226, -288.588, -69.4886, 0.96", "-8.08076, -289.576, -69.6836, 0.36", "-7.87176, -290.491, -69.824, 0.36", "-7.57505, -291.662, -69.976, 0.36", "-7.37674, -292.451, -70.0277, 0.36", "-7.26174, -292.983, -70.0257, 0.36", "-7.06792, -294.016, -69.9745, 1.92", "-6.90127, -295.017, -69.8996, 3.12", "-6.7873, -295.86, -69.8384, 3.12", "-6.6109, -297.763, -69.6011, 0.36", "-6.54148, -299.358, -69.2992, 0.36", "-6.54674, -300.077, -69.1283, 0.96", "-6.59159, -300.872, -68.8951, 1.56", "-6.67319, -301.775, -68.5824, 1.68", "-6.84879, -303.399, -67.9746, 0.84", "-6.95192, -304.216, -67.5918, 0.36", "-7.0032, -304.674, -67.3322, 0.36", "-7.05252, -305.256, -66.9918, 0.6", "-7.07708, -305.853, -66.6699, 0.36", "-7.04944, -306.729, -66.3113, 0.36", "-6.86891, -308.157, -65.9702, 0.12", "-6.71857, -308.853, -65.8592, 0.12", "-6.47863, -309.625, -65.7638, 1.32", "-6.15702, -310.381, -65.7058, 1.8", "-5.58337, -311.498, -65.685, 1.68", "-5.19179, -312.159, -65.7145, 1.32", "-4.82348, -312.714, -65.7565, 0.36", "-4.6022, -313.025, -65.7649, 0.36", "-4.07535, -313.694, -65.7163, 0.48", "-3.55245, -314.308, -65.5792, 0.12", "-2.9079, -315.076, -65.2989, 0.12", "-2.45552, -315.641, -65.0359, 1.08", "-2.27576, -315.866, -64.9193, 1.32", "-1.77885, -316.504, -64.4999, 0.84", "-1.39203, -317.018, -64.0922, 0.12", "-0.835062, -317.814, -63.4061, 0.12", "-0.32268, -318.67, -62.6344, 1.2", "-0.105815, -319.069, -62.2899, 1.68", "0.518291, -320.286, -61.2125, 0.6", "0.738551, -320.738, -60.8144, 0.48", "0.927792, -321.107, -60.4653, 0.48", "1.24537, -321.645, -59.8996, 0.12", "1.6791, -322.275, -59.294, 0.12", "1.98859, -322.659, -58.9992, 0.48", "2.37083, -323.069, -58.7993, 0.6", "2.90911, -323.691, -58.643, 0.36", "3.2032, -324.072, -58.5777, 0.36", "3.77269, -325.027, -58.5026, 1.32", "4.21513, -326.045, -58.4645, 2.4", "4.34497, -326.442, -58.4627, 2.52", "4.71287, -327.862, -58.4572, 1.2", "4.97285, -328.909, -58.4803, 0.12", "5.21334, -329.787, -58.5076, 0.12", "5.32931, -330.166, -58.5152, 0.12", "5.4695, -330.57, -58.5399, 0.48", "6.02846, -331.996, -58.6553, 0.48", "6.40237, -332.902, -58.7784, 0.48", "6.80863, -333.964, -59.0011, 0.48", "6.98999, -334.523, -59.1305, 0.12", "7.07841, -335.046, -59.2704, 0.12", "7.07632, -335.7, -59.4588, 1.44", "6.88437, -336.742, -59.781, 2.52", "6.66126, -337.536, -60.028, 2.64", "6.39358, -338.349, -60.3108, 2.4", "5.92699, -339.936, -60.8785, 0.6", "5.70989, -340.718, -61.161, 0.36", "5.42701, -341.796, -61.5434, 0.48", "5.25083, -342.61, -61.8072, 0.48", "5.08214, -343.6, -62.1151, 0.36", "4.90759, -345.15, -62.5512, 0.36", "4.88454, -345.546, -62.645, 1.32", "4.8545, -346.262, -62.7926, 1.68", "4.78638, -347.065, -62.9213, 1.92", "4.73502, -347.467, -62.969, 2.04", "4.48593, -348.956, -63.0861, 0.36", "4.40896, -349.355, -63.1174, 0.36", "4.31698, -349.945, -63.1568, 0.36", "4.20579, -350.874, -63.3741, 0.36", "4.12441, -351.528, -63.5462, 0.36", "3.99141, -352.682, -63.8862, 0.36", "3.92197, -353.437, -64.1489, 1.68", "3.87083, -354.322, -64.5118, 2.64", "3.89672, -357.314, -66.0366, 2.64" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "3.89672, -357.314, -66.0366, 0.12", "4.62872, -359.188, -66.2191, 0.12", "4.79062, -359.603, -66.3009, 0.12", "4.90101, -359.885, -66.3673, 0.12", "5.17156, -360.565, -66.585, 0.6", "5.37759, -361.142, -66.8454, 0.12", "5.46687, -361.407, -66.9782, 0.12", "5.69531, -362.212, -67.5226, 0.96", "5.87301, -362.822, -68.0572, 1.56", "6.13404, -363.737, -68.9652, 1.2", "6.39917, -364.771, -70.0156, 0.24", "6.45566, -365.078, -70.3876, 0.72", "6.51449, -365.672, -71.2565, 1.08", "6.52084, -366.572, -72.8712, 0.12", "6.51633, -366.783, -73.2783, 0.12", "6.49893, -367.346, -74.3503, 1.8", "6.50973, -369.187, -77.6969, 1.68", "6.55965, -370.286, -79.5603, 1.32", "6.68012, -371.751, -81.8232, 0.84", "6.76295, -372.433, -82.785, 1.44", "6.86632, -372.997, -83.5062, 2.16", "7.08423, -373.834, -84.3804, 0.24", "7.44626, -374.721, -84.9288, 0.24", "7.67368, -375.139, -85.0753, 0.72", "7.94452, -375.542, -85.1404, 0.96", "8.68811, -376.466, -85.2872, 0.12", "9.21021, -377.03, -85.3733, 0.12", "10.3677, -378.25, -85.5252, 0.12", "11.5667, -379.615, -85.6868, 1.2", "12.1165, -380.284, -85.758, 1.92", "13.0706, -381.497, -85.8768, 0.12", "13.4593, -382.011, -85.9353, 0.12", "13.9032, -382.684, -86.1423, 0.12", "14.4267, -383.566, -86.7543, 0.24", "14.8021, -384.122, -87.4609, 0.24", "14.9865, -384.338, -87.8524, 0.24", "15.6177, -384.949, -89.2927, 1.8", "16.5682, -385.8, -91.5041, 1.8", "17.3651, -386.438, -93.6155, 0.24", "17.8178, -386.752, -95.0066, 0.48", "18.0636, -386.917, -95.8908, 0.72", "18.3739, -387.105, -97.0469, 1.68", "18.5599, -387.199, -97.7657, 1.68", "19.5373, -387.628, -101.22, 1.68", "20.5117, -388.027, -104.563, 1.44", "20.877, -388.174, -105.762, 1.8", "21.1113, -388.261, -106.497, 1.92", "21.7905, -388.486, -108.397, 1.68", "22.2058, -388.631, -109.414, 0.24", "22.4883, -388.779, -109.933, 0.24", "22.8965, -389.104, -110.561, 0.24", "23.1432, -389.334, -110.913, 0.72", "23.38, -389.581, -111.239, 0.96", "23.9515, -390.177, -111.853, 0.84", "24.5352, -390.565, -112.49, 0.12", "24.8016, -390.615, -112.813, 0.12", "25.2757, -390.61, -113.398, 0.24", "25.6267, -390.602, -113.82, 0.24", "25.779, -390.617, -114.124, 0.24", "26.2538, -390.768, -115.863, 0.84", "26.4576, -390.868, -117.482, 1.32", "26.5336, -390.924, -118.896, 2.28", "26.5344, -390.927, -119.577, 2.76", "26.3535, -390.796, -124.709, 2.88", "26.1576, -390.619, -127.991, 2.16", "25.9219, -390.356, -131.311, 1.08", "25.867, -390.278, -132.125, 1.08", "25.7634, -390.093, -133.845, 2.04", "25.746, -390.04, -134.311, 2.04", "25.8359, -389.174, -141.862, 0.6", "25.8882, -389.113, -142.782, 0.48", "26.072, -389.144, -144.652, 0.96", "26.226, -389.262, -146.008, 0.12", "26.2671, -389.318, -146.305, 0.12", "26.3079, -389.388, -146.586, 0.12", "26.5138, -389.865, -147.422, 0.6", "26.6714, -390.37, -148.212, 0.12", "26.7539, -390.56, -148.439, 0.12", "27.2402, -391.315, -149.243, 1.32" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.89672, -357.314, -66.0366, 0.12", "3.87586, -358.819, -65.978, 0.12", "3.89946, -359.624, -65.9946, 0.12", "3.94542, -360.395, -66.0307, 0.6", "3.98488, -360.861, -66.0586, 0.36", "4.06068, -361.63, -66.0606, 0.36", "4.16208, -362.429, -66.0721, 0.36", "4.35998, -363.409, -66.111, 0.36", "4.44087, -363.737, -66.0984, 0.84", "4.56381, -364.197, -66.0474, 0.84", "4.90179, -365.36, -65.8606, 0.24", "5.28108, -366.627, -65.5741, 0.24", "5.53578, -367.454, -65.3483, 0.24", "6.01092, -368.845, -64.9289, 0.84", "6.27911, -369.585, -64.6986, 1.44", "6.71904, -370.731, -64.3441, 0.72", "7.02985, -371.546, -64.0802, 0.12", "7.13675, -371.844, -63.9645, 0.12", "7.39078, -372.601, -63.6866, 0.12", "7.59534, -373.343, -63.4215, 0.72", "7.68759, -373.766, -63.2213, 0.72", "7.82811, -374.625, -62.7773, 0.12", "7.89225, -375.17, -62.5251, 0.12", "7.93593, -375.568, -62.3419, 0.12", "8.07858, -376.848, -61.7863, 1.44", "8.19861, -377.703, -61.4227, 2.04", "8.33963, -378.597, -61.0525, 2.16", "8.54294, -379.711, -60.6294, 1.44", "8.76417, -380.742, -60.2601, 0.96", "8.95719, -381.492, -60.0341, 0.48", "9.14382, -382.166, -59.8813, 0.12", "9.3006, -382.687, -59.7833, 0.12", "9.43273, -383.1, -59.7005, 0.12", "9.70384, -383.905, -59.544, 0.12", "10.0075, -384.853, -59.4147, 0.12", "10.1996, -385.36, -59.3548, 0.84", "10.5882, -386.226, -59.2436, 1.56", "10.8915, -386.809, -59.1547, 1.8", "11.3583, -387.648, -59.0284, 1.32", "11.7462, -388.341, -58.9269, 0.12", "12.2043, -389.175, -58.8156, 0.12", "12.5952, -389.912, -58.7324, 0.84", "12.9868, -390.69, -58.6622, 0.96", "13.2447, -391.237, -58.6333, 0.12", "13.4167, -391.656, -58.6318, 0.12", "13.6759, -392.368, -58.687, 0.12", "13.817, -392.799, -58.7084, 0.12", "14.0364, -393.427, -58.7282, 1.56", "14.3057, -394.133, -58.7184, 1.92", "14.5346, -394.699, -58.6914, 2.28", "15.131, -396.149, -58.6009, 1.2", "15.6911, -397.535, -58.5188, 0.12", "15.9748, -398.333, -58.5016, 0.12", "16.1098, -398.792, -58.5065, 0.12", "16.2545, -399.38, -58.5326, 1.08", "16.4051, -400.124, -58.5896, 1.56", "16.4797, -400.775, -58.6777, 1.44", "16.5488, -401.63, -58.8743, 0.12", "16.571, -401.925, -58.9423, 0.12", "16.6592, -402.772, -59.1318, 0.12", "16.7676, -403.496, -59.3248, 0.12", "16.9636, -404.573, -59.6278, 0.12", "17.0505, -405.016, -59.7492, 0.84", "17.2156, -405.785, -59.9604, 1.2", "17.3177, -406.222, -60.0879, 1.2", "17.6739, -407.562, -60.4956, 0.12", "17.8946, -408.242, -60.698, 0.12", "17.9941, -408.518, -60.7717, 0.12", "18.2739, -409.302, -60.9212, 0.72", "18.5158, -410.015, -60.9904, 0.72", "18.7155, -410.626, -60.9893, 0.12", "18.9008, -411.273, -60.9129, 0.12", "19.03, -411.848, -60.8482, 0.12", "19.2156, -412.933, -60.7183, 1.44", "19.3079, -413.672, -60.6263, 1.92", "19.3466, -414.149, -60.5881, 1.92", "19.4081, -415.511, -60.5371, 0.12", "19.4804, -416.798, -60.5442, 0.12", "19.5062, -417.029, -60.5563, 0.6", "19.616, -417.822, -60.6456, 0.72", "19.776, -418.846, -60.7992, 0.48", "19.8955, -419.599, -60.9291, 0.24", "20.0257, -420.42, -61.0953, 0.36", "20.1715, -421.563, -61.3222, 0.36", "20.2032, -422.675, -61.546, 0.36", "20.1297, -423.407, -61.6812, 0.48", "20.0384, -424.016, -61.7856, 0.72", "19.8673, -424.79, -61.9255, 0.72", "19.6626, -425.395, -62.0361, 0.72", "19.0332, -426.747, -62.2737, 2.04", "18.5258, -427.696, -62.4023, 3.25" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.5258, -427.696, -62.4023, 0.12", "20.2674, -428.671, -62.3636, 0.12", "20.8669, -428.973, -62.35, 0.12", "20.9806, -429.026, -62.3495, 0.48", "21.3231, -429.18, -62.3629, 0.48", "21.5856, -429.301, -62.3794, 0.12", "22.1952, -429.587, -62.4225, 0.12", "22.5565, -429.745, -62.458, 0.72", "22.932, -429.936, -62.4215, 0.72", "23.3867, -430.211, -62.3021, 0.12", "24.3025, -430.862, -61.9405, 0.12", "24.7116, -431.187, -61.733, 0.96", "24.9571, -431.396, -61.5823, 0.96", "26.4189, -432.719, -60.5048, 0.12", "26.8585, -433.146, -60.1013, 0.12", "27.044, -433.341, -59.8804, 0.12", "27.2433, -433.587, -59.5457, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "18.5258, -427.696, -62.4023, 2.64", "17.8874, -428.131, -62.3557, 2.64", "16.6714, -428.977, -62.1212, 0.24", "16.4683, -429.136, -62.0637, 0.24", "16.2048, -429.369, -61.9708, 0.24", "15.6431, -429.941, -61.7051, 0.24", "15.4838, -430.127, -61.6244, 0.24", "15.3453, -430.368, -61.4849, 0.24", "15.1909, -430.782, -61.2147, 0.24", "15.089, -431.1, -61.0325, 1.08", "14.9786, -431.539, -60.8325, 1.56", "14.8663, -432.063, -60.65, 1.68", "14.7421, -432.896, -60.3931, 0.12", "14.7265, -433.063, -60.348, 0.12", "14.7142, -433.325, -60.2919, 0.48", "14.7068, -433.671, -60.2471, 0.48", "14.707, -433.772, -60.2428, 0.12", "14.7372, -434.462, -60.2385, 0.12", "14.7622, -434.813, -60.2623, 0.12", "14.8052, -435.5, -60.3088, 0.12", "14.8143, -435.775, -60.3338, 1.32", "14.8109, -436.132, -60.3689, 1.08", "14.7858, -436.477, -60.3977, 0.12", "14.7377, -436.832, -60.4192, 0.12", "14.6691, -437.166, -60.4252, 0.12", "14.5697, -437.57, -60.4157, 0.12", "14.3951, -438.2, -60.3748, 0.12", "14.2279, -438.743, -60.3343, 1.2", "14.0916, -439.154, -60.3006, 1.44", "13.9336, -439.612, -60.2554, 0.12", "13.7315, -440.18, -60.1821, 0.12", "13.6153, -440.524, -60.1201, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_21", "dend_0", "dend_32", "dend_25", "dend_23", "dend_22", "dend_20", "dend_1", "dend_27", "dend_26", "dend_15", "dend_2", "dend_31", "dend_28", "dend_19", "dend_16", "dend_14", "dend_3", "dend_30", "dend_29", "dend_18", "dend_17", "dend_13", "dend_4", "dend_12", "dend_5", "dend_11", "dend_6", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_21", "dend_0", "dend_32", "dend_25", "dend_23", "dend_22", "dend_20", "dend_1", "dend_27", "dend_26", "dend_15", "dend_2", "dend_31", "dend_28", "dend_19", "dend_16", "dend_14", "dend_3", "dend_30", "dend_29", "dend_18", "dend_17", "dend_13", "dend_4", "dend_12", "dend_5", "dend_11", "dend_6", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_LBC_99ab75ea98_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_3
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.4999990498682201)
    connect dend_21(0), soma_0(0.4999990498682201)
    connect dend_0(0), soma_0(0.4999990498682201)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.291345, -11.9572, -0.745668, 2.83924 ) }
    soma_0 { pt3dadd( 0.329834, -10.8055, -0.67345, 4.66212 ) }
    soma_0 { pt3dadd( 0.368323, -9.65383, -0.601232, 6.28225 ) }
    soma_0 { pt3dadd( 0.406811, -8.50213, -0.529013, 7.64969 ) }
    soma_0 { pt3dadd( 0.4453, -7.35043, -0.456795, 8.93084 ) }
    soma_0 { pt3dadd( 0.483789, -6.19873, -0.384577, 10.0574 ) }
    soma_0 { pt3dadd( 0.522278, -5.04703, -0.312359, 10.8977 ) }
    soma_0 { pt3dadd( 0.560767, -3.89533, -0.24014, 11.5145 ) }
    soma_0 { pt3dadd( 0.599255, -2.74363, -0.167922, 11.78 ) }
    soma_0 { pt3dadd( 0.637744, -1.59192, -0.0957039, 11.9272 ) }
    soma_0 { pt3dadd( 0.676233, -0.440222, -0.0234857, 12.0017 ) }
    soma_0 { pt3dadd( 0.714722, 0.711479, 0.0487325, 11.8836 ) }
    soma_0 { pt3dadd( 0.75321, 1.86318, 0.120951, 11.6932 ) }
    soma_0 { pt3dadd( 0.791699, 3.01488, 0.193169, 11.3303 ) }
    soma_0 { pt3dadd( 0.830188, 4.16658, 0.265387, 10.9521 ) }
    soma_0 { pt3dadd( 0.868677, 5.31828, 0.337605, 9.94576 ) }
    soma_0 { pt3dadd( 0.907166, 6.46999, 0.409824, 8.97095 ) }
    soma_0 { pt3dadd( 0.945654, 7.62169, 0.482042, 7.75467 ) }
    soma_0 { pt3dadd( 0.984143, 8.77339, 0.55426, 5.92032 ) }
    soma_0 { pt3dadd( 1.02263, 9.92509, 0.626478, 4.15016 ) }
    soma_0 { pt3dadd( 1.06112, 11.0768, 0.698697, 2.55961 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.13709, 10.8469, -8.92677, 1.08 ) }
    dend_24 { pt3dadd( -2.17411, 11.1644, -8.86829, 0.96 ) }
    dend_24 { pt3dadd( -3.27649, 11.477, -8.7449, 1.44 ) }
    dend_24 { pt3dadd( -3.969, 11.6698, -8.65302, 1.68 ) }
    dend_24 { pt3dadd( -4.81624, 11.8833, -8.53669, 1.68 ) }
    dend_24 { pt3dadd( -6.36834, 12.2456, -8.32809, 1.2 ) }
    dend_24 { pt3dadd( -7.65815, 12.5154, -8.18913, 0.72 ) }
    dend_24 { pt3dadd( -8.64005, 12.6942, -8.13455, 0.6 ) }
    dend_24 { pt3dadd( -8.95267, 12.7514, -8.15536, 0.6 ) }
    dend_24 { pt3dadd( -9.92612, 12.9555, -8.31494, 1.44 ) }
    dend_24 { pt3dadd( -10.7362, 13.1629, -8.54391, 2.28 ) }
    dend_24 { pt3dadd( -11.9177, 13.5608, -9.05984, 2.16 ) }
    dend_24 { pt3dadd( -13.2608, 14.1878, -9.99097, 1.08 ) }
    dend_24 { pt3dadd( -14.5683, 15.0558, -11.3049, 0.48 ) }
    dend_24 { pt3dadd( -14.8738, 15.3609, -11.7405, 0.48 ) }
    dend_24 { pt3dadd( -15.1841, 15.8644, -12.4241, 1.08 ) }
    dend_24 { pt3dadd( -15.3698, 16.3746, -13.0774, 1.68 ) }
    dend_24 { pt3dadd( -15.6313, 18.0508, -15.0682, 1.8 ) }
    dend_24 { pt3dadd( -15.6452, 18.791, -15.8834, 1.44 ) }
    dend_24 { pt3dadd( -15.6042, 19.6591, -16.7711, 0.72 ) }
    dend_24 { pt3dadd( -15.594, 20.1931, -17.3028, 0.12 ) }
    dend_24 { pt3dadd( -15.6285, 20.5321, -17.6009, 0.12 ) }
    dend_24 { pt3dadd( -15.7008, 20.7737, -17.7656, 0.12 ) }
    dend_24 { pt3dadd( -15.9563, 21.2163, -17.9014, 0.48 ) }
    dend_24 { pt3dadd( -16.0507, 21.3378, -17.9302, 0.12 ) }
    dend_24 { pt3dadd( -16.6563, 22.0126, -18.0603, 0.12 ) }
    dend_24 { pt3dadd( -17.4459, 22.8654, -18.2336, 1.8 ) }
    dend_24 { pt3dadd( -18.1196, 23.6035, -18.3872, 2.76 ) }
    dend_24 { pt3dadd( -18.6537, 24.1974, -18.5051, 3.0 ) }
    dend_24 { pt3dadd( -19.4351, 25.0949, -18.6712, 1.92 ) }
    dend_24 { pt3dadd( -20.2368, 25.9962, -18.8203, 0.48 ) }
    dend_24 { pt3dadd( -20.9028, 26.7454, -18.9111, 0.36 ) }
    dend_24 { pt3dadd( -21.5964, 27.5375, -18.962, 0.84 ) }
    dend_24 { pt3dadd( -22.2525, 28.3081, -18.9817, 0.6 ) }
    dend_24 { pt3dadd( -22.7719, 28.9079, -18.9711, 0.36 ) }
    dend_24 { pt3dadd( -23.5811, 29.8321, -18.9458, 0.36 ) }
    dend_24 { pt3dadd( -24.1733, 30.4954, -18.9611, 1.56 ) }
    dend_24 { pt3dadd( -25.1757, 31.5744, -19.0242, 3.49 ) }
    dend_24 { pt3dadd( -25.4796, 31.8968, -19.0588, 3.85 ) }
    dend_24 { pt3dadd( -26.2259, 32.6986, -19.1363, 4.33 ) }
    dend_24 { pt3dadd( -27.0958, 33.6408, -19.2236, 3.25 ) }
    dend_24 { pt3dadd( -28.5432, 35.2773, -19.3581, 0.12 ) }
    dend_24 { pt3dadd( -29.0967, 35.9094, -19.4035, 0.12 ) }
    dend_24 { pt3dadd( -29.3826, 36.2504, -19.4149, 0.12 ) }
    dend_24 { pt3dadd( -30.2108, 37.3039, -19.4111, 0.96 ) }
    dend_24 { pt3dadd( -30.4481, 37.6367, -19.3945, 1.08 ) }
    dend_24 { pt3dadd( -31.1637, 38.6969, -19.2862, 0.72 ) }
    dend_24 { pt3dadd( -31.7842, 39.6734, -19.3027, 0.12 ) }
    dend_24 { pt3dadd( -32.513, 40.8068, -19.4509, 0.12 ) }
    dend_24 { pt3dadd( -32.7913, 41.2374, -19.5479, 1.2 ) }
    dend_24 { pt3dadd( -33.2286, 41.9185, -19.7626, 2.16 ) }
    dend_24 { pt3dadd( -33.7112, 42.6502, -20.0591, 1.92 ) }
    dend_24 { pt3dadd( -35.1868, 44.8293, -21.1037, 0.12 ) }
    dend_24 { pt3dadd( -35.4484, 45.2136, -21.3221, 0.24 ) }
    dend_24 { pt3dadd( -35.8865, 45.8613, -21.7198, 0.24 ) }
    dend_24 { pt3dadd( -36.1999, 46.3253, -22.0175, 0.24 ) }
    dend_24 { pt3dadd( -37.2094, 47.8276, -23.0206, 3.25 ) }
    dend_24 { pt3dadd( -37.5235, 48.3047, -23.3314, 3.97 ) }
    dend_24 { pt3dadd( -38.0838, 49.179, -23.7853, 3.97 ) }
    dend_24 { pt3dadd( -38.4928, 49.8163, -24.1525, 3.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 81/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.302907, 11.4619, 4.01323, 1.8 ) }
    dend_21 { pt3dadd( -0.0313093, 12.0915, 4.42167, 1.32 ) }
    dend_21 { pt3dadd( -0.416129, 12.745, 5.13655, 0.72 ) }
    dend_21 { pt3dadd( -0.635399, 13.1591, 5.70938, 0.48 ) }
    dend_21 { pt3dadd( -0.843152, 13.6301, 6.46092, 0.48 ) }
    dend_21 { pt3dadd( -1.00177, 14.1582, 7.37372, 0.6 ) }
    dend_21 { pt3dadd( -1.08925, 14.9121, 8.77224, 1.68 ) }
    dend_21 { pt3dadd( -1.02499, 15.551, 10.2045, 1.68 ) }
    dend_21 { pt3dadd( -0.88072, 15.8645, 11.06, 1.56 ) }
    dend_21 { pt3dadd( -0.600794, 16.1475, 11.9596, 1.44 ) }
    dend_21 { pt3dadd( -0.165321, 16.3815, 12.8721, 0.72 ) }
    dend_21 { pt3dadd( 0.562486, 16.5896, 13.8868, 0.84 ) }
    dend_21 { pt3dadd( 0.826297, 16.6166, 14.1398, 0.84 ) }
    dend_21 { pt3dadd( 1.61896, 16.5882, 14.7661, 0.6 ) }
    dend_21 { pt3dadd( 2.21749, 16.5251, 15.3224, 0.84 ) }
    dend_21 { pt3dadd( 2.87487, 16.3909, 15.9863, 1.08 ) }
    dend_21 { pt3dadd( 3.51571, 16.2347, 16.7019, 1.08 ) }
    dend_21 { pt3dadd( 4.08886, 16.0925, 17.3983, 1.2 ) }
    dend_21 { pt3dadd( 5.09135, 15.874, 18.6506, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( 6.84419, 15.6461, 20.9685, 1.32 ) }
    dend_21 { pt3dadd( 7.29689, 15.6448, 21.5898, 0.6 ) }
    dend_21 { pt3dadd( 7.62428, 15.6862, 22.0662, 0.96 ) }
    dend_21 { pt3dadd( 7.79319, 15.7391, 22.3342, 1.92 ) }
    dend_21 { pt3dadd( 8.17657, 15.9622, 22.9092, 2.16 ) }
    dend_21 { pt3dadd( 9.17626, 16.8416, 23.9761, 1.44 ) }
    dend_21 { pt3dadd( 9.73207, 17.4735, 24.2646, 0.84 ) }
    dend_21 { pt3dadd( 10.1788, 17.994, 24.4576, 0.84 ) }
    dend_21 { pt3dadd( 10.7292, 18.5908, 24.6649, 0.84 ) }
    dend_21 { pt3dadd( 11.1944, 19.2014, 24.821, 0.84 ) }
    dend_21 { pt3dadd( 11.4966, 19.7222, 24.901, 0.48 ) }
    dend_21 { pt3dadd( 11.9502, 20.5623, 24.8996, 0.48 ) }
    dend_21 { pt3dadd( 12.3794, 21.3198, 24.9014, 1.32 ) }
    dend_21 { pt3dadd( 12.4186, 21.3763, 24.9018, 1.56 ) }
    dend_21 { pt3dadd( 13.1088, 22.1599, 24.9198, 1.2 ) }
    dend_21 { pt3dadd( 13.4208, 22.53, 24.9425, 1.68 ) }
    dend_21 { pt3dadd( 18.661, 25.5942, 32.4829, 1.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.672909, -11.7953, -3.94677, 2.52 ) }
    dend_0 { pt3dadd( 0.703943, -13.0043, -4.42462, 1.8 ) }
    dend_0 { pt3dadd( 0.718607, -14.6115, -5.05242, 1.92 ) }
    dend_0 { pt3dadd( 0.723875, -16.9697, -5.8807, 1.68 ) }
    dend_0 { pt3dadd( 0.720556, -19.3777, -6.64888, 2.64 ) }
    dend_0 { pt3dadd( 0.702412, -21.5022, -7.26968, 4.09 ) }
    dend_0 { pt3dadd( 0.660443, -24.3035, -8.02554, 3.49 ) }
    dend_0 { pt3dadd( 0.566024, -26.7377, -8.61684, 2.16 ) }
    dend_0 { pt3dadd( 0.452889, -28.2843, -8.93459, 1.56 ) }
    dend_0 { pt3dadd( 0.301778, -29.6737, -9.13578, 1.32 ) }
    dend_0 { pt3dadd( 0.119849, -30.9752, -9.24506, 1.2 ) }
    dend_0 { pt3dadd( -0.0645799, -32.129, -9.29622, 1.44 ) }
    dend_0 { pt3dadd( -0.428133, -34.0247, -9.32667, 1.92 ) }
    dend_0 { pt3dadd( -0.762168, -35.502, -9.32452, 2.88 ) }
    dend_0 { pt3dadd( -1.14214, -36.9667, -9.37694, 3.0 ) }
    dend_0 { pt3dadd( -1.36233, -37.7194, -9.40783, 2.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.06112, 11.0768, 0.698697, 0.617912 ) }
    axon_0 { pt3dadd( 1.56213, 26.0684, 0.698697, 0.617912 ) }
    axon_0 { pt3dadd( 2.06313, 41.0601, 0.698697, 0.617912 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 36/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -38.4928, 49.8163, -24.1525, 0.12 ) }
    dend_32 { pt3dadd( -40.8898, 50.8584, -23.9226, 0.12 ) }
    dend_32 { pt3dadd( -42.6419, 51.5664, -23.7531, 0.12 ) }
    dend_32 { pt3dadd( -44.2681, 52.1635, -23.5931, 0.12 ) }
    dend_32 { pt3dadd( -44.9135, 52.3996, -23.5065, 1.08 ) }
    dend_32 { pt3dadd( -45.5439, 52.6314, -23.411, 0.12 ) }
    dend_32 { pt3dadd( -46.9532, 53.1516, -23.1398, 0.12 ) }
    dend_32 { pt3dadd( -47.7933, 53.4379, -22.9255, 1.8 ) }
    dend_32 { pt3dadd( -48.8741, 53.7893, -22.5848, 2.76 ) }
    dend_32 { pt3dadd( -50.707, 54.3992, -21.8889, 0.12 ) }
    dend_32 { pt3dadd( -51.0381, 54.5237, -21.7523, 0.12 ) }
    dend_32 { pt3dadd( -52.0056, 54.9241, -21.3321, 0.12 ) }
    dend_32 { pt3dadd( -52.6179, 55.1974, -21.132, 0.12 ) }
    dend_32 { pt3dadd( -53.592, 55.6171, -20.9662, 0.96 ) }
    dend_32 { pt3dadd( -54.2098, 55.8686, -20.958, 0.12 ) }
    dend_32 { pt3dadd( -55.4162, 56.3251, -21.1193, 0.12 ) }
    dend_32 { pt3dadd( -56.0635, 56.5612, -21.2409, 0.96 ) }
    dend_32 { pt3dadd( -58.2915, 57.3543, -21.7413, 0.12 ) }
    dend_32 { pt3dadd( -59.3988, 57.7412, -21.9929, 0.12 ) }
    dend_32 { pt3dadd( -60.0297, 57.9499, -22.13, 0.96 ) }
    dend_32 { pt3dadd( -60.8296, 58.1975, -22.3363, 0.12 ) }
    dend_32 { pt3dadd( -61.4574, 58.3903, -22.5061, 0.12 ) }
    dend_32 { pt3dadd( -62.6296, 58.7428, -22.6655, 0.12 ) }
    dend_32 { pt3dadd( -63.6672, 59.0257, -22.6203, 1.56 ) }
    dend_32 { pt3dadd( -64.4842, 59.2348, -22.5394, 2.4 ) }
    dend_32 { pt3dadd( -66.0365, 59.5759, -22.3006, 2.4 ) }
    dend_32 { pt3dadd( -66.3974, 59.6485, -22.2118, 2.16 ) }
    dend_32 { pt3dadd( -68.9369, 60.1263, -21.4113, 0.12 ) }
    dend_32 { pt3dadd( -70.0082, 60.2963, -20.9045, 0.12 ) }
    dend_32 { pt3dadd( -70.4706, 60.3722, -20.6455, 0.24 ) }
    dend_32 { pt3dadd( -71.3475, 60.5275, -20.128, 0.24 ) }
    dend_32 { pt3dadd( -72.5154, 60.7399, -19.4111, 1.92 ) }
    dend_32 { pt3dadd( -72.9758, 60.8184, -19.1582, 2.16 ) }
    dend_32 { pt3dadd( -75.1883, 61.2505, -18.1204, 0.12 ) }
    dend_32 { pt3dadd( -76.3481, 61.4932, -17.5925, 0.12 ) }
    dend_32 { pt3dadd( -77.4297, 61.7136, -17.1281, 0.96 ) }
    dend_32 { pt3dadd( -77.9283, 61.8225, -16.9364, 0.12 ) }
    dend_32 { pt3dadd( -79.1996, 62.1027, -16.5243, 0.12 ) }
    dend_32 { pt3dadd( -79.9822, 62.2895, -16.2597, 0.84 ) }
    dend_32 { pt3dadd( -80.6095, 62.4493, -16.0592, 0.12 ) }
    dend_32 { pt3dadd( -82.0727, 62.8538, -15.5312, 0.12 ) }
    dend_32 { pt3dadd( -83.0969, 63.1757, -15.1571, 1.8 ) }
    dend_32 { pt3dadd( -83.582, 63.3482, -14.9911, 2.04 ) }
    dend_32 { pt3dadd( -84.9939, 63.941, -14.5613, 1.92 ) }
    dend_32 { pt3dadd( -86.0978, 64.44, -14.2712, 0.12 ) }
    dend_32 { pt3dadd( -87.569, 65.1635, -13.9388, 0.12 ) }
    dend_32 { pt3dadd( -89.1155, 65.9786, -13.6593, 2.52 ) }
    dend_32 { pt3dadd( -90.5896, 66.7601, -13.5204, 0.12 ) }
    dend_32 { pt3dadd( -92.8687, 67.9861, -13.488, 0.12 ) }
    dend_32 { pt3dadd( -93.866, 68.5474, -13.538, 1.08 ) }
    dend_32 { pt3dadd( -94.2756, 68.7787, -13.567, 0.12 ) }
    dend_32 { pt3dadd( -95.611, 69.524, -13.6908, 0.12 ) }
    dend_32 { pt3dadd( -97.4076, 70.4772, -13.8111, 0.12 ) }
    dend_32 { pt3dadd( -98.0969, 70.7963, -13.825, 0.12 ) }
    dend_32 { pt3dadd( -99.3815, 71.3093, -13.7701, 1.68 ) }
    dend_32 { pt3dadd( -100.24, 71.6106, -13.692, 2.28 ) }
    dend_32 { pt3dadd( -100.748, 71.7685, -13.6226, 2.4 ) }
    dend_32 { pt3dadd( -102.571, 72.2882, -13.2716, 0.12 ) }
    dend_32 { pt3dadd( -103.508, 72.5798, -13.0024, 0.12 ) }
    dend_32 { pt3dadd( -104.287, 72.8336, -12.7852, 0.84 ) }
    dend_32 { pt3dadd( -105.019, 73.1084, -12.5539, 0.12 ) }
    dend_32 { pt3dadd( -105.763, 73.4651, -12.293, 0.12 ) }
    dend_32 { pt3dadd( -106.524, 73.8815, -12.0194, 0.48 ) }
    dend_32 { pt3dadd( -108.118, 74.837, -11.4351, 2.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -108.724, 75.2259, -11.1891, 2.64 ) }
    dend_32 { pt3dadd( -110.564, 76.4588, -10.3637, 0.12 ) }
    dend_32 { pt3dadd( -111.639, 77.2412, -9.8268, 0.12 ) }
    dend_32 { pt3dadd( -112.588, 77.969, -9.32533, 1.08 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -38.4928, 49.8163, -24.1525, 0.72 ) }
    dend_25 { pt3dadd( -39.2707, 51.4984, -24.984, 0.72 ) }
    dend_25 { pt3dadd( -39.5909, 52.2251, -25.3563, 0.72 ) }
    dend_25 { pt3dadd( -40.0023, 53.137, -25.8534, 0.72 ) }
    dend_25 { pt3dadd( -40.378, 53.9533, -26.2926, 0.36 ) }
    dend_25 { pt3dadd( -40.6835, 54.6221, -26.6589, 0.24 ) }
    dend_25 { pt3dadd( -40.8251, 54.9521, -26.834, 0.24 ) }
    dend_25 { pt3dadd( -41.1041, 55.7583, -27.2424, 0.6 ) }
    dend_25 { pt3dadd( -41.3126, 56.4176, -27.5481, 0.84 ) }
    dend_25 { pt3dadd( -41.5357, 57.1408, -27.811, 0.48 ) }
    dend_25 { pt3dadd( -41.7047, 57.6504, -27.992, 0.24 ) }
    dend_25 { pt3dadd( -41.9229, 58.296, -28.2196, 0.24 ) }
    dend_25 { pt3dadd( -42.0522, 58.6782, -28.3484, 0.36 ) }
    dend_25 { pt3dadd( -42.3632, 59.6338, -28.6408, 0.6 ) }
    dend_25 { pt3dadd( -42.6704, 60.5846, -28.9155, 0.6 ) }
    dend_25 { pt3dadd( -43.0143, 61.6161, -29.2752, 0.12 ) }
    dend_25 { pt3dadd( -43.2281, 62.2307, -29.5331, 0.12 ) }
    dend_25 { pt3dadd( -43.601, 63.2145, -29.998, 2.04 ) }
    dend_25 { pt3dadd( -43.6989, 63.4745, -30.1276, 2.64 ) }
    dend_25 { pt3dadd( -43.9447, 64.2047, -30.5019, 2.76 ) }
    dend_25 { pt3dadd( -44.2391, 65.1557, -30.9603, 2.64 ) }
    dend_25 { pt3dadd( -44.6669, 66.7377, -31.5623, 0.12 ) }
    dend_25 { pt3dadd( -44.9141, 67.7329, -31.8824, 0.12 ) }
    dend_25 { pt3dadd( -44.9984, 68.1133, -31.9793, 0.12 ) }
    dend_25 { pt3dadd( -45.1652, 68.8802, -32.1484, 0.12 ) }
    dend_25 { pt3dadd( -45.3796, 69.8237, -32.3241, 0.12 ) }
    dend_25 { pt3dadd( -45.6244, 70.908, -32.4656, 1.68 ) }
    dend_25 { pt3dadd( -45.7819, 71.6167, -32.5511, 2.64 ) }
    dend_25 { pt3dadd( -45.8768, 72.0372, -32.6125, 2.64 ) }
    dend_25 { pt3dadd( -46.0264, 72.663, -32.7121, 2.4 ) }
    dend_25 { pt3dadd( -46.3982, 74.1493, -32.9627, 0.36 ) }
    dend_25 { pt3dadd( -46.7851, 75.718, -33.3063, 0.36 ) }
    dend_25 { pt3dadd( -46.8591, 76.0028, -33.3956, 0.36 ) }
    dend_25 { pt3dadd( -46.9333, 76.2902, -33.4764, 0.12 ) }
    dend_25 { pt3dadd( -47.3369, 77.8447, -33.8603, 0.12 ) }
    dend_25 { pt3dadd( -47.5892, 78.7765, -34.0826, 1.92 ) }
    dend_25 { pt3dadd( -47.961, 80.0224, -34.5083, 2.76 ) }
    dend_25 { pt3dadd( -48.5912, 81.9523, -35.3094, 0.12 ) }
    dend_25 { pt3dadd( -49.3399, 84.186, -36.3004, 0.12 ) }
    dend_25 { pt3dadd( -49.7003, 85.18, -36.7803, 2.04 ) }
    dend_25 { pt3dadd( -50.0282, 86.0162, -37.224, 2.76 ) }
    dend_25 { pt3dadd( -51.2128, 88.8736, -38.7615, 0.12 ) }
    dend_25 { pt3dadd( -51.5857, 89.727, -39.2177, 0.12 ) }
    dend_25 { pt3dadd( -52.177, 90.9851, -39.9029, 0.12 ) }
    dend_25 { pt3dadd( -52.7342, 92.0834, -40.585, 0.48 ) }
    dend_25 { pt3dadd( -52.9852, 92.5434, -40.8685, 0.12 ) }
    dend_25 { pt3dadd( -53.6722, 93.7829, -41.5557, 0.12 ) }
    dend_25 { pt3dadd( -54.4285, 95.1392, -42.2108, 2.88 ) }
    dend_25 { pt3dadd( -54.742, 95.6819, -42.4839, 3.12 ) }
    dend_25 { pt3dadd( -55.3768, 96.7735, -43.0301, 2.16 ) }
    dend_25 { pt3dadd( -56.1918, 98.2558, -43.7012, 0.12 ) }
    dend_25 { pt3dadd( -56.6169, 99.0257, -44.0763, 0.12 ) }
    dend_25 { pt3dadd( -56.8628, 99.4746, -44.313, 0.12 ) }
    dend_25 { pt3dadd( -57.283, 100.255, -44.7319, 0.12 ) }
    dend_25 { pt3dadd( -57.5754, 100.815, -45.027, 1.2 ) }
    dend_25 { pt3dadd( -57.874, 101.413, -45.3118, 1.44 ) }
    dend_25 { pt3dadd( -58.6856, 103.04, -46.0742, 0.12 ) }
    dend_25 { pt3dadd( -58.9402, 103.525, -46.3453, 0.12 ) }
    dend_25 { pt3dadd( -59.5221, 104.639, -47.0059, 0.12 ) }
    dend_25 { pt3dadd( -59.8265, 105.242, -47.3745, 1.56 ) }
    dend_25 { pt3dadd( -60.122, 105.811, -47.7154, 2.16 ) }
    dend_25 { pt3dadd( -60.3262, 106.203, -47.9335, 2.28 ) }
    dend_25 { pt3dadd( -61.3163, 108.152, -48.8053, 0.48 ) }
    dend_25 { pt3dadd( -61.6342, 108.766, -49.0629, 0.48 ) }
    dend_25 { pt3dadd( -61.7971, 109.088, -49.2024, 0.48 ) }
    dend_25 { pt3dadd( -62.0201, 109.531, -49.4876, 0.24 ) }
    dend_25 { pt3dadd( -62.2053, 109.898, -49.7591, 0.24 ) }
    dend_25 { pt3dadd( -62.5929, 110.688, -50.4034, 1.8 ) }
    dend_25 { pt3dadd( -62.7614, 111.045, -50.6972, 2.64 ) }
    dend_25 { pt3dadd( -63.2533, 112.147, -51.6401, 2.88 ) }
    dend_25 { pt3dadd( -64.1936, 114.475, -53.6902, 0.36 ) }
    dend_25 { pt3dadd( -64.4512, 115.195, -54.3109, 0.36 ) }
    dend_25 { pt3dadd( -64.6158, 115.717, -54.7401, 0.12 ) }
    dend_25 { pt3dadd( -64.8544, 116.587, -55.3998, 1.56 ) }
    dend_25 { pt3dadd( -64.9084, 116.808, -55.5513, 1.68 ) }
    dend_25 { pt3dadd( -65.1411, 117.867, -56.171, 0.24 ) }
    dend_25 { pt3dadd( -65.3584, 118.973, -56.7345, 0.24 ) }
    dend_25 { pt3dadd( -65.6119, 120.314, -57.4382, 2.64 ) }
    dend_25 { pt3dadd( -65.7515, 121.032, -57.8167, 3.0 ) }
    dend_25 { pt3dadd( -66.201, 123.265, -59.0559, 0.24 ) }
    dend_25 { pt3dadd( -66.4493, 124.438, -59.7155, 1.68 ) }
    dend_25 { pt3dadd( -66.5683, 124.962, -60.0115, 1.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 86/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 18.661, 25.5942, 32.4829, 0.12 ) }
    dend_23 { pt3dadd( 25.3175, 31.3462, 44.7247, 0.12 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 88/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 18.661, 25.5942, 32.4829, 0.12 ) }
    dend_22 { pt3dadd( 25.4353, 30.5308, 42.089, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.36233, -37.7194, -9.40783, 0.12 ) }
    dend_20 { pt3dadd( -0.897029, -38.4651, -9.59173, 0.12 ) }
    dend_20 { pt3dadd( -0.590967, -38.9896, -9.74992, 0.12 ) }
    dend_20 { pt3dadd( -0.352768, -39.4384, -9.88968, 0.12 ) }
    dend_20 { pt3dadd( 0.125924, -40.4114, -10.1919, 1.56 ) }
    dend_20 { pt3dadd( 0.25355, -40.679, -10.2816, 1.56 ) }
    dend_20 { pt3dadd( 0.732825, -41.7266, -10.6034, 0.12 ) }
    dend_20 { pt3dadd( 0.937208, -42.1915, -10.7815, 0.12 ) }
    dend_20 { pt3dadd( 1.09972, -42.5609, -10.927, 0.12 ) }
    dend_20 { pt3dadd( 1.1793, -42.7396, -10.9904, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 1.46862, -43.4018, -11.1805, 1.44 ) }
    dend_20 { pt3dadd( 1.7929, -43.9929, -11.3527, 1.68 ) }
    dend_20 { pt3dadd( 2.4105, -44.9504, -11.5962, 0.12 ) }
    dend_20 { pt3dadd( 2.77216, -45.4479, -11.6973, 0.12 ) }
    dend_20 { pt3dadd( 3.04454, -45.7998, -11.7407, 0.12 ) }
    dend_20 { pt3dadd( 3.24525, -46.0495, -11.7479, 0.12 ) }
    dend_20 { pt3dadd( 4.08816, -47.0089, -11.756, 1.56 ) }
    dend_20 { pt3dadd( 4.38803, -47.3303, -11.7551, 1.56 ) }
    dend_20 { pt3dadd( 4.99606, -47.963, -11.688, 0.12 ) }
    dend_20 { pt3dadd( 5.52189, -48.5, -11.6352, 0.12 ) }
    dend_20 { pt3dadd( 5.88069, -48.885, -11.5952, 1.08 ) }
    dend_20 { pt3dadd( 6.62016, -49.7818, -11.4652, 0.72 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 12/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.36233, -37.7194, -9.40783, 1.32 ) }
    dend_1 { pt3dadd( -1.94871, -39.0432, -9.8983, 1.32 ) }
    dend_1 { pt3dadd( -2.31835, -39.8776, -10.2074, 1.32 ) }
    dend_1 { pt3dadd( -2.58855, -40.4876, -10.4334, 2.04 ) }
    dend_1 { pt3dadd( -2.96385, -41.3349, -10.7474, 2.52 ) }
    dend_1 { pt3dadd( -3.13757, -41.727, -10.8927, 2.52 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 18/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.06313, 41.0601, 0.698697, 0.718232 ) }
    axon_1 { pt3dadd( 2.56414, 56.0517, 0.698697, 0.718232 ) }
    axon_1 { pt3dadd( 3.06515, 71.0433, 0.698697, 0.718232 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 21/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -66.5683, 124.962, -60.0115, 0.12 ) }
    dend_27 { pt3dadd( -66.9043, 125.469, -60.2035, 0.12 ) }
    dend_27 { pt3dadd( -67.0914, 125.818, -60.3757, 0.12 ) }
    dend_27 { pt3dadd( -67.3103, 126.245, -60.5834, 0.72 ) }
    dend_27 { pt3dadd( -67.5027, 126.593, -60.8209, 0.12 ) }
    dend_27 { pt3dadd( -67.7695, 127.066, -61.156, 0.12 ) }
    dend_27 { pt3dadd( -68.3162, 128.061, -61.8529, 0.12 ) }
    dend_27 { pt3dadd( -68.6798, 128.762, -62.3886, 2.28 ) }
    dend_27 { pt3dadd( -68.8468, 129.09, -62.642, 2.52 ) }
    dend_27 { pt3dadd( -69.678, 130.741, -63.9116, 0.12 ) }
    dend_27 { pt3dadd( -69.9146, 131.191, -64.2469, 0.12 ) }
    dend_27 { pt3dadd( -70.0936, 131.482, -64.4707, 0.48 ) }
    dend_27 { pt3dadd( -70.3869, 131.908, -64.7788, 0.12 ) }
    dend_27 { pt3dadd( -70.7308, 132.355, -65.1218, 0.12 ) }
    dend_27 { pt3dadd( -70.9063, 132.553, -65.3263, 1.2 ) }
    dend_27 { pt3dadd( -71.1682, 132.8, -65.6366, 1.56 ) }
    dend_27 { pt3dadd( -72.075, 133.581, -66.7062, 0.24 ) }
    dend_27 { pt3dadd( -72.3283, 133.789, -66.9989, 0.24 ) }
    dend_27 { pt3dadd( -72.5681, 133.99, -67.3294, 0.96 ) }
    dend_27 { pt3dadd( -73.8089, 135.099, -69.2893, 0.12 ) }
    dend_27 { pt3dadd( -73.9594, 135.249, -69.5386, 0.12 ) }
    dend_27 { pt3dadd( -74.4432, 135.783, -70.3632, 2.52 ) }
    dend_27 { pt3dadd( -74.5433, 135.9, -70.5369, 2.52 ) }
    dend_27 { pt3dadd( -75.7014, 137.278, -72.5564, 0.12 ) }
    dend_27 { pt3dadd( -75.8402, 137.45, -72.7876, 0.12 ) }
    dend_27 { pt3dadd( -76.2414, 137.973, -73.411, 0.84 ) }
    dend_27 { pt3dadd( -76.4007, 138.174, -73.6733, 0.96 ) }
    dend_27 { pt3dadd( -77.0293, 138.993, -74.7404, 0.12 ) }
    dend_27 { pt3dadd( -77.1562, 139.166, -74.9418, 0.12 ) }
    dend_27 { pt3dadd( -77.3173, 139.408, -75.1676, 0.6 ) }
    dend_27 { pt3dadd( -77.8917, 140.371, -76.1003, 0.12 ) }
    dend_27 { pt3dadd( -78.0034, 140.597, -76.3134, 0.12 ) }
    dend_27 { pt3dadd( -78.258, 141.299, -76.8806, 0.12 ) }
    dend_27 { pt3dadd( -78.3732, 141.842, -77.2137, 1.08 ) }
    dend_27 { pt3dadd( -78.4207, 142.22, -77.4192, 1.08 ) }
    dend_27 { pt3dadd( -78.4613, 142.892, -77.7543, 0.12 ) }
    dend_27 { pt3dadd( -78.4541, 143.467, -77.9925, 0.12 ) }
    dend_27 { pt3dadd( -78.4435, 143.812, -78.1622, 0.24 ) }
    dend_27 { pt3dadd( -78.4121, 144.365, -78.4634, 0.12 ) }
    dend_27 { pt3dadd( -78.3811, 144.734, -78.6632, 0.12 ) }
    dend_27 { pt3dadd( -78.2945, 145.345, -78.995, 0.96 ) }
    dend_27 { pt3dadd( -78.2173, 145.648, -79.1102, 0.96 ) }
    dend_27 { pt3dadd( -77.9064, 146.592, -79.3656, 0.12 ) }
    dend_27 { pt3dadd( -77.7411, 147.075, -79.5315, 0.12 ) }
    dend_27 { pt3dadd( -77.6427, 147.363, -79.643, 0.36 ) }
    dend_27 { pt3dadd( -77.3926, 148.225, -80.0473, 0.36 ) }
    dend_27 { pt3dadd( -77.1972, 149.572, -81.0473, 0.72 ) }
    dend_27 { pt3dadd( -77.1949, 149.745, -81.2051, 0.72 ) }
    dend_27 { pt3dadd( -77.2886, 151.214, -82.6448, 1.56 ) }
    dend_27 { pt3dadd( -77.3288, 151.574, -83.0206, 2.04 ) }
    dend_27 { pt3dadd( -77.4488, 152.229, -83.701, 2.52 ) }
    dend_27 { pt3dadd( -77.837, 153.638, -85.2488, 0.12 ) }
    dend_27 { pt3dadd( -77.958, 154.055, -85.6993, 0.24 ) }
    dend_27 { pt3dadd( -78.0514, 154.449, -86.0538, 0.12 ) }
    dend_27 { pt3dadd( -78.1054, 154.753, -86.2725, 0.12 ) }
    dend_27 { pt3dadd( -78.223, 155.495, -86.7578, 0.12 ) }
    dend_27 { pt3dadd( -78.3324, 156.248, -87.1553, 0.12 ) }
    dend_27 { pt3dadd( -78.4416, 156.937, -87.45, 1.56 ) }
    dend_27 { pt3dadd( -78.4924, 157.219, -87.5822, 1.92 ) }
    dend_27 { pt3dadd( -78.7985, 158.674, -88.2665, 0.12 ) }
    dend_27 { pt3dadd( -79.0209, 159.658, -88.7057, 0.12 ) }
    dend_27 { pt3dadd( -79.1963, 160.408, -89.0372, 1.56 ) }
    dend_27 { pt3dadd( -79.3034, 160.797, -89.1934, 1.92 ) }
    dend_27 { pt3dadd( -79.6143, 161.82, -89.6168, 0.12 ) }
    dend_27 { pt3dadd( -79.8581, 162.65, -89.9621, 0.12 ) }
    dend_27 { pt3dadd( -79.9894, 163.156, -90.1574, 0.48 ) }
    dend_27 { pt3dadd( -80.0978, 163.6, -90.3537, 0.12 ) }
    dend_27 { pt3dadd( -80.2142, 164.18, -90.6725, 0.12 ) }
    dend_27 { pt3dadd( -80.3099, 164.81, -91.0433, 0.12 ) }
    dend_27 { pt3dadd( -80.3673, 165.4, -91.3851, 0.12 ) }
    dend_27 { pt3dadd( -80.3933, 166.018, -91.7655, 1.32 ) }
    dend_27 { pt3dadd( -80.3949, 166.297, -91.9293, 1.56 ) }
    dend_27 { pt3dadd( -80.3778, 167.76, -92.7218, 0.12 ) }
    dend_27 { pt3dadd( -80.3903, 168.326, -93.0677, 0.12 ) }
    dend_27 { pt3dadd( -80.4253, 168.866, -93.3917, 0.12 ) }
    dend_27 { pt3dadd( -80.4492, 169.208, -93.5927, 0.12 ) }
    dend_27 { pt3dadd( -80.5166, 170.023, -94.0539, 1.68 ) }
    dend_27 { pt3dadd( -80.538, 170.22, -94.1646, 1.8 ) }
    dend_27 { pt3dadd( -80.7413, 171.951, -95.0442, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( -80.8649, 173.054, -95.6335, 0.12 ) }
    dend_27 { pt3dadd( -80.9333, 173.601, -95.9194, 1.08 ) }
    dend_27 { pt3dadd( -80.9841, 173.996, -96.1204, 1.2 ) }
    dend_27 { pt3dadd( -81.0671, 174.856, -96.535, 0.12 ) }
    dend_27 { pt3dadd( -81.1448, 175.913, -96.9911, 0.12 ) }
    dend_27 { pt3dadd( -81.1952, 176.915, -97.36, 1.8 ) }
    dend_27 { pt3dadd( -81.2267, 177.505, -97.5911, 2.04 ) }
    dend_27 { pt3dadd( -81.2569, 178.41, -97.9478, 0.12 ) }
    dend_27 { pt3dadd( -81.2481, 179.338, -98.2956, 0.12 ) }
    dend_27 { pt3dadd( -81.2264, 179.765, -98.4265, 0.48 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 10/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -66.5683, 124.962, -60.0115, 0.12 ) }
    dend_26 { pt3dadd( -66.2901, 125.85, -60.0176, 0.12 ) }
    dend_26 { pt3dadd( -66.0347, 126.705, -60.0212, 0.12 ) }
    dend_26 { pt3dadd( -65.7649, 127.666, -59.9786, 0.72 ) }
    dend_26 { pt3dadd( -65.573, 128.532, -59.934, 0.12 ) }
    dend_26 { pt3dadd( -65.284, 129.985, -59.8641, 0.12 ) }
    dend_26 { pt3dadd( -65.2067, 130.416, -59.8452, 1.2 ) }
    dend_26 { pt3dadd( -65.1514, 130.782, -59.8095, 0.72 ) }
    dend_26 { pt3dadd( -65.0418, 131.758, -59.6993, 0.12 ) }
    dend_26 { pt3dadd( -64.8778, 133.953, -59.4525, 0.12 ) }
    dend_26 { pt3dadd( -64.8398, 134.571, -59.3942, 0.96 ) }
    dend_26 { pt3dadd( -64.8091, 135.077, -59.3242, 1.44 ) }
    dend_26 { pt3dadd( -64.7324, 136.388, -59.1231, 0.12 ) }
    dend_26 { pt3dadd( -64.6803, 137.263, -58.9538, 0.12 ) }
    dend_26 { pt3dadd( -64.6325, 137.989, -58.8021, 0.24 ) }
    dend_26 { pt3dadd( -64.5799, 138.6, -58.6533, 0.24 ) }
    dend_26 { pt3dadd( -64.4814, 139.582, -58.4166, 0.24 ) }
    dend_26 { pt3dadd( -64.3267, 140.878, -58.0456, 2.52 ) }
    dend_26 { pt3dadd( -64.0975, 142.595, -57.5334, 0.24 ) }
    dend_26 { pt3dadd( -63.936, 143.642, -57.2041, 0.24 ) }
    dend_26 { pt3dadd( -63.8668, 144.062, -57.071, 0.48 ) }
    dend_26 { pt3dadd( -63.82, 144.329, -56.9956, 0.12 ) }
    dend_26 { pt3dadd( -63.2745, 147.285, -56.2629, 0.12 ) }
    dend_26 { pt3dadd( -63.1327, 148.005, -56.089, 1.92 ) }
    dend_26 { pt3dadd( -62.9995, 148.602, -55.9777, 2.16 ) }
    dend_26 { pt3dadd( -62.6875, 149.858, -55.7655, 0.12 ) }
    dend_26 { pt3dadd( -62.2327, 151.535, -55.5348, 0.12 ) }
    dend_26 { pt3dadd( -62.1956, 151.653, -55.5284, 0.36 ) }
    dend_26 { pt3dadd( -62.0622, 151.999, -55.5504, 0.12 ) }
    dend_26 { pt3dadd( -61.3762, 153.68, -55.6991, 0.12 ) }
    dend_26 { pt3dadd( -60.8991, 154.828, -55.7712, 2.04 ) }
    dend_26 { pt3dadd( -60.6775, 155.34, -55.7956, 1.56 ) }
    dend_26 { pt3dadd( -60.1191, 156.591, -55.8145, 0.12 ) }
    dend_26 { pt3dadd( -59.867, 157.147, -55.8136, 0.12 ) }
    dend_26 { pt3dadd( -59.5989, 157.717, -55.7953, 0.12 ) }
    dend_26 { pt3dadd( -59.0075, 158.993, -55.7093, 0.12 ) }
    dend_26 { pt3dadd( -58.7179, 159.642, -55.6647, 1.56 ) }
    dend_26 { pt3dadd( -58.5713, 159.957, -55.6224, 2.16 ) }
    dend_26 { pt3dadd( -58.1853, 160.74, -55.4509, 1.32 ) }
    dend_26 { pt3dadd( -57.7855, 161.493, -55.2889, 0.12 ) }
    dend_26 { pt3dadd( -57.5439, 161.905, -55.215, 0.12 ) }
    dend_26 { pt3dadd( -57.1513, 162.575, -55.1409, 0.12 ) }
    dend_26 { pt3dadd( -56.711, 163.353, -55.0552, 0.12 ) }
    dend_26 { pt3dadd( -56.3876, 163.931, -54.9997, 1.08 ) }
    dend_26 { pt3dadd( -56.13, 164.408, -54.9663, 1.8 ) }
    dend_26 { pt3dadd( -55.5973, 165.368, -54.8486, 0.12 ) }
    dend_26 { pt3dadd( -55.1097, 166.201, -54.657, 0.12 ) }
    dend_26 { pt3dadd( -54.8078, 166.718, -54.5126, 0.12 ) }
    dend_26 { pt3dadd( -54.5097, 167.234, -54.3625, 0.12 ) }
    dend_26 { pt3dadd( -54.0784, 167.95, -54.1584, 0.12 ) }
    dend_26 { pt3dadd( -53.256, 169.259, -53.7768, 1.32 ) }
    dend_26 { pt3dadd( -52.5084, 170.412, -53.476, 0.12 ) }
    dend_26 { pt3dadd( -51.7443, 171.604, -53.2578, 0.12 ) }
    dend_26 { pt3dadd( -51.5681, 171.905, -53.2339, 0.96 ) }
    dend_26 { pt3dadd( -51.1488, 172.708, -53.2836, 0.48 ) }
    dend_26 { pt3dadd( -50.9677, 173.108, -53.3621, 0.48 ) }
    dend_26 { pt3dadd( -50.6946, 173.862, -53.5923, 0.12 ) }
    dend_26 { pt3dadd( -50.3702, 174.998, -53.9775, 2.04 ) }
    dend_26 { pt3dadd( -50.1867, 175.712, -54.1944, 2.28 ) }
    dend_26 { pt3dadd( -49.8929, 176.94, -54.5112, 0.12 ) }
    dend_26 { pt3dadd( -49.702, 177.766, -54.6464, 0.12 ) }
    dend_26 { pt3dadd( -49.5245, 178.495, -54.7218, 0.12 ) }
    dend_26 { pt3dadd( -49.3922, 178.978, -54.7461, 0.12 ) }
    dend_26 { pt3dadd( -49.0008, 180.144, -54.7832, 0.12 ) }
    dend_26 { pt3dadd( -48.6742, 180.945, -54.7987, 0.12 ) }
    dend_26 { pt3dadd( -48.1664, 181.966, -54.8085, 1.32 ) }
    dend_26 { pt3dadd( -47.9453, 182.343, -54.8159, 1.32 ) }
    dend_26 { pt3dadd( -47.5633, 182.905, -54.841, 0.12 ) }
    dend_26 { pt3dadd( -46.7914, 183.976, -55.0054, 0.12 ) }
    dend_26 { pt3dadd( -46.4399, 184.453, -55.1419, 0.12 ) }
    dend_26 { pt3dadd( -46.0305, 184.975, -55.3511, 1.2 ) }
    dend_26 { pt3dadd( -45.7702, 185.286, -55.5242, 1.56 ) }
    dend_26 { pt3dadd( -45.0973, 186.057, -56.0074, 0.12 ) }
    dend_26 { pt3dadd( -44.1268, 187.136, -56.7362, 0.12 ) }
    dend_26 { pt3dadd( -43.5589, 187.777, -57.2042, 1.44 ) }
    dend_26 { pt3dadd( -43.2372, 188.131, -57.4718, 2.16 ) }
    dend_26 { pt3dadd( -42.295, 189.118, -58.2807, 0.12 ) }
    dend_26 { pt3dadd( -42.0293, 189.374, -58.507, 0.12 ) }
    dend_26 { pt3dadd( -41.6343, 189.702, -58.8389, 0.12 ) }
    dend_26 { pt3dadd( -41.2709, 189.954, -59.1086, 0.12 ) }
    dend_26 { pt3dadd( -40.6494, 190.377, -59.5765, 0.12 ) }
    dend_26 { pt3dadd( -39.949, 190.839, -60.0887, 1.2 ) }
    dend_26 { pt3dadd( -39.7748, 190.953, -60.216, 1.2 ) }
    dend_26 { pt3dadd( -39.0238, 191.437, -60.7795, 0.12 ) }
    dend_26 { pt3dadd( -38.7959, 191.591, -60.9875, 0.12 ) }
    dend_26 { pt3dadd( -38.4045, 191.865, -61.3702, 0.12 ) }
    dend_26 { pt3dadd( -37.7992, 192.345, -62.0152, 0.12 ) }
    dend_26 { pt3dadd( -37.4114, 192.711, -62.4834, 1.32 ) }
    dend_26 { pt3dadd( -37.2432, 192.891, -62.7257, 1.44 ) }
    dend_26 { pt3dadd( -36.5062, 193.764, -63.904, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -36.2781, 194.049, -64.3111, 0.12 ) }
    dend_26 { pt3dadd( -36.1701, 194.186, -64.521, 0.12 ) }
    dend_26 { pt3dadd( -35.6856, 194.87, -65.5426, 0.12 ) }
    dend_26 { pt3dadd( -35.3079, 195.426, -66.287, 1.44 ) }
    dend_26 { pt3dadd( -35.1443, 195.676, -66.6006, 1.92 ) }
    dend_26 { pt3dadd( -34.827, 196.165, -67.1479, 1.44 ) }
    dend_26 { pt3dadd( -34.3726, 196.936, -67.9806, 0.12 ) }
    dend_26 { pt3dadd( -34.1984, 197.22, -68.271, 0.12 ) }
    dend_26 { pt3dadd( -33.7174, 197.861, -68.8716, 0.12 ) }
    dend_26 { pt3dadd( -33.192, 198.518, -69.4468, 1.44 ) }
    dend_26 { pt3dadd( -32.909, 198.845, -69.7233, 1.92 ) }
    dend_26 { pt3dadd( -31.9425, 199.857, -70.5635, 0.12 ) }
    dend_26 { pt3dadd( -31.4356, 200.365, -70.9649, 0.12 ) }
    dend_26 { pt3dadd( -30.4431, 201.268, -71.7311, 0.12 ) }
    dend_26 { pt3dadd( -30.2573, 201.414, -71.8681, 0.84 ) }
    dend_26 { pt3dadd( -29.8692, 201.7, -72.1255, 0.96 ) }
    dend_26 { pt3dadd( -29.0985, 202.228, -72.6259, 0.12 ) }
    dend_26 { pt3dadd( -28.5199, 202.599, -72.9781, 0.12 ) }
    dend_26 { pt3dadd( -27.9884, 202.977, -73.3668, 0.72 ) }
    dend_26 { pt3dadd( -27.446, 203.461, -73.8783, 0.12 ) }
    dend_26 { pt3dadd( -26.9728, 203.978, -74.387, 0.12 ) }
    dend_26 { pt3dadd( -26.6936, 204.366, -74.7294, 1.2 ) }
    dend_26 { pt3dadd( -26.5293, 204.685, -75.0087, 1.44 ) }
    dend_26 { pt3dadd( -26.1431, 205.612, -75.8198, 0.12 ) }
    dend_26 { pt3dadd( -25.7959, 206.672, -76.689, 0.12 ) }
    dend_26 { pt3dadd( -25.5924, 207.425, -77.2912, 2.52 ) }
    dend_26 { pt3dadd( -25.4974, 207.877, -77.7063, 2.52 ) }
    dend_26 { pt3dadd( -25.1826, 209.587, -79.3525, 0.24 ) }
    dend_26 { pt3dadd( -25.0776, 210.07, -79.841, 0.24 ) }
    dend_26 { pt3dadd( -24.9703, 210.478, -80.2893, 0.24 ) }
    dend_26 { pt3dadd( -24.7936, 210.959, -80.876, 1.32 ) }
    dend_26 { pt3dadd( -24.0813, 212.337, -82.8474, 0.12 ) }
    dend_26 { pt3dadd( -23.8403, 212.675, -83.4858, 0.12 ) }
    dend_26 { pt3dadd( -23.4816, 213.053, -84.3184, 0.72 ) }
    dend_26 { pt3dadd( -22.9302, 213.552, -85.5455, 0.12 ) }
    dend_26 { pt3dadd( -22.7139, 213.722, -86.0214, 0.12 ) }
    dend_26 { pt3dadd( -21.9581, 214.278, -87.6172, 2.76 ) }
    dend_26 { pt3dadd( -20.4669, 215.355, -90.6124, 0.12 ) }
    dend_26 { pt3dadd( -20.157, 215.601, -91.3359, 0.12 ) }
    dend_26 { pt3dadd( -20.0672, 215.69, -91.577, 1.32 ) }
    dend_26 { pt3dadd( -19.4208, 216.446, -93.4205, 0.12 ) }
    dend_26 { pt3dadd( -19.247, 216.708, -93.9567, 0.12 ) }
    dend_26 { pt3dadd( -19.1129, 216.96, -94.3601, 0.96 ) }
    dend_26 { pt3dadd( -18.5078, 218.183, -95.913, 0.12 ) }
    dend_26 { pt3dadd( -18.2459, 218.692, -96.5498, 0.12 ) }
    dend_26 { pt3dadd( -17.7169, 219.61, -97.5965, 2.4 ) }
    dend_26 { pt3dadd( -16.9888, 220.728, -98.7462, 0.12 ) }
    dend_26 { pt3dadd( -16.5606, 221.317, -99.3557, 0.12 ) }
    dend_26 { pt3dadd( -16.258, 221.688, -99.7377, 1.44 ) }
    dend_26 { pt3dadd( -15.392, 222.665, -100.704, 0.12 ) }
    dend_26 { pt3dadd( -14.5789, 223.519, -101.608, 0.12 ) }
    dend_26 { pt3dadd( -14.443, 223.655, -101.759, 0.84 ) }
    dend_26 { pt3dadd( -13.9485, 224.123, -102.329, 0.12 ) }
    dend_26 { pt3dadd( -13.2491, 224.757, -103.145, 0.48 ) }
    dend_26 { pt3dadd( -12.7401, 225.208, -103.715, 0.12 ) }
    dend_26 { pt3dadd( -12.3793, 225.52, -104.097, 0.12 ) }
    dend_26 { pt3dadd( -11.6109, 226.169, -104.893, 1.8 ) }
    dend_26 { pt3dadd( -10.9755, 226.713, -105.474, 0.12 ) }
    dend_26 { pt3dadd( -10.5096, 227.115, -105.825, 0.12 ) }
    dend_26 { pt3dadd( -10.0941, 227.488, -106.076, 0.72 ) }
    dend_26 { pt3dadd( -9.61903, 227.914, -106.28, 0.12 ) }
    dend_26 { pt3dadd( -8.8622, 228.586, -106.52, 0.12 ) }
    dend_26 { pt3dadd( -8.37381, 229.032, -106.654, 0.72 ) }
    dend_26 { pt3dadd( -7.96013, 229.357, -106.804, 0.12 ) }
    dend_26 { pt3dadd( -7.53997, 229.661, -106.978, 0.12 ) }
    dend_26 { pt3dadd( -5.91229, 230.731, -107.932, 0.12 ) }
    dend_26 { pt3dadd( -5.26294, 231.127, -108.374, 1.92 ) }
    dend_26 { pt3dadd( -4.35278, 231.617, -109.172, 0.12 ) }
    dend_26 { pt3dadd( -2.34493, 232.579, -111.315, 0.12 ) }
    dend_26 { pt3dadd( -1.50503, 232.953, -112.328, 0.12 ) }
    dend_26 { pt3dadd( 0.208897, 233.654, -114.612, 0.12 ) }
    dend_26 { pt3dadd( 0.906013, 233.924, -115.695, 2.28 ) }
    dend_26 { pt3dadd( 2.25513, 234.388, -118.219, 0.72 ) }
    dend_26 { pt3dadd( 2.64628, 234.454, -119.547, 0.12 ) }
    dend_26 { pt3dadd( 2.69726, 234.55, -118.789, 0.12 ) }
    dend_26 { pt3dadd( 2.83392, 234.68, -118.183, 1.2 ) }
    dend_26 { pt3dadd( 3.14666, 234.948, -117.219, 0.6 ) }
    dend_26 { pt3dadd( 6.28457, 237.78, -108.013, 0.12 ) }
    dend_26 { pt3dadd( 6.4783, 237.965, -107.456, 0.12 ) }
    dend_26 { pt3dadd( 6.59498, 238.08, -107.109, 0.6 ) }
    dend_26 { pt3dadd( 6.69029, 238.172, -106.801, 0.12 ) }
    dend_26 { pt3dadd( 7.05683, 238.496, -105.271, 0.12 ) }
    dend_26 { pt3dadd( 7.03306, 238.246, -104.386, 0.12 ) }
    dend_26 { pt3dadd( 7.40724, 239.106, -105.209, 1.56 ) }
    dend_26 { pt3dadd( 7.48829, 239.297, -105.39, 1.8 ) }
    dend_26 { pt3dadd( 8.04343, 240.503, -106.465, 0.12 ) }
    dend_26 { pt3dadd( 8.59716, 241.593, -107.378, 0.12 ) }
    dend_26 { pt3dadd( 8.93338, 242.179, -107.851, 0.12 ) }
    dend_26 { pt3dadd( 9.52513, 243.087, -108.572, 1.8 ) }
    dend_26 { pt3dadd( 10.3041, 244.106, -109.329, 0.12 ) }
    dend_26 { pt3dadd( 11.2078, 245.141, -110.075, 0.12 ) }
    dend_26 { pt3dadd( 11.587, 245.514, -110.367, 1.08 ) }
    dend_26 { pt3dadd( 12.3609, 246.169, -110.962, 0.12 ) }
    dend_26 { pt3dadd( 13.0, 246.663, -111.456, 0.12 ) }
    dend_26 { pt3dadd( 13.7093, 247.165, -112.038, 0.12 ) }
    dend_26 { pt3dadd( 14.0127, 247.36, -112.304, 1.08 ) }
    dend_26 { pt3dadd( 15.4412, 248.198, -113.699, 0.12 ) }
    dend_26 { pt3dadd( 15.8719, 248.449, -114.124, 0.12 ) }
    dend_26 { pt3dadd( 16.2907, 248.701, -114.556, 1.44 ) }
    dend_26 { pt3dadd( 16.9365, 249.139, -115.43, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_26 { pt3dadd( 17.0569, 249.231, -115.62, 1.92 ) }
    dend_26 { pt3dadd( 17.6391, 249.713, -116.586, 0.12 ) }
    dend_26 { pt3dadd( 18.0395, 250.07, -117.261, 0.12 ) }
    dend_26 { pt3dadd( 18.4553, 250.471, -118.024, 1.08 ) }
    dend_26 { pt3dadd( 19.4304, 251.469, -119.932, 0.12 ) }
    dend_26 { pt3dadd( 19.579, 251.624, -120.249, 0.12 ) }
    dend_26 { pt3dadd( 19.7334, 251.774, -120.631, 0.6 ) }
    dend_26 { pt3dadd( 20.0334, 252.027, -121.428, 0.12 ) }
    dend_26 { pt3dadd( 20.1259, 252.096, -121.674, 0.12 ) }
    dend_26 { pt3dadd( 20.3778, 252.244, -122.274, 1.2 ) }
    dend_26 { pt3dadd( 20.9809, 252.591, -123.484, 1.2 ) }
    dend_26 { pt3dadd( 21.6957, 253.043, -124.878, 0.24 ) }
    dend_26 { pt3dadd( 21.9351, 253.208, -125.338, 0.24 ) }
    dend_26 { pt3dadd( 22.0392, 253.291, -125.529, 0.84 ) }
    dend_26 { pt3dadd( 22.4647, 253.676, -126.272, 0.12 ) }
    dend_26 { pt3dadd( 23.0695, 254.242, -127.204, 0.12 ) }
    dend_26 { pt3dadd( 23.2417, 254.425, -127.442, 0.12 ) }
    dend_26 { pt3dadd( 23.8095, 255.1, -128.239, 0.96 ) }
    dend_26 { pt3dadd( 23.9705, 255.302, -128.485, 0.96 ) }
    dend_26 { pt3dadd( 24.0881, 255.468, -128.682, 0.96 ) }
    dend_26 { pt3dadd( 24.4216, 256.033, -129.378, 0.48 ) }
    dend_26 { pt3dadd( 24.557, 256.285, -129.715, 0.48 ) }
    dend_26 { pt3dadd( 24.7682, 256.752, -130.319, 0.12 ) }
    dend_26 { pt3dadd( 24.929, 257.105, -130.706, 0.12 ) }
    dend_26 { pt3dadd( 25.4378, 258.179, -131.752, 0.12 ) }
    dend_26 { pt3dadd( 25.7587, 258.826, -132.293, 0.84 ) }
    dend_26 { pt3dadd( 25.9154, 259.157, -132.544, 1.08 ) }
    dend_26 { pt3dadd( 26.3214, 259.962, -133.142, 0.12 ) }
    dend_26 { pt3dadd( 26.8313, 260.997, -133.843, 0.12 ) }
    dend_26 { pt3dadd( 27.0398, 261.391, -134.088, 1.08 ) }
    dend_26 { pt3dadd( 27.4053, 261.954, -134.301, 1.08 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.13757, -41.727, -10.8927, 0.48 ) }
    dend_15 { pt3dadd( -4.33626, -42.0758, -11.2271, 0.48 ) }
    dend_15 { pt3dadd( -4.98958, -42.2808, -11.4229, 0.48 ) }
    dend_15 { pt3dadd( -6.02492, -42.6218, -11.7457, 0.84 ) }
    dend_15 { pt3dadd( -6.89906, -42.9312, -12.0238, 0.96 ) }
    dend_15 { pt3dadd( -7.54703, -43.1682, -12.2313, 0.96 ) }
    dend_15 { pt3dadd( -8.21146, -43.42, -12.4434, 0.12 ) }
    dend_15 { pt3dadd( -8.50439, -43.5494, -12.5756, 0.12 ) }
    dend_15 { pt3dadd( -8.66117, -43.6223, -12.6677, 0.12 ) }
    dend_15 { pt3dadd( -8.91599, -43.7424, -12.8804, 0.48 ) }
    dend_15 { pt3dadd( -9.11269, -43.8392, -13.0757, 0.48 ) }
    dend_15 { pt3dadd( -9.34684, -43.9507, -13.3149, 0.6 ) }
    dend_15 { pt3dadd( -10.2048, -44.3129, -14.1869, 0.12 ) }
    dend_15 { pt3dadd( -10.5015, -44.4278, -14.4816, 0.12 ) }
    dend_15 { pt3dadd( -11.1213, -44.6627, -15.0707, 2.16 ) }
    dend_15 { pt3dadd( -11.3402, -44.7462, -15.2724, 3.0 ) }
    dend_15 { pt3dadd( -11.8158, -44.9329, -15.684, 3.12 ) }
    dend_15 { pt3dadd( -13.1695, -45.4819, -16.7359, 0.12 ) }
    dend_15 { pt3dadd( -13.4264, -45.5905, -16.9006, 0.12 ) }
    dend_15 { pt3dadd( -13.7104, -45.7119, -17.0716, 0.12 ) }
    dend_15 { pt3dadd( -13.9391, -45.8098, -17.1933, 0.12 ) }
    dend_15 { pt3dadd( -14.2676, -45.9545, -17.3741, 0.12 ) }
    dend_15 { pt3dadd( -14.6054, -46.1085, -17.5608, 0.12 ) }
    dend_15 { pt3dadd( -15.6136, -46.6036, -18.0744, 2.28 ) }
    dend_15 { pt3dadd( -15.8621, -46.7321, -18.2082, 3.25 ) }
    dend_15 { pt3dadd( -16.1789, -46.9094, -18.3821, 3.25 ) }
    dend_15 { pt3dadd( -16.8369, -47.309, -18.7603, 2.52 ) }
    dend_15 { pt3dadd( -17.6987, -47.8741, -19.2642, 0.12 ) }
    dend_15 { pt3dadd( -17.936, -48.0413, -19.4667, 0.12 ) }
    dend_15 { pt3dadd( -18.0681, -48.1452, -19.6079, 0.12 ) }
    dend_15 { pt3dadd( -18.5009, -48.5036, -20.1278, 1.68 ) }
    dend_15 { pt3dadd( -18.8345, -48.7908, -20.541, 2.04 ) }
    dend_15 { pt3dadd( -19.0751, -49.0031, -20.8355, 2.04 ) }
    dend_15 { pt3dadd( -20.5042, -50.2949, -22.7788, 0.12 ) }
    dend_15 { pt3dadd( -20.6845, -50.4537, -23.0383, 0.12 ) }
    dend_15 { pt3dadd( -20.819, -50.5695, -23.2439, 0.12 ) }
    dend_15 { pt3dadd( -21.2416, -50.9281, -23.9572, 2.4 ) }
    dend_15 { pt3dadd( -21.4638, -51.1222, -24.3402, 3.12 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.13757, -41.727, -10.8927, 0.96 ) }
    dend_2 { pt3dadd( -2.70985, -43.196, -10.9556, 0.96 ) }
    dend_2 { pt3dadd( -2.52417, -43.8529, -10.9827, 0.48 ) }
    dend_2 { pt3dadd( -2.38327, -44.3845, -11.0227, 0.48 ) }
    dend_2 { pt3dadd( -2.20451, -45.1697, -11.1123, 0.6 ) }
    dend_2 { pt3dadd( -2.00978, -46.2178, -11.2973, 0.6 ) }
    dend_2 { pt3dadd( -1.87558, -47.2303, -11.518, 0.6 ) }
    dend_2 { pt3dadd( -1.7928, -48.396, -11.8399, 0.6 ) }
    dend_2 { pt3dadd( -1.77956, -49.4121, -12.1573, 1.44 ) }
    dend_2 { pt3dadd( -1.8272, -50.2466, -12.4309, 2.04 ) }
    dend_2 { pt3dadd( -2.00986, -51.466, -12.8503, 1.92 ) }
    dend_2 { pt3dadd( -2.33828, -52.772, -13.3253, 1.08 ) }
    dend_2 { pt3dadd( -2.7175, -53.8635, -13.7267, 0.48 ) }
    dend_2 { pt3dadd( -3.00364, -54.547, -13.9633, 0.36 ) }
    dend_2 { pt3dadd( -3.25242, -55.0767, -14.1295, 0.36 ) }
    dend_2 { pt3dadd( -3.44565, -55.4572, -14.2304, 0.36 ) }
    dend_2 { pt3dadd( -3.78581, -56.0445, -14.3411, 0.36 ) }
    dend_2 { pt3dadd( -4.27324, -56.7685, -14.4511, 2.04 ) }
    dend_2 { pt3dadd( -4.99432, -57.7535, -14.556, 3.97 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 88/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -81.2264, 179.765, -98.4265, 0.12 ) }
    dend_31 { pt3dadd( -81.0608, 179.739, -98.8312, 0.12 ) }
    dend_31 { pt3dadd( -80.5811, 179.666, -100.003, 0.12 ) }
    dend_31 { pt3dadd( -80.4613, 179.648, -100.296, 0.84 ) }
    dend_31 { pt3dadd( -79.8229, 179.551, -101.855, 0.12 ) }
    dend_31 { pt3dadd( -79.6667, 179.527, -102.237, 0.12 ) }
    dend_31 { pt3dadd( -79.5909, 179.515, -102.422, 0.6 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -81.2264, 179.765, -98.4265, 0.24 ) }
    dend_28 { pt3dadd( -81.48, 180.407, -98.7121, 0.24 ) }
    dend_28 { pt3dadd( -81.6819, 180.874, -98.9178, 0.24 ) }
    dend_28 { pt3dadd( -81.8739, 181.307, -99.0948, 0.24 ) }
    dend_28 { pt3dadd( -82.009, 181.601, -99.2032, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( -82.1693, 181.95, -99.332, 2.04 ) }
    dend_28 { pt3dadd( -82.6062, 182.9, -99.6828, 0.12 ) }
    dend_28 { pt3dadd( -82.8721, 183.466, -99.8644, 0.24 ) }
    dend_28 { pt3dadd( -83.0896, 183.902, -100.02, 0.24 ) }
    dend_28 { pt3dadd( -83.3426, 184.393, -100.21, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -21.4638, -51.1222, -24.3402, 1.68 ) }
    dend_19 { pt3dadd( -22.6376, -52.5397, -24.7092, 1.68 ) }
    dend_19 { pt3dadd( -23.2548, -53.3174, -24.8913, 2.28 ) }
    dend_19 { pt3dadd( -24.1397, -54.3597, -25.1331, 0.12 ) }
    dend_19 { pt3dadd( -24.5583, -54.8038, -25.236, 0.12 ) }
    dend_19 { pt3dadd( -25.0793, -55.3161, -25.3557, 0.12 ) }
    dend_19 { pt3dadd( -25.2826, -55.498, -25.3994, 0.12 ) }
    dend_19 { pt3dadd( -26.3289, -56.2529, -25.5251, 2.04 ) }
    dend_19 { pt3dadd( -27.0265, -56.7154, -25.5547, 2.28 ) }
    dend_19 { pt3dadd( -28.279, -57.526, -25.5295, 0.12 ) }
    dend_19 { pt3dadd( -28.7985, -57.8555, -25.5108, 0.12 ) }
    dend_19 { pt3dadd( -29.95, -58.5657, -25.4361, 0.12 ) }
    dend_19 { pt3dadd( -31.3028, -59.3583, -25.3315, 1.68 ) }
    dend_19 { pt3dadd( -32.071, -59.7805, -25.2546, 2.04 ) }
    dend_19 { pt3dadd( -32.9194, -60.2684, -25.1424, 0.12 ) }
    dend_19 { pt3dadd( -33.9246, -60.8542, -24.9704, 0.12 ) }
    dend_19 { pt3dadd( -34.6342, -61.2831, -24.84, 1.2 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -21.4638, -51.1222, -24.3402, 0.12 ) }
    dend_16 { pt3dadd( -22.063, -51.6389, -25.4768, 0.12 ) }
    dend_16 { pt3dadd( -22.1678, -51.7222, -25.6432, 0.12 ) }
    dend_16 { pt3dadd( -22.3059, -51.8222, -25.835, 0.84 ) }
    dend_16 { pt3dadd( -22.4634, -51.9257, -26.0094, 0.84 ) }
    dend_16 { pt3dadd( -23.1977, -52.3965, -26.7226, 0.12 ) }
    dend_16 { pt3dadd( -23.3574, -52.4913, -26.8598, 0.12 ) }
    dend_16 { pt3dadd( -23.7907, -52.7183, -27.1604, 0.12 ) }
    dend_16 { pt3dadd( -23.9579, -52.7955, -27.2683, 0.12 ) }
    dend_16 { pt3dadd( -24.552, -53.0398, -27.6139, 2.28 ) }
    dend_16 { pt3dadd( -24.6866, -53.0909, -27.6815, 2.64 ) }
    dend_16 { pt3dadd( -25.0025, -53.2026, -27.8199, 2.76 ) }
    dend_16 { pt3dadd( -25.8146, -53.4884, -28.2205, 0.12 ) }
    dend_16 { pt3dadd( -26.2973, -53.6543, -28.481, 0.12 ) }
    dend_16 { pt3dadd( -26.5069, -53.7279, -28.6088, 0.48 ) }
    dend_16 { pt3dadd( -26.6627, -53.7845, -28.7225, 0.48 ) }
    dend_16 { pt3dadd( -26.9734, -53.9144, -28.9585, 0.12 ) }
    dend_16 { pt3dadd( -27.2341, -54.0461, -29.218, 0.84 ) }
    dend_16 { pt3dadd( -27.3743, -54.1288, -29.3788, 1.2 ) }
    dend_16 { pt3dadd( -27.6138, -54.2918, -29.67, 1.2 ) }
    dend_16 { pt3dadd( -27.9199, -54.5114, -30.0296, 0.12 ) }
    dend_16 { pt3dadd( -28.2586, -54.7647, -30.3859, 0.12 ) }
    dend_16 { pt3dadd( -29.0227, -55.3554, -31.0954, 0.12 ) }
    dend_16 { pt3dadd( -29.2546, -55.541, -31.2935, 1.92 ) }
    dend_16 { pt3dadd( -29.6533, -55.8788, -31.6108, 2.88 ) }
    dend_16 { pt3dadd( -30.3482, -56.4961, -32.0862, 0.12 ) }
    dend_16 { pt3dadd( -30.8528, -56.9755, -32.3856, 0.12 ) }
    dend_16 { pt3dadd( -31.1587, -57.2875, -32.5418, 1.68 ) }
    dend_16 { pt3dadd( -31.3554, -57.5066, -32.6211, 2.04 ) }
    dend_16 { pt3dadd( -31.7486, -57.9845, -32.7878, 1.44 ) }
    dend_16 { pt3dadd( -32.007, -58.3359, -32.8982, 0.12 ) }
    dend_16 { pt3dadd( -32.2018, -58.6316, -32.9729, 0.12 ) }
    dend_16 { pt3dadd( -32.3357, -58.8474, -33.0293, 0.6 ) }
    dend_16 { pt3dadd( -32.5825, -59.255, -33.1302, 0.12 ) }
    dend_16 { pt3dadd( -32.6696, -59.3856, -33.1673, 0.12 ) }
    dend_16 { pt3dadd( -32.9444, -59.7386, -33.2781, 0.12 ) }
    dend_16 { pt3dadd( -33.075, -59.884, -33.334, 0.36 ) }
    dend_16 { pt3dadd( -33.183, -59.9875, -33.3842, 0.12 ) }
    dend_16 { pt3dadd( -33.6122, -60.3646, -33.5875, 0.12 ) }
    dend_16 { pt3dadd( -34.104, -60.7584, -33.8141, 1.2 ) }
    dend_16 { pt3dadd( -34.3417, -60.9327, -33.9377, 1.92 ) }
    dend_16 { pt3dadd( -34.5568, -61.0839, -34.0701, 1.92 ) }
    dend_16 { pt3dadd( -35.0993, -61.4508, -34.4279, 0.12 ) }
    dend_16 { pt3dadd( -35.2492, -61.5418, -34.5274, 0.12 ) }
    dend_16 { pt3dadd( -35.4144, -61.6292, -34.6529, 0.12 ) }
    dend_16 { pt3dadd( -35.9531, -61.8907, -35.0838, 0.72 ) }
    dend_16 { pt3dadd( -36.2178, -62.008, -35.3195, 0.12 ) }
    dend_16 { pt3dadd( -36.5363, -62.1304, -35.6148, 0.12 ) }
    dend_16 { pt3dadd( -36.8445, -62.2239, -35.9932, 1.32 ) }
    dend_16 { pt3dadd( -37.3585, -62.3472, -36.7028, 0.12 ) }
    dend_16 { pt3dadd( -37.5555, -62.3849, -36.9952, 0.12 ) }
    dend_16 { pt3dadd( -37.9796, -62.4458, -37.6474, 1.92 ) }
    dend_16 { pt3dadd( -38.1192, -62.4754, -37.906, 1.92 ) }
    dend_16 { pt3dadd( -38.9114, -62.7137, -39.6163, 0.12 ) }
    dend_16 { pt3dadd( -39.0712, -62.7807, -40.0051, 0.12 ) }
    dend_16 { pt3dadd( -39.4306, -62.9635, -40.8779, 2.4 ) }
    dend_16 { pt3dadd( -39.482, -62.9948, -41.0065, 2.64 ) }
    dend_16 { pt3dadd( -40.3224, -63.5695, -43.0634, 0.12 ) }
    dend_16 { pt3dadd( -40.6191, -63.7863, -43.7523, 0.84 ) }
    dend_16 { pt3dadd( -40.8742, -63.986, -44.2844, 0.12 ) }
    dend_16 { pt3dadd( -41.1336, -64.1996, -44.8213, 0.12 ) }
    dend_16 { pt3dadd( -41.4972, -64.5062, -45.5435, 1.44 ) }
    dend_16 { pt3dadd( -41.6366, -64.6169, -45.7839, 1.68 ) }
    dend_16 { pt3dadd( -42.1814, -64.9701, -46.4457, 0.12 ) }
    dend_16 { pt3dadd( -42.3751, -65.0909, -46.6599, 0.12 ) }
    dend_16 { pt3dadd( -42.4783, -65.1506, -46.7732, 0.48 ) }
    dend_16 { pt3dadd( -42.7449, -65.2929, -47.1062, 0.12 ) }
    dend_16 { pt3dadd( -42.9865, -65.4084, -47.4004, 0.12 ) }
    dend_16 { pt3dadd( -43.3533, -65.5599, -47.841, 1.68 ) }
    dend_16 { pt3dadd( -43.4465, -65.5893, -47.9439, 1.8 ) }
    dend_16 { pt3dadd( -43.9154, -65.6887, -48.45, 1.08 ) }
    dend_16 { pt3dadd( -44.371, -65.7634, -48.9156, 0.12 ) }
    dend_16 { pt3dadd( -44.5905, -65.7893, -49.143, 0.12 ) }
    dend_16 { pt3dadd( -45.0603, -65.8218, -49.6415, 2.16 ) }
    dend_16 { pt3dadd( -45.26, -65.828, -49.8549, 2.4 ) }
    dend_16 { pt3dadd( -46.0763, -65.8072, -50.6966, 0.48 ) }
    dend_16 { pt3dadd( -46.2848, -65.7882, -50.9006, 0.48 ) }
    dend_16 { pt3dadd( -46.9095, -65.6854, -51.5018, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -47.0899, -65.641, -51.6776, 0.12 ) }
    dend_16 { pt3dadd( -47.2707, -65.5782, -51.8475, 0.12 ) }
    dend_16 { pt3dadd( -47.5932, -65.4252, -52.1255, 0.12 ) }
    dend_16 { pt3dadd( -47.8722, -65.2618, -52.371, 0.6 ) }
    dend_16 { pt3dadd( -48.0229, -65.172, -52.5178, 0.96 ) }
    dend_16 { pt3dadd( -48.4601, -64.9328, -52.9382, 0.12 ) }
    dend_16 { pt3dadd( -48.6712, -64.8355, -53.2066, 0.12 ) }
    dend_16 { pt3dadd( -49.094, -64.6735, -53.807, 2.4 ) }
    dend_16 { pt3dadd( -49.7701, -64.4652, -54.8741, 0.12 ) }
    dend_16 { pt3dadd( -50.0398, -64.385, -55.4025, 0.36 ) }
    dend_16 { pt3dadd( -50.1522, -64.354, -55.6706, 0.72 ) }
    dend_16 { pt3dadd( -50.8117, -64.2179, -57.4856, 1.44 ) }
    dend_16 { pt3dadd( -50.8839, -64.2085, -57.6977, 1.68 ) }
    dend_16 { pt3dadd( -50.9767, -64.2037, -57.9749, 1.92 ) }
    dend_16 { pt3dadd( -51.6398, -64.1798, -59.9797, 0.48 ) }
    dend_16 { pt3dadd( -51.833, -64.1703, -60.5408, 0.12 ) }
    dend_16 { pt3dadd( -51.9238, -64.1644, -60.7796, 0.12 ) }
    dend_16 { pt3dadd( -52.0575, -64.1592, -61.0491, 0.12 ) }
    dend_16 { pt3dadd( -52.2325, -64.1691, -61.3653, 0.48 ) }
    dend_16 { pt3dadd( -52.5937, -64.218, -61.9242, 0.12 ) }
    dend_16 { pt3dadd( -52.7262, -64.256, -62.0865, 0.12 ) }
    dend_16 { pt3dadd( -53.1148, -64.3878, -62.5357, 1.68 ) }
    dend_16 { pt3dadd( -53.3625, -64.489, -62.8299, 2.64 ) }
    dend_16 { pt3dadd( -54.5414, -65.0924, -64.2333, 0.24 ) }
    dend_16 { pt3dadd( -54.696, -65.185, -64.4159, 0.24 ) }
    dend_16 { pt3dadd( -54.9684, -65.3636, -64.7296, 0.24 ) }
    dend_16 { pt3dadd( -55.217, -65.5356, -65.0144, 0.36 ) }
    dend_16 { pt3dadd( -55.4864, -65.7257, -65.3084, 0.12 ) }
    dend_16 { pt3dadd( -55.733, -65.8835, -65.5476, 0.12 ) }
    dend_16 { pt3dadd( -56.2077, -66.1639, -65.9186, 0.6 ) }
    dend_16 { pt3dadd( -56.4831, -66.3024, -66.1244, 0.12 ) }
    dend_16 { pt3dadd( -57.2852, -66.6348, -66.6864, 2.16 ) }
    dend_16 { pt3dadd( -57.4683, -66.6947, -66.802, 2.64 ) }
    dend_16 { pt3dadd( -58.2289, -66.8641, -67.2036, 0.12 ) }
    dend_16 { pt3dadd( -58.5485, -66.904, -67.3508, 0.12 ) }
    dend_16 { pt3dadd( -58.8717, -66.92, -67.5094, 0.96 ) }
    dend_16 { pt3dadd( -59.118, -66.9143, -67.65, 0.96 ) }
    dend_16 { pt3dadd( -59.3586, -66.8873, -67.8115, 0.12 ) }
    dend_16 { pt3dadd( -59.7536, -66.8284, -68.1386, 0.12 ) }
    dend_16 { pt3dadd( -60.2123, -66.7593, -68.6258, 1.68 ) }
    dend_16 { pt3dadd( -60.8974, -66.6451, -69.537, 1.68 ) }
    dend_16 { pt3dadd( -61.2227, -66.5846, -70.0266, 0.12 ) }
    dend_16 { pt3dadd( -61.3778, -66.5547, -70.2726, 0.12 ) }
    dend_16 { pt3dadd( -61.623, -66.5074, -70.6776, 0.12 ) }
    dend_16 { pt3dadd( -62.0257, -66.4244, -71.3482, 1.68 ) }
    dend_16 { pt3dadd( -62.5913, -66.3059, -72.2529, 0.12 ) }
    dend_16 { pt3dadd( -62.741, -66.2787, -72.4584, 0.12 ) }
    dend_16 { pt3dadd( -62.9638, -66.2374, -72.7403, 0.12 ) }
    dend_16 { pt3dadd( -63.5463, -66.1132, -73.3865, 1.8 ) }
    dend_16 { pt3dadd( -63.7305, -66.0685, -73.5582, 1.8 ) }
    dend_16 { pt3dadd( -64.4101, -65.893, -74.0787, 0.12 ) }
    dend_16 { pt3dadd( -64.7101, -65.8236, -74.2794, 0.12 ) }
    dend_16 { pt3dadd( -65.1549, -65.7243, -74.5696, 0.12 ) }
    dend_16 { pt3dadd( -65.6628, -65.5964, -74.8749, 1.2 ) }
    dend_16 { pt3dadd( -65.7244, -65.5795, -74.9059, 1.68 ) }
    dend_16 { pt3dadd( -65.912, -65.5284, -74.9926, 1.68 ) }
    dend_16 { pt3dadd( -66.5798, -65.3388, -75.2502, 0.12 ) }
    dend_16 { pt3dadd( -66.8439, -65.2735, -75.3539, 0.12 ) }
    dend_16 { pt3dadd( -67.261, -65.1942, -75.5156, 0.12 ) }
    dend_16 { pt3dadd( -67.4573, -65.1555, -75.588, 0.12 ) }
    dend_16 { pt3dadd( -67.6966, -65.1096, -75.6657, 1.08 ) }
    dend_16 { pt3dadd( -67.9672, -65.0642, -75.7379, 1.08 ) }
    dend_16 { pt3dadd( -68.4724, -65.01, -75.7753, 0.12 ) }
    dend_16 { pt3dadd( -68.6963, -64.9988, -75.7717, 0.12 ) }
    dend_16 { pt3dadd( -69.1106, -64.9965, -75.7397, 0.24 ) }
    dend_16 { pt3dadd( -69.4915, -64.9993, -75.7137, 0.24 ) }
    dend_16 { pt3dadd( -69.8522, -65.0151, -75.694, 0.24 ) }
    dend_16 { pt3dadd( -70.7989, -65.0984, -75.6784, 1.68 ) }
    dend_16 { pt3dadd( -71.092, -65.135, -75.6833, 2.52 ) }
    dend_16 { pt3dadd( -71.4425, -65.1863, -75.7028, 2.52 ) }
    dend_16 { pt3dadd( -72.2527, -65.299, -75.7856, 0.12 ) }
    dend_16 { pt3dadd( -72.7538, -65.3394, -75.8599, 0.48 ) }
    dend_16 { pt3dadd( -73.1199, -65.342, -75.9379, 0.12 ) }
    dend_16 { pt3dadd( -73.3237, -65.3284, -75.997, 0.12 ) }
    dend_16 { pt3dadd( -73.5699, -65.3002, -76.0601, 0.12 ) }
    dend_16 { pt3dadd( -73.9511, -65.2542, -76.169, 0.36 ) }
    dend_16 { pt3dadd( -74.2249, -65.216, -76.2504, 0.12 ) }
    dend_16 { pt3dadd( -74.77, -65.1743, -76.4176, 0.12 ) }
    dend_16 { pt3dadd( -74.9896, -65.1934, -76.4849, 1.56 ) }
    dend_16 { pt3dadd( -75.1665, -65.26, -76.5538, 1.56 ) }
    dend_16 { pt3dadd( -75.7433, -65.7127, -76.8155, 1.2 ) }
    dend_16 { pt3dadd( -75.813, -65.7906, -76.8493, 0.12 ) }
    dend_16 { pt3dadd( -76.0838, -66.1627, -76.9873, 0.12 ) }
    dend_16 { pt3dadd( -76.1545, -66.2762, -77.041, 0.12 ) }
    dend_16 { pt3dadd( -76.2288, -66.3837, -77.101, 0.12 ) }
    dend_16 { pt3dadd( -76.5015, -66.7422, -77.3495, 0.12 ) }
    dend_16 { pt3dadd( -76.6141, -66.8634, -77.4661, 1.2 ) }
    dend_16 { pt3dadd( -76.7533, -67.0058, -77.6296, 1.44 ) }
    dend_16 { pt3dadd( -77.2526, -67.4698, -78.3028, 0.12 ) }
    dend_16 { pt3dadd( -77.4515, -67.6444, -78.5808, 0.96 ) }
    dend_16 { pt3dadd( -77.7252, -67.8668, -78.9574, 1.2 ) }
    dend_16 { pt3dadd( -78.2097, -68.2125, -79.5968, 0.12 ) }
    dend_16 { pt3dadd( -78.3737, -68.3246, -79.8128, 0.12 ) }
    dend_16 { pt3dadd( -78.753, -68.5674, -80.2954, 0.12 ) }
    dend_16 { pt3dadd( -78.9097, -68.6601, -80.4716, 0.12 ) }
    dend_16 { pt3dadd( -79.1921, -68.8194, -80.7835, 0.12 ) }
    dend_16 { pt3dadd( -79.8586, -69.1374, -81.3884, 2.64 ) }
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.99432, -57.7535, -14.556, 0.12 ) }
    dend_14 { pt3dadd( -7.09846, -59.1976, -14.0726, 0.12 ) }
    dend_14 { pt3dadd( -7.32007, -59.3562, -14.0115, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -8.09327, -59.9246, -13.7846, 0.12 ) }
    dend_14 { pt3dadd( -8.64037, -60.3258, -13.6189, 0.12 ) }
    dend_14 { pt3dadd( -9.58364, -61.0171, -13.3317, 0.12 ) }
    dend_14 { pt3dadd( -10.4903, -61.6814, -13.0575, 1.32 ) }
    dend_14 { pt3dadd( -10.8765, -61.9769, -12.926, 1.68 ) }
    dend_14 { pt3dadd( -11.6369, -62.5766, -12.671, 0.72 ) }
    dend_14 { pt3dadd( -12.1914, -63.0565, -12.4798, 0.12 ) }
    dend_14 { pt3dadd( -12.5543, -63.3851, -12.3572, 0.12 ) }
    dend_14 { pt3dadd( -12.8984, -63.73, -12.2494, 0.12 ) }
    dend_14 { pt3dadd( -13.2152, -64.1034, -12.1212, 0.6 ) }
    dend_14 { pt3dadd( -13.5014, -64.488, -11.9575, 0.6 ) }
    dend_14 { pt3dadd( -13.8964, -65.042, -11.6786, 0.12 ) }
    dend_14 { pt3dadd( -14.0847, -65.2684, -11.5705, 0.12 ) }
    dend_14 { pt3dadd( -14.3017, -65.4785, -11.4876, 0.12 ) }
    dend_14 { pt3dadd( -15.6698, -66.5624, -11.1432, 1.92 ) }
    dend_14 { pt3dadd( -16.2716, -66.929, -11.0473, 2.76 ) }
    dend_14 { pt3dadd( -16.8911, -67.2406, -10.9847, 3.0 ) }
    dend_14 { pt3dadd( -18.4312, -67.8971, -10.8999, 1.68 ) }
    dend_14 { pt3dadd( -19.4643, -68.2735, -10.8953, 0.12 ) }
    dend_14 { pt3dadd( -20.1782, -68.4954, -10.9217, 0.12 ) }
    dend_14 { pt3dadd( -21.3812, -68.82, -11.0198, 0.12 ) }
    dend_14 { pt3dadd( -21.9781, -68.9872, -11.0582, 0.6 ) }
    dend_14 { pt3dadd( -22.243, -69.0663, -11.0864, 0.84 ) }
    dend_14 { pt3dadd( -23.1699, -69.3623, -11.1969, 0.12 ) }
    dend_14 { pt3dadd( -24.2426, -69.731, -11.3603, 0.12 ) }
    dend_14 { pt3dadd( -24.8115, -69.9427, -11.495, 0.6 ) }
    dend_14 { pt3dadd( -25.2112, -70.1128, -11.6157, 0.12 ) }
    dend_14 { pt3dadd( -26.8112, -70.8373, -12.1403, 0.12 ) }
    dend_14 { pt3dadd( -27.1526, -71.0163, -12.2555, 0.12 ) }
    dend_14 { pt3dadd( -27.4129, -71.1664, -12.3381, 0.12 ) }
    dend_14 { pt3dadd( -28.2846, -71.6823, -12.6363, 1.32 ) }
    dend_14 { pt3dadd( -28.8496, -72.0494, -12.8176, 2.4 ) }
    dend_14 { pt3dadd( -29.3604, -72.4088, -12.9595, 2.88 ) }
    dend_14 { pt3dadd( -29.9513, -72.8608, -13.075, 1.92 ) }
    dend_14 { pt3dadd( -30.7038, -73.4829, -13.2545, 1.2 ) }
    dend_14 { pt3dadd( -31.7615, -74.442, -13.5264, 0.12 ) }
    dend_14 { pt3dadd( -32.4573, -75.1529, -13.7007, 0.12 ) }
    dend_14 { pt3dadd( -32.7255, -75.4494, -13.7682, 0.72 ) }
    dend_14 { pt3dadd( -33.2336, -76.0458, -13.9019, 0.96 ) }
    dend_14 { pt3dadd( -34.0119, -77.0202, -14.0731, 0.12 ) }
    dend_14 { pt3dadd( -34.4199, -77.5781, -14.1412, 0.12 ) }
    dend_14 { pt3dadd( -35.1218, -78.5644, -14.1908, 0.12 ) }
    dend_14 { pt3dadd( -35.5347, -79.1196, -14.2493, 0.12 ) }
    dend_14 { pt3dadd( -36.2156, -80.0357, -14.3728, 1.44 ) }
    dend_14 { pt3dadd( -36.812, -80.8398, -14.4959, 2.4 ) }
    dend_14 { pt3dadd( -36.9989, -81.0901, -14.5346, 2.4 ) }
    dend_14 { pt3dadd( -37.4676, -81.7128, -14.649, 1.32 ) }
    dend_14 { pt3dadd( -38.5763, -83.184, -14.9986, 0.12 ) }
    dend_14 { pt3dadd( -39.1111, -83.8846, -15.1838, 0.12 ) }
    dend_14 { pt3dadd( -39.4118, -84.2669, -15.2875, 0.48 ) }
    dend_14 { pt3dadd( -39.5358, -84.4148, -15.3347, 0.12 ) }
    dend_14 { pt3dadd( -40.1056, -85.0824, -15.531, 0.12 ) }
    dend_14 { pt3dadd( -40.7629, -85.8116, -15.7109, 0.96 ) }
    dend_14 { pt3dadd( -41.0692, -86.1213, -15.7942, 1.56 ) }
    dend_14 { pt3dadd( -41.5075, -86.5264, -15.9839, 1.56 ) }
    dend_14 { pt3dadd( -42.2642, -87.1912, -16.4471, 0.12 ) }
    dend_14 { pt3dadd( -42.6005, -87.476, -16.6912, 0.12 ) }
    dend_14 { pt3dadd( -42.8774, -87.7384, -16.9149, 0.12 ) }
    dend_14 { pt3dadd( -43.9535, -88.8575, -17.7994, 0.48 ) }
    dend_14 { pt3dadd( -44.6522, -89.652, -18.396, 0.48 ) }
    dend_14 { pt3dadd( -45.7206, -90.9074, -19.3577, 2.64 ) }
    dend_14 { pt3dadd( -46.3256, -91.6408, -19.9201, 3.61 ) }
    dend_14 { pt3dadd( -47.4969, -93.1089, -21.0275, 0.12 ) }
    dend_14 { pt3dadd( -47.9632, -93.7406, -21.4645, 0.12 ) }
    dend_14 { pt3dadd( -48.1035, -93.9569, -21.5769, 0.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 65/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.99432, -57.7535, -14.556, 3.25 ) }
    dend_3 { pt3dadd( -4.81702, -58.4954, -14.8101, 3.25 ) }
    dend_3 { pt3dadd( -4.41704, -60.3101, -15.2912, 0.36 ) }
    dend_3 { pt3dadd( -4.35018, -60.6503, -15.3629, 0.36 ) }
    dend_3 { pt3dadd( -4.25553, -61.1777, -15.4519, 0.36 ) }
    dend_3 { pt3dadd( -4.1299, -61.8777, -15.5556, 0.36 ) }
    dend_3 { pt3dadd( -4.02368, -62.6061, -15.6234, 0.36 ) }
    dend_3 { pt3dadd( -3.90275, -63.6998, -15.6622, 2.64 ) }
    dend_3 { pt3dadd( -3.83503, -64.5479, -15.6411, 3.85 ) }
    dend_3 { pt3dadd( -3.77027, -65.6263, -15.6087, 4.21 ) }
    dend_3 { pt3dadd( -3.74519, -66.2841, -15.5872, 3.61 ) }
    dend_3 { pt3dadd( -3.67787, -68.3057, -15.5203, 0.24 ) }
    dend_3 { pt3dadd( -3.67391, -68.4463, -15.5234, 0.24 ) }
    dend_3 { pt3dadd( -3.6464, -69.5344, -15.5976, 0.36 ) }
    dend_3 { pt3dadd( -3.59352, -70.499, -15.6866, 1.08 ) }
    dend_3 { pt3dadd( -3.48915, -71.6818, -15.8234, 2.04 ) }
    dend_3 { pt3dadd( -3.37812, -72.6389, -15.9529, 1.56 ) }
    dend_3 { pt3dadd( -3.11991, -74.3483, -16.1688, 0.48 ) }
    dend_3 { pt3dadd( -3.03513, -74.8831, -16.2144, 0.48 ) }
    dend_3 { pt3dadd( -2.84927, -76.1147, -16.2662, 0.48 ) }
    dend_3 { pt3dadd( -2.76173, -76.8688, -16.2574, 0.48 ) }
    dend_3 { pt3dadd( -2.69808, -77.7148, -16.212, 0.48 ) }
    dend_3 { pt3dadd( -2.68182, -78.8183, -16.1811, 0.48 ) }
    dend_3 { pt3dadd( -2.71549, -79.5402, -16.1684, 2.04 ) }
    dend_3 { pt3dadd( -2.81778, -80.4536, -16.2168, 3.0 ) }
    dend_3 { pt3dadd( -2.94058, -81.206, -16.3109, 3.49 ) }
    dend_3 { pt3dadd( -3.11174, -82.2054, -16.4797, 2.52 ) }
    dend_3 { pt3dadd( -3.3652, -83.8969, -16.8342, 0.48 ) }
    dend_3 { pt3dadd( -3.42631, -84.4964, -16.9762, 0.36 ) }
    dend_3 { pt3dadd( -3.44975, -84.9154, -17.0674, 0.36 ) }
    dend_3 { pt3dadd( -3.45581, -85.6295, -17.2134, 0.6 ) }
    dend_3 { pt3dadd( -3.44614, -86.3387, -17.3317, 0.6 ) }
    dend_3 { pt3dadd( -3.42929, -87.1812, -17.4389, 0.36 ) }
    dend_3 { pt3dadd( -3.38597, -88.4349, -17.5535, 0.36 ) }
    dend_3 { pt3dadd( -3.36709, -88.921, -17.6218, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( -3.34275, -89.8376, -17.7959, 1.68 ) }
    dend_3 { pt3dadd( -3.33772, -91.0274, -18.0607, 3.49 ) }
    dend_3 { pt3dadd( -3.37422, -91.7941, -18.2517, 4.09 ) }
    dend_3 { pt3dadd( -3.45497, -92.6095, -18.4709, 3.49 ) }
    dend_3 { pt3dadd( -3.74406, -94.6302, -19.0141, 0.96 ) }
    dend_3 { pt3dadd( -3.86396, -95.4051, -19.2266, 0.36 ) }
    dend_3 { pt3dadd( -3.92059, -95.7783, -19.3255, 0.36 ) }
    dend_3 { pt3dadd( -4.03613, -96.6042, -19.5394, 0.36 ) }
    dend_3 { pt3dadd( -4.12107, -97.1779, -19.6799, 0.36 ) }
    dend_3 { pt3dadd( -4.27723, -98.1126, -19.8922, 1.2 ) }
    dend_3 { pt3dadd( -4.44199, -99.1137, -20.0455, 2.88 ) }
    dend_3 { pt3dadd( -4.52657, -99.943, -20.1526, 2.76 ) }
    dend_3 { pt3dadd( -4.54775, -100.556, -20.2443, 2.64 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 13/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -83.3426, 184.393, -100.21, 0.24 ) }
    dend_30 { pt3dadd( -84.1492, 184.309, -100.721, 0.24 ) }
    dend_30 { pt3dadd( -84.6176, 184.311, -100.97, 0.24 ) }
    dend_30 { pt3dadd( -86.4589, 184.33, -101.753, 1.2 ) }
    dend_30 { pt3dadd( -86.8322, 184.3, -101.911, 1.2 ) }
    dend_30 { pt3dadd( -87.8113, 184.143, -102.294, 0.12 ) }
    dend_30 { pt3dadd( -88.5338, 183.983, -102.586, 0.12 ) }
    dend_30 { pt3dadd( -89.3449, 183.746, -102.937, 0.12 ) }
    dend_30 { pt3dadd( -90.0838, 183.472, -103.224, 0.12 ) }
    dend_30 { pt3dadd( -91.5009, 182.848, -103.663, 0.12 ) }
    dend_30 { pt3dadd( -92.0989, 182.535, -103.876, 0.12 ) }
    dend_30 { pt3dadd( -92.6944, 182.164, -104.1, 0.96 ) }
    dend_30 { pt3dadd( -92.93, 181.989, -104.206, 1.08 ) }
    dend_30 { pt3dadd( -93.1338, 181.823, -104.305, 1.08 ) }
    dend_30 { pt3dadd( -93.6407, 181.464, -104.599, 0.48 ) }
    dend_30 { pt3dadd( -94.1221, 181.169, -104.881, 0.48 ) }
    dend_30 { pt3dadd( -94.226, 181.111, -104.942, 0.48 ) }
    dend_30 { pt3dadd( -94.4716, 180.973, -105.079, 0.48 ) }
    dend_30 { pt3dadd( -94.7961, 180.788, -105.27, 0.12 ) }
    dend_30 { pt3dadd( -95.7577, 180.235, -105.814, 0.12 ) }
    dend_30 { pt3dadd( -95.9388, 180.136, -105.912, 0.12 ) }
    dend_30 { pt3dadd( -96.4633, 179.851, -106.194, 1.44 ) }
    dend_30 { pt3dadd( -97.1404, 179.487, -106.563, 1.8 ) }
    dend_30 { pt3dadd( -98.1102, 178.97, -107.088, 0.12 ) }
    dend_30 { pt3dadd( -98.4452, 178.782, -107.258, 0.12 ) }
    dend_30 { pt3dadd( -98.9819, 178.477, -107.493, 1.08 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 39/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -83.3426, 184.393, -100.21, 0.12 ) }
    dend_29 { pt3dadd( -83.317, 185.055, -100.554, 0.12 ) }
    dend_29 { pt3dadd( -83.2758, 185.767, -100.924, 0.12 ) }
    dend_29 { pt3dadd( -83.2105, 186.875, -101.448, 2.4 ) }
    dend_29 { pt3dadd( -83.1958, 187.211, -101.611, 2.4 ) }
    dend_29 { pt3dadd( -83.1721, 187.982, -101.968, 2.16 ) }
    dend_29 { pt3dadd( -83.1387, 189.367, -102.583, 0.12 ) }
    dend_29 { pt3dadd( -83.1254, 190.092, -102.923, 0.12 ) }
    dend_29 { pt3dadd( -83.1442, 190.709, -103.209, 0.12 ) }
    dend_29 { pt3dadd( -83.1897, 191.312, -103.503, 0.12 ) }
    dend_29 { pt3dadd( -83.2664, 191.898, -103.864, 1.08 ) }
    dend_29 { pt3dadd( -83.321, 192.202, -104.072, 1.08 ) }
    dend_29 { pt3dadd( -83.5507, 193.149, -104.878, 0.12 ) }
    dend_29 { pt3dadd( -83.6878, 193.599, -105.306, 0.12 ) }
    dend_29 { pt3dadd( -83.9587, 194.32, -106.091, 0.84 ) }
    dend_29 { pt3dadd( -84.3888, 195.378, -107.287, 0.12 ) }
    dend_29 { pt3dadd( -84.5828, 195.853, -107.849, 0.12 ) }
    dend_29 { pt3dadd( -84.8313, 196.488, -108.592, 1.32 ) }
    dend_29 { pt3dadd( -84.9191, 196.711, -108.858, 1.32 ) }
    dend_29 { pt3dadd( -85.3069, 197.81, -110.168, 0.12 ) }
    dend_29 { pt3dadd( -85.4099, 198.138, -110.541, 0.12 ) }
    dend_29 { pt3dadd( -85.5231, 198.566, -110.985, 0.12 ) }
    dend_29 { pt3dadd( -85.6982, 199.349, -111.775, 0.12 ) }
    dend_29 { pt3dadd( -85.9997, 200.929, -113.36, 1.8 ) }
    dend_29 { pt3dadd( -86.0289, 201.13, -113.552, 1.8 ) }
    dend_29 { pt3dadd( -86.0925, 201.842, -114.15, 0.12 ) }
    dend_29 { pt3dadd( -86.1517, 202.719, -114.882, 0.12 ) }
    dend_29 { pt3dadd( -86.1679, 203.115, -115.186, 0.6 ) }
    dend_29 { pt3dadd( -86.1619, 204.096, -115.814, 0.12 ) }
    dend_29 { pt3dadd( -86.1124, 205.108, -116.356, 0.12 ) }
    dend_29 { pt3dadd( -86.0733, 205.91, -116.752, 1.32 ) }
    dend_29 { pt3dadd( -86.0069, 207.2, -117.321, 0.12 ) }
    dend_29 { pt3dadd( -85.9868, 208.028, -117.638, 0.12 ) }
    dend_29 { pt3dadd( -86.0008, 209.271, -118.014, 0.12 ) }
    dend_29 { pt3dadd( -86.0053, 209.397, -118.039, 0.12 ) }
    dend_29 { pt3dadd( -86.0833, 210.273, -118.157, 1.44 ) }
    dend_29 { pt3dadd( -86.1715, 210.958, -118.175, 1.92 ) }
    dend_29 { pt3dadd( -86.3714, 212.157, -118.062, 0.12 ) }
    dend_29 { pt3dadd( -86.5064, 212.816, -117.963, 0.12 ) }
    dend_29 { pt3dadd( -86.6563, 213.476, -117.788, 0.12 ) }
    dend_29 { pt3dadd( -86.8203, 214.109, -117.575, 0.12 ) }
    dend_29 { pt3dadd( -87.0691, 214.921, -117.245, 0.12 ) }
    dend_29 { pt3dadd( -87.3507, 215.759, -116.871, 1.68 ) }
    dend_29 { pt3dadd( -87.4728, 216.075, -116.73, 1.68 ) }
    dend_29 { pt3dadd( -88.0826, 217.379, -116.2, 0.12 ) }
    dend_29 { pt3dadd( -88.4059, 217.99, -115.999, 0.12 ) }
    dend_29 { pt3dadd( -88.7375, 218.602, -115.85, 1.08 ) }
    dend_29 { pt3dadd( -88.9647, 218.998, -115.796, 1.08 ) }
    dend_29 { pt3dadd( -89.306, 219.541, -115.757, 0.12 ) }
    dend_29 { pt3dadd( -89.7933, 220.296, -115.721, 0.12 ) }
    dend_29 { pt3dadd( -90.1516, 220.824, -115.721, 0.12 ) }
    dend_29 { pt3dadd( -90.3769, 221.157, -115.703, 0.12 ) }
    dend_29 { pt3dadd( -90.7438, 221.734, -115.665, 0.12 ) }
    dend_29 { pt3dadd( -91.4022, 222.799, -115.582, 0.12 ) }
    dend_29 { pt3dadd( -91.803, 223.455, -115.493, 1.32 ) }
    dend_29 { pt3dadd( -91.9882, 223.751, -115.446, 1.68 ) }
    dend_29 { pt3dadd( -92.6929, 224.781, -115.289, 0.24 ) }
    dend_29 { pt3dadd( -93.3799, 225.741, -115.161, 0.12 ) }
    dend_29 { pt3dadd( -93.7929, 226.324, -115.085, 0.12 ) }
    dend_29 { pt3dadd( -94.5603, 227.424, -114.897, 1.8 ) }
    dend_29 { pt3dadd( -94.8668, 227.86, -114.816, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_29 { pt3dadd( -95.6449, 228.994, -114.547, 0.12 ) }
    dend_29 { pt3dadd( -96.2537, 229.939, -114.25, 0.12 ) }
    dend_29 { pt3dadd( -96.7173, 230.701, -113.981, 0.72 ) }
    dend_29 { pt3dadd( -97.1962, 231.584, -113.674, 0.12 ) }
    dend_29 { pt3dadd( -97.7763, 232.83, -113.269, 0.12 ) }
    dend_29 { pt3dadd( -98.0898, 233.667, -112.99, 1.32 ) }
    dend_29 { pt3dadd( -98.3234, 234.561, -112.661, 0.12 ) }
    dend_29 { pt3dadd( -98.5876, 235.995, -112.138, 0.12 ) }
    dend_29 { pt3dadd( -98.6388, 236.47, -111.987, 1.32 ) }
    dend_29 { pt3dadd( -98.6482, 236.981, -111.856, 1.44 ) }
    dend_29 { pt3dadd( -98.589, 237.891, -111.647, 0.96 ) }
    dend_29 { pt3dadd( -98.4678, 239.173, -111.418, 0.12 ) }
    dend_29 { pt3dadd( -98.4119, 239.678, -111.352, 0.12 ) }
    dend_29 { pt3dadd( -98.2865, 240.592, -111.292, 0.24 ) }
    dend_29 { pt3dadd( -98.1653, 241.552, -111.302, 0.24 ) }
    dend_29 { pt3dadd( -98.0641, 242.461, -111.379, 0.24 ) }
    dend_29 { pt3dadd( -97.9631, 243.479, -111.541, 1.68 ) }
    dend_29 { pt3dadd( -97.9005, 244.105, -111.671, 1.92 ) }
    dend_29 { pt3dadd( -97.7803, 245.25, -111.91, 0.12 ) }
    dend_29 { pt3dadd( -97.6595, 246.393, -112.147, 0.12 ) }
    dend_29 { pt3dadd( -97.5772, 247.13, -112.314, 0.96 ) }
    dend_29 { pt3dadd( -97.4439, 248.112, -112.55, 0.12 ) }
    dend_29 { pt3dadd( -97.2585, 249.468, -112.881, 0.12 ) }
    dend_29 { pt3dadd( -97.1885, 249.969, -112.996, 1.32 ) }
    dend_29 { pt3dadd( -97.1072, 250.594, -113.12, 1.32 ) }
    dend_29 { pt3dadd( -97.0306, 251.302, -113.263, 0.24 ) }
    dend_29 { pt3dadd( -96.9294, 252.294, -113.464, 0.24 ) }
    dend_29 { pt3dadd( -96.8744, 252.921, -113.589, 0.24 ) }
    dend_29 { pt3dadd( -96.8038, 253.828, -113.759, 0.24 ) }
    dend_29 { pt3dadd( -96.7471, 255.077, -114.03, 1.08 ) }
    dend_29 { pt3dadd( -96.7416, 255.457, -114.131, 0.12 ) }
    dend_29 { pt3dadd( -96.7574, 256.317, -114.383, 0.12 ) }
    dend_29 { pt3dadd( -96.795, 256.925, -114.593, 0.96 ) }
    dend_29 { pt3dadd( -96.8477, 257.418, -114.775, 0.12 ) }
    dend_29 { pt3dadd( -97.1674, 259.435, -115.533, 0.12 ) }
    dend_29 { pt3dadd( -97.3671, 260.516, -115.943, 1.44 ) }
    dend_29 { pt3dadd( -97.4735, 261.044, -116.136, 1.8 ) }
    dend_29 { pt3dadd( -97.7118, 262.061, -116.514, 0.12 ) }
    dend_29 { pt3dadd( -97.9559, 263.055, -116.868, 0.12 ) }
    dend_29 { pt3dadd( -98.2189, 264.107, -117.207, 0.12 ) }
    dend_29 { pt3dadd( -98.3016, 264.46, -117.297, 0.84 ) }
    dend_29 { pt3dadd( -98.4061, 264.972, -117.379, 0.84 ) }
    dend_29 { pt3dadd( -98.5715, 265.918, -117.469, 0.12 ) }
    dend_29 { pt3dadd( -98.6926, 266.934, -117.509, 0.12 ) }
    dend_29 { pt3dadd( -98.734, 267.446, -117.531, 0.12 ) }
    dend_29 { pt3dadd( -98.7727, 268.215, -117.551, 1.08 ) }
    dend_29 { pt3dadd( -98.8231, 269.664, -117.567, 0.12 ) }
    dend_29 { pt3dadd( -98.8455, 270.994, -117.56, 0.12 ) }
    dend_29 { pt3dadd( -98.8264, 271.716, -117.487, 0.12 ) }
    dend_29 { pt3dadd( -98.7823, 272.562, -117.367, 0.48 ) }
    dend_29 { pt3dadd( -98.7402, 273.206, -117.265, 0.12 ) }
    dend_29 { pt3dadd( -98.7006, 273.825, -117.154, 0.12 ) }
    dend_29 { pt3dadd( -98.634, 274.582, -117.03, 1.8 ) }
    dend_29 { pt3dadd( -98.4382, 276.287, -116.618, 0.12 ) }
    dend_29 { pt3dadd( -98.3658, 276.89, -116.452, 0.12 ) }
    dend_29 { pt3dadd( -98.2862, 277.382, -116.316, 0.36 ) }
    dend_29 { pt3dadd( -98.1517, 278.06, -116.167, 0.12 ) }
    dend_29 { pt3dadd( -97.9618, 278.833, -116.011, 0.12 ) }
    dend_29 { pt3dadd( -97.7649, 279.538, -115.902, 0.12 ) }
    dend_29 { pt3dadd( -97.5638, 280.275, -115.814, 0.12 ) }
    dend_29 { pt3dadd( -97.3306, 281.16, -115.695, 1.08 ) }
    dend_29 { pt3dadd( -97.1528, 281.826, -115.613, 0.12 ) }
    dend_29 { pt3dadd( -96.8812, 282.89, -115.505, 0.12 ) }
    dend_29 { pt3dadd( -96.746, 283.503, -115.449, 0.12 ) }
    dend_29 { pt3dadd( -96.4698, 284.872, -115.408, 2.04 ) }
    dend_29 { pt3dadd( -96.2784, 286.133, -115.436, 0.12 ) }
    dend_29 { pt3dadd( -96.1336, 287.208, -115.516, 0.12 ) }
    dend_29 { pt3dadd( -96.0231, 288.082, -115.629, 1.8 ) }
    dend_29 { pt3dadd( -95.987, 288.364, -115.673, 1.8 ) }
    dend_29 { pt3dadd( -95.7936, 289.774, -115.89, 0.12 ) }
    dend_29 { pt3dadd( -95.5668, 291.348, -116.149, 0.12 ) }
    dend_29 { pt3dadd( -95.4624, 292.157, -116.257, 0.12 ) }
    dend_29 { pt3dadd( -95.3783, 293.047, -116.334, 0.72 ) }
    dend_29 { pt3dadd( -95.2979, 294.172, -116.343, 0.12 ) }
    dend_29 { pt3dadd( -95.2397, 295.319, -116.267, 0.12 ) }
    dend_29 { pt3dadd( -95.2298, 295.942, -116.171, 1.44 ) }
    dend_29 { pt3dadd( -95.2481, 296.501, -116.046, 1.44 ) }
    dend_29 { pt3dadd( -95.3248, 297.128, -115.891, 0.72 ) }
    dend_29 { pt3dadd( -95.5184, 298.126, -115.629, 0.12 ) }
    dend_29 { pt3dadd( -95.7048, 298.849, -115.454, 0.12 ) }
    dend_29 { pt3dadd( -95.8516, 299.325, -115.32, 0.12 ) }
    dend_29 { pt3dadd( -96.1165, 300.135, -115.071, 0.12 ) }
    dend_29 { pt3dadd( -96.3496, 300.915, -114.84, 0.96 ) }
    dend_29 { pt3dadd( -96.471, 301.369, -114.722, 0.12 ) }
    dend_29 { pt3dadd( -96.5873, 301.787, -114.6, 0.12 ) }
    dend_29 { pt3dadd( -96.6915, 302.156, -114.472, 0.12 ) }
    dend_29 { pt3dadd( -96.8323, 302.643, -114.307, 0.36 ) }
    dend_29 { pt3dadd( -97.0022, 303.274, -114.126, 0.36 ) }
    dend_29 { pt3dadd( -97.0801, 303.625, -113.995, 0.36 ) }
    dend_29 { pt3dadd( -97.2771, 304.736, -113.559, 0.96 ) }
    dend_29 { pt3dadd( -97.3392, 305.152, -113.397, 0.96 ) }
    dend_29 { pt3dadd( -97.4376, 305.838, -113.139, 0.12 ) }
    dend_29 { pt3dadd( -97.5343, 306.437, -112.932, 0.12 ) }
    dend_29 { pt3dadd( -97.759, 307.772, -112.476, 0.12 ) }
    dend_29 { pt3dadd( -97.8451, 308.382, -112.289, 1.8 ) }
    dend_29 { pt3dadd( -97.9037, 308.989, -112.136, 2.04 ) }
    dend_29 { pt3dadd( -98.0295, 310.864, -111.705, 0.12 ) }
    dend_29 { pt3dadd( -98.0409, 311.481, -111.569, 0.24 ) }
    dend_29 { pt3dadd( -98.04, 311.555, -111.556, 0.36 ) }
    dend_29 { pt3dadd( -98.0231, 312.08, -111.498, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -97.992, 312.473, -111.462, 0.12 ) }
    dend_29 { pt3dadd( -97.8531, 313.487, -111.418, 1.32 ) }
    dend_29 { pt3dadd( -97.5928, 314.599, -111.291, 0.12 ) }
    dend_29 { pt3dadd( -97.405, 315.346, -111.175, 0.12 ) }
    dend_29 { pt3dadd( -97.3201, 315.707, -111.123, 1.2 ) }
    dend_29 { pt3dadd( -97.1292, 316.458, -111.04, 1.92 ) }
    dend_29 { pt3dadd( -96.972, 317.033, -110.988, 1.92 ) }
    dend_29 { pt3dadd( -96.332, 319.313, -110.788, 0.12 ) }
    dend_29 { pt3dadd( -95.6868, 321.636, -110.61, 0.12 ) }
    dend_29 { pt3dadd( -95.1379, 323.589, -110.455, 0.12 ) }
    dend_29 { pt3dadd( -94.5312, 325.718, -110.294, 0.12 ) }
    dend_29 { pt3dadd( -94.4497, 326.002, -110.276, 1.08 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -79.8586, -69.1374, -81.3884, 0.96 ) }
    dend_18 { pt3dadd( -81.9773, -68.0867, -84.5193, 0.96 ) }
    dend_18 { pt3dadd( -82.8335, -67.6923, -85.7167, 0.12 ) }
    dend_18 { pt3dadd( -83.2335, -67.5027, -86.3559, 0.12 ) }
    dend_18 { pt3dadd( -83.5641, -67.346, -86.8841, 0.12 ) }
    dend_18 { pt3dadd( -83.7815, -67.243, -87.2315, 1.56 ) }
    dend_18 { pt3dadd( -85.5922, -66.3848, -90.1248, 0.84 ) }
    dend_18 { pt3dadd( -85.9909, -66.2266, -90.8054, 1.08 ) }
    dend_18 { pt3dadd( -87.4994, -65.5348, -93.5764, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -79.8586, -69.1374, -81.3884, 0.36 ) }
    dend_17 { pt3dadd( -80.8514, -70.3688, -82.0051, 0.36 ) }
    dend_17 { pt3dadd( -81.0792, -70.6733, -82.1642, 0.36 ) }
    dend_17 { pt3dadd( -81.4826, -71.2605, -82.5092, 0.36 ) }
    dend_17 { pt3dadd( -81.8896, -71.8906, -82.8924, 0.36 ) }
    dend_17 { pt3dadd( -82.0788, -72.1964, -83.0731, 0.96 ) }
    dend_17 { pt3dadd( -82.4793, -72.8642, -83.4832, 1.44 ) }
    dend_17 { pt3dadd( -82.5671, -73.0162, -83.5787, 1.44 ) }
    dend_17 { pt3dadd( -82.9812, -73.701, -84.0479, 0.36 ) }
    dend_17 { pt3dadd( -83.118, -73.9123, -84.1951, 0.36 ) }
    dend_17 { pt3dadd( -83.5313, -74.5057, -84.5947, 0.12 ) }
    dend_17 { pt3dadd( -84.2347, -75.4485, -85.1909, 1.68 ) }
    dend_17 { pt3dadd( -84.5583, -75.8726, -85.4136, 2.52 ) }
    dend_17 { pt3dadd( -85.5857, -77.1735, -86.052, 0.12 ) }
    dend_17 { pt3dadd( -86.0842, -77.7867, -86.3185, 0.12 ) }
    dend_17 { pt3dadd( -86.6081, -78.4259, -86.5702, 0.12 ) }
    dend_17 { pt3dadd( -86.8989, -78.7735, -86.6929, 0.12 ) }
    dend_17 { pt3dadd( -87.5339, -79.5211, -86.9025, 0.84 ) }
    dend_17 { pt3dadd( -87.9083, -79.9772, -87.013, 0.12 ) }
    dend_17 { pt3dadd( -88.5513, -80.7546, -87.1622, 0.12 ) }
    dend_17 { pt3dadd( -89.0776, -81.3805, -87.3166, 0.72 ) }
    dend_17 { pt3dadd( -89.3566, -81.7102, -87.4136, 0.12 ) }
    dend_17 { pt3dadd( -89.7622, -82.1929, -87.5759, 0.12 ) }
    dend_17 { pt3dadd( -90.6616, -83.2582, -88.0336, 0.12 ) }
    dend_17 { pt3dadd( -90.9034, -83.5647, -88.1654, 1.44 ) }
    dend_17 { pt3dadd( -91.3451, -84.1683, -88.4371, 1.92 ) }
    dend_17 { pt3dadd( -91.4837, -84.3698, -88.5282, 1.92 ) }
    dend_17 { pt3dadd( -91.7768, -84.8452, -88.683, 1.92 ) }
    dend_17 { pt3dadd( -92.3304, -85.8398, -88.8982, 0.12 ) }
    dend_17 { pt3dadd( -92.705, -86.5491, -89.0553, 0.12 ) }
    dend_17 { pt3dadd( -93.1526, -87.4081, -89.2436, 0.12 ) }
    dend_17 { pt3dadd( -93.4644, -87.9711, -89.3598, 0.12 ) }
    dend_17 { pt3dadd( -94.3283, -89.3746, -89.8012, 1.56 ) }
    dend_17 { pt3dadd( -94.7358, -89.9783, -90.0222, 1.56 ) }
    dend_17 { pt3dadd( -95.6009, -90.856, -90.9479, 1.56 ) }
    dend_17 { pt3dadd( -95.9522, -91.1297, -91.4084, 0.12 ) }
    dend_17 { pt3dadd( -96.5964, -91.5564, -92.3259, 0.12 ) }
    dend_17 { pt3dadd( -97.3004, -92.0067, -93.3976, 0.12 ) }
    dend_17 { pt3dadd( -97.9911, -92.434, -94.5134, 2.76 ) }
    dend_17 { pt3dadd( -100.162, -93.8059, -98.2429, 0.48 ) }
    dend_17 { pt3dadd( -100.382, -93.9598, -98.624, 0.48 ) }
    dend_17 { pt3dadd( -100.515, -94.0568, -98.8732, 0.12 ) }
    dend_17 { pt3dadd( -100.799, -94.275, -99.4188, 0.12 ) }
    dend_17 { pt3dadd( -101.184, -94.6057, -100.14, 1.08 ) }
    dend_17 { pt3dadd( -101.836, -95.2007, -101.348, 0.12 ) }
    dend_17 { pt3dadd( -102.235, -95.6534, -101.908, 0.12 ) }
    dend_17 { pt3dadd( -102.768, -96.2826, -102.63, 0.84 ) }
    dend_17 { pt3dadd( -103.139, -96.7372, -103.101, 0.84 ) }
    dend_17 { pt3dadd( -103.434, -97.0886, -103.407, 0.12 ) }
    dend_17 { pt3dadd( -103.754, -97.4922, -103.679, 0.12 ) }
    dend_17 { pt3dadd( -104.382, -98.3038, -104.108, 0.12 ) }
    dend_17 { pt3dadd( -104.663, -98.6876, -104.294, 0.12 ) }
    dend_17 { pt3dadd( -104.877, -99.0175, -104.419, 0.12 ) }
    dend_17 { pt3dadd( -105.369, -99.8311, -104.713, 0.12 ) }
    dend_17 { pt3dadd( -105.897, -100.715, -104.991, 1.32 ) }
    // Section: dend_13, id: dend_13, parent: dend_3 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.54775, -100.556, -20.2443, 0.12 ) }
    dend_13 { pt3dadd( -3.7846, -101.629, -20.3825, 0.12 ) }
    dend_13 { pt3dadd( -3.37861, -102.169, -20.4575, 0.12 ) }
    dend_13 { pt3dadd( -2.98774, -102.681, -20.5306, 0.96 ) }
    dend_13 { pt3dadd( -2.32637, -103.447, -20.5353, 0.36 ) }
    dend_13 { pt3dadd( -1.77289, -104.003, -20.4598, 0.12 ) }
    dend_13 { pt3dadd( -1.09771, -104.595, -20.3013, 0.12 ) }
    dend_13 { pt3dadd( -0.673526, -104.95, -20.1782, 0.48 ) }
    dend_13 { pt3dadd( -0.401957, -105.162, -20.0876, 0.12 ) }
    dend_13 { pt3dadd( 1.20507, -106.287, -19.485, 0.12 ) }
    dend_13 { pt3dadd( 2.9544, -107.379, -18.7351, 2.76 ) }
    dend_13 { pt3dadd( 4.18449, -108.096, -18.1354, 1.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 88/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.54775, -100.556, -20.2443, 0.48 ) }
    dend_4 { pt3dadd( -5.12055, -102.359, -20.5874, 0.48 ) }
    dend_4 { pt3dadd( -5.37757, -103.565, -20.7739, 0.48 ) }
    dend_4 { pt3dadd( -5.53172, -104.528, -21.0002, 0.48 ) }
    dend_4 { pt3dadd( -5.57043, -104.828, -21.0749, 0.48 ) }
    dend_4 { pt3dadd( -5.6414, -105.494, -21.2291, 0.48 ) }
    dend_4 { pt3dadd( -5.70618, -106.1, -21.3532, 0.48 ) }
    dend_4 { pt3dadd( -5.8373, -107.324, -21.6675, 0.48 ) }
    dend_4 { pt3dadd( -6.02134, -108.85, -22.1187, 2.04 ) }
    dend_4 { pt3dadd( -6.15531, -109.896, -22.4591, 3.49 ) }
    dend_4 { pt3dadd( -6.25866, -110.577, -22.6831, 3.85 ) }
    dend_4 { pt3dadd( -6.47222, -111.687, -23.0415, 3.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( -7.08134, -114.491, -23.9176, 0.48 ) }
    dend_4 { pt3dadd( -7.33264, -115.644, -24.2775, 0.48 ) }
    dend_4 { pt3dadd( -7.58155, -116.858, -24.6291, 0.48 ) }
    dend_4 { pt3dadd( -7.65834, -117.299, -24.7681, 0.48 ) }
    dend_4 { pt3dadd( -7.76221, -118.052, -25.0436, 0.48 ) }
    dend_4 { pt3dadd( -7.83535, -118.699, -25.2904, 0.48 ) }
    dend_4 { pt3dadd( -7.90586, -119.458, -25.5514, 1.32 ) }
    dend_4 { pt3dadd( -7.98874, -120.141, -25.8414, 1.44 ) }
    dend_4 { pt3dadd( -8.15845, -121.336, -26.4347, 0.24 ) }
    dend_4 { pt3dadd( -8.29485, -122.25, -26.8799, 0.24 ) }
    dend_4 { pt3dadd( -8.45686, -123.309, -27.4016, 0.24 ) }
    dend_4 { pt3dadd( -8.57857, -123.969, -27.7022, 0.24 ) }
    dend_4 { pt3dadd( -8.79447, -125.089, -28.1331, 1.8 ) }
    dend_4 { pt3dadd( -9.01895, -126.218, -28.513, 2.76 ) }
    dend_4 { pt3dadd( -9.25394, -127.483, -28.86, 3.12 ) }
    dend_4 { pt3dadd( -9.47067, -129.022, -29.1951, 1.92 ) }
    dend_4 { pt3dadd( -9.57363, -130.214, -29.4261, 0.24 ) }
    dend_4 { pt3dadd( -9.65538, -131.447, -29.6207, 0.24 ) }
    dend_4 { pt3dadd( -9.65538, -131.447, -29.6207, 0.96 ) }
    dend_4 { pt3dadd( -9.69483, -131.996, -29.6608, 1.32 ) }
    dend_4 { pt3dadd( -9.77754, -132.827, -29.7321, 1.44 ) }
    dend_4 { pt3dadd( -9.90431, -133.933, -29.7553, 0.48 ) }
    dend_4 { pt3dadd( -9.94227, -134.22, -29.7714, 0.24 ) }
    dend_4 { pt3dadd( -10.0106, -134.618, -29.8042, 0.36 ) }
    dend_4 { pt3dadd( -10.2039, -135.673, -29.9033, 0.36 ) }
    dend_4 { pt3dadd( -10.2814, -136.105, -29.9375, 0.36 ) }
    dend_4 { pt3dadd( -10.4567, -137.045, -30.0388, 0.36 ) }
    dend_4 { pt3dadd( -10.5708, -137.705, -30.1176, 1.08 ) }
    dend_4 { pt3dadd( -10.6964, -138.529, -30.2123, 2.04 ) }
    dend_4 { pt3dadd( -10.7855, -139.227, -30.2942, 2.64 ) }
    dend_4 { pt3dadd( -10.9126, -140.359, -30.4652, 1.56 ) }
    dend_4 { pt3dadd( -11.0551, -141.42, -30.673, 0.12 ) }
    dend_4 { pt3dadd( -11.1572, -142.082, -30.8078, 0.12 ) }
    dend_4 { pt3dadd( -11.3064, -143.039, -30.9929, 0.12 ) }
    dend_4 { pt3dadd( -11.3921, -143.569, -31.1128, 0.12 ) }
    dend_4 { pt3dadd( -11.5305, -144.416, -31.3653, 1.32 ) }
    dend_4 { pt3dadd( -11.7389, -145.637, -31.7922, 2.4 ) }
    dend_4 { pt3dadd( -11.8482, -146.363, -32.0208, 3.25 ) }
    dend_4 { pt3dadd( -11.954, -147.142, -32.2569, 3.37 ) }
    dend_4 { pt3dadd( -12.0803, -148.273, -32.5705, 2.28 ) }
    dend_4 { pt3dadd( -12.2242, -149.975, -32.9673, 0.48 ) }
    dend_4 { pt3dadd( -12.2471, -150.414, -33.0483, 0.48 ) }
    dend_4 { pt3dadd( -12.2938, -151.563, -33.2312, 0.48 ) }
    dend_4 { pt3dadd( -12.3193, -152.697, -33.409, 0.6 ) }
    dend_4 { pt3dadd( -12.3175, -153.526, -33.5124, 0.6 ) }
    dend_4 { pt3dadd( -12.3064, -154.209, -33.5564, 0.48 ) }
    dend_4 { pt3dadd( -12.3051, -154.486, -33.5779, 0.48 ) }
    dend_4 { pt3dadd( -12.322, -155.233, -33.6982, 0.36 ) }
    dend_4 { pt3dadd( -12.3597, -155.906, -33.8648, 0.24 ) }
    dend_4 { pt3dadd( -12.3959, -156.315, -33.9891, 0.24 ) }
    dend_4 { pt3dadd( -12.4756, -157.078, -34.2471, 0.24 ) }
    dend_4 { pt3dadd( -12.5998, -158.501, -34.6796, 0.36 ) }
    dend_4 { pt3dadd( -12.652, -159.304, -34.8983, 0.36 ) }
    dend_4 { pt3dadd( -12.6796, -159.845, -35.0265, 1.56 ) }
    dend_4 { pt3dadd( -12.7582, -161.151, -35.2898, 2.88 ) }
    dend_4 { pt3dadd( -12.8034, -161.96, -35.4365, 2.88 ) }
    dend_4 { pt3dadd( -12.8792, -163.618, -35.7277, 0.24 ) }
    dend_4 { pt3dadd( -12.9069, -164.186, -35.8094, 0.12 ) }
    dend_4 { pt3dadd( -12.9569, -165.012, -35.9211, 0.12 ) }
    dend_4 { pt3dadd( -13.0087, -165.623, -36.0209, 0.12 ) }
    dend_4 { pt3dadd( -13.084, -166.464, -36.1716, 1.8 ) }
    dend_4 { pt3dadd( -13.1864, -167.504, -36.3728, 2.64 ) }
    dend_4 { pt3dadd( -13.2828, -168.464, -36.5648, 2.64 ) }
    dend_4 { pt3dadd( -13.4222, -169.98, -36.853, 0.36 ) }
    dend_4 { pt3dadd( -13.4892, -171.008, -37.0267, 0.12 ) }
    dend_4 { pt3dadd( -13.5284, -171.995, -37.1926, 0.12 ) }
    dend_4 { pt3dadd( -13.5502, -172.701, -37.316, 0.36 ) }
    dend_4 { pt3dadd( -13.5922, -173.782, -37.5203, 0.36 ) }
    dend_4 { pt3dadd( -13.6032, -174.087, -37.59, 0.84 ) }
    dend_4 { pt3dadd( -13.6235, -175.001, -37.8846, 1.2 ) }
    dend_4 { pt3dadd( -13.6224, -176.065, -38.1889, 0.48 ) }
    dend_4 { pt3dadd( -13.6134, -176.696, -38.3724, 0.12 ) }
    dend_4 { pt3dadd( -13.5823, -177.405, -38.576, 0.12 ) }
    dend_4 { pt3dadd( -13.4745, -178.643, -38.8429, 0.12 ) }
    dend_4 { pt3dadd( -13.3254, -179.839, -39.0225, 0.12 ) }
    dend_4 { pt3dadd( -13.1346, -181.104, -39.1364, 1.68 ) }
    dend_4 { pt3dadd( -12.953, -182.198, -39.2039, 2.64 ) }
    dend_4 { pt3dadd( -12.8524, -182.762, -39.235, 3.0 ) }
    dend_4 { pt3dadd( -12.5682, -184.397, -39.4198, 0.12 ) }
    dend_4 { pt3dadd( -12.5077, -184.827, -39.491, 0.12 ) }
    dend_4 { pt3dadd( -12.4293, -185.629, -39.6546, 0.12 ) }
    dend_4 { pt3dadd( -12.386, -186.454, -39.9212, 0.48 ) }
    dend_4 { pt3dadd( -12.3793, -186.977, -40.1231, 0.48 ) }
    dend_4 { pt3dadd( -12.3722, -188.045, -40.6192, 0.48 ) }
    dend_4 { pt3dadd( -12.3514, -188.769, -41.0016, 0.48 ) }
    dend_4 { pt3dadd( -12.3001, -189.211, -41.2287, 0.48 ) }
    dend_4 { pt3dadd( -12.2296, -189.595, -41.4275, 0.48 ) }
    dend_4 { pt3dadd( -12.1388, -189.973, -41.6042, 0.48 ) }
    dend_4 { pt3dadd( -11.9064, -190.92, -42.0169, 1.2 ) }
    dend_4 { pt3dadd( -11.7058, -191.705, -42.323, 1.8 ) }
    dend_4 { pt3dadd( -11.3193, -193.256, -42.9276, 0.6 ) }
    dend_4 { pt3dadd( -11.1096, -194.126, -43.27, 0.12 ) }
    dend_4 { pt3dadd( -10.9713, -194.822, -43.5185, 0.12 ) }
    dend_4 { pt3dadd( -10.874, -195.584, -43.7438, 0.12 ) }
    dend_4 { pt3dadd( -10.8581, -195.992, -43.8278, 0.24 ) }
    dend_4 { pt3dadd( -10.8715, -196.548, -43.9124, 0.24 ) }
    dend_4 { pt3dadd( -10.9197, -197.143, -43.9591, 1.32 ) }
    dend_4 { pt3dadd( -11.0119, -198.086, -43.9961, 1.8 ) }
    dend_4 { pt3dadd( -11.1045, -198.915, -44.0345, 2.88 ) }
    dend_4 { pt3dadd( -11.1744, -199.746, -44.0775, 3.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( -11.2627, -200.767, -44.1261, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 1/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -11.2627, -200.767, -44.1261, 1.08 ) }
    dend_12 { pt3dadd( -10.5218, -201.62, -47.959, 1.08 ) }
    dend_12 { pt3dadd( -9.82495, -202.396, -51.0718, 0.48 ) }
    dend_12 { pt3dadd( -9.54359, -202.724, -52.2288, 1.32 ) }
    dend_12 { pt3dadd( -9.16954, -203.139, -53.6197, 1.08 ) }
    dend_12 { pt3dadd( -8.96894, -203.349, -54.3005, 1.44 ) }
    dend_12 { pt3dadd( -8.2759, -204.016, -56.3824, 1.2 ) }
    dend_12 { pt3dadd( -7.69578, -204.513, -57.6457, 1.2 ) }
    dend_12 { pt3dadd( -7.42289, -204.741, -58.1428, 1.56 ) }
    dend_12 { pt3dadd( -6.70927, -205.316, -59.5015, 1.32 ) }
    dend_12 { pt3dadd( -6.28141, -205.657, -60.3627, 0.72 ) }
    dend_12 { pt3dadd( -5.77624, -206.103, -61.4346, 0.72 ) }
    dend_12 { pt3dadd( -5.18212, -206.726, -62.778, 0.72 ) }
    dend_12 { pt3dadd( -4.85789, -207.084, -63.6233, 1.92 ) }
    dend_12 { pt3dadd( -3.66156, -208.516, -67.9507, 0.84 ) }
    dend_12 { pt3dadd( -3.2516, -209.095, -69.8661, 0.6 ) }
    dend_12 { pt3dadd( -3.06812, -209.405, -70.9595, 1.44 ) }
    dend_12 { pt3dadd( -2.99394, -209.561, -71.5343, 1.44 ) }
    dend_12 { pt3dadd( -2.51136, -210.902, -76.9528, 2.52 ) }
    dend_12 { pt3dadd( -2.21129, -212.089, -82.4178, 0.96 ) }
    dend_12 { pt3dadd( -2.20224, -212.174, -82.8392, 0.96 ) }
    dend_12 { pt3dadd( -2.20529, -212.254, -83.2701, 0.96 ) }
    dend_12 { pt3dadd( -2.21615, -212.338, -83.7489, 0.96 ) }
    dend_12 { pt3dadd( -2.32012, -212.823, -86.4383, 1.56 ) }
    dend_12 { pt3dadd( -2.43978, -213.25, -88.5641, 1.56 ) }
    dend_12 { pt3dadd( -2.52483, -213.802, -91.1207, 1.2 ) }
    dend_12 { pt3dadd( -2.53726, -214.154, -92.7662, 1.92 ) }
    dend_12 { pt3dadd( -2.38269, -215.319, -98.4321, 1.8 ) }
    dend_12 { pt3dadd( -2.10259, -216.293, -103.298, 1.32 ) }
    dend_12 { pt3dadd( -1.80762, -216.879, -106.223, 1.8 ) }
    dend_12 { pt3dadd( -1.68747, -217.03, -107.018, 0.96 ) }
    dend_12 { pt3dadd( -1.45593, -217.213, -108.08, 0.96 ) }
    dend_12 { pt3dadd( -0.626066, -217.587, -110.698, 0.84 ) }
    dend_12 { pt3dadd( -0.453667, -217.62, -111.039, 0.84 ) }
    dend_12 { pt3dadd( 0.72598, -217.721, -112.783, 0.12 ) }
    dend_12 { pt3dadd( 1.40478, -217.747, -113.713, 0.12 ) }
    dend_12 { pt3dadd( 2.03896, -217.786, -114.631, 1.08 ) }
    dend_12 { pt3dadd( 3.25628, -217.963, -116.401, 0.36 ) }
    dend_12 { pt3dadd( 3.88751, -218.165, -117.284, 1.44 ) }
    dend_12 { pt3dadd( 4.25341, -218.391, -117.854, 0.12 ) }
    dend_12 { pt3dadd( 4.35319, -218.513, -118.028, 0.12 ) }
    dend_12 { pt3dadd( 4.53858, -218.939, -118.448, 0.12 ) }
    dend_12 { pt3dadd( 4.6812, -219.524, -118.878, 1.2 ) }
    dend_12 { pt3dadd( 4.70951, -219.833, -119.081, 1.2 ) }
    dend_12 { pt3dadd( 4.73422, -221.223, -120.13, 0.12 ) }
    dend_12 { pt3dadd( 4.73663, -221.511, -120.362, 0.12 ) }
    dend_12 { pt3dadd( 4.72928, -221.978, -120.748, 0.12 ) }
    dend_12 { pt3dadd( 4.68794, -222.786, -121.408, 1.08 ) }
    dend_12 { pt3dadd( 4.61276, -223.807, -122.307, 1.68 ) }
    dend_12 { pt3dadd( 4.51608, -224.908, -123.263, 0.12 ) }
    dend_12 { pt3dadd( 4.47028, -225.295, -123.572, 0.12 ) }
    dend_12 { pt3dadd( 4.44609, -225.519, -123.741, 0.12 ) }
    dend_12 { pt3dadd( 4.38398, -226.226, -124.274, 1.08 ) }
    dend_12 { pt3dadd( 4.31355, -227.939, -125.437, 0.12 ) }
    dend_12 { pt3dadd( 4.31275, -228.36, -125.697, 0.12 ) }
    dend_12 { pt3dadd( 4.32553, -228.93, -126.022, 0.12 ) }
    dend_12 { pt3dadd( 4.36399, -229.912, -126.54, 1.68 ) }
    dend_12 { pt3dadd( 4.43492, -231.227, -127.214, 0.12 ) }
    dend_12 { pt3dadd( 4.53083, -232.623, -127.876, 0.12 ) }
    dend_12 { pt3dadd( 4.57529, -233.336, -128.137, 0.12 ) }
    dend_12 { pt3dadd( 4.61187, -233.806, -128.317, 0.12 ) }
    dend_12 { pt3dadd( 4.69499, -234.603, -128.633, 1.56 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 63/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -11.2627, -200.767, -44.1261, 0.12 ) }
    dend_5 { pt3dadd( -11.6422, -202.617, -44.6669, 0.12 ) }
    dend_5 { pt3dadd( -11.7728, -203.302, -44.8461, 0.24 ) }
    dend_5 { pt3dadd( -11.9628, -204.3, -45.1775, 0.24 ) }
    dend_5 { pt3dadd( -12.131, -205.225, -45.5084, 0.24 ) }
    dend_5 { pt3dadd( -12.1782, -205.524, -45.6151, 0.72 ) }
    dend_5 { pt3dadd( -12.2382, -206.032, -45.7872, 1.08 ) }
    dend_5 { pt3dadd( -12.2579, -206.524, -45.9315, 1.08 ) }
    dend_5 { pt3dadd( -12.2583, -207.797, -46.3657, 0.24 ) }
    dend_5 { pt3dadd( -12.2345, -208.261, -46.5804, 0.24 ) }
    dend_5 { pt3dadd( -12.1705, -208.963, -46.948, 0.36 ) }
    dend_5 { pt3dadd( -12.0759, -209.774, -47.4129, 0.36 ) }
    dend_5 { pt3dadd( -11.9546, -210.666, -47.9803, 0.36 ) }
    dend_5 { pt3dadd( -11.8115, -211.835, -48.7302, 1.8 ) }
    dend_5 { pt3dadd( -11.7275, -212.776, -49.2924, 2.76 ) }
    dend_5 { pt3dadd( -11.717, -213.309, -49.671, 2.76 ) }
    dend_5 { pt3dadd( -11.7386, -214.843, -50.8345, 0.6 ) }
    dend_5 { pt3dadd( -11.7457, -215.422, -51.2712, 0.12 ) }
    dend_5 { pt3dadd( -11.7038, -216.244, -51.8256, 0.12 ) }
    dend_5 { pt3dadd( -11.6057, -217.001, -52.2658, 0.48 ) }
    dend_5 { pt3dadd( -11.1652, -219.275, -53.5076, 0.48 ) }
    dend_5 { pt3dadd( -10.9363, -220.208, -53.9942, 2.04 ) }
    dend_5 { pt3dadd( -10.6859, -221.033, -54.3766, 2.28 ) }
    dend_5 { pt3dadd( -10.1644, -222.599, -55.0119, 0.48 ) }
    dend_5 { pt3dadd( -9.83844, -223.52, -55.3368, 0.12 ) }
    dend_5 { pt3dadd( -9.70557, -223.898, -55.4392, 0.12 ) }
    dend_5 { pt3dadd( -9.59197, -224.28, -55.5078, 0.12 ) }
    dend_5 { pt3dadd( -9.52111, -224.677, -55.6011, 0.12 ) }
    dend_5 { pt3dadd( -9.43689, -225.597, -55.812, 0.12 ) }
    dend_5 { pt3dadd( -9.37861, -226.598, -56.0782, 0.12 ) }
    dend_5 { pt3dadd( -9.35031, -226.99, -56.2077, 0.12 ) }
    dend_5 { pt3dadd( -9.25982, -228.229, -56.6863, 1.44 ) }
    dend_5 { pt3dadd( -9.18123, -229.179, -57.0893, 2.52 ) }
    dend_5 { pt3dadd( -9.08935, -230.026, -57.4763, 2.4 ) }
    dend_5 { pt3dadd( -8.91117, -231.368, -58.1402, 1.2 ) }
    dend_5 { pt3dadd( -8.78808, -232.492, -58.7073, 0.12 ) }
    dend_5 { pt3dadd( -8.74021, -233.069, -58.9893, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -8.71733, -233.545, -59.205, 0.12 ) }
    dend_5 { pt3dadd( -8.71145, -233.97, -59.4082, 0.12 ) }
    dend_5 { pt3dadd( -8.7268, -234.765, -59.7783, 1.2 ) }
    dend_5 { pt3dadd( -8.76021, -235.854, -60.211, 2.16 ) }
    dend_5 { pt3dadd( -8.77501, -236.822, -60.5562, 1.08 ) }
    dend_5 { pt3dadd( -8.76867, -237.997, -61.0228, 0.36 ) }
    dend_5 { pt3dadd( -8.75766, -238.681, -61.3236, 0.12 ) }
    dend_5 { pt3dadd( -8.7582, -239.15, -61.555, 0.12 ) }
    dend_5 { pt3dadd( -8.7556, -239.509, -61.7371, 0.48 ) }
    dend_5 { pt3dadd( -8.7464, -240.207, -62.094, 0.6 ) }
    dend_5 { pt3dadd( -8.75117, -241.431, -62.6892, 0.48 ) }
    dend_5 { pt3dadd( -8.78796, -242.238, -63.0443, 0.36 ) }
    dend_5 { pt3dadd( -8.88886, -243.175, -63.4161, 0.72 ) }
    dend_5 { pt3dadd( -9.01471, -243.949, -63.705, 1.8 ) }
    dend_5 { pt3dadd( -9.16862, -244.725, -63.9625, 2.52 ) }
    dend_5 { pt3dadd( -9.32721, -245.472, -64.1473, 2.76 ) }
    dend_5 { pt3dadd( -9.68449, -247.103, -64.3605, 0.6 ) }
    dend_5 { pt3dadd( -9.81279, -247.684, -64.3963, 0.24 ) }
    dend_5 { pt3dadd( -9.93305, -248.293, -64.4024, 0.36 ) }
    dend_5 { pt3dadd( -10.0606, -248.938, -64.4031, 0.36 ) }
    dend_5 { pt3dadd( -10.2095, -249.769, -64.3742, 0.36 ) }
    dend_5 { pt3dadd( -10.3367, -250.545, -64.3409, 0.36 ) }
    dend_5 { pt3dadd( -10.3853, -250.912, -64.329, 1.08 ) }
    dend_5 { pt3dadd( -10.4984, -251.691, -64.3309, 1.68 ) }
    dend_5 { pt3dadd( -10.5678, -252.09, -64.3429, 1.92 ) }
    dend_5 { pt3dadd( -10.7003, -252.743, -64.3909, 2.04 ) }
    dend_5 { pt3dadd( -10.8927, -253.686, -64.5016, 1.32 ) }
    dend_5 { pt3dadd( -11.0177, -254.396, -64.5882, 0.36 ) }
    dend_5 { pt3dadd( -11.1026, -255.042, -64.6598, 0.36 ) }
    dend_5 { pt3dadd( -11.1734, -255.812, -64.732, 0.36 ) }
    dend_5 { pt3dadd( -11.196, -256.204, -64.7587, 0.6 ) }
    dend_5 { pt3dadd( -11.2226, -256.734, -64.778, 0.72 ) }
    dend_5 { pt3dadd( -11.2522, -257.258, -64.7781, 0.72 ) }
    dend_5 { pt3dadd( -11.3091, -257.931, -64.7523, 0.36 ) }
    dend_5 { pt3dadd( -11.3976, -258.701, -64.7116, 0.36 ) }
    dend_5 { pt3dadd( -11.5097, -259.489, -64.6621, 0.36 ) }
    dend_5 { pt3dadd( -11.5776, -260.032, -64.618, 0.6 ) }
    dend_5 { pt3dadd( -11.6348, -260.619, -64.5655, 0.48 ) }
    dend_5 { pt3dadd( -11.7043, -261.647, -64.471, 0.36 ) }
    dend_5 { pt3dadd( -11.7077, -262.061, -64.4368, 0.36 ) }
    dend_5 { pt3dadd( -11.6932, -262.636, -64.3857, 0.36 ) }
    dend_5 { pt3dadd( -11.6019, -263.783, -64.281, 1.68 ) }
    dend_5 { pt3dadd( -11.4696, -264.686, -64.2013, 3.12 ) }
    dend_5 { pt3dadd( -11.3875, -265.07, -64.1699, 3.37 ) }
    dend_5 { pt3dadd( -11.0792, -266.134, -64.1153, 2.16 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -11.0792, -266.134, -64.1153, 0.24 ) }
    dend_11 { pt3dadd( -11.705, -267.179, -64.5859, 0.24 ) }
    dend_11 { pt3dadd( -11.9604, -267.574, -64.7062, 0.24 ) }
    dend_11 { pt3dadd( -12.1516, -267.852, -64.769, 0.24 ) }
    dend_11 { pt3dadd( -12.3388, -268.128, -64.799, 0.24 ) }
    dend_11 { pt3dadd( -12.5747, -268.493, -64.8117, 0.24 ) }
    dend_11 { pt3dadd( -12.8312, -268.907, -64.8089, 0.24 ) }
    dend_11 { pt3dadd( -13.1371, -269.421, -64.7299, 0.96 ) }
    dend_11 { pt3dadd( -13.2944, -269.682, -64.6882, 1.32 ) }
    dend_11 { pt3dadd( -13.5556, -270.095, -64.6089, 0.72 ) }
    dend_11 { pt3dadd( -13.8057, -270.458, -64.5324, 0.12 ) }
    dend_11 { pt3dadd( -14.0943, -270.84, -64.4513, 0.12 ) }
    dend_11 { pt3dadd( -14.3658, -271.229, -64.3736, 0.12 ) }
    dend_11 { pt3dadd( -14.5409, -271.502, -64.3359, 0.12 ) }
    dend_11 { pt3dadd( -14.9161, -272.187, -64.2685, 1.44 ) }
    dend_11 { pt3dadd( -15.1034, -272.58, -64.2552, 1.68 ) }
    dend_11 { pt3dadd( -15.3324, -273.13, -64.247, 1.08 ) }
    dend_11 { pt3dadd( -15.5216, -273.639, -64.2081, 0.48 ) }
    dend_11 { pt3dadd( -15.6245, -273.97, -64.1462, 0.12 ) }
    dend_11 { pt3dadd( -15.8071, -274.633, -64.0212, 0.12 ) }
    dend_11 { pt3dadd( -15.9835, -275.272, -63.8226, 0.48 ) }
    dend_11 { pt3dadd( -16.048, -275.489, -63.7349, 0.48 ) }
    dend_11 { pt3dadd( -16.3028, -276.243, -63.336, 0.48 ) }
    dend_11 { pt3dadd( -16.5918, -276.913, -62.9389, 0.96 ) }
    dend_11 { pt3dadd( -16.8148, -277.386, -62.6354, 0.96 ) }
    dend_11 { pt3dadd( -17.2756, -278.304, -62.0441, 0.12 ) }
    dend_11 { pt3dadd( -17.422, -278.607, -61.8453, 0.12 ) }
    dend_11 { pt3dadd( -17.6819, -279.172, -61.5016, 1.2 ) }
    dend_11 { pt3dadd( -17.9111, -279.692, -61.2228, 1.68 ) }
    dend_11 { pt3dadd( -18.0509, -279.999, -61.0606, 2.16 ) }
    dend_11 { pt3dadd( -18.1862, -280.3, -60.9035, 2.16 ) }
    dend_11 { pt3dadd( -18.6873, -281.476, -60.4464, 0.36 ) }
    dend_11 { pt3dadd( -18.8535, -281.83, -60.2785, 0.36 ) }
    dend_11 { pt3dadd( -18.9942, -282.09, -60.1431, 1.08 ) }
    dend_11 { pt3dadd( -19.2695, -282.552, -59.8819, 1.32 ) }
    dend_11 { pt3dadd( -19.435, -282.803, -59.7379, 1.2 ) }
    dend_11 { pt3dadd( -19.8042, -283.305, -59.4535, 1.2 ) }
    dend_11 { pt3dadd( -20.933, -284.57, -58.686, 0.12 ) }
    dend_11 { pt3dadd( -21.1903, -284.805, -58.5254, 0.24 ) }
    dend_11 { pt3dadd( -21.5049, -285.051, -58.3516, 0.24 ) }
    dend_11 { pt3dadd( -21.6849, -285.186, -58.2655, 0.36 ) }
    dend_11 { pt3dadd( -22.0892, -285.471, -58.0689, 0.36 ) }
    dend_11 { pt3dadd( -22.6427, -285.848, -57.8004, 0.12 ) }
    dend_11 { pt3dadd( -23.0156, -286.078, -57.7345, 0.12 ) }
    dend_11 { pt3dadd( -23.3444, -286.267, -57.6552, 0.96 ) }
    dend_11 { pt3dadd( -23.8076, -286.499, -57.5086, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 91/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.0792, -266.134, -64.1153, 0.12 ) }
    dend_6 { pt3dadd( -10.6051, -267.126, -64.4398, 0.12 ) }
    dend_6 { pt3dadd( -10.3666, -267.619, -64.5469, 0.12 ) }
    dend_6 { pt3dadd( -9.95493, -268.479, -64.7037, 0.84 ) }
    dend_6 { pt3dadd( -9.47083, -269.546, -64.8629, 0.84 ) }
    dend_6 { pt3dadd( -9.14867, -270.283, -64.968, 0.12 ) }
    dend_6 { pt3dadd( -8.85739, -271.0, -65.063, 0.12 ) }
    dend_6 { pt3dadd( -8.54289, -271.879, -65.1633, 0.48 ) }
    dend_6 { pt3dadd( -8.3537, -272.526, -65.2182, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_6 { pt3dadd( -8.17719, -273.333, -65.2563, 0.24 ) }
    dend_6 { pt3dadd( -8.10224, -273.814, -65.263, 0.12 ) }
    dend_6 { pt3dadd( -8.02893, -274.613, -65.3215, 0.24 ) }
    dend_6 { pt3dadd( -7.99314, -275.419, -65.4434, 0.24 ) }
    dend_6 { pt3dadd( -7.98518, -276.207, -65.6042, 0.24 ) }
    dend_6 { pt3dadd( -7.99435, -276.607, -65.6831, 0.84 ) }
    dend_6 { pt3dadd( -8.03928, -277.549, -65.9043, 1.32 ) }
    dend_6 { pt3dadd( -8.07611, -278.309, -66.1122, 1.8 ) }
    dend_6 { pt3dadd( -8.12218, -279.523, -66.4917, 2.4 ) }
    dend_6 { pt3dadd( -8.16252, -280.295, -66.7484, 1.92 ) }
    dend_6 { pt3dadd( -8.26051, -281.433, -67.1665, 0.48 ) }
    dend_6 { pt3dadd( -8.34249, -282.15, -67.4453, 0.12 ) }
    dend_6 { pt3dadd( -8.4432, -282.861, -67.7206, 0.12 ) }
    dend_6 { pt3dadd( -8.49576, -283.263, -67.8613, 0.12 ) }
    dend_6 { pt3dadd( -8.55674, -284.075, -68.149, 0.6 ) }
    dend_6 { pt3dadd( -8.56552, -284.842, -68.4411, 0.24 ) }
    dend_6 { pt3dadd( -8.53762, -285.511, -68.6836, 0.24 ) }
    dend_6 { pt3dadd( -8.50615, -286.035, -68.8431, 0.96 ) }
    dend_6 { pt3dadd( -8.41401, -287.267, -69.1738, 1.8 ) }
    dend_6 { pt3dadd( -8.26226, -288.588, -69.4886, 0.96 ) }
    dend_6 { pt3dadd( -8.08076, -289.576, -69.6836, 0.36 ) }
    dend_6 { pt3dadd( -7.87176, -290.491, -69.824, 0.36 ) }
    dend_6 { pt3dadd( -7.57505, -291.662, -69.976, 0.36 ) }
    dend_6 { pt3dadd( -7.37674, -292.451, -70.0277, 0.36 ) }
    dend_6 { pt3dadd( -7.26174, -292.983, -70.0257, 0.36 ) }
    dend_6 { pt3dadd( -7.06792, -294.016, -69.9745, 1.92 ) }
    dend_6 { pt3dadd( -6.90127, -295.017, -69.8996, 3.12 ) }
    dend_6 { pt3dadd( -6.7873, -295.86, -69.8384, 3.12 ) }
    dend_6 { pt3dadd( -6.6109, -297.763, -69.6011, 0.36 ) }
    dend_6 { pt3dadd( -6.54148, -299.358, -69.2992, 0.36 ) }
    dend_6 { pt3dadd( -6.54674, -300.077, -69.1283, 0.96 ) }
    dend_6 { pt3dadd( -6.59159, -300.872, -68.8951, 1.56 ) }
    dend_6 { pt3dadd( -6.67319, -301.775, -68.5824, 1.68 ) }
    dend_6 { pt3dadd( -6.84879, -303.399, -67.9746, 0.84 ) }
    dend_6 { pt3dadd( -6.95192, -304.216, -67.5918, 0.36 ) }
    dend_6 { pt3dadd( -7.0032, -304.674, -67.3322, 0.36 ) }
    dend_6 { pt3dadd( -7.05252, -305.256, -66.9918, 0.6 ) }
    dend_6 { pt3dadd( -7.07708, -305.853, -66.6699, 0.36 ) }
    dend_6 { pt3dadd( -7.04944, -306.729, -66.3113, 0.36 ) }
    dend_6 { pt3dadd( -6.86891, -308.157, -65.9702, 0.12 ) }
    dend_6 { pt3dadd( -6.71857, -308.853, -65.8592, 0.12 ) }
    dend_6 { pt3dadd( -6.47863, -309.625, -65.7638, 1.32 ) }
    dend_6 { pt3dadd( -6.15702, -310.381, -65.7058, 1.8 ) }
    dend_6 { pt3dadd( -5.58337, -311.498, -65.685, 1.68 ) }
    dend_6 { pt3dadd( -5.19179, -312.159, -65.7145, 1.32 ) }
    dend_6 { pt3dadd( -4.82348, -312.714, -65.7565, 0.36 ) }
    dend_6 { pt3dadd( -4.6022, -313.025, -65.7649, 0.36 ) }
    dend_6 { pt3dadd( -4.07535, -313.694, -65.7163, 0.48 ) }
    dend_6 { pt3dadd( -3.55245, -314.308, -65.5792, 0.12 ) }
    dend_6 { pt3dadd( -2.9079, -315.076, -65.2989, 0.12 ) }
    dend_6 { pt3dadd( -2.45552, -315.641, -65.0359, 1.08 ) }
    dend_6 { pt3dadd( -2.27576, -315.866, -64.9193, 1.32 ) }
    dend_6 { pt3dadd( -1.77885, -316.504, -64.4999, 0.84 ) }
    dend_6 { pt3dadd( -1.39203, -317.018, -64.0922, 0.12 ) }
    dend_6 { pt3dadd( -0.835062, -317.814, -63.4061, 0.12 ) }
    dend_6 { pt3dadd( -0.32268, -318.67, -62.6344, 1.2 ) }
    dend_6 { pt3dadd( -0.105815, -319.069, -62.2899, 1.68 ) }
    dend_6 { pt3dadd( 0.518291, -320.286, -61.2125, 0.6 ) }
    dend_6 { pt3dadd( 0.738551, -320.738, -60.8144, 0.48 ) }
    dend_6 { pt3dadd( 0.927792, -321.107, -60.4653, 0.48 ) }
    dend_6 { pt3dadd( 1.24537, -321.645, -59.8996, 0.12 ) }
    dend_6 { pt3dadd( 1.6791, -322.275, -59.294, 0.12 ) }
    dend_6 { pt3dadd( 1.98859, -322.659, -58.9992, 0.48 ) }
    dend_6 { pt3dadd( 2.37083, -323.069, -58.7993, 0.6 ) }
    dend_6 { pt3dadd( 2.90911, -323.691, -58.643, 0.36 ) }
    dend_6 { pt3dadd( 3.2032, -324.072, -58.5777, 0.36 ) }
    dend_6 { pt3dadd( 3.77269, -325.027, -58.5026, 1.32 ) }
    dend_6 { pt3dadd( 4.21513, -326.045, -58.4645, 2.4 ) }
    dend_6 { pt3dadd( 4.34497, -326.442, -58.4627, 2.52 ) }
    dend_6 { pt3dadd( 4.71287, -327.862, -58.4572, 1.2 ) }
    dend_6 { pt3dadd( 4.97285, -328.909, -58.4803, 0.12 ) }
    dend_6 { pt3dadd( 5.21334, -329.787, -58.5076, 0.12 ) }
    dend_6 { pt3dadd( 5.32931, -330.166, -58.5152, 0.12 ) }
    dend_6 { pt3dadd( 5.4695, -330.57, -58.5399, 0.48 ) }
    dend_6 { pt3dadd( 6.02846, -331.996, -58.6553, 0.48 ) }
    dend_6 { pt3dadd( 6.40237, -332.902, -58.7784, 0.48 ) }
    dend_6 { pt3dadd( 6.80863, -333.964, -59.0011, 0.48 ) }
    dend_6 { pt3dadd( 6.98999, -334.523, -59.1305, 0.12 ) }
    dend_6 { pt3dadd( 7.07841, -335.046, -59.2704, 0.12 ) }
    dend_6 { pt3dadd( 7.07632, -335.7, -59.4588, 1.44 ) }
    dend_6 { pt3dadd( 6.88437, -336.742, -59.781, 2.52 ) }
    dend_6 { pt3dadd( 6.66126, -337.536, -60.028, 2.64 ) }
    dend_6 { pt3dadd( 6.39358, -338.349, -60.3108, 2.4 ) }
    dend_6 { pt3dadd( 5.92699, -339.936, -60.8785, 0.6 ) }
    dend_6 { pt3dadd( 5.70989, -340.718, -61.161, 0.36 ) }
    dend_6 { pt3dadd( 5.42701, -341.796, -61.5434, 0.48 ) }
    dend_6 { pt3dadd( 5.25083, -342.61, -61.8072, 0.48 ) }
    dend_6 { pt3dadd( 5.08214, -343.6, -62.1151, 0.36 ) }
    dend_6 { pt3dadd( 4.90759, -345.15, -62.5512, 0.36 ) }
    dend_6 { pt3dadd( 4.88454, -345.546, -62.645, 1.32 ) }
    dend_6 { pt3dadd( 4.8545, -346.262, -62.7926, 1.68 ) }
    dend_6 { pt3dadd( 4.78638, -347.065, -62.9213, 1.92 ) }
    dend_6 { pt3dadd( 4.73502, -347.467, -62.969, 2.04 ) }
    dend_6 { pt3dadd( 4.48593, -348.956, -63.0861, 0.36 ) }
    dend_6 { pt3dadd( 4.40896, -349.355, -63.1174, 0.36 ) }
    dend_6 { pt3dadd( 4.31698, -349.945, -63.1568, 0.36 ) }
    dend_6 { pt3dadd( 4.20579, -350.874, -63.3741, 0.36 ) }
    dend_6 { pt3dadd( 4.12441, -351.528, -63.5462, 0.36 ) }
    dend_6 { pt3dadd( 3.99141, -352.682, -63.8862, 0.36 ) }
    dend_6 { pt3dadd( 3.92197, -353.437, -64.1489, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_6 { pt3dadd( 3.87083, -354.322, -64.5118, 2.64 ) }
    dend_6 { pt3dadd( 3.89672, -357.314, -66.0366, 2.64 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 2/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 3.89672, -357.314, -66.0366, 0.12 ) }
    dend_10 { pt3dadd( 4.62872, -359.188, -66.2191, 0.12 ) }
    dend_10 { pt3dadd( 4.79062, -359.603, -66.3009, 0.12 ) }
    dend_10 { pt3dadd( 4.90101, -359.885, -66.3673, 0.12 ) }
    dend_10 { pt3dadd( 5.17156, -360.565, -66.585, 0.6 ) }
    dend_10 { pt3dadd( 5.37759, -361.142, -66.8454, 0.12 ) }
    dend_10 { pt3dadd( 5.46687, -361.407, -66.9782, 0.12 ) }
    dend_10 { pt3dadd( 5.69531, -362.212, -67.5226, 0.96 ) }
    dend_10 { pt3dadd( 5.87301, -362.822, -68.0572, 1.56 ) }
    dend_10 { pt3dadd( 6.13404, -363.737, -68.9652, 1.2 ) }
    dend_10 { pt3dadd( 6.39917, -364.771, -70.0156, 0.24 ) }
    dend_10 { pt3dadd( 6.45566, -365.078, -70.3876, 0.72 ) }
    dend_10 { pt3dadd( 6.51449, -365.672, -71.2565, 1.08 ) }
    dend_10 { pt3dadd( 6.52084, -366.572, -72.8712, 0.12 ) }
    dend_10 { pt3dadd( 6.51633, -366.783, -73.2783, 0.12 ) }
    dend_10 { pt3dadd( 6.49893, -367.346, -74.3503, 1.8 ) }
    dend_10 { pt3dadd( 6.50973, -369.187, -77.6969, 1.68 ) }
    dend_10 { pt3dadd( 6.55965, -370.286, -79.5603, 1.32 ) }
    dend_10 { pt3dadd( 6.68012, -371.751, -81.8232, 0.84 ) }
    dend_10 { pt3dadd( 6.76295, -372.433, -82.785, 1.44 ) }
    dend_10 { pt3dadd( 6.86632, -372.997, -83.5062, 2.16 ) }
    dend_10 { pt3dadd( 7.08423, -373.834, -84.3804, 0.24 ) }
    dend_10 { pt3dadd( 7.44626, -374.721, -84.9288, 0.24 ) }
    dend_10 { pt3dadd( 7.67368, -375.139, -85.0753, 0.72 ) }
    dend_10 { pt3dadd( 7.94452, -375.542, -85.1404, 0.96 ) }
    dend_10 { pt3dadd( 8.68811, -376.466, -85.2872, 0.12 ) }
    dend_10 { pt3dadd( 9.21021, -377.03, -85.3733, 0.12 ) }
    dend_10 { pt3dadd( 10.3677, -378.25, -85.5252, 0.12 ) }
    dend_10 { pt3dadd( 11.5667, -379.615, -85.6868, 1.2 ) }
    dend_10 { pt3dadd( 12.1165, -380.284, -85.758, 1.92 ) }
    dend_10 { pt3dadd( 13.0706, -381.497, -85.8768, 0.12 ) }
    dend_10 { pt3dadd( 13.4593, -382.011, -85.9353, 0.12 ) }
    dend_10 { pt3dadd( 13.9032, -382.684, -86.1423, 0.12 ) }
    dend_10 { pt3dadd( 14.4267, -383.566, -86.7543, 0.24 ) }
    dend_10 { pt3dadd( 14.8021, -384.122, -87.4609, 0.24 ) }
    dend_10 { pt3dadd( 14.9865, -384.338, -87.8524, 0.24 ) }
    dend_10 { pt3dadd( 15.6177, -384.949, -89.2927, 1.8 ) }
    dend_10 { pt3dadd( 16.5682, -385.8, -91.5041, 1.8 ) }
    dend_10 { pt3dadd( 17.3651, -386.438, -93.6155, 0.24 ) }
    dend_10 { pt3dadd( 17.8178, -386.752, -95.0066, 0.48 ) }
    dend_10 { pt3dadd( 18.0636, -386.917, -95.8908, 0.72 ) }
    dend_10 { pt3dadd( 18.3739, -387.105, -97.0469, 1.68 ) }
    dend_10 { pt3dadd( 18.5599, -387.199, -97.7657, 1.68 ) }
    dend_10 { pt3dadd( 19.5373, -387.628, -101.22, 1.68 ) }
    dend_10 { pt3dadd( 20.5117, -388.027, -104.563, 1.44 ) }
    dend_10 { pt3dadd( 20.877, -388.174, -105.762, 1.8 ) }
    dend_10 { pt3dadd( 21.1113, -388.261, -106.497, 1.92 ) }
    dend_10 { pt3dadd( 21.7905, -388.486, -108.397, 1.68 ) }
    dend_10 { pt3dadd( 22.2058, -388.631, -109.414, 0.24 ) }
    dend_10 { pt3dadd( 22.4883, -388.779, -109.933, 0.24 ) }
    dend_10 { pt3dadd( 22.8965, -389.104, -110.561, 0.24 ) }
    dend_10 { pt3dadd( 23.1432, -389.334, -110.913, 0.72 ) }
    dend_10 { pt3dadd( 23.38, -389.581, -111.239, 0.96 ) }
    dend_10 { pt3dadd( 23.9515, -390.177, -111.853, 0.84 ) }
    dend_10 { pt3dadd( 24.5352, -390.565, -112.49, 0.12 ) }
    dend_10 { pt3dadd( 24.8016, -390.615, -112.813, 0.12 ) }
    dend_10 { pt3dadd( 25.2757, -390.61, -113.398, 0.24 ) }
    dend_10 { pt3dadd( 25.6267, -390.602, -113.82, 0.24 ) }
    dend_10 { pt3dadd( 25.779, -390.617, -114.124, 0.24 ) }
    dend_10 { pt3dadd( 26.2538, -390.768, -115.863, 0.84 ) }
    dend_10 { pt3dadd( 26.4576, -390.868, -117.482, 1.32 ) }
    dend_10 { pt3dadd( 26.5336, -390.924, -118.896, 2.28 ) }
    dend_10 { pt3dadd( 26.5344, -390.927, -119.577, 2.76 ) }
    dend_10 { pt3dadd( 26.3535, -390.796, -124.709, 2.88 ) }
    dend_10 { pt3dadd( 26.1576, -390.619, -127.991, 2.16 ) }
    dend_10 { pt3dadd( 25.9219, -390.356, -131.311, 1.08 ) }
    dend_10 { pt3dadd( 25.867, -390.278, -132.125, 1.08 ) }
    dend_10 { pt3dadd( 25.7634, -390.093, -133.845, 2.04 ) }
    dend_10 { pt3dadd( 25.746, -390.04, -134.311, 2.04 ) }
    dend_10 { pt3dadd( 25.8359, -389.174, -141.862, 0.6 ) }
    dend_10 { pt3dadd( 25.8882, -389.113, -142.782, 0.48 ) }
    dend_10 { pt3dadd( 26.072, -389.144, -144.652, 0.96 ) }
    dend_10 { pt3dadd( 26.226, -389.262, -146.008, 0.12 ) }
    dend_10 { pt3dadd( 26.2671, -389.318, -146.305, 0.12 ) }
    dend_10 { pt3dadd( 26.3079, -389.388, -146.586, 0.12 ) }
    dend_10 { pt3dadd( 26.5138, -389.865, -147.422, 0.6 ) }
    dend_10 { pt3dadd( 26.6714, -390.37, -148.212, 0.12 ) }
    dend_10 { pt3dadd( 26.7539, -390.56, -148.439, 0.12 ) }
    dend_10 { pt3dadd( 27.2402, -391.315, -149.243, 1.32 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 81/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.89672, -357.314, -66.0366, 0.12 ) }
    dend_7 { pt3dadd( 3.87586, -358.819, -65.978, 0.12 ) }
    dend_7 { pt3dadd( 3.89946, -359.624, -65.9946, 0.12 ) }
    dend_7 { pt3dadd( 3.94542, -360.395, -66.0307, 0.6 ) }
    dend_7 { pt3dadd( 3.98488, -360.861, -66.0586, 0.36 ) }
    dend_7 { pt3dadd( 4.06068, -361.63, -66.0606, 0.36 ) }
    dend_7 { pt3dadd( 4.16208, -362.429, -66.0721, 0.36 ) }
    dend_7 { pt3dadd( 4.35998, -363.409, -66.111, 0.36 ) }
    dend_7 { pt3dadd( 4.44087, -363.737, -66.0984, 0.84 ) }
    dend_7 { pt3dadd( 4.56381, -364.197, -66.0474, 0.84 ) }
    dend_7 { pt3dadd( 4.90179, -365.36, -65.8606, 0.24 ) }
    dend_7 { pt3dadd( 5.28108, -366.627, -65.5741, 0.24 ) }
    dend_7 { pt3dadd( 5.53578, -367.454, -65.3483, 0.24 ) }
    dend_7 { pt3dadd( 6.01092, -368.845, -64.9289, 0.84 ) }
    dend_7 { pt3dadd( 6.27911, -369.585, -64.6986, 1.44 ) }
    dend_7 { pt3dadd( 6.71904, -370.731, -64.3441, 0.72 ) }
    dend_7 { pt3dadd( 7.02985, -371.546, -64.0802, 0.12 ) }
    dend_7 { pt3dadd( 7.13675, -371.844, -63.9645, 0.12 ) }
    dend_7 { pt3dadd( 7.39078, -372.601, -63.6866, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( 7.59534, -373.343, -63.4215, 0.72 ) }
    dend_7 { pt3dadd( 7.68759, -373.766, -63.2213, 0.72 ) }
    dend_7 { pt3dadd( 7.82811, -374.625, -62.7773, 0.12 ) }
    dend_7 { pt3dadd( 7.89225, -375.17, -62.5251, 0.12 ) }
    dend_7 { pt3dadd( 7.93593, -375.568, -62.3419, 0.12 ) }
    dend_7 { pt3dadd( 8.07858, -376.848, -61.7863, 1.44 ) }
    dend_7 { pt3dadd( 8.19861, -377.703, -61.4227, 2.04 ) }
    dend_7 { pt3dadd( 8.33963, -378.597, -61.0525, 2.16 ) }
    dend_7 { pt3dadd( 8.54294, -379.711, -60.6294, 1.44 ) }
    dend_7 { pt3dadd( 8.76417, -380.742, -60.2601, 0.96 ) }
    dend_7 { pt3dadd( 8.95719, -381.492, -60.0341, 0.48 ) }
    dend_7 { pt3dadd( 9.14382, -382.166, -59.8813, 0.12 ) }
    dend_7 { pt3dadd( 9.3006, -382.687, -59.7833, 0.12 ) }
    dend_7 { pt3dadd( 9.43273, -383.1, -59.7005, 0.12 ) }
    dend_7 { pt3dadd( 9.70384, -383.905, -59.544, 0.12 ) }
    dend_7 { pt3dadd( 10.0075, -384.853, -59.4147, 0.12 ) }
    dend_7 { pt3dadd( 10.1996, -385.36, -59.3548, 0.84 ) }
    dend_7 { pt3dadd( 10.5882, -386.226, -59.2436, 1.56 ) }
    dend_7 { pt3dadd( 10.8915, -386.809, -59.1547, 1.8 ) }
    dend_7 { pt3dadd( 11.3583, -387.648, -59.0284, 1.32 ) }
    dend_7 { pt3dadd( 11.7462, -388.341, -58.9269, 0.12 ) }
    dend_7 { pt3dadd( 12.2043, -389.175, -58.8156, 0.12 ) }
    dend_7 { pt3dadd( 12.5952, -389.912, -58.7324, 0.84 ) }
    dend_7 { pt3dadd( 12.9868, -390.69, -58.6622, 0.96 ) }
    dend_7 { pt3dadd( 13.2447, -391.237, -58.6333, 0.12 ) }
    dend_7 { pt3dadd( 13.4167, -391.656, -58.6318, 0.12 ) }
    dend_7 { pt3dadd( 13.6759, -392.368, -58.687, 0.12 ) }
    dend_7 { pt3dadd( 13.817, -392.799, -58.7084, 0.12 ) }
    dend_7 { pt3dadd( 14.0364, -393.427, -58.7282, 1.56 ) }
    dend_7 { pt3dadd( 14.3057, -394.133, -58.7184, 1.92 ) }
    dend_7 { pt3dadd( 14.5346, -394.699, -58.6914, 2.28 ) }
    dend_7 { pt3dadd( 15.131, -396.149, -58.6009, 1.2 ) }
    dend_7 { pt3dadd( 15.6911, -397.535, -58.5188, 0.12 ) }
    dend_7 { pt3dadd( 15.9748, -398.333, -58.5016, 0.12 ) }
    dend_7 { pt3dadd( 16.1098, -398.792, -58.5065, 0.12 ) }
    dend_7 { pt3dadd( 16.2545, -399.38, -58.5326, 1.08 ) }
    dend_7 { pt3dadd( 16.4051, -400.124, -58.5896, 1.56 ) }
    dend_7 { pt3dadd( 16.4797, -400.775, -58.6777, 1.44 ) }
    dend_7 { pt3dadd( 16.5488, -401.63, -58.8743, 0.12 ) }
    dend_7 { pt3dadd( 16.571, -401.925, -58.9423, 0.12 ) }
    dend_7 { pt3dadd( 16.6592, -402.772, -59.1318, 0.12 ) }
    dend_7 { pt3dadd( 16.7676, -403.496, -59.3248, 0.12 ) }
    dend_7 { pt3dadd( 16.9636, -404.573, -59.6278, 0.12 ) }
    dend_7 { pt3dadd( 17.0505, -405.016, -59.7492, 0.84 ) }
    dend_7 { pt3dadd( 17.2156, -405.785, -59.9604, 1.2 ) }
    dend_7 { pt3dadd( 17.3177, -406.222, -60.0879, 1.2 ) }
    dend_7 { pt3dadd( 17.6739, -407.562, -60.4956, 0.12 ) }
    dend_7 { pt3dadd( 17.8946, -408.242, -60.698, 0.12 ) }
    dend_7 { pt3dadd( 17.9941, -408.518, -60.7717, 0.12 ) }
    dend_7 { pt3dadd( 18.2739, -409.302, -60.9212, 0.72 ) }
    dend_7 { pt3dadd( 18.5158, -410.015, -60.9904, 0.72 ) }
    dend_7 { pt3dadd( 18.7155, -410.626, -60.9893, 0.12 ) }
    dend_7 { pt3dadd( 18.9008, -411.273, -60.9129, 0.12 ) }
    dend_7 { pt3dadd( 19.03, -411.848, -60.8482, 0.12 ) }
    dend_7 { pt3dadd( 19.2156, -412.933, -60.7183, 1.44 ) }
    dend_7 { pt3dadd( 19.3079, -413.672, -60.6263, 1.92 ) }
    dend_7 { pt3dadd( 19.3466, -414.149, -60.5881, 1.92 ) }
    dend_7 { pt3dadd( 19.4081, -415.511, -60.5371, 0.12 ) }
    dend_7 { pt3dadd( 19.4804, -416.798, -60.5442, 0.12 ) }
    dend_7 { pt3dadd( 19.5062, -417.029, -60.5563, 0.6 ) }
    dend_7 { pt3dadd( 19.616, -417.822, -60.6456, 0.72 ) }
    dend_7 { pt3dadd( 19.776, -418.846, -60.7992, 0.48 ) }
    dend_7 { pt3dadd( 19.8955, -419.599, -60.9291, 0.24 ) }
    dend_7 { pt3dadd( 20.0257, -420.42, -61.0953, 0.36 ) }
    dend_7 { pt3dadd( 20.1715, -421.563, -61.3222, 0.36 ) }
    dend_7 { pt3dadd( 20.2032, -422.675, -61.546, 0.36 ) }
    dend_7 { pt3dadd( 20.1297, -423.407, -61.6812, 0.48 ) }
    dend_7 { pt3dadd( 20.0384, -424.016, -61.7856, 0.72 ) }
    dend_7 { pt3dadd( 19.8673, -424.79, -61.9255, 0.72 ) }
    dend_7 { pt3dadd( 19.6626, -425.395, -62.0361, 0.72 ) }
    dend_7 { pt3dadd( 19.0332, -426.747, -62.2737, 2.04 ) }
    dend_7 { pt3dadd( 18.5258, -427.696, -62.4023, 3.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 72/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.5258, -427.696, -62.4023, 0.12 ) }
    dend_9 { pt3dadd( 20.2674, -428.671, -62.3636, 0.12 ) }
    dend_9 { pt3dadd( 20.8669, -428.973, -62.35, 0.12 ) }
    dend_9 { pt3dadd( 20.9806, -429.026, -62.3495, 0.48 ) }
    dend_9 { pt3dadd( 21.3231, -429.18, -62.3629, 0.48 ) }
    dend_9 { pt3dadd( 21.5856, -429.301, -62.3794, 0.12 ) }
    dend_9 { pt3dadd( 22.1952, -429.587, -62.4225, 0.12 ) }
    dend_9 { pt3dadd( 22.5565, -429.745, -62.458, 0.72 ) }
    dend_9 { pt3dadd( 22.932, -429.936, -62.4215, 0.72 ) }
    dend_9 { pt3dadd( 23.3867, -430.211, -62.3021, 0.12 ) }
    dend_9 { pt3dadd( 24.3025, -430.862, -61.9405, 0.12 ) }
    dend_9 { pt3dadd( 24.7116, -431.187, -61.733, 0.96 ) }
    dend_9 { pt3dadd( 24.9571, -431.396, -61.5823, 0.96 ) }
    dend_9 { pt3dadd( 26.4189, -432.719, -60.5048, 0.12 ) }
    dend_9 { pt3dadd( 26.8585, -433.146, -60.1013, 0.12 ) }
    dend_9 { pt3dadd( 27.044, -433.341, -59.8804, 0.12 ) }
    dend_9 { pt3dadd( 27.2433, -433.587, -59.5457, 0.6 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 89/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 18.5258, -427.696, -62.4023, 2.64 ) }
    dend_8 { pt3dadd( 17.8874, -428.131, -62.3557, 2.64 ) }
    dend_8 { pt3dadd( 16.6714, -428.977, -62.1212, 0.24 ) }
    dend_8 { pt3dadd( 16.4683, -429.136, -62.0637, 0.24 ) }
    dend_8 { pt3dadd( 16.2048, -429.369, -61.9708, 0.24 ) }
    dend_8 { pt3dadd( 15.6431, -429.941, -61.7051, 0.24 ) }
    dend_8 { pt3dadd( 15.4838, -430.127, -61.6244, 0.24 ) }
    dend_8 { pt3dadd( 15.3453, -430.368, -61.4849, 0.24 ) }
    dend_8 { pt3dadd( 15.1909, -430.782, -61.2147, 0.24 ) }
    dend_8 { pt3dadd( 15.089, -431.1, -61.0325, 1.08 ) }
    dend_8 { pt3dadd( 14.9786, -431.539, -60.8325, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_8 { pt3dadd( 14.8663, -432.063, -60.65, 1.68 ) }
    dend_8 { pt3dadd( 14.7421, -432.896, -60.3931, 0.12 ) }
    dend_8 { pt3dadd( 14.7265, -433.063, -60.348, 0.12 ) }
    dend_8 { pt3dadd( 14.7142, -433.325, -60.2919, 0.48 ) }
    dend_8 { pt3dadd( 14.7068, -433.671, -60.2471, 0.48 ) }
    dend_8 { pt3dadd( 14.707, -433.772, -60.2428, 0.12 ) }
    dend_8 { pt3dadd( 14.7372, -434.462, -60.2385, 0.12 ) }
    dend_8 { pt3dadd( 14.7622, -434.813, -60.2623, 0.12 ) }
    dend_8 { pt3dadd( 14.8052, -435.5, -60.3088, 0.12 ) }
    dend_8 { pt3dadd( 14.8143, -435.775, -60.3338, 1.32 ) }
    dend_8 { pt3dadd( 14.8109, -436.132, -60.3689, 1.08 ) }
    dend_8 { pt3dadd( 14.7858, -436.477, -60.3977, 0.12 ) }
    dend_8 { pt3dadd( 14.7377, -436.832, -60.4192, 0.12 ) }
    dend_8 { pt3dadd( 14.6691, -437.166, -60.4252, 0.12 ) }
    dend_8 { pt3dadd( 14.5697, -437.57, -60.4157, 0.12 ) }
    dend_8 { pt3dadd( 14.3951, -438.2, -60.3748, 0.12 ) }
    dend_8 { pt3dadd( 14.2279, -438.743, -60.3343, 1.2 ) }
    dend_8 { pt3dadd( 14.0916, -439.154, -60.3006, 1.44 ) }
    dend_8 { pt3dadd( 13.9336, -439.612, -60.2554, 0.12 ) }
    dend_8 { pt3dadd( 13.7315, -440.18, -60.1821, 0.12 ) }
    dend_8 { pt3dadd( 13.6153, -440.524, -60.1201, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_12 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_20 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_32 nseg = 5
    dend_25 nseg = 5
    dend_27 nseg = 3
    dend_26 nseg = 11
    dend_16 nseg = 5
    dend_14 nseg = 3
    dend_3 nseg = 3
    dend_29 nseg = 7
    dend_17 nseg = 3
    dend_4 nseg = 5
    dend_12 nseg = 5
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_10 nseg = 5
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_LBC_99ab75ea98_0_0


