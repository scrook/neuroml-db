// Cell: bIR215_L6_MC_6ed36072e7_0_0
/*
{
  "id" : "bIR215_L6_MC_6ed36072e7_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.128252, -10.0998, 0.0, 2.38622", "0.109503, -8.96898, 0.0, 4.19632", "0.0907538, -7.83818, 0.0, 5.2447", "0.0720046, -6.70737, 0.0, 5.96407", "0.0532553, -5.57657, 0.0, 6.60109", "0.0345061, -4.44576, 0.0, 7.17739", "0.0157568, -3.31496, 0.0, 8.06916", "-0.00299241, -2.18415, 0.0, 9.01291", "-0.0217417, -1.05335, 0.0, 9.57655", "-0.0404909, 0.0774534, 0.0, 10.0454", "-0.0592402, 1.20826, 0.0, 10.4382", "-0.0779894, 2.33906, 0.0, 10.6592", "-0.0967387, 3.46987, 0.0, 10.6618", "-0.115488, 4.60067, 0.0, 10.6509", "-0.134237, 5.73147, 0.0, 10.6539", "-0.152986, 6.86228, 0.0, 10.5333", "-0.171736, 7.99308, 0.0, 10.0953", "-0.190485, 9.12389, 0.0, 9.24504", "-0.209234, 10.2547, 0.0, 8.15868", "-0.227983, 11.3855, 0.0, 6.02195", "-0.246733, 12.5163, 0.0, 3.41269" ]
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-0.0247713, -8.74867, -1.86, 2.48", "-0.0572306, -9.89131, -1.51968, 2.48", "-0.132031, -12.5245, -0.735432, 1.97", "-0.190006, -14.5653, -0.127582, 2.26", "-0.243646, -16.4536, 0.434807, 2.85", "-0.268316, -17.3219, 0.693461, 2.85", "-0.311192, -18.8314, 1.143, 2.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037105820845
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-0.884772, 7.34133, -7.19, 0.8", "-1.40053, 7.56305, -7.6428, 0.8", "-1.87959, 7.77151, -8.13223, 0.66", "-2.56755, 8.13947, -8.99751, 0.66", "-2.8779, 8.36925, -9.49167, 0.66", "-3.11805, 8.64678, -10.0604, 0.66", "-3.26611, 9.15162, -11.0494, 0.66", "-3.03398, 9.63885, -11.867, 0.66", "-2.48177, 10.1853, -12.6862, 0.66", "-1.56974, 10.8021, -13.5808, 0.8", "-0.744427, 11.2487, -14.2575, 0.8", "0.496872, 11.8077, -15.2007, 0.8", "1.61791, 12.2127, -16.0257, 0.8", "2.48132, 12.4429, -16.662, 0.8", "3.21596, 12.5295, -17.2926, 0.8", "3.36566, 12.3382, -17.761, 0.8", "3.27129, 11.7928, -18.5052, 0.8", "3.04848, 10.9202, -19.5134, 0.8", "2.89445, 10.2804, -20.1588, 0.8", "2.62969, 9.16864, -21.1383, 0.8", "2.44232, 8.18374, -21.8509, 0.73", "2.31214, 7.0199, -22.5455, 0.73", "2.26943, 5.63711, -23.146, 0.95", "2.2887, 4.65239, -23.4435, 1.17", "2.33307, 3.91408, -23.5915, 1.17", "2.50287, 2.2107, -23.8392, 0.73", "2.53487, 1.98405, -23.8694, 0.51", "2.8262, 0.376885, -24.0326, 1.02", "3.17851, -1.0839, -24.1826, 0.66", "3.5033, -2.16754, -24.3458, 0.51", "4.00253, -3.53633, -24.6338, 0.51", "4.79306, -5.38307, -25.082, 0.51", "5.48357, -6.87464, -25.4631, 0.66", "6.08659, -8.01539, -25.7795, 0.66", "6.73488, -9.13125, -26.0968, 0.66", "7.33007, -10.1379, -26.3821, 0.66", "8.10801, -11.5136, -26.6475, 1.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037105820845,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "1.84524, 8.13133, 3.38, 0.66", "1.74146, 8.74706, 3.8778, 0.66", "1.69082, 9.48359, 4.43946, 0.58", "1.71984, 10.3828, 5.07446, 0.58", "1.83333, 11.156, 5.63133, 0.58", "2.04348, 11.8835, 6.21676, 0.8", "2.22841, 12.3874, 6.66054, 1.31", "2.43487, 12.8152, 7.0781, 1.31", "2.85673, 13.5619, 7.92125, 0.51", "3.21803, 14.1089, 8.69622, 0.51", "3.63121, 14.72, 9.82626, 0.51", "3.73401, 14.9376, 10.4184, 0.51", "3.58601, 15.0224, 11.2277, 0.51", "3.20772, 14.9195, 11.8684, 0.51", "2.52129, 14.6542, 12.523, 0.51", "1.96816, 14.4513, 12.9055, 0.51", "1.46349, 14.2691, 13.2069, 0.51", "0.151758, 13.7882, 13.9114, 0.51", "-0.770844, 13.4334, 14.3671, 0.44", "-1.63986, 13.1243, 14.7357, 0.44", "-2.11427, 12.9815, 14.9043, 0.44", "-3.08659, 12.6897, 15.2057, 0.58", "-3.84446, 12.4359, 15.3732, 0.58", "-2.76682, 12.941, 15.3666, 1.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037105820845
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.78477, 10.7814, -1.4, 3.72", "-2.16863, 11.3155, -1.5448, 3.72", "-3.12534, 12.529, -1.73301, 3.36", "-3.81497, 13.3579, -1.80217, 2.7", "-4.64982, 14.2879, -1.80134, 1.31", "-5.45345, 15.1091, -1.75958, 0.73", "-6.30809, 15.9123, -1.69492, 0.73", "-7.1749, 16.61, -1.58055, 0.95", "-8.07019, 17.2229, -1.41292, 0.88", "-9.15182, 17.8853, -1.18523, 0.88", "-10.1614, 18.4783, -0.982003, 0.88", "-10.7781, 18.8533, -0.87186, 0.88", "-11.7848, 19.5373, -0.715947, 0.73", "-12.2384, 19.9125, -0.655182, 0.73", "-12.9093, 20.5821, -0.566454, 0.95", "-13.4397, 21.2085, -0.506972, 0.95", "-14.0001, 21.9552, -0.436919, 1.09", "-14.6443, 22.8565, -0.357928, 1.09", "-15.342, 23.7863, -0.281443, 0.73", "-15.843, 24.3827, -0.243478, 0.73", "-16.4968, 25.0651, -0.216744, 0.88", "-16.969, 25.4911, -0.207165, 0.8", "-17.7821, 26.1472, -0.205421, 0.88", "-18.5515, 26.7101, -0.217302, 1.09", "-19.6721, 27.4794, -0.185206, 0.73", "-20.8879, 28.2766, -0.0959719, 0.73", "-21.6252, 28.7064, -0.0120151, 0.73", "-22.1497, 28.969, 0.0659223, 0.73", "-22.7833, 29.2076, 0.179339, 0.73", "-23.8272, 29.4545, 0.386791, 0.73", "-24.2875, 29.4818, 0.486016, 0.73", "-25.6112, 29.413, 0.79603, 1.31", "-25.9053, 29.3822, 0.846317, 1.31", "-26.9925, 29.2567, 0.960234, 1.02", "-27.8168, 29.1649, 0.979067, 0.66", "-28.8053, 29.0867, 0.880162, 0.66", "-29.6654, 29.0562, 0.765622, 0.66", "-31.0075, 29.104, 0.514049, 0.66", "-31.9441, 29.1959, 0.288721, 0.51", "-32.6063, 29.3018, 0.100781, 0.51", "-33.7098, 29.5434, -0.310359, 0.88", "-34.6194, 29.7901, -0.697104, 0.88", "-35.5497, 30.0949, -1.08769, 0.88", "-36.5715, 30.4823, -1.44117, 0.88", "-37.3436, 30.8164, -1.67349, 0.66", "-38.7856, 31.5095, -2.02072, 0.51", "-39.6474, 31.9352, -2.20883, 0.51", "-40.8556, 32.5513, -2.48667, 0.58", "-41.8901, 33.1023, -2.66824, 0.73", "-43.1008, 33.8055, -2.81849, 0.88", "-43.8084, 34.2555, -2.86122, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037105820845,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.09477, 10.2313, -0.52, 3.87", "-2.71443, 11.5719, -0.496384, 3.87", "-3.30138, 12.9431, -0.441272, 2.92", "-3.79624, 14.2094, -0.344552, 1.39", "-4.31808, 15.6112, -0.146998, 1.09", "-4.87217, 17.1635, 0.133436, 1.09", "-5.47553, 18.8615, 0.476816, 1.09", "-5.79043, 19.7663, 0.706706, 0.88", "-6.12691, 20.7316, 1.00365, 0.88", "-6.58821, 21.9303, 1.44966, 0.88", "-6.88542, 22.5748, 1.72986, 0.88", "-7.35962, 23.3589, 2.1409, 0.8", "-7.64704, 23.719, 2.34382, 0.8", "-8.09115, 24.2085, 2.64375, 0.73", "-8.62156, 24.7721, 2.99927, 0.73", "-9.19859, 25.3516, 3.35179, 0.73", "-9.53423, 25.6742, 3.57828, 0.73", "-10.1569, 26.2994, 4.08246, 0.73", "-10.5823, 26.7927, 4.49523, 1.02", "-11.0011, 27.4459, 5.06791, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037105820845
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.246733, 12.5163, 0.0, 0.365925", "-0.495406, 27.5142, 0.0, 0.365925", "-0.744079, 42.5122, 0.0, 0.365925" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.311192, -18.8314, 1.143, 1.82", "-1.35573, -19.8928, 1.74484, 1.82", "-2.52352, -21.0796, 2.4177, 1.97" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-0.311192, -18.8314, 1.143, 0.88", "0.968159, -20.3692, 0.370207, 0.88", "1.79819, -21.4823, -0.216797, 0.88", "2.38733, -22.3799, -0.724425, 0.88", "2.87124, -23.2307, -1.20935, 1.02", "3.48906, -24.4876, -1.90767, 0.88", "3.69448, -24.9587, -2.16968, 0.88", "3.85917, -25.5301, -2.53683, 0.88", "3.99478, -26.1793, -2.96805, 0.88", "4.11072, -26.6966, -3.30775, 0.66", "4.34625, -27.2817, -3.72934, 0.66", "4.66371, -27.6453, -4.03789, 0.66", "5.07906, -27.9163, -4.3197, 0.66", "5.69448, -28.1955, -4.65177, 1.09", "6.64615, -28.5621, -5.07179, 1.39", "7.91998, -29.0336, -5.56195, 0.88", "8.77019, -29.3724, -5.85752, 0.88", "9.49615, -29.72, -6.10482, 0.88", "10.0884, -30.0807, -6.31161, 0.88", "10.7939, -30.7246, -6.57798, 0.88", "11.2554, -31.4722, -6.80273, 0.8", "11.5194, -32.352, -7.01601, 0.8", "11.6666, -33.3399, -7.25348, 0.95", "11.7251, -33.9561, -7.39834, 0.95", "11.9121, -35.4398, -7.74914, 0.8", "12.129, -36.5835, -8.02551, 0.8", "12.3788, -37.4907, -8.26081, 0.8", "12.7843, -38.5794, -8.55765, 0.8", "13.4382, -40.0345, -8.95259, 0.8", "14.341, -41.7888, -9.45114, 0.66", "15.0581, -42.9836, -9.80709, 0.66", "15.9238, -44.2907, -10.2159, 0.95", "17.0902, -45.9595, -10.7724, 1.02", "17.582, -46.6539, -11.0119, 1.24" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "8.10801, -11.5136, -26.6475, 0.66", "8.19485, -12.351, -26.9185, 0.66", "8.28932, -13.2178, -27.1877, 0.66", "8.34957, -13.9433, -27.3878, 0.66", "8.41805, -14.9792, -27.6164, 0.44", "8.47483, -16.1014, -27.8155, 0.44", "8.49295, -16.924, -27.9615, 0.44", "8.49537, -17.7293, -28.1156, 0.66", "8.45019, -18.8333, -28.3597, 0.66", "8.3735, -19.7524, -28.6126, 0.66", "8.29076, -20.5394, -28.8559, 0.44", "8.19755, -21.3743, -29.1361, 0.15", "8.12818, -22.2311, -29.4368, 0.36", "8.09011, -23.0951, -29.7762, 0.73", "8.09569, -23.7236, -30.0473, 0.73", "8.13456, -24.7234, -30.4605, 0.66", "8.18459, -25.4454, -30.7095, 0.88", "8.26269, -26.341, -30.9701, 0.88", "8.37429, -27.508, -31.288, 0.51", "8.47708, -28.5896, -31.5916, 0.73", "8.55982, -29.8043, -31.9596, 0.95", "8.59522, -31.0143, -32.336, 0.58", "8.58587, -32.3223, -32.733, 0.51", "8.54622, -33.1101, -32.9707, 0.51", "8.49413, -33.8651, -33.1844, 0.51", "8.42468, -34.6646, -33.4132, 0.73", "8.35713, -35.5132, -33.6741, 0.29", "8.30673, -36.2809, -33.8635, 0.29", "8.30711, -36.6734, -33.9135, 0.29", "8.34034, -37.1339, -33.936, 0.29", "8.44562, -37.7587, -33.9411, 0.29", "8.58882, -38.3366, -33.9399, 0.29", "8.9692, -39.5685, -33.9175, 0.8", "9.3016, -40.5475, -33.8765, 0.8", "9.54042, -41.2625, -33.8337, 0.8", "9.75048, -41.9911, -33.7689, 0.8" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "8.10801, -11.5136, -26.6475, 0.44", "9.39477, -11.8727, -26.9936, 0.44", "10.6191, -12.1986, -27.3649, 0.44", "11.8204, -12.4583, -27.7644, 0.44", "12.6545, -12.6049, -28.0395, 0.73", "13.6835, -12.7389, -28.3992, 0.22", "14.5821, -12.8029, -28.7141, 0.66", "15.0211, -12.8035, -28.8989, 0.66", "15.9867, -12.7667, -29.3752, 0.22", "16.7751, -12.7165, -29.7397, 0.22", "17.6287, -12.6486, -30.1224, 0.22", "18.4526, -12.583, -30.4576, 0.8", "19.4692, -12.517, -30.8404, 0.36", "20.7632, -12.4556, -31.308, 0.36", "21.8282, -12.4096, -31.6846, 0.51", "22.3875, -12.3821, -31.8704, 0.51", "23.6246, -12.3456, -32.2281, 0.22", "24.3191, -12.3418, -32.4214, 0.22", "24.9059, -12.3483, -32.5546, 0.22", "25.4656, -12.3679, -32.683, 0.22", "26.4439, -12.4262, -32.9768, 0.22", "26.9384, -12.4739, -33.1411, 0.95", "27.8339, -12.607, -33.4491, 0.95", "29.3363, -12.8954, -33.9695, 0.8", "30.8557, -13.2245, -34.4807, 0.66", "32.1952, -13.5382, -34.9428, 0.29", "32.7517, -13.6805, -35.1444, 0.29", "33.4686, -13.8703, -35.4017, 0.29", "34.1068, -14.0759, -35.6146, 0.22", "34.557, -14.2583, -35.7701, 0.22", "35.1603, -14.5587, -35.9657, 0.22", "35.7757, -14.8981, -36.158, 0.22", "36.1755, -15.1208, -36.2901, 0.8", "37.0553, -15.6126, -36.5653, 0.8", "37.881, -16.0785, -36.8198, 0.15", "38.4908, -16.4128, -37.0259, 0.22", "39.0453, -16.7111, -37.2398, 0.22", "39.6811, -17.0644, -37.5386, 0.44", "40.6454, -17.6077, -38.0395, 0.15", "41.3681, -18.0156, -38.5178, 0.51", "42.0453, -18.4228, -39.0474, 0.22", "42.7154, -18.8312, -39.6234, 0.22", "43.6045, -19.3354, -40.4703, 0.44", "43.888, -19.4841, -40.7574, 0.44", "45.0441, -20.0476, -42.0661, 0.44", "45.6414, -20.3223, -42.7638, 0.66", "46.1205, -20.5338, -43.3179, 0.66", "47.1725, -20.952, -44.534, 0.36", "47.9377, -21.23, -45.4446, 0.66", "49.3385, -21.7598, -47.1219, 0.07", "49.3843, -21.7773, -47.173, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.76682, 12.941, 15.3666, 0.66", "-2.31502, 13.2563, 16.1947, 0.66", "-2.07802, 13.4215, 16.6421, 0.44", "-1.36067, 13.938, 18.0772, 0.29", "-0.831039, 14.3822, 19.2257, 0.29", "-0.50429, 14.7379, 20.0021, 0.44", "-0.383814, 14.9228, 20.3478, 0.07", "-0.241325, 15.3861, 21.1866, 0.36", "-0.2827, 15.5429, 21.3908, 0.07", "-0.585665, 15.9557, 21.7478, 0.29", "-1.15542, 16.542, 22.1836, 0.44", "-1.72511, 17.0448, 22.5412, 0.22", "-2.4729, 17.5818, 22.9501, 0.88", "-3.35089, 18.0912, 23.3802, 0.22", "-3.97837, 18.3797, 23.6952, 0.22", "-4.36271, 18.4743, 23.9007, 0.22", "-4.62188, 18.4655, 24.0437, 0.22", "-5.06315, 18.3465, 24.2845, 0.22", "-5.4636, 18.0587, 24.5199, 0.22", "-5.69959, 17.7252, 24.6834, 0.22", "-5.94728, 17.2117, 24.8606, 0.22", "-6.11436, 16.7111, 25.0303, 0.22" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-2.76682, 12.941, 15.3666, 0.15", "-2.1045, 13.3835, 15.5765, 0.15", "-1.13491, 14.001, 15.9464, 0.15", "-0.378807, 14.434, 16.2317, 0.07", "-0.103018, 14.5715, 16.3395, 0.07", "0.742554, 14.9418, 16.6593, 0.36", "1.68379, 15.3244, 17.023, 0.07", "2.29278, 15.5403, 17.2717, 0.36", "3.08639, 15.7397, 17.5778, 0.36", "4.10378, 15.8967, 17.951, 0.15", "4.78715, 15.9571, 18.2006, 0.07", "5.40344, 15.9668, 18.4366, 0.07", "5.90505, 15.9515, 18.6654, 0.07", "6.97186, 15.9394, 19.2272, 0.58", "7.373, 15.9517, 19.4618, 0.58", "8.19344, 16.041, 19.9705, 0.29", "9.11247, 16.1574, 20.5991, 0.58", "10.1999, 16.3183, 21.3977, 0.22", "10.7283, 16.4426, 21.8568, 0.22", "11.3186, 16.7111, 22.5389, 0.07", "11.8766, 17.0982, 23.2919, 0.07", "19.956, 17.5296, 29.1689, 0.07", "27.7539, 18.1096, 35.4023, 0.07", "35.8793, 19.2486, 41.119, 0.07", "44.8014, 19.6733, 45.6152, 0.07", "54.1858, 20.9669, 48.8183, 0.07", "63.8293, 22.5307, 50.9531, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-43.8084, 34.2555, -2.86122, 0.44", "-44.5346, 33.7906, -1.96791, 0.44", "-44.9652, 33.4791, -1.42071, 0.44", "-46.0186, 32.7216, -0.12957, 0.58", "-46.3139, 32.5224, 0.209786, 0.58", "-46.7771, 32.2347, 0.708892, 0.58", "-47.6441, 31.7181, 1.59926, 0.58", "-48.36, 31.2964, 2.31737, 0.8", "-48.9854, 30.9655, 2.84954, 0.51", "-49.7127, 30.6565, 3.32162, 0.73", "-50.5351, 30.3941, 3.7306, 0.51", "-51.2126, 30.2493, 3.9465, 0.95", "-51.7167, 30.1817, 4.02636, 0.95", "-52.9164, 30.0783, 4.08153, 0.66", "-53.8864, 30.0072, 4.05615, 0.44", "-55.0888, 29.9095, 3.97073, 0.44", "-56.3215, 29.7777, 3.89582, 0.73", "-57.1928, 29.6353, 3.85892, 0.58", "-58.8098, 29.2213, 3.83761, 0.58", "-59.8478, 28.8181, 3.87145, 0.58", "-60.9919, 28.1758, 3.96885, 0.51", "-62.0121, 27.4373, 4.12516, 0.58", "-62.8708, 26.6975, 4.30326, 0.58", "-63.592, 26.0205, 4.4677, 0.73", "-64.4157, 25.2197, 4.65212, 0.73", "-65.2447, 24.5065, 4.74917, 0.22", "-65.6369, 24.298, 4.71407, 0.22", "-66.3659, 24.1875, 4.4984, 0.22", "-67.313, 24.2673, 4.15983, 0.44", "-68.2322, 24.4496, 3.85307, 0.66", "-69.3287, 24.7344, 3.51751, 0.66", "-70.4527, 25.0356, 3.25861, 0.66", "-71.0708, 25.1586, 3.17262, 0.66", "-72.1069, 25.2514, 3.13899, 0.36", "-73.2461, 25.2145, 3.25415, 0.36", "-74.0948, 25.0758, 3.44358, 0.73", "-75.105, 24.7745, 3.7602, 0.73", "-76.3613, 24.2642, 4.21142, 0.88", "-77.5029, 23.7206, 4.64696, 0.88", "-78.4954, 23.1873, 5.0161, 0.73", "-79.6441, 22.5233, 5.40058, 0.51", "-80.9336, 21.7462, 5.80729, 0.44", "-81.7592, 21.2406, 6.03813, 0.44", "-82.4839, 20.795, 6.2342, 0.44", "-83.442, 20.2243, 6.47289, 0.44", "-84.3702, 19.7038, 6.67383, 0.44", "-84.8405, 19.4669, 6.7466, 0.66", "-85.285, 19.2624, 6.79762, 0.8", "-85.439, 19.1914, 6.80876, 1.02" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-43.8084, 34.2555, -2.86122, 0.36", "-43.9177, 34.956, -2.60513, 0.36", "-43.9678, 35.6783, -2.35066, 0.36", "-43.9774, 36.5062, -2.08111, 0.36", "-43.9487, 37.4311, -1.8113, 0.22", "-43.9021, 38.6071, -1.50368, 0.22", "-43.8913, 39.3414, -1.32819, 0.22", "-43.9223, 40.14, -1.20287, 0.29", "-43.9983, 40.8089, -1.15817, 0.29", "-44.1965, 41.618, -1.19165, 0.07", "-44.4967, 42.2438, -1.31654, 0.07", "-44.9693, 42.742, -1.55836, 0.36", "-46.2117, 43.4398, -2.20644, 0.15", "-46.8454, 43.5985, -2.53225, 0.15", "-47.6227, 43.6218, -2.91009, 0.44", "-48.0135, 43.5801, -3.08567, 0.44", "-48.958, 43.4098, -3.50265, 0.44", "-49.4948, 43.3018, -3.72764, 0.15", "-50.2221, 43.186, -3.98149, 0.29", "-50.9971, 43.1571, -4.22539, 0.07", "-51.6537, 43.2724, -4.3884, 0.15", "-52.2611, 43.5536, -4.50039, 0.15", "-52.7931, 43.9882, -4.57645, 0.66", "-53.3515, 44.6113, -4.65409, 1.02", "-53.563, 44.9006, -4.68833, 1.02", "-54.0827, 45.6491, -4.78889, 0.44", "-54.6088, 46.4448, -4.89072, 0.22", "-55.1194, 47.2271, -4.9812, 0.07", "-55.6605, 48.0729, -5.09323, 0.07", "-56.0975, 48.7828, -5.20038, 0.07", "-56.8956, 50.063, -5.41911, 0.8" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-11.0011, 27.4459, 5.06791, 0.51", "-12.2194, 27.8435, 5.70086, 0.51", "-12.8428, 28.0177, 5.96459, 0.51", "-13.7107, 28.2027, 6.25461, 0.51", "-14.7148, 28.3622, 6.52177, 0.15", "-15.0313, 28.403, 6.59104, 0.15", "-15.3933, 28.4389, 6.6582, 0.15", "-16.27, 28.5035, 6.74784, 0.22", "-17.1505, 28.5331, 6.805, 0.44", "-17.9535, 28.5263, 6.805, 0.73", "-18.6157, 28.4804, 6.805, 0.88", "-19.2197, 28.4275, 6.805, 0.58" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.0011, 27.4459, 5.06791, 0.8", "-11.344, 28.5844, 5.49066, 0.8", "-11.6463, 29.3465, 5.82274, 0.8", "-11.9019, 29.9939, 6.11552, 0.66", "-12.0426, 30.4261, 6.32807, 0.66", "-12.1445, 30.8235, 6.5177, 0.66", "-12.3074, 31.6073, 6.86238, 0.66", "-12.3995, 32.1669, 7.09603, 0.66", "-12.4598, 32.6017, 7.26654, 0.88", "-12.5373, 33.4693, 7.61271, 0.51", "-12.5579, 34.3028, 7.92402, 0.29", "-12.5209, 35.0784, 8.16828, 0.29", "-12.4074, 36.0275, 8.38929, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.744079, 42.5122, 0.0, 0.365925", "-0.992752, 57.5101, 0.0, 0.365925", "-1.24142, 72.5081, 0.0, 0.365925" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-2.52352, -21.0796, 2.4177, 1.09", "-1.86453, -22.4774, 2.20959, 1.09", "-1.08016, -24.15, 1.99188, 0.95", "-0.64149, -25.0903, 1.88091, 1.09", "-0.159577, -26.1742, 1.74349, 1.09", "0.26967, -27.2304, 1.60238, 1.09", "0.661157, -28.3319, 1.44484, 1.02", "0.99633, -29.6234, 1.25907, 0.95", "1.07499, -30.1765, 1.17696, 0.95", "1.11423, -31.0949, 1.01606, 1.02", "1.08754, -32.075, 0.830202, 1.02", "1.02584, -33.19, 0.611209, 1.31", "0.944853, -34.5546, 0.351692, 0.95", "0.916571, -35.6465, 0.192102, 0.95", "0.958583, -36.5522, 0.107873, 0.8", "1.1, -37.5748, 0.0971793, 0.8", "1.39531, -38.8876, 0.179343, 0.8", "1.66993, -39.8004, 0.273589, 0.8", "2.12492, -41.0754, 0.433364, 0.8", "2.43821, -41.9138, 0.561536, 1.02", "3.02416, -43.5863, 0.827074, 0.8", "3.42969, -44.7575, 1.01643, 0.8", "3.88621, -46.1704, 1.23851, 1.02", "4.27125, -47.4645, 1.39685, 1.17", "4.47457, -48.2491, 1.45722, 1.39", "4.80847, -49.6631, 1.53878, 1.46" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-2.52352, -21.0796, 2.4177, 0.95", "-3.73584, -21.7346, 2.61722, 0.95", "-5.10055, -22.5502, 2.93413, 0.8", "-5.95909, -23.0795, 3.19779, 0.8", "-6.63509, -23.4895, 3.46355, 0.8", "-7.35919, -23.8939, 3.77584, 0.73", "-8.07771, -24.2267, 4.12607, 0.73", "-8.74782, -24.5553, 4.53307, 0.73", "-9.2976, -24.802, 4.94759, 0.73", "-9.92331, -25.0054, 5.48592, 0.73", "-10.4784, -25.0844, 6.04133, 0.95", "-11.4609, -24.9748, 7.12346, 1.24" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "17.582, -46.6539, -11.0119, 0.36", "18.4443, -46.7201, -11.1892, 0.36", "19.3716, -46.8917, -11.3566, 0.22", "20.1979, -47.1264, -11.544, 0.22", "20.8738, -47.3472, -11.7234, 0.22", "21.328, -47.4911, -11.8456, 0.22", "21.6755, -47.5872, -11.9373, 0.22", "22.557, -47.7909, -12.1945, 0.51", "23.5524, -47.8969, -12.4946, 0.51", "24.2507, -47.8926, -12.7052, 0.36", "25.0943, -47.8354, -12.9916, 0.15", "25.6878, -47.7819, -13.1939, 0.15", "26.7317, -47.6601, -13.4519, 0.15", "27.8132, -47.4855, -13.6455, 0.36", "28.4673, -47.3694, -13.7326, 0.29", "29.3689, -47.2446, -13.8337, 0.29", "30.4054, -47.1662, -13.9581, 0.44", "31.9846, -47.0976, -14.207, 0.22", "32.8765, -47.0867, -14.3587, 0.07", "33.8014, -47.0835, -14.5326, 0.44", "34.6172, -47.0656, -14.6967, 0.58", "35.8422, -47.0375, -14.9176, 0.22", "37.1322, -47.028, -15.1862, 1.02", "38.1489, -47.0347, -15.4206, 0.15", "38.6069, -47.0414, -15.5, 0.15", "39.3225, -47.0401, -15.5876, 0.44", "40.5325, -47.0076, -15.7457, 0.22", "41.656, -46.9943, -15.8957, 0.95", "42.3748, -46.9983, -16.0135, 0.66", "43.2412, -46.986, -16.228, 0.51", "43.8777, -46.9571, -16.4258, 0.73", "45.1014, -46.8348, -16.8781, 0.73", "46.1194, -46.6591, -17.3072, 0.44", "46.8553, -46.4888, -17.6003, 0.15", "47.6633, -46.252, -17.8953, 0.15", "48.1041, -46.1055, -17.991, 0.15", "48.9012, -45.8396, -18.0454, 0.15", "49.7994, -45.5505, -17.9718, 0.73", "50.6639, -45.2812, -17.8266, 0.95", "51.7594, -44.972, -17.5845, 0.58", "53.5586, -44.4939, -17.0733, 0.29", "54.1747, -44.3517, -16.8847, 0.15", "54.8595, -44.2141, -16.658, 0.15", "55.6994, -44.0668, -16.3818, 0.22", "56.7525, -43.8817, -16.0542, 0.36", "58.5247, -43.5555, -15.5646, 0.95", "59.6152, -43.3363, -15.3265, 0.22", "60.3305, -43.1906, -15.1908, 0.58", "61.7499, -42.9203, -14.9655, 0.07", "62.6044, -42.7678, -14.8667, 0.36", "63.3236, -42.6415, -14.799, 0.51", "64.2591, -42.4684, -14.751, 0.15", "65.025, -42.2896, -14.7138, 0.15", "65.7196, -42.0873, -14.6578, 0.88", "66.7828, -41.6639, -14.4889, 0.95", "67.9271, -41.0882, -14.213, 0.15", "68.332, -40.8111, -14.0738, 0.15", "68.655, -40.5076, -13.8991, 0.15", "69.0729, -39.9944, -13.5784, 0.15", "69.516, -39.3316, -13.1256, 0.51", "69.6582, -39.0476, -12.9358, 0.51", "69.9417, -38.2467, -12.4674, 0.15", "70.1365, -37.577, -12.0726, 0.15", "70.2529, -37.1436, -11.8125, 0.15", "70.523, -36.2663, -11.3098, 0.95" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "17.582, -46.6539, -11.0119, 0.58", "17.5409, -47.9285, -10.8631, 0.58", "17.6669, -48.6718, -10.8845, 0.58", "17.881, -49.2987, -10.9762, 0.58", "18.0379, -49.6263, -11.0471, 0.58", "18.1832, -49.8865, -11.1254, 0.58", "18.7137, -50.7943, -11.4471, 0.58", "19.3006, -51.6395, -11.8378, 0.58", "19.6773, -52.1788, -12.1107, 0.73", "20.0224, -52.718, -12.3682, 0.73", "20.4778, -53.5737, -12.7173, 0.8", "20.8016, -54.4173, -12.9951, 1.02", "20.8644, -54.703, -13.0613, 1.09", "20.9359, -55.4334, -13.1794, 0.73", "20.9663, -56.5364, -13.3189, 0.58", "20.9696, -57.5117, -13.4151, 0.88", "20.9998, -58.3434, -13.47, 0.58", "21.1309, -59.1516, -13.5169, 0.58", "21.323, -59.713, -13.5466, 0.58", "21.6334, -60.2696, -13.5623, 0.58", "22.1242, -60.8853, -13.5619, 0.58", "22.8568, -61.6208, -13.5415, 0.58", "24.131, -62.7334, -13.4338, 0.51", "24.9532, -63.4125, -13.3247, 0.58", "25.4927, -63.8551, -13.2189, 0.58", "26.3046, -64.5434, -12.9847, 0.8", "26.8378, -65.0166, -12.8019, 0.8", "27.8979, -66.0388, -12.4135, 0.66", "28.6724, -66.8734, -12.1305, 0.58", "29.3004, -67.6441, -11.9192, 0.95", "30.2032, -68.9175, -11.6793, 0.73", "30.6833, -69.7289, -11.5966, 0.8", "31.1269, -70.7244, -11.5938, 0.8", "31.3671, -71.5888, -11.6914, 0.51", "31.4916, -72.5247, -11.8717, 0.51", "31.5246, -73.536, -12.1392, 0.51", "31.492, -74.3675, -12.4017, 0.51", "31.4274, -75.346, -12.7026, 0.51", "31.3842, -76.3448, -13.0002, 0.66", "31.4026, -77.7645, -13.4074, 0.73", "31.508, -78.9794, -13.73, 0.73", "31.6605, -79.9773, -13.9495, 0.73", "31.8362, -80.8603, -14.1246, 0.88", "32.1109, -82.0488, -14.3639, 0.95", "32.3363, -82.9445, -14.5396, 0.95", "32.6005, -83.9369, -14.7112, 0.95", "33.0232, -85.4979, -14.9263, 0.66", "33.3307, -86.6583, -15.0586, 0.66", "33.6013, -87.8138, -15.1924, 1.09" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "9.75048, -41.9911, -33.7689, 0.07", "9.84564, -43.0564, -32.9803, 0.07", "9.88356, -43.9029, -32.3743, 0.07", "9.87401, -45.034, -31.6037, 0.51", "9.83729, -45.7676, -31.1394, 0.8", "9.79243, -46.8873, -30.4899, 0.07", "9.79524, -47.3394, -30.2329, 0.15", "9.8472, -48.0398, -29.8393, 0.15", "10.0139, -48.9302, -29.3583, 0.29", "10.2119, -49.5083, -29.032, 0.07", "10.5596, -50.2497, -28.5702, 0.07", "11.0634, -51.0967, -27.9575, 0.8", "11.4307, -51.6382, -27.5332, 0.51", "12.4217, -52.9324, -26.4958, 0.22", "13.3209, -54.0193, -25.5976, 0.44", "13.8422, -54.647, -25.0713, 0.44", "14.5701, -55.5676, -24.3207, 0.95", "15.1898, -56.4066, -23.7118, 0.15", "15.6816, -57.1077, -23.2269, 0.07", "15.9895, -57.5873, -22.9466, 0.29", "16.6171, -58.6754, -22.4018, 0.66", "16.8542, -59.1489, -22.2059, 0.66", "17.2586, -60.1396, -21.8423, 0.07", "17.6832, -61.477, -21.339, 0.07", "17.8137, -62.1539, -21.0916, 0.58", "17.8548, -62.7135, -20.9088, 0.58", "17.7887, -63.7802, -20.6011, 0.36", "17.6628, -64.5331, -20.4034, 0.07", "17.4716, -65.2738, -20.2237, 0.07", "17.2272, -66.0101, -20.0883, 0.07", "16.9577, -66.7055, -19.9385, 0.07", "16.6979, -67.2741, -19.8105, 0.66", "16.3069, -67.9677, -19.6612, 0.8" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "9.75048, -41.9911, -33.7689, 0.29", "10.5829, -43.0218, -34.3866, 0.29", "11.017, -43.4897, -34.6472, 0.29", "11.5796, -43.979, -34.9962, 0.51", "12.3385, -44.6168, -35.5254, 0.44", "12.7764, -45.0046, -35.8937, 0.73", "13.2316, -45.4344, -36.3129, 0.29", "13.8692, -46.0611, -36.9277, 0.29", "14.9038, -47.0838, -37.9755, 0.8", "15.6442, -47.8177, -38.7896, 0.51", "16.2563, -48.484, -39.5269, 0.29", "16.543, -48.8395, -39.9258, 0.22", "16.8128, -49.2062, -40.3614, 0.22", "17.2105, -49.7718, -41.0993, 0.22", "17.5184, -50.1945, -41.7123, 0.22", "17.8571, -50.565, -42.3372, 0.36", "18.2923, -50.9851, -43.1051, 0.22", "18.8073, -51.4465, -44.0861, 0.73", "19.3004, -51.8699, -45.1267, 0.07", "19.8206, -52.2662, -46.2974, 0.51", "20.051, -52.4049, -46.7834, 0.8" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "49.3843, -21.7773, -47.173, 0.22", "50.0659, -22.1077, -48.273, 0.22", "50.4036, -22.4251, -49.0133, 0.22", "50.6649, -22.7395, -49.8502, 0.22", "50.7724, -22.8144, -50.3017, 0.22", "51.0054, -22.8619, -51.3026, 0.51", "51.1045, -22.8732, -51.6993, 0.15", "51.3798, -22.9736, -52.7954, 0.07", "51.5347, -23.0746, -53.4724, 0.07", "51.8229, -23.2955, -54.8578, 0.29", "52.0586, -23.4209, -55.8165, 0.15", "52.1806, -23.4604, -56.1657, 0.44", "52.5901, -23.6281, -56.9637, 0.44", "53.064, -23.9109, -57.6089, 0.07", "53.8215, -24.4452, -58.617, 0.07", "54.2415, -24.7941, -59.174, 0.51", "54.6392, -25.1761, -59.8645, 0.66", "55.1431, -25.6856, -60.9075, 0.07", "55.5444, -26.0835, -61.796, 0.44", "56.47, -26.9483, -63.8914, 0.07", "56.6632, -27.1273, -64.3398, 0.29", "57.7337, -28.0786, -66.7833, 0.07", "58.1748, -28.4422, -67.7259, 0.22", "58.5845, -28.7437, -68.5017, 0.07", "59.0877, -29.0693, -69.3554, 0.36", "59.7984, -29.4893, -70.3906, 0.07", "60.3862, -29.7925, -71.1316, 0.44", "61.6592, -30.3701, -72.4979, 0.07", "62.6398, -30.7971, -73.4972, 0.36", "63.7549, -31.2544, -74.4797, 0.07", "64.8973, -31.6579, -75.3222, 0.07", "65.7918, -31.8802, -75.8521, 0.07", "66.9081, -32.0107, -76.3827, 0.07", "67.4684, -31.9839, -76.5505, 0.07", "69.7363, -31.5332, -76.9249, 0.44", "70.922, -31.1385, -77.0987, 0.07", "71.8979, -30.729, -77.2065, 0.07", "72.6918, -30.3279, -77.3033, 0.07", "73.3194, -29.9623, -77.385, 0.07", "74.2974, -29.3062, -77.6358, 0.58", "75.6504, -28.23, -78.3528, 0.22" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "49.3843, -21.7773, -47.173, 0.51", "49.7886, -21.2004, -47.3219, 0.51", "50.4252, -20.2741, -47.5772, 0.51", "51.3438, -18.9678, -47.9275, 0.15", "52.0997, -17.9102, -48.1997, 0.07", "52.948, -16.7617, -48.481, 0.51", "53.2391, -16.3917, -48.5531, 0.51", "53.9004, -15.5803, -48.6556, 0.15", "54.7056, -14.7064, -48.6846, 0.15", "55.1364, -14.3146, -48.6674, 0.51", "55.77, -13.8519, -48.6435, 0.51", "56.8946, -13.1559, -48.6243, 0.15", "57.5268, -12.8017, -48.6434, 0.15", "58.2922, -12.4305, -48.6678, 0.44", "59.1206, -12.0942, -48.7301, 0.73", "60.5122, -11.6479, -48.9057, 0.07", "61.3232, -11.4679, -49.0454, 0.07", "62.7021, -11.2766, -49.3559, 0.73", "63.5854, -11.2278, -49.5637, 0.07", "64.4084, -11.2424, -49.7673, 0.07", "65.336, -11.3035, -49.9889, 0.66", "66.5862, -11.4104, -50.2197, 0.07", "67.8902, -11.5087, -50.387, 0.58", "69.2546, -11.5805, -50.4648, 0.07", "70.8916, -11.5851, -50.4392, 0.36", "71.9844, -11.5359, -50.3212, 0.07", "73.3667, -11.417, -49.9799, 0.29", "74.2456, -11.321, -49.5967, 0.07", "75.1182, -11.2278, -48.9957, 0.07", "75.9235, -11.139, -48.3403, 0.58", "76.2677, -11.1047, -48.0566, 0.58", "77.4363, -11.0241, -47.2163, 0.07", "78.411, -10.9956, -46.6902, 0.44", "79.7358, -11.0238, -46.2286, 0.07", "81.3919, -11.0852, -45.8314, 0.22", "82.947, -11.1677, -45.6137, 0.07", "83.8246, -11.209, -45.5715, 0.07", "84.5652, -11.2397, -45.6495, 0.07", "85.7861, -11.2975, -45.9112, 0.36" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-6.11436, 16.7111, 25.0303, 0.07", "-6.13217, 17.2798, 25.4876, 0.07", "-6.12883, 17.7395, 25.8641, 0.15", "-6.05464, 18.1625, 26.2241, 0.15", "-5.93068, 18.5175, 26.5551, 0.15", "-5.59328, 19.2369, 27.375, 0.15", "-5.33865, 19.7754, 28.0768, 0.15", "-5.26282, 20.0266, 28.4744, 0.15", "-5.25522, 20.3892, 29.3601, 0.95", "-5.2558, 20.528, 30.0005, 0.15", "-5.3724, 20.4468, 30.8864, 0.15", "-6.01976, 20.1637, 31.0864, 0.15", "-6.59994, 19.9028, 31.2873, 0.15", "-7.68893, 19.3743, 31.7187, 0.15", "-9.14128, 23.1026, 40.8833, 0.15", "-10.4651, 27.4634, 49.7845, 0.15", "-12.2464, 29.6366, 59.3815, 0.15", "-12.8291, 32.7231, 68.8754, 0.15", "-13.5397, 35.453, 78.4693, 0.15" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-6.11436, 16.7111, 25.0303, 0.15", "-5.77536, 16.2647, 25.3795, 0.15", "-5.43132, 15.9787, 25.6597, 0.15", "-4.87686, 15.7715, 26.0166, 0.15", "-4.32367, 15.7516, 26.3174, 0.15", "-3.93452, 15.8249, 26.5092, 0.15", "-3.47144, 15.983, 26.7148, 0.15", "-3.01267, 16.1922, 26.8682, 0.15", "-2.22799, 16.6369, 27.0974, 0.07", "-1.91728, 16.857, 27.1816, 0.07", "-1.62772, 17.0944, 27.2436, 0.07", "-1.27864, 17.4111, 27.3126, 0.07", "-0.644748, 18.0159, 27.3953, 0.07", "7.53282, 20.4569, 32.6077, 0.07", "14.9455, 24.278, 38.126, 0.07", "22.0021, 28.4618, 43.8444, 0.07", "29.8236, 32.7133, 48.3995, 0.07", "37.41, 37.5514, 52.763, 0.07", "44.845, 42.3997, 57.3689, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "63.8293, 22.5307, 50.9531, 0.22", "72.4867, 23.5679, 55.8494, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "63.8293, 22.5307, 50.9531, 0.51", "72.6854, 24.0809, 55.331, 0.22", "81.4028, 24.0683, 60.2307, 0.22", "89.6697, 24.1735, 65.8562, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-85.439, 19.1914, 6.80876, 0.8", "-86.2085, 19.1303, 7.19077, 0.8", "-87.1409, 18.9848, 7.63596, 0.8", "-88.273, 18.7024, 8.16575, 0.66", "-89.1197, 18.3976, 8.53009, 0.66", "-90.087, 17.8736, 8.90723, 0.51", "-91.1696, 17.1289, 9.29282, 0.29", "-91.5277, 16.7644, 9.42167, 0.29", "-92.0071, 16.1075, 9.52811, 0.51", "-92.6192, 15.14, 9.52241, 0.88", "-93.3587, 13.9282, 9.37783, 0.51", "-93.5015, 13.715, 9.33114, 0.51", "-93.9643, 13.0318, 9.14145, 0.22", "-94.8147, 12.0328, 8.81543, 0.22", "-95.5573, 11.4894, 8.57942, 0.22", "-96.0296, 11.3191, 8.4653, 0.73", "-96.7959, 11.2315, 8.25309, 0.88" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-85.439, 19.1914, 6.80876, 0.36", "-85.1756, 18.27, 6.96014, 0.36", "-84.9228, 17.5515, 7.06398, 0.36", "-84.646, 16.889, 7.14807, 0.58", "-84.2692, 16.0776, 7.24235, 0.58", "-83.8629, 15.26, 7.32657, 0.07", "-83.564, 14.6532, 7.39763, 0.36", "-83.2884, 14.0984, 7.45955, 0.07", "-82.9849, 13.4391, 7.52094, 0.58", "-82.8974, 13.1887, 7.5434, 0.66", "-82.7327, 12.387, 7.62873, 0.22", "-82.6786, 11.4592, 7.73463, 0.07", "-82.7446, 10.6066, 7.8291, 0.66", "-82.8121, 10.215, 7.86816, 0.66", "-83.0297, 9.23931, 7.96562, 0.29", "-83.1502, 8.70458, 8.01495, 0.07", "-83.2514, 8.17728, 8.05627, 0.36", "-83.3365, 7.35871, 8.10329, 0.8", "-83.3566, 6.45947, 8.15476, 0.8", "-83.3407, 5.4602, 8.22265, 0.07", "-83.3198, 4.64198, 8.29874, 0.58", "-83.322, 3.61385, 8.44267, 0.66", "-83.3504, 2.60564, 8.62962, 0.07", "-83.3656, 2.09873, 8.74495, 0.07", "-83.3898, 1.43214, 8.93518, 0.36", "-83.4193, 0.58537, 9.20556, 0.07", "-83.4806, -0.321033, 9.50768, 0.07", "-83.5257, -0.817306, 9.6719, 0.29", "-83.5682, -1.51864, 9.8846, 0.07", "-83.5296, -2.00442, 10.0127, 0.8", "-83.299, -3.03479, 10.2382, 0.58", "-82.9381, -4.02183, 10.4115, 0.07", "-82.8175, -4.28288, 10.449, 0.07", "-82.6203, -4.64701, 10.5003, 0.36", "-82.0341, -5.55043, 10.6136, 0.07", "-81.5279, -6.17719, 10.6811, 0.8", "-80.8277, -6.87399, 10.7582, 0.22", "-80.344, -7.27543, 10.8015, 0.07", "-79.6347, -7.80169, 10.851, 0.44", "-78.57, -8.56338, 10.9085, 0.07", "-78.0275, -8.92997, 10.9205, 0.07", "-77.6469, -9.15085, 10.9205, 0.36", "-77.2471, -9.3511, 10.9205, 0.07", "-76.6, -9.61525, 10.9205, 0.29", "-73.2673, -19.038, 10.5934, 0.29", "-71.8126, -28.8235, 9.135, 0.29", "-70.3165, -38.6137, 7.75172, 0.29" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-56.8956, 50.063, -5.41911, 0.44", "-57.5658, 51.0093, -5.50723, 0.44", "-58.0775, 51.7454, -5.56922, 0.29", "-58.7966, 52.7495, -5.69853, 0.07", "-59.1946, 53.2663, -5.78049, 0.66", "-59.6249, 53.7767, -5.86982, 0.73", "-60.0075, 54.1958, -5.96274, 0.73", "-60.609, 54.8205, -6.19806, 0.07", "-61.0878, 55.294, -6.42877, 0.07", "-61.4123, 55.6255, -6.64914, 0.07", "-61.871, 56.1531, -7.07452, 0.29", "-62.277, 56.7156, -7.61728, 0.07", "-62.5501, 57.2167, -8.10158, 0.07", "-62.696, 57.5465, -8.40565, 0.07", "-63.0255, 58.4026, -9.13566, 0.58", "-63.2614, 59.0289, -9.63643, 0.73", "-63.5499, 59.7868, -10.2206, 0.73", "-63.8305, 60.5084, -10.7283, 0.44", "-64.0224, 60.9641, -11.0217, 0.22", "-64.3279, 61.6531, -11.4448, 0.44", "-64.5482, 62.1152, -11.7416, 0.22", "-64.7671, 62.5765, -12.1172, 0.22", "-64.9654, 62.9439, -12.4756, 0.36", "-65.088, 63.1469, -12.7, 0.36", "-65.4157, 63.5908, -13.2489, 0.07", "-65.9631, 64.1647, -14.0387, 0.8", "-66.4129, 64.5251, -14.5903, 0.8", "-67.3071, 65.0908, -15.4845, 0.07", "-67.8196, 65.3792, -15.9271, 0.58", "-68.564, 65.8077, -16.4999, 0.22", "-68.9749, 66.0696, -16.8051, 0.22", "-69.3123, 66.3633, -17.05, 0.07", "-69.6042, 66.7186, -17.3074, 0.36", "-69.9899, 67.3766, -17.7482, 0.36", "-70.3221, 68.1445, -18.2531, 0.22", "-70.5874, 69.0564, -18.8578, 0.73", "-70.7691, 69.8931, -19.4304, 0.73", "-71.0338, 71.2549, -20.4007, 0.07", "-71.0962, 71.5176, -20.5995, 0.07", "-71.2645, 71.9414, -20.9581, 0.07", "-71.6788, 72.4902, -21.5174, 0.07", "-72.0392, 72.6877, -21.8298, 0.07", "-72.645, 72.8598, -22.2647, 0.51", "-73.3911, 73.0307, -22.699, 0.51", "-74.4, 73.3476, -23.2361, 0.07", "-74.9362, 73.5665, -23.5044, 0.07", "-75.881, 74.0444, -23.9464, 0.07", "-76.3819, 74.3593, -24.188, 0.66", "-76.9186, 74.7923, -24.4875, 1.02", "-77.5733, 75.4704, -24.8922, 0.07", "-78.1396, 76.1852, -25.2588, 0.07", "-78.6337, 76.9061, -25.594, 0.29", "-79.0042, 77.4847, -25.8525, 0.29", "-79.4695, 78.187, -26.256, 0.07", "-79.6998, 78.534, -26.4871, 0.07", "-79.8641, 78.8064, -26.6696, 0.07", "-80.0541, 79.1366, -26.8701, 0.07", "-80.4572, 79.8177, -27.3094, 0.29", "-81.0107, 80.7135, -27.886, 0.07", "-81.3554, 81.2268, -28.1951, 0.66", "-82.0178, 82.1691, -28.7797, 0.88", "-82.85, 83.2905, -29.4719, 0.07", "-83.5799, 84.2557, -30.0787, 0.51", "-83.7873, 84.5428, -30.2548, 0.51", "-84.2143, 85.1543, -30.629, 0.07", "-84.6201, 85.7187, -30.9785, 0.07", "-85.0296, 86.2906, -31.3386, 0.36", "-85.5557, 87.0899, -31.8476, 0.07", "-85.8267, 87.5217, -32.1122, 0.51", "-86.0513, 87.8774, -32.3355, 0.8", "-86.3843, 88.3868, -32.6631, 0.8", "-87.0678, 89.4331, -33.2989, 0.07", "-87.4534, 90.0551, -33.7609, 0.07", "-87.7299, 90.4932, -34.1182, 0.07", "-87.9756, 90.8605, -34.4546, 0.07", "-88.5792, 91.6671, -35.2908, 0.88", "-88.7927, 91.9314, -35.594, 0.88", "-89.9968, 93.2954, -37.2013, 0.22", "-90.2636, 93.5919, -37.5458, 0.22", "-90.7424, 94.154, -38.2165, 0.07", "-91.372, 94.9762, -39.1885, 0.36", "-91.8104, 95.6574, -39.9944, 0.58", "-92.0426, 96.0696, -40.4938, 0.58", "-92.383, 96.8262, -41.3437, 0.07", "-92.5991, 97.4334, -42.0405, 0.29", "-92.6915, 97.906, -42.5703, 0.58", "-92.6924, 98.8165, -43.5869, 0.07", "-92.5874, 99.5469, -44.4569, 0.51", "-92.4792, 99.8981, -44.9255, 0.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-56.8956, 50.063, -5.41911, 0.07", "-57.2078, 48.9189, -5.58024, 0.07", "-57.4403, 47.9841, -5.70773, 0.15", "-57.5872, 47.3322, -5.79246, 0.07", "-57.7626, 46.5075, -5.89231, 0.15", "-57.9947, 45.416, -6.02448, 0.07", "-58.1483, 44.694, -6.1119, 0.07", "-58.344, 43.5204, -6.271, 0.29", "-58.4175, 43.0757, -6.33664, 0.07", "-58.5256, 42.405, -6.43589, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-19.2197, 28.4275, 6.805, 0.22", "-19.9278, 28.7631, 6.74966, 0.22", "-20.7511, 29.3041, 6.66432, 0.22", "-21.4039, 29.8216, 6.59155, 0.22", "-21.8628, 30.1758, 6.55458, 0.22", "-22.2116, 30.4303, 6.53233, 0.22", "-22.7998, 30.8284, 6.50275, 0.22", "-23.3997, 31.1795, 6.47155, 0.8", "-23.9732, 31.4344, 6.42372, 0.8", "-25.1229, 31.7631, 6.359, 0.15", "-25.5459, 31.8289, 6.3185, 0.15", "-26.3762, 31.8904, 6.21185, 0.88", "-27.4559, 31.8941, 6.04824, 0.15", "-28.361, 31.8629, 5.94124, 0.15", "-28.8738, 31.8391, 5.90191, 0.15", "-29.7355, 31.8133, 5.88106, 0.15", "-30.4687, 31.827, 5.91399, 0.15", "-31.0453, 31.8856, 5.93689, 0.95", "-32.3428, 32.1766, 5.99419, 0.07", "-32.7367, 32.3124, 5.98469, 0.07", "-33.1728, 32.495, 5.93534, 0.07", "-33.8295, 32.8074, 5.77232, 0.07", "-34.9327, 33.4187, 5.34452, 0.95", "-35.2526, 33.6099, 5.21159, 0.95", "-36.3664, 34.3078, 4.72836, 0.07", "-36.7525, 34.5451, 4.56112, 0.07", "-37.5806, 35.0257, 4.24004, 0.44", "-38.6208, 35.5756, 3.88609, 0.44", "-39.6941, 36.0843, 3.59899, 0.07", "-40.3164, 36.3387, 3.45302, 0.66", "-41.1529, 36.6311, 3.29661, 0.66", "-42.141, 36.9185, 3.1236, 0.07", "-42.7157, 37.0681, 3.02846, 0.07", "-43.2636, 37.1842, 2.91438, 0.07", "-44.0353, 37.3265, 2.71364, 0.07", "-44.3151, 37.3675, 2.64937, 0.07", "-45.5436, 37.5247, 2.48804, 0.07", "-55.05, 40.6157, 2.76065, 0.07", "-64.4198, 43.9532, 3.79442, 0.07", "-73.381, 48.3573, 4.34262, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-19.2197, 28.4275, 6.805, 0.51", "-19.6867, 27.6709, 7.12644, 0.51", "-20.4665, 26.5315, 7.5947, 0.51", "-21.0263, 25.7989, 7.77332, 0.51", "-21.587, 25.1747, 7.84469, 0.51", "-22.1268, 24.6583, 7.90624, 0.51", "-22.9351, 23.975, 7.99774, 0.29", "-23.53, 23.5622, 8.03287, 0.29", "-25.1427, 22.7442, 8.08529, 0.73", "-26.1192, 22.3829, 8.18192, 0.73", "-27.2507, 22.0688, 8.3956, 0.15", "-27.6289, 21.9881, 8.50436, 0.15", "-27.9375, 21.9317, 8.66468, 0.15", "-28.4884, 21.7635, 9.31946, 0.15", "-28.6093, 21.6495, 9.66694, 0.15", "-28.6027, 21.4575, 10.0447, 0.15", "-28.5093, 21.1723, 10.4527, 0.15", "-28.3999, 20.8586, 10.8544, 0.15", "-28.2738, 20.4242, 11.3402, 0.36", "-28.1401, 19.777, 11.9737, 0.36", "-28.1175, 19.2652, 12.4185, 0.36", "-28.2131, 18.5543, 12.9739, 0.22", "-28.3596, 18.0804, 13.3155, 0.36", "-28.6158, 17.5389, 13.73, 0.8", "-28.8717, 17.1613, 14.0621, 0.8", "-29.3492, 16.6423, 14.612, 0.22", "-29.9069, 16.1658, 15.2141, 0.22", "-30.2002, 15.9592, 15.5097, 0.66", "-31.2737, 15.3286, 16.5248, 0.29", "-31.9024, 15.0141, 17.0994, 0.29", "-32.4676, 14.7621, 17.5897, 0.29", "-32.9591, 14.5458, 17.9949, 0.8", "-33.4729, 14.2896, 18.3878, 0.58", "-34.1263, 13.8209, 18.9219, 0.22", "-34.4133, 13.518, 19.1431, 0.22", "-34.5702, 13.2739, 19.2852, 0.22", "-34.8468, 12.7105, 19.6013, 0.22", "-35.1279, 12.0801, 19.963, 0.73", "-35.3839, 11.2221, 20.4713, 0.29", "-35.6561, 11.419, 20.3417, 0.07", "-36.1295, 11.5459, 20.168, 0.07", "-36.5727, 11.6432, 19.9957, 0.22", "-37.5864, 11.8843, 19.5494, 0.07", "-38.4216, 12.1061, 19.1566, 0.07", "-39.0619, 12.2938, 18.8247, 0.29", "-40.1154, 12.6047, 18.2319, 0.07", "-40.5997, 12.7428, 17.9332, 0.07", "-41.586, 12.9782, 17.2746, 0.66", "-48.8404, 8.47364, 22.4788, 0.66", "-56.0706, 3.57936, 27.3542, 0.66", "-62.9252, -1.21925, 32.8303, 0.66", "-69.9331, -6.7383, 37.3501, 0.66", "-77.8114, -11.5604, 41.1814, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.4074, 36.0275, 8.38929, 0.51", "-12.3612, 36.4154, 8.17385, 0.51", "-12.188, 37.3066, 7.75741, 0.51", "-12.071, 37.7033, 7.59157, 0.07", "-11.8333, 38.4124, 7.32284, 0.58", "-11.4438, 39.4966, 6.96246, 0.22", "-11.2202, 40.0574, 6.84021, 0.22", "-10.9587, 40.6194, 6.78531, 0.22", "-10.5325, 41.4971, 6.80428, 0.58", "-10.3408, 41.9073, 6.85189, 0.36", "-10.0031, 42.6811, 7.01748, 0.8", "-9.44585, 44.0784, 7.4415, 0.22", "-9.18094, 44.9221, 7.73101, 0.22", "-8.99182, 45.7752, 8.0332, 0.22", "-8.86991, 46.6259, 8.33569, 0.22", "-8.80774, 47.2705, 8.54534, 0.44", "-8.79133, 47.7065, 8.65557, 0.15", "-8.80416, 48.6188, 8.78732, 0.95", "-8.81443, 49.8447, 8.8426, 0.15", "-8.77718, 50.4314, 8.79256, 0.15", "-8.67406, 51.0247, 8.66222, 0.15", "-8.47378, 51.7056, 8.44136, 0.15", "-8.32001, 52.0908, 8.2973, 0.15", "-8.0486, 52.6682, 8.04848, 0.15", "-7.81739, 53.2086, 7.82183, 0.15", "-7.70408, 53.5514, 7.69403, 0.15", "-7.60194, 53.9673, 7.55673, 0.15", "-7.45752, 54.8885, 7.28957, 0.15", "-7.38036, 55.6366, 7.05495, 0.15", "-7.28555, 56.5883, 6.87913, 0.66", "-7.18606, 57.4884, 6.79071, 0.44", "-7.0659, 58.2343, 6.78639, 0.44", "-6.87536, 59.0416, 6.85069, 0.29", "-6.66928, 59.7056, 6.96924, 0.29", "-5.85807, 61.9785, 7.65516, 0.15", "-5.66961, 62.504, 7.86242, 0.15", "-5.36636, 63.3979, 8.27613, 0.29", "-5.21899, 63.8673, 8.48694, 0.51", "-4.97556, 64.7128, 8.81418, 0.29", "-4.79867, 65.3945, 8.96687, 0.29", "-4.64526, 66.0329, 9.00188, 0.51", "-4.48496, 66.5306, 9.04475, 0.51", "-4.06292, 67.4177, 9.15691, 0.22", "-3.63738, 68.0075, 9.25725, 0.66", "-2.83909, 68.8269, 9.36298, 0.07", "-1.84408, 69.6973, 9.36684, 0.36", "-1.07796, 70.2972, 9.33902, 0.07", "-0.521099, 70.7119, 9.28826, 0.07", "0.177056, 71.2601, 9.16468, 0.66", "0.79305, 71.8059, 8.92367, 0.66", "1.74879, 72.7762, 8.35778, 0.07", "2.2106, 73.2896, 7.99722, 0.07", "2.84511, 74.0636, 7.43973, 1.24", "3.38925, 74.7589, 6.93552, 0.8", "4.06872, 75.6283, 6.32212, 0.36", "4.59803, 76.2754, 5.89513, 0.58", "4.81769, 76.5265, 5.73486, 0.58", "5.45371, 77.1714, 5.32554, 0.15", "6.40422, 77.977, 4.86266, 0.15", "6.78811, 78.2318, 4.74183, 0.15", "7.03912, 78.382, 4.68309, 0.15", "7.35134, 78.5798, 4.60155, 0.15", "7.68533, 78.8382, 4.49409, 0.15", "7.88309, 79.0605, 4.41445, 0.15", "8.18752, 79.5507, 4.28327, 0.15", "8.60213, 80.3596, 4.06767, 0.73", "8.80652, 80.8376, 3.98674, 0.73", "9.10342, 81.6525, 3.90373, 0.73", "9.34189, 82.4298, 3.86566, 0.07", "9.48471, 82.9882, 3.87241, 0.07", "9.59293, 83.4586, 3.92059, 0.22", "9.86999, 84.6566, 4.13693, 0.8", "10.0083, 85.235, 4.26683, 0.95", "10.1678, 85.9342, 4.44975, 0.95", "10.3914, 87.1518, 4.75914, 0.29", "10.5042, 88.0611, 4.96435, 0.07", "10.5293, 88.4314, 5.03905, 0.07", "10.543, 88.822, 5.1004, 0.07", "10.5578, 89.4844, 5.20028, 0.66", "10.5892, 90.3921, 5.32517, 0.73", "10.6486, 91.2776, 5.42087, 0.73", "10.7794, 92.2242, 5.48523, 0.07", "10.8795, 92.5887, 5.50507, 0.07", "11.0579, 92.9803, 5.50354, 0.07", "11.3026, 93.3417, 5.47355, 0.07", "11.6512, 93.8038, 5.37832, 0.07", "12.1905, 94.4004, 5.20771, 0.07", "12.7706, 94.9722, 4.99041, 0.29", "13.2003, 95.4031, 4.80989, 0.29", "13.5795, 95.8278, 4.61824, 0.58", "14.3355, 96.9351, 4.10849, 0.95" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-12.4074, 36.0275, 8.38929, 0.15", "-11.5695, 36.5257, 8.89253, 0.15", "-10.745, 36.9058, 9.32164, 0.22", "-9.86919, 37.2299, 9.72958, 0.44", "-9.05573, 37.4184, 10.0416, 0.22", "-8.05623, 37.5306, 10.4318, 0.22", "-7.58522, 37.5472, 10.6267, 0.36", "-6.90275, 37.4711, 10.9111, 0.36", "-6.53798, 37.4058, 11.0597, 0.36", "-5.33444, 37.1582, 11.6058, 0.15", "-4.21284, 36.9501, 12.2032, 0.36", "-3.58419, 36.8908, 12.596, 0.44", "-3.25383, 36.9128, 12.8491, 0.36", "-2.79898, 37.0653, 13.2596, 0.51", "-2.31498, 37.4346, 13.7453, 0.29", "-2.03106, 37.8467, 14.0577, 0.29", "-1.83107, 38.2691, 14.2464, 0.29", "-1.60558, 38.8965, 14.3882, 0.22", "-1.44446, 39.4379, 14.4409, 0.22", "-1.24086, 40.1539, 14.4399, 0.22", "-1.0923, 40.6503, 14.3976, 0.66", "-0.832372, 41.4342, 14.298, 0.73", "-0.387566, 42.6895, 14.0923, 0.22", "-0.208, 43.171, 14.012, 0.22", "0.0318936, 43.7523, 13.9447, 0.44", "0.261125, 44.2401, 13.9284, 0.73", "0.659435, 45.0405, 13.9916, 0.73", "0.914922, 45.5405, 14.0804, 0.73", "1.37737, 46.3467, 14.2512, 0.22", "1.94756, 47.2421, 14.4541, 0.44", "2.46488, 47.9868, 14.6283, 0.58", "3.08272, 48.8856, 14.8539, 0.29", "3.29131, 49.189, 14.9323, 0.29", "4.21638, 50.4389, 15.2476, 0.15", "4.80238, 51.104, 15.3879, 0.15", "5.39183, 51.6332, 15.4298, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "4.80847, -49.6631, 1.53878, 0.44", "6.10826, -50.1101, 1.44859, 0.44", "7.01844, -50.3275, 1.30727, 0.44", "7.59719, -50.4398, 1.20073, 0.44", "8.23609, -50.563, 1.05226, 0.44", "9.498, -50.8299, 0.745005, 0.44", "10.2299, -51.0141, 0.569363, 0.58", "10.9674, -51.2137, 0.331966, 0.29", "11.4372, -51.3807, 0.186028, 0.29", "12.22, -51.7895, -0.0202886, 0.51", "12.876, -52.2724, -0.138064, 0.51", "13.4451, -52.8728, -0.134573, 0.58", "13.9538, -53.6273, -0.0323103, 0.58", "14.3621, -54.4395, 0.142, 0.51", "14.6907, -55.2693, 0.4043, 0.51", "14.8773, -55.8698, 0.703723, 0.51", "15.1032, -56.8512, 1.36751, 0.51", "15.2644, -57.5237, 1.94555, 0.51", "15.3012, -57.6339, 2.06337, 0.51", "15.5268, -57.9733, 2.51873, 0.36", "16.2027, -58.529, 3.44089, 0.36", "16.5455, -58.7536, 3.79878, 0.36", "17.2591, -59.1821, 4.38743, 0.36", "17.7373, -59.4938, 4.71891, 0.51", "18.5953, -60.1212, 5.26021, 0.66", "19.3803, -60.7609, 5.67309, 0.51", "20.2884, -61.5248, 6.10393, 0.51", "20.9167, -62.0706, 6.40359, 0.51", "21.7674, -62.8947, 6.84249, 0.51", "22.4916, -63.6787, 7.22186, 0.66", "23.2974, -64.6513, 7.60252, 0.66" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "4.80847, -49.6631, 1.53878, 0.88", "4.5832, -50.7779, 0.840791, 0.88", "4.41088, -51.7264, 0.373413, 0.88", "4.29995, -52.375, 0.139388, 0.88", "4.06619, -53.7727, -0.228661, 0.51", "3.8555, -55.088, -0.466658, 0.73", "3.63938, -56.569, -0.632847, 0.73", "3.48234, -58.0587, -0.606017, 0.88", "3.38395, -59.1709, -0.477136, 0.88", "3.32734, -59.8476, -0.356411, 0.88", "3.23987, -60.9281, -0.0577413, 0.73", "3.18768, -61.7242, 0.23495, 0.73", "3.15746, -62.4178, 0.535133, 0.73", "3.11649, -63.6277, 0.912037, 1.17" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-11.4609, -24.9748, 7.12346, 0.07", "-11.4555, -25.0518, 7.15276, 0.07", "-11.4808, -25.6623, 7.40762, 0.44", "-11.556, -26.6245, 7.88161, 0.36", "-11.6071, -27.3414, 8.26178, 0.29", "-11.6508, -28.1679, 8.74833, 0.29", "-11.6675, -28.9984, 9.29666, 0.44", "-11.664, -29.5725, 9.72875, 0.44", "-11.6317, -29.9984, 10.119, 0.44", "-11.4323, -30.0639, 10.3192, 0.44", "-11.0028, -30.1175, 10.5826, 0.44", "-10.2895, -30.2306, 10.958, 0.36", "-9.35296, -30.4461, 11.4063, 0.22", "-8.54143, -30.6621, 11.7978, 0.36", "-8.07046, -30.8333, 12.0519, 0.29", "-7.30182, -31.2367, 12.5985, 0.51", "-6.77371, -31.6733, 13.1149, 0.51", "-6.53283, -32.0998, 13.6086, 0.36", "-6.56024, -32.4682, 14.1189, 0.36", "-6.72271, -32.8416, 14.6313, 0.36", "-6.89887, -33.294, 15.1632, 0.36", "-6.96768, -33.6034, 15.4647, 0.36", "-6.96925, -33.9073, 15.6791, 0.51", "-6.85173, -34.614, 16.0647, 0.51", "-6.63821, -35.4843, 16.4425, 0.66", "-6.26357, -36.7198, 16.8722, 0.36", "-5.98081, -37.479, 17.0951, 0.29", "-5.8675, -37.7208, 17.1589, 0.29", "-5.51593, -38.35, 17.2896, 0.29", "-5.07888, -39.0351, 17.3995, 0.15", "-4.77525, -39.4756, 17.4613, 0.15", "-4.25452, -40.2674, 17.5548, 0.15", "-3.72845, -41.1599, 17.7066, 0.44", "-3.30536, -42.0606, 17.8882, 0.29", "-3.00942, -42.8541, 18.068, 0.15", "-2.88863, -43.2705, 18.1707, 0.36", "-2.72216, -43.9916, 18.3541, 0.15", "-2.52455, -45.0457, 18.627, 0.29", "-2.3182, -46.3422, 18.9948, 0.15", "-2.18953, -47.0719, 19.2154, 0.15", "-1.92962, -48.2168, 19.5884, 0.58", "-1.63599, -49.1126, 19.9153, 0.66", "-1.33792, -49.7441, 20.1768, 0.36", "-0.87066, -50.4591, 20.5485, 0.36", "-0.400943, -51.0211, 20.9394, 0.15", "0.0421551, -51.4931, 21.3909, 0.15", "0.383353, -51.8306, 21.8457, 0.29", "0.751074, -52.2313, 22.4769, 0.29", "1.05637, -52.7294, 23.1842, 0.29", "1.1313, -53.0076, 23.4166, 0.29", "1.12599, -53.4878, 23.4911, 0.29", "1.1602, -54.2214, 23.4567, 0.29", "1.28654, -55.3092, 23.2758, 0.22", "1.48874, -56.4393, 23.0059, 0.22", "1.86451, -57.8544, 22.608, 0.58", "2.22941, -58.8156, 22.3088, 0.8", "2.687, -59.8456, 21.9439, 0.15", "3.09492, -60.5666, 21.6488, 0.15", "3.30277, -60.8497, 21.5091, 0.15", "3.7324, -61.2888, 21.2549, 0.15", "4.08338, -61.5438, 21.1462, 0.15", "8.53426, -70.1283, 23.6953, 0.15" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-11.4609, -24.9748, 7.12346, 0.66", "-11.9734, -24.0765, 7.85696, 0.66", "-12.6026, -23.0681, 8.79276, 0.58", "-12.9847, -22.4975, 9.40188, 0.58", "-13.3406, -22.0016, 9.99539, 0.58", "-13.6561, -21.6089, 10.5606, 0.58", "-14.0335, -21.2171, 11.2841, 0.58", "-14.2069, -21.2008, 11.7303, 0.58", "-14.3643, -21.413, 12.1554, 0.58", "-14.5195, -21.6649, 12.5017, 0.58", "-14.8983, -22.1959, 13.1209, 0.58", "-15.2237, -22.5129, 13.4651, 0.44", "-15.838, -22.8946, 13.8596, 0.44", "-16.291, -23.0397, 14.044, 0.44", "-17.1164, -23.1283, 14.2427, 0.44", "-17.9844, -23.0844, 14.3891, 0.58", "-18.9774, -22.872, 14.4858, 0.51", "-19.8423, -22.5674, 14.5311, 0.44", "-20.3765, -22.3134, 14.5482, 0.44", "-20.9326, -22.0133, 14.5625, 0.44", "-21.4351, -21.7246, 14.6019, 0.44", "-22.0914, -21.333, 14.7107, 0.44", "-22.5836, -21.025, 14.8264, 0.51", "-23.093, -20.7139, 14.9673, 0.51", "-24.2418, -20.0641, 15.3006, 0.44", "-25.2571, -19.5866, 15.5742, 0.44", "-25.8591, -19.33, 15.7282, 0.51", "-26.2445, -19.184, 15.8292, 0.73", "-26.9898, -18.9109, 16.0285, 0.51", "-27.4955, -18.7295, 16.1599, 0.51", "-28.7692, -18.2883, 16.5089, 0.73" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "70.523, -36.2663, -11.3098, 0.07", "71.5515, -36.54, -11.0017, 0.07", "72.1317, -36.644, -10.8709, 0.07", "72.983, -36.8092, -10.6719, 0.07", "73.3881, -36.9157, -10.5727, 0.36", "73.8665, -37.0509, -10.4588, 0.58", "74.6623, -37.28, -10.2487, 0.36", "75.4418, -37.4842, -10.04, 0.07", "76.0824, -37.6748, -9.85042, 0.07", "76.7256, -37.9036, -9.63677, 0.07", "77.2918, -38.1428, -9.41425, 1.02", "78.3666, -38.6531, -8.88646, 0.15", "78.9721, -38.9656, -8.55746, 0.15", "79.5476, -39.2492, -8.24996, 0.15", "80.1834, -39.5261, -7.90551, 0.15", "80.6622, -39.7044, -7.64017, 0.44", "81.8302, -40.0886, -6.92895, 0.66", "82.5097, -40.279, -6.50561, 0.66", "83.3642, -40.4796, -5.94124, 0.36", "84.3299, -40.6888, -5.27298, 0.07", "84.7632, -40.7649, -4.96232, 0.58", "85.7665, -40.8666, -4.25171, 0.07", "86.2069, -40.8852, -3.95277, 0.07", "86.7063, -40.8899, -3.62082, 0.07", "87.7792, -40.9101, -2.99526, 0.58", "88.5726, -40.9491, -2.6547, 0.07", "89.3254, -41.0118, -2.44147, 0.07", "89.9103, -41.0741, -2.35794, 0.22", "90.3461, -41.1217, -2.32059, 0.22", "91.1702, -41.2161, -2.30081, 0.07", "91.8312, -41.2868, -2.31577, 0.58", "92.9081, -41.3926, -2.29018, 0.07", "93.9651, -41.436, -2.11727, 0.07", "94.4812, -41.4302, -1.96714, 0.07", "94.6949, -41.4232, -1.88004, 0.29", "95.1972, -41.3927, -1.59906, 0.29", "96.2423, -41.311, -0.854629, 0.07", "97.5291, -41.1744, 0.2532, 0.66", "97.9887, -41.1121, 0.69156, 0.07", "98.3595, -41.0726, 1.03944, 0.07", "98.6649, -41.0577, 1.31056, 0.07", "99.0118, -41.0947, 1.61974, 0.07", "99.2474, -41.154, 1.79285, 0.07", "99.6041, -41.2704, 1.99127, 0.07", "100.148, -41.4921, 2.32659, 0.36", "100.325, -41.5944, 2.44077, 0.36", "101.092, -42.2469, 2.92881, 0.07", "101.522, -42.7085, 3.17373, 0.07", "101.86, -43.0822, 3.32748, 0.29", "102.404, -43.6655, 3.56486, 0.15", "102.753, -44.0154, 3.72661, 0.15", "103.189, -44.4151, 3.91799, 0.36", "103.878, -45.0178, 4.18859, 0.07", "104.527, -45.5928, 4.45454, 0.22", "105.287, -46.2121, 4.74976, 0.07", "105.952, -46.6917, 4.91191, 0.07", "106.485, -47.0305, 4.94722, 0.07", "107.07, -47.3573, 4.87494, 0.07", "107.627, -47.6284, 4.72473, 0.22", "108.621, -48.0431, 4.3716, 0.07", "110.101, -48.54, 3.79064, 0.22", "111.42, -48.8588, 3.2779, 0.07", "112.464, -48.9981, 2.89494, 0.07", "113.234, -49.0195, 2.66542, 0.66", "114.247, -48.9379, 2.44018, 0.44", "115.317, -48.7495, 2.32763, 0.22", "116.021, -48.5838, 2.41124, 0.07", "116.714, -48.3885, 2.61323, 0.07", "117.897, -48.1216, 3.13229, 0.07", "118.462, -48.0485, 3.40723, 0.07", "119.016, -48.0905, 3.67632, 0.29", "120.031, -48.6087, 3.97521, 0.07", "120.442, -48.9599, 3.99519, 0.44", "121.359, -49.8798, 3.88999, 0.07", "122.159, -50.7509, 3.67932, 0.07", "122.575, -51.2347, 3.53423, 0.22", "123.192, -51.961, 3.23007, 0.07", "123.576, -52.3973, 2.97931, 0.66", "124.03, -52.8722, 2.67335, 0.44", "124.242, -53.0741, 2.5288, 0.44", "133.65, -55.3214, 5.06544, 0.44", "143.177, -55.528, 8.09925, 0.44", "152.918, -55.152, 10.3266, 0.44", "162.129, -54.9686, 14.2163, 0.44", "170.563, -55.7923, 19.5256, 0.44", "179.019, -54.7621, 24.7638, 0.44", "187.536, -52.3789, 29.4302, 0.44", "195.342, -48.9151, 34.6324, 0.44", "202.609, -46.7238, 41.1439, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "70.523, -36.2663, -11.3098, 0.22", "71.0836, -35.8483, -10.9092, 0.22", "71.4704, -35.5182, -10.6408, 0.22", "71.9372, -35.1516, -10.3465, 0.36", "72.3363, -34.8665, -10.0861, 0.07", "73.1437, -34.3999, -9.62102, 0.07", "73.8191, -34.0634, -9.26664, 0.36", "74.1712, -33.9236, -9.09185, 0.07", "74.6743, -33.7126, -8.86279, 0.07", "75.1866, -33.4552, -8.6401, 0.66", "76.15, -32.903, -8.26513, 0.07", "76.3781, -32.738, -8.19538, 0.07", "76.6162, -32.5252, -8.12757, 0.07", "77.2254, -31.851, -7.97563, 0.44", "77.6844, -31.2509, -7.88082, 0.15", "78.144, -30.6131, -7.85818, 0.15", "78.6993, -29.767, -7.88272, 0.15", "79.1965, -28.9706, -7.93182, 0.66", "79.5954, -28.303, -7.99084, 0.66", "79.9463, -27.7736, -8.0544, 0.95", "80.726, -26.7066, -8.27166, 0.07", "81.195, -26.1362, -8.42944, 0.29", "81.616, -25.7109, -8.59763, 0.07", "82.2376, -25.187, -8.86594, 0.29", "83.2568, -24.4681, -9.30091, 0.07", "84.3942, -23.7701, -9.7338, 0.07", "84.8215, -23.5259, -9.88949, 0.07", "85.5533, -23.1112, -10.1691, 0.58", "85.9767, -22.8657, -10.3335, 0.66", "86.4919, -22.5548, -10.5203, 0.66", "87.4082, -21.9254, -10.7972, 0.22", "88.0238, -21.4727, -10.9045, 0.22", "88.6628, -20.9606, -10.986, 0.22", "89.0283, -20.6325, -11.0129, 0.22", "89.7069, -19.9527, -11.06, 0.44", "90.2494, -19.3801, -11.0895, 0.44", "90.7409, -18.8417, -11.103, 0.07", "91.2829, -18.2605, -11.0982, 0.07", "91.7413, -17.7745, -11.0462, 0.07", "92.227, -17.2738, -10.9317, 0.22", "92.6944, -16.8142, -10.7766, 0.66", "92.9582, -16.5796, -10.6595, 0.73", "93.4881, -16.1427, -10.3702, 0.44", "94.7588, -15.1514, -9.59317, 0.07", "95.4537, -14.6165, -9.13924, 0.07", "96.1312, -14.0743, -8.622, 0.51", "96.9173, -13.3906, -7.94739, 0.07", "97.9196, -12.4167, -7.03488, 0.29", "98.0157, -12.3115, -6.94216, 0.29", "98.2815, -11.9936, -6.68519, 0.22", "99.09, -10.9831, -5.87121, 0.8", "99.2891, -10.7423, -5.66932, 0.8", "99.8263, -10.1686, -5.22092, 0.07", "100.224, -9.8, -4.93051, 0.07", "100.514, -9.54144, -4.74422, 0.07", "100.86, -9.24604, -4.55693, 0.07", "101.068, -9.06073, -4.47642, 0.07", "101.695, -8.47979, -4.24669, 0.44", "102.357, -7.83615, -4.01811, 0.44", "102.868, -7.29561, -3.83837, 0.58", "103.069, -7.06862, -3.76637, 0.58", "103.682, -6.28707, -3.51244, 0.07", "103.883, -5.99901, -3.41114, 0.36", "104.106, -5.63672, -3.2734, 0.36", "104.628, -4.72933, -2.88464, 0.07", "104.689, -4.60774, -2.82161, 0.07", "104.958, -4.07744, -2.52847, 0.07", "105.127, -3.73478, -2.34992, 0.07", "105.26, -3.45672, -2.22891, 0.07", "105.618, -2.68412, -1.97647, 0.44", "105.779, -2.33382, -1.88785, 0.44", "106.279, -1.17361, -1.6025, 0.07", "106.598, -0.38545, -1.41872, 0.22", "106.776, 0.112771, -1.30472, 0.07", "107.08, 1.13701, -1.08302, 0.29", "107.322, 2.1482, -0.889006, 0.51", "107.581, 3.43872, -0.580635, 0.07", "107.63, 3.80806, -0.465315, 0.07", "107.663, 4.08586, -0.361609, 0.07", "107.706, 4.41606, -0.209259, 0.07", "107.775, 4.86771, 0.045656, 0.07", "107.935, 5.73378, 0.596637, 0.07", "108.122, 6.55958, 1.20247, 0.88", "108.268, 7.11274, 1.61002, 0.88", "108.5, 8.03644, 2.19975, 0.88", "108.705, 8.92104, 2.68812, 0.44", "108.858, 9.62805, 3.06114, 0.66", "109.087, 10.6873, 3.55343, 0.44", "109.289, 11.5486, 3.94049, 1.02", "109.607, 12.885, 4.52985, 0.36", "109.728, 13.4156, 4.68197, 0.36", "114.078, 21.9487, 7.55652, 0.36", "118.972, 29.6908, 11.5697, 0.36", "124.395, 37.4024, 14.9044, 0.36", "130.337, 45.1573, 17.0398, 0.36", "138.154, 51.3564, 17.7171, 0.36", "145.266, 58.0192, 19.9592, 0.36", "151.744, 65.456, 21.6141, 0.36", "157.449, 73.6378, 22.3253, 0.36", "164.409, 80.562, 24.2272, 0.36", "172.259, 85.6068, 27.8215, 0.36", "180.93, 89.6934, 30.6711, 0.36", "189.07, 93.7325, 34.8451, 0.36" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "33.6013, -87.8138, -15.1924, 1.09", "32.8082, -89.0063, -15.1757, 1.09", "32.2475, -89.9862, -15.2049, 0.73", "31.9222, -90.7355, -15.2553, 0.51", "31.6487, -91.7411, -15.3547, 0.58", "31.5332, -92.6797, -15.4928, 0.58", "31.5054, -93.7863, -15.6947, 0.58", "31.5676, -94.4525, -15.8704, 0.58", "31.7729, -95.465, -16.1922, 0.58", "32.0779, -96.4187, -16.5218, 0.58", "32.4158, -97.2169, -16.7814, 0.51", "32.7079, -97.8189, -16.9646, 0.51", "33.3756, -99.122, -17.2811, 0.95", "33.7028, -99.8036, -17.4105, 0.51", "34.3016, -101.138, -17.6061, 0.29", "34.8121, -102.241, -17.7211, 0.73", "35.0901, -102.805, -17.7634, 0.73", "35.804, -104.209, -17.8447, 0.44", "36.3829, -105.349, -17.8903, 0.44", "36.662, -105.992, -17.9316, 0.66", "37.0955, -107.229, -18.0666, 0.44", "37.2505, -107.76, -18.1722, 0.15", "37.422, -108.415, -18.3318, 0.22", "37.5665, -108.981, -18.4858, 0.22", "37.8097, -109.803, -18.7224, 0.22", "38.0297, -110.483, -18.8957, 0.66", "38.3965, -111.586, -19.1198, 0.73", "38.8332, -112.835, -19.2718, 0.44", "39.1864, -113.829, -19.3227, 0.51", "39.608, -115.068, -19.2891, 0.29", "39.8684, -115.904, -19.2106, 0.29", "40.0559, -116.564, -19.1404, 0.29", "40.2494, -117.313, -19.0848, 0.73", "40.3827, -117.938, -19.0959, 0.73", "40.4795, -118.6, -19.1739, 0.73", "40.5944, -120.029, -19.4883, 0.44", "40.6361, -120.932, -19.7709, 0.44", "40.6719, -121.704, -20.0539, 0.44", "40.7136, -122.322, -20.309, 0.44", "40.7553, -122.808, -20.4989, 0.44", "40.8016, -123.244, -20.6442, 0.44", "40.9002, -123.763, -20.7696, 0.8", "41.048, -124.47, -20.9004, 0.73", "41.3513, -125.709, -21.0922, 0.44", "41.7012, -126.853, -21.2825, 0.36", "41.9656, -127.556, -21.4039, 0.36", "42.5081, -128.791, -21.6219, 0.44" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "33.6013, -87.8138, -15.1924, 0.29", "34.0308, -88.5907, -14.8223, 0.29", "34.548, -89.4335, -14.4222, 0.66", "35.1935, -90.3304, -14.0004, 0.88", "35.6953, -90.9251, -13.7325, 0.73", "36.2482, -91.5255, -13.4766, 0.36", "36.666, -91.9715, -13.3005, 0.22", "36.995, -92.34, -13.1741, 0.15", "37.447, -92.9054, -13.0566, 0.22", "37.8896, -93.59, -12.9835, 0.07", "38.0638, -93.9182, -12.9653, 0.29", "38.2652, -94.3976, -12.9592, 0.66", "38.6115, -95.3359, -13.0322, 0.51", "38.9282, -96.2481, -13.154, 0.36", "39.2688, -97.2078, -13.3164, 0.36", "39.6159, -98.0996, -13.4455, 0.29", "39.8886, -98.7378, -13.4936, 0.44", "40.5802, -100.24, -13.5007, 0.51", "40.8035, -100.705, -13.4727, 0.66", "41.3912, -102.086, -13.2504, 0.44", "41.7538, -103.36, -12.8827, 0.36", "41.8724, -104.554, -12.39, 0.58", "41.8201, -105.119, -12.0998, 0.73", "41.6978, -105.623, -11.8097, 0.73", "41.328, -106.677, -11.211, 0.44", "40.8882, -107.728, -10.6347, 0.58", "40.5543, -108.543, -10.2596, 0.8", "40.1925, -109.549, -9.85038, 0.36", "40.0142, -110.153, -9.62038, 0.36", "39.7927, -111.033, -9.28781, 0.36", "39.546, -112.115, -8.88355, 1.02", "39.3084, -113.125, -8.49077, 0.44", "39.044, -113.865, -8.15355, 0.44", "38.6297, -114.558, -7.76183, 0.44", "38.0458, -115.347, -7.2669, 0.44", "37.4376, -115.977, -6.82292, 1.24", "37.0746, -116.261, -6.59018, 1.24", "35.6541, -117.125, -5.7347, 0.36", "34.5443, -117.672, -5.13202, 0.58" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "16.3069, -67.9677, -19.6612, 0.07", "16.1986, -69.0613, -19.4453, 0.07", "16.1545, -69.5581, -19.2978, 0.29", "16.0901, -70.4742, -18.9855, 0.29", "16.0556, -71.244, -18.7144, 0.07", "16.0143, -72.5487, -18.2545, 0.36", "15.9738, -73.7414, -17.8489, 0.07", "15.9397, -74.7723, -17.4884, 0.07", "15.9331, -75.9371, -17.0932, 0.07", "15.965, -76.8238, -16.8122, 0.36", "15.9883, -77.1124, -16.7334, 0.36", "16.0817, -78.0257, -16.5514, 0.07", "16.1416, -78.7728, -16.4767, 0.29", "16.1936, -79.572, -16.4437, 0.07", "16.2495, -80.296, -16.3682, 0.29", "16.297, -80.6561, -16.2975, 0.29", "16.4955, -81.4227, -16.0579, 0.07", "16.7478, -81.9933, -15.8041, 0.29", "16.9249, -82.304, -15.635, 0.29", "17.8331, -83.5553, -14.6759, 0.07", "18.2246, -84.0085, -14.2324, 0.29", "18.6405, -84.4143, -13.7477, 0.07", "19.0444, -84.7442, -13.2954, 0.07", "19.3163, -84.9527, -12.9929, 0.29", "20.3706, -85.8047, -11.8525, 0.58", "21.0287, -86.437, -11.1614, 0.07", "21.3731, -86.8338, -10.7491, 0.07", "21.5802, -87.1032, -10.4695, 0.29", "21.7319, -87.3188, -10.2622, 0.07", "22.0357, -87.8052, -9.87635, 0.36", "22.3954, -88.4762, -9.51935, 0.15", "22.7074, -89.104, -9.23899, 0.44", "23.0578, -89.8532, -8.92554, 0.44", "23.2678, -90.3316, -8.71129, 0.22", "23.593, -91.051, -8.37678, 0.07", "24.0874, -92.0663, -7.87511, 0.66", "24.7167, -93.2913, -7.27198, 0.07", "25.16, -94.1485, -6.85186, 0.29", "25.5313, -94.9335, -6.47299, 0.07", "25.71, -95.3764, -6.25644, 0.51", "25.9878, -96.3118, -5.81877, 0.07", "26.0841, -96.8484, -5.58258, 0.36", "26.1598, -97.619, -5.29139, 0.51", "26.2049, -98.5796, -4.98839, 0.15", "26.2369, -99.4321, -4.74804, 0.07", "26.2489, -100.206, -4.53954, 0.07", "26.2434, -100.925, -4.36375, 0.07", "26.2455, -101.731, -4.13984, 0.8", "26.2667, -102.157, -4.01319, 0.8", "26.3802, -103.312, -3.66931, 0.07", "26.4144, -103.517, -3.59632, 0.36", "26.4905, -103.86, -3.45083, 0.36", "26.6908, -104.79, -2.9756, 0.07", "26.7987, -105.482, -2.55724, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "16.3069, -67.9677, -19.6612, 0.07", "15.218, -68.5459, -20.1945, 0.07", "14.6915, -68.8558, -20.42, 0.29", "14.1377, -69.2232, -20.631, 0.29", "13.7201, -69.5081, -20.7697, 0.29", "12.8761, -70.0822, -21.0027, 0.07", "12.29, -70.489, -21.1315, 0.29", "11.9251, -70.7589, -21.1684, 0.07", "11.3463, -71.214, -21.1983, 0.29", "10.8586, -71.5783, -21.19, 0.07", "10.0584, -72.1339, -21.1534, 0.36", "8.90906, -72.8593, -21.0761, 0.07", "8.57696, -73.0362, -21.0615, 0.73", "7.85496, -73.3283, -21.0492, 0.95", "6.19941, -73.8163, -21.0361, 0.07", "5.69303, -73.9168, -21.0286, 0.29", "5.17983, -73.9549, -21.0152, 0.29", "4.01593, -73.9146, -20.9766, 0.07", "2.77124, -73.7699, -20.932, 0.07", "2.01229, -73.6188, -20.9059, 0.07", "1.40285, -73.4585, -20.8882, 0.58", "0.186543, -73.0974, -20.8322, 0.07", "-0.577219, -72.8485, -20.7122, 0.07", "-1.63863, -72.4784, -20.4947, 0.22", "-2.66185, -72.0994, -20.266, 0.07", "-3.32182, -71.8486, -20.1203, 0.58", "-4.28559, -71.4781, -19.9075, 0.29", "-6.25889, -70.6507, -19.3487, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "20.051, -52.4049, -46.7834, 0.73", "20.388, -53.2494, -46.9619, 0.73", "20.8259, -54.3713, -47.1973, 0.07", "21.158, -55.1703, -47.4116, 0.07", "21.4978, -55.9209, -47.6614, 0.66", "22.0105, -56.9897, -48.0767, 0.07", "22.3228, -57.6101, -48.3321, 0.07", "22.685, -58.2924, -48.6529, 0.07", "23.1226, -59.1315, -49.0499, 0.07", "23.3866, -59.743, -49.357, 0.07", "23.5809, -60.345, -49.7189, 0.07", "23.6945, -61.0135, -50.1305, 0.07", "23.6991, -61.6582, -50.5419, 0.8", "23.5917, -62.3587, -50.9618, 0.8", "23.1692, -63.888, -51.8105, 0.07", "22.765, -65.0441, -52.4209, 0.8", "22.2846, -66.2365, -53.0296, 0.07", "21.6403, -67.6792, -53.8097, 0.07", "21.1473, -68.7324, -54.4173, 0.07", "20.6928, -69.7083, -54.9918, 0.07", "20.2639, -70.6853, -55.5338, 0.51", "20.063, -71.1966, -55.8415, 0.51", "19.651, -72.4539, -56.7267, 0.07", "19.3931, -73.4406, -57.5013, 0.07", "19.1453, -74.6684, -58.5514, 0.88", "19.0648, -75.2289, -59.051, 0.88", "18.9358, -76.7022, -60.3679, 0.22", "18.9019, -77.8766, -61.3662, 0.44", "18.9559, -78.9432, -62.1889, 0.07", "19.0566, -79.8058, -62.7913, 0.07", "19.1794, -80.5223, -63.2365, 0.07", "19.3167, -81.2402, -63.6148, 0.58", "19.4865, -82.0004, -63.9117, 0.58", "19.9697, -83.9125, -64.6, 0.07", "20.24, -84.95, -64.9619, 0.07", "20.4722, -85.9082, -65.3598, 0.07", "20.5975, -86.5058, -65.636, 0.44", "20.7105, -87.1459, -65.977, 0.58", "20.9692, -88.7443, -66.9696, 0.07", "21.059, -89.299, -67.3347, 0.07", "21.3505, -90.8731, -68.5373, 0.36", "21.4493, -91.3242, -68.9046, 0.36", "21.7458, -92.5255, -69.946, 0.07", "22.065, -93.7263, -71.013, 0.29", "22.3018, -94.5844, -71.7542, 0.51", "22.7971, -96.2613, -73.2524, 0.15", "23.1154, -97.3247, -74.2036, 0.15", "23.4371, -98.4464, -75.2314, 0.07", "23.8002, -99.7857, -76.4096, 0.44", "23.9186, -100.252, -76.7822, 0.66", "24.2762, -101.719, -77.8095, 0.15", "24.5292, -102.808, -78.4077, 0.15", "24.7731, -103.892, -78.8768, 0.15", "25.0521, -105.181, -79.2732, 0.15", "25.3425, -106.588, -79.5619, 0.15", "25.6835, -108.288, -79.7733, 0.51", "25.9067, -109.377, -79.8101, 0.22", "26.1053, -110.316, -79.7953, 0.22", "26.2872, -111.214, -79.7566, 0.36", "26.5268, -112.539, -79.7305, 0.07", "26.771, -114.109, -79.7293, 0.07", "26.9085, -115.032, -79.7441, 0.36", "27.0679, -116.07, -79.7831, 0.07", "27.3766, -118.134, -79.898, 0.29", "27.6584, -120.066, -79.967, 0.07", "27.7636, -120.884, -79.9605, 0.07", "27.9156, -122.221, -79.8889, 0.36", "27.9745, -122.81, -79.8206, 0.36", "28.068, -123.711, -79.6516, 0.07", "28.2228, -125.062, -79.3069, 0.07", "28.416, -126.521, -78.8722, 0.07", "28.6036, -127.91, -78.4679, 0.29", "28.7748, -129.438, -78.059, 0.07", "28.9051, -130.962, -77.7612, 0.29", "28.9443, -131.46, -77.718, 0.29", "29.0253, -132.682, -77.7381, 0.07", "29.1131, -134.229, -77.8868, 0.07", "29.1984, -135.831, -78.118, 0.36", "29.3386, -137.774, -78.4198, 0.07", "29.5084, -139.579, -78.7456, 0.07", "29.6436, -140.682, -78.9463, 0.07", "29.8202, -141.833, -79.1525, 0.07", "30.2024, -143.931, -79.5514, 0.29", "30.6165, -146.187, -80.0119, 0.07", "30.9583, -148.196, -80.4024, 0.07", "31.1141, -149.294, -80.6238, 0.07", "31.2263, -150.166, -80.8259, 0.58", "31.4641, -152.108, -81.3226, 0.07", "31.7016, -154.186, -81.8871, 0.07", "31.8393, -155.55, -82.285, 0.07", "31.9568, -156.748, -82.6087, 0.07", "32.0753, -157.868, -82.9033, 0.07", "32.263, -159.175, -83.243, 0.07", "32.6889, -161.052, -83.7022, 0.36", "33.2147, -162.791, -84.1719, 0.07", "33.6298, -164.034, -84.5505, 0.07", "34.092, -165.411, -84.9829, 0.07", "34.5114, -166.755, -85.4334, 0.07", "35.0847, -168.737, -86.071, 0.29", "35.5601, -170.354, -86.5411, 0.07", "36.0032, -171.781, -86.9188, 0.07", "36.5214, -173.394, -87.3104, 0.29", "37.2944, -175.761, -87.8134, 0.07", "37.8191, -177.387, -88.0938, 0.07", "38.4395, -179.257, -88.4435, 0.29", "38.9605, -180.699, -88.679, 0.07", "39.7609, -182.638, -88.9902, 0.29", "40.5369, -184.258, -89.259, 0.07", "40.9455, -185.015, -89.3845, 0.36", "42.1514, -187.175, -89.9035, 0.07" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "20.051, -52.4049, -46.7834, 0.07", "21.1991, -51.3292, -47.7922, 0.07", "21.6117, -50.9646, -48.2145, 0.07", "22.4954, -50.2206, -49.211, 0.58", "23.2224, -49.5793, -50.1611, 0.07", "23.8942, -48.9864, -51.1234, 0.07", "24.3295, -48.5947, -51.8351, 0.73", "25.3867, -47.7324, -53.6373, 0.29", "26.2959, -47.1433, -55.2302, 0.73", "27.0822, -46.7811, -56.6157, 0.51", "27.6402, -46.6058, -57.5155, 0.51", "28.9421, -46.2959, -59.3381, 0.29", "29.7257, -46.1699, -60.3102, 0.29", "30.8535, -46.088, -61.3827, 0.07", "32.0612, -46.056, -62.2987, 0.07", "33.155, -46.0547, -62.9645, 0.07", "34.4568, -46.0561, -63.6199, 0.36", "35.978, -46.058, -64.282, 0.07", "37.5174, -46.028, -64.9706, 0.36", "38.6826, -46.0131, -65.455, 0.36", "39.9885, -46.0168, -65.9579, 0.07", "41.0293, -46.0312, -66.3203, 0.36", "42.5086, -46.0627, -66.7672, 0.07", "43.7462, -46.0657, -67.0992, 0.07", "45.5671, -46.0626, -67.6121, 0.07", "46.4369, -46.0629, -67.8695, 0.36", "47.796, -46.0644, -68.2878, 0.07", "48.9844, -46.1142, -68.6672, 0.07", "49.7454, -46.193, -68.9007, 0.44", "51.2892, -46.4864, -69.3903, 0.07", "52.404, -46.8094, -69.7834, 0.07", "53.1566, -47.1087, -70.0135, 0.07", "54.8691, -47.9908, -70.4308, 0.36", "55.7563, -48.5131, -70.5745, 0.07", "56.7164, -49.1143, -70.6538, 0.07", "57.1973, -49.4174, -70.6459, 0.07", "58.945, -50.4402, -70.5417, 0.51", "59.9492, -50.9422, -70.4712, 0.07", "60.6428, -51.2034, -70.4146, 0.07", "61.4969, -51.4248, -70.3662, 0.07", "62.7403, -51.6232, -70.3453, 0.36", "63.9621, -51.7371, -70.3826, 0.07", "64.7436, -51.7715, -70.4466, 0.07", "65.9041, -51.7957, -70.6093, 0.36", "67.658, -51.827, -70.9588, 0.07", "69.197, -51.8476, -71.3292, 0.07", "70.1179, -51.8577, -71.5962, 0.07", "71.2511, -51.8823, -71.9591, 0.58", "73.4642, -51.9374, -72.6894, 0.07", "74.87, -51.9701, -73.1715, 0.07", "75.9189, -51.993, -73.5176, 0.36", "78.0829, -52.0476, -74.2083, 0.07", "79.1678, -52.0659, -74.5361, 0.07", "81.157, -52.0574, -75.0365, 0.29", "83.1015, -51.9692, -75.3494, 0.07", "85.1234, -51.7742, -75.554, 0.29", "86.4445, -51.5275, -75.6111, 0.07", "87.0915, -51.2975, -75.5694, 0.07", "88.3179, -50.5846, -75.3405, 0.07", "89.699, -49.4481, -74.9737, 0.07", "90.1956, -48.9898, -74.8216, 0.07", "91.2171, -48.1804, -74.5024, 0.29", "92.3205, -47.5224, -74.1486, 0.07", "93.2264, -47.1281, -73.8583, 0.07", "95.0689, -46.5597, -73.2279, 0.07", "96.3793, -46.2757, -72.7543, 0.29", "98.8117, -45.8689, -71.7653, 0.07", "100.523, -45.6273, -71.1635, 0.22", "102.105, -45.3946, -70.7147, 0.07", "103.609, -45.1259, -70.3532, 0.07", "105.031, -44.8098, -70.0306, 0.29", "106.974, -44.2858, -69.7175, 0.07", "110.29, -43.2752, -69.554, 0.07", "111.878, -42.7858, -69.6149, 0.07", "113.889, -42.1982, -69.8464, 0.07", "115.202, -41.8657, -70.056, 0.07", "116.279, -41.6045, -70.232, 0.07", "117.387, -41.3609, -70.4025, 0.07", "119.363, -41.0121, -70.4798, 0.36", "120.862, -40.8173, -70.581, 0.15", "122.643, -40.6946, -70.9247, 0.36" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.5397, 35.453, 78.4693, 0.07", "-15.0153, 38.7009, 87.8114, 0.07", "-17.5198, 44.0232, 95.8985, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-13.5397, 35.453, 78.4693, 0.15", "-14.4109, 38.812, 87.8479, 0.07", "-13.8302, 41.3058, 97.5145, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "44.845, 42.3997, 57.3689, 0.22", "52.5528, 44.0508, 63.5223, 0.22", "59.2778, 45.4523, 70.7893, 0.22", "64.6653, 47.4959, 78.9623, 0.22", "68.5516, 49.8056, 87.8821, 0.22", "71.9019, 51.6568, 97.1205, 0.22", "76.132, 54.5875, 105.695, 0.22", "80.6368, 56.4399, 114.428, 0.22", "84.2746, 59.2546, 123.308, 0.22", "87.3531, 62.7401, 132.161, 0.22", "89.1355, 66.5479, 141.234, 0.22", "90.2474, 69.9753, 150.562, 0.22", "91.9092, 72.2426, 160.159, 0.22", "94.2989, 76.3909, 168.938, 0.22", "98.3653, 79.0491, 177.679, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "44.845, 42.3997, 57.3689, 0.51", "52.3823, 47.6353, 61.341, 0.22", "59.7881, 52.3523, 66.1268, 0.22", "66.3579, 57.6031, 71.5367, 0.22", "73.51, 61.9431, 77.0151, 0.22", "80.3572, 66.7551, 82.4886, 0.22", "85.5899, 72.6907, 88.6032, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-96.7959, 11.2315, 8.25309, 0.51", "-97.3505, 10.9979, 8.82823, 0.51", "-98.0373, 10.6447, 9.5975, 0.58", "-98.4832, 10.3454, 10.1624, 0.36", "-99.1063, 9.83465, 11.06, 0.36", "-99.8259, 9.21155, 12.1172, 0.36", "-99.9805, 9.07654, 12.336, 0.36", "-100.444, 8.65397, 12.9995, 0.58", "-100.899, 8.23948, 13.5734, 0.29", "-101.5, 7.71559, 14.154, 0.15", "-101.848, 7.45112, 14.4168, 0.15", "-102.27, 7.19278, 14.6697, 0.15", "-102.694, 6.98947, 14.8777, 0.8", "-102.947, 6.88688, 14.9758, 1.02", "-104.024, 6.46914, 15.3092, 0.66", "-105.09, 6.02413, 15.5879, 0.66", "-105.519, 5.82866, 15.6929, 0.66", "-106.299, 5.44722, 15.8583, 0.51", "-107.101, 5.04302, 16.0216, 0.22", "-108.182, 4.48696, 16.2188, 0.36", "-108.971, 4.07662, 16.3264, 0.36", "-109.863, 3.5988, 16.3887, 0.07", "-111.068, 2.92228, 16.478, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-96.7959, 11.2315, 8.25309, 0.22", "-97.6491, 11.6643, 8.71488, 0.22", "-98.2845, 11.9705, 9.14976, 0.22", "-98.9742, 12.316, 9.66881, 0.36", "-99.5683, 12.6403, 10.142, 0.58", "-100.29, 13.0673, 10.7293, 0.15", "-101.15, 13.6104, 11.414, 0.15", "-101.523, 13.8392, 11.7358, 0.15", "-101.731, 13.9619, 11.9139, 0.15", "-101.982, 14.1447, 12.1268, 0.15", "-102.232, 14.3917, 12.2485, 0.15", "-102.644, 14.8649, 12.1908, 0.15", "-102.897, 15.1514, 12.0764, 0.15", "-103.387, 15.6553, 11.82, 0.73", "-104.015, 16.2017, 11.506, 1.02", "-104.98, 16.9522, 11.0406, 0.15", "-105.73, 17.5103, 10.6992, 0.15", "-106.389, 18.024, 10.4189, 0.15", "-106.795, 18.3729, 10.2562, 0.73", "-107.66, 19.219, 9.93483, 0.15", "-108.074, 19.6402, 9.80685, 0.15", "-108.629, 20.3143, 9.66456, 0.36", "-109.146, 21.0868, 9.54581, 0.22", "-109.544, 21.8046, 9.43356, 0.22", "-109.884, 22.4703, 9.33253, 0.88", "-110.049, 22.7978, 9.28572, 0.88", "-110.633, 23.7435, 9.14281, 0.22", "-111.007, 24.184, 9.06863, 0.22", "-111.506, 24.5919, 8.99923, 0.22", "-112.164, 25.0245, 8.94402, 0.44", "-112.796, 25.3878, 8.91025, 0.44", "-113.489, 25.7665, 8.89089, 0.07", "-114.102, 26.0965, 8.89183, 0.22", "-114.956, 26.6024, 8.91494, 0.36", "-116.024, 27.3463, 8.96836, 0.58", "-116.451, 27.7003, 8.99909, 0.58", "-116.824, 28.0669, 9.0145, 0.36", "-117.28, 28.5714, 9.01875, 0.51", "-117.86, 29.2404, 9.00683, 0.36", "-118.271, 29.6973, 8.96117, 0.58", "-118.772, 30.225, 8.84842, 0.88", "-119.649, 31.073, 8.57401, 0.51", "-120.335, 31.6623, 8.31665, 0.22", "-120.808, 32.0145, 8.11781, 0.07", "-121.741, 32.6105, 7.69735, 0.66", "-122.48, 33.0149, 7.3767, 0.07", "-123.021, 33.2753, 7.15601, 0.15", "-123.344, 33.4218, 7.04928, 0.15", "-123.804, 33.6558, 6.92205, 0.15", "-124.183, 33.9157, 6.87635, 0.15", "-124.486, 34.2133, 6.87373, 0.15", "-124.762, 34.5257, 6.87543, 0.15", "-125.234, 35.1115, 6.818, 0.36", "-125.6, 35.5869, 6.72881, 0.88", "-125.993, 36.1354, 6.53944, 1.17", "-126.895, 37.4187, 5.9662, 0.15", "-127.194, 37.8862, 5.73965, 0.15", "-127.616, 38.5313, 5.45485, 0.66", "-127.851, 38.8646, 5.31819, 0.66", "-128.621, 39.8806, 5.00252, 0.15", "-129.081, 40.438, 4.90091, 0.15", "-129.784, 41.2076, 4.88767, 0.66", "-130.785, 42.1254, 4.87447, 0.15", "-131.23, 42.4356, 4.85724, 0.15", "-131.853, 42.784, 4.86139, 0.29", "-132.633, 43.1307, 4.89736, 0.8", "-133.49, 43.4411, 4.91049, 0.51", "-134.436, 43.7181, 4.87111, 0.22", "-135.517, 44.0209, 4.7144, 0.07", "-136.94, 44.3698, 4.47272, 0.07", "-137.251, 44.4384, 4.39973, 0.07", "-137.731, 44.557, 4.27763, 0.07", "-138.171, 44.7039, 4.17118, 0.07", "-139.023, 45.0666, 3.96755, 0.66", "-139.523, 45.3511, 3.82858, 0.66", "-140.315, 45.9397, 3.57366, 0.07", "-140.948, 46.5234, 3.40009, 0.07", "-141.489, 47.1068, 3.28284, 0.44", "-142.011, 47.6893, 3.20907, 0.44", "-142.898, 48.6764, 3.14122, 0.95", "-143.676, 49.4888, 3.11476, 0.07", "-144.15, 49.916, 3.13889, 0.07", "-144.684, 50.3228, 3.19009, 0.29", "-145.541, 50.8681, 3.3036, 0.07", "-146.058, 51.1399, 3.39237, 0.58", "-146.812, 51.4467, 3.55203, 0.58", "-148.087, 51.8656, 3.85893, 0.07", "-148.844, 52.0998, 4.06598, 0.07", "-149.281, 52.2467, 4.19873, 0.07", "-149.772, 52.4696, 4.36279, 0.07", "-150.145, 52.6758, 4.48565, 0.07", "-150.515, 52.9043, 4.6058, 0.07", "-151.014, 53.2291, 4.77367, 0.66", "-151.528, 53.5606, 4.95809, 0.95", "-152.611, 54.2537, 5.36358, 0.15", "-153.191, 54.6179, 5.60975, 0.15", "-153.732, 54.9411, 5.858, 0.15", "-154.319, 55.2444, 6.13188, 0.15", "-154.813, 55.4692, 6.34648, 0.44", "-155.523, 55.7541, 6.63724, 0.07", "-156.187, 55.9916, 6.88347, 0.07", "-156.874, 56.2393, 7.10661, 0.58", "-157.475, 56.4535, 7.25353, 0.58", "-158.647, 56.8493, 7.44215, 0.07", "-158.956, 56.9496, 7.47623, 0.07", "-159.243, 57.0363, 7.50421, 0.22", "-159.497, 57.1127, 7.522, 0.07", "-160.16, 57.327, 7.57786, 0.22", "-160.781, 57.5566, 7.63971, 0.07", "-161.38, 57.8144, 7.67768, 0.29", "-162.357, 58.3447, 7.70813, 0.07", "-162.956, 58.737, 7.70927, 0.07", "-163.441, 59.0908, 7.69946, 0.36", "-163.892, 59.4344, 7.68413, 0.36", "-164.889, 60.1489, 7.63517, 0.07", "-165.459, 60.4832, 7.59784, 0.73", "-166.371, 60.8731, 7.52246, 0.51", "-166.823, 61.0037, 7.4962, 0.07", "-167.455, 61.1175, 7.47659, 0.07", "-168.177, 61.2178, 7.44675, 0.44", "-169.125, 61.3176, 7.49613, 0.07", "-169.7, 61.3876, 7.57353, 0.07", "-170.214, 61.4688, 7.68458, 0.88", "-170.7, 61.584, 7.81587, 0.88", "-171.724, 61.8871, 8.04209, 0.07", "-173.073, 62.3399, 8.29599, 0.07", "-173.712, 62.5502, 8.38275, 0.07", "-174.314, 62.7089, 8.39598, 0.29", "-175.108, 62.8783, 8.38918, 0.07", "-176.362, 63.0742, 8.31878, 0.58", "-176.579, 63.0957, 8.28991, 0.58", "-177.74, 63.2046, 7.9385, 0.07", "-178.784, 63.32, 7.5296, 0.29", "-187.92, 66.8847, 5.57157, 0.29", "-196.672, 71.7225, 5.5201, 0.29", "-205.54, 76.3102, 4.97454, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-70.3165, -38.6137, 7.75172, 0.73", "-67.5275, -47.7392, 10.7428, 0.73", "-65.2487, -56.8717, 14.12, 0.73", "-62.8874, -66.3507, 16.2578, 0.73", "-59.9785, -75.1744, 19.9566, 0.73", "-56.4794, -83.1143, 24.928, 0.73", "-54.7431, -90.5185, 31.4213, 0.73", "-51.4018, -96.2012, 38.9408, 0.73", "-47.5012, -99.825, 47.4056, 0.73", "-42.5242, -103.785, 55.1222, 0.73", "-37.1377, -108.566, 62.0602, 0.73", "-31.9709, -113.724, 68.8935, 0.73", "-27.208, -119.974, 75.0781, 0.73", "-22.5546, -126.464, 81.0971, 0.73", "-16.9724, -132.83, 86.4177, 0.73", "-11.3616, -139.773, 90.9248, 0.73", "-4.61977, -146.308, 94.3667, 0.73", "1.25755, -154.006, 96.8575, 0.73", "7.3234, -161.452, 99.6428, 0.73", "13.4285, -169.105, 101.683, 0.73", "18.9972, -177.398, 102.148, 0.73", "25.3944, -185.016, 103.164, 0.73" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-70.3165, -38.6137, 7.75172, 0.15", "-68.1168, -48.1684, 5.78497, 0.73", "-66.9483, -57.3881, 2.09259, 0.73", "-64.2422, -66.8764, 0.465898, 0.73", "-63.3386, -76.697, -1.18972, 0.73", "-63.6682, -86.512, -3.07548, 0.73" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-92.4792, 99.8981, -44.9255, 0.07", "-92.5971, 100.181, -45.6752, 0.07", "-92.7907, 100.652, -46.8884, 0.66", "-93.2346, 101.847, -49.7469, 0.66", "-93.371, 102.269, -50.6974, 0.07", "-93.4989, 102.69, -51.5978, 0.66", "-93.7585, 103.488, -53.2554, 0.07", "-93.8308, 103.724, -53.726, 0.36", "-93.9402, 104.015, -54.2615, 0.07", "-94.2149, 104.535, -55.0541, 0.07", "-94.4012, 104.823, -55.4513, 0.07", "-94.8003, 105.402, -56.1658, 0.07", "-95.1971, 106.038, -56.9276, 0.29", "-95.4927, 106.698, -57.6892, 0.07", "-95.6457, 107.175, -58.2504, 0.29", "-95.7107, 107.502, -58.5605, 0.29", "-95.7809, 108.361, -59.2446, 0.07", "-95.7829, 109.628, -60.0885, 0.07", "-95.7063, 110.606, -60.6482, 0.29", "-95.4975, 112.122, -61.4198, 0.07", "-95.0803, 114.067, -62.4036, 0.07", "-94.8813, 114.933, -62.8154, 0.07", "-94.5942, 116.406, -63.3878, 0.95", "-94.4821, 117.299, -63.6617, 0.07", "-94.448, 117.905, -63.8306, 0.07", "-94.4307, 119.226, -64.1731, 0.73", "-94.4442, 119.73, -64.3404, 0.73", "-94.5503, 121.081, -64.7782, 0.07", "-94.6818, 122.163, -65.1938, 0.07", "-94.8774, 123.271, -65.8319, 0.29", "-95.1356, 124.449, -66.6208, 0.07", "-95.4025, 125.486, -67.3668, 0.07", "-95.6855, 126.568, -68.2477, 0.22", "-95.9867, 127.606, -69.2479, 0.07", "-96.7051, 129.674, -71.5055, 0.07", "-97.1054, 130.642, -72.6204, 0.07", "-97.3483, 131.159, -73.2193, 0.58", "-97.8827, 132.206, -74.4014, 0.07", "-98.4835, 133.343, -75.6469, 0.07", "-98.8703, 134.081, -76.3753, 0.07", "-99.2729, 134.903, -77.086, 0.36", "-99.6997, 135.879, -77.9639, 0.07", "-99.9059, 136.414, -78.4544, 0.07", "-100.431, 137.864, -79.7904, 0.07", "-100.705, 138.649, -80.5407, 0.36", "-100.933, 139.274, -81.1711, 0.58", "-101.368, 140.315, -82.2658, 0.07", "-101.78, 141.188, -83.1415, 0.07", "-102.198, 142.01, -83.8923, 0.07", "-102.637, 142.785, -84.5517, 0.07", "-103.015, 143.382, -85.0846, 0.07", "-103.441, 144.02, -85.6285, 0.07", "-103.992, 144.826, -86.198, 0.29", "-104.457, 145.541, -86.6371, 0.58", "-105.116, 146.609, -87.2292, 0.07", "-105.581, 147.389, -87.683, 0.07", "-105.789, 147.767, -87.913, 0.07", "-106.162, 148.463, -88.3421, 0.07", "-106.689, 149.487, -88.9292, 0.51", "-107.053, 150.211, -89.318, 0.07", "-107.509, 151.133, -89.7275, 0.07", "-107.847, 151.817, -90.0377, 0.36", "-107.994, 152.158, -90.2136, 0.36", "-108.243, 152.839, -90.604, 0.07", "-108.614, 153.966, -91.2922, 0.29", "-108.801, 154.61, -91.6894, 0.07", "-109.066, 155.651, -92.341, 0.58", "-109.534, 157.539, -93.5817, 0.07", "-109.745, 158.492, -94.2248, 0.07", "-109.877, 159.19, -94.7066, 0.07", "-109.966, 159.927, -95.1971, 0.44", "-110.058, 161.035, -95.9422, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-92.4792, 99.8981, -44.9255, 0.07", "-92.3677, 101.451, -44.8773, 0.07", "-92.3284, 102.045, -44.8695, 0.07", "-92.2979, 102.867, -44.8675, 0.29", "-92.3176, 104.039, -44.8817, 0.07", "-92.3685, 104.771, -44.8958, 0.07", "-92.4416, 105.396, -44.91, 0.07", "-92.5808, 106.205, -44.964, 0.15", "-92.8073, 107.242, -45.0244, 0.22", "-93.0572, 108.244, -45.0688, 0.07", "-93.2389, 108.901, -45.0849, 0.22", "-93.472, 109.694, -45.1035, 0.07", "-93.6341, 110.267, -45.1158, 0.29", "-93.7306, 110.633, -45.1044, 0.29", "-94.0029, 111.559, -45.1068, 0.07", "-94.1513, 112.01, -45.1201, 0.07", "-94.3138, 112.418, -45.1458, 0.58", "-94.5088, 112.8, -45.1812, 0.58", "-95.3467, 114.099, -45.4345, 0.07", "-96.2573, 115.197, -45.7964, 0.22", "-96.5153, 115.458, -45.9278, 0.22", "-96.97, 115.899, -46.1784, 0.07", "-97.4216, 116.336, -46.4385, 0.29", "-98.152, 117.077, -46.9253, 0.07", "-98.769, 117.75, -47.4095, 0.07", "-99.3068, 118.477, -47.8692, 0.07", "-99.7548, 119.236, -48.3521, 0.22", "-100.033, 119.793, -48.7344, 0.22", "-100.437, 120.754, -49.4286, 0.07", "-100.564, 121.115, -49.6805, 0.07", "-100.814, 121.935, -50.264, 0.88", "-101.165, 123.013, -51.1112, 0.07", "-101.427, 123.778, -51.867, 0.07", "-101.641, 124.391, -52.5182, 0.36", "-101.769, 124.749, -52.903, 0.07", "-101.85, 124.986, -53.1593, 0.22", "-102.117, 125.774, -53.9832, 0.22", "-102.471, 126.98, -55.1604, 0.07", "-102.633, 127.621, -55.7564, 0.07", "-102.744, 128.105, -56.2062, 0.07", "-102.902, 128.889, -56.9437, 0.36", "-102.995, 129.477, -57.4695, 0.36", "-103.127, 130.792, -58.4358, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-73.381, 48.3573, 4.34262, 0.22", "-83.0093, 49.3475, 6.85563, 0.22", "-92.4834, 49.2276, 10.0535, 0.22", "-102.213, 47.734, 11.8169, 0.22", "-111.183, 44.6712, 15.0046, 0.22", "-120.758, 43.7032, 17.7209, 0.22", "-130.671, 43.1511, 18.9158, 0.22", "-140.249, 43.8419, 21.7075, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-73.381, 48.3573, 4.34262, 0.51", "-81.6185, 53.3647, 1.68383, 0.22", "-88.7535, 59.5676, -1.57448, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-77.8114, -11.5604, 41.1814, 0.73", "-85.9504, -17.1077, 39.4537, 0.73", "-93.6081, -23.3149, 37.7711, 0.73" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-77.8114, -11.5604, 41.1814, 0.15", "-83.1402, -15.2025, 48.8195, 0.73", "-88.8871, -19.8153, 55.5794, 0.73" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.3355, 96.9351, 4.10849, 0.15", "14.2128, 97.5984, 3.74819, 0.15", "14.191, 98.4066, 3.32938, 0.15", "14.2534, 98.813, 3.09287, 0.15", "14.4968, 99.6611, 2.53677, 0.15", "14.7611, 100.508, 1.98775, 0.15", "14.8478, 100.895, 1.7355, 0.66", "14.9822, 101.592, 1.30715, 0.66", "15.0815, 102.449, 0.838981, 0.29", "15.1018, 103.144, 0.452666, 0.07", "15.0729, 103.814, 0.0511701, 0.44", "15.0286, 104.964, -0.60578, 0.07", "14.9966, 105.745, -1.14945, 0.58", "14.9728, 106.213, -1.52347, 0.07", "14.985, 106.894, -2.1124, 0.07", "15.1145, 107.539, -2.75026, 0.07", "15.4306, 108.257, -3.57474, 0.58", "16.1079, 109.214, -4.89812, 0.07", "16.4453, 109.608, -5.50356, 0.07", "16.7018, 109.871, -5.9523, 0.07", "17.1439, 110.257, -6.71414, 0.36", "17.3483, 110.417, -7.04691, 0.36", "18.0522, 110.947, -8.20978, 0.07", "18.3097, 111.162, -8.70041, 0.88", "18.6605, 111.547, -9.79211, 0.15", "18.9577, 111.958, -10.9779, 0.29", "19.0632, 112.168, -11.5715, 0.07", "19.1807, 112.474, -12.4472, 0.58", "19.3204, 113.007, -14.124, 0.58", "19.3385, 113.445, -15.8582, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.3355, 96.9351, 4.10849, 0.29", "14.764, 98.3113, 4.18757, 0.29", "15.0656, 99.0779, 4.18443, 0.15", "15.3356, 99.6911, 4.2033, 0.15", "15.6723, 100.417, 4.23715, 0.15", "16.1603, 101.519, 4.29521, 0.36", "16.5701, 102.572, 4.34907, 0.58", "16.8356, 103.305, 4.37144, 0.73", "17.1776, 104.408, 4.46092, 1.02", "17.3515, 105.112, 4.54416, 1.02", "17.523, 106.12, 4.68926, 1.02", "17.7505, 108.012, 5.00204, 0.22", "17.8559, 109.093, 5.19614, 0.22", "17.9567, 110.171, 5.38972, 0.66", "18.03, 110.9, 5.51292, 0.88", "18.1826, 112.212, 5.74659, 0.22", "18.3033, 113.055, 5.89545, 0.07", "18.4009, 113.705, 6.00139, 0.07", "18.5472, 114.827, 6.13781, 0.58", "18.5991, 115.346, 6.19736, 0.95", "18.6481, 115.932, 6.27773, 0.95", "18.7484, 117.104, 6.45789, 0.15", "18.8154, 117.786, 6.58666, 0.58", "18.9464, 118.748, 6.799, 0.73", "19.1215, 119.546, 6.99518, 0.07", "19.3657, 120.212, 7.19469, 0.07", "19.6623, 120.799, 7.39441, 0.07", "20.102, 121.453, 7.62774, 0.07", "20.2841, 121.681, 7.69966, 0.07", "20.6595, 122.115, 7.80032, 0.07", "21.0119, 122.592, 7.85441, 0.07", "21.412, 123.352, 7.90146, 0.36", "21.6731, 124.047, 7.94538, 0.66", "21.8942, 124.74, 7.97538, 0.95", "22.1478, 125.644, 8.04096, 0.95", "22.4737, 126.875, 8.15465, 0.22", "22.8209, 128.196, 8.29463, 0.07", "23.2557, 129.635, 8.49061, 0.58", "23.5062, 130.443, 8.57384, 0.58", "23.8289, 131.449, 8.64774, 0.29", "24.0884, 132.232, 8.71084, 0.58", "24.3265, 132.843, 8.75651, 0.22", "24.9239, 134.087, 8.82072, 0.29", "25.6869, 135.492, 8.8062, 0.07", "25.916, 135.907, 8.79103, 0.07", "26.536, 136.923, 8.63473, 0.73" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.39183, 51.6332, 15.4298, 0.36", "5.38964, 51.9729, 15.851, 0.36", "5.27459, 52.3643, 16.5097, 0.36", "4.9226, 52.7277, 17.5151, 0.36", "4.68639, 52.7561, 17.9684, 0.36", "4.43254, 52.6972, 18.4068, 0.15", "4.24088, 52.6948, 18.7922, 0.36", "3.7904, 52.616, 19.6119, 0.36", "3.59792, 52.7161, 19.9837, 0.36", "3.71411, 53.0779, 20.0516, 0.36", "3.76859, 53.3266, 20.1294, 0.36", "3.94345, 54.4945, 20.5959, 0.36", "4.02033, 55.1021, 20.8687, 0.51", "4.15847, 56.1943, 21.3596, 0.51" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.39183, 51.6332, 15.4298, 0.07", "6.16247, 51.8727, 15.4265, 0.07", "6.68989, 52.0432, 15.4131, 0.07", "7.61148, 52.341, 15.3896, 0.22", "8.44345, 52.6099, 15.3685, 0.07", "9.06883, 52.812, 15.3526, 0.07", "9.72327, 53.0234, 15.3359, 0.58", "10.0966, 53.1612, 15.3037, 0.36", "19.762, 55.6343, 14.6223, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "23.2974, -64.6513, 7.60252, 0.44", "23.3095, -65.6219, 7.13764, 0.44", "23.3063, -66.2234, 6.88938, 0.29", "23.2957, -67.0223, 6.61364, 0.29", "23.2954, -67.909, 6.34994, 0.29", "23.3299, -68.632, 6.18056, 0.29", "23.404, -69.3104, 6.01577, 0.44", "23.5355, -69.9792, 5.88627, 0.44", "23.8097, -70.8198, 5.78462, 0.51", "24.0658, -71.3901, 5.74706, 0.51", "24.535, -72.2495, 5.71142, 0.51", "25.2003, -73.3058, 5.68156, 0.51", "25.7433, -74.0459, 5.6733, 0.22", "26.4444, -74.913, 5.6956, 0.36", "26.8516, -75.392, 5.73197, 0.51", "27.1444, -75.7626, 5.77517, 0.66", "27.2737, -75.9519, 5.80326, 0.66", "27.7663, -76.7972, 5.97851, 0.36", "28.1246, -77.4777, 6.10196, 0.51", "28.4929, -78.1678, 6.20067, 0.29", "28.8649, -78.8109, 6.24856, 0.29", "29.2328, -79.3904, 6.25433, 0.29", "29.5203, -79.8285, 6.21918, 0.29", "30.0546, -80.6612, 6.13934, 0.29", "30.4681, -81.3295, 6.10794, 0.73", "31.0686, -82.3186, 6.16276, 0.73", "31.4416, -82.8875, 6.26593, 0.29", "31.8804, -83.535, 6.45514, 0.22", "32.5946, -84.5808, 6.78871, 0.22", "33.2471, -85.5855, 7.12177, 0.36", "33.7155, -86.3362, 7.37029, 0.36", "34.2293, -87.1839, 7.63273, 0.22", "34.684, -87.9418, 7.79294, 0.36", "35.2138, -88.7997, 7.8929, 0.8", "35.7179, -89.6498, 7.87996, 0.8", "36.0544, -90.2969, 7.84601, 0.8", "36.4863, -91.3758, 7.81036, 0.66", "36.7668, -92.3819, 7.83308, 0.66", "36.8709, -92.8701, 7.87259, 0.88", "37.1037, -94.0245, 8.04074, 0.51", "37.3402, -95.0946, 8.23063, 0.22", "37.5931, -95.9746, 8.41417, 0.22", "37.8252, -96.4735, 8.50671, 0.22", "38.3133, -97.145, 8.58885, 0.22", "38.9397, -97.7669, 8.60046, 0.22", "39.4777, -98.1913, 8.56385, 0.51", "40.149, -98.6887, 8.48296, 0.51", "41.5182, -99.734, 8.29381, 0.29", "41.9956, -100.12, 8.24836, 0.51", "42.6842, -100.75, 8.21812, 0.58", "43.305, -101.391, 8.22429, 0.22", "43.7595, -101.873, 8.2556, 0.22", "44.3277, -102.485, 8.31746, 0.22", "45.2186, -103.404, 8.459, 0.8", "45.8666, -104.032, 8.55006, 0.44", "46.2894, -104.404, 8.59266, 0.51", "47.1227, -105.063, 8.63774, 0.15", "47.6863, -105.449, 8.60702, 0.58", "48.2485, -105.786, 8.51607, 0.73", "48.9468, -106.181, 8.31301, 0.58", "49.7793, -106.646, 8.03204, 0.07", "50.1143, -106.851, 7.90957, 0.07", "51.1811, -107.614, 7.495, 0.36", "52.0215, -108.255, 7.22079, 1.02", "52.9534, -109.001, 6.96529, 0.22", "53.731, -109.625, 6.80283, 0.22", "54.4648, -110.239, 6.72594, 0.29", "55.2285, -110.945, 6.71334, 0.51", "56.114, -111.887, 6.78146, 0.22", "56.6592, -112.556, 6.8126, 0.07", "57.1478, -113.207, 6.80226, 0.07", "57.5823, -113.792, 6.73337, 0.07", "58.3487, -114.838, 6.57938, 0.8", "58.7784, -115.44, 6.47539, 0.8", "59.4617, -116.496, 6.29684, 0.15", "60.0305, -117.401, 6.23076, 0.07", "60.4961, -118.1, 6.23747, 0.07", "61.1905, -118.984, 6.3238, 0.58", "61.7607, -119.563, 6.47878, 0.8", "62.545, -120.214, 6.74908, 0.44", "63.4548, -120.833, 7.10815, 0.15", "63.9396, -121.124, 7.29152, 0.15", "64.4582, -121.424, 7.4511, 0.15", "65.1727, -121.839, 7.60099, 0.22", "65.6154, -122.124, 7.67298, 0.51", "66.0852, -122.528, 7.7074, 0.15", "66.4258, -123.073, 7.69414, 0.15", "66.6859, -123.863, 7.67988, 0.58", "66.7872, -124.281, 7.67409, 0.95", "66.9159, -124.861, 7.67093, 0.58", "67.1295, -125.735, 7.67665, 0.44", "67.4157, -126.735, 7.65003, 0.22", "67.7098, -127.575, 7.66285, 0.15", "68.1375, -128.526, 7.70821, 0.15", "68.5605, -129.308, 7.72147, 0.44", "68.8324, -129.776, 7.71757, 0.44", "69.4323, -130.793, 7.6872, 0.15", "70.0847, -132.014, 7.59167, 0.44", "70.4733, -132.92, 7.48735, 0.07", "70.8555, -134.107, 7.32163, 0.07", "71.0764, -134.985, 7.1745, 0.29", "71.2371, -135.696, 7.04719, 0.58", "71.5028, -136.88, 6.83306, 0.07", "71.6072, -137.335, 6.73762, 0.07", "71.8498, -138.395, 6.54729, 0.22", "72.0483, -139.264, 6.42551, 0.88", "72.2791, -140.126, 6.31604, 0.88", "72.7086, -141.499, 6.1882, 0.44", "73.1929, -142.883, 6.13768, 0.15", "73.5111, -143.733, 6.17221, 0.15", "73.7604, -144.403, 6.26121, 0.73", "74.0636, -145.29, 6.46033, 0.07", "74.3464, -146.197, 6.81062, 0.22", "74.6134, -147.047, 7.30294, 0.07", "74.9298, -147.991, 8.03048, 0.07", "75.085, -148.459, 8.4143, 0.36", "75.3269, -149.156, 8.99084, 0.73", "75.6776, -150.447, 10.0031, 0.15", "75.7841, -150.941, 10.347, 0.15", "75.9129, -151.519, 10.6787, 0.15", "76.1788, -152.512, 11.1718, 0.73", "76.4989, -153.529, 11.6684, 0.07", "76.7326, -154.266, 12.0027, 0.36", "76.8777, -154.818, 12.2027, 0.36", "77.0449, -155.624, 12.4962, 0.07", "77.2582, -156.816, 12.9981, 0.22", "77.4025, -157.47, 13.3275, 0.22", "77.5667, -158.055, 13.6607, 0.88", "77.7869, -158.594, 14.001, 0.51", "78.1108, -159.265, 14.4305, 0.22", "78.4601, -159.95, 14.8289, 0.22", "78.8744, -160.761, 15.2344, 0.44", "79.2853, -161.64, 15.6403, 0.07", "79.5566, -162.242, 15.949, 0.07", "79.8166, -162.822, 16.2541, 0.07", "80.1352, -163.503, 16.6092, 0.07", "80.409, -164.089, 16.9031, 0.36", "80.7071, -164.956, 17.3284, 0.58", "80.8934, -166.149, 17.8499, 0.15", "80.8529, -166.739, 18.1159, 0.15", "80.9798, -166.076, 17.8427, 0.44", "81.1229, -165.237, 17.5521, 0.07", "81.2386, -163.812, 16.9479, 0.22", "81.2229, -163.064, 16.5424, 0.07", "81.1998, -162.745, 16.3568, 0.22", "81.1249, -162.291, 16.0826, 0.07", "80.9462, -161.68, 15.6674, 0.29", "80.489, -160.661, 14.8575, 0.07", "80.1084, -160.068, 14.2906, 0.07", "84.0036, -169.278, 14.365, 0.07", "90.0906, -177.131, 15.4967, 0.07", "95.4455, -185.533, 16.3554, 0.07", "102.609, -192.128, 18.6335, 0.07" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "23.2974, -64.6513, 7.60252, 0.07", "24.6062, -64.8587, 7.64353, 0.07", "25.183, -64.9846, 7.6836, 0.07", "25.9543, -65.1864, 7.77976, 0.36", "26.4339, -65.342, 7.89072, 0.36", "27.2833, -65.7066, 8.23249, 0.15", "27.7224, -66.0024, 8.533, 0.15", "28.1163, -66.6304, 9.17081, 0.36", "28.1829, -66.95, 9.52344, 0.22", "28.1498, -67.6808, 10.3758, 0.15", "28.0191, -68.2078, 11.0348, 0.15", "27.7348, -68.8217, 11.8681, 0.29", "27.5129, -69.12, 12.3144, 0.07", "27.3876, -69.2257, 12.4997, 0.07", "27.1154, -69.3615, 12.8271, 0.07", "26.7099, -69.2121, 13.1484, 0.07", "26.437, -68.9055, 13.3473, 0.07", "26.1908, -68.4588, 13.5986, 0.07", "26.0477, -68.0427, 13.8377, 0.07", "25.9895, -67.549, 14.1892, 0.07", "26.2059, -66.9337, 14.9372, 0.07", "26.4173, -66.8939, 15.3299, 0.36", "26.8099, -67.0651, 16.0841, 0.07", "27.1316, -67.3112, 16.7178, 0.22", "27.447, -67.5964, 17.2938, 0.22", "27.8525, -67.9236, 17.9265, 0.15", "28.3045, -68.2607, 18.5518, 0.15", "28.7492, -68.498, 19.0692, 0.15", "28.9522, -68.5659, 19.2648, 0.15", "29.6605, -68.7149, 19.859, 0.44", "30.6456, -68.9227, 20.6576, 0.07", "30.891, -68.9854, 20.8675, 0.07", "31.2593, -69.121, 21.2029, 0.07", "31.3827, -69.4706, 21.5278, 0.07", "31.2397, -69.9614, 21.7859, 0.07", "30.8906, -70.9054, 22.1456, 0.07", "30.6172, -71.6245, 22.3189, 0.07", "30.3414, -72.4268, 22.4448, 0.29", "30.2615, -72.7141, 22.4523, 0.29", "30.161, -73.4783, 22.3409, 0.07", "30.1918, -73.9568, 22.1386, 0.07", "30.3655, -74.8001, 21.7415, 0.07", "30.4758, -75.2347, 21.5391, 0.07", "30.6519, -75.9206, 21.2428, 0.07", "30.7322, -76.4716, 21.0319, 0.07", "30.6931, -77.699, 20.6532, 0.07", "30.3473, -78.9874, 20.4315, 0.07", "30.133, -79.3455, 20.4287, 0.07", "29.9176, -79.59, 20.4491, 0.07", "29.375, -79.9725, 20.5694, 0.07", "29.011, -80.0996, 20.6577, 0.07", "28.5985, -80.1355, 20.7629, 0.07", "27.9783, -80.0843, 20.7629, 0.22", "28.9855, -87.2119, 27.7043, 0.22", "30.589, -94.0007, 34.8694, 0.22", "32.6233, -101.135, 41.5755, 0.22", "33.7755, -107.179, 49.458, 0.22", "33.3929, -113.443, 57.244, 0.22", "33.6411, -119.661, 65.0721, 0.22", "33.0126, -126.909, 71.9326, 0.22" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "3.11649, -63.6277, 0.912037, 0.44", "2.77397, -63.8232, 1.56215, 0.44", "2.33557, -64.1241, 2.33655, 0.73", "1.71576, -64.6238, 3.31189, 0.73", "0.996569, -65.2732, 4.32133, 0.51", "0.396604, -65.8538, 5.09275, 0.44", "0.0305635, -66.2346, 5.55724, 0.44", "-0.440627, -66.799, 6.13626, 0.88", "-0.94483, -67.5023, 6.75247, 0.66", "-1.38738, -68.2066, 7.30715, 0.51", "-1.71235, -68.7806, 7.70532, 0.44", "-2.05559, -69.3991, 8.14363, 0.44", "-2.22228, -69.7088, 8.40134, 0.44", "-2.41951, -70.1386, 8.99678, 0.44", "-2.39505, -70.3404, 9.67566, 0.44", "-2.14399, -70.3659, 10.3075, 0.29", "-1.93206, -70.3587, 10.6263, 0.29", "-1.79239, -70.37, 10.7959, 0.29", "-1.30737, -70.5347, 11.3639, 0.29", "-0.972157, -70.7613, 11.7888, 0.29", "-0.673457, -71.0433, 12.2217, 0.29", "-0.440234, -71.3533, 12.6592, 0.29", "-0.361272, -71.6264, 12.9951, 0.29", "-0.619827, -71.9224, 13.2593, 0.29", "-1.15123, -72.2343, 13.4895, 0.29", "-1.70487, -72.4352, 13.6576, 0.29", "-2.20647, -72.5581, 13.7838, 0.29", "-3.12183, -72.7085, 13.9886, 0.51", "-3.42427, -72.7447, 14.052, 0.15", "-4.21016, -72.8272, 14.2003, 0.58", "-5.15837, -72.966, 14.3739, 0.22", "-5.56624, -73.0651, 14.4693, 0.22", "-5.93994, -73.217, 14.5917, 0.22", "-6.34828, -73.5695, 14.7905, 0.22", "-6.54354, -73.8451, 14.9261, 0.22", "-6.87414, -74.4199, 15.2036, 0.22", "-7.18203, -74.94, 15.4425, 0.22", "-7.45873, -75.3267, 15.6195, 0.22", "-8.05036, -76.013, 15.9441, 0.44", "-8.80814, -76.6452, 16.2569, 0.29", "-9.69173, -77.1766, 16.5104, 0.29", "-10.5302, -77.5321, 16.6808, 0.29", "-11.2984, -77.7963, 16.7315, 0.51", "-11.5752, -77.8828, 16.7257, 0.51", "-12.91, -78.2807, 16.6051, 0.29", "-14.0302, -78.632, 16.4198, 0.29", "-15.138, -78.9819, 16.1991, 0.66", "-16.8955, -79.5195, 15.8708, 0.51", "-17.6184, -79.735, 15.6728, 0.22", "-18.1478, -79.8906, 15.4899, 0.22", "-18.3326, -79.951, 15.4105, 0.22", "-19.3124, -80.3634, 14.9446, 0.29", "-19.9404, -80.7281, 14.6455, 0.29", "-21.689, -81.9709, 13.9587, 0.29", "-22.2027, -82.4369, 13.7474, 0.29", "-22.7888, -83.1263, 13.5218, 0.29", "-23.56, -84.2679, 13.2681, 0.29", "-24.0216, -85.101, 13.147, 0.44", "-24.2923, -85.6159, 13.1161, 0.66", "-24.7313, -86.401, 13.1663, 0.58", "-25.2229, -87.1505, 13.2257, 0.36", "-25.7374, -87.7228, 13.2851, 0.15", "-26.073, -87.9754, 13.3245, 0.15", "-26.805, -88.4081, 13.408, 0.58", "-27.5813, -88.8446, 13.4698, 0.58", "-28.3924, -89.2727, 13.5058, 0.58", "-29.0343, -89.62, 13.4912, 0.29", "-29.5878, -89.9467, 13.4516, 0.29", "-30.3763, -90.4911, 13.3455, 0.15", "-31.3521, -91.2486, 13.1387, 0.15", "-31.9672, -91.7536, 12.9476, 0.44", "-32.7648, -92.4042, 12.6509, 0.58", "-33.0714, -92.6252, 12.5275, 0.58", "-33.7722, -93.0503, 12.2435, 0.29", "-34.6615, -93.4992, 11.903, 0.15", "-35.5228, -93.9017, 11.608, 0.15", "-36.0969, -94.1828, 11.4294, 0.15", "-36.7837, -94.5525, 11.2515, 0.36", "-37.4899, -94.982, 11.1007, 0.22", "-38.1833, -95.4788, 11.0032, 0.44", "-38.8699, -96.0567, 10.9562, 0.07", "-39.2494, -96.4169, 10.9548, 0.07", "-39.8823, -97.0742, 10.9679, 0.44", "-40.3701, -97.6253, 10.9744, 0.73", "-41.2024, -98.636, 10.9822, 0.15", "-41.4927, -99.0071, 10.9975, 0.15", "-41.8133, -99.4188, 11.0211, 0.15", "-42.3319, -100.071, 11.0674, 0.36", "-42.8316, -100.66, 11.1181, 0.36", "-43.5397, -101.381, 11.1821, 0.07", "-44.051, -101.77, 11.1758, 0.07", "-44.4609, -101.968, 11.1987, 0.07", "-44.8831, -102.082, 11.2456, 0.07", "-45.318, -102.155, 11.3103, 0.07", "-46.1552, -102.25, 11.4515, 0.29", "-47.3859, -102.404, 11.6424, 0.51", "-49.1707, -102.756, 11.8901, 0.15", "-49.6567, -102.911, 11.9692, 0.15", "-50.4781, -103.336, 12.1311, 0.36", "-50.8005, -103.543, 12.2037, 0.36", "-51.6118, -104.239, 12.4219, 0.07", "-51.9971, -104.688, 12.5482, 0.22", "-52.4366, -105.428, 12.6047, 0.07", "-52.7794, -106.187, 12.6689, 0.29", "-59.8521, -112.5, 15.8499, 0.29" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "3.11649, -63.6277, 0.912037, 0.66", "3.02873, -65.263, 0.855621, 0.66", "3.02899, -66.7328, 0.852895, 0.66", "3.08585, -67.7369, 0.867239, 0.66", "3.26093, -69.4752, 0.906496, 1.02", "3.54785, -71.5034, 0.961398, 0.73", "3.76909, -72.7529, 0.977368, 0.73", "3.98237, -73.7692, 1.02188, 0.73", "4.24508, -74.7966, 1.08434, 0.88", "4.40131, -75.3577, 1.09968, 1.02", "4.71794, -76.5729, 1.0835, 0.73", "4.98071, -77.7736, 1.01583, 0.73", "5.13643, -78.6758, 0.968643, 0.73", "5.26549, -79.4967, 0.932077, 0.95", "5.54755, -81.0389, 0.878826, 1.02", "5.84002, -82.7369, 0.831451, 0.73", "5.99691, -83.6597, 0.817272, 0.73", "6.21136, -84.837, 0.825805, 0.73", "6.51339, -86.1713, 0.835936, 0.73", "7.03366, -87.7899, 0.848105, 0.95" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-28.7692, -18.2883, 16.5089, 0.44", "-28.8159, -17.9956, 16.9134, 0.44", "-28.953, -17.4118, 17.6608, 0.44", "-29.1807, -16.7598, 18.5309, 0.15", "-29.2676, -16.553, 18.8333, 0.15", "-29.3953, -16.1924, 19.337, 0.44", "-29.4771, -15.9021, 19.7056, 0.07", "-29.5233, -15.6637, 19.9107, 0.07", "-29.4392, -16.1955, 19.7486, 0.07", "-29.3138, -16.8682, 19.7607, 0.36", "-28.9863, -18.5145, 20.2091, 0.15", "-28.8388, -19.1938, 20.5416, 0.15", "-28.6424, -20.1686, 21.2785, 0.15", "-28.52, -20.8415, 21.9812, 0.36", "-28.4525, -21.3533, 22.7042, 0.51", "-28.4626, -21.858, 23.7515, 0.22", "-28.548, -22.0872, 24.5803, 0.22", "-28.7754, -22.154, 25.4743, 0.07", "-28.9046, -22.1066, 25.7455, 0.58", "-29.2839, -21.8293, 26.4223, 0.51", "-29.6351, -21.517, 26.9473, 0.07", "-30.2026, -20.9396, 27.6606, 0.07", "-30.635, -20.4646, 28.1744, 0.07", "-30.8358, -20.1971, 28.4537, 0.29", "-31.2371, -19.6301, 29.1999, 0.07", "-32.0559, -20.0236, 39.1586, 0.07", "-32.1278, -21.5746, 49.0373, 0.07", "-31.8952, -25.7115, 58.1385, 0.07", "-32.5451, -28.8785, 67.6015, 0.07" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-28.7692, -18.2883, 16.5089, 0.36", "-30.0663, -18.2505, 16.1483, 0.36", "-30.9579, -18.2451, 15.901, 0.36", "-31.5192, -18.2808, 15.7592, 0.36", "-32.3812, -18.3652, 15.6036, 0.58", "-33.3236, -18.4525, 15.489, 0.44", "-34.1515, -18.5248, 15.4187, 0.44", "-34.7727, -18.5823, 15.4338, 0.29", "-35.9749, -18.7099, 15.5532, 0.58", "-37.0006, -18.8477, 15.7027, 0.44", "-37.7095, -18.9925, 15.8577, 0.44", "-38.113, -19.1066, 15.9909, 0.44", "-38.775, -19.3498, 16.3372, 0.44", "-39.3307, -19.6281, 16.7448, 0.29", "-39.6864, -19.9482, 17.1584, 0.29", "-40.0372, -20.6658, 17.9174, 0.51", "-40.2092, -21.2812, 18.5417, 0.29", "-40.3966, -22.1056, 19.3188, 0.29", "-40.465, -22.4135, 19.5809, 0.29", "-40.5931, -22.9305, 19.9952, 0.58", "-40.9123, -23.5674, 20.4837, 0.58", "-41.8528, -24.3181, 20.8823, 0.36", "-42.6768, -24.7244, 21.0075, 0.29", "-43.4275, -24.9883, 21.038, 0.29", "-44.2604, -25.1901, 21.0415, 0.29", "-45.4571, -25.4062, 20.9805, 1.17", "-45.9758, -25.504, 20.9174, 1.17", "-46.4531, -25.6217, 20.8482, 1.17", "-46.8551, -25.7703, 20.8126, 1.17", "-47.6409, -26.1847, 20.7432, 0.29", "-48.2321, -26.6108, 20.6773, 0.29", "-48.8589, -27.1952, 20.5557, 0.29", "-49.4244, -27.7966, 20.4371, 0.29", "-49.8722, -28.3023, 20.3495, 0.66", "-50.2816, -28.7705, 20.302, 0.66", "-50.7532, -29.2945, 20.2812, 0.22", "-50.9689, -29.5028, 20.2876, 0.44", "-51.5461, -29.9767, 20.3288, 0.15", "-52.6496, -30.8064, 20.4303, 0.07", "-53.5307, -31.4067, 20.5326, 0.07", "-53.9105, -31.6364, 20.5877, 0.07", "-54.6358, -32.0241, 20.697, 0.07", "-55.4899, -32.4476, 20.8302, 0.22", "-64.2653, -37.0354, 22.2251, 0.22", "-73.2565, -41.3563, 22.922, 0.22" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "42.5081, -128.791, -21.6219, 0.29", "43.5797, -129.352, -21.5494, 0.29", "44.3488, -129.829, -21.4946, 0.15", "45.1942, -130.429, -21.4374, 0.36", "46.1618, -131.162, -21.3128, 0.07", "46.5819, -131.483, -21.2484, 0.58", "47.1359, -131.887, -21.1608, 0.66", "47.9653, -132.489, -20.9872, 0.36", "48.7294, -133.026, -20.8354, 0.07", "49.5597, -133.596, -20.7138, 0.29", "50.2076, -134.036, -20.6143, 0.44", "50.9427, -134.513, -20.5077, 0.07", "51.4472, -134.792, -20.4446, 0.07", "51.8748, -134.997, -20.4023, 0.07", "52.3078, -135.177, -20.3667, 0.29", "52.9581, -135.445, -20.3146, 0.07", "53.5787, -135.729, -20.243, 0.07", "54.412, -136.126, -20.1325, 0.07", "55.1838, -136.491, -20.0185, 0.36", "55.9636, -136.832, -19.8921, 0.66", "56.8395, -137.181, -19.7359, 0.07", "57.8056, -137.534, -19.5424, 0.22" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "42.5081, -128.791, -21.6219, 0.44", "42.2861, -129.42, -21.8423, 0.44", "42.011, -130.345, -22.161, 0.44", "41.8063, -131.479, -22.5182, 0.73", "41.7068, -132.494, -22.8137, 0.36", "41.6753, -132.978, -22.9594, 0.36", "41.6494, -133.34, -23.067, 0.36", "41.5779, -134.123, -23.303, 0.22", "41.4747, -135.216, -23.6482, 0.51", "41.3825, -136.006, -23.913, 0.15", "41.2552, -136.664, -24.143, 0.15", "41.037, -137.433, -24.4096, 0.29", "40.6933, -138.44, -24.7461, 0.29", "40.4767, -139.076, -24.9273, 0.95", "40.2931, -139.623, -25.0605, 0.95", "40.0582, -140.481, -25.2216, 0.36", "39.9845, -140.944, -25.295, 0.36", "39.9353, -142.069, -25.4678, 0.44", "39.9989, -143.793, -25.6597, 0.29", "40.0454, -144.428, -25.7148, 0.66", "40.0985, -145.164, -25.7683, 0.88", "40.1746, -146.405, -25.8426, 0.36", "40.194, -147.294, -25.9326, 0.58", "40.1721, -148.149, -26.0551, 0.44", "40.1174, -148.997, -26.2315, 0.22", "40.0599, -149.951, -26.4715, 0.22", "40.025, -150.604, -26.6484, 0.58", "39.9418, -152.191, -27.0782, 0.44", "39.9197, -152.968, -27.304, 0.58", "39.921, -153.941, -27.6128, 0.58", "39.9714, -155.137, -28.0023, 0.36", "40.0435, -156.09, -28.3051, 0.29", "40.1183, -156.871, -28.5451, 0.29", "40.2447, -157.989, -28.8518, 0.22", "40.3338, -158.761, -29.0763, 0.44", "40.4166, -159.677, -29.3385, 0.73", "40.4491, -160.297, -29.5196, 0.51", "40.4861, -161.46, -29.8454, 0.22", "40.5041, -161.963, -29.9786, 0.22", "40.5477, -162.79, -30.201, 0.22", "40.5996, -163.687, -30.4446, 0.44", "40.6185, -164.204, -30.592, 0.44", "40.6692, -165.354, -30.9666, 0.22", "40.7378, -166.208, -31.2952, 0.22", "40.8858, -167.398, -31.8205, 0.22", "40.9753, -168.024, -32.126, 0.44", "41.1064, -168.982, -32.6406, 0.88", "41.212, -169.974, -33.2048, 0.22", "41.2634, -170.8, -33.6937, 0.22", "41.2806, -171.069, -33.8441, 0.22", "41.3459, -171.674, -34.2295, 0.22", "41.4379, -172.241, -34.6518, 0.07", "41.4933, -172.601, -34.9399, 0.07", "41.5349, -173.096, -35.3476, 0.36", "41.5573, -174.104, -36.1692, 0.66", "41.5562, -175.694, -37.4843, 0.36", "41.5334, -176.44, -38.107, 0.15", "41.478, -176.992, -38.5677, 0.07", "41.3948, -177.449, -38.946, 0.07", "41.2522, -177.98, -39.3736, 0.07", "40.9659, -178.851, -40.007, 0.8", "40.7045, -179.655, -40.5244, 0.8", "40.3295, -180.915, -41.3656, 0.22", "40.1017, -181.758, -41.9681, 0.07", "39.8245, -182.863, -42.7742, 0.15", "39.6674, -183.516, -43.2477, 0.15", "39.3804, -184.672, -44.045, 0.07", "39.136, -185.658, -44.6814, 0.07", "38.8583, -186.764, -45.3316, 0.8", "38.6316, -187.72, -45.8256, 0.44", "38.454, -188.687, -46.2843, 0.15", "38.3831, -189.277, -46.5671, 0.15", "38.3583, -189.77, -46.7825, 0.15", "38.3526, -190.323, -47.0012, 0.15", "38.3744, -191.52, -47.4602, 0.15", "38.3667, -192.691, -47.9781, 0.58", "38.2664, -194.207, -48.7803, 0.22", "38.1786, -194.915, -49.1932, 0.07", "38.0552, -195.522, -49.5861, 0.22", "37.9936, -195.745, -49.7334, 0.22", "37.5276, -197.081, -50.6402, 0.07", "37.0894, -198.113, -51.299, 0.73", "36.8215, -198.696, -51.6464, 0.73", "36.3549, -199.768, -52.2365, 0.15", "35.9838, -200.794, -52.7172, 0.36", "35.6384, -201.961, -53.1793, 0.07", "35.4656, -202.751, -53.4138, 0.07", "35.3332, -203.493, -53.5807, 0.58", "35.1266, -204.64, -53.7826, 0.58", "34.9009, -205.815, -53.9628, 0.07", "34.668, -206.859, -54.0659, 0.07", "34.4029, -207.935, -54.126, 0.07", "33.9808, -209.449, -54.2224, 0.58", "33.4639, -211.05, -54.3911, 0.15", "32.8771, -212.646, -54.606, 0.07", "32.2312, -214.278, -54.8889, 0.58", "31.9438, -214.975, -55.0258, 0.58", "31.2489, -216.561, -55.3894, 0.07", "30.5441, -218.174, -55.7984, 0.07", "30.1063, -219.229, -56.0922, 0.29", "29.602, -220.552, -56.4415, 0.51", "29.3077, -221.431, -56.6803, 0.51", "28.9944, -222.576, -56.9333, 0.07", "28.8067, -223.508, -57.0808, 0.07", "28.6611, -224.568, -57.1933, 0.07", "28.568, -225.868, -57.3129, 0.29", "28.5597, -226.54, -57.358, 0.29", "28.5865, -228.122, -57.4291, 0.07", "28.6134, -229.015, -57.4442, 0.07", "28.6053, -229.58, -57.4371, 0.29", "28.544, -230.423, -57.4013, 0.29", "28.3982, -231.444, -57.3535, 0.07", "28.1678, -232.654, -57.3107, 0.07", "27.9702, -233.544, -57.2841, 0.07", "27.6984, -234.677, -57.3138, 0.22", "27.3645, -236.074, -57.4103, 0.07", "27.0411, -237.764, -57.5866, 0.07", "26.8727, -239.026, -57.7809, 0.07", "26.7778, -240.123, -57.9889, 0.29", "26.6834, -241.539, -58.2744, 0.51", "26.6471, -242.416, -58.4749, 0.51", "26.5912, -244.351, -58.9333, 0.07", "26.5668, -245.662, -59.2582, 0.07", "26.5297, -247.164, -59.6155, 0.29", "26.5087, -248.028, -59.848, 0.29", "26.4813, -249.238, -60.1742, 0.07", "26.4365, -250.942, -60.6864, 0.22", "26.4063, -252.096, -61.0469, 0.07", "26.3936, -253.82, -61.5605, 0.22", "26.4247, -255.74, -62.139, 0.07", "26.4499, -257.456, -62.6489, 0.29", "26.4471, -259.223, -63.1442, 0.22", "26.4213, -260.504, -63.5068, 0.07", "26.3634, -261.868, -63.8652, 0.22", "26.2576, -263.24, -64.2003, 0.07", "26.1408, -264.21, -64.4011, 0.36", "26.0009, -264.927, -64.5763, 0.36", "25.6608, -266.087, -64.9392, 0.07", "25.3994, -266.737, -65.2211, 0.07", "25.0135, -267.49, -65.6079, 0.36", "24.7688, -267.919, -65.8827, 0.36", "24.0361, -269.218, -66.8775, 0.07", "23.3655, -270.436, -67.9424, 0.07", "22.9591, -271.167, -68.6909, 0.29", "22.5077, -271.992, -69.606, 0.29", "21.8797, -273.209, -71.0802, 0.07", "21.686, -273.617, -71.5852, 0.07", "21.4734, -274.125, -72.2275, 0.36", "21.0851, -275.112, -73.4403, 0.07", "20.8867, -275.646, -74.0502, 0.29", "20.3919, -276.909, -75.4693, 0.07", "20.0287, -277.758, -76.3239, 0.66", "19.2657, -279.557, -77.886, 0.07", "18.9798, -280.255, -78.3761, 0.07", "18.6097, -281.186, -78.9025, 0.36", "17.8433, -283.174, -79.8506, 0.07", "17.4359, -284.226, -80.2694, 0.07", "16.6953, -286.147, -81.0294, 0.29", "15.8939, -288.289, -81.9163, 0.07", "15.3047, -289.935, -82.6672, 0.95", "15.07, -290.643, -83.0138, 0.95", "14.5898, -292.351, -83.8169, 0.22", "14.0486, -294.631, -84.925, 0.07", "13.7763, -296.142, -85.6983, 0.07", "13.6462, -297.272, -86.3132, 0.07", "13.5215, -298.947, -87.2622, 0.07", "13.379, -301.257, -88.5961, 0.36", "13.3226, -302.204, -89.1181, 0.07", "13.209, -303.42, -89.8044, 0.36", "12.9721, -304.934, -90.722, 0.07", "12.646, -306.325, -91.7312, 0.07", "12.5277, -306.683, -92.0337, 0.07", "12.1861, -307.525, -92.8218, 0.36", "11.4844, -309.115, -94.2729, 0.07", "11.1323, -309.876, -94.8907, 0.66", "10.5134, -311.273, -95.8656, 0.07", "10.3119, -311.789, -96.1848, 0.07", "10.003, -312.717, -96.7299, 0.29", "9.69367, -313.91, -97.3665, 0.07", "9.51401, -314.776, -97.7399, 0.07", "9.40728, -315.381, -97.9666, 0.07", "9.27976, -316.186, -98.2067, 0.44", "9.18513, -316.865, -98.398, 0.44", "9.00462, -318.318, -98.8112, 0.07", "8.9641, -318.887, -98.9592, 0.36", "8.93247, -319.903, -99.2708, 0.07", "8.92969, -320.331, -99.4106, 0.07", "8.92875, -320.657, -99.5211, 0.36", "8.90855, -321.556, -99.8815, 0.36", "8.84596, -322.599, -100.35, 0.07", "8.75051, -323.562, -100.818, 0.07", "8.67982, -324.012, -101.067, 0.07", "8.4142, -325.249, -101.801, 0.29", "8.04165, -326.56, -102.599, 0.07", "7.78731, -327.233, -102.998, 0.29", "7.65518, -327.506, -103.141, 0.29", "6.91821, -328.801, -103.733, 0.07", "6.44376, -329.533, -104.057, 0.07", "5.96794, -330.194, -104.336, 0.07", "5.23069, -331.192, -104.708, 0.44", "4.44964, -332.237, -105.082, 0.07", "3.61887, -333.38, -105.478, 0.88", "2.88553, -334.477, -105.847, 0.51", "1.75829, -336.352, -106.492, 0.07", "1.34967, -337.131, -106.766, 0.58", "1.08, -337.72, -106.975, 0.73", "0.650784, -338.761, -107.339, 0.15", "0.120988, -340.158, -107.742, 0.29", "-0.238906, -341.135, -108.028, 0.07", "-0.593579, -342.069, -108.312, 0.07", "-0.998676, -343.005, -108.609, 0.07", "-1.42212, -343.855, -108.889, 0.07", "-1.75844, -344.431, -109.07, 0.36", "-2.66416, -345.81, -109.493, 0.15", "-3.05738, -346.395, -109.677, 0.36", "-3.65956, -347.279, -109.967, 0.07", "-4.23031, -348.125, -110.245, 0.07", "-4.98901, -349.273, -110.59, 0.07", "-5.62749, -350.258, -110.846, 0.07", "-6.07986, -350.991, -110.957, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-111.068, 2.92228, 16.478, 0.73", "-111.584, 2.42545, 16.2939, 0.73", "-112.009, 2.25333, 16.2378, 0.95", "-112.927, 2.06174, 16.2909, 0.36", "-113.29, 2.00751, 16.3393, 0.36", "-114.203, 1.86652, 16.4904, 0.22", "-115.277, 1.69168, 16.7124, 0.29", "-116.447, 1.58626, 17.0427, 0.15", "-117.182, 1.53917, 17.3122, 0.15", "-117.596, 1.48652, 17.5183, 0.15", "-117.74, 1.29155, 17.6945, 0.15", "-117.821, 0.99102, 17.8472, 0.15", "-117.946, 0.217432, 18.124, 0.88", "-118.003, -0.440082, 18.3053, 0.58", "-118.068, -1.59036, 18.5698, 0.22", "-118.119, -2.63401, 18.7978, 0.22", "-118.222, -3.83243, 19.0313, 0.66", "-118.246, -3.99033, 19.0543, 0.95" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-111.068, 2.92228, 16.478, 0.15", "-111.306, 3.17684, 16.3738, 0.15", "-111.703, 3.62537, 16.1527, 0.15", "-111.919, 3.8994, 16.0307, 0.15", "-112.376, 4.53871, 15.7717, 0.66", "-112.756, 5.14466, 15.5448, 0.51", "-113.549, 6.54983, 15.0359, 0.22", "-113.999, 7.50839, 14.6687, 0.44", "-114.417, 8.61508, 14.2203, 0.22", "-114.612, 9.2812, 13.9446, 0.73", "-114.715, 9.94715, 13.6683, 0.07", "-114.347, 9.98255, 13.6003, 0.07", "-113.082, 9.92895, 13.4373, 0.22", "-112.404, 9.83895, 13.3682, 0.07", "-111.442, 9.63155, 13.2755, 0.22", "-111.154, 9.54825, 13.2499, 0.15", "-110.54, 9.3313, 13.1996, 0.29", "-110.268, 9.23243, 13.1836, 0.07", "-109.639, 9.01523, 13.1836, 0.29", "-109.21, 17.7635, 8.35844, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "26.536, 136.923, 8.63473, 0.36", "26.0797, 137.307, 9.43096, 0.36", "25.6024, 137.797, 10.3553, 0.22", "25.37, 138.073, 10.8714, 0.22", "25.1468, 138.404, 11.5676, 0.22", "25.1265, 138.497, 11.8659, 0.22", "25.2028, 138.536, 12.162, 0.22", "25.5322, 138.481, 12.4807, 0.07", "26.2877, 138.342, 13.0318, 0.29", "27.0116, 138.214, 13.4696, 0.29", "27.9345, 138.027, 14.0023, 0.07", "28.3594, 137.916, 14.2619, 0.07", "28.7769, 137.773, 14.5294, 0.8", "29.3117, 137.531, 14.9036, 0.8", "30.0262, 137.127, 15.3991, 0.44", "30.6665, 136.733, 15.7119, 0.07", "31.0898, 136.451, 15.8505, 0.36", "31.6834, 136.045, 15.9774, 0.07", "32.4158, 135.557, 16.0601, 0.07", "33.1927, 135.118, 16.0571, 0.07", "34.2089, 134.583, 15.9801, 0.07", "34.7396, 134.363, 15.9006, 0.07", "35.431, 134.161, 15.7828, 0.29", "35.7389, 134.115, 15.7164, 0.51", "36.4314, 134.11, 15.5159, 0.29", "43.8315, 130.872, 21.411, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "26.536, 136.923, 8.63473, 0.29", "26.3876, 137.771, 8.49218, 0.29", "26.2638, 138.75, 8.35733, 0.29", "26.1796, 139.765, 8.21613, 0.07", "26.1433, 140.461, 8.10884, 0.07", "26.1294, 141.124, 7.98784, 0.07", "26.1369, 141.707, 7.89696, 0.29", "26.21, 142.372, 7.81166, 0.29", "26.3657, 143.367, 7.71685, 0.07", "26.5087, 144.078, 7.63962, 0.07", "26.639, 144.701, 7.56505, 0.07", "26.8654, 145.65, 7.44379, 0.51", "27.0482, 146.293, 7.36279, 0.51", "26.2288, 155.768, 4.27426, 0.51", "26.6797, 164.967, 0.3788, 0.51", "25.7828, 173.99, -3.83911, 0.51", "26.2102, 182.8, -8.55018, 0.51", "26.7779, 192.305, -11.6051, 0.51", "28.4396, 201.969, -13.5666, 0.51", "31.7758, 211.028, -16.1762, 0.51" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.15847, 56.1943, 21.3596, 0.29", "3.83845, 56.9968, 21.4491, 0.29", "3.3898, 58.0541, 21.6702, 0.07", "3.1386, 58.5396, 21.812, 0.07", "2.77129, 59.1609, 22.0268, 0.07", "2.26141, 59.994, 22.3426, 0.07", "1.72598, 60.9439, 22.7151, 0.07", "1.47131, 61.4771, 23.0385, 0.07", "1.22453, 62.0847, 23.5363, 0.07", "1.06093, 62.5141, 23.9129, 0.44", "0.92252, 62.8312, 24.1961, 0.58", "0.567983, 63.7109, 24.8296, 0.07", "0.67219, 64.2875, 25.1452, 0.07", "0.918924, 64.804, 25.4067, 0.29", "1.16097, 65.2707, 25.6199, 0.29", "1.27748, 65.6628, 25.7819, 0.29", "-0.264289, 74.9381, 29.1866, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.15847, 56.1943, 21.3596, 0.51", "4.23242, 57.348, 21.2133, 0.51", "4.2605, 57.6362, 21.1948, 0.51", "4.30601, 58.1068, 21.2327, 0.51", "4.3901, 59.0546, 21.3775, 0.22", "4.43751, 59.6099, 21.477, 0.22", "4.50395, 60.2312, 21.6042, 0.22", "4.63449, 61.1676, 21.862, 0.07", "4.80108, 62.2848, 22.1743, 0.29", "4.91784, 63.0657, 22.417, 0.07", "4.99363, 63.7019, 22.6252, 0.36", "5.0408, 64.4554, 22.8614, 0.8", "5.0399, 65.0574, 23.046, 0.8", "4.98304, 65.7729, 23.2804, 0.22", "4.8591, 66.6532, 23.5738, 0.58", "4.74129, 67.2664, 23.8062, 0.58", "4.58114, 68.0142, 24.1221, 0.29", "4.39827, 68.842, 24.4879, 0.22", "4.23456, 69.8755, 24.9629, 0.44", "4.20224, 70.5751, 25.285, 0.22", "4.22913, 70.8652, 25.4077, 0.22", "4.39354, 71.529, 25.6567, 0.22", "4.56183, 71.9727, 25.7859, 0.22", "4.95836, 72.7921, 25.9044, 0.66", "5.21728, 73.2573, 25.9145, 0.73", "5.44701, 73.6609, 25.8935, 0.73", "5.98491, 74.6309, 25.8111, 0.15", "6.29854, 75.2366, 25.7308, 0.15", "6.58805, 75.8564, 25.637, 0.15", "6.73184, 76.2421, 25.5696, 0.15", "6.94067, 76.8533, 25.4466, 0.29", "9.43752, 86.3997, 27.0686, 0.29", "10.8587, 96.1964, 28.4856, 0.29", "13.6223, 105.791, 29.0333, 0.29", "16.7637, 115.237, 28.0857, 0.29", "19.5322, 124.846, 28.1427, 0.29", "21.2437, 134.699, 28.2026, 0.29", "21.5273, 144.674, 27.5674, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "19.762, 55.6343, 14.6223, 0.73", "27.6779, 50.2119, 11.805, 0.73", "34.5177, 44.0197, 7.94839, 0.73", "41.0799, 36.9962, 5.19038, 0.73", "48.3499, 31.2512, 1.42969, 0.73", "55.0512, 24.9529, -2.49747, 0.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.762, 55.6343, 14.6223, 0.15", "24.8025, 64.0592, 16.5232, 0.73", "28.3752, 73.2928, 17.9288, 0.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "7.03366, -87.7899, 0.848105, 0.29", "6.19687, -89.0438, 0.264601, 0.29", "5.88225, -89.5269, 0.0631967, 0.29", "5.58807, -90.0262, -0.107902, 0.66", "5.15305, -90.878, -0.373475, 0.51", "4.64696, -92.0069, -0.779585, 0.44", "4.36744, -92.7367, -1.09661, 0.66", "4.09284, -93.5502, -1.44216, 0.66", "3.7881, -94.6965, -1.98087, 0.29", "3.58701, -95.6503, -2.455, 0.29", "3.38585, -96.7807, -3.03836, 0.73", "3.21385, -98.0861, -3.76028, 0.44", "3.13535, -98.8074, -4.18255, 0.88", "3.02884, -99.8006, -4.79287, 1.02", "2.93788, -100.546, -5.28705, 0.44", "2.78255, -101.381, -5.7978, 0.73" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "7.03366, -87.7899, 0.848105, 0.36", "7.30885, -88.8667, 0.983541, 0.36", "7.40762, -89.7374, 1.0476, 0.29", "7.39529, -90.399, 1.15697, 0.15", "7.3754, -90.8313, 1.23718, 0.15", "7.35406, -91.5833, 1.37784, 0.15", "7.38995, -92.3675, 1.51823, 0.73", "7.44639, -92.982, 1.59618, 0.73", "7.74577, -94.7029, 1.74161, 0.29", "8.09659, -95.8599, 1.79137, 0.58", "8.37016, -96.4365, 1.79052, 0.66", "9.1232, -97.5726, 1.73916, 0.15", "9.95037, -98.5628, 1.69832, 0.36", "10.4113, -99.0396, 1.71547, 0.36", "10.9247, -99.5285, 1.779, 0.51", "11.5055, -100.13, 1.96936, 0.15", "11.8096, -100.523, 2.15286, 0.44", "12.2745, -101.313, 2.61841, 0.58", "12.7793, -102.318, 3.27375, 0.29", "13.2696, -103.334, 3.95501, 0.15", "13.5553, -103.911, 4.32712, 0.15", "13.8191, -104.389, 4.61159, 0.15", "14.0789, -104.801, 4.81381, 0.15", "14.4823, -105.368, 5.01675, 0.44", "15.1124, -106.174, 5.22771, 0.73", "15.6949, -106.907, 5.40018, 0.36", "16.086, -107.466, 5.53968, 0.36", "16.4338, -108.087, 5.70183, 0.66", "16.7732, -108.859, 5.92976, 0.51", "16.9856, -109.459, 6.11646, 0.51", "17.2123, -110.195, 6.34708, 0.51", "17.5145, -111.097, 6.65053, 0.29", "17.8925, -111.956, 6.95146, 0.07", "18.3267, -112.598, 7.1863, 0.36", "18.6212, -112.916, 7.29647, 0.66", "18.9957, -113.253, 7.40215, 0.66", "19.8114, -113.928, 7.63176, 0.29", "20.6186, -114.577, 7.85347, 0.51", "21.8018, -115.572, 8.14514, 0.15", "22.4471, -116.169, 8.29245, 0.15", "22.9427, -116.691, 8.41613, 0.66", "23.8349, -117.794, 8.6671, 0.22", "24.2609, -118.454, 8.82749, 0.44", "24.6615, -119.327, 9.06733, 0.58", "24.8174, -120.041, 9.27644, 0.29", "24.8212, -120.615, 9.46324, 0.29", "24.7259, -121.205, 9.66135, 0.36", "24.4779, -122.051, 9.94252, 0.22", "24.1777, -122.877, 10.295, 0.22", "23.9402, -123.503, 10.6005, 0.29", "23.7929, -124.044, 10.8614, 0.15", "23.7338, -124.698, 11.1424, 0.36", "23.7675, -125.027, 11.2556, 0.51", "24.0166, -126.004, 11.5037, 0.36", "24.2902, -126.711, 11.6455, 0.51", "24.8182, -127.745, 11.8087, 0.22", "25.3559, -128.597, 11.877, 0.22", "25.8676, -129.286, 11.8509, 0.22", "26.3135, -129.819, 11.8184, 0.73", "26.7, -130.25, 11.7797, 0.51", "27.3087, -130.929, 11.7535, 0.29", "27.9023, -131.654, 11.7712, 0.29", "28.4863, -132.442, 11.8499, 0.29", "29.3447, -133.679, 12.0121, 0.8", "29.8066, -134.358, 12.0799, 0.44", "30.3313, -135.139, 12.179, 0.44", "30.8126, -135.826, 12.3108, 0.22", "31.1665, -136.28, 12.4218, 0.22", "31.7913, -137.017, 12.6035, 0.36", "32.7339, -138.046, 12.7944, 0.29", "33.4078, -138.722, 12.9205, 0.36", "34.0962, -139.408, 13.0221, 0.58", "34.9442, -140.304, 13.1653, 0.73", "35.5367, -141.024, 13.279, 0.29", "35.9902, -141.661, 13.3768, 0.29", "36.6163, -142.69, 13.495, 0.44", "36.9942, -143.419, 13.5358, 0.36", "37.3574, -144.342, 13.5853, 0.15", "37.6503, -145.431, 13.6746, 0.15", "37.7893, -146.208, 13.7712, 0.15", "37.8765, -147.026, 13.9028, 0.58", "37.9089, -147.704, 14.0526, 0.58", "37.9505, -148.953, 14.4207, 0.07", "37.951, -149.481, 14.6059, 0.07", "37.9137, -150.202, 14.9021, 0.07", "37.8705, -150.591, 15.0803, 0.66", "37.7454, -151.477, 15.5024, 0.36", "37.6406, -152.323, 15.9171, 0.15", "37.6308, -153.144, 16.3105, 0.15", "37.6764, -153.683, 16.5393, 0.15", "37.8362, -154.49, 16.786, 0.15", "37.9811, -154.913, 16.8375, 0.15", "38.3171, -155.594, 16.7817, 0.15", "38.9394, -156.655, 16.5404, 0.36", "39.4887, -157.555, 16.2548, 0.22", "40.0277, -158.513, 15.884, 0.22", "40.4063, -159.37, 15.4976, 0.36", "40.5857, -160.184, 15.0681, 0.15", "40.5678, -160.814, 14.698, 0.36", "40.4622, -161.326, 14.3755, 0.15", "40.2113, -162.129, 13.8387, 0.15", "39.898, -162.989, 13.2322, 0.51", "39.5213, -164.074, 12.4757, 0.22", "39.3076, -164.895, 11.9376, 0.36", "39.2356, -165.615, 11.4964, 0.07", "39.2822, -166.12, 11.2205, 0.07", "39.4883, -166.8, 10.8944, 0.07", "39.9686, -167.738, 10.5456, 0.29", "40.4623, -168.443, 10.4166, 0.07", "41.1201, -169.234, 10.3751, 0.07", "41.6617, -169.855, 10.4081, 0.22", "42.1023, -170.343, 10.4666, 0.58", "42.8213, -171.144, 10.5548, 0.29", "43.5696, -172.072, 10.6317, 0.22", "43.8135, -172.486, 10.6511, 0.22", "43.9319, -172.91, 10.6498, 0.22", "43.9503, -173.506, 10.5879, 0.22", "43.7895, -174.585, 10.4082, 0.73", "43.5573, -175.403, 10.2259, 0.73", "43.3747, -175.873, 10.1179, 0.36", "43.0904, -176.542, 9.99997, 0.29", "42.7467, -177.355, 9.90745, 0.22", "42.4283, -178.164, 9.87131, 0.22", "42.3357, -178.458, 9.8793, 0.66", "42.1306, -179.412, 9.84637, 0.51", "42.0325, -180.256, 9.77639, 0.22", "42.0145, -181.06, 9.65268, 0.29", "42.0433, -181.928, 9.44537, 0.15", "42.0866, -182.714, 9.17759, 0.15", "42.1786, -184.249, 8.54156, 0.15", "42.2042, -184.787, 8.28778, 0.66", "42.2098, -185.718, 7.80457, 0.66", "42.193, -186.775, 7.22253, 0.22", "42.1289, -187.834, 6.62099, 0.22", "42.0787, -188.182, 6.43196, 0.8", "41.8777, -189.01, 6.07037, 0.8", "41.6764, -189.65, 5.78673, 0.8" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-32.5451, -28.8785, 67.6015, 0.22", "-33.9214, -29.483, 77.4879, 0.22", "-34.9378, -29.184, 87.4316, 0.22", "-34.3484, -28.7533, 97.4049, 0.22", "-33.6495, -26.8393, 107.195, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-32.5451, -28.8785, 67.6015, 0.51", "-32.9327, -31.5942, 77.2178, 0.22", "-32.7402, -34.5496, 86.7692, 0.22", "-33.781, -37.1463, 96.37, 0.22", "-33.202, -40.9939, 105.582, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-73.2565, -41.3563, 22.922, 0.73", "-82.2048, -43.7761, 19.1706, 0.73", "-90.6674, -45.3433, 14.0785, 0.73", "-98.9845, -46.6895, 8.69212, 0.73", "-106.982, -48.3787, 2.93127, 0.73" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-73.2565, -41.3563, 22.922, 0.15", "-79.0809, -46.7033, 29.0446, 0.73", "-84.9556, -50.5625, 36.1577, 0.73" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-118.246, -3.99033, 19.0543, 0.29", "-118.439, -4.57566, 19.519, 0.29", "-118.566, -4.91047, 19.8566, 0.29", "-118.733, -5.40692, 20.4009, 0.22", "-118.952, -6.23528, 21.3764, 0.22", "-119.04, -6.60794, 21.826, 0.36", "-119.081, -6.83167, 22.0698, 0.36", "-119.179, -7.25514, 22.575, 0.36", "-119.248, -7.51323, 22.8956, 0.36", "-119.383, -7.93668, 23.4377, 0.22", "-119.478, -8.18642, 23.7713, 0.22", "-119.72, -8.68055, 24.4785, 0.44", "-120.128, -9.20628, 25.3691, 0.44", "-120.725, -9.4087, 26.2163, 0.22", "-121.144, -9.21022, 26.6427, 0.07", "-121.553, -8.79168, 26.9706, 0.29", "-121.986, -8.15776, 27.279, 0.07", "-122.356, -7.53706, 27.5151, 0.07", "-122.711, -6.8289, 27.6901, 0.07", "-123.031, -6.08153, 27.8157, 0.07", "-123.161, -5.73971, 27.8737, 0.22", "-123.334, -5.25047, 27.9512, 0.22", "-128.581, -6.89389, 36.3039, 0.22", "-134.182, -8.07501, 44.5032, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-118.246, -3.99033, 19.0543, 0.29", "-119.35, -4.32885, 18.8561, 0.29", "-119.887, -4.45214, 18.7782, 0.29", "-121.053, -4.66404, 18.5922, 0.36", "-121.663, -4.74823, 18.4954, 0.36", "-122.503, -4.82107, 18.3671, 0.58", "-123.326, -4.87413, 18.2803, 0.36", "-124.216, -4.89955, 18.2189, 0.29", "-124.983, -4.89169, 18.2044, 0.51", "-125.647, -4.85379, 18.2494, 0.22", "-126.278, -4.78514, 18.3201, 0.29", "-127.288, -4.62157, 18.4749, 0.22", "-127.917, -4.51203, 18.6208, 0.15", "-128.389, -4.4394, 18.7796, 0.15", "-128.738, -4.40564, 18.9262, 0.15", "-129.71, -4.39294, 19.3616, 0.44", "-130.145, -4.41912, 19.5541, 0.07", "-130.874, -4.46759, 19.8396, 0.22", "-131.849, -4.50995, 20.2072, 0.07", "-132.492, -4.492, 20.3929, 0.07", "-133.125, -4.37328, 20.4711, 0.07", "-133.586, -4.15937, 20.4249, 0.07", "-134.345, -3.56571, 20.227, 0.66", "-134.818, -3.09766, 20.0594, 0.22", "-135.649, -2.14032, 19.7306, 0.07", "-136.431, -1.17551, 19.434, 0.07", "-137.007, -0.401877, 19.2005, 0.07", "-137.558, 0.380149, 18.9659, 0.8", "-137.957, 0.96052, 18.7939, 0.66", "-138.264, 1.37036, 18.6849, 0.36", "-138.866, 2.10367, 18.5878, 0.07", "-147.656, 6.86322, 18.8855, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "28.3752, 73.2928, 17.9288, 0.73", "32.5856, 82.2279, 19.4905, 0.73", "37.0688, 90.9451, 21.4682, 0.73", "40.3086, 100.405, 21.5934, 0.73", "45.5348, 108.93, 21.6529, 0.73", "52.032, 116.515, 21.1416, 0.73", "59.5875, 123.02, 21.9167, 0.73", "66.5333, 129.919, 23.9558, 0.73" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "28.3752, 73.2928, 17.9288, 0.15", "32.7633, 82.1133, 19.645, 0.73", "38.3023, 90.4172, 20.249, 0.73", "44.521, 98.2076, 19.4506, 0.73", "51.3134, 105.52, 18.8218, 0.73", "58.3728, 112.569, 19.509, 0.73", "65.1364, 119.741, 21.1861, 0.73", "72.8039, 125.41, 24.1981, 0.73", "80.8047, 129.508, 28.5795, 0.73", "88.3392, 132.297, 34.5337, 0.73", "94.1272, 134.934, 42.2501, 0.73", "98.5354, 137.351, 50.8946, 0.73", "101.726, 138.396, 60.3139, 0.73", "105.943, 140.944, 69.0162, 0.73", "108.656, 141.92, 78.5915, 0.73", "112.624, 142.765, 87.7315, 0.73", "116.707, 143.686, 96.8133, 0.73", "119.868, 143.824, 106.3, 0.73" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "2.78255, -101.381, -5.7978, 0.22", "3.44956, -102.207, -5.57932, 0.22", "3.84813, -102.746, -5.41819, 0.22", "4.08457, -103.098, -5.31654, 0.22", "4.39366, -103.574, -5.22638, 0.22", "4.88553, -104.35, -5.13517, 0.73", "5.41114, -105.166, -5.09539, 0.73", "6.02948, -106.108, -5.17123, 0.29", "6.33192, -106.607, -5.27937, 0.44", "6.85653, -107.553, -5.56871, 0.44", "7.2706, -108.351, -5.89857, 0.15", "7.57134, -108.968, -6.23426, 0.15", "7.96977, -109.832, -6.75576, 0.15", "8.25235, -110.528, -7.20779, 0.8", "8.42365, -111.087, -7.54599, 0.66", "8.59536, -112.041, -8.04904, 0.73", "8.63738, -113.033, -8.59511, 0.15", "8.57407, -113.874, -9.06097, 0.8", "8.40438, -114.789, -9.59105, 0.8", "8.11933, -115.844, -10.2406, 0.22", "7.89747, -116.53, -10.6752, 0.22", "7.48206, -117.781, -11.4296, 0.22", "7.36789, -118.209, -11.6604, 0.22", "7.27177, -118.89, -11.9808, 0.22", "7.29035, -119.45, -12.1662, 0.22", "7.41657, -120.341, -12.4013, 0.73", "7.61574, -121.412, -12.6037, 0.73", "7.82791, -122.439, -12.7281, 0.36", "8.00668, -123.286, -12.8132, 0.29", "8.26844, -124.513, -12.9518, 0.07", "8.44277, -125.392, -13.0913, 0.51", "8.57529, -126.106, -13.2309, 0.51", "8.71127, -126.797, -13.385, 0.15", "8.90814, -127.545, -13.5677, 0.44", "9.36005, -128.695, -13.8881, 0.22", "9.83015, -129.531, -14.1571, 0.07", "10.2363, -130.117, -14.3493, 0.07", "10.692, -130.708, -14.5763, 0.36", "11.1908, -131.333, -14.8309, 0.58", "11.8506, -132.185, -15.175, 0.29", "12.2298, -132.714, -15.3809, 0.07", "12.666, -133.422, -15.6479, 0.36", "13.0932, -134.327, -15.9749, 0.73", "13.2842, -134.937, -16.1757, 0.36", "13.4333, -135.936, -16.473, 0.15", "13.4504, -136.934, -16.7301, 0.22", "13.4248, -137.581, -16.8573, 0.22", "13.3733, -138.238, -16.9573, 0.07", "13.2947, -138.914, -16.9764, 0.44", "13.1701, -139.644, -16.9407, 0.44", "12.8783, -140.988, -16.7772, 0.15", "12.5742, -142.177, -16.5214, 0.15", "12.4278, -142.735, -16.3744, 0.36", "12.0698, -144.199, -15.927, 0.73", "11.8986, -144.974, -15.647, 0.88", "11.8225, -145.374, -15.4799, 0.88", "11.6653, -146.34, -15.0307, 0.07", "11.5939, -147.159, -14.659, 0.07", "11.6594, -147.789, -14.3659, 0.07", "11.8777, -148.296, -14.1275, 0.15", "12.2146, -148.681, -13.9004, 0.15", "12.7494, -149.102, -13.5972, 0.15", "13.1757, -149.376, -13.3319, 0.15", "13.798, -149.783, -12.8919, 0.15", "14.1064, -150.075, -12.6261, 0.15", "14.4706, -150.753, -12.1194, 0.15", "14.6041, -151.388, -11.7031, 0.15", "14.6511, -152.761, -10.9292, 0.15", "14.6166, -153.498, -10.5623, 0.73", "14.4779, -155.25, -9.79259, 0.15", "14.3702, -156.591, -9.27362, 0.15", "14.3149, -157.405, -9.02188, 0.15", "14.2904, -158.426, -8.81492, 0.44", "14.3183, -159.439, -8.71579, 0.44", "14.3971, -160.215, -8.73673, 0.44", "14.5953, -161.223, -8.88704, 0.29", "14.9514, -162.724, -9.2527, 0.22", "15.1679, -163.659, -9.51676, 0.66", "15.4221, -164.909, -9.91829, 0.88", "15.7213, -166.86, -10.585, 0.22", "15.8431, -167.968, -10.9531, 0.22", "15.9, -168.603, -11.1441, 0.22", "16.0251, -169.927, -11.4157, 0.22", "16.1359, -171.032, -11.4838, 0.44", "16.2304, -171.985, -11.4147, 0.66", "16.2804, -172.787, -11.2397, 0.44", "16.3205, -173.992, -10.911, 0.36", "16.3652, -175.395, -10.4455, 0.51", "16.4339, -176.53, -10.0036, 0.29", "16.521, -177.369, -9.64566, 0.22", "16.6768, -178.457, -9.19346, 0.22", "16.7647, -179.002, -8.98543, 0.22", "16.9038, -179.763, -8.77761, 0.22", "17.0594, -180.521, -8.68576, 0.15", "17.2954, -181.519, -8.66664, 0.73", "17.4871, -182.223, -8.67212, 0.8", "17.6229, -182.696, -8.68966, 0.8", "17.874, -183.748, -8.69679, 0.22", "17.9999, -184.48, -8.68469, 0.22", "18.0655, -185.45, -8.65403, 0.15", "18.048, -186.232, -8.62967, 0.15", "18.0044, -186.757, -8.62511, 0.51", "17.8735, -187.764, -8.63332, 0.51", "17.7541, -188.494, -8.64437, 0.07", "17.6064, -189.468, -8.73943, 0.22", "17.548, -190.043, -8.84397, 0.07", "17.5528, -190.703, -9.01098, 0.22", "17.6623, -191.419, -9.22098, 0.22", "17.8097, -191.89, -9.34913, 0.07", "18.1081, -192.598, -9.51976, 0.44", "18.4672, -193.23, -9.62405, 0.51", "19.0654, -194.089, -9.71225, 0.36", "19.4085, -194.495, -9.72526, 0.07", "20.0953, -195.147, -9.72202, 0.15" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "2.78255, -101.381, -5.7978, 0.29", "2.08282, -102.527, -6.02568, 0.29", "1.84176, -102.859, -6.09841, 0.29", "1.24709, -103.551, -6.25662, 0.29", "0.456389, -104.332, -6.43149, 0.29", "-0.484316, -105.214, -6.59958, 0.29", "-1.11797, -105.84, -6.69897, 0.51", "-1.72355, -106.504, -6.75532, 0.15", "-2.169, -106.991, -6.76124, 0.15", "-2.88193, -107.754, -6.69401, 0.29", "-3.34044, -108.228, -6.61631, 0.15", "-3.93918, -108.881, -6.44243, 0.29", "-4.53981, -109.576, -6.25948, 0.15", "-4.90922, -110.003, -6.15116, 0.15", "-5.45171, -110.595, -6.00461, 0.44", "-6.20613, -111.345, -5.80145, 0.73", "-6.96923, -112.026, -5.61601, 0.44", "-7.48079, -112.468, -5.48855, 0.44", "-8.53106, -113.432, -5.23094, 0.15", "-8.98441, -113.902, -5.10125, 0.15", "-9.4601, -114.476, -4.94556, 0.15", "-9.79746, -114.993, -4.80782, 0.15", "-10.3213, -116.007, -4.5658, 0.15", "-10.595, -116.686, -4.45777, 0.15", "-10.7548, -117.179, -4.41863, 0.58", "-10.9446, -117.789, -4.41037, 0.88", "-11.151, -118.418, -4.4617, 0.95", "-11.5253, -119.4, -4.61598, 0.36", "-11.913, -120.213, -4.83111, 0.15", "-12.151, -120.657, -4.97173, 0.15", "-12.3039, -120.939, -5.05165, 0.15", "-12.573, -121.455, -5.16572, 0.15", "-12.7715, -121.876, -5.2197, 0.15", "-13.0468, -122.556, -5.2246, 0.15", "-13.4215, -123.549, -5.14145, 0.15", "-13.7564, -124.452, -5.03366, 0.15", "-14.1045, -125.408, -4.87274, 0.15", "-14.3539, -126.132, -4.70525, 0.51", "-14.6376, -127.052, -4.48445, 0.66", "-14.8049, -127.648, -4.35536, 0.8", "-15.1175, -128.756, -4.17798, 0.29", "-15.3217, -129.463, -4.12379, 0.29", "-15.6197, -130.39, -4.11216, 0.07", "-15.96, -131.243, -4.19597, 0.22", "-16.3256, -131.999, -4.37526, 0.22", "-16.6041, -132.491, -4.53738, 0.22", "-16.7489, -132.724, -4.63227, 0.22", "-17.2291, -133.462, -4.94009, 0.44", "-17.6998, -134.174, -5.21853, 0.44", "-18.1509, -134.871, -5.43981, 0.51", "-18.6281, -135.729, -5.64415, 0.73", "-19.2448, -137.04, -5.8876, 0.15", "-19.7377, -138.22, -6.09557, 0.15", "-19.9081, -138.633, -6.18179, 0.51", "-20.1737, -139.219, -6.31703, 0.66", "-20.7862, -140.284, -6.60527, 0.22", "-21.307, -140.957, -6.85808, 0.22", "-21.9303, -141.541, -7.14342, 0.22", "-23.1808, -142.481, -7.70209, 0.95", "-23.66, -142.816, -7.92003, 0.73", "-24.5892, -143.447, -8.36415, 0.07", "-25.3189, -143.933, -8.70766, 0.44", "-26.0143, -144.447, -9.01642, 0.44", "-26.3698, -144.754, -9.16204, 0.44", "-27.1422, -145.506, -9.46364, 0.29", "-27.8597, -146.212, -9.76871, 0.44", "-28.4739, -146.785, -10.0473, 0.44", "-29.1975, -147.386, -10.3584, 0.22", "-29.842, -147.853, -10.6309, 0.07", "-30.7433, -148.435, -10.9838, 0.22", "-31.4977, -148.915, -11.2417, 0.22", "-32.1695, -149.392, -11.4527, 0.07", "-32.5632, -149.743, -11.5761, 0.07", "-33.0491, -150.334, -11.7195, 0.88", "-33.4491, -151.089, -11.8194, 0.88", "-33.86, -152.529, -11.9065, 0.22", "-33.9679, -153.261, -11.9226, 0.29", "-34.0268, -154.108, -11.9044, 0.22", "-34.0527, -154.86, -11.873, 0.58", "-34.0555, -155.7, -11.8221, 0.29", "-34.0521, -156.659, -11.7342, 0.15", "-34.0534, -157.485, -11.6195, 0.22", "-34.1172, -158.294, -11.4746, 0.58", "-34.2545, -158.894, -11.3808, 0.58", "-34.4657, -159.449, -11.2711, 0.29", "-34.834, -160.201, -11.1079, 0.22", "-35.0644, -160.622, -11.0132, 0.22", "-35.5338, -161.425, -10.8386, 0.07", "-36.389, -162.826, -10.5785, 0.29", "-37.1557, -164.005, -10.3498, 0.22", "-37.6498, -164.664, -10.2218, 0.58" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "41.6764, -189.65, 5.78673, 0.07", "42.0232, -190.672, 6.16476, 0.07", "42.2113, -191.363, 6.34704, 0.29", "42.4256, -192.416, 6.53625, 0.29", "42.6376, -193.866, 6.72221, 0.07", "42.6827, -194.387, 6.76248, 0.07", "42.7119, -195.451, 6.80943, 0.29", "42.562, -196.57, 6.78389, 0.22", "42.3184, -197.394, 6.69229, 0.44", "42.0664, -197.954, 6.56845, 0.51", "41.7191, -198.595, 6.35962, 0.07", "41.4753, -199.026, 6.2183, 0.29", "41.1642, -199.607, 6.02197, 0.07", "40.9384, -200.081, 5.89252, 0.07", "40.6265, -200.817, 5.72334, 0.44", "40.4481, -201.302, 5.63532, 0.44", "40.3196, -201.745, 5.57929, 0.44", "40.1245, -202.756, 5.49099, 0.15", "40.0746, -203.284, 5.48399, 0.15", "40.0651, -203.964, 5.5498, 0.15", "40.1085, -204.55, 5.64595, 0.36", "40.1968, -205.06, 5.73409, 0.36", "40.4947, -206.276, 5.92218, 0.15", "40.7691, -207.236, 6.04421, 0.15", "41.0449, -208.139, 6.09999, 1.02", "41.3884, -209.234, 6.08809, 0.73", "41.6943, -210.209, 6.02718, 0.51", "41.9686, -211.102, 5.93395, 0.29", "42.2161, -211.886, 5.81736, 0.15", "42.5458, -212.889, 5.58619, 0.15", "42.765, -213.534, 5.41482, 0.29", "43.081, -214.381, 5.19606, 0.51", "43.3671, -215.064, 5.02851, 0.66", "43.9, -216.181, 4.80511, 0.36", "44.6255, -217.58, 4.59032, 0.22", "45.0746, -218.435, 4.49715, 0.58", "45.3421, -218.941, 4.44478, 0.58", "45.7375, -219.657, 4.31936, 0.51", "46.2016, -220.431, 4.13315, 0.22", "46.7375, -221.159, 3.88903, 0.22", "47.2856, -221.634, 3.62447, 0.22", "48.0294, -221.954, 3.17297, 0.22", "49.2118, -222.213, 2.39307, 0.22", "49.6555, -222.267, 2.1036, 0.51", "50.684, -222.392, 1.49045, 0.73", "51.557, -222.496, 1.04598, 0.29", "52.385, -222.613, 0.691051, 0.15", "52.9249, -222.7, 0.51394, 0.15", "53.9096, -222.887, 0.238461, 0.29", "55.2429, -223.171, -0.141051, 0.29", "56.1163, -223.388, -0.37706, 0.29", "57.187, -223.674, -0.681523, 0.29", "58.1468, -223.935, -0.99206, 0.51", "59.1408, -224.208, -1.37674, 0.66", "59.7005, -224.359, -1.63749, 0.66", "60.4139, -224.574, -2.02573, 0.44", "61.222, -224.89, -2.49024, 0.22", "61.9703, -225.227, -2.92061, 0.58", "62.7781, -225.581, -3.36019, 0.36", "63.4174, -225.816, -3.63715, 0.29", "64.1708, -226.018, -3.8887, 0.29", "64.9476, -226.108, -4.05223, 0.22", "65.764, -226.088, -4.19856, 0.36", "66.8587, -225.961, -4.3683, 0.51", "67.8372, -225.818, -4.39968, 0.07", "68.3484, -225.763, -4.37684, 0.22", "69.1751, -225.712, -4.30626, 0.44", "71.2046, -225.722, -4.10546, 0.29", "72.5108, -225.857, -3.97105, 0.22", "74.5144, -226.23, -3.77887, 0.36", "75.6749, -226.512, -3.72105, 0.22", "76.3254, -226.685, -3.69368, 0.73", "77.0618, -226.893, -3.69306, 0.73", "78.2116, -227.198, -3.74208, 0.44", "79.3561, -227.457, -3.94254, 0.15", "80.5005, -227.661, -4.27487, 0.15", "81.4223, -227.783, -4.56867, 0.8", "82.7141, -227.916, -5.00064, 0.29", "83.8759, -227.999, -5.39114, 0.15", "84.5534, -228.024, -5.61203, 0.15", "85.2752, -228.011, -5.80148, 0.58", "86.0997, -227.957, -5.90288, 0.8", "86.6285, -227.905, -5.88946, 0.8", "87.727, -227.743, -5.71613, 0.44", "88.3741, -227.65, -5.59516, 0.22", "89.5044, -227.528, -5.47353, 0.07", "90.5528, -227.493, -5.48303, 0.15", "91.214, -227.523, -5.56583, 0.07", "92.2113, -227.638, -5.77982, 0.8", "93.3455, -227.816, -6.08609, 0.58", "94.4738, -227.993, -6.39354, 0.58", "95.3711, -228.116, -6.66475, 0.36", "96.1489, -228.183, -6.8916, 0.22", "96.7986, -228.204, -7.04126, 0.36", "98.1005, -228.182, -7.25809, 0.36", "99.6173, -228.119, -7.44875, 0.07", "100.787, -228.077, -7.57114, 0.58", "101.777, -228.066, -7.6809, 0.15", "102.897, -228.117, -7.80846, 0.07", "103.571, -228.197, -7.88491, 0.07", "104.698, -228.466, -8.00321, 0.29", "105.428, -228.777, -8.02782, 0.29", "105.823, -229.028, -8.00228, 0.07", "106.289, -229.433, -7.93395, 0.29", "106.675, -229.852, -7.84458, 0.07", "107.33, -230.648, -7.64018, 0.29", "108.088, -231.622, -7.35298, 0.07", "108.542, -232.19, -7.16829, 0.66", "108.954, -232.655, -6.99965, 0.66", "109.401, -233.056, -6.83428, 0.07", "109.678, -233.219, -6.77732, 0.07", "110.029, -233.335, -6.79954, 0.07", "110.613, -233.483, -6.92126, 0.22", "111.249, -233.659, -7.08724, 0.07", "111.987, -233.907, -7.31196, 0.58", "112.935, -234.311, -7.61721, 0.58", "114.219, -234.976, -8.03401, 0.15", "114.982, -235.446, -8.23238, 0.66", "116.166, -236.322, -8.44805, 0.07", "117.063, -237.092, -8.53522, 0.07", "117.679, -237.686, -8.52308, 0.07", "118.12, -238.135, -8.48897, 0.29", "119.202, -239.212, -8.37971, 0.15", "119.826, -239.816, -8.36403, 0.58", "120.216, -240.164, -8.38399, 0.58", "121.235, -240.963, -8.51613, 0.07", "122.563, -241.891, -8.79256, 0.07", "123.341, -242.402, -8.99862, 0.07", "124.257, -242.954, -9.28005, 0.07", "125.416, -243.612, -9.62026, 0.29", "126.164, -244.055, -9.81217, 0.07", "126.563, -244.316, -9.89345, 0.66", "127.519, -245.039, -9.99081, 0.66", "128.243, -245.69, -10.0375, 0.07", "128.482, -245.926, -10.0426, 0.07", "129.035, -246.534, -10.067, 0.36", "129.467, -247.04, -10.0938, 0.36", "130.006, -247.697, -10.1589, 0.15", "130.492, -248.329, -10.2428, 0.15", "131.115, -249.117, -10.3825, 0.36", "131.428, -249.471, -10.456, 0.07", "131.956, -250.036, -10.5516, 0.36", "132.755, -250.895, -10.6598, 0.07", "133.151, -251.337, -10.7107, 0.07", "134.042, -252.398, -10.8178, 0.29", "134.521, -252.982, -10.8505, 0.44", "135.368, -254.027, -10.8728, 0.07", "135.947, -254.744, -10.8891, 0.07", "136.433, -255.354, -10.8978, 0.07", "136.898, -255.936, -10.9147, 0.66", "137.675, -256.932, -10.9542, 0.66", "138.493, -257.939, -11.0485, 0.07", "139.222, -258.758, -11.1718, 0.07", "139.827, -259.416, -11.2725, 0.36", "140.435, -260.06, -11.3638, 0.15", "140.924, -260.527, -11.4388, 0.36", "141.652, -261.183, -11.5815, 0.07", "142.309, -261.704, -11.7284, 0.29", "142.722, -262.015, -11.8201, 0.29", "143.388, -262.497, -11.9961, 0.07", "144.149, -263.046, -12.16, 0.29", "144.698, -263.455, -12.2511, 0.07", "145.651, -264.191, -12.3549, 0.36", "146.341, -264.764, -12.4079, 0.07", "147.184, -265.554, -12.4368, 0.22", "148.103, -266.533, -12.4678, 0.07", "148.52, -267.018, -12.4767, 0.07", "148.97, -267.517, -12.5074, 0.36", "149.445, -267.989, -12.583, 0.36", "150.539, -268.949, -12.92, 0.15", "151.235, -269.511, -13.2281, 0.15", "151.951, -270.028, -13.6115, 0.44", "153.054, -270.689, -14.1801, 0.07", "153.887, -271.117, -14.5558, 0.29", "154.495, -271.385, -14.7715, 0.07", "154.948, -271.56, -14.8782, 0.07", "156.011, -271.977, -14.9676, 0.36", "156.889, -272.344, -14.9074, 0.36", "157.78, -272.762, -14.7416, 0.07", "158.437, -273.079, -14.5919, 0.07", "159.326, -273.476, -14.3842, 0.36", "160.099, -273.805, -14.2191, 0.36", "161.507, -274.421, -13.9113, 0.07", "162.683, -274.945, -13.6677, 0.29", "163.592, -275.354, -13.5016, 0.07", "164.508, -275.798, -13.3479, 0.36", "165.538, -276.346, -13.1735, 0.36", "167.195, -277.329, -12.9085, 0.07", "167.747, -277.689, -12.8042, 0.22", "168.258, -278.047, -12.7192, 0.07", "169.061, -278.673, -12.5745, 0.36", "169.334, -278.918, -12.5237, 0.36", "169.881, -279.478, -12.4354, 0.07", "170.509, -280.211, -12.4286, 0.07", "171.7, -281.694, -12.4333, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "41.6764, -189.65, 5.78673, 0.07", "41.5638, -190.263, 6.14991, 0.07", "41.4476, -190.84, 6.45554, 0.29", "41.1591, -192.283, 7.16185, 0.07", "40.9349, -193.446, 7.68999, 0.29", "40.8069, -194.061, 7.95375, 0.07", "40.6422, -194.774, 8.27144, 0.07", "40.4789, -195.379, 8.55243, 0.29", "40.1501, -196.294, 8.97047, 0.15", "39.9299, -196.728, 9.15315, 0.15", "39.6148, -197.15, 9.39742, 0.15", "39.1544, -197.615, 9.77891, 0.15", "38.9072, -197.821, 9.99884, 0.58", "38.5047, -198.151, 10.3966, 0.51", "38.0277, -198.552, 10.9176, 0.51", "37.3512, -199.117, 11.692, 0.15", "36.8919, -199.544, 12.2666, 0.15", "36.5244, -199.956, 12.7635, 0.15", "36.184, -200.445, 13.3414, 0.36", "36.0421, -200.774, 13.7134, 0.36", "33.714, -208.304, 19.8683, 0.36" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "20.0953, -195.147, -9.72202, 0.07", "20.0867, -195.76, -9.75435, 0.07", "20.1028, -196.88, -9.77267, 0.44", "20.1527, -197.816, -9.73937, 0.73", "20.2404, -199.059, -9.66473, 0.15", "20.2982, -199.876, -9.59558, 0.15", "20.3455, -200.683, -9.51689, 0.15", "20.3749, -201.215, -9.43956, 0.29", "20.4308, -202.264, -9.21099, 0.15", "20.4621, -202.69, -9.10525, 0.15", "20.5488, -203.25, -8.97474, 0.15", "20.6566, -203.788, -8.84139, 0.36", "20.7933, -204.275, -8.7213, 0.15", "20.9961, -204.793, -8.5963, 0.15", "21.208, -205.188, -8.51455, 0.15", "21.6996, -205.931, -8.37874, 0.66", "21.8525, -206.139, -8.3433, 0.66", "22.4485, -206.931, -8.21369, 0.36", "22.8459, -207.503, -8.13208, 0.36", "23.385, -208.402, -8.03332, 0.22", "23.6726, -209.009, -7.98379, 0.22", "23.8808, -209.541, -7.94153, 0.07", "24.1084, -210.191, -7.88799, 0.07", "24.3679, -210.97, -7.82369, 1.02", "24.6188, -211.68, -7.78231, 0.66", "24.9599, -212.607, -7.78859, 0.07", "25.1593, -213.114, -7.82494, 0.07", "25.3512, -213.596, -7.88858, 0.22", "25.6294, -214.361, -7.98034, 0.07", "25.8637, -215.159, -8.05968, 0.07", "25.9809, -216.015, -8.07871, 0.58", "25.9463, -216.756, -8.0375, 0.58", "25.8192, -217.53, -7.96948, 0.15", "25.5786, -218.629, -7.90234, 0.15", "25.4249, -219.293, -7.89539, 0.29", "25.2102, -220.413, -7.92161, 0.88", "25.0512, -221.903, -8.06758, 0.51", "25.0374, -223.094, -8.28165, 0.29", "25.132, -224.394, -8.59923, 0.22", "25.2995, -225.763, -9.01227, 0.22", "25.4306, -226.717, -9.32741, 0.36", "25.6196, -228.22, -9.87776, 0.22", "25.6807, -229.031, -10.1599, 0.07", "25.6754, -229.812, -10.3871, 0.07", "25.597, -230.43, -10.5258, 0.44", "25.394, -231.297, -10.6254, 0.44", "25.1929, -232.042, -10.7355, 0.22", "24.9111, -233.196, -10.9251, 0.07", "24.8677, -233.498, -10.9812, 0.22", "24.854, -234.732, -11.2519, 0.07", "24.9959, -236.208, -11.6428, 0.22", "25.3407, -238.152, -12.2165, 0.22", "25.4918, -238.859, -12.4527, 0.73", "25.6878, -239.911, -12.8353, 0.36", "25.7431, -240.58, -13.0736, 0.36", "25.6871, -241.429, -13.3419, 0.07", "25.611, -241.784, -13.4413, 0.07", "25.394, -242.408, -13.5235, 0.07", "24.9991, -243.338, -13.6083, 0.44", "24.5682, -244.297, -13.6939, 0.44", "24.1403, -245.284, -13.7814, 0.22", "23.8026, -246.149, -13.8584, 0.22", "23.557, -246.879, -13.9399, 0.22", "23.4132, -247.386, -14.0032, 0.22", "23.1991, -248.295, -14.1531, 0.22", "22.9322, -249.288, -14.3575, 0.22", "22.841, -249.6, -14.4415, 0.22", "22.7178, -250.013, -14.5624, 0.22", "22.5841, -250.548, -14.693, 0.22", "22.4032, -251.284, -14.7985, 0.36", "22.2422, -251.893, -14.8291, 0.07", "22.0957, -252.469, -14.8296, 0.07", "21.8974, -253.35, -14.8296, 0.51", "21.7367, -254.368, -14.8296, 0.73", "21.6261, -255.623, -14.8296, 0.07", "21.6131, -256.205, -14.8413, 0.07", "21.6423, -256.794, -14.8622, 0.07", "21.7255, -257.533, -14.8976, 0.07", "21.8433, -258.26, -14.9394, 0.07", "22.0567, -259.348, -15.0355, 0.58", "22.2683, -260.202, -15.1314, 0.58", "22.5244, -261.122, -15.2735, 0.66", "22.8051, -262.058, -15.4513, 0.44", "23.0102, -262.67, -15.5871, 0.07", "23.2445, -263.304, -15.7407, 0.07", "23.4209, -263.71, -15.8474, 0.22", "23.7539, -264.469, -16.0692, 0.07", "23.974, -264.974, -16.2338, 0.22", "24.2102, -265.487, -16.4113, 0.22", "24.5368, -266.136, -16.6348, 0.07", "25.0665, -267.133, -16.9452, 0.44", "25.4116, -267.773, -17.1417, 0.66", "25.6409, -268.244, -17.2679, 0.66" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "20.0953, -195.147, -9.72202, 0.07", "20.6114, -194.856, -11.3705, 0.07", "20.8439, -194.645, -12.3345, 0.22", "21.0435, -194.367, -13.4491, 0.07", "21.1679, -194.125, -14.3108, 0.07", "21.2625, -193.742, -15.5767, 0.51", "21.2709, -193.629, -15.9378, 0.73", "21.0989, -193.127, -17.2115, 0.07", "20.9225, -192.895, -17.7721, 0.36", "20.615, -192.687, -18.3293, 0.36", "19.9181, -192.327, -19.3429, 0.07", "19.7303, -192.258, -19.5674, 0.07", "19.0109, -192.043, -20.3645, 0.29", "18.4707, -191.915, -20.8739, 0.07", "17.6488, -191.787, -21.5336, 0.22" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-37.6498, -164.664, -10.2218, 0.07", "-37.9574, -164.905, -9.9337, 0.07", "-38.9769, -165.74, -9.13008, 0.22", "-39.3554, -166.068, -8.86869, 0.58", "-39.6082, -166.281, -8.71113, 0.58", "-40.3542, -166.871, -8.30988, 0.29", "-41.0354, -167.392, -8.03623, 0.07", "-41.5002, -167.746, -7.97895, 0.07", "-41.9289, -168.06, -8.04266, 0.66", "-42.1908, -168.257, -8.1138, 0.66", "-42.7706, -168.703, -8.32948, 0.07", "-43.5262, -169.34, -8.68379, 0.29", "-44.2542, -170.03, -9.07545, 0.07", "-44.7254, -170.519, -9.36911, 0.51", "-45.0527, -170.864, -9.58104, 0.51", "-45.6361, -171.493, -9.96613, 0.22", "-46.3245, -172.223, -10.4128, 0.07", "-47.0214, -172.921, -10.8186, 0.73", "-47.7796, -173.646, -11.2321, 0.44", "-48.3768, -174.17, -11.558, 0.07", "-48.8052, -174.512, -11.7875, 0.07", "-49.147, -174.764, -11.9612, 0.07", "-49.5607, -175.043, -12.1634, 0.07", "-49.9531, -175.308, -12.3265, 0.07", "-50.2866, -175.535, -12.4509, 0.51", "-50.5531, -175.698, -12.5741, 0.51", "-51.1868, -176.042, -12.91, 0.73", "-52.3431, -176.612, -13.569, 0.07", "-52.9431, -176.864, -13.9133, 0.66", "-53.6279, -177.093, -14.297, 0.8", "-55.1043, -177.491, -15.0817, 0.07", "-55.8438, -177.629, -15.4352, 0.07", "-56.1102, -177.657, -15.5462, 0.07", "-56.8762, -177.671, -15.8092, 0.07", "-57.4664, -177.652, -15.9991, 0.8", "-58.0956, -177.619, -16.2078, 0.8", "-59.2278, -177.536, -16.5331, 0.07", "-59.6725, -177.494, -16.6622, 0.29", "-60.6625, -177.4, -16.9849, 0.07", "-61.5843, -177.313, -17.339, 0.29", "-62.9691, -177.197, -17.9588, 0.07" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-37.6498, -164.664, -10.2218, 0.07", "-37.8104, -165.755, -10.6386, 0.07", "-37.9553, -166.872, -11.0272, 0.36", "-38.0238, -167.727, -11.2781, 0.07", "-38.0835, -168.563, -11.5095, 0.07", "-38.105, -168.941, -11.6152, 0.07", "-38.1377, -169.547, -11.7846, 0.44", "-38.1626, -170.067, -11.9106, 0.22", "-38.1994, -171.123, -12.1304, 0.15", "-38.2449, -171.914, -12.2779, 0.15", "-38.3329, -172.969, -12.4426, 0.15", "-38.4407, -173.884, -12.568, 0.15", "-38.5632, -174.613, -12.658, 0.66", "-38.8167, -175.618, -12.7666, 1.02", "-39.2985, -177.06, -12.899, 0.07", "-39.6931, -178.014, -12.9634, 0.07", "-39.9952, -178.616, -12.979, 0.22", "-40.2791, -179.124, -12.9806, 0.22", "-40.6696, -179.822, -13.0121, 0.07", "-40.8883, -180.231, -13.0603, 0.07", "-41.2693, -181.033, -13.211, 0.51", "-41.7031, -182.066, -13.4478, 0.07", "-41.8574, -182.482, -13.5519, 0.07", "-42.3052, -183.704, -13.8702, 0.29", "-42.5851, -184.459, -14.0646, 0.07", "-42.8316, -185.026, -14.1983, 0.07", "-43.2178, -185.759, -14.3365, 0.36", "-43.3638, -185.971, -14.3776, 0.36", "-43.8255, -186.515, -14.4377, 0.15", "-44.2722, -186.97, -14.4602, 0.07", "-45.1377, -187.831, -14.496, 0.51", "-45.6328, -188.348, -14.5448, 0.51", "-46.299, -189.137, -14.6453, 0.22", "-46.8799, -189.905, -14.7129, 0.51", "-47.6889, -191.084, -14.7985, 0.22", "-48.2144, -191.868, -14.8609, 0.07", "-48.5916, -192.456, -14.9125, 0.07", "-49.225, -193.549, -15.0114, 0.29", "-49.7748, -194.658, -15.0421, 0.07", "-50.1886, -195.671, -15.0671, 0.29" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "25.6409, -268.244, -17.2679, 0.07", "26.1192, -269.141, -16.5612, 0.07", "26.4272, -269.677, -16.1296, 0.15", "26.78, -270.322, -15.5954, 0.07", "27.1699, -271.101, -14.9767, 0.36", "27.4571, -271.687, -14.5387, 0.36", "27.7009, -272.17, -14.194, 0.36", "28.2149, -273.053, -13.6457, 0.07", "28.7922, -273.998, -13.1221, 0.07", "29.0789, -274.475, -12.8873, 0.07", "29.3805, -275.032, -12.6368, 0.07", "29.5699, -275.418, -12.4692, 0.36", "30.1226, -276.514, -12.0335, 0.07", "30.4545, -277.067, -11.8149, 0.07", "30.6968, -277.395, -11.6481, 0.07", "31.2337, -278.043, -11.1665, 0.07", "31.407, -278.245, -10.9628, 0.07", "31.8394, -278.726, -10.3624, 0.29", "32.2906, -279.214, -9.68732, 0.07", "32.6549, -279.644, -9.10952, 0.36", "33.2189, -280.331, -8.23122, 0.15", "33.7526, -280.987, -7.42183, 0.07", "34.4056, -281.815, -6.42542, 0.66", "34.8578, -282.399, -5.76193, 0.07", "35.4863, -283.222, -4.90865, 0.07", "35.6846, -283.484, -4.64517, 0.07", "36.0486, -283.95, -4.14468, 0.07", "36.3202, -284.286, -3.75294, 0.07", "36.705, -284.704, -3.15366, 0.07", "37.1663, -285.116, -2.40258, 0.29", "37.6012, -285.413, -1.66029, 0.07", "37.9466, -285.681, -0.897015, 0.07", "38.0688, -285.844, -0.413294, 0.07", "38.0904, -286.113, 0.58058, 0.29" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "25.6409, -268.244, -17.2679, 0.15", "26.2204, -269.454, -17.7096, 0.15", "26.5413, -270.093, -17.9495, 0.07", "26.8593, -270.714, -18.2381, 0.58", "27.1697, -271.322, -18.5334, 0.58", "27.6581, -272.279, -19.0101, 0.29", "28.0438, -273.005, -19.3391, 0.51", "28.5359, -273.816, -19.656, 0.36", "29.1646, -274.805, -20.0974, 0.07", "29.472, -275.303, -20.33, 0.07", "29.8405, -275.986, -20.6321, 0.58", "30.2844, -276.999, -21.0119, 0.29", "30.7259, -278.215, -21.4115, 0.07", "31.2784, -279.801, -21.8374, 0.07", "31.4601, -280.323, -21.9525, 0.07", "31.8032, -281.301, -22.188, 0.51", "32.1771, -282.317, -22.444, 0.36", "32.5692, -283.287, -22.7111, 0.15", "32.955, -284.066, -22.8567, 0.07", "33.2106, -284.49, -22.8863, 0.07", "33.5412, -284.908, -22.9213, 0.07", "34.0844, -285.386, -22.9741, 0.07", "34.7034, -285.765, -23.033, 0.07", "35.3617, -286.081, -23.0931, 0.29" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-50.1886, -195.671, -15.0671, 0.07", "-51.0778, -196.227, -14.6842, 0.07", "-51.6957, -196.715, -14.3904, 0.07", "-52.315, -197.333, -14.0751, 0.44", "-52.605, -197.652, -13.9293, 0.44", "-53.7306, -198.953, -13.4041, 0.07", "-54.1141, -199.391, -13.2278, 0.07", "-54.6865, -200.063, -12.9157, 0.07", "-55.1495, -200.588, -12.6329, 0.29", "-55.4578, -200.929, -12.4575, 0.51", "-55.9758, -201.472, -12.2225, 0.51", "-56.7118, -202.216, -12.024, 0.07", "-57.2448, -202.72, -11.8908, 0.07", "-57.6328, -203.077, -11.8152, 0.07", "-57.9699, -203.385, -11.7813, 0.07", "-58.3145, -203.711, -11.7868, 0.07", "-58.8019, -204.177, -11.7973, 0.07", "-59.0431, -204.427, -11.8062, 0.29", "-59.5067, -204.943, -11.8086, 0.07", "-60.0594, -205.561, -11.777, 0.36", "-60.7441, -206.346, -11.7215, 0.36", "-61.5827, -207.234, -11.6163, 0.07", "-62.1734, -207.776, -11.5139, 0.07", "-62.9215, -208.408, -11.382, 0.29", "-63.4248, -208.849, -11.3023, 0.29", "-64.1014, -209.488, -11.2273, 0.07", "-64.7339, -210.129, -11.223, 0.07", "-65.6576, -211.057, -11.3173, 0.51", "-66.223, -211.638, -11.4182, 0.51", "-66.9146, -212.447, -11.5994, 0.07", "-67.3696, -213.096, -11.7939, 0.07", "-67.9157, -214.046, -12.1117, 0.07", "-68.3118, -214.893, -12.4193, 0.22", "-68.6198, -215.659, -12.7068, 0.07", "-69.0577, -216.796, -13.1191, 0.36", "-69.5776, -218.181, -13.6189, 0.07", "-69.7907, -218.85, -13.8623, 0.36", "-69.924, -219.396, -14.0727, 0.36", "-70.1043, -220.244, -14.4103, 0.22", "-70.2556, -220.982, -14.7049, 0.07", "-70.3787, -221.606, -14.9639, 0.66", "-70.5856, -222.853, -15.4509, 0.07", "-70.7424, -224.097, -15.9819, 0.58" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-50.1886, -195.671, -15.0671, 0.07", "-50.1405, -196.961, -15.1431, 0.07", "-50.23, -197.762, -15.1978, 0.07", "-50.3462, -198.271, -15.2428, 0.22", "-50.518, -199.025, -15.3091, 0.07", "-50.6018, -199.393, -15.3415, 0.29", "-50.8603, -200.527, -15.4415, 0.07", "-51.1449, -201.253, -15.5419, 0.29", "-51.4881, -201.917, -15.6678, 0.29" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "35.3617, -286.081, -23.0931, 0.07", "36.4987, -285.573, -23.9938, 0.07", "37.3971, -285.171, -24.7055, 0.58", "37.9814, -284.91, -25.1684, 0.07" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "35.3617, -286.081, -23.0931, 0.07", "35.5747, -286.672, -23.2859, 0.07", "35.8771, -287.457, -23.5774, 0.07", "36.3094, -288.516, -23.9727, 0.58", "36.762, -289.543, -24.3669, 0.07", "37.0426, -290.133, -24.6183, 0.36", "37.2291, -290.524, -24.7853, 0.36", "37.9125, -291.788, -25.3441, 0.07", "38.247, -292.348, -25.5921, 0.07", "38.4572, -292.686, -25.7644, 0.07", "39.0663, -293.777, -26.3293, 0.51" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-70.7424, -224.097, -15.9819, 0.07", "-70.2154, -224.106, -15.9826, 0.07", "-69.0363, -224.126, -15.9842, 0.29", "-68.2324, -224.14, -15.9852, 0.07", "-67.4892, -224.152, -15.9862, 0.22", "-66.7001, -224.166, -15.9873, 0.07", "-65.9702, -224.178, -15.9882, 0.36" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-70.7424, -224.097, -15.9819, 0.07", "-70.9736, -224.986, -15.462, 0.07", "-71.2962, -226.228, -14.7366, 0.66", "-71.5712, -227.286, -14.1183, 0.07", "-71.9392, -228.702, -13.2907, 0.22", "-72.1888, -229.662, -12.7295, 0.07", "-72.4199, -230.552, -12.2098, 0.29" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "39.0663, -293.777, -26.3293, 0.22", "38.6069, -294.481, -26.5748, 0.22", "37.753, -295.644, -27.0226, 0.07", "37.2456, -296.264, -27.2579, 0.07", "36.5638, -297.022, -27.5326, 0.07", "36.0373, -297.577, -27.7196, 0.58", "35.5646, -298.058, -27.8696, 0.73", "34.3481, -299.207, -28.1712, 0.07", "33.5281, -299.941, -28.3166, 0.07", "32.7574, -300.603, -28.4292, 0.36", "31.8694, -301.323, -28.5272, 0.07", "31.166, -301.858, -28.584, 0.29", "29.8926, -302.766, -28.6458, 0.07", "29.1643, -303.281, -28.6533, 0.07", "28.3985, -303.822, -28.6103, 0.66", "27.9652, -304.126, -28.5617, 0.66", "26.9587, -304.848, -28.3987, 0.07", "25.9499, -305.599, -28.1943, 0.07", "25.0369, -306.368, -27.9676, 0.29", "23.8619, -307.567, -27.6364, 0.07", "23.4944, -307.996, -27.5279, 0.29", "22.8488, -308.849, -27.3375, 0.07", "22.5926, -309.24, -27.2818, 0.36", "21.9673, -310.253, -27.2228, 0.07", "21.2951, -311.376, -27.1672, 0.29", "20.7776, -312.282, -27.1497, 0.07", "20.5784, -312.658, -27.1074, 0.07", "20.031, -313.771, -26.8839, 0.22", "19.7393, -314.362, -26.738, 0.22", "18.9862, -315.839, -26.2461, 0.22", "18.7646, -316.347, -26.0185, 0.22", "18.4712, -317.311, -25.4989, 0.07", "18.2907, -318.059, -25.0001, 0.07" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "39.0663, -293.777, -26.3293, 0.07", "39.9025, -294.546, -26.4406, 0.07", "40.2823, -294.831, -26.4783, 0.07", "40.7494, -295.096, -26.5463, 0.07", "41.126, -295.287, -26.6291, 0.07", "41.7216, -295.57, -26.7723, 0.22", "42.1886, -295.799, -26.8834, 0.07", "42.7647, -296.103, -27.0094, 0.29", "43.6618, -296.623, -27.1976, 0.07", "44.3424, -297.036, -27.3502, 0.29", "44.8516, -297.371, -27.4651, 0.29", "45.6052, -297.9, -27.6558, 0.07", "46.6652, -298.682, -27.9672, 0.22", "48.2108, -299.845, -28.4807, 0.07", "48.996, -300.432, -28.75, 0.07", "49.8395, -301.051, -29.0549, 0.8", "50.6596, -301.671, -29.3756, 0.07", "51.3742, -302.225, -29.6808, 0.07", "52.0733, -302.788, -29.9877, 0.07", "52.8, -303.434, -30.3039, 0.22", "53.5332, -304.195, -30.6002, 0.07", "54.3415, -305.16, -30.9019, 0.29", "55.0843, -306.19, -31.1454, 0.07", "55.6414, -307.104, -31.3498, 0.29", "56.0197, -307.835, -31.5143, 0.07", "56.4332, -308.715, -31.727, 0.29", "56.6221, -309.133, -31.8289, 0.29", "57.0967, -310.174, -32.0916, 0.07", "57.5634, -311.222, -32.3443, 0.07", "57.869, -311.839, -32.4944, 0.07", "58.3114, -312.575, -32.676, 0.07", "58.8471, -313.317, -32.8446, 0.07", "59.1486, -313.675, -32.9336, 0.22", "59.4579, -313.984, -33.0216, 0.22", "60.2243, -314.627, -33.2313, 0.07", "60.9335, -315.181, -33.4698, 0.07", "61.9009, -315.937, -33.8583, 0.29", "62.8727, -316.72, -34.2831, 0.15", "63.6273, -317.375, -34.6229, 0.15", "64.3335, -318.033, -34.9538, 0.44", "65.1435, -318.885, -35.3477, 0.07", "65.9524, -319.858, -35.7272, 0.07", "66.4616, -320.555, -35.9439, 0.07", "67.0652, -321.488, -36.1497, 0.36", "67.7196, -322.656, -36.3528, 0.07", "68.0906, -323.412, -36.4592, 0.07", "68.6444, -324.564, -36.5918, 0.29", "69.2532, -325.844, -36.7327, 0.07", "69.7, -326.808, -36.8654, 0.22", "70.1614, -327.806, -37.0178, 0.07", "70.5669, -328.704, -37.156, 0.29", "71.0621, -329.814, -37.3382, 0.29", "71.3776, -330.522, -37.4591, 0.07", "71.8835, -331.616, -37.6406, 0.07", "72.578, -332.97, -37.8519, 0.07", "73.0069, -333.755, -37.9717, 0.07", "73.6177, -334.883, -38.1334, 0.07", "73.9046, -335.432, -38.2, 0.07", "74.4583, -336.429, -38.3065, 0.36", "75.0336, -337.38, -38.3904, 0.07", "75.4196, -338.006, -38.4509, 0.07", "76.0408, -338.992, -38.5531, 0.36", "76.3811, -339.522, -38.6094, 0.07", "76.8089, -340.24, -38.6974, 0.07", "77.3617, -341.241, -38.8241, 0.07", "77.5785, -341.659, -38.8856, 0.36", "78.1452, -342.741, -39.0669, 0.07", "78.9814, -344.288, -39.3618, 0.22", "79.555, -345.352, -39.574, 0.07", "80.0102, -346.153, -39.7366, 0.07", "80.5954, -347.091, -39.9341, 0.36", "81.495, -348.432, -40.206, 0.07", "82.1776, -349.405, -40.3871, 0.29", "82.5949, -349.986, -40.4794, 0.07", "83.3222, -350.999, -40.5975, 0.22", "84.1393, -352.253, -40.703, 0.07", "84.7005, -353.276, -40.7275, 0.07", "85.0587, -354.125, -40.7043, 0.36", "85.4161, -355.266, -40.6758, 0.36", "85.7155, -356.501, -40.6673, 0.07", "85.9632, -357.972, -40.6742, 0.07", "86.1906, -359.823, -40.7341, 0.29", "86.3709, -361.667, -40.8766, 0.07", "86.5008, -363.38, -41.0681, 0.07", "86.5801, -364.902, -41.2794, 0.07", "86.6402, -366.437, -41.5591, 0.29", "86.6534, -367.904, -41.7883, 0.07", "86.6452, -369.481, -42.0694, 0.07", "86.6272, -370.573, -42.2663, 0.07", "86.5742, -372.497, -42.5304, 0.22", "86.4881, -374.064, -42.6923, 0.07", "86.2581, -377.273, -42.9086, 0.44" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_62", "dend_51", "dend_40", "dend_23", "dend_0", "dend_72", "dend_63", "dend_55", "dend_52", "dend_44", "dend_41", "dend_29", "dend_24", "dend_16", "dend_1", "dend_82", "dend_73", "dend_69", "dend_64", "dend_59", "dend_56", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_33", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_11", "dend_2", "dend_106", "dend_83", "dend_81", "dend_74", "dend_71", "dend_70", "dend_66", "dend_65", "dend_61", "dend_60", "dend_58", "dend_57", "dend_50", "dend_49", "dend_47", "dend_46", "dend_35", "dend_34", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_15", "dend_12", "dend_8", "dend_3", "dend_108", "dend_107", "dend_105", "dend_84", "dend_78", "dend_75", "dend_68", "dend_67", "dend_37", "dend_36", "dend_14", "dend_13", "dend_10", "dend_9", "dend_7", "dend_4", "dend_88", "dend_85", "dend_80", "dend_79", "dend_77", "dend_76", "dend_39", "dend_38", "dend_6", "dend_5", "dend_96", "dend_89", "dend_87", "dend_86", "dend_98", "dend_97", "dend_95", "dend_90", "dend_104", "dend_99", "dend_92", "dend_91", "dend_103", "dend_100", "dend_94", "dend_93", "dend_102", "dend_101" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_62", "dend_51", "dend_40", "dend_23", "dend_0", "dend_72", "dend_63", "dend_55", "dend_52", "dend_44", "dend_41", "dend_29", "dend_24", "dend_16", "dend_1", "dend_82", "dend_73", "dend_69", "dend_64", "dend_59", "dend_56", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_33", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_11", "dend_2", "dend_106", "dend_83", "dend_81", "dend_74", "dend_71", "dend_70", "dend_66", "dend_65", "dend_61", "dend_60", "dend_58", "dend_57", "dend_50", "dend_49", "dend_47", "dend_46", "dend_35", "dend_34", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_15", "dend_12", "dend_8", "dend_3", "dend_108", "dend_107", "dend_105", "dend_84", "dend_78", "dend_75", "dend_68", "dend_67", "dend_37", "dend_36", "dend_14", "dend_13", "dend_10", "dend_9", "dend_7", "dend_4", "dend_88", "dend_85", "dend_80", "dend_79", "dend_77", "dend_76", "dend_39", "dend_38", "dend_6", "dend_5", "dend_96", "dend_89", "dend_87", "dend_86", "dend_98", "dend_97", "dend_95", "dend_90", "dend_104", "dend_99", "dend_92", "dend_91", "dend_103", "dend_100", "dend_94", "dend_93", "dend_102", "dend_101" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_50", "dend_49" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_72", "dend_72", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_50", "dend_50", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_19", "dend_19", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_79", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_103", "dend_103", "dend_103", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_MC_6ed36072e7_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_62, id: dend_62, parent: soma_0
create dend_62
public dend_62
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_72, id: dend_72, parent: dend_62
create dend_72
public dend_72
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_82, id: dend_82, parent: dend_72
create dend_82
public dend_82
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: dend_63
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_106, id: dend_106, parent: dend_82
create dend_106
public dend_106
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_81, id: dend_81, parent: dend_73
create dend_81
public dend_81
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_108, id: dend_108, parent: dend_106
create dend_108
public dend_108
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_105, id: dend_105, parent: dend_83
create dend_105
public dend_105
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_78, id: dend_78, parent: dend_74
create dend_78
public dend_78
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_88, id: dend_88, parent: dend_84
create dend_88
public dend_88
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_96, id: dend_96, parent: dend_88
create dend_96
public dend_96
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_95, id: dend_95, parent: dend_89
create dend_95
public dend_95
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_104, id: dend_104, parent: dend_98
create dend_104
public dend_104
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_92, id: dend_92, parent: dend_90
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_103, id: dend_103, parent: dend_99
create dend_103
public dend_103
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_51, dend_40, dend_23, dend_0, dend_72, dend_63, dend_55, dend_52, dend_44, dend_41, dend_29, dend_24, dend_16, dend_1, dend_82, dend_73, dend_69, dend_64, dend_59, dend_56, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_33, dend_30, dend_26, dend_25, dend_20, dend_17, dend_11, dend_2, dend_106, dend_83, dend_81, dend_74, dend_71, dend_70, dend_66, dend_65, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_47, dend_46, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_15, dend_12, dend_8, dend_3, dend_108, dend_107, dend_105, dend_84, dend_78, dend_75, dend_68, dend_67, dend_37, dend_36, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, dend_88, dend_85, dend_80, dend_79, dend_77, dend_76, dend_39, dend_38, dend_6, dend_5, dend_96, dend_89, dend_87, dend_86, dend_98, dend_97, dend_95, dend_90, dend_104, dend_99, dend_92, dend_91, dend_103, dend_100, dend_94, dend_93, dend_102, dend_101]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_62, dend_51, dend_40, dend_23, dend_0, dend_72, dend_63, dend_55, dend_52, dend_44, dend_41, dend_29, dend_24, dend_16, dend_1, dend_82, dend_73, dend_69, dend_64, dend_59, dend_56, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_33, dend_30, dend_26, dend_25, dend_20, dend_17, dend_11, dend_2, dend_106, dend_83, dend_81, dend_74, dend_71, dend_70, dend_66, dend_65, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_47, dend_46, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_15, dend_12, dend_8, dend_3, dend_108, dend_107, dend_105, dend_84, dend_78, dend_75, dend_68, dend_67, dend_37, dend_36, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, dend_88, dend_85, dend_80, dend_79, dend_77, dend_76, dend_39, dend_38, dend_6, dend_5, dend_96, dend_89, dend_87, dend_86, dend_98, dend_97, dend_95, dend_90, dend_104, dend_99, dend_92, dend_91, dend_103, dend_100, dend_94, dend_93, dend_102, dend_101]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_50, dend_49]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_19, dend_18]}
objref ModelViewParmSubset_6
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_111
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_72, dend_72, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_62(0), soma_0(0.45000037105820845)
    connect dend_51(0), soma_0(0.45000037105820845)
    connect dend_40(0), soma_0(0.45000037105820845)
    connect dend_23(0), soma_0(0.45000037105820845)
    connect dend_0(0), soma_0(0.45000037105820845)
    connect axon_0(0), soma_0(1.0)
    connect dend_72(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_82(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_69(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_106(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_81(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_108(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_105(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_78(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_88(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_96(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_95(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_104(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_92(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_103(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.128252, -10.0998, 0.0, 2.38622 ) }
    soma_0 { pt3dadd( 0.109503, -8.96898, 0.0, 4.19632 ) }
    soma_0 { pt3dadd( 0.0907538, -7.83818, 0.0, 5.2447 ) }
    soma_0 { pt3dadd( 0.0720046, -6.70737, 0.0, 5.96407 ) }
    soma_0 { pt3dadd( 0.0532553, -5.57657, 0.0, 6.60109 ) }
    soma_0 { pt3dadd( 0.0345061, -4.44576, 0.0, 7.17739 ) }
    soma_0 { pt3dadd( 0.0157568, -3.31496, 0.0, 8.06916 ) }
    soma_0 { pt3dadd( -0.00299241, -2.18415, 0.0, 9.01291 ) }
    soma_0 { pt3dadd( -0.0217417, -1.05335, 0.0, 9.57655 ) }
    soma_0 { pt3dadd( -0.0404909, 0.0774534, 0.0, 10.0454 ) }
    soma_0 { pt3dadd( -0.0592402, 1.20826, 0.0, 10.4382 ) }
    soma_0 { pt3dadd( -0.0779894, 2.33906, 0.0, 10.6592 ) }
    soma_0 { pt3dadd( -0.0967387, 3.46987, 0.0, 10.6618 ) }
    soma_0 { pt3dadd( -0.115488, 4.60067, 0.0, 10.6509 ) }
    soma_0 { pt3dadd( -0.134237, 5.73147, 0.0, 10.6539 ) }
    soma_0 { pt3dadd( -0.152986, 6.86228, 0.0, 10.5333 ) }
    soma_0 { pt3dadd( -0.171736, 7.99308, 0.0, 10.0953 ) }
    soma_0 { pt3dadd( -0.190485, 9.12389, 0.0, 9.24504 ) }
    soma_0 { pt3dadd( -0.209234, 10.2547, 0.0, 8.15868 ) }
    soma_0 { pt3dadd( -0.227983, 11.3855, 0.0, 6.02195 ) }
    soma_0 { pt3dadd( -0.246733, 12.5163, 0.0, 3.41269 ) }
    // Section: dend_62, id: dend_62, parent: soma_0 (entry count 21/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -0.0247713, -8.74867, -1.86, 2.48 ) }
    dend_62 { pt3dadd( -0.0572306, -9.89131, -1.51968, 2.48 ) }
    dend_62 { pt3dadd( -0.132031, -12.5245, -0.735432, 1.97 ) }
    dend_62 { pt3dadd( -0.190006, -14.5653, -0.127582, 2.26 ) }
    dend_62 { pt3dadd( -0.243646, -16.4536, 0.434807, 2.85 ) }
    dend_62 { pt3dadd( -0.268316, -17.3219, 0.693461, 2.85 ) }
    dend_62 { pt3dadd( -0.311192, -18.8314, 1.143, 2.99 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 28/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -0.884772, 7.34133, -7.19, 0.8 ) }
    dend_51 { pt3dadd( -1.40053, 7.56305, -7.6428, 0.8 ) }
    dend_51 { pt3dadd( -1.87959, 7.77151, -8.13223, 0.66 ) }
    dend_51 { pt3dadd( -2.56755, 8.13947, -8.99751, 0.66 ) }
    dend_51 { pt3dadd( -2.8779, 8.36925, -9.49167, 0.66 ) }
    dend_51 { pt3dadd( -3.11805, 8.64678, -10.0604, 0.66 ) }
    dend_51 { pt3dadd( -3.26611, 9.15162, -11.0494, 0.66 ) }
    dend_51 { pt3dadd( -3.03398, 9.63885, -11.867, 0.66 ) }
    dend_51 { pt3dadd( -2.48177, 10.1853, -12.6862, 0.66 ) }
    dend_51 { pt3dadd( -1.56974, 10.8021, -13.5808, 0.8 ) }
    dend_51 { pt3dadd( -0.744427, 11.2487, -14.2575, 0.8 ) }
    dend_51 { pt3dadd( 0.496872, 11.8077, -15.2007, 0.8 ) }
    dend_51 { pt3dadd( 1.61791, 12.2127, -16.0257, 0.8 ) }
    dend_51 { pt3dadd( 2.48132, 12.4429, -16.662, 0.8 ) }
    dend_51 { pt3dadd( 3.21596, 12.5295, -17.2926, 0.8 ) }
    dend_51 { pt3dadd( 3.36566, 12.3382, -17.761, 0.8 ) }
    dend_51 { pt3dadd( 3.27129, 11.7928, -18.5052, 0.8 ) }
    dend_51 { pt3dadd( 3.04848, 10.9202, -19.5134, 0.8 ) }
    dend_51 { pt3dadd( 2.89445, 10.2804, -20.1588, 0.8 ) }
    dend_51 { pt3dadd( 2.62969, 9.16864, -21.1383, 0.8 ) }
    dend_51 { pt3dadd( 2.44232, 8.18374, -21.8509, 0.73 ) }
    dend_51 { pt3dadd( 2.31214, 7.0199, -22.5455, 0.73 ) }
    dend_51 { pt3dadd( 2.26943, 5.63711, -23.146, 0.95 ) }
    dend_51 { pt3dadd( 2.2887, 4.65239, -23.4435, 1.17 ) }
    dend_51 { pt3dadd( 2.33307, 3.91408, -23.5915, 1.17 ) }
    dend_51 { pt3dadd( 2.50287, 2.2107, -23.8392, 0.73 ) }
    dend_51 { pt3dadd( 2.53487, 1.98405, -23.8694, 0.51 ) }
    dend_51 { pt3dadd( 2.8262, 0.376885, -24.0326, 1.02 ) }
    dend_51 { pt3dadd( 3.17851, -1.0839, -24.1826, 0.66 ) }
    dend_51 { pt3dadd( 3.5033, -2.16754, -24.3458, 0.51 ) }
    dend_51 { pt3dadd( 4.00253, -3.53633, -24.6338, 0.51 ) }
    dend_51 { pt3dadd( 4.79306, -5.38307, -25.082, 0.51 ) }
    dend_51 { pt3dadd( 5.48357, -6.87464, -25.4631, 0.66 ) }
    dend_51 { pt3dadd( 6.08659, -8.01539, -25.7795, 0.66 ) }
    dend_51 { pt3dadd( 6.73488, -9.13125, -26.0968, 0.66 ) }
    dend_51 { pt3dadd( 7.33007, -10.1379, -26.3821, 0.66 ) }
    dend_51 { pt3dadd( 8.10801, -11.5136, -26.6475, 1.09 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 1.84524, 8.13133, 3.38, 0.66 ) }
    dend_40 { pt3dadd( 1.74146, 8.74706, 3.8778, 0.66 ) }
    dend_40 { pt3dadd( 1.69082, 9.48359, 4.43946, 0.58 ) }
    dend_40 { pt3dadd( 1.71984, 10.3828, 5.07446, 0.58 ) }
    dend_40 { pt3dadd( 1.83333, 11.156, 5.63133, 0.58 ) }
    dend_40 { pt3dadd( 2.04348, 11.8835, 6.21676, 0.8 ) }
    dend_40 { pt3dadd( 2.22841, 12.3874, 6.66054, 1.31 ) }
    dend_40 { pt3dadd( 2.43487, 12.8152, 7.0781, 1.31 ) }
    dend_40 { pt3dadd( 2.85673, 13.5619, 7.92125, 0.51 ) }
    dend_40 { pt3dadd( 3.21803, 14.1089, 8.69622, 0.51 ) }
    dend_40 { pt3dadd( 3.63121, 14.72, 9.82626, 0.51 ) }
    dend_40 { pt3dadd( 3.73401, 14.9376, 10.4184, 0.51 ) }
    dend_40 { pt3dadd( 3.58601, 15.0224, 11.2277, 0.51 ) }
    dend_40 { pt3dadd( 3.20772, 14.9195, 11.8684, 0.51 ) }
    dend_40 { pt3dadd( 2.52129, 14.6542, 12.523, 0.51 ) }
    dend_40 { pt3dadd( 1.96816, 14.4513, 12.9055, 0.51 ) }
    dend_40 { pt3dadd( 1.46349, 14.2691, 13.2069, 0.51 ) }
    dend_40 { pt3dadd( 0.151758, 13.7882, 13.9114, 0.51 ) }
    dend_40 { pt3dadd( -0.770844, 13.4334, 14.3671, 0.44 ) }
    dend_40 { pt3dadd( -1.63986, 13.1243, 14.7357, 0.44 ) }
    dend_40 { pt3dadd( -2.11427, 12.9815, 14.9043, 0.44 ) }
    dend_40 { pt3dadd( -3.08659, 12.6897, 15.2057, 0.58 ) }
    dend_40 { pt3dadd( -3.84446, 12.4359, 15.3732, 0.58 ) }
    dend_40 { pt3dadd( -2.76682, 12.941, 15.3666, 1.09 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.78477, 10.7814, -1.4, 3.72 ) }
    dend_23 { pt3dadd( -2.16863, 11.3155, -1.5448, 3.72 ) }
    dend_23 { pt3dadd( -3.12534, 12.529, -1.73301, 3.36 ) }
    dend_23 { pt3dadd( -3.81497, 13.3579, -1.80217, 2.7 ) }
    dend_23 { pt3dadd( -4.64982, 14.2879, -1.80134, 1.31 ) }
    dend_23 { pt3dadd( -5.45345, 15.1091, -1.75958, 0.73 ) }
    dend_23 { pt3dadd( -6.30809, 15.9123, -1.69492, 0.73 ) }
    dend_23 { pt3dadd( -7.1749, 16.61, -1.58055, 0.95 ) }
    dend_23 { pt3dadd( -8.07019, 17.2229, -1.41292, 0.88 ) }
    dend_23 { pt3dadd( -9.15182, 17.8853, -1.18523, 0.88 ) }
    dend_23 { pt3dadd( -10.1614, 18.4783, -0.982003, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -10.7781, 18.8533, -0.87186, 0.88 ) }
    dend_23 { pt3dadd( -11.7848, 19.5373, -0.715947, 0.73 ) }
    dend_23 { pt3dadd( -12.2384, 19.9125, -0.655182, 0.73 ) }
    dend_23 { pt3dadd( -12.9093, 20.5821, -0.566454, 0.95 ) }
    dend_23 { pt3dadd( -13.4397, 21.2085, -0.506972, 0.95 ) }
    dend_23 { pt3dadd( -14.0001, 21.9552, -0.436919, 1.09 ) }
    dend_23 { pt3dadd( -14.6443, 22.8565, -0.357928, 1.09 ) }
    dend_23 { pt3dadd( -15.342, 23.7863, -0.281443, 0.73 ) }
    dend_23 { pt3dadd( -15.843, 24.3827, -0.243478, 0.73 ) }
    dend_23 { pt3dadd( -16.4968, 25.0651, -0.216744, 0.88 ) }
    dend_23 { pt3dadd( -16.969, 25.4911, -0.207165, 0.8 ) }
    dend_23 { pt3dadd( -17.7821, 26.1472, -0.205421, 0.88 ) }
    dend_23 { pt3dadd( -18.5515, 26.7101, -0.217302, 1.09 ) }
    dend_23 { pt3dadd( -19.6721, 27.4794, -0.185206, 0.73 ) }
    dend_23 { pt3dadd( -20.8879, 28.2766, -0.0959719, 0.73 ) }
    dend_23 { pt3dadd( -21.6252, 28.7064, -0.0120151, 0.73 ) }
    dend_23 { pt3dadd( -22.1497, 28.969, 0.0659223, 0.73 ) }
    dend_23 { pt3dadd( -22.7833, 29.2076, 0.179339, 0.73 ) }
    dend_23 { pt3dadd( -23.8272, 29.4545, 0.386791, 0.73 ) }
    dend_23 { pt3dadd( -24.2875, 29.4818, 0.486016, 0.73 ) }
    dend_23 { pt3dadd( -25.6112, 29.413, 0.79603, 1.31 ) }
    dend_23 { pt3dadd( -25.9053, 29.3822, 0.846317, 1.31 ) }
    dend_23 { pt3dadd( -26.9925, 29.2567, 0.960234, 1.02 ) }
    dend_23 { pt3dadd( -27.8168, 29.1649, 0.979067, 0.66 ) }
    dend_23 { pt3dadd( -28.8053, 29.0867, 0.880162, 0.66 ) }
    dend_23 { pt3dadd( -29.6654, 29.0562, 0.765622, 0.66 ) }
    dend_23 { pt3dadd( -31.0075, 29.104, 0.514049, 0.66 ) }
    dend_23 { pt3dadd( -31.9441, 29.1959, 0.288721, 0.51 ) }
    dend_23 { pt3dadd( -32.6063, 29.3018, 0.100781, 0.51 ) }
    dend_23 { pt3dadd( -33.7098, 29.5434, -0.310359, 0.88 ) }
    dend_23 { pt3dadd( -34.6194, 29.7901, -0.697104, 0.88 ) }
    dend_23 { pt3dadd( -35.5497, 30.0949, -1.08769, 0.88 ) }
    dend_23 { pt3dadd( -36.5715, 30.4823, -1.44117, 0.88 ) }
    dend_23 { pt3dadd( -37.3436, 30.8164, -1.67349, 0.66 ) }
    dend_23 { pt3dadd( -38.7856, 31.5095, -2.02072, 0.51 ) }
    dend_23 { pt3dadd( -39.6474, 31.9352, -2.20883, 0.51 ) }
    dend_23 { pt3dadd( -40.8556, 32.5513, -2.48667, 0.58 ) }
    dend_23 { pt3dadd( -41.8901, 33.1023, -2.66824, 0.73 ) }
    dend_23 { pt3dadd( -43.1008, 33.8055, -2.81849, 0.88 ) }
    dend_23 { pt3dadd( -43.8084, 34.2555, -2.86122, 0.88 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.09477, 10.2313, -0.52, 3.87 ) }
    dend_0 { pt3dadd( -2.71443, 11.5719, -0.496384, 3.87 ) }
    dend_0 { pt3dadd( -3.30138, 12.9431, -0.441272, 2.92 ) }
    dend_0 { pt3dadd( -3.79624, 14.2094, -0.344552, 1.39 ) }
    dend_0 { pt3dadd( -4.31808, 15.6112, -0.146998, 1.09 ) }
    dend_0 { pt3dadd( -4.87217, 17.1635, 0.133436, 1.09 ) }
    dend_0 { pt3dadd( -5.47553, 18.8615, 0.476816, 1.09 ) }
    dend_0 { pt3dadd( -5.79043, 19.7663, 0.706706, 0.88 ) }
    dend_0 { pt3dadd( -6.12691, 20.7316, 1.00365, 0.88 ) }
    dend_0 { pt3dadd( -6.58821, 21.9303, 1.44966, 0.88 ) }
    dend_0 { pt3dadd( -6.88542, 22.5748, 1.72986, 0.88 ) }
    dend_0 { pt3dadd( -7.35962, 23.3589, 2.1409, 0.8 ) }
    dend_0 { pt3dadd( -7.64704, 23.719, 2.34382, 0.8 ) }
    dend_0 { pt3dadd( -8.09115, 24.2085, 2.64375, 0.73 ) }
    dend_0 { pt3dadd( -8.62156, 24.7721, 2.99927, 0.73 ) }
    dend_0 { pt3dadd( -9.19859, 25.3516, 3.35179, 0.73 ) }
    dend_0 { pt3dadd( -9.53423, 25.6742, 3.57828, 0.73 ) }
    dend_0 { pt3dadd( -10.1569, 26.2994, 4.08246, 0.73 ) }
    dend_0 { pt3dadd( -10.5823, 26.7927, 4.49523, 1.02 ) }
    dend_0 { pt3dadd( -11.0011, 27.4459, 5.06791, 1.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 60/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.246733, 12.5163, 0.0, 0.365925 ) }
    axon_0 { pt3dadd( -0.495406, 27.5142, 0.0, 0.365925 ) }
    axon_0 { pt3dadd( -0.744079, 42.5122, 0.0, 0.365925 ) }
    // Section: dend_72, id: dend_72, parent: dend_62 (entry count 63/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.311192, -18.8314, 1.143, 1.82 ) }
    dend_72 { pt3dadd( -1.35573, -19.8928, 1.74484, 1.82 ) }
    dend_72 { pt3dadd( -2.52352, -21.0796, 2.4177, 1.97 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 66/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -0.311192, -18.8314, 1.143, 0.88 ) }
    dend_63 { pt3dadd( 0.968159, -20.3692, 0.370207, 0.88 ) }
    dend_63 { pt3dadd( 1.79819, -21.4823, -0.216797, 0.88 ) }
    dend_63 { pt3dadd( 2.38733, -22.3799, -0.724425, 0.88 ) }
    dend_63 { pt3dadd( 2.87124, -23.2307, -1.20935, 1.02 ) }
    dend_63 { pt3dadd( 3.48906, -24.4876, -1.90767, 0.88 ) }
    dend_63 { pt3dadd( 3.69448, -24.9587, -2.16968, 0.88 ) }
    dend_63 { pt3dadd( 3.85917, -25.5301, -2.53683, 0.88 ) }
    dend_63 { pt3dadd( 3.99478, -26.1793, -2.96805, 0.88 ) }
    dend_63 { pt3dadd( 4.11072, -26.6966, -3.30775, 0.66 ) }
    dend_63 { pt3dadd( 4.34625, -27.2817, -3.72934, 0.66 ) }
    dend_63 { pt3dadd( 4.66371, -27.6453, -4.03789, 0.66 ) }
    dend_63 { pt3dadd( 5.07906, -27.9163, -4.3197, 0.66 ) }
    dend_63 { pt3dadd( 5.69448, -28.1955, -4.65177, 1.09 ) }
    dend_63 { pt3dadd( 6.64615, -28.5621, -5.07179, 1.39 ) }
    dend_63 { pt3dadd( 7.91998, -29.0336, -5.56195, 0.88 ) }
    dend_63 { pt3dadd( 8.77019, -29.3724, -5.85752, 0.88 ) }
    dend_63 { pt3dadd( 9.49615, -29.72, -6.10482, 0.88 ) }
    dend_63 { pt3dadd( 10.0884, -30.0807, -6.31161, 0.88 ) }
    dend_63 { pt3dadd( 10.7939, -30.7246, -6.57798, 0.88 ) }
    dend_63 { pt3dadd( 11.2554, -31.4722, -6.80273, 0.8 ) }
    dend_63 { pt3dadd( 11.5194, -32.352, -7.01601, 0.8 ) }
    dend_63 { pt3dadd( 11.6666, -33.3399, -7.25348, 0.95 ) }
    dend_63 { pt3dadd( 11.7251, -33.9561, -7.39834, 0.95 ) }
    dend_63 { pt3dadd( 11.9121, -35.4398, -7.74914, 0.8 ) }
    dend_63 { pt3dadd( 12.129, -36.5835, -8.02551, 0.8 ) }
    dend_63 { pt3dadd( 12.3788, -37.4907, -8.26081, 0.8 ) }
    dend_63 { pt3dadd( 12.7843, -38.5794, -8.55765, 0.8 ) }
    dend_63 { pt3dadd( 13.4382, -40.0345, -8.95259, 0.8 ) }
    dend_63 { pt3dadd( 14.341, -41.7888, -9.45114, 0.66 ) }
    dend_63 { pt3dadd( 15.0581, -42.9836, -9.80709, 0.66 ) }
    dend_63 { pt3dadd( 15.9238, -44.2907, -10.2159, 0.95 ) }
    dend_63 { pt3dadd( 17.0902, -45.9595, -10.7724, 1.02 ) }
    dend_63 { pt3dadd( 17.582, -46.6539, -11.0119, 1.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 0/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 8.10801, -11.5136, -26.6475, 0.66 ) }
    dend_55 { pt3dadd( 8.19485, -12.351, -26.9185, 0.66 ) }
    dend_55 { pt3dadd( 8.28932, -13.2178, -27.1877, 0.66 ) }
    dend_55 { pt3dadd( 8.34957, -13.9433, -27.3878, 0.66 ) }
    dend_55 { pt3dadd( 8.41805, -14.9792, -27.6164, 0.44 ) }
    dend_55 { pt3dadd( 8.47483, -16.1014, -27.8155, 0.44 ) }
    dend_55 { pt3dadd( 8.49295, -16.924, -27.9615, 0.44 ) }
    dend_55 { pt3dadd( 8.49537, -17.7293, -28.1156, 0.66 ) }
    dend_55 { pt3dadd( 8.45019, -18.8333, -28.3597, 0.66 ) }
    dend_55 { pt3dadd( 8.3735, -19.7524, -28.6126, 0.66 ) }
    dend_55 { pt3dadd( 8.29076, -20.5394, -28.8559, 0.44 ) }
    dend_55 { pt3dadd( 8.19755, -21.3743, -29.1361, 0.15 ) }
    dend_55 { pt3dadd( 8.12818, -22.2311, -29.4368, 0.36 ) }
    dend_55 { pt3dadd( 8.09011, -23.0951, -29.7762, 0.73 ) }
    dend_55 { pt3dadd( 8.09569, -23.7236, -30.0473, 0.73 ) }
    dend_55 { pt3dadd( 8.13456, -24.7234, -30.4605, 0.66 ) }
    dend_55 { pt3dadd( 8.18459, -25.4454, -30.7095, 0.88 ) }
    dend_55 { pt3dadd( 8.26269, -26.341, -30.9701, 0.88 ) }
    dend_55 { pt3dadd( 8.37429, -27.508, -31.288, 0.51 ) }
    dend_55 { pt3dadd( 8.47708, -28.5896, -31.5916, 0.73 ) }
    dend_55 { pt3dadd( 8.55982, -29.8043, -31.9596, 0.95 ) }
    dend_55 { pt3dadd( 8.59522, -31.0143, -32.336, 0.58 ) }
    dend_55 { pt3dadd( 8.58587, -32.3223, -32.733, 0.51 ) }
    dend_55 { pt3dadd( 8.54622, -33.1101, -32.9707, 0.51 ) }
    dend_55 { pt3dadd( 8.49413, -33.8651, -33.1844, 0.51 ) }
    dend_55 { pt3dadd( 8.42468, -34.6646, -33.4132, 0.73 ) }
    dend_55 { pt3dadd( 8.35713, -35.5132, -33.6741, 0.29 ) }
    dend_55 { pt3dadd( 8.30673, -36.2809, -33.8635, 0.29 ) }
    dend_55 { pt3dadd( 8.30711, -36.6734, -33.9135, 0.29 ) }
    dend_55 { pt3dadd( 8.34034, -37.1339, -33.936, 0.29 ) }
    dend_55 { pt3dadd( 8.44562, -37.7587, -33.9411, 0.29 ) }
    dend_55 { pt3dadd( 8.58882, -38.3366, -33.9399, 0.29 ) }
    dend_55 { pt3dadd( 8.9692, -39.5685, -33.9175, 0.8 ) }
    dend_55 { pt3dadd( 9.3016, -40.5475, -33.8765, 0.8 ) }
    dend_55 { pt3dadd( 9.54042, -41.2625, -33.8337, 0.8 ) }
    dend_55 { pt3dadd( 9.75048, -41.9911, -33.7689, 0.8 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 36/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 8.10801, -11.5136, -26.6475, 0.44 ) }
    dend_52 { pt3dadd( 9.39477, -11.8727, -26.9936, 0.44 ) }
    dend_52 { pt3dadd( 10.6191, -12.1986, -27.3649, 0.44 ) }
    dend_52 { pt3dadd( 11.8204, -12.4583, -27.7644, 0.44 ) }
    dend_52 { pt3dadd( 12.6545, -12.6049, -28.0395, 0.73 ) }
    dend_52 { pt3dadd( 13.6835, -12.7389, -28.3992, 0.22 ) }
    dend_52 { pt3dadd( 14.5821, -12.8029, -28.7141, 0.66 ) }
    dend_52 { pt3dadd( 15.0211, -12.8035, -28.8989, 0.66 ) }
    dend_52 { pt3dadd( 15.9867, -12.7667, -29.3752, 0.22 ) }
    dend_52 { pt3dadd( 16.7751, -12.7165, -29.7397, 0.22 ) }
    dend_52 { pt3dadd( 17.6287, -12.6486, -30.1224, 0.22 ) }
    dend_52 { pt3dadd( 18.4526, -12.583, -30.4576, 0.8 ) }
    dend_52 { pt3dadd( 19.4692, -12.517, -30.8404, 0.36 ) }
    dend_52 { pt3dadd( 20.7632, -12.4556, -31.308, 0.36 ) }
    dend_52 { pt3dadd( 21.8282, -12.4096, -31.6846, 0.51 ) }
    dend_52 { pt3dadd( 22.3875, -12.3821, -31.8704, 0.51 ) }
    dend_52 { pt3dadd( 23.6246, -12.3456, -32.2281, 0.22 ) }
    dend_52 { pt3dadd( 24.3191, -12.3418, -32.4214, 0.22 ) }
    dend_52 { pt3dadd( 24.9059, -12.3483, -32.5546, 0.22 ) }
    dend_52 { pt3dadd( 25.4656, -12.3679, -32.683, 0.22 ) }
    dend_52 { pt3dadd( 26.4439, -12.4262, -32.9768, 0.22 ) }
    dend_52 { pt3dadd( 26.9384, -12.4739, -33.1411, 0.95 ) }
    dend_52 { pt3dadd( 27.8339, -12.607, -33.4491, 0.95 ) }
    dend_52 { pt3dadd( 29.3363, -12.8954, -33.9695, 0.8 ) }
    dend_52 { pt3dadd( 30.8557, -13.2245, -34.4807, 0.66 ) }
    dend_52 { pt3dadd( 32.1952, -13.5382, -34.9428, 0.29 ) }
    dend_52 { pt3dadd( 32.7517, -13.6805, -35.1444, 0.29 ) }
    dend_52 { pt3dadd( 33.4686, -13.8703, -35.4017, 0.29 ) }
    dend_52 { pt3dadd( 34.1068, -14.0759, -35.6146, 0.22 ) }
    dend_52 { pt3dadd( 34.557, -14.2583, -35.7701, 0.22 ) }
    dend_52 { pt3dadd( 35.1603, -14.5587, -35.9657, 0.22 ) }
    dend_52 { pt3dadd( 35.7757, -14.8981, -36.158, 0.22 ) }
    dend_52 { pt3dadd( 36.1755, -15.1208, -36.2901, 0.8 ) }
    dend_52 { pt3dadd( 37.0553, -15.6126, -36.5653, 0.8 ) }
    dend_52 { pt3dadd( 37.881, -16.0785, -36.8198, 0.15 ) }
    dend_52 { pt3dadd( 38.4908, -16.4128, -37.0259, 0.22 ) }
    dend_52 { pt3dadd( 39.0453, -16.7111, -37.2398, 0.22 ) }
    dend_52 { pt3dadd( 39.6811, -17.0644, -37.5386, 0.44 ) }
    dend_52 { pt3dadd( 40.6454, -17.6077, -38.0395, 0.15 ) }
    dend_52 { pt3dadd( 41.3681, -18.0156, -38.5178, 0.51 ) }
    dend_52 { pt3dadd( 42.0453, -18.4228, -39.0474, 0.22 ) }
    dend_52 { pt3dadd( 42.7154, -18.8312, -39.6234, 0.22 ) }
    dend_52 { pt3dadd( 43.6045, -19.3354, -40.4703, 0.44 ) }
    dend_52 { pt3dadd( 43.888, -19.4841, -40.7574, 0.44 ) }
    dend_52 { pt3dadd( 45.0441, -20.0476, -42.0661, 0.44 ) }
    dend_52 { pt3dadd( 45.6414, -20.3223, -42.7638, 0.66 ) }
    dend_52 { pt3dadd( 46.1205, -20.5338, -43.3179, 0.66 ) }
    dend_52 { pt3dadd( 47.1725, -20.952, -44.534, 0.36 ) }
    dend_52 { pt3dadd( 47.9377, -21.23, -45.4446, 0.66 ) }
    dend_52 { pt3dadd( 49.3385, -21.7598, -47.1219, 0.07 ) }
    dend_52 { pt3dadd( 49.3843, -21.7773, -47.173, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 87/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.76682, 12.941, 15.3666, 0.66 ) }
    dend_44 { pt3dadd( -2.31502, 13.2563, 16.1947, 0.66 ) }
    dend_44 { pt3dadd( -2.07802, 13.4215, 16.6421, 0.44 ) }
    dend_44 { pt3dadd( -1.36067, 13.938, 18.0772, 0.29 ) }
    dend_44 { pt3dadd( -0.831039, 14.3822, 19.2257, 0.29 ) }
    dend_44 { pt3dadd( -0.50429, 14.7379, 20.0021, 0.44 ) }
    dend_44 { pt3dadd( -0.383814, 14.9228, 20.3478, 0.07 ) }
    dend_44 { pt3dadd( -0.241325, 15.3861, 21.1866, 0.36 ) }
    dend_44 { pt3dadd( -0.2827, 15.5429, 21.3908, 0.07 ) }
    dend_44 { pt3dadd( -0.585665, 15.9557, 21.7478, 0.29 ) }
    dend_44 { pt3dadd( -1.15542, 16.542, 22.1836, 0.44 ) }
    dend_44 { pt3dadd( -1.72511, 17.0448, 22.5412, 0.22 ) }
    dend_44 { pt3dadd( -2.4729, 17.5818, 22.9501, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -3.35089, 18.0912, 23.3802, 0.22 ) }
    dend_44 { pt3dadd( -3.97837, 18.3797, 23.6952, 0.22 ) }
    dend_44 { pt3dadd( -4.36271, 18.4743, 23.9007, 0.22 ) }
    dend_44 { pt3dadd( -4.62188, 18.4655, 24.0437, 0.22 ) }
    dend_44 { pt3dadd( -5.06315, 18.3465, 24.2845, 0.22 ) }
    dend_44 { pt3dadd( -5.4636, 18.0587, 24.5199, 0.22 ) }
    dend_44 { pt3dadd( -5.69959, 17.7252, 24.6834, 0.22 ) }
    dend_44 { pt3dadd( -5.94728, 17.2117, 24.8606, 0.22 ) }
    dend_44 { pt3dadd( -6.11436, 16.7111, 25.0303, 0.22 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 9/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -2.76682, 12.941, 15.3666, 0.15 ) }
    dend_41 { pt3dadd( -2.1045, 13.3835, 15.5765, 0.15 ) }
    dend_41 { pt3dadd( -1.13491, 14.001, 15.9464, 0.15 ) }
    dend_41 { pt3dadd( -0.378807, 14.434, 16.2317, 0.07 ) }
    dend_41 { pt3dadd( -0.103018, 14.5715, 16.3395, 0.07 ) }
    dend_41 { pt3dadd( 0.742554, 14.9418, 16.6593, 0.36 ) }
    dend_41 { pt3dadd( 1.68379, 15.3244, 17.023, 0.07 ) }
    dend_41 { pt3dadd( 2.29278, 15.5403, 17.2717, 0.36 ) }
    dend_41 { pt3dadd( 3.08639, 15.7397, 17.5778, 0.36 ) }
    dend_41 { pt3dadd( 4.10378, 15.8967, 17.951, 0.15 ) }
    dend_41 { pt3dadd( 4.78715, 15.9571, 18.2006, 0.07 ) }
    dend_41 { pt3dadd( 5.40344, 15.9668, 18.4366, 0.07 ) }
    dend_41 { pt3dadd( 5.90505, 15.9515, 18.6654, 0.07 ) }
    dend_41 { pt3dadd( 6.97186, 15.9394, 19.2272, 0.58 ) }
    dend_41 { pt3dadd( 7.373, 15.9517, 19.4618, 0.58 ) }
    dend_41 { pt3dadd( 8.19344, 16.041, 19.9705, 0.29 ) }
    dend_41 { pt3dadd( 9.11247, 16.1574, 20.5991, 0.58 ) }
    dend_41 { pt3dadd( 10.1999, 16.3183, 21.3977, 0.22 ) }
    dend_41 { pt3dadd( 10.7283, 16.4426, 21.8568, 0.22 ) }
    dend_41 { pt3dadd( 11.3186, 16.7111, 22.5389, 0.07 ) }
    dend_41 { pt3dadd( 11.8766, 17.0982, 23.2919, 0.07 ) }
    dend_41 { pt3dadd( 19.956, 17.5296, 29.1689, 0.07 ) }
    dend_41 { pt3dadd( 27.7539, 18.1096, 35.4023, 0.07 ) }
    dend_41 { pt3dadd( 35.8793, 19.2486, 41.119, 0.07 ) }
    dend_41 { pt3dadd( 44.8014, 19.6733, 45.6152, 0.07 ) }
    dend_41 { pt3dadd( 54.1858, 20.9669, 48.8183, 0.07 ) }
    dend_41 { pt3dadd( 63.8293, 22.5307, 50.9531, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 36/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -43.8084, 34.2555, -2.86122, 0.44 ) }
    dend_29 { pt3dadd( -44.5346, 33.7906, -1.96791, 0.44 ) }
    dend_29 { pt3dadd( -44.9652, 33.4791, -1.42071, 0.44 ) }
    dend_29 { pt3dadd( -46.0186, 32.7216, -0.12957, 0.58 ) }
    dend_29 { pt3dadd( -46.3139, 32.5224, 0.209786, 0.58 ) }
    dend_29 { pt3dadd( -46.7771, 32.2347, 0.708892, 0.58 ) }
    dend_29 { pt3dadd( -47.6441, 31.7181, 1.59926, 0.58 ) }
    dend_29 { pt3dadd( -48.36, 31.2964, 2.31737, 0.8 ) }
    dend_29 { pt3dadd( -48.9854, 30.9655, 2.84954, 0.51 ) }
    dend_29 { pt3dadd( -49.7127, 30.6565, 3.32162, 0.73 ) }
    dend_29 { pt3dadd( -50.5351, 30.3941, 3.7306, 0.51 ) }
    dend_29 { pt3dadd( -51.2126, 30.2493, 3.9465, 0.95 ) }
    dend_29 { pt3dadd( -51.7167, 30.1817, 4.02636, 0.95 ) }
    dend_29 { pt3dadd( -52.9164, 30.0783, 4.08153, 0.66 ) }
    dend_29 { pt3dadd( -53.8864, 30.0072, 4.05615, 0.44 ) }
    dend_29 { pt3dadd( -55.0888, 29.9095, 3.97073, 0.44 ) }
    dend_29 { pt3dadd( -56.3215, 29.7777, 3.89582, 0.73 ) }
    dend_29 { pt3dadd( -57.1928, 29.6353, 3.85892, 0.58 ) }
    dend_29 { pt3dadd( -58.8098, 29.2213, 3.83761, 0.58 ) }
    dend_29 { pt3dadd( -59.8478, 28.8181, 3.87145, 0.58 ) }
    dend_29 { pt3dadd( -60.9919, 28.1758, 3.96885, 0.51 ) }
    dend_29 { pt3dadd( -62.0121, 27.4373, 4.12516, 0.58 ) }
    dend_29 { pt3dadd( -62.8708, 26.6975, 4.30326, 0.58 ) }
    dend_29 { pt3dadd( -63.592, 26.0205, 4.4677, 0.73 ) }
    dend_29 { pt3dadd( -64.4157, 25.2197, 4.65212, 0.73 ) }
    dend_29 { pt3dadd( -65.2447, 24.5065, 4.74917, 0.22 ) }
    dend_29 { pt3dadd( -65.6369, 24.298, 4.71407, 0.22 ) }
    dend_29 { pt3dadd( -66.3659, 24.1875, 4.4984, 0.22 ) }
    dend_29 { pt3dadd( -67.313, 24.2673, 4.15983, 0.44 ) }
    dend_29 { pt3dadd( -68.2322, 24.4496, 3.85307, 0.66 ) }
    dend_29 { pt3dadd( -69.3287, 24.7344, 3.51751, 0.66 ) }
    dend_29 { pt3dadd( -70.4527, 25.0356, 3.25861, 0.66 ) }
    dend_29 { pt3dadd( -71.0708, 25.1586, 3.17262, 0.66 ) }
    dend_29 { pt3dadd( -72.1069, 25.2514, 3.13899, 0.36 ) }
    dend_29 { pt3dadd( -73.2461, 25.2145, 3.25415, 0.36 ) }
    dend_29 { pt3dadd( -74.0948, 25.0758, 3.44358, 0.73 ) }
    dend_29 { pt3dadd( -75.105, 24.7745, 3.7602, 0.73 ) }
    dend_29 { pt3dadd( -76.3613, 24.2642, 4.21142, 0.88 ) }
    dend_29 { pt3dadd( -77.5029, 23.7206, 4.64696, 0.88 ) }
    dend_29 { pt3dadd( -78.4954, 23.1873, 5.0161, 0.73 ) }
    dend_29 { pt3dadd( -79.6441, 22.5233, 5.40058, 0.51 ) }
    dend_29 { pt3dadd( -80.9336, 21.7462, 5.80729, 0.44 ) }
    dend_29 { pt3dadd( -81.7592, 21.2406, 6.03813, 0.44 ) }
    dend_29 { pt3dadd( -82.4839, 20.795, 6.2342, 0.44 ) }
    dend_29 { pt3dadd( -83.442, 20.2243, 6.47289, 0.44 ) }
    dend_29 { pt3dadd( -84.3702, 19.7038, 6.67383, 0.44 ) }
    dend_29 { pt3dadd( -84.8405, 19.4669, 6.7466, 0.66 ) }
    dend_29 { pt3dadd( -85.285, 19.2624, 6.79762, 0.8 ) }
    dend_29 { pt3dadd( -85.439, 19.1914, 6.80876, 1.02 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 85/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -43.8084, 34.2555, -2.86122, 0.36 ) }
    dend_24 { pt3dadd( -43.9177, 34.956, -2.60513, 0.36 ) }
    dend_24 { pt3dadd( -43.9678, 35.6783, -2.35066, 0.36 ) }
    dend_24 { pt3dadd( -43.9774, 36.5062, -2.08111, 0.36 ) }
    dend_24 { pt3dadd( -43.9487, 37.4311, -1.8113, 0.22 ) }
    dend_24 { pt3dadd( -43.9021, 38.6071, -1.50368, 0.22 ) }
    dend_24 { pt3dadd( -43.8913, 39.3414, -1.32819, 0.22 ) }
    dend_24 { pt3dadd( -43.9223, 40.14, -1.20287, 0.29 ) }
    dend_24 { pt3dadd( -43.9983, 40.8089, -1.15817, 0.29 ) }
    dend_24 { pt3dadd( -44.1965, 41.618, -1.19165, 0.07 ) }
    dend_24 { pt3dadd( -44.4967, 42.2438, -1.31654, 0.07 ) }
    dend_24 { pt3dadd( -44.9693, 42.742, -1.55836, 0.36 ) }
    dend_24 { pt3dadd( -46.2117, 43.4398, -2.20644, 0.15 ) }
    dend_24 { pt3dadd( -46.8454, 43.5985, -2.53225, 0.15 ) }
    dend_24 { pt3dadd( -47.6227, 43.6218, -2.91009, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( -48.0135, 43.5801, -3.08567, 0.44 ) }
    dend_24 { pt3dadd( -48.958, 43.4098, -3.50265, 0.44 ) }
    dend_24 { pt3dadd( -49.4948, 43.3018, -3.72764, 0.15 ) }
    dend_24 { pt3dadd( -50.2221, 43.186, -3.98149, 0.29 ) }
    dend_24 { pt3dadd( -50.9971, 43.1571, -4.22539, 0.07 ) }
    dend_24 { pt3dadd( -51.6537, 43.2724, -4.3884, 0.15 ) }
    dend_24 { pt3dadd( -52.2611, 43.5536, -4.50039, 0.15 ) }
    dend_24 { pt3dadd( -52.7931, 43.9882, -4.57645, 0.66 ) }
    dend_24 { pt3dadd( -53.3515, 44.6113, -4.65409, 1.02 ) }
    dend_24 { pt3dadd( -53.563, 44.9006, -4.68833, 1.02 ) }
    dend_24 { pt3dadd( -54.0827, 45.6491, -4.78889, 0.44 ) }
    dend_24 { pt3dadd( -54.6088, 46.4448, -4.89072, 0.22 ) }
    dend_24 { pt3dadd( -55.1194, 47.2271, -4.9812, 0.07 ) }
    dend_24 { pt3dadd( -55.6605, 48.0729, -5.09323, 0.07 ) }
    dend_24 { pt3dadd( -56.0975, 48.7828, -5.20038, 0.07 ) }
    dend_24 { pt3dadd( -56.8956, 50.063, -5.41911, 0.8 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 16/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -11.0011, 27.4459, 5.06791, 0.51 ) }
    dend_16 { pt3dadd( -12.2194, 27.8435, 5.70086, 0.51 ) }
    dend_16 { pt3dadd( -12.8428, 28.0177, 5.96459, 0.51 ) }
    dend_16 { pt3dadd( -13.7107, 28.2027, 6.25461, 0.51 ) }
    dend_16 { pt3dadd( -14.7148, 28.3622, 6.52177, 0.15 ) }
    dend_16 { pt3dadd( -15.0313, 28.403, 6.59104, 0.15 ) }
    dend_16 { pt3dadd( -15.3933, 28.4389, 6.6582, 0.15 ) }
    dend_16 { pt3dadd( -16.27, 28.5035, 6.74784, 0.22 ) }
    dend_16 { pt3dadd( -17.1505, 28.5331, 6.805, 0.44 ) }
    dend_16 { pt3dadd( -17.9535, 28.5263, 6.805, 0.73 ) }
    dend_16 { pt3dadd( -18.6157, 28.4804, 6.805, 0.88 ) }
    dend_16 { pt3dadd( -19.2197, 28.4275, 6.805, 0.58 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 28/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.0011, 27.4459, 5.06791, 0.8 ) }
    dend_1 { pt3dadd( -11.344, 28.5844, 5.49066, 0.8 ) }
    dend_1 { pt3dadd( -11.6463, 29.3465, 5.82274, 0.8 ) }
    dend_1 { pt3dadd( -11.9019, 29.9939, 6.11552, 0.66 ) }
    dend_1 { pt3dadd( -12.0426, 30.4261, 6.32807, 0.66 ) }
    dend_1 { pt3dadd( -12.1445, 30.8235, 6.5177, 0.66 ) }
    dend_1 { pt3dadd( -12.3074, 31.6073, 6.86238, 0.66 ) }
    dend_1 { pt3dadd( -12.3995, 32.1669, 7.09603, 0.66 ) }
    dend_1 { pt3dadd( -12.4598, 32.6017, 7.26654, 0.88 ) }
    dend_1 { pt3dadd( -12.5373, 33.4693, 7.61271, 0.51 ) }
    dend_1 { pt3dadd( -12.5579, 34.3028, 7.92402, 0.29 ) }
    dend_1 { pt3dadd( -12.5209, 35.0784, 8.16828, 0.29 ) }
    dend_1 { pt3dadd( -12.4074, 36.0275, 8.38929, 0.88 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.744079, 42.5122, 0.0, 0.365925 ) }
    axon_1 { pt3dadd( -0.992752, 57.5101, 0.0, 0.365925 ) }
    axon_1 { pt3dadd( -1.24142, 72.5081, 0.0, 0.365925 ) }
    // Section: dend_82, id: dend_82, parent: dend_72 (entry count 44/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -2.52352, -21.0796, 2.4177, 1.09 ) }
    dend_82 { pt3dadd( -1.86453, -22.4774, 2.20959, 1.09 ) }
    dend_82 { pt3dadd( -1.08016, -24.15, 1.99188, 0.95 ) }
    dend_82 { pt3dadd( -0.64149, -25.0903, 1.88091, 1.09 ) }
    dend_82 { pt3dadd( -0.159577, -26.1742, 1.74349, 1.09 ) }
    dend_82 { pt3dadd( 0.26967, -27.2304, 1.60238, 1.09 ) }
    dend_82 { pt3dadd( 0.661157, -28.3319, 1.44484, 1.02 ) }
    dend_82 { pt3dadd( 0.99633, -29.6234, 1.25907, 0.95 ) }
    dend_82 { pt3dadd( 1.07499, -30.1765, 1.17696, 0.95 ) }
    dend_82 { pt3dadd( 1.11423, -31.0949, 1.01606, 1.02 ) }
    dend_82 { pt3dadd( 1.08754, -32.075, 0.830202, 1.02 ) }
    dend_82 { pt3dadd( 1.02584, -33.19, 0.611209, 1.31 ) }
    dend_82 { pt3dadd( 0.944853, -34.5546, 0.351692, 0.95 ) }
    dend_82 { pt3dadd( 0.916571, -35.6465, 0.192102, 0.95 ) }
    dend_82 { pt3dadd( 0.958583, -36.5522, 0.107873, 0.8 ) }
    dend_82 { pt3dadd( 1.1, -37.5748, 0.0971793, 0.8 ) }
    dend_82 { pt3dadd( 1.39531, -38.8876, 0.179343, 0.8 ) }
    dend_82 { pt3dadd( 1.66993, -39.8004, 0.273589, 0.8 ) }
    dend_82 { pt3dadd( 2.12492, -41.0754, 0.433364, 0.8 ) }
    dend_82 { pt3dadd( 2.43821, -41.9138, 0.561536, 1.02 ) }
    dend_82 { pt3dadd( 3.02416, -43.5863, 0.827074, 0.8 ) }
    dend_82 { pt3dadd( 3.42969, -44.7575, 1.01643, 0.8 ) }
    dend_82 { pt3dadd( 3.88621, -46.1704, 1.23851, 1.02 ) }
    dend_82 { pt3dadd( 4.27125, -47.4645, 1.39685, 1.17 ) }
    dend_82 { pt3dadd( 4.47457, -48.2491, 1.45722, 1.39 ) }
    dend_82 { pt3dadd( 4.80847, -49.6631, 1.53878, 1.46 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 70/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -2.52352, -21.0796, 2.4177, 0.95 ) }
    dend_73 { pt3dadd( -3.73584, -21.7346, 2.61722, 0.95 ) }
    dend_73 { pt3dadd( -5.10055, -22.5502, 2.93413, 0.8 ) }
    dend_73 { pt3dadd( -5.95909, -23.0795, 3.19779, 0.8 ) }
    dend_73 { pt3dadd( -6.63509, -23.4895, 3.46355, 0.8 ) }
    dend_73 { pt3dadd( -7.35919, -23.8939, 3.77584, 0.73 ) }
    dend_73 { pt3dadd( -8.07771, -24.2267, 4.12607, 0.73 ) }
    dend_73 { pt3dadd( -8.74782, -24.5553, 4.53307, 0.73 ) }
    dend_73 { pt3dadd( -9.2976, -24.802, 4.94759, 0.73 ) }
    dend_73 { pt3dadd( -9.92331, -25.0054, 5.48592, 0.73 ) }
    dend_73 { pt3dadd( -10.4784, -25.0844, 6.04133, 0.95 ) }
    dend_73 { pt3dadd( -11.4609, -24.9748, 7.12346, 1.24 ) }
    // Section: dend_69, id: dend_69, parent: dend_63 (entry count 82/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 17.582, -46.6539, -11.0119, 0.36 ) }
    dend_69 { pt3dadd( 18.4443, -46.7201, -11.1892, 0.36 ) }
    dend_69 { pt3dadd( 19.3716, -46.8917, -11.3566, 0.22 ) }
    dend_69 { pt3dadd( 20.1979, -47.1264, -11.544, 0.22 ) }
    dend_69 { pt3dadd( 20.8738, -47.3472, -11.7234, 0.22 ) }
    dend_69 { pt3dadd( 21.328, -47.4911, -11.8456, 0.22 ) }
    dend_69 { pt3dadd( 21.6755, -47.5872, -11.9373, 0.22 ) }
    dend_69 { pt3dadd( 22.557, -47.7909, -12.1945, 0.51 ) }
    dend_69 { pt3dadd( 23.5524, -47.8969, -12.4946, 0.51 ) }
    dend_69 { pt3dadd( 24.2507, -47.8926, -12.7052, 0.36 ) }
    dend_69 { pt3dadd( 25.0943, -47.8354, -12.9916, 0.15 ) }
    dend_69 { pt3dadd( 25.6878, -47.7819, -13.1939, 0.15 ) }
    dend_69 { pt3dadd( 26.7317, -47.6601, -13.4519, 0.15 ) }
    dend_69 { pt3dadd( 27.8132, -47.4855, -13.6455, 0.36 ) }
    dend_69 { pt3dadd( 28.4673, -47.3694, -13.7326, 0.29 ) }
    dend_69 { pt3dadd( 29.3689, -47.2446, -13.8337, 0.29 ) }
    dend_69 { pt3dadd( 30.4054, -47.1662, -13.9581, 0.44 ) }
    dend_69 { pt3dadd( 31.9846, -47.0976, -14.207, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 32.8765, -47.0867, -14.3587, 0.07 ) }
    dend_69 { pt3dadd( 33.8014, -47.0835, -14.5326, 0.44 ) }
    dend_69 { pt3dadd( 34.6172, -47.0656, -14.6967, 0.58 ) }
    dend_69 { pt3dadd( 35.8422, -47.0375, -14.9176, 0.22 ) }
    dend_69 { pt3dadd( 37.1322, -47.028, -15.1862, 1.02 ) }
    dend_69 { pt3dadd( 38.1489, -47.0347, -15.4206, 0.15 ) }
    dend_69 { pt3dadd( 38.6069, -47.0414, -15.5, 0.15 ) }
    dend_69 { pt3dadd( 39.3225, -47.0401, -15.5876, 0.44 ) }
    dend_69 { pt3dadd( 40.5325, -47.0076, -15.7457, 0.22 ) }
    dend_69 { pt3dadd( 41.656, -46.9943, -15.8957, 0.95 ) }
    dend_69 { pt3dadd( 42.3748, -46.9983, -16.0135, 0.66 ) }
    dend_69 { pt3dadd( 43.2412, -46.986, -16.228, 0.51 ) }
    dend_69 { pt3dadd( 43.8777, -46.9571, -16.4258, 0.73 ) }
    dend_69 { pt3dadd( 45.1014, -46.8348, -16.8781, 0.73 ) }
    dend_69 { pt3dadd( 46.1194, -46.6591, -17.3072, 0.44 ) }
    dend_69 { pt3dadd( 46.8553, -46.4888, -17.6003, 0.15 ) }
    dend_69 { pt3dadd( 47.6633, -46.252, -17.8953, 0.15 ) }
    dend_69 { pt3dadd( 48.1041, -46.1055, -17.991, 0.15 ) }
    dend_69 { pt3dadd( 48.9012, -45.8396, -18.0454, 0.15 ) }
    dend_69 { pt3dadd( 49.7994, -45.5505, -17.9718, 0.73 ) }
    dend_69 { pt3dadd( 50.6639, -45.2812, -17.8266, 0.95 ) }
    dend_69 { pt3dadd( 51.7594, -44.972, -17.5845, 0.58 ) }
    dend_69 { pt3dadd( 53.5586, -44.4939, -17.0733, 0.29 ) }
    dend_69 { pt3dadd( 54.1747, -44.3517, -16.8847, 0.15 ) }
    dend_69 { pt3dadd( 54.8595, -44.2141, -16.658, 0.15 ) }
    dend_69 { pt3dadd( 55.6994, -44.0668, -16.3818, 0.22 ) }
    dend_69 { pt3dadd( 56.7525, -43.8817, -16.0542, 0.36 ) }
    dend_69 { pt3dadd( 58.5247, -43.5555, -15.5646, 0.95 ) }
    dend_69 { pt3dadd( 59.6152, -43.3363, -15.3265, 0.22 ) }
    dend_69 { pt3dadd( 60.3305, -43.1906, -15.1908, 0.58 ) }
    dend_69 { pt3dadd( 61.7499, -42.9203, -14.9655, 0.07 ) }
    dend_69 { pt3dadd( 62.6044, -42.7678, -14.8667, 0.36 ) }
    dend_69 { pt3dadd( 63.3236, -42.6415, -14.799, 0.51 ) }
    dend_69 { pt3dadd( 64.2591, -42.4684, -14.751, 0.15 ) }
    dend_69 { pt3dadd( 65.025, -42.2896, -14.7138, 0.15 ) }
    dend_69 { pt3dadd( 65.7196, -42.0873, -14.6578, 0.88 ) }
    dend_69 { pt3dadd( 66.7828, -41.6639, -14.4889, 0.95 ) }
    dend_69 { pt3dadd( 67.9271, -41.0882, -14.213, 0.15 ) }
    dend_69 { pt3dadd( 68.332, -40.8111, -14.0738, 0.15 ) }
    dend_69 { pt3dadd( 68.655, -40.5076, -13.8991, 0.15 ) }
    dend_69 { pt3dadd( 69.0729, -39.9944, -13.5784, 0.15 ) }
    dend_69 { pt3dadd( 69.516, -39.3316, -13.1256, 0.51 ) }
    dend_69 { pt3dadd( 69.6582, -39.0476, -12.9358, 0.51 ) }
    dend_69 { pt3dadd( 69.9417, -38.2467, -12.4674, 0.15 ) }
    dend_69 { pt3dadd( 70.1365, -37.577, -12.0726, 0.15 ) }
    dend_69 { pt3dadd( 70.2529, -37.1436, -11.8125, 0.15 ) }
    dend_69 { pt3dadd( 70.523, -36.2663, -11.3098, 0.95 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 17.582, -46.6539, -11.0119, 0.58 ) }
    dend_64 { pt3dadd( 17.5409, -47.9285, -10.8631, 0.58 ) }
    dend_64 { pt3dadd( 17.6669, -48.6718, -10.8845, 0.58 ) }
    dend_64 { pt3dadd( 17.881, -49.2987, -10.9762, 0.58 ) }
    dend_64 { pt3dadd( 18.0379, -49.6263, -11.0471, 0.58 ) }
    dend_64 { pt3dadd( 18.1832, -49.8865, -11.1254, 0.58 ) }
    dend_64 { pt3dadd( 18.7137, -50.7943, -11.4471, 0.58 ) }
    dend_64 { pt3dadd( 19.3006, -51.6395, -11.8378, 0.58 ) }
    dend_64 { pt3dadd( 19.6773, -52.1788, -12.1107, 0.73 ) }
    dend_64 { pt3dadd( 20.0224, -52.718, -12.3682, 0.73 ) }
    dend_64 { pt3dadd( 20.4778, -53.5737, -12.7173, 0.8 ) }
    dend_64 { pt3dadd( 20.8016, -54.4173, -12.9951, 1.02 ) }
    dend_64 { pt3dadd( 20.8644, -54.703, -13.0613, 1.09 ) }
    dend_64 { pt3dadd( 20.9359, -55.4334, -13.1794, 0.73 ) }
    dend_64 { pt3dadd( 20.9663, -56.5364, -13.3189, 0.58 ) }
    dend_64 { pt3dadd( 20.9696, -57.5117, -13.4151, 0.88 ) }
    dend_64 { pt3dadd( 20.9998, -58.3434, -13.47, 0.58 ) }
    dend_64 { pt3dadd( 21.1309, -59.1516, -13.5169, 0.58 ) }
    dend_64 { pt3dadd( 21.323, -59.713, -13.5466, 0.58 ) }
    dend_64 { pt3dadd( 21.6334, -60.2696, -13.5623, 0.58 ) }
    dend_64 { pt3dadd( 22.1242, -60.8853, -13.5619, 0.58 ) }
    dend_64 { pt3dadd( 22.8568, -61.6208, -13.5415, 0.58 ) }
    dend_64 { pt3dadd( 24.131, -62.7334, -13.4338, 0.51 ) }
    dend_64 { pt3dadd( 24.9532, -63.4125, -13.3247, 0.58 ) }
    dend_64 { pt3dadd( 25.4927, -63.8551, -13.2189, 0.58 ) }
    dend_64 { pt3dadd( 26.3046, -64.5434, -12.9847, 0.8 ) }
    dend_64 { pt3dadd( 26.8378, -65.0166, -12.8019, 0.8 ) }
    dend_64 { pt3dadd( 27.8979, -66.0388, -12.4135, 0.66 ) }
    dend_64 { pt3dadd( 28.6724, -66.8734, -12.1305, 0.58 ) }
    dend_64 { pt3dadd( 29.3004, -67.6441, -11.9192, 0.95 ) }
    dend_64 { pt3dadd( 30.2032, -68.9175, -11.6793, 0.73 ) }
    dend_64 { pt3dadd( 30.6833, -69.7289, -11.5966, 0.8 ) }
    dend_64 { pt3dadd( 31.1269, -70.7244, -11.5938, 0.8 ) }
    dend_64 { pt3dadd( 31.3671, -71.5888, -11.6914, 0.51 ) }
    dend_64 { pt3dadd( 31.4916, -72.5247, -11.8717, 0.51 ) }
    dend_64 { pt3dadd( 31.5246, -73.536, -12.1392, 0.51 ) }
    dend_64 { pt3dadd( 31.492, -74.3675, -12.4017, 0.51 ) }
    dend_64 { pt3dadd( 31.4274, -75.346, -12.7026, 0.51 ) }
    dend_64 { pt3dadd( 31.3842, -76.3448, -13.0002, 0.66 ) }
    dend_64 { pt3dadd( 31.4026, -77.7645, -13.4074, 0.73 ) }
    dend_64 { pt3dadd( 31.508, -78.9794, -13.73, 0.73 ) }
    dend_64 { pt3dadd( 31.6605, -79.9773, -13.9495, 0.73 ) }
    dend_64 { pt3dadd( 31.8362, -80.8603, -14.1246, 0.88 ) }
    dend_64 { pt3dadd( 32.1109, -82.0488, -14.3639, 0.95 ) }
    dend_64 { pt3dadd( 32.3363, -82.9445, -14.5396, 0.95 ) }
    dend_64 { pt3dadd( 32.6005, -83.9369, -14.7112, 0.95 ) }
    dend_64 { pt3dadd( 33.0232, -85.4979, -14.9263, 0.66 ) }
    dend_64 { pt3dadd( 33.3307, -86.6583, -15.0586, 0.66 ) }
    dend_64 { pt3dadd( 33.6013, -87.8138, -15.1924, 1.09 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 96/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 9.75048, -41.9911, -33.7689, 0.07 ) }
    dend_59 { pt3dadd( 9.84564, -43.0564, -32.9803, 0.07 ) }
    dend_59 { pt3dadd( 9.88356, -43.9029, -32.3743, 0.07 ) }
    dend_59 { pt3dadd( 9.87401, -45.034, -31.6037, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_59 { pt3dadd( 9.83729, -45.7676, -31.1394, 0.8 ) }
    dend_59 { pt3dadd( 9.79243, -46.8873, -30.4899, 0.07 ) }
    dend_59 { pt3dadd( 9.79524, -47.3394, -30.2329, 0.15 ) }
    dend_59 { pt3dadd( 9.8472, -48.0398, -29.8393, 0.15 ) }
    dend_59 { pt3dadd( 10.0139, -48.9302, -29.3583, 0.29 ) }
    dend_59 { pt3dadd( 10.2119, -49.5083, -29.032, 0.07 ) }
    dend_59 { pt3dadd( 10.5596, -50.2497, -28.5702, 0.07 ) }
    dend_59 { pt3dadd( 11.0634, -51.0967, -27.9575, 0.8 ) }
    dend_59 { pt3dadd( 11.4307, -51.6382, -27.5332, 0.51 ) }
    dend_59 { pt3dadd( 12.4217, -52.9324, -26.4958, 0.22 ) }
    dend_59 { pt3dadd( 13.3209, -54.0193, -25.5976, 0.44 ) }
    dend_59 { pt3dadd( 13.8422, -54.647, -25.0713, 0.44 ) }
    dend_59 { pt3dadd( 14.5701, -55.5676, -24.3207, 0.95 ) }
    dend_59 { pt3dadd( 15.1898, -56.4066, -23.7118, 0.15 ) }
    dend_59 { pt3dadd( 15.6816, -57.1077, -23.2269, 0.07 ) }
    dend_59 { pt3dadd( 15.9895, -57.5873, -22.9466, 0.29 ) }
    dend_59 { pt3dadd( 16.6171, -58.6754, -22.4018, 0.66 ) }
    dend_59 { pt3dadd( 16.8542, -59.1489, -22.2059, 0.66 ) }
    dend_59 { pt3dadd( 17.2586, -60.1396, -21.8423, 0.07 ) }
    dend_59 { pt3dadd( 17.6832, -61.477, -21.339, 0.07 ) }
    dend_59 { pt3dadd( 17.8137, -62.1539, -21.0916, 0.58 ) }
    dend_59 { pt3dadd( 17.8548, -62.7135, -20.9088, 0.58 ) }
    dend_59 { pt3dadd( 17.7887, -63.7802, -20.6011, 0.36 ) }
    dend_59 { pt3dadd( 17.6628, -64.5331, -20.4034, 0.07 ) }
    dend_59 { pt3dadd( 17.4716, -65.2738, -20.2237, 0.07 ) }
    dend_59 { pt3dadd( 17.2272, -66.0101, -20.0883, 0.07 ) }
    dend_59 { pt3dadd( 16.9577, -66.7055, -19.9385, 0.07 ) }
    dend_59 { pt3dadd( 16.6979, -67.2741, -19.8105, 0.66 ) }
    dend_59 { pt3dadd( 16.3069, -67.9677, -19.6612, 0.8 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 29/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 9.75048, -41.9911, -33.7689, 0.29 ) }
    dend_56 { pt3dadd( 10.5829, -43.0218, -34.3866, 0.29 ) }
    dend_56 { pt3dadd( 11.017, -43.4897, -34.6472, 0.29 ) }
    dend_56 { pt3dadd( 11.5796, -43.979, -34.9962, 0.51 ) }
    dend_56 { pt3dadd( 12.3385, -44.6168, -35.5254, 0.44 ) }
    dend_56 { pt3dadd( 12.7764, -45.0046, -35.8937, 0.73 ) }
    dend_56 { pt3dadd( 13.2316, -45.4344, -36.3129, 0.29 ) }
    dend_56 { pt3dadd( 13.8692, -46.0611, -36.9277, 0.29 ) }
    dend_56 { pt3dadd( 14.9038, -47.0838, -37.9755, 0.8 ) }
    dend_56 { pt3dadd( 15.6442, -47.8177, -38.7896, 0.51 ) }
    dend_56 { pt3dadd( 16.2563, -48.484, -39.5269, 0.29 ) }
    dend_56 { pt3dadd( 16.543, -48.8395, -39.9258, 0.22 ) }
    dend_56 { pt3dadd( 16.8128, -49.2062, -40.3614, 0.22 ) }
    dend_56 { pt3dadd( 17.2105, -49.7718, -41.0993, 0.22 ) }
    dend_56 { pt3dadd( 17.5184, -50.1945, -41.7123, 0.22 ) }
    dend_56 { pt3dadd( 17.8571, -50.565, -42.3372, 0.36 ) }
    dend_56 { pt3dadd( 18.2923, -50.9851, -43.1051, 0.22 ) }
    dend_56 { pt3dadd( 18.8073, -51.4465, -44.0861, 0.73 ) }
    dend_56 { pt3dadd( 19.3004, -51.8699, -45.1267, 0.07 ) }
    dend_56 { pt3dadd( 19.8206, -52.2662, -46.2974, 0.51 ) }
    dend_56 { pt3dadd( 20.051, -52.4049, -46.7834, 0.8 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 50/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 49.3843, -21.7773, -47.173, 0.22 ) }
    dend_54 { pt3dadd( 50.0659, -22.1077, -48.273, 0.22 ) }
    dend_54 { pt3dadd( 50.4036, -22.4251, -49.0133, 0.22 ) }
    dend_54 { pt3dadd( 50.6649, -22.7395, -49.8502, 0.22 ) }
    dend_54 { pt3dadd( 50.7724, -22.8144, -50.3017, 0.22 ) }
    dend_54 { pt3dadd( 51.0054, -22.8619, -51.3026, 0.51 ) }
    dend_54 { pt3dadd( 51.1045, -22.8732, -51.6993, 0.15 ) }
    dend_54 { pt3dadd( 51.3798, -22.9736, -52.7954, 0.07 ) }
    dend_54 { pt3dadd( 51.5347, -23.0746, -53.4724, 0.07 ) }
    dend_54 { pt3dadd( 51.8229, -23.2955, -54.8578, 0.29 ) }
    dend_54 { pt3dadd( 52.0586, -23.4209, -55.8165, 0.15 ) }
    dend_54 { pt3dadd( 52.1806, -23.4604, -56.1657, 0.44 ) }
    dend_54 { pt3dadd( 52.5901, -23.6281, -56.9637, 0.44 ) }
    dend_54 { pt3dadd( 53.064, -23.9109, -57.6089, 0.07 ) }
    dend_54 { pt3dadd( 53.8215, -24.4452, -58.617, 0.07 ) }
    dend_54 { pt3dadd( 54.2415, -24.7941, -59.174, 0.51 ) }
    dend_54 { pt3dadd( 54.6392, -25.1761, -59.8645, 0.66 ) }
    dend_54 { pt3dadd( 55.1431, -25.6856, -60.9075, 0.07 ) }
    dend_54 { pt3dadd( 55.5444, -26.0835, -61.796, 0.44 ) }
    dend_54 { pt3dadd( 56.47, -26.9483, -63.8914, 0.07 ) }
    dend_54 { pt3dadd( 56.6632, -27.1273, -64.3398, 0.29 ) }
    dend_54 { pt3dadd( 57.7337, -28.0786, -66.7833, 0.07 ) }
    dend_54 { pt3dadd( 58.1748, -28.4422, -67.7259, 0.22 ) }
    dend_54 { pt3dadd( 58.5845, -28.7437, -68.5017, 0.07 ) }
    dend_54 { pt3dadd( 59.0877, -29.0693, -69.3554, 0.36 ) }
    dend_54 { pt3dadd( 59.7984, -29.4893, -70.3906, 0.07 ) }
    dend_54 { pt3dadd( 60.3862, -29.7925, -71.1316, 0.44 ) }
    dend_54 { pt3dadd( 61.6592, -30.3701, -72.4979, 0.07 ) }
    dend_54 { pt3dadd( 62.6398, -30.7971, -73.4972, 0.36 ) }
    dend_54 { pt3dadd( 63.7549, -31.2544, -74.4797, 0.07 ) }
    dend_54 { pt3dadd( 64.8973, -31.6579, -75.3222, 0.07 ) }
    dend_54 { pt3dadd( 65.7918, -31.8802, -75.8521, 0.07 ) }
    dend_54 { pt3dadd( 66.9081, -32.0107, -76.3827, 0.07 ) }
    dend_54 { pt3dadd( 67.4684, -31.9839, -76.5505, 0.07 ) }
    dend_54 { pt3dadd( 69.7363, -31.5332, -76.9249, 0.44 ) }
    dend_54 { pt3dadd( 70.922, -31.1385, -77.0987, 0.07 ) }
    dend_54 { pt3dadd( 71.8979, -30.729, -77.2065, 0.07 ) }
    dend_54 { pt3dadd( 72.6918, -30.3279, -77.3033, 0.07 ) }
    dend_54 { pt3dadd( 73.3194, -29.9623, -77.385, 0.07 ) }
    dend_54 { pt3dadd( 74.2974, -29.3062, -77.6358, 0.58 ) }
    dend_54 { pt3dadd( 75.6504, -28.23, -78.3528, 0.22 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 49.3843, -21.7773, -47.173, 0.51 ) }
    dend_53 { pt3dadd( 49.7886, -21.2004, -47.3219, 0.51 ) }
    dend_53 { pt3dadd( 50.4252, -20.2741, -47.5772, 0.51 ) }
    dend_53 { pt3dadd( 51.3438, -18.9678, -47.9275, 0.15 ) }
    dend_53 { pt3dadd( 52.0997, -17.9102, -48.1997, 0.07 ) }
    dend_53 { pt3dadd( 52.948, -16.7617, -48.481, 0.51 ) }
    dend_53 { pt3dadd( 53.2391, -16.3917, -48.5531, 0.51 ) }
    dend_53 { pt3dadd( 53.9004, -15.5803, -48.6556, 0.15 ) }
    dend_53 { pt3dadd( 54.7056, -14.7064, -48.6846, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_53 { pt3dadd( 55.1364, -14.3146, -48.6674, 0.51 ) }
    dend_53 { pt3dadd( 55.77, -13.8519, -48.6435, 0.51 ) }
    dend_53 { pt3dadd( 56.8946, -13.1559, -48.6243, 0.15 ) }
    dend_53 { pt3dadd( 57.5268, -12.8017, -48.6434, 0.15 ) }
    dend_53 { pt3dadd( 58.2922, -12.4305, -48.6678, 0.44 ) }
    dend_53 { pt3dadd( 59.1206, -12.0942, -48.7301, 0.73 ) }
    dend_53 { pt3dadd( 60.5122, -11.6479, -48.9057, 0.07 ) }
    dend_53 { pt3dadd( 61.3232, -11.4679, -49.0454, 0.07 ) }
    dend_53 { pt3dadd( 62.7021, -11.2766, -49.3559, 0.73 ) }
    dend_53 { pt3dadd( 63.5854, -11.2278, -49.5637, 0.07 ) }
    dend_53 { pt3dadd( 64.4084, -11.2424, -49.7673, 0.07 ) }
    dend_53 { pt3dadd( 65.336, -11.3035, -49.9889, 0.66 ) }
    dend_53 { pt3dadd( 66.5862, -11.4104, -50.2197, 0.07 ) }
    dend_53 { pt3dadd( 67.8902, -11.5087, -50.387, 0.58 ) }
    dend_53 { pt3dadd( 69.2546, -11.5805, -50.4648, 0.07 ) }
    dend_53 { pt3dadd( 70.8916, -11.5851, -50.4392, 0.36 ) }
    dend_53 { pt3dadd( 71.9844, -11.5359, -50.3212, 0.07 ) }
    dend_53 { pt3dadd( 73.3667, -11.417, -49.9799, 0.29 ) }
    dend_53 { pt3dadd( 74.2456, -11.321, -49.5967, 0.07 ) }
    dend_53 { pt3dadd( 75.1182, -11.2278, -48.9957, 0.07 ) }
    dend_53 { pt3dadd( 75.9235, -11.139, -48.3403, 0.58 ) }
    dend_53 { pt3dadd( 76.2677, -11.1047, -48.0566, 0.58 ) }
    dend_53 { pt3dadd( 77.4363, -11.0241, -47.2163, 0.07 ) }
    dend_53 { pt3dadd( 78.411, -10.9956, -46.6902, 0.44 ) }
    dend_53 { pt3dadd( 79.7358, -11.0238, -46.2286, 0.07 ) }
    dend_53 { pt3dadd( 81.3919, -11.0852, -45.8314, 0.22 ) }
    dend_53 { pt3dadd( 82.947, -11.1677, -45.6137, 0.07 ) }
    dend_53 { pt3dadd( 83.8246, -11.209, -45.5715, 0.07 ) }
    dend_53 { pt3dadd( 84.5652, -11.2397, -45.6495, 0.07 ) }
    dend_53 { pt3dadd( 85.7861, -11.2975, -45.9112, 0.36 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 30/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -6.11436, 16.7111, 25.0303, 0.07 ) }
    dend_48 { pt3dadd( -6.13217, 17.2798, 25.4876, 0.07 ) }
    dend_48 { pt3dadd( -6.12883, 17.7395, 25.8641, 0.15 ) }
    dend_48 { pt3dadd( -6.05464, 18.1625, 26.2241, 0.15 ) }
    dend_48 { pt3dadd( -5.93068, 18.5175, 26.5551, 0.15 ) }
    dend_48 { pt3dadd( -5.59328, 19.2369, 27.375, 0.15 ) }
    dend_48 { pt3dadd( -5.33865, 19.7754, 28.0768, 0.15 ) }
    dend_48 { pt3dadd( -5.26282, 20.0266, 28.4744, 0.15 ) }
    dend_48 { pt3dadd( -5.25522, 20.3892, 29.3601, 0.95 ) }
    dend_48 { pt3dadd( -5.2558, 20.528, 30.0005, 0.15 ) }
    dend_48 { pt3dadd( -5.3724, 20.4468, 30.8864, 0.15 ) }
    dend_48 { pt3dadd( -6.01976, 20.1637, 31.0864, 0.15 ) }
    dend_48 { pt3dadd( -6.59994, 19.9028, 31.2873, 0.15 ) }
    dend_48 { pt3dadd( -7.68893, 19.3743, 31.7187, 0.15 ) }
    dend_48 { pt3dadd( -9.14128, 23.1026, 40.8833, 0.15 ) }
    dend_48 { pt3dadd( -10.4651, 27.4634, 49.7845, 0.15 ) }
    dend_48 { pt3dadd( -12.2464, 29.6366, 59.3815, 0.15 ) }
    dend_48 { pt3dadd( -12.8291, 32.7231, 68.8754, 0.15 ) }
    dend_48 { pt3dadd( -13.5397, 35.453, 78.4693, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 49/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -6.11436, 16.7111, 25.0303, 0.15 ) }
    dend_45 { pt3dadd( -5.77536, 16.2647, 25.3795, 0.15 ) }
    dend_45 { pt3dadd( -5.43132, 15.9787, 25.6597, 0.15 ) }
    dend_45 { pt3dadd( -4.87686, 15.7715, 26.0166, 0.15 ) }
    dend_45 { pt3dadd( -4.32367, 15.7516, 26.3174, 0.15 ) }
    dend_45 { pt3dadd( -3.93452, 15.8249, 26.5092, 0.15 ) }
    dend_45 { pt3dadd( -3.47144, 15.983, 26.7148, 0.15 ) }
    dend_45 { pt3dadd( -3.01267, 16.1922, 26.8682, 0.15 ) }
    dend_45 { pt3dadd( -2.22799, 16.6369, 27.0974, 0.07 ) }
    dend_45 { pt3dadd( -1.91728, 16.857, 27.1816, 0.07 ) }
    dend_45 { pt3dadd( -1.62772, 17.0944, 27.2436, 0.07 ) }
    dend_45 { pt3dadd( -1.27864, 17.4111, 27.3126, 0.07 ) }
    dend_45 { pt3dadd( -0.644748, 18.0159, 27.3953, 0.07 ) }
    dend_45 { pt3dadd( 7.53282, 20.4569, 32.6077, 0.07 ) }
    dend_45 { pt3dadd( 14.9455, 24.278, 38.126, 0.07 ) }
    dend_45 { pt3dadd( 22.0021, 28.4618, 43.8444, 0.07 ) }
    dend_45 { pt3dadd( 29.8236, 32.7133, 48.3995, 0.07 ) }
    dend_45 { pt3dadd( 37.41, 37.5514, 52.763, 0.07 ) }
    dend_45 { pt3dadd( 44.845, 42.3997, 57.3689, 0.07 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 68/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 63.8293, 22.5307, 50.9531, 0.22 ) }
    dend_43 { pt3dadd( 72.4867, 23.5679, 55.8494, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 70/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 63.8293, 22.5307, 50.9531, 0.51 ) }
    dend_42 { pt3dadd( 72.6854, 24.0809, 55.331, 0.22 ) }
    dend_42 { pt3dadd( 81.4028, 24.0683, 60.2307, 0.22 ) }
    dend_42 { pt3dadd( 89.6697, 24.1735, 65.8562, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 74/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -85.439, 19.1914, 6.80876, 0.8 ) }
    dend_33 { pt3dadd( -86.2085, 19.1303, 7.19077, 0.8 ) }
    dend_33 { pt3dadd( -87.1409, 18.9848, 7.63596, 0.8 ) }
    dend_33 { pt3dadd( -88.273, 18.7024, 8.16575, 0.66 ) }
    dend_33 { pt3dadd( -89.1197, 18.3976, 8.53009, 0.66 ) }
    dend_33 { pt3dadd( -90.087, 17.8736, 8.90723, 0.51 ) }
    dend_33 { pt3dadd( -91.1696, 17.1289, 9.29282, 0.29 ) }
    dend_33 { pt3dadd( -91.5277, 16.7644, 9.42167, 0.29 ) }
    dend_33 { pt3dadd( -92.0071, 16.1075, 9.52811, 0.51 ) }
    dend_33 { pt3dadd( -92.6192, 15.14, 9.52241, 0.88 ) }
    dend_33 { pt3dadd( -93.3587, 13.9282, 9.37783, 0.51 ) }
    dend_33 { pt3dadd( -93.5015, 13.715, 9.33114, 0.51 ) }
    dend_33 { pt3dadd( -93.9643, 13.0318, 9.14145, 0.22 ) }
    dend_33 { pt3dadd( -94.8147, 12.0328, 8.81543, 0.22 ) }
    dend_33 { pt3dadd( -95.5573, 11.4894, 8.57942, 0.22 ) }
    dend_33 { pt3dadd( -96.0296, 11.3191, 8.4653, 0.73 ) }
    dend_33 { pt3dadd( -96.7959, 11.2315, 8.25309, 0.88 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 91/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -85.439, 19.1914, 6.80876, 0.36 ) }
    dend_30 { pt3dadd( -85.1756, 18.27, 6.96014, 0.36 ) }
    dend_30 { pt3dadd( -84.9228, 17.5515, 7.06398, 0.36 ) }
    dend_30 { pt3dadd( -84.646, 16.889, 7.14807, 0.58 ) }
    dend_30 { pt3dadd( -84.2692, 16.0776, 7.24235, 0.58 ) }
    dend_30 { pt3dadd( -83.8629, 15.26, 7.32657, 0.07 ) }
    dend_30 { pt3dadd( -83.564, 14.6532, 7.39763, 0.36 ) }
    dend_30 { pt3dadd( -83.2884, 14.0984, 7.45955, 0.07 ) }
    dend_30 { pt3dadd( -82.9849, 13.4391, 7.52094, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -82.8974, 13.1887, 7.5434, 0.66 ) }
    dend_30 { pt3dadd( -82.7327, 12.387, 7.62873, 0.22 ) }
    dend_30 { pt3dadd( -82.6786, 11.4592, 7.73463, 0.07 ) }
    dend_30 { pt3dadd( -82.7446, 10.6066, 7.8291, 0.66 ) }
    dend_30 { pt3dadd( -82.8121, 10.215, 7.86816, 0.66 ) }
    dend_30 { pt3dadd( -83.0297, 9.23931, 7.96562, 0.29 ) }
    dend_30 { pt3dadd( -83.1502, 8.70458, 8.01495, 0.07 ) }
    dend_30 { pt3dadd( -83.2514, 8.17728, 8.05627, 0.36 ) }
    dend_30 { pt3dadd( -83.3365, 7.35871, 8.10329, 0.8 ) }
    dend_30 { pt3dadd( -83.3566, 6.45947, 8.15476, 0.8 ) }
    dend_30 { pt3dadd( -83.3407, 5.4602, 8.22265, 0.07 ) }
    dend_30 { pt3dadd( -83.3198, 4.64198, 8.29874, 0.58 ) }
    dend_30 { pt3dadd( -83.322, 3.61385, 8.44267, 0.66 ) }
    dend_30 { pt3dadd( -83.3504, 2.60564, 8.62962, 0.07 ) }
    dend_30 { pt3dadd( -83.3656, 2.09873, 8.74495, 0.07 ) }
    dend_30 { pt3dadd( -83.3898, 1.43214, 8.93518, 0.36 ) }
    dend_30 { pt3dadd( -83.4193, 0.58537, 9.20556, 0.07 ) }
    dend_30 { pt3dadd( -83.4806, -0.321033, 9.50768, 0.07 ) }
    dend_30 { pt3dadd( -83.5257, -0.817306, 9.6719, 0.29 ) }
    dend_30 { pt3dadd( -83.5682, -1.51864, 9.8846, 0.07 ) }
    dend_30 { pt3dadd( -83.5296, -2.00442, 10.0127, 0.8 ) }
    dend_30 { pt3dadd( -83.299, -3.03479, 10.2382, 0.58 ) }
    dend_30 { pt3dadd( -82.9381, -4.02183, 10.4115, 0.07 ) }
    dend_30 { pt3dadd( -82.8175, -4.28288, 10.449, 0.07 ) }
    dend_30 { pt3dadd( -82.6203, -4.64701, 10.5003, 0.36 ) }
    dend_30 { pt3dadd( -82.0341, -5.55043, 10.6136, 0.07 ) }
    dend_30 { pt3dadd( -81.5279, -6.17719, 10.6811, 0.8 ) }
    dend_30 { pt3dadd( -80.8277, -6.87399, 10.7582, 0.22 ) }
    dend_30 { pt3dadd( -80.344, -7.27543, 10.8015, 0.07 ) }
    dend_30 { pt3dadd( -79.6347, -7.80169, 10.851, 0.44 ) }
    dend_30 { pt3dadd( -78.57, -8.56338, 10.9085, 0.07 ) }
    dend_30 { pt3dadd( -78.0275, -8.92997, 10.9205, 0.07 ) }
    dend_30 { pt3dadd( -77.6469, -9.15085, 10.9205, 0.36 ) }
    dend_30 { pt3dadd( -77.2471, -9.3511, 10.9205, 0.07 ) }
    dend_30 { pt3dadd( -76.6, -9.61525, 10.9205, 0.29 ) }
    dend_30 { pt3dadd( -73.2673, -19.038, 10.5934, 0.29 ) }
    dend_30 { pt3dadd( -71.8126, -28.8235, 9.135, 0.29 ) }
    dend_30 { pt3dadd( -70.3165, -38.6137, 7.75172, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 38/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -56.8956, 50.063, -5.41911, 0.44 ) }
    dend_26 { pt3dadd( -57.5658, 51.0093, -5.50723, 0.44 ) }
    dend_26 { pt3dadd( -58.0775, 51.7454, -5.56922, 0.29 ) }
    dend_26 { pt3dadd( -58.7966, 52.7495, -5.69853, 0.07 ) }
    dend_26 { pt3dadd( -59.1946, 53.2663, -5.78049, 0.66 ) }
    dend_26 { pt3dadd( -59.6249, 53.7767, -5.86982, 0.73 ) }
    dend_26 { pt3dadd( -60.0075, 54.1958, -5.96274, 0.73 ) }
    dend_26 { pt3dadd( -60.609, 54.8205, -6.19806, 0.07 ) }
    dend_26 { pt3dadd( -61.0878, 55.294, -6.42877, 0.07 ) }
    dend_26 { pt3dadd( -61.4123, 55.6255, -6.64914, 0.07 ) }
    dend_26 { pt3dadd( -61.871, 56.1531, -7.07452, 0.29 ) }
    dend_26 { pt3dadd( -62.277, 56.7156, -7.61728, 0.07 ) }
    dend_26 { pt3dadd( -62.5501, 57.2167, -8.10158, 0.07 ) }
    dend_26 { pt3dadd( -62.696, 57.5465, -8.40565, 0.07 ) }
    dend_26 { pt3dadd( -63.0255, 58.4026, -9.13566, 0.58 ) }
    dend_26 { pt3dadd( -63.2614, 59.0289, -9.63643, 0.73 ) }
    dend_26 { pt3dadd( -63.5499, 59.7868, -10.2206, 0.73 ) }
    dend_26 { pt3dadd( -63.8305, 60.5084, -10.7283, 0.44 ) }
    dend_26 { pt3dadd( -64.0224, 60.9641, -11.0217, 0.22 ) }
    dend_26 { pt3dadd( -64.3279, 61.6531, -11.4448, 0.44 ) }
    dend_26 { pt3dadd( -64.5482, 62.1152, -11.7416, 0.22 ) }
    dend_26 { pt3dadd( -64.7671, 62.5765, -12.1172, 0.22 ) }
    dend_26 { pt3dadd( -64.9654, 62.9439, -12.4756, 0.36 ) }
    dend_26 { pt3dadd( -65.088, 63.1469, -12.7, 0.36 ) }
    dend_26 { pt3dadd( -65.4157, 63.5908, -13.2489, 0.07 ) }
    dend_26 { pt3dadd( -65.9631, 64.1647, -14.0387, 0.8 ) }
    dend_26 { pt3dadd( -66.4129, 64.5251, -14.5903, 0.8 ) }
    dend_26 { pt3dadd( -67.3071, 65.0908, -15.4845, 0.07 ) }
    dend_26 { pt3dadd( -67.8196, 65.3792, -15.9271, 0.58 ) }
    dend_26 { pt3dadd( -68.564, 65.8077, -16.4999, 0.22 ) }
    dend_26 { pt3dadd( -68.9749, 66.0696, -16.8051, 0.22 ) }
    dend_26 { pt3dadd( -69.3123, 66.3633, -17.05, 0.07 ) }
    dend_26 { pt3dadd( -69.6042, 66.7186, -17.3074, 0.36 ) }
    dend_26 { pt3dadd( -69.9899, 67.3766, -17.7482, 0.36 ) }
    dend_26 { pt3dadd( -70.3221, 68.1445, -18.2531, 0.22 ) }
    dend_26 { pt3dadd( -70.5874, 69.0564, -18.8578, 0.73 ) }
    dend_26 { pt3dadd( -70.7691, 69.8931, -19.4304, 0.73 ) }
    dend_26 { pt3dadd( -71.0338, 71.2549, -20.4007, 0.07 ) }
    dend_26 { pt3dadd( -71.0962, 71.5176, -20.5995, 0.07 ) }
    dend_26 { pt3dadd( -71.2645, 71.9414, -20.9581, 0.07 ) }
    dend_26 { pt3dadd( -71.6788, 72.4902, -21.5174, 0.07 ) }
    dend_26 { pt3dadd( -72.0392, 72.6877, -21.8298, 0.07 ) }
    dend_26 { pt3dadd( -72.645, 72.8598, -22.2647, 0.51 ) }
    dend_26 { pt3dadd( -73.3911, 73.0307, -22.699, 0.51 ) }
    dend_26 { pt3dadd( -74.4, 73.3476, -23.2361, 0.07 ) }
    dend_26 { pt3dadd( -74.9362, 73.5665, -23.5044, 0.07 ) }
    dend_26 { pt3dadd( -75.881, 74.0444, -23.9464, 0.07 ) }
    dend_26 { pt3dadd( -76.3819, 74.3593, -24.188, 0.66 ) }
    dend_26 { pt3dadd( -76.9186, 74.7923, -24.4875, 1.02 ) }
    dend_26 { pt3dadd( -77.5733, 75.4704, -24.8922, 0.07 ) }
    dend_26 { pt3dadd( -78.1396, 76.1852, -25.2588, 0.07 ) }
    dend_26 { pt3dadd( -78.6337, 76.9061, -25.594, 0.29 ) }
    dend_26 { pt3dadd( -79.0042, 77.4847, -25.8525, 0.29 ) }
    dend_26 { pt3dadd( -79.4695, 78.187, -26.256, 0.07 ) }
    dend_26 { pt3dadd( -79.6998, 78.534, -26.4871, 0.07 ) }
    dend_26 { pt3dadd( -79.8641, 78.8064, -26.6696, 0.07 ) }
    dend_26 { pt3dadd( -80.0541, 79.1366, -26.8701, 0.07 ) }
    dend_26 { pt3dadd( -80.4572, 79.8177, -27.3094, 0.29 ) }
    dend_26 { pt3dadd( -81.0107, 80.7135, -27.886, 0.07 ) }
    dend_26 { pt3dadd( -81.3554, 81.2268, -28.1951, 0.66 ) }
    dend_26 { pt3dadd( -82.0178, 82.1691, -28.7797, 0.88 ) }
    dend_26 { pt3dadd( -82.85, 83.2905, -29.4719, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( -83.5799, 84.2557, -30.0787, 0.51 ) }
    dend_26 { pt3dadd( -83.7873, 84.5428, -30.2548, 0.51 ) }
    dend_26 { pt3dadd( -84.2143, 85.1543, -30.629, 0.07 ) }
    dend_26 { pt3dadd( -84.6201, 85.7187, -30.9785, 0.07 ) }
    dend_26 { pt3dadd( -85.0296, 86.2906, -31.3386, 0.36 ) }
    dend_26 { pt3dadd( -85.5557, 87.0899, -31.8476, 0.07 ) }
    dend_26 { pt3dadd( -85.8267, 87.5217, -32.1122, 0.51 ) }
    dend_26 { pt3dadd( -86.0513, 87.8774, -32.3355, 0.8 ) }
    dend_26 { pt3dadd( -86.3843, 88.3868, -32.6631, 0.8 ) }
    dend_26 { pt3dadd( -87.0678, 89.4331, -33.2989, 0.07 ) }
    dend_26 { pt3dadd( -87.4534, 90.0551, -33.7609, 0.07 ) }
    dend_26 { pt3dadd( -87.7299, 90.4932, -34.1182, 0.07 ) }
    dend_26 { pt3dadd( -87.9756, 90.8605, -34.4546, 0.07 ) }
    dend_26 { pt3dadd( -88.5792, 91.6671, -35.2908, 0.88 ) }
    dend_26 { pt3dadd( -88.7927, 91.9314, -35.594, 0.88 ) }
    dend_26 { pt3dadd( -89.9968, 93.2954, -37.2013, 0.22 ) }
    dend_26 { pt3dadd( -90.2636, 93.5919, -37.5458, 0.22 ) }
    dend_26 { pt3dadd( -90.7424, 94.154, -38.2165, 0.07 ) }
    dend_26 { pt3dadd( -91.372, 94.9762, -39.1885, 0.36 ) }
    dend_26 { pt3dadd( -91.8104, 95.6574, -39.9944, 0.58 ) }
    dend_26 { pt3dadd( -92.0426, 96.0696, -40.4938, 0.58 ) }
    dend_26 { pt3dadd( -92.383, 96.8262, -41.3437, 0.07 ) }
    dend_26 { pt3dadd( -92.5991, 97.4334, -42.0405, 0.29 ) }
    dend_26 { pt3dadd( -92.6915, 97.906, -42.5703, 0.58 ) }
    dend_26 { pt3dadd( -92.6924, 98.8165, -43.5869, 0.07 ) }
    dend_26 { pt3dadd( -92.5874, 99.5469, -44.4569, 0.51 ) }
    dend_26 { pt3dadd( -92.4792, 99.8981, -44.9255, 0.8 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -56.8956, 50.063, -5.41911, 0.07 ) }
    dend_25 { pt3dadd( -57.2078, 48.9189, -5.58024, 0.07 ) }
    dend_25 { pt3dadd( -57.4403, 47.9841, -5.70773, 0.15 ) }
    dend_25 { pt3dadd( -57.5872, 47.3322, -5.79246, 0.07 ) }
    dend_25 { pt3dadd( -57.7626, 46.5075, -5.89231, 0.15 ) }
    dend_25 { pt3dadd( -57.9947, 45.416, -6.02448, 0.07 ) }
    dend_25 { pt3dadd( -58.1483, 44.694, -6.1119, 0.07 ) }
    dend_25 { pt3dadd( -58.344, 43.5204, -6.271, 0.29 ) }
    dend_25 { pt3dadd( -58.4175, 43.0757, -6.33664, 0.07 ) }
    dend_25 { pt3dadd( -58.5256, 42.405, -6.43589, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 37/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -19.2197, 28.4275, 6.805, 0.22 ) }
    dend_20 { pt3dadd( -19.9278, 28.7631, 6.74966, 0.22 ) }
    dend_20 { pt3dadd( -20.7511, 29.3041, 6.66432, 0.22 ) }
    dend_20 { pt3dadd( -21.4039, 29.8216, 6.59155, 0.22 ) }
    dend_20 { pt3dadd( -21.8628, 30.1758, 6.55458, 0.22 ) }
    dend_20 { pt3dadd( -22.2116, 30.4303, 6.53233, 0.22 ) }
    dend_20 { pt3dadd( -22.7998, 30.8284, 6.50275, 0.22 ) }
    dend_20 { pt3dadd( -23.3997, 31.1795, 6.47155, 0.8 ) }
    dend_20 { pt3dadd( -23.9732, 31.4344, 6.42372, 0.8 ) }
    dend_20 { pt3dadd( -25.1229, 31.7631, 6.359, 0.15 ) }
    dend_20 { pt3dadd( -25.5459, 31.8289, 6.3185, 0.15 ) }
    dend_20 { pt3dadd( -26.3762, 31.8904, 6.21185, 0.88 ) }
    dend_20 { pt3dadd( -27.4559, 31.8941, 6.04824, 0.15 ) }
    dend_20 { pt3dadd( -28.361, 31.8629, 5.94124, 0.15 ) }
    dend_20 { pt3dadd( -28.8738, 31.8391, 5.90191, 0.15 ) }
    dend_20 { pt3dadd( -29.7355, 31.8133, 5.88106, 0.15 ) }
    dend_20 { pt3dadd( -30.4687, 31.827, 5.91399, 0.15 ) }
    dend_20 { pt3dadd( -31.0453, 31.8856, 5.93689, 0.95 ) }
    dend_20 { pt3dadd( -32.3428, 32.1766, 5.99419, 0.07 ) }
    dend_20 { pt3dadd( -32.7367, 32.3124, 5.98469, 0.07 ) }
    dend_20 { pt3dadd( -33.1728, 32.495, 5.93534, 0.07 ) }
    dend_20 { pt3dadd( -33.8295, 32.8074, 5.77232, 0.07 ) }
    dend_20 { pt3dadd( -34.9327, 33.4187, 5.34452, 0.95 ) }
    dend_20 { pt3dadd( -35.2526, 33.6099, 5.21159, 0.95 ) }
    dend_20 { pt3dadd( -36.3664, 34.3078, 4.72836, 0.07 ) }
    dend_20 { pt3dadd( -36.7525, 34.5451, 4.56112, 0.07 ) }
    dend_20 { pt3dadd( -37.5806, 35.0257, 4.24004, 0.44 ) }
    dend_20 { pt3dadd( -38.6208, 35.5756, 3.88609, 0.44 ) }
    dend_20 { pt3dadd( -39.6941, 36.0843, 3.59899, 0.07 ) }
    dend_20 { pt3dadd( -40.3164, 36.3387, 3.45302, 0.66 ) }
    dend_20 { pt3dadd( -41.1529, 36.6311, 3.29661, 0.66 ) }
    dend_20 { pt3dadd( -42.141, 36.9185, 3.1236, 0.07 ) }
    dend_20 { pt3dadd( -42.7157, 37.0681, 3.02846, 0.07 ) }
    dend_20 { pt3dadd( -43.2636, 37.1842, 2.91438, 0.07 ) }
    dend_20 { pt3dadd( -44.0353, 37.3265, 2.71364, 0.07 ) }
    dend_20 { pt3dadd( -44.3151, 37.3675, 2.64937, 0.07 ) }
    dend_20 { pt3dadd( -45.5436, 37.5247, 2.48804, 0.07 ) }
    dend_20 { pt3dadd( -55.05, 40.6157, 2.76065, 0.07 ) }
    dend_20 { pt3dadd( -64.4198, 43.9532, 3.79442, 0.07 ) }
    dend_20 { pt3dadd( -73.381, 48.3573, 4.34262, 0.07 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 77/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -19.2197, 28.4275, 6.805, 0.51 ) }
    dend_17 { pt3dadd( -19.6867, 27.6709, 7.12644, 0.51 ) }
    dend_17 { pt3dadd( -20.4665, 26.5315, 7.5947, 0.51 ) }
    dend_17 { pt3dadd( -21.0263, 25.7989, 7.77332, 0.51 ) }
    dend_17 { pt3dadd( -21.587, 25.1747, 7.84469, 0.51 ) }
    dend_17 { pt3dadd( -22.1268, 24.6583, 7.90624, 0.51 ) }
    dend_17 { pt3dadd( -22.9351, 23.975, 7.99774, 0.29 ) }
    dend_17 { pt3dadd( -23.53, 23.5622, 8.03287, 0.29 ) }
    dend_17 { pt3dadd( -25.1427, 22.7442, 8.08529, 0.73 ) }
    dend_17 { pt3dadd( -26.1192, 22.3829, 8.18192, 0.73 ) }
    dend_17 { pt3dadd( -27.2507, 22.0688, 8.3956, 0.15 ) }
    dend_17 { pt3dadd( -27.6289, 21.9881, 8.50436, 0.15 ) }
    dend_17 { pt3dadd( -27.9375, 21.9317, 8.66468, 0.15 ) }
    dend_17 { pt3dadd( -28.4884, 21.7635, 9.31946, 0.15 ) }
    dend_17 { pt3dadd( -28.6093, 21.6495, 9.66694, 0.15 ) }
    dend_17 { pt3dadd( -28.6027, 21.4575, 10.0447, 0.15 ) }
    dend_17 { pt3dadd( -28.5093, 21.1723, 10.4527, 0.15 ) }
    dend_17 { pt3dadd( -28.3999, 20.8586, 10.8544, 0.15 ) }
    dend_17 { pt3dadd( -28.2738, 20.4242, 11.3402, 0.36 ) }
    dend_17 { pt3dadd( -28.1401, 19.777, 11.9737, 0.36 ) }
    dend_17 { pt3dadd( -28.1175, 19.2652, 12.4185, 0.36 ) }
    dend_17 { pt3dadd( -28.2131, 18.5543, 12.9739, 0.22 ) }
    dend_17 { pt3dadd( -28.3596, 18.0804, 13.3155, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -28.6158, 17.5389, 13.73, 0.8 ) }
    dend_17 { pt3dadd( -28.8717, 17.1613, 14.0621, 0.8 ) }
    dend_17 { pt3dadd( -29.3492, 16.6423, 14.612, 0.22 ) }
    dend_17 { pt3dadd( -29.9069, 16.1658, 15.2141, 0.22 ) }
    dend_17 { pt3dadd( -30.2002, 15.9592, 15.5097, 0.66 ) }
    dend_17 { pt3dadd( -31.2737, 15.3286, 16.5248, 0.29 ) }
    dend_17 { pt3dadd( -31.9024, 15.0141, 17.0994, 0.29 ) }
    dend_17 { pt3dadd( -32.4676, 14.7621, 17.5897, 0.29 ) }
    dend_17 { pt3dadd( -32.9591, 14.5458, 17.9949, 0.8 ) }
    dend_17 { pt3dadd( -33.4729, 14.2896, 18.3878, 0.58 ) }
    dend_17 { pt3dadd( -34.1263, 13.8209, 18.9219, 0.22 ) }
    dend_17 { pt3dadd( -34.4133, 13.518, 19.1431, 0.22 ) }
    dend_17 { pt3dadd( -34.5702, 13.2739, 19.2852, 0.22 ) }
    dend_17 { pt3dadd( -34.8468, 12.7105, 19.6013, 0.22 ) }
    dend_17 { pt3dadd( -35.1279, 12.0801, 19.963, 0.73 ) }
    dend_17 { pt3dadd( -35.3839, 11.2221, 20.4713, 0.29 ) }
    dend_17 { pt3dadd( -35.6561, 11.419, 20.3417, 0.07 ) }
    dend_17 { pt3dadd( -36.1295, 11.5459, 20.168, 0.07 ) }
    dend_17 { pt3dadd( -36.5727, 11.6432, 19.9957, 0.22 ) }
    dend_17 { pt3dadd( -37.5864, 11.8843, 19.5494, 0.07 ) }
    dend_17 { pt3dadd( -38.4216, 12.1061, 19.1566, 0.07 ) }
    dend_17 { pt3dadd( -39.0619, 12.2938, 18.8247, 0.29 ) }
    dend_17 { pt3dadd( -40.1154, 12.6047, 18.2319, 0.07 ) }
    dend_17 { pt3dadd( -40.5997, 12.7428, 17.9332, 0.07 ) }
    dend_17 { pt3dadd( -41.586, 12.9782, 17.2746, 0.66 ) }
    dend_17 { pt3dadd( -48.8404, 8.47364, 22.4788, 0.66 ) }
    dend_17 { pt3dadd( -56.0706, 3.57936, 27.3542, 0.66 ) }
    dend_17 { pt3dadd( -62.9252, -1.21925, 32.8303, 0.66 ) }
    dend_17 { pt3dadd( -69.9331, -6.7383, 37.3501, 0.66 ) }
    dend_17 { pt3dadd( -77.8114, -11.5604, 41.1814, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 30/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.4074, 36.0275, 8.38929, 0.51 ) }
    dend_11 { pt3dadd( -12.3612, 36.4154, 8.17385, 0.51 ) }
    dend_11 { pt3dadd( -12.188, 37.3066, 7.75741, 0.51 ) }
    dend_11 { pt3dadd( -12.071, 37.7033, 7.59157, 0.07 ) }
    dend_11 { pt3dadd( -11.8333, 38.4124, 7.32284, 0.58 ) }
    dend_11 { pt3dadd( -11.4438, 39.4966, 6.96246, 0.22 ) }
    dend_11 { pt3dadd( -11.2202, 40.0574, 6.84021, 0.22 ) }
    dend_11 { pt3dadd( -10.9587, 40.6194, 6.78531, 0.22 ) }
    dend_11 { pt3dadd( -10.5325, 41.4971, 6.80428, 0.58 ) }
    dend_11 { pt3dadd( -10.3408, 41.9073, 6.85189, 0.36 ) }
    dend_11 { pt3dadd( -10.0031, 42.6811, 7.01748, 0.8 ) }
    dend_11 { pt3dadd( -9.44585, 44.0784, 7.4415, 0.22 ) }
    dend_11 { pt3dadd( -9.18094, 44.9221, 7.73101, 0.22 ) }
    dend_11 { pt3dadd( -8.99182, 45.7752, 8.0332, 0.22 ) }
    dend_11 { pt3dadd( -8.86991, 46.6259, 8.33569, 0.22 ) }
    dend_11 { pt3dadd( -8.80774, 47.2705, 8.54534, 0.44 ) }
    dend_11 { pt3dadd( -8.79133, 47.7065, 8.65557, 0.15 ) }
    dend_11 { pt3dadd( -8.80416, 48.6188, 8.78732, 0.95 ) }
    dend_11 { pt3dadd( -8.81443, 49.8447, 8.8426, 0.15 ) }
    dend_11 { pt3dadd( -8.77718, 50.4314, 8.79256, 0.15 ) }
    dend_11 { pt3dadd( -8.67406, 51.0247, 8.66222, 0.15 ) }
    dend_11 { pt3dadd( -8.47378, 51.7056, 8.44136, 0.15 ) }
    dend_11 { pt3dadd( -8.32001, 52.0908, 8.2973, 0.15 ) }
    dend_11 { pt3dadd( -8.0486, 52.6682, 8.04848, 0.15 ) }
    dend_11 { pt3dadd( -7.81739, 53.2086, 7.82183, 0.15 ) }
    dend_11 { pt3dadd( -7.70408, 53.5514, 7.69403, 0.15 ) }
    dend_11 { pt3dadd( -7.60194, 53.9673, 7.55673, 0.15 ) }
    dend_11 { pt3dadd( -7.45752, 54.8885, 7.28957, 0.15 ) }
    dend_11 { pt3dadd( -7.38036, 55.6366, 7.05495, 0.15 ) }
    dend_11 { pt3dadd( -7.28555, 56.5883, 6.87913, 0.66 ) }
    dend_11 { pt3dadd( -7.18606, 57.4884, 6.79071, 0.44 ) }
    dend_11 { pt3dadd( -7.0659, 58.2343, 6.78639, 0.44 ) }
    dend_11 { pt3dadd( -6.87536, 59.0416, 6.85069, 0.29 ) }
    dend_11 { pt3dadd( -6.66928, 59.7056, 6.96924, 0.29 ) }
    dend_11 { pt3dadd( -5.85807, 61.9785, 7.65516, 0.15 ) }
    dend_11 { pt3dadd( -5.66961, 62.504, 7.86242, 0.15 ) }
    dend_11 { pt3dadd( -5.36636, 63.3979, 8.27613, 0.29 ) }
    dend_11 { pt3dadd( -5.21899, 63.8673, 8.48694, 0.51 ) }
    dend_11 { pt3dadd( -4.97556, 64.7128, 8.81418, 0.29 ) }
    dend_11 { pt3dadd( -4.79867, 65.3945, 8.96687, 0.29 ) }
    dend_11 { pt3dadd( -4.64526, 66.0329, 9.00188, 0.51 ) }
    dend_11 { pt3dadd( -4.48496, 66.5306, 9.04475, 0.51 ) }
    dend_11 { pt3dadd( -4.06292, 67.4177, 9.15691, 0.22 ) }
    dend_11 { pt3dadd( -3.63738, 68.0075, 9.25725, 0.66 ) }
    dend_11 { pt3dadd( -2.83909, 68.8269, 9.36298, 0.07 ) }
    dend_11 { pt3dadd( -1.84408, 69.6973, 9.36684, 0.36 ) }
    dend_11 { pt3dadd( -1.07796, 70.2972, 9.33902, 0.07 ) }
    dend_11 { pt3dadd( -0.521099, 70.7119, 9.28826, 0.07 ) }
    dend_11 { pt3dadd( 0.177056, 71.2601, 9.16468, 0.66 ) }
    dend_11 { pt3dadd( 0.79305, 71.8059, 8.92367, 0.66 ) }
    dend_11 { pt3dadd( 1.74879, 72.7762, 8.35778, 0.07 ) }
    dend_11 { pt3dadd( 2.2106, 73.2896, 7.99722, 0.07 ) }
    dend_11 { pt3dadd( 2.84511, 74.0636, 7.43973, 1.24 ) }
    dend_11 { pt3dadd( 3.38925, 74.7589, 6.93552, 0.8 ) }
    dend_11 { pt3dadd( 4.06872, 75.6283, 6.32212, 0.36 ) }
    dend_11 { pt3dadd( 4.59803, 76.2754, 5.89513, 0.58 ) }
    dend_11 { pt3dadd( 4.81769, 76.5265, 5.73486, 0.58 ) }
    dend_11 { pt3dadd( 5.45371, 77.1714, 5.32554, 0.15 ) }
    dend_11 { pt3dadd( 6.40422, 77.977, 4.86266, 0.15 ) }
    dend_11 { pt3dadd( 6.78811, 78.2318, 4.74183, 0.15 ) }
    dend_11 { pt3dadd( 7.03912, 78.382, 4.68309, 0.15 ) }
    dend_11 { pt3dadd( 7.35134, 78.5798, 4.60155, 0.15 ) }
    dend_11 { pt3dadd( 7.68533, 78.8382, 4.49409, 0.15 ) }
    dend_11 { pt3dadd( 7.88309, 79.0605, 4.41445, 0.15 ) }
    dend_11 { pt3dadd( 8.18752, 79.5507, 4.28327, 0.15 ) }
    dend_11 { pt3dadd( 8.60213, 80.3596, 4.06767, 0.73 ) }
    dend_11 { pt3dadd( 8.80652, 80.8376, 3.98674, 0.73 ) }
    dend_11 { pt3dadd( 9.10342, 81.6525, 3.90373, 0.73 ) }
    dend_11 { pt3dadd( 9.34189, 82.4298, 3.86566, 0.07 ) }
    dend_11 { pt3dadd( 9.48471, 82.9882, 3.87241, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_11 { pt3dadd( 9.59293, 83.4586, 3.92059, 0.22 ) }
    dend_11 { pt3dadd( 9.86999, 84.6566, 4.13693, 0.8 ) }
    dend_11 { pt3dadd( 10.0083, 85.235, 4.26683, 0.95 ) }
    dend_11 { pt3dadd( 10.1678, 85.9342, 4.44975, 0.95 ) }
    dend_11 { pt3dadd( 10.3914, 87.1518, 4.75914, 0.29 ) }
    dend_11 { pt3dadd( 10.5042, 88.0611, 4.96435, 0.07 ) }
    dend_11 { pt3dadd( 10.5293, 88.4314, 5.03905, 0.07 ) }
    dend_11 { pt3dadd( 10.543, 88.822, 5.1004, 0.07 ) }
    dend_11 { pt3dadd( 10.5578, 89.4844, 5.20028, 0.66 ) }
    dend_11 { pt3dadd( 10.5892, 90.3921, 5.32517, 0.73 ) }
    dend_11 { pt3dadd( 10.6486, 91.2776, 5.42087, 0.73 ) }
    dend_11 { pt3dadd( 10.7794, 92.2242, 5.48523, 0.07 ) }
    dend_11 { pt3dadd( 10.8795, 92.5887, 5.50507, 0.07 ) }
    dend_11 { pt3dadd( 11.0579, 92.9803, 5.50354, 0.07 ) }
    dend_11 { pt3dadd( 11.3026, 93.3417, 5.47355, 0.07 ) }
    dend_11 { pt3dadd( 11.6512, 93.8038, 5.37832, 0.07 ) }
    dend_11 { pt3dadd( 12.1905, 94.4004, 5.20771, 0.07 ) }
    dend_11 { pt3dadd( 12.7706, 94.9722, 4.99041, 0.29 ) }
    dend_11 { pt3dadd( 13.2003, 95.4031, 4.80989, 0.29 ) }
    dend_11 { pt3dadd( 13.5795, 95.8278, 4.61824, 0.58 ) }
    dend_11 { pt3dadd( 14.3355, 96.9351, 4.10849, 0.95 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 21/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -12.4074, 36.0275, 8.38929, 0.15 ) }
    dend_2 { pt3dadd( -11.5695, 36.5257, 8.89253, 0.15 ) }
    dend_2 { pt3dadd( -10.745, 36.9058, 9.32164, 0.22 ) }
    dend_2 { pt3dadd( -9.86919, 37.2299, 9.72958, 0.44 ) }
    dend_2 { pt3dadd( -9.05573, 37.4184, 10.0416, 0.22 ) }
    dend_2 { pt3dadd( -8.05623, 37.5306, 10.4318, 0.22 ) }
    dend_2 { pt3dadd( -7.58522, 37.5472, 10.6267, 0.36 ) }
    dend_2 { pt3dadd( -6.90275, 37.4711, 10.9111, 0.36 ) }
    dend_2 { pt3dadd( -6.53798, 37.4058, 11.0597, 0.36 ) }
    dend_2 { pt3dadd( -5.33444, 37.1582, 11.6058, 0.15 ) }
    dend_2 { pt3dadd( -4.21284, 36.9501, 12.2032, 0.36 ) }
    dend_2 { pt3dadd( -3.58419, 36.8908, 12.596, 0.44 ) }
    dend_2 { pt3dadd( -3.25383, 36.9128, 12.8491, 0.36 ) }
    dend_2 { pt3dadd( -2.79898, 37.0653, 13.2596, 0.51 ) }
    dend_2 { pt3dadd( -2.31498, 37.4346, 13.7453, 0.29 ) }
    dend_2 { pt3dadd( -2.03106, 37.8467, 14.0577, 0.29 ) }
    dend_2 { pt3dadd( -1.83107, 38.2691, 14.2464, 0.29 ) }
    dend_2 { pt3dadd( -1.60558, 38.8965, 14.3882, 0.22 ) }
    dend_2 { pt3dadd( -1.44446, 39.4379, 14.4409, 0.22 ) }
    dend_2 { pt3dadd( -1.24086, 40.1539, 14.4399, 0.22 ) }
    dend_2 { pt3dadd( -1.0923, 40.6503, 14.3976, 0.66 ) }
    dend_2 { pt3dadd( -0.832372, 41.4342, 14.298, 0.73 ) }
    dend_2 { pt3dadd( -0.387566, 42.6895, 14.0923, 0.22 ) }
    dend_2 { pt3dadd( -0.208, 43.171, 14.012, 0.22 ) }
    dend_2 { pt3dadd( 0.0318936, 43.7523, 13.9447, 0.44 ) }
    dend_2 { pt3dadd( 0.261125, 44.2401, 13.9284, 0.73 ) }
    dend_2 { pt3dadd( 0.659435, 45.0405, 13.9916, 0.73 ) }
    dend_2 { pt3dadd( 0.914922, 45.5405, 14.0804, 0.73 ) }
    dend_2 { pt3dadd( 1.37737, 46.3467, 14.2512, 0.22 ) }
    dend_2 { pt3dadd( 1.94756, 47.2421, 14.4541, 0.44 ) }
    dend_2 { pt3dadd( 2.46488, 47.9868, 14.6283, 0.58 ) }
    dend_2 { pt3dadd( 3.08272, 48.8856, 14.8539, 0.29 ) }
    dend_2 { pt3dadd( 3.29131, 49.189, 14.9323, 0.29 ) }
    dend_2 { pt3dadd( 4.21638, 50.4389, 15.2476, 0.15 ) }
    dend_2 { pt3dadd( 4.80238, 51.104, 15.3879, 0.15 ) }
    dend_2 { pt3dadd( 5.39183, 51.6332, 15.4298, 0.88 ) }
    // Section: dend_106, id: dend_106, parent: dend_82 (entry count 57/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 4.80847, -49.6631, 1.53878, 0.44 ) }
    dend_106 { pt3dadd( 6.10826, -50.1101, 1.44859, 0.44 ) }
    dend_106 { pt3dadd( 7.01844, -50.3275, 1.30727, 0.44 ) }
    dend_106 { pt3dadd( 7.59719, -50.4398, 1.20073, 0.44 ) }
    dend_106 { pt3dadd( 8.23609, -50.563, 1.05226, 0.44 ) }
    dend_106 { pt3dadd( 9.498, -50.8299, 0.745005, 0.44 ) }
    dend_106 { pt3dadd( 10.2299, -51.0141, 0.569363, 0.58 ) }
    dend_106 { pt3dadd( 10.9674, -51.2137, 0.331966, 0.29 ) }
    dend_106 { pt3dadd( 11.4372, -51.3807, 0.186028, 0.29 ) }
    dend_106 { pt3dadd( 12.22, -51.7895, -0.0202886, 0.51 ) }
    dend_106 { pt3dadd( 12.876, -52.2724, -0.138064, 0.51 ) }
    dend_106 { pt3dadd( 13.4451, -52.8728, -0.134573, 0.58 ) }
    dend_106 { pt3dadd( 13.9538, -53.6273, -0.0323103, 0.58 ) }
    dend_106 { pt3dadd( 14.3621, -54.4395, 0.142, 0.51 ) }
    dend_106 { pt3dadd( 14.6907, -55.2693, 0.4043, 0.51 ) }
    dend_106 { pt3dadd( 14.8773, -55.8698, 0.703723, 0.51 ) }
    dend_106 { pt3dadd( 15.1032, -56.8512, 1.36751, 0.51 ) }
    dend_106 { pt3dadd( 15.2644, -57.5237, 1.94555, 0.51 ) }
    dend_106 { pt3dadd( 15.3012, -57.6339, 2.06337, 0.51 ) }
    dend_106 { pt3dadd( 15.5268, -57.9733, 2.51873, 0.36 ) }
    dend_106 { pt3dadd( 16.2027, -58.529, 3.44089, 0.36 ) }
    dend_106 { pt3dadd( 16.5455, -58.7536, 3.79878, 0.36 ) }
    dend_106 { pt3dadd( 17.2591, -59.1821, 4.38743, 0.36 ) }
    dend_106 { pt3dadd( 17.7373, -59.4938, 4.71891, 0.51 ) }
    dend_106 { pt3dadd( 18.5953, -60.1212, 5.26021, 0.66 ) }
    dend_106 { pt3dadd( 19.3803, -60.7609, 5.67309, 0.51 ) }
    dend_106 { pt3dadd( 20.2884, -61.5248, 6.10393, 0.51 ) }
    dend_106 { pt3dadd( 20.9167, -62.0706, 6.40359, 0.51 ) }
    dend_106 { pt3dadd( 21.7674, -62.8947, 6.84249, 0.51 ) }
    dend_106 { pt3dadd( 22.4916, -63.6787, 7.22186, 0.66 ) }
    dend_106 { pt3dadd( 23.2974, -64.6513, 7.60252, 0.66 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 88/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 4.80847, -49.6631, 1.53878, 0.88 ) }
    dend_83 { pt3dadd( 4.5832, -50.7779, 0.840791, 0.88 ) }
    dend_83 { pt3dadd( 4.41088, -51.7264, 0.373413, 0.88 ) }
    dend_83 { pt3dadd( 4.29995, -52.375, 0.139388, 0.88 ) }
    dend_83 { pt3dadd( 4.06619, -53.7727, -0.228661, 0.51 ) }
    dend_83 { pt3dadd( 3.8555, -55.088, -0.466658, 0.73 ) }
    dend_83 { pt3dadd( 3.63938, -56.569, -0.632847, 0.73 ) }
    dend_83 { pt3dadd( 3.48234, -58.0587, -0.606017, 0.88 ) }
    dend_83 { pt3dadd( 3.38395, -59.1709, -0.477136, 0.88 ) }
    dend_83 { pt3dadd( 3.32734, -59.8476, -0.356411, 0.88 ) }
    dend_83 { pt3dadd( 3.23987, -60.9281, -0.0577413, 0.73 ) }
    dend_83 { pt3dadd( 3.18768, -61.7242, 0.23495, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_83 { pt3dadd( 3.15746, -62.4178, 0.535133, 0.73 ) }
    dend_83 { pt3dadd( 3.11649, -63.6277, 0.912037, 1.17 ) }
    // Section: dend_81, id: dend_81, parent: dend_73 (entry count 2/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -11.4609, -24.9748, 7.12346, 0.07 ) }
    dend_81 { pt3dadd( -11.4555, -25.0518, 7.15276, 0.07 ) }
    dend_81 { pt3dadd( -11.4808, -25.6623, 7.40762, 0.44 ) }
    dend_81 { pt3dadd( -11.556, -26.6245, 7.88161, 0.36 ) }
    dend_81 { pt3dadd( -11.6071, -27.3414, 8.26178, 0.29 ) }
    dend_81 { pt3dadd( -11.6508, -28.1679, 8.74833, 0.29 ) }
    dend_81 { pt3dadd( -11.6675, -28.9984, 9.29666, 0.44 ) }
    dend_81 { pt3dadd( -11.664, -29.5725, 9.72875, 0.44 ) }
    dend_81 { pt3dadd( -11.6317, -29.9984, 10.119, 0.44 ) }
    dend_81 { pt3dadd( -11.4323, -30.0639, 10.3192, 0.44 ) }
    dend_81 { pt3dadd( -11.0028, -30.1175, 10.5826, 0.44 ) }
    dend_81 { pt3dadd( -10.2895, -30.2306, 10.958, 0.36 ) }
    dend_81 { pt3dadd( -9.35296, -30.4461, 11.4063, 0.22 ) }
    dend_81 { pt3dadd( -8.54143, -30.6621, 11.7978, 0.36 ) }
    dend_81 { pt3dadd( -8.07046, -30.8333, 12.0519, 0.29 ) }
    dend_81 { pt3dadd( -7.30182, -31.2367, 12.5985, 0.51 ) }
    dend_81 { pt3dadd( -6.77371, -31.6733, 13.1149, 0.51 ) }
    dend_81 { pt3dadd( -6.53283, -32.0998, 13.6086, 0.36 ) }
    dend_81 { pt3dadd( -6.56024, -32.4682, 14.1189, 0.36 ) }
    dend_81 { pt3dadd( -6.72271, -32.8416, 14.6313, 0.36 ) }
    dend_81 { pt3dadd( -6.89887, -33.294, 15.1632, 0.36 ) }
    dend_81 { pt3dadd( -6.96768, -33.6034, 15.4647, 0.36 ) }
    dend_81 { pt3dadd( -6.96925, -33.9073, 15.6791, 0.51 ) }
    dend_81 { pt3dadd( -6.85173, -34.614, 16.0647, 0.51 ) }
    dend_81 { pt3dadd( -6.63821, -35.4843, 16.4425, 0.66 ) }
    dend_81 { pt3dadd( -6.26357, -36.7198, 16.8722, 0.36 ) }
    dend_81 { pt3dadd( -5.98081, -37.479, 17.0951, 0.29 ) }
    dend_81 { pt3dadd( -5.8675, -37.7208, 17.1589, 0.29 ) }
    dend_81 { pt3dadd( -5.51593, -38.35, 17.2896, 0.29 ) }
    dend_81 { pt3dadd( -5.07888, -39.0351, 17.3995, 0.15 ) }
    dend_81 { pt3dadd( -4.77525, -39.4756, 17.4613, 0.15 ) }
    dend_81 { pt3dadd( -4.25452, -40.2674, 17.5548, 0.15 ) }
    dend_81 { pt3dadd( -3.72845, -41.1599, 17.7066, 0.44 ) }
    dend_81 { pt3dadd( -3.30536, -42.0606, 17.8882, 0.29 ) }
    dend_81 { pt3dadd( -3.00942, -42.8541, 18.068, 0.15 ) }
    dend_81 { pt3dadd( -2.88863, -43.2705, 18.1707, 0.36 ) }
    dend_81 { pt3dadd( -2.72216, -43.9916, 18.3541, 0.15 ) }
    dend_81 { pt3dadd( -2.52455, -45.0457, 18.627, 0.29 ) }
    dend_81 { pt3dadd( -2.3182, -46.3422, 18.9948, 0.15 ) }
    dend_81 { pt3dadd( -2.18953, -47.0719, 19.2154, 0.15 ) }
    dend_81 { pt3dadd( -1.92962, -48.2168, 19.5884, 0.58 ) }
    dend_81 { pt3dadd( -1.63599, -49.1126, 19.9153, 0.66 ) }
    dend_81 { pt3dadd( -1.33792, -49.7441, 20.1768, 0.36 ) }
    dend_81 { pt3dadd( -0.87066, -50.4591, 20.5485, 0.36 ) }
    dend_81 { pt3dadd( -0.400943, -51.0211, 20.9394, 0.15 ) }
    dend_81 { pt3dadd( 0.0421551, -51.4931, 21.3909, 0.15 ) }
    dend_81 { pt3dadd( 0.383353, -51.8306, 21.8457, 0.29 ) }
    dend_81 { pt3dadd( 0.751074, -52.2313, 22.4769, 0.29 ) }
    dend_81 { pt3dadd( 1.05637, -52.7294, 23.1842, 0.29 ) }
    dend_81 { pt3dadd( 1.1313, -53.0076, 23.4166, 0.29 ) }
    dend_81 { pt3dadd( 1.12599, -53.4878, 23.4911, 0.29 ) }
    dend_81 { pt3dadd( 1.1602, -54.2214, 23.4567, 0.29 ) }
    dend_81 { pt3dadd( 1.28654, -55.3092, 23.2758, 0.22 ) }
    dend_81 { pt3dadd( 1.48874, -56.4393, 23.0059, 0.22 ) }
    dend_81 { pt3dadd( 1.86451, -57.8544, 22.608, 0.58 ) }
    dend_81 { pt3dadd( 2.22941, -58.8156, 22.3088, 0.8 ) }
    dend_81 { pt3dadd( 2.687, -59.8456, 21.9439, 0.15 ) }
    dend_81 { pt3dadd( 3.09492, -60.5666, 21.6488, 0.15 ) }
    dend_81 { pt3dadd( 3.30277, -60.8497, 21.5091, 0.15 ) }
    dend_81 { pt3dadd( 3.7324, -61.2888, 21.2549, 0.15 ) }
    dend_81 { pt3dadd( 4.08338, -61.5438, 21.1462, 0.15 ) }
    dend_81 { pt3dadd( 8.53426, -70.1283, 23.6953, 0.15 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 64/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -11.4609, -24.9748, 7.12346, 0.66 ) }
    dend_74 { pt3dadd( -11.9734, -24.0765, 7.85696, 0.66 ) }
    dend_74 { pt3dadd( -12.6026, -23.0681, 8.79276, 0.58 ) }
    dend_74 { pt3dadd( -12.9847, -22.4975, 9.40188, 0.58 ) }
    dend_74 { pt3dadd( -13.3406, -22.0016, 9.99539, 0.58 ) }
    dend_74 { pt3dadd( -13.6561, -21.6089, 10.5606, 0.58 ) }
    dend_74 { pt3dadd( -14.0335, -21.2171, 11.2841, 0.58 ) }
    dend_74 { pt3dadd( -14.2069, -21.2008, 11.7303, 0.58 ) }
    dend_74 { pt3dadd( -14.3643, -21.413, 12.1554, 0.58 ) }
    dend_74 { pt3dadd( -14.5195, -21.6649, 12.5017, 0.58 ) }
    dend_74 { pt3dadd( -14.8983, -22.1959, 13.1209, 0.58 ) }
    dend_74 { pt3dadd( -15.2237, -22.5129, 13.4651, 0.44 ) }
    dend_74 { pt3dadd( -15.838, -22.8946, 13.8596, 0.44 ) }
    dend_74 { pt3dadd( -16.291, -23.0397, 14.044, 0.44 ) }
    dend_74 { pt3dadd( -17.1164, -23.1283, 14.2427, 0.44 ) }
    dend_74 { pt3dadd( -17.9844, -23.0844, 14.3891, 0.58 ) }
    dend_74 { pt3dadd( -18.9774, -22.872, 14.4858, 0.51 ) }
    dend_74 { pt3dadd( -19.8423, -22.5674, 14.5311, 0.44 ) }
    dend_74 { pt3dadd( -20.3765, -22.3134, 14.5482, 0.44 ) }
    dend_74 { pt3dadd( -20.9326, -22.0133, 14.5625, 0.44 ) }
    dend_74 { pt3dadd( -21.4351, -21.7246, 14.6019, 0.44 ) }
    dend_74 { pt3dadd( -22.0914, -21.333, 14.7107, 0.44 ) }
    dend_74 { pt3dadd( -22.5836, -21.025, 14.8264, 0.51 ) }
    dend_74 { pt3dadd( -23.093, -20.7139, 14.9673, 0.51 ) }
    dend_74 { pt3dadd( -24.2418, -20.0641, 15.3006, 0.44 ) }
    dend_74 { pt3dadd( -25.2571, -19.5866, 15.5742, 0.44 ) }
    dend_74 { pt3dadd( -25.8591, -19.33, 15.7282, 0.51 ) }
    dend_74 { pt3dadd( -26.2445, -19.184, 15.8292, 0.73 ) }
    dend_74 { pt3dadd( -26.9898, -18.9109, 16.0285, 0.51 ) }
    dend_74 { pt3dadd( -27.4955, -18.7295, 16.1599, 0.51 ) }
    dend_74 { pt3dadd( -28.7692, -18.2883, 16.5089, 0.73 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 95/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 70.523, -36.2663, -11.3098, 0.07 ) }
    dend_71 { pt3dadd( 71.5515, -36.54, -11.0017, 0.07 ) }
    dend_71 { pt3dadd( 72.1317, -36.644, -10.8709, 0.07 ) }
    dend_71 { pt3dadd( 72.983, -36.8092, -10.6719, 0.07 ) }
    dend_71 { pt3dadd( 73.3881, -36.9157, -10.5727, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_71 { pt3dadd( 73.8665, -37.0509, -10.4588, 0.58 ) }
    dend_71 { pt3dadd( 74.6623, -37.28, -10.2487, 0.36 ) }
    dend_71 { pt3dadd( 75.4418, -37.4842, -10.04, 0.07 ) }
    dend_71 { pt3dadd( 76.0824, -37.6748, -9.85042, 0.07 ) }
    dend_71 { pt3dadd( 76.7256, -37.9036, -9.63677, 0.07 ) }
    dend_71 { pt3dadd( 77.2918, -38.1428, -9.41425, 1.02 ) }
    dend_71 { pt3dadd( 78.3666, -38.6531, -8.88646, 0.15 ) }
    dend_71 { pt3dadd( 78.9721, -38.9656, -8.55746, 0.15 ) }
    dend_71 { pt3dadd( 79.5476, -39.2492, -8.24996, 0.15 ) }
    dend_71 { pt3dadd( 80.1834, -39.5261, -7.90551, 0.15 ) }
    dend_71 { pt3dadd( 80.6622, -39.7044, -7.64017, 0.44 ) }
    dend_71 { pt3dadd( 81.8302, -40.0886, -6.92895, 0.66 ) }
    dend_71 { pt3dadd( 82.5097, -40.279, -6.50561, 0.66 ) }
    dend_71 { pt3dadd( 83.3642, -40.4796, -5.94124, 0.36 ) }
    dend_71 { pt3dadd( 84.3299, -40.6888, -5.27298, 0.07 ) }
    dend_71 { pt3dadd( 84.7632, -40.7649, -4.96232, 0.58 ) }
    dend_71 { pt3dadd( 85.7665, -40.8666, -4.25171, 0.07 ) }
    dend_71 { pt3dadd( 86.2069, -40.8852, -3.95277, 0.07 ) }
    dend_71 { pt3dadd( 86.7063, -40.8899, -3.62082, 0.07 ) }
    dend_71 { pt3dadd( 87.7792, -40.9101, -2.99526, 0.58 ) }
    dend_71 { pt3dadd( 88.5726, -40.9491, -2.6547, 0.07 ) }
    dend_71 { pt3dadd( 89.3254, -41.0118, -2.44147, 0.07 ) }
    dend_71 { pt3dadd( 89.9103, -41.0741, -2.35794, 0.22 ) }
    dend_71 { pt3dadd( 90.3461, -41.1217, -2.32059, 0.22 ) }
    dend_71 { pt3dadd( 91.1702, -41.2161, -2.30081, 0.07 ) }
    dend_71 { pt3dadd( 91.8312, -41.2868, -2.31577, 0.58 ) }
    dend_71 { pt3dadd( 92.9081, -41.3926, -2.29018, 0.07 ) }
    dend_71 { pt3dadd( 93.9651, -41.436, -2.11727, 0.07 ) }
    dend_71 { pt3dadd( 94.4812, -41.4302, -1.96714, 0.07 ) }
    dend_71 { pt3dadd( 94.6949, -41.4232, -1.88004, 0.29 ) }
    dend_71 { pt3dadd( 95.1972, -41.3927, -1.59906, 0.29 ) }
    dend_71 { pt3dadd( 96.2423, -41.311, -0.854629, 0.07 ) }
    dend_71 { pt3dadd( 97.5291, -41.1744, 0.2532, 0.66 ) }
    dend_71 { pt3dadd( 97.9887, -41.1121, 0.69156, 0.07 ) }
    dend_71 { pt3dadd( 98.3595, -41.0726, 1.03944, 0.07 ) }
    dend_71 { pt3dadd( 98.6649, -41.0577, 1.31056, 0.07 ) }
    dend_71 { pt3dadd( 99.0118, -41.0947, 1.61974, 0.07 ) }
    dend_71 { pt3dadd( 99.2474, -41.154, 1.79285, 0.07 ) }
    dend_71 { pt3dadd( 99.6041, -41.2704, 1.99127, 0.07 ) }
    dend_71 { pt3dadd( 100.148, -41.4921, 2.32659, 0.36 ) }
    dend_71 { pt3dadd( 100.325, -41.5944, 2.44077, 0.36 ) }
    dend_71 { pt3dadd( 101.092, -42.2469, 2.92881, 0.07 ) }
    dend_71 { pt3dadd( 101.522, -42.7085, 3.17373, 0.07 ) }
    dend_71 { pt3dadd( 101.86, -43.0822, 3.32748, 0.29 ) }
    dend_71 { pt3dadd( 102.404, -43.6655, 3.56486, 0.15 ) }
    dend_71 { pt3dadd( 102.753, -44.0154, 3.72661, 0.15 ) }
    dend_71 { pt3dadd( 103.189, -44.4151, 3.91799, 0.36 ) }
    dend_71 { pt3dadd( 103.878, -45.0178, 4.18859, 0.07 ) }
    dend_71 { pt3dadd( 104.527, -45.5928, 4.45454, 0.22 ) }
    dend_71 { pt3dadd( 105.287, -46.2121, 4.74976, 0.07 ) }
    dend_71 { pt3dadd( 105.952, -46.6917, 4.91191, 0.07 ) }
    dend_71 { pt3dadd( 106.485, -47.0305, 4.94722, 0.07 ) }
    dend_71 { pt3dadd( 107.07, -47.3573, 4.87494, 0.07 ) }
    dend_71 { pt3dadd( 107.627, -47.6284, 4.72473, 0.22 ) }
    dend_71 { pt3dadd( 108.621, -48.0431, 4.3716, 0.07 ) }
    dend_71 { pt3dadd( 110.101, -48.54, 3.79064, 0.22 ) }
    dend_71 { pt3dadd( 111.42, -48.8588, 3.2779, 0.07 ) }
    dend_71 { pt3dadd( 112.464, -48.9981, 2.89494, 0.07 ) }
    dend_71 { pt3dadd( 113.234, -49.0195, 2.66542, 0.66 ) }
    dend_71 { pt3dadd( 114.247, -48.9379, 2.44018, 0.44 ) }
    dend_71 { pt3dadd( 115.317, -48.7495, 2.32763, 0.22 ) }
    dend_71 { pt3dadd( 116.021, -48.5838, 2.41124, 0.07 ) }
    dend_71 { pt3dadd( 116.714, -48.3885, 2.61323, 0.07 ) }
    dend_71 { pt3dadd( 117.897, -48.1216, 3.13229, 0.07 ) }
    dend_71 { pt3dadd( 118.462, -48.0485, 3.40723, 0.07 ) }
    dend_71 { pt3dadd( 119.016, -48.0905, 3.67632, 0.29 ) }
    dend_71 { pt3dadd( 120.031, -48.6087, 3.97521, 0.07 ) }
    dend_71 { pt3dadd( 120.442, -48.9599, 3.99519, 0.44 ) }
    dend_71 { pt3dadd( 121.359, -49.8798, 3.88999, 0.07 ) }
    dend_71 { pt3dadd( 122.159, -50.7509, 3.67932, 0.07 ) }
    dend_71 { pt3dadd( 122.575, -51.2347, 3.53423, 0.22 ) }
    dend_71 { pt3dadd( 123.192, -51.961, 3.23007, 0.07 ) }
    dend_71 { pt3dadd( 123.576, -52.3973, 2.97931, 0.66 ) }
    dend_71 { pt3dadd( 124.03, -52.8722, 2.67335, 0.44 ) }
    dend_71 { pt3dadd( 124.242, -53.0741, 2.5288, 0.44 ) }
    dend_71 { pt3dadd( 133.65, -55.3214, 5.06544, 0.44 ) }
    dend_71 { pt3dadd( 143.177, -55.528, 8.09925, 0.44 ) }
    dend_71 { pt3dadd( 152.918, -55.152, 10.3266, 0.44 ) }
    dend_71 { pt3dadd( 162.129, -54.9686, 14.2163, 0.44 ) }
    dend_71 { pt3dadd( 170.563, -55.7923, 19.5256, 0.44 ) }
    dend_71 { pt3dadd( 179.019, -54.7621, 24.7638, 0.44 ) }
    dend_71 { pt3dadd( 187.536, -52.3789, 29.4302, 0.44 ) }
    dend_71 { pt3dadd( 195.342, -48.9151, 34.6324, 0.44 ) }
    dend_71 { pt3dadd( 202.609, -46.7238, 41.1439, 0.44 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 84/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 70.523, -36.2663, -11.3098, 0.22 ) }
    dend_70 { pt3dadd( 71.0836, -35.8483, -10.9092, 0.22 ) }
    dend_70 { pt3dadd( 71.4704, -35.5182, -10.6408, 0.22 ) }
    dend_70 { pt3dadd( 71.9372, -35.1516, -10.3465, 0.36 ) }
    dend_70 { pt3dadd( 72.3363, -34.8665, -10.0861, 0.07 ) }
    dend_70 { pt3dadd( 73.1437, -34.3999, -9.62102, 0.07 ) }
    dend_70 { pt3dadd( 73.8191, -34.0634, -9.26664, 0.36 ) }
    dend_70 { pt3dadd( 74.1712, -33.9236, -9.09185, 0.07 ) }
    dend_70 { pt3dadd( 74.6743, -33.7126, -8.86279, 0.07 ) }
    dend_70 { pt3dadd( 75.1866, -33.4552, -8.6401, 0.66 ) }
    dend_70 { pt3dadd( 76.15, -32.903, -8.26513, 0.07 ) }
    dend_70 { pt3dadd( 76.3781, -32.738, -8.19538, 0.07 ) }
    dend_70 { pt3dadd( 76.6162, -32.5252, -8.12757, 0.07 ) }
    dend_70 { pt3dadd( 77.2254, -31.851, -7.97563, 0.44 ) }
    dend_70 { pt3dadd( 77.6844, -31.2509, -7.88082, 0.15 ) }
    dend_70 { pt3dadd( 78.144, -30.6131, -7.85818, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_70 { pt3dadd( 78.6993, -29.767, -7.88272, 0.15 ) }
    dend_70 { pt3dadd( 79.1965, -28.9706, -7.93182, 0.66 ) }
    dend_70 { pt3dadd( 79.5954, -28.303, -7.99084, 0.66 ) }
    dend_70 { pt3dadd( 79.9463, -27.7736, -8.0544, 0.95 ) }
    dend_70 { pt3dadd( 80.726, -26.7066, -8.27166, 0.07 ) }
    dend_70 { pt3dadd( 81.195, -26.1362, -8.42944, 0.29 ) }
    dend_70 { pt3dadd( 81.616, -25.7109, -8.59763, 0.07 ) }
    dend_70 { pt3dadd( 82.2376, -25.187, -8.86594, 0.29 ) }
    dend_70 { pt3dadd( 83.2568, -24.4681, -9.30091, 0.07 ) }
    dend_70 { pt3dadd( 84.3942, -23.7701, -9.7338, 0.07 ) }
    dend_70 { pt3dadd( 84.8215, -23.5259, -9.88949, 0.07 ) }
    dend_70 { pt3dadd( 85.5533, -23.1112, -10.1691, 0.58 ) }
    dend_70 { pt3dadd( 85.9767, -22.8657, -10.3335, 0.66 ) }
    dend_70 { pt3dadd( 86.4919, -22.5548, -10.5203, 0.66 ) }
    dend_70 { pt3dadd( 87.4082, -21.9254, -10.7972, 0.22 ) }
    dend_70 { pt3dadd( 88.0238, -21.4727, -10.9045, 0.22 ) }
    dend_70 { pt3dadd( 88.6628, -20.9606, -10.986, 0.22 ) }
    dend_70 { pt3dadd( 89.0283, -20.6325, -11.0129, 0.22 ) }
    dend_70 { pt3dadd( 89.7069, -19.9527, -11.06, 0.44 ) }
    dend_70 { pt3dadd( 90.2494, -19.3801, -11.0895, 0.44 ) }
    dend_70 { pt3dadd( 90.7409, -18.8417, -11.103, 0.07 ) }
    dend_70 { pt3dadd( 91.2829, -18.2605, -11.0982, 0.07 ) }
    dend_70 { pt3dadd( 91.7413, -17.7745, -11.0462, 0.07 ) }
    dend_70 { pt3dadd( 92.227, -17.2738, -10.9317, 0.22 ) }
    dend_70 { pt3dadd( 92.6944, -16.8142, -10.7766, 0.66 ) }
    dend_70 { pt3dadd( 92.9582, -16.5796, -10.6595, 0.73 ) }
    dend_70 { pt3dadd( 93.4881, -16.1427, -10.3702, 0.44 ) }
    dend_70 { pt3dadd( 94.7588, -15.1514, -9.59317, 0.07 ) }
    dend_70 { pt3dadd( 95.4537, -14.6165, -9.13924, 0.07 ) }
    dend_70 { pt3dadd( 96.1312, -14.0743, -8.622, 0.51 ) }
    dend_70 { pt3dadd( 96.9173, -13.3906, -7.94739, 0.07 ) }
    dend_70 { pt3dadd( 97.9196, -12.4167, -7.03488, 0.29 ) }
    dend_70 { pt3dadd( 98.0157, -12.3115, -6.94216, 0.29 ) }
    dend_70 { pt3dadd( 98.2815, -11.9936, -6.68519, 0.22 ) }
    dend_70 { pt3dadd( 99.09, -10.9831, -5.87121, 0.8 ) }
    dend_70 { pt3dadd( 99.2891, -10.7423, -5.66932, 0.8 ) }
    dend_70 { pt3dadd( 99.8263, -10.1686, -5.22092, 0.07 ) }
    dend_70 { pt3dadd( 100.224, -9.8, -4.93051, 0.07 ) }
    dend_70 { pt3dadd( 100.514, -9.54144, -4.74422, 0.07 ) }
    dend_70 { pt3dadd( 100.86, -9.24604, -4.55693, 0.07 ) }
    dend_70 { pt3dadd( 101.068, -9.06073, -4.47642, 0.07 ) }
    dend_70 { pt3dadd( 101.695, -8.47979, -4.24669, 0.44 ) }
    dend_70 { pt3dadd( 102.357, -7.83615, -4.01811, 0.44 ) }
    dend_70 { pt3dadd( 102.868, -7.29561, -3.83837, 0.58 ) }
    dend_70 { pt3dadd( 103.069, -7.06862, -3.76637, 0.58 ) }
    dend_70 { pt3dadd( 103.682, -6.28707, -3.51244, 0.07 ) }
    dend_70 { pt3dadd( 103.883, -5.99901, -3.41114, 0.36 ) }
    dend_70 { pt3dadd( 104.106, -5.63672, -3.2734, 0.36 ) }
    dend_70 { pt3dadd( 104.628, -4.72933, -2.88464, 0.07 ) }
    dend_70 { pt3dadd( 104.689, -4.60774, -2.82161, 0.07 ) }
    dend_70 { pt3dadd( 104.958, -4.07744, -2.52847, 0.07 ) }
    dend_70 { pt3dadd( 105.127, -3.73478, -2.34992, 0.07 ) }
    dend_70 { pt3dadd( 105.26, -3.45672, -2.22891, 0.07 ) }
    dend_70 { pt3dadd( 105.618, -2.68412, -1.97647, 0.44 ) }
    dend_70 { pt3dadd( 105.779, -2.33382, -1.88785, 0.44 ) }
    dend_70 { pt3dadd( 106.279, -1.17361, -1.6025, 0.07 ) }
    dend_70 { pt3dadd( 106.598, -0.38545, -1.41872, 0.22 ) }
    dend_70 { pt3dadd( 106.776, 0.112771, -1.30472, 0.07 ) }
    dend_70 { pt3dadd( 107.08, 1.13701, -1.08302, 0.29 ) }
    dend_70 { pt3dadd( 107.322, 2.1482, -0.889006, 0.51 ) }
    dend_70 { pt3dadd( 107.581, 3.43872, -0.580635, 0.07 ) }
    dend_70 { pt3dadd( 107.63, 3.80806, -0.465315, 0.07 ) }
    dend_70 { pt3dadd( 107.663, 4.08586, -0.361609, 0.07 ) }
    dend_70 { pt3dadd( 107.706, 4.41606, -0.209259, 0.07 ) }
    dend_70 { pt3dadd( 107.775, 4.86771, 0.045656, 0.07 ) }
    dend_70 { pt3dadd( 107.935, 5.73378, 0.596637, 0.07 ) }
    dend_70 { pt3dadd( 108.122, 6.55958, 1.20247, 0.88 ) }
    dend_70 { pt3dadd( 108.268, 7.11274, 1.61002, 0.88 ) }
    dend_70 { pt3dadd( 108.5, 8.03644, 2.19975, 0.88 ) }
    dend_70 { pt3dadd( 108.705, 8.92104, 2.68812, 0.44 ) }
    dend_70 { pt3dadd( 108.858, 9.62805, 3.06114, 0.66 ) }
    dend_70 { pt3dadd( 109.087, 10.6873, 3.55343, 0.44 ) }
    dend_70 { pt3dadd( 109.289, 11.5486, 3.94049, 1.02 ) }
    dend_70 { pt3dadd( 109.607, 12.885, 4.52985, 0.36 ) }
    dend_70 { pt3dadd( 109.728, 13.4156, 4.68197, 0.36 ) }
    dend_70 { pt3dadd( 114.078, 21.9487, 7.55652, 0.36 ) }
    dend_70 { pt3dadd( 118.972, 29.6908, 11.5697, 0.36 ) }
    dend_70 { pt3dadd( 124.395, 37.4024, 14.9044, 0.36 ) }
    dend_70 { pt3dadd( 130.337, 45.1573, 17.0398, 0.36 ) }
    dend_70 { pt3dadd( 138.154, 51.3564, 17.7171, 0.36 ) }
    dend_70 { pt3dadd( 145.266, 58.0192, 19.9592, 0.36 ) }
    dend_70 { pt3dadd( 151.744, 65.456, 21.6141, 0.36 ) }
    dend_70 { pt3dadd( 157.449, 73.6378, 22.3253, 0.36 ) }
    dend_70 { pt3dadd( 164.409, 80.562, 24.2272, 0.36 ) }
    dend_70 { pt3dadd( 172.259, 85.6068, 27.8215, 0.36 ) }
    dend_70 { pt3dadd( 180.93, 89.6934, 30.6711, 0.36 ) }
    dend_70 { pt3dadd( 189.07, 93.7325, 34.8451, 0.36 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 87/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 33.6013, -87.8138, -15.1924, 1.09 ) }
    dend_66 { pt3dadd( 32.8082, -89.0063, -15.1757, 1.09 ) }
    dend_66 { pt3dadd( 32.2475, -89.9862, -15.2049, 0.73 ) }
    dend_66 { pt3dadd( 31.9222, -90.7355, -15.2553, 0.51 ) }
    dend_66 { pt3dadd( 31.6487, -91.7411, -15.3547, 0.58 ) }
    dend_66 { pt3dadd( 31.5332, -92.6797, -15.4928, 0.58 ) }
    dend_66 { pt3dadd( 31.5054, -93.7863, -15.6947, 0.58 ) }
    dend_66 { pt3dadd( 31.5676, -94.4525, -15.8704, 0.58 ) }
    dend_66 { pt3dadd( 31.7729, -95.465, -16.1922, 0.58 ) }
    dend_66 { pt3dadd( 32.0779, -96.4187, -16.5218, 0.58 ) }
    dend_66 { pt3dadd( 32.4158, -97.2169, -16.7814, 0.51 ) }
    dend_66 { pt3dadd( 32.7079, -97.8189, -16.9646, 0.51 ) }
    dend_66 { pt3dadd( 33.3756, -99.122, -17.2811, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_66 { pt3dadd( 33.7028, -99.8036, -17.4105, 0.51 ) }
    dend_66 { pt3dadd( 34.3016, -101.138, -17.6061, 0.29 ) }
    dend_66 { pt3dadd( 34.8121, -102.241, -17.7211, 0.73 ) }
    dend_66 { pt3dadd( 35.0901, -102.805, -17.7634, 0.73 ) }
    dend_66 { pt3dadd( 35.804, -104.209, -17.8447, 0.44 ) }
    dend_66 { pt3dadd( 36.3829, -105.349, -17.8903, 0.44 ) }
    dend_66 { pt3dadd( 36.662, -105.992, -17.9316, 0.66 ) }
    dend_66 { pt3dadd( 37.0955, -107.229, -18.0666, 0.44 ) }
    dend_66 { pt3dadd( 37.2505, -107.76, -18.1722, 0.15 ) }
    dend_66 { pt3dadd( 37.422, -108.415, -18.3318, 0.22 ) }
    dend_66 { pt3dadd( 37.5665, -108.981, -18.4858, 0.22 ) }
    dend_66 { pt3dadd( 37.8097, -109.803, -18.7224, 0.22 ) }
    dend_66 { pt3dadd( 38.0297, -110.483, -18.8957, 0.66 ) }
    dend_66 { pt3dadd( 38.3965, -111.586, -19.1198, 0.73 ) }
    dend_66 { pt3dadd( 38.8332, -112.835, -19.2718, 0.44 ) }
    dend_66 { pt3dadd( 39.1864, -113.829, -19.3227, 0.51 ) }
    dend_66 { pt3dadd( 39.608, -115.068, -19.2891, 0.29 ) }
    dend_66 { pt3dadd( 39.8684, -115.904, -19.2106, 0.29 ) }
    dend_66 { pt3dadd( 40.0559, -116.564, -19.1404, 0.29 ) }
    dend_66 { pt3dadd( 40.2494, -117.313, -19.0848, 0.73 ) }
    dend_66 { pt3dadd( 40.3827, -117.938, -19.0959, 0.73 ) }
    dend_66 { pt3dadd( 40.4795, -118.6, -19.1739, 0.73 ) }
    dend_66 { pt3dadd( 40.5944, -120.029, -19.4883, 0.44 ) }
    dend_66 { pt3dadd( 40.6361, -120.932, -19.7709, 0.44 ) }
    dend_66 { pt3dadd( 40.6719, -121.704, -20.0539, 0.44 ) }
    dend_66 { pt3dadd( 40.7136, -122.322, -20.309, 0.44 ) }
    dend_66 { pt3dadd( 40.7553, -122.808, -20.4989, 0.44 ) }
    dend_66 { pt3dadd( 40.8016, -123.244, -20.6442, 0.44 ) }
    dend_66 { pt3dadd( 40.9002, -123.763, -20.7696, 0.8 ) }
    dend_66 { pt3dadd( 41.048, -124.47, -20.9004, 0.73 ) }
    dend_66 { pt3dadd( 41.3513, -125.709, -21.0922, 0.44 ) }
    dend_66 { pt3dadd( 41.7012, -126.853, -21.2825, 0.36 ) }
    dend_66 { pt3dadd( 41.9656, -127.556, -21.4039, 0.36 ) }
    dend_66 { pt3dadd( 42.5081, -128.791, -21.6219, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 34/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 33.6013, -87.8138, -15.1924, 0.29 ) }
    dend_65 { pt3dadd( 34.0308, -88.5907, -14.8223, 0.29 ) }
    dend_65 { pt3dadd( 34.548, -89.4335, -14.4222, 0.66 ) }
    dend_65 { pt3dadd( 35.1935, -90.3304, -14.0004, 0.88 ) }
    dend_65 { pt3dadd( 35.6953, -90.9251, -13.7325, 0.73 ) }
    dend_65 { pt3dadd( 36.2482, -91.5255, -13.4766, 0.36 ) }
    dend_65 { pt3dadd( 36.666, -91.9715, -13.3005, 0.22 ) }
    dend_65 { pt3dadd( 36.995, -92.34, -13.1741, 0.15 ) }
    dend_65 { pt3dadd( 37.447, -92.9054, -13.0566, 0.22 ) }
    dend_65 { pt3dadd( 37.8896, -93.59, -12.9835, 0.07 ) }
    dend_65 { pt3dadd( 38.0638, -93.9182, -12.9653, 0.29 ) }
    dend_65 { pt3dadd( 38.2652, -94.3976, -12.9592, 0.66 ) }
    dend_65 { pt3dadd( 38.6115, -95.3359, -13.0322, 0.51 ) }
    dend_65 { pt3dadd( 38.9282, -96.2481, -13.154, 0.36 ) }
    dend_65 { pt3dadd( 39.2688, -97.2078, -13.3164, 0.36 ) }
    dend_65 { pt3dadd( 39.6159, -98.0996, -13.4455, 0.29 ) }
    dend_65 { pt3dadd( 39.8886, -98.7378, -13.4936, 0.44 ) }
    dend_65 { pt3dadd( 40.5802, -100.24, -13.5007, 0.51 ) }
    dend_65 { pt3dadd( 40.8035, -100.705, -13.4727, 0.66 ) }
    dend_65 { pt3dadd( 41.3912, -102.086, -13.2504, 0.44 ) }
    dend_65 { pt3dadd( 41.7538, -103.36, -12.8827, 0.36 ) }
    dend_65 { pt3dadd( 41.8724, -104.554, -12.39, 0.58 ) }
    dend_65 { pt3dadd( 41.8201, -105.119, -12.0998, 0.73 ) }
    dend_65 { pt3dadd( 41.6978, -105.623, -11.8097, 0.73 ) }
    dend_65 { pt3dadd( 41.328, -106.677, -11.211, 0.44 ) }
    dend_65 { pt3dadd( 40.8882, -107.728, -10.6347, 0.58 ) }
    dend_65 { pt3dadd( 40.5543, -108.543, -10.2596, 0.8 ) }
    dend_65 { pt3dadd( 40.1925, -109.549, -9.85038, 0.36 ) }
    dend_65 { pt3dadd( 40.0142, -110.153, -9.62038, 0.36 ) }
    dend_65 { pt3dadd( 39.7927, -111.033, -9.28781, 0.36 ) }
    dend_65 { pt3dadd( 39.546, -112.115, -8.88355, 1.02 ) }
    dend_65 { pt3dadd( 39.3084, -113.125, -8.49077, 0.44 ) }
    dend_65 { pt3dadd( 39.044, -113.865, -8.15355, 0.44 ) }
    dend_65 { pt3dadd( 38.6297, -114.558, -7.76183, 0.44 ) }
    dend_65 { pt3dadd( 38.0458, -115.347, -7.2669, 0.44 ) }
    dend_65 { pt3dadd( 37.4376, -115.977, -6.82292, 1.24 ) }
    dend_65 { pt3dadd( 37.0746, -116.261, -6.59018, 1.24 ) }
    dend_65 { pt3dadd( 35.6541, -117.125, -5.7347, 0.36 ) }
    dend_65 { pt3dadd( 34.5443, -117.672, -5.13202, 0.58 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 16.3069, -67.9677, -19.6612, 0.07 ) }
    dend_61 { pt3dadd( 16.1986, -69.0613, -19.4453, 0.07 ) }
    dend_61 { pt3dadd( 16.1545, -69.5581, -19.2978, 0.29 ) }
    dend_61 { pt3dadd( 16.0901, -70.4742, -18.9855, 0.29 ) }
    dend_61 { pt3dadd( 16.0556, -71.244, -18.7144, 0.07 ) }
    dend_61 { pt3dadd( 16.0143, -72.5487, -18.2545, 0.36 ) }
    dend_61 { pt3dadd( 15.9738, -73.7414, -17.8489, 0.07 ) }
    dend_61 { pt3dadd( 15.9397, -74.7723, -17.4884, 0.07 ) }
    dend_61 { pt3dadd( 15.9331, -75.9371, -17.0932, 0.07 ) }
    dend_61 { pt3dadd( 15.965, -76.8238, -16.8122, 0.36 ) }
    dend_61 { pt3dadd( 15.9883, -77.1124, -16.7334, 0.36 ) }
    dend_61 { pt3dadd( 16.0817, -78.0257, -16.5514, 0.07 ) }
    dend_61 { pt3dadd( 16.1416, -78.7728, -16.4767, 0.29 ) }
    dend_61 { pt3dadd( 16.1936, -79.572, -16.4437, 0.07 ) }
    dend_61 { pt3dadd( 16.2495, -80.296, -16.3682, 0.29 ) }
    dend_61 { pt3dadd( 16.297, -80.6561, -16.2975, 0.29 ) }
    dend_61 { pt3dadd( 16.4955, -81.4227, -16.0579, 0.07 ) }
    dend_61 { pt3dadd( 16.7478, -81.9933, -15.8041, 0.29 ) }
    dend_61 { pt3dadd( 16.9249, -82.304, -15.635, 0.29 ) }
    dend_61 { pt3dadd( 17.8331, -83.5553, -14.6759, 0.07 ) }
    dend_61 { pt3dadd( 18.2246, -84.0085, -14.2324, 0.29 ) }
    dend_61 { pt3dadd( 18.6405, -84.4143, -13.7477, 0.07 ) }
    dend_61 { pt3dadd( 19.0444, -84.7442, -13.2954, 0.07 ) }
    dend_61 { pt3dadd( 19.3163, -84.9527, -12.9929, 0.29 ) }
    dend_61 { pt3dadd( 20.3706, -85.8047, -11.8525, 0.58 ) }
    dend_61 { pt3dadd( 21.0287, -86.437, -11.1614, 0.07 ) }
    dend_61 { pt3dadd( 21.3731, -86.8338, -10.7491, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_61 { pt3dadd( 21.5802, -87.1032, -10.4695, 0.29 ) }
    dend_61 { pt3dadd( 21.7319, -87.3188, -10.2622, 0.07 ) }
    dend_61 { pt3dadd( 22.0357, -87.8052, -9.87635, 0.36 ) }
    dend_61 { pt3dadd( 22.3954, -88.4762, -9.51935, 0.15 ) }
    dend_61 { pt3dadd( 22.7074, -89.104, -9.23899, 0.44 ) }
    dend_61 { pt3dadd( 23.0578, -89.8532, -8.92554, 0.44 ) }
    dend_61 { pt3dadd( 23.2678, -90.3316, -8.71129, 0.22 ) }
    dend_61 { pt3dadd( 23.593, -91.051, -8.37678, 0.07 ) }
    dend_61 { pt3dadd( 24.0874, -92.0663, -7.87511, 0.66 ) }
    dend_61 { pt3dadd( 24.7167, -93.2913, -7.27198, 0.07 ) }
    dend_61 { pt3dadd( 25.16, -94.1485, -6.85186, 0.29 ) }
    dend_61 { pt3dadd( 25.5313, -94.9335, -6.47299, 0.07 ) }
    dend_61 { pt3dadd( 25.71, -95.3764, -6.25644, 0.51 ) }
    dend_61 { pt3dadd( 25.9878, -96.3118, -5.81877, 0.07 ) }
    dend_61 { pt3dadd( 26.0841, -96.8484, -5.58258, 0.36 ) }
    dend_61 { pt3dadd( 26.1598, -97.619, -5.29139, 0.51 ) }
    dend_61 { pt3dadd( 26.2049, -98.5796, -4.98839, 0.15 ) }
    dend_61 { pt3dadd( 26.2369, -99.4321, -4.74804, 0.07 ) }
    dend_61 { pt3dadd( 26.2489, -100.206, -4.53954, 0.07 ) }
    dend_61 { pt3dadd( 26.2434, -100.925, -4.36375, 0.07 ) }
    dend_61 { pt3dadd( 26.2455, -101.731, -4.13984, 0.8 ) }
    dend_61 { pt3dadd( 26.2667, -102.157, -4.01319, 0.8 ) }
    dend_61 { pt3dadd( 26.3802, -103.312, -3.66931, 0.07 ) }
    dend_61 { pt3dadd( 26.4144, -103.517, -3.59632, 0.36 ) }
    dend_61 { pt3dadd( 26.4905, -103.86, -3.45083, 0.36 ) }
    dend_61 { pt3dadd( 26.6908, -104.79, -2.9756, 0.07 ) }
    dend_61 { pt3dadd( 26.7987, -105.482, -2.55724, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 27/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 16.3069, -67.9677, -19.6612, 0.07 ) }
    dend_60 { pt3dadd( 15.218, -68.5459, -20.1945, 0.07 ) }
    dend_60 { pt3dadd( 14.6915, -68.8558, -20.42, 0.29 ) }
    dend_60 { pt3dadd( 14.1377, -69.2232, -20.631, 0.29 ) }
    dend_60 { pt3dadd( 13.7201, -69.5081, -20.7697, 0.29 ) }
    dend_60 { pt3dadd( 12.8761, -70.0822, -21.0027, 0.07 ) }
    dend_60 { pt3dadd( 12.29, -70.489, -21.1315, 0.29 ) }
    dend_60 { pt3dadd( 11.9251, -70.7589, -21.1684, 0.07 ) }
    dend_60 { pt3dadd( 11.3463, -71.214, -21.1983, 0.29 ) }
    dend_60 { pt3dadd( 10.8586, -71.5783, -21.19, 0.07 ) }
    dend_60 { pt3dadd( 10.0584, -72.1339, -21.1534, 0.36 ) }
    dend_60 { pt3dadd( 8.90906, -72.8593, -21.0761, 0.07 ) }
    dend_60 { pt3dadd( 8.57696, -73.0362, -21.0615, 0.73 ) }
    dend_60 { pt3dadd( 7.85496, -73.3283, -21.0492, 0.95 ) }
    dend_60 { pt3dadd( 6.19941, -73.8163, -21.0361, 0.07 ) }
    dend_60 { pt3dadd( 5.69303, -73.9168, -21.0286, 0.29 ) }
    dend_60 { pt3dadd( 5.17983, -73.9549, -21.0152, 0.29 ) }
    dend_60 { pt3dadd( 4.01593, -73.9146, -20.9766, 0.07 ) }
    dend_60 { pt3dadd( 2.77124, -73.7699, -20.932, 0.07 ) }
    dend_60 { pt3dadd( 2.01229, -73.6188, -20.9059, 0.07 ) }
    dend_60 { pt3dadd( 1.40285, -73.4585, -20.8882, 0.58 ) }
    dend_60 { pt3dadd( 0.186543, -73.0974, -20.8322, 0.07 ) }
    dend_60 { pt3dadd( -0.577219, -72.8485, -20.7122, 0.07 ) }
    dend_60 { pt3dadd( -1.63863, -72.4784, -20.4947, 0.22 ) }
    dend_60 { pt3dadd( -2.66185, -72.0994, -20.266, 0.07 ) }
    dend_60 { pt3dadd( -3.32182, -71.8486, -20.1203, 0.58 ) }
    dend_60 { pt3dadd( -4.28559, -71.4781, -19.9075, 0.29 ) }
    dend_60 { pt3dadd( -6.25889, -70.6507, -19.3487, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 55/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 20.051, -52.4049, -46.7834, 0.73 ) }
    dend_58 { pt3dadd( 20.388, -53.2494, -46.9619, 0.73 ) }
    dend_58 { pt3dadd( 20.8259, -54.3713, -47.1973, 0.07 ) }
    dend_58 { pt3dadd( 21.158, -55.1703, -47.4116, 0.07 ) }
    dend_58 { pt3dadd( 21.4978, -55.9209, -47.6614, 0.66 ) }
    dend_58 { pt3dadd( 22.0105, -56.9897, -48.0767, 0.07 ) }
    dend_58 { pt3dadd( 22.3228, -57.6101, -48.3321, 0.07 ) }
    dend_58 { pt3dadd( 22.685, -58.2924, -48.6529, 0.07 ) }
    dend_58 { pt3dadd( 23.1226, -59.1315, -49.0499, 0.07 ) }
    dend_58 { pt3dadd( 23.3866, -59.743, -49.357, 0.07 ) }
    dend_58 { pt3dadd( 23.5809, -60.345, -49.7189, 0.07 ) }
    dend_58 { pt3dadd( 23.6945, -61.0135, -50.1305, 0.07 ) }
    dend_58 { pt3dadd( 23.6991, -61.6582, -50.5419, 0.8 ) }
    dend_58 { pt3dadd( 23.5917, -62.3587, -50.9618, 0.8 ) }
    dend_58 { pt3dadd( 23.1692, -63.888, -51.8105, 0.07 ) }
    dend_58 { pt3dadd( 22.765, -65.0441, -52.4209, 0.8 ) }
    dend_58 { pt3dadd( 22.2846, -66.2365, -53.0296, 0.07 ) }
    dend_58 { pt3dadd( 21.6403, -67.6792, -53.8097, 0.07 ) }
    dend_58 { pt3dadd( 21.1473, -68.7324, -54.4173, 0.07 ) }
    dend_58 { pt3dadd( 20.6928, -69.7083, -54.9918, 0.07 ) }
    dend_58 { pt3dadd( 20.2639, -70.6853, -55.5338, 0.51 ) }
    dend_58 { pt3dadd( 20.063, -71.1966, -55.8415, 0.51 ) }
    dend_58 { pt3dadd( 19.651, -72.4539, -56.7267, 0.07 ) }
    dend_58 { pt3dadd( 19.3931, -73.4406, -57.5013, 0.07 ) }
    dend_58 { pt3dadd( 19.1453, -74.6684, -58.5514, 0.88 ) }
    dend_58 { pt3dadd( 19.0648, -75.2289, -59.051, 0.88 ) }
    dend_58 { pt3dadd( 18.9358, -76.7022, -60.3679, 0.22 ) }
    dend_58 { pt3dadd( 18.9019, -77.8766, -61.3662, 0.44 ) }
    dend_58 { pt3dadd( 18.9559, -78.9432, -62.1889, 0.07 ) }
    dend_58 { pt3dadd( 19.0566, -79.8058, -62.7913, 0.07 ) }
    dend_58 { pt3dadd( 19.1794, -80.5223, -63.2365, 0.07 ) }
    dend_58 { pt3dadd( 19.3167, -81.2402, -63.6148, 0.58 ) }
    dend_58 { pt3dadd( 19.4865, -82.0004, -63.9117, 0.58 ) }
    dend_58 { pt3dadd( 19.9697, -83.9125, -64.6, 0.07 ) }
    dend_58 { pt3dadd( 20.24, -84.95, -64.9619, 0.07 ) }
    dend_58 { pt3dadd( 20.4722, -85.9082, -65.3598, 0.07 ) }
    dend_58 { pt3dadd( 20.5975, -86.5058, -65.636, 0.44 ) }
    dend_58 { pt3dadd( 20.7105, -87.1459, -65.977, 0.58 ) }
    dend_58 { pt3dadd( 20.9692, -88.7443, -66.9696, 0.07 ) }
    dend_58 { pt3dadd( 21.059, -89.299, -67.3347, 0.07 ) }
    dend_58 { pt3dadd( 21.3505, -90.8731, -68.5373, 0.36 ) }
    dend_58 { pt3dadd( 21.4493, -91.3242, -68.9046, 0.36 ) }
    dend_58 { pt3dadd( 21.7458, -92.5255, -69.946, 0.07 ) }
    dend_58 { pt3dadd( 22.065, -93.7263, -71.013, 0.29 ) }
    dend_58 { pt3dadd( 22.3018, -94.5844, -71.7542, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_58 { pt3dadd( 22.7971, -96.2613, -73.2524, 0.15 ) }
    dend_58 { pt3dadd( 23.1154, -97.3247, -74.2036, 0.15 ) }
    dend_58 { pt3dadd( 23.4371, -98.4464, -75.2314, 0.07 ) }
    dend_58 { pt3dadd( 23.8002, -99.7857, -76.4096, 0.44 ) }
    dend_58 { pt3dadd( 23.9186, -100.252, -76.7822, 0.66 ) }
    dend_58 { pt3dadd( 24.2762, -101.719, -77.8095, 0.15 ) }
    dend_58 { pt3dadd( 24.5292, -102.808, -78.4077, 0.15 ) }
    dend_58 { pt3dadd( 24.7731, -103.892, -78.8768, 0.15 ) }
    dend_58 { pt3dadd( 25.0521, -105.181, -79.2732, 0.15 ) }
    dend_58 { pt3dadd( 25.3425, -106.588, -79.5619, 0.15 ) }
    dend_58 { pt3dadd( 25.6835, -108.288, -79.7733, 0.51 ) }
    dend_58 { pt3dadd( 25.9067, -109.377, -79.8101, 0.22 ) }
    dend_58 { pt3dadd( 26.1053, -110.316, -79.7953, 0.22 ) }
    dend_58 { pt3dadd( 26.2872, -111.214, -79.7566, 0.36 ) }
    dend_58 { pt3dadd( 26.5268, -112.539, -79.7305, 0.07 ) }
    dend_58 { pt3dadd( 26.771, -114.109, -79.7293, 0.07 ) }
    dend_58 { pt3dadd( 26.9085, -115.032, -79.7441, 0.36 ) }
    dend_58 { pt3dadd( 27.0679, -116.07, -79.7831, 0.07 ) }
    dend_58 { pt3dadd( 27.3766, -118.134, -79.898, 0.29 ) }
    dend_58 { pt3dadd( 27.6584, -120.066, -79.967, 0.07 ) }
    dend_58 { pt3dadd( 27.7636, -120.884, -79.9605, 0.07 ) }
    dend_58 { pt3dadd( 27.9156, -122.221, -79.8889, 0.36 ) }
    dend_58 { pt3dadd( 27.9745, -122.81, -79.8206, 0.36 ) }
    dend_58 { pt3dadd( 28.068, -123.711, -79.6516, 0.07 ) }
    dend_58 { pt3dadd( 28.2228, -125.062, -79.3069, 0.07 ) }
    dend_58 { pt3dadd( 28.416, -126.521, -78.8722, 0.07 ) }
    dend_58 { pt3dadd( 28.6036, -127.91, -78.4679, 0.29 ) }
    dend_58 { pt3dadd( 28.7748, -129.438, -78.059, 0.07 ) }
    dend_58 { pt3dadd( 28.9051, -130.962, -77.7612, 0.29 ) }
    dend_58 { pt3dadd( 28.9443, -131.46, -77.718, 0.29 ) }
    dend_58 { pt3dadd( 29.0253, -132.682, -77.7381, 0.07 ) }
    dend_58 { pt3dadd( 29.1131, -134.229, -77.8868, 0.07 ) }
    dend_58 { pt3dadd( 29.1984, -135.831, -78.118, 0.36 ) }
    dend_58 { pt3dadd( 29.3386, -137.774, -78.4198, 0.07 ) }
    dend_58 { pt3dadd( 29.5084, -139.579, -78.7456, 0.07 ) }
    dend_58 { pt3dadd( 29.6436, -140.682, -78.9463, 0.07 ) }
    dend_58 { pt3dadd( 29.8202, -141.833, -79.1525, 0.07 ) }
    dend_58 { pt3dadd( 30.2024, -143.931, -79.5514, 0.29 ) }
    dend_58 { pt3dadd( 30.6165, -146.187, -80.0119, 0.07 ) }
    dend_58 { pt3dadd( 30.9583, -148.196, -80.4024, 0.07 ) }
    dend_58 { pt3dadd( 31.1141, -149.294, -80.6238, 0.07 ) }
    dend_58 { pt3dadd( 31.2263, -150.166, -80.8259, 0.58 ) }
    dend_58 { pt3dadd( 31.4641, -152.108, -81.3226, 0.07 ) }
    dend_58 { pt3dadd( 31.7016, -154.186, -81.8871, 0.07 ) }
    dend_58 { pt3dadd( 31.8393, -155.55, -82.285, 0.07 ) }
    dend_58 { pt3dadd( 31.9568, -156.748, -82.6087, 0.07 ) }
    dend_58 { pt3dadd( 32.0753, -157.868, -82.9033, 0.07 ) }
    dend_58 { pt3dadd( 32.263, -159.175, -83.243, 0.07 ) }
    dend_58 { pt3dadd( 32.6889, -161.052, -83.7022, 0.36 ) }
    dend_58 { pt3dadd( 33.2147, -162.791, -84.1719, 0.07 ) }
    dend_58 { pt3dadd( 33.6298, -164.034, -84.5505, 0.07 ) }
    dend_58 { pt3dadd( 34.092, -165.411, -84.9829, 0.07 ) }
    dend_58 { pt3dadd( 34.5114, -166.755, -85.4334, 0.07 ) }
    dend_58 { pt3dadd( 35.0847, -168.737, -86.071, 0.29 ) }
    dend_58 { pt3dadd( 35.5601, -170.354, -86.5411, 0.07 ) }
    dend_58 { pt3dadd( 36.0032, -171.781, -86.9188, 0.07 ) }
    dend_58 { pt3dadd( 36.5214, -173.394, -87.3104, 0.29 ) }
    dend_58 { pt3dadd( 37.2944, -175.761, -87.8134, 0.07 ) }
    dend_58 { pt3dadd( 37.8191, -177.387, -88.0938, 0.07 ) }
    dend_58 { pt3dadd( 38.4395, -179.257, -88.4435, 0.29 ) }
    dend_58 { pt3dadd( 38.9605, -180.699, -88.679, 0.07 ) }
    dend_58 { pt3dadd( 39.7609, -182.638, -88.9902, 0.29 ) }
    dend_58 { pt3dadd( 40.5369, -184.258, -89.259, 0.07 ) }
    dend_58 { pt3dadd( 40.9455, -185.015, -89.3845, 0.36 ) }
    dend_58 { pt3dadd( 42.1514, -187.175, -89.9035, 0.07 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 65/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 20.051, -52.4049, -46.7834, 0.07 ) }
    dend_57 { pt3dadd( 21.1991, -51.3292, -47.7922, 0.07 ) }
    dend_57 { pt3dadd( 21.6117, -50.9646, -48.2145, 0.07 ) }
    dend_57 { pt3dadd( 22.4954, -50.2206, -49.211, 0.58 ) }
    dend_57 { pt3dadd( 23.2224, -49.5793, -50.1611, 0.07 ) }
    dend_57 { pt3dadd( 23.8942, -48.9864, -51.1234, 0.07 ) }
    dend_57 { pt3dadd( 24.3295, -48.5947, -51.8351, 0.73 ) }
    dend_57 { pt3dadd( 25.3867, -47.7324, -53.6373, 0.29 ) }
    dend_57 { pt3dadd( 26.2959, -47.1433, -55.2302, 0.73 ) }
    dend_57 { pt3dadd( 27.0822, -46.7811, -56.6157, 0.51 ) }
    dend_57 { pt3dadd( 27.6402, -46.6058, -57.5155, 0.51 ) }
    dend_57 { pt3dadd( 28.9421, -46.2959, -59.3381, 0.29 ) }
    dend_57 { pt3dadd( 29.7257, -46.1699, -60.3102, 0.29 ) }
    dend_57 { pt3dadd( 30.8535, -46.088, -61.3827, 0.07 ) }
    dend_57 { pt3dadd( 32.0612, -46.056, -62.2987, 0.07 ) }
    dend_57 { pt3dadd( 33.155, -46.0547, -62.9645, 0.07 ) }
    dend_57 { pt3dadd( 34.4568, -46.0561, -63.6199, 0.36 ) }
    dend_57 { pt3dadd( 35.978, -46.058, -64.282, 0.07 ) }
    dend_57 { pt3dadd( 37.5174, -46.028, -64.9706, 0.36 ) }
    dend_57 { pt3dadd( 38.6826, -46.0131, -65.455, 0.36 ) }
    dend_57 { pt3dadd( 39.9885, -46.0168, -65.9579, 0.07 ) }
    dend_57 { pt3dadd( 41.0293, -46.0312, -66.3203, 0.36 ) }
    dend_57 { pt3dadd( 42.5086, -46.0627, -66.7672, 0.07 ) }
    dend_57 { pt3dadd( 43.7462, -46.0657, -67.0992, 0.07 ) }
    dend_57 { pt3dadd( 45.5671, -46.0626, -67.6121, 0.07 ) }
    dend_57 { pt3dadd( 46.4369, -46.0629, -67.8695, 0.36 ) }
    dend_57 { pt3dadd( 47.796, -46.0644, -68.2878, 0.07 ) }
    dend_57 { pt3dadd( 48.9844, -46.1142, -68.6672, 0.07 ) }
    dend_57 { pt3dadd( 49.7454, -46.193, -68.9007, 0.44 ) }
    dend_57 { pt3dadd( 51.2892, -46.4864, -69.3903, 0.07 ) }
    dend_57 { pt3dadd( 52.404, -46.8094, -69.7834, 0.07 ) }
    dend_57 { pt3dadd( 53.1566, -47.1087, -70.0135, 0.07 ) }
    dend_57 { pt3dadd( 54.8691, -47.9908, -70.4308, 0.36 ) }
    dend_57 { pt3dadd( 55.7563, -48.5131, -70.5745, 0.07 ) }
    dend_57 { pt3dadd( 56.7164, -49.1143, -70.6538, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_57 { pt3dadd( 57.1973, -49.4174, -70.6459, 0.07 ) }
    dend_57 { pt3dadd( 58.945, -50.4402, -70.5417, 0.51 ) }
    dend_57 { pt3dadd( 59.9492, -50.9422, -70.4712, 0.07 ) }
    dend_57 { pt3dadd( 60.6428, -51.2034, -70.4146, 0.07 ) }
    dend_57 { pt3dadd( 61.4969, -51.4248, -70.3662, 0.07 ) }
    dend_57 { pt3dadd( 62.7403, -51.6232, -70.3453, 0.36 ) }
    dend_57 { pt3dadd( 63.9621, -51.7371, -70.3826, 0.07 ) }
    dend_57 { pt3dadd( 64.7436, -51.7715, -70.4466, 0.07 ) }
    dend_57 { pt3dadd( 65.9041, -51.7957, -70.6093, 0.36 ) }
    dend_57 { pt3dadd( 67.658, -51.827, -70.9588, 0.07 ) }
    dend_57 { pt3dadd( 69.197, -51.8476, -71.3292, 0.07 ) }
    dend_57 { pt3dadd( 70.1179, -51.8577, -71.5962, 0.07 ) }
    dend_57 { pt3dadd( 71.2511, -51.8823, -71.9591, 0.58 ) }
    dend_57 { pt3dadd( 73.4642, -51.9374, -72.6894, 0.07 ) }
    dend_57 { pt3dadd( 74.87, -51.9701, -73.1715, 0.07 ) }
    dend_57 { pt3dadd( 75.9189, -51.993, -73.5176, 0.36 ) }
    dend_57 { pt3dadd( 78.0829, -52.0476, -74.2083, 0.07 ) }
    dend_57 { pt3dadd( 79.1678, -52.0659, -74.5361, 0.07 ) }
    dend_57 { pt3dadd( 81.157, -52.0574, -75.0365, 0.29 ) }
    dend_57 { pt3dadd( 83.1015, -51.9692, -75.3494, 0.07 ) }
    dend_57 { pt3dadd( 85.1234, -51.7742, -75.554, 0.29 ) }
    dend_57 { pt3dadd( 86.4445, -51.5275, -75.6111, 0.07 ) }
    dend_57 { pt3dadd( 87.0915, -51.2975, -75.5694, 0.07 ) }
    dend_57 { pt3dadd( 88.3179, -50.5846, -75.3405, 0.07 ) }
    dend_57 { pt3dadd( 89.699, -49.4481, -74.9737, 0.07 ) }
    dend_57 { pt3dadd( 90.1956, -48.9898, -74.8216, 0.07 ) }
    dend_57 { pt3dadd( 91.2171, -48.1804, -74.5024, 0.29 ) }
    dend_57 { pt3dadd( 92.3205, -47.5224, -74.1486, 0.07 ) }
    dend_57 { pt3dadd( 93.2264, -47.1281, -73.8583, 0.07 ) }
    dend_57 { pt3dadd( 95.0689, -46.5597, -73.2279, 0.07 ) }
    dend_57 { pt3dadd( 96.3793, -46.2757, -72.7543, 0.29 ) }
    dend_57 { pt3dadd( 98.8117, -45.8689, -71.7653, 0.07 ) }
    dend_57 { pt3dadd( 100.523, -45.6273, -71.1635, 0.22 ) }
    dend_57 { pt3dadd( 102.105, -45.3946, -70.7147, 0.07 ) }
    dend_57 { pt3dadd( 103.609, -45.1259, -70.3532, 0.07 ) }
    dend_57 { pt3dadd( 105.031, -44.8098, -70.0306, 0.29 ) }
    dend_57 { pt3dadd( 106.974, -44.2858, -69.7175, 0.07 ) }
    dend_57 { pt3dadd( 110.29, -43.2752, -69.554, 0.07 ) }
    dend_57 { pt3dadd( 111.878, -42.7858, -69.6149, 0.07 ) }
    dend_57 { pt3dadd( 113.889, -42.1982, -69.8464, 0.07 ) }
    dend_57 { pt3dadd( 115.202, -41.8657, -70.056, 0.07 ) }
    dend_57 { pt3dadd( 116.279, -41.6045, -70.232, 0.07 ) }
    dend_57 { pt3dadd( 117.387, -41.3609, -70.4025, 0.07 ) }
    dend_57 { pt3dadd( 119.363, -41.0121, -70.4798, 0.36 ) }
    dend_57 { pt3dadd( 120.862, -40.8173, -70.581, 0.15 ) }
    dend_57 { pt3dadd( 122.643, -40.6946, -70.9247, 0.36 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 46/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.5397, 35.453, 78.4693, 0.07 ) }
    dend_50 { pt3dadd( -15.0153, 38.7009, 87.8114, 0.07 ) }
    dend_50 { pt3dadd( -17.5198, 44.0232, 95.8985, 0.07 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 49/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -13.5397, 35.453, 78.4693, 0.15 ) }
    dend_49 { pt3dadd( -14.4109, 38.812, 87.8479, 0.07 ) }
    dend_49 { pt3dadd( -13.8302, 41.3058, 97.5145, 0.07 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 44.845, 42.3997, 57.3689, 0.22 ) }
    dend_47 { pt3dadd( 52.5528, 44.0508, 63.5223, 0.22 ) }
    dend_47 { pt3dadd( 59.2778, 45.4523, 70.7893, 0.22 ) }
    dend_47 { pt3dadd( 64.6653, 47.4959, 78.9623, 0.22 ) }
    dend_47 { pt3dadd( 68.5516, 49.8056, 87.8821, 0.22 ) }
    dend_47 { pt3dadd( 71.9019, 51.6568, 97.1205, 0.22 ) }
    dend_47 { pt3dadd( 76.132, 54.5875, 105.695, 0.22 ) }
    dend_47 { pt3dadd( 80.6368, 56.4399, 114.428, 0.22 ) }
    dend_47 { pt3dadd( 84.2746, 59.2546, 123.308, 0.22 ) }
    dend_47 { pt3dadd( 87.3531, 62.7401, 132.161, 0.22 ) }
    dend_47 { pt3dadd( 89.1355, 66.5479, 141.234, 0.22 ) }
    dend_47 { pt3dadd( 90.2474, 69.9753, 150.562, 0.22 ) }
    dend_47 { pt3dadd( 91.9092, 72.2426, 160.159, 0.22 ) }
    dend_47 { pt3dadd( 94.2989, 76.3909, 168.938, 0.22 ) }
    dend_47 { pt3dadd( 98.3653, 79.0491, 177.679, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 67/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 44.845, 42.3997, 57.3689, 0.51 ) }
    dend_46 { pt3dadd( 52.3823, 47.6353, 61.341, 0.22 ) }
    dend_46 { pt3dadd( 59.7881, 52.3523, 66.1268, 0.22 ) }
    dend_46 { pt3dadd( 66.3579, 57.6031, 71.5367, 0.22 ) }
    dend_46 { pt3dadd( 73.51, 61.9431, 77.0151, 0.22 ) }
    dend_46 { pt3dadd( 80.3572, 66.7551, 82.4886, 0.22 ) }
    dend_46 { pt3dadd( 85.5899, 72.6907, 88.6032, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -96.7959, 11.2315, 8.25309, 0.51 ) }
    dend_35 { pt3dadd( -97.3505, 10.9979, 8.82823, 0.51 ) }
    dend_35 { pt3dadd( -98.0373, 10.6447, 9.5975, 0.58 ) }
    dend_35 { pt3dadd( -98.4832, 10.3454, 10.1624, 0.36 ) }
    dend_35 { pt3dadd( -99.1063, 9.83465, 11.06, 0.36 ) }
    dend_35 { pt3dadd( -99.8259, 9.21155, 12.1172, 0.36 ) }
    dend_35 { pt3dadd( -99.9805, 9.07654, 12.336, 0.36 ) }
    dend_35 { pt3dadd( -100.444, 8.65397, 12.9995, 0.58 ) }
    dend_35 { pt3dadd( -100.899, 8.23948, 13.5734, 0.29 ) }
    dend_35 { pt3dadd( -101.5, 7.71559, 14.154, 0.15 ) }
    dend_35 { pt3dadd( -101.848, 7.45112, 14.4168, 0.15 ) }
    dend_35 { pt3dadd( -102.27, 7.19278, 14.6697, 0.15 ) }
    dend_35 { pt3dadd( -102.694, 6.98947, 14.8777, 0.8 ) }
    dend_35 { pt3dadd( -102.947, 6.88688, 14.9758, 1.02 ) }
    dend_35 { pt3dadd( -104.024, 6.46914, 15.3092, 0.66 ) }
    dend_35 { pt3dadd( -105.09, 6.02413, 15.5879, 0.66 ) }
    dend_35 { pt3dadd( -105.519, 5.82866, 15.6929, 0.66 ) }
    dend_35 { pt3dadd( -106.299, 5.44722, 15.8583, 0.51 ) }
    dend_35 { pt3dadd( -107.101, 5.04302, 16.0216, 0.22 ) }
    dend_35 { pt3dadd( -108.182, 4.48696, 16.2188, 0.36 ) }
    dend_35 { pt3dadd( -108.971, 4.07662, 16.3264, 0.36 ) }
    dend_35 { pt3dadd( -109.863, 3.5988, 16.3887, 0.07 ) }
    dend_35 { pt3dadd( -111.068, 2.92228, 16.478, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 97/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -96.7959, 11.2315, 8.25309, 0.22 ) }
    dend_34 { pt3dadd( -97.6491, 11.6643, 8.71488, 0.22 ) }
    dend_34 { pt3dadd( -98.2845, 11.9705, 9.14976, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_34 { pt3dadd( -98.9742, 12.316, 9.66881, 0.36 ) }
    dend_34 { pt3dadd( -99.5683, 12.6403, 10.142, 0.58 ) }
    dend_34 { pt3dadd( -100.29, 13.0673, 10.7293, 0.15 ) }
    dend_34 { pt3dadd( -101.15, 13.6104, 11.414, 0.15 ) }
    dend_34 { pt3dadd( -101.523, 13.8392, 11.7358, 0.15 ) }
    dend_34 { pt3dadd( -101.731, 13.9619, 11.9139, 0.15 ) }
    dend_34 { pt3dadd( -101.982, 14.1447, 12.1268, 0.15 ) }
    dend_34 { pt3dadd( -102.232, 14.3917, 12.2485, 0.15 ) }
    dend_34 { pt3dadd( -102.644, 14.8649, 12.1908, 0.15 ) }
    dend_34 { pt3dadd( -102.897, 15.1514, 12.0764, 0.15 ) }
    dend_34 { pt3dadd( -103.387, 15.6553, 11.82, 0.73 ) }
    dend_34 { pt3dadd( -104.015, 16.2017, 11.506, 1.02 ) }
    dend_34 { pt3dadd( -104.98, 16.9522, 11.0406, 0.15 ) }
    dend_34 { pt3dadd( -105.73, 17.5103, 10.6992, 0.15 ) }
    dend_34 { pt3dadd( -106.389, 18.024, 10.4189, 0.15 ) }
    dend_34 { pt3dadd( -106.795, 18.3729, 10.2562, 0.73 ) }
    dend_34 { pt3dadd( -107.66, 19.219, 9.93483, 0.15 ) }
    dend_34 { pt3dadd( -108.074, 19.6402, 9.80685, 0.15 ) }
    dend_34 { pt3dadd( -108.629, 20.3143, 9.66456, 0.36 ) }
    dend_34 { pt3dadd( -109.146, 21.0868, 9.54581, 0.22 ) }
    dend_34 { pt3dadd( -109.544, 21.8046, 9.43356, 0.22 ) }
    dend_34 { pt3dadd( -109.884, 22.4703, 9.33253, 0.88 ) }
    dend_34 { pt3dadd( -110.049, 22.7978, 9.28572, 0.88 ) }
    dend_34 { pt3dadd( -110.633, 23.7435, 9.14281, 0.22 ) }
    dend_34 { pt3dadd( -111.007, 24.184, 9.06863, 0.22 ) }
    dend_34 { pt3dadd( -111.506, 24.5919, 8.99923, 0.22 ) }
    dend_34 { pt3dadd( -112.164, 25.0245, 8.94402, 0.44 ) }
    dend_34 { pt3dadd( -112.796, 25.3878, 8.91025, 0.44 ) }
    dend_34 { pt3dadd( -113.489, 25.7665, 8.89089, 0.07 ) }
    dend_34 { pt3dadd( -114.102, 26.0965, 8.89183, 0.22 ) }
    dend_34 { pt3dadd( -114.956, 26.6024, 8.91494, 0.36 ) }
    dend_34 { pt3dadd( -116.024, 27.3463, 8.96836, 0.58 ) }
    dend_34 { pt3dadd( -116.451, 27.7003, 8.99909, 0.58 ) }
    dend_34 { pt3dadd( -116.824, 28.0669, 9.0145, 0.36 ) }
    dend_34 { pt3dadd( -117.28, 28.5714, 9.01875, 0.51 ) }
    dend_34 { pt3dadd( -117.86, 29.2404, 9.00683, 0.36 ) }
    dend_34 { pt3dadd( -118.271, 29.6973, 8.96117, 0.58 ) }
    dend_34 { pt3dadd( -118.772, 30.225, 8.84842, 0.88 ) }
    dend_34 { pt3dadd( -119.649, 31.073, 8.57401, 0.51 ) }
    dend_34 { pt3dadd( -120.335, 31.6623, 8.31665, 0.22 ) }
    dend_34 { pt3dadd( -120.808, 32.0145, 8.11781, 0.07 ) }
    dend_34 { pt3dadd( -121.741, 32.6105, 7.69735, 0.66 ) }
    dend_34 { pt3dadd( -122.48, 33.0149, 7.3767, 0.07 ) }
    dend_34 { pt3dadd( -123.021, 33.2753, 7.15601, 0.15 ) }
    dend_34 { pt3dadd( -123.344, 33.4218, 7.04928, 0.15 ) }
    dend_34 { pt3dadd( -123.804, 33.6558, 6.92205, 0.15 ) }
    dend_34 { pt3dadd( -124.183, 33.9157, 6.87635, 0.15 ) }
    dend_34 { pt3dadd( -124.486, 34.2133, 6.87373, 0.15 ) }
    dend_34 { pt3dadd( -124.762, 34.5257, 6.87543, 0.15 ) }
    dend_34 { pt3dadd( -125.234, 35.1115, 6.818, 0.36 ) }
    dend_34 { pt3dadd( -125.6, 35.5869, 6.72881, 0.88 ) }
    dend_34 { pt3dadd( -125.993, 36.1354, 6.53944, 1.17 ) }
    dend_34 { pt3dadd( -126.895, 37.4187, 5.9662, 0.15 ) }
    dend_34 { pt3dadd( -127.194, 37.8862, 5.73965, 0.15 ) }
    dend_34 { pt3dadd( -127.616, 38.5313, 5.45485, 0.66 ) }
    dend_34 { pt3dadd( -127.851, 38.8646, 5.31819, 0.66 ) }
    dend_34 { pt3dadd( -128.621, 39.8806, 5.00252, 0.15 ) }
    dend_34 { pt3dadd( -129.081, 40.438, 4.90091, 0.15 ) }
    dend_34 { pt3dadd( -129.784, 41.2076, 4.88767, 0.66 ) }
    dend_34 { pt3dadd( -130.785, 42.1254, 4.87447, 0.15 ) }
    dend_34 { pt3dadd( -131.23, 42.4356, 4.85724, 0.15 ) }
    dend_34 { pt3dadd( -131.853, 42.784, 4.86139, 0.29 ) }
    dend_34 { pt3dadd( -132.633, 43.1307, 4.89736, 0.8 ) }
    dend_34 { pt3dadd( -133.49, 43.4411, 4.91049, 0.51 ) }
    dend_34 { pt3dadd( -134.436, 43.7181, 4.87111, 0.22 ) }
    dend_34 { pt3dadd( -135.517, 44.0209, 4.7144, 0.07 ) }
    dend_34 { pt3dadd( -136.94, 44.3698, 4.47272, 0.07 ) }
    dend_34 { pt3dadd( -137.251, 44.4384, 4.39973, 0.07 ) }
    dend_34 { pt3dadd( -137.731, 44.557, 4.27763, 0.07 ) }
    dend_34 { pt3dadd( -138.171, 44.7039, 4.17118, 0.07 ) }
    dend_34 { pt3dadd( -139.023, 45.0666, 3.96755, 0.66 ) }
    dend_34 { pt3dadd( -139.523, 45.3511, 3.82858, 0.66 ) }
    dend_34 { pt3dadd( -140.315, 45.9397, 3.57366, 0.07 ) }
    dend_34 { pt3dadd( -140.948, 46.5234, 3.40009, 0.07 ) }
    dend_34 { pt3dadd( -141.489, 47.1068, 3.28284, 0.44 ) }
    dend_34 { pt3dadd( -142.011, 47.6893, 3.20907, 0.44 ) }
    dend_34 { pt3dadd( -142.898, 48.6764, 3.14122, 0.95 ) }
    dend_34 { pt3dadd( -143.676, 49.4888, 3.11476, 0.07 ) }
    dend_34 { pt3dadd( -144.15, 49.916, 3.13889, 0.07 ) }
    dend_34 { pt3dadd( -144.684, 50.3228, 3.19009, 0.29 ) }
    dend_34 { pt3dadd( -145.541, 50.8681, 3.3036, 0.07 ) }
    dend_34 { pt3dadd( -146.058, 51.1399, 3.39237, 0.58 ) }
    dend_34 { pt3dadd( -146.812, 51.4467, 3.55203, 0.58 ) }
    dend_34 { pt3dadd( -148.087, 51.8656, 3.85893, 0.07 ) }
    dend_34 { pt3dadd( -148.844, 52.0998, 4.06598, 0.07 ) }
    dend_34 { pt3dadd( -149.281, 52.2467, 4.19873, 0.07 ) }
    dend_34 { pt3dadd( -149.772, 52.4696, 4.36279, 0.07 ) }
    dend_34 { pt3dadd( -150.145, 52.6758, 4.48565, 0.07 ) }
    dend_34 { pt3dadd( -150.515, 52.9043, 4.6058, 0.07 ) }
    dend_34 { pt3dadd( -151.014, 53.2291, 4.77367, 0.66 ) }
    dend_34 { pt3dadd( -151.528, 53.5606, 4.95809, 0.95 ) }
    dend_34 { pt3dadd( -152.611, 54.2537, 5.36358, 0.15 ) }
    dend_34 { pt3dadd( -153.191, 54.6179, 5.60975, 0.15 ) }
    dend_34 { pt3dadd( -153.732, 54.9411, 5.858, 0.15 ) }
    dend_34 { pt3dadd( -154.319, 55.2444, 6.13188, 0.15 ) }
    dend_34 { pt3dadd( -154.813, 55.4692, 6.34648, 0.44 ) }
    dend_34 { pt3dadd( -155.523, 55.7541, 6.63724, 0.07 ) }
    dend_34 { pt3dadd( -156.187, 55.9916, 6.88347, 0.07 ) }
    dend_34 { pt3dadd( -156.874, 56.2393, 7.10661, 0.58 ) }
    dend_34 { pt3dadd( -157.475, 56.4535, 7.25353, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_34 { pt3dadd( -158.647, 56.8493, 7.44215, 0.07 ) }
    dend_34 { pt3dadd( -158.956, 56.9496, 7.47623, 0.07 ) }
    dend_34 { pt3dadd( -159.243, 57.0363, 7.50421, 0.22 ) }
    dend_34 { pt3dadd( -159.497, 57.1127, 7.522, 0.07 ) }
    dend_34 { pt3dadd( -160.16, 57.327, 7.57786, 0.22 ) }
    dend_34 { pt3dadd( -160.781, 57.5566, 7.63971, 0.07 ) }
    dend_34 { pt3dadd( -161.38, 57.8144, 7.67768, 0.29 ) }
    dend_34 { pt3dadd( -162.357, 58.3447, 7.70813, 0.07 ) }
    dend_34 { pt3dadd( -162.956, 58.737, 7.70927, 0.07 ) }
    dend_34 { pt3dadd( -163.441, 59.0908, 7.69946, 0.36 ) }
    dend_34 { pt3dadd( -163.892, 59.4344, 7.68413, 0.36 ) }
    dend_34 { pt3dadd( -164.889, 60.1489, 7.63517, 0.07 ) }
    dend_34 { pt3dadd( -165.459, 60.4832, 7.59784, 0.73 ) }
    dend_34 { pt3dadd( -166.371, 60.8731, 7.52246, 0.51 ) }
    dend_34 { pt3dadd( -166.823, 61.0037, 7.4962, 0.07 ) }
    dend_34 { pt3dadd( -167.455, 61.1175, 7.47659, 0.07 ) }
    dend_34 { pt3dadd( -168.177, 61.2178, 7.44675, 0.44 ) }
    dend_34 { pt3dadd( -169.125, 61.3176, 7.49613, 0.07 ) }
    dend_34 { pt3dadd( -169.7, 61.3876, 7.57353, 0.07 ) }
    dend_34 { pt3dadd( -170.214, 61.4688, 7.68458, 0.88 ) }
    dend_34 { pt3dadd( -170.7, 61.584, 7.81587, 0.88 ) }
    dend_34 { pt3dadd( -171.724, 61.8871, 8.04209, 0.07 ) }
    dend_34 { pt3dadd( -173.073, 62.3399, 8.29599, 0.07 ) }
    dend_34 { pt3dadd( -173.712, 62.5502, 8.38275, 0.07 ) }
    dend_34 { pt3dadd( -174.314, 62.7089, 8.39598, 0.29 ) }
    dend_34 { pt3dadd( -175.108, 62.8783, 8.38918, 0.07 ) }
    dend_34 { pt3dadd( -176.362, 63.0742, 8.31878, 0.58 ) }
    dend_34 { pt3dadd( -176.579, 63.0957, 8.28991, 0.58 ) }
    dend_34 { pt3dadd( -177.74, 63.2046, 7.9385, 0.07 ) }
    dend_34 { pt3dadd( -178.784, 63.32, 7.5296, 0.29 ) }
    dend_34 { pt3dadd( -187.92, 66.8847, 5.57157, 0.29 ) }
    dend_34 { pt3dadd( -196.672, 71.7225, 5.5201, 0.29 ) }
    dend_34 { pt3dadd( -205.54, 76.3102, 4.97454, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 33/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -70.3165, -38.6137, 7.75172, 0.73 ) }
    dend_32 { pt3dadd( -67.5275, -47.7392, 10.7428, 0.73 ) }
    dend_32 { pt3dadd( -65.2487, -56.8717, 14.12, 0.73 ) }
    dend_32 { pt3dadd( -62.8874, -66.3507, 16.2578, 0.73 ) }
    dend_32 { pt3dadd( -59.9785, -75.1744, 19.9566, 0.73 ) }
    dend_32 { pt3dadd( -56.4794, -83.1143, 24.928, 0.73 ) }
    dend_32 { pt3dadd( -54.7431, -90.5185, 31.4213, 0.73 ) }
    dend_32 { pt3dadd( -51.4018, -96.2012, 38.9408, 0.73 ) }
    dend_32 { pt3dadd( -47.5012, -99.825, 47.4056, 0.73 ) }
    dend_32 { pt3dadd( -42.5242, -103.785, 55.1222, 0.73 ) }
    dend_32 { pt3dadd( -37.1377, -108.566, 62.0602, 0.73 ) }
    dend_32 { pt3dadd( -31.9709, -113.724, 68.8935, 0.73 ) }
    dend_32 { pt3dadd( -27.208, -119.974, 75.0781, 0.73 ) }
    dend_32 { pt3dadd( -22.5546, -126.464, 81.0971, 0.73 ) }
    dend_32 { pt3dadd( -16.9724, -132.83, 86.4177, 0.73 ) }
    dend_32 { pt3dadd( -11.3616, -139.773, 90.9248, 0.73 ) }
    dend_32 { pt3dadd( -4.61977, -146.308, 94.3667, 0.73 ) }
    dend_32 { pt3dadd( 1.25755, -154.006, 96.8575, 0.73 ) }
    dend_32 { pt3dadd( 7.3234, -161.452, 99.6428, 0.73 ) }
    dend_32 { pt3dadd( 13.4285, -169.105, 101.683, 0.73 ) }
    dend_32 { pt3dadd( 18.9972, -177.398, 102.148, 0.73 ) }
    dend_32 { pt3dadd( 25.3944, -185.016, 103.164, 0.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 55/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -70.3165, -38.6137, 7.75172, 0.15 ) }
    dend_31 { pt3dadd( -68.1168, -48.1684, 5.78497, 0.73 ) }
    dend_31 { pt3dadd( -66.9483, -57.3881, 2.09259, 0.73 ) }
    dend_31 { pt3dadd( -64.2422, -66.8764, 0.465898, 0.73 ) }
    dend_31 { pt3dadd( -63.3386, -76.697, -1.18972, 0.73 ) }
    dend_31 { pt3dadd( -63.6682, -86.512, -3.07548, 0.73 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 61/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -92.4792, 99.8981, -44.9255, 0.07 ) }
    dend_28 { pt3dadd( -92.5971, 100.181, -45.6752, 0.07 ) }
    dend_28 { pt3dadd( -92.7907, 100.652, -46.8884, 0.66 ) }
    dend_28 { pt3dadd( -93.2346, 101.847, -49.7469, 0.66 ) }
    dend_28 { pt3dadd( -93.371, 102.269, -50.6974, 0.07 ) }
    dend_28 { pt3dadd( -93.4989, 102.69, -51.5978, 0.66 ) }
    dend_28 { pt3dadd( -93.7585, 103.488, -53.2554, 0.07 ) }
    dend_28 { pt3dadd( -93.8308, 103.724, -53.726, 0.36 ) }
    dend_28 { pt3dadd( -93.9402, 104.015, -54.2615, 0.07 ) }
    dend_28 { pt3dadd( -94.2149, 104.535, -55.0541, 0.07 ) }
    dend_28 { pt3dadd( -94.4012, 104.823, -55.4513, 0.07 ) }
    dend_28 { pt3dadd( -94.8003, 105.402, -56.1658, 0.07 ) }
    dend_28 { pt3dadd( -95.1971, 106.038, -56.9276, 0.29 ) }
    dend_28 { pt3dadd( -95.4927, 106.698, -57.6892, 0.07 ) }
    dend_28 { pt3dadd( -95.6457, 107.175, -58.2504, 0.29 ) }
    dend_28 { pt3dadd( -95.7107, 107.502, -58.5605, 0.29 ) }
    dend_28 { pt3dadd( -95.7809, 108.361, -59.2446, 0.07 ) }
    dend_28 { pt3dadd( -95.7829, 109.628, -60.0885, 0.07 ) }
    dend_28 { pt3dadd( -95.7063, 110.606, -60.6482, 0.29 ) }
    dend_28 { pt3dadd( -95.4975, 112.122, -61.4198, 0.07 ) }
    dend_28 { pt3dadd( -95.0803, 114.067, -62.4036, 0.07 ) }
    dend_28 { pt3dadd( -94.8813, 114.933, -62.8154, 0.07 ) }
    dend_28 { pt3dadd( -94.5942, 116.406, -63.3878, 0.95 ) }
    dend_28 { pt3dadd( -94.4821, 117.299, -63.6617, 0.07 ) }
    dend_28 { pt3dadd( -94.448, 117.905, -63.8306, 0.07 ) }
    dend_28 { pt3dadd( -94.4307, 119.226, -64.1731, 0.73 ) }
    dend_28 { pt3dadd( -94.4442, 119.73, -64.3404, 0.73 ) }
    dend_28 { pt3dadd( -94.5503, 121.081, -64.7782, 0.07 ) }
    dend_28 { pt3dadd( -94.6818, 122.163, -65.1938, 0.07 ) }
    dend_28 { pt3dadd( -94.8774, 123.271, -65.8319, 0.29 ) }
    dend_28 { pt3dadd( -95.1356, 124.449, -66.6208, 0.07 ) }
    dend_28 { pt3dadd( -95.4025, 125.486, -67.3668, 0.07 ) }
    dend_28 { pt3dadd( -95.6855, 126.568, -68.2477, 0.22 ) }
    dend_28 { pt3dadd( -95.9867, 127.606, -69.2479, 0.07 ) }
    dend_28 { pt3dadd( -96.7051, 129.674, -71.5055, 0.07 ) }
    dend_28 { pt3dadd( -97.1054, 130.642, -72.6204, 0.07 ) }
    dend_28 { pt3dadd( -97.3483, 131.159, -73.2193, 0.58 ) }
    dend_28 { pt3dadd( -97.8827, 132.206, -74.4014, 0.07 ) }
    dend_28 { pt3dadd( -98.4835, 133.343, -75.6469, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_28 { pt3dadd( -98.8703, 134.081, -76.3753, 0.07 ) }
    dend_28 { pt3dadd( -99.2729, 134.903, -77.086, 0.36 ) }
    dend_28 { pt3dadd( -99.6997, 135.879, -77.9639, 0.07 ) }
    dend_28 { pt3dadd( -99.9059, 136.414, -78.4544, 0.07 ) }
    dend_28 { pt3dadd( -100.431, 137.864, -79.7904, 0.07 ) }
    dend_28 { pt3dadd( -100.705, 138.649, -80.5407, 0.36 ) }
    dend_28 { pt3dadd( -100.933, 139.274, -81.1711, 0.58 ) }
    dend_28 { pt3dadd( -101.368, 140.315, -82.2658, 0.07 ) }
    dend_28 { pt3dadd( -101.78, 141.188, -83.1415, 0.07 ) }
    dend_28 { pt3dadd( -102.198, 142.01, -83.8923, 0.07 ) }
    dend_28 { pt3dadd( -102.637, 142.785, -84.5517, 0.07 ) }
    dend_28 { pt3dadd( -103.015, 143.382, -85.0846, 0.07 ) }
    dend_28 { pt3dadd( -103.441, 144.02, -85.6285, 0.07 ) }
    dend_28 { pt3dadd( -103.992, 144.826, -86.198, 0.29 ) }
    dend_28 { pt3dadd( -104.457, 145.541, -86.6371, 0.58 ) }
    dend_28 { pt3dadd( -105.116, 146.609, -87.2292, 0.07 ) }
    dend_28 { pt3dadd( -105.581, 147.389, -87.683, 0.07 ) }
    dend_28 { pt3dadd( -105.789, 147.767, -87.913, 0.07 ) }
    dend_28 { pt3dadd( -106.162, 148.463, -88.3421, 0.07 ) }
    dend_28 { pt3dadd( -106.689, 149.487, -88.9292, 0.51 ) }
    dend_28 { pt3dadd( -107.053, 150.211, -89.318, 0.07 ) }
    dend_28 { pt3dadd( -107.509, 151.133, -89.7275, 0.07 ) }
    dend_28 { pt3dadd( -107.847, 151.817, -90.0377, 0.36 ) }
    dend_28 { pt3dadd( -107.994, 152.158, -90.2136, 0.36 ) }
    dend_28 { pt3dadd( -108.243, 152.839, -90.604, 0.07 ) }
    dend_28 { pt3dadd( -108.614, 153.966, -91.2922, 0.29 ) }
    dend_28 { pt3dadd( -108.801, 154.61, -91.6894, 0.07 ) }
    dend_28 { pt3dadd( -109.066, 155.651, -92.341, 0.58 ) }
    dend_28 { pt3dadd( -109.534, 157.539, -93.5817, 0.07 ) }
    dend_28 { pt3dadd( -109.745, 158.492, -94.2248, 0.07 ) }
    dend_28 { pt3dadd( -109.877, 159.19, -94.7066, 0.07 ) }
    dend_28 { pt3dadd( -109.966, 159.927, -95.1971, 0.44 ) }
    dend_28 { pt3dadd( -110.058, 161.035, -95.9422, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 33/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -92.4792, 99.8981, -44.9255, 0.07 ) }
    dend_27 { pt3dadd( -92.3677, 101.451, -44.8773, 0.07 ) }
    dend_27 { pt3dadd( -92.3284, 102.045, -44.8695, 0.07 ) }
    dend_27 { pt3dadd( -92.2979, 102.867, -44.8675, 0.29 ) }
    dend_27 { pt3dadd( -92.3176, 104.039, -44.8817, 0.07 ) }
    dend_27 { pt3dadd( -92.3685, 104.771, -44.8958, 0.07 ) }
    dend_27 { pt3dadd( -92.4416, 105.396, -44.91, 0.07 ) }
    dend_27 { pt3dadd( -92.5808, 106.205, -44.964, 0.15 ) }
    dend_27 { pt3dadd( -92.8073, 107.242, -45.0244, 0.22 ) }
    dend_27 { pt3dadd( -93.0572, 108.244, -45.0688, 0.07 ) }
    dend_27 { pt3dadd( -93.2389, 108.901, -45.0849, 0.22 ) }
    dend_27 { pt3dadd( -93.472, 109.694, -45.1035, 0.07 ) }
    dend_27 { pt3dadd( -93.6341, 110.267, -45.1158, 0.29 ) }
    dend_27 { pt3dadd( -93.7306, 110.633, -45.1044, 0.29 ) }
    dend_27 { pt3dadd( -94.0029, 111.559, -45.1068, 0.07 ) }
    dend_27 { pt3dadd( -94.1513, 112.01, -45.1201, 0.07 ) }
    dend_27 { pt3dadd( -94.3138, 112.418, -45.1458, 0.58 ) }
    dend_27 { pt3dadd( -94.5088, 112.8, -45.1812, 0.58 ) }
    dend_27 { pt3dadd( -95.3467, 114.099, -45.4345, 0.07 ) }
    dend_27 { pt3dadd( -96.2573, 115.197, -45.7964, 0.22 ) }
    dend_27 { pt3dadd( -96.5153, 115.458, -45.9278, 0.22 ) }
    dend_27 { pt3dadd( -96.97, 115.899, -46.1784, 0.07 ) }
    dend_27 { pt3dadd( -97.4216, 116.336, -46.4385, 0.29 ) }
    dend_27 { pt3dadd( -98.152, 117.077, -46.9253, 0.07 ) }
    dend_27 { pt3dadd( -98.769, 117.75, -47.4095, 0.07 ) }
    dend_27 { pt3dadd( -99.3068, 118.477, -47.8692, 0.07 ) }
    dend_27 { pt3dadd( -99.7548, 119.236, -48.3521, 0.22 ) }
    dend_27 { pt3dadd( -100.033, 119.793, -48.7344, 0.22 ) }
    dend_27 { pt3dadd( -100.437, 120.754, -49.4286, 0.07 ) }
    dend_27 { pt3dadd( -100.564, 121.115, -49.6805, 0.07 ) }
    dend_27 { pt3dadd( -100.814, 121.935, -50.264, 0.88 ) }
    dend_27 { pt3dadd( -101.165, 123.013, -51.1112, 0.07 ) }
    dend_27 { pt3dadd( -101.427, 123.778, -51.867, 0.07 ) }
    dend_27 { pt3dadd( -101.641, 124.391, -52.5182, 0.36 ) }
    dend_27 { pt3dadd( -101.769, 124.749, -52.903, 0.07 ) }
    dend_27 { pt3dadd( -101.85, 124.986, -53.1593, 0.22 ) }
    dend_27 { pt3dadd( -102.117, 125.774, -53.9832, 0.22 ) }
    dend_27 { pt3dadd( -102.471, 126.98, -55.1604, 0.07 ) }
    dend_27 { pt3dadd( -102.633, 127.621, -55.7564, 0.07 ) }
    dend_27 { pt3dadd( -102.744, 128.105, -56.2062, 0.07 ) }
    dend_27 { pt3dadd( -102.902, 128.889, -56.9437, 0.36 ) }
    dend_27 { pt3dadd( -102.995, 129.477, -57.4695, 0.36 ) }
    dend_27 { pt3dadd( -103.127, 130.792, -58.4358, 0.07 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 76/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -73.381, 48.3573, 4.34262, 0.22 ) }
    dend_22 { pt3dadd( -83.0093, 49.3475, 6.85563, 0.22 ) }
    dend_22 { pt3dadd( -92.4834, 49.2276, 10.0535, 0.22 ) }
    dend_22 { pt3dadd( -102.213, 47.734, 11.8169, 0.22 ) }
    dend_22 { pt3dadd( -111.183, 44.6712, 15.0046, 0.22 ) }
    dend_22 { pt3dadd( -120.758, 43.7032, 17.7209, 0.22 ) }
    dend_22 { pt3dadd( -130.671, 43.1511, 18.9158, 0.22 ) }
    dend_22 { pt3dadd( -140.249, 43.8419, 21.7075, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 84/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -73.381, 48.3573, 4.34262, 0.51 ) }
    dend_21 { pt3dadd( -81.6185, 53.3647, 1.68383, 0.22 ) }
    dend_21 { pt3dadd( -88.7535, 59.5676, -1.57448, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -77.8114, -11.5604, 41.1814, 0.73 ) }
    dend_19 { pt3dadd( -85.9504, -17.1077, 39.4537, 0.73 ) }
    dend_19 { pt3dadd( -93.6081, -23.3149, 37.7711, 0.73 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 90/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -77.8114, -11.5604, 41.1814, 0.15 ) }
    dend_18 { pt3dadd( -83.1402, -15.2025, 48.8195, 0.73 ) }
    dend_18 { pt3dadd( -88.8871, -19.8153, 55.5794, 0.73 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.3355, 96.9351, 4.10849, 0.15 ) }
    dend_15 { pt3dadd( 14.2128, 97.5984, 3.74819, 0.15 ) }
    dend_15 { pt3dadd( 14.191, 98.4066, 3.32938, 0.15 ) }
    dend_15 { pt3dadd( 14.2534, 98.813, 3.09287, 0.15 ) }
    dend_15 { pt3dadd( 14.4968, 99.6611, 2.53677, 0.15 ) }
    dend_15 { pt3dadd( 14.7611, 100.508, 1.98775, 0.15 ) }
    dend_15 { pt3dadd( 14.8478, 100.895, 1.7355, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_15 { pt3dadd( 14.9822, 101.592, 1.30715, 0.66 ) }
    dend_15 { pt3dadd( 15.0815, 102.449, 0.838981, 0.29 ) }
    dend_15 { pt3dadd( 15.1018, 103.144, 0.452666, 0.07 ) }
    dend_15 { pt3dadd( 15.0729, 103.814, 0.0511701, 0.44 ) }
    dend_15 { pt3dadd( 15.0286, 104.964, -0.60578, 0.07 ) }
    dend_15 { pt3dadd( 14.9966, 105.745, -1.14945, 0.58 ) }
    dend_15 { pt3dadd( 14.9728, 106.213, -1.52347, 0.07 ) }
    dend_15 { pt3dadd( 14.985, 106.894, -2.1124, 0.07 ) }
    dend_15 { pt3dadd( 15.1145, 107.539, -2.75026, 0.07 ) }
    dend_15 { pt3dadd( 15.4306, 108.257, -3.57474, 0.58 ) }
    dend_15 { pt3dadd( 16.1079, 109.214, -4.89812, 0.07 ) }
    dend_15 { pt3dadd( 16.4453, 109.608, -5.50356, 0.07 ) }
    dend_15 { pt3dadd( 16.7018, 109.871, -5.9523, 0.07 ) }
    dend_15 { pt3dadd( 17.1439, 110.257, -6.71414, 0.36 ) }
    dend_15 { pt3dadd( 17.3483, 110.417, -7.04691, 0.36 ) }
    dend_15 { pt3dadd( 18.0522, 110.947, -8.20978, 0.07 ) }
    dend_15 { pt3dadd( 18.3097, 111.162, -8.70041, 0.88 ) }
    dend_15 { pt3dadd( 18.6605, 111.547, -9.79211, 0.15 ) }
    dend_15 { pt3dadd( 18.9577, 111.958, -10.9779, 0.29 ) }
    dend_15 { pt3dadd( 19.0632, 112.168, -11.5715, 0.07 ) }
    dend_15 { pt3dadd( 19.1807, 112.474, -12.4472, 0.58 ) }
    dend_15 { pt3dadd( 19.3204, 113.007, -14.124, 0.58 ) }
    dend_15 { pt3dadd( 19.3385, 113.445, -15.8582, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 23/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.3355, 96.9351, 4.10849, 0.29 ) }
    dend_12 { pt3dadd( 14.764, 98.3113, 4.18757, 0.29 ) }
    dend_12 { pt3dadd( 15.0656, 99.0779, 4.18443, 0.15 ) }
    dend_12 { pt3dadd( 15.3356, 99.6911, 4.2033, 0.15 ) }
    dend_12 { pt3dadd( 15.6723, 100.417, 4.23715, 0.15 ) }
    dend_12 { pt3dadd( 16.1603, 101.519, 4.29521, 0.36 ) }
    dend_12 { pt3dadd( 16.5701, 102.572, 4.34907, 0.58 ) }
    dend_12 { pt3dadd( 16.8356, 103.305, 4.37144, 0.73 ) }
    dend_12 { pt3dadd( 17.1776, 104.408, 4.46092, 1.02 ) }
    dend_12 { pt3dadd( 17.3515, 105.112, 4.54416, 1.02 ) }
    dend_12 { pt3dadd( 17.523, 106.12, 4.68926, 1.02 ) }
    dend_12 { pt3dadd( 17.7505, 108.012, 5.00204, 0.22 ) }
    dend_12 { pt3dadd( 17.8559, 109.093, 5.19614, 0.22 ) }
    dend_12 { pt3dadd( 17.9567, 110.171, 5.38972, 0.66 ) }
    dend_12 { pt3dadd( 18.03, 110.9, 5.51292, 0.88 ) }
    dend_12 { pt3dadd( 18.1826, 112.212, 5.74659, 0.22 ) }
    dend_12 { pt3dadd( 18.3033, 113.055, 5.89545, 0.07 ) }
    dend_12 { pt3dadd( 18.4009, 113.705, 6.00139, 0.07 ) }
    dend_12 { pt3dadd( 18.5472, 114.827, 6.13781, 0.58 ) }
    dend_12 { pt3dadd( 18.5991, 115.346, 6.19736, 0.95 ) }
    dend_12 { pt3dadd( 18.6481, 115.932, 6.27773, 0.95 ) }
    dend_12 { pt3dadd( 18.7484, 117.104, 6.45789, 0.15 ) }
    dend_12 { pt3dadd( 18.8154, 117.786, 6.58666, 0.58 ) }
    dend_12 { pt3dadd( 18.9464, 118.748, 6.799, 0.73 ) }
    dend_12 { pt3dadd( 19.1215, 119.546, 6.99518, 0.07 ) }
    dend_12 { pt3dadd( 19.3657, 120.212, 7.19469, 0.07 ) }
    dend_12 { pt3dadd( 19.6623, 120.799, 7.39441, 0.07 ) }
    dend_12 { pt3dadd( 20.102, 121.453, 7.62774, 0.07 ) }
    dend_12 { pt3dadd( 20.2841, 121.681, 7.69966, 0.07 ) }
    dend_12 { pt3dadd( 20.6595, 122.115, 7.80032, 0.07 ) }
    dend_12 { pt3dadd( 21.0119, 122.592, 7.85441, 0.07 ) }
    dend_12 { pt3dadd( 21.412, 123.352, 7.90146, 0.36 ) }
    dend_12 { pt3dadd( 21.6731, 124.047, 7.94538, 0.66 ) }
    dend_12 { pt3dadd( 21.8942, 124.74, 7.97538, 0.95 ) }
    dend_12 { pt3dadd( 22.1478, 125.644, 8.04096, 0.95 ) }
    dend_12 { pt3dadd( 22.4737, 126.875, 8.15465, 0.22 ) }
    dend_12 { pt3dadd( 22.8209, 128.196, 8.29463, 0.07 ) }
    dend_12 { pt3dadd( 23.2557, 129.635, 8.49061, 0.58 ) }
    dend_12 { pt3dadd( 23.5062, 130.443, 8.57384, 0.58 ) }
    dend_12 { pt3dadd( 23.8289, 131.449, 8.64774, 0.29 ) }
    dend_12 { pt3dadd( 24.0884, 132.232, 8.71084, 0.58 ) }
    dend_12 { pt3dadd( 24.3265, 132.843, 8.75651, 0.22 ) }
    dend_12 { pt3dadd( 24.9239, 134.087, 8.82072, 0.29 ) }
    dend_12 { pt3dadd( 25.6869, 135.492, 8.8062, 0.07 ) }
    dend_12 { pt3dadd( 25.916, 135.907, 8.79103, 0.07 ) }
    dend_12 { pt3dadd( 26.536, 136.923, 8.63473, 0.73 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 69/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.39183, 51.6332, 15.4298, 0.36 ) }
    dend_8 { pt3dadd( 5.38964, 51.9729, 15.851, 0.36 ) }
    dend_8 { pt3dadd( 5.27459, 52.3643, 16.5097, 0.36 ) }
    dend_8 { pt3dadd( 4.9226, 52.7277, 17.5151, 0.36 ) }
    dend_8 { pt3dadd( 4.68639, 52.7561, 17.9684, 0.36 ) }
    dend_8 { pt3dadd( 4.43254, 52.6972, 18.4068, 0.15 ) }
    dend_8 { pt3dadd( 4.24088, 52.6948, 18.7922, 0.36 ) }
    dend_8 { pt3dadd( 3.7904, 52.616, 19.6119, 0.36 ) }
    dend_8 { pt3dadd( 3.59792, 52.7161, 19.9837, 0.36 ) }
    dend_8 { pt3dadd( 3.71411, 53.0779, 20.0516, 0.36 ) }
    dend_8 { pt3dadd( 3.76859, 53.3266, 20.1294, 0.36 ) }
    dend_8 { pt3dadd( 3.94345, 54.4945, 20.5959, 0.36 ) }
    dend_8 { pt3dadd( 4.02033, 55.1021, 20.8687, 0.51 ) }
    dend_8 { pt3dadd( 4.15847, 56.1943, 21.3596, 0.51 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 83/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.39183, 51.6332, 15.4298, 0.07 ) }
    dend_3 { pt3dadd( 6.16247, 51.8727, 15.4265, 0.07 ) }
    dend_3 { pt3dadd( 6.68989, 52.0432, 15.4131, 0.07 ) }
    dend_3 { pt3dadd( 7.61148, 52.341, 15.3896, 0.22 ) }
    dend_3 { pt3dadd( 8.44345, 52.6099, 15.3685, 0.07 ) }
    dend_3 { pt3dadd( 9.06883, 52.812, 15.3526, 0.07 ) }
    dend_3 { pt3dadd( 9.72327, 53.0234, 15.3359, 0.58 ) }
    dend_3 { pt3dadd( 10.0966, 53.1612, 15.3037, 0.36 ) }
    dend_3 { pt3dadd( 19.762, 55.6343, 14.6223, 0.36 ) }
    // Section: dend_108, id: dend_108, parent: dend_106 (entry count 92/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 23.2974, -64.6513, 7.60252, 0.44 ) }
    dend_108 { pt3dadd( 23.3095, -65.6219, 7.13764, 0.44 ) }
    dend_108 { pt3dadd( 23.3063, -66.2234, 6.88938, 0.29 ) }
    dend_108 { pt3dadd( 23.2957, -67.0223, 6.61364, 0.29 ) }
    dend_108 { pt3dadd( 23.2954, -67.909, 6.34994, 0.29 ) }
    dend_108 { pt3dadd( 23.3299, -68.632, 6.18056, 0.29 ) }
    dend_108 { pt3dadd( 23.404, -69.3104, 6.01577, 0.44 ) }
    dend_108 { pt3dadd( 23.5355, -69.9792, 5.88627, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_108 { pt3dadd( 23.8097, -70.8198, 5.78462, 0.51 ) }
    dend_108 { pt3dadd( 24.0658, -71.3901, 5.74706, 0.51 ) }
    dend_108 { pt3dadd( 24.535, -72.2495, 5.71142, 0.51 ) }
    dend_108 { pt3dadd( 25.2003, -73.3058, 5.68156, 0.51 ) }
    dend_108 { pt3dadd( 25.7433, -74.0459, 5.6733, 0.22 ) }
    dend_108 { pt3dadd( 26.4444, -74.913, 5.6956, 0.36 ) }
    dend_108 { pt3dadd( 26.8516, -75.392, 5.73197, 0.51 ) }
    dend_108 { pt3dadd( 27.1444, -75.7626, 5.77517, 0.66 ) }
    dend_108 { pt3dadd( 27.2737, -75.9519, 5.80326, 0.66 ) }
    dend_108 { pt3dadd( 27.7663, -76.7972, 5.97851, 0.36 ) }
    dend_108 { pt3dadd( 28.1246, -77.4777, 6.10196, 0.51 ) }
    dend_108 { pt3dadd( 28.4929, -78.1678, 6.20067, 0.29 ) }
    dend_108 { pt3dadd( 28.8649, -78.8109, 6.24856, 0.29 ) }
    dend_108 { pt3dadd( 29.2328, -79.3904, 6.25433, 0.29 ) }
    dend_108 { pt3dadd( 29.5203, -79.8285, 6.21918, 0.29 ) }
    dend_108 { pt3dadd( 30.0546, -80.6612, 6.13934, 0.29 ) }
    dend_108 { pt3dadd( 30.4681, -81.3295, 6.10794, 0.73 ) }
    dend_108 { pt3dadd( 31.0686, -82.3186, 6.16276, 0.73 ) }
    dend_108 { pt3dadd( 31.4416, -82.8875, 6.26593, 0.29 ) }
    dend_108 { pt3dadd( 31.8804, -83.535, 6.45514, 0.22 ) }
    dend_108 { pt3dadd( 32.5946, -84.5808, 6.78871, 0.22 ) }
    dend_108 { pt3dadd( 33.2471, -85.5855, 7.12177, 0.36 ) }
    dend_108 { pt3dadd( 33.7155, -86.3362, 7.37029, 0.36 ) }
    dend_108 { pt3dadd( 34.2293, -87.1839, 7.63273, 0.22 ) }
    dend_108 { pt3dadd( 34.684, -87.9418, 7.79294, 0.36 ) }
    dend_108 { pt3dadd( 35.2138, -88.7997, 7.8929, 0.8 ) }
    dend_108 { pt3dadd( 35.7179, -89.6498, 7.87996, 0.8 ) }
    dend_108 { pt3dadd( 36.0544, -90.2969, 7.84601, 0.8 ) }
    dend_108 { pt3dadd( 36.4863, -91.3758, 7.81036, 0.66 ) }
    dend_108 { pt3dadd( 36.7668, -92.3819, 7.83308, 0.66 ) }
    dend_108 { pt3dadd( 36.8709, -92.8701, 7.87259, 0.88 ) }
    dend_108 { pt3dadd( 37.1037, -94.0245, 8.04074, 0.51 ) }
    dend_108 { pt3dadd( 37.3402, -95.0946, 8.23063, 0.22 ) }
    dend_108 { pt3dadd( 37.5931, -95.9746, 8.41417, 0.22 ) }
    dend_108 { pt3dadd( 37.8252, -96.4735, 8.50671, 0.22 ) }
    dend_108 { pt3dadd( 38.3133, -97.145, 8.58885, 0.22 ) }
    dend_108 { pt3dadd( 38.9397, -97.7669, 8.60046, 0.22 ) }
    dend_108 { pt3dadd( 39.4777, -98.1913, 8.56385, 0.51 ) }
    dend_108 { pt3dadd( 40.149, -98.6887, 8.48296, 0.51 ) }
    dend_108 { pt3dadd( 41.5182, -99.734, 8.29381, 0.29 ) }
    dend_108 { pt3dadd( 41.9956, -100.12, 8.24836, 0.51 ) }
    dend_108 { pt3dadd( 42.6842, -100.75, 8.21812, 0.58 ) }
    dend_108 { pt3dadd( 43.305, -101.391, 8.22429, 0.22 ) }
    dend_108 { pt3dadd( 43.7595, -101.873, 8.2556, 0.22 ) }
    dend_108 { pt3dadd( 44.3277, -102.485, 8.31746, 0.22 ) }
    dend_108 { pt3dadd( 45.2186, -103.404, 8.459, 0.8 ) }
    dend_108 { pt3dadd( 45.8666, -104.032, 8.55006, 0.44 ) }
    dend_108 { pt3dadd( 46.2894, -104.404, 8.59266, 0.51 ) }
    dend_108 { pt3dadd( 47.1227, -105.063, 8.63774, 0.15 ) }
    dend_108 { pt3dadd( 47.6863, -105.449, 8.60702, 0.58 ) }
    dend_108 { pt3dadd( 48.2485, -105.786, 8.51607, 0.73 ) }
    dend_108 { pt3dadd( 48.9468, -106.181, 8.31301, 0.58 ) }
    dend_108 { pt3dadd( 49.7793, -106.646, 8.03204, 0.07 ) }
    dend_108 { pt3dadd( 50.1143, -106.851, 7.90957, 0.07 ) }
    dend_108 { pt3dadd( 51.1811, -107.614, 7.495, 0.36 ) }
    dend_108 { pt3dadd( 52.0215, -108.255, 7.22079, 1.02 ) }
    dend_108 { pt3dadd( 52.9534, -109.001, 6.96529, 0.22 ) }
    dend_108 { pt3dadd( 53.731, -109.625, 6.80283, 0.22 ) }
    dend_108 { pt3dadd( 54.4648, -110.239, 6.72594, 0.29 ) }
    dend_108 { pt3dadd( 55.2285, -110.945, 6.71334, 0.51 ) }
    dend_108 { pt3dadd( 56.114, -111.887, 6.78146, 0.22 ) }
    dend_108 { pt3dadd( 56.6592, -112.556, 6.8126, 0.07 ) }
    dend_108 { pt3dadd( 57.1478, -113.207, 6.80226, 0.07 ) }
    dend_108 { pt3dadd( 57.5823, -113.792, 6.73337, 0.07 ) }
    dend_108 { pt3dadd( 58.3487, -114.838, 6.57938, 0.8 ) }
    dend_108 { pt3dadd( 58.7784, -115.44, 6.47539, 0.8 ) }
    dend_108 { pt3dadd( 59.4617, -116.496, 6.29684, 0.15 ) }
    dend_108 { pt3dadd( 60.0305, -117.401, 6.23076, 0.07 ) }
    dend_108 { pt3dadd( 60.4961, -118.1, 6.23747, 0.07 ) }
    dend_108 { pt3dadd( 61.1905, -118.984, 6.3238, 0.58 ) }
    dend_108 { pt3dadd( 61.7607, -119.563, 6.47878, 0.8 ) }
    dend_108 { pt3dadd( 62.545, -120.214, 6.74908, 0.44 ) }
    dend_108 { pt3dadd( 63.4548, -120.833, 7.10815, 0.15 ) }
    dend_108 { pt3dadd( 63.9396, -121.124, 7.29152, 0.15 ) }
    dend_108 { pt3dadd( 64.4582, -121.424, 7.4511, 0.15 ) }
    dend_108 { pt3dadd( 65.1727, -121.839, 7.60099, 0.22 ) }
    dend_108 { pt3dadd( 65.6154, -122.124, 7.67298, 0.51 ) }
    dend_108 { pt3dadd( 66.0852, -122.528, 7.7074, 0.15 ) }
    dend_108 { pt3dadd( 66.4258, -123.073, 7.69414, 0.15 ) }
    dend_108 { pt3dadd( 66.6859, -123.863, 7.67988, 0.58 ) }
    dend_108 { pt3dadd( 66.7872, -124.281, 7.67409, 0.95 ) }
    dend_108 { pt3dadd( 66.9159, -124.861, 7.67093, 0.58 ) }
    dend_108 { pt3dadd( 67.1295, -125.735, 7.67665, 0.44 ) }
    dend_108 { pt3dadd( 67.4157, -126.735, 7.65003, 0.22 ) }
    dend_108 { pt3dadd( 67.7098, -127.575, 7.66285, 0.15 ) }
    dend_108 { pt3dadd( 68.1375, -128.526, 7.70821, 0.15 ) }
    dend_108 { pt3dadd( 68.5605, -129.308, 7.72147, 0.44 ) }
    dend_108 { pt3dadd( 68.8324, -129.776, 7.71757, 0.44 ) }
    dend_108 { pt3dadd( 69.4323, -130.793, 7.6872, 0.15 ) }
    dend_108 { pt3dadd( 70.0847, -132.014, 7.59167, 0.44 ) }
    dend_108 { pt3dadd( 70.4733, -132.92, 7.48735, 0.07 ) }
    dend_108 { pt3dadd( 70.8555, -134.107, 7.32163, 0.07 ) }
    dend_108 { pt3dadd( 71.0764, -134.985, 7.1745, 0.29 ) }
    dend_108 { pt3dadd( 71.2371, -135.696, 7.04719, 0.58 ) }
    dend_108 { pt3dadd( 71.5028, -136.88, 6.83306, 0.07 ) }
    dend_108 { pt3dadd( 71.6072, -137.335, 6.73762, 0.07 ) }
    dend_108 { pt3dadd( 71.8498, -138.395, 6.54729, 0.22 ) }
    dend_108 { pt3dadd( 72.0483, -139.264, 6.42551, 0.88 ) }
    dend_108 { pt3dadd( 72.2791, -140.126, 6.31604, 0.88 ) }
    dend_108 { pt3dadd( 72.7086, -141.499, 6.1882, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_108 { pt3dadd( 73.1929, -142.883, 6.13768, 0.15 ) }
    dend_108 { pt3dadd( 73.5111, -143.733, 6.17221, 0.15 ) }
    dend_108 { pt3dadd( 73.7604, -144.403, 6.26121, 0.73 ) }
    dend_108 { pt3dadd( 74.0636, -145.29, 6.46033, 0.07 ) }
    dend_108 { pt3dadd( 74.3464, -146.197, 6.81062, 0.22 ) }
    dend_108 { pt3dadd( 74.6134, -147.047, 7.30294, 0.07 ) }
    dend_108 { pt3dadd( 74.9298, -147.991, 8.03048, 0.07 ) }
    dend_108 { pt3dadd( 75.085, -148.459, 8.4143, 0.36 ) }
    dend_108 { pt3dadd( 75.3269, -149.156, 8.99084, 0.73 ) }
    dend_108 { pt3dadd( 75.6776, -150.447, 10.0031, 0.15 ) }
    dend_108 { pt3dadd( 75.7841, -150.941, 10.347, 0.15 ) }
    dend_108 { pt3dadd( 75.9129, -151.519, 10.6787, 0.15 ) }
    dend_108 { pt3dadd( 76.1788, -152.512, 11.1718, 0.73 ) }
    dend_108 { pt3dadd( 76.4989, -153.529, 11.6684, 0.07 ) }
    dend_108 { pt3dadd( 76.7326, -154.266, 12.0027, 0.36 ) }
    dend_108 { pt3dadd( 76.8777, -154.818, 12.2027, 0.36 ) }
    dend_108 { pt3dadd( 77.0449, -155.624, 12.4962, 0.07 ) }
    dend_108 { pt3dadd( 77.2582, -156.816, 12.9981, 0.22 ) }
    dend_108 { pt3dadd( 77.4025, -157.47, 13.3275, 0.22 ) }
    dend_108 { pt3dadd( 77.5667, -158.055, 13.6607, 0.88 ) }
    dend_108 { pt3dadd( 77.7869, -158.594, 14.001, 0.51 ) }
    dend_108 { pt3dadd( 78.1108, -159.265, 14.4305, 0.22 ) }
    dend_108 { pt3dadd( 78.4601, -159.95, 14.8289, 0.22 ) }
    dend_108 { pt3dadd( 78.8744, -160.761, 15.2344, 0.44 ) }
    dend_108 { pt3dadd( 79.2853, -161.64, 15.6403, 0.07 ) }
    dend_108 { pt3dadd( 79.5566, -162.242, 15.949, 0.07 ) }
    dend_108 { pt3dadd( 79.8166, -162.822, 16.2541, 0.07 ) }
    dend_108 { pt3dadd( 80.1352, -163.503, 16.6092, 0.07 ) }
    dend_108 { pt3dadd( 80.409, -164.089, 16.9031, 0.36 ) }
    dend_108 { pt3dadd( 80.7071, -164.956, 17.3284, 0.58 ) }
    dend_108 { pt3dadd( 80.8934, -166.149, 17.8499, 0.15 ) }
    dend_108 { pt3dadd( 80.8529, -166.739, 18.1159, 0.15 ) }
    dend_108 { pt3dadd( 80.9798, -166.076, 17.8427, 0.44 ) }
    dend_108 { pt3dadd( 81.1229, -165.237, 17.5521, 0.07 ) }
    dend_108 { pt3dadd( 81.2386, -163.812, 16.9479, 0.22 ) }
    dend_108 { pt3dadd( 81.2229, -163.064, 16.5424, 0.07 ) }
    dend_108 { pt3dadd( 81.1998, -162.745, 16.3568, 0.22 ) }
    dend_108 { pt3dadd( 81.1249, -162.291, 16.0826, 0.07 ) }
    dend_108 { pt3dadd( 80.9462, -161.68, 15.6674, 0.29 ) }
    dend_108 { pt3dadd( 80.489, -160.661, 14.8575, 0.07 ) }
    dend_108 { pt3dadd( 80.1084, -160.068, 14.2906, 0.07 ) }
    dend_108 { pt3dadd( 84.0036, -169.278, 14.365, 0.07 ) }
    dend_108 { pt3dadd( 90.0906, -177.131, 15.4967, 0.07 ) }
    dend_108 { pt3dadd( 95.4455, -185.533, 16.3554, 0.07 ) }
    dend_108 { pt3dadd( 102.609, -192.128, 18.6335, 0.07 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 45/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 23.2974, -64.6513, 7.60252, 0.07 ) }
    dend_107 { pt3dadd( 24.6062, -64.8587, 7.64353, 0.07 ) }
    dend_107 { pt3dadd( 25.183, -64.9846, 7.6836, 0.07 ) }
    dend_107 { pt3dadd( 25.9543, -65.1864, 7.77976, 0.36 ) }
    dend_107 { pt3dadd( 26.4339, -65.342, 7.89072, 0.36 ) }
    dend_107 { pt3dadd( 27.2833, -65.7066, 8.23249, 0.15 ) }
    dend_107 { pt3dadd( 27.7224, -66.0024, 8.533, 0.15 ) }
    dend_107 { pt3dadd( 28.1163, -66.6304, 9.17081, 0.36 ) }
    dend_107 { pt3dadd( 28.1829, -66.95, 9.52344, 0.22 ) }
    dend_107 { pt3dadd( 28.1498, -67.6808, 10.3758, 0.15 ) }
    dend_107 { pt3dadd( 28.0191, -68.2078, 11.0348, 0.15 ) }
    dend_107 { pt3dadd( 27.7348, -68.8217, 11.8681, 0.29 ) }
    dend_107 { pt3dadd( 27.5129, -69.12, 12.3144, 0.07 ) }
    dend_107 { pt3dadd( 27.3876, -69.2257, 12.4997, 0.07 ) }
    dend_107 { pt3dadd( 27.1154, -69.3615, 12.8271, 0.07 ) }
    dend_107 { pt3dadd( 26.7099, -69.2121, 13.1484, 0.07 ) }
    dend_107 { pt3dadd( 26.437, -68.9055, 13.3473, 0.07 ) }
    dend_107 { pt3dadd( 26.1908, -68.4588, 13.5986, 0.07 ) }
    dend_107 { pt3dadd( 26.0477, -68.0427, 13.8377, 0.07 ) }
    dend_107 { pt3dadd( 25.9895, -67.549, 14.1892, 0.07 ) }
    dend_107 { pt3dadd( 26.2059, -66.9337, 14.9372, 0.07 ) }
    dend_107 { pt3dadd( 26.4173, -66.8939, 15.3299, 0.36 ) }
    dend_107 { pt3dadd( 26.8099, -67.0651, 16.0841, 0.07 ) }
    dend_107 { pt3dadd( 27.1316, -67.3112, 16.7178, 0.22 ) }
    dend_107 { pt3dadd( 27.447, -67.5964, 17.2938, 0.22 ) }
    dend_107 { pt3dadd( 27.8525, -67.9236, 17.9265, 0.15 ) }
    dend_107 { pt3dadd( 28.3045, -68.2607, 18.5518, 0.15 ) }
    dend_107 { pt3dadd( 28.7492, -68.498, 19.0692, 0.15 ) }
    dend_107 { pt3dadd( 28.9522, -68.5659, 19.2648, 0.15 ) }
    dend_107 { pt3dadd( 29.6605, -68.7149, 19.859, 0.44 ) }
    dend_107 { pt3dadd( 30.6456, -68.9227, 20.6576, 0.07 ) }
    dend_107 { pt3dadd( 30.891, -68.9854, 20.8675, 0.07 ) }
    dend_107 { pt3dadd( 31.2593, -69.121, 21.2029, 0.07 ) }
    dend_107 { pt3dadd( 31.3827, -69.4706, 21.5278, 0.07 ) }
    dend_107 { pt3dadd( 31.2397, -69.9614, 21.7859, 0.07 ) }
    dend_107 { pt3dadd( 30.8906, -70.9054, 22.1456, 0.07 ) }
    dend_107 { pt3dadd( 30.6172, -71.6245, 22.3189, 0.07 ) }
    dend_107 { pt3dadd( 30.3414, -72.4268, 22.4448, 0.29 ) }
    dend_107 { pt3dadd( 30.2615, -72.7141, 22.4523, 0.29 ) }
    dend_107 { pt3dadd( 30.161, -73.4783, 22.3409, 0.07 ) }
    dend_107 { pt3dadd( 30.1918, -73.9568, 22.1386, 0.07 ) }
    dend_107 { pt3dadd( 30.3655, -74.8001, 21.7415, 0.07 ) }
    dend_107 { pt3dadd( 30.4758, -75.2347, 21.5391, 0.07 ) }
    dend_107 { pt3dadd( 30.6519, -75.9206, 21.2428, 0.07 ) }
    dend_107 { pt3dadd( 30.7322, -76.4716, 21.0319, 0.07 ) }
    dend_107 { pt3dadd( 30.6931, -77.699, 20.6532, 0.07 ) }
    dend_107 { pt3dadd( 30.3473, -78.9874, 20.4315, 0.07 ) }
    dend_107 { pt3dadd( 30.133, -79.3455, 20.4287, 0.07 ) }
    dend_107 { pt3dadd( 29.9176, -79.59, 20.4491, 0.07 ) }
    dend_107 { pt3dadd( 29.375, -79.9725, 20.5694, 0.07 ) }
    dend_107 { pt3dadd( 29.011, -80.0996, 20.6577, 0.07 ) }
    dend_107 { pt3dadd( 28.5985, -80.1355, 20.7629, 0.07 ) }
    dend_107 { pt3dadd( 27.9783, -80.0843, 20.7629, 0.22 ) }
    dend_107 { pt3dadd( 28.9855, -87.2119, 27.7043, 0.22 ) }
    dend_107 { pt3dadd( 30.589, -94.0007, 34.8694, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_107 { pt3dadd( 32.6233, -101.135, 41.5755, 0.22 ) }
    dend_107 { pt3dadd( 33.7755, -107.179, 49.458, 0.22 ) }
    dend_107 { pt3dadd( 33.3929, -113.443, 57.244, 0.22 ) }
    dend_107 { pt3dadd( 33.6411, -119.661, 65.0721, 0.22 ) }
    dend_107 { pt3dadd( 33.0126, -126.909, 71.9326, 0.22 ) }
    // Section: dend_105, id: dend_105, parent: dend_83 (entry count 5/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 3.11649, -63.6277, 0.912037, 0.44 ) }
    dend_105 { pt3dadd( 2.77397, -63.8232, 1.56215, 0.44 ) }
    dend_105 { pt3dadd( 2.33557, -64.1241, 2.33655, 0.73 ) }
    dend_105 { pt3dadd( 1.71576, -64.6238, 3.31189, 0.73 ) }
    dend_105 { pt3dadd( 0.996569, -65.2732, 4.32133, 0.51 ) }
    dend_105 { pt3dadd( 0.396604, -65.8538, 5.09275, 0.44 ) }
    dend_105 { pt3dadd( 0.0305635, -66.2346, 5.55724, 0.44 ) }
    dend_105 { pt3dadd( -0.440627, -66.799, 6.13626, 0.88 ) }
    dend_105 { pt3dadd( -0.94483, -67.5023, 6.75247, 0.66 ) }
    dend_105 { pt3dadd( -1.38738, -68.2066, 7.30715, 0.51 ) }
    dend_105 { pt3dadd( -1.71235, -68.7806, 7.70532, 0.44 ) }
    dend_105 { pt3dadd( -2.05559, -69.3991, 8.14363, 0.44 ) }
    dend_105 { pt3dadd( -2.22228, -69.7088, 8.40134, 0.44 ) }
    dend_105 { pt3dadd( -2.41951, -70.1386, 8.99678, 0.44 ) }
    dend_105 { pt3dadd( -2.39505, -70.3404, 9.67566, 0.44 ) }
    dend_105 { pt3dadd( -2.14399, -70.3659, 10.3075, 0.29 ) }
    dend_105 { pt3dadd( -1.93206, -70.3587, 10.6263, 0.29 ) }
    dend_105 { pt3dadd( -1.79239, -70.37, 10.7959, 0.29 ) }
    dend_105 { pt3dadd( -1.30737, -70.5347, 11.3639, 0.29 ) }
    dend_105 { pt3dadd( -0.972157, -70.7613, 11.7888, 0.29 ) }
    dend_105 { pt3dadd( -0.673457, -71.0433, 12.2217, 0.29 ) }
    dend_105 { pt3dadd( -0.440234, -71.3533, 12.6592, 0.29 ) }
    dend_105 { pt3dadd( -0.361272, -71.6264, 12.9951, 0.29 ) }
    dend_105 { pt3dadd( -0.619827, -71.9224, 13.2593, 0.29 ) }
    dend_105 { pt3dadd( -1.15123, -72.2343, 13.4895, 0.29 ) }
    dend_105 { pt3dadd( -1.70487, -72.4352, 13.6576, 0.29 ) }
    dend_105 { pt3dadd( -2.20647, -72.5581, 13.7838, 0.29 ) }
    dend_105 { pt3dadd( -3.12183, -72.7085, 13.9886, 0.51 ) }
    dend_105 { pt3dadd( -3.42427, -72.7447, 14.052, 0.15 ) }
    dend_105 { pt3dadd( -4.21016, -72.8272, 14.2003, 0.58 ) }
    dend_105 { pt3dadd( -5.15837, -72.966, 14.3739, 0.22 ) }
    dend_105 { pt3dadd( -5.56624, -73.0651, 14.4693, 0.22 ) }
    dend_105 { pt3dadd( -5.93994, -73.217, 14.5917, 0.22 ) }
    dend_105 { pt3dadd( -6.34828, -73.5695, 14.7905, 0.22 ) }
    dend_105 { pt3dadd( -6.54354, -73.8451, 14.9261, 0.22 ) }
    dend_105 { pt3dadd( -6.87414, -74.4199, 15.2036, 0.22 ) }
    dend_105 { pt3dadd( -7.18203, -74.94, 15.4425, 0.22 ) }
    dend_105 { pt3dadd( -7.45873, -75.3267, 15.6195, 0.22 ) }
    dend_105 { pt3dadd( -8.05036, -76.013, 15.9441, 0.44 ) }
    dend_105 { pt3dadd( -8.80814, -76.6452, 16.2569, 0.29 ) }
    dend_105 { pt3dadd( -9.69173, -77.1766, 16.5104, 0.29 ) }
    dend_105 { pt3dadd( -10.5302, -77.5321, 16.6808, 0.29 ) }
    dend_105 { pt3dadd( -11.2984, -77.7963, 16.7315, 0.51 ) }
    dend_105 { pt3dadd( -11.5752, -77.8828, 16.7257, 0.51 ) }
    dend_105 { pt3dadd( -12.91, -78.2807, 16.6051, 0.29 ) }
    dend_105 { pt3dadd( -14.0302, -78.632, 16.4198, 0.29 ) }
    dend_105 { pt3dadd( -15.138, -78.9819, 16.1991, 0.66 ) }
    dend_105 { pt3dadd( -16.8955, -79.5195, 15.8708, 0.51 ) }
    dend_105 { pt3dadd( -17.6184, -79.735, 15.6728, 0.22 ) }
    dend_105 { pt3dadd( -18.1478, -79.8906, 15.4899, 0.22 ) }
    dend_105 { pt3dadd( -18.3326, -79.951, 15.4105, 0.22 ) }
    dend_105 { pt3dadd( -19.3124, -80.3634, 14.9446, 0.29 ) }
    dend_105 { pt3dadd( -19.9404, -80.7281, 14.6455, 0.29 ) }
    dend_105 { pt3dadd( -21.689, -81.9709, 13.9587, 0.29 ) }
    dend_105 { pt3dadd( -22.2027, -82.4369, 13.7474, 0.29 ) }
    dend_105 { pt3dadd( -22.7888, -83.1263, 13.5218, 0.29 ) }
    dend_105 { pt3dadd( -23.56, -84.2679, 13.2681, 0.29 ) }
    dend_105 { pt3dadd( -24.0216, -85.101, 13.147, 0.44 ) }
    dend_105 { pt3dadd( -24.2923, -85.6159, 13.1161, 0.66 ) }
    dend_105 { pt3dadd( -24.7313, -86.401, 13.1663, 0.58 ) }
    dend_105 { pt3dadd( -25.2229, -87.1505, 13.2257, 0.36 ) }
    dend_105 { pt3dadd( -25.7374, -87.7228, 13.2851, 0.15 ) }
    dend_105 { pt3dadd( -26.073, -87.9754, 13.3245, 0.15 ) }
    dend_105 { pt3dadd( -26.805, -88.4081, 13.408, 0.58 ) }
    dend_105 { pt3dadd( -27.5813, -88.8446, 13.4698, 0.58 ) }
    dend_105 { pt3dadd( -28.3924, -89.2727, 13.5058, 0.58 ) }
    dend_105 { pt3dadd( -29.0343, -89.62, 13.4912, 0.29 ) }
    dend_105 { pt3dadd( -29.5878, -89.9467, 13.4516, 0.29 ) }
    dend_105 { pt3dadd( -30.3763, -90.4911, 13.3455, 0.15 ) }
    dend_105 { pt3dadd( -31.3521, -91.2486, 13.1387, 0.15 ) }
    dend_105 { pt3dadd( -31.9672, -91.7536, 12.9476, 0.44 ) }
    dend_105 { pt3dadd( -32.7648, -92.4042, 12.6509, 0.58 ) }
    dend_105 { pt3dadd( -33.0714, -92.6252, 12.5275, 0.58 ) }
    dend_105 { pt3dadd( -33.7722, -93.0503, 12.2435, 0.29 ) }
    dend_105 { pt3dadd( -34.6615, -93.4992, 11.903, 0.15 ) }
    dend_105 { pt3dadd( -35.5228, -93.9017, 11.608, 0.15 ) }
    dend_105 { pt3dadd( -36.0969, -94.1828, 11.4294, 0.15 ) }
    dend_105 { pt3dadd( -36.7837, -94.5525, 11.2515, 0.36 ) }
    dend_105 { pt3dadd( -37.4899, -94.982, 11.1007, 0.22 ) }
    dend_105 { pt3dadd( -38.1833, -95.4788, 11.0032, 0.44 ) }
    dend_105 { pt3dadd( -38.8699, -96.0567, 10.9562, 0.07 ) }
    dend_105 { pt3dadd( -39.2494, -96.4169, 10.9548, 0.07 ) }
    dend_105 { pt3dadd( -39.8823, -97.0742, 10.9679, 0.44 ) }
    dend_105 { pt3dadd( -40.3701, -97.6253, 10.9744, 0.73 ) }
    dend_105 { pt3dadd( -41.2024, -98.636, 10.9822, 0.15 ) }
    dend_105 { pt3dadd( -41.4927, -99.0071, 10.9975, 0.15 ) }
    dend_105 { pt3dadd( -41.8133, -99.4188, 11.0211, 0.15 ) }
    dend_105 { pt3dadd( -42.3319, -100.071, 11.0674, 0.36 ) }
    dend_105 { pt3dadd( -42.8316, -100.66, 11.1181, 0.36 ) }
    dend_105 { pt3dadd( -43.5397, -101.381, 11.1821, 0.07 ) }
    dend_105 { pt3dadd( -44.051, -101.77, 11.1758, 0.07 ) }
    dend_105 { pt3dadd( -44.4609, -101.968, 11.1987, 0.07 ) }
    dend_105 { pt3dadd( -44.8831, -102.082, 11.2456, 0.07 ) }
    dend_105 { pt3dadd( -45.318, -102.155, 11.3103, 0.07 ) }
    dend_105 { pt3dadd( -46.1552, -102.25, 11.4515, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_105 { pt3dadd( -47.3859, -102.404, 11.6424, 0.51 ) }
    dend_105 { pt3dadd( -49.1707, -102.756, 11.8901, 0.15 ) }
    dend_105 { pt3dadd( -49.6567, -102.911, 11.9692, 0.15 ) }
    dend_105 { pt3dadd( -50.4781, -103.336, 12.1311, 0.36 ) }
    dend_105 { pt3dadd( -50.8005, -103.543, 12.2037, 0.36 ) }
    dend_105 { pt3dadd( -51.6118, -104.239, 12.4219, 0.07 ) }
    dend_105 { pt3dadd( -51.9971, -104.688, 12.5482, 0.22 ) }
    dend_105 { pt3dadd( -52.4366, -105.428, 12.6047, 0.07 ) }
    dend_105 { pt3dadd( -52.7794, -106.187, 12.6689, 0.29 ) }
    dend_105 { pt3dadd( -59.8521, -112.5, 15.8499, 0.29 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 10/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 3.11649, -63.6277, 0.912037, 0.66 ) }
    dend_84 { pt3dadd( 3.02873, -65.263, 0.855621, 0.66 ) }
    dend_84 { pt3dadd( 3.02899, -66.7328, 0.852895, 0.66 ) }
    dend_84 { pt3dadd( 3.08585, -67.7369, 0.867239, 0.66 ) }
    dend_84 { pt3dadd( 3.26093, -69.4752, 0.906496, 1.02 ) }
    dend_84 { pt3dadd( 3.54785, -71.5034, 0.961398, 0.73 ) }
    dend_84 { pt3dadd( 3.76909, -72.7529, 0.977368, 0.73 ) }
    dend_84 { pt3dadd( 3.98237, -73.7692, 1.02188, 0.73 ) }
    dend_84 { pt3dadd( 4.24508, -74.7966, 1.08434, 0.88 ) }
    dend_84 { pt3dadd( 4.40131, -75.3577, 1.09968, 1.02 ) }
    dend_84 { pt3dadd( 4.71794, -76.5729, 1.0835, 0.73 ) }
    dend_84 { pt3dadd( 4.98071, -77.7736, 1.01583, 0.73 ) }
    dend_84 { pt3dadd( 5.13643, -78.6758, 0.968643, 0.73 ) }
    dend_84 { pt3dadd( 5.26549, -79.4967, 0.932077, 0.95 ) }
    dend_84 { pt3dadd( 5.54755, -81.0389, 0.878826, 1.02 ) }
    dend_84 { pt3dadd( 5.84002, -82.7369, 0.831451, 0.73 ) }
    dend_84 { pt3dadd( 5.99691, -83.6597, 0.817272, 0.73 ) }
    dend_84 { pt3dadd( 6.21136, -84.837, 0.825805, 0.73 ) }
    dend_84 { pt3dadd( 6.51339, -86.1713, 0.835936, 0.73 ) }
    dend_84 { pt3dadd( 7.03366, -87.7899, 0.848105, 0.95 ) }
    // Section: dend_78, id: dend_78, parent: dend_74 (entry count 30/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -28.7692, -18.2883, 16.5089, 0.44 ) }
    dend_78 { pt3dadd( -28.8159, -17.9956, 16.9134, 0.44 ) }
    dend_78 { pt3dadd( -28.953, -17.4118, 17.6608, 0.44 ) }
    dend_78 { pt3dadd( -29.1807, -16.7598, 18.5309, 0.15 ) }
    dend_78 { pt3dadd( -29.2676, -16.553, 18.8333, 0.15 ) }
    dend_78 { pt3dadd( -29.3953, -16.1924, 19.337, 0.44 ) }
    dend_78 { pt3dadd( -29.4771, -15.9021, 19.7056, 0.07 ) }
    dend_78 { pt3dadd( -29.5233, -15.6637, 19.9107, 0.07 ) }
    dend_78 { pt3dadd( -29.4392, -16.1955, 19.7486, 0.07 ) }
    dend_78 { pt3dadd( -29.3138, -16.8682, 19.7607, 0.36 ) }
    dend_78 { pt3dadd( -28.9863, -18.5145, 20.2091, 0.15 ) }
    dend_78 { pt3dadd( -28.8388, -19.1938, 20.5416, 0.15 ) }
    dend_78 { pt3dadd( -28.6424, -20.1686, 21.2785, 0.15 ) }
    dend_78 { pt3dadd( -28.52, -20.8415, 21.9812, 0.36 ) }
    dend_78 { pt3dadd( -28.4525, -21.3533, 22.7042, 0.51 ) }
    dend_78 { pt3dadd( -28.4626, -21.858, 23.7515, 0.22 ) }
    dend_78 { pt3dadd( -28.548, -22.0872, 24.5803, 0.22 ) }
    dend_78 { pt3dadd( -28.7754, -22.154, 25.4743, 0.07 ) }
    dend_78 { pt3dadd( -28.9046, -22.1066, 25.7455, 0.58 ) }
    dend_78 { pt3dadd( -29.2839, -21.8293, 26.4223, 0.51 ) }
    dend_78 { pt3dadd( -29.6351, -21.517, 26.9473, 0.07 ) }
    dend_78 { pt3dadd( -30.2026, -20.9396, 27.6606, 0.07 ) }
    dend_78 { pt3dadd( -30.635, -20.4646, 28.1744, 0.07 ) }
    dend_78 { pt3dadd( -30.8358, -20.1971, 28.4537, 0.29 ) }
    dend_78 { pt3dadd( -31.2371, -19.6301, 29.1999, 0.07 ) }
    dend_78 { pt3dadd( -32.0559, -20.0236, 39.1586, 0.07 ) }
    dend_78 { pt3dadd( -32.1278, -21.5746, 49.0373, 0.07 ) }
    dend_78 { pt3dadd( -31.8952, -25.7115, 58.1385, 0.07 ) }
    dend_78 { pt3dadd( -32.5451, -28.8785, 67.6015, 0.07 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 59/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -28.7692, -18.2883, 16.5089, 0.36 ) }
    dend_75 { pt3dadd( -30.0663, -18.2505, 16.1483, 0.36 ) }
    dend_75 { pt3dadd( -30.9579, -18.2451, 15.901, 0.36 ) }
    dend_75 { pt3dadd( -31.5192, -18.2808, 15.7592, 0.36 ) }
    dend_75 { pt3dadd( -32.3812, -18.3652, 15.6036, 0.58 ) }
    dend_75 { pt3dadd( -33.3236, -18.4525, 15.489, 0.44 ) }
    dend_75 { pt3dadd( -34.1515, -18.5248, 15.4187, 0.44 ) }
    dend_75 { pt3dadd( -34.7727, -18.5823, 15.4338, 0.29 ) }
    dend_75 { pt3dadd( -35.9749, -18.7099, 15.5532, 0.58 ) }
    dend_75 { pt3dadd( -37.0006, -18.8477, 15.7027, 0.44 ) }
    dend_75 { pt3dadd( -37.7095, -18.9925, 15.8577, 0.44 ) }
    dend_75 { pt3dadd( -38.113, -19.1066, 15.9909, 0.44 ) }
    dend_75 { pt3dadd( -38.775, -19.3498, 16.3372, 0.44 ) }
    dend_75 { pt3dadd( -39.3307, -19.6281, 16.7448, 0.29 ) }
    dend_75 { pt3dadd( -39.6864, -19.9482, 17.1584, 0.29 ) }
    dend_75 { pt3dadd( -40.0372, -20.6658, 17.9174, 0.51 ) }
    dend_75 { pt3dadd( -40.2092, -21.2812, 18.5417, 0.29 ) }
    dend_75 { pt3dadd( -40.3966, -22.1056, 19.3188, 0.29 ) }
    dend_75 { pt3dadd( -40.465, -22.4135, 19.5809, 0.29 ) }
    dend_75 { pt3dadd( -40.5931, -22.9305, 19.9952, 0.58 ) }
    dend_75 { pt3dadd( -40.9123, -23.5674, 20.4837, 0.58 ) }
    dend_75 { pt3dadd( -41.8528, -24.3181, 20.8823, 0.36 ) }
    dend_75 { pt3dadd( -42.6768, -24.7244, 21.0075, 0.29 ) }
    dend_75 { pt3dadd( -43.4275, -24.9883, 21.038, 0.29 ) }
    dend_75 { pt3dadd( -44.2604, -25.1901, 21.0415, 0.29 ) }
    dend_75 { pt3dadd( -45.4571, -25.4062, 20.9805, 1.17 ) }
    dend_75 { pt3dadd( -45.9758, -25.504, 20.9174, 1.17 ) }
    dend_75 { pt3dadd( -46.4531, -25.6217, 20.8482, 1.17 ) }
    dend_75 { pt3dadd( -46.8551, -25.7703, 20.8126, 1.17 ) }
    dend_75 { pt3dadd( -47.6409, -26.1847, 20.7432, 0.29 ) }
    dend_75 { pt3dadd( -48.2321, -26.6108, 20.6773, 0.29 ) }
    dend_75 { pt3dadd( -48.8589, -27.1952, 20.5557, 0.29 ) }
    dend_75 { pt3dadd( -49.4244, -27.7966, 20.4371, 0.29 ) }
    dend_75 { pt3dadd( -49.8722, -28.3023, 20.3495, 0.66 ) }
    dend_75 { pt3dadd( -50.2816, -28.7705, 20.302, 0.66 ) }
    dend_75 { pt3dadd( -50.7532, -29.2945, 20.2812, 0.22 ) }
    dend_75 { pt3dadd( -50.9689, -29.5028, 20.2876, 0.44 ) }
    dend_75 { pt3dadd( -51.5461, -29.9767, 20.3288, 0.15 ) }
    dend_75 { pt3dadd( -52.6496, -30.8064, 20.4303, 0.07 ) }
    dend_75 { pt3dadd( -53.5307, -31.4067, 20.5326, 0.07 ) }
    dend_75 { pt3dadd( -53.9105, -31.6364, 20.5877, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_75 { pt3dadd( -54.6358, -32.0241, 20.697, 0.07 ) }
    dend_75 { pt3dadd( -55.4899, -32.4476, 20.8302, 0.22 ) }
    dend_75 { pt3dadd( -64.2653, -37.0354, 22.2251, 0.22 ) }
    dend_75 { pt3dadd( -73.2565, -41.3563, 22.922, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 4/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 42.5081, -128.791, -21.6219, 0.29 ) }
    dend_68 { pt3dadd( 43.5797, -129.352, -21.5494, 0.29 ) }
    dend_68 { pt3dadd( 44.3488, -129.829, -21.4946, 0.15 ) }
    dend_68 { pt3dadd( 45.1942, -130.429, -21.4374, 0.36 ) }
    dend_68 { pt3dadd( 46.1618, -131.162, -21.3128, 0.07 ) }
    dend_68 { pt3dadd( 46.5819, -131.483, -21.2484, 0.58 ) }
    dend_68 { pt3dadd( 47.1359, -131.887, -21.1608, 0.66 ) }
    dend_68 { pt3dadd( 47.9653, -132.489, -20.9872, 0.36 ) }
    dend_68 { pt3dadd( 48.7294, -133.026, -20.8354, 0.07 ) }
    dend_68 { pt3dadd( 49.5597, -133.596, -20.7138, 0.29 ) }
    dend_68 { pt3dadd( 50.2076, -134.036, -20.6143, 0.44 ) }
    dend_68 { pt3dadd( 50.9427, -134.513, -20.5077, 0.07 ) }
    dend_68 { pt3dadd( 51.4472, -134.792, -20.4446, 0.07 ) }
    dend_68 { pt3dadd( 51.8748, -134.997, -20.4023, 0.07 ) }
    dend_68 { pt3dadd( 52.3078, -135.177, -20.3667, 0.29 ) }
    dend_68 { pt3dadd( 52.9581, -135.445, -20.3146, 0.07 ) }
    dend_68 { pt3dadd( 53.5787, -135.729, -20.243, 0.07 ) }
    dend_68 { pt3dadd( 54.412, -136.126, -20.1325, 0.07 ) }
    dend_68 { pt3dadd( 55.1838, -136.491, -20.0185, 0.36 ) }
    dend_68 { pt3dadd( 55.9636, -136.832, -19.8921, 0.66 ) }
    dend_68 { pt3dadd( 56.8395, -137.181, -19.7359, 0.07 ) }
    dend_68 { pt3dadd( 57.8056, -137.534, -19.5424, 0.22 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 26/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 42.5081, -128.791, -21.6219, 0.44 ) }
    dend_67 { pt3dadd( 42.2861, -129.42, -21.8423, 0.44 ) }
    dend_67 { pt3dadd( 42.011, -130.345, -22.161, 0.44 ) }
    dend_67 { pt3dadd( 41.8063, -131.479, -22.5182, 0.73 ) }
    dend_67 { pt3dadd( 41.7068, -132.494, -22.8137, 0.36 ) }
    dend_67 { pt3dadd( 41.6753, -132.978, -22.9594, 0.36 ) }
    dend_67 { pt3dadd( 41.6494, -133.34, -23.067, 0.36 ) }
    dend_67 { pt3dadd( 41.5779, -134.123, -23.303, 0.22 ) }
    dend_67 { pt3dadd( 41.4747, -135.216, -23.6482, 0.51 ) }
    dend_67 { pt3dadd( 41.3825, -136.006, -23.913, 0.15 ) }
    dend_67 { pt3dadd( 41.2552, -136.664, -24.143, 0.15 ) }
    dend_67 { pt3dadd( 41.037, -137.433, -24.4096, 0.29 ) }
    dend_67 { pt3dadd( 40.6933, -138.44, -24.7461, 0.29 ) }
    dend_67 { pt3dadd( 40.4767, -139.076, -24.9273, 0.95 ) }
    dend_67 { pt3dadd( 40.2931, -139.623, -25.0605, 0.95 ) }
    dend_67 { pt3dadd( 40.0582, -140.481, -25.2216, 0.36 ) }
    dend_67 { pt3dadd( 39.9845, -140.944, -25.295, 0.36 ) }
    dend_67 { pt3dadd( 39.9353, -142.069, -25.4678, 0.44 ) }
    dend_67 { pt3dadd( 39.9989, -143.793, -25.6597, 0.29 ) }
    dend_67 { pt3dadd( 40.0454, -144.428, -25.7148, 0.66 ) }
    dend_67 { pt3dadd( 40.0985, -145.164, -25.7683, 0.88 ) }
    dend_67 { pt3dadd( 40.1746, -146.405, -25.8426, 0.36 ) }
    dend_67 { pt3dadd( 40.194, -147.294, -25.9326, 0.58 ) }
    dend_67 { pt3dadd( 40.1721, -148.149, -26.0551, 0.44 ) }
    dend_67 { pt3dadd( 40.1174, -148.997, -26.2315, 0.22 ) }
    dend_67 { pt3dadd( 40.0599, -149.951, -26.4715, 0.22 ) }
    dend_67 { pt3dadd( 40.025, -150.604, -26.6484, 0.58 ) }
    dend_67 { pt3dadd( 39.9418, -152.191, -27.0782, 0.44 ) }
    dend_67 { pt3dadd( 39.9197, -152.968, -27.304, 0.58 ) }
    dend_67 { pt3dadd( 39.921, -153.941, -27.6128, 0.58 ) }
    dend_67 { pt3dadd( 39.9714, -155.137, -28.0023, 0.36 ) }
    dend_67 { pt3dadd( 40.0435, -156.09, -28.3051, 0.29 ) }
    dend_67 { pt3dadd( 40.1183, -156.871, -28.5451, 0.29 ) }
    dend_67 { pt3dadd( 40.2447, -157.989, -28.8518, 0.22 ) }
    dend_67 { pt3dadd( 40.3338, -158.761, -29.0763, 0.44 ) }
    dend_67 { pt3dadd( 40.4166, -159.677, -29.3385, 0.73 ) }
    dend_67 { pt3dadd( 40.4491, -160.297, -29.5196, 0.51 ) }
    dend_67 { pt3dadd( 40.4861, -161.46, -29.8454, 0.22 ) }
    dend_67 { pt3dadd( 40.5041, -161.963, -29.9786, 0.22 ) }
    dend_67 { pt3dadd( 40.5477, -162.79, -30.201, 0.22 ) }
    dend_67 { pt3dadd( 40.5996, -163.687, -30.4446, 0.44 ) }
    dend_67 { pt3dadd( 40.6185, -164.204, -30.592, 0.44 ) }
    dend_67 { pt3dadd( 40.6692, -165.354, -30.9666, 0.22 ) }
    dend_67 { pt3dadd( 40.7378, -166.208, -31.2952, 0.22 ) }
    dend_67 { pt3dadd( 40.8858, -167.398, -31.8205, 0.22 ) }
    dend_67 { pt3dadd( 40.9753, -168.024, -32.126, 0.44 ) }
    dend_67 { pt3dadd( 41.1064, -168.982, -32.6406, 0.88 ) }
    dend_67 { pt3dadd( 41.212, -169.974, -33.2048, 0.22 ) }
    dend_67 { pt3dadd( 41.2634, -170.8, -33.6937, 0.22 ) }
    dend_67 { pt3dadd( 41.2806, -171.069, -33.8441, 0.22 ) }
    dend_67 { pt3dadd( 41.3459, -171.674, -34.2295, 0.22 ) }
    dend_67 { pt3dadd( 41.4379, -172.241, -34.6518, 0.07 ) }
    dend_67 { pt3dadd( 41.4933, -172.601, -34.9399, 0.07 ) }
    dend_67 { pt3dadd( 41.5349, -173.096, -35.3476, 0.36 ) }
    dend_67 { pt3dadd( 41.5573, -174.104, -36.1692, 0.66 ) }
    dend_67 { pt3dadd( 41.5562, -175.694, -37.4843, 0.36 ) }
    dend_67 { pt3dadd( 41.5334, -176.44, -38.107, 0.15 ) }
    dend_67 { pt3dadd( 41.478, -176.992, -38.5677, 0.07 ) }
    dend_67 { pt3dadd( 41.3948, -177.449, -38.946, 0.07 ) }
    dend_67 { pt3dadd( 41.2522, -177.98, -39.3736, 0.07 ) }
    dend_67 { pt3dadd( 40.9659, -178.851, -40.007, 0.8 ) }
    dend_67 { pt3dadd( 40.7045, -179.655, -40.5244, 0.8 ) }
    dend_67 { pt3dadd( 40.3295, -180.915, -41.3656, 0.22 ) }
    dend_67 { pt3dadd( 40.1017, -181.758, -41.9681, 0.07 ) }
    dend_67 { pt3dadd( 39.8245, -182.863, -42.7742, 0.15 ) }
    dend_67 { pt3dadd( 39.6674, -183.516, -43.2477, 0.15 ) }
    dend_67 { pt3dadd( 39.3804, -184.672, -44.045, 0.07 ) }
    dend_67 { pt3dadd( 39.136, -185.658, -44.6814, 0.07 ) }
    dend_67 { pt3dadd( 38.8583, -186.764, -45.3316, 0.8 ) }
    dend_67 { pt3dadd( 38.6316, -187.72, -45.8256, 0.44 ) }
    dend_67 { pt3dadd( 38.454, -188.687, -46.2843, 0.15 ) }
    dend_67 { pt3dadd( 38.3831, -189.277, -46.5671, 0.15 ) }
    dend_67 { pt3dadd( 38.3583, -189.77, -46.7825, 0.15 ) }
    dend_67 { pt3dadd( 38.3526, -190.323, -47.0012, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_67 { pt3dadd( 38.3744, -191.52, -47.4602, 0.15 ) }
    dend_67 { pt3dadd( 38.3667, -192.691, -47.9781, 0.58 ) }
    dend_67 { pt3dadd( 38.2664, -194.207, -48.7803, 0.22 ) }
    dend_67 { pt3dadd( 38.1786, -194.915, -49.1932, 0.07 ) }
    dend_67 { pt3dadd( 38.0552, -195.522, -49.5861, 0.22 ) }
    dend_67 { pt3dadd( 37.9936, -195.745, -49.7334, 0.22 ) }
    dend_67 { pt3dadd( 37.5276, -197.081, -50.6402, 0.07 ) }
    dend_67 { pt3dadd( 37.0894, -198.113, -51.299, 0.73 ) }
    dend_67 { pt3dadd( 36.8215, -198.696, -51.6464, 0.73 ) }
    dend_67 { pt3dadd( 36.3549, -199.768, -52.2365, 0.15 ) }
    dend_67 { pt3dadd( 35.9838, -200.794, -52.7172, 0.36 ) }
    dend_67 { pt3dadd( 35.6384, -201.961, -53.1793, 0.07 ) }
    dend_67 { pt3dadd( 35.4656, -202.751, -53.4138, 0.07 ) }
    dend_67 { pt3dadd( 35.3332, -203.493, -53.5807, 0.58 ) }
    dend_67 { pt3dadd( 35.1266, -204.64, -53.7826, 0.58 ) }
    dend_67 { pt3dadd( 34.9009, -205.815, -53.9628, 0.07 ) }
    dend_67 { pt3dadd( 34.668, -206.859, -54.0659, 0.07 ) }
    dend_67 { pt3dadd( 34.4029, -207.935, -54.126, 0.07 ) }
    dend_67 { pt3dadd( 33.9808, -209.449, -54.2224, 0.58 ) }
    dend_67 { pt3dadd( 33.4639, -211.05, -54.3911, 0.15 ) }
    dend_67 { pt3dadd( 32.8771, -212.646, -54.606, 0.07 ) }
    dend_67 { pt3dadd( 32.2312, -214.278, -54.8889, 0.58 ) }
    dend_67 { pt3dadd( 31.9438, -214.975, -55.0258, 0.58 ) }
    dend_67 { pt3dadd( 31.2489, -216.561, -55.3894, 0.07 ) }
    dend_67 { pt3dadd( 30.5441, -218.174, -55.7984, 0.07 ) }
    dend_67 { pt3dadd( 30.1063, -219.229, -56.0922, 0.29 ) }
    dend_67 { pt3dadd( 29.602, -220.552, -56.4415, 0.51 ) }
    dend_67 { pt3dadd( 29.3077, -221.431, -56.6803, 0.51 ) }
    dend_67 { pt3dadd( 28.9944, -222.576, -56.9333, 0.07 ) }
    dend_67 { pt3dadd( 28.8067, -223.508, -57.0808, 0.07 ) }
    dend_67 { pt3dadd( 28.6611, -224.568, -57.1933, 0.07 ) }
    dend_67 { pt3dadd( 28.568, -225.868, -57.3129, 0.29 ) }
    dend_67 { pt3dadd( 28.5597, -226.54, -57.358, 0.29 ) }
    dend_67 { pt3dadd( 28.5865, -228.122, -57.4291, 0.07 ) }
    dend_67 { pt3dadd( 28.6134, -229.015, -57.4442, 0.07 ) }
    dend_67 { pt3dadd( 28.6053, -229.58, -57.4371, 0.29 ) }
    dend_67 { pt3dadd( 28.544, -230.423, -57.4013, 0.29 ) }
    dend_67 { pt3dadd( 28.3982, -231.444, -57.3535, 0.07 ) }
    dend_67 { pt3dadd( 28.1678, -232.654, -57.3107, 0.07 ) }
    dend_67 { pt3dadd( 27.9702, -233.544, -57.2841, 0.07 ) }
    dend_67 { pt3dadd( 27.6984, -234.677, -57.3138, 0.22 ) }
    dend_67 { pt3dadd( 27.3645, -236.074, -57.4103, 0.07 ) }
    dend_67 { pt3dadd( 27.0411, -237.764, -57.5866, 0.07 ) }
    dend_67 { pt3dadd( 26.8727, -239.026, -57.7809, 0.07 ) }
    dend_67 { pt3dadd( 26.7778, -240.123, -57.9889, 0.29 ) }
    dend_67 { pt3dadd( 26.6834, -241.539, -58.2744, 0.51 ) }
    dend_67 { pt3dadd( 26.6471, -242.416, -58.4749, 0.51 ) }
    dend_67 { pt3dadd( 26.5912, -244.351, -58.9333, 0.07 ) }
    dend_67 { pt3dadd( 26.5668, -245.662, -59.2582, 0.07 ) }
    dend_67 { pt3dadd( 26.5297, -247.164, -59.6155, 0.29 ) }
    dend_67 { pt3dadd( 26.5087, -248.028, -59.848, 0.29 ) }
    dend_67 { pt3dadd( 26.4813, -249.238, -60.1742, 0.07 ) }
    dend_67 { pt3dadd( 26.4365, -250.942, -60.6864, 0.22 ) }
    dend_67 { pt3dadd( 26.4063, -252.096, -61.0469, 0.07 ) }
    dend_67 { pt3dadd( 26.3936, -253.82, -61.5605, 0.22 ) }
    dend_67 { pt3dadd( 26.4247, -255.74, -62.139, 0.07 ) }
    dend_67 { pt3dadd( 26.4499, -257.456, -62.6489, 0.29 ) }
    dend_67 { pt3dadd( 26.4471, -259.223, -63.1442, 0.22 ) }
    dend_67 { pt3dadd( 26.4213, -260.504, -63.5068, 0.07 ) }
    dend_67 { pt3dadd( 26.3634, -261.868, -63.8652, 0.22 ) }
    dend_67 { pt3dadd( 26.2576, -263.24, -64.2003, 0.07 ) }
    dend_67 { pt3dadd( 26.1408, -264.21, -64.4011, 0.36 ) }
    dend_67 { pt3dadd( 26.0009, -264.927, -64.5763, 0.36 ) }
    dend_67 { pt3dadd( 25.6608, -266.087, -64.9392, 0.07 ) }
    dend_67 { pt3dadd( 25.3994, -266.737, -65.2211, 0.07 ) }
    dend_67 { pt3dadd( 25.0135, -267.49, -65.6079, 0.36 ) }
    dend_67 { pt3dadd( 24.7688, -267.919, -65.8827, 0.36 ) }
    dend_67 { pt3dadd( 24.0361, -269.218, -66.8775, 0.07 ) }
    dend_67 { pt3dadd( 23.3655, -270.436, -67.9424, 0.07 ) }
    dend_67 { pt3dadd( 22.9591, -271.167, -68.6909, 0.29 ) }
    dend_67 { pt3dadd( 22.5077, -271.992, -69.606, 0.29 ) }
    dend_67 { pt3dadd( 21.8797, -273.209, -71.0802, 0.07 ) }
    dend_67 { pt3dadd( 21.686, -273.617, -71.5852, 0.07 ) }
    dend_67 { pt3dadd( 21.4734, -274.125, -72.2275, 0.36 ) }
    dend_67 { pt3dadd( 21.0851, -275.112, -73.4403, 0.07 ) }
    dend_67 { pt3dadd( 20.8867, -275.646, -74.0502, 0.29 ) }
    dend_67 { pt3dadd( 20.3919, -276.909, -75.4693, 0.07 ) }
    dend_67 { pt3dadd( 20.0287, -277.758, -76.3239, 0.66 ) }
    dend_67 { pt3dadd( 19.2657, -279.557, -77.886, 0.07 ) }
    dend_67 { pt3dadd( 18.9798, -280.255, -78.3761, 0.07 ) }
    dend_67 { pt3dadd( 18.6097, -281.186, -78.9025, 0.36 ) }
    dend_67 { pt3dadd( 17.8433, -283.174, -79.8506, 0.07 ) }
    dend_67 { pt3dadd( 17.4359, -284.226, -80.2694, 0.07 ) }
    dend_67 { pt3dadd( 16.6953, -286.147, -81.0294, 0.29 ) }
    dend_67 { pt3dadd( 15.8939, -288.289, -81.9163, 0.07 ) }
    dend_67 { pt3dadd( 15.3047, -289.935, -82.6672, 0.95 ) }
    dend_67 { pt3dadd( 15.07, -290.643, -83.0138, 0.95 ) }
    dend_67 { pt3dadd( 14.5898, -292.351, -83.8169, 0.22 ) }
    dend_67 { pt3dadd( 14.0486, -294.631, -84.925, 0.07 ) }
    dend_67 { pt3dadd( 13.7763, -296.142, -85.6983, 0.07 ) }
    dend_67 { pt3dadd( 13.6462, -297.272, -86.3132, 0.07 ) }
    dend_67 { pt3dadd( 13.5215, -298.947, -87.2622, 0.07 ) }
    dend_67 { pt3dadd( 13.379, -301.257, -88.5961, 0.36 ) }
    dend_67 { pt3dadd( 13.3226, -302.204, -89.1181, 0.07 ) }
    dend_67 { pt3dadd( 13.209, -303.42, -89.8044, 0.36 ) }
    dend_67 { pt3dadd( 12.9721, -304.934, -90.722, 0.07 ) }
    dend_67 { pt3dadd( 12.646, -306.325, -91.7312, 0.07 ) }
    dend_67 { pt3dadd( 12.5277, -306.683, -92.0337, 0.07 ) }
    dend_67 { pt3dadd( 12.1861, -307.525, -92.8218, 0.36 ) }
    dend_67 { pt3dadd( 11.4844, -309.115, -94.2729, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_67 { pt3dadd( 11.1323, -309.876, -94.8907, 0.66 ) }
    dend_67 { pt3dadd( 10.5134, -311.273, -95.8656, 0.07 ) }
    dend_67 { pt3dadd( 10.3119, -311.789, -96.1848, 0.07 ) }
    dend_67 { pt3dadd( 10.003, -312.717, -96.7299, 0.29 ) }
    dend_67 { pt3dadd( 9.69367, -313.91, -97.3665, 0.07 ) }
    dend_67 { pt3dadd( 9.51401, -314.776, -97.7399, 0.07 ) }
    dend_67 { pt3dadd( 9.40728, -315.381, -97.9666, 0.07 ) }
    dend_67 { pt3dadd( 9.27976, -316.186, -98.2067, 0.44 ) }
    dend_67 { pt3dadd( 9.18513, -316.865, -98.398, 0.44 ) }
    dend_67 { pt3dadd( 9.00462, -318.318, -98.8112, 0.07 ) }
    dend_67 { pt3dadd( 8.9641, -318.887, -98.9592, 0.36 ) }
    dend_67 { pt3dadd( 8.93247, -319.903, -99.2708, 0.07 ) }
    dend_67 { pt3dadd( 8.92969, -320.331, -99.4106, 0.07 ) }
    dend_67 { pt3dadd( 8.92875, -320.657, -99.5211, 0.36 ) }
    dend_67 { pt3dadd( 8.90855, -321.556, -99.8815, 0.36 ) }
    dend_67 { pt3dadd( 8.84596, -322.599, -100.35, 0.07 ) }
    dend_67 { pt3dadd( 8.75051, -323.562, -100.818, 0.07 ) }
    dend_67 { pt3dadd( 8.67982, -324.012, -101.067, 0.07 ) }
    dend_67 { pt3dadd( 8.4142, -325.249, -101.801, 0.29 ) }
    dend_67 { pt3dadd( 8.04165, -326.56, -102.599, 0.07 ) }
    dend_67 { pt3dadd( 7.78731, -327.233, -102.998, 0.29 ) }
    dend_67 { pt3dadd( 7.65518, -327.506, -103.141, 0.29 ) }
    dend_67 { pt3dadd( 6.91821, -328.801, -103.733, 0.07 ) }
    dend_67 { pt3dadd( 6.44376, -329.533, -104.057, 0.07 ) }
    dend_67 { pt3dadd( 5.96794, -330.194, -104.336, 0.07 ) }
    dend_67 { pt3dadd( 5.23069, -331.192, -104.708, 0.44 ) }
    dend_67 { pt3dadd( 4.44964, -332.237, -105.082, 0.07 ) }
    dend_67 { pt3dadd( 3.61887, -333.38, -105.478, 0.88 ) }
    dend_67 { pt3dadd( 2.88553, -334.477, -105.847, 0.51 ) }
    dend_67 { pt3dadd( 1.75829, -336.352, -106.492, 0.07 ) }
    dend_67 { pt3dadd( 1.34967, -337.131, -106.766, 0.58 ) }
    dend_67 { pt3dadd( 1.08, -337.72, -106.975, 0.73 ) }
    dend_67 { pt3dadd( 0.650784, -338.761, -107.339, 0.15 ) }
    dend_67 { pt3dadd( 0.120988, -340.158, -107.742, 0.29 ) }
    dend_67 { pt3dadd( -0.238906, -341.135, -108.028, 0.07 ) }
    dend_67 { pt3dadd( -0.593579, -342.069, -108.312, 0.07 ) }
    dend_67 { pt3dadd( -0.998676, -343.005, -108.609, 0.07 ) }
    dend_67 { pt3dadd( -1.42212, -343.855, -108.889, 0.07 ) }
    dend_67 { pt3dadd( -1.75844, -344.431, -109.07, 0.36 ) }
    dend_67 { pt3dadd( -2.66416, -345.81, -109.493, 0.15 ) }
    dend_67 { pt3dadd( -3.05738, -346.395, -109.677, 0.36 ) }
    dend_67 { pt3dadd( -3.65956, -347.279, -109.967, 0.07 ) }
    dend_67 { pt3dadd( -4.23031, -348.125, -110.245, 0.07 ) }
    dend_67 { pt3dadd( -4.98901, -349.273, -110.59, 0.07 ) }
    dend_67 { pt3dadd( -5.62749, -350.258, -110.846, 0.07 ) }
    dend_67 { pt3dadd( -6.07986, -350.991, -110.957, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 46/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -111.068, 2.92228, 16.478, 0.73 ) }
    dend_37 { pt3dadd( -111.584, 2.42545, 16.2939, 0.73 ) }
    dend_37 { pt3dadd( -112.009, 2.25333, 16.2378, 0.95 ) }
    dend_37 { pt3dadd( -112.927, 2.06174, 16.2909, 0.36 ) }
    dend_37 { pt3dadd( -113.29, 2.00751, 16.3393, 0.36 ) }
    dend_37 { pt3dadd( -114.203, 1.86652, 16.4904, 0.22 ) }
    dend_37 { pt3dadd( -115.277, 1.69168, 16.7124, 0.29 ) }
    dend_37 { pt3dadd( -116.447, 1.58626, 17.0427, 0.15 ) }
    dend_37 { pt3dadd( -117.182, 1.53917, 17.3122, 0.15 ) }
    dend_37 { pt3dadd( -117.596, 1.48652, 17.5183, 0.15 ) }
    dend_37 { pt3dadd( -117.74, 1.29155, 17.6945, 0.15 ) }
    dend_37 { pt3dadd( -117.821, 0.99102, 17.8472, 0.15 ) }
    dend_37 { pt3dadd( -117.946, 0.217432, 18.124, 0.88 ) }
    dend_37 { pt3dadd( -118.003, -0.440082, 18.3053, 0.58 ) }
    dend_37 { pt3dadd( -118.068, -1.59036, 18.5698, 0.22 ) }
    dend_37 { pt3dadd( -118.119, -2.63401, 18.7978, 0.22 ) }
    dend_37 { pt3dadd( -118.222, -3.83243, 19.0313, 0.66 ) }
    dend_37 { pt3dadd( -118.246, -3.99033, 19.0543, 0.95 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 64/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -111.068, 2.92228, 16.478, 0.15 ) }
    dend_36 { pt3dadd( -111.306, 3.17684, 16.3738, 0.15 ) }
    dend_36 { pt3dadd( -111.703, 3.62537, 16.1527, 0.15 ) }
    dend_36 { pt3dadd( -111.919, 3.8994, 16.0307, 0.15 ) }
    dend_36 { pt3dadd( -112.376, 4.53871, 15.7717, 0.66 ) }
    dend_36 { pt3dadd( -112.756, 5.14466, 15.5448, 0.51 ) }
    dend_36 { pt3dadd( -113.549, 6.54983, 15.0359, 0.22 ) }
    dend_36 { pt3dadd( -113.999, 7.50839, 14.6687, 0.44 ) }
    dend_36 { pt3dadd( -114.417, 8.61508, 14.2203, 0.22 ) }
    dend_36 { pt3dadd( -114.612, 9.2812, 13.9446, 0.73 ) }
    dend_36 { pt3dadd( -114.715, 9.94715, 13.6683, 0.07 ) }
    dend_36 { pt3dadd( -114.347, 9.98255, 13.6003, 0.07 ) }
    dend_36 { pt3dadd( -113.082, 9.92895, 13.4373, 0.22 ) }
    dend_36 { pt3dadd( -112.404, 9.83895, 13.3682, 0.07 ) }
    dend_36 { pt3dadd( -111.442, 9.63155, 13.2755, 0.22 ) }
    dend_36 { pt3dadd( -111.154, 9.54825, 13.2499, 0.15 ) }
    dend_36 { pt3dadd( -110.54, 9.3313, 13.1996, 0.29 ) }
    dend_36 { pt3dadd( -110.268, 9.23243, 13.1836, 0.07 ) }
    dend_36 { pt3dadd( -109.639, 9.01523, 13.1836, 0.29 ) }
    dend_36 { pt3dadd( -109.21, 17.7635, 8.35844, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 84/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 26.536, 136.923, 8.63473, 0.36 ) }
    dend_14 { pt3dadd( 26.0797, 137.307, 9.43096, 0.36 ) }
    dend_14 { pt3dadd( 25.6024, 137.797, 10.3553, 0.22 ) }
    dend_14 { pt3dadd( 25.37, 138.073, 10.8714, 0.22 ) }
    dend_14 { pt3dadd( 25.1468, 138.404, 11.5676, 0.22 ) }
    dend_14 { pt3dadd( 25.1265, 138.497, 11.8659, 0.22 ) }
    dend_14 { pt3dadd( 25.2028, 138.536, 12.162, 0.22 ) }
    dend_14 { pt3dadd( 25.5322, 138.481, 12.4807, 0.07 ) }
    dend_14 { pt3dadd( 26.2877, 138.342, 13.0318, 0.29 ) }
    dend_14 { pt3dadd( 27.0116, 138.214, 13.4696, 0.29 ) }
    dend_14 { pt3dadd( 27.9345, 138.027, 14.0023, 0.07 ) }
    dend_14 { pt3dadd( 28.3594, 137.916, 14.2619, 0.07 ) }
    dend_14 { pt3dadd( 28.7769, 137.773, 14.5294, 0.8 ) }
    dend_14 { pt3dadd( 29.3117, 137.531, 14.9036, 0.8 ) }
    dend_14 { pt3dadd( 30.0262, 137.127, 15.3991, 0.44 ) }
    dend_14 { pt3dadd( 30.6665, 136.733, 15.7119, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 31.0898, 136.451, 15.8505, 0.36 ) }
    dend_14 { pt3dadd( 31.6834, 136.045, 15.9774, 0.07 ) }
    dend_14 { pt3dadd( 32.4158, 135.557, 16.0601, 0.07 ) }
    dend_14 { pt3dadd( 33.1927, 135.118, 16.0571, 0.07 ) }
    dend_14 { pt3dadd( 34.2089, 134.583, 15.9801, 0.07 ) }
    dend_14 { pt3dadd( 34.7396, 134.363, 15.9006, 0.07 ) }
    dend_14 { pt3dadd( 35.431, 134.161, 15.7828, 0.29 ) }
    dend_14 { pt3dadd( 35.7389, 134.115, 15.7164, 0.51 ) }
    dend_14 { pt3dadd( 36.4314, 134.11, 15.5159, 0.29 ) }
    dend_14 { pt3dadd( 43.8315, 130.872, 21.411, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 10/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 26.536, 136.923, 8.63473, 0.29 ) }
    dend_13 { pt3dadd( 26.3876, 137.771, 8.49218, 0.29 ) }
    dend_13 { pt3dadd( 26.2638, 138.75, 8.35733, 0.29 ) }
    dend_13 { pt3dadd( 26.1796, 139.765, 8.21613, 0.07 ) }
    dend_13 { pt3dadd( 26.1433, 140.461, 8.10884, 0.07 ) }
    dend_13 { pt3dadd( 26.1294, 141.124, 7.98784, 0.07 ) }
    dend_13 { pt3dadd( 26.1369, 141.707, 7.89696, 0.29 ) }
    dend_13 { pt3dadd( 26.21, 142.372, 7.81166, 0.29 ) }
    dend_13 { pt3dadd( 26.3657, 143.367, 7.71685, 0.07 ) }
    dend_13 { pt3dadd( 26.5087, 144.078, 7.63962, 0.07 ) }
    dend_13 { pt3dadd( 26.639, 144.701, 7.56505, 0.07 ) }
    dend_13 { pt3dadd( 26.8654, 145.65, 7.44379, 0.51 ) }
    dend_13 { pt3dadd( 27.0482, 146.293, 7.36279, 0.51 ) }
    dend_13 { pt3dadd( 26.2288, 155.768, 4.27426, 0.51 ) }
    dend_13 { pt3dadd( 26.6797, 164.967, 0.3788, 0.51 ) }
    dend_13 { pt3dadd( 25.7828, 173.99, -3.83911, 0.51 ) }
    dend_13 { pt3dadd( 26.2102, 182.8, -8.55018, 0.51 ) }
    dend_13 { pt3dadd( 26.7779, 192.305, -11.6051, 0.51 ) }
    dend_13 { pt3dadd( 28.4396, 201.969, -13.5666, 0.51 ) }
    dend_13 { pt3dadd( 31.7758, 211.028, -16.1762, 0.51 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.15847, 56.1943, 21.3596, 0.29 ) }
    dend_10 { pt3dadd( 3.83845, 56.9968, 21.4491, 0.29 ) }
    dend_10 { pt3dadd( 3.3898, 58.0541, 21.6702, 0.07 ) }
    dend_10 { pt3dadd( 3.1386, 58.5396, 21.812, 0.07 ) }
    dend_10 { pt3dadd( 2.77129, 59.1609, 22.0268, 0.07 ) }
    dend_10 { pt3dadd( 2.26141, 59.994, 22.3426, 0.07 ) }
    dend_10 { pt3dadd( 1.72598, 60.9439, 22.7151, 0.07 ) }
    dend_10 { pt3dadd( 1.47131, 61.4771, 23.0385, 0.07 ) }
    dend_10 { pt3dadd( 1.22453, 62.0847, 23.5363, 0.07 ) }
    dend_10 { pt3dadd( 1.06093, 62.5141, 23.9129, 0.44 ) }
    dend_10 { pt3dadd( 0.92252, 62.8312, 24.1961, 0.58 ) }
    dend_10 { pt3dadd( 0.567983, 63.7109, 24.8296, 0.07 ) }
    dend_10 { pt3dadd( 0.67219, 64.2875, 25.1452, 0.07 ) }
    dend_10 { pt3dadd( 0.918924, 64.804, 25.4067, 0.29 ) }
    dend_10 { pt3dadd( 1.16097, 65.2707, 25.6199, 0.29 ) }
    dend_10 { pt3dadd( 1.27748, 65.6628, 25.7819, 0.29 ) }
    dend_10 { pt3dadd( -0.264289, 74.9381, 29.1866, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 47/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.15847, 56.1943, 21.3596, 0.51 ) }
    dend_9 { pt3dadd( 4.23242, 57.348, 21.2133, 0.51 ) }
    dend_9 { pt3dadd( 4.2605, 57.6362, 21.1948, 0.51 ) }
    dend_9 { pt3dadd( 4.30601, 58.1068, 21.2327, 0.51 ) }
    dend_9 { pt3dadd( 4.3901, 59.0546, 21.3775, 0.22 ) }
    dend_9 { pt3dadd( 4.43751, 59.6099, 21.477, 0.22 ) }
    dend_9 { pt3dadd( 4.50395, 60.2312, 21.6042, 0.22 ) }
    dend_9 { pt3dadd( 4.63449, 61.1676, 21.862, 0.07 ) }
    dend_9 { pt3dadd( 4.80108, 62.2848, 22.1743, 0.29 ) }
    dend_9 { pt3dadd( 4.91784, 63.0657, 22.417, 0.07 ) }
    dend_9 { pt3dadd( 4.99363, 63.7019, 22.6252, 0.36 ) }
    dend_9 { pt3dadd( 5.0408, 64.4554, 22.8614, 0.8 ) }
    dend_9 { pt3dadd( 5.0399, 65.0574, 23.046, 0.8 ) }
    dend_9 { pt3dadd( 4.98304, 65.7729, 23.2804, 0.22 ) }
    dend_9 { pt3dadd( 4.8591, 66.6532, 23.5738, 0.58 ) }
    dend_9 { pt3dadd( 4.74129, 67.2664, 23.8062, 0.58 ) }
    dend_9 { pt3dadd( 4.58114, 68.0142, 24.1221, 0.29 ) }
    dend_9 { pt3dadd( 4.39827, 68.842, 24.4879, 0.22 ) }
    dend_9 { pt3dadd( 4.23456, 69.8755, 24.9629, 0.44 ) }
    dend_9 { pt3dadd( 4.20224, 70.5751, 25.285, 0.22 ) }
    dend_9 { pt3dadd( 4.22913, 70.8652, 25.4077, 0.22 ) }
    dend_9 { pt3dadd( 4.39354, 71.529, 25.6567, 0.22 ) }
    dend_9 { pt3dadd( 4.56183, 71.9727, 25.7859, 0.22 ) }
    dend_9 { pt3dadd( 4.95836, 72.7921, 25.9044, 0.66 ) }
    dend_9 { pt3dadd( 5.21728, 73.2573, 25.9145, 0.73 ) }
    dend_9 { pt3dadd( 5.44701, 73.6609, 25.8935, 0.73 ) }
    dend_9 { pt3dadd( 5.98491, 74.6309, 25.8111, 0.15 ) }
    dend_9 { pt3dadd( 6.29854, 75.2366, 25.7308, 0.15 ) }
    dend_9 { pt3dadd( 6.58805, 75.8564, 25.637, 0.15 ) }
    dend_9 { pt3dadd( 6.73184, 76.2421, 25.5696, 0.15 ) }
    dend_9 { pt3dadd( 6.94067, 76.8533, 25.4466, 0.29 ) }
    dend_9 { pt3dadd( 9.43752, 86.3997, 27.0686, 0.29 ) }
    dend_9 { pt3dadd( 10.8587, 96.1964, 28.4856, 0.29 ) }
    dend_9 { pt3dadd( 13.6223, 105.791, 29.0333, 0.29 ) }
    dend_9 { pt3dadd( 16.7637, 115.237, 28.0857, 0.29 ) }
    dend_9 { pt3dadd( 19.5322, 124.846, 28.1427, 0.29 ) }
    dend_9 { pt3dadd( 21.2437, 134.699, 28.2026, 0.29 ) }
    dend_9 { pt3dadd( 21.5273, 144.674, 27.5674, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 85/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 19.762, 55.6343, 14.6223, 0.73 ) }
    dend_7 { pt3dadd( 27.6779, 50.2119, 11.805, 0.73 ) }
    dend_7 { pt3dadd( 34.5177, 44.0197, 7.94839, 0.73 ) }
    dend_7 { pt3dadd( 41.0799, 36.9962, 5.19038, 0.73 ) }
    dend_7 { pt3dadd( 48.3499, 31.2512, 1.42969, 0.73 ) }
    dend_7 { pt3dadd( 55.0512, 24.9529, -2.49747, 0.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 91/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.762, 55.6343, 14.6223, 0.15 ) }
    dend_4 { pt3dadd( 24.8025, 64.0592, 16.5232, 0.73 ) }
    dend_4 { pt3dadd( 28.3752, 73.2928, 17.9288, 0.73 ) }
    // Section: dend_88, id: dend_88, parent: dend_84 (entry count 94/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 7.03366, -87.7899, 0.848105, 0.29 ) }
    dend_88 { pt3dadd( 6.19687, -89.0438, 0.264601, 0.29 ) }
    dend_88 { pt3dadd( 5.88225, -89.5269, 0.0631967, 0.29 ) }
    dend_88 { pt3dadd( 5.58807, -90.0262, -0.107902, 0.66 ) }
    dend_88 { pt3dadd( 5.15305, -90.878, -0.373475, 0.51 ) }
    dend_88 { pt3dadd( 4.64696, -92.0069, -0.779585, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_88 { pt3dadd( 4.36744, -92.7367, -1.09661, 0.66 ) }
    dend_88 { pt3dadd( 4.09284, -93.5502, -1.44216, 0.66 ) }
    dend_88 { pt3dadd( 3.7881, -94.6965, -1.98087, 0.29 ) }
    dend_88 { pt3dadd( 3.58701, -95.6503, -2.455, 0.29 ) }
    dend_88 { pt3dadd( 3.38585, -96.7807, -3.03836, 0.73 ) }
    dend_88 { pt3dadd( 3.21385, -98.0861, -3.76028, 0.44 ) }
    dend_88 { pt3dadd( 3.13535, -98.8074, -4.18255, 0.88 ) }
    dend_88 { pt3dadd( 3.02884, -99.8006, -4.79287, 1.02 ) }
    dend_88 { pt3dadd( 2.93788, -100.546, -5.28705, 0.44 ) }
    dend_88 { pt3dadd( 2.78255, -101.381, -5.7978, 0.73 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 10/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 7.03366, -87.7899, 0.848105, 0.36 ) }
    dend_85 { pt3dadd( 7.30885, -88.8667, 0.983541, 0.36 ) }
    dend_85 { pt3dadd( 7.40762, -89.7374, 1.0476, 0.29 ) }
    dend_85 { pt3dadd( 7.39529, -90.399, 1.15697, 0.15 ) }
    dend_85 { pt3dadd( 7.3754, -90.8313, 1.23718, 0.15 ) }
    dend_85 { pt3dadd( 7.35406, -91.5833, 1.37784, 0.15 ) }
    dend_85 { pt3dadd( 7.38995, -92.3675, 1.51823, 0.73 ) }
    dend_85 { pt3dadd( 7.44639, -92.982, 1.59618, 0.73 ) }
    dend_85 { pt3dadd( 7.74577, -94.7029, 1.74161, 0.29 ) }
    dend_85 { pt3dadd( 8.09659, -95.8599, 1.79137, 0.58 ) }
    dend_85 { pt3dadd( 8.37016, -96.4365, 1.79052, 0.66 ) }
    dend_85 { pt3dadd( 9.1232, -97.5726, 1.73916, 0.15 ) }
    dend_85 { pt3dadd( 9.95037, -98.5628, 1.69832, 0.36 ) }
    dend_85 { pt3dadd( 10.4113, -99.0396, 1.71547, 0.36 ) }
    dend_85 { pt3dadd( 10.9247, -99.5285, 1.779, 0.51 ) }
    dend_85 { pt3dadd( 11.5055, -100.13, 1.96936, 0.15 ) }
    dend_85 { pt3dadd( 11.8096, -100.523, 2.15286, 0.44 ) }
    dend_85 { pt3dadd( 12.2745, -101.313, 2.61841, 0.58 ) }
    dend_85 { pt3dadd( 12.7793, -102.318, 3.27375, 0.29 ) }
    dend_85 { pt3dadd( 13.2696, -103.334, 3.95501, 0.15 ) }
    dend_85 { pt3dadd( 13.5553, -103.911, 4.32712, 0.15 ) }
    dend_85 { pt3dadd( 13.8191, -104.389, 4.61159, 0.15 ) }
    dend_85 { pt3dadd( 14.0789, -104.801, 4.81381, 0.15 ) }
    dend_85 { pt3dadd( 14.4823, -105.368, 5.01675, 0.44 ) }
    dend_85 { pt3dadd( 15.1124, -106.174, 5.22771, 0.73 ) }
    dend_85 { pt3dadd( 15.6949, -106.907, 5.40018, 0.36 ) }
    dend_85 { pt3dadd( 16.086, -107.466, 5.53968, 0.36 ) }
    dend_85 { pt3dadd( 16.4338, -108.087, 5.70183, 0.66 ) }
    dend_85 { pt3dadd( 16.7732, -108.859, 5.92976, 0.51 ) }
    dend_85 { pt3dadd( 16.9856, -109.459, 6.11646, 0.51 ) }
    dend_85 { pt3dadd( 17.2123, -110.195, 6.34708, 0.51 ) }
    dend_85 { pt3dadd( 17.5145, -111.097, 6.65053, 0.29 ) }
    dend_85 { pt3dadd( 17.8925, -111.956, 6.95146, 0.07 ) }
    dend_85 { pt3dadd( 18.3267, -112.598, 7.1863, 0.36 ) }
    dend_85 { pt3dadd( 18.6212, -112.916, 7.29647, 0.66 ) }
    dend_85 { pt3dadd( 18.9957, -113.253, 7.40215, 0.66 ) }
    dend_85 { pt3dadd( 19.8114, -113.928, 7.63176, 0.29 ) }
    dend_85 { pt3dadd( 20.6186, -114.577, 7.85347, 0.51 ) }
    dend_85 { pt3dadd( 21.8018, -115.572, 8.14514, 0.15 ) }
    dend_85 { pt3dadd( 22.4471, -116.169, 8.29245, 0.15 ) }
    dend_85 { pt3dadd( 22.9427, -116.691, 8.41613, 0.66 ) }
    dend_85 { pt3dadd( 23.8349, -117.794, 8.6671, 0.22 ) }
    dend_85 { pt3dadd( 24.2609, -118.454, 8.82749, 0.44 ) }
    dend_85 { pt3dadd( 24.6615, -119.327, 9.06733, 0.58 ) }
    dend_85 { pt3dadd( 24.8174, -120.041, 9.27644, 0.29 ) }
    dend_85 { pt3dadd( 24.8212, -120.615, 9.46324, 0.29 ) }
    dend_85 { pt3dadd( 24.7259, -121.205, 9.66135, 0.36 ) }
    dend_85 { pt3dadd( 24.4779, -122.051, 9.94252, 0.22 ) }
    dend_85 { pt3dadd( 24.1777, -122.877, 10.295, 0.22 ) }
    dend_85 { pt3dadd( 23.9402, -123.503, 10.6005, 0.29 ) }
    dend_85 { pt3dadd( 23.7929, -124.044, 10.8614, 0.15 ) }
    dend_85 { pt3dadd( 23.7338, -124.698, 11.1424, 0.36 ) }
    dend_85 { pt3dadd( 23.7675, -125.027, 11.2556, 0.51 ) }
    dend_85 { pt3dadd( 24.0166, -126.004, 11.5037, 0.36 ) }
    dend_85 { pt3dadd( 24.2902, -126.711, 11.6455, 0.51 ) }
    dend_85 { pt3dadd( 24.8182, -127.745, 11.8087, 0.22 ) }
    dend_85 { pt3dadd( 25.3559, -128.597, 11.877, 0.22 ) }
    dend_85 { pt3dadd( 25.8676, -129.286, 11.8509, 0.22 ) }
    dend_85 { pt3dadd( 26.3135, -129.819, 11.8184, 0.73 ) }
    dend_85 { pt3dadd( 26.7, -130.25, 11.7797, 0.51 ) }
    dend_85 { pt3dadd( 27.3087, -130.929, 11.7535, 0.29 ) }
    dend_85 { pt3dadd( 27.9023, -131.654, 11.7712, 0.29 ) }
    dend_85 { pt3dadd( 28.4863, -132.442, 11.8499, 0.29 ) }
    dend_85 { pt3dadd( 29.3447, -133.679, 12.0121, 0.8 ) }
    dend_85 { pt3dadd( 29.8066, -134.358, 12.0799, 0.44 ) }
    dend_85 { pt3dadd( 30.3313, -135.139, 12.179, 0.44 ) }
    dend_85 { pt3dadd( 30.8126, -135.826, 12.3108, 0.22 ) }
    dend_85 { pt3dadd( 31.1665, -136.28, 12.4218, 0.22 ) }
    dend_85 { pt3dadd( 31.7913, -137.017, 12.6035, 0.36 ) }
    dend_85 { pt3dadd( 32.7339, -138.046, 12.7944, 0.29 ) }
    dend_85 { pt3dadd( 33.4078, -138.722, 12.9205, 0.36 ) }
    dend_85 { pt3dadd( 34.0962, -139.408, 13.0221, 0.58 ) }
    dend_85 { pt3dadd( 34.9442, -140.304, 13.1653, 0.73 ) }
    dend_85 { pt3dadd( 35.5367, -141.024, 13.279, 0.29 ) }
    dend_85 { pt3dadd( 35.9902, -141.661, 13.3768, 0.29 ) }
    dend_85 { pt3dadd( 36.6163, -142.69, 13.495, 0.44 ) }
    dend_85 { pt3dadd( 36.9942, -143.419, 13.5358, 0.36 ) }
    dend_85 { pt3dadd( 37.3574, -144.342, 13.5853, 0.15 ) }
    dend_85 { pt3dadd( 37.6503, -145.431, 13.6746, 0.15 ) }
    dend_85 { pt3dadd( 37.7893, -146.208, 13.7712, 0.15 ) }
    dend_85 { pt3dadd( 37.8765, -147.026, 13.9028, 0.58 ) }
    dend_85 { pt3dadd( 37.9089, -147.704, 14.0526, 0.58 ) }
    dend_85 { pt3dadd( 37.9505, -148.953, 14.4207, 0.07 ) }
    dend_85 { pt3dadd( 37.951, -149.481, 14.6059, 0.07 ) }
    dend_85 { pt3dadd( 37.9137, -150.202, 14.9021, 0.07 ) }
    dend_85 { pt3dadd( 37.8705, -150.591, 15.0803, 0.66 ) }
    dend_85 { pt3dadd( 37.7454, -151.477, 15.5024, 0.36 ) }
    dend_85 { pt3dadd( 37.6406, -152.323, 15.9171, 0.15 ) }
    dend_85 { pt3dadd( 37.6308, -153.144, 16.3105, 0.15 ) }
    dend_85 { pt3dadd( 37.6764, -153.683, 16.5393, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_85 { pt3dadd( 37.8362, -154.49, 16.786, 0.15 ) }
    dend_85 { pt3dadd( 37.9811, -154.913, 16.8375, 0.15 ) }
    dend_85 { pt3dadd( 38.3171, -155.594, 16.7817, 0.15 ) }
    dend_85 { pt3dadd( 38.9394, -156.655, 16.5404, 0.36 ) }
    dend_85 { pt3dadd( 39.4887, -157.555, 16.2548, 0.22 ) }
    dend_85 { pt3dadd( 40.0277, -158.513, 15.884, 0.22 ) }
    dend_85 { pt3dadd( 40.4063, -159.37, 15.4976, 0.36 ) }
    dend_85 { pt3dadd( 40.5857, -160.184, 15.0681, 0.15 ) }
    dend_85 { pt3dadd( 40.5678, -160.814, 14.698, 0.36 ) }
    dend_85 { pt3dadd( 40.4622, -161.326, 14.3755, 0.15 ) }
    dend_85 { pt3dadd( 40.2113, -162.129, 13.8387, 0.15 ) }
    dend_85 { pt3dadd( 39.898, -162.989, 13.2322, 0.51 ) }
    dend_85 { pt3dadd( 39.5213, -164.074, 12.4757, 0.22 ) }
    dend_85 { pt3dadd( 39.3076, -164.895, 11.9376, 0.36 ) }
    dend_85 { pt3dadd( 39.2356, -165.615, 11.4964, 0.07 ) }
    dend_85 { pt3dadd( 39.2822, -166.12, 11.2205, 0.07 ) }
    dend_85 { pt3dadd( 39.4883, -166.8, 10.8944, 0.07 ) }
    dend_85 { pt3dadd( 39.9686, -167.738, 10.5456, 0.29 ) }
    dend_85 { pt3dadd( 40.4623, -168.443, 10.4166, 0.07 ) }
    dend_85 { pt3dadd( 41.1201, -169.234, 10.3751, 0.07 ) }
    dend_85 { pt3dadd( 41.6617, -169.855, 10.4081, 0.22 ) }
    dend_85 { pt3dadd( 42.1023, -170.343, 10.4666, 0.58 ) }
    dend_85 { pt3dadd( 42.8213, -171.144, 10.5548, 0.29 ) }
    dend_85 { pt3dadd( 43.5696, -172.072, 10.6317, 0.22 ) }
    dend_85 { pt3dadd( 43.8135, -172.486, 10.6511, 0.22 ) }
    dend_85 { pt3dadd( 43.9319, -172.91, 10.6498, 0.22 ) }
    dend_85 { pt3dadd( 43.9503, -173.506, 10.5879, 0.22 ) }
    dend_85 { pt3dadd( 43.7895, -174.585, 10.4082, 0.73 ) }
    dend_85 { pt3dadd( 43.5573, -175.403, 10.2259, 0.73 ) }
    dend_85 { pt3dadd( 43.3747, -175.873, 10.1179, 0.36 ) }
    dend_85 { pt3dadd( 43.0904, -176.542, 9.99997, 0.29 ) }
    dend_85 { pt3dadd( 42.7467, -177.355, 9.90745, 0.22 ) }
    dend_85 { pt3dadd( 42.4283, -178.164, 9.87131, 0.22 ) }
    dend_85 { pt3dadd( 42.3357, -178.458, 9.8793, 0.66 ) }
    dend_85 { pt3dadd( 42.1306, -179.412, 9.84637, 0.51 ) }
    dend_85 { pt3dadd( 42.0325, -180.256, 9.77639, 0.22 ) }
    dend_85 { pt3dadd( 42.0145, -181.06, 9.65268, 0.29 ) }
    dend_85 { pt3dadd( 42.0433, -181.928, 9.44537, 0.15 ) }
    dend_85 { pt3dadd( 42.0866, -182.714, 9.17759, 0.15 ) }
    dend_85 { pt3dadd( 42.1786, -184.249, 8.54156, 0.15 ) }
    dend_85 { pt3dadd( 42.2042, -184.787, 8.28778, 0.66 ) }
    dend_85 { pt3dadd( 42.2098, -185.718, 7.80457, 0.66 ) }
    dend_85 { pt3dadd( 42.193, -186.775, 7.22253, 0.22 ) }
    dend_85 { pt3dadd( 42.1289, -187.834, 6.62099, 0.22 ) }
    dend_85 { pt3dadd( 42.0787, -188.182, 6.43196, 0.8 ) }
    dend_85 { pt3dadd( 41.8777, -189.01, 6.07037, 0.8 ) }
    dend_85 { pt3dadd( 41.6764, -189.65, 5.78673, 0.8 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 47/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -32.5451, -28.8785, 67.6015, 0.22 ) }
    dend_80 { pt3dadd( -33.9214, -29.483, 77.4879, 0.22 ) }
    dend_80 { pt3dadd( -34.9378, -29.184, 87.4316, 0.22 ) }
    dend_80 { pt3dadd( -34.3484, -28.7533, 97.4049, 0.22 ) }
    dend_80 { pt3dadd( -33.6495, -26.8393, 107.195, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 52/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -32.5451, -28.8785, 67.6015, 0.51 ) }
    dend_79 { pt3dadd( -32.9327, -31.5942, 77.2178, 0.22 ) }
    dend_79 { pt3dadd( -32.7402, -34.5496, 86.7692, 0.22 ) }
    dend_79 { pt3dadd( -33.781, -37.1463, 96.37, 0.22 ) }
    dend_79 { pt3dadd( -33.202, -40.9939, 105.582, 0.22 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 57/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -73.2565, -41.3563, 22.922, 0.73 ) }
    dend_77 { pt3dadd( -82.2048, -43.7761, 19.1706, 0.73 ) }
    dend_77 { pt3dadd( -90.6674, -45.3433, 14.0785, 0.73 ) }
    dend_77 { pt3dadd( -98.9845, -46.6895, 8.69212, 0.73 ) }
    dend_77 { pt3dadd( -106.982, -48.3787, 2.93127, 0.73 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 62/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -73.2565, -41.3563, 22.922, 0.15 ) }
    dend_76 { pt3dadd( -79.0809, -46.7033, 29.0446, 0.73 ) }
    dend_76 { pt3dadd( -84.9556, -50.5625, 36.1577, 0.73 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -118.246, -3.99033, 19.0543, 0.29 ) }
    dend_39 { pt3dadd( -118.439, -4.57566, 19.519, 0.29 ) }
    dend_39 { pt3dadd( -118.566, -4.91047, 19.8566, 0.29 ) }
    dend_39 { pt3dadd( -118.733, -5.40692, 20.4009, 0.22 ) }
    dend_39 { pt3dadd( -118.952, -6.23528, 21.3764, 0.22 ) }
    dend_39 { pt3dadd( -119.04, -6.60794, 21.826, 0.36 ) }
    dend_39 { pt3dadd( -119.081, -6.83167, 22.0698, 0.36 ) }
    dend_39 { pt3dadd( -119.179, -7.25514, 22.575, 0.36 ) }
    dend_39 { pt3dadd( -119.248, -7.51323, 22.8956, 0.36 ) }
    dend_39 { pt3dadd( -119.383, -7.93668, 23.4377, 0.22 ) }
    dend_39 { pt3dadd( -119.478, -8.18642, 23.7713, 0.22 ) }
    dend_39 { pt3dadd( -119.72, -8.68055, 24.4785, 0.44 ) }
    dend_39 { pt3dadd( -120.128, -9.20628, 25.3691, 0.44 ) }
    dend_39 { pt3dadd( -120.725, -9.4087, 26.2163, 0.22 ) }
    dend_39 { pt3dadd( -121.144, -9.21022, 26.6427, 0.07 ) }
    dend_39 { pt3dadd( -121.553, -8.79168, 26.9706, 0.29 ) }
    dend_39 { pt3dadd( -121.986, -8.15776, 27.279, 0.07 ) }
    dend_39 { pt3dadd( -122.356, -7.53706, 27.5151, 0.07 ) }
    dend_39 { pt3dadd( -122.711, -6.8289, 27.6901, 0.07 ) }
    dend_39 { pt3dadd( -123.031, -6.08153, 27.8157, 0.07 ) }
    dend_39 { pt3dadd( -123.161, -5.73971, 27.8737, 0.22 ) }
    dend_39 { pt3dadd( -123.334, -5.25047, 27.9512, 0.22 ) }
    dend_39 { pt3dadd( -128.581, -6.89389, 36.3039, 0.22 ) }
    dend_39 { pt3dadd( -134.182, -8.07501, 44.5032, 0.22 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 89/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -118.246, -3.99033, 19.0543, 0.29 ) }
    dend_38 { pt3dadd( -119.35, -4.32885, 18.8561, 0.29 ) }
    dend_38 { pt3dadd( -119.887, -4.45214, 18.7782, 0.29 ) }
    dend_38 { pt3dadd( -121.053, -4.66404, 18.5922, 0.36 ) }
    dend_38 { pt3dadd( -121.663, -4.74823, 18.4954, 0.36 ) }
    dend_38 { pt3dadd( -122.503, -4.82107, 18.3671, 0.58 ) }
    dend_38 { pt3dadd( -123.326, -4.87413, 18.2803, 0.36 ) }
    dend_38 { pt3dadd( -124.216, -4.89955, 18.2189, 0.29 ) }
    dend_38 { pt3dadd( -124.983, -4.89169, 18.2044, 0.51 ) }
    dend_38 { pt3dadd( -125.647, -4.85379, 18.2494, 0.22 ) }
    dend_38 { pt3dadd( -126.278, -4.78514, 18.3201, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_38 { pt3dadd( -127.288, -4.62157, 18.4749, 0.22 ) }
    dend_38 { pt3dadd( -127.917, -4.51203, 18.6208, 0.15 ) }
    dend_38 { pt3dadd( -128.389, -4.4394, 18.7796, 0.15 ) }
    dend_38 { pt3dadd( -128.738, -4.40564, 18.9262, 0.15 ) }
    dend_38 { pt3dadd( -129.71, -4.39294, 19.3616, 0.44 ) }
    dend_38 { pt3dadd( -130.145, -4.41912, 19.5541, 0.07 ) }
    dend_38 { pt3dadd( -130.874, -4.46759, 19.8396, 0.22 ) }
    dend_38 { pt3dadd( -131.849, -4.50995, 20.2072, 0.07 ) }
    dend_38 { pt3dadd( -132.492, -4.492, 20.3929, 0.07 ) }
    dend_38 { pt3dadd( -133.125, -4.37328, 20.4711, 0.07 ) }
    dend_38 { pt3dadd( -133.586, -4.15937, 20.4249, 0.07 ) }
    dend_38 { pt3dadd( -134.345, -3.56571, 20.227, 0.66 ) }
    dend_38 { pt3dadd( -134.818, -3.09766, 20.0594, 0.22 ) }
    dend_38 { pt3dadd( -135.649, -2.14032, 19.7306, 0.07 ) }
    dend_38 { pt3dadd( -136.431, -1.17551, 19.434, 0.07 ) }
    dend_38 { pt3dadd( -137.007, -0.401877, 19.2005, 0.07 ) }
    dend_38 { pt3dadd( -137.558, 0.380149, 18.9659, 0.8 ) }
    dend_38 { pt3dadd( -137.957, 0.96052, 18.7939, 0.66 ) }
    dend_38 { pt3dadd( -138.264, 1.37036, 18.6849, 0.36 ) }
    dend_38 { pt3dadd( -138.866, 2.10367, 18.5878, 0.07 ) }
    dend_38 { pt3dadd( -147.656, 6.86322, 18.8855, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 21/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 28.3752, 73.2928, 17.9288, 0.73 ) }
    dend_6 { pt3dadd( 32.5856, 82.2279, 19.4905, 0.73 ) }
    dend_6 { pt3dadd( 37.0688, 90.9451, 21.4682, 0.73 ) }
    dend_6 { pt3dadd( 40.3086, 100.405, 21.5934, 0.73 ) }
    dend_6 { pt3dadd( 45.5348, 108.93, 21.6529, 0.73 ) }
    dend_6 { pt3dadd( 52.032, 116.515, 21.1416, 0.73 ) }
    dend_6 { pt3dadd( 59.5875, 123.02, 21.9167, 0.73 ) }
    dend_6 { pt3dadd( 66.5333, 129.919, 23.9558, 0.73 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 29/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 28.3752, 73.2928, 17.9288, 0.15 ) }
    dend_5 { pt3dadd( 32.7633, 82.1133, 19.645, 0.73 ) }
    dend_5 { pt3dadd( 38.3023, 90.4172, 20.249, 0.73 ) }
    dend_5 { pt3dadd( 44.521, 98.2076, 19.4506, 0.73 ) }
    dend_5 { pt3dadd( 51.3134, 105.52, 18.8218, 0.73 ) }
    dend_5 { pt3dadd( 58.3728, 112.569, 19.509, 0.73 ) }
    dend_5 { pt3dadd( 65.1364, 119.741, 21.1861, 0.73 ) }
    dend_5 { pt3dadd( 72.8039, 125.41, 24.1981, 0.73 ) }
    dend_5 { pt3dadd( 80.8047, 129.508, 28.5795, 0.73 ) }
    dend_5 { pt3dadd( 88.3392, 132.297, 34.5337, 0.73 ) }
    dend_5 { pt3dadd( 94.1272, 134.934, 42.2501, 0.73 ) }
    dend_5 { pt3dadd( 98.5354, 137.351, 50.8946, 0.73 ) }
    dend_5 { pt3dadd( 101.726, 138.396, 60.3139, 0.73 ) }
    dend_5 { pt3dadd( 105.943, 140.944, 69.0162, 0.73 ) }
    dend_5 { pt3dadd( 108.656, 141.92, 78.5915, 0.73 ) }
    dend_5 { pt3dadd( 112.624, 142.765, 87.7315, 0.73 ) }
    dend_5 { pt3dadd( 116.707, 143.686, 96.8133, 0.73 ) }
    dend_5 { pt3dadd( 119.868, 143.824, 106.3, 0.73 ) }
    // Section: dend_96, id: dend_96, parent: dend_88 (entry count 47/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 2.78255, -101.381, -5.7978, 0.22 ) }
    dend_96 { pt3dadd( 3.44956, -102.207, -5.57932, 0.22 ) }
    dend_96 { pt3dadd( 3.84813, -102.746, -5.41819, 0.22 ) }
    dend_96 { pt3dadd( 4.08457, -103.098, -5.31654, 0.22 ) }
    dend_96 { pt3dadd( 4.39366, -103.574, -5.22638, 0.22 ) }
    dend_96 { pt3dadd( 4.88553, -104.35, -5.13517, 0.73 ) }
    dend_96 { pt3dadd( 5.41114, -105.166, -5.09539, 0.73 ) }
    dend_96 { pt3dadd( 6.02948, -106.108, -5.17123, 0.29 ) }
    dend_96 { pt3dadd( 6.33192, -106.607, -5.27937, 0.44 ) }
    dend_96 { pt3dadd( 6.85653, -107.553, -5.56871, 0.44 ) }
    dend_96 { pt3dadd( 7.2706, -108.351, -5.89857, 0.15 ) }
    dend_96 { pt3dadd( 7.57134, -108.968, -6.23426, 0.15 ) }
    dend_96 { pt3dadd( 7.96977, -109.832, -6.75576, 0.15 ) }
    dend_96 { pt3dadd( 8.25235, -110.528, -7.20779, 0.8 ) }
    dend_96 { pt3dadd( 8.42365, -111.087, -7.54599, 0.66 ) }
    dend_96 { pt3dadd( 8.59536, -112.041, -8.04904, 0.73 ) }
    dend_96 { pt3dadd( 8.63738, -113.033, -8.59511, 0.15 ) }
    dend_96 { pt3dadd( 8.57407, -113.874, -9.06097, 0.8 ) }
    dend_96 { pt3dadd( 8.40438, -114.789, -9.59105, 0.8 ) }
    dend_96 { pt3dadd( 8.11933, -115.844, -10.2406, 0.22 ) }
    dend_96 { pt3dadd( 7.89747, -116.53, -10.6752, 0.22 ) }
    dend_96 { pt3dadd( 7.48206, -117.781, -11.4296, 0.22 ) }
    dend_96 { pt3dadd( 7.36789, -118.209, -11.6604, 0.22 ) }
    dend_96 { pt3dadd( 7.27177, -118.89, -11.9808, 0.22 ) }
    dend_96 { pt3dadd( 7.29035, -119.45, -12.1662, 0.22 ) }
    dend_96 { pt3dadd( 7.41657, -120.341, -12.4013, 0.73 ) }
    dend_96 { pt3dadd( 7.61574, -121.412, -12.6037, 0.73 ) }
    dend_96 { pt3dadd( 7.82791, -122.439, -12.7281, 0.36 ) }
    dend_96 { pt3dadd( 8.00668, -123.286, -12.8132, 0.29 ) }
    dend_96 { pt3dadd( 8.26844, -124.513, -12.9518, 0.07 ) }
    dend_96 { pt3dadd( 8.44277, -125.392, -13.0913, 0.51 ) }
    dend_96 { pt3dadd( 8.57529, -126.106, -13.2309, 0.51 ) }
    dend_96 { pt3dadd( 8.71127, -126.797, -13.385, 0.15 ) }
    dend_96 { pt3dadd( 8.90814, -127.545, -13.5677, 0.44 ) }
    dend_96 { pt3dadd( 9.36005, -128.695, -13.8881, 0.22 ) }
    dend_96 { pt3dadd( 9.83015, -129.531, -14.1571, 0.07 ) }
    dend_96 { pt3dadd( 10.2363, -130.117, -14.3493, 0.07 ) }
    dend_96 { pt3dadd( 10.692, -130.708, -14.5763, 0.36 ) }
    dend_96 { pt3dadd( 11.1908, -131.333, -14.8309, 0.58 ) }
    dend_96 { pt3dadd( 11.8506, -132.185, -15.175, 0.29 ) }
    dend_96 { pt3dadd( 12.2298, -132.714, -15.3809, 0.07 ) }
    dend_96 { pt3dadd( 12.666, -133.422, -15.6479, 0.36 ) }
    dend_96 { pt3dadd( 13.0932, -134.327, -15.9749, 0.73 ) }
    dend_96 { pt3dadd( 13.2842, -134.937, -16.1757, 0.36 ) }
    dend_96 { pt3dadd( 13.4333, -135.936, -16.473, 0.15 ) }
    dend_96 { pt3dadd( 13.4504, -136.934, -16.7301, 0.22 ) }
    dend_96 { pt3dadd( 13.4248, -137.581, -16.8573, 0.22 ) }
    dend_96 { pt3dadd( 13.3733, -138.238, -16.9573, 0.07 ) }
    dend_96 { pt3dadd( 13.2947, -138.914, -16.9764, 0.44 ) }
    dend_96 { pt3dadd( 13.1701, -139.644, -16.9407, 0.44 ) }
    dend_96 { pt3dadd( 12.8783, -140.988, -16.7772, 0.15 ) }
    dend_96 { pt3dadd( 12.5742, -142.177, -16.5214, 0.15 ) }
    dend_96 { pt3dadd( 12.4278, -142.735, -16.3744, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_96 { pt3dadd( 12.0698, -144.199, -15.927, 0.73 ) }
    dend_96 { pt3dadd( 11.8986, -144.974, -15.647, 0.88 ) }
    dend_96 { pt3dadd( 11.8225, -145.374, -15.4799, 0.88 ) }
    dend_96 { pt3dadd( 11.6653, -146.34, -15.0307, 0.07 ) }
    dend_96 { pt3dadd( 11.5939, -147.159, -14.659, 0.07 ) }
    dend_96 { pt3dadd( 11.6594, -147.789, -14.3659, 0.07 ) }
    dend_96 { pt3dadd( 11.8777, -148.296, -14.1275, 0.15 ) }
    dend_96 { pt3dadd( 12.2146, -148.681, -13.9004, 0.15 ) }
    dend_96 { pt3dadd( 12.7494, -149.102, -13.5972, 0.15 ) }
    dend_96 { pt3dadd( 13.1757, -149.376, -13.3319, 0.15 ) }
    dend_96 { pt3dadd( 13.798, -149.783, -12.8919, 0.15 ) }
    dend_96 { pt3dadd( 14.1064, -150.075, -12.6261, 0.15 ) }
    dend_96 { pt3dadd( 14.4706, -150.753, -12.1194, 0.15 ) }
    dend_96 { pt3dadd( 14.6041, -151.388, -11.7031, 0.15 ) }
    dend_96 { pt3dadd( 14.6511, -152.761, -10.9292, 0.15 ) }
    dend_96 { pt3dadd( 14.6166, -153.498, -10.5623, 0.73 ) }
    dend_96 { pt3dadd( 14.4779, -155.25, -9.79259, 0.15 ) }
    dend_96 { pt3dadd( 14.3702, -156.591, -9.27362, 0.15 ) }
    dend_96 { pt3dadd( 14.3149, -157.405, -9.02188, 0.15 ) }
    dend_96 { pt3dadd( 14.2904, -158.426, -8.81492, 0.44 ) }
    dend_96 { pt3dadd( 14.3183, -159.439, -8.71579, 0.44 ) }
    dend_96 { pt3dadd( 14.3971, -160.215, -8.73673, 0.44 ) }
    dend_96 { pt3dadd( 14.5953, -161.223, -8.88704, 0.29 ) }
    dend_96 { pt3dadd( 14.9514, -162.724, -9.2527, 0.22 ) }
    dend_96 { pt3dadd( 15.1679, -163.659, -9.51676, 0.66 ) }
    dend_96 { pt3dadd( 15.4221, -164.909, -9.91829, 0.88 ) }
    dend_96 { pt3dadd( 15.7213, -166.86, -10.585, 0.22 ) }
    dend_96 { pt3dadd( 15.8431, -167.968, -10.9531, 0.22 ) }
    dend_96 { pt3dadd( 15.9, -168.603, -11.1441, 0.22 ) }
    dend_96 { pt3dadd( 16.0251, -169.927, -11.4157, 0.22 ) }
    dend_96 { pt3dadd( 16.1359, -171.032, -11.4838, 0.44 ) }
    dend_96 { pt3dadd( 16.2304, -171.985, -11.4147, 0.66 ) }
    dend_96 { pt3dadd( 16.2804, -172.787, -11.2397, 0.44 ) }
    dend_96 { pt3dadd( 16.3205, -173.992, -10.911, 0.36 ) }
    dend_96 { pt3dadd( 16.3652, -175.395, -10.4455, 0.51 ) }
    dend_96 { pt3dadd( 16.4339, -176.53, -10.0036, 0.29 ) }
    dend_96 { pt3dadd( 16.521, -177.369, -9.64566, 0.22 ) }
    dend_96 { pt3dadd( 16.6768, -178.457, -9.19346, 0.22 ) }
    dend_96 { pt3dadd( 16.7647, -179.002, -8.98543, 0.22 ) }
    dend_96 { pt3dadd( 16.9038, -179.763, -8.77761, 0.22 ) }
    dend_96 { pt3dadd( 17.0594, -180.521, -8.68576, 0.15 ) }
    dend_96 { pt3dadd( 17.2954, -181.519, -8.66664, 0.73 ) }
    dend_96 { pt3dadd( 17.4871, -182.223, -8.67212, 0.8 ) }
    dend_96 { pt3dadd( 17.6229, -182.696, -8.68966, 0.8 ) }
    dend_96 { pt3dadd( 17.874, -183.748, -8.69679, 0.22 ) }
    dend_96 { pt3dadd( 17.9999, -184.48, -8.68469, 0.22 ) }
    dend_96 { pt3dadd( 18.0655, -185.45, -8.65403, 0.15 ) }
    dend_96 { pt3dadd( 18.048, -186.232, -8.62967, 0.15 ) }
    dend_96 { pt3dadd( 18.0044, -186.757, -8.62511, 0.51 ) }
    dend_96 { pt3dadd( 17.8735, -187.764, -8.63332, 0.51 ) }
    dend_96 { pt3dadd( 17.7541, -188.494, -8.64437, 0.07 ) }
    dend_96 { pt3dadd( 17.6064, -189.468, -8.73943, 0.22 ) }
    dend_96 { pt3dadd( 17.548, -190.043, -8.84397, 0.07 ) }
    dend_96 { pt3dadd( 17.5528, -190.703, -9.01098, 0.22 ) }
    dend_96 { pt3dadd( 17.6623, -191.419, -9.22098, 0.22 ) }
    dend_96 { pt3dadd( 17.8097, -191.89, -9.34913, 0.07 ) }
    dend_96 { pt3dadd( 18.1081, -192.598, -9.51976, 0.44 ) }
    dend_96 { pt3dadd( 18.4672, -193.23, -9.62405, 0.51 ) }
    dend_96 { pt3dadd( 19.0654, -194.089, -9.71225, 0.36 ) }
    dend_96 { pt3dadd( 19.4085, -194.495, -9.72526, 0.07 ) }
    dend_96 { pt3dadd( 20.0953, -195.147, -9.72202, 0.15 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 61/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 2.78255, -101.381, -5.7978, 0.29 ) }
    dend_89 { pt3dadd( 2.08282, -102.527, -6.02568, 0.29 ) }
    dend_89 { pt3dadd( 1.84176, -102.859, -6.09841, 0.29 ) }
    dend_89 { pt3dadd( 1.24709, -103.551, -6.25662, 0.29 ) }
    dend_89 { pt3dadd( 0.456389, -104.332, -6.43149, 0.29 ) }
    dend_89 { pt3dadd( -0.484316, -105.214, -6.59958, 0.29 ) }
    dend_89 { pt3dadd( -1.11797, -105.84, -6.69897, 0.51 ) }
    dend_89 { pt3dadd( -1.72355, -106.504, -6.75532, 0.15 ) }
    dend_89 { pt3dadd( -2.169, -106.991, -6.76124, 0.15 ) }
    dend_89 { pt3dadd( -2.88193, -107.754, -6.69401, 0.29 ) }
    dend_89 { pt3dadd( -3.34044, -108.228, -6.61631, 0.15 ) }
    dend_89 { pt3dadd( -3.93918, -108.881, -6.44243, 0.29 ) }
    dend_89 { pt3dadd( -4.53981, -109.576, -6.25948, 0.15 ) }
    dend_89 { pt3dadd( -4.90922, -110.003, -6.15116, 0.15 ) }
    dend_89 { pt3dadd( -5.45171, -110.595, -6.00461, 0.44 ) }
    dend_89 { pt3dadd( -6.20613, -111.345, -5.80145, 0.73 ) }
    dend_89 { pt3dadd( -6.96923, -112.026, -5.61601, 0.44 ) }
    dend_89 { pt3dadd( -7.48079, -112.468, -5.48855, 0.44 ) }
    dend_89 { pt3dadd( -8.53106, -113.432, -5.23094, 0.15 ) }
    dend_89 { pt3dadd( -8.98441, -113.902, -5.10125, 0.15 ) }
    dend_89 { pt3dadd( -9.4601, -114.476, -4.94556, 0.15 ) }
    dend_89 { pt3dadd( -9.79746, -114.993, -4.80782, 0.15 ) }
    dend_89 { pt3dadd( -10.3213, -116.007, -4.5658, 0.15 ) }
    dend_89 { pt3dadd( -10.595, -116.686, -4.45777, 0.15 ) }
    dend_89 { pt3dadd( -10.7548, -117.179, -4.41863, 0.58 ) }
    dend_89 { pt3dadd( -10.9446, -117.789, -4.41037, 0.88 ) }
    dend_89 { pt3dadd( -11.151, -118.418, -4.4617, 0.95 ) }
    dend_89 { pt3dadd( -11.5253, -119.4, -4.61598, 0.36 ) }
    dend_89 { pt3dadd( -11.913, -120.213, -4.83111, 0.15 ) }
    dend_89 { pt3dadd( -12.151, -120.657, -4.97173, 0.15 ) }
    dend_89 { pt3dadd( -12.3039, -120.939, -5.05165, 0.15 ) }
    dend_89 { pt3dadd( -12.573, -121.455, -5.16572, 0.15 ) }
    dend_89 { pt3dadd( -12.7715, -121.876, -5.2197, 0.15 ) }
    dend_89 { pt3dadd( -13.0468, -122.556, -5.2246, 0.15 ) }
    dend_89 { pt3dadd( -13.4215, -123.549, -5.14145, 0.15 ) }
    dend_89 { pt3dadd( -13.7564, -124.452, -5.03366, 0.15 ) }
    dend_89 { pt3dadd( -14.1045, -125.408, -4.87274, 0.15 ) }
    dend_89 { pt3dadd( -14.3539, -126.132, -4.70525, 0.51 ) }
    dend_89 { pt3dadd( -14.6376, -127.052, -4.48445, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_89 { pt3dadd( -14.8049, -127.648, -4.35536, 0.8 ) }
    dend_89 { pt3dadd( -15.1175, -128.756, -4.17798, 0.29 ) }
    dend_89 { pt3dadd( -15.3217, -129.463, -4.12379, 0.29 ) }
    dend_89 { pt3dadd( -15.6197, -130.39, -4.11216, 0.07 ) }
    dend_89 { pt3dadd( -15.96, -131.243, -4.19597, 0.22 ) }
    dend_89 { pt3dadd( -16.3256, -131.999, -4.37526, 0.22 ) }
    dend_89 { pt3dadd( -16.6041, -132.491, -4.53738, 0.22 ) }
    dend_89 { pt3dadd( -16.7489, -132.724, -4.63227, 0.22 ) }
    dend_89 { pt3dadd( -17.2291, -133.462, -4.94009, 0.44 ) }
    dend_89 { pt3dadd( -17.6998, -134.174, -5.21853, 0.44 ) }
    dend_89 { pt3dadd( -18.1509, -134.871, -5.43981, 0.51 ) }
    dend_89 { pt3dadd( -18.6281, -135.729, -5.64415, 0.73 ) }
    dend_89 { pt3dadd( -19.2448, -137.04, -5.8876, 0.15 ) }
    dend_89 { pt3dadd( -19.7377, -138.22, -6.09557, 0.15 ) }
    dend_89 { pt3dadd( -19.9081, -138.633, -6.18179, 0.51 ) }
    dend_89 { pt3dadd( -20.1737, -139.219, -6.31703, 0.66 ) }
    dend_89 { pt3dadd( -20.7862, -140.284, -6.60527, 0.22 ) }
    dend_89 { pt3dadd( -21.307, -140.957, -6.85808, 0.22 ) }
    dend_89 { pt3dadd( -21.9303, -141.541, -7.14342, 0.22 ) }
    dend_89 { pt3dadd( -23.1808, -142.481, -7.70209, 0.95 ) }
    dend_89 { pt3dadd( -23.66, -142.816, -7.92003, 0.73 ) }
    dend_89 { pt3dadd( -24.5892, -143.447, -8.36415, 0.07 ) }
    dend_89 { pt3dadd( -25.3189, -143.933, -8.70766, 0.44 ) }
    dend_89 { pt3dadd( -26.0143, -144.447, -9.01642, 0.44 ) }
    dend_89 { pt3dadd( -26.3698, -144.754, -9.16204, 0.44 ) }
    dend_89 { pt3dadd( -27.1422, -145.506, -9.46364, 0.29 ) }
    dend_89 { pt3dadd( -27.8597, -146.212, -9.76871, 0.44 ) }
    dend_89 { pt3dadd( -28.4739, -146.785, -10.0473, 0.44 ) }
    dend_89 { pt3dadd( -29.1975, -147.386, -10.3584, 0.22 ) }
    dend_89 { pt3dadd( -29.842, -147.853, -10.6309, 0.07 ) }
    dend_89 { pt3dadd( -30.7433, -148.435, -10.9838, 0.22 ) }
    dend_89 { pt3dadd( -31.4977, -148.915, -11.2417, 0.22 ) }
    dend_89 { pt3dadd( -32.1695, -149.392, -11.4527, 0.07 ) }
    dend_89 { pt3dadd( -32.5632, -149.743, -11.5761, 0.07 ) }
    dend_89 { pt3dadd( -33.0491, -150.334, -11.7195, 0.88 ) }
    dend_89 { pt3dadd( -33.4491, -151.089, -11.8194, 0.88 ) }
    dend_89 { pt3dadd( -33.86, -152.529, -11.9065, 0.22 ) }
    dend_89 { pt3dadd( -33.9679, -153.261, -11.9226, 0.29 ) }
    dend_89 { pt3dadd( -34.0268, -154.108, -11.9044, 0.22 ) }
    dend_89 { pt3dadd( -34.0527, -154.86, -11.873, 0.58 ) }
    dend_89 { pt3dadd( -34.0555, -155.7, -11.8221, 0.29 ) }
    dend_89 { pt3dadd( -34.0521, -156.659, -11.7342, 0.15 ) }
    dend_89 { pt3dadd( -34.0534, -157.485, -11.6195, 0.22 ) }
    dend_89 { pt3dadd( -34.1172, -158.294, -11.4746, 0.58 ) }
    dend_89 { pt3dadd( -34.2545, -158.894, -11.3808, 0.58 ) }
    dend_89 { pt3dadd( -34.4657, -159.449, -11.2711, 0.29 ) }
    dend_89 { pt3dadd( -34.834, -160.201, -11.1079, 0.22 ) }
    dend_89 { pt3dadd( -35.0644, -160.622, -11.0132, 0.22 ) }
    dend_89 { pt3dadd( -35.5338, -161.425, -10.8386, 0.07 ) }
    dend_89 { pt3dadd( -36.389, -162.826, -10.5785, 0.29 ) }
    dend_89 { pt3dadd( -37.1557, -164.005, -10.3498, 0.22 ) }
    dend_89 { pt3dadd( -37.6498, -164.664, -10.2218, 0.58 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 52/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 41.6764, -189.65, 5.78673, 0.07 ) }
    dend_87 { pt3dadd( 42.0232, -190.672, 6.16476, 0.07 ) }
    dend_87 { pt3dadd( 42.2113, -191.363, 6.34704, 0.29 ) }
    dend_87 { pt3dadd( 42.4256, -192.416, 6.53625, 0.29 ) }
    dend_87 { pt3dadd( 42.6376, -193.866, 6.72221, 0.07 ) }
    dend_87 { pt3dadd( 42.6827, -194.387, 6.76248, 0.07 ) }
    dend_87 { pt3dadd( 42.7119, -195.451, 6.80943, 0.29 ) }
    dend_87 { pt3dadd( 42.562, -196.57, 6.78389, 0.22 ) }
    dend_87 { pt3dadd( 42.3184, -197.394, 6.69229, 0.44 ) }
    dend_87 { pt3dadd( 42.0664, -197.954, 6.56845, 0.51 ) }
    dend_87 { pt3dadd( 41.7191, -198.595, 6.35962, 0.07 ) }
    dend_87 { pt3dadd( 41.4753, -199.026, 6.2183, 0.29 ) }
    dend_87 { pt3dadd( 41.1642, -199.607, 6.02197, 0.07 ) }
    dend_87 { pt3dadd( 40.9384, -200.081, 5.89252, 0.07 ) }
    dend_87 { pt3dadd( 40.6265, -200.817, 5.72334, 0.44 ) }
    dend_87 { pt3dadd( 40.4481, -201.302, 5.63532, 0.44 ) }
    dend_87 { pt3dadd( 40.3196, -201.745, 5.57929, 0.44 ) }
    dend_87 { pt3dadd( 40.1245, -202.756, 5.49099, 0.15 ) }
    dend_87 { pt3dadd( 40.0746, -203.284, 5.48399, 0.15 ) }
    dend_87 { pt3dadd( 40.0651, -203.964, 5.5498, 0.15 ) }
    dend_87 { pt3dadd( 40.1085, -204.55, 5.64595, 0.36 ) }
    dend_87 { pt3dadd( 40.1968, -205.06, 5.73409, 0.36 ) }
    dend_87 { pt3dadd( 40.4947, -206.276, 5.92218, 0.15 ) }
    dend_87 { pt3dadd( 40.7691, -207.236, 6.04421, 0.15 ) }
    dend_87 { pt3dadd( 41.0449, -208.139, 6.09999, 1.02 ) }
    dend_87 { pt3dadd( 41.3884, -209.234, 6.08809, 0.73 ) }
    dend_87 { pt3dadd( 41.6943, -210.209, 6.02718, 0.51 ) }
    dend_87 { pt3dadd( 41.9686, -211.102, 5.93395, 0.29 ) }
    dend_87 { pt3dadd( 42.2161, -211.886, 5.81736, 0.15 ) }
    dend_87 { pt3dadd( 42.5458, -212.889, 5.58619, 0.15 ) }
    dend_87 { pt3dadd( 42.765, -213.534, 5.41482, 0.29 ) }
    dend_87 { pt3dadd( 43.081, -214.381, 5.19606, 0.51 ) }
    dend_87 { pt3dadd( 43.3671, -215.064, 5.02851, 0.66 ) }
    dend_87 { pt3dadd( 43.9, -216.181, 4.80511, 0.36 ) }
    dend_87 { pt3dadd( 44.6255, -217.58, 4.59032, 0.22 ) }
    dend_87 { pt3dadd( 45.0746, -218.435, 4.49715, 0.58 ) }
    dend_87 { pt3dadd( 45.3421, -218.941, 4.44478, 0.58 ) }
    dend_87 { pt3dadd( 45.7375, -219.657, 4.31936, 0.51 ) }
    dend_87 { pt3dadd( 46.2016, -220.431, 4.13315, 0.22 ) }
    dend_87 { pt3dadd( 46.7375, -221.159, 3.88903, 0.22 ) }
    dend_87 { pt3dadd( 47.2856, -221.634, 3.62447, 0.22 ) }
    dend_87 { pt3dadd( 48.0294, -221.954, 3.17297, 0.22 ) }
    dend_87 { pt3dadd( 49.2118, -222.213, 2.39307, 0.22 ) }
    dend_87 { pt3dadd( 49.6555, -222.267, 2.1036, 0.51 ) }
    dend_87 { pt3dadd( 50.684, -222.392, 1.49045, 0.73 ) }
    dend_87 { pt3dadd( 51.557, -222.496, 1.04598, 0.29 ) }
    dend_87 { pt3dadd( 52.385, -222.613, 0.691051, 0.15 ) }
    dend_87 { pt3dadd( 52.9249, -222.7, 0.51394, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_87 { pt3dadd( 53.9096, -222.887, 0.238461, 0.29 ) }
    dend_87 { pt3dadd( 55.2429, -223.171, -0.141051, 0.29 ) }
    dend_87 { pt3dadd( 56.1163, -223.388, -0.37706, 0.29 ) }
    dend_87 { pt3dadd( 57.187, -223.674, -0.681523, 0.29 ) }
    dend_87 { pt3dadd( 58.1468, -223.935, -0.99206, 0.51 ) }
    dend_87 { pt3dadd( 59.1408, -224.208, -1.37674, 0.66 ) }
    dend_87 { pt3dadd( 59.7005, -224.359, -1.63749, 0.66 ) }
    dend_87 { pt3dadd( 60.4139, -224.574, -2.02573, 0.44 ) }
    dend_87 { pt3dadd( 61.222, -224.89, -2.49024, 0.22 ) }
    dend_87 { pt3dadd( 61.9703, -225.227, -2.92061, 0.58 ) }
    dend_87 { pt3dadd( 62.7781, -225.581, -3.36019, 0.36 ) }
    dend_87 { pt3dadd( 63.4174, -225.816, -3.63715, 0.29 ) }
    dend_87 { pt3dadd( 64.1708, -226.018, -3.8887, 0.29 ) }
    dend_87 { pt3dadd( 64.9476, -226.108, -4.05223, 0.22 ) }
    dend_87 { pt3dadd( 65.764, -226.088, -4.19856, 0.36 ) }
    dend_87 { pt3dadd( 66.8587, -225.961, -4.3683, 0.51 ) }
    dend_87 { pt3dadd( 67.8372, -225.818, -4.39968, 0.07 ) }
    dend_87 { pt3dadd( 68.3484, -225.763, -4.37684, 0.22 ) }
    dend_87 { pt3dadd( 69.1751, -225.712, -4.30626, 0.44 ) }
    dend_87 { pt3dadd( 71.2046, -225.722, -4.10546, 0.29 ) }
    dend_87 { pt3dadd( 72.5108, -225.857, -3.97105, 0.22 ) }
    dend_87 { pt3dadd( 74.5144, -226.23, -3.77887, 0.36 ) }
    dend_87 { pt3dadd( 75.6749, -226.512, -3.72105, 0.22 ) }
    dend_87 { pt3dadd( 76.3254, -226.685, -3.69368, 0.73 ) }
    dend_87 { pt3dadd( 77.0618, -226.893, -3.69306, 0.73 ) }
    dend_87 { pt3dadd( 78.2116, -227.198, -3.74208, 0.44 ) }
    dend_87 { pt3dadd( 79.3561, -227.457, -3.94254, 0.15 ) }
    dend_87 { pt3dadd( 80.5005, -227.661, -4.27487, 0.15 ) }
    dend_87 { pt3dadd( 81.4223, -227.783, -4.56867, 0.8 ) }
    dend_87 { pt3dadd( 82.7141, -227.916, -5.00064, 0.29 ) }
    dend_87 { pt3dadd( 83.8759, -227.999, -5.39114, 0.15 ) }
    dend_87 { pt3dadd( 84.5534, -228.024, -5.61203, 0.15 ) }
    dend_87 { pt3dadd( 85.2752, -228.011, -5.80148, 0.58 ) }
    dend_87 { pt3dadd( 86.0997, -227.957, -5.90288, 0.8 ) }
    dend_87 { pt3dadd( 86.6285, -227.905, -5.88946, 0.8 ) }
    dend_87 { pt3dadd( 87.727, -227.743, -5.71613, 0.44 ) }
    dend_87 { pt3dadd( 88.3741, -227.65, -5.59516, 0.22 ) }
    dend_87 { pt3dadd( 89.5044, -227.528, -5.47353, 0.07 ) }
    dend_87 { pt3dadd( 90.5528, -227.493, -5.48303, 0.15 ) }
    dend_87 { pt3dadd( 91.214, -227.523, -5.56583, 0.07 ) }
    dend_87 { pt3dadd( 92.2113, -227.638, -5.77982, 0.8 ) }
    dend_87 { pt3dadd( 93.3455, -227.816, -6.08609, 0.58 ) }
    dend_87 { pt3dadd( 94.4738, -227.993, -6.39354, 0.58 ) }
    dend_87 { pt3dadd( 95.3711, -228.116, -6.66475, 0.36 ) }
    dend_87 { pt3dadd( 96.1489, -228.183, -6.8916, 0.22 ) }
    dend_87 { pt3dadd( 96.7986, -228.204, -7.04126, 0.36 ) }
    dend_87 { pt3dadd( 98.1005, -228.182, -7.25809, 0.36 ) }
    dend_87 { pt3dadd( 99.6173, -228.119, -7.44875, 0.07 ) }
    dend_87 { pt3dadd( 100.787, -228.077, -7.57114, 0.58 ) }
    dend_87 { pt3dadd( 101.777, -228.066, -7.6809, 0.15 ) }
    dend_87 { pt3dadd( 102.897, -228.117, -7.80846, 0.07 ) }
    dend_87 { pt3dadd( 103.571, -228.197, -7.88491, 0.07 ) }
    dend_87 { pt3dadd( 104.698, -228.466, -8.00321, 0.29 ) }
    dend_87 { pt3dadd( 105.428, -228.777, -8.02782, 0.29 ) }
    dend_87 { pt3dadd( 105.823, -229.028, -8.00228, 0.07 ) }
    dend_87 { pt3dadd( 106.289, -229.433, -7.93395, 0.29 ) }
    dend_87 { pt3dadd( 106.675, -229.852, -7.84458, 0.07 ) }
    dend_87 { pt3dadd( 107.33, -230.648, -7.64018, 0.29 ) }
    dend_87 { pt3dadd( 108.088, -231.622, -7.35298, 0.07 ) }
    dend_87 { pt3dadd( 108.542, -232.19, -7.16829, 0.66 ) }
    dend_87 { pt3dadd( 108.954, -232.655, -6.99965, 0.66 ) }
    dend_87 { pt3dadd( 109.401, -233.056, -6.83428, 0.07 ) }
    dend_87 { pt3dadd( 109.678, -233.219, -6.77732, 0.07 ) }
    dend_87 { pt3dadd( 110.029, -233.335, -6.79954, 0.07 ) }
    dend_87 { pt3dadd( 110.613, -233.483, -6.92126, 0.22 ) }
    dend_87 { pt3dadd( 111.249, -233.659, -7.08724, 0.07 ) }
    dend_87 { pt3dadd( 111.987, -233.907, -7.31196, 0.58 ) }
    dend_87 { pt3dadd( 112.935, -234.311, -7.61721, 0.58 ) }
    dend_87 { pt3dadd( 114.219, -234.976, -8.03401, 0.15 ) }
    dend_87 { pt3dadd( 114.982, -235.446, -8.23238, 0.66 ) }
    dend_87 { pt3dadd( 116.166, -236.322, -8.44805, 0.07 ) }
    dend_87 { pt3dadd( 117.063, -237.092, -8.53522, 0.07 ) }
    dend_87 { pt3dadd( 117.679, -237.686, -8.52308, 0.07 ) }
    dend_87 { pt3dadd( 118.12, -238.135, -8.48897, 0.29 ) }
    dend_87 { pt3dadd( 119.202, -239.212, -8.37971, 0.15 ) }
    dend_87 { pt3dadd( 119.826, -239.816, -8.36403, 0.58 ) }
    dend_87 { pt3dadd( 120.216, -240.164, -8.38399, 0.58 ) }
    dend_87 { pt3dadd( 121.235, -240.963, -8.51613, 0.07 ) }
    dend_87 { pt3dadd( 122.563, -241.891, -8.79256, 0.07 ) }
    dend_87 { pt3dadd( 123.341, -242.402, -8.99862, 0.07 ) }
    dend_87 { pt3dadd( 124.257, -242.954, -9.28005, 0.07 ) }
    dend_87 { pt3dadd( 125.416, -243.612, -9.62026, 0.29 ) }
    dend_87 { pt3dadd( 126.164, -244.055, -9.81217, 0.07 ) }
    dend_87 { pt3dadd( 126.563, -244.316, -9.89345, 0.66 ) }
    dend_87 { pt3dadd( 127.519, -245.039, -9.99081, 0.66 ) }
    dend_87 { pt3dadd( 128.243, -245.69, -10.0375, 0.07 ) }
    dend_87 { pt3dadd( 128.482, -245.926, -10.0426, 0.07 ) }
    dend_87 { pt3dadd( 129.035, -246.534, -10.067, 0.36 ) }
    dend_87 { pt3dadd( 129.467, -247.04, -10.0938, 0.36 ) }
    dend_87 { pt3dadd( 130.006, -247.697, -10.1589, 0.15 ) }
    dend_87 { pt3dadd( 130.492, -248.329, -10.2428, 0.15 ) }
    dend_87 { pt3dadd( 131.115, -249.117, -10.3825, 0.36 ) }
    dend_87 { pt3dadd( 131.428, -249.471, -10.456, 0.07 ) }
    dend_87 { pt3dadd( 131.956, -250.036, -10.5516, 0.36 ) }
    dend_87 { pt3dadd( 132.755, -250.895, -10.6598, 0.07 ) }
    dend_87 { pt3dadd( 133.151, -251.337, -10.7107, 0.07 ) }
    dend_87 { pt3dadd( 134.042, -252.398, -10.8178, 0.29 ) }
    dend_87 { pt3dadd( 134.521, -252.982, -10.8505, 0.44 ) }
    dend_87 { pt3dadd( 135.368, -254.027, -10.8728, 0.07 ) }
    dend_87 { pt3dadd( 135.947, -254.744, -10.8891, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_87 { pt3dadd( 136.433, -255.354, -10.8978, 0.07 ) }
    dend_87 { pt3dadd( 136.898, -255.936, -10.9147, 0.66 ) }
    dend_87 { pt3dadd( 137.675, -256.932, -10.9542, 0.66 ) }
    dend_87 { pt3dadd( 138.493, -257.939, -11.0485, 0.07 ) }
    dend_87 { pt3dadd( 139.222, -258.758, -11.1718, 0.07 ) }
    dend_87 { pt3dadd( 139.827, -259.416, -11.2725, 0.36 ) }
    dend_87 { pt3dadd( 140.435, -260.06, -11.3638, 0.15 ) }
    dend_87 { pt3dadd( 140.924, -260.527, -11.4388, 0.36 ) }
    dend_87 { pt3dadd( 141.652, -261.183, -11.5815, 0.07 ) }
    dend_87 { pt3dadd( 142.309, -261.704, -11.7284, 0.29 ) }
    dend_87 { pt3dadd( 142.722, -262.015, -11.8201, 0.29 ) }
    dend_87 { pt3dadd( 143.388, -262.497, -11.9961, 0.07 ) }
    dend_87 { pt3dadd( 144.149, -263.046, -12.16, 0.29 ) }
    dend_87 { pt3dadd( 144.698, -263.455, -12.2511, 0.07 ) }
    dend_87 { pt3dadd( 145.651, -264.191, -12.3549, 0.36 ) }
    dend_87 { pt3dadd( 146.341, -264.764, -12.4079, 0.07 ) }
    dend_87 { pt3dadd( 147.184, -265.554, -12.4368, 0.22 ) }
    dend_87 { pt3dadd( 148.103, -266.533, -12.4678, 0.07 ) }
    dend_87 { pt3dadd( 148.52, -267.018, -12.4767, 0.07 ) }
    dend_87 { pt3dadd( 148.97, -267.517, -12.5074, 0.36 ) }
    dend_87 { pt3dadd( 149.445, -267.989, -12.583, 0.36 ) }
    dend_87 { pt3dadd( 150.539, -268.949, -12.92, 0.15 ) }
    dend_87 { pt3dadd( 151.235, -269.511, -13.2281, 0.15 ) }
    dend_87 { pt3dadd( 151.951, -270.028, -13.6115, 0.44 ) }
    dend_87 { pt3dadd( 153.054, -270.689, -14.1801, 0.07 ) }
    dend_87 { pt3dadd( 153.887, -271.117, -14.5558, 0.29 ) }
    dend_87 { pt3dadd( 154.495, -271.385, -14.7715, 0.07 ) }
    dend_87 { pt3dadd( 154.948, -271.56, -14.8782, 0.07 ) }
    dend_87 { pt3dadd( 156.011, -271.977, -14.9676, 0.36 ) }
    dend_87 { pt3dadd( 156.889, -272.344, -14.9074, 0.36 ) }
    dend_87 { pt3dadd( 157.78, -272.762, -14.7416, 0.07 ) }
    dend_87 { pt3dadd( 158.437, -273.079, -14.5919, 0.07 ) }
    dend_87 { pt3dadd( 159.326, -273.476, -14.3842, 0.36 ) }
    dend_87 { pt3dadd( 160.099, -273.805, -14.2191, 0.36 ) }
    dend_87 { pt3dadd( 161.507, -274.421, -13.9113, 0.07 ) }
    dend_87 { pt3dadd( 162.683, -274.945, -13.6677, 0.29 ) }
    dend_87 { pt3dadd( 163.592, -275.354, -13.5016, 0.07 ) }
    dend_87 { pt3dadd( 164.508, -275.798, -13.3479, 0.36 ) }
    dend_87 { pt3dadd( 165.538, -276.346, -13.1735, 0.36 ) }
    dend_87 { pt3dadd( 167.195, -277.329, -12.9085, 0.07 ) }
    dend_87 { pt3dadd( 167.747, -277.689, -12.8042, 0.22 ) }
    dend_87 { pt3dadd( 168.258, -278.047, -12.7192, 0.07 ) }
    dend_87 { pt3dadd( 169.061, -278.673, -12.5745, 0.36 ) }
    dend_87 { pt3dadd( 169.334, -278.918, -12.5237, 0.36 ) }
    dend_87 { pt3dadd( 169.881, -279.478, -12.4354, 0.07 ) }
    dend_87 { pt3dadd( 170.509, -280.211, -12.4286, 0.07 ) }
    dend_87 { pt3dadd( 171.7, -281.694, -12.4333, 0.07 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 47/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 41.6764, -189.65, 5.78673, 0.07 ) }
    dend_86 { pt3dadd( 41.5638, -190.263, 6.14991, 0.07 ) }
    dend_86 { pt3dadd( 41.4476, -190.84, 6.45554, 0.29 ) }
    dend_86 { pt3dadd( 41.1591, -192.283, 7.16185, 0.07 ) }
    dend_86 { pt3dadd( 40.9349, -193.446, 7.68999, 0.29 ) }
    dend_86 { pt3dadd( 40.8069, -194.061, 7.95375, 0.07 ) }
    dend_86 { pt3dadd( 40.6422, -194.774, 8.27144, 0.07 ) }
    dend_86 { pt3dadd( 40.4789, -195.379, 8.55243, 0.29 ) }
    dend_86 { pt3dadd( 40.1501, -196.294, 8.97047, 0.15 ) }
    dend_86 { pt3dadd( 39.9299, -196.728, 9.15315, 0.15 ) }
    dend_86 { pt3dadd( 39.6148, -197.15, 9.39742, 0.15 ) }
    dend_86 { pt3dadd( 39.1544, -197.615, 9.77891, 0.15 ) }
    dend_86 { pt3dadd( 38.9072, -197.821, 9.99884, 0.58 ) }
    dend_86 { pt3dadd( 38.5047, -198.151, 10.3966, 0.51 ) }
    dend_86 { pt3dadd( 38.0277, -198.552, 10.9176, 0.51 ) }
    dend_86 { pt3dadd( 37.3512, -199.117, 11.692, 0.15 ) }
    dend_86 { pt3dadd( 36.8919, -199.544, 12.2666, 0.15 ) }
    dend_86 { pt3dadd( 36.5244, -199.956, 12.7635, 0.15 ) }
    dend_86 { pt3dadd( 36.184, -200.445, 13.3414, 0.36 ) }
    dend_86 { pt3dadd( 36.0421, -200.774, 13.7134, 0.36 ) }
    dend_86 { pt3dadd( 33.714, -208.304, 19.8683, 0.36 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 68/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 20.0953, -195.147, -9.72202, 0.07 ) }
    dend_98 { pt3dadd( 20.0867, -195.76, -9.75435, 0.07 ) }
    dend_98 { pt3dadd( 20.1028, -196.88, -9.77267, 0.44 ) }
    dend_98 { pt3dadd( 20.1527, -197.816, -9.73937, 0.73 ) }
    dend_98 { pt3dadd( 20.2404, -199.059, -9.66473, 0.15 ) }
    dend_98 { pt3dadd( 20.2982, -199.876, -9.59558, 0.15 ) }
    dend_98 { pt3dadd( 20.3455, -200.683, -9.51689, 0.15 ) }
    dend_98 { pt3dadd( 20.3749, -201.215, -9.43956, 0.29 ) }
    dend_98 { pt3dadd( 20.4308, -202.264, -9.21099, 0.15 ) }
    dend_98 { pt3dadd( 20.4621, -202.69, -9.10525, 0.15 ) }
    dend_98 { pt3dadd( 20.5488, -203.25, -8.97474, 0.15 ) }
    dend_98 { pt3dadd( 20.6566, -203.788, -8.84139, 0.36 ) }
    dend_98 { pt3dadd( 20.7933, -204.275, -8.7213, 0.15 ) }
    dend_98 { pt3dadd( 20.9961, -204.793, -8.5963, 0.15 ) }
    dend_98 { pt3dadd( 21.208, -205.188, -8.51455, 0.15 ) }
    dend_98 { pt3dadd( 21.6996, -205.931, -8.37874, 0.66 ) }
    dend_98 { pt3dadd( 21.8525, -206.139, -8.3433, 0.66 ) }
    dend_98 { pt3dadd( 22.4485, -206.931, -8.21369, 0.36 ) }
    dend_98 { pt3dadd( 22.8459, -207.503, -8.13208, 0.36 ) }
    dend_98 { pt3dadd( 23.385, -208.402, -8.03332, 0.22 ) }
    dend_98 { pt3dadd( 23.6726, -209.009, -7.98379, 0.22 ) }
    dend_98 { pt3dadd( 23.8808, -209.541, -7.94153, 0.07 ) }
    dend_98 { pt3dadd( 24.1084, -210.191, -7.88799, 0.07 ) }
    dend_98 { pt3dadd( 24.3679, -210.97, -7.82369, 1.02 ) }
    dend_98 { pt3dadd( 24.6188, -211.68, -7.78231, 0.66 ) }
    dend_98 { pt3dadd( 24.9599, -212.607, -7.78859, 0.07 ) }
    dend_98 { pt3dadd( 25.1593, -213.114, -7.82494, 0.07 ) }
    dend_98 { pt3dadd( 25.3512, -213.596, -7.88858, 0.22 ) }
    dend_98 { pt3dadd( 25.6294, -214.361, -7.98034, 0.07 ) }
    dend_98 { pt3dadd( 25.8637, -215.159, -8.05968, 0.07 ) }
    dend_98 { pt3dadd( 25.9809, -216.015, -8.07871, 0.58 ) }
    dend_98 { pt3dadd( 25.9463, -216.756, -8.0375, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_98 { pt3dadd( 25.8192, -217.53, -7.96948, 0.15 ) }
    dend_98 { pt3dadd( 25.5786, -218.629, -7.90234, 0.15 ) }
    dend_98 { pt3dadd( 25.4249, -219.293, -7.89539, 0.29 ) }
    dend_98 { pt3dadd( 25.2102, -220.413, -7.92161, 0.88 ) }
    dend_98 { pt3dadd( 25.0512, -221.903, -8.06758, 0.51 ) }
    dend_98 { pt3dadd( 25.0374, -223.094, -8.28165, 0.29 ) }
    dend_98 { pt3dadd( 25.132, -224.394, -8.59923, 0.22 ) }
    dend_98 { pt3dadd( 25.2995, -225.763, -9.01227, 0.22 ) }
    dend_98 { pt3dadd( 25.4306, -226.717, -9.32741, 0.36 ) }
    dend_98 { pt3dadd( 25.6196, -228.22, -9.87776, 0.22 ) }
    dend_98 { pt3dadd( 25.6807, -229.031, -10.1599, 0.07 ) }
    dend_98 { pt3dadd( 25.6754, -229.812, -10.3871, 0.07 ) }
    dend_98 { pt3dadd( 25.597, -230.43, -10.5258, 0.44 ) }
    dend_98 { pt3dadd( 25.394, -231.297, -10.6254, 0.44 ) }
    dend_98 { pt3dadd( 25.1929, -232.042, -10.7355, 0.22 ) }
    dend_98 { pt3dadd( 24.9111, -233.196, -10.9251, 0.07 ) }
    dend_98 { pt3dadd( 24.8677, -233.498, -10.9812, 0.22 ) }
    dend_98 { pt3dadd( 24.854, -234.732, -11.2519, 0.07 ) }
    dend_98 { pt3dadd( 24.9959, -236.208, -11.6428, 0.22 ) }
    dend_98 { pt3dadd( 25.3407, -238.152, -12.2165, 0.22 ) }
    dend_98 { pt3dadd( 25.4918, -238.859, -12.4527, 0.73 ) }
    dend_98 { pt3dadd( 25.6878, -239.911, -12.8353, 0.36 ) }
    dend_98 { pt3dadd( 25.7431, -240.58, -13.0736, 0.36 ) }
    dend_98 { pt3dadd( 25.6871, -241.429, -13.3419, 0.07 ) }
    dend_98 { pt3dadd( 25.611, -241.784, -13.4413, 0.07 ) }
    dend_98 { pt3dadd( 25.394, -242.408, -13.5235, 0.07 ) }
    dend_98 { pt3dadd( 24.9991, -243.338, -13.6083, 0.44 ) }
    dend_98 { pt3dadd( 24.5682, -244.297, -13.6939, 0.44 ) }
    dend_98 { pt3dadd( 24.1403, -245.284, -13.7814, 0.22 ) }
    dend_98 { pt3dadd( 23.8026, -246.149, -13.8584, 0.22 ) }
    dend_98 { pt3dadd( 23.557, -246.879, -13.9399, 0.22 ) }
    dend_98 { pt3dadd( 23.4132, -247.386, -14.0032, 0.22 ) }
    dend_98 { pt3dadd( 23.1991, -248.295, -14.1531, 0.22 ) }
    dend_98 { pt3dadd( 22.9322, -249.288, -14.3575, 0.22 ) }
    dend_98 { pt3dadd( 22.841, -249.6, -14.4415, 0.22 ) }
    dend_98 { pt3dadd( 22.7178, -250.013, -14.5624, 0.22 ) }
    dend_98 { pt3dadd( 22.5841, -250.548, -14.693, 0.22 ) }
    dend_98 { pt3dadd( 22.4032, -251.284, -14.7985, 0.36 ) }
    dend_98 { pt3dadd( 22.2422, -251.893, -14.8291, 0.07 ) }
    dend_98 { pt3dadd( 22.0957, -252.469, -14.8296, 0.07 ) }
    dend_98 { pt3dadd( 21.8974, -253.35, -14.8296, 0.51 ) }
    dend_98 { pt3dadd( 21.7367, -254.368, -14.8296, 0.73 ) }
    dend_98 { pt3dadd( 21.6261, -255.623, -14.8296, 0.07 ) }
    dend_98 { pt3dadd( 21.6131, -256.205, -14.8413, 0.07 ) }
    dend_98 { pt3dadd( 21.6423, -256.794, -14.8622, 0.07 ) }
    dend_98 { pt3dadd( 21.7255, -257.533, -14.8976, 0.07 ) }
    dend_98 { pt3dadd( 21.8433, -258.26, -14.9394, 0.07 ) }
    dend_98 { pt3dadd( 22.0567, -259.348, -15.0355, 0.58 ) }
    dend_98 { pt3dadd( 22.2683, -260.202, -15.1314, 0.58 ) }
    dend_98 { pt3dadd( 22.5244, -261.122, -15.2735, 0.66 ) }
    dend_98 { pt3dadd( 22.8051, -262.058, -15.4513, 0.44 ) }
    dend_98 { pt3dadd( 23.0102, -262.67, -15.5871, 0.07 ) }
    dend_98 { pt3dadd( 23.2445, -263.304, -15.7407, 0.07 ) }
    dend_98 { pt3dadd( 23.4209, -263.71, -15.8474, 0.22 ) }
    dend_98 { pt3dadd( 23.7539, -264.469, -16.0692, 0.07 ) }
    dend_98 { pt3dadd( 23.974, -264.974, -16.2338, 0.22 ) }
    dend_98 { pt3dadd( 24.2102, -265.487, -16.4113, 0.22 ) }
    dend_98 { pt3dadd( 24.5368, -266.136, -16.6348, 0.07 ) }
    dend_98 { pt3dadd( 25.0665, -267.133, -16.9452, 0.44 ) }
    dend_98 { pt3dadd( 25.4116, -267.773, -17.1417, 0.66 ) }
    dend_98 { pt3dadd( 25.6409, -268.244, -17.2679, 0.66 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 61/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 20.0953, -195.147, -9.72202, 0.07 ) }
    dend_97 { pt3dadd( 20.6114, -194.856, -11.3705, 0.07 ) }
    dend_97 { pt3dadd( 20.8439, -194.645, -12.3345, 0.22 ) }
    dend_97 { pt3dadd( 21.0435, -194.367, -13.4491, 0.07 ) }
    dend_97 { pt3dadd( 21.1679, -194.125, -14.3108, 0.07 ) }
    dend_97 { pt3dadd( 21.2625, -193.742, -15.5767, 0.51 ) }
    dend_97 { pt3dadd( 21.2709, -193.629, -15.9378, 0.73 ) }
    dend_97 { pt3dadd( 21.0989, -193.127, -17.2115, 0.07 ) }
    dend_97 { pt3dadd( 20.9225, -192.895, -17.7721, 0.36 ) }
    dend_97 { pt3dadd( 20.615, -192.687, -18.3293, 0.36 ) }
    dend_97 { pt3dadd( 19.9181, -192.327, -19.3429, 0.07 ) }
    dend_97 { pt3dadd( 19.7303, -192.258, -19.5674, 0.07 ) }
    dend_97 { pt3dadd( 19.0109, -192.043, -20.3645, 0.29 ) }
    dend_97 { pt3dadd( 18.4707, -191.915, -20.8739, 0.07 ) }
    dend_97 { pt3dadd( 17.6488, -191.787, -21.5336, 0.22 ) }
    // Section: dend_95, id: dend_95, parent: dend_89 (entry count 76/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -37.6498, -164.664, -10.2218, 0.07 ) }
    dend_95 { pt3dadd( -37.9574, -164.905, -9.9337, 0.07 ) }
    dend_95 { pt3dadd( -38.9769, -165.74, -9.13008, 0.22 ) }
    dend_95 { pt3dadd( -39.3554, -166.068, -8.86869, 0.58 ) }
    dend_95 { pt3dadd( -39.6082, -166.281, -8.71113, 0.58 ) }
    dend_95 { pt3dadd( -40.3542, -166.871, -8.30988, 0.29 ) }
    dend_95 { pt3dadd( -41.0354, -167.392, -8.03623, 0.07 ) }
    dend_95 { pt3dadd( -41.5002, -167.746, -7.97895, 0.07 ) }
    dend_95 { pt3dadd( -41.9289, -168.06, -8.04266, 0.66 ) }
    dend_95 { pt3dadd( -42.1908, -168.257, -8.1138, 0.66 ) }
    dend_95 { pt3dadd( -42.7706, -168.703, -8.32948, 0.07 ) }
    dend_95 { pt3dadd( -43.5262, -169.34, -8.68379, 0.29 ) }
    dend_95 { pt3dadd( -44.2542, -170.03, -9.07545, 0.07 ) }
    dend_95 { pt3dadd( -44.7254, -170.519, -9.36911, 0.51 ) }
    dend_95 { pt3dadd( -45.0527, -170.864, -9.58104, 0.51 ) }
    dend_95 { pt3dadd( -45.6361, -171.493, -9.96613, 0.22 ) }
    dend_95 { pt3dadd( -46.3245, -172.223, -10.4128, 0.07 ) }
    dend_95 { pt3dadd( -47.0214, -172.921, -10.8186, 0.73 ) }
    dend_95 { pt3dadd( -47.7796, -173.646, -11.2321, 0.44 ) }
    dend_95 { pt3dadd( -48.3768, -174.17, -11.558, 0.07 ) }
    dend_95 { pt3dadd( -48.8052, -174.512, -11.7875, 0.07 ) }
    dend_95 { pt3dadd( -49.147, -174.764, -11.9612, 0.07 ) }
    dend_95 { pt3dadd( -49.5607, -175.043, -12.1634, 0.07 ) }
    dend_95 { pt3dadd( -49.9531, -175.308, -12.3265, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_95 { pt3dadd( -50.2866, -175.535, -12.4509, 0.51 ) }
    dend_95 { pt3dadd( -50.5531, -175.698, -12.5741, 0.51 ) }
    dend_95 { pt3dadd( -51.1868, -176.042, -12.91, 0.73 ) }
    dend_95 { pt3dadd( -52.3431, -176.612, -13.569, 0.07 ) }
    dend_95 { pt3dadd( -52.9431, -176.864, -13.9133, 0.66 ) }
    dend_95 { pt3dadd( -53.6279, -177.093, -14.297, 0.8 ) }
    dend_95 { pt3dadd( -55.1043, -177.491, -15.0817, 0.07 ) }
    dend_95 { pt3dadd( -55.8438, -177.629, -15.4352, 0.07 ) }
    dend_95 { pt3dadd( -56.1102, -177.657, -15.5462, 0.07 ) }
    dend_95 { pt3dadd( -56.8762, -177.671, -15.8092, 0.07 ) }
    dend_95 { pt3dadd( -57.4664, -177.652, -15.9991, 0.8 ) }
    dend_95 { pt3dadd( -58.0956, -177.619, -16.2078, 0.8 ) }
    dend_95 { pt3dadd( -59.2278, -177.536, -16.5331, 0.07 ) }
    dend_95 { pt3dadd( -59.6725, -177.494, -16.6622, 0.29 ) }
    dend_95 { pt3dadd( -60.6625, -177.4, -16.9849, 0.07 ) }
    dend_95 { pt3dadd( -61.5843, -177.313, -17.339, 0.29 ) }
    dend_95 { pt3dadd( -62.9691, -177.197, -17.9588, 0.07 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 17/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -37.6498, -164.664, -10.2218, 0.07 ) }
    dend_90 { pt3dadd( -37.8104, -165.755, -10.6386, 0.07 ) }
    dend_90 { pt3dadd( -37.9553, -166.872, -11.0272, 0.36 ) }
    dend_90 { pt3dadd( -38.0238, -167.727, -11.2781, 0.07 ) }
    dend_90 { pt3dadd( -38.0835, -168.563, -11.5095, 0.07 ) }
    dend_90 { pt3dadd( -38.105, -168.941, -11.6152, 0.07 ) }
    dend_90 { pt3dadd( -38.1377, -169.547, -11.7846, 0.44 ) }
    dend_90 { pt3dadd( -38.1626, -170.067, -11.9106, 0.22 ) }
    dend_90 { pt3dadd( -38.1994, -171.123, -12.1304, 0.15 ) }
    dend_90 { pt3dadd( -38.2449, -171.914, -12.2779, 0.15 ) }
    dend_90 { pt3dadd( -38.3329, -172.969, -12.4426, 0.15 ) }
    dend_90 { pt3dadd( -38.4407, -173.884, -12.568, 0.15 ) }
    dend_90 { pt3dadd( -38.5632, -174.613, -12.658, 0.66 ) }
    dend_90 { pt3dadd( -38.8167, -175.618, -12.7666, 1.02 ) }
    dend_90 { pt3dadd( -39.2985, -177.06, -12.899, 0.07 ) }
    dend_90 { pt3dadd( -39.6931, -178.014, -12.9634, 0.07 ) }
    dend_90 { pt3dadd( -39.9952, -178.616, -12.979, 0.22 ) }
    dend_90 { pt3dadd( -40.2791, -179.124, -12.9806, 0.22 ) }
    dend_90 { pt3dadd( -40.6696, -179.822, -13.0121, 0.07 ) }
    dend_90 { pt3dadd( -40.8883, -180.231, -13.0603, 0.07 ) }
    dend_90 { pt3dadd( -41.2693, -181.033, -13.211, 0.51 ) }
    dend_90 { pt3dadd( -41.7031, -182.066, -13.4478, 0.07 ) }
    dend_90 { pt3dadd( -41.8574, -182.482, -13.5519, 0.07 ) }
    dend_90 { pt3dadd( -42.3052, -183.704, -13.8702, 0.29 ) }
    dend_90 { pt3dadd( -42.5851, -184.459, -14.0646, 0.07 ) }
    dend_90 { pt3dadd( -42.8316, -185.026, -14.1983, 0.07 ) }
    dend_90 { pt3dadd( -43.2178, -185.759, -14.3365, 0.36 ) }
    dend_90 { pt3dadd( -43.3638, -185.971, -14.3776, 0.36 ) }
    dend_90 { pt3dadd( -43.8255, -186.515, -14.4377, 0.15 ) }
    dend_90 { pt3dadd( -44.2722, -186.97, -14.4602, 0.07 ) }
    dend_90 { pt3dadd( -45.1377, -187.831, -14.496, 0.51 ) }
    dend_90 { pt3dadd( -45.6328, -188.348, -14.5448, 0.51 ) }
    dend_90 { pt3dadd( -46.299, -189.137, -14.6453, 0.22 ) }
    dend_90 { pt3dadd( -46.8799, -189.905, -14.7129, 0.51 ) }
    dend_90 { pt3dadd( -47.6889, -191.084, -14.7985, 0.22 ) }
    dend_90 { pt3dadd( -48.2144, -191.868, -14.8609, 0.07 ) }
    dend_90 { pt3dadd( -48.5916, -192.456, -14.9125, 0.07 ) }
    dend_90 { pt3dadd( -49.225, -193.549, -15.0114, 0.29 ) }
    dend_90 { pt3dadd( -49.7748, -194.658, -15.0421, 0.07 ) }
    dend_90 { pt3dadd( -50.1886, -195.671, -15.0671, 0.29 ) }
    // Section: dend_104, id: dend_104, parent: dend_98 (entry count 57/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 25.6409, -268.244, -17.2679, 0.07 ) }
    dend_104 { pt3dadd( 26.1192, -269.141, -16.5612, 0.07 ) }
    dend_104 { pt3dadd( 26.4272, -269.677, -16.1296, 0.15 ) }
    dend_104 { pt3dadd( 26.78, -270.322, -15.5954, 0.07 ) }
    dend_104 { pt3dadd( 27.1699, -271.101, -14.9767, 0.36 ) }
    dend_104 { pt3dadd( 27.4571, -271.687, -14.5387, 0.36 ) }
    dend_104 { pt3dadd( 27.7009, -272.17, -14.194, 0.36 ) }
    dend_104 { pt3dadd( 28.2149, -273.053, -13.6457, 0.07 ) }
    dend_104 { pt3dadd( 28.7922, -273.998, -13.1221, 0.07 ) }
    dend_104 { pt3dadd( 29.0789, -274.475, -12.8873, 0.07 ) }
    dend_104 { pt3dadd( 29.3805, -275.032, -12.6368, 0.07 ) }
    dend_104 { pt3dadd( 29.5699, -275.418, -12.4692, 0.36 ) }
    dend_104 { pt3dadd( 30.1226, -276.514, -12.0335, 0.07 ) }
    dend_104 { pt3dadd( 30.4545, -277.067, -11.8149, 0.07 ) }
    dend_104 { pt3dadd( 30.6968, -277.395, -11.6481, 0.07 ) }
    dend_104 { pt3dadd( 31.2337, -278.043, -11.1665, 0.07 ) }
    dend_104 { pt3dadd( 31.407, -278.245, -10.9628, 0.07 ) }
    dend_104 { pt3dadd( 31.8394, -278.726, -10.3624, 0.29 ) }
    dend_104 { pt3dadd( 32.2906, -279.214, -9.68732, 0.07 ) }
    dend_104 { pt3dadd( 32.6549, -279.644, -9.10952, 0.36 ) }
    dend_104 { pt3dadd( 33.2189, -280.331, -8.23122, 0.15 ) }
    dend_104 { pt3dadd( 33.7526, -280.987, -7.42183, 0.07 ) }
    dend_104 { pt3dadd( 34.4056, -281.815, -6.42542, 0.66 ) }
    dend_104 { pt3dadd( 34.8578, -282.399, -5.76193, 0.07 ) }
    dend_104 { pt3dadd( 35.4863, -283.222, -4.90865, 0.07 ) }
    dend_104 { pt3dadd( 35.6846, -283.484, -4.64517, 0.07 ) }
    dend_104 { pt3dadd( 36.0486, -283.95, -4.14468, 0.07 ) }
    dend_104 { pt3dadd( 36.3202, -284.286, -3.75294, 0.07 ) }
    dend_104 { pt3dadd( 36.705, -284.704, -3.15366, 0.07 ) }
    dend_104 { pt3dadd( 37.1663, -285.116, -2.40258, 0.29 ) }
    dend_104 { pt3dadd( 37.6012, -285.413, -1.66029, 0.07 ) }
    dend_104 { pt3dadd( 37.9466, -285.681, -0.897015, 0.07 ) }
    dend_104 { pt3dadd( 38.0688, -285.844, -0.413294, 0.07 ) }
    dend_104 { pt3dadd( 38.0904, -286.113, 0.58058, 0.29 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 91/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 25.6409, -268.244, -17.2679, 0.15 ) }
    dend_99 { pt3dadd( 26.2204, -269.454, -17.7096, 0.15 ) }
    dend_99 { pt3dadd( 26.5413, -270.093, -17.9495, 0.07 ) }
    dend_99 { pt3dadd( 26.8593, -270.714, -18.2381, 0.58 ) }
    dend_99 { pt3dadd( 27.1697, -271.322, -18.5334, 0.58 ) }
    dend_99 { pt3dadd( 27.6581, -272.279, -19.0101, 0.29 ) }
    dend_99 { pt3dadd( 28.0438, -273.005, -19.3391, 0.51 ) }
    dend_99 { pt3dadd( 28.5359, -273.816, -19.656, 0.36 ) }
    dend_99 { pt3dadd( 29.1646, -274.805, -20.0974, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_99 { pt3dadd( 29.472, -275.303, -20.33, 0.07 ) }
    dend_99 { pt3dadd( 29.8405, -275.986, -20.6321, 0.58 ) }
    dend_99 { pt3dadd( 30.2844, -276.999, -21.0119, 0.29 ) }
    dend_99 { pt3dadd( 30.7259, -278.215, -21.4115, 0.07 ) }
    dend_99 { pt3dadd( 31.2784, -279.801, -21.8374, 0.07 ) }
    dend_99 { pt3dadd( 31.4601, -280.323, -21.9525, 0.07 ) }
    dend_99 { pt3dadd( 31.8032, -281.301, -22.188, 0.51 ) }
    dend_99 { pt3dadd( 32.1771, -282.317, -22.444, 0.36 ) }
    dend_99 { pt3dadd( 32.5692, -283.287, -22.7111, 0.15 ) }
    dend_99 { pt3dadd( 32.955, -284.066, -22.8567, 0.07 ) }
    dend_99 { pt3dadd( 33.2106, -284.49, -22.8863, 0.07 ) }
    dend_99 { pt3dadd( 33.5412, -284.908, -22.9213, 0.07 ) }
    dend_99 { pt3dadd( 34.0844, -285.386, -22.9741, 0.07 ) }
    dend_99 { pt3dadd( 34.7034, -285.765, -23.033, 0.07 ) }
    dend_99 { pt3dadd( 35.3617, -286.081, -23.0931, 0.29 ) }
    // Section: dend_92, id: dend_92, parent: dend_90 (entry count 15/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -50.1886, -195.671, -15.0671, 0.07 ) }
    dend_92 { pt3dadd( -51.0778, -196.227, -14.6842, 0.07 ) }
    dend_92 { pt3dadd( -51.6957, -196.715, -14.3904, 0.07 ) }
    dend_92 { pt3dadd( -52.315, -197.333, -14.0751, 0.44 ) }
    dend_92 { pt3dadd( -52.605, -197.652, -13.9293, 0.44 ) }
    dend_92 { pt3dadd( -53.7306, -198.953, -13.4041, 0.07 ) }
    dend_92 { pt3dadd( -54.1141, -199.391, -13.2278, 0.07 ) }
    dend_92 { pt3dadd( -54.6865, -200.063, -12.9157, 0.07 ) }
    dend_92 { pt3dadd( -55.1495, -200.588, -12.6329, 0.29 ) }
    dend_92 { pt3dadd( -55.4578, -200.929, -12.4575, 0.51 ) }
    dend_92 { pt3dadd( -55.9758, -201.472, -12.2225, 0.51 ) }
    dend_92 { pt3dadd( -56.7118, -202.216, -12.024, 0.07 ) }
    dend_92 { pt3dadd( -57.2448, -202.72, -11.8908, 0.07 ) }
    dend_92 { pt3dadd( -57.6328, -203.077, -11.8152, 0.07 ) }
    dend_92 { pt3dadd( -57.9699, -203.385, -11.7813, 0.07 ) }
    dend_92 { pt3dadd( -58.3145, -203.711, -11.7868, 0.07 ) }
    dend_92 { pt3dadd( -58.8019, -204.177, -11.7973, 0.07 ) }
    dend_92 { pt3dadd( -59.0431, -204.427, -11.8062, 0.29 ) }
    dend_92 { pt3dadd( -59.5067, -204.943, -11.8086, 0.07 ) }
    dend_92 { pt3dadd( -60.0594, -205.561, -11.777, 0.36 ) }
    dend_92 { pt3dadd( -60.7441, -206.346, -11.7215, 0.36 ) }
    dend_92 { pt3dadd( -61.5827, -207.234, -11.6163, 0.07 ) }
    dend_92 { pt3dadd( -62.1734, -207.776, -11.5139, 0.07 ) }
    dend_92 { pt3dadd( -62.9215, -208.408, -11.382, 0.29 ) }
    dend_92 { pt3dadd( -63.4248, -208.849, -11.3023, 0.29 ) }
    dend_92 { pt3dadd( -64.1014, -209.488, -11.2273, 0.07 ) }
    dend_92 { pt3dadd( -64.7339, -210.129, -11.223, 0.07 ) }
    dend_92 { pt3dadd( -65.6576, -211.057, -11.3173, 0.51 ) }
    dend_92 { pt3dadd( -66.223, -211.638, -11.4182, 0.51 ) }
    dend_92 { pt3dadd( -66.9146, -212.447, -11.5994, 0.07 ) }
    dend_92 { pt3dadd( -67.3696, -213.096, -11.7939, 0.07 ) }
    dend_92 { pt3dadd( -67.9157, -214.046, -12.1117, 0.07 ) }
    dend_92 { pt3dadd( -68.3118, -214.893, -12.4193, 0.22 ) }
    dend_92 { pt3dadd( -68.6198, -215.659, -12.7068, 0.07 ) }
    dend_92 { pt3dadd( -69.0577, -216.796, -13.1191, 0.36 ) }
    dend_92 { pt3dadd( -69.5776, -218.181, -13.6189, 0.07 ) }
    dend_92 { pt3dadd( -69.7907, -218.85, -13.8623, 0.36 ) }
    dend_92 { pt3dadd( -69.924, -219.396, -14.0727, 0.36 ) }
    dend_92 { pt3dadd( -70.1043, -220.244, -14.4103, 0.22 ) }
    dend_92 { pt3dadd( -70.2556, -220.982, -14.7049, 0.07 ) }
    dend_92 { pt3dadd( -70.3787, -221.606, -14.9639, 0.66 ) }
    dend_92 { pt3dadd( -70.5856, -222.853, -15.4509, 0.07 ) }
    dend_92 { pt3dadd( -70.7424, -224.097, -15.9819, 0.58 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 58/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -50.1886, -195.671, -15.0671, 0.07 ) }
    dend_91 { pt3dadd( -50.1405, -196.961, -15.1431, 0.07 ) }
    dend_91 { pt3dadd( -50.23, -197.762, -15.1978, 0.07 ) }
    dend_91 { pt3dadd( -50.3462, -198.271, -15.2428, 0.22 ) }
    dend_91 { pt3dadd( -50.518, -199.025, -15.3091, 0.07 ) }
    dend_91 { pt3dadd( -50.6018, -199.393, -15.3415, 0.29 ) }
    dend_91 { pt3dadd( -50.8603, -200.527, -15.4415, 0.07 ) }
    dend_91 { pt3dadd( -51.1449, -201.253, -15.5419, 0.29 ) }
    dend_91 { pt3dadd( -51.4881, -201.917, -15.6678, 0.29 ) }
    // Section: dend_103, id: dend_103, parent: dend_99 (entry count 67/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 35.3617, -286.081, -23.0931, 0.07 ) }
    dend_103 { pt3dadd( 36.4987, -285.573, -23.9938, 0.07 ) }
    dend_103 { pt3dadd( 37.3971, -285.171, -24.7055, 0.58 ) }
    dend_103 { pt3dadd( 37.9814, -284.91, -25.1684, 0.07 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 71/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 35.3617, -286.081, -23.0931, 0.07 ) }
    dend_100 { pt3dadd( 35.5747, -286.672, -23.2859, 0.07 ) }
    dend_100 { pt3dadd( 35.8771, -287.457, -23.5774, 0.07 ) }
    dend_100 { pt3dadd( 36.3094, -288.516, -23.9727, 0.58 ) }
    dend_100 { pt3dadd( 36.762, -289.543, -24.3669, 0.07 ) }
    dend_100 { pt3dadd( 37.0426, -290.133, -24.6183, 0.36 ) }
    dend_100 { pt3dadd( 37.2291, -290.524, -24.7853, 0.36 ) }
    dend_100 { pt3dadd( 37.9125, -291.788, -25.3441, 0.07 ) }
    dend_100 { pt3dadd( 38.247, -292.348, -25.5921, 0.07 ) }
    dend_100 { pt3dadd( 38.4572, -292.686, -25.7644, 0.07 ) }
    dend_100 { pt3dadd( 39.0663, -293.777, -26.3293, 0.51 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 82/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -70.7424, -224.097, -15.9819, 0.07 ) }
    dend_94 { pt3dadd( -70.2154, -224.106, -15.9826, 0.07 ) }
    dend_94 { pt3dadd( -69.0363, -224.126, -15.9842, 0.29 ) }
    dend_94 { pt3dadd( -68.2324, -224.14, -15.9852, 0.07 ) }
    dend_94 { pt3dadd( -67.4892, -224.152, -15.9862, 0.22 ) }
    dend_94 { pt3dadd( -66.7001, -224.166, -15.9873, 0.07 ) }
    dend_94 { pt3dadd( -65.9702, -224.178, -15.9882, 0.36 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 89/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -70.7424, -224.097, -15.9819, 0.07 ) }
    dend_93 { pt3dadd( -70.9736, -224.986, -15.462, 0.07 ) }
    dend_93 { pt3dadd( -71.2962, -226.228, -14.7366, 0.66 ) }
    dend_93 { pt3dadd( -71.5712, -227.286, -14.1183, 0.07 ) }
    dend_93 { pt3dadd( -71.9392, -228.702, -13.2907, 0.22 ) }
    dend_93 { pt3dadd( -72.1888, -229.662, -12.7295, 0.07 ) }
    dend_93 { pt3dadd( -72.4199, -230.552, -12.2098, 0.29 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 96/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 39.0663, -293.777, -26.3293, 0.22 ) }
    dend_102 { pt3dadd( 38.6069, -294.481, -26.5748, 0.22 ) }
    dend_102 { pt3dadd( 37.753, -295.644, -27.0226, 0.07 ) }
    dend_102 { pt3dadd( 37.2456, -296.264, -27.2579, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_102 { pt3dadd( 36.5638, -297.022, -27.5326, 0.07 ) }
    dend_102 { pt3dadd( 36.0373, -297.577, -27.7196, 0.58 ) }
    dend_102 { pt3dadd( 35.5646, -298.058, -27.8696, 0.73 ) }
    dend_102 { pt3dadd( 34.3481, -299.207, -28.1712, 0.07 ) }
    dend_102 { pt3dadd( 33.5281, -299.941, -28.3166, 0.07 ) }
    dend_102 { pt3dadd( 32.7574, -300.603, -28.4292, 0.36 ) }
    dend_102 { pt3dadd( 31.8694, -301.323, -28.5272, 0.07 ) }
    dend_102 { pt3dadd( 31.166, -301.858, -28.584, 0.29 ) }
    dend_102 { pt3dadd( 29.8926, -302.766, -28.6458, 0.07 ) }
    dend_102 { pt3dadd( 29.1643, -303.281, -28.6533, 0.07 ) }
    dend_102 { pt3dadd( 28.3985, -303.822, -28.6103, 0.66 ) }
    dend_102 { pt3dadd( 27.9652, -304.126, -28.5617, 0.66 ) }
    dend_102 { pt3dadd( 26.9587, -304.848, -28.3987, 0.07 ) }
    dend_102 { pt3dadd( 25.9499, -305.599, -28.1943, 0.07 ) }
    dend_102 { pt3dadd( 25.0369, -306.368, -27.9676, 0.29 ) }
    dend_102 { pt3dadd( 23.8619, -307.567, -27.6364, 0.07 ) }
    dend_102 { pt3dadd( 23.4944, -307.996, -27.5279, 0.29 ) }
    dend_102 { pt3dadd( 22.8488, -308.849, -27.3375, 0.07 ) }
    dend_102 { pt3dadd( 22.5926, -309.24, -27.2818, 0.36 ) }
    dend_102 { pt3dadd( 21.9673, -310.253, -27.2228, 0.07 ) }
    dend_102 { pt3dadd( 21.2951, -311.376, -27.1672, 0.29 ) }
    dend_102 { pt3dadd( 20.7776, -312.282, -27.1497, 0.07 ) }
    dend_102 { pt3dadd( 20.5784, -312.658, -27.1074, 0.07 ) }
    dend_102 { pt3dadd( 20.031, -313.771, -26.8839, 0.22 ) }
    dend_102 { pt3dadd( 19.7393, -314.362, -26.738, 0.22 ) }
    dend_102 { pt3dadd( 18.9862, -315.839, -26.2461, 0.22 ) }
    dend_102 { pt3dadd( 18.7646, -316.347, -26.0185, 0.22 ) }
    dend_102 { pt3dadd( 18.4712, -317.311, -25.4989, 0.07 ) }
    dend_102 { pt3dadd( 18.2907, -318.059, -25.0001, 0.07 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 29/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 39.0663, -293.777, -26.3293, 0.07 ) }
    dend_101 { pt3dadd( 39.9025, -294.546, -26.4406, 0.07 ) }
    dend_101 { pt3dadd( 40.2823, -294.831, -26.4783, 0.07 ) }
    dend_101 { pt3dadd( 40.7494, -295.096, -26.5463, 0.07 ) }
    dend_101 { pt3dadd( 41.126, -295.287, -26.6291, 0.07 ) }
    dend_101 { pt3dadd( 41.7216, -295.57, -26.7723, 0.22 ) }
    dend_101 { pt3dadd( 42.1886, -295.799, -26.8834, 0.07 ) }
    dend_101 { pt3dadd( 42.7647, -296.103, -27.0094, 0.29 ) }
    dend_101 { pt3dadd( 43.6618, -296.623, -27.1976, 0.07 ) }
    dend_101 { pt3dadd( 44.3424, -297.036, -27.3502, 0.29 ) }
    dend_101 { pt3dadd( 44.8516, -297.371, -27.4651, 0.29 ) }
    dend_101 { pt3dadd( 45.6052, -297.9, -27.6558, 0.07 ) }
    dend_101 { pt3dadd( 46.6652, -298.682, -27.9672, 0.22 ) }
    dend_101 { pt3dadd( 48.2108, -299.845, -28.4807, 0.07 ) }
    dend_101 { pt3dadd( 48.996, -300.432, -28.75, 0.07 ) }
    dend_101 { pt3dadd( 49.8395, -301.051, -29.0549, 0.8 ) }
    dend_101 { pt3dadd( 50.6596, -301.671, -29.3756, 0.07 ) }
    dend_101 { pt3dadd( 51.3742, -302.225, -29.6808, 0.07 ) }
    dend_101 { pt3dadd( 52.0733, -302.788, -29.9877, 0.07 ) }
    dend_101 { pt3dadd( 52.8, -303.434, -30.3039, 0.22 ) }
    dend_101 { pt3dadd( 53.5332, -304.195, -30.6002, 0.07 ) }
    dend_101 { pt3dadd( 54.3415, -305.16, -30.9019, 0.29 ) }
    dend_101 { pt3dadd( 55.0843, -306.19, -31.1454, 0.07 ) }
    dend_101 { pt3dadd( 55.6414, -307.104, -31.3498, 0.29 ) }
    dend_101 { pt3dadd( 56.0197, -307.835, -31.5143, 0.07 ) }
    dend_101 { pt3dadd( 56.4332, -308.715, -31.727, 0.29 ) }
    dend_101 { pt3dadd( 56.6221, -309.133, -31.8289, 0.29 ) }
    dend_101 { pt3dadd( 57.0967, -310.174, -32.0916, 0.07 ) }
    dend_101 { pt3dadd( 57.5634, -311.222, -32.3443, 0.07 ) }
    dend_101 { pt3dadd( 57.869, -311.839, -32.4944, 0.07 ) }
    dend_101 { pt3dadd( 58.3114, -312.575, -32.676, 0.07 ) }
    dend_101 { pt3dadd( 58.8471, -313.317, -32.8446, 0.07 ) }
    dend_101 { pt3dadd( 59.1486, -313.675, -32.9336, 0.22 ) }
    dend_101 { pt3dadd( 59.4579, -313.984, -33.0216, 0.22 ) }
    dend_101 { pt3dadd( 60.2243, -314.627, -33.2313, 0.07 ) }
    dend_101 { pt3dadd( 60.9335, -315.181, -33.4698, 0.07 ) }
    dend_101 { pt3dadd( 61.9009, -315.937, -33.8583, 0.29 ) }
    dend_101 { pt3dadd( 62.8727, -316.72, -34.2831, 0.15 ) }
    dend_101 { pt3dadd( 63.6273, -317.375, -34.6229, 0.15 ) }
    dend_101 { pt3dadd( 64.3335, -318.033, -34.9538, 0.44 ) }
    dend_101 { pt3dadd( 65.1435, -318.885, -35.3477, 0.07 ) }
    dend_101 { pt3dadd( 65.9524, -319.858, -35.7272, 0.07 ) }
    dend_101 { pt3dadd( 66.4616, -320.555, -35.9439, 0.07 ) }
    dend_101 { pt3dadd( 67.0652, -321.488, -36.1497, 0.36 ) }
    dend_101 { pt3dadd( 67.7196, -322.656, -36.3528, 0.07 ) }
    dend_101 { pt3dadd( 68.0906, -323.412, -36.4592, 0.07 ) }
    dend_101 { pt3dadd( 68.6444, -324.564, -36.5918, 0.29 ) }
    dend_101 { pt3dadd( 69.2532, -325.844, -36.7327, 0.07 ) }
    dend_101 { pt3dadd( 69.7, -326.808, -36.8654, 0.22 ) }
    dend_101 { pt3dadd( 70.1614, -327.806, -37.0178, 0.07 ) }
    dend_101 { pt3dadd( 70.5669, -328.704, -37.156, 0.29 ) }
    dend_101 { pt3dadd( 71.0621, -329.814, -37.3382, 0.29 ) }
    dend_101 { pt3dadd( 71.3776, -330.522, -37.4591, 0.07 ) }
    dend_101 { pt3dadd( 71.8835, -331.616, -37.6406, 0.07 ) }
    dend_101 { pt3dadd( 72.578, -332.97, -37.8519, 0.07 ) }
    dend_101 { pt3dadd( 73.0069, -333.755, -37.9717, 0.07 ) }
    dend_101 { pt3dadd( 73.6177, -334.883, -38.1334, 0.07 ) }
    dend_101 { pt3dadd( 73.9046, -335.432, -38.2, 0.07 ) }
    dend_101 { pt3dadd( 74.4583, -336.429, -38.3065, 0.36 ) }
    dend_101 { pt3dadd( 75.0336, -337.38, -38.3904, 0.07 ) }
    dend_101 { pt3dadd( 75.4196, -338.006, -38.4509, 0.07 ) }
    dend_101 { pt3dadd( 76.0408, -338.992, -38.5531, 0.36 ) }
    dend_101 { pt3dadd( 76.3811, -339.522, -38.6094, 0.07 ) }
    dend_101 { pt3dadd( 76.8089, -340.24, -38.6974, 0.07 ) }
    dend_101 { pt3dadd( 77.3617, -341.241, -38.8241, 0.07 ) }
    dend_101 { pt3dadd( 77.5785, -341.659, -38.8856, 0.36 ) }
    dend_101 { pt3dadd( 78.1452, -342.741, -39.0669, 0.07 ) }
    dend_101 { pt3dadd( 78.9814, -344.288, -39.3618, 0.22 ) }
    dend_101 { pt3dadd( 79.555, -345.352, -39.574, 0.07 ) }
    dend_101 { pt3dadd( 80.0102, -346.153, -39.7366, 0.07 ) }
    dend_101 { pt3dadd( 80.5954, -347.091, -39.9341, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_101 { pt3dadd( 81.495, -348.432, -40.206, 0.07 ) }
    dend_101 { pt3dadd( 82.1776, -349.405, -40.3871, 0.29 ) }
    dend_101 { pt3dadd( 82.5949, -349.986, -40.4794, 0.07 ) }
    dend_101 { pt3dadd( 83.3222, -350.999, -40.5975, 0.22 ) }
    dend_101 { pt3dadd( 84.1393, -352.253, -40.703, 0.07 ) }
    dend_101 { pt3dadd( 84.7005, -353.276, -40.7275, 0.07 ) }
    dend_101 { pt3dadd( 85.0587, -354.125, -40.7043, 0.36 ) }
    dend_101 { pt3dadd( 85.4161, -355.266, -40.6758, 0.36 ) }
    dend_101 { pt3dadd( 85.7155, -356.501, -40.6673, 0.07 ) }
    dend_101 { pt3dadd( 85.9632, -357.972, -40.6742, 0.07 ) }
    dend_101 { pt3dadd( 86.1906, -359.823, -40.7341, 0.29 ) }
    dend_101 { pt3dadd( 86.3709, -361.667, -40.8766, 0.07 ) }
    dend_101 { pt3dadd( 86.5008, -363.38, -41.0681, 0.07 ) }
    dend_101 { pt3dadd( 86.5801, -364.902, -41.2794, 0.07 ) }
    dend_101 { pt3dadd( 86.6402, -366.437, -41.5591, 0.29 ) }
    dend_101 { pt3dadd( 86.6534, -367.904, -41.7883, 0.07 ) }
    dend_101 { pt3dadd( 86.6452, -369.481, -42.0694, 0.07 ) }
    dend_101 { pt3dadd( 86.6272, -370.573, -42.2663, 0.07 ) }
    dend_101 { pt3dadd( 86.5742, -372.497, -42.5304, 0.22 ) }
    dend_101 { pt3dadd( 86.4881, -374.064, -42.6923, 0.07 ) }
    dend_101 { pt3dadd( 86.2581, -377.273, -42.9086, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_51, dend_40, dend_23, dend_0, dend_72, dend_63, dend_55, dend_52, dend_44, dend_41, dend_29, dend_24, dend_16, dend_1, dend_82, dend_73, dend_69, dend_64, dend_59, dend_56, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_33, dend_30, dend_26, dend_25, dend_20, dend_17, dend_11, dend_2, dend_106, dend_83, dend_81, dend_74, dend_71, dend_70, dend_66, dend_65, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_47, dend_46, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_15, dend_12, dend_8, dend_3, dend_108, dend_107, dend_105, dend_84, dend_78, dend_75, dend_68, dend_67, dend_37, dend_36, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, dend_88, dend_85, dend_80, dend_79, dend_77, dend_76, dend_39, dend_38, dend_6, dend_5, dend_96, dend_89, dend_87, dend_86, dend_98, dend_97, dend_95, dend_90, dend_104, dend_99, dend_92, dend_91, dend_103, dend_100, dend_94, dend_93, dend_102, dend_101]}
    ModelViewParmSubset_2 = new SectionList()
    dend_62 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_95 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_62, dend_51, dend_40, dend_23, dend_0, dend_72, dend_63, dend_55, dend_52, dend_44, dend_41, dend_29, dend_24, dend_16, dend_1, dend_82, dend_73, dend_69, dend_64, dend_59, dend_56, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_33, dend_30, dend_26, dend_25, dend_20, dend_17, dend_11, dend_2, dend_106, dend_83, dend_81, dend_74, dend_71, dend_70, dend_66, dend_65, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_47, dend_46, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_15, dend_12, dend_8, dend_3, dend_108, dend_107, dend_105, dend_84, dend_78, dend_75, dend_68, dend_67, dend_37, dend_36, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, dend_88, dend_85, dend_80, dend_79, dend_77, dend_76, dend_39, dend_38, dend_6, dend_5, dend_96, dend_89, dend_87, dend_86, dend_98, dend_97, dend_95, dend_90, dend_104, dend_99, dend_92, dend_91, dend_103, dend_100, dend_94, dend_93, dend_102, dend_101]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_50, dend_49]}
    ModelViewParmSubset_5 = new SectionList()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_19, dend_18]}
    ModelViewParmSubset_6 = new SectionList()
    dend_19 ModelViewParmSubset_6.append()
    dend_18 ModelViewParmSubset_6.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_51 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_23 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_41 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_29 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_69 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_64 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_45 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_30 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_26 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_20 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_81 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_71 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_70 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_61 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_58 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_57 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_47 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_46 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_34 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_32 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_31 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_28 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_12 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_108 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_107 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_105 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_78 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_75 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_67 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_13 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_9 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_7 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_85 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_79 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_6 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_5 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_96 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_89 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_87 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_98 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_101 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_62 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_72 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_40 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_73 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_16 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_44 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_82 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_63 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_74 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_2 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_83 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_8 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_106 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_3 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_55 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_24 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_84 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_10 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_4 OneSecGrp_SectionRef_84.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_56 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_88 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_59 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_76 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_15 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_60 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_35 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_77 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_37 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_80 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_68 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_36 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_14 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_38 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_39 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_27 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_95 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_90 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_97 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_91 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_86 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_92 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_94 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_93 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_99 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_103 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_104 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_100 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_102 OneSecGrp_SectionRef_111.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_72, dend_72, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    axon_0 all.append()
    axon_0 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_89 all.append()
    dend_89 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_90 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 3
    dend_23 nseg = 3
    dend_52 nseg = 3
    dend_41 nseg = 3
    dend_29 nseg = 3
    dend_69 nseg = 3
    dend_64 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_30 nseg = 3
    dend_26 nseg = 3
    dend_20 nseg = 3
    dend_17 nseg = 5
    dend_11 nseg = 3
    dend_81 nseg = 3
    dend_71 nseg = 7
    dend_70 nseg = 9
    dend_66 nseg = 3
    dend_61 nseg = 3
    dend_58 nseg = 7
    dend_57 nseg = 5
    dend_47 nseg = 7
    dend_46 nseg = 3
    dend_34 nseg = 7
    dend_32 nseg = 11
    dend_31 nseg = 3
    dend_28 nseg = 5
    dend_22 nseg = 3
    dend_12 nseg = 3
    dend_108 nseg = 9
    dend_107 nseg = 5
    dend_105 nseg = 5
    dend_78 nseg = 3
    dend_75 nseg = 3
    dend_67 nseg = 13
    dend_13 nseg = 3
    dend_9 nseg = 5
    dend_7 nseg = 3
    dend_85 nseg = 7
    dend_79 nseg = 3
    dend_6 nseg = 3
    dend_5 nseg = 9
    dend_96 nseg = 5
    dend_89 nseg = 3
    dend_87 nseg = 9
    dend_98 nseg = 3
    dend_101 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_MC_6ed36072e7_0_0


