// Cell: bIR215_L6_NBC_ce39e26284_0_0
/*
{
  "id" : "bIR215_L6_NBC_ce39e26284_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.94345, -11.2623, 0.984599, 4.09477", "-6.27697, -10.213, 0.889449, 7.03886", "-5.61048, -9.16359, 0.794299, 9.0513", "-4.94399, -8.11421, 0.699149, 10.7049", "-4.2775, -7.06483, 0.603999, 12.1545", "-3.61101, -6.01545, 0.508849, 13.4148", "-2.94452, -4.96607, 0.413699, 14.3077", "-2.27803, -3.91669, 0.318549, 14.7157", "-1.61155, -2.86731, 0.223399, 14.8034", "-0.945058, -1.81793, 0.128249, 14.7825", "-0.278569, -0.768556, 0.0330986, 14.484", "0.387919, 0.280823, -0.0620515, 14.2451", "1.05441, 1.3302, -0.157201, 13.4939", "1.7209, 2.37958, -0.252352, 12.4612", "2.38738, 3.42896, -0.347502, 11.3514", "3.05387, 4.47834, -0.442652, 10.0759", "3.72036, 5.52772, -0.537802, 8.68542", "4.38685, 6.5771, -0.632952, 7.03735", "5.05334, 7.62648, -0.728102, 5.61823", "5.71983, 8.67585, -0.823252, 4.41136", "6.38632, 9.72523, -0.918402, 2.8094" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.13964, -5.50144, -15.1942, 1.03", "-2.13964, -5.50144, -15.1942, 1.03", "-1.65154, -6.18382, -15.1942, 1.03", "-1.20178, -7.00729, -15.2249, 0.88", "-0.859053, -7.88311, -15.2777, 0.96", "-0.553932, -9.00989, -15.3611, 0.52", "-0.462055, -9.57363, -15.4075, 0.44", "-0.501859, -10.505, -15.4983, 0.37", "-0.818533, -11.3319, -15.5961, 0.96", "-1.17703, -11.8115, -15.6582, 1.18", "-1.44034, -12.0614, -15.7109, 1.18", "-1.79627, -12.3575, -15.8143, 0.88", "-2.23199, -12.7418, -15.9948, 0.66", "-2.65867, -13.1906, -16.2682, 0.52", "-3.02317, -13.7302, -16.7059, 0.37", "-3.29677, -14.3916, -17.3958, 0.37", "-3.45293, -14.9955, -18.1442, 1.11", "-3.52328, -15.3748, -18.667, 1.33", "-3.57117, -15.6789, -19.1091, 1.4", "-3.68759, -16.3197, -20.1021, 0.66", "-3.8404, -16.7401, -20.8167, 0.52", "-4.14821, -17.1611, -21.5262, 0.59", "-4.41044, -17.3991, -21.8983, 0.66", "-4.77905, -17.7013, -22.3378, 0.66", "-5.08885, -17.9606, -22.6723, 0.37", "-5.63043, -18.5338, -23.3315, 0.29", "-5.81314, -18.8245, -23.694, 0.29", "-6.08523, -19.5253, -24.6076, 1.4", "-6.1948, -19.9427, -25.132, 1.84", "-6.25337, -20.2881, -25.5599, 1.84", "-6.35965, -21.2849, -26.7987, 0.81", "-6.42179, -22.2222, -27.9774, 0.37", "-6.45135, -22.687, -28.6175, 0.37", "-6.48995, -23.2465, -29.4308, 1.55", "-6.52762, -23.778, -30.2832, 2.06", "-6.5688, -24.2184, -31.0346, 2.21", "-6.66727, -25.2562, -32.8552, 0.66", "-6.76422, -26.3371, -34.789, 0.66", "-6.79961, -26.8301, -35.7289, 0.88", "-6.86293, -27.9791, -38.1159, 1.77", "-6.90267, -28.5855, -39.42, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.29965, -7.64844, 0.925891, 1.25", "-8.29965, -7.64844, 0.925891, 1.25", "-8.70209, -8.26935, 1.0801, 1.25", "-9.4356, -9.48349, 1.38707, 1.11", "-10.0173, -10.4464, 1.63053, 1.55", "-10.46, -11.1791, 1.81579, 1.92", "-10.9883, -12.0536, 2.03688, 2.14", "-11.4191, -12.7943, 2.23107, 2.14", "-11.7664, -13.4524, 2.41837, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.83964, -10.831, -0.944109, 1.62", "-5.08735, -11.437, -0.845684, 1.62", "-5.47847, -12.3979, -0.675691, 1.47", "-5.8076, -13.2205, -0.526582, 1.18", "-6.17148, -14.1399, -0.361779, 1.18", "-6.50008, -14.9861, -0.221333, 1.77", "-6.6742, -15.4534, -0.152859, 2.14", "-6.90647, -16.1025, -0.0478974, 2.65", "-7.09501, -16.6207, 0.0371875, 2.73", "-7.37702, -17.3424, 0.145611, 2.5", "-7.81457, -18.3628, 0.277677, 1.92", "-8.35517, -19.537, 0.415263, 1.47", "-9.01419, -20.8426, 0.557763, 1.18", "-9.45588, -21.6353, 0.642587, 1.03", "-10.1717, -22.7751, 0.757529, 1.47", "-10.5561, -23.3151, 0.804678, 1.99", "-10.8499, -23.7013, 0.83123, 2.43", "-11.1758, -24.1425, 0.852429, 2.65", "-11.5325, -24.7166, 0.863576, 2.36", "-11.9948, -25.748, 0.852382, 1.77", "-12.4361, -27.324, 0.808321, 1.33", "-12.6164, -28.4513, 0.764933, 1.33", "-12.6962, -29.6035, 0.718442, 1.55", "-12.6684, -30.9671, 0.676197, 1.25", "-12.5134, -32.4095, 0.664668, 1.11", "-12.2595, -33.6784, 0.683129, 1.55", "-12.0703, -34.3479, 0.697656, 2.06", "-11.9363, -34.764, 0.711647, 2.43", "-11.7423, -35.3399, 0.744365, 2.8", "-11.524, -36.0075, 0.835237, 2.95", "-11.3816, -36.5316, 1.00313, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.93036, 9.68906, -0.514109, 3.54", "5.93036, 9.68906, -0.514109, 3.54", "6.54056, 10.9963, -0.422369, 3.54", "7.22583, 12.4643, -0.319343, 3.54", "7.66488, 13.4048, -0.253335, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.38632, 9.72523, -0.918402, 0.715642", "14.4283, 22.3872, -0.918402, 0.715642", "22.4703, 35.0492, -0.918402, 0.715642" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.90267, -28.5855, -39.42, 0.88", "-6.50741, -28.8654, -39.7523, 0.88", "-6.13598, -29.1229, -40.0335, 0.52", "-5.85391, -29.3109, -40.2283, 0.29", "-5.49927, -29.5425, -40.4814, 0.22", "-5.13906, -29.7799, -40.741, 1.33", "-4.83276, -29.979, -40.9745, 1.47", "-4.51552, -30.186, -41.2216, 0.15", "-4.28173, -30.3404, -41.3952, 0.15", "-3.76099, -30.6826, -41.7961, 0.81", "-3.66921, -30.7419, -41.8692, 0.96", "-2.8491, -31.2647, -42.5358, 0.22", "-2.74643, -31.3299, -42.6266, 0.74", "-2.5646, -31.4501, -42.803, 0.74", "-1.95059, -31.8587, -43.4463, 0.22", "-1.78616, -31.9703, -43.6263, 0.88", "-1.69618, -32.0323, -43.7319, 1.11", "-1.02487, -32.5006, -44.5893, 0.22", "-0.617608, -32.7781, -45.1311, 1.62", "-0.36244, -32.9523, -45.4805, 2.06", "0.0853479, -33.2786, -46.1182, 0.81", "0.419469, -33.5401, -46.6172, 1.33", "0.93125, -33.9784, -47.4107, 0.22", "1.26832, -34.2937, -47.9354, 1.33", "1.41099, -34.4371, -48.1758, 1.62", "1.93068, -35.0132, -49.1168, 0.59", "2.27264, -35.4372, -49.8122, 0.22", "2.44092, -35.6905, -50.2351, 0.74", "2.50719, -35.8155, -50.4382, 0.96", "2.75884, -36.392, -51.3756, 0.29", "2.84888, -36.6473, -51.8266, 1.18", "2.89011, -36.806, -52.1274, 1.4", "3.01437, -37.445, -53.3577, 0.22", "3.03911, -37.6327, -53.7381, 1.03", "3.04483, -37.7495, -53.9794, 1.18", "3.00833, -38.5437, -55.647, 0.44", "2.97012, -38.8646, -56.3689, 0.22", "2.95174, -38.9767, -56.626, 1.18", "2.894, -39.2872, -57.3579, 1.18", "2.84847, -39.5094, -57.9116, 1.62", "2.78552, -39.8709, -58.826, 1.84", "2.7697, -40.0192, -59.2014, 1.99", "2.76522, -40.572, -60.6339, 0.22", "2.78938, -40.9236, -61.5631, 1.47", "2.83099, -41.2169, -62.3137, 1.69", "2.86755, -41.4003, -62.7917, 1.4", "2.96603, -41.7719, -63.7621, 0.81", "3.1339, -42.2767, -65.0948, 1.03", "3.35211, -42.8506, -66.674, 0.22", "3.42671, -43.0196, -67.1326, 1.47", "3.64673, -43.4584, -68.2524, 1.62", "3.81716, -43.7705, -69.0162, 0.29", "4.05178, -44.1296, -69.8597, 1.18", "4.29832, -44.4362, -70.5366, 1.47", "4.66332, -44.8203, -71.3382, 0.15", "4.91488, -45.074, -71.8484, 0.15", "5.17673, -45.331, -72.302, 1.18", "5.6126, -45.7852, -73.0146, 0.22", "5.78142, -45.9735, -73.2929, 0.22", "6.09565, -46.3338, -73.842, 0.88", "6.25972, -46.5355, -74.1623, 0.88", "6.46504, -46.7857, -74.5872, 1.11", "6.6861, -47.0409, -75.0373, 1.33", "7.40294, -47.8249, -76.4975, 0.22", "7.75469, -48.1956, -77.2346, 1.03", "7.80734, -48.2482, -77.3457, 1.25", "8.39538, -48.8123, -78.5669, 0.22", "8.68586, -49.0787, -79.1677, 1.33", "8.86248, -49.2363, -79.5224, 1.4", "9.41446, -49.7618, -80.6653, 0.22", "9.67965, -50.0274, -81.2491, 0.74", "10.0995, -50.4687, -82.2496, 0.22", "10.4926, -50.9124, -83.2452, 1.4", "10.6251, -51.0718, -83.5975, 1.47", "11.0985, -51.6472, -84.8706, 0.15", "11.4612, -52.0745, -85.8465, 1.25", "11.6003, -52.2395, -86.2406, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.90267, -28.5855, -39.42, 1.92", "-7.67598, -28.9769, -40.6234, 1.92", "-8.36094, -29.3431, -41.718, 1.77", "-9.20915, -29.8192, -43.0573, 2.21", "-9.83894, -30.2156, -44.1027, 0.22", "-10.0485, -30.3592, -44.4753, 0.22", "-10.4748, -30.6705, -45.2645, 0.22", "-10.9576, -31.0701, -46.2531, 1.47", "-11.0944, -31.197, -46.5631, 1.77", "-11.6535, -31.7603, -47.9374, 0.52", "-12.0655, -32.1942, -49.0326, 1.25", "-12.2148, -32.3593, -49.4509, 1.4", "-12.636, -32.9085, -50.7775, 0.29", "-12.9792, -33.4133, -51.9366, 1.62", "-13.1052, -33.6188, -52.4191, 1.84", "-13.3679, -34.1013, -53.5104, 0.52", "-13.6258, -34.6417, -54.683, 1.69", "-13.774, -34.9905, -55.3971, 2.06", "-13.8687, -35.2523, -55.8864, 2.21", "-14.3666, -36.6887, -58.4708, 0.44", "-14.4841, -37.0796, -59.1699, 0.81", "-14.5195, -37.227, -59.418, 0.81", "-14.5933, -37.5356, -59.9085, 0.59", "-14.6366, -37.7222, -60.184, 0.88", "-14.751, -38.3327, -60.9994, 0.37", "-15.0067, -39.8105, -62.7613, 1.4", "-15.0727, -40.1814, -63.2002, 1.92", "-15.2738, -41.2216, -64.5705, 0.22", "-15.3507, -41.5861, -65.0861, 0.22", "-15.4139, -41.835, -65.4489, 0.22", "-15.5927, -42.3959, -66.2645, 1.84", "-15.6388, -42.5118, -66.4578, 2.06", "-16.2398, -43.8642, -69.0162, 0.22", "-16.3465, -44.0674, -69.4473, 0.22", "-16.4404, -44.2129, -69.788, 0.96", "-16.553, -44.3629, -70.1592, 1.18", "-17.3886, -45.3648, -72.744, 0.44", "-17.5388, -45.5338, -73.1645, 1.18", "-17.7383, -45.7389, -73.6544, 1.18", "-18.1995, -46.2096, -74.817, 1.33", "-18.423, -46.4453, -75.3777, 1.47", "-19.0739, -47.1535, -76.9188, 0.29", "-19.4125, -47.5284, -77.6394, 1.4", "-19.5926, -47.7474, -78.0726, 1.62", "-20.293, -48.7437, -80.0939, 0.22", "-20.4244, -48.9521, -80.5095, 0.81", "-20.5784, -49.2077, -81.0124, 0.29", "-20.789, -49.5681, -81.6921, 1.11", "-21.4647, -50.7314, -83.8876, 0.59", "-22.1743, -51.8715, -85.9617, 0.22", "-22.3932, -52.1952, -86.5346, 0.22", "-22.6945, -52.5984, -87.2697, 1.69", "-22.8724, -52.81, -87.6875, 2.14", "-23.6963, -53.6872, -89.4361, 0.22", "-24.0667, -54.0328, -90.1028, 1.92", "-24.2829, -54.2165, -90.4688, 2.21", "-24.5642, -54.447, -90.9575, 2.21", "-25.9201, -55.5542, -93.3221, 0.22", "-26.0482, -55.6609, -93.5467, 0.44", "-26.3731, -55.9529, -94.1082, 0.29", "-26.7847, -56.3568, -94.8413, 1.03", "-26.9096, -56.486, -95.0624, 0.81", "-27.2192, -56.8255, -95.55, 0.29", "-27.5849, -57.2323, -96.0379, 1.11", "-27.7215, -57.3876, -96.2607, 1.33", "-27.8861, -57.5831, -96.5557, 1.33", "-28.9527, -58.8746, -98.516, 0.22", "-29.3375, -59.3438, -99.2645, 1.99", "-29.5051, -59.5419, -99.5887, 2.43", "-30.788, -61.0404, -102.089, 0.22", "-30.96, -61.238, -102.452, 0.59", "-31.0824, -61.3867, -102.72, 0.59", "-31.5401, -61.9547, -103.73, 0.22", "-31.7285, -62.1956, -104.163, 1.25", "-31.978, -62.5433, -104.766, 1.62", "-32.88, -63.8845, -106.907, 0.22", "-33.2215, -64.42, -107.76, 0.22", "-33.3619, -64.6637, -108.125, 0.96", "-33.4449, -64.8316, -108.355, 1.33", "-33.9674, -66.0897, -110.023, 0.22", "-34.0477, -66.3292, -110.343, 0.74", "-34.1119, -66.5784, -110.664, 0.74", "-34.1813, -66.9103, -111.111, 0.22", "-34.3043, -67.619, -112.046, 1.84", "-34.3652, -68.0185, -112.57, 2.14", "-34.5729, -69.5829, -114.563, 0.22", "-34.6064, -69.8536, -114.909, 0.22", "-34.6749, -70.4041, -115.607, 1.55", "-34.7211, -70.742, -116.029, 1.84", "-34.8814, -71.7361, -117.283, 0.22", "-34.9477, -72.0884, -117.733, 0.52", "-35.0591, -72.5604, -118.444, 0.22", "-35.2234, -73.1107, -119.432, 1.03", "-35.2612, -73.2176, -119.642, 1.18", "-35.6503, -74.2097, -121.716, 1.25", "-35.7767, -74.4957, -122.35, 1.62", "-36.3502, -75.7029, -125.053, 0.22", "-36.5329, -76.0583, -125.895, 0.22", "-36.6917, -76.3498, -126.574, 1.47", "-36.9091, -76.7366, -127.465, 1.62", "-37.2565, -77.348, -128.872, 0.22", "-37.3606, -77.5445, -129.353, 0.96", "-37.9089, -78.6579, -132.055, 0.22", "-38.0276, -78.9097, -132.708, 1.18", "-38.2112, -79.278, -133.707, 1.4", "-38.5975, -79.9837, -135.636, 1.03", "-39.205, -80.9944, -138.429, 0.22", "-39.3634, -81.2354, -139.106, 1.47", "-39.6272, -81.5935, -140.144, 1.55", "-39.9344, -81.9709, -141.278, 0.22", "-40.2265, -82.2918, -142.21, 0.22", "-40.3875, -82.4406, -142.633, 1.11", "-40.6664, -82.6584, -143.349, 1.33", "-41.6684, -83.3515, -146.005, 0.22", "-41.8078, -83.4422, -146.38, 1.18", "-41.982, -83.5487, -146.88, 1.18", "-42.3878, -83.7939, -148.091, 0.66", "-43.5312, -84.4682, -151.509, 0.22", "-43.7766, -84.6023, -152.205, 0.22", "-44.1599, -84.7897, -153.219, 1.18", "-44.4903, -84.9388, -154.134, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.7664, -13.4524, 2.41837, 0.59", "-13.7288, -14.0538, 2.79924, 0.59", "-14.5753, -14.2236, 2.93586, 0.66", "-15.2404, -14.2892, 3.05069, 0.81", "-15.6383, -14.2928, 3.12967, 0.81", "-16.4204, -14.2814, 3.31119, 0.81", "-17.4328, -14.2812, 3.62923, 0.96", "-18.0089, -14.2359, 3.85161, 0.66", "-18.7201, -14.1627, 4.17602, 0.37", "-19.4067, -14.0765, 4.54148, 0.37", "-20.2559, -13.9724, 5.07635, 1.18", "-21.2295, -13.8914, 5.8666, 1.69", "-21.5088, -13.9181, 6.16887, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.7664, -13.4524, 2.41837, 1.25", "-12.3914, -14.7597, 1.93294, 1.25", "-13.1192, -16.1047, 1.4722, 0.74", "-13.6445, -16.9829, 1.20078, 0.96", "-14.3415, -18.0382, 0.915699, 1.18", "-14.8984, -18.838, 0.769394, 1.47", "-15.4703, -19.6543, 0.668802, 1.47", "-15.9551, -20.2985, 0.646696, 1.55", "-16.5307, -21.0529, 0.702399, 1.55", "-17.1198, -21.8673, 0.802189, 1.33", "-18.0259, -23.1998, 1.02039, 1.11", "-18.5562, -24.0452, 1.1206, 0.96", "-18.9861, -24.8019, 1.11182, 0.81", "-19.5235, -25.8084, 0.684171, 0.66", "-19.8873, -26.5119, 0.100784, 0.52", "-20.1297, -26.9622, -0.395785, 0.52", "-20.5747, -27.7079, -1.34049, 1.11", "-21.3232, -28.8419, -2.85771, 1.55", "-22.9304, -31.0997, -5.93627, 1.33", "-23.5651, -31.9207, -7.0579, 0.88", "-24.1784, -32.6517, -7.98678, 1.18", "-24.8379, -33.4, -8.76827, 1.84", "-25.2982, -33.8979, -9.10252, 2.21", "-25.8115, -34.4431, -9.25404, 2.36", "-26.2868, -34.9436, -9.25376, 2.5", "-26.9042, -35.5772, -9.23077, 2.28", "-27.7426, -36.4588, -9.20482, 1.92", "-28.7437, -37.5245, -9.23055, 1.18", "-29.4271, -38.247, -9.29601, 0.96", "-30.1251, -38.9682, -9.43037, 0.66", "-31.0341, -39.8868, -9.7267, 0.44", "-32.1721, -41.0161, -10.2854, 1.77", "-32.8703, -41.7045, -10.7252, 2.28", "-33.3655, -42.1988, -11.1101, 2.28", "-33.9768, -42.8393, -11.6575, 2.43", "-34.7, -43.6546, -12.3527, 1.92", "-35.624, -44.793, -13.2741, 0.81", "-36.294, -45.6883, -13.9199, 0.96", "-36.9895, -46.6801, -14.5036, 1.18", "-37.4135, -47.2981, -14.7879, 0.96", "-38.0585, -48.2072, -15.0521, 0.44", "-38.56, -48.8465, -15.1399, 0.96", "-38.8456, -49.1937, -15.156, 1.11", "-39.6374, -50.0858, -15.1296, 0.52", "-40.3132, -50.7731, -15.0332, 0.44", "-41.5074, -51.8216, -14.823, 1.03", "-42.2763, -52.3979, -14.6577, 1.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.3816, -36.5316, 1.00313, 0.81", "-12.5827, -37.4659, -2.3209, 0.81", "-13.2024, -37.8241, -3.7939, 1.18", "-13.5929, -38.0527, -4.66474, 1.25", "-14.2226, -38.4476, -6.11756, 0.66", "-14.4279, -38.5938, -6.61642, 0.52", "-14.8041, -38.9027, -7.57119, 0.66", "-15.0242, -39.0975, -8.0942, 0.88", "-15.2395, -39.5629, -8.97472, 1.11", "-15.3211, -40.1521, -10.1168, 1.25", "-15.3347, -40.376, -10.5794, 1.25", "-15.3424, -40.5875, -11.0293, 0.96", "-15.3437, -40.9373, -11.7746, 0.59", "-15.3678, -41.552, -13.1991, 1.18", "-15.4561, -42.6308, -15.7882, 1.25", "-15.5412, -43.4322, -17.6175, 1.25", "-15.5824, -43.83, -18.476, 1.69", "-15.6127, -44.0999, -19.0037, 1.77", "-15.8038, -45.5939, -21.4104, 0.81", "-15.8898, -46.2536, -22.2733, 1.11", "-15.9335, -46.8249, -22.8709, 0.96", "-16.0064, -47.5311, -23.5026, 0.52", "-16.1781, -48.5132, -24.2751, 0.52", "-16.5762, -50.1918, -25.405, 2.21", "-16.8201, -50.9778, -25.8098, 2.5", "-16.938, -51.2738, -25.9603, 2.5", "-17.3703, -52.1652, -26.4135, 0.66", "-17.7893, -52.869, -26.7829, 1.25", "-18.0321, -53.2237, -26.9614, 1.47", "-18.3292, -53.5952, -27.1283, 1.47", "-18.8825, -54.2549, -27.381, 1.33", "-19.2244, -54.6298, -27.5266, 0.74", "-19.7568, -55.1816, -27.7421, 0.29", "-20.0229, -55.4581, -27.8602, 0.22", "-20.3709, -55.845, -28.0267, 0.22", "-20.7766, -56.3737, -28.23, 0.96", "-21.0018, -56.736, -28.3438, 1.18", "-21.1648, -57.0864, -28.4611, 0.96", "-21.5172, -58.1192, -28.8579, 0.22", "-21.6206, -58.4878, -29.0242, 0.22", "-21.7782, -59.0758, -29.3481, 0.88", "-21.867, -59.4247, -29.5625, 1.11", "-22.1101, -60.3381, -30.1369, 0.22", "-22.4251, -61.2762, -30.8346, 1.77", "-22.5825, -61.642, -31.1947, 2.28", "-22.875, -62.2007, -31.9142, 2.28", "-23.422, -63.0352, -33.2471, 0.15", "-23.6622, -63.369, -33.8678, 0.74", "-24.2663, -64.1825, -35.5585, 0.44", "-24.9548, -65.183, -37.7015, 1.69", "-25.4049, -65.8775, -39.2403, 2.28", "-25.6313, -66.2469, -40.0663, 2.58", "-26.1653, -67.1297, -42.0305, 0.52", "-26.4961, -67.7314, -43.2712, 0.29", "-26.9899, -68.7645, -45.0996, 2.21", "-27.3771, -69.6336, -46.438, 2.58", "-28.0535, -71.1381, -48.5152, 0.29", "-28.262, -71.59, -49.0778, 0.22", "-28.4229, -71.8964, -49.4202, 0.22", "-28.7085, -72.3877, -49.913, 1.33", "-28.95, -72.7666, -50.2355, 1.55", "-30.0452, -74.4393, -51.4688, 0.22", "-30.3393, -74.8678, -51.7646, 0.96", "-30.5302, -75.1268, -51.9667, 1.25", "-30.7512, -75.397, -52.2218, 1.25", "-31.5365, -76.2774, -53.1575, 0.22", "-32.0655, -76.8297, -53.7716, 0.88", "-32.256, -77.02, -53.9943, 1.11", "-32.6423, -77.4187, -54.4695, 1.11", "-33.8705, -78.7684, -55.9801, 0.22", "-34.2974, -79.2631, -56.4921, 1.77", "-34.5606, -79.5828, -56.8005, 2.28", "-34.9038, -80.0262, -57.1834, 2.14", "-35.8473, -81.3143, -58.2231, 0.22", "-36.2861, -81.9697, -58.6901, 1.03", "-36.4959, -82.3135, -58.9234, 1.33", "-37.1917, -83.4353, -59.7627, 0.22", "-37.4469, -83.8335, -60.0828, 0.96", "-37.7258, -84.2397, -60.4426, 1.25", "-37.893, -84.471, -60.6654, 1.33", "-38.9673, -85.9231, -62.1537, 0.15", "-39.4102, -86.5419, -62.8087, 1.18", "-39.7073, -86.9737, -63.2649, 1.55", "-40.4469, -88.1172, -64.4249, 0.22", "-40.637, -88.4302, -64.717, 0.96", "-40.8891, -88.8613, -65.0972, 0.96", "-41.39, -89.8075, -65.8492, 0.22", "-41.5348, -90.1319, -66.0785, 0.66", "-41.9055, -91.0369, -66.7125, 0.22", "-42.1188, -91.5978, -67.0864, 1.4", "-42.3122, -92.1205, -67.4434, 1.84", "-42.4311, -92.4272, -67.6582, 1.62", "-43.0335, -93.8597, -68.6633, 0.15", "-43.4687, -94.8682, -69.3947, 1.03", "-43.626, -95.2085, -69.6721, 1.55", "-43.8114, -95.6007, -70.0026, 1.55", "-44.4253, -96.8823, -71.0952, 0.22", "-44.5917, -97.2301, -71.4089, 0.88", "-44.8004, -97.6292, -71.7831, 0.88", "-45.5846, -99.1154, -73.0786, 0.22", "-45.8792, -99.6673, -73.5284, 1.18", "-46.0859, -100.046, -73.8111, 1.33", "-46.7954, -101.344, -74.7463, 0.22", "-47.1181, -101.929, -75.1493, 0.22", "-47.5482, -102.648, -75.6286, 0.22", "-47.9449, -103.308, -76.0192, 0.22", "-48.4877, -104.2, -76.5549, 1.55", "-48.8967, -104.893, -76.9752, 1.92", "-49.1086, -105.289, -77.2072, 1.77", "-49.876, -106.92, -78.2122, 0.22", "-50.1507, -107.529, -78.6091, 0.96", "-50.3, -107.885, -78.8448, 1.11", "-50.7759, -109.12, -79.6788, 0.22", "-51.063, -109.912, -80.2029, 0.22", "-51.3034, -110.62, -80.6904, 1.03", "-51.4375, -111.048, -80.9887, 1.33", "-51.5907, -111.517, -81.3353, 1.33", "-52.1433, -113.085, -82.51, 0.15", "-52.3873, -113.749, -82.9935, 0.15", "-52.75, -114.676, -83.6507, 1.55", "-52.9137, -115.097, -83.9229, 1.84", "-53.0866, -115.537, -84.184, 1.77", "-53.5091, -116.534, -84.709, 0.22", "-53.7869, -117.126, -84.9657, 0.22", "-54.082, -117.695, -85.1893, 0.96", "-54.2804, -118.049, -85.3021, 1.11", "-54.8908, -119.04, -85.5895, 0.22", "-55.1958, -119.46, -85.7277, 0.22", "-55.5765, -119.891, -85.8917, 0.22", "-55.8822, -120.181, -86.0212, 0.96", "-56.0895, -120.35, -86.1027, 1.25", "-56.5313, -120.661, -86.263, 1.25", "-57.6539, -121.363, -86.7093, 0.15", "-58.2841, -121.758, -87.0146, 0.15", "-58.522, -121.918, -87.1632, 0.44", "-58.7706, -122.098, -87.3555, 0.44", "-59.2558, -122.46, -87.7708, 0.15", "-60.0108, -123.088, -88.5229, 1.33", "-60.34, -123.388, -88.9218, 1.4", "-61.0416, -124.162, -90.0902, 0.22", "-61.3695, -124.587, -90.7738, 0.44", "-61.5399, -124.852, -91.197, 0.22", "-61.8423, -125.409, -92.1145, 1.33", "-62.1009, -125.98, -93.0681, 1.62", "-62.5834, -127.221, -95.1316, 0.22", "-62.721, -127.655, -95.8357, 0.22", "-62.8323, -128.078, -96.5056, 0.96", "-62.9772, -128.868, -97.7032, 1.18", "-63.1246, -130.011, -99.355, 0.22", "-63.1427, -130.321, -99.7478, 0.22", "-63.1453, -130.526, -99.9758, 0.66", "-63.1304, -131.588, -101.059, 0.22", "-63.0907, -132.511, -101.924, 2.06", "-63.0799, -132.762, -102.143, 2.28", "-63.0002, -134.268, -103.396, 0.22", "-62.9748, -134.686, -103.751, 0.22", "-62.9301, -135.57, -104.534, 1.33", "-62.919, -135.88, -104.823, 1.62", "-62.93, -137.682, -106.536, 0.37", "-62.9592, -138.288, -107.111, 0.22", "-63.0198, -138.887, -107.684, 0.22", "-63.1603, -139.915, -108.664, 1.03", "-63.3154, -140.627, -109.349, 1.4", "-63.6756, -141.776, -110.456, 0.22", "-64.0084, -142.593, -111.209, 1.25", "-64.2673, -143.129, -111.698, 1.55", "-64.3776, -143.322, -111.862, 1.55", "-65.3486, -144.821, -112.997, 0.29", "-65.68, -145.27, -113.319, 0.52", "-65.8394, -145.453, -113.451, 0.52", "-66.2828, -145.928, -113.76, 0.22", "-66.8989, -146.572, -114.098, 0.22", "-67.363, -147.04, -114.304, 1.25", "-67.7241, -147.386, -114.416, 1.4", "-68.1903, -147.813, -114.553, 1.11", "-68.9201, -148.423, -114.794, 0.15", "-69.506, -148.893, -115.061, 0.15", "-70.1296, -149.404, -115.43, 0.88", "-70.4425, -149.646, -115.63, 1.11", "-70.7017, -149.835, -115.788, 1.11", "-71.6779, -150.516, -116.347, 0.22", "-72.6675, -151.193, -116.913, 0.22", "-73.057, -151.463, -117.209, 0.22", "-73.8475, -152.038, -117.892, 0.22", "-74.4731, -152.527, -118.483, 1.25", "-74.8622, -152.866, -118.874, 1.55", "-75.3571, -153.339, -119.411, 1.55", "-77.1358, -155.074, -121.382, 0.22", "-77.3732, -155.308, -121.679, 0.66", "-77.5833, -155.501, -121.988, 0.66", "-78.0056, -155.851, -122.638, 0.22", "-78.4251, -156.156, -123.247, 0.22", "-78.7323, -156.351, -123.625, 0.66", "-79.1991, -156.635, -124.066, 0.74", "-80.4511, -157.418, -125.165, 0.22", "-80.8932, -157.707, -125.524, 0.44", "-81.1768, -157.907, -125.736, 0.44", "-81.7145, -158.377, -126.222, 0.22", "-82.1517, -158.808, -126.718, 1.33", "-82.4085, -159.075, -127.057, 1.69", "-82.5212, -159.181, -127.217, 1.92", "-82.8935, -159.5, -127.821, 1.69", "-84.0596, -160.498, -129.925, 0.59", "-84.6561, -161.019, -131.147, 0.96", "-85.1168, -161.45, -132.167, 0.44", "-85.5, -161.838, -133.054, 0.29", "-85.8836, -162.261, -133.989, 0.29", "-86.0815, -162.511, -134.507, 0.29", "-86.619, -163.24, -135.845, 0.88", "-86.8851, -163.574, -136.471, 1.55", "-86.9861, -163.682, -136.682, 2.06", "-87.9683, -164.582, -138.563, 1.69", "-88.0434, -164.624, -138.694, 1.84", "-89.0547, -165.032, -140.382, 0.37", "-89.8601, -165.302, -141.684, 0.22", "-90.4905, -165.499, -142.748, 1.84", "-91.0135, -165.667, -143.637, 2.06", "-92.9723, -166.287, -147.132, 0.22", "-93.3226, -166.397, -147.771, 0.22", "-93.7808, -166.553, -148.654, 1.55", "-94.523, -166.851, -150.119, 1.69", "-94.7432, -166.959, -150.616, 1.69", "-96.2874, -167.874, -154.376, 0.52", "-96.5131, -168.037, -154.954, 1.92", "-96.8103, -168.25, -155.719, 1.92", "-98.3721, -169.327, -159.601, 1.92", "-100.255, -170.608, -164.005, 0.66", "-100.496, -170.779, -164.574, 0.66", "-100.845, -171.065, -165.42, 0.29", "-101.104, -171.296, -166.076, 0.29", "-101.328, -171.507, -166.64, 1.11", "-101.515, -171.722, -167.111, 1.62", "-102.882, -173.08, -170.172, 0.22", "-103.009, -173.189, -170.45, 0.22", "-103.315, -173.433, -171.094, 1.47", "-103.75, -173.765, -172.012, 1.77", "-104.018, -173.947, -172.586, 1.77", "-105.853, -175.086, -176.345, 0.22", "-106.295, -175.338, -177.213, 1.33", "-106.669, -175.56, -178.039, 1.62", "-107.196, -175.896, -179.303, 1.62", "-108.53, -176.778, -182.754, 0.22", "-108.734, -176.917, -183.349, 1.18", "-109.218, -177.261, -184.819, 1.33", "-110.227, -178.016, -187.914, 0.15", "-110.473, -178.208, -188.642, 1.25", "-111.231, -178.809, -190.71, 1.62", "-112.822, -179.983, -194.607, 0.22", "-113.432, -180.392, -195.978, 0.22", "-113.823, -180.641, -196.763, 0.44", "-114.281, -180.936, -197.64, 0.88", "-114.491, -181.085, -198.07, 1.47", "-114.993, -181.552, -199.285, 1.62", "-116.054, -182.758, -202.313, 0.22", "-116.144, -182.876, -202.62, 1.03", "-116.667, -183.594, -204.518, 1.11", "-116.934, -183.982, -205.512, 0.96", "-117.809, -185.365, -208.902, 0.22", "-117.92, -185.525, -209.287, 0.81", "-118.151, -185.828, -209.984, 0.81", "-118.598, -186.358, -211.159, 0.22", "-119.099, -186.909, -212.315, 1.47", "-119.689, -187.533, -213.538, 1.62", "-121.277, -189.192, -216.44, 0.15", "-121.659, -189.587, -217.121, 0.15", "-122.034, -190.001, -217.785, 0.96", "-122.232, -190.231, -218.138, 0.96", "-122.528, -190.599, -218.646, 0.22", "-122.769, -190.937, -219.021, 1.11", "-123.138, -191.662, -219.583, 1.11", "-123.933, -193.073, -220.942, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-11.3816, -36.5316, 1.00313, 2.8", "-11.2201, -37.0467, 1.17722, 2.8", "-10.7036, -38.6946, 1.73418, 1.84", "-10.1879, -40.3399, 2.29022, 1.03", "-9.94144, -41.1264, 2.55605, 1.03", "-9.62398, -42.1391, 2.89831, 1.18", "-9.34261, -43.0367, 3.2017, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.66488, 13.4048, -0.253335, 0.81", "8.63504, 13.6586, 0.30678, 0.81", "9.18381, 13.8285, 0.70522, 0.37", "10.0438, 14.1236, 1.36895, 0.88", "10.7795, 14.4064, 1.9441, 1.25", "11.7688, 14.8295, 2.7127, 1.25", "12.2324, 15.05, 3.06093, 1.11", "13.5272, 15.8063, 4.06882, 1.11", "13.9087, 16.0576, 4.3399, 1.11", "14.3762, 16.3828, 4.60369, 0.96", "15.3957, 17.0896, 4.99782, 0.66", "16.1919, 17.6057, 5.18833, 0.74", "17.0353, 18.0871, 5.30098, 0.88", "17.9728, 18.5312, 5.3204, 0.96", "18.8926, 18.8685, 5.25499, 0.74", "19.9075, 19.128, 5.09527, 1.62", "20.8338, 19.2674, 4.87117, 1.84", "21.5932, 19.3103, 4.64479, 1.69", "22.4632, 19.315, 4.33679, 1.62", "23.8281, 19.302, 3.8492, 0.88", "24.5641, 19.3396, 3.60123, 0.74", "25.477, 19.4471, 3.33397, 0.74", "26.4251, 19.6408, 3.10702, 0.96", "27.2399, 19.8785, 2.98617, 0.81", "28.308, 20.2803, 2.94421, 0.74", "29.7141, 20.8788, 3.15558, 1.25", "30.3178, 21.1519, 3.34558, 1.47", "30.9204, 21.4259, 3.69766, 1.77", "31.3743, 21.64, 4.06285, 1.77", "31.9645, 21.9043, 4.67576, 1.11", "33.1833, 22.3487, 6.08818, 1.03", "33.923, 22.5606, 6.9898, 1.18", "35.4267, 22.9248, 8.82764, 1.4", "35.86, 23.0066, 9.34863, 1.55", "37.3322, 23.1633, 11.0103, 1.4", "38.2822, 23.1863, 11.9584, 1.84", "38.7658, 23.16, 12.3423, 2.43", "39.3143, 23.1, 12.6686, 2.43", "40.0075, 22.9965, 12.9489, 2.21", "41.8389, 22.6947, 13.5234, 0.96", "42.7947, 22.5697, 13.7434, 0.66", "43.4906, 22.5252, 13.8935, 0.66", "44.2575, 22.5074, 14.0608, 0.66", "45.0196, 22.5321, 14.2115, 0.66", "46.0609, 22.6448, 14.4065, 0.66", "47.1702, 22.8802, 14.5845, 1.03", "48.1169, 23.1761, 14.7436, 0.59", "49.1327, 23.5623, 14.9016, 0.59", "49.8288, 23.8743, 15.0018, 0.96", "50.7184, 24.3352, 15.1187, 0.66", "51.5413, 24.8374, 15.1963, 0.66", "52.6311, 25.586, 15.2639, 1.33", "52.8321, 25.7406, 15.2729, 1.55", "53.1959, 26.0537, 15.2743, 1.69", "53.6339, 26.4535, 15.271, 1.4", "54.179, 26.9746, 15.2411, 1.11", "54.5488, 27.3318, 15.2293, 1.11", "64.1405, 31.1556, 20.6748, 1.11", "73.8753, 34.459, 26.2505, 1.11", "83.7287, 38.5542, 30.9648, 1.11", "92.7944, 43.0138, 36.7498, 1.11", "102.54, 46.0772, 42.46, 1.11", "112.351, 49.1202, 48.0708, 1.11", "122.109, 53.7337, 52.4364, 1.11", "132.088, 58.1362, 56.5437, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.66488, 13.4048, -0.253335, 2.95", "7.70229, 14.8481, -0.252753, 2.95", "7.73737, 16.2015, -0.252206, 2.95", "7.76533, 17.2802, -0.251771, 2.95", "7.78223, 17.9322, -0.251508, 2.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.4703, 35.0492, -0.918402, 0.37", "30.5123, 47.7112, -0.918402, 0.37", "38.5543, 60.3732, -0.918402, 0.37" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-21.5088, -13.9181, 6.16887, 0.59", "-21.4701, -15.2864, 6.50291, 0.59", "-21.4543, -16.2305, 6.8617, 0.52", "-21.457, -16.9223, 7.16854, 0.88", "-21.4727, -17.6764, 7.52833, 1.03", "-21.4845, -18.2448, 7.79952, 1.03", "-21.5015, -19.0607, 8.18881, 0.52", "-21.5602, -20.1828, 8.83369, 1.11", "-21.5892, -20.5802, 9.11128, 1.4", "-21.6272, -21.0182, 9.46152, 1.4", "-20.9432, -31.1746, 14.8158, 1.4", "-20.657, -40.5981, 21.5269, 1.4", "-20.4032, -49.5412, 28.9337, 1.4" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-21.5088, -13.9181, 6.16887, 0.29", "-22.9775, -13.5998, 6.05841, 0.29", "-24.2327, -13.3277, 5.96401, 0.59", "-24.6763, -13.2316, 5.93064, 0.81", "-25.2679, -13.1034, 5.88615, 0.81", "-26.1912, -12.9033, 5.81671, 0.29", "-26.7477, -12.7826, 5.77485, 0.59", "-37.1494, -8.34362, 6.51621, 0.59", "-46.3017, -2.3246, 9.11992, 0.59", "-55.3931, 4.14286, 10.3838, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-9.34261, -43.0367, 3.2017, 0.59", "-8.61135, -44.0702, 4.20581, 0.59", "-7.95625, -45.0427, 5.11385, 0.44", "-7.68299, -45.4049, 5.46591, 0.44", "-7.09113, -46.1193, 6.20228, 0.81", "-6.64365, -46.6152, 6.72321, 1.25", "-6.30966, -46.952, 7.0973, 1.47", "-5.96498, -47.2619, 7.48032, 1.47", "-4.57111, -48.4796, 8.99392, 0.74", "-3.10407, -49.6281, 10.5255, 0.37", "-2.69247, -49.909, 10.926, 0.37", "-2.10527, -50.2643, 11.4792, 0.81", "-1.54178, -50.5782, 12.0044, 0.96", "5.40727, -55.0235, 18.6087, 0.96", "11.7014, -61.237, 24.2424, 0.96", "19.679, -65.4569, 29.7485, 0.96", "27.4446, -69.8303, 35.4265, 0.96", "35.9873, -74.4068, 39.6102, 0.96", "45.5432, -76.9031, 43.4819, 0.96", "54.7601, -78.6016, 48.4713, 0.96", "64.1115, -81.5372, 52.5109, 0.96", "73.8898, -84.9778, 54.6541, 0.96", "83.376, -87.7564, 58.4922, 0.96" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-9.34261, -43.0367, 3.2017, 1.11", "-9.73603, -43.9765, 3.1021, 1.11", "-10.167, -45.0867, 3.15619, 1.11", "-10.6537, -46.4685, 3.37231, 1.11", "-10.9105, -47.2891, 3.57564, 0.96", "-11.0824, -47.8842, 3.76654, 0.96", "-11.4847, -49.4216, 4.37844, 1.11", "-11.645, -50.2066, 4.79504, 1.25", "-11.7484, -50.9104, 5.25222, 1.25", "-11.83, -51.7365, 5.85917, 1.03", "-11.8882, -52.5215, 6.42577, 1.03", "-11.9789, -53.5559, 7.0814, 1.18", "-12.041, -54.0893, 7.33246, 1.77", "-12.1353, -54.6075, 7.51419, 2.28", "-12.2717, -55.1586, 7.64526, 2.14", "-12.5378, -56.0407, 7.75945, 1.62", "-12.8382, -56.9583, 7.8117, 1.03", "-13.1984, -57.9874, 7.8234, 0.74", "-13.5816, -59.0343, 7.8445, 0.96", "-14.0356, -60.2611, 7.89024, 1.25", "-14.5123, -61.5161, 7.99511, 1.62", "-14.7647, -62.1906, 8.08133, 1.55", "-14.9678, -62.7336, 8.17256, 1.69", "-15.4668, -63.9869, 8.431, 1.18", "-15.8404, -64.8687, 8.65613, 1.03", "-16.2152, -65.6739, 8.89646, 1.33", "-16.515, -66.2763, 9.08999, 1.62", "-16.7657, -66.7622, 9.23928, 1.62", "-17.0996, -67.4406, 9.43422, 1.77", "-17.3187, -67.9474, 9.55858, 1.77", "-17.6141, -68.752, 9.75609, 1.55", "-17.8551, -69.499, 9.95056, 1.25", "-18.0939, -70.443, 10.171, 0.81", "-18.3116, -71.6961, 10.4049, 0.81", "-18.4343, -72.6637, 10.5827, 1.03", "-18.5504, -73.8298, 10.822, 1.03", "-18.591, -74.5181, 10.9853, 1.18", "-18.6291, -75.9229, 11.3569, 0.29", "-18.6342, -76.6925, 11.568, 0.37", "-18.6612, -77.9686, 11.9021, 0.37", "-18.6879, -78.8613, 12.1469, 0.29", "-18.7074, -79.4887, 12.3152, 0.29", "-18.7392, -80.0986, 12.5106, 0.29", "-18.8221, -80.6479, 12.7742, 0.29", "-18.9525, -81.331, 13.1079, 0.22", "-20.0035, -90.3325, 16.6743, 0.22", "-22.1853, -98.9525, 20.7408, 0.22", "-24.1787, -107.414, 25.2444, 0.22", "-26.5554, -114.626, 31.5902, 0.22", "-27.9281, -122.187, 37.7776, 0.22", "-30.0806, -129.607, 43.935, 0.22", "-32.2324, -138.178, 48.1305, 0.22", "-35.4701, -146.029, 53.1146, 0.22", "-39.619, -153.469, 58.1258, 0.22", "-41.8531, -161.002, 64.0994, 0.22", "-43.0999, -167.99, 71.0155, 0.22", "-45.1416, -173.568, 79.0705, 0.22", "-45.107, -179.877, 86.7744, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.78223, 17.9322, -0.251508, 0.66", "7.14415, 18.7072, -0.0663916, 0.66", "6.77612, 19.2534, 0.0543485, 0.29", "6.62517, 19.5099, 0.110358, 0.44", "6.20129, 20.3307, 0.285005, 0.44", "5.75687, 21.2667, 0.482629, 0.81", "5.5813, 21.6573, 0.565285, 0.96", "5.37528, 22.1859, 0.676782, 0.81", "5.23314, 22.5265, 0.756878, 1.03", "4.97477, 23.0312, 0.886791, 1.18", "4.6087, 23.5535, 1.04532, 0.66", "3.97439, 24.134, 1.27729, 0.22", "3.49908, 24.4204, 1.43138, 0.22", "2.98099, 24.6146, 1.584, 0.22", "2.31149, 24.7898, 1.7712, 0.66", "1.87109, 24.8744, 1.892, 0.81", "1.51652, 24.9348, 1.98569, 0.66", "1.00443, 25.0305, 2.11489, 0.52", "0.206057, 25.2388, 2.31475, 0.44", "-0.513815, 25.4723, 2.47484, 0.52", "-1.04979, 25.6751, 2.56503, 0.88", "-1.56347, 25.8992, 2.61096, 1.11", "-1.97506, 26.0991, 2.62311, 1.11", "-2.41448, 26.3335, 2.59389, 0.96", "-3.08623, 26.7165, 2.48791, 0.37", "-3.83538, 27.172, 2.31068, 0.29", "-4.45034, 27.5744, 2.14097, 0.88", "-4.75076, 27.7904, 2.05886, 1.03", "-5.30878, 28.2321, 1.89157, 1.03", "-5.4666, 28.372, 1.84103, 1.03", "-6.13363, 29.0522, 1.64035, 0.29", "-6.43248, 29.4042, 1.53499, 0.29", "-6.91163, 30.0091, 1.34143, 0.96", "-7.24492, 30.4277, 1.19557, 1.11", "-7.43673, 30.6659, 1.11603, 1.11", "-7.72196, 31.0054, 0.997353, 0.66", "-8.37963, 31.769, 0.732905, 0.29", "-8.78048, 32.2067, 0.573416, 0.29", "-9.2387, 32.6821, 0.423336, 0.66", "-9.53112, 32.9656, 0.344465, 0.88", "-9.79864, 33.2113, 0.28175, 1.03", "-10.2169, 33.5842, 0.197218, 0.74", "-10.7499, 34.046, 0.128254, 0.44", "-11.3932, 34.6018, 0.0548435, 0.22", "-12.0037, 35.129, -0.0150631, 0.44", "-12.3185, 35.3985, -0.0444818, 0.59", "-12.5585, 35.6169, -0.0306006, 0.59", "-13.0254, 36.0861, 0.104119, 0.29", "-13.4832, 36.6158, 0.372645, 0.59", "-13.7357, 36.9465, 0.596422, 0.59", "-13.9095, 37.1748, 0.797942, 0.59", "-14.6878, 38.1191, 1.78574, 1.69", "-15.0594, 38.5511, 2.30413, 2.14", "-15.2859, 38.8095, 2.63818, 2.36", "-15.4614, 39.001, 2.90206, 2.36", "-16.2565, 39.8031, 4.04735, 0.29", "-16.7242, 40.2281, 4.67042, 0.22", "-17.3773, 40.7578, 5.45828, 0.74", "-17.6576, 40.9756, 5.78393, 0.96", "-17.8206, 41.1055, 5.97853, 0.96", "-18.3859, 41.5891, 6.65106, 0.22", "-18.9147, 42.1056, 7.28531, 0.81", "-19.008, 42.2032, 7.39225, 1.18", "-19.3504, 42.552, 7.76138, 1.18", "-19.4855, 42.6907, 7.9059, 1.18", "-19.9038, 43.1348, 8.32931, 0.15", "-20.088, 43.3538, 8.50103, 0.37", "-20.2567, 43.5962, 8.64185, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.78223, 17.9322, -0.251508, 2.8", "8.78548, 19.4317, 0.0661631, 2.8", "9.41321, 20.3699, 0.264928, 2.8", "9.94913, 21.1709, 0.434624, 2.95", "10.5303, 22.0394, 0.618628, 3.68", "10.9303, 22.6373, 0.745304, 3.9", "11.3099, 23.2046, 0.865475, 4.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-20.4032, -49.5412, 28.9337, 0.66", "-20.1389, -58.554, 33.922, 0.66", "-18.1767, -67.3895, 38.9046, 0.66", "-18.1058, -75.4139, 45.5151, 0.66", "-19.0576, -82.7562, 52.883, 0.66", "-20.5062, -89.7423, 60.5428, 0.66", "-21.2021, -97.5762, 67.3598, 0.66", "-22.6527, -103.985, 75.5577, 0.66", "-23.4463, -111.076, 83.2127, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-20.4032, -49.5412, 28.9337, 0.59", "-20.0107, -59.7929, 34.4523, 0.66", "-20.0929, -70.2196, 39.5905, 0.66", "-21.4488, -80.9283, 43.7592, 0.66", "-23.9524, -91.4331, 47.9266, 0.66", "-25.1725, -102.757, 49.3433, 0.66", "-24.3922, -113.749, 52.8527, 0.66", "-24.093, -124.715, 56.5046, 0.66", "-25.3396, -135.754, 59.5822, 0.66", "-25.3756, -146.768, 63.064, 0.66", "-24.2622, -157.494, 67.3464, 0.66", "-23.6067, -168.717, 69.9001, 0.66", "-21.3722, -179.293, 74.1906, 0.66", "-18.8908, -190.454, 75.8074, 0.66", "-18.981, -201.915, 76.0959, 0.66", "-17.2875, -213.248, 77.2169, 0.66", "-17.0818, -224.687, 78.1512, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-55.3931, 4.14286, 10.3838, 0.59", "-63.7765, 8.18169, 10.2406, 0.59", "-71.9582, 12.4132, 9.08967, 0.59", "-80.5815, 15.8967, 9.98854, 0.59", "-89.3205, 19.1967, 10.0713, 0.59", "-96.9433, 24.4071, 10.7449, 0.59", "-104.786, 29.3354, 10.7282, 0.59", "-111.065, 35.9615, 11.6403, 0.59", "-116.659, 43.158, 11.8292, 0.59", "-120.614, 51.282, 11.6888, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-55.3931, 4.14286, 10.3838, 0.59", "-64.7922, 9.3361, 12.0382, 0.59", "-74.458, 14.2795, 12.2378, 0.59", "-84.6487, 18.0645, 11.4527, 0.59", "-94.8395, 21.4, 9.46649, 0.59", "-104.154, 25.9365, 6.29109, 0.59", "-113.825, 29.5786, 2.89646, 0.59", "-122.804, 33.5898, -1.67834, 0.59", "-132.393, 35.466, -6.58418, 0.59", "-142.121, 36.8708, -11.4076, 0.59", "-152.337, 37.7388, -15.3033, 0.59", "-162.517, 36.7178, -19.3252, 0.59", "-172.311, 36.0841, -24.2677, 0.59", "-182.364, 36.2219, -28.6807, 0.59", "-192.935, 35.6411, -31.6388, 0.59", "-203.466, 34.1095, -34.4055, 0.59", "-214.237, 34.3816, -36.5464, 0.59", "-225.134, 34.0508, -37.9626, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "11.3099, 23.2046, 0.865475, 2.36", "12.0551, 23.9875, 2.93039, 2.36", "12.4412, 24.4766, 4.57319, 1.99", "12.5975, 24.7268, 5.50323, 1.84", "12.9222, 25.4916, 8.49446, 1.55", "13.0886, 26.2789, 11.7494, 2.06", "13.0688, 27.1107, 15.1981, 2.43", "12.7635, 27.5983, 17.7118, 2.58", "12.5988, 27.7181, 18.5209, 2.36", "12.3006, 27.8449, 19.6354, 2.21", "11.7137, 28.0107, 21.3379, 2.06", "11.2084, 28.141, 22.6518, 1.25", "9.94031, 28.59, 26.109, 1.55", "9.22065, 29.006, 28.3725, 1.18", "8.91899, 29.2931, 29.685, 1.47", "8.74083, 29.6253, 30.9421, 2.14", "8.69835, 30.0154, 32.0984, 1.84", "8.84164, 30.5608, 33.3145, 1.47", "9.26939, 31.3956, 34.4105, 0.88", "9.94068, 32.4296, 35.3354, 0.52", "10.3402, 32.9702, 35.7023, 0.22", "10.847, 33.5667, 36.0466, 0.22", "11.2955, 34.0502, 36.2759, 0.59", "11.5803, 34.3233, 36.3895, 0.66", "12.0978, 34.8136, 36.5788, 0.22", "12.58, 35.4523, 36.7035, 0.44", "11.615, 37.9972, 48.9773, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.3099, 23.2046, 0.865475, 0.96", "10.382, 25.7819, -1.21589, 0.96", "10.1369, 26.4987, -1.82569, 1.33", "10.0171, 26.8718, -2.14317, 1.55", "9.91218, 27.1987, -2.42139, 1.77", "9.75152, 27.6991, -2.84723, 1.92", "9.51448, 28.4375, -3.47557, 0.96", "9.25583, 29.5811, -4.27855, 1.11", "9.20387, 29.7983, -4.44704, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.615, 37.9972, 48.9773, 0.44", "10.9883, 41.2782, 58.1676, 0.44", "12.0896, 45.7938, 66.6977, 0.44", "15.2904, 50.9584, 74.209, 0.44", "20.5452, 54.9842, 81.3141, 0.44", "24.7083, 59.2877, 88.9502, 0.44", "27.2973, 62.7865, 97.6778, 0.44", "31.0951, 66.4111, 105.882, 0.44", "35.0155, 69.9316, 114.079, 0.44", "38.2272, 74.7493, 121.838, 0.44", "41.674, 79.3422, 129.647, 0.44", "44.5039, 85.7682, 136.162, 0.44", "49.0241, 90.9277, 142.95, 0.44", "54.8832, 95.217, 149.37, 0.44", "59.8607, 100.291, 155.901, 0.44", "63.7583, 106.097, 162.497, 0.44", "67.4222, 112.015, 169.118, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.615, 37.9972, 48.9773, 0.44", "11.2195, 41.6118, 59.9327, 0.44", "9.65813, 45.5528, 70.6584, 0.44", "8.76482, 48.9914, 81.6486, 0.44", "6.30599, 51.2538, 92.7428, 0.44", "1.97589, 53.0246, 103.356, 0.44", "-0.198353, 55.0223, 114.566, 0.44", "-1.01325, 57.1448, 125.928, 0.44", "-1.14573, 60.0022, 137.136, 0.44", "-3.20062, 61.0963, 148.507, 0.44", "-6.89512, 61.6126, 159.505, 0.44", "-8.88918, 62.5468, 170.902, 0.44", "-9.91904, 63.5808, 182.417, 0.44", "-10.5116, 64.8653, 193.934, 0.44", "-11.4138, 67.6703, 205.122, 0.44", "-12.8938, 71.1795, 216.025, 0.44", "-15.2619, 76.8487, 225.693, 0.44", "-18.9373, 82.6024, 234.891, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "9.20387, 29.7983, -4.44704, 0.66", "10.0513, 29.4421, -5.86049, 0.66", "11.4261, 28.9369, -7.75319, 0.88", "12.5894, 28.6199, -9.19144, 1.11", "13.5378, 28.4423, -10.2762, 1.25", "14.0013, 28.3896, -10.7827, 1.47", "14.7583, 28.3607, -11.5856, 1.18", "15.3925, 28.4304, -12.1393, 0.66", "16.5447, 28.9674, -12.9487, 0.52", "17.0085, 29.3347, -13.2495, 0.66", "17.3857, 29.6776, -13.5057, 0.66", "17.8534, 30.1188, -13.8688, 0.37", "18.5953, 30.7383, -14.4357, 0.37", "19.2383, 31.0908, -14.88, 1.18", "19.9572, 31.2735, -15.2578, 1.77", "20.9823, 31.3826, -15.7302, 1.92", "21.5976, 31.3964, -15.9757, 1.69", "22.6567, 31.3762, -16.336, 0.66", "23.8443, 31.3701, -16.7176, 0.52", "24.7162, 31.4102, -17.0311, 0.37", "25.4366, 31.4996, -17.318, 0.37", "26.3648, 31.6982, -17.7404, 0.29", "26.9715, 31.8834, -18.0757, 0.29", "28.1975, 32.4088, -18.8724, 0.59", "28.8859, 32.8057, -19.4466, 1.55", "29.2102, 33.012, -19.7678, 1.77", "29.8237, 33.3789, -20.4067, 1.92", "30.167, 33.5542, -20.7648, 2.06", "30.4187, 33.6455, -21.0207, 2.06", "32.3919, 34.1129, -23.0555, 0.29", "32.844, 34.1933, -23.5272, 0.29", "33.5743, 34.2974, -24.2894, 0.29", "34.0751, 34.356, -24.7968, 0.29", "35.5353, 34.511, -26.2853, 1.18", "36.7066, 34.6587, -27.5062, 1.47", "37.1193, 34.7547, -27.9922, 1.69", "37.4196, 34.8549, -28.3817, 1.92", "37.6189, 34.9231, -28.6556, 2.14", "37.9198, 35.009, -29.057, 2.14", "38.5611, 35.1266, -29.8604, 2.14", "40.435, 35.292, -32.0522, 1.03", "41.4689, 35.3306, -33.2647, 0.29", "42.503, 35.329, -34.4921, 0.52", "43.0486, 35.3111, -35.1167, 0.81", "43.5685, 35.2791, -35.7034, 0.81", "44.1338, 35.2307, -36.3164, 0.52", "44.8725, 35.181, -37.0852, 0.74", "45.5851, 35.2058, -37.8527, 0.81", "46.2932, 35.3177, -38.6391, 1.69", "47.3394, 35.5744, -39.7511, 2.06", "47.872, 35.7244, -40.2665, 2.43", "49.1958, 36.0895, -41.4132, 1.11", "50.1007, 36.3153, -42.0767, 0.96", "50.9818, 36.5386, -42.6237, 1.03", "52.2582, 36.8892, -43.3374, 0.29", "53.0456, 37.1206, -43.7124, 0.37", "53.7342, 37.346, -44.0107, 0.37", "54.3852, 37.598, -44.2771, 0.22", "54.892, 37.8167, -44.5122, 0.22", "55.6957, 38.191, -44.9464, 0.22", "56.1738, 38.4515, -45.2766, 0.22", "56.5845, 38.7005, -45.606, 0.22", "57.6065, 39.3392, -46.4509, 1.62", "58.3984, 39.8127, -47.0788, 2.5", "58.77, 40.0185, -47.3505, 2.73", "59.516, 40.4013, -47.8496, 2.14", "61.5539, 41.406, -49.1798, 0.22", "62.0506, 41.6415, -49.5047, 0.22", "62.6421, 41.9216, -49.9016, 0.44", "62.9085, 42.0527, -50.0836, 0.44", "63.7142, 42.4845, -50.6521, 0.29", "64.2996, 42.8052, -51.0787, 0.74", "64.8096, 43.0748, -51.467, 0.74", "65.9192, 43.6348, -52.3274, 0.22", "66.6158, 43.9784, -52.8704, 0.22", "67.889, 44.5817, -53.8835, 1.84", "68.4909, 44.8523, -54.3505, 2.14", "69.9763, 45.4695, -55.5265, 0.29", "70.4736, 45.6375, -55.9416, 0.44", "70.9147, 45.7575, -56.3338, 0.44", "71.9194, 45.9786, -57.3105, 0.29", "72.8781, 46.1404, -58.3223, 1.84", "73.8188, 46.3055, -59.4494, 2.14", "75.3417, 46.5829, -61.5125, 0.29", "76.2478, 46.7763, -62.7731, 0.81", "76.964, 46.9362, -63.7484, 0.81", "77.5195, 47.0677, -64.4791, 0.52", "78.9793, 47.4591, -66.366, 0.52", "79.5461, 47.6421, -67.0453, 0.81", "81.0647, 48.2254, -68.696, 2.14", "81.5564, 48.4181, -69.172, 2.65", "81.8669, 48.5422, -69.4372, 2.65", "84.0791, 49.4237, -71.0717, 0.29", "84.7321, 49.6965, -71.4917, 0.22", "85.4608, 50.038, -71.949, 0.96", "85.9635, 50.3045, -72.2715, 1.18", "86.6145, 50.677, -72.6907, 0.96", "87.432, 51.1698, -73.1732, 0.22", "88.1587, 51.6358, -73.5068, 0.22", "88.6665, 51.9548, -73.7249, 0.22", "89.7445, 52.5438, -74.1725, 1.4", "90.3885, 52.8813, -74.4337, 1.84", "90.5355, 52.9588, -74.4935, 2.06", "91.0753, 53.228, -74.7112, 1.99", "91.9073, 53.6075, -75.0353, 0.88", "93.219, 54.2106, -75.526, 0.22", "93.7846, 54.4831, -75.7125, 0.29", "94.3713, 54.7593, -75.8655, 0.29", "94.9378, 55.0041, -75.9962, 0.29", "95.2759, 55.1354, -76.0661, 0.66", "95.7468, 55.295, -76.1424, 0.66", "96.1536, 55.4127, -76.1979, 0.66", "96.8876, 55.5804, -76.3058, 0.22", "97.5456, 55.7087, -76.4056, 0.22", "98.5437, 55.9038, -76.5656, 1.33", "99.5121, 56.0947, -76.7413, 2.14", "99.9976, 56.1996, -76.8431, 2.28", "100.584, 56.341, -76.9776, 1.99" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.20387, 29.7983, -4.44704, 0.59", "7.56128, 30.8775, -4.84384, 0.59", "7.09724, 31.1464, -5.01284, 0.96", "6.6517, 31.3739, -5.17221, 0.96", "6.17481, 31.5786, -5.39396, 0.81", "5.1375, 31.9991, -5.99828, 0.59", "4.73614, 32.1835, -6.25896, 0.81", "4.27491, 32.4195, -6.61714, 0.81", "3.98861, 32.5991, -6.86293, 0.74", "3.19618, 33.2515, -7.611, 0.74", "2.70055, 33.8418, -8.12942, 0.74", "2.32962, 34.5851, -8.58398, 0.52", "2.20037, 35.1029, -8.82205, 0.66", "2.16874, 35.9055, -9.0392, 0.96", "2.23697, 36.4602, -9.11431, 0.88", "2.37154, 36.9587, -9.10335, 0.44", "2.56276, 37.4632, -9.03914, 0.29", "2.84036, 38.0284, -8.90819, 0.29", "3.17474, 38.6531, -8.7265, 0.88", "3.37073, 39.0172, -8.60565, 1.11", "3.55935, 39.3936, -8.4701, 1.18", "3.71613, 39.7654, -8.33685, 0.88", "4.01001, 40.6832, -8.04887, 0.37", "4.12987, 41.231, -7.91163, 0.29", "4.21788, 41.9838, -7.80677, 0.29", "4.22504, 42.497, -7.76409, 0.29", "4.13881, 43.3989, -7.83065, 1.25", "4.04132, 43.9928, -7.95667, 1.77", "3.98655, 44.2755, -8.05549, 1.92", "3.88813, 44.8391, -8.28551, 1.92", "3.81372, 45.3874, -8.53114, 1.11", "3.71138, 46.6863, -9.16546, 0.44", "3.6916, 47.2746, -9.44898, 0.66", "3.69185, 47.8919, -9.69559, 0.88", "3.70464, 48.3839, -9.86228, 1.11", "3.72267, 48.7785, -9.97312, 1.11", "3.74964, 49.3677, -10.1363, 0.66", "3.78, 50.2191, -10.321, 0.37", "3.81758, 51.2814, -10.5426, 0.88", "3.84073, 51.7966, -10.6682, 1.47", "3.88388, 52.2828, -10.8027, 1.77", "3.96667, 52.8795, -11.0053, 1.92", "4.0454, 53.2674, -11.1792, 2.14", "4.19611, 53.8066, -11.5247, 2.14", "4.32714, 54.4043, -12.1507, 1.62", "4.36742, 54.8016, -12.6793, 1.11", "4.35705, 55.3073, -13.4187, 0.66", "4.26454, 55.7975, -14.1843, 0.81", "4.09513, 56.2452, -14.93, 0.66", "3.39626, 57.4701, -17.0776, 0.81", "3.09323, 57.8902, -17.7776, 0.74", "2.8212, 58.2132, -18.2867, 1.11", "2.24887, 58.8291, -19.1629, 1.62", "1.7285, 59.3574, -19.8299, 1.69", "1.14553, 59.9409, -20.4486, 1.55", "0.579488, 60.5881, -20.9692, 0.37", "0.395019, 60.8621, -21.1577, 0.52", "0.196606, 61.2729, -21.3961, 0.66", "0.0660329, 61.6534, -21.5699, 0.66", "-0.0696661, 62.1562, -21.7777, 0.22", "-0.260351, 62.8943, -22.1321, 0.22", "-0.573814, 64.008, -22.7766, 1.99", "-0.762248, 64.608, -23.1447, 2.43", "-0.936963, 65.1168, -23.4655, 2.73", "-1.10304, 65.5375, -23.7452, 2.95", "-1.97917, 67.3987, -25.0168, 0.52", "-2.32627, 67.9877, -25.4318, 0.59", "-2.57265, 68.3569, -25.7016, 1.11", "-2.73436, 68.5971, -25.8748, 1.25", "-3.00112, 69.0222, -26.1464, 1.25", "-3.36448, 69.6252, -26.499, 0.22", "-3.68366, 70.1538, -26.7919, 0.22", "-3.97952, 70.6597, -27.0976, 0.37", "-4.26813, 71.1372, -27.4422, 0.37", "-4.74777, 71.9575, -28.0464, 1.69", "-5.10393, 72.5752, -28.4889, 2.28", "-5.3246, 72.9446, -28.7539, 2.65", "-5.61405, 73.4397, -29.0854, 2.65", "-6.04996, 74.203, -29.5746, 2.5", "-6.71758, 75.4684, -30.3374, 0.29", "-6.93723, 75.9563, -30.6228, 0.29", "-7.10486, 76.4377, -30.8979, 0.29", "-7.2665, 77.0105, -31.2241, 0.74", "-7.39989, 77.565, -31.5392, 0.96", "-7.54324, 78.2145, -31.93, 0.96", "-7.69119, 78.723, -32.3075, 0.29", "-7.96962, 79.4548, -32.8848, 0.22", "-8.0751, 79.6632, -33.0517, 0.22", "-8.25883, 79.9393, -33.2867, 0.22", "-8.54631, 80.3203, -33.606, 0.22", "-9.35741, 81.3037, -34.4822, 2.28", "-9.71171, 81.7259, -34.9046, 2.43", "-9.97914, 82.0522, -35.2507, 2.65", "-11.0886, 83.5051, -36.8606, 0.59", "-11.4009, 83.9383, -37.3573, 0.52", "-11.9491, 84.7386, -38.2832, 0.59", "-12.4949, 85.5885, -39.2414, 0.37", "-12.6958, 85.9329, -39.6044, 0.52", "-12.8873, 86.3087, -39.9686, 0.66", "-13.0377, 86.6435, -40.2518, 0.66", "-13.2118, 87.0762, -40.5667, 0.44", "-13.5865, 88.0859, -41.1909, 2.14", "-13.878, 88.8693, -41.6368, 2.5", "-14.112, 89.4971, -41.9946, 1.92", "-14.6401, 90.9236, -42.7976, 0.22", "-14.8562, 91.528, -43.1234, 0.22", "-15.3339, 92.9337, -43.8433, 1.69", "-15.4205, 93.2023, -43.9642, 2.06", "-15.5844, 93.7649, -44.1747, 2.14", "-15.6663, 94.0687, -44.2691, 1.62", "-15.9719, 95.3336, -44.6226, 0.37", "-16.1358, 96.0169, -44.8145, 0.37", "-16.3781, 97.0596, -45.0978, 0.37", "-16.5628, 97.8063, -45.3112, 0.37", "-16.9637, 99.3893, -45.7846, 1.69", "-17.0888, 99.8656, -45.9329, 1.92", "-17.1646, 100.154, -46.0251, 1.92", "-17.4234, 101.135, -46.3501, 0.22", "-17.6045, 101.878, -46.6044, 0.22", "-17.7275, 102.514, -46.8036, 0.37", "-17.7997, 102.994, -46.9516, 0.37", "-17.8661, 103.551, -47.1136, 1.33", "-17.8982, 103.959, -47.2338, 1.84", "-17.9174, 104.405, -47.3581, 1.84", "-17.9435, 105.519, -47.6464, 0.29", "-17.9714, 106.21, -47.8068, 0.44", "-17.989, 106.532, -47.8749, 0.59", "-18.0248, 107.046, -47.9646, 0.59", "-18.1204, 108.007, -48.1343, 0.22", "-18.2115, 108.698, -48.2687, 1.33", "-18.2709, 109.013, -48.3373, 1.77", "-18.3374, 109.331, -48.402, 1.92", "-18.4119, 109.649, -48.4715, 1.4", "-18.8516, 111.161, -48.9289, 0.22", "-19.0565, 111.794, -49.1569, 0.22", "-19.3686, 112.739, -49.5328, 1.11", "-19.5153, 113.202, -49.7265, 1.55", "-19.6597, 113.683, -49.9299, 1.4", "-20.1811, 115.477, -50.6965, 0.29", "-20.3117, 115.949, -50.8821, 0.37", "-20.4241, 116.37, -51.0508, 0.44", "-20.5491, 116.877, -51.2553, 0.44", "-20.6574, 117.352, -51.435, 0.22", "-20.7337, 117.785, -51.5853, 0.22", "-20.8533, 118.736, -51.8835, 1.33", "-20.9407, 119.263, -52.1181, 1.55", "-21.0033, 119.559, -52.2806, 1.55", "-21.3449, 120.862, -53.149, 0.22", "-21.607, 121.659, -53.8033, 0.22", "-21.766, 122.086, -54.1947, 0.66", "-22.3766, 123.494, -55.6644, 0.44", "-22.729, 124.225, -56.5578, 1.4", "-23.0522, 124.847, -57.3655, 1.77", "-23.6778, 125.933, -58.8938, 1.33", "-23.9546, 126.377, -59.5458, 1.62", "-24.7269, 127.587, -61.3635, 0.74", "-26.0231, 129.698, -64.5167, 2.58" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "100.584, 56.341, -76.9776, 0.44", "101.721, 56.5357, -77.2094, 0.44", "102.416, 56.6703, -77.3767, 0.37", "103.272, 56.845, -77.5957, 0.29", "103.803, 56.9427, -77.7513, 0.59", "104.845, 57.0797, -78.1141, 0.29", "105.559, 57.1742, -78.375, 0.96", "106.077, 57.2694, -78.5914, 1.25", "106.503, 57.359, -78.7758, 1.33", "107.546, 57.5874, -79.2283, 0.22", "108.835, 57.876, -79.8134, 0.22", "109.511, 58.0304, -80.1207, 0.37", "110.445, 58.256, -80.5388, 0.22", "111.197, 58.4686, -80.8544, 1.18", "111.711, 58.6375, -81.0594, 1.4", "112.159, 58.8132, -81.2147, 1.4", "112.778, 59.084, -81.3937, 0.44", "113.544, 59.397, -81.5838, 0.22", "113.983, 59.5684, -81.6863, 0.52", "114.328, 59.7021, -81.7743, 0.52", "115.421, 60.1509, -82.0533, 0.22", "116.098, 60.4272, -82.2221, 0.81", "116.784, 60.6774, -82.4152, 1.25", "117.604, 60.943, -82.6477, 1.25", "118.88, 61.3074, -82.9891, 0.22", "119.487, 61.4673, -83.1528, 0.59", "119.965, 61.5814, -83.281, 0.74", "121.559, 61.8729, -83.6926, 0.22", "122.368, 61.9883, -83.8891, 0.22", "123.558, 62.1244, -84.1248, 1.25", "124.202, 62.1811, -84.2428, 1.62", "124.434, 62.2016, -84.2899, 1.62", "126.541, 62.3995, -84.7171, 0.22", "127.131, 62.4509, -84.8312, 0.22", "128.096, 62.5162, -85.0353, 1.03", "128.742, 62.5402, -85.1766, 1.25", "130.218, 62.5691, -85.491, 0.22", "130.825, 62.5718, -85.6361, 0.22", "131.29, 62.5683, -85.7653, 0.66", "132.467, 62.5158, -86.1397, 0.22", "133.252, 62.4492, -86.4374, 0.22", "133.896, 62.3757, -86.7017, 0.74", "134.489, 62.3121, -86.9647, 0.96", "135.526, 62.2364, -87.4482, 0.22", "136.732, 62.1959, -88.0061, 1.33", "137.376, 62.1976, -88.293, 1.77", "137.721, 62.2126, -88.4396, 1.77", "139.725, 62.3448, -89.2305, 0.22", "140.15, 62.3798, -89.3842, 0.22", "140.653, 62.4322, -89.5611, 0.74", "141.095, 62.4901, -89.7103, 0.74", "142.243, 62.647, -90.0876, 0.22", "142.819, 62.7295, -90.2863, 1.03", "143.243, 62.798, -90.4433, 1.33", "143.729, 62.8964, -90.6202, 1.47", "145.209, 63.2444, -91.1314, 0.15", "145.634, 63.3608, -91.2627, 0.29", "146.038, 63.4967, -91.3562, 0.29", "146.932, 63.8543, -91.4458, 0.15", "147.636, 64.1956, -91.4274, 0.66", "147.904, 64.3456, -91.3899, 0.74", "148.099, 64.4739, -91.3365, 0.74", "149.059, 65.0925, -91.0262, 0.15", "150.054, 65.7262, -90.6825, 0.15", "150.749, 66.1603, -90.436, 1.03", "151.083, 66.3637, -90.3259, 1.18", "151.328, 66.5047, -90.2523, 1.18", "152.696, 67.2389, -89.8818, 0.15", "153.228, 67.5089, -89.7642, 0.81", "153.592, 67.6906, -89.7088, 1.11", "153.914, 67.8499, -89.6676, 1.11", "156.232, 69.0071, -89.4654, 0.22", "156.983, 69.3904, -89.3973, 0.88", "157.438, 69.6356, -89.3523, 0.74", "158.594, 70.2694, -89.1944, 0.22", "159.034, 70.5151, -89.1186, 0.59", "159.531, 70.8092, -89.0142, 0.74", "160.744, 71.6167, -88.6885, 0.22", "161.295, 71.9808, -88.5167, 1.47", "161.853, 72.336, -88.3145, 1.77", "162.231, 72.5588, -88.1698, 1.77", "163.743, 73.441, -87.552, 0.22", "164.414, 73.8321, -87.2725, 0.66", "164.869, 74.0922, -87.1027, 0.88", "165.798, 74.6204, -86.7196, 0.22", "166.248, 74.8843, -86.5283, 0.44", "167.157, 75.4398, -86.1022, 0.22", "167.287, 75.523, -86.0316, 0.81", "167.535, 75.7049, -85.8999, 0.81", "168.693, 76.733, -85.3294, 0.22", "169.254, 77.2646, -85.09, 1.03", "169.443, 77.4457, -85.0192, 1.33", "169.742, 77.7225, -84.9255, 1.33", "171.325, 79.0479, -84.6021, 0.22", "172.127, 79.6338, -84.5206, 0.22", "173.029, 80.1813, -84.5115, 1.03", "173.433, 80.3816, -84.5265, 1.33", "173.788, 80.5183, -84.5481, 1.33", "175.397, 80.9818, -84.6571, 0.22", "176.51, 81.1952, -84.7363, 0.22", "177.563, 81.3579, -84.7848, 0.74", "178.161, 81.4514, -84.7812, 0.88", "179.439, 81.6617, -84.6813, 0.22", "180.046, 81.7662, -84.5817, 0.22", "180.341, 81.8218, -84.4924, 0.66", "180.589, 81.8593, -84.4134, 0.66", "181.634, 81.9843, -84.1035, 0.22", "182.298, 82.0502, -83.9234, 0.88", "182.468, 82.0634, -83.8843, 1.18", "182.668, 82.0747, -83.845, 1.18", "184.49, 82.1496, -83.4922, 0.22", "185.292, 82.1778, -83.34, 0.44", "185.609, 82.1906, -83.2808, 0.29", "186.16, 82.233, -83.2444, 0.29", "187.104, 82.363, -83.2757, 0.96", "187.577, 82.4487, -83.3442, 1.18", "187.962, 82.534, -83.4293, 1.18", "188.303, 82.61, -83.5091, 0.88", "190.681, 83.1521, -84.1663, 0.22", "191.13, 83.2589, -84.3134, 0.81", "191.547, 83.3605, -84.4645, 0.81", "192.843, 83.6209, -84.8938, 0.22", "193.431, 83.7275, -85.0805, 0.22", "194.416, 83.889, -85.3686, 1.03", "194.993, 83.9806, -85.516, 1.11", "196.579, 84.234, -85.9902, 0.22", "197.583, 84.4197, -86.3316, 0.22", "198.609, 84.618, -86.7493, 0.96", "199.155, 84.7213, -86.9863, 1.18", "200.916, 85.0684, -87.797, 0.22", "201.749, 85.2476, -88.2143, 0.22", "202.529, 85.4352, -88.6454, 1.11", "203.086, 85.5826, -89.0004, 1.33", "203.236, 85.6173, -89.1039, 1.47", "203.951, 85.779, -89.6541, 1.18", "205.021, 86.0215, -90.5895, 0.15", "205.489, 86.1197, -91.0166, 0.59", "206.22, 86.2531, -91.6954, 0.81", "207.221, 86.4367, -92.619, 0.22", "207.839, 86.565, -93.2142, 1.03", "208.34, 86.6838, -93.7276, 1.25", "209.53, 87.0849, -95.1727, 0.22", "210.032, 87.2978, -95.8196, 0.37", "210.481, 87.5267, -96.4291, 0.15", "211.07, 87.8711, -97.2862, 0.59", "211.424, 88.0722, -97.8689, 0.59", "212.459, 88.5947, -99.6529, 0.22", "212.797, 88.75, -100.225, 0.22", "213.682, 89.0923, -101.639, 1.25", "213.908, 89.1591, -101.972, 1.92", "216.235, 89.6858, -105.305, 0.52", "217.215, 89.8683, -106.724, 0.29", "217.726, 89.9588, -107.479, 0.96", "218.263, 90.0728, -108.301, 1.18", "219.172, 90.3211, -109.687, 0.81", "220.686, 90.8441, -112.048, 1.69", "221.359, 91.1707, -113.125, 1.92", "222.738, 92.0359, -115.488, 0.22", "223.067, 92.3011, -116.104, 0.22", "223.453, 92.7047, -116.88, 1.33", "223.96, 93.4059, -118.007, 1.33", "224.601, 94.5682, -119.649, 0.22", "224.808, 95.0761, -120.359, 0.22", "225.003, 95.7488, -121.436, 0.22", "225.17, 96.3633, -122.636, 1.4", "225.231, 96.5987, -123.189, 1.62", "225.53, 97.502, -125.776, 0.22", "225.689, 97.9148, -127.114, 0.96", "226.021, 98.5969, -129.532, 1.55", "226.372, 99.1532, -131.635, 2.21", "226.663, 99.5353, -133.141, 2.43", "227.574, 100.531, -137.066, 0.81", "227.824, 100.767, -137.97, 0.29", "228.255, 101.145, -139.319, 0.74", "229.19, 101.929, -141.785, 0.81", "229.457, 102.133, -142.374, 0.96", "230.39, 102.748, -144.108, 0.22", "230.734, 102.937, -144.644, 0.52", "230.996, 103.066, -145.02, 0.59", "231.699, 103.39, -145.93, 0.22", "232.652, 103.785, -147.107, 1.47", "233.135, 104.001, -147.751, 1.69", "234.233, 104.546, -149.4, 0.37", "234.574, 104.739, -149.989, 0.88", "234.897, 104.949, -150.641, 1.11", "235.834, 105.65, -152.973, 0.22", "236.13, 105.868, -153.751, 0.37", "236.778, 106.372, -155.557, 0.22", "237.345, 106.817, -157.283, 1.47", "237.717, 107.107, -158.473, 1.69", "238.338, 107.63, -160.535, 1.77", "238.691, 107.916, -161.733, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "100.584, 56.341, -76.9776, 0.29", "101.72, 57.8764, -77.7357, 0.29", "102.281, 58.6318, -78.0743, 0.29", "102.932, 59.5042, -78.4547, 0.81", "103.361, 60.0738, -78.6869, 0.96", "104.145, 61.0898, -79.0754, 0.22", "104.662, 61.7477, -79.3125, 0.44", "104.927, 62.0593, -79.4121, 0.44", "105.512, 62.7046, -79.5607, 0.22", "106.132, 63.3066, -79.6492, 1.03", "106.432, 63.586, -79.6582, 1.33", "106.689, 63.8108, -79.6422, 1.55", "107.28, 64.3204, -79.5352, 1.25", "108.201, 65.12, -79.2709, 0.15", "108.728, 65.6033, -79.0554, 0.74", "109.383, 66.2681, -78.7141, 1.11", "109.762, 66.6497, -78.5487, 1.18", "110.251, 67.1289, -78.3865, 0.88", "111.122, 67.9889, -78.1539, 0.15", "111.644, 68.4764, -78.0794, 0.37", "112.057, 68.828, -78.073, 0.52", "113.666, 70.0249, -78.2554, 0.22", "114.444, 70.563, -78.3915, 1.25", "114.966, 70.8961, -78.5033, 1.77", "115.407, 71.1548, -78.6095, 1.77", "115.799, 71.3798, -78.7069, 1.55", "117.215, 72.2168, -79.0376, 0.22", "117.722, 72.5481, -79.1312, 0.37", "118.212, 72.8803, -79.2498, 0.37", "119.122, 73.5216, -79.5014, 0.15", "119.744, 74.0276, -79.704, 0.96", "119.983, 74.2493, -79.8004, 1.11", "120.176, 74.4571, -79.8981, 1.11", "121.295, 75.801, -80.5262, 0.22", "121.774, 76.4173, -80.8189, 0.22", "122.359, 77.2132, -81.1904, 0.22", "122.746, 77.7403, -81.4509, 0.22", "123.3, 78.5414, -81.8529, 1.18", "123.529, 78.8906, -82.0252, 1.84", "123.771, 79.2919, -82.23, 1.84", "123.915, 79.5296, -82.3573, 1.84", "124.864, 80.9912, -83.1923, 0.22", "125.33, 81.7518, -83.6492, 0.81", "125.496, 82.055, -83.8399, 1.11", "125.744, 82.5583, -84.1543, 1.11", "125.863, 82.8257, -84.3173, 0.74", "126.217, 83.6419, -84.797, 0.29", "126.421, 84.1379, -85.0658, 0.44", "126.629, 84.5915, -85.3017, 0.44", "126.878, 85.1084, -85.5441, 0.22", "127.077, 85.5181, -85.7096, 0.22", "127.575, 86.5358, -86.0919, 1.18", "127.742, 86.8751, -86.2071, 1.4", "127.926, 87.2412, -86.3407, 1.4", "128.196, 87.7679, -86.5397, 0.88", "128.398, 88.2079, -86.6816, 0.37", "128.728, 89.0349, -86.9065, 0.22", "128.925, 89.6162, -87.0287, 0.29", "129.103, 90.1912, -87.131, 0.29", "129.456, 91.3859, -87.3169, 0.22", "129.753, 92.4212, -87.4721, 0.22", "129.996, 93.3409, -87.6168, 1.33", "130.144, 93.9384, -87.7126, 1.55", "130.587, 95.8369, -88.0424, 0.22", "130.77, 96.5885, -88.2149, 0.22", "131.012, 97.6051, -88.5076, 0.22", "131.316, 98.8171, -88.9325, 1.55", "131.412, 99.1791, -89.073, 1.84", "131.517, 99.5582, -89.235, 1.84", "131.993, 101.198, -89.9982, 0.22", "132.184, 101.789, -90.3015, 0.44", "132.419, 102.382, -90.6126, 0.59", "132.929, 103.544, -91.2223, 0.29", "133.146, 104.044, -91.4817, 1.18", "133.356, 104.546, -91.7238, 1.4", "133.538, 104.996, -91.9176, 1.4", "134.128, 106.429, -92.4784, 0.22", "134.343, 106.949, -92.6426, 0.22", "134.511, 107.378, -92.7387, 0.44", "134.708, 107.968, -92.8353, 0.22", "134.783, 108.27, -92.8728, 0.22", "134.943, 109.071, -92.9577, 1.11", "135.03, 109.6, -93.0185, 1.33", "135.046, 109.673, -93.0274, 1.55", "135.431, 110.925, -93.2052, 0.22", "135.575, 111.377, -93.2581, 0.22", "135.726, 111.863, -93.2915, 0.44", "135.838, 112.251, -93.2964, 0.44", "136.108, 113.254, -93.3003, 0.22", "136.326, 114.079, -93.2979, 0.22", "136.614, 115.203, -93.288, 1.18", "136.73, 115.734, -93.3057, 1.33", "136.82, 116.377, -93.3094, 1.11", "136.902, 117.496, -93.309, 0.22", "136.907, 117.82, -93.3101, 0.44", "136.914, 118.38, -93.304, 0.44", "136.97, 119.128, -93.2941, 0.22", "137.209, 120.593, -93.2244, 0.22", "137.375, 121.208, -93.1723, 1.11", "137.55, 121.753, -93.1121, 1.55", "137.77, 122.374, -93.0619, 1.62", "137.975, 122.89, -93.0237, 1.25", "138.58, 124.249, -92.9325, 0.22", "139.035, 125.179, -92.9199, 0.22", "139.321, 125.769, -92.915, 0.22", "139.754, 126.701, -92.9291, 0.44", "140.0, 127.269, -92.9597, 0.44", "140.285, 127.959, -93.0071, 0.22", "140.523, 128.537, -93.0448, 0.22", "140.802, 129.153, -93.0768, 0.59", "140.961, 129.453, -93.0966, 0.59", "141.322, 130.091, -93.1663, 0.22", "141.772, 130.878, -93.2893, 0.74", "141.977, 131.221, -93.3467, 0.88", "142.333, 131.76, -93.4361, 0.52", "142.967, 132.636, -93.5843, 0.22", "143.541, 133.388, -93.7674, 0.22", "144.187, 134.224, -94.0283, 1.11", "144.528, 134.662, -94.2041, 1.47", "144.877, 135.114, -94.426, 1.55", "145.836, 136.376, -95.2008, 0.22", "146.613, 137.417, -95.9421, 0.96", "146.838, 137.722, -96.1802, 1.4", "147.199, 138.223, -96.6115, 1.25", "147.462, 138.611, -96.9547, 0.88", "148.076, 139.585, -97.799, 0.22", "148.378, 140.103, -98.2587, 0.37", "148.67, 140.634, -98.6981, 0.22", "149.133, 141.443, -99.3706, 0.52", "149.375, 141.888, -99.7331, 0.66", "149.814, 142.713, -100.441, 0.22", "150.106, 143.297, -100.97, 0.66", "150.182, 143.466, -101.132, 0.66", "150.593, 144.527, -102.19, 0.22", "150.733, 145.025, -102.659, 0.59", "150.934, 146.209, -103.722, 0.22", "150.963, 146.632, -104.074, 0.22", "150.968, 147.355, -104.638, 1.47", "150.941, 147.694, -104.897, 1.69", "150.67, 149.107, -105.927, 0.22", "150.45, 150.032, -106.602, 0.22", "150.25, 150.704, -107.085, 0.74", "150.134, 151.076, -107.353, 0.88", "149.757, 152.249, -108.218, 0.22", "149.447, 153.2, -108.949, 1.25", "149.321, 153.603, -109.28, 1.25", "149.207, 154.008, -109.619, 0.74", "149.012, 154.75, -110.238, 0.22", "148.809, 155.628, -110.93, 1.4", "148.743, 155.959, -111.181, 1.62", "148.527, 157.065, -111.995, 0.22", "148.398, 157.758, -112.471, 0.59", "148.343, 158.03, -112.627, 0.59", "148.076, 159.219, -113.21, 0.15", "147.905, 159.922, -113.492, 0.15", "147.733, 160.569, -113.71, 0.15", "147.496, 161.405, -113.969, 0.15", "147.025, 163.099, -114.486, 1.18", "146.942, 163.387, -114.596, 1.47", "146.819, 163.804, -114.805, 1.11", "146.519, 164.763, -115.416, 0.22", "146.302, 165.429, -115.94, 0.96", "146.166, 165.836, -116.345, 0.96", "145.977, 166.826, -117.619, 0.22", "145.912, 167.554, -118.59, 0.22", "145.902, 168.176, -119.434, 1.18", "145.909, 168.398, -119.738, 1.4", "145.94, 168.839, -120.298, 1.55", "146.139, 170.686, -122.528, 0.22", "146.294, 171.658, -123.631, 0.22", "146.434, 172.33, -124.371, 0.81", "146.473, 172.488, -124.543, 1.03", "146.709, 173.463, -125.596, 0.22", "146.807, 173.902, -126.048, 0.66", "146.875, 174.272, -126.425, 0.66", "147.011, 174.903, -127.122, 0.15", "147.148, 175.655, -127.915, 1.25", "147.194, 176.053, -128.307, 1.4", "147.255, 176.957, -129.15, 0.15", "147.268, 177.52, -129.634, 0.37", "147.267, 177.792, -129.848, 0.37", "147.246, 179.288, -130.967, 0.22", "147.234, 180.113, -131.552, 1.03", "147.226, 180.48, -131.799, 1.18", "147.219, 180.682, -131.933, 1.18", "147.164, 182.078, -132.815, 0.22", "147.151, 182.653, -133.181, 0.52", "147.152, 182.924, -133.35, 0.52", "147.161, 184.081, -134.027, 0.22", "147.164, 184.766, -134.401, 0.22", "147.18, 185.555, -134.799, 1.11", "147.196, 186.18, -135.092, 1.11", "147.267, 187.777, -135.802, 0.22", "147.336, 188.73, -136.216, 0.22", "147.43, 189.571, -136.566, 1.03", "147.504, 190.134, -136.804, 1.47", "147.563, 190.572, -136.993, 1.11", "147.677, 191.768, -137.467, 0.15", "147.719, 192.199, -137.639, 0.37", "147.819, 193.18, -138.034, 0.22", "147.861, 193.701, -138.232, 0.37", "147.884, 193.989, -138.345, 0.37", "148.038, 195.355, -138.886, 0.22", "148.143, 196.183, -139.215, 0.81", "148.215, 196.68, -139.41, 1.03", "148.435, 197.963, -139.911, 0.15", "148.58, 198.696, -140.196, 0.29", "148.719, 199.364, -140.476, 0.22", "148.846, 199.969, -140.757, 0.88", "148.9, 200.32, -140.916, 1.11", "148.93, 200.678, -141.082, 1.11", "148.938, 201.969, -141.712, 0.22", "148.88, 202.668, -142.052, 1.03", "148.831, 203.016, -142.227, 1.25", "148.633, 204.181, -142.829, 0.22", "148.436, 205.145, -143.334, 0.88", "148.224, 206.084, -143.824, 0.29", "148.035, 206.839, -144.219, 0.96", "147.943, 207.195, -144.406, 0.96", "147.762, 207.851, -144.753, 0.22", "147.598, 208.381, -145.04, 0.37", "147.361, 209.123, -145.451, 0.22", "147.15, 209.77, -145.816, 0.52", "146.75, 211.071, -146.552, 0.22", "146.57, 211.655, -146.899, 0.81", "146.355, 212.355, -147.332, 0.22", "146.201, 212.88, -147.663, 0.88", "146.091, 213.326, -147.948, 1.03", "145.754, 215.021, -149.029, 0.22", "145.667, 215.611, -149.398, 0.22", "145.593, 216.277, -149.802, 0.81", "145.569, 216.558, -149.968, 1.03", "145.48, 217.981, -150.818, 0.22", "145.457, 218.311, -151.011, 0.29", "145.371, 219.226, -151.528, 0.15", "145.318, 219.721, -151.793, 0.29", "145.232, 220.404, -152.162, 0.88", "145.139, 220.972, -152.486, 0.88", "144.903, 222.095, -153.036, 0.22", "144.786, 222.583, -153.251, 0.22", "144.626, 223.158, -153.503, 0.88", "144.51, 223.546, -153.652, 1.11", "144.376, 224.003, -153.802, 1.11", "143.983, 225.574, -154.18, 0.22", "143.813, 226.527, -154.373, 0.22", "143.714, 227.243, -154.469, 0.22", "143.623, 228.206, -154.544, 0.81", "143.602, 228.604, -154.561, 1.03", "143.475, 229.846, -153.991, 0.22", "143.398, 230.331, -153.623, 0.22", "143.293, 231.126, -152.876, 1.11", "143.262, 231.448, -152.545, 1.25", "143.241, 231.776, -152.189, 1.25", "143.042, 236.42, -147.01, 0.66", "143.025, 237.06, -146.279, 0.88", "142.999, 238.08, -145.051, 0.29", "142.986, 238.632, -144.355, 0.22", "142.978, 239.036, -143.842, 0.44", "142.991, 239.402, -143.39, 0.22", "143.376, 240.069, -143.145, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-26.0231, 129.698, -64.5167, 1.77", "-26.2044, 130.262, -67.2058, 1.77", "-26.3668, 130.974, -69.7017, 1.47", "-26.4738, 131.455, -71.0932, 1.18", "-26.615, 132.017, -72.5423, 1.11", "-26.7811, 132.609, -73.9581, 0.88", "-26.8629, 132.855, -74.5225, 0.66", "-27.068, 133.403, -75.5823, 0.96", "-27.359, 134.082, -76.7169, 1.11", "-27.6653, 134.659, -77.6985, 1.33", "-27.8486, 134.944, -78.2303, 1.62", "-28.3736, 135.627, -79.6065, 1.47", "-29.4236, 136.818, -82.1737, 0.96", "-29.9724, 137.386, -83.4166, 0.96", "-30.7264, 138.145, -85.0379, 1.55", "-31.4432, 138.867, -86.5763, 1.33", "-32.0089, 139.452, -87.8151, 1.62", "-32.7475, 140.232, -89.4326, 1.11", "-33.001, 140.5, -89.9756, 0.59", "-33.8362, 141.392, -91.761, 0.88", "-34.4658, 142.094, -93.0925, 1.25", "-35.0041, 142.714, -94.2124, 1.4", "-35.6451, 143.47, -95.5409, 0.52", "-36.248, 144.203, -96.7576, 0.59", "-36.6075, 144.625, -97.4804, 0.37", "-36.8122, 144.85, -97.8545, 0.59", "-37.2383, 145.296, -98.581, 0.44", "-37.8479, 145.927, -99.5846, 0.37", "-38.5429, 146.67, -100.73, 1.47", "-39.4657, 147.679, -102.232, 1.84", "-40.4104, 148.72, -103.723, 0.52", "-41.0211, 149.398, -104.633, 0.52", "-41.3716, 149.782, -105.11, 1.18", "-41.6996, 150.118, -105.491, 1.18", "-42.8492, 151.23, -106.606, 0.22", "-43.1119, 151.483, -106.811, 0.37", "-43.5997, 151.935, -107.16, 0.96", "-44.2289, 152.493, -107.598, 1.25", "-45.5207, 153.58, -108.501, 0.22", "-45.8291, 153.826, -108.741, 0.37", "-46.1036, 154.043, -108.975, 0.37", "-47.1012, 154.866, -109.974, 1.11", "-47.3568, 155.085, -110.259, 1.55", "-47.5648, 155.274, -110.505, 1.69", "-49.0824, 156.712, -112.494, 0.29", "-49.3966, 157.025, -112.974, 0.29", "-50.0755, 157.783, -114.174, 1.03", "-50.2983, 158.07, -114.643, 0.81", "-50.5083, 158.408, -115.209, 1.11", "-50.8583, 159.125, -116.408, 1.33", "-51.3708, 160.513, -118.738, 0.59", "-51.54, 161.005, -119.574, 1.18", "-51.7379, 161.611, -120.613, 1.33", "-52.1223, 162.889, -122.786, 0.52", "-52.2496, 163.375, -123.581, 0.81", "-52.3945, 163.946, -124.473, 0.81", "-52.6001, 164.784, -125.707, 0.37", "-52.7194, 165.202, -126.333, 0.37", "-52.8227, 165.539, -126.833, 0.22", "-53.0486, 166.266, -127.899, 1.18", "-53.4143, 167.52, -129.699, 1.33", "-53.6155, 168.296, -130.787, 0.44", "-53.8057, 169.267, -132.18, 0.74", "-53.9544, 170.33, -133.724, 0.52", "-53.996, 170.851, -134.522, 0.66", "-53.9889, 171.214, -135.108, 1.47", "-53.9139, 171.741, -135.976, 1.55", "-53.6241, 173.03, -138.251, 0.96", "-53.4248, 173.545, -139.176, 0.37", "-53.0073, 174.442, -140.865, 0.29", "-52.799, 174.908, -141.766, 0.81", "-52.6864, 175.215, -142.358, 1.25", "-52.5312, 175.813, -143.433, 1.25", "-52.4623, 176.26, -144.299, 0.59", "-52.3892, 176.926, -145.917, 0.44", "-52.3389, 177.391, -147.411, 0.74", "-52.2874, 177.787, -149.091, 1.03", "-52.2291, 177.918, -150.027, 1.25", "-51.9057, 178.06, -153.234, 0.74", "-51.6385, 177.94, -155.187, 0.22", "-51.3297, 177.668, -156.544, 0.96", "-51.238, 177.57, -156.837, 0.96", "-50.8049, 177.06, -157.931, 0.29", "-50.5369, 176.748, -158.433, 0.52", "-50.1455, 176.338, -158.93, 0.22", "-49.6645, 175.902, -159.435, 0.22", "-49.3355, 175.634, -159.729, 0.96", "-49.0692, 175.433, -159.936, 0.96", "-47.7495, 174.517, -160.772, 0.22", "-47.2477, 174.196, -161.023, 0.44", "-46.8291, 173.949, -161.175, 0.44", "-45.8803, 173.406, -161.395, 0.15", "-45.1118, 172.968, -161.568, 0.15", "-44.5341, 172.643, -161.725, 0.22", "-44.1098, 172.411, -161.878, 0.81", "-43.3969, 172.011, -162.124, 1.11", "-43.1036, 171.837, -162.253, 1.11", "-41.8589, 171.035, -163.442, 0.15", "-41.5081, 170.787, -164.163, 0.37", "-41.3735, 170.681, -164.573, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-26.0231, 129.698, -64.5167, 0.29", "-26.9532, 130.966, -63.9973, 0.29", "-27.5842, 131.795, -63.688, 0.22", "-27.8299, 132.108, -63.5821, 0.74", "-28.0756, 132.416, -63.4984, 0.74", "-28.533, 132.973, -63.3691, 0.22", "-29.0216, 133.55, -63.259, 0.37", "-29.4152, 133.987, -63.21, 0.22", "-29.8671, 134.464, -63.1784, 0.52", "-30.3056, 134.896, -63.1803, 0.52", "-30.8596, 135.405, -63.2343, 0.22", "-31.2148, 135.693, -63.3045, 0.22", "-31.8168, 136.134, -63.4334, 1.47", "-32.145, 136.363, -63.4934, 1.92", "-32.6914, 136.732, -63.5784, 2.06", "-33.2112, 137.08, -63.6395, 1.69", "-34.3796, 137.88, -63.7623, 0.44", "-35.1616, 138.429, -63.8139, 0.22", "-35.7377, 138.848, -63.8455, 0.52", "-36.0965, 139.115, -63.8625, 0.66", "-36.9717, 139.802, -63.9707, 0.22", "-37.3725, 140.138, -64.0414, 0.22", "-37.9596, 140.677, -64.1757, 1.47", "-38.3428, 141.049, -64.2976, 1.77", "-38.8026, 141.522, -64.4683, 1.99", "-40.4732, 143.327, -65.2163, 0.22", "-41.1334, 144.084, -65.5555, 0.22", "-41.5585, 144.585, -65.7917, 0.96", "-42.0072, 145.131, -66.051, 1.03", "-42.5397, 145.795, -66.3447, 0.22", "-43.1033, 146.531, -66.6362, 0.22", "-43.3923, 146.92, -66.7818, 0.81", "-43.6845, 147.299, -66.9475, 0.96", "-44.3263, 148.064, -67.3331, 0.22", "-44.7135, 148.492, -67.5597, 0.22", "-45.3348, 149.148, -67.9391, 1.11", "-45.6212, 149.446, -68.1144, 1.4", "-45.93, 149.754, -68.3093, 1.4", "-46.9911, 150.773, -68.9806, 0.22", "-47.4659, 151.206, -69.2641, 0.22", "-48.1686, 151.808, -69.6516, 0.96", "-48.5868, 152.144, -69.8787, 1.18", "-49.545, 152.847, -70.3971, 0.22", "-49.9513, 153.126, -70.6129, 0.22", "-50.6637, 153.589, -70.9838, 1.55", "-51.037, 153.829, -71.1755, 1.99", "-51.796, 154.328, -71.5691, 1.99", "-53.4346, 155.476, -72.4672, 0.22", "-53.75, 155.717, -72.6582, 0.44", "-53.9034, 155.856, -72.7607, 0.44", "-54.3796, 156.382, -73.1118, 0.22", "-55.0537, 157.314, -73.604, 1.25", "-55.3712, 157.862, -73.8244, 1.62", "-55.552, 158.256, -73.9582, 1.62", "-56.0457, 159.354, -74.3025, 0.22", "-56.3026, 159.931, -74.479, 0.22", "-56.5621, 160.543, -74.6608, 0.29", "-56.8492, 161.226, -74.826, 0.66", "-57.0261, 161.639, -74.915, 0.66", "-57.3975, 162.445, -75.0788, 0.22", "-57.9752, 163.55, -75.3132, 1.55", "-58.285, 164.114, -75.4414, 1.77", "-58.5586, 164.63, -75.5724, 1.92" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-58.5586, 164.63, -75.5724, 0.22", "-59.3759, 166.952, -76.7699, 0.22", "-59.5703, 167.439, -76.9633, 0.44", "-59.6829, 167.689, -77.0487, 0.44", "-60.0784, 168.493, -77.301, 0.22", "-60.3828, 169.078, -77.4661, 0.59", "-60.6728, 169.612, -77.6119, 0.59", "-61.3512, 170.672, -77.8322, 0.22", "-61.672, 171.131, -77.941, 0.22", "-62.3321, 172.039, -78.1448, 1.11", "-62.6045, 172.394, -78.2218, 1.33", "-62.8699, 172.735, -78.3237, 1.33", "-64.0651, 174.332, -78.883, 0.22", "-64.646, 175.182, -79.227, 0.22", "-65.2092, 176.076, -79.6444, 1.33", "-65.5156, 176.575, -79.9546, 1.69", "-66.5465, 178.228, -81.2955, 0.22", "-66.9036, 178.807, -81.8374, 0.22", "-67.3165, 179.479, -82.6083, 1.11", "-67.663, 180.043, -83.4102, 1.4", "-68.3624, 181.185, -85.3781, 1.11", "-68.9178, 182.023, -87.0939, 1.03", "-69.0841, 182.254, -87.6159, 1.55", "-69.5513, 182.863, -89.0631, 1.69", "-70.2231, 183.683, -91.0618, 0.74", "-71.0198, 184.663, -93.3856, 1.4", "-72.0501, 186.042, -96.3566, 1.18", "-72.4797, 186.628, -97.5599, 1.55", "-72.848, 187.131, -98.5205, 1.69", "-73.808, 188.507, -100.8, 1.18", "-74.2514, 189.164, -101.754, 0.59", "-75.178, 190.701, -103.673, 1.33", "-75.5632, 191.46, -104.501, 1.77", "-76.062, 192.588, -105.661, 0.52", "-76.3617, 193.368, -106.421, 1.25", "-76.7403, 194.443, -107.392, 1.11", "-77.2807, 195.934, -108.687, 0.22", "-77.6911, 196.992, -109.606, 0.22", "-78.1462, 198.101, -110.532, 1.55", "-78.5203, 198.918, -111.188, 1.69", "-79.4308, 200.68, -112.571, 0.15", "-79.846, 201.403, -113.105, 0.81", "-80.322, 202.136, -113.599, 1.03", "-81.2085, 203.426, -114.357, 0.22", "-81.7883, 204.241, -114.767, 1.03", "-82.2651, 204.908, -115.006, 1.47", "-82.8233, 205.691, -115.198, 1.47", "-83.8682, 207.137, -115.479, 0.22", "-84.3057, 207.735, -115.571, 0.74", "-84.6178, 208.157, -115.629, 0.88", "-85.9768, 210.016, -115.857, 0.22", "-86.7104, 211.035, -115.965, 1.11", "-87.113, 211.602, -116.027, 1.4", "-88.004, 212.855, -116.219, 0.22", "-88.2895, 213.282, -116.294, 0.52", "-88.7419, 214.029, -116.452, 0.22", "-89.0836, 214.694, -116.63, 0.52", "-89.2091, 214.978, -116.702, 0.52", "-89.5457, 215.831, -116.894, 0.22", "-89.9158, 216.82, -117.122, 1.33", "-90.1906, 217.516, -117.354, 1.55", "-90.6941, 218.863, -117.873, 0.22", "-91.098, 219.929, -118.341, 0.22", "-91.5093, 220.948, -119.005, 1.47", "-91.7496, 221.589, -119.477, 1.69", "-92.4651, 223.76, -121.101, 0.22", "-92.7969, 224.876, -121.965, 1.99", "-93.0048, 225.606, -122.56, 2.36", "-94.1002, 229.523, -125.878, 0.22", "-94.5401, 231.094, -127.174, 0.44", "-94.8997, 232.39, -128.169, 0.22", "-95.5592, 234.704, -129.718, 1.84", "-95.7526, 235.336, -130.09, 2.28", "-95.9494, 235.967, -130.387, 2.28", "-96.8235, 238.441, -131.288, 0.22", "-97.1042, 239.123, -131.534, 0.74", "-98.1054, 241.367, -132.316, 0.22", "-98.5033, 242.326, -132.579, 0.74", "-98.7121, 242.856, -132.718, 0.81", "-99.7131, 245.481, -133.409, 0.15", "-100.07, 246.399, -133.698, 1.11", "-100.454, 247.357, -134.033, 1.11", "-101.4, 249.63, -134.92, 0.22", "-101.677, 250.282, -135.173, 0.66", "-101.894, 250.786, -135.351, 0.81", "-102.597, 252.326, -135.788, 0.22", "-102.985, 253.003, -135.993, 1.11", "-103.318, 253.444, -136.141, 1.33", "-104.196, 254.27, -136.501, 0.22", "-104.625, 254.622, -136.669, 0.66", "-105.008, 254.896, -136.808, 0.88", "-106.687, 255.955, -137.349, 0.22", "-107.779, 256.598, -137.721, 0.22", "-108.318, 256.904, -137.901, 0.96", "-109.019, 257.293, -138.137, 1.11", "-109.915, 257.823, -138.425, 0.22", "-110.486, 258.199, -138.572, 0.59", "-110.677, 258.346, -138.593, 0.59", "-111.147, 258.764, -138.594, 0.22", "-111.62, 259.224, -138.589, 0.44", "-111.85, 259.457, -138.586, 0.52", "-112.805, 260.484, -138.606, 0.15", "-113.114, 260.824, -138.619, 0.44", "-114.096, 261.894, -138.7, 0.22", "-114.639, 262.482, -138.78, 0.44", "-114.902, 262.771, -138.826, 0.44", "-115.33, 263.264, -138.904, 0.22", "-115.737, 263.754, -138.976, 0.59", "-116.269, 264.393, -139.064, 0.59", "-116.963, 265.228, -139.176, 0.22", "-117.579, 265.996, -139.307, 0.22", "-118.255, 266.859, -139.484, 0.81", "-118.429, 267.084, -139.541, 0.81", "-118.839, 267.631, -139.715, 0.22", "-119.27, 268.227, -139.915, 0.44", "-120.299, 269.692, -140.443, 0.22", "-120.562, 270.066, -140.589, 0.96", "-121.073, 270.78, -140.88, 1.11", "-122.532, 272.799, -141.683, 0.22", "-123.186, 273.718, -142.032, 0.22", "-123.418, 274.051, -142.151, 0.74", "-123.716, 274.489, -142.294, 0.96", "-124.054, 274.987, -142.452, 1.18", "-124.296, 275.347, -142.577, 1.18", "-125.149, 276.678, -143.063, 0.15", "-125.525, 277.245, -143.3, 0.52", "-125.669, 277.469, -143.399, 0.81", "-125.856, 277.788, -143.537, 0.81", "-126.637, 279.206, -144.15, 0.22", "-127.053, 280.013, -144.486, 0.96", "-127.322, 280.589, -144.705, 1.47", "-127.998, 282.226, -145.286, 0.22", "-128.381, 283.266, -145.644, 0.22", "-128.756, 284.366, -146.025, 1.03", "-128.892, 284.795, -146.172, 1.03", "-129.144, 285.649, -146.498, 0.22", "-129.321, 286.31, -146.78, 0.44", "-129.491, 286.969, -147.09, 0.37", "-129.737, 287.943, -147.582, 0.74", "-129.827, 288.306, -147.772, 0.96", "-130.457, 290.693, -149.083, 0.22", "-130.8, 291.928, -149.796, 0.74", "-130.893, 292.266, -149.989, 1.11", "-130.983, 292.615, -150.184, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-58.5586, 164.63, -75.5724, 0.22", "-59.1378, 165.531, -75.2202, 0.22", "-59.2975, 165.79, -75.1212, 0.22", "-59.3982, 165.989, -75.0535, 0.66", "-59.4932, 166.206, -74.986, 0.88", "-59.5604, 166.396, -74.9219, 0.88", "-59.8377, 167.288, -74.6097, 0.15", "-59.8637, 167.395, -74.5722, 0.29", "-60.0911, 168.355, -74.1977, 0.22", "-60.1631, 168.655, -74.0719, 0.37", "-60.3455, 169.365, -73.7643, 0.22", "-60.5015, 169.946, -73.4929, 1.33", "-60.5335, 170.059, -73.4343, 1.62", "-60.8089, 170.896, -72.9522, 0.22", "-61.0208, 171.443, -72.5842, 0.22", "-61.4158, 172.328, -71.9098, 0.22", "-61.589, 172.677, -71.6162, 0.96", "-61.7288, 172.943, -71.3629, 1.18", "-62.0337, 173.479, -70.7572, 0.22", "-62.2401, 173.793, -70.3171, 0.22", "-62.4552, 174.089, -69.8347, 1.11", "-62.5175, 174.168, -69.6906, 1.4", "-62.6287, 174.323, -69.4419, 1.4", "-62.9664, 174.879, -68.6984, 0.22", "-63.1213, 175.208, -68.338, 0.22", "-63.2539, 175.549, -68.0372, 0.44", "-63.2988, 175.685, -67.936, 0.44", "-63.4984, 176.355, -67.4982, 0.22", "-63.6002, 176.752, -67.2729, 0.66", "-63.6802, 177.119, -67.0946, 0.66", "-63.7679, 177.603, -66.8589, 0.22", "-63.8148, 177.867, -66.718, 0.44", "-63.8577, 178.101, -66.5847, 0.44", "-63.9374, 178.543, -66.3162, 0.22", "-63.9669, 178.713, -66.2096, 0.37", "-64.0731, 179.328, -65.8273, 0.22", "-64.1118, 179.624, -65.6406, 0.52", "-64.1265, 179.772, -65.5438, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_NBC_ce39e26284_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.49999920512097007)
    connect dend_22(0), soma_0(0.49999920512097007)
    connect dend_17(0), soma_0(0.49999920512097007)
    connect dend_0(0), soma_0(0.49999920512097007)
    connect axon_0(0), soma_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.94345, -11.2623, 0.984599, 4.09477 ) }
    soma_0 { pt3dadd( -6.27697, -10.213, 0.889449, 7.03886 ) }
    soma_0 { pt3dadd( -5.61048, -9.16359, 0.794299, 9.0513 ) }
    soma_0 { pt3dadd( -4.94399, -8.11421, 0.699149, 10.7049 ) }
    soma_0 { pt3dadd( -4.2775, -7.06483, 0.603999, 12.1545 ) }
    soma_0 { pt3dadd( -3.61101, -6.01545, 0.508849, 13.4148 ) }
    soma_0 { pt3dadd( -2.94452, -4.96607, 0.413699, 14.3077 ) }
    soma_0 { pt3dadd( -2.27803, -3.91669, 0.318549, 14.7157 ) }
    soma_0 { pt3dadd( -1.61155, -2.86731, 0.223399, 14.8034 ) }
    soma_0 { pt3dadd( -0.945058, -1.81793, 0.128249, 14.7825 ) }
    soma_0 { pt3dadd( -0.278569, -0.768556, 0.0330986, 14.484 ) }
    soma_0 { pt3dadd( 0.387919, 0.280823, -0.0620515, 14.2451 ) }
    soma_0 { pt3dadd( 1.05441, 1.3302, -0.157201, 13.4939 ) }
    soma_0 { pt3dadd( 1.7209, 2.37958, -0.252352, 12.4612 ) }
    soma_0 { pt3dadd( 2.38738, 3.42896, -0.347502, 11.3514 ) }
    soma_0 { pt3dadd( 3.05387, 4.47834, -0.442652, 10.0759 ) }
    soma_0 { pt3dadd( 3.72036, 5.52772, -0.537802, 8.68542 ) }
    soma_0 { pt3dadd( 4.38685, 6.5771, -0.632952, 7.03735 ) }
    soma_0 { pt3dadd( 5.05334, 7.62648, -0.728102, 5.61823 ) }
    soma_0 { pt3dadd( 5.71983, 8.67585, -0.823252, 4.41136 ) }
    soma_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 2.8094 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.13964, -5.50144, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -2.13964, -5.50144, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.65154, -6.18382, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.20178, -7.00729, -15.2249, 0.88 ) }
    dend_31 { pt3dadd( -0.859053, -7.88311, -15.2777, 0.96 ) }
    dend_31 { pt3dadd( -0.553932, -9.00989, -15.3611, 0.52 ) }
    dend_31 { pt3dadd( -0.462055, -9.57363, -15.4075, 0.44 ) }
    dend_31 { pt3dadd( -0.501859, -10.505, -15.4983, 0.37 ) }
    dend_31 { pt3dadd( -0.818533, -11.3319, -15.5961, 0.96 ) }
    dend_31 { pt3dadd( -1.17703, -11.8115, -15.6582, 1.18 ) }
    dend_31 { pt3dadd( -1.44034, -12.0614, -15.7109, 1.18 ) }
    dend_31 { pt3dadd( -1.79627, -12.3575, -15.8143, 0.88 ) }
    dend_31 { pt3dadd( -2.23199, -12.7418, -15.9948, 0.66 ) }
    dend_31 { pt3dadd( -2.65867, -13.1906, -16.2682, 0.52 ) }
    dend_31 { pt3dadd( -3.02317, -13.7302, -16.7059, 0.37 ) }
    dend_31 { pt3dadd( -3.29677, -14.3916, -17.3958, 0.37 ) }
    dend_31 { pt3dadd( -3.45293, -14.9955, -18.1442, 1.11 ) }
    dend_31 { pt3dadd( -3.52328, -15.3748, -18.667, 1.33 ) }
    dend_31 { pt3dadd( -3.57117, -15.6789, -19.1091, 1.4 ) }
    dend_31 { pt3dadd( -3.68759, -16.3197, -20.1021, 0.66 ) }
    dend_31 { pt3dadd( -3.8404, -16.7401, -20.8167, 0.52 ) }
    dend_31 { pt3dadd( -4.14821, -17.1611, -21.5262, 0.59 ) }
    dend_31 { pt3dadd( -4.41044, -17.3991, -21.8983, 0.66 ) }
    dend_31 { pt3dadd( -4.77905, -17.7013, -22.3378, 0.66 ) }
    dend_31 { pt3dadd( -5.08885, -17.9606, -22.6723, 0.37 ) }
    dend_31 { pt3dadd( -5.63043, -18.5338, -23.3315, 0.29 ) }
    dend_31 { pt3dadd( -5.81314, -18.8245, -23.694, 0.29 ) }
    dend_31 { pt3dadd( -6.08523, -19.5253, -24.6076, 1.4 ) }
    dend_31 { pt3dadd( -6.1948, -19.9427, -25.132, 1.84 ) }
    dend_31 { pt3dadd( -6.25337, -20.2881, -25.5599, 1.84 ) }
    dend_31 { pt3dadd( -6.35965, -21.2849, -26.7987, 0.81 ) }
    dend_31 { pt3dadd( -6.42179, -22.2222, -27.9774, 0.37 ) }
    dend_31 { pt3dadd( -6.45135, -22.687, -28.6175, 0.37 ) }
    dend_31 { pt3dadd( -6.48995, -23.2465, -29.4308, 1.55 ) }
    dend_31 { pt3dadd( -6.52762, -23.778, -30.2832, 2.06 ) }
    dend_31 { pt3dadd( -6.5688, -24.2184, -31.0346, 2.21 ) }
    dend_31 { pt3dadd( -6.66727, -25.2562, -32.8552, 0.66 ) }
    dend_31 { pt3dadd( -6.76422, -26.3371, -34.789, 0.66 ) }
    dend_31 { pt3dadd( -6.79961, -26.8301, -35.7289, 0.88 ) }
    dend_31 { pt3dadd( -6.86293, -27.9791, -38.1159, 1.77 ) }
    dend_31 { pt3dadd( -6.90267, -28.5855, -39.42, 3.09 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.29965, -7.64844, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.29965, -7.64844, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.70209, -8.26935, 1.0801, 1.25 ) }
    dend_22 { pt3dadd( -9.4356, -9.48349, 1.38707, 1.11 ) }
    dend_22 { pt3dadd( -10.0173, -10.4464, 1.63053, 1.55 ) }
    dend_22 { pt3dadd( -10.46, -11.1791, 1.81579, 1.92 ) }
    dend_22 { pt3dadd( -10.9883, -12.0536, 2.03688, 2.14 ) }
    dend_22 { pt3dadd( -11.4191, -12.7943, 2.23107, 2.14 ) }
    dend_22 { pt3dadd( -11.7664, -13.4524, 2.41837, 2.14 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.83964, -10.831, -0.944109, 1.62 ) }
    dend_17 { pt3dadd( -5.08735, -11.437, -0.845684, 1.62 ) }
    dend_17 { pt3dadd( -5.47847, -12.3979, -0.675691, 1.47 ) }
    dend_17 { pt3dadd( -5.8076, -13.2205, -0.526582, 1.18 ) }
    dend_17 { pt3dadd( -6.17148, -14.1399, -0.361779, 1.18 ) }
    dend_17 { pt3dadd( -6.50008, -14.9861, -0.221333, 1.77 ) }
    dend_17 { pt3dadd( -6.6742, -15.4534, -0.152859, 2.14 ) }
    dend_17 { pt3dadd( -6.90647, -16.1025, -0.0478974, 2.65 ) }
    dend_17 { pt3dadd( -7.09501, -16.6207, 0.0371875, 2.73 ) }
    dend_17 { pt3dadd( -7.37702, -17.3424, 0.145611, 2.5 ) }
    dend_17 { pt3dadd( -7.81457, -18.3628, 0.277677, 1.92 ) }
    dend_17 { pt3dadd( -8.35517, -19.537, 0.415263, 1.47 ) }
    dend_17 { pt3dadd( -9.01419, -20.8426, 0.557763, 1.18 ) }
    dend_17 { pt3dadd( -9.45588, -21.6353, 0.642587, 1.03 ) }
    dend_17 { pt3dadd( -10.1717, -22.7751, 0.757529, 1.47 ) }
    dend_17 { pt3dadd( -10.5561, -23.3151, 0.804678, 1.99 ) }
    dend_17 { pt3dadd( -10.8499, -23.7013, 0.83123, 2.43 ) }
    dend_17 { pt3dadd( -11.1758, -24.1425, 0.852429, 2.65 ) }
    dend_17 { pt3dadd( -11.5325, -24.7166, 0.863576, 2.36 ) }
    dend_17 { pt3dadd( -11.9948, -25.748, 0.852382, 1.77 ) }
    dend_17 { pt3dadd( -12.4361, -27.324, 0.808321, 1.33 ) }
    dend_17 { pt3dadd( -12.6164, -28.4513, 0.764933, 1.33 ) }
    dend_17 { pt3dadd( -12.6962, -29.6035, 0.718442, 1.55 ) }
    dend_17 { pt3dadd( -12.6684, -30.9671, 0.676197, 1.25 ) }
    dend_17 { pt3dadd( -12.5134, -32.4095, 0.664668, 1.11 ) }
    dend_17 { pt3dadd( -12.2595, -33.6784, 0.683129, 1.55 ) }
    dend_17 { pt3dadd( -12.0703, -34.3479, 0.697656, 2.06 ) }
    dend_17 { pt3dadd( -11.9363, -34.764, 0.711647, 2.43 ) }
    dend_17 { pt3dadd( -11.7423, -35.3399, 0.744365, 2.8 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( -11.524, -36.0075, 0.835237, 2.95 ) }
    dend_17 { pt3dadd( -11.3816, -36.5316, 1.00313, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 2/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.93036, 9.68906, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 5.93036, 9.68906, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 6.54056, 10.9963, -0.422369, 3.54 ) }
    dend_0 { pt3dadd( 7.22583, 12.4643, -0.319343, 3.54 ) }
    dend_0 { pt3dadd( 7.66488, 13.4048, -0.253335, 2.95 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 0.715642 ) }
    axon_0 { pt3dadd( 14.4283, 22.3872, -0.918402, 0.715642 ) }
    axon_0 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.715642 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.90267, -28.5855, -39.42, 0.88 ) }
    dend_33 { pt3dadd( -6.50741, -28.8654, -39.7523, 0.88 ) }
    dend_33 { pt3dadd( -6.13598, -29.1229, -40.0335, 0.52 ) }
    dend_33 { pt3dadd( -5.85391, -29.3109, -40.2283, 0.29 ) }
    dend_33 { pt3dadd( -5.49927, -29.5425, -40.4814, 0.22 ) }
    dend_33 { pt3dadd( -5.13906, -29.7799, -40.741, 1.33 ) }
    dend_33 { pt3dadd( -4.83276, -29.979, -40.9745, 1.47 ) }
    dend_33 { pt3dadd( -4.51552, -30.186, -41.2216, 0.15 ) }
    dend_33 { pt3dadd( -4.28173, -30.3404, -41.3952, 0.15 ) }
    dend_33 { pt3dadd( -3.76099, -30.6826, -41.7961, 0.81 ) }
    dend_33 { pt3dadd( -3.66921, -30.7419, -41.8692, 0.96 ) }
    dend_33 { pt3dadd( -2.8491, -31.2647, -42.5358, 0.22 ) }
    dend_33 { pt3dadd( -2.74643, -31.3299, -42.6266, 0.74 ) }
    dend_33 { pt3dadd( -2.5646, -31.4501, -42.803, 0.74 ) }
    dend_33 { pt3dadd( -1.95059, -31.8587, -43.4463, 0.22 ) }
    dend_33 { pt3dadd( -1.78616, -31.9703, -43.6263, 0.88 ) }
    dend_33 { pt3dadd( -1.69618, -32.0323, -43.7319, 1.11 ) }
    dend_33 { pt3dadd( -1.02487, -32.5006, -44.5893, 0.22 ) }
    dend_33 { pt3dadd( -0.617608, -32.7781, -45.1311, 1.62 ) }
    dend_33 { pt3dadd( -0.36244, -32.9523, -45.4805, 2.06 ) }
    dend_33 { pt3dadd( 0.0853479, -33.2786, -46.1182, 0.81 ) }
    dend_33 { pt3dadd( 0.419469, -33.5401, -46.6172, 1.33 ) }
    dend_33 { pt3dadd( 0.93125, -33.9784, -47.4107, 0.22 ) }
    dend_33 { pt3dadd( 1.26832, -34.2937, -47.9354, 1.33 ) }
    dend_33 { pt3dadd( 1.41099, -34.4371, -48.1758, 1.62 ) }
    dend_33 { pt3dadd( 1.93068, -35.0132, -49.1168, 0.59 ) }
    dend_33 { pt3dadd( 2.27264, -35.4372, -49.8122, 0.22 ) }
    dend_33 { pt3dadd( 2.44092, -35.6905, -50.2351, 0.74 ) }
    dend_33 { pt3dadd( 2.50719, -35.8155, -50.4382, 0.96 ) }
    dend_33 { pt3dadd( 2.75884, -36.392, -51.3756, 0.29 ) }
    dend_33 { pt3dadd( 2.84888, -36.6473, -51.8266, 1.18 ) }
    dend_33 { pt3dadd( 2.89011, -36.806, -52.1274, 1.4 ) }
    dend_33 { pt3dadd( 3.01437, -37.445, -53.3577, 0.22 ) }
    dend_33 { pt3dadd( 3.03911, -37.6327, -53.7381, 1.03 ) }
    dend_33 { pt3dadd( 3.04483, -37.7495, -53.9794, 1.18 ) }
    dend_33 { pt3dadd( 3.00833, -38.5437, -55.647, 0.44 ) }
    dend_33 { pt3dadd( 2.97012, -38.8646, -56.3689, 0.22 ) }
    dend_33 { pt3dadd( 2.95174, -38.9767, -56.626, 1.18 ) }
    dend_33 { pt3dadd( 2.894, -39.2872, -57.3579, 1.18 ) }
    dend_33 { pt3dadd( 2.84847, -39.5094, -57.9116, 1.62 ) }
    dend_33 { pt3dadd( 2.78552, -39.8709, -58.826, 1.84 ) }
    dend_33 { pt3dadd( 2.7697, -40.0192, -59.2014, 1.99 ) }
    dend_33 { pt3dadd( 2.76522, -40.572, -60.6339, 0.22 ) }
    dend_33 { pt3dadd( 2.78938, -40.9236, -61.5631, 1.47 ) }
    dend_33 { pt3dadd( 2.83099, -41.2169, -62.3137, 1.69 ) }
    dend_33 { pt3dadd( 2.86755, -41.4003, -62.7917, 1.4 ) }
    dend_33 { pt3dadd( 2.96603, -41.7719, -63.7621, 0.81 ) }
    dend_33 { pt3dadd( 3.1339, -42.2767, -65.0948, 1.03 ) }
    dend_33 { pt3dadd( 3.35211, -42.8506, -66.674, 0.22 ) }
    dend_33 { pt3dadd( 3.42671, -43.0196, -67.1326, 1.47 ) }
    dend_33 { pt3dadd( 3.64673, -43.4584, -68.2524, 1.62 ) }
    dend_33 { pt3dadd( 3.81716, -43.7705, -69.0162, 0.29 ) }
    dend_33 { pt3dadd( 4.05178, -44.1296, -69.8597, 1.18 ) }
    dend_33 { pt3dadd( 4.29832, -44.4362, -70.5366, 1.47 ) }
    dend_33 { pt3dadd( 4.66332, -44.8203, -71.3382, 0.15 ) }
    dend_33 { pt3dadd( 4.91488, -45.074, -71.8484, 0.15 ) }
    dend_33 { pt3dadd( 5.17673, -45.331, -72.302, 1.18 ) }
    dend_33 { pt3dadd( 5.6126, -45.7852, -73.0146, 0.22 ) }
    dend_33 { pt3dadd( 5.78142, -45.9735, -73.2929, 0.22 ) }
    dend_33 { pt3dadd( 6.09565, -46.3338, -73.842, 0.88 ) }
    dend_33 { pt3dadd( 6.25972, -46.5355, -74.1623, 0.88 ) }
    dend_33 { pt3dadd( 6.46504, -46.7857, -74.5872, 1.11 ) }
    dend_33 { pt3dadd( 6.6861, -47.0409, -75.0373, 1.33 ) }
    dend_33 { pt3dadd( 7.40294, -47.8249, -76.4975, 0.22 ) }
    dend_33 { pt3dadd( 7.75469, -48.1956, -77.2346, 1.03 ) }
    dend_33 { pt3dadd( 7.80734, -48.2482, -77.3457, 1.25 ) }
    dend_33 { pt3dadd( 8.39538, -48.8123, -78.5669, 0.22 ) }
    dend_33 { pt3dadd( 8.68586, -49.0787, -79.1677, 1.33 ) }
    dend_33 { pt3dadd( 8.86248, -49.2363, -79.5224, 1.4 ) }
    dend_33 { pt3dadd( 9.41446, -49.7618, -80.6653, 0.22 ) }
    dend_33 { pt3dadd( 9.67965, -50.0274, -81.2491, 0.74 ) }
    dend_33 { pt3dadd( 10.0995, -50.4687, -82.2496, 0.22 ) }
    dend_33 { pt3dadd( 10.4926, -50.9124, -83.2452, 1.4 ) }
    dend_33 { pt3dadd( 10.6251, -51.0718, -83.5975, 1.47 ) }
    dend_33 { pt3dadd( 11.0985, -51.6472, -84.8706, 0.15 ) }
    dend_33 { pt3dadd( 11.4612, -52.0745, -85.8465, 1.25 ) }
    dend_33 { pt3dadd( 11.6003, -52.2395, -86.2406, 1.25 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.90267, -28.5855, -39.42, 1.92 ) }
    dend_32 { pt3dadd( -7.67598, -28.9769, -40.6234, 1.92 ) }
    dend_32 { pt3dadd( -8.36094, -29.3431, -41.718, 1.77 ) }
    dend_32 { pt3dadd( -9.20915, -29.8192, -43.0573, 2.21 ) }
    dend_32 { pt3dadd( -9.83894, -30.2156, -44.1027, 0.22 ) }
    dend_32 { pt3dadd( -10.0485, -30.3592, -44.4753, 0.22 ) }
    dend_32 { pt3dadd( -10.4748, -30.6705, -45.2645, 0.22 ) }
    dend_32 { pt3dadd( -10.9576, -31.0701, -46.2531, 1.47 ) }
    dend_32 { pt3dadd( -11.0944, -31.197, -46.5631, 1.77 ) }
    dend_32 { pt3dadd( -11.6535, -31.7603, -47.9374, 0.52 ) }
    dend_32 { pt3dadd( -12.0655, -32.1942, -49.0326, 1.25 ) }
    dend_32 { pt3dadd( -12.2148, -32.3593, -49.4509, 1.4 ) }
    dend_32 { pt3dadd( -12.636, -32.9085, -50.7775, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -12.9792, -33.4133, -51.9366, 1.62 ) }
    dend_32 { pt3dadd( -13.1052, -33.6188, -52.4191, 1.84 ) }
    dend_32 { pt3dadd( -13.3679, -34.1013, -53.5104, 0.52 ) }
    dend_32 { pt3dadd( -13.6258, -34.6417, -54.683, 1.69 ) }
    dend_32 { pt3dadd( -13.774, -34.9905, -55.3971, 2.06 ) }
    dend_32 { pt3dadd( -13.8687, -35.2523, -55.8864, 2.21 ) }
    dend_32 { pt3dadd( -14.3666, -36.6887, -58.4708, 0.44 ) }
    dend_32 { pt3dadd( -14.4841, -37.0796, -59.1699, 0.81 ) }
    dend_32 { pt3dadd( -14.5195, -37.227, -59.418, 0.81 ) }
    dend_32 { pt3dadd( -14.5933, -37.5356, -59.9085, 0.59 ) }
    dend_32 { pt3dadd( -14.6366, -37.7222, -60.184, 0.88 ) }
    dend_32 { pt3dadd( -14.751, -38.3327, -60.9994, 0.37 ) }
    dend_32 { pt3dadd( -15.0067, -39.8105, -62.7613, 1.4 ) }
    dend_32 { pt3dadd( -15.0727, -40.1814, -63.2002, 1.92 ) }
    dend_32 { pt3dadd( -15.2738, -41.2216, -64.5705, 0.22 ) }
    dend_32 { pt3dadd( -15.3507, -41.5861, -65.0861, 0.22 ) }
    dend_32 { pt3dadd( -15.4139, -41.835, -65.4489, 0.22 ) }
    dend_32 { pt3dadd( -15.5927, -42.3959, -66.2645, 1.84 ) }
    dend_32 { pt3dadd( -15.6388, -42.5118, -66.4578, 2.06 ) }
    dend_32 { pt3dadd( -16.2398, -43.8642, -69.0162, 0.22 ) }
    dend_32 { pt3dadd( -16.3465, -44.0674, -69.4473, 0.22 ) }
    dend_32 { pt3dadd( -16.4404, -44.2129, -69.788, 0.96 ) }
    dend_32 { pt3dadd( -16.553, -44.3629, -70.1592, 1.18 ) }
    dend_32 { pt3dadd( -17.3886, -45.3648, -72.744, 0.44 ) }
    dend_32 { pt3dadd( -17.5388, -45.5338, -73.1645, 1.18 ) }
    dend_32 { pt3dadd( -17.7383, -45.7389, -73.6544, 1.18 ) }
    dend_32 { pt3dadd( -18.1995, -46.2096, -74.817, 1.33 ) }
    dend_32 { pt3dadd( -18.423, -46.4453, -75.3777, 1.47 ) }
    dend_32 { pt3dadd( -19.0739, -47.1535, -76.9188, 0.29 ) }
    dend_32 { pt3dadd( -19.4125, -47.5284, -77.6394, 1.4 ) }
    dend_32 { pt3dadd( -19.5926, -47.7474, -78.0726, 1.62 ) }
    dend_32 { pt3dadd( -20.293, -48.7437, -80.0939, 0.22 ) }
    dend_32 { pt3dadd( -20.4244, -48.9521, -80.5095, 0.81 ) }
    dend_32 { pt3dadd( -20.5784, -49.2077, -81.0124, 0.29 ) }
    dend_32 { pt3dadd( -20.789, -49.5681, -81.6921, 1.11 ) }
    dend_32 { pt3dadd( -21.4647, -50.7314, -83.8876, 0.59 ) }
    dend_32 { pt3dadd( -22.1743, -51.8715, -85.9617, 0.22 ) }
    dend_32 { pt3dadd( -22.3932, -52.1952, -86.5346, 0.22 ) }
    dend_32 { pt3dadd( -22.6945, -52.5984, -87.2697, 1.69 ) }
    dend_32 { pt3dadd( -22.8724, -52.81, -87.6875, 2.14 ) }
    dend_32 { pt3dadd( -23.6963, -53.6872, -89.4361, 0.22 ) }
    dend_32 { pt3dadd( -24.0667, -54.0328, -90.1028, 1.92 ) }
    dend_32 { pt3dadd( -24.2829, -54.2165, -90.4688, 2.21 ) }
    dend_32 { pt3dadd( -24.5642, -54.447, -90.9575, 2.21 ) }
    dend_32 { pt3dadd( -25.9201, -55.5542, -93.3221, 0.22 ) }
    dend_32 { pt3dadd( -26.0482, -55.6609, -93.5467, 0.44 ) }
    dend_32 { pt3dadd( -26.3731, -55.9529, -94.1082, 0.29 ) }
    dend_32 { pt3dadd( -26.7847, -56.3568, -94.8413, 1.03 ) }
    dend_32 { pt3dadd( -26.9096, -56.486, -95.0624, 0.81 ) }
    dend_32 { pt3dadd( -27.2192, -56.8255, -95.55, 0.29 ) }
    dend_32 { pt3dadd( -27.5849, -57.2323, -96.0379, 1.11 ) }
    dend_32 { pt3dadd( -27.7215, -57.3876, -96.2607, 1.33 ) }
    dend_32 { pt3dadd( -27.8861, -57.5831, -96.5557, 1.33 ) }
    dend_32 { pt3dadd( -28.9527, -58.8746, -98.516, 0.22 ) }
    dend_32 { pt3dadd( -29.3375, -59.3438, -99.2645, 1.99 ) }
    dend_32 { pt3dadd( -29.5051, -59.5419, -99.5887, 2.43 ) }
    dend_32 { pt3dadd( -30.788, -61.0404, -102.089, 0.22 ) }
    dend_32 { pt3dadd( -30.96, -61.238, -102.452, 0.59 ) }
    dend_32 { pt3dadd( -31.0824, -61.3867, -102.72, 0.59 ) }
    dend_32 { pt3dadd( -31.5401, -61.9547, -103.73, 0.22 ) }
    dend_32 { pt3dadd( -31.7285, -62.1956, -104.163, 1.25 ) }
    dend_32 { pt3dadd( -31.978, -62.5433, -104.766, 1.62 ) }
    dend_32 { pt3dadd( -32.88, -63.8845, -106.907, 0.22 ) }
    dend_32 { pt3dadd( -33.2215, -64.42, -107.76, 0.22 ) }
    dend_32 { pt3dadd( -33.3619, -64.6637, -108.125, 0.96 ) }
    dend_32 { pt3dadd( -33.4449, -64.8316, -108.355, 1.33 ) }
    dend_32 { pt3dadd( -33.9674, -66.0897, -110.023, 0.22 ) }
    dend_32 { pt3dadd( -34.0477, -66.3292, -110.343, 0.74 ) }
    dend_32 { pt3dadd( -34.1119, -66.5784, -110.664, 0.74 ) }
    dend_32 { pt3dadd( -34.1813, -66.9103, -111.111, 0.22 ) }
    dend_32 { pt3dadd( -34.3043, -67.619, -112.046, 1.84 ) }
    dend_32 { pt3dadd( -34.3652, -68.0185, -112.57, 2.14 ) }
    dend_32 { pt3dadd( -34.5729, -69.5829, -114.563, 0.22 ) }
    dend_32 { pt3dadd( -34.6064, -69.8536, -114.909, 0.22 ) }
    dend_32 { pt3dadd( -34.6749, -70.4041, -115.607, 1.55 ) }
    dend_32 { pt3dadd( -34.7211, -70.742, -116.029, 1.84 ) }
    dend_32 { pt3dadd( -34.8814, -71.7361, -117.283, 0.22 ) }
    dend_32 { pt3dadd( -34.9477, -72.0884, -117.733, 0.52 ) }
    dend_32 { pt3dadd( -35.0591, -72.5604, -118.444, 0.22 ) }
    dend_32 { pt3dadd( -35.2234, -73.1107, -119.432, 1.03 ) }
    dend_32 { pt3dadd( -35.2612, -73.2176, -119.642, 1.18 ) }
    dend_32 { pt3dadd( -35.6503, -74.2097, -121.716, 1.25 ) }
    dend_32 { pt3dadd( -35.7767, -74.4957, -122.35, 1.62 ) }
    dend_32 { pt3dadd( -36.3502, -75.7029, -125.053, 0.22 ) }
    dend_32 { pt3dadd( -36.5329, -76.0583, -125.895, 0.22 ) }
    dend_32 { pt3dadd( -36.6917, -76.3498, -126.574, 1.47 ) }
    dend_32 { pt3dadd( -36.9091, -76.7366, -127.465, 1.62 ) }
    dend_32 { pt3dadd( -37.2565, -77.348, -128.872, 0.22 ) }
    dend_32 { pt3dadd( -37.3606, -77.5445, -129.353, 0.96 ) }
    dend_32 { pt3dadd( -37.9089, -78.6579, -132.055, 0.22 ) }
    dend_32 { pt3dadd( -38.0276, -78.9097, -132.708, 1.18 ) }
    dend_32 { pt3dadd( -38.2112, -79.278, -133.707, 1.4 ) }
    dend_32 { pt3dadd( -38.5975, -79.9837, -135.636, 1.03 ) }
    dend_32 { pt3dadd( -39.205, -80.9944, -138.429, 0.22 ) }
    dend_32 { pt3dadd( -39.3634, -81.2354, -139.106, 1.47 ) }
    dend_32 { pt3dadd( -39.6272, -81.5935, -140.144, 1.55 ) }
    dend_32 { pt3dadd( -39.9344, -81.9709, -141.278, 0.22 ) }
    dend_32 { pt3dadd( -40.2265, -82.2918, -142.21, 0.22 ) }
    dend_32 { pt3dadd( -40.3875, -82.4406, -142.633, 1.11 ) }
    dend_32 { pt3dadd( -40.6664, -82.6584, -143.349, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_32 { pt3dadd( -41.6684, -83.3515, -146.005, 0.22 ) }
    dend_32 { pt3dadd( -41.8078, -83.4422, -146.38, 1.18 ) }
    dend_32 { pt3dadd( -41.982, -83.5487, -146.88, 1.18 ) }
    dend_32 { pt3dadd( -42.3878, -83.7939, -148.091, 0.66 ) }
    dend_32 { pt3dadd( -43.5312, -84.4682, -151.509, 0.22 ) }
    dend_32 { pt3dadd( -43.7766, -84.6023, -152.205, 0.22 ) }
    dend_32 { pt3dadd( -44.1599, -84.7897, -153.219, 1.18 ) }
    dend_32 { pt3dadd( -44.4903, -84.9388, -154.134, 1.47 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.7664, -13.4524, 2.41837, 0.59 ) }
    dend_24 { pt3dadd( -13.7288, -14.0538, 2.79924, 0.59 ) }
    dend_24 { pt3dadd( -14.5753, -14.2236, 2.93586, 0.66 ) }
    dend_24 { pt3dadd( -15.2404, -14.2892, 3.05069, 0.81 ) }
    dend_24 { pt3dadd( -15.6383, -14.2928, 3.12967, 0.81 ) }
    dend_24 { pt3dadd( -16.4204, -14.2814, 3.31119, 0.81 ) }
    dend_24 { pt3dadd( -17.4328, -14.2812, 3.62923, 0.96 ) }
    dend_24 { pt3dadd( -18.0089, -14.2359, 3.85161, 0.66 ) }
    dend_24 { pt3dadd( -18.7201, -14.1627, 4.17602, 0.37 ) }
    dend_24 { pt3dadd( -19.4067, -14.0765, 4.54148, 0.37 ) }
    dend_24 { pt3dadd( -20.2559, -13.9724, 5.07635, 1.18 ) }
    dend_24 { pt3dadd( -21.2295, -13.8914, 5.8666, 1.69 ) }
    dend_24 { pt3dadd( -21.5088, -13.9181, 6.16887, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.7664, -13.4524, 2.41837, 1.25 ) }
    dend_23 { pt3dadd( -12.3914, -14.7597, 1.93294, 1.25 ) }
    dend_23 { pt3dadd( -13.1192, -16.1047, 1.4722, 0.74 ) }
    dend_23 { pt3dadd( -13.6445, -16.9829, 1.20078, 0.96 ) }
    dend_23 { pt3dadd( -14.3415, -18.0382, 0.915699, 1.18 ) }
    dend_23 { pt3dadd( -14.8984, -18.838, 0.769394, 1.47 ) }
    dend_23 { pt3dadd( -15.4703, -19.6543, 0.668802, 1.47 ) }
    dend_23 { pt3dadd( -15.9551, -20.2985, 0.646696, 1.55 ) }
    dend_23 { pt3dadd( -16.5307, -21.0529, 0.702399, 1.55 ) }
    dend_23 { pt3dadd( -17.1198, -21.8673, 0.802189, 1.33 ) }
    dend_23 { pt3dadd( -18.0259, -23.1998, 1.02039, 1.11 ) }
    dend_23 { pt3dadd( -18.5562, -24.0452, 1.1206, 0.96 ) }
    dend_23 { pt3dadd( -18.9861, -24.8019, 1.11182, 0.81 ) }
    dend_23 { pt3dadd( -19.5235, -25.8084, 0.684171, 0.66 ) }
    dend_23 { pt3dadd( -19.8873, -26.5119, 0.100784, 0.52 ) }
    dend_23 { pt3dadd( -20.1297, -26.9622, -0.395785, 0.52 ) }
    dend_23 { pt3dadd( -20.5747, -27.7079, -1.34049, 1.11 ) }
    dend_23 { pt3dadd( -21.3232, -28.8419, -2.85771, 1.55 ) }
    dend_23 { pt3dadd( -22.9304, -31.0997, -5.93627, 1.33 ) }
    dend_23 { pt3dadd( -23.5651, -31.9207, -7.0579, 0.88 ) }
    dend_23 { pt3dadd( -24.1784, -32.6517, -7.98678, 1.18 ) }
    dend_23 { pt3dadd( -24.8379, -33.4, -8.76827, 1.84 ) }
    dend_23 { pt3dadd( -25.2982, -33.8979, -9.10252, 2.21 ) }
    dend_23 { pt3dadd( -25.8115, -34.4431, -9.25404, 2.36 ) }
    dend_23 { pt3dadd( -26.2868, -34.9436, -9.25376, 2.5 ) }
    dend_23 { pt3dadd( -26.9042, -35.5772, -9.23077, 2.28 ) }
    dend_23 { pt3dadd( -27.7426, -36.4588, -9.20482, 1.92 ) }
    dend_23 { pt3dadd( -28.7437, -37.5245, -9.23055, 1.18 ) }
    dend_23 { pt3dadd( -29.4271, -38.247, -9.29601, 0.96 ) }
    dend_23 { pt3dadd( -30.1251, -38.9682, -9.43037, 0.66 ) }
    dend_23 { pt3dadd( -31.0341, -39.8868, -9.7267, 0.44 ) }
    dend_23 { pt3dadd( -32.1721, -41.0161, -10.2854, 1.77 ) }
    dend_23 { pt3dadd( -32.8703, -41.7045, -10.7252, 2.28 ) }
    dend_23 { pt3dadd( -33.3655, -42.1988, -11.1101, 2.28 ) }
    dend_23 { pt3dadd( -33.9768, -42.8393, -11.6575, 2.43 ) }
    dend_23 { pt3dadd( -34.7, -43.6546, -12.3527, 1.92 ) }
    dend_23 { pt3dadd( -35.624, -44.793, -13.2741, 0.81 ) }
    dend_23 { pt3dadd( -36.294, -45.6883, -13.9199, 0.96 ) }
    dend_23 { pt3dadd( -36.9895, -46.6801, -14.5036, 1.18 ) }
    dend_23 { pt3dadd( -37.4135, -47.2981, -14.7879, 0.96 ) }
    dend_23 { pt3dadd( -38.0585, -48.2072, -15.0521, 0.44 ) }
    dend_23 { pt3dadd( -38.56, -48.8465, -15.1399, 0.96 ) }
    dend_23 { pt3dadd( -38.8456, -49.1937, -15.156, 1.11 ) }
    dend_23 { pt3dadd( -39.6374, -50.0858, -15.1296, 0.52 ) }
    dend_23 { pt3dadd( -40.3132, -50.7731, -15.0332, 0.44 ) }
    dend_23 { pt3dadd( -41.5074, -51.8216, -14.823, 1.03 ) }
    dend_23 { pt3dadd( -42.2763, -52.3979, -14.6577, 1.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 68/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.3816, -36.5316, 1.00313, 0.81 ) }
    dend_21 { pt3dadd( -12.5827, -37.4659, -2.3209, 0.81 ) }
    dend_21 { pt3dadd( -13.2024, -37.8241, -3.7939, 1.18 ) }
    dend_21 { pt3dadd( -13.5929, -38.0527, -4.66474, 1.25 ) }
    dend_21 { pt3dadd( -14.2226, -38.4476, -6.11756, 0.66 ) }
    dend_21 { pt3dadd( -14.4279, -38.5938, -6.61642, 0.52 ) }
    dend_21 { pt3dadd( -14.8041, -38.9027, -7.57119, 0.66 ) }
    dend_21 { pt3dadd( -15.0242, -39.0975, -8.0942, 0.88 ) }
    dend_21 { pt3dadd( -15.2395, -39.5629, -8.97472, 1.11 ) }
    dend_21 { pt3dadd( -15.3211, -40.1521, -10.1168, 1.25 ) }
    dend_21 { pt3dadd( -15.3347, -40.376, -10.5794, 1.25 ) }
    dend_21 { pt3dadd( -15.3424, -40.5875, -11.0293, 0.96 ) }
    dend_21 { pt3dadd( -15.3437, -40.9373, -11.7746, 0.59 ) }
    dend_21 { pt3dadd( -15.3678, -41.552, -13.1991, 1.18 ) }
    dend_21 { pt3dadd( -15.4561, -42.6308, -15.7882, 1.25 ) }
    dend_21 { pt3dadd( -15.5412, -43.4322, -17.6175, 1.25 ) }
    dend_21 { pt3dadd( -15.5824, -43.83, -18.476, 1.69 ) }
    dend_21 { pt3dadd( -15.6127, -44.0999, -19.0037, 1.77 ) }
    dend_21 { pt3dadd( -15.8038, -45.5939, -21.4104, 0.81 ) }
    dend_21 { pt3dadd( -15.8898, -46.2536, -22.2733, 1.11 ) }
    dend_21 { pt3dadd( -15.9335, -46.8249, -22.8709, 0.96 ) }
    dend_21 { pt3dadd( -16.0064, -47.5311, -23.5026, 0.52 ) }
    dend_21 { pt3dadd( -16.1781, -48.5132, -24.2751, 0.52 ) }
    dend_21 { pt3dadd( -16.5762, -50.1918, -25.405, 2.21 ) }
    dend_21 { pt3dadd( -16.8201, -50.9778, -25.8098, 2.5 ) }
    dend_21 { pt3dadd( -16.938, -51.2738, -25.9603, 2.5 ) }
    dend_21 { pt3dadd( -17.3703, -52.1652, -26.4135, 0.66 ) }
    dend_21 { pt3dadd( -17.7893, -52.869, -26.7829, 1.25 ) }
    dend_21 { pt3dadd( -18.0321, -53.2237, -26.9614, 1.47 ) }
    dend_21 { pt3dadd( -18.3292, -53.5952, -27.1283, 1.47 ) }
    dend_21 { pt3dadd( -18.8825, -54.2549, -27.381, 1.33 ) }
    dend_21 { pt3dadd( -19.2244, -54.6298, -27.5266, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -19.7568, -55.1816, -27.7421, 0.29 ) }
    dend_21 { pt3dadd( -20.0229, -55.4581, -27.8602, 0.22 ) }
    dend_21 { pt3dadd( -20.3709, -55.845, -28.0267, 0.22 ) }
    dend_21 { pt3dadd( -20.7766, -56.3737, -28.23, 0.96 ) }
    dend_21 { pt3dadd( -21.0018, -56.736, -28.3438, 1.18 ) }
    dend_21 { pt3dadd( -21.1648, -57.0864, -28.4611, 0.96 ) }
    dend_21 { pt3dadd( -21.5172, -58.1192, -28.8579, 0.22 ) }
    dend_21 { pt3dadd( -21.6206, -58.4878, -29.0242, 0.22 ) }
    dend_21 { pt3dadd( -21.7782, -59.0758, -29.3481, 0.88 ) }
    dend_21 { pt3dadd( -21.867, -59.4247, -29.5625, 1.11 ) }
    dend_21 { pt3dadd( -22.1101, -60.3381, -30.1369, 0.22 ) }
    dend_21 { pt3dadd( -22.4251, -61.2762, -30.8346, 1.77 ) }
    dend_21 { pt3dadd( -22.5825, -61.642, -31.1947, 2.28 ) }
    dend_21 { pt3dadd( -22.875, -62.2007, -31.9142, 2.28 ) }
    dend_21 { pt3dadd( -23.422, -63.0352, -33.2471, 0.15 ) }
    dend_21 { pt3dadd( -23.6622, -63.369, -33.8678, 0.74 ) }
    dend_21 { pt3dadd( -24.2663, -64.1825, -35.5585, 0.44 ) }
    dend_21 { pt3dadd( -24.9548, -65.183, -37.7015, 1.69 ) }
    dend_21 { pt3dadd( -25.4049, -65.8775, -39.2403, 2.28 ) }
    dend_21 { pt3dadd( -25.6313, -66.2469, -40.0663, 2.58 ) }
    dend_21 { pt3dadd( -26.1653, -67.1297, -42.0305, 0.52 ) }
    dend_21 { pt3dadd( -26.4961, -67.7314, -43.2712, 0.29 ) }
    dend_21 { pt3dadd( -26.9899, -68.7645, -45.0996, 2.21 ) }
    dend_21 { pt3dadd( -27.3771, -69.6336, -46.438, 2.58 ) }
    dend_21 { pt3dadd( -28.0535, -71.1381, -48.5152, 0.29 ) }
    dend_21 { pt3dadd( -28.262, -71.59, -49.0778, 0.22 ) }
    dend_21 { pt3dadd( -28.4229, -71.8964, -49.4202, 0.22 ) }
    dend_21 { pt3dadd( -28.7085, -72.3877, -49.913, 1.33 ) }
    dend_21 { pt3dadd( -28.95, -72.7666, -50.2355, 1.55 ) }
    dend_21 { pt3dadd( -30.0452, -74.4393, -51.4688, 0.22 ) }
    dend_21 { pt3dadd( -30.3393, -74.8678, -51.7646, 0.96 ) }
    dend_21 { pt3dadd( -30.5302, -75.1268, -51.9667, 1.25 ) }
    dend_21 { pt3dadd( -30.7512, -75.397, -52.2218, 1.25 ) }
    dend_21 { pt3dadd( -31.5365, -76.2774, -53.1575, 0.22 ) }
    dend_21 { pt3dadd( -32.0655, -76.8297, -53.7716, 0.88 ) }
    dend_21 { pt3dadd( -32.256, -77.02, -53.9943, 1.11 ) }
    dend_21 { pt3dadd( -32.6423, -77.4187, -54.4695, 1.11 ) }
    dend_21 { pt3dadd( -33.8705, -78.7684, -55.9801, 0.22 ) }
    dend_21 { pt3dadd( -34.2974, -79.2631, -56.4921, 1.77 ) }
    dend_21 { pt3dadd( -34.5606, -79.5828, -56.8005, 2.28 ) }
    dend_21 { pt3dadd( -34.9038, -80.0262, -57.1834, 2.14 ) }
    dend_21 { pt3dadd( -35.8473, -81.3143, -58.2231, 0.22 ) }
    dend_21 { pt3dadd( -36.2861, -81.9697, -58.6901, 1.03 ) }
    dend_21 { pt3dadd( -36.4959, -82.3135, -58.9234, 1.33 ) }
    dend_21 { pt3dadd( -37.1917, -83.4353, -59.7627, 0.22 ) }
    dend_21 { pt3dadd( -37.4469, -83.8335, -60.0828, 0.96 ) }
    dend_21 { pt3dadd( -37.7258, -84.2397, -60.4426, 1.25 ) }
    dend_21 { pt3dadd( -37.893, -84.471, -60.6654, 1.33 ) }
    dend_21 { pt3dadd( -38.9673, -85.9231, -62.1537, 0.15 ) }
    dend_21 { pt3dadd( -39.4102, -86.5419, -62.8087, 1.18 ) }
    dend_21 { pt3dadd( -39.7073, -86.9737, -63.2649, 1.55 ) }
    dend_21 { pt3dadd( -40.4469, -88.1172, -64.4249, 0.22 ) }
    dend_21 { pt3dadd( -40.637, -88.4302, -64.717, 0.96 ) }
    dend_21 { pt3dadd( -40.8891, -88.8613, -65.0972, 0.96 ) }
    dend_21 { pt3dadd( -41.39, -89.8075, -65.8492, 0.22 ) }
    dend_21 { pt3dadd( -41.5348, -90.1319, -66.0785, 0.66 ) }
    dend_21 { pt3dadd( -41.9055, -91.0369, -66.7125, 0.22 ) }
    dend_21 { pt3dadd( -42.1188, -91.5978, -67.0864, 1.4 ) }
    dend_21 { pt3dadd( -42.3122, -92.1205, -67.4434, 1.84 ) }
    dend_21 { pt3dadd( -42.4311, -92.4272, -67.6582, 1.62 ) }
    dend_21 { pt3dadd( -43.0335, -93.8597, -68.6633, 0.15 ) }
    dend_21 { pt3dadd( -43.4687, -94.8682, -69.3947, 1.03 ) }
    dend_21 { pt3dadd( -43.626, -95.2085, -69.6721, 1.55 ) }
    dend_21 { pt3dadd( -43.8114, -95.6007, -70.0026, 1.55 ) }
    dend_21 { pt3dadd( -44.4253, -96.8823, -71.0952, 0.22 ) }
    dend_21 { pt3dadd( -44.5917, -97.2301, -71.4089, 0.88 ) }
    dend_21 { pt3dadd( -44.8004, -97.6292, -71.7831, 0.88 ) }
    dend_21 { pt3dadd( -45.5846, -99.1154, -73.0786, 0.22 ) }
    dend_21 { pt3dadd( -45.8792, -99.6673, -73.5284, 1.18 ) }
    dend_21 { pt3dadd( -46.0859, -100.046, -73.8111, 1.33 ) }
    dend_21 { pt3dadd( -46.7954, -101.344, -74.7463, 0.22 ) }
    dend_21 { pt3dadd( -47.1181, -101.929, -75.1493, 0.22 ) }
    dend_21 { pt3dadd( -47.5482, -102.648, -75.6286, 0.22 ) }
    dend_21 { pt3dadd( -47.9449, -103.308, -76.0192, 0.22 ) }
    dend_21 { pt3dadd( -48.4877, -104.2, -76.5549, 1.55 ) }
    dend_21 { pt3dadd( -48.8967, -104.893, -76.9752, 1.92 ) }
    dend_21 { pt3dadd( -49.1086, -105.289, -77.2072, 1.77 ) }
    dend_21 { pt3dadd( -49.876, -106.92, -78.2122, 0.22 ) }
    dend_21 { pt3dadd( -50.1507, -107.529, -78.6091, 0.96 ) }
    dend_21 { pt3dadd( -50.3, -107.885, -78.8448, 1.11 ) }
    dend_21 { pt3dadd( -50.7759, -109.12, -79.6788, 0.22 ) }
    dend_21 { pt3dadd( -51.063, -109.912, -80.2029, 0.22 ) }
    dend_21 { pt3dadd( -51.3034, -110.62, -80.6904, 1.03 ) }
    dend_21 { pt3dadd( -51.4375, -111.048, -80.9887, 1.33 ) }
    dend_21 { pt3dadd( -51.5907, -111.517, -81.3353, 1.33 ) }
    dend_21 { pt3dadd( -52.1433, -113.085, -82.51, 0.15 ) }
    dend_21 { pt3dadd( -52.3873, -113.749, -82.9935, 0.15 ) }
    dend_21 { pt3dadd( -52.75, -114.676, -83.6507, 1.55 ) }
    dend_21 { pt3dadd( -52.9137, -115.097, -83.9229, 1.84 ) }
    dend_21 { pt3dadd( -53.0866, -115.537, -84.184, 1.77 ) }
    dend_21 { pt3dadd( -53.5091, -116.534, -84.709, 0.22 ) }
    dend_21 { pt3dadd( -53.7869, -117.126, -84.9657, 0.22 ) }
    dend_21 { pt3dadd( -54.082, -117.695, -85.1893, 0.96 ) }
    dend_21 { pt3dadd( -54.2804, -118.049, -85.3021, 1.11 ) }
    dend_21 { pt3dadd( -54.8908, -119.04, -85.5895, 0.22 ) }
    dend_21 { pt3dadd( -55.1958, -119.46, -85.7277, 0.22 ) }
    dend_21 { pt3dadd( -55.5765, -119.891, -85.8917, 0.22 ) }
    dend_21 { pt3dadd( -55.8822, -120.181, -86.0212, 0.96 ) }
    dend_21 { pt3dadd( -56.0895, -120.35, -86.1027, 1.25 ) }
    dend_21 { pt3dadd( -56.5313, -120.661, -86.263, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_21 { pt3dadd( -57.6539, -121.363, -86.7093, 0.15 ) }
    dend_21 { pt3dadd( -58.2841, -121.758, -87.0146, 0.15 ) }
    dend_21 { pt3dadd( -58.522, -121.918, -87.1632, 0.44 ) }
    dend_21 { pt3dadd( -58.7706, -122.098, -87.3555, 0.44 ) }
    dend_21 { pt3dadd( -59.2558, -122.46, -87.7708, 0.15 ) }
    dend_21 { pt3dadd( -60.0108, -123.088, -88.5229, 1.33 ) }
    dend_21 { pt3dadd( -60.34, -123.388, -88.9218, 1.4 ) }
    dend_21 { pt3dadd( -61.0416, -124.162, -90.0902, 0.22 ) }
    dend_21 { pt3dadd( -61.3695, -124.587, -90.7738, 0.44 ) }
    dend_21 { pt3dadd( -61.5399, -124.852, -91.197, 0.22 ) }
    dend_21 { pt3dadd( -61.8423, -125.409, -92.1145, 1.33 ) }
    dend_21 { pt3dadd( -62.1009, -125.98, -93.0681, 1.62 ) }
    dend_21 { pt3dadd( -62.5834, -127.221, -95.1316, 0.22 ) }
    dend_21 { pt3dadd( -62.721, -127.655, -95.8357, 0.22 ) }
    dend_21 { pt3dadd( -62.8323, -128.078, -96.5056, 0.96 ) }
    dend_21 { pt3dadd( -62.9772, -128.868, -97.7032, 1.18 ) }
    dend_21 { pt3dadd( -63.1246, -130.011, -99.355, 0.22 ) }
    dend_21 { pt3dadd( -63.1427, -130.321, -99.7478, 0.22 ) }
    dend_21 { pt3dadd( -63.1453, -130.526, -99.9758, 0.66 ) }
    dend_21 { pt3dadd( -63.1304, -131.588, -101.059, 0.22 ) }
    dend_21 { pt3dadd( -63.0907, -132.511, -101.924, 2.06 ) }
    dend_21 { pt3dadd( -63.0799, -132.762, -102.143, 2.28 ) }
    dend_21 { pt3dadd( -63.0002, -134.268, -103.396, 0.22 ) }
    dend_21 { pt3dadd( -62.9748, -134.686, -103.751, 0.22 ) }
    dend_21 { pt3dadd( -62.9301, -135.57, -104.534, 1.33 ) }
    dend_21 { pt3dadd( -62.919, -135.88, -104.823, 1.62 ) }
    dend_21 { pt3dadd( -62.93, -137.682, -106.536, 0.37 ) }
    dend_21 { pt3dadd( -62.9592, -138.288, -107.111, 0.22 ) }
    dend_21 { pt3dadd( -63.0198, -138.887, -107.684, 0.22 ) }
    dend_21 { pt3dadd( -63.1603, -139.915, -108.664, 1.03 ) }
    dend_21 { pt3dadd( -63.3154, -140.627, -109.349, 1.4 ) }
    dend_21 { pt3dadd( -63.6756, -141.776, -110.456, 0.22 ) }
    dend_21 { pt3dadd( -64.0084, -142.593, -111.209, 1.25 ) }
    dend_21 { pt3dadd( -64.2673, -143.129, -111.698, 1.55 ) }
    dend_21 { pt3dadd( -64.3776, -143.322, -111.862, 1.55 ) }
    dend_21 { pt3dadd( -65.3486, -144.821, -112.997, 0.29 ) }
    dend_21 { pt3dadd( -65.68, -145.27, -113.319, 0.52 ) }
    dend_21 { pt3dadd( -65.8394, -145.453, -113.451, 0.52 ) }
    dend_21 { pt3dadd( -66.2828, -145.928, -113.76, 0.22 ) }
    dend_21 { pt3dadd( -66.8989, -146.572, -114.098, 0.22 ) }
    dend_21 { pt3dadd( -67.363, -147.04, -114.304, 1.25 ) }
    dend_21 { pt3dadd( -67.7241, -147.386, -114.416, 1.4 ) }
    dend_21 { pt3dadd( -68.1903, -147.813, -114.553, 1.11 ) }
    dend_21 { pt3dadd( -68.9201, -148.423, -114.794, 0.15 ) }
    dend_21 { pt3dadd( -69.506, -148.893, -115.061, 0.15 ) }
    dend_21 { pt3dadd( -70.1296, -149.404, -115.43, 0.88 ) }
    dend_21 { pt3dadd( -70.4425, -149.646, -115.63, 1.11 ) }
    dend_21 { pt3dadd( -70.7017, -149.835, -115.788, 1.11 ) }
    dend_21 { pt3dadd( -71.6779, -150.516, -116.347, 0.22 ) }
    dend_21 { pt3dadd( -72.6675, -151.193, -116.913, 0.22 ) }
    dend_21 { pt3dadd( -73.057, -151.463, -117.209, 0.22 ) }
    dend_21 { pt3dadd( -73.8475, -152.038, -117.892, 0.22 ) }
    dend_21 { pt3dadd( -74.4731, -152.527, -118.483, 1.25 ) }
    dend_21 { pt3dadd( -74.8622, -152.866, -118.874, 1.55 ) }
    dend_21 { pt3dadd( -75.3571, -153.339, -119.411, 1.55 ) }
    dend_21 { pt3dadd( -77.1358, -155.074, -121.382, 0.22 ) }
    dend_21 { pt3dadd( -77.3732, -155.308, -121.679, 0.66 ) }
    dend_21 { pt3dadd( -77.5833, -155.501, -121.988, 0.66 ) }
    dend_21 { pt3dadd( -78.0056, -155.851, -122.638, 0.22 ) }
    dend_21 { pt3dadd( -78.4251, -156.156, -123.247, 0.22 ) }
    dend_21 { pt3dadd( -78.7323, -156.351, -123.625, 0.66 ) }
    dend_21 { pt3dadd( -79.1991, -156.635, -124.066, 0.74 ) }
    dend_21 { pt3dadd( -80.4511, -157.418, -125.165, 0.22 ) }
    dend_21 { pt3dadd( -80.8932, -157.707, -125.524, 0.44 ) }
    dend_21 { pt3dadd( -81.1768, -157.907, -125.736, 0.44 ) }
    dend_21 { pt3dadd( -81.7145, -158.377, -126.222, 0.22 ) }
    dend_21 { pt3dadd( -82.1517, -158.808, -126.718, 1.33 ) }
    dend_21 { pt3dadd( -82.4085, -159.075, -127.057, 1.69 ) }
    dend_21 { pt3dadd( -82.5212, -159.181, -127.217, 1.92 ) }
    dend_21 { pt3dadd( -82.8935, -159.5, -127.821, 1.69 ) }
    dend_21 { pt3dadd( -84.0596, -160.498, -129.925, 0.59 ) }
    dend_21 { pt3dadd( -84.6561, -161.019, -131.147, 0.96 ) }
    dend_21 { pt3dadd( -85.1168, -161.45, -132.167, 0.44 ) }
    dend_21 { pt3dadd( -85.5, -161.838, -133.054, 0.29 ) }
    dend_21 { pt3dadd( -85.8836, -162.261, -133.989, 0.29 ) }
    dend_21 { pt3dadd( -86.0815, -162.511, -134.507, 0.29 ) }
    dend_21 { pt3dadd( -86.619, -163.24, -135.845, 0.88 ) }
    dend_21 { pt3dadd( -86.8851, -163.574, -136.471, 1.55 ) }
    dend_21 { pt3dadd( -86.9861, -163.682, -136.682, 2.06 ) }
    dend_21 { pt3dadd( -87.9683, -164.582, -138.563, 1.69 ) }
    dend_21 { pt3dadd( -88.0434, -164.624, -138.694, 1.84 ) }
    dend_21 { pt3dadd( -89.0547, -165.032, -140.382, 0.37 ) }
    dend_21 { pt3dadd( -89.8601, -165.302, -141.684, 0.22 ) }
    dend_21 { pt3dadd( -90.4905, -165.499, -142.748, 1.84 ) }
    dend_21 { pt3dadd( -91.0135, -165.667, -143.637, 2.06 ) }
    dend_21 { pt3dadd( -92.9723, -166.287, -147.132, 0.22 ) }
    dend_21 { pt3dadd( -93.3226, -166.397, -147.771, 0.22 ) }
    dend_21 { pt3dadd( -93.7808, -166.553, -148.654, 1.55 ) }
    dend_21 { pt3dadd( -94.523, -166.851, -150.119, 1.69 ) }
    dend_21 { pt3dadd( -94.7432, -166.959, -150.616, 1.69 ) }
    dend_21 { pt3dadd( -96.2874, -167.874, -154.376, 0.52 ) }
    dend_21 { pt3dadd( -96.5131, -168.037, -154.954, 1.92 ) }
    dend_21 { pt3dadd( -96.8103, -168.25, -155.719, 1.92 ) }
    dend_21 { pt3dadd( -98.3721, -169.327, -159.601, 1.92 ) }
    dend_21 { pt3dadd( -100.255, -170.608, -164.005, 0.66 ) }
    dend_21 { pt3dadd( -100.496, -170.779, -164.574, 0.66 ) }
    dend_21 { pt3dadd( -100.845, -171.065, -165.42, 0.29 ) }
    dend_21 { pt3dadd( -101.104, -171.296, -166.076, 0.29 ) }
    dend_21 { pt3dadd( -101.328, -171.507, -166.64, 1.11 ) }
    dend_21 { pt3dadd( -101.515, -171.722, -167.111, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -102.882, -173.08, -170.172, 0.22 ) }
    dend_21 { pt3dadd( -103.009, -173.189, -170.45, 0.22 ) }
    dend_21 { pt3dadd( -103.315, -173.433, -171.094, 1.47 ) }
    dend_21 { pt3dadd( -103.75, -173.765, -172.012, 1.77 ) }
    dend_21 { pt3dadd( -104.018, -173.947, -172.586, 1.77 ) }
    dend_21 { pt3dadd( -105.853, -175.086, -176.345, 0.22 ) }
    dend_21 { pt3dadd( -106.295, -175.338, -177.213, 1.33 ) }
    dend_21 { pt3dadd( -106.669, -175.56, -178.039, 1.62 ) }
    dend_21 { pt3dadd( -107.196, -175.896, -179.303, 1.62 ) }
    dend_21 { pt3dadd( -108.53, -176.778, -182.754, 0.22 ) }
    dend_21 { pt3dadd( -108.734, -176.917, -183.349, 1.18 ) }
    dend_21 { pt3dadd( -109.218, -177.261, -184.819, 1.33 ) }
    dend_21 { pt3dadd( -110.227, -178.016, -187.914, 0.15 ) }
    dend_21 { pt3dadd( -110.473, -178.208, -188.642, 1.25 ) }
    dend_21 { pt3dadd( -111.231, -178.809, -190.71, 1.62 ) }
    dend_21 { pt3dadd( -112.822, -179.983, -194.607, 0.22 ) }
    dend_21 { pt3dadd( -113.432, -180.392, -195.978, 0.22 ) }
    dend_21 { pt3dadd( -113.823, -180.641, -196.763, 0.44 ) }
    dend_21 { pt3dadd( -114.281, -180.936, -197.64, 0.88 ) }
    dend_21 { pt3dadd( -114.491, -181.085, -198.07, 1.47 ) }
    dend_21 { pt3dadd( -114.993, -181.552, -199.285, 1.62 ) }
    dend_21 { pt3dadd( -116.054, -182.758, -202.313, 0.22 ) }
    dend_21 { pt3dadd( -116.144, -182.876, -202.62, 1.03 ) }
    dend_21 { pt3dadd( -116.667, -183.594, -204.518, 1.11 ) }
    dend_21 { pt3dadd( -116.934, -183.982, -205.512, 0.96 ) }
    dend_21 { pt3dadd( -117.809, -185.365, -208.902, 0.22 ) }
    dend_21 { pt3dadd( -117.92, -185.525, -209.287, 0.81 ) }
    dend_21 { pt3dadd( -118.151, -185.828, -209.984, 0.81 ) }
    dend_21 { pt3dadd( -118.598, -186.358, -211.159, 0.22 ) }
    dend_21 { pt3dadd( -119.099, -186.909, -212.315, 1.47 ) }
    dend_21 { pt3dadd( -119.689, -187.533, -213.538, 1.62 ) }
    dend_21 { pt3dadd( -121.277, -189.192, -216.44, 0.15 ) }
    dend_21 { pt3dadd( -121.659, -189.587, -217.121, 0.15 ) }
    dend_21 { pt3dadd( -122.034, -190.001, -217.785, 0.96 ) }
    dend_21 { pt3dadd( -122.232, -190.231, -218.138, 0.96 ) }
    dend_21 { pt3dadd( -122.528, -190.599, -218.646, 0.22 ) }
    dend_21 { pt3dadd( -122.769, -190.937, -219.021, 1.11 ) }
    dend_21 { pt3dadd( -123.138, -191.662, -219.583, 1.11 ) }
    dend_21 { pt3dadd( -123.933, -193.073, -220.942, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 39/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -11.3816, -36.5316, 1.00313, 2.8 ) }
    dend_18 { pt3dadd( -11.2201, -37.0467, 1.17722, 2.8 ) }
    dend_18 { pt3dadd( -10.7036, -38.6946, 1.73418, 1.84 ) }
    dend_18 { pt3dadd( -10.1879, -40.3399, 2.29022, 1.03 ) }
    dend_18 { pt3dadd( -9.94144, -41.1264, 2.55605, 1.03 ) }
    dend_18 { pt3dadd( -9.62398, -42.1391, 2.89831, 1.18 ) }
    dend_18 { pt3dadd( -9.34261, -43.0367, 3.2017, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 46/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.66488, 13.4048, -0.253335, 0.81 ) }
    dend_16 { pt3dadd( 8.63504, 13.6586, 0.30678, 0.81 ) }
    dend_16 { pt3dadd( 9.18381, 13.8285, 0.70522, 0.37 ) }
    dend_16 { pt3dadd( 10.0438, 14.1236, 1.36895, 0.88 ) }
    dend_16 { pt3dadd( 10.7795, 14.4064, 1.9441, 1.25 ) }
    dend_16 { pt3dadd( 11.7688, 14.8295, 2.7127, 1.25 ) }
    dend_16 { pt3dadd( 12.2324, 15.05, 3.06093, 1.11 ) }
    dend_16 { pt3dadd( 13.5272, 15.8063, 4.06882, 1.11 ) }
    dend_16 { pt3dadd( 13.9087, 16.0576, 4.3399, 1.11 ) }
    dend_16 { pt3dadd( 14.3762, 16.3828, 4.60369, 0.96 ) }
    dend_16 { pt3dadd( 15.3957, 17.0896, 4.99782, 0.66 ) }
    dend_16 { pt3dadd( 16.1919, 17.6057, 5.18833, 0.74 ) }
    dend_16 { pt3dadd( 17.0353, 18.0871, 5.30098, 0.88 ) }
    dend_16 { pt3dadd( 17.9728, 18.5312, 5.3204, 0.96 ) }
    dend_16 { pt3dadd( 18.8926, 18.8685, 5.25499, 0.74 ) }
    dend_16 { pt3dadd( 19.9075, 19.128, 5.09527, 1.62 ) }
    dend_16 { pt3dadd( 20.8338, 19.2674, 4.87117, 1.84 ) }
    dend_16 { pt3dadd( 21.5932, 19.3103, 4.64479, 1.69 ) }
    dend_16 { pt3dadd( 22.4632, 19.315, 4.33679, 1.62 ) }
    dend_16 { pt3dadd( 23.8281, 19.302, 3.8492, 0.88 ) }
    dend_16 { pt3dadd( 24.5641, 19.3396, 3.60123, 0.74 ) }
    dend_16 { pt3dadd( 25.477, 19.4471, 3.33397, 0.74 ) }
    dend_16 { pt3dadd( 26.4251, 19.6408, 3.10702, 0.96 ) }
    dend_16 { pt3dadd( 27.2399, 19.8785, 2.98617, 0.81 ) }
    dend_16 { pt3dadd( 28.308, 20.2803, 2.94421, 0.74 ) }
    dend_16 { pt3dadd( 29.7141, 20.8788, 3.15558, 1.25 ) }
    dend_16 { pt3dadd( 30.3178, 21.1519, 3.34558, 1.47 ) }
    dend_16 { pt3dadd( 30.9204, 21.4259, 3.69766, 1.77 ) }
    dend_16 { pt3dadd( 31.3743, 21.64, 4.06285, 1.77 ) }
    dend_16 { pt3dadd( 31.9645, 21.9043, 4.67576, 1.11 ) }
    dend_16 { pt3dadd( 33.1833, 22.3487, 6.08818, 1.03 ) }
    dend_16 { pt3dadd( 33.923, 22.5606, 6.9898, 1.18 ) }
    dend_16 { pt3dadd( 35.4267, 22.9248, 8.82764, 1.4 ) }
    dend_16 { pt3dadd( 35.86, 23.0066, 9.34863, 1.55 ) }
    dend_16 { pt3dadd( 37.3322, 23.1633, 11.0103, 1.4 ) }
    dend_16 { pt3dadd( 38.2822, 23.1863, 11.9584, 1.84 ) }
    dend_16 { pt3dadd( 38.7658, 23.16, 12.3423, 2.43 ) }
    dend_16 { pt3dadd( 39.3143, 23.1, 12.6686, 2.43 ) }
    dend_16 { pt3dadd( 40.0075, 22.9965, 12.9489, 2.21 ) }
    dend_16 { pt3dadd( 41.8389, 22.6947, 13.5234, 0.96 ) }
    dend_16 { pt3dadd( 42.7947, 22.5697, 13.7434, 0.66 ) }
    dend_16 { pt3dadd( 43.4906, 22.5252, 13.8935, 0.66 ) }
    dend_16 { pt3dadd( 44.2575, 22.5074, 14.0608, 0.66 ) }
    dend_16 { pt3dadd( 45.0196, 22.5321, 14.2115, 0.66 ) }
    dend_16 { pt3dadd( 46.0609, 22.6448, 14.4065, 0.66 ) }
    dend_16 { pt3dadd( 47.1702, 22.8802, 14.5845, 1.03 ) }
    dend_16 { pt3dadd( 48.1169, 23.1761, 14.7436, 0.59 ) }
    dend_16 { pt3dadd( 49.1327, 23.5623, 14.9016, 0.59 ) }
    dend_16 { pt3dadd( 49.8288, 23.8743, 15.0018, 0.96 ) }
    dend_16 { pt3dadd( 50.7184, 24.3352, 15.1187, 0.66 ) }
    dend_16 { pt3dadd( 51.5413, 24.8374, 15.1963, 0.66 ) }
    dend_16 { pt3dadd( 52.6311, 25.586, 15.2639, 1.33 ) }
    dend_16 { pt3dadd( 52.8321, 25.7406, 15.2729, 1.55 ) }
    dend_16 { pt3dadd( 53.1959, 26.0537, 15.2743, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 53.6339, 26.4535, 15.271, 1.4 ) }
    dend_16 { pt3dadd( 54.179, 26.9746, 15.2411, 1.11 ) }
    dend_16 { pt3dadd( 54.5488, 27.3318, 15.2293, 1.11 ) }
    dend_16 { pt3dadd( 64.1405, 31.1556, 20.6748, 1.11 ) }
    dend_16 { pt3dadd( 73.8753, 34.459, 26.2505, 1.11 ) }
    dend_16 { pt3dadd( 83.7287, 38.5542, 30.9648, 1.11 ) }
    dend_16 { pt3dadd( 92.7944, 43.0138, 36.7498, 1.11 ) }
    dend_16 { pt3dadd( 102.54, 46.0772, 42.46, 1.11 ) }
    dend_16 { pt3dadd( 112.351, 49.1202, 48.0708, 1.11 ) }
    dend_16 { pt3dadd( 122.109, 53.7337, 52.4364, 1.11 ) }
    dend_16 { pt3dadd( 132.088, 58.1362, 56.5437, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 11/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.66488, 13.4048, -0.253335, 2.95 ) }
    dend_1 { pt3dadd( 7.70229, 14.8481, -0.252753, 2.95 ) }
    dend_1 { pt3dadd( 7.73737, 16.2015, -0.252206, 2.95 ) }
    dend_1 { pt3dadd( 7.76533, 17.2802, -0.251771, 2.95 ) }
    dend_1 { pt3dadd( 7.78223, 17.9322, -0.251508, 2.95 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 30.5123, 47.7112, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 38.5543, 60.3732, -0.918402, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -21.5088, -13.9181, 6.16887, 0.59 ) }
    dend_28 { pt3dadd( -21.4701, -15.2864, 6.50291, 0.59 ) }
    dend_28 { pt3dadd( -21.4543, -16.2305, 6.8617, 0.52 ) }
    dend_28 { pt3dadd( -21.457, -16.9223, 7.16854, 0.88 ) }
    dend_28 { pt3dadd( -21.4727, -17.6764, 7.52833, 1.03 ) }
    dend_28 { pt3dadd( -21.4845, -18.2448, 7.79952, 1.03 ) }
    dend_28 { pt3dadd( -21.5015, -19.0607, 8.18881, 0.52 ) }
    dend_28 { pt3dadd( -21.5602, -20.1828, 8.83369, 1.11 ) }
    dend_28 { pt3dadd( -21.5892, -20.5802, 9.11128, 1.4 ) }
    dend_28 { pt3dadd( -21.6272, -21.0182, 9.46152, 1.4 ) }
    dend_28 { pt3dadd( -20.9432, -31.1746, 14.8158, 1.4 ) }
    dend_28 { pt3dadd( -20.657, -40.5981, 21.5269, 1.4 ) }
    dend_28 { pt3dadd( -20.4032, -49.5412, 28.9337, 1.4 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -21.5088, -13.9181, 6.16887, 0.29 ) }
    dend_25 { pt3dadd( -22.9775, -13.5998, 6.05841, 0.29 ) }
    dend_25 { pt3dadd( -24.2327, -13.3277, 5.96401, 0.59 ) }
    dend_25 { pt3dadd( -24.6763, -13.2316, 5.93064, 0.81 ) }
    dend_25 { pt3dadd( -25.2679, -13.1034, 5.88615, 0.81 ) }
    dend_25 { pt3dadd( -26.1912, -12.9033, 5.81671, 0.29 ) }
    dend_25 { pt3dadd( -26.7477, -12.7826, 5.77485, 0.59 ) }
    dend_25 { pt3dadd( -37.1494, -8.34362, 6.51621, 0.59 ) }
    dend_25 { pt3dadd( -46.3017, -2.3246, 9.11992, 0.59 ) }
    dend_25 { pt3dadd( -55.3931, 4.14286, 10.3838, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -9.34261, -43.0367, 3.2017, 0.59 ) }
    dend_20 { pt3dadd( -8.61135, -44.0702, 4.20581, 0.59 ) }
    dend_20 { pt3dadd( -7.95625, -45.0427, 5.11385, 0.44 ) }
    dend_20 { pt3dadd( -7.68299, -45.4049, 5.46591, 0.44 ) }
    dend_20 { pt3dadd( -7.09113, -46.1193, 6.20228, 0.81 ) }
    dend_20 { pt3dadd( -6.64365, -46.6152, 6.72321, 1.25 ) }
    dend_20 { pt3dadd( -6.30966, -46.952, 7.0973, 1.47 ) }
    dend_20 { pt3dadd( -5.96498, -47.2619, 7.48032, 1.47 ) }
    dend_20 { pt3dadd( -4.57111, -48.4796, 8.99392, 0.74 ) }
    dend_20 { pt3dadd( -3.10407, -49.6281, 10.5255, 0.37 ) }
    dend_20 { pt3dadd( -2.69247, -49.909, 10.926, 0.37 ) }
    dend_20 { pt3dadd( -2.10527, -50.2643, 11.4792, 0.81 ) }
    dend_20 { pt3dadd( -1.54178, -50.5782, 12.0044, 0.96 ) }
    dend_20 { pt3dadd( 5.40727, -55.0235, 18.6087, 0.96 ) }
    dend_20 { pt3dadd( 11.7014, -61.237, 24.2424, 0.96 ) }
    dend_20 { pt3dadd( 19.679, -65.4569, 29.7485, 0.96 ) }
    dend_20 { pt3dadd( 27.4446, -69.8303, 35.4265, 0.96 ) }
    dend_20 { pt3dadd( 35.9873, -74.4068, 39.6102, 0.96 ) }
    dend_20 { pt3dadd( 45.5432, -76.9031, 43.4819, 0.96 ) }
    dend_20 { pt3dadd( 54.7601, -78.6016, 48.4713, 0.96 ) }
    dend_20 { pt3dadd( 64.1115, -81.5372, 52.5109, 0.96 ) }
    dend_20 { pt3dadd( 73.8898, -84.9778, 54.6541, 0.96 ) }
    dend_20 { pt3dadd( 83.376, -87.7564, 58.4922, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -9.34261, -43.0367, 3.2017, 1.11 ) }
    dend_19 { pt3dadd( -9.73603, -43.9765, 3.1021, 1.11 ) }
    dend_19 { pt3dadd( -10.167, -45.0867, 3.15619, 1.11 ) }
    dend_19 { pt3dadd( -10.6537, -46.4685, 3.37231, 1.11 ) }
    dend_19 { pt3dadd( -10.9105, -47.2891, 3.57564, 0.96 ) }
    dend_19 { pt3dadd( -11.0824, -47.8842, 3.76654, 0.96 ) }
    dend_19 { pt3dadd( -11.4847, -49.4216, 4.37844, 1.11 ) }
    dend_19 { pt3dadd( -11.645, -50.2066, 4.79504, 1.25 ) }
    dend_19 { pt3dadd( -11.7484, -50.9104, 5.25222, 1.25 ) }
    dend_19 { pt3dadd( -11.83, -51.7365, 5.85917, 1.03 ) }
    dend_19 { pt3dadd( -11.8882, -52.5215, 6.42577, 1.03 ) }
    dend_19 { pt3dadd( -11.9789, -53.5559, 7.0814, 1.18 ) }
    dend_19 { pt3dadd( -12.041, -54.0893, 7.33246, 1.77 ) }
    dend_19 { pt3dadd( -12.1353, -54.6075, 7.51419, 2.28 ) }
    dend_19 { pt3dadd( -12.2717, -55.1586, 7.64526, 2.14 ) }
    dend_19 { pt3dadd( -12.5378, -56.0407, 7.75945, 1.62 ) }
    dend_19 { pt3dadd( -12.8382, -56.9583, 7.8117, 1.03 ) }
    dend_19 { pt3dadd( -13.1984, -57.9874, 7.8234, 0.74 ) }
    dend_19 { pt3dadd( -13.5816, -59.0343, 7.8445, 0.96 ) }
    dend_19 { pt3dadd( -14.0356, -60.2611, 7.89024, 1.25 ) }
    dend_19 { pt3dadd( -14.5123, -61.5161, 7.99511, 1.62 ) }
    dend_19 { pt3dadd( -14.7647, -62.1906, 8.08133, 1.55 ) }
    dend_19 { pt3dadd( -14.9678, -62.7336, 8.17256, 1.69 ) }
    dend_19 { pt3dadd( -15.4668, -63.9869, 8.431, 1.18 ) }
    dend_19 { pt3dadd( -15.8404, -64.8687, 8.65613, 1.03 ) }
    dend_19 { pt3dadd( -16.2152, -65.6739, 8.89646, 1.33 ) }
    dend_19 { pt3dadd( -16.515, -66.2763, 9.08999, 1.62 ) }
    dend_19 { pt3dadd( -16.7657, -66.7622, 9.23928, 1.62 ) }
    dend_19 { pt3dadd( -17.0996, -67.4406, 9.43422, 1.77 ) }
    dend_19 { pt3dadd( -17.3187, -67.9474, 9.55858, 1.77 ) }
    dend_19 { pt3dadd( -17.6141, -68.752, 9.75609, 1.55 ) }
    dend_19 { pt3dadd( -17.8551, -69.499, 9.95056, 1.25 ) }
    dend_19 { pt3dadd( -18.0939, -70.443, 10.171, 0.81 ) }
    dend_19 { pt3dadd( -18.3116, -71.6961, 10.4049, 0.81 ) }
    dend_19 { pt3dadd( -18.4343, -72.6637, 10.5827, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( -18.5504, -73.8298, 10.822, 1.03 ) }
    dend_19 { pt3dadd( -18.591, -74.5181, 10.9853, 1.18 ) }
    dend_19 { pt3dadd( -18.6291, -75.9229, 11.3569, 0.29 ) }
    dend_19 { pt3dadd( -18.6342, -76.6925, 11.568, 0.37 ) }
    dend_19 { pt3dadd( -18.6612, -77.9686, 11.9021, 0.37 ) }
    dend_19 { pt3dadd( -18.6879, -78.8613, 12.1469, 0.29 ) }
    dend_19 { pt3dadd( -18.7074, -79.4887, 12.3152, 0.29 ) }
    dend_19 { pt3dadd( -18.7392, -80.0986, 12.5106, 0.29 ) }
    dend_19 { pt3dadd( -18.8221, -80.6479, 12.7742, 0.29 ) }
    dend_19 { pt3dadd( -18.9525, -81.331, 13.1079, 0.22 ) }
    dend_19 { pt3dadd( -20.0035, -90.3325, 16.6743, 0.22 ) }
    dend_19 { pt3dadd( -22.1853, -98.9525, 20.7408, 0.22 ) }
    dend_19 { pt3dadd( -24.1787, -107.414, 25.2444, 0.22 ) }
    dend_19 { pt3dadd( -26.5554, -114.626, 31.5902, 0.22 ) }
    dend_19 { pt3dadd( -27.9281, -122.187, 37.7776, 0.22 ) }
    dend_19 { pt3dadd( -30.0806, -129.607, 43.935, 0.22 ) }
    dend_19 { pt3dadd( -32.2324, -138.178, 48.1305, 0.22 ) }
    dend_19 { pt3dadd( -35.4701, -146.029, 53.1146, 0.22 ) }
    dend_19 { pt3dadd( -39.619, -153.469, 58.1258, 0.22 ) }
    dend_19 { pt3dadd( -41.8531, -161.002, 64.0994, 0.22 ) }
    dend_19 { pt3dadd( -43.0999, -167.99, 71.0155, 0.22 ) }
    dend_19 { pt3dadd( -45.1416, -173.568, 79.0705, 0.22 ) }
    dend_19 { pt3dadd( -45.107, -179.877, 86.7744, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.78223, 17.9322, -0.251508, 0.66 ) }
    dend_15 { pt3dadd( 7.14415, 18.7072, -0.0663916, 0.66 ) }
    dend_15 { pt3dadd( 6.77612, 19.2534, 0.0543485, 0.29 ) }
    dend_15 { pt3dadd( 6.62517, 19.5099, 0.110358, 0.44 ) }
    dend_15 { pt3dadd( 6.20129, 20.3307, 0.285005, 0.44 ) }
    dend_15 { pt3dadd( 5.75687, 21.2667, 0.482629, 0.81 ) }
    dend_15 { pt3dadd( 5.5813, 21.6573, 0.565285, 0.96 ) }
    dend_15 { pt3dadd( 5.37528, 22.1859, 0.676782, 0.81 ) }
    dend_15 { pt3dadd( 5.23314, 22.5265, 0.756878, 1.03 ) }
    dend_15 { pt3dadd( 4.97477, 23.0312, 0.886791, 1.18 ) }
    dend_15 { pt3dadd( 4.6087, 23.5535, 1.04532, 0.66 ) }
    dend_15 { pt3dadd( 3.97439, 24.134, 1.27729, 0.22 ) }
    dend_15 { pt3dadd( 3.49908, 24.4204, 1.43138, 0.22 ) }
    dend_15 { pt3dadd( 2.98099, 24.6146, 1.584, 0.22 ) }
    dend_15 { pt3dadd( 2.31149, 24.7898, 1.7712, 0.66 ) }
    dend_15 { pt3dadd( 1.87109, 24.8744, 1.892, 0.81 ) }
    dend_15 { pt3dadd( 1.51652, 24.9348, 1.98569, 0.66 ) }
    dend_15 { pt3dadd( 1.00443, 25.0305, 2.11489, 0.52 ) }
    dend_15 { pt3dadd( 0.206057, 25.2388, 2.31475, 0.44 ) }
    dend_15 { pt3dadd( -0.513815, 25.4723, 2.47484, 0.52 ) }
    dend_15 { pt3dadd( -1.04979, 25.6751, 2.56503, 0.88 ) }
    dend_15 { pt3dadd( -1.56347, 25.8992, 2.61096, 1.11 ) }
    dend_15 { pt3dadd( -1.97506, 26.0991, 2.62311, 1.11 ) }
    dend_15 { pt3dadd( -2.41448, 26.3335, 2.59389, 0.96 ) }
    dend_15 { pt3dadd( -3.08623, 26.7165, 2.48791, 0.37 ) }
    dend_15 { pt3dadd( -3.83538, 27.172, 2.31068, 0.29 ) }
    dend_15 { pt3dadd( -4.45034, 27.5744, 2.14097, 0.88 ) }
    dend_15 { pt3dadd( -4.75076, 27.7904, 2.05886, 1.03 ) }
    dend_15 { pt3dadd( -5.30878, 28.2321, 1.89157, 1.03 ) }
    dend_15 { pt3dadd( -5.4666, 28.372, 1.84103, 1.03 ) }
    dend_15 { pt3dadd( -6.13363, 29.0522, 1.64035, 0.29 ) }
    dend_15 { pt3dadd( -6.43248, 29.4042, 1.53499, 0.29 ) }
    dend_15 { pt3dadd( -6.91163, 30.0091, 1.34143, 0.96 ) }
    dend_15 { pt3dadd( -7.24492, 30.4277, 1.19557, 1.11 ) }
    dend_15 { pt3dadd( -7.43673, 30.6659, 1.11603, 1.11 ) }
    dend_15 { pt3dadd( -7.72196, 31.0054, 0.997353, 0.66 ) }
    dend_15 { pt3dadd( -8.37963, 31.769, 0.732905, 0.29 ) }
    dend_15 { pt3dadd( -8.78048, 32.2067, 0.573416, 0.29 ) }
    dend_15 { pt3dadd( -9.2387, 32.6821, 0.423336, 0.66 ) }
    dend_15 { pt3dadd( -9.53112, 32.9656, 0.344465, 0.88 ) }
    dend_15 { pt3dadd( -9.79864, 33.2113, 0.28175, 1.03 ) }
    dend_15 { pt3dadd( -10.2169, 33.5842, 0.197218, 0.74 ) }
    dend_15 { pt3dadd( -10.7499, 34.046, 0.128254, 0.44 ) }
    dend_15 { pt3dadd( -11.3932, 34.6018, 0.0548435, 0.22 ) }
    dend_15 { pt3dadd( -12.0037, 35.129, -0.0150631, 0.44 ) }
    dend_15 { pt3dadd( -12.3185, 35.3985, -0.0444818, 0.59 ) }
    dend_15 { pt3dadd( -12.5585, 35.6169, -0.0306006, 0.59 ) }
    dend_15 { pt3dadd( -13.0254, 36.0861, 0.104119, 0.29 ) }
    dend_15 { pt3dadd( -13.4832, 36.6158, 0.372645, 0.59 ) }
    dend_15 { pt3dadd( -13.7357, 36.9465, 0.596422, 0.59 ) }
    dend_15 { pt3dadd( -13.9095, 37.1748, 0.797942, 0.59 ) }
    dend_15 { pt3dadd( -14.6878, 38.1191, 1.78574, 1.69 ) }
    dend_15 { pt3dadd( -15.0594, 38.5511, 2.30413, 2.14 ) }
    dend_15 { pt3dadd( -15.2859, 38.8095, 2.63818, 2.36 ) }
    dend_15 { pt3dadd( -15.4614, 39.001, 2.90206, 2.36 ) }
    dend_15 { pt3dadd( -16.2565, 39.8031, 4.04735, 0.29 ) }
    dend_15 { pt3dadd( -16.7242, 40.2281, 4.67042, 0.22 ) }
    dend_15 { pt3dadd( -17.3773, 40.7578, 5.45828, 0.74 ) }
    dend_15 { pt3dadd( -17.6576, 40.9756, 5.78393, 0.96 ) }
    dend_15 { pt3dadd( -17.8206, 41.1055, 5.97853, 0.96 ) }
    dend_15 { pt3dadd( -18.3859, 41.5891, 6.65106, 0.22 ) }
    dend_15 { pt3dadd( -18.9147, 42.1056, 7.28531, 0.81 ) }
    dend_15 { pt3dadd( -19.008, 42.2032, 7.39225, 1.18 ) }
    dend_15 { pt3dadd( -19.3504, 42.552, 7.76138, 1.18 ) }
    dend_15 { pt3dadd( -19.4855, 42.6907, 7.9059, 1.18 ) }
    dend_15 { pt3dadd( -19.9038, 43.1348, 8.32931, 0.15 ) }
    dend_15 { pt3dadd( -20.088, 43.3538, 8.50103, 0.37 ) }
    dend_15 { pt3dadd( -20.2567, 43.5962, 8.64185, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.78223, 17.9322, -0.251508, 2.8 ) }
    dend_2 { pt3dadd( 8.78548, 19.4317, 0.0661631, 2.8 ) }
    dend_2 { pt3dadd( 9.41321, 20.3699, 0.264928, 2.8 ) }
    dend_2 { pt3dadd( 9.94913, 21.1709, 0.434624, 2.95 ) }
    dend_2 { pt3dadd( 10.5303, 22.0394, 0.618628, 3.68 ) }
    dend_2 { pt3dadd( 10.9303, 22.6373, 0.745304, 3.9 ) }
    dend_2 { pt3dadd( 11.3099, 23.2046, 0.865475, 4.57 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -20.4032, -49.5412, 28.9337, 0.66 ) }
    dend_30 { pt3dadd( -20.1389, -58.554, 33.922, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -18.1767, -67.3895, 38.9046, 0.66 ) }
    dend_30 { pt3dadd( -18.1058, -75.4139, 45.5151, 0.66 ) }
    dend_30 { pt3dadd( -19.0576, -82.7562, 52.883, 0.66 ) }
    dend_30 { pt3dadd( -20.5062, -89.7423, 60.5428, 0.66 ) }
    dend_30 { pt3dadd( -21.2021, -97.5762, 67.3598, 0.66 ) }
    dend_30 { pt3dadd( -22.6527, -103.985, 75.5577, 0.66 ) }
    dend_30 { pt3dadd( -23.4463, -111.076, 83.2127, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -20.4032, -49.5412, 28.9337, 0.59 ) }
    dend_29 { pt3dadd( -20.0107, -59.7929, 34.4523, 0.66 ) }
    dend_29 { pt3dadd( -20.0929, -70.2196, 39.5905, 0.66 ) }
    dend_29 { pt3dadd( -21.4488, -80.9283, 43.7592, 0.66 ) }
    dend_29 { pt3dadd( -23.9524, -91.4331, 47.9266, 0.66 ) }
    dend_29 { pt3dadd( -25.1725, -102.757, 49.3433, 0.66 ) }
    dend_29 { pt3dadd( -24.3922, -113.749, 52.8527, 0.66 ) }
    dend_29 { pt3dadd( -24.093, -124.715, 56.5046, 0.66 ) }
    dend_29 { pt3dadd( -25.3396, -135.754, 59.5822, 0.66 ) }
    dend_29 { pt3dadd( -25.3756, -146.768, 63.064, 0.66 ) }
    dend_29 { pt3dadd( -24.2622, -157.494, 67.3464, 0.66 ) }
    dend_29 { pt3dadd( -23.6067, -168.717, 69.9001, 0.66 ) }
    dend_29 { pt3dadd( -21.3722, -179.293, 74.1906, 0.66 ) }
    dend_29 { pt3dadd( -18.8908, -190.454, 75.8074, 0.66 ) }
    dend_29 { pt3dadd( -18.981, -201.915, 76.0959, 0.66 ) }
    dend_29 { pt3dadd( -17.2875, -213.248, 77.2169, 0.66 ) }
    dend_29 { pt3dadd( -17.0818, -224.687, 78.1512, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -55.3931, 4.14286, 10.3838, 0.59 ) }
    dend_27 { pt3dadd( -63.7765, 8.18169, 10.2406, 0.59 ) }
    dend_27 { pt3dadd( -71.9582, 12.4132, 9.08967, 0.59 ) }
    dend_27 { pt3dadd( -80.5815, 15.8967, 9.98854, 0.59 ) }
    dend_27 { pt3dadd( -89.3205, 19.1967, 10.0713, 0.59 ) }
    dend_27 { pt3dadd( -96.9433, 24.4071, 10.7449, 0.59 ) }
    dend_27 { pt3dadd( -104.786, 29.3354, 10.7282, 0.59 ) }
    dend_27 { pt3dadd( -111.065, 35.9615, 11.6403, 0.59 ) }
    dend_27 { pt3dadd( -116.659, 43.158, 11.8292, 0.59 ) }
    dend_27 { pt3dadd( -120.614, 51.282, 11.6888, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 34/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -55.3931, 4.14286, 10.3838, 0.59 ) }
    dend_26 { pt3dadd( -64.7922, 9.3361, 12.0382, 0.59 ) }
    dend_26 { pt3dadd( -74.458, 14.2795, 12.2378, 0.59 ) }
    dend_26 { pt3dadd( -84.6487, 18.0645, 11.4527, 0.59 ) }
    dend_26 { pt3dadd( -94.8395, 21.4, 9.46649, 0.59 ) }
    dend_26 { pt3dadd( -104.154, 25.9365, 6.29109, 0.59 ) }
    dend_26 { pt3dadd( -113.825, 29.5786, 2.89646, 0.59 ) }
    dend_26 { pt3dadd( -122.804, 33.5898, -1.67834, 0.59 ) }
    dend_26 { pt3dadd( -132.393, 35.466, -6.58418, 0.59 ) }
    dend_26 { pt3dadd( -142.121, 36.8708, -11.4076, 0.59 ) }
    dend_26 { pt3dadd( -152.337, 37.7388, -15.3033, 0.59 ) }
    dend_26 { pt3dadd( -162.517, 36.7178, -19.3252, 0.59 ) }
    dend_26 { pt3dadd( -172.311, 36.0841, -24.2677, 0.59 ) }
    dend_26 { pt3dadd( -182.364, 36.2219, -28.6807, 0.59 ) }
    dend_26 { pt3dadd( -192.935, 35.6411, -31.6388, 0.59 ) }
    dend_26 { pt3dadd( -203.466, 34.1095, -34.4055, 0.59 ) }
    dend_26 { pt3dadd( -214.237, 34.3816, -36.5464, 0.59 ) }
    dend_26 { pt3dadd( -225.134, 34.0508, -37.9626, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 11.3099, 23.2046, 0.865475, 2.36 ) }
    dend_12 { pt3dadd( 12.0551, 23.9875, 2.93039, 2.36 ) }
    dend_12 { pt3dadd( 12.4412, 24.4766, 4.57319, 1.99 ) }
    dend_12 { pt3dadd( 12.5975, 24.7268, 5.50323, 1.84 ) }
    dend_12 { pt3dadd( 12.9222, 25.4916, 8.49446, 1.55 ) }
    dend_12 { pt3dadd( 13.0886, 26.2789, 11.7494, 2.06 ) }
    dend_12 { pt3dadd( 13.0688, 27.1107, 15.1981, 2.43 ) }
    dend_12 { pt3dadd( 12.7635, 27.5983, 17.7118, 2.58 ) }
    dend_12 { pt3dadd( 12.5988, 27.7181, 18.5209, 2.36 ) }
    dend_12 { pt3dadd( 12.3006, 27.8449, 19.6354, 2.21 ) }
    dend_12 { pt3dadd( 11.7137, 28.0107, 21.3379, 2.06 ) }
    dend_12 { pt3dadd( 11.2084, 28.141, 22.6518, 1.25 ) }
    dend_12 { pt3dadd( 9.94031, 28.59, 26.109, 1.55 ) }
    dend_12 { pt3dadd( 9.22065, 29.006, 28.3725, 1.18 ) }
    dend_12 { pt3dadd( 8.91899, 29.2931, 29.685, 1.47 ) }
    dend_12 { pt3dadd( 8.74083, 29.6253, 30.9421, 2.14 ) }
    dend_12 { pt3dadd( 8.69835, 30.0154, 32.0984, 1.84 ) }
    dend_12 { pt3dadd( 8.84164, 30.5608, 33.3145, 1.47 ) }
    dend_12 { pt3dadd( 9.26939, 31.3956, 34.4105, 0.88 ) }
    dend_12 { pt3dadd( 9.94068, 32.4296, 35.3354, 0.52 ) }
    dend_12 { pt3dadd( 10.3402, 32.9702, 35.7023, 0.22 ) }
    dend_12 { pt3dadd( 10.847, 33.5667, 36.0466, 0.22 ) }
    dend_12 { pt3dadd( 11.2955, 34.0502, 36.2759, 0.59 ) }
    dend_12 { pt3dadd( 11.5803, 34.3233, 36.3895, 0.66 ) }
    dend_12 { pt3dadd( 12.0978, 34.8136, 36.5788, 0.22 ) }
    dend_12 { pt3dadd( 12.58, 35.4523, 36.7035, 0.44 ) }
    dend_12 { pt3dadd( 11.615, 37.9972, 48.9773, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.3099, 23.2046, 0.865475, 0.96 ) }
    dend_3 { pt3dadd( 10.382, 25.7819, -1.21589, 0.96 ) }
    dend_3 { pt3dadd( 10.1369, 26.4987, -1.82569, 1.33 ) }
    dend_3 { pt3dadd( 10.0171, 26.8718, -2.14317, 1.55 ) }
    dend_3 { pt3dadd( 9.91218, 27.1987, -2.42139, 1.77 ) }
    dend_3 { pt3dadd( 9.75152, 27.6991, -2.84723, 1.92 ) }
    dend_3 { pt3dadd( 9.51448, 28.4375, -3.47557, 0.96 ) }
    dend_3 { pt3dadd( 9.25583, 29.5811, -4.27855, 1.11 ) }
    dend_3 { pt3dadd( 9.20387, 29.7983, -4.44704, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 88/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.615, 37.9972, 48.9773, 0.44 ) }
    dend_14 { pt3dadd( 10.9883, 41.2782, 58.1676, 0.44 ) }
    dend_14 { pt3dadd( 12.0896, 45.7938, 66.6977, 0.44 ) }
    dend_14 { pt3dadd( 15.2904, 50.9584, 74.209, 0.44 ) }
    dend_14 { pt3dadd( 20.5452, 54.9842, 81.3141, 0.44 ) }
    dend_14 { pt3dadd( 24.7083, 59.2877, 88.9502, 0.44 ) }
    dend_14 { pt3dadd( 27.2973, 62.7865, 97.6778, 0.44 ) }
    dend_14 { pt3dadd( 31.0951, 66.4111, 105.882, 0.44 ) }
    dend_14 { pt3dadd( 35.0155, 69.9316, 114.079, 0.44 ) }
    dend_14 { pt3dadd( 38.2272, 74.7493, 121.838, 0.44 ) }
    dend_14 { pt3dadd( 41.674, 79.3422, 129.647, 0.44 ) }
    dend_14 { pt3dadd( 44.5039, 85.7682, 136.162, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 49.0241, 90.9277, 142.95, 0.44 ) }
    dend_14 { pt3dadd( 54.8832, 95.217, 149.37, 0.44 ) }
    dend_14 { pt3dadd( 59.8607, 100.291, 155.901, 0.44 ) }
    dend_14 { pt3dadd( 63.7583, 106.097, 162.497, 0.44 ) }
    dend_14 { pt3dadd( 67.4222, 112.015, 169.118, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 5/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.615, 37.9972, 48.9773, 0.44 ) }
    dend_13 { pt3dadd( 11.2195, 41.6118, 59.9327, 0.44 ) }
    dend_13 { pt3dadd( 9.65813, 45.5528, 70.6584, 0.44 ) }
    dend_13 { pt3dadd( 8.76482, 48.9914, 81.6486, 0.44 ) }
    dend_13 { pt3dadd( 6.30599, 51.2538, 92.7428, 0.44 ) }
    dend_13 { pt3dadd( 1.97589, 53.0246, 103.356, 0.44 ) }
    dend_13 { pt3dadd( -0.198353, 55.0223, 114.566, 0.44 ) }
    dend_13 { pt3dadd( -1.01325, 57.1448, 125.928, 0.44 ) }
    dend_13 { pt3dadd( -1.14573, 60.0022, 137.136, 0.44 ) }
    dend_13 { pt3dadd( -3.20062, 61.0963, 148.507, 0.44 ) }
    dend_13 { pt3dadd( -6.89512, 61.6126, 159.505, 0.44 ) }
    dend_13 { pt3dadd( -8.88918, 62.5468, 170.902, 0.44 ) }
    dend_13 { pt3dadd( -9.91904, 63.5808, 182.417, 0.44 ) }
    dend_13 { pt3dadd( -10.5116, 64.8653, 193.934, 0.44 ) }
    dend_13 { pt3dadd( -11.4138, 67.6703, 205.122, 0.44 ) }
    dend_13 { pt3dadd( -12.8938, 71.1795, 216.025, 0.44 ) }
    dend_13 { pt3dadd( -15.2619, 76.8487, 225.693, 0.44 ) }
    dend_13 { pt3dadd( -18.9373, 82.6024, 234.891, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 23/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 9.20387, 29.7983, -4.44704, 0.66 ) }
    dend_9 { pt3dadd( 10.0513, 29.4421, -5.86049, 0.66 ) }
    dend_9 { pt3dadd( 11.4261, 28.9369, -7.75319, 0.88 ) }
    dend_9 { pt3dadd( 12.5894, 28.6199, -9.19144, 1.11 ) }
    dend_9 { pt3dadd( 13.5378, 28.4423, -10.2762, 1.25 ) }
    dend_9 { pt3dadd( 14.0013, 28.3896, -10.7827, 1.47 ) }
    dend_9 { pt3dadd( 14.7583, 28.3607, -11.5856, 1.18 ) }
    dend_9 { pt3dadd( 15.3925, 28.4304, -12.1393, 0.66 ) }
    dend_9 { pt3dadd( 16.5447, 28.9674, -12.9487, 0.52 ) }
    dend_9 { pt3dadd( 17.0085, 29.3347, -13.2495, 0.66 ) }
    dend_9 { pt3dadd( 17.3857, 29.6776, -13.5057, 0.66 ) }
    dend_9 { pt3dadd( 17.8534, 30.1188, -13.8688, 0.37 ) }
    dend_9 { pt3dadd( 18.5953, 30.7383, -14.4357, 0.37 ) }
    dend_9 { pt3dadd( 19.2383, 31.0908, -14.88, 1.18 ) }
    dend_9 { pt3dadd( 19.9572, 31.2735, -15.2578, 1.77 ) }
    dend_9 { pt3dadd( 20.9823, 31.3826, -15.7302, 1.92 ) }
    dend_9 { pt3dadd( 21.5976, 31.3964, -15.9757, 1.69 ) }
    dend_9 { pt3dadd( 22.6567, 31.3762, -16.336, 0.66 ) }
    dend_9 { pt3dadd( 23.8443, 31.3701, -16.7176, 0.52 ) }
    dend_9 { pt3dadd( 24.7162, 31.4102, -17.0311, 0.37 ) }
    dend_9 { pt3dadd( 25.4366, 31.4996, -17.318, 0.37 ) }
    dend_9 { pt3dadd( 26.3648, 31.6982, -17.7404, 0.29 ) }
    dend_9 { pt3dadd( 26.9715, 31.8834, -18.0757, 0.29 ) }
    dend_9 { pt3dadd( 28.1975, 32.4088, -18.8724, 0.59 ) }
    dend_9 { pt3dadd( 28.8859, 32.8057, -19.4466, 1.55 ) }
    dend_9 { pt3dadd( 29.2102, 33.012, -19.7678, 1.77 ) }
    dend_9 { pt3dadd( 29.8237, 33.3789, -20.4067, 1.92 ) }
    dend_9 { pt3dadd( 30.167, 33.5542, -20.7648, 2.06 ) }
    dend_9 { pt3dadd( 30.4187, 33.6455, -21.0207, 2.06 ) }
    dend_9 { pt3dadd( 32.3919, 34.1129, -23.0555, 0.29 ) }
    dend_9 { pt3dadd( 32.844, 34.1933, -23.5272, 0.29 ) }
    dend_9 { pt3dadd( 33.5743, 34.2974, -24.2894, 0.29 ) }
    dend_9 { pt3dadd( 34.0751, 34.356, -24.7968, 0.29 ) }
    dend_9 { pt3dadd( 35.5353, 34.511, -26.2853, 1.18 ) }
    dend_9 { pt3dadd( 36.7066, 34.6587, -27.5062, 1.47 ) }
    dend_9 { pt3dadd( 37.1193, 34.7547, -27.9922, 1.69 ) }
    dend_9 { pt3dadd( 37.4196, 34.8549, -28.3817, 1.92 ) }
    dend_9 { pt3dadd( 37.6189, 34.9231, -28.6556, 2.14 ) }
    dend_9 { pt3dadd( 37.9198, 35.009, -29.057, 2.14 ) }
    dend_9 { pt3dadd( 38.5611, 35.1266, -29.8604, 2.14 ) }
    dend_9 { pt3dadd( 40.435, 35.292, -32.0522, 1.03 ) }
    dend_9 { pt3dadd( 41.4689, 35.3306, -33.2647, 0.29 ) }
    dend_9 { pt3dadd( 42.503, 35.329, -34.4921, 0.52 ) }
    dend_9 { pt3dadd( 43.0486, 35.3111, -35.1167, 0.81 ) }
    dend_9 { pt3dadd( 43.5685, 35.2791, -35.7034, 0.81 ) }
    dend_9 { pt3dadd( 44.1338, 35.2307, -36.3164, 0.52 ) }
    dend_9 { pt3dadd( 44.8725, 35.181, -37.0852, 0.74 ) }
    dend_9 { pt3dadd( 45.5851, 35.2058, -37.8527, 0.81 ) }
    dend_9 { pt3dadd( 46.2932, 35.3177, -38.6391, 1.69 ) }
    dend_9 { pt3dadd( 47.3394, 35.5744, -39.7511, 2.06 ) }
    dend_9 { pt3dadd( 47.872, 35.7244, -40.2665, 2.43 ) }
    dend_9 { pt3dadd( 49.1958, 36.0895, -41.4132, 1.11 ) }
    dend_9 { pt3dadd( 50.1007, 36.3153, -42.0767, 0.96 ) }
    dend_9 { pt3dadd( 50.9818, 36.5386, -42.6237, 1.03 ) }
    dend_9 { pt3dadd( 52.2582, 36.8892, -43.3374, 0.29 ) }
    dend_9 { pt3dadd( 53.0456, 37.1206, -43.7124, 0.37 ) }
    dend_9 { pt3dadd( 53.7342, 37.346, -44.0107, 0.37 ) }
    dend_9 { pt3dadd( 54.3852, 37.598, -44.2771, 0.22 ) }
    dend_9 { pt3dadd( 54.892, 37.8167, -44.5122, 0.22 ) }
    dend_9 { pt3dadd( 55.6957, 38.191, -44.9464, 0.22 ) }
    dend_9 { pt3dadd( 56.1738, 38.4515, -45.2766, 0.22 ) }
    dend_9 { pt3dadd( 56.5845, 38.7005, -45.606, 0.22 ) }
    dend_9 { pt3dadd( 57.6065, 39.3392, -46.4509, 1.62 ) }
    dend_9 { pt3dadd( 58.3984, 39.8127, -47.0788, 2.5 ) }
    dend_9 { pt3dadd( 58.77, 40.0185, -47.3505, 2.73 ) }
    dend_9 { pt3dadd( 59.516, 40.4013, -47.8496, 2.14 ) }
    dend_9 { pt3dadd( 61.5539, 41.406, -49.1798, 0.22 ) }
    dend_9 { pt3dadd( 62.0506, 41.6415, -49.5047, 0.22 ) }
    dend_9 { pt3dadd( 62.6421, 41.9216, -49.9016, 0.44 ) }
    dend_9 { pt3dadd( 62.9085, 42.0527, -50.0836, 0.44 ) }
    dend_9 { pt3dadd( 63.7142, 42.4845, -50.6521, 0.29 ) }
    dend_9 { pt3dadd( 64.2996, 42.8052, -51.0787, 0.74 ) }
    dend_9 { pt3dadd( 64.8096, 43.0748, -51.467, 0.74 ) }
    dend_9 { pt3dadd( 65.9192, 43.6348, -52.3274, 0.22 ) }
    dend_9 { pt3dadd( 66.6158, 43.9784, -52.8704, 0.22 ) }
    dend_9 { pt3dadd( 67.889, 44.5817, -53.8835, 1.84 ) }
    dend_9 { pt3dadd( 68.4909, 44.8523, -54.3505, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 69.9763, 45.4695, -55.5265, 0.29 ) }
    dend_9 { pt3dadd( 70.4736, 45.6375, -55.9416, 0.44 ) }
    dend_9 { pt3dadd( 70.9147, 45.7575, -56.3338, 0.44 ) }
    dend_9 { pt3dadd( 71.9194, 45.9786, -57.3105, 0.29 ) }
    dend_9 { pt3dadd( 72.8781, 46.1404, -58.3223, 1.84 ) }
    dend_9 { pt3dadd( 73.8188, 46.3055, -59.4494, 2.14 ) }
    dend_9 { pt3dadd( 75.3417, 46.5829, -61.5125, 0.29 ) }
    dend_9 { pt3dadd( 76.2478, 46.7763, -62.7731, 0.81 ) }
    dend_9 { pt3dadd( 76.964, 46.9362, -63.7484, 0.81 ) }
    dend_9 { pt3dadd( 77.5195, 47.0677, -64.4791, 0.52 ) }
    dend_9 { pt3dadd( 78.9793, 47.4591, -66.366, 0.52 ) }
    dend_9 { pt3dadd( 79.5461, 47.6421, -67.0453, 0.81 ) }
    dend_9 { pt3dadd( 81.0647, 48.2254, -68.696, 2.14 ) }
    dend_9 { pt3dadd( 81.5564, 48.4181, -69.172, 2.65 ) }
    dend_9 { pt3dadd( 81.8669, 48.5422, -69.4372, 2.65 ) }
    dend_9 { pt3dadd( 84.0791, 49.4237, -71.0717, 0.29 ) }
    dend_9 { pt3dadd( 84.7321, 49.6965, -71.4917, 0.22 ) }
    dend_9 { pt3dadd( 85.4608, 50.038, -71.949, 0.96 ) }
    dend_9 { pt3dadd( 85.9635, 50.3045, -72.2715, 1.18 ) }
    dend_9 { pt3dadd( 86.6145, 50.677, -72.6907, 0.96 ) }
    dend_9 { pt3dadd( 87.432, 51.1698, -73.1732, 0.22 ) }
    dend_9 { pt3dadd( 88.1587, 51.6358, -73.5068, 0.22 ) }
    dend_9 { pt3dadd( 88.6665, 51.9548, -73.7249, 0.22 ) }
    dend_9 { pt3dadd( 89.7445, 52.5438, -74.1725, 1.4 ) }
    dend_9 { pt3dadd( 90.3885, 52.8813, -74.4337, 1.84 ) }
    dend_9 { pt3dadd( 90.5355, 52.9588, -74.4935, 2.06 ) }
    dend_9 { pt3dadd( 91.0753, 53.228, -74.7112, 1.99 ) }
    dend_9 { pt3dadd( 91.9073, 53.6075, -75.0353, 0.88 ) }
    dend_9 { pt3dadd( 93.219, 54.2106, -75.526, 0.22 ) }
    dend_9 { pt3dadd( 93.7846, 54.4831, -75.7125, 0.29 ) }
    dend_9 { pt3dadd( 94.3713, 54.7593, -75.8655, 0.29 ) }
    dend_9 { pt3dadd( 94.9378, 55.0041, -75.9962, 0.29 ) }
    dend_9 { pt3dadd( 95.2759, 55.1354, -76.0661, 0.66 ) }
    dend_9 { pt3dadd( 95.7468, 55.295, -76.1424, 0.66 ) }
    dend_9 { pt3dadd( 96.1536, 55.4127, -76.1979, 0.66 ) }
    dend_9 { pt3dadd( 96.8876, 55.5804, -76.3058, 0.22 ) }
    dend_9 { pt3dadd( 97.5456, 55.7087, -76.4056, 0.22 ) }
    dend_9 { pt3dadd( 98.5437, 55.9038, -76.5656, 1.33 ) }
    dend_9 { pt3dadd( 99.5121, 56.0947, -76.7413, 2.14 ) }
    dend_9 { pt3dadd( 99.9976, 56.1996, -76.8431, 2.28 ) }
    dend_9 { pt3dadd( 100.584, 56.341, -76.9776, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.20387, 29.7983, -4.44704, 0.59 ) }
    dend_4 { pt3dadd( 7.56128, 30.8775, -4.84384, 0.59 ) }
    dend_4 { pt3dadd( 7.09724, 31.1464, -5.01284, 0.96 ) }
    dend_4 { pt3dadd( 6.6517, 31.3739, -5.17221, 0.96 ) }
    dend_4 { pt3dadd( 6.17481, 31.5786, -5.39396, 0.81 ) }
    dend_4 { pt3dadd( 5.1375, 31.9991, -5.99828, 0.59 ) }
    dend_4 { pt3dadd( 4.73614, 32.1835, -6.25896, 0.81 ) }
    dend_4 { pt3dadd( 4.27491, 32.4195, -6.61714, 0.81 ) }
    dend_4 { pt3dadd( 3.98861, 32.5991, -6.86293, 0.74 ) }
    dend_4 { pt3dadd( 3.19618, 33.2515, -7.611, 0.74 ) }
    dend_4 { pt3dadd( 2.70055, 33.8418, -8.12942, 0.74 ) }
    dend_4 { pt3dadd( 2.32962, 34.5851, -8.58398, 0.52 ) }
    dend_4 { pt3dadd( 2.20037, 35.1029, -8.82205, 0.66 ) }
    dend_4 { pt3dadd( 2.16874, 35.9055, -9.0392, 0.96 ) }
    dend_4 { pt3dadd( 2.23697, 36.4602, -9.11431, 0.88 ) }
    dend_4 { pt3dadd( 2.37154, 36.9587, -9.10335, 0.44 ) }
    dend_4 { pt3dadd( 2.56276, 37.4632, -9.03914, 0.29 ) }
    dend_4 { pt3dadd( 2.84036, 38.0284, -8.90819, 0.29 ) }
    dend_4 { pt3dadd( 3.17474, 38.6531, -8.7265, 0.88 ) }
    dend_4 { pt3dadd( 3.37073, 39.0172, -8.60565, 1.11 ) }
    dend_4 { pt3dadd( 3.55935, 39.3936, -8.4701, 1.18 ) }
    dend_4 { pt3dadd( 3.71613, 39.7654, -8.33685, 0.88 ) }
    dend_4 { pt3dadd( 4.01001, 40.6832, -8.04887, 0.37 ) }
    dend_4 { pt3dadd( 4.12987, 41.231, -7.91163, 0.29 ) }
    dend_4 { pt3dadd( 4.21788, 41.9838, -7.80677, 0.29 ) }
    dend_4 { pt3dadd( 4.22504, 42.497, -7.76409, 0.29 ) }
    dend_4 { pt3dadd( 4.13881, 43.3989, -7.83065, 1.25 ) }
    dend_4 { pt3dadd( 4.04132, 43.9928, -7.95667, 1.77 ) }
    dend_4 { pt3dadd( 3.98655, 44.2755, -8.05549, 1.92 ) }
    dend_4 { pt3dadd( 3.88813, 44.8391, -8.28551, 1.92 ) }
    dend_4 { pt3dadd( 3.81372, 45.3874, -8.53114, 1.11 ) }
    dend_4 { pt3dadd( 3.71138, 46.6863, -9.16546, 0.44 ) }
    dend_4 { pt3dadd( 3.6916, 47.2746, -9.44898, 0.66 ) }
    dend_4 { pt3dadd( 3.69185, 47.8919, -9.69559, 0.88 ) }
    dend_4 { pt3dadd( 3.70464, 48.3839, -9.86228, 1.11 ) }
    dend_4 { pt3dadd( 3.72267, 48.7785, -9.97312, 1.11 ) }
    dend_4 { pt3dadd( 3.74964, 49.3677, -10.1363, 0.66 ) }
    dend_4 { pt3dadd( 3.78, 50.2191, -10.321, 0.37 ) }
    dend_4 { pt3dadd( 3.81758, 51.2814, -10.5426, 0.88 ) }
    dend_4 { pt3dadd( 3.84073, 51.7966, -10.6682, 1.47 ) }
    dend_4 { pt3dadd( 3.88388, 52.2828, -10.8027, 1.77 ) }
    dend_4 { pt3dadd( 3.96667, 52.8795, -11.0053, 1.92 ) }
    dend_4 { pt3dadd( 4.0454, 53.2674, -11.1792, 2.14 ) }
    dend_4 { pt3dadd( 4.19611, 53.8066, -11.5247, 2.14 ) }
    dend_4 { pt3dadd( 4.32714, 54.4043, -12.1507, 1.62 ) }
    dend_4 { pt3dadd( 4.36742, 54.8016, -12.6793, 1.11 ) }
    dend_4 { pt3dadd( 4.35705, 55.3073, -13.4187, 0.66 ) }
    dend_4 { pt3dadd( 4.26454, 55.7975, -14.1843, 0.81 ) }
    dend_4 { pt3dadd( 4.09513, 56.2452, -14.93, 0.66 ) }
    dend_4 { pt3dadd( 3.39626, 57.4701, -17.0776, 0.81 ) }
    dend_4 { pt3dadd( 3.09323, 57.8902, -17.7776, 0.74 ) }
    dend_4 { pt3dadd( 2.8212, 58.2132, -18.2867, 1.11 ) }
    dend_4 { pt3dadd( 2.24887, 58.8291, -19.1629, 1.62 ) }
    dend_4 { pt3dadd( 1.7285, 59.3574, -19.8299, 1.69 ) }
    dend_4 { pt3dadd( 1.14553, 59.9409, -20.4486, 1.55 ) }
    dend_4 { pt3dadd( 0.579488, 60.5881, -20.9692, 0.37 ) }
    dend_4 { pt3dadd( 0.395019, 60.8621, -21.1577, 0.52 ) }
    dend_4 { pt3dadd( 0.196606, 61.2729, -21.3961, 0.66 ) }
    dend_4 { pt3dadd( 0.0660329, 61.6534, -21.5699, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( -0.0696661, 62.1562, -21.7777, 0.22 ) }
    dend_4 { pt3dadd( -0.260351, 62.8943, -22.1321, 0.22 ) }
    dend_4 { pt3dadd( -0.573814, 64.008, -22.7766, 1.99 ) }
    dend_4 { pt3dadd( -0.762248, 64.608, -23.1447, 2.43 ) }
    dend_4 { pt3dadd( -0.936963, 65.1168, -23.4655, 2.73 ) }
    dend_4 { pt3dadd( -1.10304, 65.5375, -23.7452, 2.95 ) }
    dend_4 { pt3dadd( -1.97917, 67.3987, -25.0168, 0.52 ) }
    dend_4 { pt3dadd( -2.32627, 67.9877, -25.4318, 0.59 ) }
    dend_4 { pt3dadd( -2.57265, 68.3569, -25.7016, 1.11 ) }
    dend_4 { pt3dadd( -2.73436, 68.5971, -25.8748, 1.25 ) }
    dend_4 { pt3dadd( -3.00112, 69.0222, -26.1464, 1.25 ) }
    dend_4 { pt3dadd( -3.36448, 69.6252, -26.499, 0.22 ) }
    dend_4 { pt3dadd( -3.68366, 70.1538, -26.7919, 0.22 ) }
    dend_4 { pt3dadd( -3.97952, 70.6597, -27.0976, 0.37 ) }
    dend_4 { pt3dadd( -4.26813, 71.1372, -27.4422, 0.37 ) }
    dend_4 { pt3dadd( -4.74777, 71.9575, -28.0464, 1.69 ) }
    dend_4 { pt3dadd( -5.10393, 72.5752, -28.4889, 2.28 ) }
    dend_4 { pt3dadd( -5.3246, 72.9446, -28.7539, 2.65 ) }
    dend_4 { pt3dadd( -5.61405, 73.4397, -29.0854, 2.65 ) }
    dend_4 { pt3dadd( -6.04996, 74.203, -29.5746, 2.5 ) }
    dend_4 { pt3dadd( -6.71758, 75.4684, -30.3374, 0.29 ) }
    dend_4 { pt3dadd( -6.93723, 75.9563, -30.6228, 0.29 ) }
    dend_4 { pt3dadd( -7.10486, 76.4377, -30.8979, 0.29 ) }
    dend_4 { pt3dadd( -7.2665, 77.0105, -31.2241, 0.74 ) }
    dend_4 { pt3dadd( -7.39989, 77.565, -31.5392, 0.96 ) }
    dend_4 { pt3dadd( -7.54324, 78.2145, -31.93, 0.96 ) }
    dend_4 { pt3dadd( -7.69119, 78.723, -32.3075, 0.29 ) }
    dend_4 { pt3dadd( -7.96962, 79.4548, -32.8848, 0.22 ) }
    dend_4 { pt3dadd( -8.0751, 79.6632, -33.0517, 0.22 ) }
    dend_4 { pt3dadd( -8.25883, 79.9393, -33.2867, 0.22 ) }
    dend_4 { pt3dadd( -8.54631, 80.3203, -33.606, 0.22 ) }
    dend_4 { pt3dadd( -9.35741, 81.3037, -34.4822, 2.28 ) }
    dend_4 { pt3dadd( -9.71171, 81.7259, -34.9046, 2.43 ) }
    dend_4 { pt3dadd( -9.97914, 82.0522, -35.2507, 2.65 ) }
    dend_4 { pt3dadd( -11.0886, 83.5051, -36.8606, 0.59 ) }
    dend_4 { pt3dadd( -11.4009, 83.9383, -37.3573, 0.52 ) }
    dend_4 { pt3dadd( -11.9491, 84.7386, -38.2832, 0.59 ) }
    dend_4 { pt3dadd( -12.4949, 85.5885, -39.2414, 0.37 ) }
    dend_4 { pt3dadd( -12.6958, 85.9329, -39.6044, 0.52 ) }
    dend_4 { pt3dadd( -12.8873, 86.3087, -39.9686, 0.66 ) }
    dend_4 { pt3dadd( -13.0377, 86.6435, -40.2518, 0.66 ) }
    dend_4 { pt3dadd( -13.2118, 87.0762, -40.5667, 0.44 ) }
    dend_4 { pt3dadd( -13.5865, 88.0859, -41.1909, 2.14 ) }
    dend_4 { pt3dadd( -13.878, 88.8693, -41.6368, 2.5 ) }
    dend_4 { pt3dadd( -14.112, 89.4971, -41.9946, 1.92 ) }
    dend_4 { pt3dadd( -14.6401, 90.9236, -42.7976, 0.22 ) }
    dend_4 { pt3dadd( -14.8562, 91.528, -43.1234, 0.22 ) }
    dend_4 { pt3dadd( -15.3339, 92.9337, -43.8433, 1.69 ) }
    dend_4 { pt3dadd( -15.4205, 93.2023, -43.9642, 2.06 ) }
    dend_4 { pt3dadd( -15.5844, 93.7649, -44.1747, 2.14 ) }
    dend_4 { pt3dadd( -15.6663, 94.0687, -44.2691, 1.62 ) }
    dend_4 { pt3dadd( -15.9719, 95.3336, -44.6226, 0.37 ) }
    dend_4 { pt3dadd( -16.1358, 96.0169, -44.8145, 0.37 ) }
    dend_4 { pt3dadd( -16.3781, 97.0596, -45.0978, 0.37 ) }
    dend_4 { pt3dadd( -16.5628, 97.8063, -45.3112, 0.37 ) }
    dend_4 { pt3dadd( -16.9637, 99.3893, -45.7846, 1.69 ) }
    dend_4 { pt3dadd( -17.0888, 99.8656, -45.9329, 1.92 ) }
    dend_4 { pt3dadd( -17.1646, 100.154, -46.0251, 1.92 ) }
    dend_4 { pt3dadd( -17.4234, 101.135, -46.3501, 0.22 ) }
    dend_4 { pt3dadd( -17.6045, 101.878, -46.6044, 0.22 ) }
    dend_4 { pt3dadd( -17.7275, 102.514, -46.8036, 0.37 ) }
    dend_4 { pt3dadd( -17.7997, 102.994, -46.9516, 0.37 ) }
    dend_4 { pt3dadd( -17.8661, 103.551, -47.1136, 1.33 ) }
    dend_4 { pt3dadd( -17.8982, 103.959, -47.2338, 1.84 ) }
    dend_4 { pt3dadd( -17.9174, 104.405, -47.3581, 1.84 ) }
    dend_4 { pt3dadd( -17.9435, 105.519, -47.6464, 0.29 ) }
    dend_4 { pt3dadd( -17.9714, 106.21, -47.8068, 0.44 ) }
    dend_4 { pt3dadd( -17.989, 106.532, -47.8749, 0.59 ) }
    dend_4 { pt3dadd( -18.0248, 107.046, -47.9646, 0.59 ) }
    dend_4 { pt3dadd( -18.1204, 108.007, -48.1343, 0.22 ) }
    dend_4 { pt3dadd( -18.2115, 108.698, -48.2687, 1.33 ) }
    dend_4 { pt3dadd( -18.2709, 109.013, -48.3373, 1.77 ) }
    dend_4 { pt3dadd( -18.3374, 109.331, -48.402, 1.92 ) }
    dend_4 { pt3dadd( -18.4119, 109.649, -48.4715, 1.4 ) }
    dend_4 { pt3dadd( -18.8516, 111.161, -48.9289, 0.22 ) }
    dend_4 { pt3dadd( -19.0565, 111.794, -49.1569, 0.22 ) }
    dend_4 { pt3dadd( -19.3686, 112.739, -49.5328, 1.11 ) }
    dend_4 { pt3dadd( -19.5153, 113.202, -49.7265, 1.55 ) }
    dend_4 { pt3dadd( -19.6597, 113.683, -49.9299, 1.4 ) }
    dend_4 { pt3dadd( -20.1811, 115.477, -50.6965, 0.29 ) }
    dend_4 { pt3dadd( -20.3117, 115.949, -50.8821, 0.37 ) }
    dend_4 { pt3dadd( -20.4241, 116.37, -51.0508, 0.44 ) }
    dend_4 { pt3dadd( -20.5491, 116.877, -51.2553, 0.44 ) }
    dend_4 { pt3dadd( -20.6574, 117.352, -51.435, 0.22 ) }
    dend_4 { pt3dadd( -20.7337, 117.785, -51.5853, 0.22 ) }
    dend_4 { pt3dadd( -20.8533, 118.736, -51.8835, 1.33 ) }
    dend_4 { pt3dadd( -20.9407, 119.263, -52.1181, 1.55 ) }
    dend_4 { pt3dadd( -21.0033, 119.559, -52.2806, 1.55 ) }
    dend_4 { pt3dadd( -21.3449, 120.862, -53.149, 0.22 ) }
    dend_4 { pt3dadd( -21.607, 121.659, -53.8033, 0.22 ) }
    dend_4 { pt3dadd( -21.766, 122.086, -54.1947, 0.66 ) }
    dend_4 { pt3dadd( -22.3766, 123.494, -55.6644, 0.44 ) }
    dend_4 { pt3dadd( -22.729, 124.225, -56.5578, 1.4 ) }
    dend_4 { pt3dadd( -23.0522, 124.847, -57.3655, 1.77 ) }
    dend_4 { pt3dadd( -23.6778, 125.933, -58.8938, 1.33 ) }
    dend_4 { pt3dadd( -23.9546, 126.377, -59.5458, 1.62 ) }
    dend_4 { pt3dadd( -24.7269, 127.587, -61.3635, 0.74 ) }
    dend_4 { pt3dadd( -26.0231, 129.698, -64.5167, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 100.584, 56.341, -76.9776, 0.44 ) }
    dend_11 { pt3dadd( 101.721, 56.5357, -77.2094, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( 102.416, 56.6703, -77.3767, 0.37 ) }
    dend_11 { pt3dadd( 103.272, 56.845, -77.5957, 0.29 ) }
    dend_11 { pt3dadd( 103.803, 56.9427, -77.7513, 0.59 ) }
    dend_11 { pt3dadd( 104.845, 57.0797, -78.1141, 0.29 ) }
    dend_11 { pt3dadd( 105.559, 57.1742, -78.375, 0.96 ) }
    dend_11 { pt3dadd( 106.077, 57.2694, -78.5914, 1.25 ) }
    dend_11 { pt3dadd( 106.503, 57.359, -78.7758, 1.33 ) }
    dend_11 { pt3dadd( 107.546, 57.5874, -79.2283, 0.22 ) }
    dend_11 { pt3dadd( 108.835, 57.876, -79.8134, 0.22 ) }
    dend_11 { pt3dadd( 109.511, 58.0304, -80.1207, 0.37 ) }
    dend_11 { pt3dadd( 110.445, 58.256, -80.5388, 0.22 ) }
    dend_11 { pt3dadd( 111.197, 58.4686, -80.8544, 1.18 ) }
    dend_11 { pt3dadd( 111.711, 58.6375, -81.0594, 1.4 ) }
    dend_11 { pt3dadd( 112.159, 58.8132, -81.2147, 1.4 ) }
    dend_11 { pt3dadd( 112.778, 59.084, -81.3937, 0.44 ) }
    dend_11 { pt3dadd( 113.544, 59.397, -81.5838, 0.22 ) }
    dend_11 { pt3dadd( 113.983, 59.5684, -81.6863, 0.52 ) }
    dend_11 { pt3dadd( 114.328, 59.7021, -81.7743, 0.52 ) }
    dend_11 { pt3dadd( 115.421, 60.1509, -82.0533, 0.22 ) }
    dend_11 { pt3dadd( 116.098, 60.4272, -82.2221, 0.81 ) }
    dend_11 { pt3dadd( 116.784, 60.6774, -82.4152, 1.25 ) }
    dend_11 { pt3dadd( 117.604, 60.943, -82.6477, 1.25 ) }
    dend_11 { pt3dadd( 118.88, 61.3074, -82.9891, 0.22 ) }
    dend_11 { pt3dadd( 119.487, 61.4673, -83.1528, 0.59 ) }
    dend_11 { pt3dadd( 119.965, 61.5814, -83.281, 0.74 ) }
    dend_11 { pt3dadd( 121.559, 61.8729, -83.6926, 0.22 ) }
    dend_11 { pt3dadd( 122.368, 61.9883, -83.8891, 0.22 ) }
    dend_11 { pt3dadd( 123.558, 62.1244, -84.1248, 1.25 ) }
    dend_11 { pt3dadd( 124.202, 62.1811, -84.2428, 1.62 ) }
    dend_11 { pt3dadd( 124.434, 62.2016, -84.2899, 1.62 ) }
    dend_11 { pt3dadd( 126.541, 62.3995, -84.7171, 0.22 ) }
    dend_11 { pt3dadd( 127.131, 62.4509, -84.8312, 0.22 ) }
    dend_11 { pt3dadd( 128.096, 62.5162, -85.0353, 1.03 ) }
    dend_11 { pt3dadd( 128.742, 62.5402, -85.1766, 1.25 ) }
    dend_11 { pt3dadd( 130.218, 62.5691, -85.491, 0.22 ) }
    dend_11 { pt3dadd( 130.825, 62.5718, -85.6361, 0.22 ) }
    dend_11 { pt3dadd( 131.29, 62.5683, -85.7653, 0.66 ) }
    dend_11 { pt3dadd( 132.467, 62.5158, -86.1397, 0.22 ) }
    dend_11 { pt3dadd( 133.252, 62.4492, -86.4374, 0.22 ) }
    dend_11 { pt3dadd( 133.896, 62.3757, -86.7017, 0.74 ) }
    dend_11 { pt3dadd( 134.489, 62.3121, -86.9647, 0.96 ) }
    dend_11 { pt3dadd( 135.526, 62.2364, -87.4482, 0.22 ) }
    dend_11 { pt3dadd( 136.732, 62.1959, -88.0061, 1.33 ) }
    dend_11 { pt3dadd( 137.376, 62.1976, -88.293, 1.77 ) }
    dend_11 { pt3dadd( 137.721, 62.2126, -88.4396, 1.77 ) }
    dend_11 { pt3dadd( 139.725, 62.3448, -89.2305, 0.22 ) }
    dend_11 { pt3dadd( 140.15, 62.3798, -89.3842, 0.22 ) }
    dend_11 { pt3dadd( 140.653, 62.4322, -89.5611, 0.74 ) }
    dend_11 { pt3dadd( 141.095, 62.4901, -89.7103, 0.74 ) }
    dend_11 { pt3dadd( 142.243, 62.647, -90.0876, 0.22 ) }
    dend_11 { pt3dadd( 142.819, 62.7295, -90.2863, 1.03 ) }
    dend_11 { pt3dadd( 143.243, 62.798, -90.4433, 1.33 ) }
    dend_11 { pt3dadd( 143.729, 62.8964, -90.6202, 1.47 ) }
    dend_11 { pt3dadd( 145.209, 63.2444, -91.1314, 0.15 ) }
    dend_11 { pt3dadd( 145.634, 63.3608, -91.2627, 0.29 ) }
    dend_11 { pt3dadd( 146.038, 63.4967, -91.3562, 0.29 ) }
    dend_11 { pt3dadd( 146.932, 63.8543, -91.4458, 0.15 ) }
    dend_11 { pt3dadd( 147.636, 64.1956, -91.4274, 0.66 ) }
    dend_11 { pt3dadd( 147.904, 64.3456, -91.3899, 0.74 ) }
    dend_11 { pt3dadd( 148.099, 64.4739, -91.3365, 0.74 ) }
    dend_11 { pt3dadd( 149.059, 65.0925, -91.0262, 0.15 ) }
    dend_11 { pt3dadd( 150.054, 65.7262, -90.6825, 0.15 ) }
    dend_11 { pt3dadd( 150.749, 66.1603, -90.436, 1.03 ) }
    dend_11 { pt3dadd( 151.083, 66.3637, -90.3259, 1.18 ) }
    dend_11 { pt3dadd( 151.328, 66.5047, -90.2523, 1.18 ) }
    dend_11 { pt3dadd( 152.696, 67.2389, -89.8818, 0.15 ) }
    dend_11 { pt3dadd( 153.228, 67.5089, -89.7642, 0.81 ) }
    dend_11 { pt3dadd( 153.592, 67.6906, -89.7088, 1.11 ) }
    dend_11 { pt3dadd( 153.914, 67.8499, -89.6676, 1.11 ) }
    dend_11 { pt3dadd( 156.232, 69.0071, -89.4654, 0.22 ) }
    dend_11 { pt3dadd( 156.983, 69.3904, -89.3973, 0.88 ) }
    dend_11 { pt3dadd( 157.438, 69.6356, -89.3523, 0.74 ) }
    dend_11 { pt3dadd( 158.594, 70.2694, -89.1944, 0.22 ) }
    dend_11 { pt3dadd( 159.034, 70.5151, -89.1186, 0.59 ) }
    dend_11 { pt3dadd( 159.531, 70.8092, -89.0142, 0.74 ) }
    dend_11 { pt3dadd( 160.744, 71.6167, -88.6885, 0.22 ) }
    dend_11 { pt3dadd( 161.295, 71.9808, -88.5167, 1.47 ) }
    dend_11 { pt3dadd( 161.853, 72.336, -88.3145, 1.77 ) }
    dend_11 { pt3dadd( 162.231, 72.5588, -88.1698, 1.77 ) }
    dend_11 { pt3dadd( 163.743, 73.441, -87.552, 0.22 ) }
    dend_11 { pt3dadd( 164.414, 73.8321, -87.2725, 0.66 ) }
    dend_11 { pt3dadd( 164.869, 74.0922, -87.1027, 0.88 ) }
    dend_11 { pt3dadd( 165.798, 74.6204, -86.7196, 0.22 ) }
    dend_11 { pt3dadd( 166.248, 74.8843, -86.5283, 0.44 ) }
    dend_11 { pt3dadd( 167.157, 75.4398, -86.1022, 0.22 ) }
    dend_11 { pt3dadd( 167.287, 75.523, -86.0316, 0.81 ) }
    dend_11 { pt3dadd( 167.535, 75.7049, -85.8999, 0.81 ) }
    dend_11 { pt3dadd( 168.693, 76.733, -85.3294, 0.22 ) }
    dend_11 { pt3dadd( 169.254, 77.2646, -85.09, 1.03 ) }
    dend_11 { pt3dadd( 169.443, 77.4457, -85.0192, 1.33 ) }
    dend_11 { pt3dadd( 169.742, 77.7225, -84.9255, 1.33 ) }
    dend_11 { pt3dadd( 171.325, 79.0479, -84.6021, 0.22 ) }
    dend_11 { pt3dadd( 172.127, 79.6338, -84.5206, 0.22 ) }
    dend_11 { pt3dadd( 173.029, 80.1813, -84.5115, 1.03 ) }
    dend_11 { pt3dadd( 173.433, 80.3816, -84.5265, 1.33 ) }
    dend_11 { pt3dadd( 173.788, 80.5183, -84.5481, 1.33 ) }
    dend_11 { pt3dadd( 175.397, 80.9818, -84.6571, 0.22 ) }
    dend_11 { pt3dadd( 176.51, 81.1952, -84.7363, 0.22 ) }
    dend_11 { pt3dadd( 177.563, 81.3579, -84.7848, 0.74 ) }
    dend_11 { pt3dadd( 178.161, 81.4514, -84.7812, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 179.439, 81.6617, -84.6813, 0.22 ) }
    dend_11 { pt3dadd( 180.046, 81.7662, -84.5817, 0.22 ) }
    dend_11 { pt3dadd( 180.341, 81.8218, -84.4924, 0.66 ) }
    dend_11 { pt3dadd( 180.589, 81.8593, -84.4134, 0.66 ) }
    dend_11 { pt3dadd( 181.634, 81.9843, -84.1035, 0.22 ) }
    dend_11 { pt3dadd( 182.298, 82.0502, -83.9234, 0.88 ) }
    dend_11 { pt3dadd( 182.468, 82.0634, -83.8843, 1.18 ) }
    dend_11 { pt3dadd( 182.668, 82.0747, -83.845, 1.18 ) }
    dend_11 { pt3dadd( 184.49, 82.1496, -83.4922, 0.22 ) }
    dend_11 { pt3dadd( 185.292, 82.1778, -83.34, 0.44 ) }
    dend_11 { pt3dadd( 185.609, 82.1906, -83.2808, 0.29 ) }
    dend_11 { pt3dadd( 186.16, 82.233, -83.2444, 0.29 ) }
    dend_11 { pt3dadd( 187.104, 82.363, -83.2757, 0.96 ) }
    dend_11 { pt3dadd( 187.577, 82.4487, -83.3442, 1.18 ) }
    dend_11 { pt3dadd( 187.962, 82.534, -83.4293, 1.18 ) }
    dend_11 { pt3dadd( 188.303, 82.61, -83.5091, 0.88 ) }
    dend_11 { pt3dadd( 190.681, 83.1521, -84.1663, 0.22 ) }
    dend_11 { pt3dadd( 191.13, 83.2589, -84.3134, 0.81 ) }
    dend_11 { pt3dadd( 191.547, 83.3605, -84.4645, 0.81 ) }
    dend_11 { pt3dadd( 192.843, 83.6209, -84.8938, 0.22 ) }
    dend_11 { pt3dadd( 193.431, 83.7275, -85.0805, 0.22 ) }
    dend_11 { pt3dadd( 194.416, 83.889, -85.3686, 1.03 ) }
    dend_11 { pt3dadd( 194.993, 83.9806, -85.516, 1.11 ) }
    dend_11 { pt3dadd( 196.579, 84.234, -85.9902, 0.22 ) }
    dend_11 { pt3dadd( 197.583, 84.4197, -86.3316, 0.22 ) }
    dend_11 { pt3dadd( 198.609, 84.618, -86.7493, 0.96 ) }
    dend_11 { pt3dadd( 199.155, 84.7213, -86.9863, 1.18 ) }
    dend_11 { pt3dadd( 200.916, 85.0684, -87.797, 0.22 ) }
    dend_11 { pt3dadd( 201.749, 85.2476, -88.2143, 0.22 ) }
    dend_11 { pt3dadd( 202.529, 85.4352, -88.6454, 1.11 ) }
    dend_11 { pt3dadd( 203.086, 85.5826, -89.0004, 1.33 ) }
    dend_11 { pt3dadd( 203.236, 85.6173, -89.1039, 1.47 ) }
    dend_11 { pt3dadd( 203.951, 85.779, -89.6541, 1.18 ) }
    dend_11 { pt3dadd( 205.021, 86.0215, -90.5895, 0.15 ) }
    dend_11 { pt3dadd( 205.489, 86.1197, -91.0166, 0.59 ) }
    dend_11 { pt3dadd( 206.22, 86.2531, -91.6954, 0.81 ) }
    dend_11 { pt3dadd( 207.221, 86.4367, -92.619, 0.22 ) }
    dend_11 { pt3dadd( 207.839, 86.565, -93.2142, 1.03 ) }
    dend_11 { pt3dadd( 208.34, 86.6838, -93.7276, 1.25 ) }
    dend_11 { pt3dadd( 209.53, 87.0849, -95.1727, 0.22 ) }
    dend_11 { pt3dadd( 210.032, 87.2978, -95.8196, 0.37 ) }
    dend_11 { pt3dadd( 210.481, 87.5267, -96.4291, 0.15 ) }
    dend_11 { pt3dadd( 211.07, 87.8711, -97.2862, 0.59 ) }
    dend_11 { pt3dadd( 211.424, 88.0722, -97.8689, 0.59 ) }
    dend_11 { pt3dadd( 212.459, 88.5947, -99.6529, 0.22 ) }
    dend_11 { pt3dadd( 212.797, 88.75, -100.225, 0.22 ) }
    dend_11 { pt3dadd( 213.682, 89.0923, -101.639, 1.25 ) }
    dend_11 { pt3dadd( 213.908, 89.1591, -101.972, 1.92 ) }
    dend_11 { pt3dadd( 216.235, 89.6858, -105.305, 0.52 ) }
    dend_11 { pt3dadd( 217.215, 89.8683, -106.724, 0.29 ) }
    dend_11 { pt3dadd( 217.726, 89.9588, -107.479, 0.96 ) }
    dend_11 { pt3dadd( 218.263, 90.0728, -108.301, 1.18 ) }
    dend_11 { pt3dadd( 219.172, 90.3211, -109.687, 0.81 ) }
    dend_11 { pt3dadd( 220.686, 90.8441, -112.048, 1.69 ) }
    dend_11 { pt3dadd( 221.359, 91.1707, -113.125, 1.92 ) }
    dend_11 { pt3dadd( 222.738, 92.0359, -115.488, 0.22 ) }
    dend_11 { pt3dadd( 223.067, 92.3011, -116.104, 0.22 ) }
    dend_11 { pt3dadd( 223.453, 92.7047, -116.88, 1.33 ) }
    dend_11 { pt3dadd( 223.96, 93.4059, -118.007, 1.33 ) }
    dend_11 { pt3dadd( 224.601, 94.5682, -119.649, 0.22 ) }
    dend_11 { pt3dadd( 224.808, 95.0761, -120.359, 0.22 ) }
    dend_11 { pt3dadd( 225.003, 95.7488, -121.436, 0.22 ) }
    dend_11 { pt3dadd( 225.17, 96.3633, -122.636, 1.4 ) }
    dend_11 { pt3dadd( 225.231, 96.5987, -123.189, 1.62 ) }
    dend_11 { pt3dadd( 225.53, 97.502, -125.776, 0.22 ) }
    dend_11 { pt3dadd( 225.689, 97.9148, -127.114, 0.96 ) }
    dend_11 { pt3dadd( 226.021, 98.5969, -129.532, 1.55 ) }
    dend_11 { pt3dadd( 226.372, 99.1532, -131.635, 2.21 ) }
    dend_11 { pt3dadd( 226.663, 99.5353, -133.141, 2.43 ) }
    dend_11 { pt3dadd( 227.574, 100.531, -137.066, 0.81 ) }
    dend_11 { pt3dadd( 227.824, 100.767, -137.97, 0.29 ) }
    dend_11 { pt3dadd( 228.255, 101.145, -139.319, 0.74 ) }
    dend_11 { pt3dadd( 229.19, 101.929, -141.785, 0.81 ) }
    dend_11 { pt3dadd( 229.457, 102.133, -142.374, 0.96 ) }
    dend_11 { pt3dadd( 230.39, 102.748, -144.108, 0.22 ) }
    dend_11 { pt3dadd( 230.734, 102.937, -144.644, 0.52 ) }
    dend_11 { pt3dadd( 230.996, 103.066, -145.02, 0.59 ) }
    dend_11 { pt3dadd( 231.699, 103.39, -145.93, 0.22 ) }
    dend_11 { pt3dadd( 232.652, 103.785, -147.107, 1.47 ) }
    dend_11 { pt3dadd( 233.135, 104.001, -147.751, 1.69 ) }
    dend_11 { pt3dadd( 234.233, 104.546, -149.4, 0.37 ) }
    dend_11 { pt3dadd( 234.574, 104.739, -149.989, 0.88 ) }
    dend_11 { pt3dadd( 234.897, 104.949, -150.641, 1.11 ) }
    dend_11 { pt3dadd( 235.834, 105.65, -152.973, 0.22 ) }
    dend_11 { pt3dadd( 236.13, 105.868, -153.751, 0.37 ) }
    dend_11 { pt3dadd( 236.778, 106.372, -155.557, 0.22 ) }
    dend_11 { pt3dadd( 237.345, 106.817, -157.283, 1.47 ) }
    dend_11 { pt3dadd( 237.717, 107.107, -158.473, 1.69 ) }
    dend_11 { pt3dadd( 238.338, 107.63, -160.535, 1.77 ) }
    dend_11 { pt3dadd( 238.691, 107.916, -161.733, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 100.584, 56.341, -76.9776, 0.29 ) }
    dend_10 { pt3dadd( 101.72, 57.8764, -77.7357, 0.29 ) }
    dend_10 { pt3dadd( 102.281, 58.6318, -78.0743, 0.29 ) }
    dend_10 { pt3dadd( 102.932, 59.5042, -78.4547, 0.81 ) }
    dend_10 { pt3dadd( 103.361, 60.0738, -78.6869, 0.96 ) }
    dend_10 { pt3dadd( 104.145, 61.0898, -79.0754, 0.22 ) }
    dend_10 { pt3dadd( 104.662, 61.7477, -79.3125, 0.44 ) }
    dend_10 { pt3dadd( 104.927, 62.0593, -79.4121, 0.44 ) }
    dend_10 { pt3dadd( 105.512, 62.7046, -79.5607, 0.22 ) }
    dend_10 { pt3dadd( 106.132, 63.3066, -79.6492, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_10 { pt3dadd( 106.432, 63.586, -79.6582, 1.33 ) }
    dend_10 { pt3dadd( 106.689, 63.8108, -79.6422, 1.55 ) }
    dend_10 { pt3dadd( 107.28, 64.3204, -79.5352, 1.25 ) }
    dend_10 { pt3dadd( 108.201, 65.12, -79.2709, 0.15 ) }
    dend_10 { pt3dadd( 108.728, 65.6033, -79.0554, 0.74 ) }
    dend_10 { pt3dadd( 109.383, 66.2681, -78.7141, 1.11 ) }
    dend_10 { pt3dadd( 109.762, 66.6497, -78.5487, 1.18 ) }
    dend_10 { pt3dadd( 110.251, 67.1289, -78.3865, 0.88 ) }
    dend_10 { pt3dadd( 111.122, 67.9889, -78.1539, 0.15 ) }
    dend_10 { pt3dadd( 111.644, 68.4764, -78.0794, 0.37 ) }
    dend_10 { pt3dadd( 112.057, 68.828, -78.073, 0.52 ) }
    dend_10 { pt3dadd( 113.666, 70.0249, -78.2554, 0.22 ) }
    dend_10 { pt3dadd( 114.444, 70.563, -78.3915, 1.25 ) }
    dend_10 { pt3dadd( 114.966, 70.8961, -78.5033, 1.77 ) }
    dend_10 { pt3dadd( 115.407, 71.1548, -78.6095, 1.77 ) }
    dend_10 { pt3dadd( 115.799, 71.3798, -78.7069, 1.55 ) }
    dend_10 { pt3dadd( 117.215, 72.2168, -79.0376, 0.22 ) }
    dend_10 { pt3dadd( 117.722, 72.5481, -79.1312, 0.37 ) }
    dend_10 { pt3dadd( 118.212, 72.8803, -79.2498, 0.37 ) }
    dend_10 { pt3dadd( 119.122, 73.5216, -79.5014, 0.15 ) }
    dend_10 { pt3dadd( 119.744, 74.0276, -79.704, 0.96 ) }
    dend_10 { pt3dadd( 119.983, 74.2493, -79.8004, 1.11 ) }
    dend_10 { pt3dadd( 120.176, 74.4571, -79.8981, 1.11 ) }
    dend_10 { pt3dadd( 121.295, 75.801, -80.5262, 0.22 ) }
    dend_10 { pt3dadd( 121.774, 76.4173, -80.8189, 0.22 ) }
    dend_10 { pt3dadd( 122.359, 77.2132, -81.1904, 0.22 ) }
    dend_10 { pt3dadd( 122.746, 77.7403, -81.4509, 0.22 ) }
    dend_10 { pt3dadd( 123.3, 78.5414, -81.8529, 1.18 ) }
    dend_10 { pt3dadd( 123.529, 78.8906, -82.0252, 1.84 ) }
    dend_10 { pt3dadd( 123.771, 79.2919, -82.23, 1.84 ) }
    dend_10 { pt3dadd( 123.915, 79.5296, -82.3573, 1.84 ) }
    dend_10 { pt3dadd( 124.864, 80.9912, -83.1923, 0.22 ) }
    dend_10 { pt3dadd( 125.33, 81.7518, -83.6492, 0.81 ) }
    dend_10 { pt3dadd( 125.496, 82.055, -83.8399, 1.11 ) }
    dend_10 { pt3dadd( 125.744, 82.5583, -84.1543, 1.11 ) }
    dend_10 { pt3dadd( 125.863, 82.8257, -84.3173, 0.74 ) }
    dend_10 { pt3dadd( 126.217, 83.6419, -84.797, 0.29 ) }
    dend_10 { pt3dadd( 126.421, 84.1379, -85.0658, 0.44 ) }
    dend_10 { pt3dadd( 126.629, 84.5915, -85.3017, 0.44 ) }
    dend_10 { pt3dadd( 126.878, 85.1084, -85.5441, 0.22 ) }
    dend_10 { pt3dadd( 127.077, 85.5181, -85.7096, 0.22 ) }
    dend_10 { pt3dadd( 127.575, 86.5358, -86.0919, 1.18 ) }
    dend_10 { pt3dadd( 127.742, 86.8751, -86.2071, 1.4 ) }
    dend_10 { pt3dadd( 127.926, 87.2412, -86.3407, 1.4 ) }
    dend_10 { pt3dadd( 128.196, 87.7679, -86.5397, 0.88 ) }
    dend_10 { pt3dadd( 128.398, 88.2079, -86.6816, 0.37 ) }
    dend_10 { pt3dadd( 128.728, 89.0349, -86.9065, 0.22 ) }
    dend_10 { pt3dadd( 128.925, 89.6162, -87.0287, 0.29 ) }
    dend_10 { pt3dadd( 129.103, 90.1912, -87.131, 0.29 ) }
    dend_10 { pt3dadd( 129.456, 91.3859, -87.3169, 0.22 ) }
    dend_10 { pt3dadd( 129.753, 92.4212, -87.4721, 0.22 ) }
    dend_10 { pt3dadd( 129.996, 93.3409, -87.6168, 1.33 ) }
    dend_10 { pt3dadd( 130.144, 93.9384, -87.7126, 1.55 ) }
    dend_10 { pt3dadd( 130.587, 95.8369, -88.0424, 0.22 ) }
    dend_10 { pt3dadd( 130.77, 96.5885, -88.2149, 0.22 ) }
    dend_10 { pt3dadd( 131.012, 97.6051, -88.5076, 0.22 ) }
    dend_10 { pt3dadd( 131.316, 98.8171, -88.9325, 1.55 ) }
    dend_10 { pt3dadd( 131.412, 99.1791, -89.073, 1.84 ) }
    dend_10 { pt3dadd( 131.517, 99.5582, -89.235, 1.84 ) }
    dend_10 { pt3dadd( 131.993, 101.198, -89.9982, 0.22 ) }
    dend_10 { pt3dadd( 132.184, 101.789, -90.3015, 0.44 ) }
    dend_10 { pt3dadd( 132.419, 102.382, -90.6126, 0.59 ) }
    dend_10 { pt3dadd( 132.929, 103.544, -91.2223, 0.29 ) }
    dend_10 { pt3dadd( 133.146, 104.044, -91.4817, 1.18 ) }
    dend_10 { pt3dadd( 133.356, 104.546, -91.7238, 1.4 ) }
    dend_10 { pt3dadd( 133.538, 104.996, -91.9176, 1.4 ) }
    dend_10 { pt3dadd( 134.128, 106.429, -92.4784, 0.22 ) }
    dend_10 { pt3dadd( 134.343, 106.949, -92.6426, 0.22 ) }
    dend_10 { pt3dadd( 134.511, 107.378, -92.7387, 0.44 ) }
    dend_10 { pt3dadd( 134.708, 107.968, -92.8353, 0.22 ) }
    dend_10 { pt3dadd( 134.783, 108.27, -92.8728, 0.22 ) }
    dend_10 { pt3dadd( 134.943, 109.071, -92.9577, 1.11 ) }
    dend_10 { pt3dadd( 135.03, 109.6, -93.0185, 1.33 ) }
    dend_10 { pt3dadd( 135.046, 109.673, -93.0274, 1.55 ) }
    dend_10 { pt3dadd( 135.431, 110.925, -93.2052, 0.22 ) }
    dend_10 { pt3dadd( 135.575, 111.377, -93.2581, 0.22 ) }
    dend_10 { pt3dadd( 135.726, 111.863, -93.2915, 0.44 ) }
    dend_10 { pt3dadd( 135.838, 112.251, -93.2964, 0.44 ) }
    dend_10 { pt3dadd( 136.108, 113.254, -93.3003, 0.22 ) }
    dend_10 { pt3dadd( 136.326, 114.079, -93.2979, 0.22 ) }
    dend_10 { pt3dadd( 136.614, 115.203, -93.288, 1.18 ) }
    dend_10 { pt3dadd( 136.73, 115.734, -93.3057, 1.33 ) }
    dend_10 { pt3dadd( 136.82, 116.377, -93.3094, 1.11 ) }
    dend_10 { pt3dadd( 136.902, 117.496, -93.309, 0.22 ) }
    dend_10 { pt3dadd( 136.907, 117.82, -93.3101, 0.44 ) }
    dend_10 { pt3dadd( 136.914, 118.38, -93.304, 0.44 ) }
    dend_10 { pt3dadd( 136.97, 119.128, -93.2941, 0.22 ) }
    dend_10 { pt3dadd( 137.209, 120.593, -93.2244, 0.22 ) }
    dend_10 { pt3dadd( 137.375, 121.208, -93.1723, 1.11 ) }
    dend_10 { pt3dadd( 137.55, 121.753, -93.1121, 1.55 ) }
    dend_10 { pt3dadd( 137.77, 122.374, -93.0619, 1.62 ) }
    dend_10 { pt3dadd( 137.975, 122.89, -93.0237, 1.25 ) }
    dend_10 { pt3dadd( 138.58, 124.249, -92.9325, 0.22 ) }
    dend_10 { pt3dadd( 139.035, 125.179, -92.9199, 0.22 ) }
    dend_10 { pt3dadd( 139.321, 125.769, -92.915, 0.22 ) }
    dend_10 { pt3dadd( 139.754, 126.701, -92.9291, 0.44 ) }
    dend_10 { pt3dadd( 140.0, 127.269, -92.9597, 0.44 ) }
    dend_10 { pt3dadd( 140.285, 127.959, -93.0071, 0.22 ) }
    dend_10 { pt3dadd( 140.523, 128.537, -93.0448, 0.22 ) }
    dend_10 { pt3dadd( 140.802, 129.153, -93.0768, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_10 { pt3dadd( 140.961, 129.453, -93.0966, 0.59 ) }
    dend_10 { pt3dadd( 141.322, 130.091, -93.1663, 0.22 ) }
    dend_10 { pt3dadd( 141.772, 130.878, -93.2893, 0.74 ) }
    dend_10 { pt3dadd( 141.977, 131.221, -93.3467, 0.88 ) }
    dend_10 { pt3dadd( 142.333, 131.76, -93.4361, 0.52 ) }
    dend_10 { pt3dadd( 142.967, 132.636, -93.5843, 0.22 ) }
    dend_10 { pt3dadd( 143.541, 133.388, -93.7674, 0.22 ) }
    dend_10 { pt3dadd( 144.187, 134.224, -94.0283, 1.11 ) }
    dend_10 { pt3dadd( 144.528, 134.662, -94.2041, 1.47 ) }
    dend_10 { pt3dadd( 144.877, 135.114, -94.426, 1.55 ) }
    dend_10 { pt3dadd( 145.836, 136.376, -95.2008, 0.22 ) }
    dend_10 { pt3dadd( 146.613, 137.417, -95.9421, 0.96 ) }
    dend_10 { pt3dadd( 146.838, 137.722, -96.1802, 1.4 ) }
    dend_10 { pt3dadd( 147.199, 138.223, -96.6115, 1.25 ) }
    dend_10 { pt3dadd( 147.462, 138.611, -96.9547, 0.88 ) }
    dend_10 { pt3dadd( 148.076, 139.585, -97.799, 0.22 ) }
    dend_10 { pt3dadd( 148.378, 140.103, -98.2587, 0.37 ) }
    dend_10 { pt3dadd( 148.67, 140.634, -98.6981, 0.22 ) }
    dend_10 { pt3dadd( 149.133, 141.443, -99.3706, 0.52 ) }
    dend_10 { pt3dadd( 149.375, 141.888, -99.7331, 0.66 ) }
    dend_10 { pt3dadd( 149.814, 142.713, -100.441, 0.22 ) }
    dend_10 { pt3dadd( 150.106, 143.297, -100.97, 0.66 ) }
    dend_10 { pt3dadd( 150.182, 143.466, -101.132, 0.66 ) }
    dend_10 { pt3dadd( 150.593, 144.527, -102.19, 0.22 ) }
    dend_10 { pt3dadd( 150.733, 145.025, -102.659, 0.59 ) }
    dend_10 { pt3dadd( 150.934, 146.209, -103.722, 0.22 ) }
    dend_10 { pt3dadd( 150.963, 146.632, -104.074, 0.22 ) }
    dend_10 { pt3dadd( 150.968, 147.355, -104.638, 1.47 ) }
    dend_10 { pt3dadd( 150.941, 147.694, -104.897, 1.69 ) }
    dend_10 { pt3dadd( 150.67, 149.107, -105.927, 0.22 ) }
    dend_10 { pt3dadd( 150.45, 150.032, -106.602, 0.22 ) }
    dend_10 { pt3dadd( 150.25, 150.704, -107.085, 0.74 ) }
    dend_10 { pt3dadd( 150.134, 151.076, -107.353, 0.88 ) }
    dend_10 { pt3dadd( 149.757, 152.249, -108.218, 0.22 ) }
    dend_10 { pt3dadd( 149.447, 153.2, -108.949, 1.25 ) }
    dend_10 { pt3dadd( 149.321, 153.603, -109.28, 1.25 ) }
    dend_10 { pt3dadd( 149.207, 154.008, -109.619, 0.74 ) }
    dend_10 { pt3dadd( 149.012, 154.75, -110.238, 0.22 ) }
    dend_10 { pt3dadd( 148.809, 155.628, -110.93, 1.4 ) }
    dend_10 { pt3dadd( 148.743, 155.959, -111.181, 1.62 ) }
    dend_10 { pt3dadd( 148.527, 157.065, -111.995, 0.22 ) }
    dend_10 { pt3dadd( 148.398, 157.758, -112.471, 0.59 ) }
    dend_10 { pt3dadd( 148.343, 158.03, -112.627, 0.59 ) }
    dend_10 { pt3dadd( 148.076, 159.219, -113.21, 0.15 ) }
    dend_10 { pt3dadd( 147.905, 159.922, -113.492, 0.15 ) }
    dend_10 { pt3dadd( 147.733, 160.569, -113.71, 0.15 ) }
    dend_10 { pt3dadd( 147.496, 161.405, -113.969, 0.15 ) }
    dend_10 { pt3dadd( 147.025, 163.099, -114.486, 1.18 ) }
    dend_10 { pt3dadd( 146.942, 163.387, -114.596, 1.47 ) }
    dend_10 { pt3dadd( 146.819, 163.804, -114.805, 1.11 ) }
    dend_10 { pt3dadd( 146.519, 164.763, -115.416, 0.22 ) }
    dend_10 { pt3dadd( 146.302, 165.429, -115.94, 0.96 ) }
    dend_10 { pt3dadd( 146.166, 165.836, -116.345, 0.96 ) }
    dend_10 { pt3dadd( 145.977, 166.826, -117.619, 0.22 ) }
    dend_10 { pt3dadd( 145.912, 167.554, -118.59, 0.22 ) }
    dend_10 { pt3dadd( 145.902, 168.176, -119.434, 1.18 ) }
    dend_10 { pt3dadd( 145.909, 168.398, -119.738, 1.4 ) }
    dend_10 { pt3dadd( 145.94, 168.839, -120.298, 1.55 ) }
    dend_10 { pt3dadd( 146.139, 170.686, -122.528, 0.22 ) }
    dend_10 { pt3dadd( 146.294, 171.658, -123.631, 0.22 ) }
    dend_10 { pt3dadd( 146.434, 172.33, -124.371, 0.81 ) }
    dend_10 { pt3dadd( 146.473, 172.488, -124.543, 1.03 ) }
    dend_10 { pt3dadd( 146.709, 173.463, -125.596, 0.22 ) }
    dend_10 { pt3dadd( 146.807, 173.902, -126.048, 0.66 ) }
    dend_10 { pt3dadd( 146.875, 174.272, -126.425, 0.66 ) }
    dend_10 { pt3dadd( 147.011, 174.903, -127.122, 0.15 ) }
    dend_10 { pt3dadd( 147.148, 175.655, -127.915, 1.25 ) }
    dend_10 { pt3dadd( 147.194, 176.053, -128.307, 1.4 ) }
    dend_10 { pt3dadd( 147.255, 176.957, -129.15, 0.15 ) }
    dend_10 { pt3dadd( 147.268, 177.52, -129.634, 0.37 ) }
    dend_10 { pt3dadd( 147.267, 177.792, -129.848, 0.37 ) }
    dend_10 { pt3dadd( 147.246, 179.288, -130.967, 0.22 ) }
    dend_10 { pt3dadd( 147.234, 180.113, -131.552, 1.03 ) }
    dend_10 { pt3dadd( 147.226, 180.48, -131.799, 1.18 ) }
    dend_10 { pt3dadd( 147.219, 180.682, -131.933, 1.18 ) }
    dend_10 { pt3dadd( 147.164, 182.078, -132.815, 0.22 ) }
    dend_10 { pt3dadd( 147.151, 182.653, -133.181, 0.52 ) }
    dend_10 { pt3dadd( 147.152, 182.924, -133.35, 0.52 ) }
    dend_10 { pt3dadd( 147.161, 184.081, -134.027, 0.22 ) }
    dend_10 { pt3dadd( 147.164, 184.766, -134.401, 0.22 ) }
    dend_10 { pt3dadd( 147.18, 185.555, -134.799, 1.11 ) }
    dend_10 { pt3dadd( 147.196, 186.18, -135.092, 1.11 ) }
    dend_10 { pt3dadd( 147.267, 187.777, -135.802, 0.22 ) }
    dend_10 { pt3dadd( 147.336, 188.73, -136.216, 0.22 ) }
    dend_10 { pt3dadd( 147.43, 189.571, -136.566, 1.03 ) }
    dend_10 { pt3dadd( 147.504, 190.134, -136.804, 1.47 ) }
    dend_10 { pt3dadd( 147.563, 190.572, -136.993, 1.11 ) }
    dend_10 { pt3dadd( 147.677, 191.768, -137.467, 0.15 ) }
    dend_10 { pt3dadd( 147.719, 192.199, -137.639, 0.37 ) }
    dend_10 { pt3dadd( 147.819, 193.18, -138.034, 0.22 ) }
    dend_10 { pt3dadd( 147.861, 193.701, -138.232, 0.37 ) }
    dend_10 { pt3dadd( 147.884, 193.989, -138.345, 0.37 ) }
    dend_10 { pt3dadd( 148.038, 195.355, -138.886, 0.22 ) }
    dend_10 { pt3dadd( 148.143, 196.183, -139.215, 0.81 ) }
    dend_10 { pt3dadd( 148.215, 196.68, -139.41, 1.03 ) }
    dend_10 { pt3dadd( 148.435, 197.963, -139.911, 0.15 ) }
    dend_10 { pt3dadd( 148.58, 198.696, -140.196, 0.29 ) }
    dend_10 { pt3dadd( 148.719, 199.364, -140.476, 0.22 ) }
    dend_10 { pt3dadd( 148.846, 199.969, -140.757, 0.88 ) }
    dend_10 { pt3dadd( 148.9, 200.32, -140.916, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 148.93, 200.678, -141.082, 1.11 ) }
    dend_10 { pt3dadd( 148.938, 201.969, -141.712, 0.22 ) }
    dend_10 { pt3dadd( 148.88, 202.668, -142.052, 1.03 ) }
    dend_10 { pt3dadd( 148.831, 203.016, -142.227, 1.25 ) }
    dend_10 { pt3dadd( 148.633, 204.181, -142.829, 0.22 ) }
    dend_10 { pt3dadd( 148.436, 205.145, -143.334, 0.88 ) }
    dend_10 { pt3dadd( 148.224, 206.084, -143.824, 0.29 ) }
    dend_10 { pt3dadd( 148.035, 206.839, -144.219, 0.96 ) }
    dend_10 { pt3dadd( 147.943, 207.195, -144.406, 0.96 ) }
    dend_10 { pt3dadd( 147.762, 207.851, -144.753, 0.22 ) }
    dend_10 { pt3dadd( 147.598, 208.381, -145.04, 0.37 ) }
    dend_10 { pt3dadd( 147.361, 209.123, -145.451, 0.22 ) }
    dend_10 { pt3dadd( 147.15, 209.77, -145.816, 0.52 ) }
    dend_10 { pt3dadd( 146.75, 211.071, -146.552, 0.22 ) }
    dend_10 { pt3dadd( 146.57, 211.655, -146.899, 0.81 ) }
    dend_10 { pt3dadd( 146.355, 212.355, -147.332, 0.22 ) }
    dend_10 { pt3dadd( 146.201, 212.88, -147.663, 0.88 ) }
    dend_10 { pt3dadd( 146.091, 213.326, -147.948, 1.03 ) }
    dend_10 { pt3dadd( 145.754, 215.021, -149.029, 0.22 ) }
    dend_10 { pt3dadd( 145.667, 215.611, -149.398, 0.22 ) }
    dend_10 { pt3dadd( 145.593, 216.277, -149.802, 0.81 ) }
    dend_10 { pt3dadd( 145.569, 216.558, -149.968, 1.03 ) }
    dend_10 { pt3dadd( 145.48, 217.981, -150.818, 0.22 ) }
    dend_10 { pt3dadd( 145.457, 218.311, -151.011, 0.29 ) }
    dend_10 { pt3dadd( 145.371, 219.226, -151.528, 0.15 ) }
    dend_10 { pt3dadd( 145.318, 219.721, -151.793, 0.29 ) }
    dend_10 { pt3dadd( 145.232, 220.404, -152.162, 0.88 ) }
    dend_10 { pt3dadd( 145.139, 220.972, -152.486, 0.88 ) }
    dend_10 { pt3dadd( 144.903, 222.095, -153.036, 0.22 ) }
    dend_10 { pt3dadd( 144.786, 222.583, -153.251, 0.22 ) }
    dend_10 { pt3dadd( 144.626, 223.158, -153.503, 0.88 ) }
    dend_10 { pt3dadd( 144.51, 223.546, -153.652, 1.11 ) }
    dend_10 { pt3dadd( 144.376, 224.003, -153.802, 1.11 ) }
    dend_10 { pt3dadd( 143.983, 225.574, -154.18, 0.22 ) }
    dend_10 { pt3dadd( 143.813, 226.527, -154.373, 0.22 ) }
    dend_10 { pt3dadd( 143.714, 227.243, -154.469, 0.22 ) }
    dend_10 { pt3dadd( 143.623, 228.206, -154.544, 0.81 ) }
    dend_10 { pt3dadd( 143.602, 228.604, -154.561, 1.03 ) }
    dend_10 { pt3dadd( 143.475, 229.846, -153.991, 0.22 ) }
    dend_10 { pt3dadd( 143.398, 230.331, -153.623, 0.22 ) }
    dend_10 { pt3dadd( 143.293, 231.126, -152.876, 1.11 ) }
    dend_10 { pt3dadd( 143.262, 231.448, -152.545, 1.25 ) }
    dend_10 { pt3dadd( 143.241, 231.776, -152.189, 1.25 ) }
    dend_10 { pt3dadd( 143.042, 236.42, -147.01, 0.66 ) }
    dend_10 { pt3dadd( 143.025, 237.06, -146.279, 0.88 ) }
    dend_10 { pt3dadd( 142.999, 238.08, -145.051, 0.29 ) }
    dend_10 { pt3dadd( 142.986, 238.632, -144.355, 0.22 ) }
    dend_10 { pt3dadd( 142.978, 239.036, -143.842, 0.44 ) }
    dend_10 { pt3dadd( 142.991, 239.402, -143.39, 0.22 ) }
    dend_10 { pt3dadd( 143.376, 240.069, -143.145, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -26.0231, 129.698, -64.5167, 1.77 ) }
    dend_8 { pt3dadd( -26.2044, 130.262, -67.2058, 1.77 ) }
    dend_8 { pt3dadd( -26.3668, 130.974, -69.7017, 1.47 ) }
    dend_8 { pt3dadd( -26.4738, 131.455, -71.0932, 1.18 ) }
    dend_8 { pt3dadd( -26.615, 132.017, -72.5423, 1.11 ) }
    dend_8 { pt3dadd( -26.7811, 132.609, -73.9581, 0.88 ) }
    dend_8 { pt3dadd( -26.8629, 132.855, -74.5225, 0.66 ) }
    dend_8 { pt3dadd( -27.068, 133.403, -75.5823, 0.96 ) }
    dend_8 { pt3dadd( -27.359, 134.082, -76.7169, 1.11 ) }
    dend_8 { pt3dadd( -27.6653, 134.659, -77.6985, 1.33 ) }
    dend_8 { pt3dadd( -27.8486, 134.944, -78.2303, 1.62 ) }
    dend_8 { pt3dadd( -28.3736, 135.627, -79.6065, 1.47 ) }
    dend_8 { pt3dadd( -29.4236, 136.818, -82.1737, 0.96 ) }
    dend_8 { pt3dadd( -29.9724, 137.386, -83.4166, 0.96 ) }
    dend_8 { pt3dadd( -30.7264, 138.145, -85.0379, 1.55 ) }
    dend_8 { pt3dadd( -31.4432, 138.867, -86.5763, 1.33 ) }
    dend_8 { pt3dadd( -32.0089, 139.452, -87.8151, 1.62 ) }
    dend_8 { pt3dadd( -32.7475, 140.232, -89.4326, 1.11 ) }
    dend_8 { pt3dadd( -33.001, 140.5, -89.9756, 0.59 ) }
    dend_8 { pt3dadd( -33.8362, 141.392, -91.761, 0.88 ) }
    dend_8 { pt3dadd( -34.4658, 142.094, -93.0925, 1.25 ) }
    dend_8 { pt3dadd( -35.0041, 142.714, -94.2124, 1.4 ) }
    dend_8 { pt3dadd( -35.6451, 143.47, -95.5409, 0.52 ) }
    dend_8 { pt3dadd( -36.248, 144.203, -96.7576, 0.59 ) }
    dend_8 { pt3dadd( -36.6075, 144.625, -97.4804, 0.37 ) }
    dend_8 { pt3dadd( -36.8122, 144.85, -97.8545, 0.59 ) }
    dend_8 { pt3dadd( -37.2383, 145.296, -98.581, 0.44 ) }
    dend_8 { pt3dadd( -37.8479, 145.927, -99.5846, 0.37 ) }
    dend_8 { pt3dadd( -38.5429, 146.67, -100.73, 1.47 ) }
    dend_8 { pt3dadd( -39.4657, 147.679, -102.232, 1.84 ) }
    dend_8 { pt3dadd( -40.4104, 148.72, -103.723, 0.52 ) }
    dend_8 { pt3dadd( -41.0211, 149.398, -104.633, 0.52 ) }
    dend_8 { pt3dadd( -41.3716, 149.782, -105.11, 1.18 ) }
    dend_8 { pt3dadd( -41.6996, 150.118, -105.491, 1.18 ) }
    dend_8 { pt3dadd( -42.8492, 151.23, -106.606, 0.22 ) }
    dend_8 { pt3dadd( -43.1119, 151.483, -106.811, 0.37 ) }
    dend_8 { pt3dadd( -43.5997, 151.935, -107.16, 0.96 ) }
    dend_8 { pt3dadd( -44.2289, 152.493, -107.598, 1.25 ) }
    dend_8 { pt3dadd( -45.5207, 153.58, -108.501, 0.22 ) }
    dend_8 { pt3dadd( -45.8291, 153.826, -108.741, 0.37 ) }
    dend_8 { pt3dadd( -46.1036, 154.043, -108.975, 0.37 ) }
    dend_8 { pt3dadd( -47.1012, 154.866, -109.974, 1.11 ) }
    dend_8 { pt3dadd( -47.3568, 155.085, -110.259, 1.55 ) }
    dend_8 { pt3dadd( -47.5648, 155.274, -110.505, 1.69 ) }
    dend_8 { pt3dadd( -49.0824, 156.712, -112.494, 0.29 ) }
    dend_8 { pt3dadd( -49.3966, 157.025, -112.974, 0.29 ) }
    dend_8 { pt3dadd( -50.0755, 157.783, -114.174, 1.03 ) }
    dend_8 { pt3dadd( -50.2983, 158.07, -114.643, 0.81 ) }
    dend_8 { pt3dadd( -50.5083, 158.408, -115.209, 1.11 ) }
    dend_8 { pt3dadd( -50.8583, 159.125, -116.408, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( -51.3708, 160.513, -118.738, 0.59 ) }
    dend_8 { pt3dadd( -51.54, 161.005, -119.574, 1.18 ) }
    dend_8 { pt3dadd( -51.7379, 161.611, -120.613, 1.33 ) }
    dend_8 { pt3dadd( -52.1223, 162.889, -122.786, 0.52 ) }
    dend_8 { pt3dadd( -52.2496, 163.375, -123.581, 0.81 ) }
    dend_8 { pt3dadd( -52.3945, 163.946, -124.473, 0.81 ) }
    dend_8 { pt3dadd( -52.6001, 164.784, -125.707, 0.37 ) }
    dend_8 { pt3dadd( -52.7194, 165.202, -126.333, 0.37 ) }
    dend_8 { pt3dadd( -52.8227, 165.539, -126.833, 0.22 ) }
    dend_8 { pt3dadd( -53.0486, 166.266, -127.899, 1.18 ) }
    dend_8 { pt3dadd( -53.4143, 167.52, -129.699, 1.33 ) }
    dend_8 { pt3dadd( -53.6155, 168.296, -130.787, 0.44 ) }
    dend_8 { pt3dadd( -53.8057, 169.267, -132.18, 0.74 ) }
    dend_8 { pt3dadd( -53.9544, 170.33, -133.724, 0.52 ) }
    dend_8 { pt3dadd( -53.996, 170.851, -134.522, 0.66 ) }
    dend_8 { pt3dadd( -53.9889, 171.214, -135.108, 1.47 ) }
    dend_8 { pt3dadd( -53.9139, 171.741, -135.976, 1.55 ) }
    dend_8 { pt3dadd( -53.6241, 173.03, -138.251, 0.96 ) }
    dend_8 { pt3dadd( -53.4248, 173.545, -139.176, 0.37 ) }
    dend_8 { pt3dadd( -53.0073, 174.442, -140.865, 0.29 ) }
    dend_8 { pt3dadd( -52.799, 174.908, -141.766, 0.81 ) }
    dend_8 { pt3dadd( -52.6864, 175.215, -142.358, 1.25 ) }
    dend_8 { pt3dadd( -52.5312, 175.813, -143.433, 1.25 ) }
    dend_8 { pt3dadd( -52.4623, 176.26, -144.299, 0.59 ) }
    dend_8 { pt3dadd( -52.3892, 176.926, -145.917, 0.44 ) }
    dend_8 { pt3dadd( -52.3389, 177.391, -147.411, 0.74 ) }
    dend_8 { pt3dadd( -52.2874, 177.787, -149.091, 1.03 ) }
    dend_8 { pt3dadd( -52.2291, 177.918, -150.027, 1.25 ) }
    dend_8 { pt3dadd( -51.9057, 178.06, -153.234, 0.74 ) }
    dend_8 { pt3dadd( -51.6385, 177.94, -155.187, 0.22 ) }
    dend_8 { pt3dadd( -51.3297, 177.668, -156.544, 0.96 ) }
    dend_8 { pt3dadd( -51.238, 177.57, -156.837, 0.96 ) }
    dend_8 { pt3dadd( -50.8049, 177.06, -157.931, 0.29 ) }
    dend_8 { pt3dadd( -50.5369, 176.748, -158.433, 0.52 ) }
    dend_8 { pt3dadd( -50.1455, 176.338, -158.93, 0.22 ) }
    dend_8 { pt3dadd( -49.6645, 175.902, -159.435, 0.22 ) }
    dend_8 { pt3dadd( -49.3355, 175.634, -159.729, 0.96 ) }
    dend_8 { pt3dadd( -49.0692, 175.433, -159.936, 0.96 ) }
    dend_8 { pt3dadd( -47.7495, 174.517, -160.772, 0.22 ) }
    dend_8 { pt3dadd( -47.2477, 174.196, -161.023, 0.44 ) }
    dend_8 { pt3dadd( -46.8291, 173.949, -161.175, 0.44 ) }
    dend_8 { pt3dadd( -45.8803, 173.406, -161.395, 0.15 ) }
    dend_8 { pt3dadd( -45.1118, 172.968, -161.568, 0.15 ) }
    dend_8 { pt3dadd( -44.5341, 172.643, -161.725, 0.22 ) }
    dend_8 { pt3dadd( -44.1098, 172.411, -161.878, 0.81 ) }
    dend_8 { pt3dadd( -43.3969, 172.011, -162.124, 1.11 ) }
    dend_8 { pt3dadd( -43.1036, 171.837, -162.253, 1.11 ) }
    dend_8 { pt3dadd( -41.8589, 171.035, -163.442, 0.15 ) }
    dend_8 { pt3dadd( -41.5081, 170.787, -164.163, 0.37 ) }
    dend_8 { pt3dadd( -41.3735, 170.681, -164.573, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -26.0231, 129.698, -64.5167, 0.29 ) }
    dend_5 { pt3dadd( -26.9532, 130.966, -63.9973, 0.29 ) }
    dend_5 { pt3dadd( -27.5842, 131.795, -63.688, 0.22 ) }
    dend_5 { pt3dadd( -27.8299, 132.108, -63.5821, 0.74 ) }
    dend_5 { pt3dadd( -28.0756, 132.416, -63.4984, 0.74 ) }
    dend_5 { pt3dadd( -28.533, 132.973, -63.3691, 0.22 ) }
    dend_5 { pt3dadd( -29.0216, 133.55, -63.259, 0.37 ) }
    dend_5 { pt3dadd( -29.4152, 133.987, -63.21, 0.22 ) }
    dend_5 { pt3dadd( -29.8671, 134.464, -63.1784, 0.52 ) }
    dend_5 { pt3dadd( -30.3056, 134.896, -63.1803, 0.52 ) }
    dend_5 { pt3dadd( -30.8596, 135.405, -63.2343, 0.22 ) }
    dend_5 { pt3dadd( -31.2148, 135.693, -63.3045, 0.22 ) }
    dend_5 { pt3dadd( -31.8168, 136.134, -63.4334, 1.47 ) }
    dend_5 { pt3dadd( -32.145, 136.363, -63.4934, 1.92 ) }
    dend_5 { pt3dadd( -32.6914, 136.732, -63.5784, 2.06 ) }
    dend_5 { pt3dadd( -33.2112, 137.08, -63.6395, 1.69 ) }
    dend_5 { pt3dadd( -34.3796, 137.88, -63.7623, 0.44 ) }
    dend_5 { pt3dadd( -35.1616, 138.429, -63.8139, 0.22 ) }
    dend_5 { pt3dadd( -35.7377, 138.848, -63.8455, 0.52 ) }
    dend_5 { pt3dadd( -36.0965, 139.115, -63.8625, 0.66 ) }
    dend_5 { pt3dadd( -36.9717, 139.802, -63.9707, 0.22 ) }
    dend_5 { pt3dadd( -37.3725, 140.138, -64.0414, 0.22 ) }
    dend_5 { pt3dadd( -37.9596, 140.677, -64.1757, 1.47 ) }
    dend_5 { pt3dadd( -38.3428, 141.049, -64.2976, 1.77 ) }
    dend_5 { pt3dadd( -38.8026, 141.522, -64.4683, 1.99 ) }
    dend_5 { pt3dadd( -40.4732, 143.327, -65.2163, 0.22 ) }
    dend_5 { pt3dadd( -41.1334, 144.084, -65.5555, 0.22 ) }
    dend_5 { pt3dadd( -41.5585, 144.585, -65.7917, 0.96 ) }
    dend_5 { pt3dadd( -42.0072, 145.131, -66.051, 1.03 ) }
    dend_5 { pt3dadd( -42.5397, 145.795, -66.3447, 0.22 ) }
    dend_5 { pt3dadd( -43.1033, 146.531, -66.6362, 0.22 ) }
    dend_5 { pt3dadd( -43.3923, 146.92, -66.7818, 0.81 ) }
    dend_5 { pt3dadd( -43.6845, 147.299, -66.9475, 0.96 ) }
    dend_5 { pt3dadd( -44.3263, 148.064, -67.3331, 0.22 ) }
    dend_5 { pt3dadd( -44.7135, 148.492, -67.5597, 0.22 ) }
    dend_5 { pt3dadd( -45.3348, 149.148, -67.9391, 1.11 ) }
    dend_5 { pt3dadd( -45.6212, 149.446, -68.1144, 1.4 ) }
    dend_5 { pt3dadd( -45.93, 149.754, -68.3093, 1.4 ) }
    dend_5 { pt3dadd( -46.9911, 150.773, -68.9806, 0.22 ) }
    dend_5 { pt3dadd( -47.4659, 151.206, -69.2641, 0.22 ) }
    dend_5 { pt3dadd( -48.1686, 151.808, -69.6516, 0.96 ) }
    dend_5 { pt3dadd( -48.5868, 152.144, -69.8787, 1.18 ) }
    dend_5 { pt3dadd( -49.545, 152.847, -70.3971, 0.22 ) }
    dend_5 { pt3dadd( -49.9513, 153.126, -70.6129, 0.22 ) }
    dend_5 { pt3dadd( -50.6637, 153.589, -70.9838, 1.55 ) }
    dend_5 { pt3dadd( -51.037, 153.829, -71.1755, 1.99 ) }
    dend_5 { pt3dadd( -51.796, 154.328, -71.5691, 1.99 ) }
    dend_5 { pt3dadd( -53.4346, 155.476, -72.4672, 0.22 ) }
    dend_5 { pt3dadd( -53.75, 155.717, -72.6582, 0.44 ) }
    dend_5 { pt3dadd( -53.9034, 155.856, -72.7607, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_5 { pt3dadd( -54.3796, 156.382, -73.1118, 0.22 ) }
    dend_5 { pt3dadd( -55.0537, 157.314, -73.604, 1.25 ) }
    dend_5 { pt3dadd( -55.3712, 157.862, -73.8244, 1.62 ) }
    dend_5 { pt3dadd( -55.552, 158.256, -73.9582, 1.62 ) }
    dend_5 { pt3dadd( -56.0457, 159.354, -74.3025, 0.22 ) }
    dend_5 { pt3dadd( -56.3026, 159.931, -74.479, 0.22 ) }
    dend_5 { pt3dadd( -56.5621, 160.543, -74.6608, 0.29 ) }
    dend_5 { pt3dadd( -56.8492, 161.226, -74.826, 0.66 ) }
    dend_5 { pt3dadd( -57.0261, 161.639, -74.915, 0.66 ) }
    dend_5 { pt3dadd( -57.3975, 162.445, -75.0788, 0.22 ) }
    dend_5 { pt3dadd( -57.9752, 163.55, -75.3132, 1.55 ) }
    dend_5 { pt3dadd( -58.285, 164.114, -75.4414, 1.77 ) }
    dend_5 { pt3dadd( -58.5586, 164.63, -75.5724, 1.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 13/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -58.5586, 164.63, -75.5724, 0.22 ) }
    dend_7 { pt3dadd( -59.3759, 166.952, -76.7699, 0.22 ) }
    dend_7 { pt3dadd( -59.5703, 167.439, -76.9633, 0.44 ) }
    dend_7 { pt3dadd( -59.6829, 167.689, -77.0487, 0.44 ) }
    dend_7 { pt3dadd( -60.0784, 168.493, -77.301, 0.22 ) }
    dend_7 { pt3dadd( -60.3828, 169.078, -77.4661, 0.59 ) }
    dend_7 { pt3dadd( -60.6728, 169.612, -77.6119, 0.59 ) }
    dend_7 { pt3dadd( -61.3512, 170.672, -77.8322, 0.22 ) }
    dend_7 { pt3dadd( -61.672, 171.131, -77.941, 0.22 ) }
    dend_7 { pt3dadd( -62.3321, 172.039, -78.1448, 1.11 ) }
    dend_7 { pt3dadd( -62.6045, 172.394, -78.2218, 1.33 ) }
    dend_7 { pt3dadd( -62.8699, 172.735, -78.3237, 1.33 ) }
    dend_7 { pt3dadd( -64.0651, 174.332, -78.883, 0.22 ) }
    dend_7 { pt3dadd( -64.646, 175.182, -79.227, 0.22 ) }
    dend_7 { pt3dadd( -65.2092, 176.076, -79.6444, 1.33 ) }
    dend_7 { pt3dadd( -65.5156, 176.575, -79.9546, 1.69 ) }
    dend_7 { pt3dadd( -66.5465, 178.228, -81.2955, 0.22 ) }
    dend_7 { pt3dadd( -66.9036, 178.807, -81.8374, 0.22 ) }
    dend_7 { pt3dadd( -67.3165, 179.479, -82.6083, 1.11 ) }
    dend_7 { pt3dadd( -67.663, 180.043, -83.4102, 1.4 ) }
    dend_7 { pt3dadd( -68.3624, 181.185, -85.3781, 1.11 ) }
    dend_7 { pt3dadd( -68.9178, 182.023, -87.0939, 1.03 ) }
    dend_7 { pt3dadd( -69.0841, 182.254, -87.6159, 1.55 ) }
    dend_7 { pt3dadd( -69.5513, 182.863, -89.0631, 1.69 ) }
    dend_7 { pt3dadd( -70.2231, 183.683, -91.0618, 0.74 ) }
    dend_7 { pt3dadd( -71.0198, 184.663, -93.3856, 1.4 ) }
    dend_7 { pt3dadd( -72.0501, 186.042, -96.3566, 1.18 ) }
    dend_7 { pt3dadd( -72.4797, 186.628, -97.5599, 1.55 ) }
    dend_7 { pt3dadd( -72.848, 187.131, -98.5205, 1.69 ) }
    dend_7 { pt3dadd( -73.808, 188.507, -100.8, 1.18 ) }
    dend_7 { pt3dadd( -74.2514, 189.164, -101.754, 0.59 ) }
    dend_7 { pt3dadd( -75.178, 190.701, -103.673, 1.33 ) }
    dend_7 { pt3dadd( -75.5632, 191.46, -104.501, 1.77 ) }
    dend_7 { pt3dadd( -76.062, 192.588, -105.661, 0.52 ) }
    dend_7 { pt3dadd( -76.3617, 193.368, -106.421, 1.25 ) }
    dend_7 { pt3dadd( -76.7403, 194.443, -107.392, 1.11 ) }
    dend_7 { pt3dadd( -77.2807, 195.934, -108.687, 0.22 ) }
    dend_7 { pt3dadd( -77.6911, 196.992, -109.606, 0.22 ) }
    dend_7 { pt3dadd( -78.1462, 198.101, -110.532, 1.55 ) }
    dend_7 { pt3dadd( -78.5203, 198.918, -111.188, 1.69 ) }
    dend_7 { pt3dadd( -79.4308, 200.68, -112.571, 0.15 ) }
    dend_7 { pt3dadd( -79.846, 201.403, -113.105, 0.81 ) }
    dend_7 { pt3dadd( -80.322, 202.136, -113.599, 1.03 ) }
    dend_7 { pt3dadd( -81.2085, 203.426, -114.357, 0.22 ) }
    dend_7 { pt3dadd( -81.7883, 204.241, -114.767, 1.03 ) }
    dend_7 { pt3dadd( -82.2651, 204.908, -115.006, 1.47 ) }
    dend_7 { pt3dadd( -82.8233, 205.691, -115.198, 1.47 ) }
    dend_7 { pt3dadd( -83.8682, 207.137, -115.479, 0.22 ) }
    dend_7 { pt3dadd( -84.3057, 207.735, -115.571, 0.74 ) }
    dend_7 { pt3dadd( -84.6178, 208.157, -115.629, 0.88 ) }
    dend_7 { pt3dadd( -85.9768, 210.016, -115.857, 0.22 ) }
    dend_7 { pt3dadd( -86.7104, 211.035, -115.965, 1.11 ) }
    dend_7 { pt3dadd( -87.113, 211.602, -116.027, 1.4 ) }
    dend_7 { pt3dadd( -88.004, 212.855, -116.219, 0.22 ) }
    dend_7 { pt3dadd( -88.2895, 213.282, -116.294, 0.52 ) }
    dend_7 { pt3dadd( -88.7419, 214.029, -116.452, 0.22 ) }
    dend_7 { pt3dadd( -89.0836, 214.694, -116.63, 0.52 ) }
    dend_7 { pt3dadd( -89.2091, 214.978, -116.702, 0.52 ) }
    dend_7 { pt3dadd( -89.5457, 215.831, -116.894, 0.22 ) }
    dend_7 { pt3dadd( -89.9158, 216.82, -117.122, 1.33 ) }
    dend_7 { pt3dadd( -90.1906, 217.516, -117.354, 1.55 ) }
    dend_7 { pt3dadd( -90.6941, 218.863, -117.873, 0.22 ) }
    dend_7 { pt3dadd( -91.098, 219.929, -118.341, 0.22 ) }
    dend_7 { pt3dadd( -91.5093, 220.948, -119.005, 1.47 ) }
    dend_7 { pt3dadd( -91.7496, 221.589, -119.477, 1.69 ) }
    dend_7 { pt3dadd( -92.4651, 223.76, -121.101, 0.22 ) }
    dend_7 { pt3dadd( -92.7969, 224.876, -121.965, 1.99 ) }
    dend_7 { pt3dadd( -93.0048, 225.606, -122.56, 2.36 ) }
    dend_7 { pt3dadd( -94.1002, 229.523, -125.878, 0.22 ) }
    dend_7 { pt3dadd( -94.5401, 231.094, -127.174, 0.44 ) }
    dend_7 { pt3dadd( -94.8997, 232.39, -128.169, 0.22 ) }
    dend_7 { pt3dadd( -95.5592, 234.704, -129.718, 1.84 ) }
    dend_7 { pt3dadd( -95.7526, 235.336, -130.09, 2.28 ) }
    dend_7 { pt3dadd( -95.9494, 235.967, -130.387, 2.28 ) }
    dend_7 { pt3dadd( -96.8235, 238.441, -131.288, 0.22 ) }
    dend_7 { pt3dadd( -97.1042, 239.123, -131.534, 0.74 ) }
    dend_7 { pt3dadd( -98.1054, 241.367, -132.316, 0.22 ) }
    dend_7 { pt3dadd( -98.5033, 242.326, -132.579, 0.74 ) }
    dend_7 { pt3dadd( -98.7121, 242.856, -132.718, 0.81 ) }
    dend_7 { pt3dadd( -99.7131, 245.481, -133.409, 0.15 ) }
    dend_7 { pt3dadd( -100.07, 246.399, -133.698, 1.11 ) }
    dend_7 { pt3dadd( -100.454, 247.357, -134.033, 1.11 ) }
    dend_7 { pt3dadd( -101.4, 249.63, -134.92, 0.22 ) }
    dend_7 { pt3dadd( -101.677, 250.282, -135.173, 0.66 ) }
    dend_7 { pt3dadd( -101.894, 250.786, -135.351, 0.81 ) }
    dend_7 { pt3dadd( -102.597, 252.326, -135.788, 0.22 ) }
    dend_7 { pt3dadd( -102.985, 253.003, -135.993, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_7 { pt3dadd( -103.318, 253.444, -136.141, 1.33 ) }
    dend_7 { pt3dadd( -104.196, 254.27, -136.501, 0.22 ) }
    dend_7 { pt3dadd( -104.625, 254.622, -136.669, 0.66 ) }
    dend_7 { pt3dadd( -105.008, 254.896, -136.808, 0.88 ) }
    dend_7 { pt3dadd( -106.687, 255.955, -137.349, 0.22 ) }
    dend_7 { pt3dadd( -107.779, 256.598, -137.721, 0.22 ) }
    dend_7 { pt3dadd( -108.318, 256.904, -137.901, 0.96 ) }
    dend_7 { pt3dadd( -109.019, 257.293, -138.137, 1.11 ) }
    dend_7 { pt3dadd( -109.915, 257.823, -138.425, 0.22 ) }
    dend_7 { pt3dadd( -110.486, 258.199, -138.572, 0.59 ) }
    dend_7 { pt3dadd( -110.677, 258.346, -138.593, 0.59 ) }
    dend_7 { pt3dadd( -111.147, 258.764, -138.594, 0.22 ) }
    dend_7 { pt3dadd( -111.62, 259.224, -138.589, 0.44 ) }
    dend_7 { pt3dadd( -111.85, 259.457, -138.586, 0.52 ) }
    dend_7 { pt3dadd( -112.805, 260.484, -138.606, 0.15 ) }
    dend_7 { pt3dadd( -113.114, 260.824, -138.619, 0.44 ) }
    dend_7 { pt3dadd( -114.096, 261.894, -138.7, 0.22 ) }
    dend_7 { pt3dadd( -114.639, 262.482, -138.78, 0.44 ) }
    dend_7 { pt3dadd( -114.902, 262.771, -138.826, 0.44 ) }
    dend_7 { pt3dadd( -115.33, 263.264, -138.904, 0.22 ) }
    dend_7 { pt3dadd( -115.737, 263.754, -138.976, 0.59 ) }
    dend_7 { pt3dadd( -116.269, 264.393, -139.064, 0.59 ) }
    dend_7 { pt3dadd( -116.963, 265.228, -139.176, 0.22 ) }
    dend_7 { pt3dadd( -117.579, 265.996, -139.307, 0.22 ) }
    dend_7 { pt3dadd( -118.255, 266.859, -139.484, 0.81 ) }
    dend_7 { pt3dadd( -118.429, 267.084, -139.541, 0.81 ) }
    dend_7 { pt3dadd( -118.839, 267.631, -139.715, 0.22 ) }
    dend_7 { pt3dadd( -119.27, 268.227, -139.915, 0.44 ) }
    dend_7 { pt3dadd( -120.299, 269.692, -140.443, 0.22 ) }
    dend_7 { pt3dadd( -120.562, 270.066, -140.589, 0.96 ) }
    dend_7 { pt3dadd( -121.073, 270.78, -140.88, 1.11 ) }
    dend_7 { pt3dadd( -122.532, 272.799, -141.683, 0.22 ) }
    dend_7 { pt3dadd( -123.186, 273.718, -142.032, 0.22 ) }
    dend_7 { pt3dadd( -123.418, 274.051, -142.151, 0.74 ) }
    dend_7 { pt3dadd( -123.716, 274.489, -142.294, 0.96 ) }
    dend_7 { pt3dadd( -124.054, 274.987, -142.452, 1.18 ) }
    dend_7 { pt3dadd( -124.296, 275.347, -142.577, 1.18 ) }
    dend_7 { pt3dadd( -125.149, 276.678, -143.063, 0.15 ) }
    dend_7 { pt3dadd( -125.525, 277.245, -143.3, 0.52 ) }
    dend_7 { pt3dadd( -125.669, 277.469, -143.399, 0.81 ) }
    dend_7 { pt3dadd( -125.856, 277.788, -143.537, 0.81 ) }
    dend_7 { pt3dadd( -126.637, 279.206, -144.15, 0.22 ) }
    dend_7 { pt3dadd( -127.053, 280.013, -144.486, 0.96 ) }
    dend_7 { pt3dadd( -127.322, 280.589, -144.705, 1.47 ) }
    dend_7 { pt3dadd( -127.998, 282.226, -145.286, 0.22 ) }
    dend_7 { pt3dadd( -128.381, 283.266, -145.644, 0.22 ) }
    dend_7 { pt3dadd( -128.756, 284.366, -146.025, 1.03 ) }
    dend_7 { pt3dadd( -128.892, 284.795, -146.172, 1.03 ) }
    dend_7 { pt3dadd( -129.144, 285.649, -146.498, 0.22 ) }
    dend_7 { pt3dadd( -129.321, 286.31, -146.78, 0.44 ) }
    dend_7 { pt3dadd( -129.491, 286.969, -147.09, 0.37 ) }
    dend_7 { pt3dadd( -129.737, 287.943, -147.582, 0.74 ) }
    dend_7 { pt3dadd( -129.827, 288.306, -147.772, 0.96 ) }
    dend_7 { pt3dadd( -130.457, 290.693, -149.083, 0.22 ) }
    dend_7 { pt3dadd( -130.8, 291.928, -149.796, 0.74 ) }
    dend_7 { pt3dadd( -130.893, 292.266, -149.989, 1.11 ) }
    dend_7 { pt3dadd( -130.983, 292.615, -150.184, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -58.5586, 164.63, -75.5724, 0.22 ) }
    dend_6 { pt3dadd( -59.1378, 165.531, -75.2202, 0.22 ) }
    dend_6 { pt3dadd( -59.2975, 165.79, -75.1212, 0.22 ) }
    dend_6 { pt3dadd( -59.3982, 165.989, -75.0535, 0.66 ) }
    dend_6 { pt3dadd( -59.4932, 166.206, -74.986, 0.88 ) }
    dend_6 { pt3dadd( -59.5604, 166.396, -74.9219, 0.88 ) }
    dend_6 { pt3dadd( -59.8377, 167.288, -74.6097, 0.15 ) }
    dend_6 { pt3dadd( -59.8637, 167.395, -74.5722, 0.29 ) }
    dend_6 { pt3dadd( -60.0911, 168.355, -74.1977, 0.22 ) }
    dend_6 { pt3dadd( -60.1631, 168.655, -74.0719, 0.37 ) }
    dend_6 { pt3dadd( -60.3455, 169.365, -73.7643, 0.22 ) }
    dend_6 { pt3dadd( -60.5015, 169.946, -73.4929, 1.33 ) }
    dend_6 { pt3dadd( -60.5335, 170.059, -73.4343, 1.62 ) }
    dend_6 { pt3dadd( -60.8089, 170.896, -72.9522, 0.22 ) }
    dend_6 { pt3dadd( -61.0208, 171.443, -72.5842, 0.22 ) }
    dend_6 { pt3dadd( -61.4158, 172.328, -71.9098, 0.22 ) }
    dend_6 { pt3dadd( -61.589, 172.677, -71.6162, 0.96 ) }
    dend_6 { pt3dadd( -61.7288, 172.943, -71.3629, 1.18 ) }
    dend_6 { pt3dadd( -62.0337, 173.479, -70.7572, 0.22 ) }
    dend_6 { pt3dadd( -62.2401, 173.793, -70.3171, 0.22 ) }
    dend_6 { pt3dadd( -62.4552, 174.089, -69.8347, 1.11 ) }
    dend_6 { pt3dadd( -62.5175, 174.168, -69.6906, 1.4 ) }
    dend_6 { pt3dadd( -62.6287, 174.323, -69.4419, 1.4 ) }
    dend_6 { pt3dadd( -62.9664, 174.879, -68.6984, 0.22 ) }
    dend_6 { pt3dadd( -63.1213, 175.208, -68.338, 0.22 ) }
    dend_6 { pt3dadd( -63.2539, 175.549, -68.0372, 0.44 ) }
    dend_6 { pt3dadd( -63.2988, 175.685, -67.936, 0.44 ) }
    dend_6 { pt3dadd( -63.4984, 176.355, -67.4982, 0.22 ) }
    dend_6 { pt3dadd( -63.6002, 176.752, -67.2729, 0.66 ) }
    dend_6 { pt3dadd( -63.6802, 177.119, -67.0946, 0.66 ) }
    dend_6 { pt3dadd( -63.7679, 177.603, -66.8589, 0.22 ) }
    dend_6 { pt3dadd( -63.8148, 177.867, -66.718, 0.44 ) }
    dend_6 { pt3dadd( -63.8577, 178.101, -66.5847, 0.44 ) }
    dend_6 { pt3dadd( -63.9374, 178.543, -66.3162, 0.22 ) }
    dend_6 { pt3dadd( -63.9669, 178.713, -66.2096, 0.37 ) }
    dend_6 { pt3dadd( -64.0731, 179.328, -65.8273, 0.22 ) }
    dend_6 { pt3dadd( -64.1118, 179.624, -65.6406, 0.52 ) }
    dend_6 { pt3dadd( -64.1265, 179.772, -65.5438, 0.74 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_33 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_14 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_3 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 3
    dend_32 nseg = 7
    dend_23 nseg = 3
    dend_21 nseg = 15
    dend_16 nseg = 7
    dend_28 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 9
    dend_15 nseg = 3
    dend_30 nseg = 5
    dend_29 nseg = 9
    dend_27 nseg = 5
    dend_26 nseg = 9
    dend_12 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 9
    dend_9 nseg = 7
    dend_4 nseg = 7
    dend_11 nseg = 9
    dend_10 nseg = 11
    dend_8 nseg = 7
    dend_5 nseg = 3
    dend_7 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_NBC_ce39e26284_0_0


